{
    "title": "Damn Dress: A Love Story Ch. 09",
    "pages": [
        "\"Sienna,\" Brandon whispered to her, as she felt the covers slide away from her body, causing her to feel an instant chill.\n\nHis voice startled her. What the hell was he doing in her room? She had to be dreaming.\n\n\"Brandon, what ar--\" she tried to ask, as her eyes adjusted to the dark and his figure hovering above her. But before she could finish her question, he placed his index finger to her lips, to quiet her.\n\n\"Sshh,\" he said softly, as he slowly ran his eyes up and down her almost naked, shivering body. Sienna immediately felt self-conscious. His eyes were devouring her and she was only wearing a torn, too small little league shirt and a pair of blue cotton panties. The shirt just barely covered the small swell of her stomach.\n\nShe bit her lip and watched as Brandon hooked his fingers into the straps of her panties and gradually slid them down and off her legs. \n\nSienna couldn't believe this was happening. It had been almost a month and a half since she had seen Brandon. Not since Michael's birthday party, and now here he was in her bedroom, about to make love to her, and damn if she could stop him. A part of her wanted this so bad. She knew her father was just right down the hall, but Brandon was giving her THAT look. Yes, she knew she wasn't going to stop him. She had so many questions running through her mind, but her brain was quickly turning into mush as his warm hands caressed her skin.\n\nHe reached up and removed her shirt. His hands instantly latched onto her breasts and began massaging them. Sienna closed her eyes and gritted her teeth against the moan in the back of her throat. Damn, she had missed this. \n\nFinally, he pulled off his shirt, pants and underwear...and Sienna couldn't help but marvel at that perfect, hard body as he climbed on top of her. He was beautiful. \n\n\"I love you,\" he said, as he fluidly pushed himself within her body. Sienna threw her head back against her pillow. God, she had missed this sooooo much. Her body only responded to him. Not like she had anything to really judge it by, but she couldn't imagine anyone else making her feel this way. Filling her up so completely, where she lost all her fucking senses. No! This wasn't supposed to be happening. They were no longer together and they still had so much baggage between them that hadn't been discussed. What the hell was she doing? \n\nShe tried several times to get him to stop...at least in her mind, anyway. Her body was pulling him in further and further, while her mouth was murmuring, \"I love you, I need you.\" She felt so lost and helpless. But this was the happiest she had been in months.\n\nAnd just like that, he was gone. Sienna let out a small scream and jumped from the bed. 'What the fuck?' she thought. Her panties were soaking wet and she was sweating. She looked around the room, and everything was in place. \n\nDamn him for always invading her fucking dreams!! She had to get up in less than an hour for school, and she felt like she had just run a marathon. \n\n\"Shit,\" she muttered, as she made her way to the bathroom to shower. The sun was already peeking through, so she thought she might as well get up and just be early for class.\n\n***********************\n\n\"What's up, bitch?\" Darren asked, as he made his way inside Brandon's house and gave him a 'my boy' handshake.\n\n\"I got your bitch for you,\" Brandon grinned, with his eyes barely open. What the fuck had Tasha done to Darren? Usually Darren slept as late as he did during the week, but now he was showing up at his house all early and in a cheerful mood. No, this was not his boy, Darren.\n\n\"You're up early. I guess domestication agrees with you,\" Brandon yawned.\n\n\"You should try it sometime,\" Darren replied.\n\n\"Yeah, I did. See how well that worked out,\" Brandon muttered, as he turned his back and made his way to the bathroom.\n\n\"Damn, BT, you look like you had a rough night,\" Darren yelled, observing Brandon's disheveled hair and puffy eyes.\n\n\"Well, I finished the baby's room. It only took me until 5:30 in the Goddamn morning, but it's done.\"\n\nDarren started making his way to the back room\u2014soon to be baby room. When he entered, he was completely blown away. The walls were a light, creamy yellow with pictures of Disney princesses scattered across them. There was a nice, sturdy crib, baby toys and a colorful book case with baby books. The changing table was carefully placed in the corner, and little girl trinkets were set up throughout the room. The rug on the floor was a giant butterfly, whose wings had flecks of yellow that matched the walls. The room really did look like it belonged in a catalogue for Ikea.\n\n\"You did all of this last night?\" Darren asked, truly impressed.\n\nBrandon leaned against the door frame, \"Yeah, what do you think? Does it look okay?\"\n\n\"Does it look okay? Man, this looks great. Seriously, Sienna will be happy when she sees this.\"\n\n\"I still don't know what all goes in a baby room, but I did some research about some things that they will need. And although the baby can't read, they said you're supposed to read to them and stuff, so that's why I added the book case,\" Brandon said nervously, wondering if he had gone overboard.\n\nDarren turned to him. \"So this one is the keeper, huh?\"\n\n\"Absolutely. My body can't take any more. I been through all kinds of shit with the SEALs, and I swear, this is one of the hardest fucking things I've done,\" Brandon admitted.\n\n\"Well, it's also probably emotional for you too, so that probably takes a lot out of you.\"\n\nBrandon thought about that for a moment. \"Yeah, you're probably right.\"\n\nThe two made their way back down to the front of the house. Darren started raiding the refrigerator, while Brandon plopped down on the couch and rested his hand over his eyes. He just wanted to go back to sleep.\n\n\"So,\" Darren started, while he crunched on some chips and dip left over from the food they bought last Sunday for the football games. \"When are you and Sienna going to have the 'talk'?\"\n\n\"Whenever she wants,\" Brandon answered, not bothering to remove his hand.\n\n\"So, you're not going to go over there, kick the door in, throw her over your shoulder and pull her back into your cave,\" Darren chuckled, while he stuffed another chip in his mouth.\n\n\"Trust me, I've been tempted.\"\n\nDarren laughed. \"Come on man, you're coming to Tasha's with me so you can get a decent meal. She's doing a brunch today and that girl can cook!\"\n\nBrandon wanted to decline the invitation, but he really was hungry and another breakfast or dinner from a cardboard box didn't sound too appetizing. Plus, it had been a while since he'd actually left his house.\n\n\"Alright,\" he answered. \"Gotta take a shower and change. Be done in 20 minutes.\"\n\n\"Cool. I'm hungry as hell,\" Darren said, as he sat down on the couch and stuffed another chip in his mouth.\n\n***************************\n\nWhen Darren and Brandon finally arrived at Tasha's place, they both noticed Sienna's car in the driveway. \"Fuck,\" Brandon muttered. He had wanted to see her so badly, but he didn't want to surprise her like this. The last time he had seen her, at Michael's party, he felt like he had upset her. He didn't want to do that again.\n\n\"You know what, just take me back. She made it clear she doesn't want to be around me, and I don't want to piss her off or stress her out,\" Brandon said, while his eyes searched around the premises for her.\n\n\"Fuck that, you don't have to go anywhere. You two need to work this out anyway,\" Darren argued, as he turned off the ignition and got out.\n\nBrandon sat there for a moment. 'Fuck,' was all he could think. Sienna had been giving him more frequent updates, but still, things weren't so good with them. She still barely had more than a few words to say to him. In the few bits and pieces that he received over the phone, he couldn't tell if she was sad or angry. But at least she was healthy, and so was his baby girl.\n\nAs soon as they walked inside, the aroma from the food hit them. Darren smiled and rubbed his hands together while Brandon took in his surroundings, again looking for Sienna. Tasha glanced up and smiled from the kitchen when she saw Darren, but it quickly faded when she noticed Brandon standing like a statue behind him. Brandon wasn't sure if she was annoyed or confused. Women confused the hell out of him.\n\nTasha quickly looked down the hallway and then back to Darren and Brandon. She threw her dishrag over her shoulder and walked over to them. \"Hey guys. Um, you know Sienna is here, right?\" she asked, questioning their sanity, while crossing her arms over her chest.\n\n\"See man, I told you this is a bad idea, I'll just go,\" Brandon said, making his way for the door.\n\n\"No, don't go. You are my friend and you have a right to be here,\" Darren stated. \"Tasha, you said any friend of mine is welcome in your house. I hope that includes my best one, you know?\"\n\nTasha stood glaring at Darren for a few seconds, then nodded and turned to walk back into the kitchen. Darren knew he was going to catch hell later. Tasha loved Brandon to death, but she was very overprotective of Sienna.\n\nA few seconds later, they all froze, as they heard Michael and Sienna laughing as they came down the hallway.\n\n\"Oh my God, Tasha, this boy beat me so bad in this game, that I\u2014,\" she started, but stopped when she noticed three sets of eyes on her. Her eyes immediately flew to Brandon's face, then to Tasha.\n\n\"Oh, I'm sorry. I didn't know you were having guests this morning. I'll, um, I have to take off anyway. My teacher gave us this--this crazy homework assignment earlier this morning, so I--I should, um, probably finish that up,\" she stuttered, while searching for her purse.\n\n\"Sienna, don't go! Please! Darren never lets me win the game, and you really suck. I want to play some more after breakfast. Please!\" Michael begged, while tugging on her arm.\n\nSienna knew she was stuck between a rock and a hard place. They were all standing there, wondering what she was going to do. Should she pull away from Michael and leave him crying in a tantrum on the floor or stay, and try like hell to not break down in front of them? \n\nSienna looked back down at Michael. He was just so adorable, she couldn't help herself. She sighed and turned to Tasha, \"Anything I can help you with?\" Michael clapped his hands together and hugged her.\n\nSienna and Tasha stayed in the kitchen cooking, while Darren, Brandon and Michael sat in the living room watching football highlights on ESPN. Brandon hadn't said a word since Sienna emerged from the back. Darren looked over at him and sighed. He had to get those two talking to each other before they left this house.\n\nSienna was trying her best to prolong the cooking of the food, because in Tasha's house everyone had to sit at the table and eat. No eating while watching TV, which is exactly what Sienna would have preferred.\n\n\"I'm sorry, I didn't know he was coming,\" Tasha whispered to Sienna.\n\nSienna shrugged. \"It's okay, it's fine.\" Even though inside she felt like she was dying. Normally, before the bottom dropped out, she would have crawled up on his lap, rested her head against his shoulder and watched ESPN with him, but now she could only glance up at the back of his head every now and then. \n\nOnce the cooking was finally done, Sienna set the table and Tasha called them to come and eat.\n\nThe table had 5 chairs surrounding it. Brandon was about to take the seat in between Michael and Darren, when Darren pulled Michael out of the way, and shoved Brandon to the next chair beside Sienna. Brandon gave him an evil look, but sat down anyway.\n\nThey all passed the food around and filled their plates in silence. Michael looked around at everyone, confused. Usually, when his mom's friends came over, everyone was loud and talking over each other. Now, no one was saying anything. He wondered if they were mad at him for hogging Sienna earlier. \n\n\"So, little man, did you enjoy having the day off from school?\" Darren asked, breaking the uncomfortable silence.\n\n\"Yeah,\" Michael answered.\n\n\"Tell Darren what happened yesterday in school,\" Tasha said, smiling.\n\n\"Um, this girl tried to hug me. It was gross. I pushed her away,\" Michael answered, while piling a huge forkful of eggs into his mouth.\n\nBrandon chuckled. That had caught him off guard. Kids were funny sometimes. Especially Michael.\n\nDarren laughed, \"Well, soon you'll be the one trying to get her. And then that's a world of problems.\"\n\n\"Don't start giving him any ideas. Jeez, he's only six, I'd like him to keep pushing girls away as long as he can,\" Tasha said.\n\nDarren ignored her. \"Are there any girls you think are pretty, like how your mom is pretty?\"\n\nMichael thought for a second, and then answered honestly like children do. \"Yep, I think Sienna is pretty, even if she's old.\"\n\nBrandon and Darren both laughed out loud again. Tasha just shook her head, while Sienna looked embarrassed that all of this attention was on her.\n\n\"Hmm, if you think eighteen is old, then you must think I'm ancient,\" Tasha said, staring at her son.\n\nMichael smiled back at her, \"Yes, you are pretty old, too. I mean, pretty and old,\" he corrected.\n\nDarren couldn't help himself, he was dying laughing. Brandon was trying to control his laughter, but he kept chuckling because Darren had his head thrown back, as his laughter filled the room.\n\n\"That's okay Darren, keep laughing. You'll get yours later tonight. Or not get it, more like it,\" Tasha warned.\n\nThat shut Darren up. \"Aw, baby, you know I don't think you're old. Plus, I like my women a little more mature. You're teaching this 28 year-old things I didn't know existed,\" he teased, while squeezing her thigh underneath the table.\n\nTasha squealed, and pushed his hand away.\n\nBrandon and Sienna both stared at them, enviously. How quickly had things changed.\n\nMichael stared at Sienna. \"My momma told me that you have a baby in your stomach. How'd that happen?\"\n\n\"Michael! Don't ask rude questions, and especially not at the dinner table,\" Tasha reprimanded.\n\n\"I'm not being rude. I just want to know how she did that, because I don't ever want a baby in my stomach. It's weird. Don't they just eat all of your food that you want to eat?\" he asked, making a face.\n\nSienna was frozen. She didn't know what the hell to say. \"Um, well, I--,\"\n\n\"Was it something you drank or ate? Because my teacher, Mrs. Fuller, started eating a lot, and then she got one in her stomach, too.\"\n\nDarren spoke up, \"Yep, and she ate all of BT's food.\" \n\nTasha swung at Darren, hitting him in the shoulder, while Brandon kicked his shin underneath the table.\n\n\"Ow, shit,\" Darren muttered. He was just making a joke to lighten the situation, he thought to himself.\n\n\"Michael, we'll talk about that later. It's not appropriate for the table, so don't say another word about it,\" Tasha warned.\n\nMichael stared at his mother, and then started eating his food. He didn't understand why 'old' people were so confusing.\n\nSienna remained quiet and picked over her food. She wanted to leave so badly. She could see Brandon looking at her out of the corner of her eye.\n\nDarren was sick of this shit. He knew they were both crazy about each other, and he wanted them to talk.\n\n\"So, Sienna, you should see what BT's done to the back room in his house,\" he said, stuffing his face.\n\nSienna looked up at him, then quickly glanced to Brandon, then back to \n\nDarren. \"Um, what has he done?\" she asked.\n\n\"Well, you should ask him,\" he said, while getting up to get something to drink.\n\nAt that moment, Sienna wanted to smack Darren. Hard. She wasn't ready to do this. She turned to Brandon. He was leaning back in his chair, staring at her.\n\n\"So, what did you do?\" she tried to ask in the friendliest way she could.\n\n\"I kinda made a nursery for the baby,\" Brandon said.\n\n\"Not just any nursery, this thing makes Ikea look ridiculous. I'm serious, it's really cool, you should go see it,\" Darren suggested.\n\n\"Um, sure, I'd like that,\" Sienna answered, while picking over her food again.\n\n\"Really?\" she heard Brandon ask. She looked up at him and he was staring at her again. Damn, those eyes of his. She felt lost in them.\n\n\"Yes, I'd like to see it,\" she replied.\n\n\"Good,\" Darren interrupted. \"Then we can kill two birds with one stone. I don't feel like dragging his as\u2014butt back over to his place, so why don't you take him back and then you can see the room for yourself?\"\n\nBrandon had to laugh on the inside. God bless his meddling friend. He was worse than an old woman sitting on her porch. \n\nSienna knew she was trapped. Fine, she thought. She would just have to be strong and get this over with.\n\nThe rest of the brunch had gone on without a hitch. Sienna and Michael left the table a little early, so that they could finish his Star Wars game.\n\nTasha leaned back in her chair and stared at Brandon and Darren. A small smile formed at the corner of her mouth.\n\n\"Hmm, did you guys plan that?\" she asked.\n\nBrandon shook his head. \"Nope, that was all your Dr. Phil over here.\"\n\n\"Well, I see an opportunity, I seize it,\" Darren admitted.\n\nSienna came from the back room and glanced around the table. \"Well, that was really good, Tasha. As always. Thank you for inviting me.\"\n\n\"No problem, girl. Glad you only had one class today,\" Tasha answered.\n\nSienna stood there for a moment, dreading what was to come next. She glanced over at Brandon, and, as always, he was staring at her. \n\n\"Um, so BT, if you're ready, I can take you home now,\" she said, as she searched around for her purse.\n\nBrandon got up from the table and stretched. \"Sure, I'm ready,\" he said, as he followed her out of the door.\n\nIn the car ride over, neither said anything. Brandon because he didn't want to upset her, and Sienna because she wasn't sure what to say.\n\nWhen they arrived at his place, she parked, and he unbuckled his seatbelt. He glanced over at her and she was gripping the steering wheel with the engine still running.\n\n\"Did you want to come in and see the room?\" Brandon asked.\n\nShe shook her head.\n\nBrandon sighed. Shit. He was going to have to upset her.\n\n\"Sienna, you said you wanted to see it, now is your chance. So will you please come in and look at it?\"\n\nSienna hadn't been inside his house in months. Not since the night she went to the hospital. She knew she had said she would, but she didn't think she could. Not now.\n\n\"I'll, um, I can see it another time. I really have to get this report done, so...\" was all she could think of to say, as she stared straight ahead.\n\nBrandon quickly got out and slammed the door. So much for easy-going-Brandon. He walked around to the driver's side of the car, opened the door, leaned in and unbuckled her seatbelt.\n\n\"Brandon, what the--,\" she said.\n\nHe pulled the keys out of the ignition, stuck them in his pocket and turned to walk into his house.\n\nSienna sat there in the car completely amazed. She would never have the balls to do that to someone, but that was Brandon. He did exactly what he felt, and that's what drove her crazy. In a good way.\n\n\"Damn it!\" she screamed, as she hopped out of the car and went inside.\n\n\"Brandon, I said I would check out the room, you didn't have to do that. I really have stuff I need to do,\" she said.\n\n\"I know, but sometimes you have a hard time being completely honest with me,\" he said, letting that sink in. She looked away from him.\n\n\"You said you would look at it when you got here, so keep your word, and come see it.\"\n\nShe stood in the middle of his living room, face burning. He had her with that comment. But she couldn't seem to get her feet to follow him to the back of the house. And again, she felt self-conscious. She was in a dress she felt fit way too snug across her mid-section, which was now sticking out a bit. \n\nShe watched as he walked over to her, grabbed her hand and led her toward the back. Right before they reached the room, Brandon got behind her and placed his hands over her eyes. \"Okay, no peeking,\" he whispered against her ear.",
        "When they entered the room, Brandon removed his hands from her eyes. He watched as she took in the sight of the room. She had placed her hand across her chest and her mouth dropped open. Okay, that hopefully is a good sign, Brandon thought. He really wanted her to like it.\n\n\"So, what do you think?\" he asked, nervously.\n\n\"Brandon, I--,\" she started. Sienna really was at a loss for words. The room was amazing. She couldn't believe this was the same junky room with old exercise equipment, video games, and just junk that she had seen a few months back. It was amazing. Even the colors he chose. This would have made Martha Stewart proud.\n\n\"This is really nice, Brandon. Wonderful, in fact. I can't believe you did this all by yourself,\" Sienna admitted, as she slowly walked around.\n\n\"Well, your dad and Darren helped out,\" he said.\n\nShe walked over to the dresser and ran her fingers over the little ballerina figurine. She also ran her fingers over the soft material lining the crib. Part of her was absolutely ecstatic, but the other part was more sad than she had been in a long time. This put her in the mood to want to have the baby right now! But it also made her realize that she hadn't planned on moving back in with Brandon. She wondered if he knew that. She hated to have to tell him that now.\n\n\"Sienna?\" she heard him say behind her, interrupting her sad thoughts.\n\n\"Yes?\" she answered, as she turned around to face him.\n\n\"Can I feel her?\" Brandon asked, staring into her eyes.\n\nSienna silently gulped and nodded. She knew she couldn't deny him that.\n\nBrandon walked closer to her, and to Sienna's surprise, he bent down and slowly stuck both of his hands underneath her dress and slid them up until he reached the small bulge that was now her stomach. She stood there with her belly and underwear exposed, but she was too hypnotized by his eyes to do anything about it. \n\nBrandon broke eye contact with her as he ran his hands over her tiny bump, staring at it in awe. Now, his daughter seemed more real to him than ever. He couldn't believe she was tucked safely in there. \n\nThe energy being passed between the two was electric. Sienna knew she needed to leave before something happened. But, too late. Before she could utter another word, Brandon leaned in and kissed her. Soft at first, but then those kisses turned needy. He started to gently push her back against the wall. \n\nSienna couldn't think straight. The room was spinning. She could only feel how wonderful his thick hardness felt rubbing against her flimsy panties, which were quickly becoming wet. And the feel of his sweet lips against hers. She had to get ahold of herself.\n\nShe broke free from his kiss and turned her head to the side, breathing heavily, \"Brandon, we can't--,\" was all she could say.\n\n\"God, I want you so bad, Sienna,\" Brandon whispered, as he started licking and gently nibbling her neck. His hands, which had been plastered on her rear-end, moved further down and grabbed the hem on her dress. He began sliding it up again, while rubbing his fingers along the side of her legs. Her skin always felt so soft and warm to him. His dick was rock hard. Something strangely lustful and possessive took him over when he touched her body and felt his child. As if they both really did belong to him. And he belonged to them. A family.\n\nIt took every ounce of will power she had left to gently push him away from her. He stared down at her, breathing hard and running his eyes up and down her body. Sienna quickly exited the baby room and made her way down the hall. She had to leave there as soon as possible before she found herself right back here in the middle of their crazy love affair. She had almost made it to the door when Brandon gently wrapped his arms around her now slightly fuller waist.\n\n\"Sienna, wait, wait, okay? I really need to talk to you,\" she heard him say, over her head.\n\n\"Brandon, we won't just talk, you know that,\" she whispered.\n\n\"No, seriously, I'm sorry about that back there. I mean it, I won't do it again.\"\n\nSienna turned around and looked up at him. \"Just talk, I swear,\" he assured her again, seeing her hesitate. Sienna nodded.\n\nBrandon released her and walked over to his couch and sat down. He patted the seat beside him when he noticed her not budging from the spot by the door. She slowly walked over to the couch and sat down beside him, but her entire body was leaning in the opposite direction, away from him.\n\nBrandon leaned back against the couch and exhaled. Then he raised back up and turned to look at her. \"I, uh, I just really want to apologize for everything that happened. I'm sorry that my behavior caused you to get sick. I'm so sorry, Sienna. I swear, if I would have known you needed me, I would have\u2014fuck, I'm so sorry,\" he said, shaking his head.\n\nSienna glanced at him and then down at the floor. She didn't know how she felt or what to say. \n\n\"And, I'm so sorry about what I said at the bar, too. That was completely uncalled for and you know, I mean, you know I don't think you're a whore or bitch, or anything like that, right? Not that this is an excuse, but I was fucking faded, and you should have punched me in the face. I'm serious, that would have sobered my ass up fast.\"\n\nSienna giggled, despite her best effort not to. She could just imagine the look on his face had she punched him. It would have been much like that night in the movie theater restroom when she slapped him. His expression was shocked, then angry, but there wasn't a damn thing he could do about it. Now, she wished she had taken that route. \n\n\"I know I still have a lot to make up to you, but I'm going to. Because I love you so much, you have no idea. I mean, I've been absolutely miserable without you,\" he added.\n\nSienna knew that it was her turn. He wasn't the only one who had said, or not said, things that caused their break-up. She looked up at him.\n\n\"Well, I should apologize to you, too. I\u2014I, should have told you the moment you got back from your mission about the baby. I don't know why I was being so stupid. I guess, well, I guess I didn't tell you because I figured you would make me keep the baby, and, I, uh, I was embarrassed at first. I could just imagine the jokes or gossip that would go around town about me. I was too busy thinking about what everyone else would think, instead of what you would think. And you should have been the most important part of this. Not people who aren't even my friends. So for that, I am truly sorry, Brandon. I never meant to hurt you the way I did,\" Sienna said, tearing up.\n\nBrandon smiled and reached over to hug her. \"Apology accepted, baby.\"\n\nSienna wiped at her tears, and moved out of his grasp. But now for the hard part. She wasn't ready to go back. She wasn't even sure if she would EVER go back. Brandon made her crazy.\n\n\"What?\" Brandon asked, scanning over her saddened expression.\n\nSienna exhaled. \"Brandon, I really appreciate what you did with the back room. It's beautiful. But...I'm not ready to make this relationship happen again. I just feel\u2014,\" she started, but noticed him stiffen beside her. His eyes went cold again.\n\n\"I just feel that so much has happened, and perhaps you and I are better off being friends. I, of course, want you involved in the baby's life, but I just don't think we should be together, you know?\"\n\nBrandon felt his heart breaking all over again. He had thought that their argument was what caused the break-up, but now, it must be something more for her to still not want him. He really didn't know what to say. He wasn't sure there was anything else left TO say. Instead he turned from her and stared at the TV, which was still off. For a brief moment, he seriously thought that it was better to be like he was before, don't get attached to anyone so you don't have to feel this shitty.\n\nSienna knew it was probably time for her to go. Brandon looked like he was done talking. She quickly got up from the couch and walked to the door. Then she remembered he had her keys still.\n\n\"Um, Brandon, can I have my keys?\" she asked.\n\nAt first, she didn't think he had heard her, because he hadn't moved. But then he got up from the couch, pulled her keys out of his pocket and walked over to her. He placed them in her hand, but held onto her. \"Can I take you to a check-up?\" he asked, staring deeply into her eyes.\n\nSienna didn't stand a chance. \"Yes,\" she answered. He then let her hand go, and turned to walk toward the back of the house. She quickly opened the door and walked down to her car. She would have to remember to punch Darren in HIS face, and see what kind of expression he would have.\n\n************************\n\nThanksgiving was fast approaching and school had seemed like a whirlwind to Sienna. Her work load was growing heavier as she was growing heavier. Her creative writing professor had gone insane. She had started giving them an assignment a week, along with group projects.\n\nBut the time did pass by less painfully now that her new group partner was Ian LeBeque. Sienna and Ian had actually gone to high school together, but she barely remembered him. He had been an art student who was also a part of the drama club. First day of Creative Writing, Sienna had glanced at him and thought he looked familiar, but she couldn't place him. Then one day they were assigned together to work on a project with two other classmates, who had no sense of humor, so she and Ian became close. Funny, the women in her classes either ignored her, or wanted to touch her stomach and ask her questions about the baby. The guys for the most part stayed away from her, as if she were contagious and her being pregnant would rub off on them, and then they would get their girlfriends pregnant. But Ian was different. When she had started to show, he just said, \"Whoa, slow down on the Ho Ho's,\" and winked at her. He never once seemed to judge her.\n\nIan was about her height, skinny with jet black hair that he had dyed. He had a very punk rock thing about him, and kept her cracking up with his jokes. He was an amazing artist, and when their teacher wasn't looking, he'd pass Sienna small slips of paper containing caricatures of the teacher with funny little captions for each one. She had burst out laughing several times, which was now why she was no longer a favorite of her teacher. Whenever she was having a bad day, Ian seemed to make her laugh, and she'd forget about her problems, at least for the hour and a half that she was in creative writing. \n\nThen, after class, he would walk her to her car, and usually talk about some music group that she had never heard of. Ian never seemed to bring any books to class, yet he had an A average so far. He seemed like such a care-free spirit. Sienna had wished she could be that way at times. She laughed when she thought about the difference between Brandon and Ian. Brandon was very much the 'I don't give a fuck', while Ian was 'Peace and love people, peace and love'.\n\nBut now they were sitting in class on a random Thursday afternoon. Their teacher had not shown up just yet. Prof had 5 more minutes, and then they could leave without getting into trouble.\n\n\"So, what are you doing this weekend?\" Ian asked, while drawing with a sharpie on some paper.\n\n\"Oh, I don't know. Probably nothing. How about you?\" Sienna asked.\n\n\"Some friends and I are going to the Orange County Fair. Have you ever been?\" Ian asked, still staring down at his handiwork.\n\n\"No, I've heard about it though.\"\n\nIan looked up. \"What? You have to go. You should come with us.\"\n\n\"Oh, no, you don't want some pregnant girl tagging along. Besides, I don't think I could ride anything in my condition.\"\n\n\"Oh, come on. Hey, if you don't ride, I won't ride. Plus, it's not the most sanitary thing when you think of it. All those asses sitting in the same few seats every 3 minutes. Kinda gross.\"\n\nSienna laughed. She really would like to get out of the house. Her father would ask her if she was okay every hour, on the hour. She wondered if he could keep that up until she delivered. She still talked to Brandon, but now that increased to every other day. And not just about the baby, but they had started to talk about other things. Everyday things. Brandon would still try to persuade her every now and then to take him back. She was SOOO tempted, but also scared. Plus, she still owed him a doctor's appointment. She hadn't been back to Dr. Carlson since she found out she was having a girl. But her new appointment was coming up, and she was a little nervous about going with Brandon. She really needed to take her mind off of all of this.\n\n\"Alright, I think I might enjoy it,\" she said, without much further thought.\n\n\"Great, I can pick you up at five o'clock tomorrow?\" Ian said, smiling brightly.\n\nSienna nodded, but thought she should let him know what she honestly felt. She realized, in her life, not saying things up front could only lead to problems further down the road.\n\n\"Um, Ian, I just want to make sure that you understand that I'm going as your friend. Nothing more, you know. I just want to make sure that's clear now. Not that you would have even imagined me as anything more, but I just, well, wanted you to know that,\" she said, while pretending to write something down.\n\nIan shook his head, \"Damn, I was hoping to take advantage of you and knock you up...oops, never mind, someone beat me to the punch.\"\n\nThat comment caught Sienna off guard, and she burst into a fit of giggles. Half of the class turned to look at her. She covered her mouth and placed her head on the table.\n\nIan slid closer to her, \"I know, Sienna. Just friends. Nothing wrong with that. I'll pick you up. Five, tomorrow. Oh, and looks like we are free...we just hit the fifteen minute mark,\" he said, pointing up to the clock. He hopped up from his chair, handed her his drawing and exited the room.\n\nSienna looked down at the black ink splattered across the paper. She smiled when she realized it was actually a picture of her. Yes, she would have to remind him again, JUST friends.\n\n***********************\n\nJackson had been enjoying his time with Brandon. It was just like old times, before everything had gotten so complicated. He still wasn't sure where Sienna and Brandon's relationship stood, but Jackson was glad she was actually talking to Brandon. The more time Jackson spent getting inside Brandon's head, the more he understood what caused Brandon to become angry or sad. And once Brandon reached a certain level, he wouldn't let you in again. You're out and you no longer mean anything to him. Jackson realized how close he had come to reaching that level in Brandon's head.\n\nBut it was Friday, and instead of meeting at Brandon's house, they decided to have their chat at the driving range of a local golf course.\n\n\"Oh, nice shot, Commander,\" Brandon said, as the golf ball soared through the air, right at the 200 yard marker.\n\n\"Yes it was, if I do say so myself,\" Jackson replied, turning to smile at Brandon.\n\nAfter a few more hits, the two decided to sit and down a beer. Even though there was a slight chill in the air, it was a beautiful afternoon. Perfect for November weather in California.\n\n\"So, Brandon, tough question approaching,\" Jackson warned.\n\n\"Oh, shit. What, sir?\" Brandon asked, cringing. Overall he had enjoyed his little sessions with the Commander, but sometimes they got on some touchy subjects that Brandon didn't feel like bringing to the forefront. He had some things locked tightly away, and that's where they would remain.\n\n\"You know how some things can only be solved when you deal with the root of the problem...well, have you ever thought about going back to Boston and confronting your aunt and uncle about all that they put you through?\"\n\n\"Fuck no! Absolutely not. I have nothing to say to either of them, and if I saw my uncle again, I'd probably try to kill that bastard,\" Brandon answered, feeling his scalp go hot. This was the last thing he wanted to talk about. He hated them, and every day that he could avoid thinking of his 'family' was a good day.\n\nBrandon looked dead serious, so Jackson let it go, even though he thought discussing the subject could actually help Brandon in the long run. Nevertheless, he was sure Brandon wasn't ready for that now.\n\nJackson took another sip and looked back down the fairway. He was about to get up and hit another ball when he heard Brandon clear his throat.\n\n\"You know, it's just that, I just don't understand why someone would want to be cruel to a child, you know? I mean, what benefit do you get in intimidating someone tiny and helpless? And don't get me wrong, I intimidate people all the time, but never someone that's a small child,\" Brandon finished with disgust.\n\nBrandon placed his beer down and got up to take another swing. While he was leveling his club, he continued. \"It just bothers me that they could have been like that. I mean, some of the shit they pulled, I still just don't get it.\"\n\n\"Like what?\" Jackson asked carefully.\n\nBrandon raised the golf club and placed it horizontally behind his neck and across his shoulders, resting his arms on the parts of the shaft that extended to both sides. This was that territory that Brandon hated. He didn't want to go through all of it, but maybe just saying a few things would release some of his tension at the moment.\n\nBrandon exhaled, \"Well, there were times when they would have me stand over in the kitchen and watch them eat, but I couldn't because I was being punished for whatever reason they made up that day. And they would remove my bed from my room sometimes and want me to sleep on the floor. Like a fucking dog. I just didn't understand it, and I still don't.\"\n\nBoth Jackson and Brandon were quiet. Neither said anything for a while, until Brandon broke the silence.\n\n\"I don't really want to talk about that anymore,\" he admitted, lowering his club and taking a shot.\n\nJackson nodded his head. He also would rather not hear any more, because it was pissing him off. Brandon was like his son, and to know that someone would be so evil to him caused his own anger to course through his system. How the hell was he going to help Brandon, when the more that was revealed to him, only angered him and made him want to harm the uncle and aunt, too? Jackson sat there thinking about how he was going to resolve this issue. He knew of one way, but he was pretty sure Brandon would never allow it, so he would have to do it in secret if he wanted to help his 'son'.\n\n\"Alright old man, get up and see if you can beat that,\" Brandon teased, while setting up a tee for the Commander.\n\nJackson laughed, and took another sip of his beer. \"Bring it.\"\n\n***********************\n\nIan and his friends had picked Sienna up right at five, and she was glad her father was still gone with Brandon so she didn't have to explain anything to him. She had yet to tell him anything about Ian, but somehow she thought her father wouldn't be too thrilled about it. \n\nIan's friends were very much like him. Most of them were pale, with jet black hair, some with blond streaks, and some had piercings. Sienna felt like a snob, thinking back on high school. All of them had gone to school with her, but she didn't really mingle in the same circles as them. Pity she missed out on all kinds of cool people because of this popular bubble she was placed in. Or that she placed herself in. Of course, she wasn't complaining then, but now, she felt bad she didn't know them. But they had all known who she was. The girl with the black hair and blond streaks had immediately looked at Sienna's stomach. Sienna figured they were all thinking the same thing. The Homecoming queen is pregnant? Some probably thought it was funny. But, Sienna ignored the uncomfortable glare, and greeted them all anyway.\n\nWhen they entered the fair grounds, the smell of fair food and bright lights hit Sienna at once. She was so amazed. She hadn't realized it was this big. Ian's friends immediately took off for the rides. Ian stayed behind with her. She felt a little awkward. In her mind, she had imagined they would all stay in a big group, but here she was, with just Ian, as they slowly strolled through the games.",
        "\"Wanna play one?\" Ian asked.\n\n\"Oh, no, I'm horrible at that kind of stuff,\" Sienna answered truthfully.\n\n\"Come on, who doesn't want to pay a man with a strange beard twenty bucks to play a game that's rigged, so you can win a two dollar prize?\"\n\nSienna laughed, \"Okay, since you put it that way, you've convinced me.\"\n\n\"That's my girl,\" Ian said, as he slapped down ten bucks at a game where you throw a baseball and try to knock down the top jar, stacked on top of other jars. Seems simple enough, Sienna thought.\n\nShe launched the first ball and completely missed the entire group of jars. She heard Ian laugh behind her. She planted her feet, and then launched the ball again, as it crashed into all of the jars.\n\n\"Shit,\" she muttered.\n\n\"Well, hey, you have one more chance. Make San Diego State proud,\" Ian said.\n\nSienna concentrated, and then threw the ball again, this time tipping off the top jar.\n\n\"Holy shit! She won?!\" Ian hollered.\n\nSienna screamed and was about to jump up and down, until she realized that probably wasn't the best thing in her condition. Instead, she put her hand on her belly and did a little dance.\n\nThe strange bearded guy handed Sienna a small elephant. For some reason, this prize seemed worth the ten dollars. It was really ugly, and smelled horrible, like it had been in the bottom of a bag sitting out in the sun for months. But regardless, she won it, and was proud.\n\nThey walked further along, until they came to the Ferris wheel. \"Wanna try this? Seems slow moving,\" Ian suggested.\n\nSienna looked all the way up at the top. \"Hmm, I guess it's okay.\" \n\nOnce they were locked into their seats, Ian began talking. \"So, Sienna, I hope you don't take this the wrong way, but I was wondering...um, well, I've known girls like you that went to our school. Pretty, cheerleading types. And well, I guess what I'm wondering, is how did you end up, you know, in this condition? Please tell me to mind my own business if I am being too nosey,\" Ian asked, pointing at her stomach.\n\n\"Well, I'm a volleyball type, not cheerleader,\" Sienna corrected, grinning at him.\n\nIan smiled, \"That's right, I remember. You have a brain.\"\n\nSienna exhaled, \"It's kind of a long story.\"\n\n\"That's okay, this old Ferris wheel averages about 5 minutes per turn, so I think we'll be up here a while.\"\n\nSienna began to explain her life to Ian, as he nodded every now and then. She explained about her mom and dad, Lori, Darren, Tasha and Chris. And of course, Brandon and their break-up. When she was done, she just knew that Ian would think her whole situation was crazy. Hell, she thought it was crazy at times. But Ian didn't seem shocked by anything she had divulged.\n\n\"So, he's a Navy SEAL, huh? What do they do?\" Ian asked.\n\n\"Hmm, have you ever seen GI Jane?\"\n\n\"No.\"\n\n\"What about Tears of the Sun? The Bruce Willis movie. It was directed by that guy who did Training Day,\" she asked.\n\n\"Oh, yeah, I saw that.\"\n\n\"Well, that's what my boyfriend, um, ex-boyfriend does,\" Sienna said.\n\n\"Whoa, that's pretty hard core.\"\n\n\"Yeah,\" Sienna said, feeling glum again just thinking about Brandon. She would have loved to have gone with him to the fair. She really needed to figure her life out. She wanted him, yet she pushed him away. What the hell is that?\n\nIan could tell she didn't feel like talking about it anymore, so he tried to change the subject.\n\n\"So, when do you get to see your friends again?\"\n\n\"Thanksgiving. I'm so excited. I haven't been away from Lori this long EVER. I really miss her,\" Sienna said.\n\n\"That's cool. So you have the whole Thanksgiving Day thing with your family?\" Ian asked.\n\n\"Yep, what about you, what are your plans?\"\n\n\"Oh, my mom and dad don't believe in Thanksgiving...you know, the whole 'destroying the Native Americans' and stuff.\"\n\n\"Oh. So you don't celebrate it at all?\"\n\n\"Nope. I'll be Big Mac'ing it that day.\"\n\nSienna knew she shouldn't have, but she couldn't stand the thought of someone spending that holiday alone. So even though she couldn't believe she heard herself saying it, she couldn't stop the words tumbling out of her mouth..\n\n\"You should come to our house on Thanksgiving, then. At least to just have a good meal,\" she offered.\n\nIan sat up straight. \"Really? I mean, I'd hate to impose.\"\n\n\"Of course, and it's not imposing if I invited you.\"\n\n\"Perfect, then I'll be there.\"\n\nSomething told Sienna this wasn't the best idea in the world, but fuck it, everyone would just have to be okay with it.\n\nWhen Ian dropped Sienna back off, she quietly tip-toed inside. She was dead beat and so glad that tomorrow was just Saturday.\n\nShe tried to quickly walk past her dad's study, but she heard him call her name. Shit.\n\n\"Hey, Sienna, where did you go?\" he asked, as she peeked her head inside his study. He knew she was an adult now, and technically didn't have to answer him, but he would try anyway.\n\n\"Oh, I went with some friends to the Orange County fair. It was so much fun,\" she said, beaming from ear to ear.\n\n\"Sounds nice. Was it Tasha?\"\n\nSienna knew where this was going. Her father wanted to know who it was, without directly asking her. She didn't feel like playing games tonight.\n\n\"No, daddy. It was a friend from school, Ian. And I also invited him for Thanksgiving, if that's alright?\" she asked.\n\nJackson rested his elbows on his desk. Ian. This was taking a different turn.\n\n\"Ian, huh? So, he's just a friend, right?\" Jackson asked casually.\n\n\"Yes.\"\n\nJackson stared at his daughter for a few moments. He felt that this new guy, 'friend' or not, would only cause problems. Why couldn't he run his daughter's life? \"You know, I've invited Brandon to Thanksgiving dinner, of course. Might be wise to give him a little heads up about your friend coming,\" Jackson stated, and then returned to his reading.\n\nSienna cringed inside. That wouldn't be the best combination. PLUS, Chris and his family were joining them. Shit! But she couldn't un-invite Ian now. He looked truly happy that she had included him to begin with. And she knew what her father was getting at, but she WAS just friends with Ian. She wasn't romantically attracted to him. He was a really nice guy, who made her laugh, and time fly in creative writing class, but outside of that, her brain didn't dissolve when he looked at her, like it did with Brandon. Her skin didn't tingle and burn when he touched her, like it did with Brandon. She liked him as a friend, but she wasn't in love with him, like she was with Brandon. No comparison.\n\nShe groaned and made her way upstairs to go to bed. She would try to tell Brandon soon. But she didn't have the energy to do it now.\n\n*******************\n\nThe next week, Brandon came to pick Sienna up for her doctor's appointment. He hopped out of his Jeep and opened the door for her. She slid into the seat and buckled up. She had forgotten how much she enjoyed riding in his Jeep. Especially in the summer, when he removed the top. They would speed down side streets on a sunny day, laughing and playing his music loudly, while her hair whipped around her face. She really did miss that. \n\nWhen they reached the facility, Brandon looked around the waiting room. There were a lot of pictures of smiling babies, mothers and fathers. And there were three other women in the room as well, and all of them looked like they were about to pop. He glanced over at Sienna. She was reading a baby magazine. Brandon was actually kind of nervous. He had never done something like this and he wasn't sure what to expect. He looked over Sienna's shoulder at the article she was reading. It was about Yoga vs. Pilates during your pregnancy. Whatever, they both looked ridiculous to him. \n\nSienna whimpered for a moment and grabbed her stomach. Without thinking, Brandon placed his hand on her stomach as well.\n\n\"You okay?\" he asked.\n\n\"Yeah, she just kicked me,\" she said, as she looked up at him, smiling.\n\n\"Want me to hit her back?\" Brandon joked. Sienna laughed, and turned back to her magazine. Brandon stared at Sienna's profile. She really was amazingly beautiful to him. He still didn't know why a young woman like her would be remotely attracted to him. He felt he had nothing to bring to their relationship. He had always been pretty good at math, but he wasn't a brainiac like Sienna, who always wanted to be top of her class. He wasn't open and friendly with everyone. Or understanding. As a matter of fact, in his eyes they were complete opposites. But perhaps, maybe that's how it works.\n\n\"Sienna Branson?\" the nurse said, scanning the room.\n\nBrandon and Sienna both looked up. He grabbed her hand and followed behind the nurse. When they reached the examining room, Sienna sat up on the bed, while Brandon searched around the room and stared at the equipment. \n\n\"What the fuck?\" he muttered, while staring at the stirrups. \"What does this do?\"\n\nSienna laughed. \"You lay back and put your legs on those.\"\n\nBrandon shook his head. \"Looks like you're about to jet to the moon in that thing.\"\n\nAs they were sitting there in silence, Brandon looked over at her. She had her hand resting lightly on her stomach, with her eyes closed. She wiggled around on the table for a second, and then looked over toward him.\n\n\"Is it uncomfortable? Being pregnant, I mean,\" Brandon asked.\n\n\"Um, sometimes. But most of the time I'm fine.\"\n\n\"Are you scared? Like when it comes to the delivery part.\"\n\nSienna thought about it, \"Yes. It makes me nervous. I just don't want it to be too painful.\"\n\n\"Sienna, can I admit something to you?\" Brandon asked.\n\n\"Sure.\"\n\n\"I, um, I think part of the reason I never wore a condom, was because, well, I think I kinda wanted this. I know that's horrible and very selfish on my part, since you are so young, and were headed off to school, but I just felt I should be totally honest with you about that. And I'm sorry.\"\n\nSienna laid there for a minute before she responded. \"Well, I am just as much responsible for what happened as you are. I mean, I never really objected, so maybe I kinda wanted this to happen, too.\"\n\nBrandon laughed.\n\n\"What?\"\n\n\"I always knew I'd knock up the homecoming queen,\" he said, smiling.\n\nSienna laughed out loud too. She was glad he was here with her. She had been anxious before he showed up at her house, but now, she was more relaxed than she had been in a long time. The two of them were still laughing when Dr. Carlson entered.\n\n\"Hey Sienna, we\u2014, oh, hi, I don't believe we've met,\" Dr. Carlson said, turning to Brandon.\n\n\"Oh, hey, Dr. Carlson, this is my, um, the, um, he's the--the father. Brandon,\" Sienna finally stuttered out, while both men stared at her waiting for her to finish the introduction.\n\nDr. Carlson smiled at him. \"Well, I would shake your hand, but I'm about to examine her. But nice to meet you.\"\n\n\"Likewise,\" Brandon said. He hadn't expected her doctor to be a male. Plus, that salt and pepper colored hair wasn't fooling anyone, her doctor was much younger than he tried to appear.\n\nAfter Dr. Carlson examined her, they began talking about her health and things she needed to do, or stop doing. Brandon sat back, watched and listened. He wanted to smile. He was so happy to be a part of all of this. He asked questions every now and then, and rubbed Sienna's hand.\n\nAfter the appointment, Brandon and Sienna grabbed a bite to eat before the trip home. As they sat eating their food, Sienna knew she needed to tell Brandon about the 'extra' guest for Thanksgiving dinner. She hated to bring it up now, but Thanksgiving was a few days away, and she had to get it off her chest.\n\n\"Brandon, I, my father thinks it's a good idea that I tell you something. I, um, I invited a friend for Thanksgiving,\" she blurted out, while picking the sesame seeds from her bun.\n\nBrandon looked up at her and stopped chewing.\n\n\"Um, he's in one of my classes, and he had nowhere to go on Thanksgiving, so, \n\non a whim, I invited him to my dad's place.\"\n\nHe remained silent and stared at her. Sienna noticed his jaw twitch.\n\n\"So...I just wanted to let you know, so you won't be wondering who the hell he is. And again, he's just a friend from school. And it's only because his family doesn't celebrate the holiday.\"\n\nStill, no emotion from him, other than the slow red creeping up his neck.\n\n\"Brandon?\" she asked, putting her cheeseburger down.\n\n\"Yeah,\" he answered quietly.\n\n\"Um, well, that's all I was going to say.\"\n\n\"Okay,\" Brandon answered, and began to eat again. Truthfully, the food had lost its taste. He wanted to tell her 'oh, hell no, he's not coming', but he figured it was no longer his place. He could feel his breath quicken. He was trying hard to smother his temper. She actually had 'befriended' some guy? Oh, fuck, he couldn't go over there now. There's not a chance in hell he could sit in a house with Chris and this new guy without starting some shit. In a small way, he felt betrayed. She wasn't his girlfriend anymore, but at this point, they would always be connected and he was still fighting like hell to get her back. This was going to be a long holiday.\n\n*********************\n\nThanksgiving Day rolled around sooner than anyone expected. The weather was still beautiful, and the wonderful smell of food filled the Commander's neighborhood. Sienna was greeting everyone as they entered the house. Lori had eaten earlier that day with her family, but she stopped by, and of course she and Sienna were inseparable again. Chris, his mom and his dad, had all shown up as expected. It was an awkward reunion, but Sienna was happy to see Chris was doing well. And Lori began flirting with him from the moment she saw him, almost like no time had passed at all. Darren, Tasha and Michael arrived with several pots and pans. John also stopped by. He was a SEAL and Terry's ex-friend, whose family lived in Maine, so he decided to come. Sienna remembered him from the bar months ago, but she hadn't been introduced to him. She hated that his first impression of her was that horrible night, but he seemed really nice, and greeted her like they were meeting for the first time.\n\nIan had come early, to help out in any way he could. Chris and Lori stared at him like he was a sideshow, and she could tell that Chris was going out of his way to make Ian feel uncomfortable. Chris, the ever little watch dog. How Sienna wanted to tell him that with her 'lion' she didn't need a 'watch dog'. \n\nThere were so many people Ian was meeting, he was getting a little overwhelmed. Sienna had also introduced him to her father, Commander Branson. He was a big man, who kind of frightened Ian, with his hand shake. Commander Branson didn't say much to him, but welcomed him into his house. Ian had never been around men in the military before. His family were pacifists who didn't believe in guns, war, or any government, for that matter. \n\nIan searched around the room for the one who could be the ex. He thought it best to steer clear of that one. He settled down beside Darren on the couch, while the food was being set up on the table.\n\n\"Hi, Darren, right?\" Ian asked.\n\nDarren wanted so badly to ignore this kid. But, he knew Tasha wouldn't be too happy with that.\n\n\"Yeah, you're Ian, Sienna's friend,\" he said, while tickling Michael.\n\n\"Yes. Um, so is her ex-boyfriend here?\"\n\nDarren gave a small sinister chuckle. \"Trust me, you'll know him when you see him.\"\n\nIn the dining room, Tasha was finishing setting out the last of the food. \"Should we wait for BT, or go ahead and let everyone start eating?\" Tasha asked Jackson.\n\nJackson sighed and told her to go ahead and call everyone in to eat. Brandon had called him earlier that week and said he wouldn't be able to come. And as always, he was honest with Jackson and said he wanted everyone to have a great Thanksgiving, but with him there, with Ian and Chris, it wouldn't be so great. So he thought it best to stay away. Jackson had told him to keep the option open, and that he was always welcome.\n\nAs everyone started taking their seats, Ian grabbed the seat closest to Sienna. He noticed Darren staring at him, so he quickly looked away. Sienna purposely left the seat to her left, which was at the head of the table, open for Brandon, just in case he decided to show up. She really wanted him there, because it just didn't seem like Thanksgiving without him. He had been at nine straight Thanksgivings at her house. She started to feel guilty, because she knew why he wasn't there.\n\nIan watched as Commander Branson led them in a prayer. He looked around the table, while all of their eyes were closed and their heads were bowed. He wasn't familiar with prayer, other than what he had seen on TV. The more and more he thought about it, his family really were the strange ones. Everyone else seemed involved in these little traditions, even if they seemed silly to him, and they were fun. He was beginning to realize how much he had missed out.\n\nBut while they all had their eyes closed, Ian was the only one who noticed the large, dark figure lurking in the background.\n\nAfter about forty-five minutes of sitting in his car, Brandon had finally decided to show up. He quietly walked into the dining room, and noticed they were already seated and saying the blessing. He scanned the seats until he located Sienna. His eyes then locked onto the young kid sitting beside her. The kid was the only one not praying and the kid's eyes widened when he saw him. Brandon tried not to glare, so he quickly found a seat at the end of the table, beside Sienna and opposite that of the Commander.\n\nWhen they all were finished with the blessing, Sienna was the next to notice Brandon's presence. \"Brandon!\" she screamed, and quickly lowered her voice. She hadn't meant to seem so excited, but she was delighted to see him.\n\nShe leaned over to him and whispered, \"I'm glad you came.\"\n\nHe smiled at her and removed his jacket. It was still bothering him that this kid was here. He scanned down the table and his eyes narrowed on Chris. He still wasn't through with that fucker, but it was a holiday, so he'd try to behave himself.\n\nOthers greeted him while Michael ran over and hugged him. He really liked that little kid. Someone who actually told him the truth ALL the time. It was refreshing.\n\nJackson caught Brandon's attention and smiled at him. Jackson then raised his glass for a toast. \"I just wanted to say a quick toast of things I'm thankful for. First off, I'm thankful that all of you were able to show up safely. Old friends,\" he said, while tipping his glass to Chris's father, \"and new friends,\" he said, nodding toward Ian.\n\n\"And I just want to say that I'm thankful for this wonderful young woman down at the end of the table. Sienna, my daughter, is a bright and caring young woman, who has had an extremely trying summer, but I'm so proud of where she is now and where she is going. I love you, baby girl.\"\n\nEveryone agreed and smiled over at her. Sienna smiled back at her father, embarrassed by all of the attention.\n\nShe felt someone squeeze her hand underneath the table. She looked at Brandon and he winked at her. She smiled back. That one squeeze sent her heart soaring. \n\nThen Jackson turned his attention to Brandon.\n\n\"And Brandon. I met him a little over ten years ago, and can't seem to get rid of him,\" Jackson said, and everyone laughed.\n\n\"But I think this young man is amazing. He's loyal, honest, and I couldn't love him any more if he were my own. Glad you could make it, son.\"\n\nEveryone around the table looked down toward Brandon. It was obvious to everyone that he and the Commander shared a special bond. Sienna felt tears form at the corner of her eyes, but she refused to let them drop. \n\nJackson continued, \"So anyway, those are just a few things that I'm thankful for.\" Everyone raised their glasses and took a sip.\n\nAfter dinner, everyone settled into the den for the football game. Sienna looked around but she noticed that Brandon was missing. She hoped he hadn't left so early. She had wanted to talk to him, and just thank him for showing up.",
        "Chris had been really glad to see Sienna, but not so much the others. He had been extremely embarrassed at the hospital, and left two days after. He figured Commander Branson was probably disappointed in him for that little display.\n\nBut Sienna looked beautiful tonight, even though she was pregnant with that asshole's kid. 'She has to be crazy to willingly be tied to that psycho for the rest of her life' he thought, while zipping his pants. The bathroom downstairs had been occupied, so he wandered upstairs to his old guest room. Truthfully, he just wanted to get away from everyone for a while. Dinner had been miserable and exhausting.\n\nChris flushed and opened the door. He was about to step out of the bathroom when he froze. Brandon was leaning casually against the side wall, his arms folded over his chest and pinning Chris with his glare. Chris swallowed. The two stared at each other for a minute before Brandon spoke.\n\n\"You gonna let me take a piss, or you gonna hold up the fucking door frame all night?\"\n\nChris quickly stepped to the side while Brandon walked in. Brandon was about to shut the door when Chris spoke.\n\n\"You know, she deserves better than you,\" he said in a low voice, with shaky confidence. Before the door slammed, Brandon caught it and opened it back up. Chris's eyes widened. Oh fuck, he didn't think that Brandon had really heard that. Brandon just kept staring at him...or through him.\n\n\"You know, I have a lot of respect for the Commander and it's a holiday. So I'm not going to start any shit with you today. But just know, I haven't forgotten a single, fucking thing you've done or said to me, and I owe you an ass whupping. And one day, you won't have Darren or Commander Branson to stop me, you little fucker,\" Brandon said cooly, while staring Chris down.\n\nChris's heart was racing. He hated that Brandon made him so nervous. Usually, most guys he knew, when you stood up for yourself or talked back to them, they realized that you couldn't be punked. But Brandon was so unpredictable, you didn't know if he was going to smile at something you said, or punch you in the face. Chris didn't know what else to say.\n\n\"Now, since I've made myself clear, I'd advise you to get the fuck away from me, before I forget that this is a holiday,\" Brandon stated.\n\nChris glared back at Brandon, but turned and walked away without saying a word. \n\nBack downstairs, Chris made his way outside to calm his nerves. On his way out, he noticed Sienna was engaged in a conversation with Tasha, so he didn't say anything as he exited the front door.\n\n\"How are you feeling, honey?\" Tasha asked Sienna, as the two cleared the table.\n\n\"Actually, I've been a little tired today. But overall, I'm okay,\" Sienna answered, as she carried small dishes to the kitchen counter.\n\n\"You know, I can do this, you don't need to carry any of the heavy dishes anyway,\" Tasha scolded.\n\n\"Okay, I won't, but I want to help.\"\n\n\"So...are you okay with all the testosterone that's here?\" Tasha said.\n\nSienna exhaled. She hoped that her plan to unite everyone didn't backfire on her. Everyone seemed to be doing okay, for now.\n\n\"Well, no bloodshed yet, so I think that's a plus,\" Sienna laughed.\n\nTasha laughed too. \"And I'm glad Brandon decided to come. Seems like it would have been strange him not being here.\"\n\n\"Oh, totally. And Tasha, oh God, he looks so good!\" Sienna moaned, while resting against the table. \"I mean, I couldn't keep my eyes off him during dinner. I'm serious, I just wanted to sit on his lap and pretend nobody else was there.\"\n\nTasha laughed again. \"Girl, you better get your hormones under control before you two end up with more kids than the Brady Bunch.\"\n\nSienna groaned. She really did need to tone it down, but she missed his touch so much.\n\n\"Sienna, go in there and have some fun with your friends and let me finish this up, okay?\"\n\nSienna nodded and walked into the den to find Lori.\n\nAfter a few more rounds of talking to Sienna's guests, Ian needed a breather from all of the heavy family bonding. He felt a little like an intruder, but many of them were really cordial to him. He finally escaped from the den and stepped outside, onto the deck. This family was very different from his. He did appreciate his family, because for the most part, they stayed out of his business and anything he asked for, they supplied it. But they weren't a \"family\" in the traditional sense of the word. Not like Sienna's. \n\nIan walked to the railing and looked out into the backyard. The sun had gone down and it was now a misty, dark blue color that painted the sky. Ian felt someone watching him, so he turned to the side and saw Brandon. Or BT, whatever they called him. He was sitting on the deck railing, staring at him, with a cigarette tucked behind his ear.\n\n\"I heard those things can kill,\" Ian said, pointing up at the cigarette, trying to make small talk.\n\nThe guy just stared at him, and then slowly said, \"You'd be surprised what can kill you.\" Somehow, Ian didn't think he was talking medically.\n\nIan nervously laughed. \"So, you're the one they call Brandon? Or BT, which would you prefer?\"\n\nBrandon shrugged. \"Either one, doesn't matter.\"\n\n\"What if I called you both?\" Ian said, trying to alleviate the tense atmosphere with a joke.\n\nBrandon just continued to stare at him. After a few awkward seconds, Brandon said, \"You can try, but I might not answer.\"\n\nIan nervously laughed again. Time to change the subject. \"So, um, are you excited about the baby?\"\n\nBrandon nodded. He pulled the cigarette from behind his ear, placed it between his lips and lit it. \"So, you and Sienna go to school together?\"\n\n\"Uh, yeah. We have creative writing together. She's amazing. All of her papers are so interesting.\"\n\n\"Yeah,\" Brandon said, narrowing his eyes.\n\n\"I mean, really, they are. She's a good writer,\" Ian said, answering him.\n\n\"No, I meant 'yeah', I know she is,\" he said, blowing smoke to the side.\n\n\"Oh.\"\n\nIan was scrolling through his brain over something to say, because Brandon just kept staring at him, as if he were sizing him up\u2014as if there were any competition in that department.\n\n\"So, how hard is it to become a Navy SEAL? I've only seen things in movies. Hell, maybe I could be one?\" Ian joked.\n\n\"Do you think you'd win a fight against me?\" Brandon asked him seriously, while stomping out his cigarette and picking it up from the deck floor. He looked back up at Ian, who had a worried look on his face.\n\n\"Um, I highly doubt it,\" Ian answered truthfully.\n\n\"Well, when you think you could win a fight against me, then you would probably be ready to train as a SEAL.\"\n\nOkay, this dude was really starting to freak Ian out. Brandon was so much bigger than him, and the fact that he was a Navy SEAL, only added to Ian's anxiety. \n\n\"Okaaay, good to know. Sooo, I'm going to head back in, but it was really nice, um, talking to you.\"\n\nBrandon nodded once in his direction and then looked over into the backyard. Ian took that as his cue to leave. Inside, he spotted Sienna talking to her friend, Laura or Lori, he couldn't remember. They stopped talking when he reached them.\n\n\"Hey, Ian,\" Sienna said, with a smile.\n\n\"Um, hey. Man, I just ran into Brandon...okay, that was intense!\" Ian said, while wiping imaginary sweat off of his forehead.\n\nSienna grimaced, while Lori laughed. Damn, Lori had missed BT. She wished she could have drug him to Clark Atlanta to kick this guy's ass who had started spreading rumors about her. \n\n\"Oh no, I'm sorry. Are you okay?\" Sienna asked.\n\n\"Yeah, I'm fine. He was cool. Just a little scary,\" Ian laughed.\n\n\"Where is he?\" Sienna asked, combing the room.\n\n\"He's out on the deck.\"\n\nSienna got up and left the den. Lori stared at Ian. Not really her type, but he was cute. \"So,\" she started, \"you like her too, huh? Well hop in line.\"\n\nIan smiled at Lori. He liked blunt people. \"Actually, I think she's great, but I think it's clear to see that she's not interested in anyone other than him.\"\n\nLori winked at him, \"Smart one, you catch on fast. Faster than that one,\" she laughed, as she pointed over to the corner where Chris sat sulking. Ian joined in with her laugh and sat down beside her.\n\nSienna made her way out onto the deck and saw her father talking to Brandon. She didn't want to interrupt them, so she was about to turn and walk back in the house, when Brandon called her name.\n\n\"Oh, hey, I didn't want to bother you guys while you were talking,\" she said, while rubbing her hand underneath her stomach.\n\nJackson laughed, \"As if you could ever be a bother.\" Jackson walked over to Sienna, kissed her forehead and walked inside.\n\nSienna turned back around to face Brandon.\n\n\"Hey, gorgeous, come here,\" he softly commanded. Sienna walked over to him. He was sitting on the deck railing and staring down at her. \n\n\"Can I sit too?\" she asked.\n\nBrandon hopped down and gently picked her up and placed her on the railing. He stepped in between her legs and locked his arms around her waist.\n\n\"You're not going to let me fall, are you?\" Sienna joked, while looking over her shoulder at the short drop from the deck and then back at him.\n\n\"Do you think I would?\" Brandon whispered, staring into her eyes.\n\nSienna couldn't take her eyes from him. It was as if, when he stared at her like that, it rendered her helpless and frozen. \"No,\" she whispered back. She wanted so badly to lock her legs around his back, but she figured that would be way too compromising a position. She placed her hands on his shoulders.\n\n\"Did you enjoy dinner?\" she asked, trying to keep their conversation light, since they were touching so intimately. But Brandon didn't answer. He just continued to stare at her. He then glanced down at her lips, and then licked his. Sienna couldn't stand it any longer. She leaned over and kissed him.\n\nDarren had just shown Michael where the bathroom was when he passed by the kitchen sink window. His mouth almost dropped to see Brandon and Sienna kissing on the deck. He then smiled, and walked back into the den. Finally, was all he could think.\n\nSienna pulled away from Brandon. She had to get a grip on herself. \"Brandon, I'm sorry, I shouldn't have done that.\"\n\n\"Yes, you should have, and I'm definitely not complaining,\" Brandon said, smiling at her.\n\n\"There's just so much we need to talk about before, I mean, if we get back together, you know?\" Sienna added.\n\nBrandon exhaled. \"Yeah, I know.\"\n\nSienna asked him to put her down so she could finish talking with everyone and say her goodbyes to those who were leaving. He watched as she walked back into the house. Yep, Brandon knew exactly what he had to do.\n\n***********************\n\nLater that night, after all of the guests had left, Sienna stood in the bathroom brushing her teeth. She stared at herself in the mirror, as she completed the mundane task. Her shoulder length charcoal hair hung limp and wavy, due to her up-do she sported earlier. She had on one of Brandon's old shirts, striped panties, and knee high volleyball socks. She scrubbed the makeup from her face and walked down the hallway to her room.\n\nWhen she entered, she was about to turn on her light, when she came face to face with a figure that towered over her. The figure covered her mouth before she could scream. \n\n\"Sienna, I--,\" was all Brandon got out before her knee connected with his groin. He instantly released her and grabbed his balls. He felt an awful pain riding up his dick, that connected with his stomach and on through to his brain. Motherfucker! \n\nSienna flicked on the light, to see Brandon bent over, with both hands on his nether region. His entire face had turned red.\n\n\"Brandon! Oh my God, are you okay?\" she whispered, while rushing over to him. He tried to speak, but words escaped him. How had her tiny knee managed to obliterate his nuts? God, he felt tears forming in the corner of his eyes. Finally, after a few more seconds, he righted himself, and tried to smile at her.\n\nSienna's worried look soon vanished, replaced by a grin, which then turned into full blown laughter. She quickly covered her mouth with her hand, so she wouldn't wake her dad.\n\n\"Glad to know it's funny,\" Brandon said, staring at her, with one hand on his privates.\n\n\"I'm sorry,\" Sienna choked out, while still trying to stifle her laugh. \"What the hell were you doing?\"\n\n\"I didn't want to startle you and have you scream and wake your dad up, so I thought I'd cover your mouth and then turn the light on, but obviously, I didn't get that far.\"\n\n\"I'm sorry,\" Sienna smiled at him. \"But, what are you doing here? Did you climb through my window?\"\n\n\"Yes,\" Brandon answered. Once the fire had quelled down in his boxers, he took in the sight of her. Damn, she looked so good in his shirt that stopped several inches above mid thigh on her. That, plus the knee high socks, made her look like a naughty school girl.\n\nSienna noticed the way Brandon was openly staring at her. Truthfully, it was starting to turn her on, but she tried to ignore that feeling.\n\n\"Well, why are you here?\"\n\n\"You said we needed to talk.\"\n\n\"Now?\"\n\n\"Yep.\"\n\nBrandon removed his shoes and crawled onto her bed. Sienna stood there staring at him nervously. She was not about to have sex with him in her father's house. It was just wrong...and freaky, which she had to admit, also turned her on.\n\n\"Seriously, I just want to talk,\" he said, realizing her indecision.\n\nSienna slowly walked over to the bed and got underneath the covers with him. She realized this was the first time Brandon had ever been in her bed.\n\nBrandon placed his hand around her shoulder, as she snuggled up beside him and rested her head on his chest. Her little round belly pressed into his side.\n\n\"Are you comfortable?\" he asked.\n\n\"Yes.\"\n\nBrandon rubbed her stomach and kissed her forehead.\n\n\"So, what do you want to talk about?\" Sienna asked.\n\n\"I want to know how you're doing,\" he said.\n\nSienna looked up at him and furrowed her brow. \"I'm fine,\" she answered back.\n\n\"No, how are you really?\" he asked again.\n\nSienna shrugged. She really didn't know how she felt.\n\n\"I just feel, I don't know, kinda like everything happened so fast, and we're both still adjusting. Some days I'm scared of being a mother and trying to complete school, and other days I'm so sure of myself.\"\n\nBrandon nodded, and listened to her as she continued.\n\n\"I think about our lives, you know. Tasha said her only fear for me is that I fell in love with you at such a young age, that maybe I haven't had time to experience anything else. And I understand that, but with you, I feel like I've hit the jackpot. So why spend the next few years, you know, chasing a feeling with other people that I already have with you?\"\n\n\"She's just trying to look out for you,\" Brandon said. But at that moment, he was so glad Sienna was strong minded.\n\n\"I know, but I also know what's good for me, and I don't have to be like other girls to be happy. I don't have to date ten guys in college, and ten guys after college, kiss a lot of frogs, to find my mister right,\" Sienna said. \n\nThank God, Brandon thought. \"So, what about the future? What do you want?\"\n\nSienna snuggled closer to Brandon while she thought about it. \"Hmm, I want to graduate from San Diego State. I want to be the best mom I can be. I don't have a map for that, but I think Tasha's a great mom, so I'll watch her closely. And...five years from now, I wouldn't mind having another baby. I'd like two kids. That would be perfect.\"\n\nBrandon scoffed, \"Two? Don't be a lightweight, we can do at least three, although I say five.\"\n\nSienna looked up at Brandon. \"And what makes you so sure you'll be the father?\"\n\n\"Oh, shit, you're right. Ever since you castrated me a few minutes ago, I guess I will have to reconsider the possibility that I might be shooting blanks now.\"\n\nSienna buried her head in Brandon's chest and laughed. \n\n\"You know, I did that to Terry, too,\" Sienna laughed. But then she immediately regretted bringing his name into their conversation. She noticed Brandon tense up.\n\n\"I'm sorry, I shouldn't have said that. It was stupid.\"\n\nBrandon didn't say anything for a few seconds, and then tightened his grip on her.\n\n\"You know, I think about that sometimes. And when I started counting back how pregnant you were, I almost lost my mind again. I don't know if you know this, but you were one month pregnant when that shitbag tried to--,\" he couldn't even finish. The thought of that asshole yanking her off a bed onto her back and hurting her, pissed him off to a level he was trying very hard not to reach again. He really didn't want Terry in jail. He wanted to kill that fucker.\n\n\"I know, BT, but don't think about it. It's over with, and the baby is just fine. Better than fine, actually.\"\n\nBrandon tried to ignore that feeling burning up his neck. \"So, do you see yourself married?\"\n\n\"Yes! And you can be the best man when I finally say, 'I do'.\" Sienna laughed, as Brandon nibbled the side of her neck.\n\n\"If you don't want your groom beat down, I suggest you keep me far, far away,\" he stated.\n\nSienna sat up and crossed her legs. \"Brandon, do you think if we got back together, that we would last?\" Sienna asked.\n\n\"We're a family now, Sienna. And I swear to you, I will do whatever it takes to keep us together. I know you're young, and I have a bad temper, but we can make this work. I'm in it for the long haul, one hundred and fifty percent. I would put the ring on your finger right now if you would have me. But since you know I'm ready, I want this to be on your terms. I don't care if it's one year from now, or after you graduate, or a few years after that. I'm here, and I'm not going anywhere, ever again. You got me, woman! I finally have to admit it. Darren can officially call me a pussy.\"\n\nSienna raised herself and straddled Brandon. She couldn't believe he had just admitted that to her. \n\n\"So, if we got back together, could we start slower? Like, dating first, then moving in together?\"\n\n\"Absolutely. And I promise, if we date, I'll only go to third base with you,\" Brandon said.\n\nSienna laughed and leaned down to hug him. Okay, this just might work, she thought. She prayed it would.\n\nThe next morning, Sienna peeked out of her door. She could hear her father moving around downstairs. She stared back at her bed. Brandon was still asleep. They had slept beside each other, just cuddling, all night. She felt like she was in heaven again. But now, she had to figure out how to get him out of the house. Thank God, he had parked down the street.\n\nShe pulled on some shorts and walked downstairs. Her father was in the kitchen warming up some of the leftovers from Thanksgiving dinner.\n\n\"Hey daddy,\" Sienna said, yawning at her father.\n\n\"Hey baby, how are you?\"\n\n\"I'm good. Smelled so good down here, I had to come see what you were up to.\"\n\nSienna noticed her father setting out three plates. \"What's that one for?\" she asked, thinking he was having company over.\n\nHer father continued to re-heat food as he spoke. \"It's for Brandon, whenever he gets up. Please tell him not to risk hurting himself by leaving through the window.\"\n\nSienna felt sick. Shit! Oh, she thought they had been so careful. Jackson looked up and smiled at his daughter. \"You know, I'm the lightest sleeper. He's pretty quiet, but it was your constant laughter that woke me up, baby girl. And honestly, it had been a while since I heard you laugh, so I refused to interrupt.\"\n\nSienna walked over to her father and hugged him. She would never fully understand someone like him, but he was amazing. \n\n\"So wake him up, and tell him to come on down. I have the guns locked up, so he shouldn't be scared.\"\n\nSienna laughed, and turned to head out of the kitchen. But then she stopped, after realizing that she hoped her father knew what happened, or didn't happen, for that matter. \"You know we didn't do anything though, right, daddy?\"",
        "\"I know,\" he whispered, as he turned his back and pulled a dish from the microwave.\n\nSienna smiled and ran upstairs to wake Brandon up.\n\n***********************\n\nAfter Thanksgiving, Sienna felt her relationship with Brandon was reaching a new high. She still hadn't declared that they were 'officially' back together, but she could see it coming. And they had banned sex from their relationship until both of them could control their emotions, but damn, that was so hard. There were times when Sienna would literally jump on Brandon and try to pull his dick out of his pants. He'd be the one having to stop her. She knew it could also be due to the pregnancy. She had heard that, sometimes, being pregnant can make you horny. There was a lot of heavy petting and kissing some nights, that turned into blue balls for Brandon, and mood swings for Sienna. \n\nShe had gotten so pissed at him for stopping one night, she asked him to leave his own house! She had been straddling Brandon, with her panties off and grinding up against his groin. \n\n\"Oh, fuck, baby, that feels so good. Goddamn,\" Brandon moaned, as he ran his hands up over her belly and gently caressed her swollen breasts.\n\nSienna couldn't stand it any longer. She had to have him inside of her or she would die! No other option, not tonight. She knew it was her 'no sex' rule, but fuck that! She wanted him right now.\n\nShe began pulling his pants down over his hips, while he struggled to pull them back up.\n\n\"Please Brandon, you don't have to put it all the way in, just a little, so that's not technically having sex,\" Sienna begged, while rolling her hips back and forth. She was already soaking wet just by rubbing against him.\n\nBrandon burst into a laugh. \"Um, isn't that supposed to be the guy's line?\"\n\n\"Please?!\" Sienna begged again, while jerking his pants down.\n\nShe had no idea how close she came to getting it. He wanted to bury his cock balls deep into her so bad and have her screaming his name. BUT...he wanted their relationship to work even more.\n\nHe raised up and grabbed her hands. \"Sienna...I love you.\"\n\nSienna leaned in to kiss him, \"Yes, I know.\"\n\nHe restrained her, before their lips could touch. \"No, you don't know. I. Love. You. And that's why I'm stopping,\" he said, as he gently lifted her from his lap and pulled up his pants. He blew her a kiss as he made his way to the bathroom for a cold shower.\n\nSienna leaned back against the bed and smiled. Oh, this was so going to be her future husband.\n\n*************************\n\nOver the next few days, things had settled into a great routine with Brandon and Sienna. Something they never had before. During the week, he would take her to school, and pick her up, too, when he didn't have to be on base. Brandon would come over and eat dinner every night at the Commander's house. Then, on weekends, they would hang out with Darren, Tasha, Michael and John. Brandon had also relinquished the reigns from Tasha regarding accompanying Sienna to her doctor appointments. \n\nSienna had remained good friends with Ian. At first Brandon didn't like it, but he learned to accept her friendship with Ian. And there was always his guaranteed comfort, that if Ian crossed the line with Sienna, he would break one of his tiny arms...or legs...or something. But Brandon didn't have to openly threaten Ian, because Ian always kept his distance with Brandon anyway, when he was around. Brandon appreciated that, considering that's more than Chris ever gave him. But despite that, Brandon couldn't remember a time that he had ever been this happy.\n\n*********************\n\nAfter Brandon had dropped her off from class, Sienna walked past her father's study, and noticed him staring out of the window. She stopped to observe him and then walked inside.\n\n\"Daddy?\"\n\nJackson turned around in his chair. He had so much weighing on his mind right now. He didn't want to burden Sienna with this new development, but he needed to get it off his chest, because for one of the few times in his life, he really didn't know what to do.\n\n\"Hey, baby. Do you have a moment?\" he asked, as he removed his reading glasses and wiped his face.\n\nSienna looked at her dad's eyes. He looked like he hadn't gotten a good night's sleep.\n\n\"Of course, what's wrong?\" she asked, sitting down in front of him.\n\n\"I have a little bit of a dilemma, and I wanted your advice.\"\n\nSienna nodded her head. It wasn't like her father to need advice. Usually, people came to him for his advice. She wasn't sure how she could help, but she would definitely try.\n\n\"I--, well, this is difficult, but I decided to do some digging into Brandon's background, against his wishes. But the only reason I did it was because I thought it could benefit him as a part of his healing process. But I'm afraid I got more than what I bargained for.\"\n\n\"What do you mean?\" she asked, leaning onto his desk. For some reason, her father needing her advice scared her. Was something wrong with Brandon?\n\nJackson exhaled and leaned back in his chair. \"Well, I was able find Brandon's aunt's phone number. Sara is her name, and she was listed in the white pages in Boston. I thought it was a long shot, perhaps a wrong number or that I'd find out she doesn't even live there anymore. But I called anyway. She was a crass, bitter woman, who was all too eager to tell me about Brandon. Apparently Brandon's mom was 19 when she had him, and when he turned 6, she left him with his aunt and uncle. But, Sara told me something, and I'm not sure how to process it.\"\n\n\"What, what did she tell you?\" Sienna asked, on the edge of her seat.\n\nJackson paused for a few moments, then continued, \"She and Brandon's mom, Kelly, had a falling out when Brandon was born, and they quit speaking. Well...,\" the Commander exhaled. \"The falling out was over the fact that Kelly had slept with Sara's husband, Harold, several times, and he is the one who fathered her child.\" Jackson waited for Sienna to process that.\n\nSienna's brow furrowed. She repeated the words back over in her head until finally it clicked. \"Oh, my GOD!!\" Sienna screamed, while covering her mouth.\n\n\"Yeah,\" Jackson said.\n\n\"Oh, my God!\" Sienna repeated, still not wanting to believe it. Brandon's uncle Harold was actually his father!! Oh, fuck! Brandon HATED his uncle. He had treated him so badly.\n\n\"Now, here's the problem I'm having. Part of Brandon's anger comes from the fact that he doesn't know why they were cruel to him. Maybe if he knows this, he will at least see why his aunt was cold toward him. Because every day she looked at him, she had to accept her husband's infidelity.\"\n\nSienna still had her hand over her mouth. She couldn't believe this. \"Does Harold know? I mean, about Brandon being his son?\"\n\nJackson shook his head. \"Well, when Brandon was living with them, no, Sara never told her husband. But they divorced about four years ago, and she called him to rub salt in the open wound. So Harold knows now. Sienna, do you think I should tell Brandon?\"\n\nSienna sat there shaking. Brandon had tried to kill his unc\u2014father, years ago, and to this day, he said if he ever met up with him again, he'd beat him to a pulp. And now, that same man he hated...was the man who fathered him. \n\n\"Daddy, I really don't know. I think it will hurt him. But maybe in the long run it will heal him...I don't know.\"\n\nJackson nodded his head. Brandon's progress had been phenomenal...and he feared this information would set his 'son' back. Now the Commander hated that he had opened Pandora's box.\n\n*\n\nThanks all and glad you were patient with me while I got this whopper of a chapter out. I hope to have chapter 10 out soon, but it will most likely be the conclusion of Damn Dress: A Love Story. And as always, I appreciate your votes and comments. Thanks!\n\n--Soular "
    ],
    "authorname": "soular",
    "tags": [
        "interracial novella",
        "interracial romance",
        "commander",
        "interracial drama",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/damn-dress-a-love-story-ch-09"
}