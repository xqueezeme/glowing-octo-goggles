{
    "title": "Hot Set",
    "pages": [
        "A slow-build orgiastic soir\u00e9e, graciously beta-read by Jjonest.\n\nI woke up and blinked a few times until the sleep cleared from my eyes and my dimly lit bedroom came into focus. As usual, I was also met with a nicely tented sheet hiding some serious morning wood, so I rolled out of bed to set it free and grant myself that satisfying first stretch of the day. I love sleeping nude; the feeling of freedom, of total relaxation, the way the cool sheets cocoon the warm, naked body.\n\nStanding there, I smirked to myself, being tempted to waltz out the front door in my birthday suit for a little morning sunshine, still sporting a massive boner. It was all so comically perfect in my head: a woman would gasp and drop her expensive Ming vase, a cyclist would do a double-take, collide with a mailbox and go straight over her handlebars into a heap of azaleas, a delivery truck would jump the curb, strike a fire hydrant, and send a glorious geyser spewing high into the sky. You know, just like in the cartoons I watched as a kid.\n\nAlas, public nudity, and even more so, free sexual expression, seemed the stuff of fantasies...\n\nI grabbed a granola bar on my way out the door before driving the half-mile down Chavez Street to the cafe I always visit for a grande black coffee. It doesn't make much sense as far as morning routines go -- it's not like my office doesn't have a steaming pot of perfectly free coffee waiting for me each and every day. I guess I just need those soothing few minutes before the day begins, observing bleary-eyed patrons shuffling along to mechanically place their orders and grumble about the meetings they're about to attend.\n\nI smiled at Norah, the cute barista who never needed me to place my order. She smiled back and immediately scribbled my name on a cup, then got to work. I liked to imagine she did this just to demonstrate her daily familiarity with me. Adding my name served no real purpose since she always handed me my coffee directly before wishing me well. Fantasizing about an alluring woman like that was also key to starting my day. Norah had such intense eyes, long brown hair tucked behind one ear, an impish smile, and other generous assets that the silly green apron she had to wear never stopped me from noticing.\n\nI fantasize constantly about a lot of the people I encounter -- all the transient Norahs that come in and out of my life as I go about my mundane business. Before long, however, I found the real stuff of fantasies sitting right there in front of me in an opened newspaper on the table where I took my favorite morning seat.\n\nWhen I saw a mention in the paper of being an \"extra\" in a film, it revealed an entirely new dimension to that term which I had never considered before. I could hear the journalist laughing as I read the comically dry headline: \"Adult film studio seeks multiple participants to stage massive orgy.\" The visions this conjured up were extraordinary and boundless; idyllic landscapes of naked human beings enjoying the erotic terrains of each others' bodies in every way imaginable. There was no shortage of opportunities to be an extra in L.A., but I had never been that interested in being the guy walking down a street in the far corner of your tv set. Now, suddenly, the opportunity was thrilling, taboo, and something I would spend all day obsessing about instead of doing my work.\n\n\"Must confirm you are 18 or older and lawfully able to work in the US,\" it said. Check. \"Local to the L.A. area. All sizes: height, weight. All ethnicities.\" Check, check, and check. I read on; medical clearance required, of course, visible tattoos were OK, I had to provide a phone number, headshots were recommended but I could come up with something -- it all seemed perfectly doable... but could I do it?\n\nYou better believe I ruminated about it all day, and then all evening long. \"Fuck it,\" I said -- and why not, you only live once.\n\n***\n\nCall time was seven AM on a Saturday and I got no sleep, being up all night plagued with a mixture of anxiety and excitement that sent my mind racing endlessly. I got cold feet four or five times but always came back to the stubborn insistence that I couldn't pass up the opportunity. One moment, I was preoccupied with the fact that in a matter of hours I was going to be expected to have sex with complete strangers, the next moment, I began to wonder if this was really going to happen as I imagined it. I second-guessed the reality of it all, despite the information I had gathered. Perhaps, in the end, I would just be a nude body in the background, engaged in the blurry, vague motions of fake, mechanical sex, with all the cinematic drama reserved for experienced porn stars.\n\nI arrived in a stupor at a large warehouse, surrounded by a motley assortment of individuals filing in from the parking lot. Most of them didn't even seem like amateur or aspiring porn stars, they looked no different from me and equally prone to a rising wave of anticipatory tension. Full of idle, nervous chatter, we made our way inside and were directed through an intimidating mix of crew members and film equipment. There were huge lights, camera equipment, and production assistants running this way and that. It was quite an affair, nothing like what I imagined of a regular orgy; showing up to some party, having a drink, whatever else happened after that...\n\nThe room really was nothing more than an empty warehouse, vast and rather plain. I had been expecting... I don't know... beds? Furnishings of some kind? I thought about how I'd hate to be the person who had to clean the carpet after the event but then realized that staging such a massive orgy of this size probably necessitated not having one. It did, however, dawn on me what the brief film treatment we were provided with had said about the main character; how the scene we were filming would depict his fantasy of group sex in a humorous and outrageous way. It seemed clear to me that I just stepped into a blank canvas, full of the unknown; that the space was intended to illustrate the comedic aesthetic of the character's daydream such that he didn't know what a real orgy looked like other than imagining a large gymnasium full of naked people fucking in a wildly exaggerated manner.\n\nMost of the participants appeared to be college students looking for a once-in-a-lifetime thrill, a fact which excited me when I considered the daring things they may have planned to do with strangers they would never have to encounter again. They filed into the room either solo, wary, and shifty-eyed, or in small groups of giddy friends that weren't fully sure what the peer pressure was getting them into. The guys were grinning, performing double-takes upon spotting the girls that entered before or after them, immediately sizing them up and brimming with anticipation about what they might look like with their clothes off. The young women received the stares and hid their nervous smiles, casting each other covertly supportive looks.\n\nHowever, more than a few women had no shame to hide, wearing ready-to-remove garments, waltzing in with their hairy pits and badass swaggers that seemed to want to place an unremarkable cast on something that to most of us felt perfectly sensational. These, too, excited me -- they all did, every possible personality and potential motivation I could project upon them all.\n\nI made a quick stop at a craft services table exploding with miscellaneous foodstuffs to grab some light fare that wouldn't cause cramps but might provide lots of energy for the degree of calories I'd hopefully soon be burning. I grabbed a banana but regretted it as I stood there munching on a rather phallic object that sparked some unintentional smirks, given the situation. To take my seat, I shuffled halfway down a middle row in a grid of gray plastic chairs and, little by little, the gaps filled in all around me. A trio of young women quieted down when they settled upon the seats in front of me and caught my eyes. I knew they had been discussing something scandalous, their cheeks flush and red, but felt compelled to keep their mouth shuts as soon as I was within earshot. As they sat there in front of me, shifting anxiously in their seats, glancing up at every single arrival with keen, alerted eyes, I could imagine the butterflies they were experiencing -- I was full of them myself.\n\nMy head filled with a thousand ponderings about the bodies they hid beneath their simple t-shirts and jeans, knowing full well that they were planning to slip out of them in front of everyone. One of them whispered, \"This is so crazy...\" to her friend. I noticed that she had a few dark freckles on her pasty neck -- did that mean she might have little brown flecks on her pale boobs, contrasting with a pair of salmon-colored nipples? Her friend's perspiring hand trembled and I noticed her brown forearm was well-graced with a soft, unidirectional flow of umber hair. Did that mean she hid a big mass of bushy brown pubes behind her panties? The contrast between seen and unseen was maddening as I became increasingly attuned to the simple knowledge that clothes were going to come off en masse.\n\nMy heart raced as I lingered in the anticipation of perhaps seeing her and her friends take off their underwear; the nervous laughter as they unhooked their bras, the startling bounce of their freed breasts as they bent in half and clutched at them in embarrassment as everyone watched on with bated breath. I imagined the way their boobs might dangle when they lean down to slide off their panties, the panic on their faces when they stood back up, their fluffy, unruly pubes and soft, wrinkled labias, the wide eyes, the gritted teeth as their private parts became visible to all. I no doubt projected some of my cautions onto them, feeling some of the same fears, albeit competing with intense arousal.\n\nEvery woman who walked in and cautiously took her seat inspired a flurry of questions about the scandalous unveiling of her naked body, from the young, fresh-faced beauties that casually skipped the bras, to the more mature ladies that walked in with confidence and an air of sexual ambition. Everywhere, individuals were exchanging looks, choosing possible mates, or simply flirting with a spontaneous fantasy about what soon might be real. Who were all these people, what kind of lives did they live, how had they just all of a sudden come out of the woodwork with the promise of an experience that might scare the vast majority of people away?\n\nI soon learned that my initial expectations about the reveal of bodies were a little out of touch with the realities of the filmmaking process.\n\nWe quieted down as the director positioned himself before the crowd and raised a loudspeaker to his lips. He was a stocky man with a newsboy cap and a thick red beard. I wondered how many pornos he'd made and if he'd ever put people in a situation like this before. I listened attentively as he ran through the intimidating logistics, explaining that we'd all need to go through a check-in process and how the event would be broken down into wide shots of passive group activity as well as a variety of individual pairings that they would \"facilitate\" through \"instruction\" and \"prompts from the crew.\"\n\nI was surprised to hear that there would be four separate mobile cameras working their way around the event individually, as assistant directors helped to capture a range of activities happening in parallel.\n\nMost significantly, I was disappointed to discover that the men and women would be separated by a curtain for undressing and subsequent check-in. However, the director explained that this was only because they were going to film a grand reveal between the sexes, capturing our reactions to that first exposure to a sea of naked female bodies facing a crowd of nude men, before we would then be allowed to, uh, \"mingle.\" I briefly felt panic imagining walking through a sea of naked bodies for fear of sprouting an instant erection. However, I reminded myself that this was an orgy, not a nude beach. Not only were erections okay, but they were also required...\n\nAs soon as his speech ended, we were invited to rise and go to one or the other side of the warehouse. There was an explosion of activity as we began gossiping feverishly with neighbors about all the things we'd just heard. The sexual tension and curiosity were clearly palpable on account of our being simple folk and not porn stars, who I imagined were entirely desensitized to a situation that held me in the grip of anxious excitement.\n\nAs a long, thick theatre curtain divided the room in two, I got my last glimpse of the throng of women on the other side, eying us with a range of expressions, fully aware that the next time we would see one another, our clothes would be off, our bodies bare, visible arousal taking hold. I locked eyes with one woman who seemed to be suffering the same feverish insecurities. I wondered if she was thinking the same thing that I was; that we'd never met, didn't know each other's name, or anything else for that matter, and yet in a short while the curtain would be pulled back again and there we'd both be standing -- one stranger obviously owning a penis, another very clearly possessing a vagina, and thus we'd be granted our most unusual first introduction.\n\nI got in the line for check-in and eyed the guy in front of me who seemed to be in his forties, wearing a tight-fitting, charcoal gray t-shirt to advertise the fact that he worked out regularly. He looked as clean-cut and confident as an ex-military guy -- I felt sure the ladies would be all over him. The young man who approached behind me could not have been more different; a nerdy, gangly fellow wearing a powder blue button-down shirt tucked into a pair of tan khakis. He even wore a pair of painfully loud argyle socks. I introduced myself and learned their names were David, in front, and Walter, behind.\n\n\"So...\" I began, trying to make chit-chat. \"How did you hear about this? What made you want to come?\"\n\n\"Middle-aged. Two years divorced. Kids gone off to college.\" David shrugged, underscoring his suddenly serious tone. \"Dating's not like it used to be when I was your age. So...\" He glanced over at the curtain and forced a smile back to his face. \"I figure -- what the hell -- maybe I'll meet some young ladies and see if I've still got it.\" As he began to chuckle at this, I wasn't sure if I should feel sad or amused, but something was refreshing about his honesty, I suppose.\n\nDavid looked over at Walter and gestured casually to him. \"So what's your deal? What brought you here?\" David's eyes jumped up and down, no doubt noting the same observances I did, but withholding any visible judgment about our neighbor's meek appearance.\n\nWalter shifted nervously then responded with a wavering voice. \"I... um... have never really had sex before. So... uh...\"\n\n\"You're a virgin?\" David replied, nodding excitedly.\n\n\"Yeah.\"\n\nDavid roared with laughter, \"And you came to this?!\" I smirked at them both. \"You're brave... I'll give you that. You've got balls.\" Walter gave him an anxious smile that led me to believe that through his crushing fear he welcomed any boost of confidence. \"And I guess you're gonna give both of 'em a workout today!\"\n\n\"Seriously, man. You're going zero-to-sixty here,\" I laughed.\n\n\"Yeah...\" Walter repeated with a slight smile. He looked down at the floor and began to fidget.\n\n\"Well... here we are. This should be fun. How about you?\" David asked me.\n\nIt occurred to me that I hadn't really thought about why I came. \"I honestly just saw it mentioned in the newspaper and thought it sounded like a bucket list item. I have no idea what to expect really.\"\n\nDavid nodded at me as if trying to communicate a deep understanding. \"I hear 'ya,\" he said. \"My feeling, looking around the group when we first assembled... it's mostly young women from--\" David stuck his thumb out and pumping it through the air in the general direction of the local college campus. \"You know... they're wild and free, with their whole lives ahead of them. They're just getting their first taste of freedom, full of hormones, eager to rebel and break free from mommy and daddy's control. When you're in that phase of your life, you want to do things like this that you'll remember for the rest of your life. You know -- flash your tits around, get some attention. Trust me -- I saw a handful of desperate housewives out there, but us older folks have fewer and fewer opportunities.\"\n\n\"Live it up while you can...\" I muttered, trying to channel his point of view.\n\n\"That's exactly it,\" he concluded, adding a little more dose of reality to the fantasy crystallizing all around us.\n\nAs we approached the check-in point, I began to observe the procedure with keen interest. One by one, men were called forward from the front of the line to approach the table. A young woman took down some personally identifying information, confirmed the person's RSVP and medical release, and then had them sign a series of wavers containing dry technical jargon that one could barely manage to skim. Finally, she handed them a small labeled bag for their clothing. Just like that, they were expected to undress in front of her, stripping down until they were fully nude, and then hand back the bag they'd stashed their things in. The young woman did not seem altogether unconscious of the stark display of nudity but managed to remain professionally unfazed by the sight of one penis after the next -- no doubt having been resolute in her determination to not stare, opting instead to bottle up her emotions until she could share a hilarious beer with friends later that evening.\n\nBefore each male participant had an opportunity to settle into the awkward awareness that they were unclothed and performing these steps in front of a long line of other men patiently awaiting their turn, they were instructed to move to the next table where a sole physician sat. Obeying instruction, each man advanced, acutely aware of the penis dangling between their legs, as he was greeted by a smile and nod by a medical professional.\n\nEach participant was required to raise their hands and place them atop their head, then straddle open their legs. The physician calmly performed a visual examination before instructing them to reach down and lift their shaft, move it to the right and then the left, as well as raise their balls for a quick check of their scrotum and testicles. All the while, she peered through her wide-rimmed glasses, glancing around for any outward signs of disqualifying medical conditions. There was no shortage of men who found themselves subject to a brief bout of humiliation as the focused attention of the physician's studious gaze resulted in a quickly swelling erection which bobbed about haphazardly, sometimes getting so distended that it looked almost painful for them to hold it firmly off to the side for the examination to be completed.\n\nI felt a flurry of nervousness as the men around me watched this display with growing restlessness. The last thing I wanted was to wind up with an erect penis a little too early, in front of all the other men. It did not exactly help to stabilize my emotions, but I imagined what was transpiring on the other side of the curtain. Was the physician attending to the women male or female? What did it look like as they were instructed to unsnap their bras one by one and slide down their panties? Were they as anxious about the whole affair as the men seemed to be, and did they become aroused? I had so many questions!\n\nI put myself in the other physician's shoes, calling one of the young women forward in her birthday suit, instructing her to raise her hands over her head, and then boldly asking her to take a wide stance. What exactly did the examination look like? Did the physician just... I don't know... ask them to spread their labia to have a casual look around in there? I imagined a whole line of freshly examined, horrified young women cupping their palms insecurely over their genitals and wrapping their arms across a pair of bulging breasts.",
        "I felt myself smiling and quickly suppressed it, thinking I might look odd to my neighbors. I decided to clear my mind, determined to make it through my exam without popping a boner in anyone's face... \"Here we go...\" I mumbled.\n\n\"Yep...\" David replied. Walter trembled behind me, saying nothing.\n\nAll in all, it wasn't so bad or intimidating as it looked. When all was said and done, my documents signed, my clothes removed, and my genital examination complete, David, Walter, and I naturally gravitated back to one another, having established a brief camaraderie during our chat in line, and perhaps needing some simple social interactions to calm the butterflies. However, it still felt a little strange, having just stood in line fully clothed, introducing ourselves, and now suddenly faced with the startling display of each other's naked, dangling cock with seemingly nowhere else to look.\n\nWalking around without a stitch of clothing on usually wasn't a big deal in the locker rooms or saunas that I was used to; it was easy to ignore a pair of balls or some guy's flopping dick. It's not as if I wasn't used to seeing my own every day. Only now there was a sacred barrier about to be breached, the fragile wall of privacy dividing the sexes about to be torn down. This real challenge lay just ahead of us, and that weighed visibly on our minds.\n\n\"So... uh... here we are...\" David said with a slight smirk.\n\n\"Yup...\" I said with a chuckle.\n\nWe stood there awkwardly, doing the things that guys do, taking discreet looks to see how we compare without being overt about it. David was neatly trimmed, thick, and pendulous and I felt myself experiencing a tingle of jealousy. Walter was average-sized, with a uniformly tubular shaft and bushy pubic hair. I fell somewhere in the middle, not altogether insecure about my appearance, even beside David's impressive showing.\n\n\"How you doin' over there?\" David asked Walter, clearly as amused as I was at his predicament.\n\nWalter's eyes looked like they were bulging out of his head, having tripled in size due to fear and embarrassment. \"I'm okay...\" he managed to coax out with a sense of untruth.\n\n\"I guess they're all naked on the other side now, too,\" I mused, trying to fill the gaps of silence with something less awkward -- but what could possibly be less awkward? Still, we all relaxed a little, sharing a moment to savor the fact I had pointed out.\n\n\"I saw a few real beauties out there earlier... wow. You better believe I'll be watching for them,\" David replied.\n\n\"You and me both!\" I laughed, feeling a sense of renewed camaraderie that I clung to for security.\n\nI couldn't help but think of the three college students that sat in front of me earlier, my mind fresh with the awareness that they probably stood naked together not far away, at that very instant, red-faced and gawking at each other's nudity; friends who had probably shared so many intimate details about their lives, but who were not quite as used to the intimate details of their naked bodies. Did they compare notes about their physical features like perhaps they did about their boyfriends? Did they sheepishly compliment one another's nipples before expressing insecurity about their own? Did they console each other and reassure a close friend about her attractiveness in the face of the incredible, impending vulnerability?\n\nI didn't care if the fantasy seemed silly, I wanted to dwell on it all the same.\n\nAfter idly chatting for a few minutes, we were interrupted by the screechy call of the loudspeaker as the director gave commands to cast and crew alike. I watched with jealousy as he passed back and forth across the edge of the room where he could survey the progress on either side of the curtain. I imagined what he was seeing on the other side, the women having stripped down completely as we had. I stared keenly at his eyes, almost as if I hoped to see naked, jiggly, hairy bits reflected in his glassy eyes.\n\nAs the time fell upon us, the director shouted, \"Now we're going to film the reveal. Positions!\" We had been instructed to line up and face the curtain; it hung there dark and opaque, temporarily obscuring a landscape of naked flesh on the other side. \"Okay, here we go everybody! -- Hot set!\"\n\nThere was a brief respite from my nervousness as I pondered the irony of that phrase. The term \"hot set\" normally indicated that the camera and lighting had been set up, however here it seemed to take on a different meaning given the circumstances.\n\nWe turned and faced the curtain, resigned to a fate of initial tension before earning a chance for what each of us hoped was a wildly exhilarating experience. Each of us was acutely aware of what stood on the other side: a massive crowd of naked female bodies, scores of bared breasts and pussies, perhaps the discovery of those few girls that we spotted earlier, when they had been fully clothed, who we desperately wanted to see completely naked. It seemed so unbelievable that I had to glance down at my cock, as well as the nude bodies around me, to convince myself that I wasn't dreaming.\n\nThe anticipation tied to the fate of that curtain was electric with tension and reached its peak as a member of the crew strolled out toward the machine that drew the curtain back and forth. The hyperactive female voices we had heard on the other side had begun to quiet down, as did our relentless chatter. It was as if the entire crowd had collectively held their breath to await the spectacle of mass nudity that was about to be revealed.\n\nCameras rolled as I watched the director swing his finger through the air in a circular motion, sending a visual cue toward the large crank across the room. The crew member immediately flipped a switch and sent the crank turning rapidly about, drawing the heavy black curtain to the far side of the room, filling the air with the clean metallic hum of hundreds of tiny metal rings.\n\nMy heart leaped into my throat as the room doubled in size and the participants on the other side slowly came into view. It was exciting enough to see one female stranger nude, but countless women? Amid the sudden fanfare of gasps and nervous laughter and voices aflutter, my senses were instantly overwhelmed with the shock of mass nudity. It was a landscape of bare skin; bulging mounds of soft flesh seemed to balloon from their chests, tipped in rubied nipples, some of them wide and flat, others elongated and erect, shuffling together and wobbling about as they reacted to the sight of our own bodies with whimsy or terror. There were curvy, feminine thighs, one after the other, all in rows, their panties completely removed, leaving only one dark mass of pubes after the other, broken up by a perfectly trimmed landing strip or shaven mound with two hairless lips. I stood transfixed at their wild, hairy nudity, their bountiful breasts, alert nipples, and obvious titillation at the shock of our mutual, extreme exposure.\n\nAll at once, a murmur arose from both sides of the room; there were gasps, breathless commentary, and giddy laughter all mixed in a long-evolving group reaction to the scandalous sights we faced from either side. I don't know why I felt surprised at the sight of the other men, perhaps out of a lingering fear of embarrassment. However, to my left and right there were plenty of astonished men who, in the span of a mere thirty seconds, developed fully erect penises, some quite massive. Other than the slight redness I observed on their faces, they seemed otherwise unflustered by the proud display of their protracted members, sprouting triumphantly outward toward the women with a pair of contracting testicles beneath.\n\nOut of the corner of my eyes, I noticed the movement of cameras eager to capture the moment. I imagined what it looked like from the viewer's perspective -- sliding smoothly across our astonished faces, capturing the glassy excitement in our eyes, while another camera journeyed over our lower halves, scrutinizing the twitch of a curious penis, the pulse of a growing shaft, and finally the red anger of a fully distended cock. Another pair of cameras across the room navigated feminine bodies with the same intense focus.\n\nThe women were largely amused or embarrassed by the sight, reminding me just how unprepared many of them may have been for the situation that was now unfolding, most of them no more experienced with the task that lay ahead than I was. Several covered their mouths, some shook their heads with grins of false disbelief, others meekly covered themselves and laughed nervously against friends' shoulders who could understand and sympathize with their apparent shame.\n\nI wondered: were they dared to do this, was it a bucket list thing, as it was for me? Would they really go through with it? I wondered if they wondered the same things of me.\n\nI felt a wave of freedom wash over me, taking with it every ounce of embarrassment and guilt I had over having been a walking boner for the last few days. In that room, I suddenly had a license for free sexual expression -- we all did. Still lingering in a state of excitement and astonishment, I toured the bodies across from me, a mixture of liberated college students eager to reveal their bodies in defiance of social taboos, freedom-seeking hippies, curious young professionals, and even a smattering of somewhat more mature women I imagined had carefully stowed away their wedding rings before sneaking off for a secret adventure they would tell no one about. I stood and faced them all squarely, my penis growing, thickening, rising into the air like so many others around me, until my swollen cockhead pointed out across the room where it became subject to the curious examination of what felt like a thousand eyes.\n\nI almost didn't know where to look; my field of vision reduced to a collage of beautiful, buoyant titties and every style of naked vulva imaginable. I watched them all exchanging wide-eyed disbelief, holding their stomachs as they laughed nervously, sending their boobs tumbling about their chests. I watched their knees turn in as they took defensive stances, doing nothing to hide the hairy triangles between their legs. I watched them gawk, spin around, and cover their faces with amusement and horror, the spectacle becoming only that much more arousing the stronger the display of shock.\n\nWhen I turned to see what David was doing, I was taken aback. I'd expected to see a wide grin, an infantile swagger, that bit of masculine bravado that I had pegged him for. Instead, he seemed to be in a state of stupefaction, staring pointedly at a spot across the room with a stone-cold stare. I followed his eyes and spotted a young, college-aged woman. She was gorgeous; long, free-flowing sun-drenched hair, two-bouncy, spirited breasts with nipples that looked like raised pink coins, and a pair of delicate, rosy pussy lips peeking out from a soft bed of light brown pubic hair.\n\nShe seemed as struck by the sight of him as he was of her. Admittedly, I thought the worst at first... you know... that they were... but then determined that it couldn't have been that. It wasn't that she looked mortified; it was a kind of shock flecked with arousal, one that brought a distinct flush to her neck. I surmised that there was some connection between them, but it was not obvious what it was.\n\nPoor Walter seemed like he was about to faint. Not knowing where to look, he stood there, his shaky legs buckling as he frantically covered his groin, his eyes darting left and right, devouring the sight of hundreds of naked female breasts with a sense of mystification, and then at one hirsute vulva after the other, his jaw silently dropping as they exposed their fuzzy labias one by one.\n\nThe next announcement was the one that invited us to mingle while they conducted interviews to facilitate some \"pairings.\" I wondered what criteria would be involved in selecting partners willing to be filmed for highlights. At any rate, our two physically distinct crowds didn't exactly run to merge into one. Fortunately, the magic of filmmaking was such that the process was slow and stop-and-go, rather than just filming the events as they played out. Therefore, we took the time we needed to warm up to our exposure.\n\nFor the most part, the women stayed put, expecting us to come to them. The men shifted slowly in their direction, trying not to seem too eager, but perfectly ambitious about the chance to wade through a crowd of completely unclothed women. A few daring men summoned up the courage to step forward, appearing to hold their breath as they marched toward the center of the room, boldly displaying protracted erections that swung stiffly to and fro as they advanced. One could tell they were desperate for acknowledgment by the women who did little but share startled looks or stare blankly, after the initial burst of quiet laughter had washed over the crowd.\n\nLittle by little the intermingling occurred, however, it took a while for conversation to start up again as people silently wandered about, glancing here and there, trying not to be too obvious when their eyes quickly darted down to curiously examine a penis or a vulva. The men, in particular, seemed to have their senses constantly distracted by the loose sway of naked breasts in all directions, their faces quickly turning to catch sight of every woman's chest as she turned this way and that. I opted to walk behind women, secure in knowing that their eyes couldn't be on me and content to gaze at the wiggles and wobbles of naked female butt cheeks.\n\nPairs began to form in anxious attempts at mild flirtation, feeling out the situation slowly. I watched a young bearded man standing naked before a petite young woman with long, jet black hair, tapping his foot nervously as he said something to her. She laughed and turned momentarily away, then replied in a voice tinged with fear. It was inevitable that the movement caused by her body shaking with laughter would call attention to certain physical features. As they bobbled about, he impulsively glanced down at her two perfectly rounded titties and smooth pussy lips. She stole a peek at his muscular torso and long, flaccid shaft. Their eyes returned to each other's, chests heaving rapidly in and out as they processed the brief sight of one another's genitals each had permitted the other to take.\n\nI didn't stray far from my new comrades, but our relative security was briefly broken as two production assistants requested David's participation in an interview. Walter and I remained more or less in the vicinity we'd migrated to, anxious for him to return and fill us in on what was going on. Before long, David returned to the group and I noticed he had fallen strangely silent. Intuitively, I wondered if it had something to do with the young woman he had spotted earlier. It didn't take long before he leaned over and confided in me.\n\n\"You wouldn't believe it,\" he muttered, shaking his head. I was aching to know what could possibly have rattled a man like that. \"There's a girl out there that I know...\"\n\n\"Oh yeah,\" I replied. \"I saw that you noticed someone. Who is she?\"\n\n\"She's cute, right?\" he was quick to ask as if seeking my justification for whatever he was feeling.\n\n\"Totally,\" I said, speaking truthfully, as well as somewhat relieved it wasn't whom I briefly feared it was.\n\n\"She's one of my daughter's friends -- Katie. I haven't seen her since Lauren went off to study abroad in Italy earlier this year.\"\n\n\"Whoa. That must be weird.\"\n\n\"Yeah... She's from Pennsylvania so I've taken her in a lot when Lauren's home for the weekends. She's...\" He scratched his temple and seemed to be breathing rapidly. \"What a body she's got.\" He paused for a moment and then gave me a serious look. \"That's not... wrong, is it? It's not like she isn't an adult.\"\n\n\"I suppose that's true,\" I said, unsure what to say.\n\n\"But she could be my daughter,\" he mumbled. \"Jesus, Katie's half my age.\" David glanced fearfully around the room.\n\n\"Do you think she'll tell Lauren?\"\n\n\"I don't know...\" he said.\n\n\"She didn't exactly seem freaked out to see you...\"\n\nDavid lowered his voice and turned back to face me. \"Here's the thing...\" he explained, preparing to offer me a critical response to the observation I'd just made. \"I think she has a little crush on me. I mean -- I know she does.\" I raised my eyebrow at him, starting to understand. \"Don't get me wrong--\" he was quick to explain. \"I've always just brushed it off as girls and hormones. But she... See, I have a finished basement with an extra bed, so I always set her up there when she was around for the weekend. One night, I went into the kitchen to get a bite to eat. I heard her come up the basement stairs and saw her peek her head into the kitchen. She asked if I minded if she got a drink.\"\n\nI nodded to him and would have been on the edge of my seat if I had one.\n\n\"It was perfectly innocent. I welcomed her and offered anything she found in the fridge, and she took a glass of water. She had on an oversized t-shirt and fuzzy socks... you know...\"\n\nHis voice trailed off as if deciding against detailing the clues by which he had come to understand her infatuations. He swung his head around in an obvious attempt to spot her again. \"I don't know if I goofed or--\"\n\n\"What do you mean?\"\n\nDavid turned back and gave me a funny look. \"Well, the following night I came back down for a snack. I just... wanted to see her again like that. I'll admit, I made sure she knew I was there by making a little noise. Sure enough, within seconds she was at the top of the stairs and just... smiling at me. Katie came in and joined me; she was wearing the same thing as the night before, and no bra... just a pair of loose tits that were all over the place.\" He moved his hands about as if to indicate the movement of a springy pair of breasts.\n\nDavid seemed to be sweating; his eyes became distant as he traveled back to the place and time he described.\n\n\"She leaned over the kitchen island to ask what I was eating, pressing her boobs together and all that; it was obvious she wanted to tease. That perfect, round ass... she just stuck it out and was waving it in the air. I... don't think she was wearing any panties... there was no outline. I thought maybe she took them off before coming up. This became our thing, a midnight snack together, but she kept getting bolder and bolder until... one night she brushed against me by the fridge... She looked up at me like she wanted to kiss me. I told her Lauren could find out...\"\n\nHe became defensive all of a sudden, snapping out of his trance. \"Look, she's an adult now -- and that fucking body... I just saw her... her everything...\" David waved his hands around in front of her body as if to indicate the location of Katie's boobs and pussy. \"Anyway,\" he concluded, \"when they asked me what kind of woman I'm attracted to, if there was someone that caught my eye... you know. I... I mentioned her. I don't know if I should have or not, but I did. I wasn't thinking.\"\n\n\"Wow, really? What did you say?\"\n\n\"I told them what I just told you!\" he exclaimed, his voice filled with a small amount of worry. \"With less detail, of course. They even had me point her out.\"\n\n\"Well, you were just being honest,\" I said, unsure what I should be saying.\n\n\"Right. She's fully capable of making her own decisions as an adult. If anything were to happen... I'd only be because she wanted... Because we both wanted to... together...\" His voice trailed off again and it was remarkable to see a man so full of masculine confidence suddenly reduced to putty.\n\nI stared at David as he gazed at the floor, his eyes drooping as if weighted down by a pang of immense guilt. However, my thoughts turned back to what I had seen earlier when their eyes met. I saw a girl obviously gripped by a taboo excitement; a girl who stood there flustered, hyper-aware of her exposed body and yet sticking her boobs out instinctively, a girl who seemed transfixed by an older man with strong muscles, broad shoulders, and a hairy chest, her eyes making their way down his body and settling between his legs to indulge in the sight of an admittedly long, thick Italian-American sausage.",
        "I left David alone with his silence, trembling, impossibly engorged, and yet mulling with dread the consequences of the inspiration for his incredible arousal.\n\nChanging the subject, I turned to Walter who had heard none of our discussion, both because David had whispered it to me in confidence, but also because Walter still seemed to be having a crisis of perfect mystification at the wild sight of bodies surrounding him. Embarrassed by his erection, he turned from side to side, constantly facing away from the womens' line of sight as the crowd shifted, except his nimbly-sprouted cock teetered back and forth, swinging out to the sides in a way that only seemed to draw more attention to it. No position was comfortable as he turned this way and that, seeking safety, his skinny chest anxiously puffing air.\n\n\"Nervous?\" I asked, unable to suppress my smirk.\n\n\"Yeah...\" he said breathlessly.\n\n\"It's okay. You don't really have anything to be nervous about. This is probably gonna be the easiest, most uncomplicated way of losing your virginity that anyone's ever experienced!\" I joked. This got a smile out of Walter, who took a sharp breath in and revealed his sentiments with a renewed twitching of his cock that he finally cupped it helplessly with both hands.\n\n\"What are you going to tell them if they call you up?\"\n\n\"I dunno...\"\n\n\"Well, what kind of partner do you want?\" He stared at me blankly, perfectly incapable of forming enough reason to answer my questions. I suddenly felt vastly more comfortable acting as his superior and hiding from my own anxieties. \"Just tell them it's your first time, I'm sure they'll understand. Maybe they'll give you someone that can... I dunno.. teach you.\" I couldn't help but wonder if that was true or not, it sounded more like a fantasy. However, seeing how intimidated he was, I hoped it was the case.\n\nWalter's thoughts on the matter went unheard as we were interrupted by a production assistant who walked by scanning the crowd. \"Hey, how's it going, guys?\" he said.\n\n\"Good,\" I answered, wondering if he was about to select one of us next.\n\n\"You look nervous! You gotta rev yourself up for this!\" the man said, shaking his body and doing a few hops in place. It was easy for him to say, he was the one wearing clothing.\n\n\"Walter's a little anxious because he's a virgin,\" I chuckled, mostly to selfishly deflect from my nervousness.\n\nThe production assistant's eyes widened. \"Oh, shit--\" he said. \"Greg, I got -- guys, I got a virgin here.\" He scrambled to get the attention of another member of the crew nearby.\n\nGreg motioned with his hand, shouting, \"Bring him up! Bring him up!\" Within an instant, they'd whisked Walter away and I found myself more or less alone.\n\nI became instantly self-conscious and needed to go somewhere, anywhere, so that I wasn't just standing around like an idiot. I got a few feet before spotting a young woman walking toward me with her face angled backward over her shoulder. She turned and realized we were headed straight for a collision, then stopped short.\n\nUnable to think of what to say, we stood there briefly in silence, bewildered by our sudden proximity. That was the closest I'd been to one of the naked female strangers I'd been observing thus far. I felt my body instantly stiffen, sticking out my chest, and finding a way to take a quick look between my legs without being too obvious. My equally intimidated companion was a young woman of Mexican descent with an elaborate Dia de Los Muertos skeleton girl tattoo across her arm. I saw her eyes glance casually across my body, well aware of what she was doing but not hiding it well, so I did the same to her.\n\nShe had deep brown skin and two long braids down her back. Her breasts were long and torpedo-like, the nipples engulfing almost the entire tips. Her pubic hair was thin and black but looked bristly. Her labia had a slightly darker pigment than the rest of her skin and was scattered with a light dusting of stubble. It felt so strange to be examining the naked body of a stranger so closely, quickly familiarizing myself with the intricate details of her body which made it so unique and different from everyone else's.\n\nSuddenly, I realized that we had an unspoken agreement that we were free to do this, that I would allow her to casually examine my penis while her breasts and pussy got the full attention of my intense curiosity. I felt like I felt when I was in health class as a kid, sitting there as silent and nervous as everyone else, staring at the glowing projection on the wall that illustrated all the things that happened to a girl's body during puberty.\n\nI let a smile slip, and she caught it. Her lips widened into a grin as silly and unwanted as mine as we settled into the experience of standing there naked before one another, in full-body presentation. The speaker screeched to life again, delivering the announcement that the crew would start recording pairs, followed by groups after things heated up. \"Don't forget to pace yourselves,\" the director's voice said, not shying away from the inherent humor of that statement.\n\nI found the nervousness slowly returning as the quiet moment I had with the young Mexican woman shifted from a physical curiosity into the knowledge that we were just invited to begin having all manners of erotic experiences with the strangers we encountered. Nothing would have satisfied me more at that moment than if she grabbed my hand to lead me someplace safe, laying down and splaying her legs apart as she told me how cute I was, then guiding my cock to that dark, mysterious hole.\n\n\"Excuse me,\" she said instead, gritting her teeth nervously. She hurried off to the craft table, frantically filling and refilling a small cup of water as she sucked down water nervously and cast a fearful look out across the crowded room.\n\nThe crowd split into two camps: those eager for action, and the rest of us, who waited for these special few to take the first steps. I joined a crowd gathering around two apparent strangers, a man who stood above a kneeling girl, who was stroking him to full erection. The audience around me was giddy, laughing and cheering them on, until finally the young woman, satisfied with her work, opened her mouth and swallowed his cock. She kept her fist wrapped tightly around his shaft as she bobbed her head erratically, swept up in the thrill of sucking off a pure stranger while everyone watched.\n\n\"Oh fuck-- ohhhh, yeah,\" the guy groaned, his head tilting back as his eyes climbed to the ceiling, courting the shock and amazement of a crowd who could no longer escape the reality of the situation they found themselves in.\n\nI looked at the girl next to me who appeared to be completely absorbed in the act with wonder. Her eyes seemed glued to the impressive erection being feasted upon, then examined the skills of the woman performing the act, her gears turning, then back to the tall, muscular figure sporting a slick, mighty boner.\n\nSmall human rings like this began to assemble as if galaxies were taking shape in the heavens, each with a white-hot center burning with lust. I saw a couple engaged in a doggy style fuck, followed by a foursome brimming with laughter as the two young women shared a moment of amusement as they subjected themselves to having their pussies eaten side by side. Now and then, a camera appeared, capturing the action before vanishing again. Separately, audio was being captured by a young man with large headphones, a metal box, and a microphone; presumably to lay down a track of heavy breathing and wet, slapping bodies over the montage of endless play recorded by the cameras.\n\nI came upon David standing alone, who didn't see me and appeared to be waiting for something -- or someone. A couple of crew members arrived, sparking in my new friend a visible rise of trembling anxiety. Trailing behind the crew was a noticeably bashful young woman staring down at the floor as she shuffled along. She seemed particularly conscious of her chest where two gorgeous young breasts wobbled playfully back and forth, sparking attention that was no doubt felt with a high degree of embarrassment. When she came to a stop, she finally raised her eyes cautiously, heading straight for David's, then took a heavy breath in.\n\nI immediately understood David's deep fascination with his daughter's friend, Katie. Earlier, I could plainly see that she was beautiful from across the room, however now that she stood right in front of me I found myself even more captivated with her long chestnut curls, the delicate pink gloss of her lips, and the long, seductive line of her bare body.\n\nDavid was already fully erect as he stood there silently transfixed, boldly sporting a sturdy, massive penis. I could sense his potent arousal as he turned face-to-face with this young cause of his desire who had become so secretly drawn to him, risking her friendship with David's daughter to flirt with her father. He stood there proudly, his large, plump balls and thickly swollen cock dramatically on display in front of his body in a show of fierce attraction as if to say to her, \"Here I am. This is what you were burning to see.\"\n\nKatie blinked at his cock with a mixture of uncertainty and admiration, no doubt fueling his ego and driving him further into a fit of desire. He returned her gaze, frantically memorizing every detail of her body, from her round eyes and bright pink nipples to the sweet folds of her naked pussy bathing in a downy mass of pubic hair, down to the cherry-red paint of her delicate toes.\n\nAs the small camera crew began to prepare for the filming of their encounter, an assistant director stalled by prompting an ice breaker.\n\n\"So, Katie, I understand you're in college. What are you studying?\"\n\n\"Oh--\" she said, suddenly distracted from her mesmerized state. Her disposition became suddenly confident, proudly declaring her major and field of interest. \"I'm studying marine biology. I'm interested in the ecology of fisheries and the preservation of biodiversity, especially since society is increasingly becoming dependent on them for sustainable seafood sources.\"\n\n\"Mmm-hmm, interesting!\" the crew member said before glancing over at the cameraman. David smiled proudly at Katie and nodded with approval, causing her to blush and glance down at the floor again. \"So, you know David already, right? I understand that there's a little bit of a crush going on...\" The crew member grinned impishly at her.\n\nKatie's eyes widened as she turned red in response to the blunt admission forced upon her. She cast a look at David again, who was beaming at her, then nodded sheepishly.\n\n\"David?\" the assistant director asked, prompting him to return the sentiments.\n\nDavid softened his expression as he gazed warmly at Katie, who shifted nervously in response to his rapt attention. \"Katie is a lovely young woman, very smart, funny...\" She continued to blush and stare at the floor. \"I've enjoyed our little nighttime chats in the kitchen when you stay over. You're an extremely sexy girl... I love seeing you come up the stairs in your t-shirt and panties. -- I love seeing you out of them, too!\" he laughed. Katie giggled nervously and looked up at him with a dimpled smile. I felt relieved for both of them that this exchange seemed to successfully break the ice a bit.\n\nEager to reduce her nervousness further, the assistant director called out to Katie. \"Just relax and have fun. There's no pressure. Let's have you both do whatever feels natural.\"\n\nDavid approached slowly and gently rubbed Katie's shoulder, whispering something reassuring into her ear, prompting her to nod quietly. She gazed up into his eyes, her deep brown pupils skittish and searching for a tender bond of trust. Katie seemed to receive it from him as he gave her a comforting look before slowly reaching out to touch her body. She flinched as his fingers grazed her hardened nipples, then quivered as his palms gently cupped her sizable, jaunty breasts. I could see how badly David was aching as he gave her young boobs a soft squeeze, feeling them compress warmly in his hands.\n\nI became engrossed with the sheer display of tender affections between them, knowing how momentous it was to share that first moment of erotic touch. Katie's eyes quickly lowered, sheepishly yearning to express her curiosity about his body, yet unable to bring herself to respond.\n\n\"Go ahead, that's what we're here for,\" the assistant director said calmly.\n\nKatie glanced at him and then back toward the sturdy wall of David's body where his enormous erection surged forward. As he continued to caress her breasts with a deep fascination, Katie dared to reach forward, extending her small, trembling fingers until they came in contact with his body, then wrapped them around the warm heft of his elongated shaft, savoring the moment when she felt his hard cock pulsing softly against her digits. David moaned quietly as she gave his penis a series of curious squeezes, then stood there just holding him in her hands. Their eyes met again, and the look they gave one another suggested that everything had changed between them.\n\nThe assistant director seemed occasionally distracted, pacing back and forth and glancing into a small video screen to see what the cameraman saw. He occasionally provided prompts, asking them how something felt, what they'd like to do, and reminding them not to look back at him when he spoke.\n\nDavid slipped his hand down over Katie's thighs and then turned inward toward her crotch where his fingers were quickly devoured by the sparse hair of her sandy-brown muff. Her flesh peeled open, wrinkly and pink, as his fingertips briefly sunk into her body. Katie closed her eyes and moaned as he withdrew them again and began to move them in a circular motion, molding her pliable flesh until it because visibly apparent how wet she had already become. David's intense stare remained fixated on her dewy sex for several moments as she grasped at his arm both for support and comfort.\n\nBecoming bold with his growing readiness for a total shift in the nature of their relationship, David ran his fingers through her long hair and led Katie forward until she buried her face in his neck and he savored a delicate kiss atop her head. After a few quiet moments, she leaned back again and searched for his eyes.\n\n\"You have a beautiful body, Katie,\" he mumbled, prompting her to smile warmly at him. \"May I kiss you?\" She nodded quickly and then watched him lean in to place a soft kiss on her lips. The moment they touched, it seemed as if she'd lost consciousness and slipped into a dream, one that she'd had a thousand times. \"Here too?\" he asked, running his fingers lightly across her nipples. Katie smiled anxiously and nodded again, eager to attempt a show of enthusiasm despite her nervousness.\n\nDavid cupped her breasts again and gave them a slight squeeze until her nipples protruded, kissing one and then the other. He popped them into his mouth, suckling happily, smacking his lips, and grinning as he moved from one to the other. After he was content with suckling her breasts, he leaned in and whispered, \"I would love to kiss you elsewhere, too. Would that be okay?\"\n\nKatie's eyes widened and she stared at him with wonder and enthusiasm before nodding slowly and taking a hard swallow. I sat there and witnessed the moment that David asked the one thing he probably never imagined being able to ask this beautiful, young college girl who still held a long-simmering crush for him. \"I would like very much to eat your pussy, Katie,\" he whispered politely.\n\nFor a few moments, the expression Katie gave David looked a bit like she was about to burst a blood vessel or two in her eyes. Her mouth opened and moved mechanically as if about to say something, but no sound came out. To my surprise, she quickly tried to squat to the ground, grasping David's hand as if to lead him down with her. They lowered themselves to the floor until I heard her soft buttocks greet the floor with an eager smack. She laid back, swinging her long hair down her back and off to the side before attempting to prop herself up on her forearms. It did not appear to be the most comfortable position, but her eyes remained glued to his and seemed almost impatient for him to make good on his request. It was in that moment that I truly saw just how badly she wanted him, how hard the flame she had carried for so long burned, how much of a crisis she found herself in, standing at the precipice of achieving an erotic fantasy that she probably never imagined was anywhere in the realm of possibility.\n\nDavid, too, seemed beside himself with the opportunity as he lowered to the ground to position himself between her legs, his dick bouncing stiffly about, his hands all too ready to wedge open Katie's soft thighs. With a blissful smile, he threw her legs open and glanced up at her as she responded with a startled laugh. Together they looked down at her body where her naked, hairy pussy widened before all of our eyes. The light brown fluff of her pubic hair gathered in a small mass above two glistening folds of skin, then traveled in a thin, almost imperceptible circle around her outer labia to encircle her vagina. David gazed at it in wonder, adoring it with astonished anticipation.\n\nKatie bit her lip and stiffened her body as he began to descend. David ran two fingers up her labia and then split her lips apart, peeling her open to reveal a glorious pink pussy that shone with a liquid sheen under the bright lights affixed to the rafters. \"Oh god...\" I heard David mutter as he gawked at her body. Although he could not have savored the sight of her fully-revealed femininity with any more gusto, he wasted little time in delighting his other senses with the splendor of her body. Bringing his nose close to her sex, he inhaled deeply, awash in the distinct odors emanating from the apex of her thighs. His olfactory senses were fully activated as he delighted in the natural aroma of her wet hole, spread wide before his nostrils.\n\nDavid's red tongue lashed out and met with the sticky pink flesh she offered to him. I watched with fascination, my cock surging wildly, as the tip of his tongue swept up through the cleft of her body, then entertained the hardened nub of her clit. I felt myself reaching downward without thinking, then stopped, embarrassed at my actions. Then I noticed that there were more than enough men stroking themselves that I had nothing to fear. Throwing caution to the wind, I began massaging myself with long, slow strokes, absorbed in the sight of David licking and sucking hungrily at his partner's fresh womanhood.\n\nI observed that Katie was rather generous in her output. She was completely sodden, even her inner thighs were speckled with surely fragrant moisture that seemed to bubble up from the depths of passion. Nothing could have delighted David more, who buried his face in the liquid expanse of silken flesh she offered to him, content to lick and suck at her lips until his face was messy and smeared with cum. The camera crew was nimble and dynamic, attempting to catch every reaction, every thrill that David enjoyed, every squirm and squeak and moan that escaped Katie's lips.\n\n\"That's wonderful, Katie, you're both doing a fantastic job!\" the assistant director expressed happily, confirming with a nod to the cameraman that the last sequence was precisely what he wanted. \"Perhaps you'd like to return the favor? What do you think?\" Katie turned and smiled shyly at him.\n\nDavid sat up enthusiastically, leaning back and opening his legs. There sat his swollen balls and towering above them was a massive erection, wavering stiffly in the air as if waiting patiently for Katie's lips. She took one look at it and turned red, briefly covering her face and then peeking out at it as David chuckled.",
        "\"What's the matter?\" laughed the assistant director. \"Are you feeling shy?\"\n\nKatie took a moment to regain her composure. \"No...\" she said. \"I just... I never thought I would actually... you know... see his penis...\" she laughed nervously, her voice growing quietly insecure.\n\n\"Well, there it is,\" the assistant director said matter-of-factly. \"What do you think? Shall we resume?\" The way he rushed them suggested he was thinking about the dozen other couples he had to move on to next.\n\nKatie gave a quick nod, her face still flush with intimidation and arousal.\n\n\"Great,\" the assistant director said, circling back around to the video screen. \"What would you like to do with his penis?\"\n\n\"I...\" Katie began, her voice breaking. She raised her eyes and considered David longingly, then reached down and grasped at his swollen shaft, tugging at it anxiously, her chest inflating and deflating with long, deep breaths as she processed the sensation of the length and hardness of his massive cock.\n\n\"I want... to...\" she continued, shaking with incredible embarrassment at her impending admission, yet still motivated by determination. \"I want to suck you off...\" she croaked, staring at the fat head of his cock as it bulged through the hole formed by her firm grasp.\n\n\"Yes... baby,\" he whispered as he pushed her head downward, clearly high on adrenaline and self-satisfaction as he savored the extent to which she was so eager to devour his robust masculinity. I could feel the excitement of a fantasy come to life as it washed over him. Katie opened her small mouth and took him inside, immediately engaging in a series of movements she seemed to have practiced in her mind so many times. David ran his fingers through her hair, cupping her head and guiding it up and down to apply added pressure to her frantic sucking. The camera zoomed in as if equally frantic for a dramatic closeup.\n\nWith a small gag and a cough, Katie finally spat out his cock after a few minutes, then caught her breath and gave a good swallow to consume an excess of saliva. She seemed flush with arousal and eyed David fiercely. I knew that look; it was obvious she was anxious to fuck.\n\nDavid took the hint and swept his hands under her body to take control of the situation, preparing her for missionary. As he spread the two damp flaps of hairy flesh open, David gazed at the slippery pink chasm beneath his eyes and inhaled deeply as if anxious to renew his intoxication with her scent. He wedged her legs open wider until she was fully expanded, the soft mounds of her breasts wobbling about her chest as she gasped and arched her back. As he angled himself at the entrance to her body, she lifted her head slightly, casting a look of anxious curiosity at the object about to invade her body.\n\nDavid entered her slowly at first, forcing the swollen head of his cock through her vagina as her labia stretched further open. After she processed the initial surprise, he urged it forward until it slipped smoothly in. Her body strained and widened to fit him inside. It looked almost painful, but her soft sighs instead suggested a growing enjoyment of the sensation; the fullness provided by his engorged member as it invaded her warm, slippery depths.\n\n\"Ohhh, yeah, that feels good,\" David said with a smile as she reached out and anchored her hands against his chest. A smile flickered to life on her face as she realized she was in no pain and enjoyed the sensation of his presence within. She laughed breathlessly, motivated by the sight of his delight. David began to rock his hips back and forth, thrusting slowly and observing the way her snug vagina devoured his cock. He smiled warmly at her as if concerned for her comfort and enjoyment. \"See that? We're fucking!\" he said happily. \"Feels good?\"\n\n\"Yeah--\" she gasped before offering him a nervous giggle. As she began to relax, he thrust faster, causing her breasts to sway up and down, her hardened nipples dancing about happily. Her twinkling eyes remained glued to her hairy mound as he vanished inside and back out again, coated in her moisture.\n\n\"Katie... you have such a beautiful pussy...\" he mused, gazing in wonder at her body. She whimpered and gazed up at him with a look that expressed a certain vulnerability and awe. \"Oh fuck... oh god... those big titties...\" he mumbled softly before clutching at the two large boobs bouncing spiritedly about her chest as they fucked. A bead of sweat ran down his temple as he watched their hypnotic movement, bobbling about against his palms.\n\nShe seemed to be enjoying his attention as she suddenly began to buck her hips in response to his praise. I sensed a deep want for his approval, for him to make her feel beautiful and desired.\n\nDavid tired sooner than I thought he would, perhaps due to age beginning to catch up with him. However, it proved no obstacle as they smoothly transitioned to a new position. Once David was laying on his back, Katie climbed atop him and immediately mounted his skyward cock, squatting down on top of him until it filled her pussy once again. She began to bounce happily on him, placing her hands gently on his abs and tilting her head slightly back with a serene look in her eyes. They continued like this until David's lust grew too much for him to bear and he swung upward to embrace her.\n\nKatie submitted to David's arms as if she wanted to be coddled by his powerful, impassioned embrace. Her wide eyes never left his, even as he briefly toured her body now and then. Her large, springy breasts rapidly tottered about as she sat comfortably in his lap, fully relenting to the frantic gyrations of his hips. As Katie's body rattled this way and that, her long hair lashed about the long curve of her back, nearly down to the fine perspiration of her ass where the pressure of David's hands left ruddy marks in her cushiony flesh.\n\nWhen she finally looked down, just for a moment, she found his protracted manhood creamy with her sustained bliss and emitted a sound that could only be described as a joyful cry, her limpid eyes beginning to stream until salty droplets reached her lips as they widened into a beaming smile. Her bliss was divine; drunken, inexplicable, immeasurable. I couldn't imagine what she was thinking, in the midst of receiving all that she had ever wished for from this incredible object of her secret affection.\n\n\"Katie!\" David groaned, clearly suffering an intense emotion that brought him to the brink of pleasure before he wrestled control of his urge for a climax. \"You have such a tight pussy...\" he muttered, gazing at her in wonder.\n\nChoked with her own emotion, Katie cupped his face, her smooth hands running over the rough texture of his stubble, and then pressed her lips squarely against his, kissing him deeply, and then plunging her tongue into his mouth until they indulged themselves with the taste of one another. David wrapped his arms around her, pulling her in close until her hardened nipples were buried in his chest and the soft expansion of her breasts were amplified in all directions.\n\n\"Ngh! Fuck me!\" Katie chirped, to my surprise. Overcome with the threat of a looming orgasm, she threw her arms around his neck and rode him faster, rolling her hips against his hard body with an urgent humping motion, frantic with the desire to drive his distended cock deeper into her hot quivering flesh. \"Fuck me Mr. Testa!\" she blurted out with a throaty voice, staring him down with near angry desperation. \"I'm gonna have an orgasm!\"\n\nAdmittedly, Katie's relative silence had left me wondering if there was any lingering reluctance on her part, but in the height of passion, she showed her true colors, breaking through the wall of fear and embarrassment about being observed bearing her desires so openly.\n\n\"Oh god... baby... come for me, honey...\" David intoned, beside himself with a dizzy bliss.\n\nKatie bounced like mad on David's lap, her long hair clinging to her sweaty cheeks as she reached up and cupped her boobs with a smooth sweeping motion. Her jaw hung loose, expressing a state of constant bewilderment at her sudden freedom to exhibit herself as wild and horny. She gazed down in disbelief at the shiny, stiff member plunging rapidly through her slippery hole with ease as her body began to swell with the tingle of anticipation. Katie appeared to be absorbed in the sound of her sweaty ass smacking against David's body, as well as the gentler whack of his heavy balls against his thighs as the moist suction of her body tugged them up and down. I could see that her senses were about to be shattered in an incredible wave of vaginal secretions.\n\n\"I'm--- gonna come!\" she squealed musically.\n\nWithin seconds, I observed every detail of her orgasm, from the rippling passion that washed through her body, to the trance-like expression on her face, to the spastic jerk of her hips as her muscles contracted. I could almost smell her; the intense, erotic odors of her body just barely reaching my nostrils by the time she bathed his cock in a thickly viscous cream. I could almost feel the squirt of her pussy as it erupted with pleasure, leaking down until David's balls were coated with her glistening juices.\n\nKatie seemed exhausted and frantic for his touch as she threw herself upon his chest. Tears of happiness made their way down her cheeks as they toppled over and lay down together, coupled in a warm and passionate embrace, having long forgotten about the cameras, the crew, and the onlookers, such as myself. They were lost in a tender moment, cocooned in perfect, mutual attention that had no room for anything or anyone else.\n\nThe cameras backed away and the crew receded.\n\n\"We got it. Great. Check the gate,\" the director said, quite simply, before strolling off with an air of satisfaction.\n\nI stepped quickly away, reeling from what I'd just seen. After hearing about David's infatuation with Katie and witnessing firsthand the impact she had on him, the sight of their highly-anticipated union left me so incredibly aroused and excited for them that I feared the slightest glance from an attractive woman would cause me to blow. I wandered off to the edge of the room for a moment, anxious to catch my breath and clear my head. Eventually, however, I turned my attention back to the rapidly increasing activity taking place everywhere I looked.\n\nI quickly searched for Walter, sure that he was off somewhere quaking with fear and able to cool me back down with some idle banter. Instead, I found him standing in front of a few crew members with a light meter held squarely in front of his sweat-shined forehead. Moments later, a woman was ushered in, a good several years older than Walter. I could tell instantly that she was trouble; her spirited gait oozing with confidence and a sense of devilish amusement.\n\nShe took one look at Walter and laughed. \"Is this him?\" she asked the crew.\n\n\"That's him, yes,\" someone mumbled while adjusting a tripod.\n\nWalter stared back at the woman cautiously, barely able to move, his hands still masking the family jewels. She smirked and considered him thoughtfully. \"Very cute,\" she mused aloud to ensure that he heard, before reaching up to tie her hair back into a ponytail with a navy blue elastic band stretched wide between her fingers.\n\nThe young woman lingered there with her arms raised, casually fixing and refixing her hair like she were about to simply hop on the treadmill or go for a run. All the while, she seemed conscious of Walter's anxious gaze as if wanting to stoke his intimidation even further for her own satisfaction. After a few moments, she began to ease her body to one leg and stick out her chest, letting her two sizable breasts bob deftly about, her tall, statuesque body full of sensuous curves and dripping with open sexuality. She showed off the thick, black bush sprouting between her legs as she shifted her weight to the side, bluntly announcing her natural femininity.\n\n\"I'm Lisa,\" she said finally, satisfied with herself and taking a step forward to extend a hand.\n\nWalter wedged one hand tighter against his balls while extending the other, trembling as he weakly received a handshake. \"Walter,\" he replied, almost inaudibly.\n\nLisa laughed again at the sight of him. \"Relax! This'll be fun. I'll take good care of you.\" Walter took a gulp and nodded. \"So Walter... you're a virgin, yeah?\" she asked, suddenly taking on a compassionate tone.\n\n\"Uh-huh,\" he mumbled.\n\n\"Okay, that's no big deal. How funny that you came here to lose it! I like that.\" Walter could do nothing but stare at her. She observed his silence for a few moments, then let out a brief sigh. \"Can I tell you something?\" she asked, the smirk on her face growing.\n\n\"Okay...\"\n\n\"I think you're pretty cute. I'm happy and honored to be your first partner.\"\n\nWalter's eyes bulged and I saw his chest inflate as if he needed this verbal confirmation about what she was going to do with, or to, him. A smile flickered to life on his face as he took a sharp breath in. \"Th-thank you,\" he stuttered. She meant business -- Walter was caught in her spider web and I knew she was about to claim absolute dominance and control.\n\nLisa beamed at Walter and then lowered her eyes. \"But you should really try to relax a little if we're gonna do this.\" She reached out and softly ran her hand up and down his arm. \"Can I see what we're working with here?\" she asked, glancing down at the two hands crisscrossed over his crotch.\n\nWalter inhaled suddenly, his body taut with tension. \"Oh-- okay...\" he mumbled.\n\n\"Okay, I'd like that. Let's have a look at that cock of yours,\" she said cheerfully. \"Is it big?\"\n\nLisa reached down with both hands and gently grasped his wrists, then moved them wide to the side to leave him defenseless. I saw Walter flinch as she removed all sense of security he had remaining, his knees buckling together as he found himself suddenly nude before this woman who gave him unexpected attention. Nothing looked more adorably pathetic than a guileless young virgin who hid his incredible curiosity about women behind a thick veneer of intense terror. Walter gasped as his penis popped outward and bounced once or twice in front of his naked body.\n\nAs if intending to be an antidote to his obvious humiliation, Lisa laid it on thick, clearly indulging her sense of amusement at Walter's awkwardness and wishing to inspire confidence in a mind so full of inhibitions. \"Whoa!\" she exclaimed, gasping at the sight of his erection exaggeratedly. \"My, what a big dick you have!\" she giggled. Caught off guard, Walter showed his first sign of genuine excitement, becoming instantly flustered and willing to buy every little compliment she offered.\n\nPlacing her hand beside her mouth, Lisa mock whispered to him, \"You're supposed to say something like, 'All the better to fuck you with.'\" Walter sputtered before emitting an awkward laugh. \"Okay, I get it. You can't say stuff like that yet. We'll work on that,\" Lisa chuckled. \"Anyway -- what do you think of my body?\" she asked, taking a step back.\n\nLisa stood before him, her arms outstretched, two large breasts with crisp, salmon-colored nipples erect and pointy. Her hairy mons virtually hiding two fuzzy lips, sandwiched perfectly together between her thighs. Walter stood there, clearly feeling awkward to examine her genitals, but nevertheless absorbed in his most direct observation of the female anatomy. He sheepishly looked away when he became aware of her keen observations of his curiosity.\n\n\"That's okay, don't be bashful. This is my pussy,\" she continued with her cheerful demeanor, taking note of his immediate interest in that area of her body. She arranged her fingers in a triangle shape and pushed them outward in all directions. Her thick pubic hair parted and gave way to a velvety expanse of reddish-pink flesh. \"It's very tight and wet inside. I'm not even sure it can fit such a large dick!\" She threw her head back and laughed heartily at her cause for amusement. Walter joined her, nervously laughing as his penis twitched and jerked with obvious excitement.\n\n\"So... have you ever even... um... touched a woman's boobs before?\" Lisa asked, peering curiously at him.\n\n\"No... never...\" he said.\n\n\"Would you like to?\" Walter nodded enthusiastically. \"Go ahead!\" she chirped, arching her back slightly to extend them forward.\n\nWalter quickly raised his hands in unison and placed them firmly against her breasts, then closed his fingers around them as if he was honking two horns. As unsexy as it was, it seemed to be an enthralling experience for Lisa who was endlessly aroused by his witlessness. Walter was too deeply absorbed in what was going on to understand the kind of fetish she had for inexperienced, meek men that could easily be controlled, instructed, and corrupted. The only thing that must have registered in his mind was that first sensation of the soft squish of a pair of beautiful female breasts. All at once, his innocence appeared shattered, his stance changed, his demeanor became desperate; he'd had a taste of what she offered and he instantly wanted more.\n\nLisa squatted down in front of him happily, reaching out to gently touch his penis, moving slowly so as to not startle him. Nevertheless, he still flinched the moment her fingers came into contact with his body. As she began stroking him, Walter continued to play awkwardly with her breasts. So sensitive to her touch was he, that within seconds I could see his cockhead beginning to exude small bubbles of precum.\n\nWorking him with long, twisting strokes, Lisa observed Walter's eyes as he seemed to drift off into another world and leave the room entirely. She aimed to draw him back in, arresting his attention with a question. \"So what do you do, Walter? You're in school?\" She had the eyes of a huntress; I suddenly wondered if this is what a cougar looked like years before she grew into the role.\n\n\"Yeah, I... um... I'm a junior in college.\" He struggled to speak, answering with halted speech in response to the firm pressure she applied as his cock squeezed through her grip. Lisa reached down between her legs and slipped her fingers into the forest of hair sticking out in all directions. When her fingers emerged again, they were shiny and glistening. Walter gave a slight jump when he saw this, startled by the sight of the excess moisture from her vagina as she smeared it over his cock for extra lubrication. I instantly recognized the moment he got his first whiff of a woman's fragrance as the powerfully intimate scent of Lisa's pussy reached his nostrils.\n\n\"I... um... work in... the math department...\" he continued, choking on his words as he tried to savor the odor.\n\n\"What a surprise, I'd never have guessed that!\" she said, her face lighting up. She then snorted a laugh and wrapped her arms around his body to give him a tight squeeze, making him look like her personal plaything, his innocence just waiting to be corrupted.\n\nThe cameraman gave a silent thumbs-up. \"Okay, we're ready,\" the assistant director said, turning his attention to the couple.\n\n\"Okay, here we go, Walter,\" Lisa said, brimming with excitement. \"I'm gonna suck that big dick now, okay?\" Walter inhaled sharply and nodded at her. \"Hang on tight, my friend.\" Lisa trilled with laughter at the expression on his face.\n\nLisa wasted no time in sliding his shaft between her lips and over her tongue, emitting a deep \"mmm\" the moment she took him inside. Walter's eyes seemed to bulge in their sockets as he looked down and began to process the sight and sensation of his cock inside a woman's mouth. Moreover, Lisa's approach to sucking him off was audible, nasty, and messy. She wanted to hear the sounds of her efforts, to see the way her spit glazed and oozed down his long shaft. She lifted his member into the air and dragged her tongue dramatically up the underside of his cock, all the way to the tip, smirking as she became aware of how the camera was eating up the drama.",
        "Before long, Lisa's head was swinging back and forth with a full-throated bob as Walter braced himself, gazing in astonishment at her as he throbbed mercilessly in her mouth. \"Mmm... you're so hard, I love sucking your cock,\" she muttered during a brief pause. Lisa went back to work, relishing the opportunity she had been given and obvious about her enjoyment over his constant whimpering.\n\nI watched Walter's disposition begin to change as he gazed in absolute amazement at his dick moving through her mouth. He exhaled suddenly and shuddered. I saw his face break out into panic as his legs began to buckle and shake. \"L-- Lisa...\" he whispered, barely able to speak. \"Ugh!\" he added with a sudden groan.\n\nNow in a cold sweat, he gave birth to a series of high-pitched groans, his body shaking almost violently as his hips began to grind toward her face. Lisa's eyes shot open with brief surprise, then settled into what looked like an expression of both humor and pity. I knew at once it was the look of a woman whose mouth was suddenly flooding with an unexpected torrent of warm semen.\n\nWalter looked mortified and frantically pulled away, wiping himself with a look of pure embarrassment. \"It's okay, it's okay, babe,\" Lisa rushed to say after hastily gulping down his premature offering. To her credit, she handled it like a pro, rubbing his arm to calm him down and soothing him with looks of satisfaction at the cum she just swallowed. \"Let's get you cleaned up and make sure you're ready for round two,\" she chuckled. Still hard as a rock, Lisa leaned back in and took him inside her mouth again. She sucked gently for a few moments, then licked the tip of his shaft until he oozed no more.\n\nRather than let him dwell on his embarrassment, she was wise to lead straight into the next task. \"Okay, honey. I've taken care of you,\" Lisa mused as she finished and wiped her lips. \"Now, you need to learn the most important thing: how to pleasure a woman. Okay? You're gonna practice eating my pussy.\"\n\n\"Okay...\" Walter replied, his face lighting up. It did not seem that he had any choice in the matter, but Walter was perfectly on board.\n\n\"Okay, what?\" she continued. \"I told you we're gonna work on speaking up...\" Lisa cupped her palm and placed it to her ear as if listening for what he wanted.\n\n\"I... uh... I want to eat your pussy.\" Walter turned beet red, being entirely unaccustomed to saying something like that, at least not out loud.\n\n\"Ahh, so Walter from the math department has a dirty mind, after all!\" she exclaimed, making herself laugh gleefully. \"I like that... I like that...\" Lisa sat down on the ground and leaned back, grinning. Propping her knees up in the air, she wedged her hips open forcefully and spread herself wide for him. \"Okay,\" she growled. \"Eat that pussy, honey.\" Her eyes twinkled with excitement and I knew she was high on the thrill of dominating an inexperienced young man.\n\nWalter quickly threw himself down between her legs with the first sign of wild enthusiasm that I had seen out of him. He nestled his face gently into her bed of pubes and began to lick at her labia in a mechanical, repeated motion. \"Harder honey,\" she grumbled, \"Spread me open.\" Walter reached forward and separated her outer labia with his fingers and then continued to lick at her glistening pink flesh frantically as Lisa provided light instruction.\n\nThe feverish enthusiasm that Walter demonstrated sparked great interest in the cameraman who moved in closer for a detailed shot of his face buried in the wide, hairy pink expanse between Lisa's legs. She seemed to be growing impatient; reaching forward to grasp Walter's hair and mash his face up against her genitals.\n\n\"Harder!\" she demanded while watching him like a hawk. He finally began to vary up his technique, exploring curiously with sucks and licks in different places and different styles, all the while steered by Lisa's physical guidance as she ensured that his face was messy and coated with her sticky emissions. \"How do I taste?\" Lisa asked. Walter's inaudible, muffled voice emerged from between her legs. \"What's that?\" she replied, releasing her pressure a little.\n\n\"I love your taste and smell!\" he blurted before resuming the willing execution of his curiosity and hunger. Lisa groaned and leaned back as if she was about to melt into the floor. She moaned, finally exhibiting a moment of weakness and pleasured vulnerability. For several minutes, Walter went at it like a champ, listening to Lisa's coos and determined to learn how to spark her pleasure.\n\n\"Okay, can we get a shot of insertion?\" the assistant director asked, satisfied with the footage so far.\n\nLisa shot up excitedly, throwing a thumbs-up sign into the air in his direction. Walter walked forward on his knees, holding hers apart, his stiff cock wagging back and forth in front of his body as he positioned himself anxiously between her legs. The crew had casually labeled it \"insertion\" but to Walter, it was more than that. A small bead of sweat ran down his temple as he held his penis with a trembling hand and pushed it eagerly inside her body with a soft moan.\n\nWalter seemed to be in a trance, his eyes glued to the sight of his cock slipping in and out of Lisa's vagina, encircled by a ring of hair that had quickly grown sticky. \"Walter...\" Lisa grumbled. \"You've gone silent on me again...\"\n\n\"Mmgh... I -- I love your pussy hair!\" he blurted out as if surprised by his own voice.\n\nLisa snorted. \"It's pubic hair, my friend.\" She narrowed her eyes at his, a slim grin stretching across her face. \"You like a hairy girl? You like a nice hairy pussy?\"\n\nWalter's jaw dropped and he stared at her, astounded by the dirty things coming out of her mouth. His face moved from shock to becoming full of intense crisis, twisted into a grimace of pleasure and bewilderment as his hips shot back and forth in a hurried, frantic motion. His eyes were all over his body, first fixated squarely on her wide, creamy, pink hole and then at the two large breasts rocking back and forth upon her chest. Suddenly, Walter's hands shot forward and he grasped at her jostling boobs to squeeze them, anchoring himself as he groaned and began fucking her harder.\n\n\"That's it... you can give us more...\" the assistant director said as the cameraman became increasingly animated, zeroing in on the action.\n\nLisa was beside herself with pleasure at long last, alternating between squealing joyfully at the sight of his enthusiasm and mewing like a cat. She wanted nothing more but to egg on her innocent partner and give the crew everything they wanted, further turning herself on in the process. \"Fuck me, Walter-from-the-math-department!\" she shouted gleefully, reaching up briefly to run her fingers through his hair as he whimpered. \"What's that? Don't be shy, babe. Use your outdoor voice,\" she chuckled. \"Say what's on your mind!\"\n\n\"Ngh!\" he gasped, his body shaking visibly. I stood there astonished at his incredible awkwardness and virginal, sexual catharsis. He continued mumbling awkwardly, overwhelmed with the significance of losing his virginity. \"I'm-- I'm fucking you...\" he muttered in disbelief and under great pressure to respond to her demands to say something. \"Oh god, I'm fucking a wet pussy!\"\n\nThe innocent outbursts seemed to be driving Lisa crazy as her hips began to jerk and spasm in response. \"Ohhh, yes...\" she droned, \"You're making my pussy so wet, honey...\" Her back suddenly arched as she squealed with delight. Between panting, she exclaimed, \"Walter, baby -- fill me with that big dick!\"\n\nWalter exhaled deeply and shivered, \"Oh god... Lisa...\" he whined as he drove his hips even faster, exhibiting an increasing speed and aggression and plunging his cock deep inside her gaping pussy reddish from friction.\n\n\"Yes! Walter! Keep going! Keep going!\"\n\n\"Mmh! Lisa!\" he gasped breathlessly.\n\n\"Make me squirt, I'm close!\" Walter put his head down and fixed his stare on the playful spring of her breasts, driving his hips back and forth as hard and fast as he could. \"Yes -- ohhh, fuck, yes!\" Lisa moaned as her hips jerked forward a few times and then remained extended as she grasped at his body. Her body looked hot, sweaty, and flush. She resumed pumping her quivering hips, slowly, moaning over and over as an orgasm rippled through her body. Finally, she fell limp and gazed up at him before stroking his cheek.\n\nWalter collapsed onto his heels, gasping for breath and staring at Lisa in wonder. His cock, still coated in juices, extended triumphantly outward toward her, this time without any of the shame he had felt earlier. \"You did it!\" she laughed, before giving him a high five. Walter chuckled excitedly and beamed at her.\n\n\"Great, thank you,\" the assistant director said, turning to his cameraman. \"Mike, I got another couple over here. Quick.\" The crew raced off toward another cinematic opportunity, leaving Lisa and Walter panting on the floor together.\n\nAlthough I had been looking for a brief delay from the overwhelming excitement, all I managed to do was make myself even more desperately horny. What was I doing and why was I so intimidated? I couldn't answer these questions and couldn't fathom that Walter was already getting more action than I was. Not only that, as I lingered a few moments more, I discovered Lisa's interest in corrupting Walter's innocent mind had only grown stronger.\n\n\"Who do you think you'd like to ask?\" she said with an air of curiosity.\n\n\"Huh?\" he said.\n\n\"Well, I want to leave you with the confidence to go ask other girls,\" she said proudly, having taken him under her wing as a kind of project.\n\nWalter gave an involuntary glance toward a curvy Asian girl in glasses standing awkwardly by herself several feet away. She seemed extremely self-conscious, hyperaware of the presence of her ample, weighty breasts jutting out from her chest with fat red nipples, and the visibility of the thick black wisp of hair between her legs. I instantly pegged her as one of the college girls who reluctantly came with a small group under the influence of peer pressure, a perfect fit for Walter.\n\n\"Her?\" Lisa asked eagerly. \"Okay, go ask her!\"\n\n\"You mean... just...\"\n\n\"Yeah! Go for it! I bet she'd love to.\"\n\nI watched in astonishment as Walter slowly left Lisa's side and wandered anxiously in the young woman's direction. For a few minutes, I saw them talking, smiling, exhibiting embarrassment. I saw him ask her something, but I could not hear anything. All I saw was her widening eyes, the blushing of her cheeks, her deep breathing before she bit her lip nervously.\n\nI took a step backward, reeling from the scene I'd just witnessed, and was just about to turn around when I felt my bare foot land on someone else's firmly planted toes.\n\n\"Whoa!\" I heard someone cry out.\n\n\"Oh! I'm sorry!\" I exclaimed, spinning around.\n\nTwo girls had approached me from behind, and one of them had her hand out to block me from colliding with them further. The one on the left was short and slightly stocky, quite busty, with a wild mass of black pubes sprouting like a wild animal from between her legs. She immediately lowered her gaze to examine my penis thoughtfully; her expression one of serious consideration. Her friend stood beside her; skinny, pasty white with smaller breasts and two perfectly circular red nipples, as well as two puffy lips gracing a freshly shaven pubic mound. Her shy demeanor contrasted with the aggressive scaly dragon tattooed across her shoulder. Either afraid to look down or pondering something else, she eyed me with a certain anxious intensity.\n\n\"Hey --\" the first girl said, raising her eyes back to my face. She laughed before she could finish her introduction as if I had stumbled upon the tail end of some kind of amusing dialogue. \"So, um, my friend wanted to know if you want to join us,\" she asked boldly, in lieu of her nervous companion. It was at this point that I noticed a tall athletic fellow standing a few feet behind them, watching our exchange patiently.\n\n\"Oh, um...\" I started, before glancing at the silent second woman. She looked down quietly, her face exhibiting a mild blush. I felt a warm glow spooling in my stomach, witnessing a stranger's mixture of shame and desire for me. \"Sure,\" I added decisively, making sure to savor the sudden upward glance of my soon-to-be partner, having just established that her friend successfully invited me to fuck her.\n\n\"Yay!\" the shorter of the two cheered, swinging her body around toward the other man who they'd surely ensnared in their amorous plot just moments earlier. The bolder of the two friends skipped back to her newfound beau, exaggerating her movements, well aware that every hop she took sent two sizable naked breasts tumbling about her chest. She grabbed the hand of the other man and tugged him downward, quickly squatting until her well-cushioned bottom plopped onto the floor with a soft smacking sound. Her knees wedged open as she drew him eagerly near, exhibiting her thick black bush and faintly-stubbled legs. He seemed all too eager to loosen his tongue and invite a messy kiss while grasping for the two giant breasts that commanded his full attention. They seemed like such an odd pair, one spunky and eccentric, half her partner's size, and the other a clean-cut jockish fellow. However, this made their impending union that much more thrilling.\n\nAs for my partner, she let me lead her to the floor beside her friend where she sat there chewing her lower lip and looking at me expectantly. \"I love your tattoo,\" I said, unable to think of anything else to break the ice.\n\n\"Thanks,\" she laughed. I felt like an idiot, and perhaps I was, but if anything, it relaxed her a bit and reduced the sense of intimidation that gripped her.\n\nI smiled and leaned in, which she received by taking a deep breath in and closing her eyes to silently offer me her lips. We kissed briefly, but we were both aware of the task that lay before us. Her friend was already tugging at the swollen cock of the other man in our group while he rubbed his fingers back and forth through the forest of hair between her legs. I reached up and cupped my partner's left breast, feeling her body tense up momentarily and then soften. I thought it might take her a while to warm up to what we were doing, however to my surprise I felt her curious fingers tickling my shaft just moments later.\n\nMy anxiety faded and turned to arousal, quickly swelling to a full erection in her hand. I felt a sense of surprise channeled through her fingers as she quickly adjusted her explorations to manage my sudden increase in size. Her lips widened into a smile, prompting us to pause our kiss as she recovered, before resuming her fondling with greater confidence.\n\nThe couple beside us led the way, as the man aggressively sent his partner backward and then slid her up to his pelvis where his stiffened cock stood waiting. I couldn't help but be distracted by the heavy rocking of her two large tits as he thrust himself into her thatch, exposing a shocking pink fissure at the core of her muff. I was more than ready to dive in myself and took control, answering my own partner's obvious desire. She squeaked happily as I quickly lay her back and flung apart her knees, exposing her bare, naked pussy.\n\nThe thick head of my cock became instantly shiny as I ran it back and forth between her lips. A slight shiver traveled through her thighs, followed by a gasp as I pushed myself inside. Our eyes connected as her inner muscles stretched to swallow my cock, then we looked down together at the way her salmon-pink hole gaped wide and allowed our bodies to be drawn closer together.\n\nWe began fucking like champs, clutching at each other with great determination, my eyes affixed to the lively dance of her small breasts, hers drawn across my chest and seeking my gaze repeatedly. Her breath became heavy and labored, mixing with the sound of the two excited bodies smacking repeatedly together beside us. My senses heightened, I suddenly became aware that the room was now reeking of sex; redolent with vague tinges of body odor, sweat, thick with the mysterious, feminine scent of wet pussy and the musky odor of my own aroused cock.\n\nMy partner's narrow, catlike eyes couldn't let go of mine. She seemed as if lost in a trance, imagining me a glorious lover, the stuff of fantasy, and I was all the more turned on for it. Her pussy was suddenly audibly wet, frothy with whitish cum.\n\n\"Fuck, you're coming so much!\" I exclaimed.\n\nShe gave a breathy laugh. \"I know!\"\n\n\"This is so awesome,\" I chuckled.\n\n\"I know!\" she repeated louder.\n\nA wide, constant grin lit up her face as she followed my eyes, returning to her flushed pussy. She fixated on my dick as it sunk in and out of her body, smeared with a fragrant cream. I knew I would soon have to stop before it went too far, but I savored the sight of her quivering titties, nimble and pointy, for as long as I could before pulling out and pinching myself to prevent ejaculation.\n\nJust like that, I had logged my first fuck of the event. After offering our reluctant goodbyes, I strolled back out into the room with a renewed confidence. No longer did I feel unsure, disoriented, and left out. I felt empowered and more sexually motivated than ever.\n\nMy attention shifted to the other goings-on about the room, my arousal infinitely heightened by a bewildering landscape perfect for a little voyeurism. I watched a young woman with a small frame lifted into the air by a much taller man with a rather massive appendage. He took her into his arms and lowered her onto it, clearly surprising her with the unexpected hoist into the air. As his dick sunk deep into her body, her eyes widened and she gasped, \"Oh my god!\" He began to bounce her up and down, thrusting himself through her tight pussy as it clung and stretched against his shaft. \"Oh my god, oh my god!\" she wailed in surprise, throwing her arms around his neck and holding him for dear life, her meager, pointy breasts dancing wildly in front of his face as her small body sprung up and down, enjoying an experience she'd never even dreamed of.\n\nIf it was exciting to watch these unacquainted couples, it was even more so witnessing my two new comrades simply because I knew what was at stake for each of them. Walter and his new Asian friend had faces devastated with shock but laced with humor, seeming oddly on the verge of laughter. I tried to imagine the thrill he was feeling as he leaned over her, wedged between two thick, pale thighs already glistening and wet with cum, his skinny body pumping furiously through a thick black mass encircling a bright pink chasm that repeatedly swallowed his penis. Walter lowered his eyes to the rhythmic swing of her massive boobs and their elongated, reddish nipples. She was frozen, mesmerized by him, and in awe. I imagined -- no, I hoped -- that she, too, was having her very first experience of passion such as this; that she was in the midst of losing her virginity to Walter and his newfound sexual confidence.\n\nDavid, on the other hand, was swept up in an experience with two younger women clearly having a taste for a handsome older man. One of them remained bent over as he pounded her from behind. She cried out, pleasure and pain indistinguishable, as her body thundered back and forth, ass rippling, two petite tits flapping beneath her chest. A second girl, bubbly and dimpled, turned David's head sideways, scheming to steal his attention as she cupped the back of his neck and sucked his lips. Her other hand caressed her own breasts as she rose and fell on her knees, her taut body electric with erotic energy.\n\nI wandered about a little more, observing the many pairings around me, some being filmed, others simply swept up in the free license to fuck indiscriminately. Everywhere, crowds gathered to watch, take turns, meet new partners and split off to engage in oral sex or more. The explosive relief of sexual frustration by hormone-fueled youth was incredible to watch. A young woman sat down between two men, fueled by a sense of silliness and rebellion. She grasped a cock in either hand, then turned and stuck out her tongue to show off for her amused friends, posing as if about to devour one of them. One could almost imagine selfies being taken if phones were allowed.",
        "When she stood back up and her friends turned, it suddenly dawned on me who I was watching. There, standing before me, were the three girls that I sat behind when I first arrived. Becoming aware of my sudden attention, they glanced up at me; one at first, and then the others. Given how the first girl had done a double-take, it was obvious they recognized me, as well. However, they didn't react with the fear and uncertainty that I thought they would. All three girls stood before me, their chests heaving, hearts racing, blood pumping fiercely as the adrenaline coursed through their bodies given the thrill of showing themselves completely naked to all the guys around them. I thought back to that moment earlier when we were so cautious, so wary of the experience we were about to have. Now, here they were, facing me squarely as I faced them, our bodies naked and full of arousal.\n\nI felt a great sense of relief wash through me as my curiosity about each of them, when clothed, became instantly satisfied. The girls stood shoulder to shoulder, their three little naked pussies on display all in a row, ranging from smooth to furry. Three beautiful sets of naked boobs poking out from their bare chests, their nipples so puffy and swollen. Just as I had been curious, I knew that they were. I wanted them to see my penis, to see how hard I was, to feel that same sense of satisfaction about the body they may have imagined being able to witness. I stood there, dick surging out before me, wild with arousal. I observed their faces, emitting that \"can you believe we're seeing each other naked?\" look, their mouths hanging slightly open, their lips slick with a hint of surprise and delight. Their whole bodies came alive with erotic tension as they gazed at my inflamed cock and I, in turn, performed a full body scan of their exposed boobs and pussies.\n\nStill reeling from the encounter, I eventually tore myself away, my whole body buzzing with excitement. The longer I wandered, the more surprised I became at the sheer variety of participants and couples engaged in acts with apparent strangers. Nearby, a cougar had found a handsome twenty-something and was busy running her hands over his chest as he lay back. They exchanged a few words I could not hear, triggering a huge grin across his face. He looked as if he was lost in a dream, serenely gazing up at her as she squatted over him and reached down to massage his penis, ensuring that he was as hard as humanly possible. For a moment, her expression became just as dreamy as she sunk her hips, taking him deep inside her body until she was full of his youthful manhood. I watched her mouth part as she let slip a small gasp, her hands suddenly shaky as they sought to anchor herself against his body. He reached up, groping with wonder at the two sizable, mature breasts that hung dramatically before his glowing face.\n\nLittle by little, all barriers broke down, shame vanished, and excitement turned to sheer intoxication as was acted upon with fewer and fewer inhibitions.\n\nI neared a young woman that captured my attention instantly. Her back was turned to me, observing a handful of couples that were fucking nearby all in a neat row, and although most of her body was obscured, I felt a strange thrill course through me like a small bolt of lightning. My eyes settled on her butt where one cheek shifted downward on account of the weight she had casually shifted to one leg. As she tapped a foot nervously, I observed the texture of her buttocks, giving a slight wobble much like a firmly set custard or pudding. Her smooth crack met with the elegant curve of her spine which I was just about to follow with my eyes when she turned around.\n\nAt first, I remained glued to the sight of her pelvic region as it idly swung around and then stiffened, tensing up no doubt at the sight of me. In an instant, the soft, spongy flesh of her buttocks was swapped for a small patch of light brown hair, neatly trimmed, which terminated just above the two perfectly smooth lips of a carefully groomed pussy, sweet and delicate, like two rose petals. Although I had not yet processed the totality of this woman, even the smallest fragments of her body -- the slight swell of her buttocks, the neat folds of flesh tucked between her legs, the deep well of her bellybutton -- each gripped me with fascination entirely of their own accords.\n\nHowever, it was the moment I raised my eyes to discover her identity that I found myself struck with a sudden moment of recognition that burned in me with powerful, erotic intensity. There was her face, one I had seen a hundred times before smiling back at me from across the counter. Norah, the barista who greeted me kindly each and every morning, stared back at me with as much astonishment as I directed toward her.\n\nFor the next several moments, the room around us and all the unspeakable acts that ensued seemed to slip away. I felt as if I was in a tunnel; at one end there was Norah, her sparkling eyes, her gentle curves, her buoyant, jovial breasts, and at the other end was me, gazing back at her from a state of terrible embarrassment, acutely aware of my incredibly distended manhood.\n\nThere was no ambiguity about her reaction to it...\n\nNorah's eyes soon fled mine as if startled by a familiarity that destroyed any sense of comfortable anonymity. Instead, they dropped straight down and settled on my massively erect cock. With one hand flung across her mouth, Norah still barely managed to suppress a flurry of nervous laughter that caught me off-guard and sent me tumbling back into the reality of the space and situation we found ourselves in.\n\nIt was not the reaction I expected, but it was the one I had. I recalled all the times I had wanted to talk to Norah but kept my mouth shut, aware that she was probably hit on all the time by creepy guys in the workplace. Instead, I always sat quietly at my table, studying the unique features of the way she wrote my name and savoring the daily smile she had greeted me with.\n\nNorah's face turned red when she saw me reeling from her unexpected laughter. \"I'm sorry! I'm sorry! I didn't mean to-- I wasn't laughing at... you. I... um... just laugh when I get nervous.\"\n\n\"That's okay,\" I chuckled, legitimately relieved.\n\nAn awkward silence followed as we resumed gawking at the sight of each other. Hard as she may have tried to not look, I saw her fight the urge until finally, her eyes flit downward again. I took the window of opportunity to do the same, reexamining her body with the added thrill of knowing the woman it belonged to. Any lingering bruises to my ego were soon healed as I discovered the subtle reactions to my appearance which she could not hide. Norah's outer labia had begun to swell in just the short time that had elapsed since I saw her spin around. Her pinkish-red nipples stuck prominently out from the tips of her breasts, acutely aroused by our predicament, and I delighted in imagining that they simply pointed the way to the object of deep, curious attention.\n\nDespite all the naked bodies I had seen, hers was the most significant and explosive; the hardened nipples and swelling breasts, the seductive curves and soft pubic hair, all referenced a long-simmering attraction that remained elusive and mysterious and yet now had to be confronted in a crisis of seemingly epic proportion. In the brief moments that Norah snuck indulgent peeks at my body, she seemed no less swept up in the same catharsis; given the way she lingered on my shoulders, my chest, all the way down to my intensely revealing erection, fully extended and twitching with life, its mushroom-like head thick and pronounced, my firm, full balls tightening up against my body and suddenly feeling as blue as the sky on a clear summer day.\n\nNorah tensed up and began to breathe more rapidly as I took a step toward her. However, as I settled by her side she turned and smiled at me with the same unguarded smile I looked forward to every day. Together we observed four or five sets of couples before us, legs splayed or asses raised, emitting a symphony of grunts and moans, naked bodies grinding and thumping together in a fit of passion and bodily fluids. Observing such activities would already have been an awkward task had I done it on my own but became doubly so as I stood there by Norah's side united in this supreme act of voyeurism.\n\n\"So... uh...do--\" I began, entirely unsure what I was going to say next. Norah, however, had already assumed what I was going to say and began laughing nervously again. I couldn't help but turn as red as she had earlier.\n\n\"Mmm-hmm?\" she said after getting a grip. Norah gritted her teeth and fought back a smirk while patiently awaiting my response.\n\nIt was too late to change course, even if it hadn't been my intent to come off as bold as that so soon -- but bold I was. \"Why not?\" I thought, realizing how committed I already was to the event taking place all around us.\n\n\"Do you... um... want to...\" I mumbled, fumbling my way through a proposition I could not believe I was making.\n\nNorah could no longer hold back; the nervous tension erupted inside her and a wide grin formed across her face. She glanced over at the nearest couple and my eyes followed hers there. It was almost comical how meandering my request had been given the extremity of the actions taking place just beside us. A young woman was down on all fours, except for one arm which she swept back to clutch at her partner for mercy. He showed her little, driving his impressive dick incessantly through the expansive, hairy portal widening into a pink ring between her thighs as she tilted her ass skyward.\n\nWas that what I was asking her for?... What these two were so dramatically engaged in? I suddenly began to laugh, as she did. It was a peal of nervous laughter but also laughter full of excitement, mischievousness, and adventure. Moreover, to my surprise, it promptly ended the moment Norah collected herself, pursed her lips to control that wry, impish grin, and then simply said, \"Sure, yeah.\"\n\nMy heart thumped wildly as I felt her touch my hand and then lead me a few feet away where, although there was no sense of privacy whatsoever, we would not be on top of several other straining, sweaty bodies. However, our encounter began in a manner resoundingly different than the ones raging on all around us; it began with a moment of quiet tenderness. Norah sat down and led me to her side. There, she inched her body closer to mine and threw her arms around her knees, hugging them to her chest. She rocked back and forth on her butt a couple of times before taking a deep breath in, and then softened her stance, leaning in toward me.\n\nI recognized immediately that she was scheming to kiss me... and my desires were no different. We locked our lips firmly and I felt her body shifting, releasing her arms and legs from their briefly defensive position as she quickly grew comfortable with our embrace. I slipped my arms around her and our bodies connected, strengthening our kiss and flooding it with a sudden passion. I felt our mutual exposure, open arms and legs which, were it not for our embrace, would have revealed the deepest secrets of our intimate physicality.\n\nAs I felt her hand make gentle contact with my chest, I further relaxed my tension, accepting the sensation of my cock springing upward to bob stiffly in my lap. I felt as if we suddenly drowned in each other, lost in a meandering kiss that was at times full of play and at other times content with a simple sharing of breath.\n\nWhen that first, powerful urge to explore the emotion propelling us toward one another finally came to a place of rest, Norah pulled away slightly, that delirious grin of hers blooming again across her face. She tucked it into my neck briefly and then rotated away before slipping into a contemplative gaze. There was only one place she could have been looking; my lap, where my thick, pulsing cock sprouted impulsively toward the soft expression on her face. Norah seemed to consider it with fascination and whimsy, fighting the last vestiges of her intimidation at the experience we found ourselves in the midst of.\n\n\"I like your dick,\" she said dryly, holding back an amusement that I could plainly see was there.\n\n\"Oh, really...\" I replied.\n\n\"Yup.\" She was fighting a smirk.\n\n\"You're just realizing that now?\" She raised an eyebrow at me curiously, so I continued. \"You mean you didn't notice it that time I strolled into the coffee shop naked? I would think you'd remember something like that...\" She laughed upon realizing that I was just goofing off.\n\n\"Hmm, no I don't recall...\"\n\n\"Well, shoot. Really?\"\n\n\"Yeah,\" she said with a shrug. \"Guys stroll in with their cocks out all the time. It gets you a free biscotti with your order.\" I snickered at her as she leaned in close. \"Want me to let you in on a little secret?\"\n\n\"Sure.\"\n\n\"You know those green uniforms we have to wear?\" I nodded -- boy, did I; I looked forward to seeing her in one of those silly things every morning. She raised her hands to the sky and exclaimed, \"Totally naked underneath!\"\n\n\"What-- really?!\"\n\n\"Indeed!\" she laughed. \"All the baristas are naked under there. It's company policy.\"\n\n\"Wow... completely naked? Like... you're just all boobs and pubes under there?\"\n\nNorah cupped her mouth and burst into laughter. In all the times I'd had brief exchanges with her over my morning coffee, I never imagined that our first sustained conversation would reveal her to be so willing to be completely ridiculous and silly with me, and I was loving every moment of it.\n\n\"I don't believe you,\" I said, giving her a quick tickle that made her squeak with amusement. \"You'll have to show me next time.\"\n\n\"Okay! Show up naked again and this time I'll show you.\"\n\n\"Deal. Just make sure I get my biscotti.\"\n\nWe laughed together for a minute before she relaxed into a smile and examined me thoughtfully. I felt as if I had passed a test and become a real, thinking, laughing, mischievous guy she desired and no longer just some flirty fantasy. Norah nuzzled closer, returning to the position she'd been in earlier, and gazed at my lap again. \"Mmmm,\" she hummed softly.\n\nShe sought my eyes once more, needing to briefly reconnect and perhaps offer a subtle acknowledgment at the boundary we were about to cross together. Satisfied at the expression I showed her, she turned back toward my lap and leaned in, gently but enthusiastically wrapping her fingers around the stiff shaft of my penis, then guiding it smoothly into her open mouth.\n\nI exhaled deeply as I felt the extraordinary sensation of being enveloped by the warm cavity of her mouth, the softness of her tongue, and the delight she showed at her first taste of my cock. It was as if her entire body suddenly swelled and glowed with erotic energy which she then directed toward the task at hand, skillfully unlocking a private hunger and sating herself enthusiastically on what I offered. Her eyes closed and she suddenly looked serious, turning inward and savoring the moment of actualizing something that had maybe played out in her head.\n\nI felt myself let go as if wanting to sink into the floor. I lay there, riding the waves of pleasure that passed over me and washed through my pulsing shaft. Now and then my cock sprung free from her mouth, which garnered a quiet chuckle, a playful lick, or a long-drawn breath through her nose as she passed it along the edge of my engorged shaft. I loved the way she periodically squeezed it, opened her eyes to peer at it inquisitively, then droned another \"mmmm,\" before taking it deeper.\n\nAfter a few minutes, she rose from my lap, wiped a sticky strand from her mouth, and smacked her lips. Norah seemed to tell I was becoming restless for her body and grinned. \"What do you want?\"\n\n\"Hmm?\"\n\n\"Tell me what you want,\" she said.\n\n\"I really, really, want to go down on you,\" I admitted.\n\nShe laughed and scooted backward, then wedged her legs apart, offering me a playful look. Norah watched as I lowered my eyes and had a closer look than I did before. I was enchanted by the two perfectly symmetrical bare lips in full blush, as well as by the contrast between them and the fluffy tuft of brown hair sitting above.\n\nWith keen interest, she observed my face as I gazed down in wonder between her parted legs, bewildered by the complete openness with which she displayed her naked pussy for me, sitting there with such a coy smile. She leaned back as I dove in between her legs and frantically gave her labia a long lick with my tongue. I felt her hand immediately flow over my head and then grip at it like a claw. I rubbed my face in her soft bush, sucked at her lips, then teased her pussy with my tongue as skillfully as I could muster. Her moans were like music as indulged myself, coated in the creamy mixture of her secretions and my saliva.\n\nWhen my jaw grew tired, I rose back up to her face, anxious for another kiss. She gave me a comical look, pinching my chin, then she tapped it with a finger as if to indicate its cuteness before complying with my obvious desire. We kissed for several minutes, our tongues entangled, enamored with the taste of each other.\n\n\"What else do you want?\" she cooed when we finally broke free. This was her thing, I figured. What did I want, what did I want. She wanted to hear it, that was for sure. Truthfully, I wanted everything.\n\n\"I wanna fuck you,\" I exhaled, already exhausted by my desire.\n\n\"Yeah...? You wanna fuck me?\"\n\n\"Hmm-hmm...\"\n\n\"I want you to fuck me,\" she snapped back, throwing herself down on her back and sweeping her hair out to the side.\n\nI grabbed her legs and tugged her pelvis toward me until my dick bumped into her pubic mound. I reached down and smacked my hard cock a few times on her pink inner labia as her pussy expanded with her parting thighs. She gave me a devilish look, full of anticipation, which I quickly answered by forcing my cock inside her body. I felt her expanding from the inside as she gasped and dug her nails into my arms. Moments later we were pounding together, her breasts rocking back and forth upon her chest, back arching and gasping toward the ceiling.\n\nWe fucked with spirit and joy, my cock thickly moistened by her body, squeezing through her tight hole as she smiled blissfully and grasped at my butt to urge me into her with greater pressure. As we shifted positions, virtually without any pause or moment of rest, we shared wordless astonishment at the sight of our bodies engaged in such raw and desperate lust.\n\nFor some reason, all I could think of was how much time had been wasted between us with mere morning flirtations when all of this, everything we were doing at that moment, was just sitting there the whole time, waiting to happen. I wondered what would have happened if I had the nerve to just say something, maybe ask her out. All the moments we could have had flashed before my eyes: the concerts attended together, the romantic dinners, the picnics on the beach, and who knew what else. She began to laugh as if she could read my thoughts, and we laughed together.\n\nOur legs locked and bodies upright, she looked down at where we connected, gritting her teeth and bucking her hips back and forth, driving my dick inside her body with such dogged determination that I probably could have stopped exerting any force myself. I lost myself in the sight of her bouncing tits as she did this, ravenous from our sudden outpouring of mutual lust. It was always such a drag being with someone whose libido didn't match my own, and I relished the chance to be with someone unashamed to reveal the matching extent of her own horniness.\n\nAs we continued to fuck, I imagined all the times she might have gone home from work, her thoughts slowly returning to the mystery guy who offered her a smile every morning. All the times, perhaps, she resisted the urge to act upon the sensations in her body before finally yanking off her clothes and throwing herself on her bed, tossing her legs wide, fingering her pussy, moaning, calling out the name on my coffee cup. Perhaps all that happened! As far as I could tell, it was perfectly possible that she'd been thinking of me all this time, just as I thought of her.",
        "The perfect blending of fantasy and reality reached its zenith as we embraced, our sweaty bodies still humping angrily at each other, groping and seeking lips and crying out loud as the pleasure became unbearable.\n\n\"Yes... yes... oh god... oh my goddd,\" she began to whine as she threw her arms around me and squeezed tightly. I fucked her harder and harder, listening to her failed attempt at speech turn into a distorted groan. A moment later she gasped and cupped my face as I continued to rock my hips against hers. \"I'm gon-- I'm gonna come! You're gonna make me come--\" she whimpered.\n\n\"Do it. Come for me, baby,\" I blurted.\n\n\"Ngh - ngh - ngh!\" she mumbled, her body beginning to shudder and rumble with a full-body orgasm, each wave of pleasure enjoined to an adorably squeaky outburst. When she was finished, she threw the twisted mess of hair out of her face, leaving a few strands still clinging to her lips, and gave me a look of exasperation before collapsing backward onto her bum and letting my cock pop free.\n\nIt wasn't until that moment that I even grew conscious of the small crowd that had gathered to watch. I wondered if Norah had been aware of them, if she had received a thrill from their collective gazes. Three of the men, apparently inspired by what they had seen, wasted no time in stepping forward, determined to be next.\n\n\"Heyyy-- that was awesome,\" one of them said, exhibiting a casual swagger. I wanted to laugh but I also felt my heart sink. To them, Norah was just another random partner of which I was supposed to have many, none of them any more special than the rest. However, that's clearly not what I was feeling -- and she could read it all over my face. I realized I shouldn't have let her see that, but it was too late; Norah took it as a moment to sink her hooks a little deeper, responding to the newcomer with great affection while smirking at me all the while.\n\nI decided if she wanted to tease me, I'd just tease her back. I got up and glanced around at the women nearby -- beautiful, buxom, youthful, and excited. I smiled at her and stepped aside. She quickly piped up, wrestling my attention back to her. \"Don't stray far, babe!\" she laughed.\n\n\"I won't!\" I replied.\n\nI made my way dizzily to the center of the room where the most riotous scene had organically taken shape. The further toward the fringes of the action, the more reluctant and shy the participants were. At the core of the event, however, the adventure of it all reached its peak. There I found the isolated set of participants who seemed familiar with the outlandish behavior taking place, the misfits, the rebels, the most sexually liberated amongst us.\n\nI stood there briefly, astonished by the total lack of shame those men and women portrayed as they fearlessly indulged in each other, frequently trading partners, and reeking of the odors of sex. After the heaven of Norah's embrace, I felt a power coursing through my veins, one of confidence and resolute determination. I aimed to toss myself into the tangle of bodies before me, yet unsure how to navigate the scene, almost at a loss for an opening into the fray.\n\nI circled the edge of the crowd, listening to their grunts and cries. The moment a cock popped free it seemed to be claimed immediately; a free pair of breasts never remained unaccosted for long. The web of bodies was so tightly interwoven that at times a person could not even see whom they mounted, their partner's face often buried in the crotch of another. It was due to this phenomenon that I briefly saw my opening; a splayed pair of legs that had come free, crowned with a nest of wet, matted pubes. I rushed in and grasped her knees, claiming my position between her thighs.\n\nI paused for a moment, unable to reason how I should proceed in getting her attention for polite permission to fuck. However, her hand flung out toward me and groped at the air until it found my arm. She blindly guided it down between her legs, beckoning to me to rub her pussy. I complied with her wishes, circling her clit with my fingers until my hand was coated in her juices. Swept up in it all, I had not even realized that the person who obscured my partner's face was yet another woman seated upon her face. I felt the hand again, grasping impatiently for my cock, and quickly attuned myself to my partner's urgency.\n\nI plunged myself into the deep, wet hole offered to me, moaning with satisfaction as I surveyed the landscape of writhing bodies that surrounded me. I found myself soaked and creamy, clutching at the springy pair of loose, round breasts made available to me. The bodies rotated and briefly I saw a glimpse of my unknown partner's feverish face, her green eyes gazing back at me with a deep hunger. Minutes later, partners shifted again. I found myself splayed out on the floor, a woman crouched over me, then my face mashed against a smoothly-shaven pussy thrust against my lips. I pleasured her enthusiastically until she shivered and gushed in my mouth. Moments later, I felt my cock in someone's mouth, and then in another. I felt the tug of a hand, laughter, the tight pressure of a moist pussy enclosing around my shaft. I didn't know who was fucking me or who I was fucking, I only knew a constant source of pleasure and delight in an outpouring of sexual expression.\n\n\"That's it, keep going, more, give me more!\" a voice said. I realized that momentous activity around me was at least in part inspired by the instruction of the director who perhaps saw this group as the centerpiece of his orgy sequence, the participants that would give him all he needed for the scene's incredible climax.\n\nA camera soared overhead, mounted atop a device that looked something like a small crane. It floated through the air high above a room littered with bodies; a groaning carpet of flesh in constant motion, writhing together like serpents. Its round, glassy eye gazed down at the grand fit of ecstasy, slowly turning to the left and then to the right, conducting its birds-eye examination. The patchwork below, peppered with bodies of all kinds, must have seemed remarkable from that height; hot, clammy bodies flush with the color of sex, limber bodies flexing with a display of genitals, engorged, reddish cocks moving like pistons through wet masses of pubic hair, the flash of wide, pink cavities, round, rippling buttocks raised to the hard wall of even more bodies, naked breasts recoiling en masse with elastic energy.\n\nJust as I found myself reaching my capacity for pleasure, and wondering how much more my body could withstand before an increasingly necessary release, I locked eyes with a woman nearby who appeared to have been staring me down like a bull, the small black barbell through her septum a fitting accent to her stunning face. She crawled toward me with an obvious look of determination, glancing down at my cock that had been so briefly unattended.\n\nWhen she reached me, there was no question who was in control. Her arm lashed out, wrapped in a winding tattoo of a python that grew from one end to the other like a sleeve. Sending me back, she hoisted herself atop me and sunk onto my cock, widening her hips to spread apart her black thatch, then rocking them back and forth to swallow me whole. She leaned back and gave me a look that seemed angry with lust. She rode me like a personal sex toy, owning my cock like it existed solely for her benefit, clutching her breasts and pinching painfully at her pierced nipples.\n\nI moaned incessantly, absorbed in the sight of the sticky pink expanse that enveloped my cock, smearing me with a creamy layer of whitish cum as she shuddered violently. If she had not reached a climax first, I'm sure it would have been me who succumbed moments later. However, she cried out suddenly and rose her hips until my cock sluiced free from her pussy. I remained pinned to the ground as her eyes closed and she began to gasp, frantically whipping her fingers across her swollen clit. Within seconds, I felt a warm splash and gawked at the way her body trembled and squirted. Watching a woman come that forcefully and violently was something I had never before witnessed in person.\n\nMy partner's fit of passion sent me over the edge. Grasping my cock, I pumped it furiously, finding it perfectly slick with her fragrant vaginal secretions. I exploded, spraying what seemed like a gallon of warm cum across her stomach with such force that I nearly lost consciousness, seeing her body slip briefly away in a spangle of phantom, flashing lights. When I came to my senses again, we stared in astonishment at each other, neither one expecting to have drenched the other with such a quantity of fluids.\n\nThe woman gave me a smirk and flung her legs over me, then offered me a hand up. Saying nothing, we led one another to the back of the room to one of the cleaning stations. As we stood there, quietly cleaning our bodies together, I felt a sense of peace and serenity that went deeper than any other post-coital bliss I'd felt before. The music of lovemaking grew louder and more explosive as other couples reached the limits of their passion. Somehow we had been in tune with it all, ready for the ultimate release at virtually the same time as the rest of the participants.\n\nI wandered back into the crowd, eager to watch the final moments of lust carried out to my left and right, partners grasping fiercely at each other as their bodies quaked with orgasms, cocks reddish with friction unloading on breasts and other body parts just as mine had.\n\nThe director began to shout through his loudspeaker again as the activity died down. \"Bravo! Brava!\" he exclaimed, congratulating us all for our efforts. \"That's a wrap!\" Naked bodies rose all around me and began clapping for each other with thunderous applause. There were hugs and kisses, excited chatter between strangers who had just shared something incredible.\n\nI found myself actively searching for Norah, desperate to share that moment of finality with the one partner I could not stop thinking of. I spotted her rushing forward, revealing the same degree of desperation for my presence. I didn't care that she probably went on to fuck some other guy, just as I had done with other women. We just laughed and thrust ourselves into each other's arms, squeezing one another tightly and finding ourselves breathless from the excitement.\n\nThe crowd continued to cheer and clap all around us. However, Norah and I just sunk into a beautiful silence, our entwined bodies rocking quietly from side to side, content to listen to the fanfare and to savor a simple moment of closeness.\n\nThe success of the event sunk deep into our minds, but the excitement of what might come next for us had only just begun to grow.\n\n***\n\nI rested my head against the back cushion of my couch and stared up at the ceiling, now and then popping a few pieces of popcorn into my mouth. My phone sat beside my thigh, the video queued up and ready to stream to the TV. The anticipation was killing me and I wondered how much longer Norah would be.\n\n\"Sorry, sorry, here I am!\" she laughed, finally skipping back into the room.\n\nShe wrapped herself in a large green Celtic tapestry I had purchased from a street vendor years prior on the way to the park for a lazy afternoon with friends. The sheer fabric teased the shape of her slight curves and the volume of her breasts until she flung it open ceremoniously, revealing herself nude. I never tired of the sight of her body; her swelling chest, delicate neck and toned arms, the gentle whorl of her belly button, and the dark fur of her mons. She romped across the room, letting the tapestry sail behind her back, then threw her arms around me and cocooned us in the featherlight fabric.\n\n\"Come on... take these off...\" she said, tugging at the waistband of my boxers, the only thing I had on.\n\nI yanked them off and tossed them onto the floor beside the couch and returned to Norah as she nestled herself into my embrace.\n\n\"Mmm... I feel that...\" she snickered, referring to the sensation of my cock as it slowly stiffened and grew against the gentle pressure of her back.\n\n\"Ready?\" I asked, grinning happily.\n\n\"Let's do it!\" she laughed. \"I'm kinda nervous but excited...\"\n\n\"Me too.\"\n\nI clicked play and brought the video up on the TV, streaming in its entirety the porno we had been extras in, and waiting patiently for the orgy sequence of which we were a part. It wasn't long before it commenced, the subject of the main character's elaborate daydream as he pined for such an experience and imagined what it might look like.\n\nHow ironic it was that this character's fantasy had been our reality.\n\nNorah began tensing up in my arms, her eyes glued to the screen, grinning wildly as she caught sight of the wild scene of couples fucking incessantly and indiscriminately, their bodies thumping together, groaning, crying out with pleasure. I marveled at how professional everyone looked, knowing that in reality most had never experienced anything like it before and were in the midst of having a certain degree of innocence shattered.\n\nI wondered how each person felt about being filmed and broadcast in such a state across the internet; a woman on all fours receiving a cock while her breasts swung beneath her chest, a seated man with his upright penis before it was detailed in closeup as a woman's lips closed around it. I wondered how I might feel if or when I saw myself featured, all this time wondering if they used footage that revealed my participation, displaying my naked body, broadcasting my fierce arousal in front of the world. Who out there might recognize me, might discover what I'd done?\n\nAll of a sudden, there was Katie, writhing in David's comforting embrace, delighting in each other's body with genuine passion before she began bouncing urgently upon his massive cock. I knew that soon they would both witness their long-imagined union from a new angle, that the world would discover their taboo encounter, just as I had that day. There was Walter, as bewildered and excited as I had seen him in person, his lanky body crouched over Lisa's sensual curves, thrusting his swollen cock through a thick black bush for the first time and aghast at the sight of her playfully jerking boobs.\n\nNorah and I watched patiently, excitedly, hoping for a glimpse of ourselves until, finally, the camera panned and there we were, clutching each other with passion, our heaving, straining bodies desperate for the pleasure provided by the other. Lighting up the screen, Norah's eyes had been glued to mine, her arms thrown about me, her breasts moving with an almost liquid motion. A closer shot framed my erection, moving like a thick piston, devoured by a seething pink hole glistening with cum. I gazed at the sight of Norah's pussy spread open on the TV, at the wide shot it returned to in order to illustrate the way she arched her back and moaned, the desperation with which I clutched her breasts and savored the firmness of her blushing nipples.\n\nI felt Norah shiver and melt into me, I leaned in and kissed her softly, she smiled happily against my neck.\n\nWhen the film ended we sat there in silence for a few moments. I could hear the weight of her breath as it disturbed the silence of the room, both of us processing the significance of what we had just seen, what everyone would see. It felt daunting and thrilling all at the same time.\n\n\"Well...\" said Norah, a smile creeping back to her lips. \"There's only one thing to say to that.\"\n\n\"What?\" I asked.\n\n\"I sure hope they make a sequel!\" We laughed together and she spun around to sit in my lap, her naked body bearing down upon mine.\n\n\"If they do, we'd better start practicing right away...\" I joked.\n\n\"Mmm-hmm... my thoughts exactly,\" she replied with a grin.\n\nI dragged the tapestry we had draped ourselves in off our bodies and flung it down to the floor, then lay back and drew her with me.\n\nNorah cupped my face and indulged in a long, hungry kiss, then reached down and fished for my eager cock before smoothly gliding it deep within its new home."
    ],
    "authorname": "SolarRay",
    "tags": [
        "group sex",
        "public sex",
        "exhibitionist",
        "voyeurism",
        "first time",
        "group nudity",
        "porno",
        "film"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/hot-set"
}