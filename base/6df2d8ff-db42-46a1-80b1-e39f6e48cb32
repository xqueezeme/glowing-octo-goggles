{
    "title": "Voodoo Girl Pt. 01",
    "pages": [
        "I'm fighting so hard not to make some kind of pun here.\n\nThanks, Zana, for your help. \n\nTinkz was my volunteer editor and did a great job.\n\n*****\n\nHow strange it was to hear birds chirp, or to see an active waterfall, or even to witness a black cat running through the woods. It was even odder when I saw deserted cellphones strewn on the sides of roads. It amazed me that I found valuable laptops in almost perfect condition. People would have died to own them once upon a time. All the technology we garnered since the time of Neanderthals, and it was entirely lost in a matter of weeks.\n\nA year ago terror swept throughout the United States. It didn't take long for the contagion to spread across the ocean. No one knew what to call it, or them. Their brains still worked to an extent. Some even said their hearts continued to beat. Yet they craved flesh, human in particular. So people called them zombies. Very apt, no? \n\nIt was unknown what caused it. One day people started eating each other. They couldn't be killed, at least by conventional means. Doctors tried to examine them. The zombies bit their hands off, or tore out their still-pumping hearts.\n\nScientists attempted to reason with them. They didn't look like the zombies in movies. They didn't look like dead people stupidly and ravenously searching for their next meal. They didn't appear to decay, and they didn't shuffle around like brainless idiots. They could move quite fast, as a matter of fact. They continued to look like our neighbors, our parents, our loved ones. The only difference was their eyes: they were completely void of any emotion. \n\nSome lost their limbs in fights, sure, and that fit in to the picture we had in our imaginations. Strangely that would calm me when I saw them. It was evidence they were unnatural beings that would never be real live people again. I saw my neighbor once, both of his arms missing, and it helped take the guilt away when I chopped off his head. \n\nI watched them kill, feed and walk away as though they hadn't ate most of their victims' necks. It filled me with a rage I never knew I could feel. I wanted to tear out their hearts, to slaughter their families. Unfortunately it wouldn't make a difference. They wouldn't care. They didn't bleed as I did-metaphorically and literally. \n\nAnd how I bled, watching my family, my friends, the people I'd bonded with since the world went to shit be eaten alive-or worse, become one of them.\n\nSo I went off alone, trying to stay alive in an abstract sort of way. I gathered deserted food, carried a backpack filled with weapons and tried to find every book I could. \n\nReading books filled my time. It was boring waiting to die.\n\n_______\n\nIt was raining. I couldn't remember the last time it rained.\n\nI sat near the window in the little cottage I'd found, watching water accumulate in the bottles I'd placed out there weeks before. I'd been desperately hopeful that day, and finally the hope paid off.\n\nA crack of thunder and lightning bolted through the sky. I nearly fell off my chair in fright. Funny that I could still be afraid of something so insignificant. \n\nThe storm went through the night. I was grateful for the hypnotic thrum on my roof, but I couldn't sleep. I lay awake; staring at faded posters the previous occupants had left behind, and reveled in the moment of peace. It had been so long since I felt tranquil, and though one of my hands rested stiffly on my knife, my body relaxed more than it ever had since the world died.\n\nI'd nearly fallen asleep when I heard the thud.\n\nMy body jolted awake. I listened as the rain beat against the windows. There were no more thudding noises, but I knew that meant nothing. I got up and gathered my things, and then I peered out the bedroom window. All I saw was wet darkness, but I knew they were out there. \n\nThe rain most definitely carried my scent. It wouldn't be long before their mindless bodies thumped against the doors and windows, tirelessly working for their next meal. \n\nI quickly pulled my hair back into a high bun and threw my backpack over my shoulder. \n\nGlass broke downstairs. I should have known the cottage wasn't a good place to stay. I'd indulged in a fit of fancy, thinking it was so pretty, that it looked like an illustration in one of the books my grandmother used to read me. Stupid.\n\nThe floorboards made a great deal of noise beneath my boots. The zombies below began tearing the place apart, looking for food. For me.\n\nThankfully I knew about the stairs to the roof. I opened the slat and climbed. The rain blinded me and made it difficult to hold on, but I managed. Eventually, I stood on the slick roof. I knew they weren't far behind me. The side of the cottage had a ladder and I prayed it hadn't fallen. \n\nI located it and nearly cried with relief. The steps were slippery, and I nearly fell a few times, but I made it to the damp earth. I saw them in the windows; their shifting shapes cast shadows across the floor.\n\n\"Bastards,\" I whispered. My fist clenched and my jagged nails tore into my palm. \n\nI was childishly upset that they'd invaded my one moment of quiet. I hated their blank faces, their painless scars and their tattered clothes. For a brief moment I considered bursting into the house and fighting them. It would be a fun way to die.\n\nBut not a worthwhile way. \n\nThat still mattered to me, even through my despondency, my rage. So I relaxed my fist and turned my back on my brief, bittersweet retreat to the past.\n\n______\n\nOccasionally, I would meet other vagabonds, wandering around for food and comfort. I never spoke to them much. In my experience, they were either violent or crazy, or both. People still fucked. Babies were born. Children were eaten. Men fought over women. Women fought with each other. Life went on for a great deal of them.\n\nI wanted no part of it. Of course there were times I craved another's touch, or I had a particularly tantalizing dream. My memory was kinder to my last boyfriend's sex appeal. He was my first, and we only had sex a few times before he disappeared into a riotous crowd at the train station we fled to. At night when I gazed at the stars, or drifted off in some abandoned bed, I recalled each stroke, each caress. In reality, he hadn't been a great lover, at least by my friends' and raunchy novels' standards. \n\nJoe. Average Joe. He loved baseball and he wore a Yankees t-shirt almost every day. He had reddish hair and faint freckles everywhere. His cock was the biggest thing I'd ever seen. He called my clit a \"nub\", and my friends and I laughed about it later. He was always horny. \n\nHe loved me, I think. When everything fell apart, he rushed to my apartment and dragged me behind him, searching for help. Maybe he just didn't want to be alone, but there was something in his stare when we had sex, when we lay naked in bed and whispered tales of our childhoods. \n\nNow, when I ran into other people or snuck into compounds to steal food, I watched the men from afar with a detached sort of appreciation. Even the most corpulent men slimmed down. And there was grimness to them now, a sort of intense focus that warmed my stomach. \n\nThere were times I idly contemplated introducing myself to the men I watched. I imagined rolling around with them, their strong thighs locking against mine as we battled one another to come. I knew why people still fucked: it made them feel alive. \n\nIt was fun to daydream, but I knew I'd never do it. It was a cruel joke to hope to connect myself with anyone on a deeper level. I also didn't want to risk bringing a kid into a world where your own mortality was thrust down your throat every time you walked out the door.\n\nSo I existed passively, always expecting death around the corner.\n\n____\n\nI was thirsty. Water was miles away, and the sun was stubborn. I went to one of my favorite compounds, intent on sneaking in and grabbing a scant amount of food (too much would be rude). I ran into a woman who lived there once, maybe a few months before, when I was scavenging the woods for food. She was middle-aged and too kind. She wanted me to come back with her. I thanked her and fled. \n\nEvery now and then I crept into the compound. I think she knew it, because the people guarding had to have heard me and they never came after me. I figured she warned them.\n\nI wanted to wait until dark but my stomach ached horribly and sparks danced before my eyes. I needed to eat. \n\nI crawled beneath the electric fence into the little tunnel I dug. A few people were guarding the main entrance, chatting amongst themselves. Once I was good to go, I sped toward the barn they kept their food in. No one was watching it, and no one was inside. \n\nThey had potatoes. I could have wept. As I shoved things inside my bag, the back of my neck began to prickle. Someone was watching me.\n\nI spun around, and sure enough a man stood near the door, casually watching my every move. I couldn't see his face; he was a black shadow against the sunlight.\n\n\"I wondered when you'd come again,\" he said. His voice was gravelly and emotionless. I held my knife tighter.\n\n\"Nate, you're scaring her.\" The woman I'd met before moved past him. She took my hand, ignoring my flinch and the knife I held in the other hand. The woman began to tut, looking me up and down. \"You're so skinny.\"\n\n\"That's a surprise considering she takes all our food.\"\n\n\"Shush, Nate.\" She stroked my face. I took five steps back. \"Why don't I cook you something before you go, sweetheart?\"\n\nI cleared my throat and tried to compose myself. \"No. Thank you, but no.\"\n\nThe man came into the barn and was illuminated by the stripes of light coming in from the roof. He appeared to be in his early to mid-thirties. He was at least a decade earlier than me. He looked a bit like Viggo Mortensen, I thought. I wondered if he was still alive, too. My mind trailed off, thinking about all the movies I loved and the actors in them. Angelina Jolie and Brad Pitt. Bradley Cooper. Leonardo DiCaprio. Were they dragging their own corpses through Hollywood at this very moment? I shuddered.\n\n\"So she steals what's not offered, and rejects what is. Interesting.\"\n\nThe woman whipped her head towards him. \"If you can't be any help, then just go,\" she snapped.\n\nHis eyes burned into mine. \"There's no way in hell I'm leaving you alone with her. She'd stab you for those potatoes.\"\n\nI remembered the weapon I held in my hand and blushed. I was a lot of things, but I had yet to descend into a murderer. \n\nShe snorted. \"Please.\" She looked back at me, softening her face. \"Please let me make you a meal. I swear that you'll be free to go afterwards. And you can take as much food with you that you want.\"\n\n\"No.\" I looked back at the man. \"I want to go.\"\n\n\"I won't let that happen,\" he said. \"You'll stay until she makes you something or you leave with nothing.\"\n\nI dropped the potatoes. \"Then I'll leave with nothing.\"\n\n\"No!\" His mother picked them up and shoved them back at me. \"You can take whatever you want. I just... I wanted to help. I think about you all alone out there and I worry. There's no need for you to be alone. We have plenty of room, and you'll just have to do a few chores. Everyone will give you privacy, I swear to you.\"\n\n\"Mom, give it up,\" the man said. \"She's practically feral.\" He looked back at me. \"Normally I'd have kicked your ass out of here by now, but I don't want to upset my mother. You're staying here for dinner or I'll cut your throat.\"\n\n\"Nate!\"\n\n\"I don't want to hear about you anymore. I don't want my mom worrying about your ungrateful, thieving ass. So you'll come back with us, and you'll let her wash you or whatever the fuck she wants to do with you, and you'll sit down and eat with us and then go on your fucking way. And I never want to see you again afterwards, you understand me?\"\n\nI had no choice. I could run, but the gleam in his eyes assured me I wouldn't get far. \n\nMy shoulders slumped. \n\n____\n\nHe followed us back to the large house. His mother introduced herself as Wendy, and she looked downright thrilled I was coming with her. She babbled about the others, but I didn't listen. I searched for ways out, for someone I could overtake.\n\nWe burst into the house but Wendy moved too fast for me to study the surroundings. We climbed the stairs and went into the first room with an open door.\n\n\"So this is my room,\" Wendy announced, tugging me in behind her. The room was airy and feminine, and the bed looked incredibly comfortable. I stole longing glances at it.\n\nShe brought me into the bathroom and my eyes bulged when I saw the grand tub. I used to love, love, love taking baths. She caught my excitement and grinned. She had a jug of water in her hands and poured it in.\n\n\"I'm sorry that I can't make it hot right now. Maybe next time.\"\n\nMy back stiffened. \"Next time\" made me freeze up and she recognized her mistake immediately. \"I didn't mean that. I know you're going.\" She eyed the water and changed the subject. \"Would you like me to help you wash?\"\n\n\"No. I can handle it.\"\n\nShe smiled and pointed at a basket of bars of soap, still packaged. \"Soap's in there. Enjoy yourself.\"\n\nBefore she shut the door entirely, she stuck her head back in. \"Could you tell me your name? I'd love to know it.\"\n\nI bit my cheek. It had been so long since I heard someone say it. The last person was probably Joe, screaming for me as the horde of undead ripped him away.\n\nI wanted to hear it just as much as I wanted her to touch my face again, as much as I wanted to soak in the water. This was all so dangerous. There was no point in forming attachments; they'd be broken eventually, and in a horrific way.\n\nBut Wendy was incredibly kind. Something about her made me want to open up and be held in a tight hug. She looked so hopeful standing there, as if me telling her my name would make her day.\n\n\"Fiona,\" I whispered.\n\nHer grin was huge. \"Fiona. What a pretty name.\"\n\nI tried to smile. \"Thank you.\"\n\n\"Enjoy your bath, Fiona. I'll see you downstairs.\"\n\n\"Thank you,\" I said again, because it felt really good to say.\n\n________\n\nShe left me a pale blue dress on her bed. It was worn, and missing a button, but it was perfect. She'd also left me a frayed bra, and silky underwear that I'd never dared to wear before. It was amazing to put real clothes on, to feel attractive again. \n\nI tiptoed to her full-length mirror, terrified to look at myself. It had been a long time since I'd seen my reflection, and I had no way of knowing what a year of hunger and stress had done to me.\n\nA girl stared back at me. She was tanner than I ever thought I could be. And skinny. My grandmother couldn't refer to me as her chubby lovey anymore, if she were here. I angrily pushed that thought away and focused instead on how good I looked in the dress, how wonderfully long my brunette hair had grown. My brown eyes appeared to be a shade lighter when I took in my whole appearance. \n\nEventually I tore my eyes away. Wasn't vanity a deadly sin? I didn't want to push it.\n\nI tugged on my boots and allowed myself one last peek. I looked like a hippie, like a hipster girl who loved to mix soft with hard. So not like my preppy days. I liked it. I liked how the material felt against my skin, how the dress swayed against my knees. \n\n\"Fiona? Dinner!\"\n\nIt was Wendy's voice. She called for me as if she'd called for me for years. As if I were her daughter. How casual, and familiar it all was. I blinked back tears.\n\nHeavy footsteps approached my door and I reached out for my backpack, intent on yanking out my knife, but it wasn't there. Fear gripped my heart. I was never without my knife. Were they planning to attack me? Would they keep me alive for a while and cut off parts of my body to appease the zombies that attempted to break in, as I heard some people did?\n\nMy door burst open and there stood Nate. His gaze swept emotionlessly over my body, and eventually met my own. \"My mother called for you. Let's go.\"\n\nI followed him as if he led me to my execution. Wendy stood in the dining room and smiled when she saw me. \n\n\"That dress is perfect for you. You look wonderful.\"\n\nI looked around the room. The others were curious. Judgmental. Some gave me unwelcoming glares. \n\n\"Thanks.\"\n\n\"Sit down, sweetheart. Right here.\" She pulled a seat out for me. I sat down gingerly, as if the chair itself would eat me up. \"We're having a real treat tonight! Roasted chicken.\"\n\nI didn't ask where they got it, or how they cooked it. I realized they were a very efficient group of people who admirably made do with what they had.\n\nA hot plate was placed before me, and it took everything I had not to tear into it as violently as the zombies ate their food. Wendy smiled wider as if she knew my thoughts.\n\nShe sat down next to me. \"Gravy, Fiona?\"\n\nI nodded and she poured a little on luscious-looking mashed potatoes. \n\nHer son sat across from us. He kept his eyes on his own plate, but I could sense anger vibrating off of him.\n\n\"Let me introduce you to everyone while we eat. That's Libby,\" she said, pointing at a short woman with cropped black hair. Libby didn't look particularly friendly. She had a hoop in her nose and a tattoo running up her forearm. \"And that's Ariel.\" \n\nAriel had long blonde hair and green eyes. She was quite beautiful. I bet all the men there had tried to fuck her, and I bet she loved it. Her smile didn't meet her eyes. I was sure she was as unhappy about my presence as Nate was.\n\nWendy gestured towards a tall man with dark skin and big eyes who appeared to be in his forties. \"That's Doug. He's a sweetie.\"\n\nHe was a big guy. \"Sweetie\" didn't seem like the right word to describe him, but he didn't seem bothered. Then he offered me a genuine smile and I saw what she meant. \"Nice to meet you.\"\n\nWendy pointed at a quiet man in the corner. \"And that's Zach.\"\n\nHe nodded at me, not cracking even a fake smile. He wore glasses and an expensive sweater, in spite of the heat. His hair was fluffy and super black, and his eyes from what I could tell were a bright green. I was pretty sure he used to be a preppy guy with a Labrador retriever. He was my type, actually, before all this. I wondered how the hell he ended up here.\n\n\"Well, that's everyone. Let's eat.\" Wendy gave me another scoop of potatoes. \n\nLibby watched me like a hawk, and her stare held a great deal of displeasure. She took a chug of water and wiped her mouth with the back of her hand. \"Are you alone?\"\n\n\"Yes,\" I said.\n\n\"How have you survived this long?\" \n\n\"By staying on my own.\"\n\nNate looked unimpressed and poured himself a glass of wine (where the hell did they get wine?). \"That's not entirely true. You steal our food.\"\n\nI opened my mouth to object, but shut it when I realized he was right. My grandmother's voice in my head urged me to apologize, but I refused to say sorry for trying to survive. We lived in an even more dog-eat-dog world than before the contagion, and we both knew I could have done a lot worse than steal a few eggs and some loaves of bread. \n\nAriel snorted and ran a hand down her long neck. Then she crossed her arms so her breasts pushed out. Nate was too busy staring at me with displeasure to notice. \n\nShe cleared her throat. \"I'm sorry, but may I be blunt?\"\n\nWendy shook her head. \"Not now. This isn't the right time to-\"\n\n\"No, I'd like to know why we're all falling over ourselves to welcome this chick when she steals our hard-earned shit.\"\n\n\"I'd like to know that, too,\" Zach chimed in. His voice was as quiet as I expected. \"We exiled Frank just because-\"\n\n\"Enough.\" Wendy shut them up, though Ariel looked down at her plate like a petulant child. \"I just wanted to bring her in for a nice meal. Where is your sense of human decency? I hope to God you haven't lost it, because that's all we have left.\"",
        "\"Frank would never-\" Ariel started, but she was interrupted when Wendy slammed a fist down on the table. I didn't have to know her that well to know this was an uncharacteristic and, judging from the expressions from those at the table, frightening side of Wendy.\n\nI cleared my throat. \"Look, I should go. Thanks for the meal. It was... really nice of you. I appreciate it.\"\n\nI went to stand but Wendy grabbed my arm. \"They're right about one thing. I can't allow you to take our food anymore. It's not right to the group.\"\n\n\"I won't,\" I said, perhaps too quickly. \n\nHer smile was disbelieving. \"Yes, you will. And then I'll have to let them deal with you. Please do us all a favor and join us.\"\n\n\"What?!\" Ariel shrieked. \"Are you kidding me right now, Wendy?\"\n\n\"I really don't think we need another person here,\" Libby snapped. \n\nAriel tugged Nate's sleeve. \"What do you think? You don't agree with your mom, right?\" \n\n\"I think,\" he began, \"that my mother's right.\" He eyed me with suspicion. \"We let her in, we keep an eye on her. First sign of trouble we kick her ass out.\"\n\n\"Of course she'll be trouble. She's been stealing shit for months!\" Ariel pushed her plate away disgustedly. \"I can't believe you right now.\"\n\n\"Ariel, if you can't act like an adult you're more than welcome to leave the table.\" Wendy sounded so much like a stern mother that a small laugh escaped from me.\n\nThen my smile died. I couldn't remember the last time I laughed, or smiled, or found anything amusing. The ball of emotion in my chest grew. I didn't want this. Any of this.\n\n\"No.\" Their faces turned towards me. \"I don't want my story to become yours, or your story to become mine.\"\n\n\"Your story is already ours,\" Wendy whispered. \"We share a story. It's a tragedy, and it's terrible, but we fight every day to make it better. Please stay with us. I want to help you.\"\n\nI stifled a sob and laughed bitterly instead. \"Help me? How can you help me? And why the hell would you want to help me?\"\n\nWendy reached over and hugged me. God help me, but I wept. I couldn't stop. Tremors of pain, of unreleased sorrow wracked through my body. \n\nShe helped me stand and brought me upstairs. I hardly knew what was happening, but somewhere in my mind I registered she was setting me down on a very soft mattress. How good it felt. \n\nI cried harder. \"I miss my mom. I miss my grandmother and my father. I miss everyone.\"\n\nWendy pushed some hair back from my forehead. \"I know you do, sweetheart. I know you do.\"\n\n_______________\n\nAt some point I fell asleep. When I woke, I nearly had a heart attack. I couldn't remember where I was or why. \n\nSlowly everything came back to me, and I blushed with shame for having let myself be so vulnerable in Wendy's eyes. In all of their eyes. If I didn't want to stay before, I knew I couldn't stay now.\n\nI tore off the blue dress and stepped into my tattered jeans and my wrinkled t-shirt. The house was quiet, but I wasn't an idiot. I didn't doubt someone was watching for me. \n\nBut when I got downstairs, there wasn't a soul to be seen. I rushed outside and finally relaxed when my boots hit the grass. \n\n\"I hope you aren't planning on grabbing some take-out while you sneak away.\"\n\nI spun around and spotted Nate on the porch, watching from the shadows. \n\nI tried to stand straighter. \"Of course not.\"\n\n\"Right.\" He came closer to me. He assessed me frankly and deeply, so intently I could have sworn he read my thoughts. \"You have an important choice to make: stay or go.\"\n\n\"I made it already.\"\n\nHe shook his head. \"You can stay here. Be isolated, fine. Never speak, okay. But my mom's got it in her head you belong with us. She likes you.\"\n\nI stared at the ground. \"That's crazy. I haven't given her a reason to.\"\n\n\"No,\" he agreed with a smile in his voice, \"but that's just my mom. She's a sentimental kind of lady, and she's going to be brokenhearted when she wakes up to see you snuck out in the night. She also loves projects. And the truth of the matter is she thinks we need you just as much as you need us.\"\n\nMy head lifted so I could stare at him.\n\n\"We all need to stick together or we're never going to survive.\"\n\n\"I thought you hated me. That you couldn't trust me.\"\n\nHe pursed his lips and gazed up at the sky. \"I don't trust you. I also think my mom is nuts for wanting you to stay.\"\n\nI hugged myself and rubbed my arms. \"So why are you stopping me?\"\n\n\"Guilt,\" he said simply. \"I wouldn't be able to face her if I couldn't at least say I tried.\" He still kept his gaze on the sky.\n\n\"I just...\" I, too, looked upwards. The sun was rising, and thousands of stars were melting into the dawn. \"I don't know. I can't make up my mind.\"\n\n\"You can always leave later. We're not gonna chain you down.\"\n\n\"I don't think I can do fuzzy and happy like you guys do.\"\n\nHe laughed mirthlessly and I glanced at him, struck by how much more attractive he was when he smiled. \"Fuzzy and happy? Clearly you're seeing what you want to. If you don't think we haven't suffered, lost, been nearly killed then you're an idiot.\"\n\nI felt like an idiot. \"I'm sorry. I just mean-\"\n\n\"We haven't checked out like you. The only thing that separates us from them is we can still feel. We can make a decision to stay alive, and really live, or do what you're doing. And honestly? What you're doing sucks, and it isn't that different from being like them.\" His eyes flicked down and then back up my body. \"Think it over.\"\n\nHe went back to the front door and entered the house.\n\nI already knew what I was going to do. I'd been running too long and I was tired. I wanted to avoid people, to avoid depending on anyone else, but I forgot what it was like to be touched, to talk to someone. To be around people that didn't want to eat me. \n\nI knew it was stupid, that I'd be sorry, but fuck I was greedy. I wanted more. I wanted to stay.\n\nYet another deadly sin. It felt too good to pass up. And hadn't I already done my penance?\n\nSo I spun on my heel and went back upstairs.\n\n________\n\nAriel gave me such a nasty look the next morning I nearly smiled. Zach sipped from his mug, seemingly resigned to the fact I stayed.\n\nLibby and Doug came into the kitchen, laughing about something. They stopped short when they saw me. Libby rolled her eyes and muttered something under breath.\n\nWendy poured me more coffee-coffee!-and sat down.\n\nAriel stood, her chair dragging loudly against the floor. \"I'm going on patrol. Zach, you coming?\"\n\nDoug sat across from me. \"Don't worry about her. She's resistant to change. We all are. Things have changed enough, no?\"\n\n\"I don't want to upset everybody.\" I stared down at my coffee. \"It's not fair to come here and screw everything up.\"\n\n\"You already have,\" Libby said. Wendy shot her a glare. \"What?! She has!\"\n\n\"I want the two of you to take Fiona around on a tour of the farm, okay?\"\n\nDoug nodded and downed his coffee. Libby looked like she wanted to stab herself with her butter knife. She ran her fingers through her short, black hair and watched me curiously.\n\n\"I'm surprised you made it all this time by yourself. You don't seem like the type.\"\n\n\"Libby,\" Wendy muttered in warning.\n\nMy eyebrows lifted. \"The type?\"\n\n\"You're kind of a Barbie girl.\" She bit her fingernails and I took a better glimpse at the long and very detailed snake tattoo curling up her arm. \n\nI was more than a little insulted. \"A Barbie girl? Just because I don't have skulls tattooed on my tits doesn't mean I'm not capable of taking care of myself.\"\n\nLibby smirked and Nate decided to stroll into the kitchen at just that second. He poured himself some coffee and sat down at the table with us. I could have sworn he was fighting a smile.\n\n\"She's definitely not Ariel's type,\" Doug said, continuing on the conversation.\n\n\"Ariel couldn't last a day by herself, and didn't. She was lucky as shit to have found Zach to save her. I'm just curious about this one, that's all.\"\n\nWendy changed the subject. \"Shouldn't you three be heading out?\"\n\nLibby rolled her eyes but Doug smiled and put his arm around my back. \"Prepare to be amazed.\"\n\n_______________\n\nThey had cows and chickens. They made their own cheese, and on special occasions had steak or chicken. Mostly they ate a vegetarian diet, which I heartily approved of. It was hard eating animals after we knew what it was like to be hunted. It was also a question of logistics; they just didn't have that many animals to eat.\n\n\"And we have an electric fence,\" Doug said, a big, proud grin spreading across his face.\n\nMy neck snapped to gape at him. \"How? How do you get the electricity?\"\n\n\"Generators. We have a waterfall nearby and we've taken over an already existing system there using a running turbine. It's some pretty awesome, high-tech stuff. Zach helps us out with it. The water runs across the turbine, which moves the copper coils of the generator. We have power lines that run along over here that carry the electricity. There's more to it than that, but Zach's got it covered. He's invaluable, man, let me tell you.\"\n\nI was impressed and looked up the power wires, rubbing the back of my neck. \n\n\"We turn them off whenever anyone is out on a mission. We try to keep the communication heavy, you know, because we don't like keeping them off for long.\"\n\n\"Mission?\"\n\nLibby snorted. \"Yeah. Sometimes we need supplies, so we go looting. We're rural here, so it takes a while. Somebody needs to go head over to the place Doug just told you about and make sure it's running smoothly. All this has to be done in as much daylight as we got. And sometimes we trade with people passing by, whatever.\"\n\n\"Everyone has a role of some kind.\" Doug smacked my back in camaraderie. \"You'll get used to it.\"\n\nWe'd reached the barn and Libby sank onto a pile of hay. \"Know how to shoot?\"\n\n\"A gun?\" Her smile made me feel like an idiot. \"No. Seemed like an unnecessary risk using them. They're so loud and I've just used my knife. I used to have a big sword but I lost it.\"\n\nIt sounded ridiculous to say \"sword\", but she nodded to herself and looked out to the center of the compound. Zach and Ariel looked like they were arguing about something. \"Uh oh, Romeo and Juliet are fighting.\" \n\nI peered over at them, not even aware they were a couple. They seemed like total opposites, and the way Ariel watched Nate I was sure they had something between them. \n\nLibby smiled at me. \"That'll be next for you then. You have to know how to shoot one.\"\n\n\"I'll teach you,\" Doug volunteered.\n\nI exhaled heavily. \"Thank you.\"\n\n\"Are you overwhelmed?\" Libby asked me, plucking a piece of hay between her fingers.\n\n\"A little.\"\n\nShe smiled slightly. \"I was, too. You get used to it.\"\n\n\"Do you think I'm too much of a Barbie to get there?\"\n\nHer eyes flicked up to mine and her smile widened. \"Time will tell, Princess. Something tells me you could kick a few asses if you had to.\" Her face sobered and she stood up. \"Look, I'm sorry. It's just not in my code to like and trust somebody blindly. It's gonna take me a while. Just stay out of my way and do what you're supposed to and we'll be good.\"\n\n\"Understood.\" I was surprised she even said that much.\n\nWe went back to the house a little later. I felt strangely, and as I saw Libby smile at me (albeit reluctantly), I realized it was because I was already making the steps to belonging\u2014whether I wanted to or not.\n\n____________\n\nThat night I separated from the group after dinner and sat on the porch. My bare feet dangled over the damp soil. It awed me that things still grew from it, that mosquitoes buzzed around me even now and that the earth managed to continue spinning. \n\nI leant back on my elbows and stargazed for a long time. After a while I became aware of a presence next to me.\n\nDoug was to the left of me, whistling softly. He stared into the expanse of grass that eventually faded into the dark forest and rubbed his hands repeatedly over his knees; he was obviously anxious about something. As the minutes stretched on, I absorbed some of his nervousness and felt dread about whatever he was working up to say to me.\n\nHe cleared his throat. \"I don't want to bother you. I don't know if you want to be alone or not.\"\n\n\"It's okay,\" I said slowly. \"What's on your mind?\"\n\n\"I just wanted to tell you... I'm glad you're here. And ignore the girls. Libby'll warm up to you soon enough, she's a good girl. And Ariel? Ariel... just keep ignoring her.\"\n\nI smirked at the last part. Truly I was touched and surprised he was going out of his way to reach out to me. \"Thank you.\"\n\n\"You're going to like it here. It's really safe. Good people. Nate is my hero. He saved my ass a few months ago.\" He glanced at me, a small smile playing on his lips. \"He's a few people's hero around here.\"\n\nI didn't want to touch that, but I did have a question I'd been dying to ask someone. \"Who's Frank?\"\n\nDoug's face clouded and he leant away from me. \"A man who used to live here.\"\n\nI pulled at a stray stand of fabric of my dress and bit my tongue. I wanted to know more but it was too soon. I figured I'd get it out of someone eventually.\n\n\"It doesn't matter,\" Doug said after a bit of silence. \"You'll learn that. It doesn't matter what came yesterday. Not anymore.\"\n\nI let that statement swim through my mind. It sounded like something Doug recited to himself to get by, and there was a bit of truth in it that depressed me. It didn't matter that I graduated college at the top of my class, or that I used to sing at a local bar, or that I didn't think I could ever love Joe back. \n\nI tried to change the subject. \"I'm impressed by the way you've guys set yourselves up here. I've seen a few other camps and they're nothing like this.\"\n\nDoug nodded with a wry smile. \"That's why we don't have to just protect ourselves from those undead shits out there. Others want what we have, and you better bet your ass they'll do anything to get it.\"\n\n\"Do they come often?\"\n\n\"Yup.\" Doug pulled up a weed. \"Truth be told, I hate them more than those monsters. These people are still people and they know what they're doing, and they do it anyway.\"\n\nI shuddered remembering some of the horrific things I'd seen-fathers slitting sons' throats because they wouldn't give them more food, daughters leaving mothers behind to be eaten and dismembered.\n\n\"But like I said, you're safe here. As safe as anybody could be.\"\n\nEvery star was out that night. I watched them, recalling a fact someone told me once: When we look at stars, we're really looking into the past. Most of the stars are already dead. They died millions and millions of years ago, probably, and we only saw them now.\n\nDoug put his hand on my shoulder. \"It's going to be okay, sweetie.\"\n\nI collapsed into his shoulder, realizing only then that I was crying.\n\n_________\n\nWendy set me up on a bed made of a dozen comforters in the middle of the living room. She also gave me a bunch of clothes that fit closely enough. She apologized she didn't have a mattress for me yet. I waved off her worries and fell into my bed, submerging myself into the deepest sleep I'd ever known.\n\nLibby shook me awake. It was dark, and my brain was foggy. I rubbed my eyes. \"What's wrong?\"\n\n\"It's our turn to milk the cows,\" she whispered.\n\nI fought back a groan and sat up, shuddering in the early morning cold. I shivered on some sweats and followed her outside.\n\nThere were two cows there and four calves sleeping beside them. It was an amazing sight to see.\n\nShe handed me a pail and knelt down, pointing to the space beside her. I took the hint and knelt down into the soft earth. The hint of manure in the air nearly made me gag. \n\n\"You should wash her udders first,\" Libby whispered. She dipped a cloth into a pail of cool water she'd brought with her and tenderly wiped the cow. \"It relaxes her.\"\n\nShe then wrapped her fingers around one teat. \"Just like this. Then squeeze firmly, but not too hard, and get maybe three or four squirts out of it. Gets rid of dirt and bacteria.\"\n\n\"Okay.\" \n\nI must've looked a little queasy because she actually smiled and said, \"You'll get used to it.\"\n\nEveryone kept saying I was going to get used to things and it was slowly driving me crazy. That was one of my biggest fears. I didn't want to get used to things, because things were unbelievably shitty.\n\nLibby went on with her directions. \"K, so then you wrap your thumb and finger and gently squeeze. You'll feel the milk coming, so that's when you release your fingers a bit. And that's it. Got it?\"\n\nI nodded but I didn't really. \"I'm probably going to fuck this up. I wasn't made to do this kind of thing.\"\n\n\"None of us were,\" she snorted. \"Just milk the cow.\"\n\nI sighed and reached out my hand for one of the cow's udders. I massaged it like Libby showed me and then squeezed. That's when the milk squirted me right in the face.\n\nLibby burst out laughing and even I joined in. I couldn't recall the last time I found something funny, so I basked in it. Libby showed me how to do it again and I got the hang of it.\n\nWe worked in silence for a while. When Libby was satisfied we had enough milk, she tapped my shoulder and we headed out. The sun was just rising and the sky looked beautiful. Libby stopped walking and stared at something in the distance. \n\n\"Oh, there's my cat! He's sleeping. Come meet him.\"\n\nI followed, strangely excited to see a cat and a little surprised that Libby of all people would have a pet. \n\n\"Oscar!\" she called, bending down to pet him.\n\nLibby froze. I looked down at the bundle of fur and couldn't understand her trepidation. I stepped closer and she hissed, \"Don't!\"\n\n\"What's wrong?\" I hated how scared I sounded.\n\n\"He's dead,\" she said flatly. \n\nI knelt down beside her. Sure enough the cat's tongue hung outside the side of his mouth and one eye was opened, staring at nothing. The quiet between us was eerie. I wanted to apologize, to say some comforting words, but I knew my comfort was unwelcome. Her face was stony and frighteningly devoid of emotion.\n\nShe dropped her hands and relaxed into the ground. She let out the most heartbreaking wail I'd ever heard. Tentatively I wrapped my arm around her shoulders. She turned and wept into my neck. We sat there for what seemed like hours, mourning for something much more than a beloved pet.\n\n_____________\n\nLibby didn't come down for dinner. No one said a word about the horrendous sobs we heard coming from upstairs. At some point as we ate canned beans and boxed potatoes, the crying stopped. Doug stood.\n\n\"I'm gonna go check on her.\"\n\nWendy looked beside herself. When Doug disappeared, she touched my arm and whispered, \"Did the cat look like... it had been attacked? I've wanted to ask since you came home but\u2014\"\n\nI could feel Nate's stare, and I shifted uncomfortably.\n\n\"No. He looked... it looked natural.\"\n\nShe smiled at me with watery eyes. \"Thank you, Fiona. I don't know how to comfort her. She's so delicate and I'm overhanded with the sympathy sometimes.\"\n\nI didn't know what to say. Ariel rolled her eyes and the sight provoked me. I turned back to Wendy. \"No, you're not. I just think Doug is the best person to hang with her for right now.\"\n\nZach cleared his throat. \"Maybe this isn't the best time, but it's important. I saw MacKenzie this afternoon. He didn't say anything, he was just... watching.\"\n\nEveryone grew still at the news. Nate and Wendy stared at one another, carrying on a silent conversation. \n\nI was at a loss but I sensed this was more important than I could imagine. \"Um, could someone please explain?\"\n\n\"MacKenzie is just a boy with too much time on his hands,\" Wendy said, but she wouldn't meet my eyes.\n\nDoug snickered. \"He's not a boy, he's an asshole. A dangerous asshole. He has a bunch of mavericks following him around who are crazy idiots. They like chaos.\"\n\n\"They want what we have, and they like to play around with us. It's a sport,\" Wendy explained. \"We have to fight them off every now and then.\"",
        "My eyebrows lifted. \"Fight them?\"\n\n\"We usually just trade with them, but we've had a few fights. They think it's funny,\" Zach piped in. I wasn't sure if he'd ever spoken to me directly before, so I sat up. \"I guess we always have to be prepared in case they decide to get violent.\"\n\n\"They're dicks,\" Doug muttered. \"I'll tear MacKenzie apart if he even thinks about\u2014\"\n\n\"Shut up. Please. I don't want to hear this tonight,\" Wendy cut in. \n\n\"Sorry that a dose of reality is infringing on your dream world, Wendy.\"\n\nWendy took a deep, calming breath. \"Can't we have a nice meal?\"\n\nNate slammed his fists against the table. \"Jesus Christ, Mom, a nice meal? Are you fucking kidding me? A nice meal? We're not your version of a happy family, anymore.\"\n\nHis cheeks were red and his eyes glittered with fury that made me shake. He looked down at his plate, disgusted. A moment later he flipped the plate over onto the floor and it shattered. He got up and walked over to the window, his hands in his hair. \"You are so far from reality sometimes, Mom.\"\n\nWendy's face was completely white. Tears fell down her face, but she kept her expression blank. She stood unsteadily and stared at Nate's back. \"What do you want us to do, Nate? Should we put a bullet through your brain so you won't have to worry about waking up after? It would definitely be the easy way out, and I don't think any of us would blame you.\"\n\nNate turned half his body and stared at her. \"You know that's not what I want.\"\n\n\"Tell me what you want, because I know what I want. I want to make my last days on this earth as happy as they can be. I want to be with my son. I want to laugh. I want to live as fully as I can, because I know it can't be for long. Maybe I've been selfish shoving this idea of a happy family sticking together down your throat. For that, I'm sorry.\" She went for the stairs and paused, glancing at all of us. \"It's been a long day and I'm going to bed.\"\n\n______________________________\n\nThe next morning I was shaken awake. It took me a few blinks to make out Nate hovering over me.\n\n\"We're going hunting. And I'm going to teach you how to shoot a gun.\"\n\n\"Hunting for what?\" I asked, my voice thick with sleep.\n\nHe didn't answer my question. He swept out of the room, his boots heavy on the floor. \n\nI looked down at what I was wearing-just a long shirt Wendy had given me, and panties that had been washed too many times. I blushed but was content that the shadows had hidden most of it. And truth be told, I didn't think Nate cared, or even noticed.\n\nI straightened myself out and met up with Nate who was smoking on the deck.\n\n\"You smoke?\" I was shocked but I didn't know why. He did look rough, but I thought he was smarter than to suck on a cancer stick.\n\nIn the context of our lives, however, I figured it didn't matter.\n\nHe nodded, not looking at me. \"When I feel like it.\"\n\nZach slipped by us and headed for the barn to milk the cows.\n\n\"We have to be careful today,\" Nate said.\n\nI looked at the side of his face, trying to figure out his meaning.\n\n\"Doug wasn't exaggerating about Mac. Things have been semi-peaceful but we don't trust each other. I trust a zombie near a baby before I trust him.\"\n\nHe led me to an extended piece of land where we could just barely make out the farmhouse. We walked over to a decaying, abandoned wooden fence with a few glass bottles standing on top.\n\nA weird sense of childish glee came over me and I grinned. \"Oh my God, I feel like I'm in a movie.\"\n\nI couldn't remember feeling this excited since everything in our world was wrecked.\n\nNate was obviously confused, and the expression was kind of adorable on him.\n\nI giggled. \"Some guy is teaching me how to shoot a gun on a farm. Are you going to stand behind me and help me aim?\" I laughed harder.\n\nNate squinted his eyes. \"Are you okay?\"\n\n\"Perfect, sorry.\" But I couldn't stop laughing.\n\nHe sighed and rubbed his face. \"We don't have all day.\"\n\n\"I know, sorry.\" I tried to get serious but I couldn't help it. A choking laugh escaped me and Nate groaned.\n\n\"I fail to see how learning how to shoot zombies is amusing.\"\n\nTears fell from my eyes and I bent over, giggling like a madwoman. How odd that laughter just a few days before was so unfamiliar to me. \n\nNate shook his head. \"Are you finished? 'Cause it's really not funny, and this is important.\"\n\nI cleared my throat and stood, wiping the smile off my face. 'Yeah, yeah. Sorry.\"\n\nNate handed me his gun and moved behind me (just as I imagined). He taught me how to hold it, touching my elbows or brushing his fingers against my knuckles. My cheeks flushed and I felt like a moron. He smelled nice. Really nice. I used to love passing by the cologne stands in the mall, catching the scent and closing my eyes for a moment. Joe never wore cologne, and it never occurred to me to buy him any.\n\nNate must've had some cologne stored away, and it tickled me that he still used it. There was also a hint of sweat and skin when I moved closer to him. And he was so warm. Unconsciously I stepped back a little more into his body. \n\n\"So you keep your target just above the line of sight over your gun, okay?\" he was saying.\n\nI refocused. \"Okay.\"\n\nHe slid something back and forth. \"Insert the trigger finger into the trigger guard.\"\n\nWe did this a few times before he took the gun and pulled out a few bullets. His eyes bore into mine. \"This is really fucking important. Make sure the safety is on when you load.\" He showed me the safety again and I nodded. He moved behind me again and took the safety off. \"Take it off only when you're in firing position.\"\n\n\"Okay,\" I said, feeling a bit overwhelmed. \n\n\"Then when you shoot, you should fire in time with your breathing. Keeps the shot steady.\"\n\n\"I don't think I can do this,\" I blurted.\n\nNate shifted the safety back on and stepped away from me. He moved in front of me and studied my face. \"You have to.\"\n\n\"I can't shoot a gun.\"\n\n\"Of course you can.\"\n\n\"I can't. I'll just use swords and knives and other shit.\"\n\nHis expression softened slightly. \"You'll die that way.\"\n\nI blew out a breath. \"Everyone here knows how to shoot a gun?\"\n\n\"Yup.\"\n\n\"Even Wendy?\"\n\nNate looked at the ground to hide his smile. \"She knew how to before all this.\"\n\n\"Wow.\" I inhaled and exhaled deeply. \"Okay. Let's try it again.\"\n\nNate moved into position behind me. I listened closely to his directions.\n\n\"Now squeeze the trigger steadily, but not too quickly. Too fast will throw off your target. And don't forget to follow through-don't move for a few beats after. Now squeeze.\"\n\nI didn't think about it; I just squeezed. The sound was loud and terrifying. I think I might've cried out, but I was too caught up in staring at where the bottle I shattered used to be. I eventually looked over my shoulder and caught Nate grinning. \n\n\"Nice shot.\"\n\nMy arms lowered slowly and Nate reached over to flick the safety. \"Then afterwards you unload the gun and double-check it's unloaded. You should really keep it loaded, but it's up to you.\"\n\nI took a shaky breath. \"Okay. Here, take it back.\"\n\n\"Nope. It's yours now.\" He pulled another handgun out of his back pocket. \"We have a surplus. It's one of the first things my Dad and I collected.\"\n\nMy mind caught onto Dad and it occurred to me that whoever his father was, whoever Wendy's husband was, he wasn't with us. I didn't ask him about it and he didn't share anything more. Instead I followed him to the gate of the electric fence. I examined at it warily. \n\n\"Are you sure the electricity is off?\"\n\nNate looked at me over his shoulder. \"I didn't take you for such a scaredy-cat. I thought you were a tough girl.\"\n\nHe said the phrase mockingly, as if he thought me the exact opposite. \n\n\"Fuck you, I am tough. I just don't want to get electrocuted at this very minute.\"\n\nI think he wanted to smile, but he suppressed it and pushed open the gate without bursting into electrified flames like I feared.\n\nIt must've rained sometime in the night because the soil was wet. My boots sank into fallen leaves and broken twigs. A bird swooped over our heads and I jumped.\n\nNate scanned the area attentively. One of his hands rested on his gun.\n\nHe nodded as if satisfied by what he heard, or didn't hear. His eyes came back to me and waved a hand forward.\n\n\"Let's go.\"\n\nWe travelled deeper into the woods. Raindrops occasionally slid off leaves and slipped onto our skin.\n\nI couldn't take the quiet. \"So, did you grow up here?\"\n\nHe peered at me from the corner of his eyes. \"Yeah.\"\n\n\"It's really beautiful.\"\n\n\"Uh-huh.\"\n\n\"You're an only child?\"\n\nHis eyes slid to mine. \"Yes.\"\n\nWe walked around for a bit before I had to tell him to stop. I was winded.\n\nI sipped some water and watched him pace. \"What exactly are we hunting for?\"\n\nHe shrugged and crossed his arms behind his head. \"A deer would be nice.\"\n\nI tried to ignore the fact that when he reached up, his shirt rode up and displayed his tanned stomach. It wasn't muscular, just lean. Before the war, I never thought about men's bodies much before. I knew I appreciated a strong jaw, messy hair and scruff (on some guys, if they could pull it off). And I knew abstractly that I hated exaggerated muscles. I appreciated quiet strength, like when a man gripped you and you were shocked at how strong his hands were. \n\nBut I never analyzed the parts, and if I did take notice of stupid things like a guy's stomach, it certainly never sent the sparks of awareness through my body that Nate's did now. \n\nI stopped that train of thought.\n\n\"A deer?\"\n\n\"I'm also hoping we have enough light to make it to town. We could use some pain meds.\"\n\nI sat on a tree stump. \"There is still stuff left in your town? How is that possible?\"\n\n\"We had a particularly violent wave of them come through town before everyone could loot. And afterwards we decided to take trips for stuff when we really needed it. To preserve it, you know. We can't carry it all, anyway.\"\n\nI plucked a wet leaf off my arm. \"It sounds really dangerous.\"\n\n\"It's more dangerous not to have medicine.\"\n\nI stared at him hard. \"Maybe we should try to take as much as we can today.\"\n\nHe shook his head and gazed at some point past me. \"It's too far to carry all that we need.\"\n\nI got up and brushed myself off. \"Then let's go.\"\n\n________________\n\nI was used to seeing ghost towns. At first they scared me and gave me nightmares. There was something terrifying about magazines featuring the last celebrity news still waiting to be purchased from their racks, candy bars sprinkled across the floor and blood smeared on the cash register. You expected someone\u2014an elderly woman, perhaps, or an impatient mother\u2014to come around the corner with a carriage, but there was no one ever there. Not even a zombie.\n\nThis town was no different. Bullet-filled bodies lined the streets. Crashed cars sat in the holes they tore in the dry cleaner, the deli and the nail salon. Blood and body parts lay messily across the road. Nate stepped over them and I followed.\n\nWe stopped at the general store. Nate carefully pushed the door open and flicked on his flashlight. We listened for a moment, but there was no sound. Neither of us were stupid enough to believe the coast was absolutely clear, but we were satisfied enough to slip inside. \n\n\"Grab what you want but remember you have to carry it back,\" he murmured.\n\nI spotted a box of Benadryl and grabbed it. The past few nights I hadn't had trouble sleeping, but I knew the insomnia would come back. I passed by the display of condoms and couldn't help but let my eyes sweep over all the different kinds. I wondered if I should take a few. It couldn't hurt to have them on hand if anybody wanted to use them.\n\nI looked over my shoulder and spotted Nate watching me. I looked away, totally embarrassed, and blindly reached for some random box nearby. \n\nWe worked like this for a while. I'd nearly cleaned all the shelves and shoved their contents in my backpack. Nate gave me a dubious look. \n\n\"And you're going to be able to carry all that?\"\n\n\"Yes.\"\n\n\"And hold your own if we come across something?\"\n\n\"Yes.\"\n\nHe sighed, not looking convinced. \n\nWe walked out into the late morning sun. I felt strange and spun around, closely watching for something. Panic rose in my chest. \n\nNate must've felt it too because he reached for his gun. Too late, for a bullet zipped by me and right towards Nate's arm. His blood practically exploded and splattered against my face. A small shriek escaped from my throat. Nate's frenzied eyes met mine. \n\n\"Run!\"\n\nHe grabbed my elbow and dragged me behind him. I fell to one knee and he cursed. \"Get the fuck up!\"\n\nI stood on shaky knees and ran after him. I tried to channel the survival skills I'd honed on my own, but my brief period of shelter had softened me. My senses were dulled. Clouds covered the sun and an abrupt downpour fell from the sky, making the trek back even more difficult. I slipped on the leaves and landed on my right knee. \n\nNate heard me fall. \"Get up! Get up!\"\n\nAnother bullet flew past me, this time bursting into a branch. I sucked in air and ignored the splintering pain in my knee as I stood to chase after Nate. \n\n\"Faster!\" he yelled.\n\nI heard more gunshots. I knew we were still a long way off from the farmhouse and my legs were growing tired. I thought my knee might be broken but I pushed my legs harder.\n\n\"Is it MacKenzie?\" I screamed\n\nIf Nate heard me, he ignored me. He moved much faster than I did and I desperately tried to keep up. I felt blood trickling down my leg and fought the urge to collapse. The gunshots kept coming. It soon became difficult to distinguish thunder from shots.  \n\nFinally the fence was in view. I could have cried with relief. My back was killing me with the added wait of our loot and I knew my knee was about to give out at any moment.\n\nNate reached the fence first. He turned and screamed, \"Fuck!\" when he saw how far behind him I was. He came back for me. He roughly pulled my backpack off my back and put it over his good shoulder, and then crouched down. \"On my back. Now.\"\n\nI draped myself over his good shoulder. He grunted and stood. He moved as fast as he could with me on top of him. Doug was at the gate, his eyes and mouth wide with fear. A string of gunshots rang through the air.\n\n\"Hurry the fuck up!\" Doug screeched. \n\nWe finally made it. Nate fell to the ground and I landed on his back. Doug swung the gate closed and someone turned the electricity back on. The charged hum was a comforting sound.\n\nNate rolled away from me and stood with effort. He yanked his gun from his pocket and shot rounds off into the vast forest. Whoever had attacked us had stopped shooting, and didn't seem to intend on advancing further. At least, not today.\n\nWhen Nate's gun was empty, he tossed it to the ground in disgust. He was covered in sweat, and shivered and bled heavily. \n\nI crawled over to him. \"Get inside. You need help.\"\n\nHe looked down at me, not really seeing me. \"I'm gonna kill him.\"\n\nDoug approached him and touched his good shoulder. \"Let's get inside, man.\"\n\nNate glared at the woods and screamed. \"Next time you come over here I will shove my gun up your ass!\"\n\nDoug pushed him. \"Get back to the goddamn house.\"\n\nNate turned his back slowly and stalked off. Doug helped me up and had me lean my weight against him. I hobbled back to the house, looking over my shoulder every few minutes.\n\n\"You're safe now,\" Doug whispered, but even he didn't believe it.\n\n_____________\n\n\"It's not broken,\" Ariel said. She sighed and got up, taking some bandages Wendy held. \n\nI was shocked when I heard Ariel was a nurse. She had absolutely no bedside manner, but she worked effectively. I bit back a scream when she poured some alcohol over my wound. She pressed the bandage down and looked up at me. \n\n\"You're going to have to keep your weight off it for a while. It's really banged up.\" She handed me a few pills and a glass of water. I swallowed them down and sank back onto Wendy's bed. \"You're going to be groggy for a while.\"\n\n\"Thank you.\"\n\nShe threw some things out in the trash and passed me to go check back in on Nate. The bullet miraculously just grazed him. It hurt like hell but he'd be okay, thank God. Ariel whispered to Wendy he might not be able to move his arm well for a while. \n\nWendy came over and hugged me. \"Are you okay?\"\n\n\"Yes.\"\n\nShe sat next to me with an exhausted groan. \"They don't think it was MacKenzie.\"\n\nI lay down on her pillows. \"They don't?\"\n\n\"He's not usually this aggressive, and he doesn't typically try to hurt us. He likes to play, but that's it.\" She looked out the window. \"It seems like there's another group of idiots out there who like to shoot their shiny guns at us for entertainment.\"\n\n\"What do we do?\"\n\nShe looked down at me. \"Nothing.\"\n\n\"Nothing?\"\n\n\"Nothing for a while. Doug and Nate are planning to go out there in a few days, see if they can draw 'em out.\"\n\nMy eyelids felt heavy. \"But we're safe?\"\n\nShe stroked my forehead. \"Yes.\"\n\nIt was a lie. I could feel it deep inside that Wendy had no fucking clue if we were safe or not. But she comforted me nonetheless, and it helped lull me to sleep.\n\nI dreamed about when I was twelve or thirteen and my mother took me to a beautiful field of sunflowers. She wore a blue dress that fanned out near her hips. She looked so happy that day, I remembered. When I looked back on it, it made sense: it was the day before she left us.\n\nWe rested in the grass. Mom ran her fingers up one of the stalks of the sunflowers. \n\n\"They're beautiful, right?\" I remember her asking me. \n\nIt was so hot and I was sweating in the frilly pink dress she made me wear. \"Yes.\"\n\nWe ran around like wild things for the rest of the day, and in my dream I got back the feelings of innocence and elation that I'd long forgotten. \n\nThen the mood of my dream changed. Mom kept running farther away from me. I opened my mouth to call for her but no sound would come. She disappeared and I screamed for her frantically, but a horrific silence fell over everything. I couldn't hear the birds, or the wind. I didn't even hear my own heart beating.\n\nI tripped and fell down hard on my knees. My surroundings came to life again, so loudly I had to cover my ears. I heard a loud humming and looked behind me. Horror slid down my throat and plopped into my stomach when I saw the huge hive of bees I'd tripped over buzz to life. Thousands upon thousands of glistening bees rose from the hive and came for me. I tried to get up, to run, to beg my mother to come back, but my legs were paralyzed.\n\nI woke screaming in Wendy's arms. \"Shush, honey,\" she whispered. \n\nSlowly I settled down and realized I was covered in sweat. My heart was thumping so loud I could hardly hear anything else.\n\nMy head was in Wendy's lap and my arms were wrapped tightly around her middle. It couldn't have been comfortable. \n\n\"I dreamt about my mom.\"\n\nWendy stroked my hair. \"What about her?\"\n\n\"The last memory I have of her.\"\n\n\"I'm so sorry,\" she said in a soothing voice. It was then that it occurred to me she thought I meant a year ago, and that maybe Mom had become a zombie, or had been torn apart by one. Which she could have been, for all I knew.\n\n\"I don't know if she's alive,\" I whispered. \"She left me when I was thirteen.\"\n\nWendy continued running her hand through my hair.\n\n\"She called me when I graduated high school. I begged to come live with her but she hung up on me.\" I covered my eyes with my hand. \"Then she called my father's house the day I graduated college. Or maybe it wasn't that day. I can't remember exactly. Looking back on it, someone must've told her when I was home.\"\n\n\"And did you talk then?\"\n\n\"No. This time I hung up on her.\"\n\n\"Did you know where she was living?\"",
        "I sighed and sat up beside Wendy, against the headboard. \"She moved to Florida. My dad and I moved in with my grandmother.\"\n\n\"That must've been terrible for you.\" Coming from anyone else, that line would have sounded like trite filler. Looking at Wendy's big blue eyes, I knew she meant it. Impulsively I hugged her.\n\nWhen I pulled away, I saw that she was crying. \"I'm so grateful to have my son here with me.\"\n\n\"I'm sure you are. He's lucky to have you.\"\n\n\"I chose him over my husband,\" she said in a rush.\n\nI didn't know what to say, so I stayed silent.\n\n\"There was... It was before we had the electric fence working. We were constantly on guard. Jim...\" She swallowed down a sob. \"Jim was working on the fence. Tinkering around. I yelled at him that he didn't know what the hell he was doing, but he was stubborn.\" She gave me a tremulous smile. \"A lot like my son.\"\n\nI forced a smile and took her hand. I could tell she needed to get this off her chest. \"And then what happened?\"\n\nShe stared at the wall, obviously looking back at that day. \"I heard someone shout and I looked away. Whole masses of them were coming in, and they were fast. I couldn't move for a minute. Then Jim shouted my name and I grabbed for my gun. Jim didn't have his on him. I could see...\" she shuddered and stopped to pull herself together. \"I could see the fear in his eyes. Not having your gun is like a death sentence. So I stayed by him and we tried to get to the house, but there were so many of them that we got separated. Then I saw Nate in the distance. Nate was stumbling to the ground, wrestling one of them. And it was winning, and then I looked. I looked towards Jim and he was rolling the grass with the other one. I picked up my gun and missed. My hands were shaking so bad.\" \n\nShe wiped at her nose and stood. She went over to the window. I watched her stare out of it, illuminated in the moonlight.\n\n\"I saw I only had one bullet left. Nate was pushing back but he just didn't have enough strength left so... I shot the zombie fighting him. Nate looked stunned for a minute, like he didn't know why there were all these brains all over him. He caught on quickly and he got up and ran for me. He grabbed the back of my shirt and then Jim looked up at me. He just looked up at me. And he told me he loved me just as the zombie bit into his throat.\"\n\n\"I'm so sorry,\" I whispered.\n\nShe looked at me. \"A good mother chooses her children. I'm sorry you didn't have that.\"\n\nThen she came back to me and pulled the covers up under my chin. She kissed my forehead and my heart broke.\n\n\"Would you sleep with me tonight?\" I begged, feeling like I was seven all over again.\n\nWendy smiled sweetly and picked up the sheets. \"I snore.\"\n\n\"I don't care,\" I laughed.\n\nShe rested herself next to me in the big bed and I fell asleep almost instantly.\n\n__________\n\nThe next morning I woke up to a pot of coffee brewing. I washed quickly with water Wendy left for me and put on another dress she had\u2014white and airy. When I finally limped downstairs, Ariel gave me a bored look.\n\n\"How's the pain?\"\n\n\"Better.\"\n\n\"I have more pills with me but it's better to conserve. Let me know if you really need them.\"\n\n\"I will. Thanks.\"\n\nShe got up and went upstairs. Nate was sitting at the end of the table, watching me closely.\n\n\"What?\" I asked. \n\nHis shoulder was bandaged up and he had much more scruff on his face than before. He looked downright terrifying, all scruffy and tan. Something in my stomach dipped.\n\nWendy brought me out a coffee and tutted when she saw him staring me down. \"Leave her alone, Nate.\"\n\nHe gave her a scorching look. \"Leave her alone? We almost died because her thousand bags of sunflower seeds\u2014that were so fucking important to bring back\u2014weighed her down!\"\n\nAnger ran up my spine. \"Excuse me? You're blaming what happened yesterday on me?\"\n\n\"Obviously not the whole thing. You weren't the one shooting me, were you?\"\n\n\"No, unfortunately not!\" I spat. \"And it wasn't all sunflower seeds, what the fuck?\"\n\nHe ignored that. \"I'm talking about afterwards. You could barely run. Did I, or did I not, warn you about carrying all that shit back?\"\n\n\"I could barely run because I fell, jackass!\"\n\n\"Why do you think he fell?\" He looked up at the ceiling with an expression of mock wonder. \"Hmm? Do you think it was, oh, maybe, the fucking hundred-fucking-pound bag on your fucking back?!\"\n\n\"Enough!\" Wendy snapped. \"You getting bested by some stranger isn't Fiona's fault! For God's sake.\"\n\nNate stopped screaming out loud, but I knew he was calling me every bad name he could in his mind. \n\nI tried to ignore him. \"Did anyone figure out who it was yesterday?\"\n\nWendy shook her head. I downed my coffee and decided I couldn't deal with the burn of Nate's glare anymore. \"How's Libby?\"\n\nWendy shrugged and sat down next to me. \"Better, I think. The action that happened yesterday was enough to snap her out of it.\"\n\n\"Where is she?\"\n\n\"The barn, I think.\"\n\n\"Really? Is that safe? Can't they just, like, shoot us as we walk through the yard?\"\n\nWendy smiled weakly. \"Zach and Doug are guarding. Walking around the perimeter. Just try to stay as far away from the edges as you can, bring your gun with you and keep a look out.\"\n\n\"Okay,\" I breathed. \"I'm going out there. See ya.\" I got up and smoothed the bottom of my dress, accidentally meeting eyes with Nate.\n\n\"Be careful,\" Nate bit out. \"I wouldn't want to get my other arm shot to shit just because you were an idiot again.\"\n\nI squinted at him, dreaming of punching him in the jaw. I told myself it wouldn't solve anything, and I hobbled out into the yard. \n\nThe woods were eerily still. I waited for someone to appear, or for shots to be fired again. A hand fell on my shoulder.\n\n\"Hey,\" Doug said. \"I went out there this morning. There's no one out there, at least for now.\"\n\nI nodded and thanked him. When I got to the barn, I found it empty. Libby must've gone back. I sat down on some hay and tried to quiet my mind. It was boiling hot in the barn and I felt sweat dripping down my back. I wiped my forehead and got up, beyond thirsty. That's when the back of my neck prickled.\n\nI looked up and saw Nate leaning against the wall. He'd come in and I hadn't even heard him.\n\n\"My mom told me to apologize.\"\n\nI snickered. \"Are we in the third grade?\"\n\n\"It definitely feels that way sometimes.\" He rubbed a hand through his hair. It was strange how beautiful I thought it was, considering I loved brown hair on a man. His was a perfect shade of dirty blonde, and combined with his dark blue eyes, there was no doubting he was a handsome guy. \"Look, I lost my temper. I don't usually get so angry but\u2014\"\n\n\"But we were in crazy circumstances. I get it. You were an asshole, but you're forgiven.\" I stared down at some wayward straw beneath my boots. \"And I'm sorry I packed all that crap into my bag. I should have listened to you.\"\n\nI heard him laugh and my eyes darted up to his. \n\n\"What are you laughing at?\"\n\n\"Nothing, it's just... I thought that was going to be a lot harder. You're generally a pain in the ass.\"\n\n\"Wait a minute, weren't you just apologizing? And already you're telling me I'm a pain in the ass?\"\n\nNate smirked. \"Even you have to admit you're a brat.\"\n\n\"A brat! How am I a brat?\"\n\nHe shook his head, but he continued smiling and\u2014fuck\u2014he had a beautiful smile. Something began loosening in my chest and I couldn't stop it. My lips turned upwards without my approval.\n\n\"I'm heading back. Don't stay out here too long by yourself. It isn't safe.\"\n\nI nodded, and just like that he was gone and our moment was over.\n\n__________\n\nThat night we all sat in the living room and past around a bottle of wine. It turned out that Wendy and her husband had a wine cellar and were big collectors. Thank God for it, because if there were ever a night I needed a drink it was this one.\n\nZach was watching me, I realized. Not just in an idly interested sort of way, but that sizzling way a man looks at a woman he wants. Ariel noticed, too. Her head continuously swung between us.\n\nGreat.\n\nI didn't know what I did to provoke his admiration, if I did anything. These were insane times, and insane times drove people to fuck more. It was a fact, proven time and time again by history. It was something that brought simple joy, temporary closeness and a fleeting appreciation to be alive.\n\nLibby cleared her throat. \"I think we should draw them out and fight them. I don't want to live day after day peeking over my shoulder, and they're not going to stop.\"\n\nDoug nodded beside her. \n\n\"I don't think we should be starting a war when two of our people are incapacitated,\" Wendy said. \n\n\"For God's sake,\" Ariel hissed. \"I'm so tired of this back and forth shit. Frank was a real leader. He told it like it was, and he made the tough decisions and you couldn't deal with it, Wendy.\"\n\n\"How many times have I told you not to talk about him?!\" she screeched. This unhinged Wendy was quite a sight and I watched, fascinated.\n\n\"You can't silence me, Wendy, you're not my fucking mother!\"\n\n\"Thank God for that!\"\n\nLibby snorted from somewhere across the room.\n\n\"You were afraid of him,\" Ariel went on. \"Admit it! You knew that we all were listening to him and you hated it.\"\n\nWendy stood. \"This is my house. I don't answer to anyone. And if you don't like it, you can go, too.\"\n\nAriel swallowed and Zach took her hand. She ripped it from him.\n\n\"I think it's been a long night,\" Nate calmly said. \"I think we should all go to bed.\"\n\nWendy stomped upstairs. Ariel watched her with a furious glare, but she was forced to look up at Nate when he moved across the room to stare down at her\n\n\"If you ever talk to my mother like that again I'll feed you to the zombies, piece by piece. Do you understand me?\"\n\nShe swallowed but she didn't look away. \"I'm not afraid of you.\"\n\nNate's smile was slow and frightening. \"You're here out of the goodness of our hearts. Don't you dare try my mother's patience. She's a warm-hearted woman but she'll make no bones about shredding you apart if she thinks it's for the greater good. That's what happened with Frank, and that's what will happen with you. Do you understand me?\"\n\nShe bolted up and went off to wherever she slept. Zach followed, shaking his head. Whether his annoyance was at her, at Wendy or Nate, or at everything in general I couldn't be sure.\n\n_______\n\nMonths passed. Nothing and everything changed. There were no more attacks. We were lulled back into as much security as we could possess in those times.\n\nI smiled more. Libby and I became friends. We all listened as Ariel fucked Zach in the middle of the night after waking up from her constant nightmares. Nate stalked around, broody but handsome. Doug made us all laugh. He used to be a stand-up comedian before all this. Wendy watched us all with a sense of pride and contentment. It soothed her, I think, to see us all get along and clutch the pieces of who and what we used to be before. \n\nAnd as the days went on, I learned more about the people who'd become more or less my family. Ariel was a bitch but she could really be hilarious when she wanted to be. She had a filthy mouth and knew more dirty jokes than even Doug did. Libby had two children. She'd sent them off with their father to California just as things got bad. It was supposed to be better on the west coast, or at least that's what they said in the early days.\n\nShe wept in the afternoons, underneath the large tree at the back of the property. She told me once she dedicated that time to feeling sorry for herself. She let out all her pain, her confusion, her anger, her grief in that hour. It didn't go away when her time was up, she said, but it helped her get through each day.\n\nAnd Doug! Doug hated relationships, he said to all of us one night. We were having dinner together, talking about past lovers (Nate and Wendy didn't participate), and he began to cry when he said he wished he'd married one of his ex-girlfriends. He wished someone out there was missing him.\n\nNate was a different story. He was a mystery. I couldn't get close to him; he didn't let anyone probe the man beneath the rugged exterior. Libby said that's how he survived, but I wasn't so sure. He loved his mother. It was clear when he looked at her, when he joked with her. He was capable of great love. I could feel it.\n\nOne day I was passionately telling Libby this and she grinned at me, all fucking knowing.\n\n\"What?\" I'd asked, self-conscious.\n\n\"You're into him.\"\n\nMy eyebrows went up. \"What?\"\n\n\"You want him. It's cool\u2014I think he wants you, too. You should see the way he watches you when you walk around camp.\"\n\nThat had sent a deep flow of warmth from my head to my center. \"Really? I mean, are you sure he's watching me? Or that, like, there's even any desire in it? Because I think he considers me to be pretty ridiculous. And silly. Maybe at most he could think I was cute. Maybe.\"\n\nLibby shook her head. \"Babe, you two are so going to fuck soon.\"\n\nA thrill had gone through my spine and my mouth watered. I'd hoped she was right because I was desperate for touch, Nate's in particular. But it didn't appear she was correct because Nate avoided me as much as he could.\n\nThere were other routines developed. Our relationships with one another were important, but surviving was our absolute concern. We went through protocol. We were constantly on guard, watching and waiting for whoever shot at us to return. Sometimes we convinced each other it was a random attack. Most of the time we accepted the distinct possibility they'd be back, and they'd come at us a lot harder.\n\nIn the mornings I went out to milk the cows alone. It was peaceful to hear the birds chirp, the farm animals' soft morning noises, the wind occasionally brushing against and through the old barn. It was the one time of the day I was entirely alone and I loved it. \n\nOne morning, when my thoughts were consumed by memories of what my mornings used to be like back in the day, straw crunched behind me. I spun around and went for my gun, but then I spotted Nate holding both his hands up. \n\n\"Sorry.\"\n\nMy heartbeat slowed a bit. \"Jesus Christ, Nate.\"\n\n\"I'm sorry,\" he said again. \"I thought you heard me.\"\n\n\"I did hear you. I just didn't know it was you.\" \n\nHe shrugged and sat on a pile of hay. He watched me squeeze the udders for a while.\n\n\"What's up?\" I finally asked him.\n\n\"Ariel and Zach. All night.\"\n\n\"Ugh.\"\n\nHis eyes met mine. \"Exactly.\"\n\n\"Were they a couple when they got here?\" I was genuinely curious. They were such a mismatch, and so volatile. It was incredible to me that they hadn't shot each other yet.\n\n\"I don't know. I just know they showed up together, and I'm pretty sure they slept together right away.\"\n\nI finished milking the cow and pet her back. \"Sweet thing. Thank you.\"\n\nNate snickered. \"Did you just thank the cow?\"\n\n\"Fuck you, Nate.\"\n\nSomething happened when I said those words. Something switched in his body, and my own being became acutely aware of the change. And then both of our bodies locked and our stares tangled, sparking into wildfire. \n\nHe wants me to fuck him, I realized. He wasn't made of stone. He wanted to be good, to stay out of trouble, to not complicate things. It all became clear to me and he didn't even have to say a word.\n\nHe took a step towards me. When he extended his hand to reach for me, my breath caught. Instead of grabbing me and pulling me to him, he stroked my hair. \n\n\"This is a very bad idea,\" he whispered.\n\n\"Yes.\"\n\n\"We have a lot of other things to worry about.\"\n\n\"I know,\" I breathed.\n\n\"The last thing we need to do is turn into Ariel and Zach.\"\n\nI could only nod.\n\nAnd then he brought his body to mine and kissed me. His lips were a little cold, which somehow made our kiss sizzle even more dramatically. My body disconnected from my mind, and it wanted only one thing: him.\n\nHe must have felt the same desperation because he pulled his mouth away and watched me heave in oxygen. God knows what I looked like, all frazzled and pink and raw. \n\n\"I need you,\" he confessed. \"I wish I could say we could go gentle or easy, or go on a date first or something but I'm so hard. I'm so hard. You make me so hard. And I'm so\u2014\"\n\nWe heard a scream and both of us froze. Nate kicked back into action before I did. I ran after him into the yard. Fear spread through my blood when I spotted the zombie. \n\nI didn't have a chance to wonder why, or how, or who. It all happened so fast. There was a zombie on our side of the fence and he was standing over a cowering Wendy.\n\nDoug ran toward them, a gun in his hand, but he didn't see another zombie come darting out behind the broken down tractor next to the barn. The zombie was a teenage girl, dressed as if she were off to celebrate at a high school football team. She even had a jersey number drawn on her cheek. She lurched toward him and caught him off balance. They struggled against one another. I was so horrified I couldn't even scream.\n\nZach and Ariel ran out of the house with their guns. Zach managed to get a bullet into the zombie fighting Doug. Libby sank down next to him and hugged him, running her hands over his body to make sure he was okay.\n\nNate shot the zombie on top of his mother. He dragged him off of her and shot him again in his chest for good measure. I stepped next to him and looked down in horror.\n\nWendy's throat was in shreds. Her eyes were wide and her pale hands were wrapped around her throat, trying but failing to stop the blood from pouring out. Nate was absolutely frozen, staring down at his mother with ineffable horror.\n\nWendy looked at me and whispered something. I couldn't hear her. I wiped at my eyes and knelt my good knee next to her. I tried to stop crying so I could hear her, and put my ear next to her shaking lips. \"Sh-shooot meee.\"\n\nMy head snapped up. \"I can't!\"\n\n\"Shoot meee!\"\n\nI looked up at Nate. \n\nHe didn't react. His eyes were wide and wild.\n\nI looked back at Wendy. \"P-please,\" she begged.\n\nI was so smothered in tears I could hardly see or breathe. \n\n\"Shhhhoot me. Before-\"\n\nI lifted my gun and shot her in one smooth motion. Her blood was all over me. \n\nLibby cried out and got down on her other side. She took her head into her lap and screamed. I dropped my gun and scrambled to stand. My hands were covered in blood. Nate just stared at Wendy, unmoving and emotionless.\n\nDoug came over and lifted me in his arms. He brought me into the house and laid me on the couch. I sobbed so hard that I had to throw up. I bent over and gagged on nothing. My stomach spasmed, over and over again. I was grateful for the distraction, but eventually my sobs died down. \n\nZach sat next to me. He looked as though he pitied me. He didn't even know me, not even the little amount the others did, and he was giving me that look. I wanted to stomp on his eyes, to throw acid in them, to boil them so they could never look at me like that again. \"It's okay. Take a deep breath.\"\n\n\"I shot her! I shot her!\"\n\n\"You had to, shush,\" Doug soothed. He sat on the other side of me.\n\nI sobbed until I had nothing left. Then I stared at the wall, numb and spent.\n\nDoug and Zach went outside at some point. Ariel came inside and paced in front of me, wringing her hands and pausing every now and then to stare out the window. Libby joined us and sat on a stool, restlessly jiggling her leg.\n\n\"The boys are investigating,\" she explained when she realized we were staring at her.\n\n\"Wendy?\" Ariel asked.\n\n\"Taken care of.\"\n\nMinutes passed. Hours, maybe.\n\n\"Someone let them in,\" Libby eventually whispered. I wasn't sure if she was talking to me or to herself. \"How did they get past the fence?\"\n\nAbout twenty minutes later, Doug, Zach, and Nate came back in. Nate collapsed on the recliner and said nothing. He didn't even appear to notice we were in the room with him.",
        "Libby stood up and scanned the men desperately. \"What happened?\" \n\n\"Wasn't MacKenzie,\" Doug grunted. \"At least that's what he claims.\"\n\nAriel's mouth dropped. \"You saw him? How do you know it wasn't him?\"\n\n\"We got the guy who did it. He was... proud of himself. Thought it was funny. He wanted this all to himself.\" He wiped the sweat from his face with his shirt. \"We kicked the shit outta him. Dragged his ass to Mac. Mac said he didn't know him, the guy said he didn't know him. So we shot him in the head and threatened Mac.\"\n\n\"I don't believe him,\" Libby hissed. \"I don't believe that lying shit one motherfucking bit.\"\n\n\"We don't have proof,\" Zach said. \"We have to let it go for now.\"\n\n\"Oh, until he lets even more of those shits in here?\"\n\n\"Shut the fuck up, Libby,\" Ariel spat. \"What else can we do? Doesn't he have more people with him, too?\"\n\n\"Even more, now. But there's no point in worrying about it this second,\" Zach said. He kissed her cheek and she calmed down a little, but his eyes were on me. I wanted to retch. He put his hand around her waist and looked at all of us. \"We're going to bed. I suggest you all get some sleep.\"\n\nThey went upstairs. Nate stood and only then did his eyes seem to come to life. \"I'm going to bed. If you need me...\"\n\nHe trudged upstairs. I wanted to follow, to beg for his forgiveness. My eyes were filled with unshed tears, so full I could hardly see. \n\nLibby disappeared into the kitchen and came out with a wet washcloth. Then she tinkered with a cabinet and pulled out a full bottle of whiskey. She grabbed two shot glasses. I assumed she wanted a drink with Doug. \n\nInstead she grabbed my hand and hauled me out of my seat. \"Let's get a drink.\"\n\nI tried to speak but my throat was swollen from crying. She wouldn't have stopped, regardless. She yanked me to the back porch. There was a swing on it and she pushed me down. I swung back so hard that I slapped against the house and cursed.\n\nShe plopped next to me and filled the glasses. The washcloth in her hand was used to clean my face of its salty tears.\n\n\"We live in a world with death. We always did. I thought you knew that?\" She handed me a glass. I took it because I was desperate for anything that wouldn't make me feel.\n\n\"Wendy was a smart lady,\" she said before downing her glass.\n\nI swallowed my own, sputtering as the alcohol burned down my throat. I'd never been a fan of the heavy stuff.\n\nLibby ripped the glass out of my hand, filled it and then shoved it back into my palm. I tried to hand it back to her but she wouldn't take it. \"We're getting drunk together. Right now. Drink.\"\n\nWhat the hell. The both of us had a few more shots apiece. She handed me the washcloth and I tried to get as much of the blood off me as I could.\n\n\"No one blames you,\" she said after a bit.\n\nI was staring at the way the night wind blew across the overgrown grass, but my neck snapped towards her at her words. \n\n\"I shot his mother in the head as he watched.\"\n\n\"He couldn't do it. He wouldn't have been able to do it himself. You did him a favor.\" She poured me some more whiskey. \"Stop making this about you. Wendy died. We're all hurting.\"\n\n\"This is why I didn't want to stay here,\" I confessed. \n\nLibby waited for me to continue.\n\n\"This hurts. I hate it. I feel like... like I've lost my mother all over again.\"\n\n\"Would wandering alone through the wilderness be any better, Fiona?\"\n\nMy eyes shut. \"No.\"\n\nI nearly dropped my whiskey when Libby laced her fingers through mine. \"For my part, I'm glad you're here. I don't think I could have done what you did, either. You're strong, whether you believe it or not.\"\n\n\"How are we going to make it without Wendy?\" \n\nLibby inhaled deeply and tilted her head back to take another big shot. When she looked at me, I saw her eyes were glazed over. I wanted that drunkenness and extended my glass out. \n\nShe watched me shove three more shots down my throat and snorted. \"You're going to be so hung-over tomorrow.\"\n\n\"I don't care. You didn't answer my question.\"\n\nHer smile faded. \"What do you want me to say, Fiona? We'll survive without her because we have to, just like we survived after we lost everyone else. We're survivors, obviously, or we wouldn't be here now.\"\n\nI licked my lips but I couldn't feel it. I shook my head and it was so heavy, and the movement was so slow. I felt like I was underwater. I heard Libby snort again.\n\n\"I want to get fucked,\" I heard myself saying.\n\nI wasn't sober enough to be embarrassed. \n\nLibby burst out laughing. \n\n\"I mean it.\" My blurry eyes searched for hers. \"I've never been fucked.\"\n\nShe let out a surprised laugh. \"What? You're a virgin?\"\n\n\"No, no.\" I shook my head and marveled at how fast the backyard was spinning. \"No. I've had sex. But I've never been fucked.\"\n\n\"You still have time,\" Libby grinned. Her grin softened and she poured me another shot. \"Last one, lightweight.\"\n\n\"What if it's me tomorrow? What if someone is shooting me in the brain to put me out of my misery? To make sure I don't come back?\" I touched my chest as if that alone could quell the swell of fear I felt at the thought.\n\nLibby shrugged and rested back on her hands. \"What if?\"\n\n\"That's terrifying.\"\n\n\"It's no way to live, so stop worrying about it. And you wouldn't know it happened, anyway. What difference does it make?\"\n\n\"I've never been fucked. I never went to France. My grandmother and I got into a huge fight and I didn't make up with her. I hadn't called my dad in months.\"\n\nLibby offered a rueful smile. \"It's funny how people can only appreciate this stuff when death is staring them in the face. Look, if you were given another year you probably wouldn't do most of the stuff you want to do anyway. And it doesn't matter now. Worry about making it through tomorrow.\" \n\nFatigue hit me and I rested against her arm. \"How are we going to make it without Wendy?\" I repeated in a whisper.\n\n\"Day by day,\" Libby whispered back, and poured us one last shot.\n\n______________\n\nI woke up sometime in the night. I was confused and still drunk, and heartsick over Wendy. Tears had dried in streaks across my cheeks.\n\nI crept barefoot over to Wendy's door and hesitated. I wanted to lie in her bed and be comforted by the smell still on her sheets, but I wondered if that might be worse for me. In the short time I knew her, she'd become like a mother to me. I took a deep breath and pushed the door open. I stumbled in and fell on the bed diagonally. \n\n\"Shit!\" someone hissed.\n\nSomeone turned on the lamp and I lifted my hand to cover my burning eyes. \n\n\"Fiona? What the hell are you doing in here?\"\n\nNate. It was Nate.\n\nI smacked my lips and slid up beside him. He released a long sigh and dropped his head back, closing his eyes. \n\n\"I'm so sorry.\"\n\nHis neck turned and his eyes opened.\n\n\"I hated how that happened. I'm sorry.\"\n\n\"Don't be. Someone had to do it. I should be thanking you.\"\n\nTentatively I reached out a hand and stroked his jaw. \"How are you?\"\n\nNate wrapped his fingers around my wrist and pushed it back towards me. \"I don't know. Have you been drinking?\"\n\n\"A little tiny bit. Really just a sip. A half of a sip.\"\n\nHe rotated so that his body faced mine. \"Is that why you're in my bed?\"\n\n\"It isn't your bed.\"\n\nHe didn't answer and I wanted to kick myself for bringing it up.\n\n\"I wish I could offer you some comfort.\"\n\nHis lips twisted into a wry smile. \"You can't.\"\n\n\"Yes, I can. There must be something I could\u2014\"\n\nBefore I could come up with a good way, Nate's lips were on mine, working against them. He sucked my lower lip into the space between his own lips. Immediately, I burst into thousands of flames. I wasn't sure what was happening, but I wanted more. I wound my fingers through his hair and pulled. He groaned into my mouth and pressed his tongue against my lip. I opened my mouth and his tongue immediately slid in, pushing against mine. \n\nI sighed into the kiss and heaved my breasts into his chest. His hands settled on my waist as his lips traveled down my throat. At the slip of skin between my neck and chest, he sucked and kissed until I was moaning his name. When he was satisfied, he pulled back and blew air over the wetness on my skin.\n\nI gasped and my hands tightened in his hair. His hands slipped under my shirt and rubbed circles against my stomach. I wanted his touch everywhere, and I needed his mouth on mine. As if he read my mind, he gave me a passionate kiss that literally took my breath away. My body was thrumming with alcohol and pure pleasure. \n\nI lifted my hips and touched his hard cock. He moaned and bore down on me, shoving his cock into my clothed pussy. I squeezed him between my thighs and writhed beneath him, grinding against him. He buried his head into my hair and whispered things I couldn't hear.\n\nAnd then he tore himself away and rested on his back beside me, covering his eyes with his arm.\n\nI waited for him to speak but he said nothing.\n\nI touched his arm and he flinched. \"Don't touch me.\"\n\n\"What's wrong? Did I do something or\u2014\"\n\n\"No. I'm not angry. Just don't touch me right now. I can't take it. If I fuck you right now, it'll be because I'm using you to get over my grief.\"\n\nMy pussy desperately clenched. \"I don't mind.\"\n\nHe peeked at me under his arm. \"Well, I do, and so would you if you weren't plastered.\"\n\nHe was right. This wasn't the time. I was ashamed with myself and told him so. He just waved it off. I stopped moving and was afraid I was about to fall asleep. I rested my eyes and took his hand. He flinched again, but didn't pull his hand from me. \n\n\"I'm so sorry. I didn't know her that well, but I loved her.\"\n\n\"I know you did.\"\n\n\"She loved you so much, too. She told me all the time how good you were.\"\n\nHe put an arm around my back and positioned me so we could spoon. \"Thank you.\"\n\n\"Who let them in, Nate?\"\n\nHis fingers skimmed down my arm, over my elbow and stopped at my hand. \"I don't know.\"\n\nWe were silent and I could have sworn he fell asleep. Then he started speaking.\n\n\"I keep remembering this stupid memory I have of this dinner Mom prepared. Must've been a month before the outbreak.\"\n\n\"A dinner?\" I asked in a whisper.\n\nHe distractedly rubbed my wrist. \"She loved throwing big dinners. We hated them.\"\n\n\"Did you have a nice time?\"\n\nHe snorted. \"Sort of. It was just nice to get us all together. And Mom was so happy. She was beaming. And I remember thinking if something as simple as getting us together for dinner could make her so happy, I'd never give her a hard time about it again. She just loved that, us all sitting at a table together, talking over one another, fighting over the remote.\"\n\nI covered his arms that were clasped around my waist with my own. \"That's a nice memory. I'm sure it was for her, too.\"\n\n\"I don't want to talk about it anymore. Let's go to bed.\"\n\n\"Let's go to bed\" sent an inappropriate shiver through my body. I was simultaneously turned on and ashamed of myself. He was right; we couldn't do this now. Wendy's death was fresh, and I was drunk and Nate was broken. And we had someone in our midst who let those zombies in. Without a doubt, I knew it in my soul. \n\nI got up but he tugged me back down. \"Stay with me.\"\n\nI stared into his eyes. \"I want to take a walk around the house. I'm restless.\"\n\n\"Don't go outside.\"\n\n\"Okay.\"\n\n\"I mean it.\"\n\n\"Okay.\" Then I kissed his cheek. \"Anything. Anything I can do for you, I will.\"\n\nI went downstairs and disobeyed him, but just barely. I took a few steps out back and put the cigarette I stole from him between my lips. The flame ignited the cigarette and the familiar burning smoke filled my throat. \n\nI flicked some ash away and looked up at the sky for the millionth time, looking for answers I'd never received.\n\nAs I smoked my cigarette, I gazed at the stars and wondered if Wendy was a part of them now. I was almost jealous of her, and I was furious with myself for that fleeting thought. But she was somewhere peaceful now. Maybe not Heaven. Maybe not anywhere. But at least she wasn't here. She wouldn't have to wake up and go to sleep afraid. The horrific suspense of when, not if, she'd die was over. She was away from the monsters\u2014both human and inhuman. \n\nI heard the wood floor creak behind me. I looked over my shoulder and saw Nate standing there, tears on his cheeks. I'd never seen him like this. He needed me, my arms around him, my lips on his. I'd done enough time in my head, philosophizing and blaming and complaining. He needed me, more than ever in this moment.\n\nI put out the cigarette and walked back into the house, letting the screen door slam behind me. I wrapped my arms around his warm, hard body. \n\n\"I'm here,\" I promised."
    ],
    "authorname": "GirlintheMoon",
    "tags": [
        "zombies",
        "apocalypse",
        "dystopian",
        "survival",
        "survivor",
        "end of world",
        "outbreak",
        "contagion",
        "zombie outbreak",
        "suspicion"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/voodoo-girl-pt-01"
}