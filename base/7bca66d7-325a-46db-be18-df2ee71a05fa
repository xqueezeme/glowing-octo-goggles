{
    "title": "Plain Old Dana",
    "pages": [
        "1.\n\nIt all began with a Youtube search. Well, that wasn't strictly true. It all began when she got herself born to a Scotch-Irish mother and a Danish father. She wasn't complaining\u2014well not really; they'd given her all kinds of great stuff, a head for numbers, a taste for chamber music, a kick-ass metabolism, (she could eat anything without gaining a pound, which occasionally made it tough to socialize with girlfriends), thick strawberry blonde hair, the obligatory peaches-and-cream complexion, and freckles. Fucking freckles: just a splash of them, right across her cheeks and the bridge of her nose; she didn't even have them all over shoulders and breasts, like her cousin, Sasha. Of course the fact that Sasha looked like a one-woman measles epidemic hadn't stopped her from landing a gorgeous husband with whom she was sickeningly happy. Not the point; Dana wasn't even looking to get married. She was looking for...fun, a little excitement, a little...something other than what she was getting from the guys she dated, literally all of whom told her she was \"cute as a button.\"\n\nMarvelous. Who wants to fuck a button?\n\nShe knew she was being silly. She knew this was a self-image problem. This wasn't even a \"problem\" in any real sense of the world. Poverty was a problem. Cancer was a problem. Homelessness was a problem. Cuteness was a...condition. It was just a condition she was getting a little sick of. And it wasn't like she never had sex. She was 29, gainfully employed and unattached. She could have sex...well, maybe not whenever she wanted it, but since moving to the big city she'd had plenty of sex, mostly with guys, but once or twice... But even the girls...what had Kelly said? Direct quote: \"Oh my God, Dane, you're so adorable, I just want to eat you all up!\" And she had, and it had been a-fucking-mazing! But still...\n\nShe was always...on the bottom; even when she wasn't. Guys wanted to coddle and cherish and protect her, and girls wanted...well, Kelly wanted to dress her up in a Catholic schoolgirl uniform and spank her, but Kelly was...imaginative. And nuts; Kelly was nuts...and hot, but still...\n\nAnd none of it would have been an issue if Dana had been wired a little differently, but the problem was...that...she was really...interested in sex. Not exactly obsessed with...well maybe a little. And she was interested in...all of sex, or at least not just in the lovey-dovey princess meets her prince and gets married and has babies and lives happily ever after scenarios that most of her friends seemed to fantasize about. But when it came to...the moment\u2014and Dana's curiosity meant she had more first-date sex than maybe she should have, because some of it wasn't very good... No, when it came to the moment, she just couldn't seem to...assert herself.\n\nShe'd tried being aggressive, even tried talking dirty to this one guy, but apparently it took some practice, or maybe he just hadn't been into it or...something. She'd taken a leaf from Kelly's book\u2014Kelly always made it sound so easy\u2014so she'd said something like \"Oh my God, I want your big cock in my mouth so bad...\" But the guy looked at her like he hadn't understood. Maybe she's been speaking a little quickly; she'd been nervous. So she tried again, slowed down a little, but as she was speaking she noticed that his dick wasn't really all that big to begin with. That's to say it was fine, but it wasn't...maybe he was a grower, not a shower, and she didn't want to think she was making fun of him, so she kind of...lost her train of thought. The guy had given her a quizzical look, smiled, said he thought she was \"really cute\"\u2014son of a bitch was lucky she didn't have a gun in her purse\u2014and then given her a perfectly serviceable orgasm with his tongue before fucking her for ten or fifteen minutes until he came in a condom, by which time she was too embarrassed to say much of anything.\n\nThen there was the time she and Todd had tried the friends-with-benefits thing for a few months, and she'd bought this really slutty little bra and garter belt set. She'd greeted him at the door in it one night. His eyebrows had gone up, and he'd said \"very nice.\" And he'd picked her up and carried her to the bedroom, and thrown her on the bed, and then he'd stood there a minute, just looking at her. She'd said: \"What?\"\n\n\"Dane, can I be honest?\"\n\n\"I suppose...\"\n\n\"It's just that...I don't know; the black is just...not really you somehow.\"\n\n\"Why?\" She was trying not to lose it. She'd paid a lot of money for the lingerie.\n\nHe could see she was upset, and he was a decent guy\u2014they were still friends, but: \"It's like a disconnect. You've got this hot little body, and this adorable face...I don't know, it's like putting fishnets on Raggedy Ann.\"\n\nStill friends; no more benefits.\n\nFUCKING FRECKLES!\n\n2.\n\n\"Make-up, you idiot!\"\n\nThat had been Yaz, Dana's best friend at work. Five-foot-nothing-95 pound-fucking gorgeous, from Karachi originally, worked in HR, just down the hall from Dana's office in Accounting.\n\n\"What about it?\"\n\n\"You never wear any.\"\n\n\"Look whose talking.\"\n\n\"Yes, but I'm not whinging about freckles.\" Yaz had gone to university in the UK, and Dana sometimes needed a second to translate.\n\n\"What the hell is...look, never mind. What do you mean about make-up?\"\n\n\"Concealer, foundation, I don't know. As you say, I don't use much: lipstick, some eye stuff...\"\n\n\"You mean like...what, painting over them? Oh, I don't know, Yaz...\"\n\n\"I don't know either,\" snapped her friend. \"Personally I think it's a stupid idea. You've got the most beautiful skin I've ever seen, and you have a lovely face. Why you want to change anything about your appearance is completely beyond my comprehension, but there it is.\" She shot Dana a wry look: \"The truth is: your well-wishers around the office are heartily sick of listening to a woman as beautiful as you are bitch about the way she looks. If you were to start griping about your weight, I might think about killing you myself.\"\n\n\"Seriously, Yaz?\" Then off her friend's look: \"Okay, okay...I'm sorry. I'll shut up about the freckles. And maybe I'll try some...something.\"\n\n3.\n\nOn the way home that evening, she'd stopped at the local mall, headed into Macy's, and spent entirely too much money on a variety of products: skin creams, foundations, rouges, various eye shadows, some lipstick\u2014which she actually needed\u2014and some other stuff, not all of which she understood how to use. The saleslady had explained most of it, and Dana had tried to pay attention, but the store was mobbed, and people kept asking her saleslady questions, and the muzak was loud and the heating system was on the fritz, and her phone kept beeping...\n\nWhen she got home that night, she dragged a kitchen chair into the bathroom, sat down in front of the mirror, cleansed her face with the...face cleanser, and began.\n\nTwo-and-a-half hours later she looked up at the finished product and discovered that, unbeknownst to the art world, Picasso had painted a portrait of Joan Rivers just before she died as a $10-a-trick hooker. True: she could no longer see her freckles, but she was also having some trouble finding her lips. She sighed, reached for the box of incredibly expensive baby wipes and began the search to recover\u2014or rather uncover\u2014her face.\n\n4.\n\nLater still, she was sitting in an old bathrobe in front of the computer, thinking about the now un-returnable collection of cosmetics still cluttering up her bathroom counter. That stuff really had cost a fortune. Had to be something on line that could give her a few pointers about how to apply it. She really didn't want to just write it off. And that had led her to Youtube.\n\nAt first she just searched \"make up,\" and she'd come up with literally thousands of tutorials for applying...well, pretty much everything: eyes, lips, foundation, highlights, contours. She'd heard things like \"go in,\" \"fluffy brush,\" \"water line,\" \"falsies,\"\u2014which could mean fake eyelashes as well as those boob-pads which Sasha used to fill out her bra; who knew? And then she'd started getting suggestions for more elaborate stuff: effects make-up, specific \"looks,\" and then\u2014because it happened to be the middle of October\u2014Halloween-themed tutorials.\n\nAnd that got her thinking about the office party, which was a little wonky that particular October because Halloween fell on a Thursday, and upper management had a retreat scheduled for the following weekend, which meant the party was on Saturday, the 26<sup>th</sup>, which was\u2014oh hell's bells\u2014a little more than two weeks away!\n\nMaybe she wouldn't go this year. Yaz wasn't going; Dana knew that. She was taking some vacation and flying back to Pakistan for a week, or maybe ten days... Anyway, she didn't really have time to put together a good costume. On the other hand, free food\u2014good food too\u2014and an open bar, and...there was always the possibility...\n\nSex: Jesus, she really was obsessed. But Dana hadn't had any for a few months now, and she was getting...restless. And Halloween was a good opportunity, excuse, whatever... She could let go a little, wear something a little slutty; hell, everybody did these days. Her mom was constantly complaining about how her favorite holiday\u2014passing out candy to cute little neighborhood kids in princess and superhero costumes\u2014had turned into a meat market for horny twenty- and thirty-somethings. And Dana worked for a big firm; she didn't know half her co-workers, at least...not to say know...\n\nStill, the costume was an issue. What should she be? She thought about it as she scrolled through the Halloween make-up videos: there were she-devils, skull faces, some super gory stuff\u2014eyeball hanging out: not sexy; not even a little bit. Or if it was, that was not a guy she was going to be into\u2014ok, there was Poison Ivy, and Maleficent, and what's-her-name from Corpse Bride; that one was kind of cute.\n\nFuck! Cute! Not cute: hot, sexy, slutty even, but not fucking cute! Moving on: sexy kitty\u2014still kind of cute-ish\u2014vampire, generic sort of hooker look, mermaid\u2014that one was just creepy, zombie\u2014lot of zombies these days. Looked like fun, but again, not really sexy...well, what about vampire? It was kind of a clich\u00e9, but it looked do-able, even for a make-up newbie. And the costume would be pretty easy; vampires can wear anything, right? She could be power-suit vampire, business-casual vampire, little-black-dress vampire; the costume would be easy, but what about the make-up? Well, she could try. God knew she had enough of it. And if she followed one of these video tutorials, she'd sure as hell cover the damned freckles.\n\n5.\n\nIt took her most of the week practicing, but in the end, it didn't turn out to be all that hard. She'd watched a bunch of different videos, and some of them had emphasized the durability of one product or another. Dana thought about where the night might lead...or where she hoped the night might lead; be good if the make-up stayed on long enough for her to...find herself a victim. The thought made her a little...moist. She fantasized about luring some hot guy off into the shadows\u2014the party was usually held at this hotel in the middle of a local business park, and there were all kinds of places where a horny little vampiress could bring a willing victim for a quick suck.\n\nShe wondered about the fangs. Decided she had to have fangs, otherwise she'd just be some lady in a sexy dress and trampy make-up. Would they get in the way? Would she be able to talk with them in? Back to the internet, where, after a little trial and error, she found a local place that made custom fangs in a variety of designs. They were kind of expensive, but the guy she talked to promised strength and durability, and, he said, you could talk pretty well in them, with a little practice. She debated buying a wig, but decided a good one really was too expensive, and that anything cheaper just made her look silly. Instead, she opted for a new color and style, going, after work on Friday, from a demure blonde to a dark red with copper highlights, worn off the face and long, the ends curling just above the tops of her breasts. She liked the new shade. It even complimented the freckles.\n\nShe spent time thinking about the dress; even went shopping at a local upscale mall, but having spent more than she'd planned on the make-up, the teeth, and her hair, she opted for a club dress she's bought over the summer, but never got up the nerve to wear: nylon and spandex, black (and fuck you again, Todd!), long sleeves, cutout shoulders, and a high collar with another cutout\u2014teardrop shaped\u2014beginning just below her collarbone, designed to display a lot of cleavage. She couldn't really wear a bra with the damn thing, but the spandex pushed her up and together making her look bosomy, and maybe even a little...what, brazen? Panties would be tough too; g-string or thong at most, and could she get away with a lace garter belt? Easy access in any case. The thing had been on sale, and in her size, and she'd bought it, tried it on once, and then left it in the closet. It was impossible; beyond slutty, it was predatory: far too much for plain old Dana, but for Vampiress Dana...she'd tried it on with her make-up on and fangs in, and all of a sudden it was perfect.\n\nThe night before the party, she stared at herself in the full-length mirror on her bedroom door: dress, fangs, hair, make-up, a little jewelry, black stockings, four-inch stilettos, the whole shooting match. Vampires weren't supposed to have reflections, but fuck that! She looked amazing: the new dark red hair framing her oval face, pale blue eyes under thick black mascara-ed lashes, her lids done in a sultry blend of black and copper, smooth, pale complexion with cheekbones made prominent by...some darkish powder\u2014she'd forgotten what it was called, full lips painted a dark red, wicked looking fangs over her canines. Then, the collar of the dress high on her neck, slim arms in black form-fitting sleeves, and graceful hands with long red nails, the tops of her full, ripe breasts peaking through that keyhole, her torso tapering to a narrow waist and rounded hips, the slight line of g-string and garter belt disguised by the artful\u2014and deliberate\u2014wrinkling of the dress below the bodice, and finally: long, shapely black-stockinged legs narrowing to dainty feet in the simple-sexy pumps. She smiled at her reflection. She snarled. She ran the tip of her tongue over the points of her fangs, smiled again. She didn't look cute as a button anymore. She looked...hot, but dangerous, a little bloodthirsty, which made sense, but...maybe...one more thing.\n\nShe went back to her bathroom and sat in front of her mirror. Taking a tube of fake blood she'd picked up at a nearby CVS, she dabbed a little from the corners of her mouth, allowing it to drip down her chin, then before it could stain her dress, she smudged it with her finger tips. There it was; the complete look; a ravenous, insatiable creature of the night, with the blood of her latest kill fresh on her lips.\n\nThat night, after she had taken it all off, Dana lay in bed trying to fall asleep. Her mind and body were restless, and as the hours passed, her fantasies became more erotic, twisted and surreal until her hand made its way between her thighs, her fingers found her clit, and she jilled herself to a wracking, half-remembered orgasm with the taste of blood in either her mouth or her memory.\n\n6.\n\nThe morning of the party, Dana slept late. When she finally woke up, she treated herself to a long hot shower, during which she shaved everything below her neck. She emerged with her skin tingling from the cool air in the apartment, and began her preparations. Anticipation made the whole day a little surreal. As she began what she thought of as the transformation to Vampiress Dana\u2014should she come up with another name? 'Dana:' not really exotic enough maybe?\u2014she began to get both excited, like riding-a-roller-coaster excited, as well as aroused. By the time the fake blood was dripping down her chin, she could barely sit still. But then she had to figure out what kind of purse to take; had to have at least a driver's license, not to mention a little money, and a phone. Did the fashionable undead seductress favor a clutch or a shoulder bag? And should she wear something over the costume on her way to the party. The dress was pretty risqu\u00e9. Fuck it! It was Halloween, or the weekend before, anyway. There would probably be people on the streets with less on than her. Still, the fantasy waned a little as she sat in traffic on the beltway behind the wheel of her Prius: club-slut vampire, fuel-efficient vampire...\n\nShe'd opted for the smallest, thinnest clutch she had, but when she arrived at the party and parked in the structure, she decided to leave it in the car. She even left the key fob balanced on the driver's side rear tire. Dana was incommunicado for the next few hours anyway, and vampires never drank...wine. (Besides: open bar.)\n\nFestivities had begun at 7:00, but Dana arrived closer to 8:00. The sun was gone, and the sky was just shedding the last of the day as she headed for the lobby. The day had been warm enough, but the night was chilly, and she began to wish she'd brought a wrap of some kind. Vampires weren't supposed to get cold, but make-up and fantasy would only carry her so far. She decided to stay inside for the evening; chattering fangs: not sexy.\n\nInside the lobby, and up an escalator to a ballroom on the mezzanine. She handed her invitation\u2014the only thing she was carrying\u2014to Geoff from Security who was manning the door.\n\n\"Dana, is that you?\"\n\n\"Hey Geoff. Yup, it's me. How come you're not in costume?\"\n\n\"I'm working. Speaking of which, I'm supposed to see some ID...\"\n\nDana grimaced. \"I left it in the car. I didn't want to carry a purse, and in this...I'll go back for it, if you need me to\"\n\nGeoff looked her up and down. He took a couple of deep breaths. \"It's OK. I know you. Happy Halloween, and by the way...um, you look amazing.\"\n\nDana smiled at him. \"Thanks, Geoff, you're an angel. Then she looked past him into the mass of people drinking, dancing, and partying. \"I'll scream if I need anything.\" And she headed in, the high heels lending her hips a sassy sway.\n\n\"You do that, Babe.\" muttered the 63-year-old ex-Marine under his breath. He watched her into the room, shaking his head.\n\n7.\n\nThe \"ballroom\" turned out to be a large multi-purpose/conference room which could be partitioned in half when required. Small chandeliers hung from a reasonably high ceiling to illuminate\u2014dimly\u2014a DJ playing a mixture of Top-40, Halloween novelty songs, and standards from a station against the far right wall. The bar was directly across in the far left corner, and next to it were several tables with what looked like the usual snack/dinner: canap\u00e9s, fruit, cheese, desserts. A good-sized dance floor had been installed in the center of the room over the non-descript industrial carpeting, and several round tables, seating from four to six people at any given time, were arranged around it.\n\nDana took in her costumed co-workers. She recognized several, but more were strangers to her. She assumed she was also seeing partners, friends and various other \"plus-ones,\" but it was still a pleasant surprise\u2014in the circumstances\u2014to see how few people she actually knew. The costumes ranged from traditional\u2014witches, cowboys, superheroes\u2014to topical\u2014two Donald Trumps, and one pair who was probably supposed to be Kim and Kanye\u2014and from silly\u2014a couple dressed as bacon and eggs\u2014to sexy\u2014slutty nurse, slutty referee, slutty Cookie Monster...wait, really? Abruptly, Dana decided she didn't want to mingle. Plain old Dana was a people-pleaser, good at small-talk, social drinking, friendly flirting. Vampiress Dana didn't want any of that. She'd be a hunter, confident and ruthless, searching for...an experience; maybe a lover, maybe just a playmate to tease and then abandon. She decided she didn't much care. Tonight was for her, and she would top, tease, seduce, satisfy, disappoint, dominate, or whatever. She would try to avoid her friends and close acquaintance, but if one of them got in her way...if one of them wanted to play...she'd cross that bridge when she came to it.",
        "8.\n\nShe wandered slowly towards the bar, observing her fellow guests, evaluating, and fantasizing. As she moved through the crowded room, she began to feel eyes on her body. Like most outgoing, attractive young women, Dana was used to a certain amount of public attention; sometimes she dressed to encourage it, and sometimes not, but she had never felt quite this...level of intensity before. The eyes conveyed...intentions, and the intentions were not entirely honorable. She began to observe her admirers more closely, and it was as if she could see what each wanted by watching his\u2014or in a couple of cases her\u2014eyes. Vampires could read minds, couldn't they? The thin young guy in the red suit and devil's horns wanted...contact: a dance or a kiss maybe. But that short, burly guy in the Groucho glasses and fright wig wanted to do naughty things to her backside. She looked back as she moved past him, caught his eyes following her ass, saw his brows contract, watched him swallow as if his throat was dry. She paused, as if to allow somebody to pass, wiggled her hips. Would he make a move, try to talk to her...no? Then he was SOL; no ass for him. She giggled to herself, and walked on.\n\nAs time passed and people got a little drunker, several guys approached her: did she want a drink? Did she want to dance? She declined most of the drinks, accepted several of the dances, chatted with a couple of acquaintances, one of whom, Lee\u2014a tall, broad-shouldered, taciturn man who was a star in R&amp;D\u2014seemed to be working up a sweat trying not to look at her breasts. She debated calling him on it, inviting him to check her out, maybe...but Lee was almost a friend, and he was married, with one kid in pre-school and another on the way. His life didn't need to be any more complicated, and she didn't want to be...that kind of complication. No, if she was going to play, she was going to play with a stranger. That way she could concentrate on the thrill of the hunt.\n\nShe began looking at the guys who were looking at her. At first it took some effort. Prolonged eye contact with strangers\u2014particularly sexually engaged strangers\u2014took some guts. It was not the sort of thing plain old Dana was comfortable with. Vampiress Dana, on the other hand, was kind of getting off on it. She caught a beefy, red-faced guy dressed like Indiana Jones staring hard at...some place between her navel and her crotch. As she tried to work out what he thought he was looking at, she saw his eyes move up her body until they found hers. She stared at him for several seconds, as if he was a not very interesting something she'd found beneath a not very interesting rock. And she felt a little jolt of pleasure between her thighs as she watched his face turn even redder, and his eyes cut away.\n\nWandering back towards the front of the ballroom, her eyes met those of a thick-set man with a shaved head, dressed as a pirate. She'd noticed him before, caught him staring. In fact, every time she'd seen him, he'd been looking directly at her, mostly up at her face, but never into her eyes. She giggled to herself. 'He's afraid I'll hypnotize him.' She looked him over; decided she didn't know him. He wasn't a handsome man, exactly, but he did look...capable: barrel-chested with short, thick arms and a square-ish face with dark brows drawn down over large eyes. There was some stubble on his chin, and what looked like a real dagger in his belt. Hmmm. Maybe she'd try a little hypnosis. Her other vampire powers seemed to be working: mind reading, seduction...she found herself wondering how his...blood would taste, and what part of his body she might decide to suck to get a nice warm mouthful of it.\n\n9.\n\nShe'd chosen her victim. God, even the word was a rush! Now, how to lure him into her evil embraces... He was still staring at...what the hell was he staring at? Her face, but not her eyes...a little lower...her mouth? Almost subconsciously, the tip of her tongue brushed across her lower lip, but the fangs were in the way. Her mouth opened a little wider, she felt the top of her tongue brush the tips of her fangs, and she saw his eyes widen. Then they snapped up, and stared straight into hers. She smiled. He liked her tongue, did he? No surprise there; most guys liked girls' tongues. Her smile widened, exposing her fangs. His eyes seemed to get even bigger. Interesting. An experiment: she caressed her fangs with the tip of her tongue. That really seemed to scramble his eggs. All of a sudden she wanted...needed to get this guy alone. She tipped her head toward the door, and walked away, swaying her hips seductively. No need to look back to check. Vampiress Dana knew her victim would follow.\n\nOut past Geoff into the lobby of the hotel; then where? She wished she'd thought to get a room. Maybe...but then she'd have to go out to her car to get her purse. Maybe he could...no. That would break into the fantasy. She knew she couldn't sustain it indefinitely, but she was so...turned on by it. A seductive vampiress doesn't ask; she takes whatever she wants. A stairway leading down into what...fitness room, office facilities...not much light down there...maybe outside? She'd freeze; vampiresses don't fucking shiver. Downstairs it was.\n\nA dimly lit corridor; he was close behind her. He could hear his boots at the top of the stairs. Around a corner...another hallway: fitness room, a small alcove for restrooms directly across from it. Nobody around. She stopped and turned, leaned against a wall, and watched him come around the corner. Not a tall man; shorter than she was in the heels. Black shapeless pants...sweats?...tucked into tall boots, a white peasant shirt under a longish black leather vest, wide leather belt, with the dagger in a sheath, broad shoulders, thick neck; he looked like a pirate. For a second the fantasy flipped in her imagination, and she thought that it might be fun to let him ravish her. She could struggle a little, beg for mercy...provided she could be sure he wouldn't show her any.\n\nNot tonight. Tonight she was the predator, and he was the prey. He seemed to know it too. He stopped perhaps eight feet away from her, checked behind himself to see the corridor was deserted, then turned back around to face her. He seemed unsure what to do next.\n\nHer move: she searched her imagination for something clever or sexy to say. How did vampires greet their victims? \"I am Dracula. I bid you velcome.\" That wasn't going to fly. In the end she settled for a wicked little smile and a husky: \"Trick or treat, Handsome.\"\n\n\"Oh, um...hey.\" He patted his hips to indicate the lack of pockets in his sweats; smiled ruefully. I'm afraid I don't have any candy...\" His voice was low. She liked it.\n\n\"Oh, that too bad,\" she pouted. Then: \"Well, I guess I'll just have to find something else to suck on.\" Holy shit! where had that come from? Plain old Dana would never... Vampiress Dana on the other hand decided she enjoyed watching the effect her words had on the burly man in front of her; enjoyed watching his eyes widen, and his face flush. \"So, what brings you down here? Not planning to rob me, are you? I'm afraid I have nothing on...me at all.\" Ok, this was fun! She was a little proud of her double entendre, and she pirouetted slowly, letting him stare at her body, her tight little dress covering her like a coat of shiny black paint.\n\n\"Uh...well I thought you'd...the way you were looking at me...I thought...\"\n\n\"Hmmm...\" she purred, \"fallen under my spell already, have you?\" She giggled, and took a step towards him. He shot a quick look behind himself, checking for...what? \"Don't be shy, handsome! Big, bad pirate; not afraid of me are you?\"\n\n\"Should I be?\"\n\n\"Well...maybe a little.\" She took a couple more steps toward him and smiled, baring her fangs, heard his breath catch. He muttered something indistinct. \"What was that?\"\n\n\"I said, holy sh...holy God, that's hot!\"\n\nShe smiled, circling him, getting closer. This evil seductress stuff was easy, and fun, and hotter than hell. \"So, you like what you see, do you?\" trailing a finger lightly across his chest. Mmmm, felt like there was some muscle-tone under that shirt.\n\n\"Yes Ma'am.\" That was no good. Too formal, like the guy was in the military or something. Hell, maybe he was. She didn't really want to know.\n\n\"Don't be so polite, Handsome. You're a pirate, aren't you? And the way you were staring at me upstairs sure wasn't very polite.\" She dropped her voice to a husky whisper, and looked into his eyes. It made me feel as if I was absolutely naked.\" His breath caught again, and she stepped closer. \"Oh my,\" she breathed, \"you like that idea, don't you?\"\n\n\"Yes, M...that is...I'm sorry, but...goddamn, you're beautiful...so, um...what should I call you?\"\n\nDana had thought about it, and she'd remembered an old movie with this really sexy, murderous countess or something.\n\n\"I think you should call me...Milady. Will that do?\" She stepped closer still, arms by her side, chest thrust slightly forward, invading his space, forcing him up against the wall of the corridor. \"Hmmm?\"\n\n\"Yes, um, Milady.\" She watched his eyes drop just slightly, not to her chest, but to her mouth. Was it the fangs, or maybe...\"\n\nHe solved the mystery a second later. He reached out and drew his finger down the side of her chin. \"Is this the last guy who followed you down here?\"\n\nShe gave him her best evil smile: \"Yup, he was dinner. You know what that makes you?\"\n\n\"Tell me.\"\n\n\"Dessert.\"\n\n10.\n\nHis eyes were large, even up close; a pleasant sort-of medium brown. His lashes were thick too; guys always got lucky with eyelashes. She'd noticed because she'd watched those eyes during their last little exchange. They'd gotten bigger; the brown now surrounded by white. She was close enough to feel the catch in his breathing. He was turned on. Seriously turned on. So was she.\n\nShe reached forward and brushed her hand against his groin. Through the fabric of what she could now feel were re-purposed sweats, her hand nudged something hard and thick. Her fingers explored his cock through the sweats, and the mind-reading thing happened again; although to be fair, when you had a guy's cock in your hand, reading his mind was hardly rocket science. Still, it made her feel kind of...fierce; she'd made him hard, and now she was stroking him, and she could feel the tension in his body. He wouldn't move until she took her hand away. She looked back into his eyes: hypnotism sexy vampiress-style. Hold his gaze and stroke his cock, and this powerful, burly pirate was completely at her mercy.\n\n\"You guys are so easy,\" she whispered, as she continued to fondle him. \"All a girl has to do is wink and stick out her chest. You'll follow a nice pair of tits anywhere.\" Well hell, dirty talk wasn't so hard after all. And damn, the look on his face! Was it just the handjob? Slowly she moved her right hand from his cock, and brought her left up, closing both her hands around his wrists, pinning them to the sides of his body. She pressed herself against him, and leaned close to breathe in his ear. \"Speaking of which, do you like my tits, Mr. Pirate? Do they feel nice pressed up against you like this? Can you feel how hard my nipples are? They get that way when I'm...thirsty.\"\n\nToo far? Too silly? Apparently not. He could probably have broken her grip on his wrists without a second thought; she felt his arms tense, but he made no move to escape. Instead she felt him thrust forward, looking to reestablish some contact between her body and what she hoped was a painfully hard cock. The idea that she was torturing him sexually turned her on even more. Of course now she was pretty cranked herself...so she ground herself against him, feeling his hardness pushing against her through his sweats, her dress, and her soaking wet panties. He groaned: then, pulled himself away to smile into her eyes. \"Well, Milady\" he rasped in a passable \"pirate\" accent, \"since you're thirsty, what d'ye say to a drink?\" Then he tilted his head to one side, offering his bare throat.\n\n11.\n\nDana almost laughed aloud. Either she was really drunk\u2014or he was, or she had been lucky enough to stumble on a guy who was as into her little fantasy as she was herself. She leaned into him, and dragged the tip of her tongue down the side of his neck. He shivered, and she giggled. \"Sounds like somebody likes the idea of being my poor...\" she gave him a quick, wet sucking kiss just above his shoulder, \"helpless...\" another a little higher on his throat, \"victim.\" she finished with a final, lingering lick just below his ear.\n\nShe'd brought her arms up to drape around his shoulders as she teased, and now he pulled her into him again, to continue grinding against her. He was panting now, as if he'd run a marathon, and she had to listen hard to make out his raspy whispers: \"Oh hell, yes!...God you're so...oh yeah...so hot, so beautiful...so sexy...I just wannna...\"\n\n\"Careful, Handsome,\" she smiled against his neck\u2014\"cute\" wasn't on the menu any more, apparently\u2014\"flattery could get you...well, get me too hot and bothered, and I might just tear into you and start sucking...\"\n\n\"Goddamn, please! Do it, please! Just...God this is so fucking hot! Bite me, please! Pretend to...\"\n\nHe was grinding hard against her now, almost fucking her through their clothes, trying to find a position in which he could maintain enough friction on his cock to get himself off. It was hot\u2014damn, it was hot; she'd reduced this guy to a panting, thrashing jumble of unfulfilled needs. But then...was this how she wanted their encounter to end; him cumming in his pants as he thrust against her like some demented cocker spaniel? Holy..., the power she had over this guy! His orgasm was hers to bestow, or deny. Gripping his shoulders, she used her body weight to push him into the wall behind him. He stilled for a second, surprised by the sudden impact, and she put her mouth to his ear.\n\n\"Uh-uh.\"\n\nShe dropped her arms and stepped away, separating their bodies. He made an animal sound somewhere between a sob and a yelp, stumbled and almost fell, caught himself, and stood leaning against the wall, a look of agony on his face. Had he almost cum? She smiled to herself: 'Big, strong pirate,' she thought to herself, 'you're mine now.'\n\n12.\n\nMilady stood back surveying her victim. Tormenting this guy was a serious rush. Dangerous thoughts\u2014Dana surfacing for a second\u2014a little cruelty really seemed to turn her crank. All at once she decided that the poor guy had suffered enough...for now. She took a step closer to her victim, and did a quick check to see that they were still alone in the corridor. Then she knelt in front of him, reached for the waistband of his sweats, and pulled them down quickly. His cock bounced gently in front of her. He hadn't worn underwear, and she could smell sweat and salt and flesh and precum. Also a hint of cologne; this guy had hoped to get lucky tonight. She hoped he was enjoying his evening as much as she was.\n\nHis cock was short and thick. When she put a hand around it, it was hot to the touch, as if its angry red color arose from the heat of his skin. She looked up into his face, saw uncertainty and need and fascination. She gave him a little smile, and ran her tongue across her lower lip: \"Ooh, look what I've found!\" she cooed. Then: \"Blood's for dinner. I want something a little different for dessert. Still...\"\n\nAbruptly she bared her fangs in an open-mouthed snarl, hissing in the back of her throat, liked she'd seen vampires do in the movies. Then she closed her mouth quickly, letting her teeth snap together less than an inch from the tip of his cock. \"Still want me to bite you, Handsome?\" Without waiting for an answer, she leant forward and dragged the tips of her fangs across his erection, heard him moan, felt him flinch. Then she closed her mouth around his shaft and began to suck slowly. She'd leaned to give noisy blowjobs from an ex who'd really been into them, and now she made sure the man could hear her as she licked and hummed and slurped and panted around his erection. She knew he had to be close; could she stretch things out just a little more? Pulling his cock out of her mouth, she smiled up into his eyes, as she pumped him slowly with her hand. \"Mmm, so much blood in here; maybe I should just...bite it off.\"\n\n\"Please...just...\"\n\nShe giggled at the incongruous response. Poor guy just wanted to cum, but his torturess wasn't quite through with him. \"Your wish is my command, Lover.\" She opened her mouth as wide as she could and took him to the root, her front teeth just grazing the base of his shaft. Then she shook her head back and forth, growling and hissing, a tigress tearing a strip of meat from a fresh kill. His moans climbed in pitch as he endured the combined pleasure and pain of her attack. Abruptly she stopped worrying him, and bit down, very slowly and gently, on the base of his shaft, allowing him to feel the slight pressure. To her surprise and relief, her fangs stayed in place, and she almost laughed around his shaft as she momentarily imagined swallowing them. Then she noticed silence and stillness. Her victim was absolutely motionless as she held him in her teeth. He seemed to be holding his breath, something of an accomplishment, given how much he had been panting just seconds before. She pulled off him with a long slow suck, and heard him sigh in relief\n\n\"No,\" she purred up at him, \"I think I'll let you keep this nice thick cock of yours a little longer. Of course,\" she reached for his erection, red and swollen, and glistening with her saliva, \"I'm still thirsty, and now that I've found something to suck on...\" Milady met her victim's eyes, gave him a quick wink, and a naughty smile, and whispered: \"I think I'm ready for my treat!\" Then she slipped the head of his dick back between her lips, sucking and stroking in a quick, regular rhythm. He gasped at the sudden sensation, and began to pant and moan almost immediately.\n\n\"Ohh, yeah...so close, please...unh, unh, unh...almost...gonna... Oh goddamn! Oh yes, yeah just like that...just...hunh, hunh...HUNH!\n\nHis cock pulsed in her mouth as jet after jet of thick, salty sap shot across her tongue. She'd anticipated a big load\u2014she'd teased and denied him\u2014but she was astonished at how quickly he'd filled her mouth. She swallowed convulsively, and then pulled him out, his last few spurts hitting her lips and dripping down her chin, like the (fake) blood of her first imaginary victim. Making sure he was watching, she gathered the excess on her fingers, humming with content as she slowly licked them clean. Then she stood up, and turned away to walk back down the corridor.\n\n\"Wait up a minute!\" She looked back to see her pirate struggling to get his pants back up around his waist. She kept walking. \"Wait!\" Desperation in his voice: \"Can I see you again?\"\n\nShe turned around and stalked back toward him. He took an involuntary step back, one hand still tugging at the waist of his sweats. She said: \"Give me a phone number.\"\n\n\"I don't have anything to write...\"\n\n\"Just tell me.\"\n\nHe did. She turned and walked away.\n\n\"Hang on a minute! What's yours?\"\n\nShe thought to herself: 'I could tell you, but then I'd have to kill you...' Then she giggled to herself: 'which might be kind of fun.'\n\n13.\n\nWhen she woke up the next morning, she remembered the number; she was good with numbers. Of course she didn't know if it was home or cell; didn't know his name, if it came to that. She decided she didn't care, but she also decided that she wasn't quite done playing with him.\n\nThe party had been...well, amazing, and that was kind of weird. She thought about it on her way into the office the next day, had thought about it as she dressed and ate a quick breakfast. She was back to being just Dana, plain old Dana, or...pretty little Dana? Hot little Dana? Back to the party: she'd wandered around, talked to almost nobody, sucked some stranger's cock in a deserted hallway, and left. She hadn't even gotten off...well, not until she got home, torn off her new favorite dress, leapt into bed and abused her clit until she came like a fucking freight train!",
        "The thing was, Milady hadn't just been fun and exciting, she'd been...really easy to access. Dana liked being aggressive and seductive, liked feeling powerful and desirable. She though about the guy in the pirate costume: her victim\u2014the word still did a little something for her; should that worry her? She knew literally nothing about him beyond what was probably a cell phone number; didn't even know if he was a co-worker, or somebody's boyfriend or what. She knew she wasn't done with him, but that was mostly because of how he had responded to her, or to Milady anyhow. Maybe that was a vampire thing; the blood and the fangs really seemed to get him going. Or maybe he just dug powerful aggressive women. It wasn't like he'd suffered...much. He'd gotten a blowjob out of the deal, but what if...?\n\nShe'd blown him because she'd wanted to; best reason to give a guy a bj really. In the past, she'd wanted to because she liked, or maybe loved a guy, and wanted to make him happy. But last night, she'd done it to...stay in character. She was a vampiress, after all. She drank the...vital fluids of her victims. But since there really were no such thing as vampires, and she didn't actually want to break the guy's skin with her fake fangs, she had...taken what she needed another way.\n\nSo next question: what to do now? Being Milady had been so much fun; not just the costume, but the whole persona. She didn't want to just hang it up until next year, and besides it wasn't even Halloween yet. On the other hand, she'd gotten really lucky with Pirate Guy. The next guy she tried the whole evil seductress number out on might blow her off, or laugh at her, or\u2014God forbid\u2014tell her she was cute! But Pirate Guy had entered into her fantasy. Or maybe he shared it; maybe it was his fantasy too. So back to the original question: what next?\n\nAll she had was a phone number: no name, no address, no workplace; hell, no idea if this guy she was fantasizing about having violent, ecstatic sex with was a disease-riddled serial killer. But come on; what were the odds? No, assume the guy was like her, a nine-to-fiver, taking things a day at a time. Wife or girlfriend? Not important. Or rather important in that he might not want to cheat again, if he even considered being attacked by a ravenous vampiress at a Halloween party cheating in the first place. Would she have a problem with it, if she knew? No: the man's relationship status was his business. If he didn't want to play, he could say so, and she'd leave him alone. But he'd given her a number. And he'd asked for hers. So, assume he would be open to...continuing things, whatever that meant.\n\nAll she had was his phone number. No, that wasn't entirely true. She didn't have personal data, maybe, but she'd had a pretty intense half-hour with the guy, and she had some impressions. The vampire thing had been what he'd responded to; had to be. The way he'd been staring at her mouth rather than her eyes, or\u2014more usually\u2014her chest, the fascination with the blood on her chin; he'd even asked about it. The way he'd gotten off on the role play. She'd been stroking his cock at the time, but still... And she had his phone number. She reached for her cell phone, and dialed.\n\n14.\n\n\"Kelly? It's Dane. I need a favor.\"\n\n\"Oh yeah?\" suggestive little lilt to the voice; Dana loved Kelly, but the woman would flirt with a microwave oven. \"What kind of favor? Because I'm always...\"\n\n\"Kinky sex.\"\n\n\"...happy to...Wait, what?\"\n\n\"I'm not kidding. Look, are you free tonight. This is going to take a little planning, and there's kind of a deadline. Shit, I'm going to be late for work. Can I come by afterwards, maybe around 6:00 or 6:30? I'll take you to dinner, and tell you all about it.\"\n\n\"Uh, yeah, sure, but could you maybe make it 7:30. We had a minor crisis yesterday, and I may burn a little overtime. I'll text if I'm going to be home any earlier.\"\n\n\"7:30, your place. See you then.\"\n\n15.\n\nThat evening: \"Holy shit, Dane, that's...wow! I never thought you had it in you.\"\n\n\"Is that a yes?\"\n\n\"Are you kidding? Of course it's a yes! But, I mean, what if he doesn't pick up? Or what if he's not home?\"\n\n\"That's why we're doing this on a Monday night, and kind of late. And if we can't get through,\" Dana dropped her voice to a sexy purr, \"I'll reward you for your loyalty to your mistress!\"\n\nKelly giggled. \"Ooh, thank you, Milady! Can I have a little of my reward tonight?\"\n\nDana stood up from her chair\u2014they were in Kelly's living room\u2014and sauntered over to the couch on which her friend reclined with legs outstretched. Kelly was a little shorter than Dana, slim and leggy, blonde and fair, smaller in the bust. She was also used to being the aggressor in their occasional sexual adventures, but now, as she lay back on the sofa, her friend seemed to tower over her. Dana smiled seductively down at her, used a knee to nudge apart the smaller woman's thighs and lowered herself across Kelly's body until their faces were less than a foot apart. She whispered: \"No. Tomorrow.\" Kelly whimpered softly. \"And until then,\" Dana\u2014or Milady\u2014added, \"this naughty little body belongs to me. No touching.\"\n\nKelly: \"Dane, seriously? Come on, please? You're making me so hot! Can't I just...\"\n\n\"No! You're in my power for the next 24 hours, got it? I'm giving you your next orgasm, if I decide you're worthy. And to ensure your obedience...\"\n\nShe took Kelly's chin between her thumb and forefinger and turned her face to one side, exposing her throat. Slowly, deliberately Dana lowered her face until her lips were pressing against the soft skin. Kelly moaned, anticipating what was coming. Dana let the tip of her tongue explore the side of Kelly's neck, sampling a pleasant combination of sweat, perfume, and arousal, then she took a fold of skin between her teeth, and bit down hard enough to elicit a high pitched \"Uhnnn!\" from her squirming victim. She held her friend's neck in her teeth for a few seconds, then she covered the spot with her lips and began sucking gently, making sure Kelly could hear the soft, wet sounds Milady made when she fed. After a few moments, she brought her lips up to the smaller woman's ear and whispered: \"Mmmm, your blood is sooo sweet, my pretty! And now that I've tasted it, you're powerless to resist me, so,\" she reached down between their bodies and cupped Kelly's pussy though her panties, \"no touching until tomorrow night. Now, say 'Yes Milady.'\"\n\nKelly sighed: \"Yes, Milady!\" giggled, and then added, \"Evil bitch!\"\n\nDana smiled down at her friend, gave her a quick peck on the lips and smiled. \"You have no idea!\"\n\n16.\n\nThe following night, Monday, October 28, Kelly arrived at Dana's house at 9:00 pm. She wore a red pleated skirt which hit her long slim legs somewhere around the middle of her thighs, a silky button-down pale pink blouse, boots, a bomber jacket, a lacy white bra, matching bikini-cut panties, and an air of anticipation and sexual frustration Dana figured she could cut with a butter knife.\n\n\"Somebody's wound pretty tight.\"\n\n\"Yeah, well somebody's vampire mistress came by last night and got her all hot and bothered and then wouldn't let her masturbate!\"\n\n\"So be a good little helpless, hypnotized fuck toy tonight, and I might let you cum before I kill you.\"\n\n\"Wow, Milady, you really know how to sweet talk a girl. Speaking of which,\" she gave Dana's terrycloth bathrobe a slightly disappointed look, \"are you going to, um, change at all?\"\n\nDana smiled. \"Want me to?\"\n\n\"Oh, yes please!\"\n\n\"OK, I'll do a less drastic version of the make-up. I was planning on wearing my fangs anyway, since I think I sound a little different with them in. And as for everything else...\" She gave a flirty little smile and opened her robe to reveal her slutty black lingerie\u2014bra and cincher with garters, lace-top stockings, g-string and the heels she'd worn to the party. \"Will this do?\"\n\n\"Oh my God, Dane, you look so fucking hot!\"\n\n\"Thanks. I...think I might make you describe me for him.\"\n\n\"Ooh, yes Milady! Um...how should I be, just in general?\"\n\n\"You mean...\"\n\n\"I mean, am I scared of you, or am I totally under your spell, and hot for you, or what?\"\n\nDana considered. \"This may sound a little fucked up,\"\u2014Kelly snorted with laughter\u2014\"I know, circumstances, right? But I'm kind of getting off on her cruelty, so maybe it's like your body can't resist my commands, but you're still scared and maybe even a little shy...ooh, no, maybe you're not even all that experienced, you know, sexually, and you know I'm evil, but I'm doing things to you that feel soooo good! Then you can beg and plead a little before you submit to my depraved...\"\n\n\"Shit, Dane, stop! I get it! If you don't want me to just, like, cum spontaneously, just stop now, or I won't have anything left for when we get him on the line.\"\n\nDana gave her best evil laugh: \"Under my spell already, my Pretty? Ok, let's go back to the bedroom and get this going!\"\n\n17.\n\nIn the end, Dana applied almost all of her make-up. The fangs just didn't look right next to the freckles. Then she slinked out of the bedroom, all red hair, pale skin and black lingerie to confront her newest victim. She watched with pleasure as Kelly's eyes widened at her approach. When she was close enough to the smaller woman, she smiled, displaying the fangs, and reached out to stroke the little blonde's cheek with the back of her hand. Then she hissed: \"Such a lovely little thing; you look good enough to eat.\"\n\n\"Dana...\" Kelly could barely get the two syllables out on a single breath.\n\n\"Uh uh, Kell, from here on out it's...\"\n\n\"Milady. I know. I'm sorry. Should we have...I mean do I need a safeword or something.\n\nDana considered: \"We've talked about pretty much everything I'm going to do. You're still up for this, right?\"\n\n\"God, yes! More than ever! It's just that...well you are kind of scaring me a little.\"\n\n\"I know I am, and it's really turning me on. But look: I want to keep the role play...um seamless for this guy. If you need to stop, just go ahead and end the call, ok? I mean, I'm not tying you down or anything. At least, not this time.\n\n\"Ok, I guess, and you have the...?\"\n\n\"The sound effects? Right there on the night stand.\"\n\n\"And we trade off holding the phone while we're talking, and then when you start...\"\n\n\"Then the phone goes into this holder,\"\u2014indicating a cradle next to the sound effects\u2014\"and he hears what he hears. Now, you ready?\"\n\n18.\n\n\"It's ringing!\"\n\nThen: \"Hello?\"\n\nDana nodded to Kelly, and then she began to speak, her voice low, slow and sensual as she guided her words around the fangs. \"Trick or treat, Handsome. Do you know who this is?\"\n\n\"Oh lord, I was praying you would call...um, Milady. Do you...\"\n\n\"Shhh, listen to me, Mr. Pirate. I've called for a reason.\"\n\n\"Uh, yeah...sure. Ok, why are you...?\"\n\n\"I've been out hunting, and I've brought\" --Milady's eyes swept slowly up her pretty victim's body; Kelly shuddered with arousal\u2014\"a lovely little thing back with me to my lair. Since you were kind enough to...satisfy my thirst on Saturday, I thought I'd offer you a treat in return. Would you like to listen to me...play with her.\"\n\n\"Wait, you mean...?\"\n\n\"Her name is Stacy. Say hello, Stacy.\"\n\nDana held up the phone and Kelly said \"H-hello\" in a high pitched, trembling voice.\n\n\"She sounds scared.\"\n\n\"She is scared. A little adrenalin makes the blood that much sweeter. And fear turns me on. My pussy is so wet right now that I almost wish I had you here with that nice, thick cock of yours. You could fuck me while I feed.\"\n\n\"Oh my...\"\n\n\"And this one would get you hard all by herself. She looks delicious. Come over here, my pet.\"\n\nKelly walked over to where Dana stood. The two women were in Dana's bedroom, a large-ish room with a queen-sized bed in one corner, with nightstands on either side of the headboard. A walk-in closet opened up to the right of the bed, creating a six-foot wide corridor between the edge of the bed and the wall which held the door to the master bath. Kelly/Stacy had been sitting on the bed, but now she stood facing her mistress in front of the closet. She said: \"Yes, Milady?\"\n\n\"Stand before me, my dear; let me look at you.\" Then into the phone: \"Oh yes, this one would definitely appeal to a pirate like you: a lovely little doe-eyed blonde just begging to be carried off and ravished.\"\n\nStacy: \"Oh no, I...\"\n\nMilady: \"Shh, my sweet! This man can't touch you. He has no idea where we are. You have nothing to fear...from him.\"\n\nStacy: \"Yes, Milady.\"\n\nDana shot Kelly a quick grin; her friend was playing it perfectly. Then, resuming her role: \"Good. Now...hmmm, what a beautiful body you have! Why don't you take off your clothes and show it to me.\"\n\n\"Oh, Milady, I don't know. I've never...\"\n\nGently, so as to keep the phone in position, the vampiress brought her face to her victim's and gave her a long, passionate kiss. Her lips glided against Stacy's, then she caressed the little blonde's lips with her tongue. Stacy's mouth opened willingly, and for s few seconds the soft wet sounds of lips and tongues exploring and caressing, along with little high-pitched sighs and pants, came clearly through the connection to where the man sat listening, his cock already painfully hard and erect.\n\nAfter a little time, Stacy deliberately brushed her tongue against a fang. She gave a little squeak of surprise: \"Oh, Milady! Your teeth are so sharp!\"\n\n\"The better to eat you with, my pet,\" purred the vampiress, \"now, strip for me.\"\n\n\"Yes, Milady!\" sighed her pretty victim.\n\n19.<br>\n\nMilady watched hungrily as Stacy began to undo the buttons on her blouse. \"Are you still there, Lover?\" she whispered into the phone.\n\n\"Yeah.\" Half-word; half-pant.\n\n\"She's taking off her top. She has such lovely soft skin! I wonder if it's as sweet as her mouth is. You heard us kissing?\"\n\n\"Mm-hmm.\"\n\nThe vampiress giggled. \"She looks so frightened and helpless,\" then her voice dropped, husky with arousal, \"but she has the naughtiest tongue. It was just...everywhere: my lips, my tongue, my teeth...\"\n\nKelly/Stacy smiled, licked her lips and gave her best porn star pout. Milady\u2014refusing to break character for the moment\u2014bared her fangs in a silent hiss. Stacy reassembled her virginal victim persona, and dropped her blouse revealing a lacy white bra.\n\n\"Oh my!\" back into the phone: \"her shirt is gone and...there. Such a sweet little bra: white lace with a front clasp; gone now, and her breasts look absolutely luscious! Hmmm, I think I need a closer look.\" Then to Stacy: \"Come to me, my sweet.\"\n\nStacy approached until she was standing directly in front of her mistress, who was herself sitting on the bed. Milady drew the pad of an index finger slowly down one exposed breast until she reached the nipple. She squeezed gently, and was rewarded with a soft moan of arousal.\n\n\"Ooh, oh yes!\" Back to the phone: \"Being a scurvy pirate and all, I doubt if you've ever seen, let alone caressed, tits as warm and soft and,\" a long indrawn breath, \"mmm...exquisite as these beauties I'm playing with right now.\" Cupping Stacy's breasts and bouncing them gently, as the pretty blonde sighed and cooed, Milady continued: \"Oh, they're so pale and smooth and...perky\u2014each one about the size of an apple\u2014with tiny, dark pink nipples...ooh, they're getting harder as I pinch them!\" Her victim's sighs became higher, and slightly louder; little shrieks of pain and pleasure as Milady's pinches became rougher.\n\n\"I want you to listen to me sucking on them. You remember my warm mouth closing around your cock? Remember how soft and wet my red lips are? Just imagine those lips suckling the most perfect pair of titties you've ever seen. And keep your hands by your side. Touch your cock, and I'll hang up, and you'll never hear from me again! Don't think I won't know if you disobey me!\"\n\nA frustrated sigh over the line; then: \"Yes, Milady.\" She could almost see him releasing his throbbing erection; she hoped he'd been close. \"Poor man, does it hurt?\"\n\n\"God, yes!\"\n\nThe vampiress giggled. \"Good. I have to tell you a little secret: torturing you really turns me on!\"\n\nShe heard a rueful chuckle on the other end of the phone. \"No shit?\" her pirate muttered.\n\nDana grinned: \"None whatsoever. Now remember, no touching.\" Then in a whisper: \"I'm going to kiss these lovely breasts now. I won't bite...yet.\"\n\n20.\n\nMilady leaned forward and captured one of the little blonde's nipples between her lips. Stacy, the good damsel in distress, gave a surprised little squeak. \"Ooh, what are you...? I've never...please don't! You shouldn't...oh, oh, oooh...feels soooo good!\"\n\nThe vampiress began to tease and wet her prize with lips and tongue, holding the phone close to her mouth so that her captive pirate could hear the little wet smacking and sucking sounds she made as she bit and sucked and licked.\n\nFinally, she pulled off with a last wet smack. Stacy mewled in protest: \"No...please!\"\n\n\"What a naughty little slut you are, my dear!\" crooned Milady through a grin. \"You like it when I suck your tits, don't you?\"\n\n\"N-n-no,\" Stacy protested, as she tried to suppress a giggle, \"it's just that...\"\n\n\"Shhh...\" Dana broke character, caught Kelly's eyes, and pointed to her own. Then she mouthed silently 'hypnotize you.' Kelly's brow furrowed for just a second, and then she smiled and nodded. Dana reacquired Milady's seductive purr. \"You have such beautiful eyes, Stacy...why don't you look into mine...\"\n\n\"Yes, Milady...oh, your eyes are...beautiful...too...they're so...oh...\"\n\nKelly's voice slowed and deepened and she pretended to fall into a trance. Dana blew her a silent kiss and gave her a \"thumbs-up\" with the hand which wasn't holding the cell. Then she spoke into the phone\n\n\"Sill listening, Handsome?\"\n\n\"Yes.\"\n\nA whisper: \"Is your cock still hard?\"\n\n\"Yes.\"\n\n\"Throbbing?\"\n\n\"Yes.\"\n\n\"Painful?\"\n\n\"Uh huh...please, may I...\"\n\n\"Good.\" Dana/Milady gave what she hoped was a cruel little laugh: \"Then listen to this.\"\n\nShe turned to Kelly/Stacy: \"Now, naughty girl, were you lying just now, when I asked you if you liked it when I sucked your tits?\" She handed Kelly the phone. Speaking into it, Kelly/Stacy murmured: \"N-no..?\"\n\nDana/Milady silently patted a spot next two her on the bed, and the two young women sat close together, taking turns with Dana's cell.\n\nMilady: \"Come now, my dear, don't lie to me. I know. I felt your delicious little nipples harden between my lips. I heard you moan. You did like it didn't you?\"\n\nStacy: \"...yes.\"\n\nMilady: \"Would you like me to do it again?\" She dipped her head and flicked a teasing tongue across her victim's engorged nipple, and then took it between her teeth, biting gently.\"\n\nStacy squealed and squirmed: \"Oh!...ahhh, that...ee, yes, please, don't stop...\"\n\nMilady: \"Would you like me to do more?\"\n\nKelly grinned and nodded emphatically but silently. As Stacy, she said into the phone: \"More? I don't know... what do you...\"\n\nMilady: \"I'll show you, my Sweet, now...why don't you tell...\" She held up a finger, and grabbed the cell. Kelly gave her a 'get on with it' kind of glare and huffed with impatience, as Dana stood and walked a few steps from the bed. \"Pirate,\" she cooed, \"I can't keep calling you that. What is your name?\"\n\n\"Uh...Ben,\" his voice was dry and husky with suppressed want. \"Ben Gunn.\"\n\n'Fake name', Dana mouthed to Kelly. Then she giggled. Probably still a little afraid of me, she thought to herself. I would be. Into the phone she whispered: \"Ben Gunn...I like that. And you have such a lovely gun...as I recall. I remember what it felt like...what it tasted like...mmm. You wouldn't be playing with that gun now, would you?\"\n\n\"No.\"\n\n\"Good boy. Now, Stacy, my pet, why don't you take this phone and tell Mr. Gunn exactly what I'm doing to you.\"",
        "21.\n\nDana handed the cell to Kelly, who pressed it flat against her naked left breast and mouthed 'Strip!'\n\n\"What?\" Dana barely breathed.\n\n\"You should strip.\" Kelly whispered. \"At least the bra...so I can describe your body to him!\"\n\nDana: \"What? Look, who's in charge here?\"\n\nKelly: \"I know, I know, and I'll be good, and submissive and scared and everything, but please? Trust me!\"\n\nDana shot her friend a dubious look. Kelly asking her to strip was nothing new. The horny little minx was constantly trying to get into her panties. But Kelly gave her the pout and the puppy eyes, and Dana huffed, and tried to get her head back in the evil seductress game, as she reached behind her to unhook her bra.\n\nKelly mouthed 'Thank you!' and put the phone up to her ear. \"Mr. Gunn?\" she squeaked in a small, scared voice.\n\n\"Yes...uh, that's right. Is this Stacy?\" A pleasant baritone, with some breath in it now; the man's arousal was palpable.\n\n\"Mr. Gunn,\" sighed Stacy, going back into the slightly lower and slower voice of the hypnotized victim, \"Milady wishes me to tell you...oh my!\" Then as if Stacy's upbringing was somehow at odds with the vampiress' power over her: \"Oh no, no no, Mistress, you shouldn't...Mr Gunn, she's...oh God, she's taking off her clothes...her body is...oooh!\"\n\n\"Stacy!\" the man calling himself Ben Gunn rasped, \"Tell me, what...\"\n\n\"Uh-uh, no! I shouldn't be...oh my, her breasts are...beautiful! So much bigger and...I don't know...rounder than mine. Oooh, I'd do anything to have boobs like that! So pale and perfect, and her...her nipples are, like, this deep rose pink. Oh my God, what's happening to me? I can't...I just want to...\" she swallowed. \"I want...\"\n\nHaving dropped her bra, Milady now cupped her generous tits, jiggled them gently, and smiled, as if offering them to her pretty victim. Kelly/Stacy mouthed: 'Tease!' Then the vampiress leaned in close to be heard over the cell phone:\n\n\"Hush, my poor Pretty. I know what you want. I can read your every...naughty...thought. All your most secret, most depraved fantasies; I can make them come true. Now, spread your thighs for me.\"\n\n\"No!\" Stacy sounded as though she were almost crying. \"I won't! I can't...what are you? Oh God, what are you doing to me?\" Sitting on the bed, Kelly slowly parted her legs, as Dana knelt between them. Over the phone, as Stacy, she whispered: \"My legs...oh God, they're...I'm not...they're spreading! She's spreading my legs...and she's not even touching... Now she's looking into my eyes...such lovely, cold eyes! Now her tongue is...oh no! No nonono...what're you...Oh God, Yes!\"\n\n22.\n\nDana had done her share of experimenting in college, and had even had the occasional female lover since, but Kelly was her only real long-term playmate. She knew her friend's sweet spots as well as, or maybe even better than, she knew her own. She had always found the smaller woman's pussy beautiful: a pale soft cleft\u2014Kelly kept herself shaved except for a tuft of fine blonde pubic hair at the top of her slit\u2014which parted to reveal deep pink labia, and a tiny bump of a clit peeking out from under its fleshy hood. When she was in the mood, she loved nothing better than to feast on Kelly's pretty, sweet, slightly vinegar-y lady bits. As Milady looked up from the light taps her long pointed tongue had delivered to her helpless victim's clit, she saw that while Stacy was protesting into the phone, Kelly's face had gone slack with passion and anticipation.\n\nDana/Milady reached up to take the phone from Kelly/Stacy's hand. \"I'm putting the phone down now, Mr. Ben Gunn,\" she purred into it, \"but if you'd like to keep listening, you can hear this naughty little slut\u2014oooh yes, she may protest, but her cunt is positively dripping for me. Anyway, you can hear her cum on my tongue, and then...you can listen to me sink my fangs into her lovely, soft throat. I hope you don't find the sounds too...distressing. I can be a messy eater.\"\n\nShe hit the speaker button on the phone and put it in the cradle on the nightstand. Then she carefully removed her fangs. Sexy as she felt wearing them, they were incompatible with the sound effects. Then she knelt again between her victim's thighs, and in a slightly louder murmur\u2014hoping to be heard over the phone: \"What a delicious little pussy you have, my dear. Now keep still. I'm going to eat you all up!\"\n\nStacy whimpered \"no!\" in a tiny frightened little voice.\n\n\"Shhh!\" soothed the vampiress. \"Yes, I am. Don't be afraid. I promise...you'll enjoy this part of the evening.\"\n\nThen Milady lowered her face to her Stacy's cunt, and making a tube of her long tongue, pushed it inside her squirming victim.\n\n23.\n\nAs Milady's tongue penetrated her, Stacy screamed in a combination of outrage and ecstasy. (This was one of Dana's favorite tricks, and it never failed to jumpstart her super-sensitive friend/lover.) The little blonde squeaked and mewed, trying to narrate the experience for their listening audience through her pants and yelps: \"Oh my God oh my God ohmyGOD! What...uh, uh, uh-huh, uh-huh, yeah...your...oh God, oh my...your what're you...no FUCK, don't stop! Your tongue is...Goddamn, so...uhhhh! So Good! Inside me...how do you...Nooo!\n\nFor the vampiress had stopped tongue-fucking her victim, and now began lapping at Stacy's slit. Milady licked up and back, giving Stacy's clit a teasing little flick on every other pass. The little blonde screamed again, and began to beg, temporarily losing track of the role play: \"C'mon...ohh, feels so...Dane! C'mon, don't...owww!\n\nUpon hearing her name, Dana had bit hard into the fleshy part of Kelly's inner thigh. Kelly tried to cover: \"Owww, shit! Sorry...um...Milady, it just felt so...I mean...um...your tongue was...\" Then giving up, and trying to reassemble scared, hypnotized little Stacy: \"Please, Milady! Please don't hurt me, and please could you...with your tongue...That just felt so...please?\"\n\nKelly looked down and pouted. Dana met her friend's eyes, shook her head, mouthed 'amateur!' and then lowered her face to Kelly's pussy, and resumed her long, slow licks, pausing now at the top of each lap to caress her victim's clit with the tip of her tongue, and slowly building up speed. Stacy moaned: \"Please, Mistress, yes, Mistress, just like that...ooohhh, feels so good, so...eee-yah...like that...Milady, please, please, please...like...oh, oh, oh, Oh, Oh, OH, OH yeah, OH fuck yeah...OHHHH!\" Then as her body began to contact violently: \"YEA-HUNH, HUNH, UHH, UHH, UHHNH!\"\n\n24.\n\nThe climax had been quick and intense, even for Kelly, who tended to be an easy cum, at least in Dana's experience. It had also been heartfelt, and loud, and very fucking HOT! Hot enough to cover the little character break mid-way through? Dana hoped so, but as she licked her friend's sweet-and-sour nectar from her face, and from Kelly's thighs, she decided not to worry about it. She hoped that their next little Halloween trick would banish any memory of it from her pirate's mind.\n\nKelly/Stacy was winding down from her orgasm, her long pants interspersed with small moans and whimpers; no words. Milady rose up, still on her knees, and leaned forward to take a quick suck at a tight little nipple on a small flushed breast. Her victim cooed and hummed at the new sensation. The vampiress toyed with the smaller woman's breasts for a few languorous minutes, and then stood up, and beckoned to Stacy, who rose obediently, and knelt with her by the nightstand.\n\n25.\n\nThe two women locked eyes. Dana listened for a moment, caught the labored breaths of the spellbound man listening over the cell, and then raised her brows: 'ready?' Kelly nodded. Her mouth close to the phone, Milady spoke:\n\n\"Did you enjoy that, my dear?\"\n\nStacy: \"Oh yes, Milady! I've never...that is...I'm not sure...it felt so...so good, but I don't know if I'm supposed to...I'm afraid...\"\n\nMilady: \"Hush, my sweet! What are you afraid of? I told you I would eat...you...up, and I did, didn't I?\"\n\nStacy: \"You...I guess...I mean...\"\n\nMilady: \"It didn't hurt, did it?\n\nStacy: \"N-no, but we shouldn't...\"\n\nMilady: \"Now there's just one more thing I want to do. Is that all right?\"\n\nStacy: \"I...I suppose...this won't hurt, will it?\n\nMilady in a whisper: \"Maybe just a little...\"\n\nDana picked up a large, firm apple from the nightstand, and keeping her mouth as close to the phone as possible, she took a large juicy bite. As soon as she heard the sound of Dana's teeth breaking the flesh of the fruit, Kelly gave a soft scream.\n\nStacy: \"Ahhh-eee! What are you...oh God, please...stop...it hurts!\"\n\nDana savaged the apple, tearing at it, panting and snarling as she bit and sucked at its juice. Still squealing and begging, Kelly took a bottle of water with a squeeze top, leaned back onto her elbows and dribbled some of the water onto her naked skin, into the divot made by her collar bone just below her neck. Dana laid aside the apple, and began sucking the water off Kelly's skin, adding slurping, smacking, and swallowing to their little Foley session. The two women paced themselves, trying as hard as they could not to crack up and give the game away; Dana sucking, panting and snarling, and Kelly screaming and pleading (and dripping the water onto herself), allowing her voice to grow weaker and more desperate as Stacy succumbed to Milady's fanged attentions. Finally Kelly lay back on the bed, moaning softly, and Dana taking a final mouthful of water, swallowed, sighed, and growled into the cell:\n\n\"Pirate, did you enjoy that? Did you enjoy listening to me drain her? I loved it! I loved killing her for you! Her blood was sooo delicious, and her struggles so desperate, and so pathetic! Oh, I wish you could see me now: little Stacy's essence staining my mouth and dripping onto my big tits!\" She giggled. \"I'm a mess! And I'm so fucking horny! I wish I had that big thick cock of yours here. Fuck! I just want you to bury that thing in my cunt and fuck me bloody!\" Another giggle. \"Or should I say bloodier?\"\n\nThe voice that came back to her on the phone sounded almost as if the speaker was in pain: \"Goddamn, that was so...fucking hot! And so fucking wrong! and...holy shit I...I can't even...How did you... No, fuck, please don't even tell me! So...um, Milady, or Dane, or whatever...what now? Can I..?\"\n\nAh shit, Dana thought to herself. The guy might be cross-eyed horny, but he's no fool, or at least he can use his ears. \"Milady to you, Handsome!\" she snapped. \"My other names are no concern of yours!\" As to what now...well, first of all, I have to do some housekeeping. I don't think I want to keep the little slut around, so I'll just...\" Dana looked over to Kelly, who stifled a giggle as she handed her friend a long thick carrot. Dana laid the phone down on the bed, held the carrot close to the mouthpiece, and\u2014with an effort\u2014broke it in half. (Kelly buried her face in a pillow to hide her giggling.) Then Dana/Milady picked up the phone again: \"Poor little Stacy.\"\n\n\"What did you...\"\n\n\"I snapped her neck.\" cooed Milady. \"Can't have another vampire poaching on my hunting grounds, now, can I? Might scare off the game.\"\n\nA pause; then: \"Milady?\" Dana wondered if her Pirate was trying to fight the urge to laugh. She began to answer, but he continued: \"I asked you a question the other night, but you never answered me.\"\n\n\"And what was that, Mr. Ben Gunn?\"\n\n\"Can I see you again?\"\n\n26.\n\nDana/Milady hesitated, unsure of what to do or say next. She'd had so much fun being...well, being Vampiress Dana at the Halloween party, and she hadn't wanted to\u2014what?\u2014give up Milady, so she'd called Kelly, who was always up for a little...but now what? Was this guy asking her on a date? Based on a blow job and...whatever that just was? She felt an urge to giggle. Why the hell not? Blow jobs were like potato chips: no guy could stop at one. Still...who was he interested in dating? Being Milady was fun and...exciting, and...but it did take some effort. Was the guy so into the vampire thing that he wanted her to come and...actually drink his blood or something? She'd heard about that kind of thing, but that really wasn't what this had been about; at least not for her. Well, her Dad always said you'd never get an answer to a question you didn't ask.\n\n\"What's your name, Handsome?\" A place to start.\n\n\"Benjamin Carter.\"\n\n\"And what exactly do you...\"\n\nHe cut her off, which annoyed the hell out of her until she tuned in to what he was saying.\n\n\"You're the most fascinating woman I've met since...well, probably ever. You're beautiful and imaginative and...maybe a little twisted, and mysterious, and so incredibly sexy! I've...look, this is going to sound weird...\" She did laugh at that. He continued: \"Yeah, ok, but...you know how you asked if my...um...if my cock was hard while I was listening to you?\"\n\nDana found herself intrigued. He seemed to find the subject matter a little awkward\u2014well duh!\u2014but at the same time, he didn't seem to have any trouble saying the word 'cock.' And his voice had dropped in pitch, but not in...strength? She really liked his voice. She said: \"I remember.\"\n\n\"And you remember how you told me not to touch it, or I'd never see you again? How you'd know if I disobeyed you?\"\n\n\"Yes.\"\n\n\"I haven't touched it. It's really painful\u2014well maybe not so much now, but while I was listening to you and Stacy, or whatever, I was so turned on... I am so turned on by the whole idea of you. So why haven't I touched myself? You couldn't know. You're not really a vampire, because there are no such things as vampires, but I want there to be...I want you to be! And I wish I could give you some idea of how weird that is to me, because I am really not that guy. Or at least I didn't think I was...\"\n\n\"So...\" this was uncharted territory for Dana. And now Kelly was sitting up, listening. \"So you're still...under my spell, or...in my power? Is that what you're saying?\"\n\n\"Maybe, I...\"\n\nNow she cut him off: \"And you haven't touched...your cock because I told you not to?\" Kelly's eyes opened wide, and she gave Dana a silent thumbs-up. Dana mouthed 'I know, right?'\n\n\"That's right.\"\n\n\"And you'd really like to have a second...um, encounter with an evil, bloodthirsty, sexually insatiable vampiress?\"\n\n\"God, yes!\" There was breath in his voice now.\n\nMilady was back: \"You know you're unlikely to survive our little get together?\"\n\n\"Oh yeah, but...\"\n\n\"But?\" purred the vampiress, and winking at Kelly: \"You dare to make conditions?\"\n\n\"Oh yes, Milady,\" and now there was a definite smile in the pirate's voice. \"If I do survive, I want to take Dane\u2014whoever she is\u2014out to dinner.\"\n\nMilady/Dana's eyebrows arched at that. Kelly mouthed 'What?' but Dana shook her off. Into the phone she said\u2014in Milady's most seductive purr : \"Don't you dare touch that lovely cock of yours. Until I decide otherwise, you cum for me or not at all, understood?\"\n\n\"Yes, Milady.\"\n\n\"Good. Text me an email address at this number. I will send instructions, and be home alone on Halloween night. I may decide to stop in for a bite.\"\n\n27.\n\nDana ended the call, and turned to look at Kelly, still naked\u2014and a little damp\u2014kneeling on her bed.\n\n\"What was all that about?\" asked her friend.\n\nAfter Dana had explained, Kelly whistled: \"Wow! so you're seriously thinking of going to some strange guys house and...doing to him what you just did to me?\"\n\n\"Fucking his brains loose? Yeah, basically.\"\n\n\"In the black lingerie and fangs?\"\n\n\"I think so. I think that's what he...well it's what I want, so fuck him. Or don't, because I think I'm going to? Does all this sound just insane?\"\n\n\"Yeah, it does. It also sounds so fucking hot I'm getting your bed wetter than it already is.\"\n\n\"I know, right?\"\n\nKelly tried a little evil giggle of her own: \"You know...it's too bad you tore poor Stacy's throat out. She might have made a good little submissive fuckdoll to dally with between victims.\"\n\nDana considered that: \"Hmmm, well...I suppose I could drip a little blood from\u2014oh say a cut just above one of my hard little nipples\u2014into her open mouth. Maybe my evil powers could revive enough of her will to do my bidding...\" She brought a fingernail to her breast and pretended to slice herself just above the nipple. Kelly brought her lips to the \"cut\" and began to suck. Dana moaned, and her hand moved to the lips of her own soaking pussy, questing for her clit. Kelly reached down, and gently pushed Dana's hand away.\n\n\"Uh-uh,\" she cooed, \"that's my job. Milady, your slave begs to be allowed to pleasure you with her naughty, slutty tongue...she craves but one favor at her mistress' hands...\"\n\n\"And that would be?\" demanded the vampiress, her voice taught with arousal.\n\n\"Dane,\" pleaded Kelly, \"oh, God...put the fangs back in and order me to do it?\"\n\n28.\n\nHalloween night, and Milady was dressed to kill, which is to say barely dressed at all. In the couple of days she'd had before what she thought of as her dinner/date, Dana had taken her Dark Side shopping. She'd found a lacy black cupless bustier with attached garter straps and a matching thong, (she'd decided not to wear the thong), new sheer black lace-top stockings, and a figured lace half-mask which surrounded one eye before dissolving into a series of intricate points above her brow: sexy, mysterious, gothic, and cheap, until you figured in overnight shipping, but totally worth it. Now, as she approached the entrance to the condo complex, she wore the lingerie under a short, black satin robe (to conceal\u2014however briefly\u2014her exposed breasts), mask, black heeled sandals, make-up and fangs. She also wore a trench coat, to keep from being either repeatedly propositioned or arrested.\n\nShe supposed that most vampiresses exchanged less information with potential victims\u2014lab results from recent physicals to ensure that she wouldn't be drinking \"tainted blood\" forsooth\u2014and a few other things, but now that the time had come to...play was the only word that suggested itself\u2014fuck? Well sure. Feed? Yeah but c'mon... Dana had finally decided not to sweat it. Just let Milady take over. She seemed to know how to have fun. The thought made her feel bold and sexy, and a little slutty and...well not \"cute\" anymore; that was for damn sure. Into a nondescript lobby and up to the guard desk; she handed the uniformed man behind it a card on which she had printed a name and phone number. Nothing said. She didn't even open her mouth: not that fangs were that unusual on Halloween, but still... Didn't matter; the card was apparently enough; nothing more required. She was expected. Third floor; elevators to the right.\n\nUp to the third floor, left to the unlocked door, and into the dark and silent unit. Silent, but occupied; cops say you can always tell, and it's true. Shut the door behind her; engage the lock, but not the chain. Hang the trench coat on a hook on the back of the door. All but naked now; goddamn, it was a rush! Like being on a roller-coaster and making out in your parents' bedroom at the same time. Felt...naughty, and risky, and...she could feel the cool of the apartment on her exposed upper thighs, feel her nipples hot and hard under the cool satin, feel warm moisture begin to gather between her legs. Down a short hallway with a mirror on the wall; a quick peak in the ambient light coming from an open door at the hallway's end. Red hair, red lips, black satin, pale skin; she smiled at her reflection, then bared her fangs in a silent hiss. God! she was so fucking turned on!\n\nHeels clicked on hardwood as she walked slowly towards what she knew to be the bedroom. In the doorway, she surveyed the scene in front of her; simple layout: against a windowless wall, a queen-sized bed\u2014made with sheets only\u2014small end tables at either side of the head, on which figured glass oil lamps\u2014tubes surrounding a spherical bowl and wick\u2014burned illuminating a closet to the left, and a dresser and door on the right.",
        "Benjamin Carter\u2014or Ben Gunn, as Milady preferred to think of him\u2014lay on his side with his eyes closed. He was bare-chested and barefoot; the black sweats from his pirate costume covered him from waist to mid-calf. His torso was thick and powerful; not ripped or muscle-y, although his shoulders and arms looked strong. His head was still shaved, but what hair there was on chest and arms appeared dark. He was taking deep, regular breaths\u2014like a man preparing himself for an ordeal, she thought, and had to suppress the urge to giggle. 'Oh, I'll give him an ordeal; he just better be able to give some of it back!' He wasn't asleep, but didn't open his eyes until Milady stepped to the foot of the bed and purred: \"Trick or treat, Handsome.\"\n\nThe man's eyes snapped open, and he rolled over to sit on the edge of the bed. He stared hungrily at the vision in lingerie standing in front of him and smiled. \"Milady, I'm so glad you decided to...um...pay me a visit, not to say \"come,\" because you haven't...yet.\" The smile turned a little sheepish. He'd been rehearsing that one.\n\nShe giggled in spite of herself, and then cocked a hip in a pin-up pose, and ran her tongue over her fangs. \"No, I haven't yet, Mr. Gunn. I hope you intend to do something about that before I get...too thirsty.\"\n\n\"Goddamn, you're hot! And you look...amazing, and so sexy and dangerous. Maybe I should have picked up a wooden stake at Home Depot.\"\n\nMilady laughed aloud at that. \"In the Vampire Prevention section?\" Then a mischievous smile crept into her expression. \"I suppose you could have...\" she purred, reaching down to unfasten the belt of her robe, \"But then...\" the robe slipped from her shoulders, and she straightened her back revealing her naked breasts, thrust out proud and full above the top of her bustier. She gave a naughty little pout: \"...you'd have to push that horrible, sharp stake right through...here!\" She used the first two fingers of her right hand to gently massage her left breast, just above her areola. In her sweetest schoolgirl voice she cooed: \"You wouldn't want to ruin boobs as pretty as these, would you?\" She cupped her tits as if to offer them to him. \"If you did, you wouldn't be able to play with them,\" taking a step towards her hypnotized victim, seeing his eyes widen, \"or touch them,\" another step, and she could hear the breath rasping in his throat, \"or taste them!\" she finished on a whisper, stopping finally with her chest inches away from his face. Then, leaning forward she brushed a tight little nipple against the motionless man's lower lip.\n\n28.\n\nShe was on her back on the bed almost immediately. Her pirate was a strong man. As she felt his lips kissing and sucking at her tits, she put together the sequence of events, even as little cries and squeaks\u2014vampiresses don't fucking squeak!\u2014of pleasure tumbled out of her before she realized she'd taken a breath. The bottom of her nipple brushing his lower lip, then his surge upright, wrapping his arms around her, one arm through her legs the other circling her waist. One second she'd been flying upwards as if he meant to bounce her off the ceiling, and the next, she'd been flipped somehow onto her back, and he'd begun attacking her body as if he'd been stranded in the desert, and her breasts were the sweetest and most succulent of fruit. Sucking and kissing and biting and...oh fuck it felt good! She couldn't remember the last time she had felt so desired, so needed, or so ravaged. For a few savage moments she threw her head back and let him have his way with her body, unsure what sounds were coming from whom, although eventually the high pitched panting and keening became curses and pleas in a voice she recognized as hers. Made sense; he couldn't have said anything with his mouth so full of her. A part of her wondered how he managed to breathe with his face buried in the bounty of her bosom.\n\nShe shrieked with the pleasure/pain as his teeth scraped a nipple, and her fangs poked her tongue. Fangs? Wait a minute, who's supposed to be...then aloud: \"Oh fuck, Baby, yes, yes...just like that, suck it hard!\" Suck...fangs...who's attacking who here? Milady decided she wasn't going to be anybody's plaything, no matter how good his mouth felt on her tits. An idea struck her; she lifted her head and looked down at her victim, his eyes closed and his teeth bared as he bit at her boobs in a frenzy of lust and need. Bite her, would he? She moaned to get his attention, and when his eyes opened, she caught his glance, ran her tongue over her lips, and begged, in her most seductive purr: \"Feels so good...come here and kiss me, Lover...\" Then she closed her eyes, parted her lips, and waited as her pirate kissed up the tops of her breasts, nibbled on her collarbone, licked and sucked at her throat\u2014mmm, keep coming, handsome\u2014teased her jawline, and finally brought his lips to hers in a surprisingly gentle first kiss.\n\nMilady wasn't particularly interested in kissing, but Dana sure was, and she came out of her vampiress self just long enough to realize that Ben Carter was an excellent kisser. He spent long moments caressing her mouth with lips alone. Then as he grew more excited\u2014his body was between her legs now, and she could feel his cock hardening against the moist lips of her naked pussy\u2014his mouth opened and the tip of his tongue began to explore deeper, brushing against her teeth. She heard him moan as he found her fangs. Then she became the aggressor, attacking his tongue with hers, as if it was a dragon, defending the treasure cave of her mouth and lips. Their tongues wrestled, and she raised her head pressing her face against his, until he broke the kiss, and turned his head aside to nuzzle her cheek. This was the moment Milady had been waiting for. Her face brushed past his ear, she giggled, breathed out loud \"Gotcha!\" and bit him, hard, on the side of his neck.\n\n29.\n\nBecause of the way her fangs had been designed, Dana knew that biting with them was risky. She didn't actually want to draw blood\u2014well, maybe just a drop, just to see what it tasted like\u2014but she knew the bite would hurt. She wanted it to hurt, wanted her victim to feel the pain\u2014whoops, Milady was back, apparently\u2014as he realized he'd fallen prey to her seductive trap, but\u2014excuse me, Dana again\u2014the man was strong; she didn't want him struggling so hard that he actually knocked her fangs off her teeth. So as she bit, she wrapped her legs around her pirate's torso, and crossed her ankles. At the same time, her arms snaked around the back of his head, forcing his neck against her mouth, and held on as tightly as she could.\n\nHer victim roared in pain as he felt her bite, and tried to jerk his head away from her, but she held on, fangs pressing into his skin, sure that she was marking him as hers, and becoming more aroused as he writhed and twisted. He even tried to roll her off, but only succeeded in flipping them over so that she was atop him, which was exactly where she wanted to be. She released his throat, and\u2014as she had with Kelly\u2014began to suck and lick gently, making small wet sounds, and punctuating them with the occasional sigh, as if she were actually sucking the blood from his body, and delighting in its flavor. With no conscious effort on her part, her ankles unlocked, her legs straddled him, and her hips began to move, grinding her sopping cunt against his bone-hard, throbbing erection. He lay very still beneath her. She could feel his raged breathing; wondered why he didn't grind back. Then she understood: she had him right on the edge. Perfect!\n\nShe stilled the motion of her body, and gave his neck a last gentle suck before pulling her lips from his flesh with a barley audible smack. Then she sighed, nuzzled the angry red flesh on his neck where she'd bitten him, and purred into his ear: \"Poor foolish Pirate! Can't say I didn't warn you. Guys are sooo easy: flash a little tit, bat your eyelashes, beg for a kiss, and...\" she drew the tip of her tongue across his bruised throat, \"dinner is served.\" She gave a cruel little chuckle. \"You're delicious, by the way. So sweet and salty and hot; part of me just wants to...mmm...rip your throat out and...well, sort of shotgun you, like with a beer.\" She giggled again, and then, very deliberately, ground her pussy once against his cock through the sweats. Her Pirate gritted his teeth, and she heard the breath rasp in his throat as he tried not to lose control.\n\n\"But you're also very, very hard, aren't you, Mr. Gunn?\" He nodded, not trusting his voice. \"In fact, you're more than hard; you're just about ready to pop, am I right? She gave one more teasing grind against him, saw him grit his teeth, heard him mutter: \"Yeah...\"\n\n\"Good!\" Milady cooed. \"That pleases me, because it means you've been a good little boy, haven't you. I told you not to touch that lovely hard cock of yours; told you that your cum belonged to me, didn't I?\"\n\n\"...yes!\"\n\n\"And you haven't, have you? The last time you came was in my mouth, wasn't it?\"\n\n\"...yeah, oh fuck, please...I'm...\"\n\n\"Shhh...I'm going to put your cock back in my mouth now. You'll like that, won't you, my pet?\" No answer. \"I'm going to drain your cock of every last drop of cum, savor it, swallow it, and if you're lying to me, I'll know. If you've dipped your prick into some little slut's pussy...hell, if you've even jacked off into a Kleenex, I'll know. And if you have,\" she gave him one more slow, tortuous grind, \"or if you dare to cum before your cock is between my lips...\"\n\n\"What? Goddamn! please don't...so close...\"\n\nMilady smiled into her victim's eyes. \"Then I won't fuck you before I kill you.\"\n\n30.\n\nThe man's eyes crinkled up, and...was he smiling? Tough to tell; he was gritting his teeth so hard. Then she felt the lightest tremor between her thighs, like his body was shaking, just barely...was he fucking laughing?\"\n\n\"What?\" Milady/Dana snarled. Fury and fear and despair rose up inside her, and threatened to choke her. If he...broke this, now... If he was laughing at her, or...shit, what if...? All of a sudden she felt an urge to run...to get out of this stranger's apartment before... She started to climb off him. His shout startled her.\n\n\"No! Please...don't move...please\u2014goddamn this is...absolute fucking agony...please don't...so close...you're so perfect!\"\n\nPerfect? That didn't sound so bad... At least he wasn't calling her cute. She lowered herself back down onto him. He groaned as the warmth of her slit came back into contact with his erection.\n\n\"Oh shit, so good...please...you're, like, every fantasy I've ever had coming true right in front of...look, please don't move! I don't want to...um...disappoint you, but I am so fucking close! I was just wondering: what...if I'm not lying?\"\n\nDana took a minute to regroup: lying about what? Right! What was it, seconds ago, she was telling this guy that she was going to suck his cock, and if he'd cum since... He was into it; still into it; so into it! She was every fantasy he had ever...fuck! Milady came back, like a favorite song on the radio interrupted momentarily by some static as you drive under a bridge.\n\n\"Wait and see, Handsome. Right now, I'm thirsty.\"\n\n31.\n\nHer victim stayed stock still as she rose off him and crawled backwards down his body, licking and kissing and nipping his collarbone, nipples, below his diaphragm, across his abs until she came to the top of his black sweatpants. She looked up to see him watching her, and she smiled at him, baring her fangs. Then she peeled back the black fabric, and his cock sprung into view, hard as iron, deep red, and hot to the touch, short and thick, just as she remembered it. She inhaled his scent; that was familiar too. So was the taste, as she brushed the head of his dick with her pursed lips, then took his shaft into her mouth and began to suck.\n\nShe knew he wouldn't last long, and she remembered how he'd gotten off on the sounds she'd made, so she started in growling, panting and hissing around him. His body tensed up, abs clenching, knees bending...did she have time for one more tease...? She made a ring of her thumb and forefinger around the base of his cock and squeezed hard, heard him roar in frustration, popped him out and snarled: \"Cum in my mouth! Give it to me! I want to taste your cum!\" Then she devoured his dick right down to the root, sucked back along the shaft, and felt him pulse. He howled as he came; an almost continuous stream, hot, thick, and salty. She let some slide down her throat, and then, with her mouth sealed around his shaft, as his thrusts began to lose a little of their force, she allowed maybe a teaspoon full to pool on her tongue.\n\nThe vampiress glanced up to see him watching her. Slowly, protecting her prize at the back of her mouth she pulled off him, raised her head, and opened wide. She allowed him to watch as her tongue sampled the viscous mixture of saliva and semen. Then she looked straight into his eyes and swallowed. Her eyes held his, her face expressionless as she counted slowly to five in her head. Then she smiled: \"Good boy!\" she purred, \"An honest pirate, what is the world coming to? Now,\" she beckoned to him with a crooked finger, \"kneel on the floor at the foot of the bed.\"\n\n32.\n\nMilady sat on the edge of the bed, long shapely legs spread wide, her shaved cunt framed by the black garter straps stretching from the seams of her bustier to the lacy tops of her stockings. She had discarded her heels, and the man kneeling between her legs could smell a heady mixture of perfume, pussy, fabric, soap and sweat. He looked up into his mistress' cold eyes, awaiting her command, prepared to gratify her slightest whim. He knew how it worked: she'd bitten him, and now he was hers to command, little better than a slave. The way the evening was going, that was just fine with him.\n\n\"Mr. Gunn,\" even her voice was erotic, \"you were kind enough to invite me here, and I've done nothing in return but eat you out of house and home...or blood and cum as the case may be. And you were delicious...\" her voice deepened to a sensuous growl, \"warm, sweet, sticky blood, and hot thick, salty cum...mmm...yum yum!\" She giggled: \"So I've enjoyed making such a big strong man into such a...compliant little fucktoy.\" His cock, still half-erect even after the blowjob she'd given him, twitched at her dirty talk. \"Still an obedient slave deserves a reward, and since I've tasted so much of you, it seems only fair that you should have a chance to...eat something too.\" Her hand moved to her lap, and she began to finger herself idly, almost lazily. Her victim watched, fascinated.\n\n'Hypnotized.' thought Dana to herself as she watched him watching her. She'd hoped the evening would progress this far, had even rehearsed her little speech, and now...the way the man was looking at her! She made sure to caress herself gently, otherwise she'd come before he got his chance at her, and that just wouldn't be polite.\n\n\"Do you like what you see, Handsome?\"\n\n\"You are...just so beautiful.\" Sounded like he meant it. \"And your pussy is so...God, I just want to dive into you!\"\n\n\"I think I want to cum three times tonight:\" purred the vampiress, \"once on your tongue, and twice on your cock. If you can...um...arrange that, I may decide to let you live for as long as you prove...amusing. If not...\" She let her tongue caress the tips of her fangs.\n\nHe sat back on his heels and smiled. \"Wow, no pressure! That kind of assignment could give a guy performance anxiety...\"\n\nShe giggled, pretended to think about that for a second: \"Hmmm...nope, don't care. Now...\" She lightly tapped her slit with two fingers and raised her eyebrows: 'ready?'\n\nHis smile became a wolfish grin: \"Your wish is my command, Milady.\" And with that, he leaned forward and slowly drew the tip of his tongue from the bottom of her vagina right up between her pussy lips to her clit, caressed it lightly, and smiled to hear her groan.\n\n33.\n\nMilady/Dana derailed her train of thought for a time, giving herself over to sensation as her slave/lover pleasured her. He began slowly, repeating the long pass and caress until she could hear herself curse in frustration: \"Oh yeah...sooo good, just...ahh, fuck! No! please you...oh fuck, don't you dare...fuckin' YES!\" She felt as if she were above herself watching this encounter between the cruel, capricious enchantress, her long legs spread like some pagan goddess of lust, all red hair and big tits and black lace, and the powerful man kneeling before her, servicing her, worshiping her in a vain attempt to pacify her, to put off the moment when the bloodlust overcame her, and she fell on him...oh fuck, she could still taste his cum in her mouth, and now he had a finger up inside of her! \"Oh FUCK! Yes...just like that...oh just like fucking THAT! Another! Fuckohfuckohfuck! Put another in...yea-uuuhh! Just like that...keep going, don't...please don't fucking stop! So good, soooh yeah!\"\n\nTwo fingers inside her now, curling forward, massaging that rough little patch near the front, and now his tongue was back, more forceful, lashing at her...god her clit felt like it was on fire! In the back of her mind plain old Dana\u2014or maybe hot little Dana; she didn't feel any too plain just then\u2014ticked off an imaginary checklist she never knew she'd prepared: great kisser, loves to eat pussy...holy \"OH GODDAMN, YES, Right THERE!\" If the man has money, conversation, and a sense of humor, I'll fuckin' marry him tomorrow! \"But you have to promise to keep...yeah yeah, yes, just like...yes, oh please oh pleaseoh...FUCK!\"\n\nHad she? Did she just say that last part...oh...who fucking...? She felt her body tense, the muscles at her core straining to contain her, but if he kept doing her like that...if that tireless tongue of his didn't stop\u2014please don't fucking stop\u2014smacking her clit...oh fuck his face was buried in her cunt now, trying to suck at her...while his tongue...how the fuck... No thought left, muscles tightening, contracting...put it off just another...\n\n\"OHHHH YUH-FUCKIN...YEHHH, YEHHH, YUNH-HUHN...YEEEeeessssss!\n\n34.\n\nIt took a few minutes for her orgasm to pass off completely. Milady lay back on a stranger's bed, a hand between her legs, stroking herself gently to prolong the occasional aftershock. Finally when her breathing\u2014did vampiresses breathe?\u2014returned to normal, she raised herself onto an elbow. Her victim knelt submissively at the foot of the bed; well, his posture was submissive. The shit-eating grin on his face, on the other hand...\n\n\"Oh, Mr. Gunn?\" He was instantly on his feet and standing naked by the side of the bed. She reached out a hand to grasp his newly-erect cock, and gave it a few languid strokes. She examined it, feeling it harden in her hand. \"That was...impressive.\" she cooed. She dropped his cock. \"Lie on your back beside me.\"\n\nHe obeyed, and she crawled atop him until they were face to face, the hair on his chest pleasantly rough against her nipples. On an impulse, she lapped at a wet spot at the corner of his mouth: salt and vinegar and...something. She sighed, taking small tastes of herself off his lips and nose and cheeks. He lay passive, letting her explore, only kissing back gently when she sampled his lips. Dana could get used to this, but Milady... The vampiress reached down to close her hand around her pirate's renewed erection. He gasped as she began to pump him slowly.\n\n\"What have we here?\" purred Milady. \"Feels hard...and hot. Is this that stake you were threatening me with? Want to shove it into me and see what happens?\"\n\n\"Yeah...yeah, I do...\"\n\n\"Do what, Pirate? What do you want to do? Do you want to bury your cock in my hot pussy and fuck me until I scream; is that what you want to do?\"\n\n\"Yes, oh goddamn...you're making me so hard...Yes!\"\n\n\"Then say it to me, Handsome! Tell me exactly what you want to do to my body. And make it nasty! When I get bored I get hungry.\"",
        "Her pirate's grin turned wolfish again. \"Fuck yes! I want to fuck you, you evil, beautiful bitch! I want to slam my cock into your cunt and rip you apart!\"\n\n\"Then do it, Stud!\" Milady was snarling now, no longer languid, but hot and wet and ready. \"Put me on my back and fuck me! Use me like some fuckin' tavern whore, but you better make goddamn sure I like it, better fucking satisfy me or I will bury my fangs in your fucking throat and rip you apart! I'll drain you with your cock inside me. That's how I like it best: feeling my victim's thrusts getting weaker and weaker as I suck them dry! You ready for that, Stud? You ready to fuck for your life?\"\n\nWith a roar, the naked man threw her off him, and surged upward. She landed on hands and knees, and he grabbed her wrist and pulled him under his body. She clawed and snarled at him, as he maneuvered himself between her thighs and forced them apart with his knees, splaying her legs obscenely, exposing her hot wet cunt, to the tip of his probing cock. After a little tussling, he found her opening and...\n\n\"FUUUUCKKKK!!!\"\n\n35.\n\nLooking back on it later, neither knew who'd screamed. Maybe it was both of them. Didn't matter, because now Ben Gunn was balls-deep in Milady's sopping pussy, and her tongue was down his throat, and he was thrusting in and out of her with a force that drove gasping grunts out of her in spite of their frantic kissing. He broke away from the kiss, insinuated a hand between their bodies and pushed her down flat to the bed. His head bent to her breasts and she howled as he captured a nipple between his teeth and bit down hard to keep her tit in his mouth. Then he was sucking on her, and she moaned and hissed at the quick change of sensation. Her head fell back to savor the delicious combination of feelings he was subjecting her to: the quick firey friction of his cock, gliding in and out of her cunt, stretching the walls of her vagina with every hard thrust, the softness of lips and the lashings of a tongue against her super-sensitive nipples, and the roughness of his face on her breasts, as he moved between them, kissing and licking and...what the hell? Oooh, that hand...that great sneaky paw of his had somehow found its way... \"Oh FUCK yes!!!\" His fingers were back on her clit, and he was rubbing and rubbing, and \"Oh God! ohgodohgodohgod...FUCK!\" A quick series of contractions as her pussy clenched around his cock, and she then she heard him groan.\n\n\"Oh...oh fuck, so tight...so...\"\n\nHis thrusting slowed as he tried to postpone the inevitable, and she laughed as she tightened her cunt around his shaft and thrust back at him. \"That was just one, Baby!' she panted. \"I said two, so you'd better hold on...be strong for me, Lover, or you know what I'll do!\" She'd never heard sounds like the ones coming from him; seemed to be moaning and sobbing through clenched teeth. She couldn't decide if he as in agony or ecstasy. A little of both, perhaps? Then Milady continued, bloodlust dripping from every word as she taunted her victim: \"Or maybe you want it...is that it? Want to feel my fangs in your throat? Mmmm...promise I'll make it good for you! C'mon lover, that's it...let my pussy just squeeze all that sweet cum out of your cock...\" They'd managed to roll over, and now she was riding him, rocking her pelvis backwards and forwards, clutching at him with her vaginal muscles. He looked up at her, and she smiled, baring her fangs one last time.\n\n\"Give yourself to me, Baby! Cum inside me and just let me...\"\n\nHe bellowed as he thrust up into her, and his shout turned to a scream as she threw herself down on him, and bit hard into his neck. He writhed in pleasure and pain, thrusting once, twice, three, four, five times before he lay back exhausted, and she laid across his body, his softening cock still inside her, kissing and licking at the tiny puncture wound, like a cut with a safety razor, on his throat. The fangs had finally given up; the wire which held them against the back of Dana's upper teeth had snapped. As she'd struggled to spit them out, the wire, not the fangs, had nicked his neck. And Milady was now gently, but avidly, licking up the blood.\n\nEpilogue:\n\nThey lay like that for a long time, neither wanting to move. Eventually he seemed to doze a bit, and she pulled herself off him, but his eyes opened as his cock fell out of her, and he smiled.\n\n\"It's Dana, right?\"\n\n\"Wait a minute, how did you...?\"\n\n\"Yaz told me about you.\"\n\n\"Hold on, how do you know Yaz? I've never seen you in HR...\"\n\n\"No, I don't actually work for you guys, or at least not full time. I'm kind of a consultant.\"\n\n\"Ok, right...and are you really...\"\n\n\"Ben Carver? Yup, that's me...um...nice to meet you...\" He almost finished the thought before cracking up, and before she could think of an appropriate response, she was howling too. The, when they'd finally calmed down, he said:\n\n\"So, can I hold you to your promise?\"\n\nWarily: \"What promise?\"\n\n\"Well, it's probably something like two in the morning, so we can't really do it now, but you did say...or Milady said, that if I survived, I could take you out to dinner...\"\n\nDana giggled: \"You know technically, you didn't really survive. I mean, Milady insisted on...um...cumming twice on your cock, and...well, I think she...kind of...sucked you dry.\"\n\n\"One of you did, that's for damn sure. Um, does that mean you don't want to go out with me?\"\n\nDana took a moment to think about that. \"What did Yaz tell you about me, and how did it even come up, I mean...\"\n\n\"Well...she has a picture of you on her desk.\"\n\n\"You mean on the beach in...God, where were we? That's a while ago now. So you...\"\n\n\"We were talking, and I kept looking at the picture and, well, she noticed, and asked what was so interesting, and I said, I don't know, 'You're friend is beautiful.' or something...\"\n\n\"Wait a minute. Sorry if this sounds...is that the word you used? Beautiful?\"\n\n\"I think so, yeah.\"\n\n\"Do you, sorry...shit, look I'm not just fishing, but...do you think I'm beautiful?\"\n\nHe smiled. \"Just so you know, my answer will probably be influenced by the fact that what we just...well that is far and away the best sex I've ever had in my life, so...\" he chuckled a little, \"gonna be hard to be absolutely objective, but\" he looked into her face for a long moment, then: \"I do. I think you're very beautiful. Even more beautiful than in the picture.\"\n\nShe gave an embarrassed laugh: \"Good answer, I guess.\" She noticed the clock by the bed: 2:45 am. \"Oh shit, is it that late? Look, um, Ben, I have to go to work in the morning, so I should really get going and...oh fuck!\"\n\n\"What the matter?\"\n\n\"I didn't really think this through. I was just so...well...into this whole thing that I...well I'm wearing pretty much what I came in, I mean...and a trench coat...\"\n\nHe laughed out loud. She frowned: \"It's not funny!\"\n\n\"It's a little funny...\"\n\n\"Yeah, I suppose...\"\n\n\"Look, why don't you do this: spend the night\u2014or what's left of it\u2014here. If you don't want to share the bed, I'll take the couch. I've got to be up early anyway...I'll drive you home in time to get to work.\"\n\n\"That's really sweet...I mean, are you sure? And you can have your bed. I don't want to be...\"\n\n\"Dana, maybe you didn't hear me a minute ago when I said that that was the best anybody's ever made me feel in bed, and then when I said I'd like to take you out to dinner and get to know this remarkable woman who's just kind of...rocked my world and...anyway, if you stay, you stay in the bed: with me or without me, your choice, but I'm not making a woman as...fascinating and lovely as you are sleep on that pig of a couch.\"\n\n\"Oh!\" Then: \"Let's share, but...can we try to sleep a little?\"\n\n\"You bet. We both have to work to morrow.\"\n\nThen later, after she'd brushed her teeth with her finger and they lay naked next to one another under the counterpane: \"Ben?\"\n\n\"Dana?\"\n\nShe smiled: \"When you said this...what we did was...all your fantasies come true, were you...? I mean are you like a horror movie fan? Are you sort of...um...into vampires?\"\n\n\"I sure as hell am now, but no...not really, and I wasn't feeding you a line or anything, it's just that...I guess something about...you and Milady and...was like...a fantasy I never knew I had...I don't know...How about you? I mean you must be really into vampires and things, right?\"\n\n\"Actually, I'm not...or I wasn't... Same thing for me, I guess: a fantasy I didn't know I had. I just kind of picked a random costume idea off of Youtube...\"\n\nBen was asleep. She could hear his even breathing, and her eyes were closing too...couldn't keep them open any more... Just before she drifted off, Dana thought to herself:\n\n\"Fucking freckles...\" "
    ],
    "authorname": "Quince",
    "tags": [
        "halloween",
        "vampiress",
        "role play",
        "costume",
        "make up",
        "lesbian",
        "fangs"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/plain-old-dana"
}