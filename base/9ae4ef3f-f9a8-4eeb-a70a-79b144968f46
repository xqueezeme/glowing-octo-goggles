{
    "title": "When We Were Married Ch. 04C",
    "pages": [
        "Thursday, July 21, 2005 -- 2 p.m. \n\nMy name is Bill Maitland. I am the second most powerful man in the State Attorney's office in Jacksonville. The most powerful if you consider that my boss' eye and attention and heart is really centered on the Governor's chair in Tallahassee. Day to day, I run the place.\n\nI was also, at this particular moment in time, looking and feeling like a survivor of World War III. My face looked like one of those mutants in 1950s-Atomic Bomb horror movies My left eye had been a spreading pool of red, brown and yellow before Doctor Gary Wells in the Shands Emergency Room had examined it and covered it with a patch before administering several medications into the eye.\n\n\"You say you hurt your eye when you got hit by a doorknob? That was an amazing doorknob. It seems to have possessed knuckles.\"\n\n\"That's my story and I'm sticking to it.\"\n\nHe just shook his head. I had put the three thugs, who had raped and murdered his wife eight years before as they caught her leaving Shands early on a Saturday morning, on death row in Raiford and Wells had never forgotten. He had remarried, but he still checked with me every few months to see how close they were to dying in the Death Chamber.\n\n\"Amazing things they're doing with doorknobs nowadays,\" he said dryly. \"Anyway, I don't think that...doorknob..shattered the bone around the eye, although there might be some hairline fractures that should heal on their own. I'm also pretty sure that the cornea and eye itself haven't sustained any real damage. You need to come in here in about a week and let me check it again.\"\n\nHe gestured at the rest of my face, which was a patchwork of bruises, cuts, a couple of missing chunks in my lower lip, and general mayhem. \n\n\"The rest of it is superficial. It will heal in time and I don't think you'll be frightening little children in another week or so.\"\n\nHe touched up my face with a few smaller bandages, antibiotic salves and stepped back to look at his handiwork.\n\n\"You're a lucky man, Bill. That doorknob could have cost you your eye. There's a reason why boxing gloves were introduced to the Sweet Science. The 'doorknob' that hit you was really pissed off and knew what it was doing. You are lucky. How did the doorknob do, by the way?\"\n\nThere was no one around. \n\n\"He got his nose broken, a couple of times. He probably won't be able to pose for Playgirl again. And I think I busted a couple of his ribs, but I don't think he suffered any real internal damage. I've got a pro boxing trainer taking care of him.\" \n\n\"I'm glad you didn't hurt him too badly. I know it seems pretty bad right now. When...Sharon...was gone...I didn't think I'd ever wake up again and be glad to be alive again. But now I've got Melissa and little Brad and I'm glad to be alive every morning. It will get better, Bill.\"\n\nI just grunted. I was happy for him, but right now I was just beginning to see the possibility of a life after Debbie.\n\nI was able to drive and I made my way to Carlos' gym where he was bandaging up Doug Baker. As I walked in Baker and Ernesto were talking about the politics involved in picking the boxers who actually won spots on the Olympic teams. Baker looked up at me sourly and said, \"I hope you lose that damned eye. It hurts every time I breathe and Christ knows what my nose is going to look like. I may need plastic surgery. And you broke my goddamned hand.\"\n\nHe held up his right hand, which Carlos had covered in a plaster cast.\n\nCarlos slapped him hard on the back and grinned as Baker winced, saying, \"Don't be a baby, Professor. It will give you character. Any woman who turns away from a broken nose probably isn't worth having anyway.\"\n\n\"Thank you, Carlos, Ernesto. I appreciate you being there for me. And Doug, I want you out of town. You say you've got a job in Chicago. Don't dawdle on getting out of here. I want at least a thousand miles between you and Kelly. As soon as possible, understand? I'd kind of like the idea of having you branded a sexual predator and being forbidden from being around kids for the rest of your life. Get out of town. Don't tempt me.\"\n\nI walked out. I really couldn't stomach seeing any more of the bastard for one day. I hoped he did get out of town.\n\n################################## \n\nThursday, July 21, 2005 -- 2 p.m. \n\n\"Come this way, Ms. Bascomb.\"\n\nDebbie followed the heavy-set older woman into the office whose nameplate read, \"Johnny August -- Public Defender.\"\n\nShe had met August before. She'd met most of the lawyers on both sides of aisle, judges and courthouse officials during the ten years that Bill had been with the State Attorney's Office. As she walked in, she gestured and then realized that was a superfluous gesture and simply said, \"Please don't get up, Mr. August. I appreciate the gesture, but it's not needed.\"\n\nAugust was a tow-headed 50-year-old who looked 20 years younger. He resembled nothing so much as a country boy grown older without growing up. His hands still looked too big for his body. He looked, she thought, like he ought to be chewing on a blade of grass and looking up at the clouds on a summer day, barefoot and happy.\n\nIt was all an act, of course. He was a 6-foot-6 intellectual who had graduated with honors from Harvard and, before he'd lost his sight, was said to have read Plato in Greek and Latin editions. But he had mastered the art of the \"aw shucks southern boy\" charm that kept getting him re-elected Public Defender term after term.\n\nHe looked at her in the pleasant, but slightly out-of-focus way of adults who had lost their sight as adults. He knew what things looked like, knew where he should be looking, but could only see things in shapes and blurred outlines.\n\n\"Mrs. Maitland. It's a pleasure to -- well not to see you of course, but to sense you here in my office.\"\n\n\"It's Bascomb, Mr. August.\"\n\nShe tried to keep an edge out of her voice, to keep the honeyed charm that she wanted to wield on this man who, when he still had remnants of sight, had stripped her naked just as readily as any other healthy male. \n\nHe had always liked her, she knew that, and for more than her body and face. He was one of those men who seemed not challenged but to visually enjoy the sight of a beautiful female body. And he had actually treated her as if she had a brain in her head at those interminable courthouse events that she had let Bill drag her to during their marriage. Talking with him had been more than the usual interplay of male/female flirting.\n\n\"I'm sorry, Mrs. Bascomb. It's just, that I've known you for too long as Ms. Maitland. It will be hard to break that habit.\"\n\nShe sat down at a chair in front of him and from force of habit crossed her legs and leaned back smiling at him. She saw him gesture to the fat secretary who closed the door behind her.\n\n\"I know. It's been a hard habit for me to break, too. That's why I'm going by Debbie Bascomb now. Bill and I will be divorced in less than a month and I -- I need to start carving out a life for myself instead of just being known as Bill Maitland's wife. It still feels funny sometimes to call myself Bascomb...but it's necessary.\"\n\nHe stared at her and she wondered how much sight he actually retained.\n\n\"I was sorry to hear about it, Debbie. Nobody ever knows what somebody else's marriage is really like, but that man loved you. Really did....Anyway, I agreed to meet you for old times' sake and because that was an interesting message you left for me. Would you care to elaborate?\"\n\n\"As to my message, I'm here because I need you and I think you need me.\"\n\nHe just looked in her direction and after a minute she continued.\n\n\"I'm here because I'm on my way out at UNF, for reasons that I don't need to explain to you. I know that you know President Myers. I have to believe that he would have called you before indicating that there might be the chance of employment here in -- a different capacity than I've had the academic arena.\"\n\n\"I've talked to him. We're old friends, actually.\"\n\n\"I know you know each other. I did a little research -- actually a lot in a little bit of time -- after I met with him yesterday. And I decided that his hint I contact you had some thought behind it. I just don't understand why he would offer to help someone he evidently loathes as much as he loathes me.\"\n\nAugust steepled his fingers in front of him. \n\n\"It's not that he loathes you, Debbie. I would say that you...trouble him. You bring up memories he has tried to tamp down. I only know this because we were friends between my second and third divorces and as men sharing similar --experiences --we grew familiar with how we think about certain things. If he truly hated you, he would not have talked to me about you. \n\n\"Let's just say that I think he felt casting you out from the comfortable academic womb you're comfortable in and forcing you to sink or swim in the outside world is both a punishment -- and a chance for you to remake your life. Frankly, if you wind up destroyed, he will be able to salve his conscience with the knowledge that he did give you a chance to make a new life. And you didn't take advantage of it.\"\n\n\"Now...as to why I need you?\"\n\n\"Have you read the paper lately?\"\n\n\"No, but I've had it read to me.\"\n\n\"Then you're aware that your office is in political hot water almost constantly. You exceed your budgets and have to come back to the state constantly for temporary funding to finish up your budget years, plus money just seems to have a habit of disappearing and no one can tell exactly where it went. Were it not for your personal popularity and the fact that everybody knows you're an honest man, the governor would have sacked you a long time ago.\n\n\"Plus, you have a constant roiling of office waters with backbiting among your subordinates, most of whom seem more concerned about sitting in your chair than winning cases, and in general, this office is perceived as an asylum run by the inmates, rather than by a strong administrator.\"\n\nHe sat there and just looked at her with that blind gaze for an interminable time but she kept her mouth shut. If she went down in flames, at least she would have gone down fighting.\n\nFinally he said, \"So you're saying I'm a shitty administrator?\"\n\n\"You're a fine lawyer.\"\n\nFinally he smiled.\n\n\"Very nicely done. You might have a political future. Yes, I'll concede that I might not be the best administrator on the planet. I would only say that guiding an office full of ambitious, contentious young lawyers is akin to herding cats. It's easier said than done.\"\n\n'I haven't had a lot of time, as I said, to do research on this, but I know that the structure of a typical legal firm is closer to medieval times than the 21st century. You might not know it, but what I've researched and taught has focused on corporate structure and, more importantly, on making organizations more coherent and effective in their core activities.\"\n\nShe leaned forward.\n\n\"I would like some time to do some planning and prepare a presentation on how I might be of service to you in this office. If nothing else, you might benefit by having somebody be the 'bad cop' to your 'good cop' when you have to exert discipline or take unpopular actions. A powerful office manager could play that role.\"\n\nAugust sat there rubbing the knuckles of one big hand with his other hand and then turned in his chair so that he was looking away from her. You didn't have to be an expert in negotiating to know that was a bad sign. \n\n\"All of that is very interesting, Ms. Bascomb. Debbie. But....\"\n\n\"But...what, Johnny?\"\n\n\"I probably should at least let you make your presentation, but I will have to tell you that I have some misgivings about bringing you into this office.\"\n\n\"Why?\"\n\n\"We know each other, Debbie, so let me be frank. It is your....reputation...\"\n\n\"Could you be a little more specific, Mr. August? Is it my reputation as a big boobed slut that gets wild at office parties? Is that what you've heard? I'm surprised an attorney would take innuendo as fact.\n\n\" Anybody ever actually see anything happen between me and any man at any party, except guys rubbing themselves against a woman while dancing? Or maybe a kiss under the mistletoe at an office party? \n\n\"I've got a birthmark where it can't be seen under normal clothing. In any of the stories about all the guys supposed to have gotten lucky with me, got my top off or dress down, has anyone ever mentioned that birthmark? Don't you think, Mr. August, that if guys were screwing me left and right the way the stories say, that somebody would have mentioned that?\"\n\n\"No, but Debbie, let's be honest, you have always been the center of attention for men at those parties and guys have been after you. And, there is the matter of Doug Baker...\"\n\n\"Which didn't happen until my marriage was dead...and let me tell you despite everybody's loving my soon-to-be ex, he isn't blameless in that marriage's death.\"\n\nJohnny August swung around to face her and held out his hand to stop her.\n\n\"Debbie, understand me, okay. I'm no prude. Men and women are going to get together...inside the office and outside. I have no problem with a very hot, very sexy woman coming to work here, even if most of the male staff start trying to kill each other to win your favor. The problem I have with you is not you -- it's the man who is going to be your ex.\"\n\n\"Bill? You're worried about hiring me because of Bill?\"\n\n\"Yes. Look. I'm not afraid of Bill Maitland. He's a good, tough attorney and he's run over a lot of my people. But he puts his pants on one leg at a time. He's just a man. But, he is a very powerful man. Austin Edwards lets him pretty much run the office while he's running for Governor.\n\n\"The thing is, this is not a popular office. Nobody really loves the Public Defender's Office. Most of our clients, many of them, are scumbags. A lot of them are guilty, if not of the crimes they're charged with, of something else. We don't inspire warm and fuzzy feelings on the part of the public.\n\n\"The State Attorney always has the edge. They have us outgunned and outmanned. They've got the cops, investigators, resources we can't match. If you get a real son of a bitch in Bill's position, somebody who's out for headlines, he can crucify people. There are a lot of bad prosecutors around the country.\n\n\"Bill Maitland has always been a fair man. He's hard as nails, but he's honest and he plays by the rules.\n\n\"And you are his Achilles' heel. For three months he's been snarling around the courthouse like a lion with a big thorn up his ass. Anybody makes any kind of cheating wife jokes, he's tearing them a new one. One of his assistants nearly lost his job for saying something -- unkind -- about you. It's clear to anybody who's not completely blind, that the guy is still hung up on you.\n\n\"What I have to ask myself is, what if I hire you and you come in here and you fall or some guy in here falls for you and word gets out that one of my assistants is banging Bill Maitland's ex-wife? You want to know what I think will happen? What I'm afraid will happen?\n\n\"I'm afraid that he will take out his anger on everybody associated with this office. Now, like I said, I'm not afraid of him. We'll fight it out in court and I'll still get a paycheck and go home and get a good night's sleep.\n\n\"But, the people we represent....they're going to be hurt. Our clients don't have a lot of money. They don't have the resources that your upper middle class types do. They're a lot closer to the ground and can get hurt a lot more by an angry prosecutor.\"\n\nHe seemed to be staring into her eyes as he said, \"I guess what I'm saying, Debbie, is that if you can't keep it in your pants, so to speak, you could do a lot of damage to people whose main crime is being poor and powerless. I don't know if I can take that chance.\"\n\nFinally:\n\n\"I appreciate your honesty, Johnny. All I can say is that I need this job and I'll do anything I have to do to avoid jeopardizing it. I can promise you that I will keep mine in my pants if your guys will do the same. I don't see a problem, and Bill and I will work out our...problems. All I can ask if that you at least give me the chance to show you that I could improve this office.\"\n\n\"Alright I will look at anything you want to present to me. And I will promise to try to be fair in evaluating you. I would only ask you one small favor.\"\n\n\"Yes.\"\n\n\"For God's sake, please never wear anything skintight to this office. I don't want a riot to break out in here.\"\n\n######################### \n\nThursday, July 21, 2005 -- 3 p.m.\n\n\"Oh, My God, Bill- Mr. Maitland, what happened?\"\n\nI waived off Cheryl while two other secretaries and a couple of Assistant SAs came out of their offices to look in my direction. With the taped and covered eye-patch, assorted red-yellow-brown bruises and a banged up mouth, I wasn't surprised at the reaction.\n\n\"I was coming down the stairs at my condo and missed a step and bounced down a stair or two,\" I lied, pretty smoothly I thought.\n\n\"Are you okay?\"\n\n\"I'm fine, Cheryl. I've already been to the hospital. I'll have to wear the patch for a week or two, but I'll be okay. Make sure everybody get the word so a lot of wild rumors don't start sweeping the office, okay?\"\n\nI made my way as quickly as possible into my office. Wild rumors would still sweep the building, but at least I might have headed off the worst of them. I closed the door and sat down trying to think about what was in front of me.\n\nA note on the desk said that a Rev. Montgomery had called twice and was coming by. I suddenly wished I had played hooky for the rest of the day, but I had to try to figure out what to do about Deaven Thompson.\n\nAs I'd expected, my phone buzzed and Cheryl said, \"Mr. Maitland, Rev. Montgomery is outside. He's insisting on talking with you.\" I rubbed my right eye, which was starting to ache too, but I couldn't duck him forever. \n\nA moment later Montgomery walked into my office and sat down in front of me without being asked. He was a short, round, black man with close-cropped hair and fairly expensive clothes. He wore a chain with a heavy gold crucifix around his neck and enough gold and diamond rings on his fingers to put the lie to the myth that men of the cloth have no pride of appearance.\n\n\"Mr. Maitland? I'm glad we've finally had this chance to talk. By the way, what happened. You look like you've been in a war.\"\n\n\"Reverend, I'm happy to give you some time to talk. I'm sorry that it's been so hard to get together. Oh, and those are just some injuries I suffered in a fall at my home. Get older and you get clumsy.\"\n\nHe gave me a look.\n\n\"I've found that public servants usually find the time to talk with people they want to talk to.\"\n\n\"I apologize, but I've been professionally and personally swamped for awhile. It's been very busy.\"\n\nHe bit his lower lip.\n\n\"Not so busy that you couldn't take a junket on an expensive French cruise ship for a week while underlings had to do your job.\"\n\nI held my tongue. He was a powerful man in the African American community both for his position as the leader of a large black church and a political organizer as well.\n\n\"That's the first vacation I've taken in three years and I have been...experiencing some personal....stress...\"\n\n\"I didn't mean any criticism. It's just that there are some important matters that are before you, and people's lives are on hold until you make a decision.\"\n\n\"People like Shawn Smith?\"\n\nHe played with a large gold and diamond ring on his pinkie finger for a moment and then looked up at me.\n\n\"Yes, Patrolman Smith has been left hanging for an intolerable length of time. When is your office going to exonerate him in that shooting and let him get on with his life?\"\n\n\"You're assuming he deserves to be exonerated?\"\n\nMontgomery straightened up in his seat.\"",
        "\"Mr. Smith's house was invaded by three large, violent men who had told friends they were going to 'beat that nigger's ass' and take back a woman he was in a relationship with. He was defending himself and his fianc\u00e9e from these men. There should be no question of NOT exonerating him.\"\n\nI sat back and thought for a moment. I had to handle this carefully.\n\n\"I understand that the three gentlemen in question did make that threat and did use the 'N' word, Reverend. There's not much doubt about that. Of course, a lot of black -- and white -- males use the 'N' word indiscriminately and so that is not proof per se that they were racists out to lynch Mr. Smith.\n\n\"There is also evidence to indicate that Mr. Roper, and his brothers, were simply going to Mr. Smith's house to retrieve Roper's wife. She was still married to him, and was now living with Mr. Smith. We have all the ingredients for a fairly standard domestic violence situation.\n\n\"Where the situation goes off the rails is that there are indications the three men were unarmed and that Patrolman Smith not only shot two of them to death after they forced their way into his home, but also shot Roper's brother to death as he was trying to run away OUTSIDE Smith's home.\"\n\nMontgomery's voice rose.\n\n\"Police recovered a handgun that the three men brought into Mr. Smith's home. They came armed and prepared to harm him and his fianc\u00e9. He was perfectly within his rights to defend himself and he said he thought the third man was running to their truck to retrieve another weapon.\"\n\nI just looked at him for a moment.\n\n\"Oddly enough, the weapon they were supposed to have taken into Smith's home was not registered and there is no evidence it belonged to any of the Ropers. There has even been speculation that it might have been what is sometimes called a 'throw-down' gun, that police drop at the scene of questionable shootings to claim self defense.\"\n\nMontgomery looked like he was going to explode.\n\n\"That is an almost libelous statement, Mr. Maitland. If ...\"\n\n\"If, what?\"\n\nHe stared at me. \"Let's be frank. If he were white and three black men had invaded his home, you'd have exonerated him months ago. He is being left to twist in the wind because of the color of his skin.\"\n\nI stared back and tried to keep my expression neutral.\n\n\"Let's be real frank, Reverend. You're accusing me of being a racist.\"\n\n\"If the shoe fits...?\"\n\n\"There's only one racist in this office, and you know who it is. If Smith were white and had shot down three unarmed black men, one of them in the back, you'd have your church and the local chapter of the NAACP marching in front of this courthouse every day.\"\n\nHe just rubbed his chin and then said, \"I, and my fellow clergy and members of the African-American community expect you to do the right thing and issue a report clearing Mr. Smith of any wrongdoing within the month. Or we will be forced to take other action.\"\n\nI shook my head and said, \"Not going to happen. I'm going to weigh the evidence and I'll make the decision when I see fit. Not you, not the clergy and not the African American community.\"\n\nMontgomery slowly got to his feet.\n\n\"We are well aware of your reputation, Mr. Maitland. You've gained local fame as the so-called 'Angel of Death,' but you've always been known as a man who does what he wants with the power you wield. You seem to think you stand above and beyond the normal restraints on political figures.\"\n\n\"Because I'm not a politician.\"\n\n\"Your boss is.\"\n\n\"Austin Edwards is not your typical politician.\"\n\n\"No, maybe not, but he is a politician. Everyone knows he is using this office as a stepping stone to the Governor's office in Tallahassee. Do you think he's unaware of the percentage of votes cast in most elections by African Americans? Do you think he's unaware of the mountain he'll have to climb if he is painted as a white racist, or a man who employs a racist as his top prosecutor?\"\n\n\" I guess you'd have to ask him those questions. I'm not paid enough to consider those kinds of things.\"\n\nMontgomery reached out and I took his hand.\n\n\"Please don't take what I've said personally, Mr. Maitland. It's just that there is a long history as I'm sure you're aware, of black men being ground up in the wheels of white justice in the South. That's not going to happen this time. I hope you come to the right decision in this matter.\"\n\nI didn't say anything, just let him walk out. I'd come to the right decision. I just wasn't sure if it would be the right decision he was expecting. And I wasn't real sure that Austin Edwards had balls enough to back me in doing the right thing in this case. He had big ones, but he might needs Balls of Steel if a racial donnybrook erupted over this case.\n\nWhen he had walked out I leaned back and tried to think clearly. I was about to lose my wife -- officially -- whereas I already had in fact; I had to decide what to do to keep my 17-year-old from pursuing a very foolish crush if Baker had been telling the truth; I had to figure out how to shut down a powerful drug dealer who had threatened my family, I had to try to keep my job while going up against a powerful black political figure....where the hell did it all end?\n\n\"Mr. Maitland?\"\n\nI looked up into dazzling blue eyes. Set in a heart-shaped face, set under flowing red hair that reached almost down to her ass, Atop a five-foot 6 frame wearing a fairly demure pastel blouse.\n\nShe bent forward and the blouse gaped open and I couldn't help staring at perfect round, orange-sized breasts.\n\nI pulled my gaze up and met her eyes and recognized her.\n\n\"Sheila, Sheila....\"\n\n\"Simpson, Mr. Maitland. I hope I'm not...disturbing...you, but Mr. Hopper wanted me to drop these documents by on the Trent case.\"\n\nShe didn't have to, but she remained leaning over my desk. And those damned oranges just seemed to be growing larger.\n\n\"Trent? Oh, the Trent case.\"\n\nMy tongue didn't seem to want to work. It seemed thick and awkward all of a sudden.\n\nShe smiled and said, \"I hope you don't mind, but that patch makes you look like a pirate. It's very... intriguing.\"\n\nShe stood up straight, very slowly. She stood very straight, her shoulders arched backward making those breasts poke out prominently against the blouse. She just stared at me, the kind of stare that is a challenge. Once, a long, long time ago, I would have known how to and would have reacted the way a man does to that kind of invitation.\n\nBut it had been so damned long since any woman had looked at me that way, except for Aline. I wasn't expecting it. And so she had me off balance.\n\n\"Thank you, and thank Mr. Holder.\" \n\nAfter a minute she just nodded and walked away. Damn. I didn't know what was happening, but it could be a problem. I had never been tempted to fish in the office pool because I was happily married and because I'd seen it blow up in supervisors' faces. But....I wasn't happily married anymore...and a very attractive young woman who once upon a time would never have given me that kind of stare had just done so...and..\n\nI had an erection I could have driven nails with under my desk. Damn.\n\nTwenty minutes later when I could stand up without embarrassing myself, I told Cheryl I need to get out for a few minutes and I headed downstairs to the first floor to step into the new Starbucks that the county had talked into moving into an old hot dog and coffee shop that had been there for 15 years. \n\nDebbie loved dry cinnamon cappuccinos but I liked plain old-fashioned cappuccinos, but I also liked more foam than anything else. It took 15 minutes because it was the hottest thing in the courthouse. I stood at the counter where they'd served me and sipped the foam.\n\nAnd I saw her walking away from me down the hall in the direction of the Clerk of the Court's traffic office. She should be helping to prepare the ship to leave again in a few days. But she might have gotten leave to go ashore.\n\nIt was her; the same heavy, black hair, the same shape and the same walk and that ass....She was dressed in something unfamiliar; a short green skirt topped by a blue green two-button Worthington jacket. What was she doing walking toward the clerk's office. Had she come to see me? But, she had to know what a terrible idea that would be.\n\nI was walking toward her before I even realized what I was doing. And then someone called to her and she turned back in my direction and I stopped dead still. How could you be grateful and heartsick at the same time. \n\nI made my way to the elevator without looking at the stranger that superficially resembled Aline des-Jardins. Of course it hadn't been her.\n\nI had told her I'd think of her every day, and I hadn't realized just how true that was. \n\n######################################### \n\nThursday, July 21, 2005 -- 3:15 p.m.\n\n\"Send her in, Abby.\"\n\nDebbie stood there for a moment, then walked in. There was no reason to be hesitant. She'd promised Crider to talk to the man, but after this first time she could walk away with a clear conscience.\n\nHe rose to his feet as she walked in and stepped forward to take her hand.\n\n\"Mrs. Bascomb, I'm glad to meet you. Did you have any trouble finding my office?\"\n\n\"No, your secretary's directions were good. I appreciate your being willing to see me, even though...\"\n\nDr. Ernst Teller gave her a look that made her think he could read her mind. He was a tall, angular, brown-haired man with the hair cut in an old-fashioned almost-buzz cut. He was an older man, but she couldn't peg his age. He had a hawk nose, piercing gaze and the ramrod straight posture, He couldn't be called handsome, but he was striking. If she had seen him at a party, she wouldn't be able to take her eyes off him.\n\n\"Even though you think this is a waste of your time and you don't plan on coming back.\"\n\nShe gave him a surprised look.\n\n\"You must really wow them at parties with your mind reading act, Dr. Teller.\"\n\nHe smiled a gentle smile. He was good, she thought. It was a smile that encouraged her to like the man, but with none of the usual male overtones that she had come to expect every time she met a new male. She knew that most people would WANT to trust this man. \n\n\"Thank you, but it's just that that is the usual reaction I get from most people when they enter my office for the first time. Most people come here not sure that they want or need to be here, want or need my services.\"\n\nHe pointed to a small grayish couch behind a coffee table with a unique black and white inlaid Rorschach ink spot design that matched a large painting on the wall.\n\n\"Please, have a seat.\"\n\n\"Should I lie down?\"\n\n\"Not unless you really, really want to.\" And he smiled again. She sat on the couch and leaned forward. He sat down in an overstuffed leather chair that his body seemed to sink into.\n\n\"Now what?\"\n\nHe shrugged. \n\n\"We talk, if you want to. We could sit and stare at each other for the next 55 minutes, but that would be a waste of both our time. Why don't you just start talking and maybe you could touch on why you're here, or why Dr. Crider thought you might benefit from coming to see me.\"\n\nThirty minutes later he leaned back in the chair and puffed gently on a pipe he had produced after asking her if she minded his smoking.\n\n\"On first reflection I'd have to say I agree with Dr. Crider's assessment. Any woman in your circumstances would probably be experiencing similar emotions. Even if, as it appears, the divorce is something you feel is necessary, it has to be extremely stressful. Divorce, along with the death of loved one, is one of the most devastating events a person can go through.\n\n\"You pile on top of that a love and sexual affair with a new man in your life -- you say he's only the second man you've been intimate with in nearly 20 years, the rift in your relationship with your daughter, your son's seemingly rejecting you by going to stay with his grandparents, and an inability to come to some sense of closure with your husband....\"\n\nTeller breathed out a ring of aromatic tobacco smoke.\n\n\"As a famous wit once said about dancing bears, the wonder is not that they dance so badly, but that they dance at all. The wonder is not that you are having these panic attacks, the sense of your world ending, but that they are not so much more severe and disabling. The true wonder is that you're able to function at all with so much going wrong in your life.\"\n\nShe stared down at the Rorschach inlaid pattern.\n\n\"That may be true, Doctor, but if this is functioning, God only knows what it would feel like if I weren't functioning. I need help. I don't feel like I am going to make it at times. And...there's more....\"\n\n\"What?\"\n\n\"I've told you a little bit about Bill, and I know you know him. Everybody says Bill is a good guy. My own mother is on his side in this. And I know I've hurt him by filing for divorce, by falling in love -- no, by falling in lust with a younger man.\n\nShe looked up into Teller's eyes and for the first time in a long time she didn't feel like somebody was judging her, had judged her, and condemned her without listening to her side.\n\n\"I couldn't tell anyone...I couldn't tell Bill....but our marriage has been dying for a long time. He walked away from it. Not me. Maybe I expected too much. He's 41 and he was never a great athlete. He's led a sedentary life and he got fat and physically -- unappealing.\n\n\"And me -- well, I've worked hard keeping myself in shape. I've always been --considered attractive and I like the fact that men like me. And I'd lie in bed some nights and look over at him...short, and fat and balding...I know it's not fair, but I...felt disgust.\n\n\"I....I like flirting with men. I like knowing that men want me. I....maybe I carried it a little too far at parties...And....there were other things I did.....I never physically cheated on him...I never had sex with other men..but the last few years....I wanted to....I fantasized.....I......wore out a vibrator..\"\n\nShe looked up into Teller's eyes.\n\n\"I'm not that dumb blonde that most men think I am just because I have big breasts and I'm beautiful....not bragging, I just am....but I'm smart.....smart enough to know that Bill never did anything except let himself go, let me go.....he loved me...and every night in my head I was having sex with other men. I wanted to divorce him a hundred times before I called him that day at his office..\n\n\"And....what makes me really feel bad...makes me feel like shit, Dr. Teller, is that I knew how much I was hurting him when I told him I didn't love him anymore. It was true but I didn't have to say it that way....but I did. And I wanted to. I wanted to hurt him....and I don't really know why.\n\n\"And Crider noticed...I already knew it but I didn't know why....when I talk about him I get angry...I get furious.....I'm the one who was cheating on him in my mind..I'm the one who started flirting with a young, good looking guy that just wanted to get me into bed..I'm the one who froze him out of my life so I'm the bad guy here... but...I hate him...Goddamn I hate him...sometimes..\n\n\"I guess....I'm afraid....only a crazy person would feel that way....am I crazy?\"\n\n\"Crazy is a very imprecise term....You feel guilt because of the way you have treated him, but at the same time you obviously have strong feelings of anger, resentment, even hatred perhaps...\n\n\"The obvious question is, has he done anything to deserve that anger? Has he cheated on you? Had affairs with other women?\"\n\n\"I'm sure....I mean...I don't think so. This is terrible, but I can't imagine a woman wanting him...that way...or...at least...not until recently. The son of a bitch waits until I'm not in love with him, I'm divorcing him, and he starts looking good again. It's like he's doing it to spite me. Sometimes I...\"\n\nShe stopped. \n\n\"You see what I mean, doctor?\"\n\n\"Has he been cruel to you, abusive? Has he ever struck you?\"\n\nShe gave him an incredulous look.\n\n\"Bill? I could probably take a man into bed while he was there and I don't think -- I know he wouldn't hurt me. He might kill the guy....and I don't understand that either. He's a good attorney and....he's tough as a pit bull, but to physically attack someone? No, I guess that's part of what happened. I lost respect for him physically. \n\n\"I -- I couldn't believe it when he attacked Doug at UNF. I am embarrassed, but at the time I was ashamed for him. It was like a toy poodle taking on a pit bull. And...when...when he actually beat him down....it was like he was somebody I'd never seen before. I remember thinking, who is that guy in Bill's body. Because it's not Bill.\"\n\nHe just sat there silently and she remembered what Bill had told her once about interrogation tactics. Silence is always the easiest way to break someone down. People hate silence.\n\n\"I -- uh -- he was never abusive. He was -- too nice -- maybe. There were times...at night....that he'd roll over to me and I knew what he wanted. But he was so damned flabby. And I told him no. And he backed off. I mean, I wasn't in the mood. I was working on college things and the kids were always into something and we hadn't been...physical in a while.\n\n\"But...he should have made me. He should have taken me. A man would have rolled me over and fucked me.\"\n\nShe looked up at Teller but he didn't seem fazed by the language.\n\n\"Sometimes a woman wants a man to be dominant, to take her. But...that isn't in Bill. So I guess I resented him for not...forcing me...That's stupid, isn't it. And unfair. How was he supposed to read my mind. But that's the way I felt.\"\n\nTeller let out another wreath of grayish-white smoke.\n\n\"It's not stupid, Ms. Bascomb. It's common, in fact, for many women to want their men to be dominant, forceful in the bedroom. He wasn't, and while it might seem unfair, that would be another reason for you to be angry at him. Rational, no, but understandable, yes.\"\n\n\"Maybe understandable, but I don't understand....there's something I've never told anyone before. Nothing I say will ever go outside these walls, will it? And you know Bill. You will never breathe a word of what I'm going to tell you?\"\n\nHe just shook his head.\n\n\"One night....I had this dream.....I woke up and Bill was lying in bed next to me.....and I hated him...oh God, I hated him. Not dislike, not anger, but hate. I went to the safe where we keep a Glock for protection. We keep it loaded because it's safely locked away. I took it out and went back to our bed. \n\n\"And it was as if there was a fog, or something, surrounding the bed. I could see him lying there, and I knew it was him, but his face was hard to make out. And it was as if I was awake watching myself dream and I knew I had no reason to hate him as much as a did.\n\n\"I held the Glock out in front of me with a two-handed grip the way Bill had taught me and I centered it on his head, and I pulled the trigger. Again and again and again until there were no more bullets left.\n\n\"I woke up screaming and Bill was holding me and I wanted to hug him and I wanted to push him away. How the hell could he be holding me and telling me everything was alright when I had just blown his head off?\"\n\nShe looked up at Teller.\n\n\"I told you I was crazy. Or maybe he made me crazy. There's nothing he could have done, nothing he ever did, that would make me hate him that much.\"\n\nTeller was silent for a while, then put the pipe down on a little side table.\n\n\"You do know that there's a difference between what you dream and reality, I hope. You didn't shoot your husband. From what you've said, you've never physically assaulted him. Dreams express emotions, and there is some deep-seated, violent anger that you feel toward him. The puzzle is there's nothing in what you've said that could possibly explain the depth or intensity of that anger.\"\n\nHe looked at a large clock on his desk with a image of \"The Scream\" engraved under the large crystal watch face and said, \"I'm afraid that's all the time we have for today, Ms. Bascomb. I think we've definitely got some things we can talk about and explore in the future, if you feel that would be helpful.\"",
        "She took a deep breath.\n\n\"I don't know why, but I do feel a little better. But...I can't help wondering if maybe...there are some things I shouldn't know. Sometimes when you know things..you have to act...and..\"\n\n\"This is probably the psychiatrist in me, but it's always better to know than to be ignorant. If you know what is behind your emotions, you can deal with them, or accept them. But you have to know first.\"\n\nShe took a deep breath. Even though she had done nothing but sit on a couch, she felt exhausted.\n\n\"Alright. When -- when do you want to see me again?\"\n\n\"How about Monday, Wednesday and Friday, an hour a day, let's say right about now -- 4:15 p.m., at least at the start.\"\n\n\"I don't know that I can afford that\"\n\n\"I know for a fact that your husband's insurance will cover-\"\n\n\"I don't want Bill to know anything about my seeing you.\"\n\n\"Alright. Your insurance at UNF covers my services. I know that because I have other UNF officials as patients.\"\n\n\"I don't know how much longer I'll have that insurance.\"\n\n\"We'll work something out, Mrs. Bascomb.\"\n\n\"How?\"\n\n\"I'm a physician, Mrs. Bascomb, and I come from money. I can treat the patients I want to treat, and you have aroused my curiosity and interest. Don't worry about the cost. We'll work it out.\"\n\nWhen she left he leaned back in his chair. Abby stuck her head in the door and said, \"Mr. Cassel is here.\"\n\n\"Tell him I'll just be a minute.\"\n\nKnowing Bill Maitland's background and history with his wife would make her treatment a little easier, he thought. He already knew that there was an underlying gulf between the two caused by Maitland's doubts about his ability to hold or be worthy of his wife. It was very possible she had picked up on that, at least subconsciously, and was aware that he didn't think he was worthy of her.\n\nIf she was, the contempt and drawing away was almost inevitable. You walk around with a 'kick me' sign on your back, visible or invisible, and someone was going to kick you. People respond to you the way you expect them to.\n\nBut, beyond that, there was no indication in talking with either of them, that they had had a particularly troubled marriage before Maitland joined the State Attorney's Office. That meant a relatively happy marriage for at least eight years. During the last ten years she had drawn away from him, flirting with other men, fantasizing and finally letting herself be seduced by a younger, more physically attractive man.\n\nAll of that understandable, almost textbook. But where did the anger, the violent rage come from? If she had been telling the truth and the only thing he did was disappoint her, that rage wouldn't be there.\n\nNo, something had happened in the last ten years. More likely the last five. There had to be some triggering event. Something she was hiding, or might not even be aware of.\n\nHe smiled. Cases like this were what he lived for. He sometimes thought he must have been Sherlock Holmes in a former life, if Sherlock Holmes had been a real person and if he believed in reincarnation.\n\nHe called to Abby: \"Send Mr. Cassel in, Abby.\"\n\nA moment later a tall, stoop shouldered man with thinning brown hair shambled into the office. Why couldn't' he stand up straight? For a moment irritation flared in Teller, but then he let a professional mask of calm slip back over his face. If Martin Cassel was aware of just how pitiful a shambling hulk he appeared to be, his wife wouldn't have cheated on him and Teller wouldn't have had to hold his hand for the last three years.\n\n\"Doctor.\"\n\n\"Good afternoon, Martin. This will be our last session together.\"\n\n\"What?\" Cassel sat bolt upright. \"Why, doctor? Have I --\"\n\n\"You haven't done anything. It's just that I'm overbooked and I've given your appointment times to a new patient.\" \n\n\"Doctor Teller, you can't do that. How-\"\n\nTeller leaned forward and motioned for silence and Cassel abruptly stopped talking.\n\n\"I don't mean to be cruel, Martin, but there comes a time when action has to take the place of words. You came to me three years ago when you learned of a continuing affair that your wife was involved in with a coworker. The affair is over. Two years ago. We have discussed the affair and why your wife did it and your responsibility for what happened.\n\n\"We discussed your inability to come to terms with what your wife had done and your inability to leave her and forge a new life for yourself. Over the years you have grown to see that while she was at fault, you shared some fault as well. Unfortunately, while you were deciding how you felt about her, she had another affair. So we had to go into depth over that one.\n\n\"You still haven't taken any steps to win back your wife, although we decided long ago that that was what you wanted to do. At present, you have not had -- successful -- sexual relations with your wife for nearly three years and you and I both know that if something doesn't change she will either have another affair or she will divorce you.\"\n\n\"I know, Doctor Teller, but-\"\n\n\"I want you to buy flowers -- I think you said she loves roses --and take them to her along with a bottle of wine -- I think you said she loves white wine -- and I want you to do your level best to get her drunk tonight. I want you to be as sweet to her as you can possibly be. I want you to attempt to have sex with her tonight.\n\n\"If she allows it, I want you to definitely have oral sex -- with her as the recipient. Don't worry about yourself. I want you to do everything possible to bring her to climax. Even if she doesn't climax, I want you to focus on her pleasure. If she will not allow you to have sex, I want you at the very least to do your best to stay in the same bed with her and hold her.\n\n\"I want you to do the same thing tomorrow. No roses or wine, but find something that she will enjoy. A movie video, a CD of songs she likes. Attempt to have sex with her again. Don't be obnoxious, but let her know that you want her. Again, use your mouth, your fingers, anything she will let you.\n\n\"I want you do the same thing every day for the next 30 days. No exceptions. If she is completely unreceptive to physical advances, I want you to try to talk with her. About anything. No television. No work, on your part. If she completely turns you down, no sulking. Find something to do and do it while she ignores you.\n\n\"And the next day I want you to do the same thing. Successful or not, I want you to launch an unrelenting attempt to seduce your wife. And if she asks you why, tell her the truth. You've lived with secrets between you for three years. Tell her you're aware of her affairs and that you have decided you want to save your marriage. Tell her you will continue pursuing her until she tells you she wants a divorce.\"\n\n\"What if-\"\n\n\"What if she tells you she wants a divorce? Tell her that unless she's throwing you out of your house you will continue pursuing her for the remainder of the month. And do it. The worst that will happen is that your marriage will be over. And, to be honest, Martin, what kind of marriage has it been? Really? You've been in pain for three years. Your marriage is not supposed to be the place where you suffer. It's supposed to be the place you go to find comfort and peace.\n\n\"I'm -- scared, doctor. If she leaves me...\"\n\n\"You will survive and I will find a new appointment time for you. I won't leave you out in the cold, Martin. But, this is something you have to do. We can talk about your emotions and what you want from your wife and out of your marriage for the next 40 years, but nothing will happen until you DO something.\"\n\n\"You really think this is the right thing to do?\"\n\n\"I do. And no matter what happens, I want you back in a month. Hopefully you'll tell me that you and your wife are trying to build a new relationship. I honestly think you have a chance. But you have to step up.\"\n\nAfter Cassel had left, Teller leaned back and filled his pipe again and drew in a lung full of aromatic fumes. Sometimes his work was just plain depressing. But, what kept him going was that, sometimes, screwed up people managed to straighten out their lives. He hoped Maitland and his wife would fall into that category.\n\n############################ \n\nThursday, July 21, 2005 -- 3:30 p.m.\n\nAs I walked into the State Attorney's Office and headed to my office Cheryl darted in front of me. A courthouse bailiff had his hand on his illegitimate .38 in his holster. All courthouse personnel were supposed to be carrying Glocks, but a lot of the older guys preferred their favorite hardware.\n\n\"Mr. Maitland, I'm sorry. I tried to stop him but he was so fast. He was in there before I could stop him.\"\n\nThe bailiff, an older man I thought was named George something stepped in front of me with his hand on the .38 and said, \"You want me to go in there first?\"\n\nI shook my head. It could be anybody. An irate parent wanting a break for a kid busted for pot or a psycho carrying an axe out to kill The Angel of Death. \n\n\"What'd he look like, Cheryl? Did he give you a name?\"\n\n\"Big, tall black man. Very well dressed. Slim. He didn't look that dangerous, but...there's just something about him.\"\n\n\"He give you a name?\"\n\n\"He just said....Tyrone had come by to say hello. He said you'd know who he was.\"\n\nIt clicked and I knew who he was, although it had been a long time. It would be like him to just stroll in to stir up things. I held a hand out to George and said, \"Hang loose just outside the door, but don't come in unless I call you.\"\n\nI was a little nervous as I walked into my office, but not much. If it was the Tyrone I remembered, he'd be too smart to just walk into a prosecutor's office and shoot somebody. It wasn't his style.\"\n\nHe was standing near my desk looking at the pictures of me with the famous and near famous. He looked around at me and then his eyes widened.\n\n\"Damn, Maitland, somebody did a job on you. Tell me who it was and I'll send a couple cases of some good beer to them -- maybe Double Diamond. It's a very understated beer, but quality, man. Quality. Anybody can do that to you, deserves a quality beer.\"\n\nHe wore a designer suit that looked like it came off a New York fashion catwalk, had real --I'm sure -- diamond cufflinks, had no gold teeth but two gold earrings in dollar-signs twinkling with more real diamonds, and I'm sure wore shoes that came straight from Rome. He was slim, his shaved head glistening in a way I just couldn't make mine do.\n\nHe had a warm smile, a trim figure on his 6-4 frame, and the charisma of a warm and fuzzy sabertooth tiger. And he had probably murdered a hundred men with his own hands, with guns, knives, ball-peen hammers, and other things I didn't want to think about.\n\nHe reached into his jacket and I tensed for a moment, but he came out with a silver cigarette case, opened it and took out a slim cigarette. He moved so quickly I almost couldn't follow him and a similar monogrammed silver cigarette lighter appeared like magic and a touch of flame lit the cigarette.\n\n\"There's no smoking in this building.\"\n\n\"Hmmm..I wasn't aware. Well, let me just finish this one and I'll start following the rules.\"\n\nHe look a drag and then released scented smoke. And smiled at me.\n\nHe moved toward a chair directly in front of my desk and sat down in one graceful motion. That was the word that described Tyrone Biggs, local homeboy made good, South Florida crime boss, pimp, pusher and murderer; he was graceful as hell.\n\nHe looked me over and said, \"I saw your picture on a web site and I heard all about that Angel of Death crap, but I couldn't believe what I was seeing. Shaving your head, going black, getting into fights....and you're as whitebread as they come. You must be going through one of those midlife crises I've heard about. Although I don't have to worry about that for awhile.\"\n\nI sat down behind my desk and wondered if I could get my Glock out in time to stop him if this was more than a social visit.\"\n\n\"Have you missed me that much, Tyrone? If so, come on back and give me a reason. I'll send you to Raiford and I promise to keep in touch once you're inside.\"\n\nHis smile almost wavered and I knew I'd got to him, but he just shrugged and said, \"Enjoying the hospitality of the Florida prison system was an educational experience once, and for that I thank you, but once was enough.\"\n\nI put my hands on my knees and leaned forward. It would only take an instant to get the drawer open and get to the Glock and I had a man with a gun standing just outside my door, but damned, Tyrone was fast.\n\n\"So to what do I owe the honor of this visit? You go away and forget all about me for eight years and then all of a sudden you blow back into town. You miss me? Or what?\"\n\nHe took another drag on the cigarette.\n\n\"Nothing special, Maitland. I've been busy down south, but I wanted to come up and see Derrick. You know he's in that prison camp over toward Tallahassee; Got two more years to go and I wanted to make sure he's doing okay. I got people in there watching over him, but I wanted to see with my own eyes that he's okay.\"\n\n\"I'm glad to hear he's alright. Why don't you do him a favor and leave him alone. He's made some mistakes, but I hear from the Camp commander that he's doing pretty good. He's working on his GED, has expressed an interest in learning a trade...an honest one. If he's your brother and you love him, why not give him a chance at a decent life?\"\n\nTyrone shook his head and expelled another puff of smoke that had a vaguely licorice-type smell to it. He didn't go for a lot of jewelry, but he had a lion's head ring on his middle finger with rubies for eyes and a large diamond set in the mouth. I didn't want to even guess what it might have cost.\n\n\"Yeah, he's my brother and I want him to work his whole life for just enough to afford a three-bedroom for a wife and three or four brats and never get enough to go the places I've been or see the things I've seen. I want him to settle for some fat broad that opens her legs to him instead of some of the finest pussy on planet earth, which I've sampled and which I'm going to enjoy as long as I live.\"\n\n\"Until somebody you trust, a friend or a subordinate or a girlfriend, slips up behind you one night and puts one in behind your ear. You know that's how it's going to go. You might ride high for a few years, maybe a few decades, but how many guys in your line of work ever retire and live to be old and senile?\"\n\nHe stared at me and said, \"Could be, Maitland. Could be. It's an old argument. Is it better to burn brightly for a few years and then Nova, or die slowly for an entire boring lifetime? I'm choosing to live while I'm here, and I want that for my brother.\"\n\nThen he gave me a small smile.\n\n\"Anyway, I just came back from Derrick and realized I could swing by here and thank you.\"\n\n\"Thank me?\"\n\nHe sat up straight, and somehow it felt like I was watching a viper coiling itself up preparing to strike.\n\n\"You didn't have to hit Derrick with the least time possible. You didn't have to recommend that he go to that minimum security camp instead of Raiford.\"\n\n\"He was just a stupid kid. I didn't do anything for him I wouldn't have done for any other young idiot.\"\n\n\"I don't like you, Maitland. You stole two years of my life. My mother died while I was in prison and I wasn't able to go to her funeral because of you, you son of a bitch. But...\n\n\"Most prosecutors are assholes. Most prosecutors if they got their hands on my brother would have used him to try to rattle me or screwed him to the wall to get at me for being smarter than you guys. You didn't. You treated my kid brother as if you'd never heard of me. And you gave him a chance.\"\n\n\"I'm touched, but you don't owe me anything, Tyrone, except getting the hell out of my part of the state before you kill somebody up here.\n\n\"Well, whether you want to accept it or not, you've got my thanks. Now I've got business to attend to down south. It's been real, but I hope we don't see each other again soon.\"\n\nHe walked past me to the door of my office and stopped. He looked back at me.\n\n\"Oh, by the way, I still have friends around here. Just heard an interesting story. They say some local would-be kingpin in one of your special cells got his head separated from his shoulders. Bad stuff. When people can be killed behind bars, it shakes your faith in the criminal justice system.\"\n\nHe stepped out, moving gracefully around Cheryl who burst into the room saying, \"Mr. Maitland, Chief Brown is on the line.\" Brown was the man who ran the jail.\n\nI picked up the phone.\n\n\"Maitland, all hell is breaking loose down here.\"\n\n\"What happened?\"\n\n\"You know Deaven Thompson, the one you had in that holding cell isolated from everyone? Well, he wasn't isolated from everybody.\"\n\n\"What?\"\n\n\"He was checked on by Lieutenant Colton at 3 p.m. and he was okay, seemed to be taking a nap. When Colton came back at 3:30....the bunk was soaked in blood and Thompson was under a blanket. They pulled the blanket back and...somebody cut his damned head off. Cut it clean off.\"\n\nI looked toward the doorway, but I'd have bet Tyrone was not in sight.\n\n\"And that's not the worst of it.\"\n\n\"There's worse?\"\n\n\"They....cut his genitals off...his entire dick and his balls and stuffed them into his mouth. It was gross, goddammit. I had veteran officers throwing up.\"\n\n\"And no one saw anything?\"\n\n\"Colton and two other jailers had to be down on the second floor to break up a fight, actually two fights. With one thing and another, every officer we had in there was busy for a half hour or so.\"\n\n\"Alright, get someone to pull the videotapes. His cell and the walkway were being monitored, right?\"\n\nThere was a long silence.\n\n\"We do have videotapes, right?\"\n\n\"That's the first thing I thought of. I went to the command center. Riley and Kitty Wells were on duty monitoring. They were both out cold. They had ordered coffee and said they got it up about 3 or 3:10 and that's the last thing they remember. The tapes for the cameras monitoring Thompson's cell and the corridor and that whole area are missing for the last hour.\"\n\n\"Who brought up the coffee?\"\n\n\"Jimmy Miller. He's a trustee, but he's due to be out in two months. He's scared shitless. Swears he didn't do anything and just picked up coffee from the commissary. I've already had officers down there checking, but nobody will admit to seeing anything. \n\nAnd honestly, nobody pays any attention to who goes through there. Who expects their coffee to be doped --in the jail?\"\n\nI sat back and rubbed my lower lip. Talk about mixed emotions. I couldn't be sorry the son of a bitch was dead. But somebody had waltzed into the heart of the criminal justice system and committed murder. I knew who had done it, and I guessed why, but I doubted I'd ever be able to prove anything.\n\n\"You've got detectives crawling all over everything?\"\n\n\"Yes. This hasn't gotten out, but what do we tell the press when they start calling.\"\n\n\"Sheriff Knight is in charge, you do what he tells you, but I'd keep my mouth and the mouth of everybody under you, shut tight until we figure out the best way of handling this.\"\n\nI hung up and when I looked at the doorway, Charlie Case filled it.\n\n\"You heard?\"\n\n\"Yeah\" I said. \"Hard to believe anyone could do that. And it makes you wonder who would want to kill and leave that kind of message.\"\n\nHe shrugged those huge shoulders.\n\n\"Deaven was not the most pleasant person I've ever met. I have a hard time believing he didn't acquire a lot of enemies along the road to the top. Remember, the Browns, the little boys' family and their friends, they're not the most peace-loving bunch around. They wanted a piece of him. And there are other gangs out there.\"\n\nI looked him curiously.\n\n\"That's the strange thing, Case. I could understand his rivals or the Browns having him killed, but the way they did it...\"",
        "\"Somebody wanted him really, really dead.\"\n\n\"No it's more than that. It's a message killing. Somebody was sending a message to his people, but who was sending it and what was the message?\"\n\n\"Probably the message was that anybody who threatens a prosecutor is not going to have the cops coming after them to read them their rights, but people who will cut their heads off. It's a different kind of threat.\"\n\n\"That makes sense, but the thing is, there are only three people still alive who know about that threat.\"\n\nCase's expression was unreadable.\n\n\"And you and I both know who was behind this. He's well on his way to South Florida. I couldn't stop him because we couldn't prove anything. He said he was visiting his brother Derrick over in the Panhandle. But how did he know about the threat and have the time to set this up. He's good, but nobody is that good.\"\n\nCase shrugged again.\n\n\"I have no idea.\"\n\nI looked at the other side of my office, in the direction that Tyrone was driving or flying right now and asked, \"You've been out of that world for a while now, but you still know people, right?\"\n\n\"Everybody knows people, Maitland.\"\n\n\"You served time with some of the same hardcases that shuttle between here and Miami. I'll bet you could still pick up the phone and in a minute get a message to somebody down there, if you wanted to.\"\n\nHe looked at me and I could only sense the smile.\n\n\"Now why would I want to do that?\"\n\n\"Hypothetically, if there was a problem that couldn't be dealt with within the legal system, a man with contacts outside the system could go around the law.\"\n\nHe looked at me guilelessly.\n\n\"I'm a bailiff of the court. My best friend is a judge and he's the only reason I'm not on death row or dead right now. You don't think I'd betray everything I believe in to have a shithead like Thompson killed, do you?\"\n\nHe followed by gaze in the direction that we both knew Anthony was headed.\n\n\"And even if I had called him and told him what was going down, you don't think a stone killer like Biggs would put himself in jeopardy to save the family of a man who sent him to prison and kept him away from his mother's funeral, do you?\"\n\n\"No, I guess not. It's just hard to figure.\"\n\n\"Don't give yourself a headache, Maitland. Some mysteries aren't meant to be solved. I don't think we'll ever know for sure what happened to Deaven.\"\n\nHe walked away and I sat there for awhile while all hell broke loose as the media discovered what had happened, Sheriff Knight and Edwards started trying to do some PR damage control that would keep the media from comparing local law enforcement to the Keystone Kops.\n\nEventually I got dragged into it and an never-ending round of meetings with Sheriff's Office officials, jail officers, the media, and internal meetings within the State Attorney's Office.\n\nAlong the way I found out that, oddly enough, the tapes of Deaven's cell weren't the only ones that had vanished. Trying to backtrack, homicide detectives had looked for the tapes of the meeting I'd had with Deaven, his attorney Smith, and Case. But they had vanished as well. Actually, all the tapes for that meeting room for the last week had gone missing.\n\nCourthouse staff responsible for the monitoring pointed the finger at the private tech firm that maintained the system. The tech firm fired back at the courthouse personnel as technological idiots who had probably inadvertently wiped those tapes out.\n\nHour blended into hour into hour until I got out of another in an interminable sequence of meetings and realized it was 8 p.m. and I was fed up with meetings. I told the diehards still meeting over one thing or another that I had put in my time, I'd been injured in an accident, I had just gotten back from a cruise and never even had a chance to get my luggage back to my condo. I was going home.\n\nAs soon as I walked out of the courthouse and was heading for my Escalade, I remembered my earlier discussions with Doug. I called Debbie's number and got no response. I tried again. I drove back to the condo and called again. In all, I called six times in 45 minutes with no response.\n\nI unpacked my suitcase. As I put the clothes away they seemed like mementos from the distant past. Had it been less than a day since I'd held Aline's naked body next to me? How could so much happen in so little time? But, how had I met and made a connection with a French woman like none other in the past 20 years, in less a week. \n\nI had thought this little piece of anonymous apartment was lonely beyond reason, but now I realized it was like a little piece of hell. It, and I, were transient. There were no memories here, other than bad ones. \n\nI had to get out. If I stayed here I would remember the early days when all I could think about was Debbie's golden body, or the brunette woman I had just walked away from. I really needed to get drunk and kill all the memories.\n\nI almost drove to The Last Call, or O'Brien's, but something made me turn the car in a familiar direction and it almost drove itself there. I stopped down the block. Something wouldn't let me pull in the driveway. It was dark now, at 9:30, and there were no lights in the house that had been mine and Debbie's.\n\nI shouldn't wait for her, I knew. I had spent three and a half months running as hard as I could to get away from her and the hurt she had done to me. I had refused to talk to her because I was afraid I would either physically hurt her, or burst out crying and shame myself.\n\nCould I hurt her? I would have said never, once. But I had prosecuted men who knew they would never touch their wives or girlfriends. Until that one split second they could not bring back when they had struck out and the one they had loved lay dead at their feet.\n\nI should probably wait and call her tomorrow. But somehow I couldn't bring myself to drive away. I had called her home phone and there had been no answer there as well. That with the absence of lights, told me she was out. At her parents? No, because she would have answered her cell there.\n\nSo she was out tonight. Maybe it was work related? Maybe it was with one of her female friends. Maybe. It wouldn't be Doug, if he had told me the truth and BJ had heard correctly when she said they were through. Had she already found another man? \n\nSo I sat in the darkness after the streetlights came on and it became 10 and then 10:15 p.m. and finally I saw the lights of her Nissan coming down the street followed by a dark blue four-door Saturn. She pulled into our garage while the Saturn stopped in the driveway. She came out, closing the garage behind her.\n\nA dark-haired, slender man stepped out of the Saturn and followed her to the front door. I got out of the Escalade and walked toward what had been my front door. She turned the inner hall light on and I saw her face and that of the man with her in the light it cast.\n\nThey were talking and she laughed. I had reached our front yard and started walking toward them. She laughed again, and tilted her head up in a way that I remembered. I wondered if he was planning on kissing her. Had she dumped Doug and that quickly found another man. No grass growing under her feet.\n\nI was walking quietly and she didn't even notice me approaching.\n\n\"You're right, Clint. I love Thai. And thank you for keeping me out of this house. I almost hate to say goodnight...\"\n\n\"Well, don't let me interfere with your plans, Debbie. I'd just like a moment of your time.\"\n\nShe jumped and stared at me as if I was the killer in a teen stalker movie.\n\n\"Bill? What in the hell....\"\n\n\"I fell down some stairs. Got banged up a bit.\"\n\nThe man turned quickly and gave me a searching glance. He was familiar, but I was pretty sure I'd never seen him in the flesh before.\n\n\"Bill, I was just....\"\n\nHe stuck his hand out and by habit I took it.\n\n\"Hi, you'd obviously be Bill Maitland. I'm Clint Abbott. I'm a visiting professor at UNF. I'm glad to meet you. Remind me to stay away from those stairs. They did a number on you.\"\n\nDebbie continued to stare.\n\n\"I'm sorry Debbie. I didn't mean to interrupt your date. Could we talk for just a minute? If -- you've got further plans, just call me on my cell. I'll be up late.\"\n\n\"I'm leaving, Mr. Maitland. Debbie - Mrs. Maitland -- Bascomb -- and I just went out for dinner and a few drinks. I need to get home because tomorrow is a work day.\"\n\nHe turned to leave and she placed her hand on his arm.\n\n\"Clint, thank you.\"\n\nAs he started to walk by me the mental connection clicked and I said, \"Ride On By.\"\n\nHe stared at me and then a grin grew on his face.\n\n\"Guilty. Don't tell me you read it?\"\n\n\"And saw the movie. I thought you looked familiar. You face was all over the back cover.\"\n\n\"He's got a mind like a steel trap, Clint. I should have warned you. I don't think he ever forgets anything.\"\n\nI couldn't stop myself.\n\n\"Even if I wish I could....\"\n\nIt was cheap and petty but it made me feel better that she looked a little hurt.\n\n\"Well, on behalf of myself and my accountant, Mr. Maitland, thank you for your patronage. It's people like you that have let me skip meaningful hard labor for the last 20 years or so.\"\n\n\"It was a good book. I've liked most of your stuff.\"\n\n\"Not all?\"\n\nHe grinned again.\n\n\"Authors are shameless. We want everybody to love everything we write. But thanks. Coming from somebody as famous as you, I'm flattered.\"\n\nI just gave him a look.\n\n\"Oh, yeah, I've read all about The Angel of Death. Actually....\"\n\nHe stopped and gave me a speculative look.\n\n\"Actually, I had my publisher call me already. He asked me if I thought about doing any courtroom action stuff. It's fairly hot now, what with Grisham. And Scott Turow. And Philip Margolin has done some nice stuff. I haven't done any of that, but....I did do a little research on you after I got the call. You're a fairly interesting figure. \n\n\"Have you ever thought of having somebody write you up -- nonfiction. Although fiction is more my line. How does, 'The Angel of Death -- Scourge of the Underworld' or something like that sound?\"\n\nI grimaced.\n\n\"Like a very, very bad 30s pulp novel. Don't lower yourself.\"\n\n\"I don't write the titles. My first choice for 'Ride On By' was 'The Gunfighter and the Lady.' The publisher would come up with something better. But...it was only an idea. If you change your mind and would like to talk, I'll be at UNF for a few months.\"\n\n\"I won't, but thanks anyway. My life is...there's too much going on to even think about that.\"\n\nDebbie gave both of us a look like we'd started talking football the way guys would do on her time.\n\n\"Good night, Clint. Thank for this evening. I'll see you tomorrow.\"\n\nHe grinned at me and then at her as he realized what had happened and said \"goodnight,\" to both of us and walked away.\n\n#################### \n\nShe watched Clint Abbott walk away and felt like she was in high school, having one boyfriend show up while she was on a date with another. Of course, it wasn't the same. But it felt the same. She was embarrassed, and she had no reason to be. She stared at Bill's face and remembered the last time she'd seen him that beat up.\n\n\"Are you okay? What happened?\"\n\n\"Not important. I apologize. I wouldn't have come by except that I couldn't get you on the phone.\"\n\n\"Oh, I forgot. I turned my cell off when I went out with Clint -- Professor Abbott.\"\n\n\"Didn't want to be disturbed on a hot date?\"\n\nShe felt that anger flare again and tamped it down. Naturally he was angry and jealous. He had the right.\n\n\"Clint is just a friend, Bill. He asked me to dinner and for drinks. I just....this house is too damned empty. With Kelly and BJ gone...and...\"\n\n\"Doug, yeah I know -- that's why-\"\n\n\"I was going to say with you gone, but yeah, Doug is gone too. You know about that already? You haven't been in town for a day? You're good.\"\n\n\"That's why I wanted to talk to you. BJ called me.\"\n\n\"BJ?\"\n\n\"He was in the house the morning that -- he heard what was happening between you and Doug and Kelly.\"\n\n\"I had no idea. But whatever he heard....\"\n\n\"He saw Kelly coming out of your bedroom naked, Debbie, while Doug was in there. It didn't matter what he heard. What the fuck was she doing in your bedroom with Doug -- naked?\"\n\nHis voice rose. She realized what he must be thinking.\n\n\"It's not what you're thinking...or not exactly.\"\n\n\"What the hell does 'not exactly' mean. Debbie, for Christ's sake, we're talking about a 17-year-old girl and a 28-year-old man. You know what that sounds like?\"\n\nShe leaned back against the front door.\n\n\"It's bad, but not bad the way you think. Nothing really happened.\"\n\n\"I'm really, really curious as to what your definition of 'happen' is.\"\n\nShe sighed and then said, \"I'll tell you everything, Bill. I've got no reason to lie and I know you too well to think that I could. But...can we do this inside? I don't want to talk about this outside.\"\n\n\"I don't want to go inside.\"\n\n\"Why? It's your house?\"\n\n\"Correction. It was.\"\n\n\"Just for a few minutes.\"\n\nHe gave her a look that should have frightened her, but she knew him too well.\n\n\"Debbie for a smart woman, you can be so stupid. You threw me out of this fucking house. You've been fucking another man in our bed. You probably sat in the den watching television with him. You sat in the kitchen and ate with him and then probably went upstairs and let him fuck you, if you didn't do it in the kitchen. It's not my house anymore.\"\n\nShe tried to find the right words. He was the word man. \n\n\"Doug is gone, Bill. I can't take back what happened. But it was your house for the last 10 years and I was your wife for 18 years. Doug came and went. It's still your house, it always will be. And I was your wife and I still am for a few days. No matter what happens, we were married for 18 years and together for 20 years and we have two kids. You said you wanted to talk. Can't you stand being in your house for a few minutes?\"\n\nHe followed her in and said, \"The kitchen. For some reason, I don't feel that bad about the kitchen.\"\n\nThey sat at the table, the way they had so many times before. He looked around as if he were seeing it for the first time and when he stopped at the counter near the refrigerator and looked back at her she knew what he was going to say.\n\n\"The snow globe?\"\n\n\"It got knocked off. It completely shattered. I had to throw it away.\"\n\n\"Like a lot of things, Debbie, including me, right?\"\n\nShe let it go.\n\n\"I'll tell you what happened. Doug spent the night and I had a morning meeting at UNF. We must have had lightning hit the house the night before. It knocked out the alarm and I had to jump up and get out. As far as I knew, Debbie and BJ were spending the night at friends. I realized I'd forgotten a folder and came back. \n\n\"I was at our bedroom door when I heard them. Kelly...had come in and...was....giving him oral sex. They had no way of knowing I was outside. Doug pushed her off. He told her to get out. He wasn't acting. I could tell. I came in and Kelly was pretty honest about what she was doing.\"\n\nShe stopped and said, \"You want something to drink? We have some of your Goldschl\u00e4ger. There's beer in the fridge...\"\n\n\"The kind of beer he drinks?\"\n\nShe shut up. How did he manage to drive the needle in with such precision.\n\n\"Just beer.\"\n\n\"No thanks.\"\n\n\"Kelly was definitely after him. She has been for awhile. I read her the riot act, she blew up at me and moved out. She's at Mom and Dad's right now. I told Doug to get his stuff and get out. It was too dangerous to have him around her. She's 17 and hormone driven and he's-\"\n\n\"Very sexy, right, Debbie. And 'so damned big,' right?\"\n\nShe spoke as calmly as she could make herself.\n\n\"He's very attractive, Bill, especially to be around a 17-year-old who's dreaming of getting herself pregnant and married. Anyway, we were going to be through before long. I told him we...needed to make a break.\"\n\n\"So you say.\"\n\nShe almost stood up and felt that familiar anger begin to rise inside her.\n\n\"That's fucking IT, you asshole. I'm trying to honest and you keep taking shots. I never had sex with him, you bastard. Yeah, I was flirting. And I shaved my pussy dreaming about him. And I was going to wind up in his bed. Until you made an ass of yourself and ruined my career and Doug's. But...I never fucked him before that night.\n\n\"I just kept getting myself off with my handy vibrator, because you sure as hell weren't getting the job done. And I would eventually have gotten the nerve up to break up with you and then after a respectable period of time I was going to let him fuck my brains out.\"\n\nHe looked like he was going to get up but he remained seated.\n\n\"It was never serious, Bill. I didn't fall in love with him. I just fell out of love with you. He was there to scratch an itch, but if I'd never met him, I was going to ask you for a divorce. He's a kid, and I knew he'd never keep it in his pants for me. He's too hot. So, yeah, I ended it with him. If you don't believe me, take him in your office and put a lie detector on him.\"\n\n\"I've already talked with him.\"\n\nThere was something about the way he said it that made her know.\n\n\"Shit, you must have made him really angry. I hope he didn't hurt you too much.\"\n\nShe saw a smile grow on his face and realized it was the first time she'd seen him smile in three and a half months.\n\n\"He was pretty angry, but....well, let's just say he's not going to be the pretty boy he used to be.\"\n\n\"But-\"\n\n\"You just have no respect for me at all, do you?\"\n\nShe looked at him again. He was dressed as usual in black slacks and a black shirt, but his arms and shoulders were better defined and his gut didn't bulge out the way it had. She remembered the way he had looked in the gym that night. There was something else, something she couldn't put her finger on. But he was different.\n\nShe couldn't believe she was actually asking it, but she heard herself say, \"You didn't hurt him too bad?\"\n\nThe smile vanished. \n\n\"You still care for the bastard, don't you? Are you really through with him?\"\n\n\"I don't want you going to prison, losing everything you spent your life working for. And....I don't care for him..but-\"\n\n\"He's alive. I busted him up some and he's having a little trouble breathing with busted ribs. And, I broke his nose, but he'll live. In case you haven't heard, he's leaving town.\"\n\nShe just stared at him. What had happened?\n\n\"I didn't have anything to do with it. Apparently he's had a job on the table for awhile in Chicago, but he says he was staying for you. He said he would have taken you with him if you'd agreed. Doesn't sound like he thought he was just a way to scratch an itch.\"\n\n\"I don't know about you, but I am going to have a beer.\"\n\nShe opened the fridge, grabbed a Michelob Light and took a sip after taking the top off.\n\n\"He -- he was more serious than I thought he would be. He's...just a kid... Bill, actually emotionally I don't know that he's much more mature than Kelly. Just a big overgrown kid.\"\n\n\"You move pretty fast, Debbie. Throw me out, move him in, throw him out, and you've already lined up a replacement. Actually, I have to give you credit for making a better choice this time. That guy Abbott seems alright. A good writer, and at least with him, you won't have to be always looking down.\"\n\nShe slammed the beer down so hard on the table that it sloshed over.\n\n\"I never looked down on you, dammit Bill. That was always in your head. You'd think after 18 years and all the times I fucked you until you couldn't move you'd have finally figured out that two inches of height is nothing.\"\n\nHe didn't say anything, just looked around the kitchen as if he were looking at it for the first -- or the last -- time.\n\n\"Doesn't matter, Debbie. In a month it'll all be moot. Thank you for telling me what happened between Doug and Kelly. It matches what he said and I have no reason not to believe you because nothing he or you said contradicts what BJ saw and heard.\"",
        "He got up.\n\n\"Goodbye, Debbie. I'll let myself out.\"\n\nShe stood up and almost touched him. She was reaching for him when he drew back and she dropped her hand.\n\n\"Bill, thank you. Thank you for talking to me. It's been hard....not being able to talk to you. Even if this was just about Kelly, I'm still glad you were finally willing to talk to me.\"\n\nHe had turned around when she said, \"One favor, Bill. Please, call Mom and Dad and talk to Kelly. She won't talk to me. I can understand why. But you're her father. Try to talk some sense into her about Doug.\"\n\n\"I'll call and go by right now. Goodbye.\"\n\n#################### \n\nI sat in my car in the dark for 10 minutes after I left Debbie's house. No matter what she said, it wasn't my house anymore. As long as I stayed away from her, I could remember the house and our life the way it had been. But I had been in there now. I could see him fucking her up against the refrigerator or spread-eagled over the table. Maybe he hadn't, but I saw the pictures in my head. \n\nIt was probably a mistake to have talked to her. In some sick way I felt better for it, but I was still sick about it. Talk about a dog going back to its vomit. She was poison. There might be a day when I could look at her and not want to hold her, to kiss her, to bury myself in her. But it wasn't today.\n\nI drove to the Bascombs. I called ahead and got Cathy. I asked if Kelly was there and when she said she was, told her I was coming by to talk to her. \n\nIt was 11:15 p.m. when I pulled into their driveway. Roy answered the door.\n\n\"She's in her bedroom, Bill. \"\n\nIt wasn't the first time we had talked since everything fell apart, but they had just been hi and by when I came to pick up the kids.\n\nHe stopped me as I walked past him and put his hand on my shoulder.\n\n\"I wanted to apologize for what I said...when this all started. I never really believed that she...would throw everything away for a pretty face. That's not the daughter I raised. I know Cathy has talked to you. This thing with pretty boy will end. And she'll come crawling back to you. When she does...just try to remember that she was a good wife for a long time. That's all.\"\n\nI stood there for a second but there was nothing I could say to that. I went on back to what had been Debbie's younger sister Clarice's room years before. Now Cathy and Roy kept it as a guest bedroom.\n\nI knocked on the door and after a moment pushed it open and went in. She was sitting cross-legged on Clarice's old canopy bed, wearing headphones and doing something on a laptop at the same time. \n\nShe wore a light blue pajama set and I didn't have to look too closely to know that Doug had been right. She was a sexually mature, beautiful woman. Except for the hair coloring, she could have been the woman I'd first seen on the University of Florida campus 20 years ago.\n\n\"I assume your soon-to-be ex-wife told you a pack of lies about what happened?\"\n\n\"No, she told me the truth. She told me the same story Doug told me this morning.\"\n\nShe looked up at me and the angry retort she was planning died in her throat as she stared at my face. \n\n\"God, daddy, what happened to you? Oh, no, you didn't go after Doug did you? It wasn't his fault.\"\n\nShe tore the headphones off and set the computer on the bed.\n\n\"You didn't have him arrested, did you?\"\n\nI shook my head and sat down beside her on the bed.\n\n\"No, Doug and I just got into a little tussle. He about put my eye out and banged me up and I smashed his nose and broke some ribs, but he's going to be okay.\"\n\n\"Dad, you hurt Doug?\"\n\nI shook my head watching the expression on her face.\n\n\"Why does everybody seem to find that so hard to believe. Yes, I hurt him, but nothing he won't recover from. And I didn't get him arrested, although I sure as hell could have.\"\n\n\"We didn't do anything.\"\n\n\"Kelly, in the eyes of the law, having oral sex with a 17-year-old would get him sent to state prison and branded a pedophile for life. You've lived with a prosecutor your whole life and you're not stupid. Your mother walking back in was the best thing that ever happened to Doug. Because if he had had sex with you, I'd never rest until he was spending a long time in an all-male barracks at Raiford. Or until he was dead.\"\n\n\"Dad, but I --\"\n\n\"Do NOT tell me you love him, Kelly. You're 17 and you've got high school and college and a life ahead of you. You're not hooking up with a 28-year-old man who used to be your mother's boyfriend.\"\n\nShe stared at me with an expression of pained innocence.\n\n\"You're just mad at him because of mom. But he didn't chase her. She chased him. And she's been flirting with guys for years. I bet you she was fucking them a long time before she put her hooks into Doug. I care for him and I know he cares for me. He hasn't said anything, but I can tell it by the way he looks at me.\"\n\nI took a deep breath.\n\n\"He is not my favorite person on this planet because of your mother's involvement with him. That's true. But that's not the reason why you're not going to get involved with him. He's too old for you. He's had more women than you'll probably ever know about. And you could never trust him. He moved in on your mother when we still had a marriage. What makes you think he would be true to you?\"\n\n\"He wouldn't cheat on me. I'd keep him happy.\"\n\n\"No one woman is going to keep him happy, baby. It doesn't work like that with guys like Doug. And you say you can tell that he care for you because of the way he looks at you. You're not a little girl anymore, Kelly. He's looking at you the way a man looks at a beautiful woman, and that's what you've turned into. When a man looks at you that way, he doesn't love you. He just wants to have sex with you.\"\n\nShe turned her back on me.\n\n\"It doesn't matter what you say. We'll get together. You can't stop us. I'll be 18 in a little while and then you and Mom can't stop me.\"\n\nI didn't tell her that Doug was going to be 1500 miles away very shortly and if he had any sense would avoid her like the plague until that time. And after that...well, I knew prosecutors all over the country and the ones I didn't the Big Man did. Doug would be watched.\n\nShe turned back to face me and she looked so much like Debbie that it hurt.\n\n\"Besides, it's too late to protect my virtue, Daddy. Doug wouldn't be the first.\"\n\n\"I know that.\"\n\n\"No, I've had two boyfriends since then. I've been -- with both of them. I stopped seeing Jamie and started going with Charles, but Jamie moved back into town three months ago. We hook up sometimes.\"\n\nShe acted like she hoped I'd be shocked.\n\n\"I know this will shock and dismay you, Kelly, but I realize that once you start having sex, most people don't stop. I wasn't aware of your boyfriends, but I can't say I'm surprised. I know that I can't lock you in your room, and put a chastity belt on you, and short of that, if you want to have sex you're going to have sex.\"\n\n\"I -- \" She looked really surprised. \"I didn't expect you to-\"\n\n\"To treat you like an adult? It comes hard, Kelly, because you're always going to be my little girl, even when you turn 60. But this is something you'll find out when you have your own kids. You treat your children like children...until you can't anymore. And I can't treat you that way anymore.\"\n\nI reached out and grabbed her hand and held it in mine.\n\n\"I'm not going to tell you not to have sex because I know I can't enforce that, and I don't expect you to respect my opinions because I've made a pretty bad mess of my marriage. But I just want you to remember one thing...and remember it for the rest of your life.\"\n\nI took my hand and ran it along the side of her face. And beneath those woman's features and her mother's beauty, I saw the little girl I had known years ago.\n\n\"I love you Kelly. You're my daughter and you always will be. I know I haven't shown it, but I love you and your brother more than anything on earth. You are the most precious things on earth to me. Nobody except your mother and I, and maybe your brother, will ever love you exactly that way.\n\n\"But, if you're lucky, you'll find some man that will love you just as much, in a different way. He'll love you for more than your body and your face. He'll love you if you lose your looks, or that body grows old. It's what every parent wants for their child. I want someone to love you as much as I do.\n\n\"I want someone to love you as much as I loved your mother. I want someone who will walk through fire for you, because I would have for your mother. That's gone now, but we had it. And I just want the same thing for you.\"\n\nI leaned over and kissed her on the forehead and walked out. Cathy would have said something but I waved her off. I could barely see for the tears blinding me, but it was okay. I had said what I wanted to say. Now it was up to Kelly. She could make her own mistakes, but I hoped she'd be smarter than her mother had been at her age.\n\nI had stopped at a late night espresso shop for a cup of very strong American coffee that was as close to real French coffee as you could find in the River City. It was 12:30 a.m. before I finally sprawled on the bed in my condo and clicked on the late news. As I'd expected, all the buzzing was about the dramatic murder inside the Jacksonville Jail. A lot of the details were held back, but enough had been released that it would go national the next day.\n\nI punched up a pillow, lay back and sipped at the coffee between swallowing two pain pills with water. My left eye had begun throbbing like crazy again. I hadn't taken the rest that I'd been ordered to. I let the sound of the news wash around me as I thought about the day gone by. It had been the longest day of my life.\n\nIt had begun with me in bed with Aline having to break off a budding relationship that I didn't want to break off. In the space of only 17 hours, I had been told by my son that my 17-year-old daughter was having sex with my wife's boyfriend; a vicious killer had made a very real threat against my family;\n\nI'd nearly got my head knocked off extracting a measure of revenge against the asshole who had stolen my wife; I'd received a not-so-polite threat to come down the right way on a racial violence case; had one of the most overt sexual overtures I'd ever received; realized I was lying through my teeth when I told myself I didn't want to see Aline again; met a man who should have hated me but did me a favor I could never repay proving the value of 'Friends In Low Places;'\n\nmet with my soon-to-be ex-wife and found that despite whatever feelings I might have for Aline, I wasn't yet over Debbie; and dealt with my 17-year-old daughter as an adult for the first time.\n\nI'd crammed a week worth of living into less than a day. No wonder I was exhausted.\n\nI was about to click off the television, strip and hit the bed when a familiar face flashed on the screen. I ran it back and turned the sound up.\n\n\"....official government sources in Rwanda have confirmed the initial reports that Father Eagan Dunleavy, a special emissary from the Vatican, has died in a crash near Kigali International Airport, the primary airport serving Kigali, the capital of Rwanda.\n\n\"Sources said that Dunleavy and four others in a small jet, had flown directly from Paris to the Rwandan capital in what was said to be a private diplomatic initiative to ease tensions and fears of a resumption of Hutu-Tutsi violence.\n\n\"Unconfirmed reports say that the plane was brought down by one to two surface to air missiles, possibly American-made Stingers stolen or sold to rebel Rwandan military units.\"\n\nThey flashed Dunleavy's smiling face on the screen, a stock shot taken after he'd won the Nobel for his work in Rwanda.\n\n\"....Vatican sources expressed the sadness of the Pope and high church officials in the loss of a man who had saved so many lives during his career.\"\n\nA man dressed in the colors of the Vatican, not a cardinal or bishop but probably a lower level functionary, appeared on the screen.\n\n\"The world has lost a good man,\" the Vatican spokesman said. \"Father Dunleavy was one of those special souls who sacrificed much for the good of others. He lived a truly selfless life and his award is waiting in Heaven.\"\n\n\"They must have been really frightened of you, Father,\" I told the picture they flashed on the screen again. \"The bastards shot you out of the air before you had a chance to put your feet on the ground. That's a compliment in a way.\"\n\nI wondered if he had even had the time to realize that he was about to die. And if he did, I wondered if he had had the time to take the photos of Brianne O'Collins and his son out for a last time\n\n\"I hope you see her again, Father,\" I said, thinking of the pretty Irish colleen he had sacrificed for the greater good of God and man.\n\nAnd then, remembering the last promise I'd made to him, I leaned forward and although I'd forgotten the prayers of my childhood, I managed to say, \"I am heartily sorry for having offended thee, I confess all my sins, and I ask you in Jesus' name to guide the soul of Eagen Dunleavy home....\""
    ],
    "authorname": "DanielQSteele1",
    "tags": [
        "cheating",
        "courtroom action",
        "crime",
        "marriage",
        "divorce"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/when-we-were-married-ch-04c"
}