{
    "title": "The Swim Team Ch. 10",
    "pages": [
        "Disclaimer\n\nThis is a work of fiction. Any resemblance to any person living or dead is purely coincidental.\n\nYou need to read chapters 1-9 to get background on the characters and story.\n\nAll fictional characters participating in any fictional sexual activity are 18 years of age or older.\n\nI have no editor, so all grammar errors are mine, and I apologize in advance.\n\nGroup, Orgy, Exhibitionist, Voyeur, MF, MFF, Oral\n\nThis first part is the end of chapter 9 which somehow got cut off when the admins posted it.\n\nChapter 9 cont.\n\nWith two large empty pizza boxes and a dozen empty beer bottles and coke cans all over the table, our celebration was winding down. The clock showed eight and it was still a school night. Dennis and Kelly had cuddled together in my recliner while Brenda and Linda flanked me on the couch. As much as I hated to break up the party, I know that Dennis still had to work the next day and the girls had school.\n\n\"Well,\" I slapped my knees preparing to stand up, \"I guess it's getting late.\"\n\nA chorus of 'No's filled the air as both Linda and Brenda grabbed my shoulders and pulled me back between them.\n\n\"Now come on, girls. This is a school night. Dennis has to go to work.\"\n\n\"Don't you?\" Brenda asked.\n\n\"Actually, no. I don't.\" I watched the confusion play across her face for a moment, and I was content to let it play out as she tried to understand what I said.\n\nHer first guess was off the mark by a mile. \"You didn't get fired, did you?\"\n\nDennis and Kelly laughed as I swallowed a chuckle. \"No, sweetie. I didn't get fired. I retired.\"\n\n\"Retired?\" Her brows knitted. \"But you're only, like, forty-two. Don't you have to be, like, sixty to retire?\"\n\nSince most kids probably couldn't tell how old their parents were without asking every birthday, that she remembered my age impressed me, even if she was wrong about retirement. I shook my head. \"You have to be sixty-seven to draw social security. You can retire any time you think you can afford to.\"\n\n\"Your dad's been pretty smart with money as long as we've known him,\" Kelly offered. \"No doubt he can afford to.\"\n\nI could see the light go on in Brenda's mind. \"So that's why you've been home so much. Like this morning.\" It was the first time anyone brought up the morning orgy since all the swim team left.\n\nI nodded.\n\n\"You could've mentioned it, you know.\" Her face screwed up into a pout.\n\n\"And miss that look on your face? I think not!\" I laughed, Linda laughed, Dennis and Kelly laughed. Brenda held her pout a moment longer, then bust out with an explosive laugh. \"All right,\" she said when she caught her breath, \"you got me. So just how long were you going to keep me in the dark?\"\n\n\"Oh, I dunno. When you go off to college?\" More chuckles. \"But still, Dennis isn't retired.\"\n\n\"Actually,\" Dennis began, sliding his arm around Kelly, \"I think I'm taking the day off tomorrow to spend with Kelly. So, we're in no rush to push off.\"\n\n\"I'd have thought you two would want some alone time. I mean, now that you're...you know...\" I pointed my finger back and forth between them.\n\n\"That's what tomorrow is for.\" He winked and I chuckled. \"You wouldn't mind if Linda stays here for another few days would you?\" He snuggled his wife. \"We have some time to make up for.\"\n\nLinda covered her reddening face with her hand. \"Gawd.\"\n\nBrenda's face darkened as she dropped her eyes and examined her fingernails. Her reaction made me frown.\n\n\"It's been too long since we've all spent time together,\" Kelly said. This is nice.\"\n\nIt was nice. I put my arm around Linda and pulled her in close. \"Linda can stay here as long as she likes. I'm sure Brenda will back me up on that.\"\n\nBrenda looked past me at her lifelong friend. Her eyes sought something, like a sign from Linda. Linda had her arms wrapped around me and a smile as large as Texas on her face, and a hopeful smile.\n\nThat seemed to satisfy Brenda. \"Of course!\"\n\nWe finished the crusts of Pizza and shared more stories of Carrie. I avoided talking about her to Brenda too much for the past six years mostly to avoid the pain. Now, it felt comfortable to share some of the stories that I'd never told my daughter.\n\n\"How come you guys never told me this stuff before?\" Brenda pointed at the Mitchells.\n\n\"We told you some,\" Kelly said with a shrug, \"but it really wasn't our place to tell it all. They're your dad's stories, too. He wasn't ready until now.\"\n\n\"Besides, you've read her diary,\" I said. \"You probably know more stories than I do.\"\n\nBrenda's smile faltered, as though something disturbing popped into her mind. \"Well, I guess.\"\n\nHer reaction made me more curious than ever about that diary. I was pretty much going to ignore it, but if it made Brenda react that way, it became more important. It would wait for another day, however. We continued to talk into the late hours when I insisted the girls go to bed. While Dennis wasn't working and neither of us had to get up at a reasonable hour, both girls had school, and since Brenda skipped today, she was damn well going tomorrow. They trotted off to what I've come to think of as their room. Kelly and Dennis got up to leave.\n\n\"Hey Dennis,\" I stopped him as Kelly gathered their things, \"can I talk to you alone for a minute.\"\n\n\"Uh, sure, Bare. Hey, Kel,\" he called to his wife, \"I'll meet you at the car.\"\n\nKelly gave me a kiss as she passed us on the way outside. After she left, I glanced at Brenda's closed door. \"Dennis, I may be reading this wrong, but I get the sense that Brenda is still upset with you.\"\n\nDennis' eyes widened for the quickest of moments.\n\n\"And I think you know why. You seemed concerned last week about her being here for dinner, and then there was her reaction when you showed up.\" Dennis looked at the door as if searching for an escape. \"Dennis? What's going on?\"\n\nDennis' eyes danced all around the room, anywhere he could look except at me. \"Barry,\" he began then drew a deep breath. \"Look man. You need to ask Brenda about it.\"\n\n\"I'm asking you.\"\n\n\"Yeah.\" He said. \"But I got nothing. I'm...ah...not...\"\n\n\"What is it, man? Spit it out.\"\n\nWhat could be so bad he couldn't tell me about it? Hell, we just spent the day together. Hell, we both fucked his wife...and his girlfriend. What could have happened so bad that he couldn't tell me? Unless....Shit. An image popped into my consciousness. A picture that curdled my stomach. In my mind, I saw Brenda as I found her this morning in her room. Naked on her knees, a plug in her ass and a cock slamming into her pussy. Only this time, it was being thrust not by a teammate, but by Dennis. I shuddered. No way.\n\n\"Dennis,\" I drew a deep breath as a ball of fire ignited in my belly, \"you didn't fuck Brenda, did you?\"\n\n\"No!\" The answer flew out of his mouth as he put his hands up. \"No, I didn't. Believe that, Barry. I did not sleep with your daughter. But that's all I feel comfortable saying until you talk to her about it.\" He looked over my shoulder. \"Talk to her, then call me if you still feel you need to.\"\n\n\"Should I ask Kelly about this?\" I was not about to let this go. \"Maybe she'll be honest with me.\"\n\n\"I am being honest with you, Barry. Besides, Kelly doesn't know anything about it.\"\n\n\"So, there is something going on between you two!\" My fists were clenched at my sides, and I had to will my hands to relax.\n\n\"No, there's not. Nothing happened.\" He ran his fingers across the top of his head and leaned back against the wall. \"Look. I'd like to say more, but I made a promise. If anyone is going to tell you, it has to be her. Talk to her.\"\n\nI felt the blood racing through my temples, and I knew I was too upset to think clearly. I did need to talk to Brenda, but like Saturday morning, I was not in the right frame of mind to do it. Dennis was watching me as I wrestled with myself, waiting to see if I was going to do something stupid. Then, like the sun shining through suddenly parting clouds, I realized that I had no reason to be mad. I was allowing my imagination to run away with me. Didn't Brenda and I already talk about her sex life today? I'm sure if she had fucked Dennis, she would have mentioned it then, while I was being so reasonable. And Dennis has never given me reason to doubt his word. I sighed as I forced myself to relax. \"Fine,\" I said. \"I'll talk to Brenda. But don't think I'm not coming to continue this with you.\"\n\n\"I will be happy to discuss it with you after you talk to her.\"\n\n\"Fine.\" I shook my head and tried to paint a smile on my face. \"Now go home and fuck your wife.\"\n\nHe dropped his shoulders as a smile crept across his face. \"I plan on it.\"\n\nChapter 10\n\nI opened Carrie's diary. Part of me wishes I hadn't.\n\nAfter locking down the house, I stripped and climbed into bed, even forgoing checking out my favorite porn sites. In the past few days, I'd had more sex than I'd had in the past few months. As I lay my head on the pillow, however, sleep eluded me. I looked over and saw Carrie's diary sitting on the nightstand where Brenda put it earlier. Part of me said leave it. It was none of my business now, and nothing it said should affect my life, so nothing would be served by opening it. My innate curiosity was louder. Kelly had raised serious questions in my mind about the woman I married, and I desperately wanted to put those questions to bed and reaffirm that my Carrie was the same Carrie I always knew her to be.\n\nI opened it.\n\nI knew before I read a word that the beginning was long before she ever met me, so I had to take what I discovered with my eyes open.\n\nI recognized her handwriting and the first tears threatened to erupt. She was fourteen when she started the journal, but her script already had the hallmarks of the writing I read in her letters to me. Most of it was talking about her parents, school, and friends. Kelly was mentioned prominently, but nothing about boys. I flipped through several similar pages, my sense of worry easing but never disappearing.\n\nShe told about her first time experimenting with Kelly in high school. She described how she met Dennis her Junior year and how he asked her out. She agreed to go out with him as part of a group of friends and mentioned in her entry that he still considered that a first date. She knew then that he wasn't romantic material for her, though she did ask herself why. She admitted he was attractive, well-built, and athletic, not to mention sweet and funny. They just didn't click that way for her, she said. That never stopped Dennis from asking her out though. Even when she went through a spate of boyfriends the summer between her junior and senior years.\n\nI almost dropped the book when she mentioned the gang bang.\n\nShe and Kelly were seniors, and it was spring break. Carrie had mentioned earlier about losing her virginity to Brad Lundford. She gave him props but she mentioned that he did nothing for her, despite his best efforts, and she went on to discuss her boyfriends--her many boyfriends. She had more boyfriends her junior and senior years than I had girlfriends my entire life. She never mentioned any of them to me. Of course, I never asked. According to the diary, Kelly was matching her step for step, a willing accomplice in debauchery. She even chronicled how, at eighteenth birthday party, she learned to give the perfect blow job. She was blowing a guy and accidentally slapped him with her tongue on that spot right below the meatus at the flare of the ridge at the head. According to her, he came instantly. She refined her technique over the years learning to focus the tip of her tongue there at just the right time. As a recipient of that talent, it was odd reading her chronicle how she learned to do it.\n\nI felt an anger rising from the pit of my stomach as the book bore out what Kelly told me. Kelly's words painted a picture of a different woman from the one I thought I married, as did this diary. Calm down, I told myself. This was a much younger Carrie. This was a kid still figuring out her identity and her world. Sure, she experimented. A lot. A lot more than I--or anyone I knew--ever did.\n\nI set the diary aside and stared at the ceiling, forcing myself to take deep, measured breaths. People change. Everyone changes. The girl who wrote this diary was not necessarily the same woman I married. Surely I would have noticed something. I would have seen something. I would have known.\n\nDid you know what your own daughter was doing?\n\nThat question slapped me in the face, forcing me to sit up. Everything I read in the diary was mirrored in what Brenda told me this afternoon. Her sexual journey followed a very similar path to Carrie's, and I never knew it. I was totally clueless about my little girl's life. She freely admitted having sex with multiple people, both boys and girls. She had no qualms about experimenting with Linda. She even talked about being with Austin.\n\nThat made me think. My daughter and I shared a lover. Wow. Just. Wow.\n\nHad I been so parochial about sex my whole life? Before my parents died, theirs was the only relationship I had for a model. I never saw them being anything more than mildly affectionate toward each other. I couldn't remember ever seeing them in a deep kiss, nor did I ever hear the tell-tale slamming of a headboard or the squeak of a box spring. I never saw either of them flirt, even with each other. Or if I did, I didn't understand it.\n\nMy first girlfriend broke up with me because I was too timid to get physical with her. Oh, I wanted to--in the worst way. I just didn't know how to go about it. The first time we kissed, we stared at each other for what seemed like an hour until she broke the silence. \"Are you going to kiss me or what?\"\n\nEven after that, I still was moving too slow for her, and she moved on to other prospects. It was a friend of mine on the varsity basketball team who clued me in on \"the lean\" as he called it.\n\n\"If a girl is keen to kiss,\" he had said, \"she will tilt her head and lean forward, as though trying to hear you better. If she plays with her hair at the same time, so much the better. That's a sure sign she wants to make out.\"\n\nHe also told me that if a woman wants chest play, she will \"present\" as he put it. She'll thrust her chest forward or rub it on the upper arm to signal her desire.\n\nOf course, I saw him get slapped on more than one occasion, so his advice wasn't foolproof, but it did serve me well for the rest of my high school experience, and of course, college. Carrie did \"the lean\" the first time we kissed, and that turned out okay.\n\nSo, while I didn't have the experience that Carrie did, I also wasn't a virgin. I had been with three other women before I met her. She had been with more than twenty other people, including at least one orgy right after her high school graduation. That must be why the first Greek Bash didn't surprise her as much as light a fire inside of her. Or the second. Or every other group sex situation into which we stumbled.\n\nA thought hit me out of nowhere. My problem wasn't fidelity. It wasn't Carrie. It was my own cluelessness. Sex wasn't something that had to be protected between a loving monogamous couple. It was an expression of joy to be shared. Carrie and I enjoyed sex with each other, no matter if it was just the two of us, or if it was in front of Kelly and Dennis.\n\nThat realization made me curious, and I snatched the book up and flipped several pages. Kelly mentioned her first semester at college, and I was in her second entry for that year. What she wrote filled me with a warmth and a joy I hadn't felt in years. She said that when she met this tall guy in her lab class, her heart flipped. She knew then that she wanted to be with me. Just as I knew the first time I saw her. We were already on the same wavelength even before we were introduced.\n\nI flipped several pages, past the Greek bash, even past our first time. I was looking for one entry in particular. Part of me felt like I was being dishonest reading her private thoughts about things that she never talked to me about. But then again, she did tell me in her letter to read the journal.\n\nThere it was. The last Greek Bash. The party that resulted in Kelly getting pregnant with my son. And there was the incident. In black and white. Carrie's account was similar in fact to what Kelly told me, but what I read in between Carrie's words told me so much more. Carrie was wracked with guilt the next morning, certain she had fucked up our relationship, that I would prefer Kelly to her, or that I would leave her for having sex with Kelly. I remembered how clingy she had been that next morning. After reading the entry, it made more sense.\n\nThree entries later, Carrie wrote about Kelly missing her period. Carrie was beside herself. She cursed her best friend. She cursed herself. She even cursed me for not knowing what happened, but I got the feeling she was more angry that she couldn't talk to me about it. She promised herself that she would never again have sex with anyone other than me, nor share me with anyone. Especially Kelly.\n\nThe next entry I wanted to see was the Destin trip, because something happened there that I still felt led to Carrie's and my breakup. Carrie didn't write much about it, oddly enough. She included a lot of details about all of her sexual encounters up till then, but this entry only mentioned that an orgy broke out, and that Kelly and Dennis were the stars of it. She mentioned our night in somewhat more detail, but not much.\n\nThe next entry wasn't until after Carrie left. It was nothing but a number, followed by several more entries with nothing but increasing numbers. When I flipped the last page of that year, there was a lengthy series of short entries.\n\n\"I did it. I made it a whole year. I didn't think I could do it, but I did. I'm going crazy, though. I don't know how much longer I can stand it, but I have to try. For his sake. For our sakes. God! I hope I haven't ruined things, but I had to know, and this was the only way. I only hope he still loves me enough to forgive me for leaving him like I've done. He has to. I'll just die if he doesn't.\n\n\"Mom says if he ever loved me the way I love him, he will forgive me. Of course, she still says I am an idiot for doing this in the first place. I just hope Barry hasn't moved on. Please, let him be there.\n\n\"Oh No! I drove over to his place and he's not here! He moved out of his apartment. What will I do?\n\n\"I can't ask Kelly. She'll tell him. Maybe I can catch him at work.\n\n\"Great, he doesn't work there anymore. They said he joined the Army. My life is over.\n\n\"Yay! Mom saw him at the store. Thank you God! She followed him to that new subdivision, so I have an address. I'm going over there tomorrow. Wish me luck! I have to find a new dress. I have to win him back. Please, let him still love me.\n\n\"Do I tell him why I left? Do I tell him about my abstinence? I did all this for him. I had to know that we could just be us. That we could both be monogamous. That he would be satisfied with just me and not want Kelly. I couldn't stand it if he fell for her. I love her, but Barry is mine. She knows how much I love him. I wish she had never joined us that night. Why can't she just be happy with Dennis? But it's my fault too. I could have sent her away that night, but I didn't. I was weak. And the booze was spiked. Oh, I have excuses, but that's all they are. I have no one to blame but myself if this doesn't work. I know for sure now that he's all I want. I went a whole year without seeing anyone. Without any sex. Without even flirting! All I could think about was my Barry and getting him back.\n\nIt's time. I picked out my best dress. I spent a bit more than I wanted to on my hair, but he's worth it. Please let him love me! Here goes everything!",
        "I closed the book. She broke up with me to prove to herself that I didn't want anyone else. How stupid! Of course, I understood the sentiment. I always wondered why she wanted me when she could have literally anyone else she wanted.\n\nBut after all the entries I read, I understood my wife better. I also understood my daughter better. I also understood that I had been a colossal idiot.\n\n<p align=\"center\">#</p>\n\nBrenda and Linda had left for school the next morning before I woke, which puzzled me. Not to sound entitled or anything, but it would have been nice if one of them had brought me a cup of coffee before they left, or at least kissed me goodbye. As it was, I looked over at my Echo Show to see that it was already almost nine in the morning, and I didn't remember waking up once during the night. In fact, it felt like I just closed my eyes for a second when my head hit the pillow, and the next thing I knew the sun was shining in the window.\n\nI sat up and stretched before swinging my legs to the floor. I had a moment of anxiety thinking that I was going to be late for something, but then I remembered that I retired. I had no meetings. I had no schedule to keep. No conference calls to join. And according to Diane West, I didn't have to worry about raising money for the season anymore. So, as I scratched my belly, I had only one question echoing in my mind: What was I to do with my day?\n\nWhen Brenda got home, I was busy racking up kills, and pissing off a bunch of 'noobs' on my Xbox One.\n\n\"Hey Dad,\" Brenda said as she cast a side eye at me sitting on the couch wearing the same outfit I wore to bed. On the coffee table was an empty bowl with the remnants of Captain Crunch, and a paper plate with the crust of a frozen pizza.\n\n\"Hey Sweetie,\" I said. \"Shit!\" Some dweeb got off a lucky shot, forcing me to wait to respawn. I took the opportunity to set down the controller and give my daughter my attention. \"Sorry about that. How was your day?\"\n\n\"Uh, pretty good I guess. Not as...relaxed as yours seems to have been.\"\n\nI chuckled as I hopped up and grabbed the mess from the table to take into the kitchen. \"Any fallout from skipping school yesterday?\"\n\n\"No. Not really. Coach added another day of practice for the whole team, since most of us were...uh...not there. It seems my teachers didn't assign much work yesterday, so nothing really.\"\n\n\"Another day of practice?\" I looked at my watch. \"Aren't you supposed to be at the natatorium now?\"\n\n\"I'm on my way. I just stopped by to get my suit. I forgot it this morning.\"\n\n\"I see. Any blowback about Landry?\"\n\nHer face twitched for a split second as a hint of a smile peeked out. \"Nothing. I think that situation has been handled.\"\n\n\"So, he won't be a problem? What about your friend Ivory?\"\n\n\"Like I said. No problem. Handled. Ivory is on board.\" She must have seen the doubt on my face because she turned to face me. \"Don't worry. Everything is fine. You'll see.\"\n\nI got the feeling she wasn't telling me everything, and it rankled me for a second. I thought we got past keeping secrets yesterday. I almost said something when she read my face.\n\n\"It's okay, Daddy. We have dealt with Mark and he won't be a problem for anyone again.\" She chuckled again. \"Coach West says thank you for the idea, by the way.\"\n\nThat made me blink. What idea was she talking about?\n\n\"Well, we can talk about it when I get home from practice. I'm already late and I gotta run.\" She bolted to her room and emerged with her bag slung over her shoulder.\n\nLinda went back home after practice, and I was more than a little disappointed that she wouldn't be staying with us anymore. She didn't even say goodbye. I guess it was good in a way, since it gave me an opportunity to discuss the Dennis situation with Brenda.\n\nAs I set the table, I tried to figure out a nonthreatening way to broach the subject. Brenda brought out the casserole and took her seat across from me.\n\n\"Brenda,\" I began, \"something occurred to me yesterday that I'd like to hear your thoughts on.\"\n\n\"Sure, Dad. What is it?\"\n\n\"Well, you know that Dennis and Kelly have gotten back together.\"\n\n\"Yeah, I noticed. It was kind of hard to miss.\"\n\n\"Yes, well. What else was hard to miss was your face when they were together.\"\n\nHer poker face made its appearance. I figured it would. She wouldn't say anything more without a prompt.\n\n\"You were mad. Like you were when he came over for dinner the other day.\" Again, no reaction other than to take another bite of her dinner. I was going to have to spell it out more directly. \"Why are you still angry at Dennis? You told me that you were mad that he cheated, but if his wife can forgive him that, why can't you?\"\n\n\"I forgive him for cheating on his wife,\" she said like a newsman reading a teleprompter.\n\n\"But you're still mad.\"\n\n\"No.\" She lied. I could see it as though it hung on a sign around her neck.\n\n\"Brenda?\"\n\nShe stared at me. I could see thoughts racing behind her eyes as she kept scanning my face. She tightened her lips. \"Brenda, we've already talked about a lot of uncomfortable things yesterday. You can tell me about this.\"\n\nShe tilted her head as she considered my words. After a moment, she came to a conclusion and sat up. I steeled myself for whatever she was about to say.\n\n\"I was mad. Really mad at the time. Not because he cheated on his wife, though.\"\n\n\"Then what?\"\n\nShe sighed and looked down at her food as she moved it around her plate with her fork. \"I was more hurt than mad, I guess.\"\n\n\"And why would that be?\"\n\n\"Because he told me he couldn't cheat. That he wouldn't cheat, but then he did. He was already cheating at the time. He lied to me. That was why I was so mad.\"\n\nBrenda and Dennis had a conversation about whether or not he would ever cheat? Why would they? How would that topic ever even come up? \"And?\"\n\n\"That's it. That's why I was upset.\"\n\n\"I'm sorry, Brenda, but I know that's not it. I know there's more to it. Come on, sweetie. Tell me. Tell me everything.\"\n\nShe sucked the inside of her teeth and rolled her eyes. \"Fine. Okay. I tried to seduce him, okay? Happy now? I tried to get your friend to sleep with me and he told me no.\" She drew a ragged breath as her eyes welled. \"He told me that he couldn't do that to Kelly, but all the while he was already fucking coach West.\" Her voice broke when she mentioned Diane.\n\nShit. My granny--always the font of wisdom--had another saying: 'Don't ask questions that you don't want to know the answer.' On one hand, I was relieved that Dennis hadn't slept with Brenda, or even propositioned her. Hell, given what was going on with Kelly, that he turned down Brenda just showed how much he valued our relationship. On the other hand, my daughter just admitted she tried to seduce my oldest friend. \"So, you were not so mad that he cheated, but that he didn't cheat with you?\"\n\n\"No,\" she said immediately. \"Well...I mean...\"\n\n\"Brenda,\" I held up my hand, \"stop. I get it. You were insulted. How could he turn you down if he was going to cheat anyway? I get it. But sweetie, it wasn't that he didn't find you attractive. Any red-blooded man would give their eye teeth, I'm sure. But you're like a daughter to him. That makes a difference.\"\n\nShe sat up and blinked her tears back. \"It does?\"\n\nI nodded.\n\n\"Why does it?\" Her face was drawn up and her brow furrowed. She clearly hadn't thought about that. \"Does it for everyone?\"\n\n\"For most people I know, it does.\"\n\n\"Does it for you?\"\n\n\"Well, were not talking about me, sweetie.\"\n\n\"But if it was you, would you?\"\n\n\"Have sex with you? Well, you're not 'like' a daughter to me, Brenda. You are my daughter. That's different.\"\n\n\"But what if it was Linda? She's not your daughter, but she's like your daughter.\"\n\nI shifted in my chair, suddenly finding it difficult to sit still. Brenda never took her eyes off me as I squirmed.\n\n\"Come on, Dad. Would you have sex with Linda?\"\n\nI needed to deflect this. I couldn't confide my feelings for Linda to her best friend, even if that friend is my daughter. Especially because of that fact. \"Well, it doesn't make any difference. It's not like Linda wants to have sex with me.\"\n\n\"Dad,\" Brenda said like a schoolteacher trying to get a student to understand two plus two, \"seriously?\"\n\n\"What?\"\n\n\"You can't tell me you don't know.\"\n\n\"What I do know is that we're not talking about me or Linda. We're discussing you and Dennis.\"\n\n\"But I only tried to seduce him to show Linda...\" Her mouth shut so fast I swear I heard the slam.\n\n\"To show Linda?\" That confused me. She was trying to break up Linda's parents? I never thought she had so little respect for people. \"Show her what? That marriage doesn't matter?\"\n\n\"No. Not that.\" Her face twisted up as she considered her words.\n\nI grabbed her hand and patted it as I leaned closer. \"Brenda. To show Linda what? I get the feeling this is...\"\n\n\"Linda's in love with you, okay?\" She blurted it out like she was anxious to get it over with.\n\nI sat up, dropping her hands as her words rang in my head like the peal of church bells. Linda? In love? With me? How preposterous! \"Brenda, I don't...\" My words failed me. I couldn't think of a thing to say.\n\n\"She's been in love with you for a long time,\" she continued. \"But after the end of summer swim party, you're all she can talk about. She even blew off Steve Swinson because he wasn't you.\"\n\n\"She told you all this?\"\n\n\"I saw most of it. I've known her my whole life, Dad. I don't need her to tell me. And Dad,\" she paused as if second guessing what she was about to say, but only for a moment, \"I know you love her, too. I've seen the way you look at her.\"\n\nThe words hit me like an accusation, and I reacted like a suspect who'd been surprised on the witness stand. I knew I lusted after her. I knew I wanted her, but I thought I had kept that hidden from everyone. But love? Did I love her? \"Well, of course I do. I-I helped raise her. I love her like I love you.\"\n\nA smirk slithered across her face and she cocked one eyebrow. \"So, if I had been the one cuddling up to you on the couch the other night, you'd have played with my tits? Made me cum?\"\n\nShe saw that? I thought she was asleep the whole time. I felt my face flush. I had to get control of this conversation. \"What does any of this have to do with you and Dennis? And you're wrong about Linda by the way.\"\n\n\"She didn't think you would ever want to be with her. That you would never see her as a woman, only as a little girl. I told her that if she wanted you, to just go for you. We actually had a fight about it. Then I thought, if I thought that if I could get Dennis to be with me, that she would see that she could have you, too. But he turned me down, so it didn't work.\" Her sly smile returned. \"And I'm not wrong. About either of you. You're just too clueless to see what's right in front of you.\"\n\nI should have been angry. I should have chastised her for caring so little about Dennis' marriage to risk it just to show Linda how easy it is to have sex with a grown man. That alone made me glad that Dennis turned her down, but I doubt it taught Brenda a lesson. I couldn't say anything though. The only thoughts running through my head were of Linda. Brenda said Linda wanted me the same way I wanted her. I didn't know how to process that.\n\nAfter a few moments of silence, we resumed our meal, neither of us wanting to say more.\n\nAfter Brenda and I finished dinner, I was able to distract myself with other things, but after Brenda went to bed, I was left alone with my thoughts. Nothing I did could drive Linda from my mind. I found myself missing her laugh, her warmth, and her presence. Even though she was only with us for less than two weeks, her absence left a gaping hole in the house. It was almost as if she had made our set complete, and now there was a missing piece.\n\nI flipped through the offerings on Netflix and Prime as well as the cable, and despite having almost the entire collection of every movie and television program ever made at my fingertips, I couldn't find anything I wanted to watch. I stood in front of the open refrigerator looking at a collection of Yeungling bottles as well as Dr. Pepper cans, but nothing sounded good. The tub of ice cream in the freezer didn't pique my interest either.\n\nI closed the door and rested my forehead on the handle. I knew what my problem was, but I also knew that wallowing in it was no answer. I missed Linda. I couldn't stop thinking about her. I heard her laugh in the wind. I saw her smile in the sunbeam that brightened my room. I wanted her here. Not just because I wanted her body, but also I wanted her soul. I wanted her spirit. It was stupid for a man my age to be lovesick over a girl half my age who should probably be enamored with some lucky boy her own age. Yet here I was. Pining for a girl I could never have. I finally gave up and went to bed. I didn't even bother surfing porn on my computer.\n\nThe next two days were more of the same. I did shower and change clothes. I did manage to keep the kitchen cleaned, but aside from playing video games, or watching TV, I didn't feel much like doing anything. I didn't leave the house. It was Thursday evening when things changed.\n\nMy phone rang while I watched Star Trek reruns on Amazon. Brenda was in her room doing her homework after we finished dinner. I was supposed to be cleaning the kitchen, but that would wait until after Captain Kirk got Spock's brain back into his body.\n\n\"Dennis. What's up?\"\n\n\"Hey Barry. You got any plans for Saturday night?\"\n\n\"Nope. Just going to hang here.\"\n\n\"No, you're not. You're coming with us.\"\n\n\"I am?\"\n\n\"You are. Kelly and I are going to a dinner and we want you to come with us.\"\n\nMy face scrunched as I considered his plan. Spending an evening with Dennis and Kelly might be fun, but aside from Tuesday, I hadn't spent any real time with them since Carrie died. I had made my peace with Kelly's revelations about my wife, and I probably had made peace with her diary. But was I ready to start socializing with her best friends again? Would it bring up bad feelings? Would it make me feel worse?\n\n\"I don't know, Dennis. I'm not sure...\"\n\n\"Barry, perhaps I didn't make myself clear. You are coming with us. I'll pick you up at Eight. Dress nice.\"\n\n\"But I don't...\"\n\n\"Do you want to hear from Kelly?\" He sounded like a father threatening his child. I could almost hear my mother saying, 'just wait till your father gets home.' Dennis continued. \"She's pretty insistent.\"\n\n\"Whatever. Sure. Eight. I'll be ready.\" I wasn't sure I would be, but I got the feeling I was pushing a boulder up an icy hill by arguing. Besides, I still had two days to figure out an excuse not to go.\n\n\"That's the spirit. So...how have you been?\"\n\nWe chatted a bit about his work, and I really was interested in how things were going with Kelly, now that they seemed to have gotten over that crisis. He said she was a whole new woman, and it was as though they were newlyweds again. It was a pleasant conversation, and I realized that I missed that. Since I retired, I didn't talk to people, and I hadn't talked at length with Dennis in ages. During the entire call, however, my mind kept coming around to Linda. I wanted to know how she was. How was she taking the whole reconciliation? Did she mention me? Did she miss me? Of course, I couldn't ask. That would be weird. It didn't stop my mind from wondering, however.\n\n\"Is Brenda ready for tomorrow's meet?\" Dennis' question popped the bubble of Linda that formed around my mind.\n\n\"As ready as ever. She's been at practice every day this week. How about Linda?\" I hoped that didn't sound weird.\n\n\"Well, I'm not sure, Barry. You remember she said she wanted to quit the team?\"\n\n\"Yeah, when they were trying to raise money with cam shows. She wanted no part of that.\"\n\n\"Well, I told her she couldn't quit practicing, since she made a commitment to the team, and it was still her best bet for a scholarship in case her academics don't come through.\"\n\n\"Makes sense.\"\n\n\"She didn't like it, but she practiced. I don't know if she plans on competing though.\" His voice trailed off.\n\n\"Is there something else?\"\n\n\"Well, she seems to think the girls are still doing cam shows.\"\n\nI hadn't logged into Austin's site since Monday night, so I wouldn't know. Of course, they may have started their own sites if they were serious about camming. \"Really?\"\n\n\"That's what she says.\"\n\n\"Well, that doesn't mean she has to.\"\n\n\"I know. And she knows. But she's still...I don't know...off about it.\"\n\n\"Would it help if I talked with her about it?\"\n\nHe was silent for a moment, and I worried I had tipped my hand. He couldn't know how I truly felt about Linda, and that was a conversation I wasn't looking forward to. He sighed into the phone. \"Couldn't hurt I guess.\"\n\n\"Okay. I'll pick her up tomorrow and take her and Brenda to school. We can talk then. And I'll see if Brenda can shed any light on the matter.\"\n\n\"Thanks Barry. Look, I'll let you go. It's been great talking with you again. Remember, Saturday night. Be ready.\"\n\n\"I will be.\" Or would I?\n\n<p align=\"center\">#</p>\n\nBrenda was sitting at her desk with her laptop open and two large textbooks flanking her keyboard. She clenched a pencil between her teeth, and she ran a highlighter over some text on a page, then began typing on her keyboard. I watched her for a few silent moments, marveling at how much she looked like Carrie when she and I studied together.\n\n\"Brenda?\"\n\nShe jumped and spun around in her seat, one knee pointing towards me while the other stayed where it was. She was wearing a night shirt and the motion forced the bottom of it to slip up to the tops of her thighs revealing that she wasn't wearing panties. My eyes couldn't have avoided the sight if I had known it was coming.\n\n\"Daddy!\" She drew a long breath. \"Don't sneak up on me like that! I almost had a heart attack.\"\n\nI almost had one too. \"Uhm, Brenda, you might want to...\" I waggled my finger at her. \"...adjust yourself.\"\n\nShe looked down and blushed. \"Oh! I'm sorry, Daddy.\" She brought her knees together and turned back around, smoothing her shirt down over her lap. \"I was so wrapped up in this paper for economics class. Have you ever heard of Reaganomics?\"\n\nI chuckled. \"I have, and I'll be happy to talk with you about it in a second. First though, have you talked with Linda about the team since Tuesday?\"\n\n\"The team?\"\n\n\"She mentioned to her mom that she wanted to quit the team because of the whole cam thing.\"\n\n\"Oh.\" This was a revelation to Brenda. \"She never mentioned anything to me about it.\" She bit the eraser of her pencil as she looked at the floor, her gaze going beyond it as she thought. \"No. Nothing. Why?\"\n\n\"Was she at practice this week?\"\n\n\"Yeah, but come to think of it, she wasn't up to her usual standards. Like she wasn't really trying.\"\n\n\"Do you think she'll scratch tomorrow?\"\n\nShe blinked. \"God, I hope not! She's supposed to anchor the freestyle. If she scratches, that leaves it to Tina, and she's not strong enough to anchor.\" She reached for her phone. \"I have to call coach!\"\n\n\"Well, hold that thought. Let's you and me talk to Linda tomorrow morning. I'll drive you both to school. How's that?\"\n\n\"But how will I get to the meet?\"\n\n\"I'll pick you both up and take you. Benefit of being retired.\"\n\nWith that settled, I left her to her work, and I returned to the kitchen to do the dishes I had neglected all evening.\n\nThe next morning, Linda bounced down the Mitchell's walkway to my car. She was wearing skinny jeans and a tight pull-over, and my eyes drank in every inch of her lovely figure. When she saw me in the driver's seat, she paused a step, but a smile spread across her face and she skipped to the door. Brenda had taken the backseat, so Linda slid in next to me.",
        "\"Hey Mr. B!\" She flashed that brilliant smile at me, and I almost forgot the car was running. She glanced in the back seat at Brenda. \"Hey.\"\n\n\"Good morning, Linda,\" I said, resisting the overwhelming urge to lean over and kiss her. I pulled the car onto the road and steered for the school. \"So, Linda, are you ready for the meet this afternoon?\"\n\nLinda kept her gaze on the road before us. \"I guess.\"\n\n\"You guess?\" Brenda piped up from the back seat. \"We're swimming against Alief today. They were district champs for three years. You don't need to guess about them.\"\n\n\"We beat them in the finals last year. Nyisha Jackson's not swimming for them anymore. What's the big deal.\"\n\n\"You heard coach the other day. They have a new anchor on the girls' team. She's supposed to be prepping for the Olympic team.\"\n\n\"Whatever. We'll do fine.\"\n\nHer cavalier attitude bore out Dennis' and Brenda's concerns. Linda wasn't taking it seriously anymore.\n\nDuring the ten-minute drive, Brenda and I tried to lay out a logical argument for Linda's participation in the swim team. We mentioned scholarships. We mentioned school spirit. We mentioned the State Championship title. Linda never argued against any of it, but I got the feeling our arguments were not moving the needle. She just nodded and gave half-hearted agreements. Once we pulled up to the school, Brenda got out and Linda began gathering her things.\n\n\"Hold on a sec, Linda, will you?\"\n\n\"Uhm, okay.\" Her brow furrowed a little as Brenda started up the walkway. \"What?\"\n\n\"Linda, you know you don't have to do anything you don't want to do, right?\"\n\n\"Except quit the team?\"\n\n\"Well, I'm not really talking about that. Look, I get why you aren't getting along with some of them because of the whole cam thing.\"\n\n\"It's disgusting.\"\n\n\"But does it mean you can't do the one thing that everyone knows makes you happiest?\" I searched her face, but she was looking at the dashboard. \"Linda, you enjoy that pool more than Brenda, and that's saying something.\"\n\n\"Yeah. So?\"\n\n\"You love swimming.\"\n\n\"I know. But I can swim without doing it competitively.\"\n\n\"You could. But would it be the same? Would you love it as much without the thrill of victory? Without the drive to push yourself to be better?\" I reached for her hand and when I touched her skin, I felt a spark, like static electricity, but not painful at all. Her eyes locked on mine as I covered her hand with my other hand, feeling her warmth. \"I've seen the light in your eyes when you get out of the pool after winning a heat. I like that light. I want to see more of it. I worry that I won't ever see it again if you give up on swimming.\"\n\nHer eyes moistened as she searched my face. I could see her emotions wrestling behind her blue irises. \"I'll be in the stands cheering for you this afternoon. I want to see that light. I want to see you win. Will you do your best? For me?\"\n\nI held her gaze for what felt like eternity. We just sat there looking at each other, only separated by the center console. Her head tilted ever so slightly, and she leaned closer to me. My heart raced as the urge to kiss her seized me. I felt my face drawing closer to hers without any conscious effort, and I could almost feel her breath on my lips when the school bell rang. Startled, she sat up straight.\n\n\"Uhm...\"she said shaking her head to clear her thoughts, \"okay. Yes. I will do my best.\" She opened the door and turned to get out, but then stopped and leaned back, stretching across the seat to kiss me. \"For you.\"\n\nShe gave me a crooked smile as her face flushed before she gathered her things, closed the door, and ran up the walkway to her school.\n\n<p align=\"center\">#</p>\n\nThe team easily won the meet with Linda leading the way in points. Brenda ran up and scooped her friend into a bear hug when she emerged from the pool after her final heat, and they squealed at their victory. I sat in the stands and applauded as Linda beamed her smile at me from the awards blocks. The only part of the competition that irked me was Speedo Boy participating. He did well, though, despite his missing workouts with the team for two weeks. Between meets, he sat alone in the bullpen; the rest of the team, even the other male swimmers, giving him a wide berth. After he was named the highest scoring male swimmer, however, the congratulations flowed.\n\nI went down poolside after the awards presentation and both of my girls gave me a big wet hug. They had taken their caps off and had damp towels draped across their shoulders.\n\n\"Well done, Brenda,\" I said when she let go of me. \"And you were so worried about Alief.\"\n\n\"Well, they started the season ranked higher than we are.\" Her smile refused to falter even as she talked.\n\n\"Well, you sure showed them!\" I turned to Linda who looked at me with that fire of victory in her eyes. \"And you! That was outstanding. I don't think I've ever seen your stroke look any better.\"\n\n\"You think so?\" She knew full well how well she swam.\n\n\"You shaved a full second off your freestyle,\" Brenda said.\n\n\"I guess I was well motivated,\" Linda cast her eyes at me and smirked as she rocked back and forth on her toes.\n\n\"Who's up for Pizza to celebrate?\" I clapped my hands and looked back and forth between them.\n\n\"Me!\" Linda bounced with excitement. \"Mario's. Not that chain place.\"\n\n\"What do you mean?\" Brenda looked confused. \"Deep dish Meat Lover's at Pizza Hut is the only pizza to eat after such a dominating victory.\"\n\n\"Mario's has that garlic Parmesan dipping sauce that is to die for.\"\n\n\"Well, my choice it is then,\" I said. \"You two get dressed and I'll meet you at the car.\"\n\nThey ran off with the others to the girl's locker room while I watched them go. A smile refused to leave my face. And then I turned around. Mark Landry was emerging from the boy's locker room looking like a GQ model stepping out of a magazine. He wore a Polo-style knit shirt and jeans with a leather vest. A leather studded bracelet adorned his wrist and another one around his neck. The odd thing was the shiny silver loop at the center that made it look more like a dog collar than a choker.\n\nThe other odd thing was that, despite how he dressed and his looks, he didn't walk with his usual swagger. I only had a moment to process that when he spotted me and began walking in my direction. I forced my smile back into place and tried to keep the murderous thoughts from my eyes as he approached.\n\nHe stood before me, hands in front of him, shoulders slumped, and head down. He didn't have the cocky expression I'd seen before, and he only glanced at my face on occasion. \"Mr. Brandford,\" he said sounding hesitant, \"I want to apologize for my behavior at your house last weekend. It was rude and inexcusable.\"\n\nI blinked, and no amount of will power could have kept my smile in place as my face fell in shock. \"Yes,\" I managed to say after a moment. \"It was.\"\n\n\"It won't happen again, sir. I now know the error of my ways and I'm going to be a better person from now on.\"\n\nWhat the hell was going on? I'd never seem such a turnaround in a person before, unless they were lying and just saying what they thought needed to be said to make someone happy. Mark, however, seemed so sincere in his apology that I believed it. This was the same arrogant prick who molested Linda, tried to seduce Brenda, and raped Ivory all in one night? Could he really have changed so much from the ass-hat who threatened me and insulted my daughter on my walkway? Brenda told me he had been handled. Diane told me she had an idea of how to handle him, so I guess she did. It was the trust I was willing to put in these two women that prevented me from lashing out at him. \"I hope you have, young man,\" I said, measuring my words. \"The world has too many predators and vile people in it as it is.\"\n\n\"That won't be me, sir. I've changed\"\n\n\"See that you have.\" I nodded and turned away from him to make my way to the exit. As I reached the door, I glanced back and noticed Ivory standing next to Mark. He had his hand folded over his crotch and his head bowed as she talked to him. His shoulders, which had been squared when he accosted me last week were slumped forward, so he looked small, even next to the petite Ivory. I shook my head and left the building.\n\nThe girls showed up at the car the same time I did and the drive to Mario's was quick. Brenda might have wanted Pizza Hut, but she knew Mario's was one of the best pizzerias in town. I was pleasantly surprised when Linda slid into the booth next to me and Brenda sat across from us. We just received our pizza when a loud noise broke out at the door. A pile of young people crowded in and moved to a collection of tables near ours. I recognized Bethany and Karen right away as they sat right next to us and the rest of the swim team took the other tables. This was the entire team, not just the seniors who had been to my house outside of practice, though I didn't see Tina.\n\n\"Hey Mr. B!\" Bethany said, obviously still pumped about the team's win. \"Nice to see you again.\"\n\nI felt the blush fill my cheeks, since the last time we'd seen each other she was riding my face while Karen rode my cock.\n\n\"Bethany. Karen. Good job tonight. That was a convincing win.\"\n\n\"We did good, didn't we,\" Karen said with a bright smile. \"But this girl here,\" she said shouldering Linda, \"is the reason we won. Did you see her freestyle?\"\n\n\"I did, and I don't know that I've seen better.\"\n\n\"We're going to state this year for sure,\" Linda said as though it was a forgone conclusion. Then the girls broke into a conversation about the next meet and devised strategies for winning that one.\n\nIt filled my heart to hear her talking about the team as though she planned on staying with it, and I couldn't help my smile. Brenda caught my eye and nodded as she arched her eyebrow and smirked at me. It was like she was reading my mind.\n\n\"Hey guys!\" A loud voice from the door took everyone's attention. Tina came in followed by a tall, thin dark-skinned girl. They could have been a vaudeville act, Tina's shortness being accentuated by her friend's height. \"Did we stomp Alief or what?\"\n\n\"Tina,\" the dark girl rolled her eyes. \"That's not fair.\"\n\n\"Don't worry Ny. I'm just bustin' your chops.\" Tina turned toward the group. \"Sorry we're late. I didn't get the text that we changed plans from Pizza Hut. Good thing I found Ny, here and she knew about it.\"\n\nBrenda must have noticed my confused expression. \"That's Nyisha Jackson. Her family just moved here from Alief.\"\n\nThere was more she wanted to say, but she hesitated. I raised my eyebrow. \"And?\"\n\n\"She was the captain of their swim team,\" she said. \"Now, she's joining ours.\"\n\n\"And you think you guys won because she wasn't swimming for them?\"\n\n\"No. But she probably thinks so. I know that the rest of her old team does.\"\n\nTina and Nyisha joined Bethany and Karen at their table, and I sat back down as the girls began dissecting the meet yet again. I was curious about the coincidence that they happened to change plans to Mario's from Pizza Hut, but decided it was no big deal if Brenda told them. The team ordered pizzas and pitchers of sodas and there was a lot of hooping and hollering that Friday night at Mario's. I just sat back and watched them being teen-agers and wishing I still had a tenth of their energy. Or their metabolism. Those young people finished off more pizza than I'd ever seen consumed in one sitting.\n\nI caught Linda looking at me off and on, and I tried not to let her catch me looking at her. I felt like a high school kid gawking at an impossible crush, which was made worse by the way she kept her thigh in constant contact with mine, and often leaned into me as she reached for things or talked to Brenda.\n\nBrenda, for her part, was doing her best not to laugh at my predicament. She had to know what Linda was doing to me. The knowing look in her eye spoke volumes.\n\n\"Well, it's getting late, and I have to get Linda home,\" I said stretching my arms. The waitress had announced a last call for Pizzas and drinks a while ago, so it had to be close to closing time.\n\nLinda and Brenda shared a panicked look which disappeared quickly when Linda turned to me. \"Oh, but I thought I'd stay over with you tonight. My folks already said it was okay.\"\n\nGiven all that's happened, that sounded not only possible, but likely. \"Oh, well, that's fine, I guess. I didn't know that was the plan. Brenda?\"\n\n\"Actually, this is the first I've heard of it, too. But can she?\"\n\n\"I already said yes. But you both should know by now I don't like last minute surprises.\"\n\n\"I'll keep that in mind for the future, Mr. B,\" Linda said, leaning her head against my shoulder.\n\nAs we stood, Karen turned toward us. \"Hey, where're you going? The party hasn't even started yet.\"\n\n\"Yeah,\" Bethany added. \"We're going to Kiki's after Pizza. You should come with us.\"\n\n\"Well, the girls need me to get home, and you don't want an old man like me at your party.\"\n\n\"Mr. B,\" Bethany said with a grin, \"we definitely want you.\"\n\nI sensed Linda tense up at Bethany's innuendo, but she didn't say anything. Brenda looked intrigued, and dare I say hopeful that I would agree. Karen grinned her agreement before moistening her lips, catching her lower lip with her teeth in the process. I thought back to Tuesday when she practically begged me to fuck her again. The look in her eye was the same.\n\n\"Besides,\" Bethany continued, \"Kiki's parents are in Cabo, so the party really needs a chaperon like you. You know, to keep us wayward teens in line. Who knows what could happen without adult supervision?\" She barely contained the laughter.\n\nNow the coincidence about coming here was looking less like a coincidence and more like a setup. The idea didn't anger me, however. In fact, it was quite flattering to think that these girls had decided to maneuver me into joining them for a celebratory party. All eyes turned to me, and ten teen-agers all got quiet as they waited for my decision. The only people who weren't there were Tommy and Ivory. And Mark Landry, but that was no loss.\n\nI looked at Brenda and the sparkle in her eye told me her preference. Linda was looking up at me as well, but her expression was more difficult to read. Linda's athletic performance was a key factor in the team winning the meet, and she should want to enjoy celebrating with her teammates, but until that morning, she had been ready to quit the team because of the games they had been playing. Although no one mentioned the games, Bethany's innuendo was full of sexual undertones. She was horny and wanted to play. I could see in Brenda's eye that she wanted to as well. Just last week, that idea alone would have made me shut down the whole discussion, but this was a new day. Everyone involved was of legal age and could do what they wanted, including my Brenda. Even if I shut her down, she would not change her mind about it. The best I could do was shepherd her through this phase of her life.\n\nLinda, on the other hand, was not my daughter, and according to her, was not into playing the games the others played. Although Brenda did say she liked to watch. Maybe she would want to go. \"Do you want to go to the party?\"\n\n\"If you want to, I guess.\" Not exactly a strong affirmation, but she also didn't seem to object. \"Maybe for just a little while?\"\n\n\"Right,\" Brenda chimed in. \"Just a little while. Hour, two, tops.\" She smiled at me the way a contractor smiles when quoting an estimate on home repairs.\n\n\"Well, okay, I guess. But,\" I turned to Bethany and Karen, \"no alcohol and no drugs.\"\n\n\"Mr. B!\" Bethany drew back, visibly insulted. \"I thought you knew us better than that.\"\n\n\"I do. And I know you never have when you've been at my house, but Karen's house isn't mine, so I just want to go on record. Just in case someone else,\" I wiggled my finger at the rest of the team, \"brings some.\"\n\n\"Oh. Right. Well, don't worry about it,\" Karen said. \"If my parents thought I was doing anything like that, they'd take my car and my allowance.\"\n\n\"As long as we're on the same page.\"\n\nAnd with that, everyone filed toward the door. As they walked, Brenda was huddled with Bethany talking in whispers, pausing to glance back at me before giggling with Bethany. Linda hung back and hooked her arm in mine as we followed the crowd to the parking lot.\n\n<p align=\"center\">#</p>\n\nKaren's parents must be loaded. We caravanned into the same neighborhood that I'd been to the week before for Diane's party. The lots were huge and shrouded by large old forest trees. We filed into a long driveway, parking near a pair of over-sized wooden doors inset in marble arches. Cherub fountains flanked the doors, which opened as we approached. An older gentleman held the door open as the kids filed past the foyer into the great room. As Karen entered, he nodded.\n\n\"Miss Goffe. Shall I prepare hors'derves for your guests?\"\n\n\"No, that's alright, Scranton,\" Karen said without looking at the man. \"We've eaten. We won't be needing you for the rest of the evening. So have a good night.\"\n\nThe elder man eyed the young crowd before lighting his eyes on me standing by the door. Evidently having me there put his mind at ease. \"Very well, Miss. I'll just lock up before I go.\"\n\nKaren and Scranton vanished leaving us alone in the foyer. Linda was still next to me, her hands clinging to my arm. \"Wow,\" she said in a whisper. \"I never knew how loaded Karen's parents are. She's always letting everyone else spend money when we go out, but she's rich.\"\n\n\"Well, her parents sure seem to be. But that doesn't mean she is. They may not give her an allowance like Bethany has.\" I didn't mention that most people got rich by spending other people's money.\n\n\"I sure wish my parents would.\"\n\n\"I'm sure Brenda wishes I would, too. But I don't make nearly this much.\" I waved my arm at the vaulted arched ceiling painted in a fresco and the spiraling staircase lined with large oil paintings. It felt like we were in a museum. It didn't escape me that Mr. Goffe could probably have funded the entire swim team season by selling just one of the paintings in his house. I also wondered if either of the Goffes were at Diane's party last weekend. That would be awkward.\n\nMusic exploded from the great room, then settled down to only an ear-splitting level instead of a heart palpitation level.\n\n\"Why are you hanging out in here?\" Karen appeared in front of us, having lost her shoes somewhere and loosened her hair, and grabbed both of us by the hand. \"Come on. Let's dance!\"\n\nI again wondered where they get their energy as it was already after 10, and they showed no signs of slowing down. Of course, I remember the parties in college lasted a lot longer than midnight, and I had no problem getting tired back then. I let Karen pull me into the room where Brenda was already dancing in the center of a crowd of other kids. She didn't seem to be dancing with anyone in particular, just dancing for dancing's sake. Karen let go of my hand when the beat of the music made her start bouncing and swirling with each step, but she pulled Linda into the gyrating throng with her. I saw Linda's red-blond locks spin as she looked back at me before she, too, started bouncing.\n\nI looked around the room and counted the young bodies. There were fewer here than at Mario's and everyone here was a senior, and most of them were at my house on Tuesday. They must have ditched the underclassmen after Pizza. I didn't have time to contemplate the implications when Bethany appeared beside me.\n\n\"Don't you dance, Mr. B?\" Like Karen, Bethany had relaxed her look. Her brown waves cascaded around her face and she had freshened up her makeup. She wore a loose top tied just below her ample breasts and stretch pants that hugged every inch of her long legs and tight ass.\n\n\"Not usually and not without some lubrication that you don't have,\" I said with a smile. \"Or at least you better not have.\"",
        "\"Oh, stop it, Mr. B. You don't have to act like a dad all the time. Let loose. Have some fun.\" To emphasize her point, she began gyrating to the beat from the stereo, her breasts swaying in her top, evidently unfetter by a bra. \"Come on. Dance with me.\"\n\nI engaged in a battle with myself as I watched her ample figure move. On one hand, the idea of rubbing up against that body was enticing, but I was a 44-year-old man in a room full of 18-year-olds. Add that I was never much of a dancer and that I had a bad leg made me feel more than a little uncomfortable with the idea. Even as I thought all that, however, my feet decided for me and soon I was shuffling along to the beat, although not as exaggerated in my movements as the kids.\n\nIt was easy to get lost in the music. The Goffe's entertainment system was tied into the room lighting and the colors changed with the beat of the music, making the room seem more like a dance club. Again, I was struck with how much money Karen's family must have to afford a place like this, but the thought flew from my brain as Bethany backed up against me, grinding her ass into my hips to the rhythm of the music. Next to me, Tina was dancing with Karen and Nyisha, their hands constantly in motion touching each other as they allowed the sounds to move them. Linda's hair appeared and disappeared amid the bodies as they moved across the floor. Clearly, she was enjoying the dancing. Brenda had turned her focus to a boy and was moving in time with him, but kept her hands to herself. She saw me dancing with Bethany and smiled, raising her hands over her head and began more exaggerated movements as if teasing me. A hand on my shoulder pulled my attention back to Bethany who place her hands on my chest as she swayed her hips. Her eyes locked with mine and I could tell what she was thinking. My little head was in complete agreement as she ran the tip of her tongue across her lip. Pulling her arms close to her body forced her ample bosom to squeeze together, creating a crevice of cleavage jiggling in her top refusing to be ignored. She leaned forward, making them even more pronounced. This girl knew how to accentuate her attributes, that much was certain.\n\nThe music didn't stop, although it did change. One song morphed into another and the gyrating of the dancers kept right on going. Bethany stayed close to me, but Karen came over and took my attention for a while. Between the two of them, I had a hand on my body at all times. Hands touched my shoulders, my pects, and even my ass on more than one occasion. The constant touching and the close proximity of hot young girls was having an effect on me. I turned around at one moment and another pair of hands wrapped around my waist. I looked down into Brenda's eyes as she danced with me.\n\n\"Hey, Daddy,\" she shouted over the music. \"Having fun?\"\n\n\"I am,\" I said, surprised by my answer. \"I really am.\"\n\n\"Good. I'm glad. You deserve to enjoy yourself. I never knew you could dance.\"\n\n\"Well, I haven't had a reason to. Until now.\" I cocked my head as a though hit me. \"Until you brought me here. Thank you.\"\n\nBrenda beamed at me as she danced. Her skin was flushed from dancing and her eyes sparkled and I couldn't help smiling back. She pulled me into a hug, and I returned the squeeze just as the music shifted into a slow dance. We began dancing a slow shuffle with her head resting on my chest and her hands around me. It felt wonderful, but after a few seconds, I took her right hand in my left and put a few inches between as we danced. I gave her a wink as she blushed a smile at me. After a few more moments of dancing, someone tapped my shoulder.\n\n\"May I cut in?\" It was the young guy from Tuesday's party in Brenda's room.\n\n\"If the lady says so,\" I answered.\n\nBrenda nodded, her smile never faltering. I let go of her hand and stepped back as the young man and Brenda wrapped themselves up in each other. There was only the smallest flicker of possessive rage in my belly seeing them together, but I tamped it down. I didn't have time to dwell as I was turned around and Karen wrapped me up in her arms.\n\n\"May I?\" She asked.\n\n\"My pleasure.\" We began to dance the same way the other kids were, full contact, no separation.\n\n\"You're a good dancer,\" Karen said.\n\n\"For a guy my age,\" I finished with a chuckle.\n\n\"No, really. You dance well. You're moves are smoother than most guys I've danced with.\"\n\nI remembered Bethany's words about Karen avoided guys after a bad first experience. I guess that applies to dancing as well as sex. We danced for a while, then Tina wanted to dance, followed by Nyisha. I was a little more reserved about dancing with her, since I just met her. She, on the other hand, didn't seem to be shy about it at all, molding her body to mine as we shuffled back and forth.\n\n\"Everyone seems to think your, like, a superhero or something,\" she said as we danced.\n\n\"Well, I just supported the team when it needed it.\"\n\nShe cocked an eyebrow. \"That's not what I heard. I heard you rang some bells at a party.\"\n\nThat stopped me dead in my tracks. I should have anticipated it, since Brenda told me that news spreads quickly on the team. I was trying to come up with a response when Nyisha pulled me back to the dance.\n\n\"Don't worry, Mr. Brandford. I can keep a secret. As well as the rest of them, anyway.\" She chuckled as she rested her head on my chest. She was taller than the rest of the girls and she almost reached my shoulder. \"It does make me wonder what all the fuss is about. I'd like to find out for myself.\" I could feel her press her slim hips into mine, where my swelling cock had a mind of its own. \"Maybe I will?\"\n\n\"Who knows what the future holds,\" I managed to say with a half-grin. What was going on?\n\nI had been on my feet for longer than usual and I was getting tired. When the last slow song finished it was replaced by another techno beat-driven number driving everyone to jump even more frenzied than before. I took that as my cue to slide away for a break. I spotted a pair of French doors that hopefully opened onto a patio where I could get some air. Fortunately, my assumption was correct, and I was greeted by a nice cool breeze as I stepped outside. There was a hot tub and a small lounging pool in the spacious backyard, and it had the kind of patio kitchen I always dreamed of having. Flowers and shrubs covered the lawn which extended into the darkness beyond the patio light's reach.\n\nAs pretty as the yard probably was, I was fixated on another miracle of nature, which was leaning against a column looking into the night. \"Hey there,\" I said as I slipped up next to her. \"How's my MVP? Are you tired already?\"\n\nLinda jumped at the sudden intrusion. \"Oh, hey Mr. B. Yeah, I like dancing and all, but it was getting to be a bit much. And so loud.\"\n\n\"I know, right?\"\n\n\"But, no, I'm not tired. I guess I'm still stoked about the win and all.\" She smiled. \"Thank you for that.\"\n\n\"Oh, don't thank me. That was all you.\"\n\n\"Well, yeah, but if you hadn't given me that pep talk, I doubt I would have felt like trying. I kept what you said in mind as I got up to the block. I just kept saying it over and over.\"\n\n\"What I said?\"\n\n\"That you like to see the fire in my eyes.\" She looked down to hide the blush creeping into her cheeks.\n\n\"Well, I do. You have such an energy, I never tire of seeing it, or you.\"\n\n\"Mr. B!\" She buried her red face in her hands.\n\n\"What did I just say?\" I took her hands away and locked my eyes on hers. \"I like looking at you. You have such a beautiful smile; I want to see it.\"\n\n\"You just want to see me blush.\"\n\n\"It's part of your face, isn't it? And I love looking at your beautiful face.\"\n\nHer eyes grabbed me and held me fast. I was still holding her hands as I beheld her. Her face tilted forward ever so slightly. The warm light from the patio caught her profile, highlighting the arc of her smiling cheek and accentuating her dimple. Her full lips curved into a coy smile, but her eyes...her eyes could stop a heart. They stopped mine in that moment, and no force on Earth could have prevented what happened next.\n\nI had no conscious thought. I had no plan. I didn't make a decision any more than I decided to breathe. I leaned down and kissed her.\n\nIt wasn't like the little kisses we had given each other over the past two weeks of comings and goings. It wasn't a prelude to passion, either. Feeling her tender lips slide over mine until we found that sweet spot of perfect harmony where we fit together awakened something inside of me. There was no hungry battle of tongues. No mashing of lips. No biting or sucking face. We stood there neither moving, connected to one another so deeply that I don't remember breathing. I reveled in the perfection of that moment of togetherness. It was a feeling I hadn't experienced since my wife died, and I never thought I would feel again.\n\nWhen I pulled back, I had to force my eyes open, unaware I had closed them. Linda stood still holding my hands, trembling, her eyes closed, and tears streaked down her cheeks. What had I done? Had I misread her? Did she not want to kiss me? Was I so wrong about everything? \"Linda! What is it? Why are you crying?\"\n\n\"My heart...\" she said opening her eyes and gasping a breath. \"My heart's exploding.\" She flung her arms around me, squeezing me as though afraid she would fall.\n\nI picked her up and carried her to a nearby chair holding her in my lap as I sat down. \"Are you okay?\"\n\nHer eyes were searching mine, looking to see if I felt anything close to what she was experiencing. \"I'm...I don't...\"\n\nI couldn't think of anything to say, my mind was still not engaging. I just leaned in and kissed her again. She sighed into the kiss and moved her arms around my neck. I could feel her heart thumping in time with mine as we pressed our bodies together. Our movements were in sync as we shifted and shared our kisses. The perfect moment of stillness now more of a dance as I gave her several small kisses in succession. I could feel her draw her breath when I drew mine. After a forever moment, we pulled back and stared into each other's eyes.\n\n\"Are you okay?\" I smiled as I asked.\n\nShe smiled back. \"Never better. Never in my whole life.\" Her smile grew. \"I've, uh, I've always dreamed of this moment. But I never dreamed it would be like this.\"\n\n\"I never expected this either,\" I said. \"But I've never experienced anything like this. I...I don't know what to make of it. But I'm not going to try to figure it out. I just want to enjoy the moment with you.\"\n\nLinda nuzzled my neck, pecking my shoulder with little kisses as her hands became familiar with my chest. \"Me, too.\"\n\nI smiled and kissed the top of her head when I noticed movement at the French Doors. Brenda was there smiling the biggest \"I-told-you-so\" smile ever recorded. Her glee at being right was so apparent in her face that I almost missed the fact that she was stark naked.\n\n<p align=\"center\">#</p>\n\nBrenda walked back into the room away from the door. I was torn about what to do. Clearly, another sex party had broken out or was about to, and I was curious about it, but I just kissed Linda. We hadn't talked. We weren't dating. I had no idea what to do in that moment.\n\n\"What is it?\" Her brow was furrowed as she looked at my face, then her eyes grew wide. \"Are you sorry we kissed?\"\n\n\"No! Never,\" I said before kissing her again for good measure. \"I'll never regret that. It's just that it seems that people are naked inside. My guess is there's some sex going on in there.\"\n\nHer eyes stayed wide open, but the corners of her mouth curled up. \"Oh, really?\"\n\nShe hopped off my lap, grabbed my hand, and strode with purpose to the door as I followed. I'm not sure what I expected when I got there, but Linda grabbed both doorknobs and swung both doors wide open before marching into the room. The dancing had stopped, but the music continued, albeit at a slightly lower volume. Every member of the team was naked and sitting on the couch, love seat, or the few chairs around the room. There was some intimate touching going on, but no overt sexual activity. It was as though they were all expecting something. Everyone looked at Linda and me as if waiting for one of us to say something, but I was speechless, and Linda simply took my hand and led me over to the couch where Brenda had left two spaces next to her for us. As we drew closer, I could see each person was wearing the swinger heart pendant, including Brenda.\n\n\"Here,\" Brenda said patting the cushion of the couch next to us, \"sit here.\" She grabbed Linda's other hand and direct her to sit next to her, so I took the empty cushion on the other side of Linda. \"Good timing. Ivory and Tommy are almost here.\" Then Brenda looked around Linda at me, pausing to notice that Linda still held my hand while we sat. A huge smile spread across her face, which Linda mirrored and the two began whispering and giggling at each other.\n\nI rolled my eyes at the pair. I normally would have felt self-conscious being one of only two dressed individuals in a room full of naked people, but the whole week had been so surreal, I simply ran with it.\n\n\"So, Dad,\" Brenda pulled my attention back. \"This is the club we talked about. There is no pressure here. That is the biggest rule of our club. No means no. No one has to do anything they don't want to do. Linda has sad no a lot. She hasn't been willing to participate in all the activities of the club. She doesn't wear the heart.\"\n\n\"Why not?\"\n\nBrenda looked the question at Linda, who turned to me. \"Because I don't want to have sex with other people.\"\n\nI blinked. \"Why not?\"\n\n\"Because I only want to be with people I love. These are my friends, and I love them as friends,\" she drew a breath, \"but that's it.\"\n\n\"The team had a long discussion about that, Linda. And we only want you to be happy. You don't have to take the heart if you don't want it.\"\n\n\"Can I still watch?\"\n\nBrenda's smile came back with a laugh. \"Of course.\" She looked at me. \"See? I told you.\"\n\nThe doorbell rang and Karen and Bethany hopped from the love seat to answer the door naked. I shook my head again. Young people. After a few minutes, they returned with a naked Tommy in tow, followed by a naked Ivory. She held a leash in her hand leading a nearly naked Mark Landry into the room. He wore the same leather collar I saw earlier at the meet, but Ivory's leash was clipped to the loop. He had a leather ball gag in his mouth and a harness around his waist that covered his crotch. As they drew closer, I could see his erection straining against a metal mesh cage that was held in place by the harness with a padlock. Ivory led him to the center of the room before stopping.\n\n\"Kneel, dog,\" she said.\n\nLandry promptly dropped to his knees.\n\nIvory removed his gag. \"Kiss my feet.\"\n\nLandry bent forward and kissed her toes and her arches until she stopped him with a stern command. He sat back up, waiting for her next instruction.\n\nI was thunderstruck. This was the same Speedo boy who threatened me and Brenda? The same guy who tried to force his way with Linda? I looked my question at Brenda.\n\n\"Coach West taught Ivory how to be a Dom. Well, she's still teaching her. Anyway, Coach took your advice and persuaded Mr. Landry that Mark needed to suffer some form of punishment. He threatened to cut off Mark's trust if he didn't comply with what the coach had planned. I'm not sure how she convinced him.\"\n\n\"Oh, that was my dad,\" Karen said. She dropped to her knees behind the couch and had her head between mine and Linda's. \"He's a silent partner with Landry industries. Coach West and I got him to have a word with Mark's dad.\"\n\n\"Well,\" I said, \"there you go. So, what happens now?\"\n\n\"He has to watch us all have fun, but he can't touch himself or anyone else,\" Brenda said. \"At least not unless Ivory lets him.\" She stood up. \"Okay, let's get this party started.\"\n\nEveryone hooped and hollered as Brenda walked to the center of the room. \"Okay. Warm up time. Since we have an older guest,\" she looked her smile at me, \"we'll go old school. Spin the bottle. Everyone who's playing get in a circle.\"\n\nEveryone formed a circle as though their life depended on it. I sat next to Linda content to watch. I put my arm around her, and she snuggled into my chest to watch with me. The game started tame, with kisses and the occasional grope, until Brenda spun, and the bottle landed on Ivory. Rather than kissing Ivory, Brenda pushed the blond girl back and settled between her spread thighs. \"I never said we had to kiss on the lips.\" She dove tongue first into Ivory's gash and in short order, the sodden sounds of her passion could be heard. Brenda pulled back taking Ivory's labia with her until the lips snapped back with a pop making Ivory yelp. Brenda smiled as she back-crawled to her position in the circle. As she settled in, she cast her eyes at me with a smile, and I saw in them that same flame of passion that burned in her mother's. \"Your turn,\" she said to Ivory. \"Top that.\"\n\nAfter Ivory composed herself, she spun the bottle and it landed on Nyisha, who stiffened. I assumed this was Nyisha's first exposure to the club's activities, so this may be the first time she had to kiss another girl, or maybe she was uncomfortable doing it in front of other people. A couple of the kids whispered amongst themselves as Ivory crossed the gap between them. Ivory didn't seem phased at all as she ran her fingers through Nyisha's hair and pulled her face in for the kiss.\n\nThe room was silent aside from sighs and groans of the girls as the two sucked each other's face for several moments until Brenda called time. Ivory slid back to her spot but Nyisha remained in the same position, her face still, her eyes closed, and her lips pursed for a kiss. After a moment, her eyelids fluttered open, and she took a deep breath. \"Damn, girl! You could sell tickets for that!\"\n\nThe crowd chuckled at that, and the game resumed. Some girls gave blow jobs or ate pussy instead of just kissing, and if a boy's spin landed on another boy, they either passed on the kiss, or went in for it. I saw one example of the 'no means no' rule enacted.\n\nAfter a couple of rounds, Brenda stood up again. \"Alright. Time for round two. This time we're doing 'Guess Who'.\"\n\nTwo of the guys high-fived each other, evidently liking this game. Four chairs were brought into the room and Tommy and the other two guys took a seat. I thought the fourth chair was for Landry, but Brenda surprised me. \"Come on,\" she said to me. \"You can play this one. You'll like it.\"\n\nPanic gripped me. I was content just watching, but dare I participate? I guess I could, after all I had already fucked two of the girls Tuesday, and most of the people in this room had seen me naked then. But I didn't want to make Linda uncomfortable. I didn't know where we were, but I suspected she wouldn't like me being with other girls now that we've kissed. I held my hand up. \"Oh, no. I don't think so. You guys have your fun.\"\n\n\"No, Daddy,\" Brenda strode over to me and grabbed my arm. \"You can do this. It's not like we haven't already seen everything you've got. It's all Tina has been talking about.\"\n\nI cast a look at Linda. Her face was blank as she looked at Brenda. I could see thoughts flying through her eyes and I wished I knew what they were. Linda and Brenda shared a look that spoke volumes. They were having an involved conversation without either of them saying a word out loud. Then they both smiled.\n\n\"Go on then,\" Linda said as she pulled my arm from her shoulders. \"Have fun. Don't worry about me.\" She patted me on the back to push me off the couch. \"But you have to get naked. Since I'm the only one who hasn't seen you yet, I get to help.\"\n\nBrenda pulled me up and started unbuttoning my shirt as Linda unfastened my belt and jeans. Bethany appeared and removed my right shoe while Karen removed the left. I felt like Tony Stark getting out of his Iron Man suit with the help of his robots. When I was naked, the girls led me to the chair, and before I knew it, my hands were tied to the arms of the chair. The other participants were similarly trussed, but they didn't appear worried at all. The young man who had sex with Brenda on Tuesday was in the chair next to mine. Everything went dark when a hood descended over my head, tied in place by someone behind me.",
        "\"Okay. For our new participants,\" as far as I knew, I was the only 'new participant,' \"you have to guess who is giving you a blow job. If you guess right, you get rewarded by being allowed to cum. If you guess wrong, too bad. If no one guesses correctly, the blowers get shuffled, and you get a second chance. Is everyone ready? Girls take your pick. Remember no speaking and no touching anything other than the cock in front of you. No hints. Got it?\"\n\nThe girls must have nodded their assent because I heard nothing. \"Ready? Begin.\"\n\nWarmth surrounded my cock. Whoever was in front of me didn't waste any time. No licking, no playing. Just straight suction. I thought back to Tuesday, where both Tina and Karen had blown me, and whoever was doing me now was not at all similar to either of those girls. Linda was on the couch, so she was out. Brenda wouldn't be sucking me, so that left Ivory, Bethany, Nyisha and the other two girls I didn't know. I figured Bethany and Ivory probably had more skill than this person, but I couldn't be sure. In short, I had no idea whose mouth was on my cock.\n\nI wanted to grab her head to direct her, but my hands were tied to the chair. She began face fucking herself on my cock, diving down hard. I could hear her gagging herself, filling my ears with \"awk awk awk\" as the head of my cock hit the back of her mouth. I couldn't tell for sure, but I don't think she was taking very much of me on each down stroke.\n\n\"Time,\" I heard from across the room. It wasn't Brenda's voice, so she may have been one of the blowers. \"Tommy, you're first. Who do you think was blowing you?\"\n\n\"Tina,\" he said confidently. \"I'd know her mouth anywhere.\"\n\n\"Oooh. Sorry, no. Joey, your turn.\"\n\n\"Well, if she wasn't blowing Tommy, she must have been blowing me.\"\n\n\"Again, sorry. That's oh for two. Kevin, do you think you can guess who?\"\n\n\"Bethany?\" He clearly wasn't sure.\n\n\"Damn guys. Seriously? None of you can name the girl? Okay, Mr. B. It's up to you. Who was your girl?\"\n\nI chuckled at the situation. I knew without a doubt I could pick Carrie's mouth out of a room full of girls if we'd ever been in a game like this. Decades of familiarity gives a couple that level of intimacy that these high school boys had never had the chance to experience. But in that moment, I was on the same playing field as they. I had no clue. I tossed a hail Mary guess. \"Nyisha?\"\n\n\"Oooh, sorry, no. Well, that's a clean sweep. No one wins. That means a shuffle.\"\n\nThe guys and I remained seated as girls moved around us. I sensed someone standing in front of me, but then they moved away and then back again. After a moment, another body was in front of me, and I could hear whispers before one of them left, and the room got quiet. Whoever remained took her position between my knees.\n\n\"O-o-okay,\" a new voice announced. \"If everyone is where they want to be?\"\n\nI heard murmurs from around the room before the voice continued. \"Same rules apply. No one speaks. No unnecessary touching, and no hints. If you're sure you're ready, you may begin.\"\n\nI couldn't understand the trepidation in her voice, but I didn't get to entertain the question long. A hot wide tongue caught my hard cock just north of my balls and flicked it up before catching it and holding it against my belly. That tongue undulated and wrapped itself around the curve of my cock, contacting every inch if the moist heat was any indication. It traveled up the main vein, pulsing as it moved, and bathed me in hot moist breath. She repeated the path alternating between wet kisses and long licks, the whole time only using her mouth. I never felt her touch any other part of me with any other part of her. My cock sang under her oral caress. Every nerve ending felt supercharged, and I could feel the tingle in my balls energizing up to a huge discharge. She took another long, slow lick along the underside of my shaft. When she reached the head, she speared her tongue and drilled into the spot right below the flared ridge as her lips caught and held the head.\n\nThis was a blow job to end all blow jobs. She commanded my cock with only her tongue. She never used her hands to position, hold, or stroke me. Every nerve in my shaft was firing and I felt the tingle in my balls surge. If she kept this up, I would cum before the timer ended.\n\nShe released my cock, allowing it to drop back to a horizontal position. I felt her blowing cool air along the top and the head, which served to take the edge off, but the relief was short-lived. Her lips touched the tip and I felt them spread open around the head as she began taking me into her mouth. She held my cock with the perfect amount of pressure. Just tight enough to feel every millimeter, and relaxed enough to easily slide down my shaft. My breath caught in my throat as I savored the feelings she was bringing me. As she descended, her tongue was dancing along the underside of my cock, keeping her saliva coating its length. When I felt the head hit her throat, she only paused long enough to wet her lips and reposition her head before diving forward. In no time, her nose was tickling my pubic hair as my cock was nestled in her throat.\n\nMy balls tightened and I was seconds from shooting my load into this girl's mouth when someone--it sounded like Ivory--called time.\n\n\"That's it. Time's up.\"\n\nI whimpered as the best blow job of my life came to an abrupt, frustrating end and she slurped her way off my cock. I was left panting with a burning cock quickly cooling in the room air.\n\n\"Okay, Tommy,\" the girl's voice said. \"Who was it?\"\n\n\"This time I'm certain. This one was Tina!\"\n\n\"And you are correct! Good job. Tina, you want to finish him off while we go to Joey.\"\n\nA wet slurp and a groan was evidently Tina's answer.\n\n\"So, Joey, who was servicing you?\"\n\n\"Uhm...\" he seemed unsure. \"Bethany.\"\n\n\"Again, correct! Bethany did you give him a hint?\"\n\n\"No, not at all,\" Bethany said. Her voice was close enough to him to be her.\n\n\"Alright. If you say so, but I'm still suspicious. Kevin? Who was your blow job queen?\"\n\n\"Brenda,\" he said with more confidence than the last round.\n\n\"Tsk, sorry, no. And since both Joey and Tommy guessed correctly, that leaves you out. Mr. B? If you can name yours, she'll finish you off.\"\n\nI was wracked with a quandary. Whoever had blown me had more experience than I imagined these girls having. She was a master of technique. But, what made me almost sick to think about was that little technique she used at first. Using the tip of her tongue to catch the spot below the flare of the head. I felt my cock lurch when I thought about it. Carrie used to do that. Carrie wrote about it in her diary. Only one person I knew of had read that diary. That realization made my head swim.\n\n\"Mr. B?\"\n\nI couldn't name her. I couldn't call her out. If she did it, then everyone saw her do it, so the scandal is already out. But if she didn't do it and I called her name, that means I thought she would blow me in public. That would be a whole different scandal.\n\n\"Karen,\" I said, knowing in my gut it was wrong. The body in front of me left for a second before settling back.\n\n\"Oh!\" the voice said. More murmurs from the room, and fear began to gnaw into my stomach. \"Uh, that's right. Good job.\"\n\nThe hood was removed, and I saw Karen kneeling before me. Her lips curved into a smile, and I noticed she had lipstick on. \"Okay, Karen, finish him off.\"\n\nKaren smiled before lifting my cock with her hand and sucking me into her mouth. The sensation was entirely different as was her technique. I watched her bob her head up and down, then looked around the room. Bethany was blowing Joey, and Tina was still sucking on Tommy. Mark Landry was standing next to Ivory, his hands stacked over his caged crotch. Nyisha was in an overstuffed easy chair, her fingers lazily stroking her pussy--not trying to cum, but more keeping her fire at a simmer. Brenda was sitting on the couch, her arms wrapped around a now-naked Linda. Brenda's lips were red, and not from lipstick, and she had what looked like saliva drips between her breasts.\n\nKaren was doing a very nice job on my cock, but nowhere near as good as the blow job I enjoyed while masked. The tingle I felt earlier was waning, and I realized it was because I was over-thinking. Just enjoy the blow job, Barry, I told myself. You have a beautiful naked girl sucking you in a room full of young beautiful naked girls. Of course, the most beautiful was sitting with my daughter. Naked. Very naked.\n\nHer eyes caught mine as I sat there looking at her. I knew I could easily see her beautiful breasts, or her taught belly, but it was her face that held my attention. She was radiant. She was gorgeous. She was transcendent. Her beauty filled my heart and soul until there was nothing else. Suddenly, I didn't want Karen blowing me. I wanted Linda. My Linda. But I couldn't leave Karen like that. It would be rude. It might hurt her feelings. As if hearing my thoughts, Linda smiled at me, then turned her face to Brenda and whispered something to her. Both girls grinned at me, sharing some secret between them they would probably never tell me. Then Linda kissed Brenda. Brenda kissed her back. My eyes burned as I watched the two of them press their lips together, their faces moving back and forth against each other. The room vanished. All I could see was my daughter's lips dancing over the same lips I had kissed just a few minutes earlier. My heart jack-hammered in my chest as I watched them. Every few seconds, one or both of them would look over at me before returning to their kiss.\n\nAfter Linda pulled back and winked at me, I watched as she trailed kisses down Brenda's neck to the valley between her breasts. My cock lurched in Karen's mouth when Linda licked the tip of her tongue around Brenda's full breast before catching the silver barbell in her teeth and pulling Brenda's nipple into a cone. Brenda gasped at the sensation as she arched her back. My balls tightened as Brenda's knees fell open, and Linda didn't waste the opportunity to slide her hand into Brenda's exposed crotch. The tingle I had lost re-emerged as high voltage as Karen began face fucking herself on my newly revitalized cock. When Linda lowered her face between Brenda's legs, I lost it. My cock swelled, my balls tightened, and I shot ropes of cum into Karen's mouth, grunting with the force of my orgasm. My vision clouded as I came, and when it cleared, I saw Karen licking the residue of my cum from my shaft, her lips and chin shiny from the globs of white.\n\n\"Mr. B, you taste fantastic,\" she said between licks. \"Did you enjoy that?\"\n\n\"You're tasting the answer to that question,\" I said, even though it wasn't her mouth that finished me.\n\n\"And you're still hard. Goody. I hope I get to use this later.\"\n\n\"If you're a good girl.\" I smiled at her and she grinned back.\n\n\"But what if I want to be a bad girl?\" There was a glint of mischief in her eye.\n\n\"I think we can work something out.\"\n\nShe stood up, keeping her hand wrapped around my shaft, and moved to straddle me. As she moved, I saw over her shoulder to the couch where Linda pulled her wet face from between Brenda's legs. My daughter was panting and trembling as Linda turned toward me. Karen directed the head of my cock toward her honey pot, and I could feel the heat before she got close enough to touch it. \"How about now? Can we do it now?\" I saw a flash of panic in Linda's eye when it looked like Karen was going to sit down on my cock. Karen sighed as she fondled me. \"I want this inside me.\"\n\n\"Ah, ah, ah,\" Ivory said from the middle of the room. \"Not yet, Kiki. We still have a few more games to play before that.\"\n\n\"Damn,\" Karen whined before she stood up, releasing my cock which bounced back to my belly. \"Save that for me. I call dibs.\"\n\nI don't know why, but I felt relieved. Karen was a beautiful girl, and I thoroughly enjoyed fucking her on Tuesday, but I didn't want to do it now. I couldn't explain it. I rose from my spot in the row of chairs as Bethany was cleaning Joey's cum from her chin. Tina was sitting with her legs crossed just watching, and Tommy was lounging in his chair slack jawed with a satisfied gleam in his eye. I looked back at the couch and Brenda had recovered from her orgasm and was sitting up with Linda's head on her shoulder. Linda's mouth was still gleaming from the drying juices coating her lips.\n\n\"Okay everyone,\" Ivory said. \"It's time for blackout. Remember just like always, anything goes, but no always means no. If someone touches you and you don't want to be touched just say 'No.' If anyone refuses to honor that, the game will come to a stop and that person will be gone. Clear?\"\n\nEveryone murmured their assent. \"Cool. Kiki, if you will.\"\n\nKaren found a remote control, and, with the press of a button, heavy curtains covered the French doors and windows. With another press, the lights dimmed. \"Get where you wanna be,\" she said. \"It's about to get dark in here.\"\n\nYoung people shuffled around the room as the darkness spread from the corners to blot out everything. I was still standing near the chairs, and I felt bodies moving around me. I stepped in the direction of the couch where Linda was sitting but ran into a solid body coming the other way. A male voice mumbled an apology before he moved off. A gasp and a giggle erupted from my right, and a sigh and a groan from my left. The disorientation confused me as I took baby steps toward the couch. I hadn't been so totally in the dark since my Army training all those years ago, and I could only hope I was going in the right direction.\n\nA hand touched my shoulder making me jump a someone came up behind me. \"Hey, Mr. Brandford,\" the female voice whispered in my ear, \"you're easy to pick out in the dark.\" Another hand ran down my chest sliding toward my crotch. \"Do you like it in the dark?\"\n\n\"I like it any way I can get it,\" I said. Where was this coming from? I felt like a lounge lizard at a meat market with these cheesy come-ons. I got the feeling that my suitor was Nyisha, given that she was the only girl tall enough to whisper in my ear. As attractive as she was, I wanted only one girl in the room that night, so I shouldn't be giving her encouraging come-ons.\n\n\"I like that about you,\" she said as her hand covered my semi-erection. \"But I like this even more.\" Her fingers encircled me and, despite my reticence to encourage her, my cock responded to the warmth of her hand. \"Wow,\" she breathed, \"it feels even bigger than it looked.\" Her hand had begun a slow stroke up and down the length of the shaft. \"I can see why everyone's been talking about it all week.\"\n\nHeat rushed to my face. From what I noticed from the other guys in the blow-job chairs, I didn't consider myself that much bigger than them. I'd never considered myself a sexual object before, and the praise was at the same time gratifying and embarrassing. Clever repartee left me that moment and I could only respond with two words. \"Thank you.\"\n\n\"I want to feel every inch of this inside me.\" Despite my intentions, my hard-on had my little brain thinking in overdrive, and it wanted nothing more than to be balls-deep in the Nubian goddess so effectively stroking me.\n\nBefore I could form a reply, she continued. \"But someone else has called dibs on you.\"\n\nDibs again? Like a child's plaything? Before I could consider the implications of that, she pulled me by the dick toward the couch, then spun me around when my knees found the edge of the cushions. She tugged me down and sat next to me, her hands never breaking contact with me.\n\n\"Slide your hips to the edge,\" she said, \"and sit on your hands.\" Her hands pulled mine to the cushions and held them there.\n\n\"Look,\" I started to say when I felt another body straddle my knees, and a pair of hands grasped my shoulders. Full lips found mine and I felt a mass of hair fall across my face. The lips on mine moved tentatively at first, then with increasing passion, drawing me into the kiss, igniting my fire. I wanted to touch this person, to feel her face. The kiss was exquisite, but was it Linda? Was it Karen? I wanted Linda, but my fire was raging, and rational thought burned away in the heat of the moment. I needed to touch her; to know who was driving me mad with passion. I couldn't move my hands, however, as Nyisha was holding them to my thighs. She had a surprising grip.\n\nMy partner settled into my lap, trapping my throbbing member between us as we kissed. Her hips rocked slowly against me as her lips danced on mine. I could hear her draw a breath between kisses, followed by a soft moan when our lips met again. Her hips settled into a rhythm as she dredged her pussy along the shaft of my cock. It felt similar to what Karen had done on Brenda's birthday, like a wet dry-hump. Her kisses sucked the air out of me as her fire grew and her hips tick-tocked on my cock. I felt her molten core searing my vein as her pussy lips spread open under the stimulation of our coupling. Our breathing took on a ragged edge as I sensed her orgasm approaching. While I felt a tingle in my balls, I wasn't ready to cum yet, so I focused on matching the rhythm of her thrusts by lifting my hips to meet hers. I could feel her wetness spreading over me even though I had not penetrated her.\n\nShe whimpered and gasped into our kiss, and her hands gripped my shoulders for dear life when her orgasm hit. Her hips jerked with her tremors as she rode the waves with her mouth held to mine through sheer suction. My balls were saturated by molten heat as her cum poured out of her.\n\nAfter a few moments of her twitching on me, she got up and moved away. The sudden absence of her left my cock cold and wet, though not for long. Another body settled over me, this time, judging from the angle, I had to assume she was backing up to me. As she settled on to me, her hands gripped my knees to brace her weight and the globes of her ass trapped my cock in between them, she began a slow rocking motion. Again, I was overcome with the desire to touch this person, but again, Nyisha's grip kept my hands at my side.\n\n\"Just go with it,\" she whispered in my ear. \"Enjoy it. We are. Here,\" she moved my right hand, bringing it to her soaking core, \"if you must touch something, touch this.\"\n\nShe was hot and she was wet. I didn't feel any pubic hair as my fingers easily spread her lips and dipped deep into her heat. Two, then three fingers curled inside her, tickling the tender flesh under her mons. Based on the lack of resistance, I knew she could easily take more.\n\nMy left hand was moved, and I realized that Nyisha had only been holding my right hand. Someone else was gripping my left, and it found itself tickling a different pussy that had settled next to me on the left. I had no idea whose pussy I was fingering, but she seemed to enjoy it as she held my wrist to her crotch. I sat there in the pitch-black darkness, utterly devoid of light and unable to see, the only senses I had was the feel of the hot, wet pussies, the sounds of passion that filled the room, and the smell of sex that permeated every fiber of my being. There couldn't be a more perfect example of anonymous sex than what I was experiencing. I could hear the unmistakable sounds of hips slapping together, and the cries of passion from other corners of the room.\n\nI felt almost outside myself as my different senses processed what was happening. I've always gotten turned on watching sex. I know I'm a voyeur. Sure, I love having sex, but what I was experiencing was not sex like I knew. Having sex and watching sex were always two different things. Until last week, I kept them separate. Lately, however, sex has become so much more. Watching still turns me on, but to hear it without seeing, to feel it without touching, and to smell it without participating all combined to take me to a whole new level of excitement.",
        "The girl grinding on my cock rose and another took her place. I was so caught up in my sensations that I didn't notice if she came or not. Two more girls similarly wet-humped me, but then something changed. The next one didn't waste time dry humping. Her hand grasped my cock, dredged the head through her lips and then she sat on it, trapping it inside a tightness that threatened to strangle it.\n\n\"Hey!\" A female voice cried out but was immediately silenced with several hushes from the others. \"But I was...\" more hushes, more forcefully delivered. If my ears were accurate, the complainer was Ivory. So, I knew Ivory was probably next, and Nyisha was sitting to my right, but I had no idea who was so effectively fucking me senseless.\n\nAs she rode me, her pussy was sucking my cock. I could feel it tighten and relax with each stroke. I remember Carrie learned how to flex her Kegel muscles when she took Lamaze classes when she was pregnant with Brenda. She could do this. It was a marvelous feeling, and my pending orgasm built up pressure. Then she leaned back, I felt her lay on my chest and her weight shifted as though she wasn't supporting herself with her legs. My cock was still embedded inside her, but a warm breath covered my balls seconds before a wet tongue bathed them. I sensed I was enveloped by hot bodies converging on me.\n\nThe girl whose pussy was milking me rose up and slid down, obviously being helped by other hands supporting her weight. With each trip up my shaft, that hot tongue would run over the newly exposed cock before she came back down. I had a moment of lucidity explode in my brain when I realized the different sensations I was simultaneously feeling. It felt as though five or six girls were all involved in fucking me at the same time. I was fucking almost the entire swim team at once.\n\nMy brain exploded with that thought, which caused my nuts to draw up and fire. Every muscle in my body clenched in convulsion as the orgasm drew strength and power from every cell. It traveled through me from the ends of my hairs to the tips of my toes, all flowing to my core and exploding in thick pulses through my erection and into the scalding pussy surrounding it. I cried out as my body spasmed, forcing me to jerk my hips with each contraction. I wouldn't have been surprised if the force of my cum shot the girl off my cock.\n\nAfter the first five or six surges passed, I could breathe again, although I still had aftershocks. The body on top of me lay there for a few moments catching her own breath and suffering from her own tremors.\n\nAll too soon, she left me, as did many of the others who had been around me. Nyisha let my hand go and nuzzled my neck. \"I hope you enjoyed that. I just wish you hadn't cum yet. I was so looking forward to getting my ride, too.\"\n\n\"Maybe next time,\" I said between panting breaths. \"I think I'm done for tonight.\"\n\n\"I'll hold you to that,\" she said and then she kissed me.\n\nThe lights returned slowly, allowing our eyes to adjust from the utter darkness. Nyisha was next to me on my right, and Bethany was to my left. Linda sat on the floor in front of the couch by Nyisha and Brenda was in front of Bethany. Just a few feet away, Karen was laying on top of Kevin, his softening cock still inside her slick pussy. Evidently, she was warming to the idea of having a hard cock inside her. Next to them, Tina was licking Joey's cum from his flaccid member. Sated bodies lay about the room, except for Mark Landry, who stood in the middle of the floor, his erect cock trapped in its cage. His face was a study in frustration and pain. Ivory was next to him, gloriously naked and covered in a mix of sweat and cum.\n\n\"You were fantastic, Mr. B,\" Bethany said before she rose from the couch. Brenda followed her. I noticed a lot of moisture dripping down her thigh as she moved.\n\n\"Okay. So, one last thing before we wrap up,\" Brenda said. She approached Mark and Ivory, and as she regarded the young man, her demeanor changed. She looked like a disapproving parent about to scold a misbehaving child. Mark kept his eyes on a spot on the carpet. \"Mark, did you enjoy yourself tonight?\"\n\n\"Yes, mistress,\" he said never looking up from the floor.\n\n\"Did you really? Did you learn anything?\"\n\n\"Yes, Mistress.\"\n\n\"Tell us what you learned.\"\n\n\"No means no.\"\n\n\"And?\"\n\n\"And sex is more fun when it is offered and shared willingly.\"\n\n\"That's a good boy. I'm almost sorry you've behaved so well. I was looking forward to watching you get your spanking.\"\n\nThe young man took a deep breath. \"Yes, Mistress.\"\n\n\"What's that? You want a spanking?\"\n\n\"Y-y-yes, Mistress. If you wish it.\"\n\n\"Well, how about that. Ivory? What do you say? Should we spank him?\"\n\nIvory's face lit up as she contemplated getting her vengeance on the boy who raped her. Bethany left the room and returned with a large wooden paddle with two rows of holes drilled along its flat length. Between the rows, the words \"whistler\" was carved into the wood.\n\n\"I borrowed this from Coach Wilson at the field house,\" she said as she brandished the paddle. \"We just have to get it back before practice on Monday.\"\n\n\"Nice,\" Brenda said with a smile. \"Mark, do you consent to your punishment here in front of everyone?\"\n\n\"Yes, Mistress.\"\n\n\"And you do so of your own free will, with no pressure?\"\n\n\"Yes, Mistress.\"\n\nA glint of light caught my eye and I saw Tina with her phone recording everything. Perhaps they wanted some assurance that he couldn't claim he was forced into anything. Not a dumb idea.\n\nIvory got the first five swats, and the rest of the girls got one each. The boys declined to administer any swats. Probably a good thing, because Mark did seem to be enjoying it, if his hard on was any indication. Brenda had Ivory remove the cage before the first swat and by the time the last swat smacked his ass, Mark shot his cum onto the carpet.\n\nIvory had him clean up his mess, caged his cock again and clipped the leash to his collar. Then she dressed and led him out of the house. The rest of the team followed as well while I gathered my clothes and dressed. Neither Brenda, nor Linda spoke to me during this time, although I caught them looking at each other from time to time, as though communicating their thoughts through those glances. It brought to mind when Brenda told me that Linda didn't have to tell her things for her to know. Considering what they had done earlier, this was weird. In fact, it was odd that no one really spoke before everyone left.\n\nJust a few minutes later, I was driving home with the girls napping in the back seat. It was after one AM and considering all the activity of the past few hours, it was no surprise they were exhausted. I know I was. I had to shake my head. How had I gotten to this point? Other thoughts just as confusing battled for attention. What happens now with Linda? What about Brenda? I know Brenda seemed happy that Linda and I had gotten together, but what would that mean for the two of them? I was too tired to come to any conclusions at that moment. I knew I would have to talk with both of them in the morning."
    ],
    "authorname": "Arkfisting",
    "tags": [
        "group",
        "orgy",
        "exhibitionist",
        "voyeur",
        "mf",
        "mff",
        "oral",
        "ff"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-swim-team-ch-10"
}