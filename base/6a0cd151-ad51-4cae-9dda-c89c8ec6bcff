{
    "title": "The Boxer",
    "pages": [
        "Like my other stories, this one has a long build-up; the longest so far, I believe. I like to allow plenty of time to get to know these great ladies. In fact, if you've read my other stories, you may see some familiar faces. I know some of you were wondering about the storyline in this one. Great to hear that, as I was already writing it! Let me know your thoughts -- it's what keeps me going with this much pleasure! Happy reading!\n\n* * * * *\n\nJordan opened the door to her student room. She stepped inside so Sam could squeeze past her.\n\n\"Ta-da! My new digs! What do you think?\"\n\nSam took in the tiny room: the single bed on the one side; the desk with a few shelfs and a small wardrobe on the other. She peered into the en-suite bathroom with its bare necessities: a shower cubicle, toilet and sink.\n\nIn the week she'd been here, Jordan thought she'd done a decent job of making the generic space her own. She'd put all her books on the shelfs; arranged her computer set-up; hung her cherished fight shot poster of boxing champion Nicola Adams; and displayed a collage of pictures of her family and friends. This included the series of photo booth snaps that she and Sam took together religiously every year. The only thing she hadn't found a space for was her punching bag.\n\n\"It's great. It's got all you need. And it's clean,\" her friend said encouragingly, while her face expressed the apprehension she undoubtedly felt about living in a student room at the age of 27; the age she and Sam shared.\n\n\"Yeah, it's one of the newer accommodation blocks, so at least it's still in good condition,\" Jordan tried to reassure herself as well as Sam. \"I'm glad I could get in this last-minute. I guess the new undergrads are not in yet. I'm lucky, really. It was this or staying with my parents and sharing a room with Tasha. And she's almost seven now, so you know she would have a real attitude about that. Plus, I would have to take a train in every day.\"\n\nJordan realised she was reiterating the merits of her living situation, mostly for her own benefit; to help her justify her decision to come here.\n\nSam smiled. \"I think it's great, Jordan,\" she said again, while she sat down on the bed.\n\nJordan sat down too. \"I have to share the kitchen with six others. That's not great, but I'll just invite myself over to yours for dinner all the time.\"\n\n\"Of course, I would expect nothing else! I'm just so stoked that you're here! We're in the same town again, for the first time since high school. This is going to be amazing!\"\n\n\"Well, you should thank Professor Harrison. And the university for poaching her with a full professorship,\" Jordan said. \"In my field, when your supervisor relocates halfway through your PhD, you go with them!\"\n\nJordan's PhD supervisor was quite the academic rock star, and Jordan had been over the moon when she had agreed to supervise her research. Her guidance had been everything Jordan had hoped for and more; she always knew exactly what to say or ask to make Jordan go the extra mile.\n\nNeedless to say, it had come as a shock when she had told Jordan she was changing jobs. She had presented Jordan with her options: continue at the same university and be allocated a new supervisor, or join Professor Harrison at the new place and finish her PhD there. After some online research, Jordan had realised that this sort of thing happened quite often, especially now that pressure in academic jobs was rising.\n\nFor Jordan, the decision was a no-brainer, really. There wasn't anyone as good as Professor Harrison, and Jordan didn't want to risk a new supervisor disagreeing with her entire research plan. Besides, there was the added benefit that she would be closer to her fieldwork and to her best friend.\n\n\"If I ever meet her, I will be sure to thank her for bringing my friend to me,\" Sam said. \"How's uni anyway? How are the other students?\"\n\n\"I haven't actually met any of them yet. I've obviously come in at a weird time in the academic year, so it's not like there's been any inductions or anything. Some of them are probably also away for the summer. And I'm usually there in the evenings, when no one is around.\"\n\n\"Maybe you should try going in when they are actually around.\" Sam grinned and shook her head warily.\n\n\"You know me; my brain only really kicks in around mid-afternoon! And even then I usually start working in Starbucks while I wait for the caffeine to reach every cell in my brain, before even showing my face in the department.\"\n\nSam laughed. \"Yeah, I remember that all too well. It drove the teachers insane how useless you were in the mornings. Ask you anything in last period, though, and you were a freaking genius. They could never figure that one out.\"\n\nJordan laughed too. \"They thought I wouldn't amount to much. I just needed a different schedule; that was all.\"\n\n\"I always believed in you,\" Sam said with a grin.\n\nJordan chuckled. \"Of course you did, Miss World. Was that before or after you had a crush on me?\"\n\n\"Every. Single. Time... Do you have to bring that up every single time? I should never have told you.\"\n\n\"Where would be the fun in that?\" Jordan teased her friend. \"Besides, we might both still be chasing boys now if it weren't for that.\"\n\n\"What do you mean 'still chasing boys'? I can't recall we ever did much of that. Well, I certainly didn't,\" Sam countered.\n\n\"No, of course not. You were too busy mooning over me.\" They both laughed.\n\n\"Speaking of chasing people,\" Jordan continued, \"where do you go here? What's the scene like? Anything interesting?\"\n\nOne downside of moving here was that in one fell swoop she'd abandoned most of her social life and all her favourite hang-outs.\n\n\"I don't really do the scene... I think there's one lesbian bar and a bunch of places for guys downtown, but I haven't been,\" Sam confessed.\n\n\"You've lived here for four years and you've never been to the one lesbian bar!? What's wrong with you?\"\n\nJordan wasn't really all that surprised. Sam was never really that drawn to the meat market culture that invariably ensued in a small gay scene. She'd be a big hit there, though; Jordan was sure of that. With her dreadlocks and her huge green eyes with their intelligent gaze, and then the whole tomboy look she had going on; girls loved that.\n\n\"Where do you go then? It's Friday night. Let's go somewhere!\" Surely, her friend did go out on a Friday night? \"Oh wait,\" she added, \"as long as it's not one of those old man joints you go to play pool.\"\n\n\"They are not old man joints! But actually, on a Friday I usually join the guys from work at this cocktail place near the office. It's a bit of a yuppie place but they have good cocktails and the bartender is nice.\"\n\n\"Sounds great! Let's go there,\" Jordan said enthusiastically, eager to start exploring her new home town.\n\nA bus ride later, they entered the bar and found a table towards the back of the room. Sam said a quick hello to her colleagues at another table and went to the bar to get some cocktails for her and Jordan. When she returned she said: \"So, yeah, that's her.\" She nudged towards the bar.\n\nJordan looked in the indicated direction, slightly confused. That was who? The only person clearly in their line of sight was the bartender, who was facing away from them. The girl was busy putting bottles back on the shelves.\n\n\"The bartender?\" Jordan asked, not quite sure what Sam wanted her to see.\n\nSam nodded and grinned. Jordan recognised that look. So that was what Sam meant when she said the bartender was 'nice': she was 'capital N, Nice' - nice to look at, and maybe more. Jordan turned her attention to the bar once again.\n\n\"She's cute,\" she said, a bit prematurely, as she could still only see the back of the girl.\n\nThe bartender had short, spiky hair that was bright pink. She was quite tall and had a good figure. She was wearing a black polo-shirt, with the logo and name of the bar. When the girl turned round, Jordan could finally see her face. She really was cute. Jordan now made out that her hair was actually blond with fierce pink highlights, which gave it an overall punky appearance. It fell in messy peaks over her forehead, ending just above her eyes. She had full lips and bright eyes that perused the whole bar; looking for anything she could do for her customers. She looked familiar. It was so out of context that it took Jordan a moment to realise that she had seen the bartender before.\n\n\"Hey, I know her!\" She called out.\n\n\"What?\" Sam gave her a baffled look. \"You've been in town a week. How can you possibly know her?\"\n\n\"Well, I don't know her, know her. But I've seen her before. She goes to my new boxing gym.\"\n\nJordan remembered seeing the girl there because of her notable appearance. Jordan had gone to the gym every morning the past week, joining in a group session on some mornings and sparring or working on the bag on others. She'd seen the girl in a group session, but she'd had been on the beginners' side of the room, while Jordan trained with the advanced fighters.\n\n\"How do you already have a boxing gym here? You've been here a week!\"\n\n\"Girl's gotta train, Sam! I've got a fight coming up next weekend, remember? This place came highly recommended and my trainer hooked me up with one of the guys there.\"\n\n\"Okay, fair enough. That makes sense. And she goes there too?\" Sam asked incredulously, as if she couldn't really picture the bartender as a boxer. Jordan had to agree that it didn't quite fit the sweet face. But looks could be deceiving.\n\n\"Yeah, kickboxing training. I've only seen her twice, I think. In the mornings. When was it? Sunday definitely, and Tuesday maybe, or Wednesday?\" Jordan waved her hand dismissively; it didn't matter when she saw her. What mattered was that her friend clearly liked this girl and she had to find out more about this.\n\n\"Anyway, what do we know about her? Did you talk to her? Apart from ordering a drink, of course,\" Jordan asked.\n\n\"Her name is Megan; I got that far. Other than that, I don't know a hell of a lot.\"\n\n\"But you are on it? I mean, you're flirting with her?\" Jordan couldn't believe that was all there was to say. Sam was naturally charming, and a great flirt; if she had tried, it would have worked.\n\n\"I have tried... Trust me, I have. Every time I go over there, I try. The guys from work think it's hilarious. They always make me get the drinks and quiz me after.\"\n\n\"So, what happens?\"\n\n\"Nothing happens,\" Sam said with a hint of desperation. \"It's like she just doesn't even notice that I'm flirting with her.\"\n\nJordan looked at her sceptically and teased: \"You mean, she's immune to your charm?\"\n\nSam laughed. \"Looks like it... Either that, or she's got a girlfriend and she's trying to let me down easy.\"\n\n\"Well, she is a cute bartender. She would get a lot of attention. Maybe she's just so used to people flirting with her at work that she just shuts it all out,\" Jordan offered.\n\n\"Or maybe she's straight...,\" she then added, not sure if she believed that herself. With that hair, her posture, and the way she moved, it was fair to assume she was interested in girls. But then, maybe it was just wishful thinking that she was.\n\n\"Yeah, I thought about that,\" Sam replied, \"but she does have a lot of the signs...\"\n\nWhen Jordan looked at her amusedly, Sam continued: \"I know you don't believe in the signs, but hear me out. Okay, the hair; for one. She has this really cool chunky watch; second. Sensible shoes, sneakers; third...\"\n\n\"She works in a bar! She wouldn't be wearing heels now, would she?\" Jordan interrupted.\n\n\"Okay, okay. Same goes for her clothes, I guess: bar uniform shirt with comfy trousers. But she's got no girly jewellery or anything; no makeup.\"\n\n\"Again, jewellery would just get in the way working here,\" Jordan debunked.\n\n\"Short fingernails,\" Sam said triumphantly, as if that was irrefutable evidence.\n\n\"Hate to break it to you, but she'd have to keep them short for boxing anyway. And it is probably more hygienic working in a bar too.\"\n\n\"Okay, fine... I give up. That's all I've got. Like I said, she doesn't respond to flirting or eye contact, so that doesn't tell me anything either. No give-aways in our brief chats...\" Sam sighed. \"What do you think? Straight?\"\n\n\"I wouldn't think she's straight,\" Jordan said honestly, still studying the girl from their safe distance. \"Good old social media doesn't tell you anything?\"\n\n\"Her Facebook profile is like fort Knox. Unless I friend her, which would be a bit weird.\"\n\n\"Yeah, maybe... Tell you what, why don't I see what I can find out at the gym? Sus her out?\" Living in the same town now, Jordan was pleased that she was finally in a position where she could something like this for her friend.\n\n\"Sure. If you think you can get further than me,\" Sam said sceptically. \"Anything that helps me get to know her would be welcome, or anything to tell me there's no point trying.\"\n\n\"I'll see what I can do. I like a challenge,\" Jordan said, already thinking about her game plan.\n\n* * * * *\n\nMegan huffed at her strapping. Too tight, again. She could never get it right the first time, let alone getting it the same on both hands. She started unravelling her left hand to start over. At least she still had some time before the lesson started.\n\n\"It helps if you spread your fingers while you wrap it,\" a voice near her said. Megan looked up to see the owner of the voice smiling at her. \"It prevents it from being too tight when you get to the end,\" the girl continued.\n\nMegan smiled back shyly. \"Thanks.\"\n\nThat girl would know. Megan had seen her a few times in the past couple of weeks. She was new to the 'Fight Fit' gym, but she wasn't new to the sport; she was a really good kickboxer. Definitely what Megan would call a 'career', a reference from 'The Hunger Games', meaning someone's who's born to do what they're doing: fanatic and professional.\n\nMegan had to admit that this career had drawn her attention from the moment she'd first seen her. Megan had been a little distracted during the trainings in which the girl had been in the same room. Apart from her obvious fighting skills, she was striking: short, but lean and muscular, with dark skin and a large mob of beautiful curly hair. She was cheerful and her booming laugh could frequently be heard across the room to the beginners' area. Megan had often looked over to see Jordan grin from ear to ear, her laugh lighting up her whole face.\n\nSensing that the girl was still watching her, Megan looked up again. She noticed that her usually wild hair was now tied neatly into cornrows, and - Megan was shocked to see - she had a black eye. Her left eye sported a thick dark band underneath, and the area around it was puffy. It looked fresh.\n\nWas she alright? Megan contemplated whether to say anything. The girl had undoubtedly seen her looking at it, so it seemed rude to ignore it. But what if something bad had happened to her and she didn't want to discuss it with a stranger? After all, Megan didn't even know her.\n\nDespite herself, she asked: \"Are you okay?\" She gave an apologetic smile, indicating it was okay if she didn't want to talk about it.\n\n\"Oh this?\" The girl pointed nonchalantly at her face. \"Yeah, it's nothing. I was in a fight.\"\n\nMegan tried to keep the shock she felt off her face. That must have been a hell of a fight. She'd seen a few brawls break out - that was inevitable when you worked in a bar - but usually the shiners resulting from that weren't quite this spectacular. Also, it was usually the guys breaking into fights for no apparent reason. What kind of places did this girl hang out in?\n\nMegan must have been unsuccessful in hiding her feelings, because the girl chuckled and added: \"In the ring, I meant. Boxing...\" She shadowboxed to illustrate her point.\n\n\"Oh...\" Megan guessed she was probably equally bad at keeping her relief from showing now.\n\n\"How did it go?\" She then asked, regretting it instantly. It looked like it hadn't gone so well.\n\n\"It went quite well. I won with a technical knockout.\" The girl grinned as if to say that was nothing too.\n\n\"Oh...\" Megan said again, cursing herself for her lack of eloquence. What on earth was a technical knockout? \"I just thought...\" She gestured at her face. \"... That maybe it hadn't.\"\n\n\"You should have seen the other girl.\" The girl smiled and then winced in pain. \"Ouch! I tried to wink. Clearly, I can't do that right now.\" She laughed her booming laugh. It was contagious and Megan had to laugh too.\n\n\"Do you do fights often?\" She then asked, intrigued.\n\n\"Every now and then. Just boxing though. I have only been kickboxing for a few years. That's just for fun.\"\n\nMegan suddenly felt small and insignificant next to this confident woman, who must be at least a few years younger than her. She'd only been kickboxing for a few years and that was just for fun? Megan had only been at it for almost a year and she considered it quite serious business.\n\nAs if she'd read her thoughts, the girl asked: \"You do kickboxing, right?\"\n\n\"Yeah,\" Megan said. \"I'm a beginner, though.\"\n\n\"You look like you know what you're doing.\" The girl flinched. \"Ouch, I did it again! Stupid.\"\n\nMegan laughed. Why did she keep trying to wink at her? And what did she just say? Did that mean she'd been watching Megan? That was embarrassing. Megan felt like she spent a lot of time just trying to coordinate her hands and feet to move at the right time.\n\nShe said shyly: \"Thanks. Nothing compared to you, though.\"\n\n\"I've been doing it since I was 15, so that's not a fair comparison,\" the girl said kindly. \"Hey, what days are you here?\"\n\n\"Usually Wednesday mornings and Sunday mornings, for the all levels kickboxing lessons,\" Megan replied, before asking: \"Why?\" Why was this girl still talking to her? Why was she so interested in Megan's schedule?\n\n\"No reason. I'll probably bump into you again then.\" The girl smiled and picked her bag off the floor. \"Well, I better get started. I'm just doing some bag work today.\"\n\n\"What days are you here?\" Megan asked quickly.\n\nThe thought that she was going to bump into this girl regularly was mildly distressing. That was probably the end of her kickboxing education. If she wasn't careful, she'd get so distracted that she'd be knocked down by her classmates. Speaking of embarrassment. The least she could do was mentally prepare for the days she knew the girl would be here.\n\n\"Every day, pretty much. Always in the morning. Unless I have a meeting or something.\" She turned away.\n\nMegan had so many questions. She was here every day? Didn't she work in the mornings? And what meetings? What did she do?\n\nThe girl was walking away now, so clearly the conversation was over. When she reached the door that led into the training hall, she turned round and said: \"I'm Jordan, by the way.\"\n\nLeaning against the door post, she waited for Megan to respond. She didn't seem to care one bit about the other people waiting for their lesson to begin, who were now all staring at both of them.\n\nMegan mumbled her name, a little embarrassed to be the centre of attention.\n\n\"Nice to meet you, Megan,\" Jordan said cheerily and at that she disappeared through the doorway.\n\nMegan couldn't quite believe what had just happened. Why had this super sexy, bad-ass boxer girl just out of the blue struck up a conversation with her?\n\nAs was to be expected, Megan's lesson was a bit of a write-off. From where she was training with the other beginners, she could see into the next room, where they kept some gym and boxing equipment for individual or personal training. In that room, Jordan had started warming up by jumping rope: not just straight-forward swinging the thing and jumping at the right time - which was already enough of a challenge for Megan - the girl knew all the fancy swings and cross-overs, double-speeds, whatever it was all called.",
        "Enhanced by a sexy sheen of perspiration from her warm-up, she'd then started her bag work, punching and kicking as if her life depended on it, alternating between fast and hard moves. And as if that wasn't enough distraction, she'd finished by lifting weights, flexing her sexy arm muscles and - while facing away from Megan - showing off an intricate web of muscles in her back and shoulders, half of which Megan never even realised existed.\n\nWhat they'd done in her own lesson, Megan couldn't say. She sure hoped Jordan hadn't been watching her too. Megan had stumbled through every move today, to the great annoyance of her training partner.\n\nWhen she got home after her training, Megan was still thinking about Jordan. She wondered what had brought the gorgeous boxer to 'Fight Fit'. Who was she? Was she new in town?\n\nShe opened the browser on her phone and searched: 'Jordan boxing amateur fight'. Against her expectations, she got some promising search results. The search engine had clearly taken her location into account: she found an article about an amateur boxing match in the area last Friday night, in which one 'Jordan Wells' had competed. There was even a picture. Megan was elated when she recognised the girl, having the upper hand even in the picture. She had a look of pure concentration while hitting her opponent with a right cross.\n\nFurther down, there was another picture of her, proudly holding up a trophy. She looked great: grinning broadly; her eye not quite swollen yet; one muscular arm extended in the air; her six pack clearly visible between the boxing shorts and the short sports top. Megan sighed deeply. She hesitated and then saved the photo to her phone; there was nothing wrong with some secret admiring, was there?\n\nEncouraged, Megan changed her search to 'Jordan Wells boxing' and scrolled through the results. Most were mentions of fights she'd been in - there were quite a few - and reports of these fights. The girl had clearly been modest when she said she fought 'every now and then': she was well-known in the amateur boxing scene and had won several titles. There were a few pictures, many clearly from some years ago.\n\nThe next link Megan clicked was a profile piece on her from five years ago. 'A flyweight to keep an eye on', a sub-caption said. According to this article, Jordan came from a family of boxers: her father had been a professional boxer but had now retired from the sport. Her two older brother were both well-known names in the amateur boxing circuit too. It was unsurprisingly then, the article stated, that Jordan would follow in her father's and brothers' footsteps. There was a picture of her with her two brothers and her father, all of them in boxing gloves posing proudly. At the time of writing, Jordan had just won her first amateur boxing title.\n\nMegan whistled between her teeth. Impressive, and just a tad intimidating. This girl may have been friendly to her - and she may be sexy as hell - but she was definitely out of her league. She resisted the urge to look Jordan up on Facebook. If she did that, she'd surely show up in her suggested friends, and Jordan would know Megan had been snooping her. Megan stared at the picture she'd saved; Jordan was so far out of her league, she had a league of her own.\n\n* * * * *\n\nJordan whistled as she walked into the gym. Today was Sunday, so Sam's heartthrob Megan should be here again. Jordan was pleased with her intel gathering so far. She had no conclusive evidence of her orientation or her relationship status yet, but she'd done some groundwork; made first contact.\n\nSam had been right in saying that Megan had not been easy to gauge. Obviously, Jordan wasn't going to lay it on thickly, but she'd figured some light flirting to test the waters couldn't hurt. Megan hadn't responded to that at all. The fact that Jordan hadn't been able to wink at her with her silly black eye probably didn't help either.\n\nToday, it was time for stage two. She spotted Megan near the counter, putting on her strapping. She was nearly done with her second hand.\n\n\"How's that feeling now? Did you use my tip on spreading your fingers?\" Jordan said as she approached Megan. The double meaning wasn't lost on her, but she was certain it would be lost on Megan.\n\nMegan looked up and smiled. \"I did. It feels much better now. Not so tight.\"\n\n\"Great. Anything to keep a girl's hands in good shape.\" There she went again; she couldn't help it.\n\nJordan got her own strapping out of her bag and started wrapping her hands. She used her neon yellow wraps today, which matched her shirt. One might as well look the part. She saw Megan watching her.\n\n\"You make it look so easy...,\" the girl said enviously.\n\n\"Years of practice...,\" Jordan replied, as she finished her first hand in the exact same spot as usual, the Everlast logo facing up. She started on her second hand with just as much ease.\n\n\"Hey, your eye is looking much better,\" Megan burst out suddenly.\n\nJordan grinned. \"Yeah. I guess it would still be a bit green or yellow but you can't see that on my skin anyway, so it looks like I'm all fixed!\"\n\nAs people started going into the main hall, Megan moved to join them. \"Well, see you later then,\" she said with a little wave.\n\n\"Hold up, I'm coming.\"\n\nJordan had decided to join the kickboxing group sessions more regularly. There was plenty she could still learn from the instructors and it was a nice change from her individual training and sparring with her coach. Most importantly, it gave her a chance to find out more about Megan.\n\n\"You're joining this one?\" Megan seemed surprised.\n\n\"Yeah, of course. Why not?\"\n\nShe lined up next to Megan for the start of the lesson and then jogged off at her own pace for the warm-up. No need to keep the poor girl occupied the whole lesson. She wasn't here to be interrogated after all.\n\nAfter the warm-up and stretching, Jordan caught up with Megan again. \"Hey, do you want to partner with me today?\"\n\n\"Erm... I usually partner with one of the other beginners...\" Megan seemed taken aback.\n\n\"You can't learn as much from them. It's always better to work with someone who's a bit more advanced than you.\"\n\n\"But you won't be able to learn anything from me... I don't want to hold you back.\"\n\nJordan was surprised by Megan's reluctance. Why did she worry about that? \"Nonsense. You look fit. I'm sure you can keep me occupied.\"\n\nShe winked without thinking about it. Pleased that it didn't hurt her anymore, she exclaimed: \"Hey, I can wink again!\"\n\nMegan smiled and blushed. Jordan noticed for the first time that she had two little dimples that appeared in her cheeks when she smiled. She really was adorable. No wonder Sam liked her.\n\n\"Just don't hit my eye, okay?\" Jordan said with a grin, deciding to take Megan's silence as a consent. Megan responded with a look that said she wouldn't even dream of it.\n\nAs Megan walked off in front of her, Jordan noticed that she did have a bit of a lesbian swagger. Sam would certainly consider that a sign, but Jordan wouldn't exactly call that irrefutable proof. Megan turned round and blushed again as she saw Jordan looking at her. Jordan smiled at her and caught up with her, pulling her gloves on as she went.\n\nThe lesson kicked off with bag work: starting with single punches and building up to simple combinations. Jordan watched Megan as she punched and kicked. She missed some of the speed and smoothness in her combinations that came with years of practice, but her technique was good and she had good power.\n\n\"Next time, bring your fist back to your chin after that jab. This bag is not going to hit you back, but an opponent will,\" Jordan said, getting distracted from her mission to find out more about Megan and slipping into trainer mode instead.\n\nMegan proved to be a quick learner. She followed Jordan's pointers precisely and asked for clarification when she wasn't sure. They switched roles and Megan seemed a bit taken aback by the force of Jordan's blows.\n\n\"Sorry, is that alright?\" Jordan asked her, after the bag had bowled straight into her at Jordan's first punch.\n\n\"Yeah, sorry. I just need to hold it better,\" Megan said with a pained expression. \"The other beginners don't punch this hard.\" She rubbed her upper arm where the bag, or her possibly her own glove, had hit her.\n\nAs they moved on, Jordan was pleased to see Megan watching her closely. Paying attention to some else's technique was half the work.\n\n\"Remember what I said about the power for your low kicks coming from your hips? See where I start mine? Here, from the back. And then I spin on my front foot to let that swing all the way through.\" She demonstrated slowly.\n\n\"Hmmm,\" Megan mumbled, her gaze firmly on Jordan's legs. Jordan demonstrated one more time, encouraged by Megan's keen attention to her instructions.\n\nThe lesson flew by and, despite the fact that she hadn't found out more about Megan, Jordan was pleased that they had partnered together. She liked teaching the other girl and she had the impression that Megan had quite enjoyed it too.\n\n\"See, that wasn't so bad, was it? Now will you partner with me more often?\" Jordan asked Megan, as she pulled off her gloves.\n\nMegan smiled and said: \"Maybe.\" That was good enough; she'd take that as a yes.\n\nAs the next group streamed into the gym, Jordan lost sight of Megan when she was gathering her things. She figured the girl was probably in the changing rooms already. Jordan was heading straight out today, having decided to take advantage of the glorious sunshine by doing some agility drills in the nearby park. She would have liked to have said goodbye to Megan, but she'd see her again next time.\n\nLeaving the gym, Jordan was surprised to see Megan outside, talking to someone on a motorbike. Some bull dyke, by the looks of it: tall and skinny, leather jacket, aviators; definitely too cool for school, this one. Who was she? Megan's girlfriend? There's was no question what team that one played for; she was a hundred-footer. So that would mean Megan was into girls too. But taken, unfortunately.\n\nJordan hang back for a moment and watched them. They didn't seem overly romantic with each other. Maybe they were just friends? She couldn't be sure. It could be a romantic gesture, to wait for your girlfriend outside the gym; take her off on a motorbike adventure? You wouldn't do that with a friend, would you?\n\nJordan walked up to them, carefully scrutinising the biker chick as she approached.\n\n\"See you next week, Megan,\" she said nonchalantly, while she threw another examining look at the stranger. Was she a threat to Sam's affections?\n\nThe woman grinned cheekily at her, oozing confidence. She was attractive too. If she was indeed Megan's girlfriend - Jordan hated to admit - Sam had her work cut out for her.\n\nWhile Jordan walked towards the park, she shot her friend a message: [Partnered with your girl Megan today... Chatted to her a bit more but still don't know for sure if she's gay.]\n\nShe contemplated adding that she was quite impressed with Megan's kickboxing skills, but Sam probably wouldn't be overly interested in that. Her friend got back to her immediately.\n\n[See, it's not that easy, is it? She's a tough one to crack! Thanks for trying though, I appreciate it!]\n\nTime to tell her the other part: [I did see her chatting to some butch on a motorbike afterwards :S Could be her girlfriend? Not sure...]\n\nSam was still on her phone: [Hmmm damn... Did it look like it could be? What was she like?]\n\nImmediately after came another message: [At least that would mean she's gay... Silver linings :)]\n\nJordan chuckled. What was she like? How could she put this diplomatically? [Hundred-footer. Androgynous type. She was kinda hot, tbh. But so are you! You could totally take her ;) But maybe it's not even her gf. It's not like they were making out or anything. Could be just a friend...]\n\nSam replied: [And if she has gay friends...]\n\nJordan could almost see the radars spinning in her friend's head. Always analysing the situation. Always hoping for the best. In this case, hoping that Megan having gay friends meant that she was gay too.\n\nJordan tried to ground her: [Then she's definitely not homophobic... Silver linings :)]\n\nShe followed up with another message: [Anyway, I'll keep at it. In the meantime, you may want to see what you can do to increase your cool factor. The other chick has a motorbike, just saying... ;)]\n\nSam sent back a crying laughing emoticon.\n\n* * * * *\n\nMegan sat down heavily at a window seat in the almost empty bus. Her head was sore and she was regretting her decision to go to the gym this morning. It had been easy to be tough and dedicated before going out to celebrate passing her exam last night. She'd made a deal with herself that she could go out, if she'd still go to the training this morning. After all, she'd already missed Wednesday's training because of her exams.\n\nIt would be bad for her fitness, she'd told herself. What she didn't quite want to admit was that she also didn't want to go a whole week without seeing Jordan. Now, her hangover pounding, she wasn't sure if seeing Jordan in this state was the best idea.\n\nTo make matters worse, she had to go meet up with Riley for coffee after the training. Last night, it had seemed like a great idea to meddle in her friend Rowan's affairs, and show Riley - the girl Rowan was clearly meant to be with - the way to the stoic mechanic's heart. Megan didn't completely regret sending the invite to Riley, but she hadn't expected the girl to want to meet up so quickly; the morning after. Megan hadn't even had time to get it straight in her head what she wanted to tell the girl.\n\nShe tried to replay last night's conversation with Rowan in her head. It was obvious that she and Riley liked each other, but Rowan wasn't going to admit that. That was clearly throwing a spanner in the works, so she'd have to tell Riley about Rowan's commitment issues, her history with Diana, her silly self-imposed rules. The girl could then use that to turn the situation around.\n\nMegan marvelled at how clear it was to her what needed to happen in Rowan and Riley's love lives, while her own was still such a mess; or rather, non-existing. Yes, she had a crush on her gorgeous kickboxing partner, but that seemed to be going nowhere at all.\n\nShe and Jordan had been partnering once a week for a few weeks now, but she had no idea what Jordan thought about her, if she thought anything about her at all. The girl was always friendly to her; every week they had a nice time chatting. However, it mostly seemed to be about the exercises they were doing, instructions to improve her technique, advice on boxing equipment. She still didn't know anything about Jordan; nor had she told her much about herself. How could she? A boxing gym was hardly the time and place to divulge your life story or ask personal questions.\n\nMegan had also enjoyed the occasional brief touches that were inevitable in combat sports, but she couldn't say if there was more there. She didn't even know if Jordan was gay.\n\nAnd the more they repeated their little routine, the harder it became to turn it into something more. They were in a vicious circle, spiralling deeper and deeper into that dreaded friend zone; if they could even be considered friends. How could she break that cycle? Why was it this complicated to just meet someone and fall in mutual love?\n\nLast night, Rowan had told her to flirt with Jordan, to show her that she was interested. That was easy for Rowan to say; every word out of her mouth was naturally flirtatious. Megan had no idea how to flirt, let alone with someone she actually liked. She considered it a great achievement when she could keep up a normal conversation with Jordan without falling apart swooning.\n\nShe pictured herself walking into the gym today, set on breaking the cycle. What would Rowan do? Pin her against the wall and kiss her? Tell her that she thought she was hot, and would she like to see her motorbike? Megan chuckled. Even in her head, Rowan was a bit of a clich\u00e9 sometimes. But whatever she did, it worked for her.\n\nThat wouldn't work for Megan, though. She could never pull off something like that, and she wouldn't want to. She had to find her own way. 'Flirt with her, let her know you're interested.' Right.\n\nStill deep in thought, Megan walked into the gym. There was no one in the waiting area but she heard noises from the main training hall. She was late; they had already started. Cursing herself, Megan rushed in, dumped her bag and quickly grabbed her strapping. Now she'd have to put that on while she was running, as if it wasn't challenging enough already.\n\nSomeone came running up to her and tapped the back of her head with a perfectly wrapped hand, today in royal blue. \"Hey, there you are!\"\n\nGuess who. Did she sound excited to see Megan? That was probably just in Megan's head.\n\n\"I didn't even realise I was late until I got here.\"\n\nJordan kept running beside her, instead of jogging off at her own - almost double - speed, as usual. \"Well, at least you made it. I missed you on Wednesday.\"\n\nMegan's heart fluttered. Did she mean she personally missed her? Or that her absence was noted? The latter was better than nothing, she guessed. It was probably that. They didn't partner on Wednesdays because Jordan did her own training on those days, so it wouldn't really have mattered to her if Megan was there or not.\n\nMegan struggled through the warm-up. Her head was pounding and she had no energy. At least she wasn't so hungover that she had to worry about being sick, at least not yet. She'd take it easy today to make sure of that. That would be one certain way to ruin her chances with Jordan, forever.\n\nOf all days, Jordan had chosen today to stick by her side, cheerfully making small-talk. Megan wheezed her responses between press-ups and jumping jacks. When, at last, the signal came to stop running and start stretching, Megan leaned forward, catching her breath.\n\n\"Are you alright?\" Jordan asked, still right there to witness her in all her weakness.\n\n\"Yeah, I'll be fine. I just need a minute. It's just my head...\"\n\nMegan looked up and realised everyone else was already stretching in pairs. She panicked. This part was always done with whoever you happened to be standing next to at the end of the warm-up. That person had never been Jordan before.\n\nJordan was now looking at her expectantly. \"Do you want to start?\" She offered.\n\nMegan nodded. This was more than she was prepared for, but there was no way out. Jordan knelt so that Megan could put her foot on her shoulder. She then came up slightly until Megan indicated it was high enough. Just what she needed: her legs spread wide open, her sweaty foot right by Jordan's face, Jordan's hand on her love handle to support her. She breathed out slowly, fighting the panic.\n\nJordan looked at her with a concerned expression. \"Are you sure you're alright? You look a little pale.\"\n\n\"Yeah, it's nothing. It will pass. I just need to take it a bit easy today.\" Megan didn't dare to look at her. Thankfully, it was time to rotate to the side, so she was preoccupied with that.\n\nJordan gave her a quizzical look and then laughed. \"Holy shit. Are you hungover?\" She whispered. When Megan didn't respond, she continued: \"What did you get up to last night? Wild party?\"\n\nMegan rotated her leg to the back, realising full on well that her butt was on display, right in front of Jordan face. If she could just be swallowed by the earth now, that would be great.\n\n\"I was celebrating that I passed my exam. That's also why I wasn't here on Wednesday: exams.\"\n\n\"Oh congratulations! So you're a student?\" Jordan didn't sound overly surprised. Usually people were; they just didn't expect a 32 year old to be doing their undergrad.\n\n\"Yeah, I went back to uni two years ago. I dropped out the first time round, but I figured I give it another go.\" She put her leg down and propped the other on Jordan's shoulder. \"Older and wiser now, and all that. I've realised how important a degree is.\"",
        "\"Tell me about it. So what's your degree?\"\n\n\"Sociology, second year Bachelor's now.\"\n\n\"No way! At the uni here?\"\n\n\"Yeah, why?\" Megan asked, wondering why that was the part Jordan seemed surprised about.\n\n\"I go there too! Criminology department; same building. Mind you, only for the past two months or so.\"\n\nJordan carefully put Megan's other stretched leg down. Megan knelt to receive Jordan's foot. She got up slowly and waited for Jordan to stop her. She didn't. Megan was shocked to see that the shorter girl could stretch her leg up all the way to Megan's shoulder while she stood completely upright.\n\n\"Wow, you're very flexible...,\" she said before she could stop herself. Inappropriate thoughts flooded her brain. She felt her cheeks heating up and knew she was blushing.\n\nJordan laughed loudly. \"Yeah, it comes in handy. Trust me.\"\n\nMegan believed that. She didn't want to think about all the ways in which that would come in handy. She tried not to look at Jordan, who was right in front of her, too close for comfort, hard to avoid.\n\n\"Are you doing your Master's?\" She asked quickly, trying to change the topic. Jordan didn't seem the typical undergrad age either; better to overestimate her than to underestimate her.\n\n\"PhD,\" Jordan replied simply, while rotating her leg to the side, still stretched up fully.\n\nOf course she was doing a PhD; as if she wasn't perfect enough without being academically gifted too. Megan swallowed hard, trying to keep her emotions under control. It was as if someone had engineered her perfect girlfriend and put her right in front of Megan as a test: here you go, all you have to do is get her; good luck. Megan felt more intimidated than ever.\n\n\"I've never seen you on campus,\" she said, trying to sound nonchalant.\n\nJordan rotated again, now facing away from Megan with her leg stretched back. Megan couldn't help staring at her perfect rear, right in front of her. She liked this part, now that the roles were reversed. She tried to block out more thoughts of Jordan stretched out like this in different contexts.\n\n\"I'm mostly there in the evenings. I like it when it's quiet in the department. Plus, my brain doesn't really work before mid-afternoon anyway.\" She laughed.\n\nMegan was sure that Jordan's brain 'not working' was still more potent than other people's at full capacity.\n\n\"During the day I mostly hang out in a coffee place somewhere, or in the library,\" Jordan added. She switched legs.\n\n\"Oh, that explains it. I'm only there during the day. I work in the evenings,\" Megan said.\n\n\"Where do you work?\"\n\n\"I have two bar jobs,\" Megan started. She realised that this could be a chance to try and get a little more information. \"I work at 'Shake 'n' Stir', this cocktail place downtown, and at 'Velvet', the lesbian bar.\"\n\nShe kept a close look on Jordan's face as she said this. Did she see a little twinkle in Jordan's eyes when she mentioned Velvet? Megan wasn't sure there had been any reaction. It was too subtle; she needed more.\n\n\"Have you ever been?\" She added quickly. Obviously, she would have seen Jordan if she'd been there on a night she'd been working, but she could hardly ask: 'Hey, are you a lesbian, by the way?'\n\n\"I think I've been to the cocktail place... I definitely haven't been to Velvet.\"\n\nThis still didn't tell Megan anything. Definitely haven't been there, as in 'I would never go there because I'm not a lesbian?' or 'I didn't know it existed, sounds interesting'? This was so frustrating. What would Rowan do now?\n\n\"It's a nice hangout. You should come by sometime,\" Megan said, without daring to look at Jordan.\n\nIf the girl was shocked to be invited to a lesbian haunt, she didn't show it. \"I will,\" she replied, causing Megan's insides to flutter excitedly.\n\nThe rest of the training was a blur to Megan. She was riding her high, unreasonably proud of herself for inviting Jordan to come to Velvet. Of course, it wasn't an explicit invitation and there was no guarantee that she would come, but it was great progress. Megan realised it also didn't necessarily mean her crush was gay, but there was a fair chance. At the very least, she wasn't opposed to hanging out with lesbians. Megan would take that with both hands.\n\nAfter the training, Megan hang back a little. She had to meet Riley straight after, so she had to shower and change at the gym. She didn't really want to be in the changing room at the same time as Jordan, having to undress in front of her. She gave Jordan a head start and then went in. It was empty, apart from Jordan's clothes lying on a bench. The Sunday classes were never really busy and most of the others were guys. The few other girls that were there must shower at home, like Megan usually did.\n\nShe heard one of the showers running. Jordan was in there, naked. The thought made Megan nervous. She quickly got into one of the other cubicles and undressed. She hated showering at the gym. She never knew where to take her clothes off, where to put them, when to put them back on. She didn't particularly want to undress in the outside changing room, in front of other people, but her clothes always ended up getting wet inside the cubicle.\n\nAfter an awkward wash, she emerged from the cubicle fully dressed, apart from her shoes and socks. Jordan was still there, wearing nothing but her underwear. Megan looked away quickly, partly to respect the girl's privacy and partly because she didn't trust her own reaction.\n\nJordan looked at her with surprise: \"You showered here today?\"\n\nFlirt a little, let her know you're interested. Megan still heard the echo in her head. Encouraged by her earlier success, she quickly said: \"You seem happy about that.\"\n\nJordan smiled broadly and said: \"Maybe I am.\" She didn't seem to mind standing nearly naked in front of Megan, her gorgeous body fully on display. It was seriously distracting.\n\n\"I usually run home afterwards, so I shower at home. I can't today; I have somewhere I need to be. You must have thought I was just a stinky person. I mean, not that you would have been thinking of me...,\" Megan stammered. She cursed herself. Flirt-mode gone, awkwardness increased to 300%: back to normal.\n\nJordan chuckled. \"Maybe I have,\" she said, before turning away to start getting dressed.\n\nMegan felt her face flush. She was sure she was bright red now. What did she mean by that? How could she just say something like that and then casually get dressed, at her leisure.\n\nGetting distracted from her analysis, Megan couldn't help staring at Jordan's chiselled body. She could see where her body confidence came from. Jordan appeared to have well-defined muscles everywhere, and there wasn't one part of her lean body that had any excess fat or squishy bits. So this was what boxing every day gave you. Megan couldn't bring up the discipline to do that herself, but if she had a girlfriend who did... She quickly dismissed the thought; she was getting ahead of herself.\n\nJordan was wearing black lacy hipster bottoms that framed and embellished her round butt like a piece of art. Megan felt her heart start beating faster as her eyes traced the perfect curves. Jordan's bra was plain and red, and didn't match the knickers.\n\nDespite herself, Megan took in every inch of the girl's body. Staring felt naughty, but she couldn't help it; her eyes were magnetically drawn to the smooth dark skin. She felt her own body respond; that familiar warm tingling feeling between her thighs, calling attention to itself, confirming her attraction to this girl. She was lost.\n\nWhile Jordan still faced away from her, Megan gazed in the mirror in front of her to check out the pronounced abs she'd only seen in the cherished picture on her phone, and the soft tops of her modest breasts, visible over the edge of her bra.\n\nMirror! The realisation came way too late. Megan quickly raised her eyes to Jordan's face in the reflection. Jordan met her gaze and grinned amusedly. Busted. Megan looked away in shock. How much had she seen? Had she seen the whole of Megan's ogle fest? This was so embarrassing! She wished she could run off, but she still hadn't put her shoes on because she was too busy being a perv.\n\n\"So, what's next then?\" Jordan startled Megan with her sudden question, breaking the awkward silence.\n\n\"What?\" She didn't mean between them, did she? What was next after Megan shamelessly checking her out?\n\n\"You said you had somewhere you needed to be. Where are you off to?\"\n\nMegan sighed with relief. \"I'm meeting someone for coffee. A girl I know. We made plans last night.\" Why did she have to say all that? Why did it matter who she was meeting and when the plans were made? Stupid.\n\n\"Oh really? Does that have anything to do with you partying so hard last night?\" Jordan seemed very entertained by her awkwardness.\n\n\"Yes... No! Sort of...\" It wasn't really related, but if she hadn't had a few drinks, she probably wouldn't have been brave enough to message Riley.\n\n\"Oh, that sounds intriguing,\" Jordan laughed.\n\n\"It's a long story,\" Megan mumbled, ready to be done with this conversation, before she embarrassed herself even more.\n\n\"I have time...\" Jordan winked at her, yet again. That was her signature move, it seemed. She clearly had no idea what she was doing to Megan.\n\n\"I don't,\" Megan said, a bit more abrupt than she intended, while quickly pulling on her shoes.\n\n\"Right. You're meeting a girl.\" Jordan said this with such a suggestive grin that Megan heard herself responding: \"It's not like that!\"\n\n\"Like what?\" Jordan countered, still grinning.\n\nThis girl was infuriating. It wasn't like what she had been insinuating: like a date. That was what she'd been insinuating, wasn't it? Megan knew she was getting hot and flustered again.\n\n\"I have to go,\" she said. She grabbed her bag.\n\nWhen she got to the door, she hesitated. She'd made so much progress today with Jordan. She'd also embarrassed herself to no end, but still; something told her she couldn't leave it like this. There were some indications that Jordan might be gay, weren't there? She sure didn't seem to mind when Megan was checking her out. Rowan had been convinced that Jordan was gay; she had even thought she was into Megan. Rowan would tell Megan to bring it home now; take the shot; score the goal. What was the worst that could happen?\n\n\"Hey, can I have your number? Just in case...,\" Megan asked. Just in case what? You idiot. \"Maybe we can meet for a coffee on campus sometime, or something?\" She added. That was better.\n\nJordan didn't respond straightaway. She seemed to hesitate. Megan felt her nerve crumble. Did she have it all wrong? Jordan wasn't gay? She was in a relationship? She wasn't into her? She thought Megan was just some creepy perv that was now definitely crossing a boundary?\n\nMegan was still riding this wave of panic when Jordan said: \"Sure. Give me your phone.\"\n\nWas she sure? Why did she hesitate? Megan handed over her phone with trembling hands and watched as Jordan added her contact information. Was that even her real number? Megan reprimanded herself for thinking this way. There was only one way to find out. In a while, when her nerves and her self-esteem had recovered...\n\n* * * * *\n\nThe message Jordan had been expecting came a few days after she'd given Megan her number. She stared at the screen, wondering what to do.\n\n[Hey Jordan, it's Megan. I'm around on campus on Friday. Would you like to meet for a coffee?]\n\nThere was nothing implied in the message, no flirting; not even a kiss at the end of it. Everything to suggest they'd only be meeting up as friends. But Jordan had her suspicions that Megan may have different intentions.\n\nAt their last training together, Jordan had finally made some headway in getting to know Megan a little better. After weeks of being a closed book, Megan had revealed that she was a student, and - the whopper - that she worked at a lesbian bar. Of course, this in itself was no guarantee that she was a lesbian, but in the space of a single training, she'd given Jordan plenty of reason to belief that she was.\n\nAt first Jordan had been happy with all her newfound knowledge, and had been looking forward to telling Sam all about it. Then she'd caught Megan checking her out, to her great amusement. One more point for the gay theory, and possibly a sign she was single.\n\nA thought had suddenly hit Jordan when Megan had stammered through the few minutes following that, clearly mortified to have been found staring. The realisation had been lying just below the surface, waiting for the right moment to jump out at Jordan. Was Megan attracted to her? In that moment, she'd replayed their interactions in her head. Megan hadn't been very obvious, but it was possible. She had told Jordan to come to Velvet. Was that more than a casual promotion of her bar?\n\nWhen Megan had asked for her number, her suspicions were confirmed. Megan liked her. That wasn't part of the plan. She was supposed to fall for Sam. Jordan had hesitated to give her number; it would give Megan the wrong idea. However, when she saw the disappointment in Megan's face, she'd caved, feeling like a terrible friend to Sam.\n\nWhat made things worse was that, if Jordan was completely honest with herself, she had to admit that she was quite enamoured with the pink-haired cutie herself. It had started as a keen understanding of Sam's affection for the girl, but it had quickly begun to live a life of its own as she saw more of Megan.\n\nIt was the little things that made her so adorable: the way she still struggled with her strapping; the way she beat herself up over awkward things she said; the way she smiled; the way she blushed, all the time; those cute dimples in her cheeks.\n\nJordan had pushed these thoughts away and focused on her mission. She'd be more than happy if Megan and Sam ended up together, she'd told herself. She would get over this little crush - if it should even be called that - in no time.\n\nBut now that she knew that Megan liked her, not Sam, things had gotten significantly more complicated. Thoughts of what could be were becoming more persistent and harder to push away. Moreover, her mind seemed intent on calling bullshit on all her earlier thoughts: would she really be happy if Megan and Sam were a couple? Would she truly get over her crush?\n\nClearly the plan had backfired. It had taken its course for too long. Jordan blamed herself. She should have been quicker about getting the information and finding a way to bring Sam to Megan's attention. But how could she do that now? How could she rectify this situation? She could hardly accept Megan's invite and send Sam to have coffee with her instead.\n\nThere was still the question if Megan had a girlfriend. Jordan could use the coffee date to get a conclusive answer on that; it would be much easier to bring that up over coffee than over a left hook.\n\nShe reprimanded herself. Of course Megan didn't have a girlfriend; she was asking her out, after all. But that could still be just as friends, couldn't it? It wasn't certain that she wanted more. Surely she was with that handsome biker chick Jordan had seen her with? Who else could she be, but Megan's girlfriend?\n\nAnd if Megan had a girlfriend, she wouldn't end up with either her or Sam. They could both forget about her; their friendship would be safe; Megan was happy. It was the best scenario for all. All Jordan had to do was find out for sure that this was the case. This wasn't just an excuse to accept the invitation. They would just meet up once: Jordan would find out the truth, be casual and stick to friend level. That could work, she convinced herself.\n\nShe opened her diary on her phone. She'd entered in capital letters 'FIELDWORK' across Friday, Saturday and Sunday. She sighed. That was right. She was away this weekend, cramming in a record number of interviews in two different places. She was disappointed. Not only could she not meet up with Megan on Friday, she'd also miss the training on Sunday. But at least it gave her some time to get her head in the game.\n\nShe typed a reply: [I can't this week. I'm in prison.] She added 'Next week?' but deleted it. Was she really sure she wanted to do this? She didn't want to lead Megan on. She hit send.\n\nAlmost immediately her phone informed her that Megan was typing. After a moment, her status switched back to 'Online', following by 'Megan is typing'. This cycle repeated itself a few times. What was she doing?\n\nAt last, her reply came, which did not warrant this much typing time: [Visiting someone?]\n\nWhat was she talking about? Jordan reread her own message and immediately understood Megan's confusion. Jordan hadn't told her anything about the topic of her PhD; that she had to visit prisons to interview the detainees. Jordan was so used to saying this to her friends that she hadn't considered how it may come across to an outsider. She chuckled. It was a great opportunity to mess with Megan a little bit.\n\n[What? Just because I'm black, you think I know people in prison?]\n\nMegan response came immediately now: [OMG! That's not what I meant!!! I swear!] This was followed by a message with three shocked emoticons.\n\nJordan laughed. She could imagine Megan's horrified expression. She was probably blushing too. Poor girl.\n\nShe typed back: [I'm just messing with you ;)]\n\n[I interview prisoners for my research. I'll be away Fri-Sun, so won't be at the training Sun either :(]\n\nSeeing the message go through, Jordan realised that the sad emoticon was too much. It could too easily be interpreted as her being sad about not seeing Megan, instead of missing the training. Jordan wasn't entirely sure which one she meant. Either way, she shouldn't say things like that if she was going to stick to the friend zone; and she had to.\n\nMegan's response interrupted her trail of thought: [Don't do that! I thought you were upset. My poor heart couldn't take that.]\n\nJordan smiled. Megan was clearly a little braver and more forward in her messages.\n\nMegan's next message flew in: [Your research sounds interesting! Sad that I won't see you though :(]\n\nJordan typed her next message quickly; if she didn't send this now, her rational thought would take over and prevent her from doing so at all.\n\n[I'll tell you all about it over coffee. Next Monday afternoon?]\n\nMegan's reply was instant: [Deal! Sure, sounds good. Meet you at Starbucks at 3 :)]\n\nThere; it was done. Jordan was going to this coffee date, no matter what happened. Now she just needed to figure out how to not let things get out of hand there.\n\n* * * * *\n\nThe Starbucks on campus was neatly tucked away between the faculty of engineering on the one side, and the faculty of arts and human sciences on the other. Megan entered and made her way through the mixed clientele of arty hipsters and studious engineers; students living up to their full stereotypical potential. They all believed they were utterly unique and original but amalgamated into a uniform, consistent mass. Only one person stood out to Megan. She spotted her immediately; already here, even though it was before their meeting time.\n\nJordan was sitting at one of the corner tables that was considered prime real estate, because of its proximity to a wall socket. She must have been here for a while to get a hold of that table. She had her MacBook open but her nose was buried in a large book. She was wearing thick-rimmed black glasses and a dark grey suit jacket; her overall appearance professional and educated.\n\nIt was a world of difference from her usual look in the boxing gym, but no less sexy. Megan took a moment to appreciate the view. She'd been pleasantly surprised to learn that Jordan was doing her PhD, but had so far not been able to picture the girl in her academic capacity; especially since the memory of her practically naked kept coming back to her. Seeing Jordan here - engrossed in literature and pulling off the sexy professor look with such ease - brought it all together. It was all Megan could do not to run up and kiss her there and then.",
        "Instead, she approached slowly. She hesitated for a moment; should she go in for a hug? Was that weird? They didn't normally hug when but, then, this was a different context. Jordan must have sensed her hovering; she looked up and smiled, before getting up and pulling her in for a quick hug across the table. Her hair tickled Megan's face and she caught a waft of coconut. Megan's stomach fluttered restlessly and she sat down quickly.\n\n\"No coffee for you?\" Jordan asked.\n\nMegan had completely forgotten all about that. She peered into Jordan's cup, which was empty. \"Ah yes, good point. I'll go get some. Can I get you a refill?\"\n\n\"Of course. I'll never say no to coffee.\"\n\nThat was good to know. Megan distractedly ordered their coffees, while picturing herself waking up next to Jordan on lazy Sunday mornings; letting her sleep in, while preparing a hot brew; enticing her to wake up slowly with gentle kisses and the smell of coffee.\n\n\"What are you reading?\" Megan asked when she sat back down, forcing lazy Sunday mornings from her mind. In her absence, Jordan had gone straight back to her book.\n\n\"It's about narrative research. I'm working on my methodology chapter. Basically, in my research I'm relying on people's own stories to inform my findings, instead of using more restrictive interview methods.\"\n\n\"The stories of prisoners?\"\n\nJordan smiled. \"Well remembered...\"\n\nHow could Megan forget? Jordan's comment about interviewing prisoners had conjured up images of waiting impatiently behind bars for the cute researcher to show up; visitation time was never so enticing.\n\nJordan continued: \"I'm talking to female offenders who repeatedly offend, to understand the 'why' and the 'how' of their offences, their backgrounds, life factors and such. I'm drawing on their stories to also address the impact of the criminal justice system in shaping their offending and recovery trajectories.\"\n\nShe paused and then laughed. \"I'm sorry, that's academic babble, isn't it? It's this thesis - it's taking over my life! Give me a moment to emerge into the real world, please.\"\n\nMegan laughed too. \"Take your time.\" She was enjoying seeing this completely different side of Jordan; she could easily get used to this 'academic babble' of hers.\n\n\"So, you go into the prisons and ask them to tell you their stories?\"\n\n\"Yes, I'm aiming to talk to twenty women. It's qualitative research, of course. I've done twelve interviews so far. It's amazing to hear their stories. They are all so different.\"\n\n\"But if they just tell you what they want, how do you get to what you need to know for your study?\" Megan had never heard about this way of doing research. She had only had to do interviews in which the researcher asked the questions and the respondent answered.\n\n\"Well, I still have certain themes I want to get to, so in that sense there's still structure to the interview. But the key is to let them bring to the table those aspects that they feel are important to their own narrative. It's a feminist mode of inquiry.\" She caught herself: \"Oh god, here I go again. Stop me, will you?!\"\n\nMegan wouldn't if she could, but she was intrigued about the practicalities too. \"But isn't it dangerous?\" With the risk of sounding naive, she added: \"I mean, you hear all these stories about stabbings in prisons and stuff.\"\n\n\"Well yeah, that does happen, of course. But I've had to go through quite stringent screenings and my respondents have been carefully selected in collaboration with the prison staff. They are not in maximum security or anything; all relatively minor crimes. And there's also always security nearby. I'm perfectly safe, really.\" She grinned and added: \"So no need to worry about me.\"\n\nMegan blushed. Was it that obvious that she would? Realising that Jordan had just given her the perfect bridge to ask about the other thing she really wanted to know, she took a deep breath and plunged head-first into her next question.\n\n\"What about your partner? Don't they worry about you?\" She carefully used a gender-neutral sentence; she still wasn't sure on which team Jordan played.\n\n\"Don't have one of those.\"\n\nJordan looked at her in a way that Megan couldn't quite interpret; confusion, perhaps, or conflict? She cursed herself for being so vague; now she still didn't know. At least if she had used a gender, Jordan would have corrected her; probably.\n\nAs Megan struggled to find a way to ask more, Jordan volunteered, still with that curious expression on her face: \"I couldn't have a girlfriend right now anyway. The PhD and my boxing take up so much of my life, I have no idea when I would find enough time for her.\"\n\nMegan's heart skipped a beat at the mention of a girlfriend - she was gay! -, before plummeting into a dark crevice of disappointment when the full meaning of the rest of the statement became unmistakably clear. Megan was a firm believer that one could always make time for love. If the right person came along, life had a funny way of making space for them, even when a schedule seemed full and unforgiving at first. So this could only mean that Jordan didn't want a girlfriend. Or - her brain kicked into pessimist mode - that Jordan didn't want her specifically and was trying to let her down easy.\n\n\"Just tell her you love her!\" Megan's thoughts were interrupted by this cry from the next table. Jordan also looked up in surprise.\n\nA tall boy in skinny jeans with Justin Bieber hair stood in front of a group of other students, his fist still at the end position of his air grab. Encouraged by their looks, he stepped closer to Jordan and Megan and directed his next sentence at Jordan: \"Hasn't this gone long enough? She deserves to know the truth!\" He sighed dramatically.\n\nJordan looked at him in disbelief. Despite her gloomy mood, Megan struggled not to laugh. Jordan probably wouldn't know this - having only been here for a couple of months - but the coffee shop had been nicknamed the 'Glee Starbucks', because of its frequent visitors from the music and acting departments. It wasn't uncommon that students spontaneously burst into song and dance, or started a dramatic rendition of their performing arts assignments, in the middle of unsuspecting science students.\n\nThis kid had clearly started a little show for his friends, but having received attention from elsewhere, was getting a bit carried way. He was still looking at Jordan expectantly, keen to pull her into his performance, while his friends snickered behind him.\n\n\"What are you talking about?\" Jordan asked him, a hint of panic in her voice. Megan smiled. She couldn't possibly think he was serious?\n\n\"If you don't tell her, I will!\"\n\nHe turned to Megan and grabbed her hand. \"It's you Rosa. It's always been you! Oh, but Margaret said she would die if you found out. Behold now, it's her at the edge of the cliff. No Margaret, don't jump!\"\n\nHe reached out to an invisible person and mimed something slipping through his fingers and, supposedly, falling off the cliff. At that, he burst into tears; actual tears, rolling down his face. It couldn't be said this boy didn't have talent. His friends applauded him loudly. He took a deep bow before sitting down again.\n\n\"Erm... What the hell was that?\" Jordan looked at Megan questioningly. After Megan had explained about the Glee Starbucks, she said: \"That's a relief. I thought he was a friend of yours or something.\"\n\n\"A friend of mine who's getting you to confess that you love me?\" If only. The sad truth came back to Megan like a hammer blow: Jordan definitely did not love her; she didn't even want to be with her.\n\n\"Something like that. But I bet your girlfriend wouldn't be happy about that either.\" Jordan smiled at her before looking away.\n\n\"My girlfriend?\"\n\n\"That tall biker chick with the too-cool-for-school look I saw you with?\"\n\nBiker chick? It took Megan a moment to piece together who Jordan was talking about. \"Rowan? She's not my girlfriend!\"\n\nJordan looked at her inquisitively. \"She's not?\"\n\n\"Definitely not. She's just my, sometimes infuriating, best friend.\"\n\n\"Ah sorry, I just assumed...\" Jordan didn't look at her when she asked next: \"But you do have a girlfriend?\"\n\nWasn't it obvious that she didn't? And why did she want to know anyway? \"No, I'm single,\" she said simply.\n\n\"Cool...\"\n\nMegan studied Jordan's face, trying to gauge her reaction. What was she hoping to see? Happiness?\n\nJordan's face was blank as she continued: \"Most of my friends are in couples, you know. It makes you feel like a bit of an outsider, doesn't it?\"\n\nWhat did she mean? Did she want to be single friends together? To go do single things that she couldn't do with her couple friends; whatever that may be? As much as it was tempting to keep spending time with her, Megan wasn't sure she could do that. She liked Jordan too much to just be friends. She'd been in this situation before and knew it would end up in heartbreak sooner or later.\n\n\"Yeah, I guess...\" Megan didn't know what else to say to that. This coffee date was not what she had expected. Something, somewhere had gone horribly wrong.\n\n\"Anyway, I'll come check out Velvet sometime.\" Clearly Jordan was also a bit lost for words; where did that come from? She continued: \"I'll bring along my friend Sam. She's single too. I think you'll like her.\" Jordan made eye contact very briefly before averting her eyes to the book in front of her.\n\nWhy did Jordan just bring up her single friend? 'You'll like her'? Was she trying to set Megan up with her friend? Then this wasn't about being single friends together? Megan was confused. What did Jordan want from her? Whatever it was, it wasn't what Megan wanted. Whatever Jordan came here for today, it wasn't a first date; it certainly wasn't the start of something more.\n\nAlthough it pained her, Megan knew what this meant: it was time to cut her losses; get out while she still could. She told herself to be strong. Getting over Jordan would take time and it wouldn't be easy. She would need to take her distance; only then could she do this. She decided: from now on, no more flirting, no more hoping; only casual friendliness at the gym, when they would inevitably still see each other.\n\n\"Speaking of Velvet, I better get going. I have to work tonight,\" Megan said. She felt a strong urge to run out of here as fast as she could.\n\n\"Yeah, I better get back to my chapter too.\" Was there a hint of disappointment in Jordan's eyes? Megan reproached herself; no more hoping.\n\n\"I'll see you at the gym.\" Megan got up and stepped away from the table quickly. She didn't have it in her to stay for another hug. If Jordan was disappointed about this, she hid it well.\n\n\"Yeah, see you there,\" Jordan said with a slight smile.\n\nMegan walked off quickly, feeling tears welling up. Why had she let herself get so carried away, thinking Jordan liked her back? She'd given her signs, hadn't she? And for Megan to have noticed them; that was quite something. She been told many times how blind she was to other people's advances.\n\nIf the signs had been there but she didn't want a girlfriend, was Jordan just a player? Was she only in it for the chase, like Rowan? If that was the case, Megan deserved better anyway. She squared her shoulders; recovery started now.\n\n* * * * *\n\n\"You're joking, right?\" Jordan asked perplexed, taking her phone off hands-free and putting it up to her ear. The laundry she was folding could wait.\n\n\"I promise you that I'm not. It's hard to believe, I know. I could hardly believe it myself!\" Sam said, sounding happier than Jordan had ever seen her.\n\n\"You just met her in the supermarket, played some pool, and then she came home with you?! I'm really supposed to buy that?\" Jordan tried again.\n\nSam had just relayed the most incredible tale of bumping into her favourite actress, in the supermarket, of all places; hitting it off with her; and having the night of her life, introducing said actress to lesbianism.\n\n\"Buy it or not; it's the truth! I'm still buzzing... We just connected, you know. It was like we'd known each other for years.\"\n\n\"But you haven't! I have known you for years, Sam, and it's just... An actress? A red-carpet-walking, Oscar-swinging actress?\"\n\n\"She's not like that. She's more real, somehow. She was just happy that someone finally took her for who she was, instead of what they thought she'd be like. Fame does that to you, I guess.\"\n\n\"Because for you it had nothing to do with the fact that she is famous?\" Jordan liked Sam a lot, but it seemed she had lost the plot.\n\n\"It didn't. I didn't even recognise her at first. I just thought she was stunning and I wanted to talk to her. Turns out I love talking to her, and she to me.\"\n\n\"Come on, Sam. Really?\"\n\n\"Why is this so hard to believe, Jordan? She recently moved to the burbs; turns out she lives close to me in some inconspicuous house. I'm not sure where exactly, but I know now which the nearest supermarket is.\" Sam chuckled. It seemed that nothing could dampen her spirits; not even a sceptical friend. \"Why would I make this up, anyway?\"\n\nJordan sighed. She had a point there. As much as this story sounded like a crazy fantasy, she'd never known Sam to be anything but truthful. \"You wouldn't...,\" she admitted.\n\n\"Exactly!\" Sam said triumphantly.\n\n\"So, now what? You're not going to see her again, are you?\" Having no choice but to believe that the encounter happened, Jordan was keen to find out how her friend possibly envisioned she would proceed from here.\n\n\"God, I hope I will! I have no idea how, but I want to.\"\n\nJordan was afraid she'd say that. \"Sam,\" she started gently, \"don't you think it may have been just a onetime thing for her? I mean, she lives in a completely different world, doesn't she?\"\n\n\"Yeah, she does. But she seemed perfectly happy in mine too. Maybe there's a way... It could be like a little weekend escape for her or something.\"\n\n\"You want to be her weekend lover?\"\n\n\"I'll be whatever she wants me to be,\" Sam said with a happy sigh. \"Truth is, Jordan, I think I'm in love with her...\"\n\n\"Sure sounds like it...\"\n\nJordan was worried for her friend; Sam would be heartbroken if this didn't come to anything. And it almost certainly wouldn't. Another thought hit Jordan. Her heart was pounding as she asked: \"What about Megan?\"\n\n\"I know... I did really like her. But now... I can't think of anyone else, not even Megan. She just pales in comparison, you know?\"\n\nJordan felt a wave of anger rushing in. This was so unfair to Megan. Even though the cute bartender had no idea Sam even liked her and there was nothing going on between them, it still felt like a betrayal, somehow, to toss her aside so easily. Megan deserved more than that. Besides, Megan couldn't pale in comparison to anyone if she tried.\n\n\"At least she's a real person, living a normal life amongst us ordinary people,\" Jordan said, unable to keep the frustration from her voice.\n\n\"Look, I'm sorry. I really appreciate the effort you put in. I didn't mean for this to happen. I'm sure Megan is great and she'll make someone very happy. That someone is just not going to be me, I realise now. It wouldn't be fair for her to be a consolation prize.\"\n\n\"She's definitely not a consolation prize,\" Jordan said before she could stop herself.\n\nSam was catching up. \"Wait a minute. Why are you getting so worked up about this?\"\n\n\"I just think it's not smart to dismiss all other options so easily, that's all. This whole actress thing could go absolutely nowhere...\" Jordan tried to make it sound like she was purely moved by concern for her friend. \"And Megan is great,\" she added. \"I think you two would really hit it off.\"\n\nSam saw straight through her, as usual. \"You like her,\" she stated. It wasn't a question.\n\nThere was no point denying it. \"I do.\"\n\nIt was the first time she'd actually admitted it. Doing so somehow made it all the more real. When Sam didn't respond immediately, Jordan sighed and continued: \"I've liked her for a while. I was blocking it out because you liked her. I felt like a terrible friend for even thinking it.\"\n\nThere was a further moment of silence on the other end before Sam started laughing. \"That's just perfect, Jordan!\" She said happily.\n\n\"What? Why is that perfect?\"\n\n\"Now you can go for it! She's all yours!\"\n\nJordan took a deep breath, the full truth of her messed-up situation dawning on her. \"Well, it's a bit late for that,\" she said more irately than she intended.\n\n\"What do you mean? Why would it be too late?\"\n\nShe might as well tell Sam the full truth now. \"Because I shot her down... I realised she liked me too, and I shot her down. It must have taken quite some courage for her to ask me out in the first place...\"\n\n\"Wait a minute. She likes you? She asked you out?\"\n\n\"Remember I told you that I found out she was single? She told me when we met up for coffee. She asked me to go. I only went to find out if she was single. Or so I told myself.\" Jordan talked factually, not wanting to let the emotion shine through her words.\n\n\"Oh Jordan... What happened?\" Sam sounded sympathetic to her ordeal.\n\nJordan didn't want to blame her friend for this fiasco. It wasn't Sam's fault, but she couldn't help but be annoyed with her. The timing was simply terrible. If only this had happened one week earlier, Jordan would have approached the coffee date very differently.\n\n\"I told her I didn't want a girlfriend; that I didn't have the time for it. I may have suggested we should be friends. And I definitely told her that she should meet you; that she'd like you.\"\n\n\"Ouch...\"\n\n\"Ouch is correct... That's why I said it's too late. I fucked up, Sam. After all that, there's no way she'll try again with me.\"\n\n\"But you can...,\" Sam started. When Jordan started to protest, she said: \"No wait, hear me out. Let her know you like her. Come clean about everything. She'll understand that you were just being an amazing friend. Which I will never forget, by the way.\"\n\n\"I don't know, Sam... She seems really upset.\"\n\nJordan had seen Megan a few times at the gym since their fateful coffee date and to say she'd been icy was an understatement. They had still partnered as usual, but Megan hadn't made more conversation than was strictly necessary. Jordan even had the impression that her kicks and hits had been harder than before.\n\n\"Do you like her, or not?\"\n\n\"I do... I like her a lot.\" The floodgates were open. Now that she'd admitted that she liked Megan, she realised just how much she was into the pink-haired girl; how much it had taken to resist those feelings.\n\n\"Then she's worth fighting for, isn't she? And if anyone's a fighter, it's you!\"\n\n\"Yeah, you're right...\" In theory, Sam was absolutely right but Jordan had no idea how to pull this off in practice.\n\n\"I know I am. So quit sulking and get your head in the game!\"\n\nJordan had to smile at Sam's attempt at pep talk. \"Alright coach... I'll think about it.\"\n\nAfter she'd hung up the phone, Jordan sat down heavily on her bed. She realised that for the entire duration of the phone call, she'd been restlessly pacing the tiny floor surface of her room like a caged tiger. Was there still time to fix things with Megan? Perhaps if she could just talk to her and come clean, as Sam had suggested? Would Megan let her? Jordan would certainly have to amp up the niceties first; show her that she meant business now.\n\nShe had to try. What else could she do? She couldn't let this amazing girl just disappear from her life or, worse, stay on the receiving end of her passive aggression.\n\nWith trembling fingers she started typing a message: [Hey, it's me]. She hesitated. Would Megan have deleted her number? Would she know who 'me' was?\n\nShe started again: [Hey, it's Jordan. I'm thinking about going for a drink tonight. Would you like to join me? xx]\n\nThe two status ticks turned blue almost immediately; Megan had seen the message. Jordan waited impatiently for her reply.",
        "When her reply eventually came, a few hours later, it was brief and disappointing: [Hey. I can't, I have to work. I'll see you at the gym.]\n\n* * * * *\n\nMegan's boxing gloves connected hard with the pads Jordan was holding: left jab, right cross, left hook. She finished the combination with a right low kick, which Jordan blocked with her shin pad.\n\n\"Good. Again!\" Jordan said as she reset the position of the pads. Megan repeated the sequence vigorously.\n\n\"Now, remember to put your whole body behind your punches. Here, let me show you.\"\n\nJordan hooked her hands out of the pads and dropped them. She stepped closer and put her hands on Megan's hips.\n\nA surge of electricity went through Megan's body and she fought the urge to recoil. It wasn't so much the fact that Jordan's hands were on her that caused her reluctance; it was her own reaction to the touch. Although her mind was fighting her attraction to the gorgeous boxer, her body had not gotten that memo.\n\n\"Execute those punches again, slowly, and pay attention to the movement of your hips.\"\n\nAs Megan went through the combination, Jordan's hands guided her hips to move along with the punches, twisting left and right as her arms extended. Megan avoided eye contact but she was aware of Jordan's intense gaze on her movement, on the swaying of her hips. Standing so close to her, touching her, Jordan was driving up Megan's body temperature. She cursed her body for betraying her and twisted away from Jordan's grip as soon as she'd finished the sequence.\n\n\"Can you feel how much more power you have when you put your hips into it?\" Jordan continued, unperturbed by her reaction.\n\nThe girl seemed intent on being as friendly and supportive as possibly, even though Megan was finding it hard to reciprocate. The times they'd seen each other at the gym immediately following their coffee date had been awkward. Both of them had been edging around the other, pretending everything was normal but both realising something had shifted. Megan had not wanted to make a big deal of things by refusing to partner with her, but their attention had been much more on the moves than on each other.\n\nHowever, Megan had noticed a shift in Jordan's behaviour. Perhaps it had started today, or even last week; she couldn't be sure. It seemed that Jordan had decided to increase her efforts to get Megan to engage with her. She'd been talkative, encouraging, smiley. She'd even winked at Megan once or twice again. And now she was finding excuses to touch her, it seemed. What was going on? Megan was far from an expert on courting behaviour, but if she didn't know any better, that's what she'd call it.\n\nBut it couldn't be that, obviously; Jordan had made it abundantly clear she wasn't interested in Megan in that way. So it must just be another way of re-establishing their friendship. Megan wasn't ready for that. She didn't rule out that in time they could be friends, but now Jordan's efforts were just distracting her from her resolve to take her distance. How could she stay away from her, mentally, if she was so close, physically?\n\n\"Let's go again,\" she grunted, nudging Jordan to put the pads back on.\n\n\"See, that's better. I can feel how much more powerful those punches are now.\" Jordan smiled encouragingly.\n\n\"With your low kick...,\" she then continued, \"remember that you're trying to hit me here.\" She ran her hand along her outer thigh, pausing at a point midway up. \"Or even here, further back. You'd hit the sciatic nerve, which is a very powerful target.\" She moved her hand to a spot at the back of her thigh, just below her buttock. \"You can actually feel where you'd need to hit it, just here.\" She looked at Megan invitingly.\n\nDid she really expect Megan to touch her? \"That's alright. I'll give it a try,\" Megan said instead, not trusting her hands to behave when laid on Jordan's body.\n\n\"Okay, try it. I'm not going to block it, so gently please!\"\n\nMegan kicked, a little harder than she intended. From the look on Jordan's face, she hit that nerve well enough.\n\n\"Ooof... I guess I deserved that,\" Jordan mumbled with a pained expression, rubbing the back of her thigh.\n\nShe then turned cheerily to Megan and gave her an appraising look: \"Very good! Very impressive, actually. Let's put that in the combination. I'm going to check your kick though. I need to be able to walk tomorrow.\"\n\nThey practised the combination a few more times, Jordan encouraging Megan at every turn, until the trainer indicated that it was time for the final part of the lesson. Usually this meant the advanced fighters would spar, while the beginners had more time to practice their combinations, ask questions, receive one-on-one time, or work on the bags. Since they'd been training together, Jordan had usually stuck around Megan, working with her. She got more than enough sparring times on other days, she said.\n\nStill looking for ways to create some space and give herself a chance to recollect, Megan said: \"I think I'll just do some bag work today. Go ahead and spar with the others if you want.\"\n\nJordan looked slightly disappointed but respected her wish. She put on her gloves and jogged to the other side of the hall.\n\nMegan turned to a punch bag and started going through some simple combinations. Her focus on her movements lapsed as her mind replayed the interactions she had with Jordan this morning. Jordan's hands on her body, swaying her gently, had made more of an impact than she cared to admit. It was as if she could still feel them on her now. Her own body was on autopilot, hitting and kicking the unfortunate punch bag more and more erratically, until she was forced to stop because she couldn't breathe. She panted and wiped the sweat off her face with the back of her forearm.\n\nHer attention was drawn to the other side of the room. The trainer was giving instructions to Jordan. She was sparring with a tall, broad-shouldered guy, who looked like he could lift her with one finger. She was using her size to her advantage, ducking under his long arms and getting close to his body to deliver punches to his abdomen.\n\n\"Remember that those boxing bobs and weaves are not as effective in kickboxing! If Justin would actually use his legs now, you'd get hit in the face,\" the trainer said firmly.\n\nJordan moved back and hurled a well-executed high kick towards the other fighter's face. He staggered back and narrowly blocked it with his gloves, clearly surprised the short girl could reach that high.\n\nMegan had of course witnessed Jordan's flexibility before, but she couldn't help but be impressed by the move. She'd take that guy out in no time if this were a real fight.\n\nJordan laughed her booming laugh and said: \"It's a good thing he didn't use his legs then!\"\n\n\"Nice kick,\" the trained complimented her. \"Just be aware of your defence. There's a lot more limbs to take into account, especially in Thai boxing. A knee to the face hurts!\"\n\n\"Noted. Thanks coach.\"\n\nJordan's gaze flitted across the room and met Megan's. She grinned, exposing her bright green gum guard. While not a sexy thing by far, there was something about that action that made Megan's belly flutter. It was the boyish boisterousness; the look to see if Megan had seen her move; the need for her appreciation. It was classic playground behaviour: showing off for the girl's attention.\n\nShe got the girl's attention, that was certain, but in this case the girl wasn't sure how she felt about that. Megan looked away and turned back to the punching bag, trying to block out Jordan's grin, which kept lingering in her mind.\n\nAt the end of the lesson, Megan was pleased to see that Jordan was engaged in a conversation with the trainer. Megan had to go straight to the university to finish an essay, so she had to shower and change at the gym again. The last thing she wanted to do was be alone in the changing room with Jordan, so she'd been racking her brain to find a way to avoid that. Now that Jordan was still chatting, she could perhaps get in and out quickly. Or at least time it so that she was in the shower while Jordan was in the changing room and vice versa.\n\nThe changing room was empty, as it had been the last time Megan was here. Just to be sure, she gave the first shower cubicle a quick knock to make sure no one was in there. The doors to the cubicles didn't lock so some aspiring comedian had put up a sign saying: 'Do knock it before you try it.' Rushing, Megan slipped inside.\n\nWhile she was undressing, she heard the door to the changing room open and close. That was probably Jordan. Megan felt a rush going through her body; a rush of what, she wasn't sure. Panic? Excitement? She quickly switched on the shower to block out the distracting sounds of Jordan undressing. Soon after, she heard the shower in the cubicle next to hers being switched on.\n\nRealising her timing was going to be off, Megan took her time showering. There was no way she was going to beat Jordan to it, so she might as well stay hidden in the shower cubicle. Not a very confident statement, but Megan felt anything but confident at the moment.\n\nThe shower in the next cubicle was switched off. Megan strained to hear any further sounds over the running water of her own shower. What was Jordan doing now? It didn't really matter, as long as Megan knew when she had left, so she could come out. She closed her eyes and let the water run down her face.\n\nShe was so lost in this calming sensation that a sudden noise right behind her startled her. Was that the door? Before she could turn around, she felt someone's hands on her hips, gently taking hold of her. They weren't restraining her in any way; they were merely making the presence of their owner known. Fighting her panic, Megan realised that it was oddly familiar; she'd felt this before, not half an hour earlier. In fact, the phantom feeling of those hands had never quite left her. Jordan. What was she doing here? Couldn't she see Megan was naked?!\n\nPanicking, Megan moved her head from underneath the water and took a small step backwards in the process. She felt Jordan applying gentle pressure on her hips, drawing her closer. Her body slowly came in contact with Jordan's - first her buttocks, then her back, then her thighs - until she could feel Jordan pressed into her all along the length of her body. Standing out of reach of the water, her skin felt cool on Megan's. Megan's breath stopped. Was Jordan naked too? She couldn't feel any clothing but, then, it had become hard to concentrate.\n\nMegan opened her mouth to say something - to demand an explanation, perhaps - but no words came out. She wanted to turn around - if nothing else to confirm her suspicions about Jordan's nakedness - but her body was frozen.\n\nJordan's hands moved along her sides, up to her shoulders, and then suddenly left her body. Megan felt herself missing them instantly. She should stop this; whatever this was, it had nothing to do with creating distance. And yet, when Jordan moved her body away from her, Megan couldn't stop hers from pressing backwards, following her; craving the contact.\n\nAs sudden as they had left, Jordan's hands were back, touching her shoulders. It was the smell that told Megan that she'd withdrawn them to put shower gel on them, which she was now gently spreading over Megan's shoulders and back. Megan's heart was racing. She shouldn't be allowing this; she should certainly not be enjoying this. Jordan's hands slid down over her lower back to her buttocks, leaving not one spot untouched.\n\nThere was something pragmatic about her movements, as if washing Megan's body was her only concern, and any tension or thrill caused by this was irrelevant.\n\nHer hands moved over Megan's hips and up along her waist. As they travelled to the front of Megan's body, Jordan pressed her body into Megan's. Megan felt her breasts against her back. Her body responded automatically, pushing back into Jordan, her buttocks fitting neatly in the curve between Jordan's thighs and her belly.\n\nMegan looked down to see Jordan's hands sliding up slowly, her dark skin contrasting starkly with Megan's pale stomach and the white foam created by the shower gel. Her mouth was dry and she found herself still unable to speak. Where were those hands going? As Jordan cupped her breasts, Megan's breath escaped her in a deep sigh. She hadn't realised she'd been holding it.\n\nJordan gently spread the soapy substance over her breasts, not paying them any more attention than she had any other part of her body. As her palms slid over Megan's nipples, a shiver went through her body. It felt so sudden and violent, compared to Jordan's slow and deliberate movements, that Megan was sure the other girl must have felt it too.\n\nAs soon as Jordan's hands moved away from her breasts, Megan regretted their absence. She didn't get long to contemplate this, as Jordan now moved down her belly and grazed the front of her hips. Her hands glided down Megan's thighs; her thumbs facing inward, meeting between her slightly separated legs.\n\nMegan was sure Jordan would be able to feel the heat radiating from just above her hands. If it weren't for the water still running down the front of her legs, Jordan may even have encountered another sign of her excitement, involuntarily making its way downs her thighs.\n\nIt was there - just out of reach of where Megan by now couldn't help but hope she'd go - that Jordan left her hands, as she pulled Megan in close for a hug, pressing her cheek into Megan's shoulder.\n\n\"In case you were still wondering if I wanted us to be more than friends...,\" she whispered in Megan's ear.\n\nAt that, she slipped out of the cubicle as quickly and as quietly as she'd slipped in. Her departure left a cold abyss behind Megan's body that threatened to pull her in and drown her forever. She shivered and stepped back under the hot water, letting it rinse the soap off her.\n\nWhat the hell was that? A million questions rushed through Megan's head, all fighting to be considered first. Her own conflicting feelings about what had just happened were hard to ignore. Her body had obviously completely betrayed her again, giving into, and reacting to, the delicious physical sensation of Jordan's touch. But the flesh was weak, as they said.\n\nHer mind, however, was also not innocent. Why didn't she stop Jordan? The sheer thought of the chiselled body pressed into hers, of the beautiful face with that cute grin just behind her, had been enough to stop all thoughts of staying away from Jordan, of keeping her distance.\n\nBut why had Jordan done this to her? She didn't want to be with Megan. She'd said this explicitly a couple of weeks ago; she had no time for a girlfriend. Had she changed her mind? If so, what made her change it? Her circumstances certainly hadn't changed.\n\nA nagging memory fought its way to the surface. A few weeks ago, she'd asked Rowan how to get out of the friend zone with Jordan. 'Should I just bang her there and then in the showers, like you would?' She'd jokingly asked her best friend.\n\nWas that what Jordan was doing? Breaking through the friend zone barriers? And if so, to what end? What did she mean when she said she wanted to be more than friends? Did she just want to have sex? This sure felt like a very Rowan-esk thing to do, now that Megan thought about it. She could certainly picture her friend slipping into the shower with someone, fucking them, and then disappearing on them.\n\nThe thought of Jordan doing that to her made her feel sick. Granted, Jordan hadn't fucked her, but she may as well have, considering how personal and intimate this had felt. If sex was all she wanted, she'd have to go get it from someone else. No matter how hot Jordan was, Megan couldn't do that. It would tear her apart.\n\nFighting her nausea, Megan let the water run down her face again, as if cleansing herself from the experience she'd just had. She waited for what felt like an eternity until she heard the door of the changing room open and close. Jordan had left at last.\n\nMegan couldn't face her now. She didn't trust herself. She honestly had no idea what she would do; what she should do. Right now, her head was filled with thoughts of Jordan playing her; just wanting her for a quick fling. Yet, she couldn't shake the hope that it was more than that. What if she really had changed her mind about wanting a girlfriend?\n\nCompeting thoughts and emotions kept rushing through her head like a whirlwind. And to think that she now had to head to the library to write an essay; how was she ever going to pull that off?\n\n* * * * *\n\nJordan gave her mum and dad both a hug and a kiss and flopped down on the sofa with a satisfied sigh. She often visited her parents after her training on Sundays, so they had been expecting her.\n\n\"You look happy today. Anything you want to tell us?\" Her mum asked curiously.\n\nJordan wasn't surprised her mum had picked up on her mood. She had been smiling all the way from the gym to her parents' house, drawing strange looks from the people on the train. Her dad gave a curious glance, bordering on suspicion.\n\n\"Not really. Just feeling on top of the world, that's all.\"\n\nHow could she possibly tell her parents about what had just happened in the shower at the gym? How she'd decided on a whim to take a bold step to show Megan that she was into her too. She had tried in vain to flirt with the girl and slowly win her over, but she'd started thinking about changing tack when she realised that Megan's wasn't budging. When she saw Megan's bag in the changing room and heard her in the shower, the idea had just materialised in her head. Flirting Megan didn't seem to notice, but this she was sure to notice.\n\nJordan grinned as she remembered how beautiful Megan had looked; how good it had felt to run her hands over her body; how readily Megan had responded to her touch.\n\n\"Alright. Well, I'm glad you are, sweetie.\" Her mum said, pouring her a cup of coffee.\n\n\"Jordan!\" Her little sister Tasha came running into the room and cannonballed into her, before giving her a big bear hug.\n\n\"Hey monkey! Don't you know it's rude to jump all over people? The penalty for that is death by tickling!\"\n\nJordan started tickling her, causing her to shriek excitedly, before running off giggling. \"Catch me if you can,\" she shouted over her shoulder.\n\nJordan got up and chased her. Tasha had run into her bedroom and was hiding behind the door. Jordan made a little show of looking for her, before picking her up and throwing her on the bed.\n\n\"Death by tickling!\" She shouted, as she vigorously started executing the sentence. Tasha giggled uncontrollably and wrestled to try to get away from Jordan.\n\nBecause of all this commotion, Jordan didn't realise at first that her phone was vibrating in her pocket. She trapped Tasha's trashing legs under her body and pinned her hands down with her knees.\n\n\"I'm not done with you,\" she said with a grin, before getting her phone out of her pocket. The display told her it was Megan calling. A surge of happiness rushed through her.\n\n\"Megan, hi!\" She said enthusiastically.\n\n\"Jordan...\" Megan didn't sound nearly as happy as Jordan had hoped she would be. There was a long pause before she continued, still in that same strained voice: \"What the hell was that all about, Jordan?\"\n\nOh, this was not good. Jordan got off Tasha and sunk down next to her on the bed. \"What do you mean?\"\n\nTasha, who hadn't picked up on her sister's sudden mood change, saw her chance for revenge. She launched herself at Jordan and buried her little fingers deep into Jordan's sides, where she knew her sister was most ticklish. Jordan was completely surprised by her move and couldn't suppress a giggle.\n\n\"Tasha, stop,\" she snorted, trying to catch the child's hands.\n\nEncouraged, Tasha laughed and doubled her efforts. With another giggle, Jordan managed to catch both Tasha's hands in her free hand, and she gently slid out from underneath her sister.",
        "\"Not now, sweetie. Give me a minute, okay?\" She said gently, as she got off the bed and walked out of the room, lingering in the upstairs landing.\n\n\"I can call back later if it's a bad time.\" Megan's voice sounded ice-cold.\n\n\"It's not a bad time,\" Jordan started, before Megan added: \"If you're too busy with Tasha, I mean.\"\n\nThis was getting worse by the second. Megan clearly got the wrong idea. The misunderstanding would have been funny if the mood wasn't so dead serious.\n\n\"Tasha is my little sister. She's six,\" Jordan said quickly. \"She'd received the death penalty by tickling, but she was trying to escape,\" she added, unsure of why this was relevant.\n\nMegan's voice sounded warmer when she said: \"Oh... I didn't know you had a sister.\" Of course she didn't. Why would she know that? They'd never discussed family.\n\n\"Anyway, I think you owe me an explanation for what just happened,\" Megan continued, audibly bracing herself. There was something in her voice that made Jordan think she'd rehearsed what she would say.\n\n\"An explanation? Wasn't it quite self-explanatory?\" Jordan started to panic. Had she misread the signs? Megan had certainly seemed to like what she'd done to her.\n\n\"Not really, no. I don't appreciate being played, Jordan.\"\n\n\"Being played? What do you mean?\" Confusion filled Jordan's head. Had she played Megan?\n\n\"This hot and cold business of yours!\" Megan sounded on the verge of tears and Jordan realised how much courage it must have taken for her to call up Jordan and confront her.\n\nShe wanted nothing more than to comfort Megan, to put her mind at ease, but Megan continued: \"First you give me your number and you're all flirty with me. Then you tell me you don't want a girlfriend. Then you get all touchy and flirty again. And then you pull this shower stunt, saying you want to be more than friends?!\"\n\nHearing it spelt out like that, Jordan suddenly saw how this looked from Megan's perspective. How had she not seen it? She knew she'd given Megan the wrong idea about wanting more, but she'd been so focused on showing her the opposite, that she hadn't stopped to think that now she must look like Dr Jekyll and Mr Hyde to Megan.\n\n\"Oh my god, Megan. I'm so sorry. I never intended it to be like that.\" How could she even begin to make her see that?\n\n\"Then what did you intend?\" Megan justly asked. \"What do you want, exactly?\"\n\nJordan's brain was racing. This was going to be such a long story and she really did not want to do this over the phone in her parents' house. She wanted to see Megan's face, be able to gauge her reaction.\n\n\"I can explain everything,\" she said feebly. Great start, genius. Wasn't that what every fuck-up always said? \"Let me come see you, please? Where are you?\"\n\nMegan sighed and took a while to respond. \"I'm in the library on campus. I'm supposed to be finishing this essay.\"\n\nJordan cursed. It would take her a while to get there on the train and her parents wouldn't understand why she'd leave again so quickly. But she had no choice; Megan was right, she owed her an explanation. Moreover, she desperately wanted to make it up to Megan; to be on good terms with her, if nothing else.\n\n\"I can be there in an hour.\"\n\n\"Alright,\" was Megan's simple reply. She didn't sound overly thrilled at the prospect.\n\nJordan finally walked into the library just over an hour later - after apologising profusely to her parents and sister for her early departure and promising to come back tomorrow, and after an excruciatingly slow train ride. She wasn't sure where in the large building Megan was, but she would look behind every shelf if that was what it would take to find her.\n\nFortunately, she didn't have to, finding Megan quickly in the computer area. Jordan hesitated, not daring to go in for a hug like the last time they met outside the gym. Instead, she sat down on the empty chair next to Megan. Megan still hadn't looked at her, deliberately fixated on the screen in front of her.\n\n\"Hey...,\" Jordan started, in what she hoped was already an apologetic voice.\n\nMegan finally turned towards her. The hurt and confusion in her eyes cut straight to Jordan's soul. She cursed herself for having messed this up so badly.\n\n\"I don't even know where to begin...,\" she said quietly, acutely aware of the complete silence - save from gentle keystrokes - around them.\n\n\"Why don't you start at the beginning?\" Megan responded in a normal volume, drawing glances from the people around her.\n\n\"The beginning... Okay...\" Jordan tried to figure out what the beginning was.\n\n\"And you better make this quick because I still need to finish this essay before I go to work.\" Megan's voice cutting through the silence again caused several hissing noises, urging them to shut up.\n\n\"Can we go somewhere we can talk?\" Jordan whispered. She'd rather not have a bunch of undergrads listening in on their conversation.\n\n\"I think that's a good idea. People are trying to work here,\" a girl sitting opposite them said in a snarky tone.\n\nJordan glared at her and turned back to Megan. \"Please?\"\n\nMegan sighed and looked desperately at the screen in front of her. She'd only typed one paragraph underneath her title: 'The gender revolution - stalled or steaming ahead?'\n\n\"I'll help you finish it after, okay?\" Jordan said, hoping she'd correctly interpreted that look.\n\nMegan sighed again. \"You better.\" She saved her file, huffing: \"For what it's worth...,\" pulled her USB stick out of the computer, and logged off.\n\nNot long after, they sat down on a low wall outside the library. It was a bit chilly in the autumn breeze but Jordan didn't want to argue with Megan's choice of location. That was the least of her worries.\n\n\"Okay, start talking,\" Megan cut straight to the chase.\n\nJordan decided to start somewhere and see where that would lead her. \"Remember that I said I'd been to the cocktail bar where you work before?\"\n\n\"Yeah...\" Did Megan already look impatient?\n\nJordan pressed on: \"I went there just after I'd moved here, on a Friday night.\"\n\nMegan looked at her suspiciously and Jordan could guess her thoughts: she worked there on Fridays, why hadn't she seen her?\n\n\"I was with my best friend Sam. We sat somewhere in the back; you probably wouldn't have seen us.\" She saw the recognition in Megan's eyes at the mention of Sam's name, but the girl didn't say anything.\n\n\"That's when Sam told me that she liked you. She'd been trying to flirt with you for a while, get your attention...\"\n\n\"Sam...? What does she have to do with anything? Who is she? And she's been flirting with me?!\" Megan looked puzzled now. Clearly Jordan and Sam had been right in assuming that she hadn't even noticed Sam's efforts.\n\n\"Yeah, she's there pretty much every Friday, I think, with some guys from her work. Tom boy, dreadlocks?\" There couldn't be that many of those. Jordan didn't want to linger too long on Sam, but she was pivotal to the story.\n\n\"Ooooh... I know who you mean!\" Megan paused, clearly lost in thought for a moment and then murmured: \"I had no idea... God, I really am rubbish at this.\"\n\nJordan had to smile; Megan really was rubbish at this. \"Anyway...,\" she continued, \"Sam didn't know anything about you. If you were single, or even if you were gay.\"\n\nMegan snorted as if to say: 'Isn't it obvious?'\n\n\"When I saw you, I recognised you from the gym. So I told Sam I'd try and find out a bit more about you, to see if she had a chance.\" Jordan held her breath; this was a tricky admission. How would Megan react?\n\n\"So you were spying on me for your friend?\" Megan wasn't impressed.\n\n\"Yeah, I guess you could say that... But it was a lot harder than I thought. You're not exactly an open book...\"\n\nMegan just shrugged as if to say: 'Why would I be?' She was right, of course.\n\n\"So I tried to get to know you. And...\" Jordan paused; here came the other difficult truth: \"the more I got to know you, the more I liked you, myself; really liked you...\"\n\nThe look Megan gave her was a mix of wariness and surprise. If she was pleased by Jordan's admission, she was hiding it well, possibly to show Jordan that she wouldn't get off that easily. Or perhaps that was just wishful thinking.\n\n\"Then when you asked for my number and to go for a coffee, I realised - or I thought - that you liked me too.\"\n\nKnowing it would embarrass her, Jordan decided not to mention her first hint: Megan blatantly checking out her body in the changing room.\n\nWhen Megan didn't deny it, Jordan continued: \"I don't know why I accepted... I didn't want to lead you on, but I told myself that it would be okay. That I'd leave it there and somehow divert your attention to Sam. I felt like such a terrible friend for even meeting up with you.\"\n\n\"Yeah... That didn't go so well, did it? I had no idea why you'd even brought Sam up. And I really thought you liked me too; that we were having a first date of some sorts...\"\n\n\"I did like you! I do like you!\"\n\n\"But you couldn't, because your friend liked me too...\"\n\n\"Exactly... And I'm so sorry for giving you the wrong idea.\" Jordan smiled. Megan at least seemed to understand her predicament.\n\n\"And then what happened?\"\n\nRight. They weren't there yet. Jordan would almost forget that was only half of the story; the better part had yet to come.\n\n\"Then Sam met someone else...,\" she said. She decided not to go into details on whom she met; it was such an incredible tale that it would only detract from the issue at hand. \"She completely fell for the woman; doesn't have eyes for anyone else anymore.\"\n\n\"Oh, nice for her,\" Megan said curtly, clearly feeling a bit dismissed. \"So, then the road was clear for you; was that it?\"\n\nJordan sighed. When she put it that way, it sounded a lot less romantic. \"I knew I'd messed up badly; that I'd told you I wasn't interested in having a girlfriend. I thought it was too late, but I knew I had to try.\"\n\n\"So you tried... Flirting with me, getting all touchy-feely?\"\n\n\"So you did notice that time?\" Jordan winked but Megan only rolled her eyes at her.\n\n\"Yeah, I tried... But I wasn't sure if you even realised. It didn't seem to be working, in any case.\"\n\n\"Did you ever consider if perhaps I just wasn't interested anymore?\"\n\nJordan hadn't considered that at all. Surely that wasn't the case? She started to panic again. So far, she'd thought this was going reasonably well.\n\n\"I didn't,\" she admitted.\n\nMegan didn't say anything, clearly not willing to put her out of her misery yet.\n\n\"Look, I know it was a crazy idea to join you in the shower. I didn't plan it or anything. I just did it. I don't know why... I hoped it would show you how I really felt about you.\" She paused.\n\nMegan remained silent and gave her a questioning look; a look that said: 'Go on'.\n\n\"That I really like you. That I want us to be more than friends. That I find you crazy attractive, and so much fun to be around. That I want to spend a lot more time with you...\" There it was, all her cards on the table. Jordan looked nervously at Megan.\n\n\"So, you don't just want sex?\" Megan looked relieved.\n\nWas that what she had thought? If so, Jordan really had taken a completely wrong approach with her shower stunt.\n\n\"I mean, eventually I would very much like that too...\" She grinned playfully. Megan gave her a tiny smile back; she actually smiled, finally warming up a bit.\n\nJordan felt the relief coursing through her body. Encouraged, she continued: \"But I want so much more than that. I think you're amazing, Megan. Please say you'll give me another chance?\"\n\n\"How do I know you actually mean all this?\" Megan gave her a piercing, serious look, but her whole demeanour said she didn't really need convincing.\n\nJordan tried anyway: \"Megan, I really am sorry about how this has all gone, and I understand that you're still worried. But let me make it up to you. Let me take you on a date. A real first date.\"\n\nMegan smiled a bit, despite herself; it warmed Jordan's heart. \"Alright then,\" she said after a moment's deliberation.\n\nJordan was so happy she wanted to hug Megan, but something told her the other girl wasn't quite there yet.\n\nMegan glanced at her watch and put her hand in her pocket. \"Well, you better finish this for me too, because you've taken up all of my time, and I need to go to work now.\"\n\nShe pressed something into Jordan's hand and walked off. Jordan opened her hand; it was the little USB stick. Jordan laughed and headed back into the library; she had an essay to write.\n\n* * * * *\n\nMegan looked around, unsure of herself. She felt out of place, while everyone else looked like ducks in water. She bumbled towards an information sign and started reading. The information wasn't really going in, but at least it made her look like she knew what she was doing.\n\nJordan had suggested they meet in town at the end of the afternoon. It was Saturday and Megan had to beg and plead to get the night off. Given the meeting time, she'd expected they would go to a movie or see a show. She was utterly surprised when Jordan had whisked her off to the modern art museum instead.\n\nThey had spent the past ten minutes in a hall with strange compositions of everyday objects. They had barely spoken, each looking at the different art pieces at their own pace; quietly taking them in. Megan didn't really know what there was to take in. She didn't actually like modern art; she just didn't get it.\n\nShe looked across the hall to where Jordan was standing, near a rope hanging from the ceiling. Was that art too, or were they still building that installation?\n\nJordan looked completely at ease and like she belonged in a place like this. Megan was starting to wonder if this was what it would be like if they were together: going to museums, pretending to understand. Maybe they had less in common than she'd thought.\n\nAt least Jordan was nice to look at, she thought with a satisfied grin. Her date was looking dapper in a tan pair of chinos and a black t-shirt, paired with high-top sneakers. To complete the look, she had brown suspenders and her black-rimmed glasses.\n\nMegan herself had dressed rather more conservatively in a pair of jeans that she knew showed off her butt and a light-pink button-down shirt. Jordan had of course told her she looked amazing, but that was expected dating etiquette.\n\nJordan must have sensed Megan staring at her, because she looked over and made her way to where Megan was standing.\n\n\"So, what do you think?\" Jordan gestured at the piece in front of them: a blank canvas with a diagonal tear through the centre. In front of it, also behind glass, lay a pair of neatly folded scissors.\n\n\"Erm...\" Megan wished she'd actually taken in the information on the sign; perhaps then she'd have something meaningful to say. \"It's an interesting concept...,\" she tried weakly.\n\n\"Don't you think the juxtaposition of the clean promise of the blank canvas and the rough finality of the tear is so powerful?\"\n\n\"Yeah, absolutely.\"\n\nWas that really what people saw when they looked at this? To Megan it looked like a random collection of household items, or, at best, an artwork gone wrong.\n\n\"And then those scissors in front of it, like an innocent bystander. Such a fascinating narrative,\" Jordan added.\n\n\"Hmmm...\"\n\nMegan wasn't sure how long she could keep pretending. She certainly had to pick the location for their next date. She caught herself; did she really just think about their next date already? She brought her attention back to the present. She had to say something clever.\n\n\"It just seems to me that the scissors couldn't have caused that tear. It's too irregular. I think a cut with the scissors would have been cleaner.\"\n\nDid that make any sense? Megan desperately didn't want to come across stupid or ignorant in front of Jordan.\n\n\"That's an interesting point. Go on.\" Jordan was now looking at her interestedly. There was a slight twinkle in her eyes, as if she knew something Megan didn't.\n\n\"Well, it's almost like someone is trying to frame the scissors by putting them there?\"\n\n\"You're right... Do you think it's a depiction of any particular theme in our current society?\"\n\n\"I guess it could be...,\" Megan said doubtfully, hoping Jordan wouldn't ask her what theme that would be.\n\nJordan looked at her with a serious expression a moment longer before bursting out laughing. Her outburst was so sudden and out of place in the quiet museum that Megan had to laugh too.\n\n\"What?\" She asked.\n\n\"Your face!\" Jordan said, still giggling. \"You're good!\"\n\nWhen Megan looked at her, not understanding, she continued: \"Come on, anyone can make this and call it art, right? It's just a matter of coming up with a good story around it. Whenever I used to go to a museum with my brother, we would make up stories around the pieces. The crazier or more pretentious, the better. It's still one of my favourite things to do!\"\n\n\"Oh my god, I totally thought you were serious!\" Megan was as much surprised as she was relieved. Jordan sure had the lingo down.\n\nJordan laughed again. \"I know. I could see that. Come on, we have to try it!\"\n\nShe grabbed Megan's hand and pulled her along to the dangling rope she was looking at earlier. Her hand felt oddly familiar in Megan's, as if they'd been holding hands for years. Part of her hoped Jordan would hold on to it, but she let go once they reached their destination.\n\n\"What do you think this piece is about?\" Jordan asked her.\n\nMegan looked at the rope. It came out of a hole in the ceiling and extended nearly to the floor, where it ended in a knot. Megan still wasn't sure it was even an art piece. She had nothing.\n\n\"I really don't know...,\" she said, not wanting to make a fool out of herself.\n\n\"I think that this artist tried to represent the struggle of climbing towards the glass ceiling. Not actually using glass for the ceiling reflects the obscurity of what lies beyond,\" Jordan said with a straight face.\n\nMegan laughed. \"Hey, if that PhD doesn't work out, you can always be an art critic!\"\n\nThey moved to the next piece: a simple wooden chair with only one leg at one of its corners, which was kept upright with invisible threads to the ceiling. The chair was standing in piles of saw dust.\n\nJordan looked at Megan expectantly. It was her turn.\n\n\"Well... I think it's pretty obvious,\" Megan started. \"This chair belonged to one of the first explorers of the Amazon rain forest. He had back problems, you see, so he had to bring his own chair. One day, he sat down on a big pile of sand to survey the work of his research assistants, and that's when he made the first ever discovery of wood-eating termites.\"\n\nJordan laughed. \"Very good! Why didn't they eat the other leg?\"\n\n\"Erm... Well, he would pick his nose a lot, this guy. And he always smeared his bogies on that front leg. Termites obviously don't eat bogies.\"\n\n\"Obviously!\" Jordan chortled.\n\nThey moved around the hall, taking turns describing the art pieces and getting more creative and giggly with each new explanation. Megan never imagined she could have this much fun in a modern art museum. It was only when a gallery attendant informed them that the museum was closing that they realised they were the last people left.\n\nThey headed for the exit but just before getting there, Jordan veered off to a door with a 'staff only' sign.\n\n\"Come on, this way,\" she said, opening the door with a flourish.\n\n\"Are you sure? That says 'staff only'.\"\n\n\"I'm certain! This is where the next part of our date takes us.\"\n\nThe door led to a stairwell and they started climbing the stairs. Worried they would get into trouble, Megan asked: \"Do you know where these stairs lead?\"\n\n\"Of course I do!\" Jordan said nonchalantly. When she saw Megan's reluctant face, she added: \"Relax... We can be here. My brother works here. I pulled some strings.\"\n\nThat was still very vague but reassuring nonetheless. Megan remembered reading about Jordan's two older brothers. She was interested in finding out more about her family.",
        "\"Is this the same brother with whom you used to make fun of the art works?\"\n\n\"The very one: Clay. He went on to work here, so he now needs to know the real stories behind the art too. Much less fun that way.\"\n\n\"And you have a little sister too,\" Megan said, trying to trigger Jordan into telling her more.\n\n\"Yeah, Tasha, the little monkey. And I have another brother, Lloyd. He's the oldest.\"\n\n\"Wow, big family!\"\n\n\"Yeah, we're close too. Tasha is obviously a bit of a later addition but I really liked growing up with two older brothers. We were always roughhousing together. Although they are stupidly protective over me too. You should have seen them trying to keep me from boxing! And now Tasha keeps begging me to teach her. I'm her role model, I think.\" Jordan laughed.\n\nMegan wanted to ask more but they reached the top of the stairs and went through a heavy fire escape door. They stepped onto the roof of the building.\n\n\"Ta-da!\" Jordan said excitedly.\n\nIn front of them was a stretch of fake grass, clearly some sort of improvised roof terrace. Spread out on the grass was a picnic blanket with plastic plates, Tupperware containers, and a cooler box.\n\n\"Wow... Did you do this?\" Megan said, impressed and touched that anyone would organise something like this for her.\n\n\"Yes ma'am. The grass was left from a temporary exhibition, so that came in handy.\" Jordan opened the cooler box. \"Beer?\"\n\nMegan glanced inside. She only had Corona in there. \"What if I didn't like beer?\" She asked, laughing.\n\n\"Then we couldn't date, unfortunately.\" Jordan winked at her. \"But you do, right?\"\n\n\"Yeah, I do,\" Megan smiled, taking a beer from Jordan.\n\nThey walked over to the edge of the building and stood next to each other in silence for a moment, admiring the view. Megan was acutely aware of the proximity of Jordan's body to hers. She suddenly craved her touch and shifted her weight so that her arm touched Jordan's. She willed Jordan to put her arm around her, but Jordan seemed quite content on standing side by side, lost in their own reflections. Shy and indecisive about her next move, Megan just waited.\n\n\"Are you hungry?\" Jordan said after another moment. \"I think we better dig in now, before the sun sets. There's no light up here, I'm afraid.\"\n\nShe went over to the picnic blanket and sat down. Megan followed her example, leaving as little space between them as she dared.\n\nShe teased: \"What about candles?\"\n\n\"Ah... That would have been a good one! I'll have to remember that for the next girl I bring here.\"\n\n\"Hey!\" Megan playfully jabbed at Jordan, who blocked her shots with ease and trapped her hands. She held them and gave Megan a serious look.\n\n\"Now now, that's no way of thanking me for the feast I have prepared for you,\" she said in a reprimanding voice.\n\nMegan thought of the ways in which she wanted to thank Jordan; to show her appreciation for every moment of this wonderful date. Would it be alright if she went in for a kiss? She smiled shyly at Jordan.\n\nEver since the boxer had explained her strange behaviour from before, Megan had no more doubts that she was serious about the fact that she liked Megan. She had no more doubts that Jordan wanted more than to get her into bed. Maybe that was why that very thought was looking more and more appealing to Megan. If they were going to do that, and keep doing that, why waste any more time?\n\nHer body agreed eagerly; a warm rush started between her thighs and spread rapidly through her; undoubtedly reaching her cheeks and giving her that tell-tale blush. She told herself off for being premature and letting herself be guided by her, horny, emotions. Wasn't that what she'd often criticised Rowan, and more recently Jordan, for? Suddenly ashamed, she found herself unable to hold Jordan's gaze and gently pried her hands free.\n\nSeemingly unperturbed, Jordan started opening the little containers to reveal an intriguing selection of chicken strips, peppers, cherry tomatoes, lettuce, grated cheese, sour cream, salsa, guacamole, and nacho chips. Next, she unpacked a stack of tortilla's wrapped in tin foil. Megan grinned. That explained Jordan's choice of beer; clearly she had a bit of a Mexican theme going.\n\n\"Dig in,\" Jordan said with a proud grin, while she grabbed a tortilla and started piling on her toppings.\n\nAs Megan watched her for a moment, she realised how much she appreciated the lack of ceremony in the simple DIY meal. She would never have expected this, but she'd choose it any day over a formal restaurant dinner. She marvelled at Jordan's intuition about what she might like, or perhaps about Jordan's personal preference.\n\nMegan prepared her own fajita and dug in eagerly. She hadn't realised how hungry she was. As usual, she had overfilled the wrap: her toppings were falling out and the sauce was going everywhere. Struggling to keep her meal together, she tried to catch a rogue piece of chicken while licking some guacamole off her fingers. Jordan chuckled, watching her amusedly while casually sipping her beer.\n\n\"Didn't anyone ever tell you about the concept of date food?\" Megan asked, a bit embarrassed about the mess she was making.\n\n\"Oh, I think this is great date food,\" Jordan snickered. \"It tells me a great deal about a girl, seeing how she copes with wraps.\"\n\nShe leaned in closer. Megan's heart stopped; this was the moment she'd chosen to come in for a kiss?! Megan desperately tried to swallow any food remaining in her mouth. However, instead of the expected kiss, Jordan wiped a bit of salsa off Megan's chin with her finger and licked it off.\n\n\"And you have passed with flying colours...,\" Jordan continued.\n\nMegan smiled, embarrassed about misinterpreting the moment, and about wishing Jordan had used her mouth instead. She felt shy again, now that their attention was brought to the fact that they were on a date. Despite little pockets of pleasant tension, the whole experience felt a lot like they were two friends having a picnic.\n\nMegan wondered suddenly if she'd put Jordan off initiating anything physical by causing such a scene over the shower move. Looking back, she asked herself if she'd overreacted. In her current state of mind, she regretted not having turned around in the shower and returned the favour; she would kill to touch Jordan's body the way Jordan had touched hers.\n\nHer fear of being just a booty call had been very real at the time, but it felt ungrounded now. She would understand completely if Jordan would hang back and not risk another freak-out. If this was the case, Megan would just have to take charge and show her that she was not opposed to making this picnic more date-like.\n\nThey both had another fajita and another beer, while chatting merely. Jordan told Megan why she'd moved to town and that her father and brothers were all boxers too. Megan knew that already, of course, but she wasn't going to admit that she'd Googled Jordan. Megan, in turn, told Jordan about how she'd filled her years since dropping out of university and what made her go back.\n\nTalking to Jordan was easy and comfortable and Megan couldn't believe that a few months ago she hadn't even known the girl. She longed to extend the strong mental connection she felt into a physical one; to close the one small gap that remained between them.\n\nWith a content sigh, she leaned into Jordan, who wrapped her arm around her and moved so Megan could get comfortable. She leaned her head against Jordan's shoulder and took in the smell of her: that coconut shampoo and a hint of perfume, mixed with beer and nachos. It was the perfect weird combination. She felt Jordan rest her cheek on her head, while they watched the view and sipped their beers. Megan knew then that she never wanted anything else than this: her and Jordan, together.\n\n\"This is it...,\" Jordan whispered.\n\n\"This is what?\" Megan asked, pulled from her thoughts. She hadn't accidentally voiced any of her revelations, had she? Was Jordan thinking the same about their newfound intimacy?\n\n\"The perfect moment in the sunset. You have to see this.\"\n\nMegan realised to her dismay that Jordan was preparing to get up. Was the sunset really worth breaking up their first intimate moment? Reluctantly, she followed Jordan to the edge of the building and took in the sight that had pried her date away from her.\n\nThe sun was only just visible above the rooftops of the university buildings, rendering the sky an unnatural composition of orange and pink. An amazing array of shadows and reflections was revealed, which seemed to move even as they watched. The light illuminated the pond on the campus and gave the old hospital adjacent a spooky glare. Further back, the tall office buildings of the business district looked like jewels with their glass facades. It was a stunning sight and Megan understood Jordan's fascination. She took out her phone to take a picture, even though she knew it would never capture the full magic.\n\n\"Let's take a selfie,\" Jordan said, seeing her with her phone.\n\nShe stepped onto the low wall that marked the edge of building, giving Megan heart palpitations at the thought of her falling off. Now being roughly the same height, Jordan hugged Megan from behind while Megan took the picture.\n\n\"Aw, we are adorable!\" Megan laughed happily. They looked cute together; anyone would have to admit that.\n\n\"Let me see!\" Jordan said.\n\nMegan handed her phone to Jordan, who studied the picture and agreed they were indeed adorable.\n\n\"Hey, what's this?\" Jordan asked suddenly. Megan, who had diverted her attention back to the view, looked up to see Jordan showing her a picture of herself holding a trophy.\n\nShit. Megan hadn't thought about the victor photo of Jordan she'd saved on her phone a few months ago. She didn't have a lot of photos on her phone, so it would have been right there when Jordan went back to the photo gallery.\n\n\"Why do you have this?\" Jordan asked.\n\nThere was something sincere about her expression; she wasn't trying to expose Megan or make fun of her. Instead, the existence of the photo on Megan's phone, and its implications, seemed like an astonishing discovery to her.\n\n\"Why do you think I have that?\" Megan countered, feeling self-conscious.\n\nIf she hadn't already, Jordan would soon piece together that Megan had searched for her online and had decided to keep that picture to look at over and over again; that Megan had liked her for a lot longer than she probably expected.\n\n\"But this fight was ages ago... It was when I got that black eye. I can already see that coming up in this picture.\" She laughed, and then continued seriously: \"Wasn't that the first time we chatted?\"\n\nBefore Megan could stop her, Jordan had revealed the date on which the photo was saved and said it out loud, contemplating.\n\n\"Yeah, that must have been roughly when we first chatted...,\" she concluded, giving Megan a curious look.\n\n\"Yes, it was, okay? I Googled you...\"\n\n\"Clearly...\" Jordan was grinning now. She asked teasingly: \"And you saved this great shot of me, why exactly?\"\n\nThere was no point denying anything so obvious; Megan felt a sudden urge to come clean completely. \"If you must know, I've had a crush on you for a long time... I thought you were so hot; from the moment I first saw you, even before this. And then when you told me your name...\" Megan gestured at her phone to indicate that one thing led to another.\n\n\"Oh wow, I didn't know...,\" Jordan mused. She added: \"I thought it was much later; when I saw you checking me out in the changing room.\" She winked cheekily.\n\nMegan was mortified she brought that up. \"Oh my god. You saw that?\" She knew Jordan had seen it, but she'd been hoping that maybe she'd only seen the back end of it.\n\nJordan's booming laugh smashed her hopes. \"Oh yeah... You had a real good look there, didn't you?\"\n\nTrying to change the subject, Megan said: \"Well, at least I knew I liked you straightaway. Can't say the same about you!\"\n\n\"Oh, low blow!\" Jordan laughed.\n\n\"Unlike Sam,\" Megan continued, pleased to have turned the tables on the teasing game. \"Maybe I should have dated Sam instead. What is she like?\" She threw Jordan a challenging look, meanwhile glad that Sam had met that other woman, whoever she was.\n\nJordan wrapped her arms around Megan's waist and pulled her close. \"Sam is awesome,\" she said, even though Megan had lost all interest in Sam the moment those arms had embraced her. \"But not as awesome as me. You'll meet her. I have to warn you though: you don't stand a chance. She's all loved up.\" Jordan paused, holding Megan's gaze.\n\n\"And so am I...,\" she concluded.\n\nAt that, she leaned in and pressed her lips to Megan's at last. All evening, Megan had been expecting it, hoping for it, and yet it took her by surprise when it finally happened. She recovered quickly and let her lips fold around Jordan's, tasting the curious mix of beer and nachos. Undoubtedly, Jordan could taste the same on her and, somehow, this enhanced their shared experience.\n\nJordan's lips opened slightly while increasing their passionate pressure. Megan felt Jordan's tongue tracing her lips and slip inside her mouth. When their tongues finally embraced, Megan could feel the sensation coursing through her whole body. She pressed herself into Jordan, who tightened her arms around her waist and held her as if she would never let go again. That would be alright with Megan.\n\nTheir kiss seemed to continue forever, yet not long enough. When they finally broke it off, they both went straight back for another, and another, and another; the beautiful sunset long forgotten. Months of anticipation and denying themselves finally came flowing out all at once; they were playing catch-up; making up for lost time. Even when it started to rain, they didn't let go of each other; rain drops mingling with the moisture from their lips.\n\nLight rain turned into heavy rain and soon after, it was pouring. Megan and Jordan finally entangled themselves, wondering where that sudden downfall came from; a moment ago the sun had been gloriously unobstructed. But had it only been a moment, or had they lost time completely in their embrace? It was certainly dark now and they used the torches on their phones to gather the picnic supplies, giggling as they tipped the rain water out of the Tupperware.\n\n\"The building is closed now, so we have to go down the fire escape. You're not afraid of heights, are you?\" Jordan said.\n\n\"It's a bit too late if I was, isn't it?\" Megan teased.\n\n\"Well, yes... I'd have to blindfold you and guide you.\"\n\nMegan laughed. \"I'm not sure that would make it better!\"\n\nThey carefully made their way down the slippery metal stairs, holding on to each other and the railings. It was quite a terrifying experience. Jordan apologised profusely that she hadn't brought an umbrella; rain had not been part of the plan. For Megan, however, this was the best date she'd ever been on; umbrella or no umbrella.\n\n* * * * *\n\nJordan went ahead of Megan into her tiny student room. It wasn't exactly a dream palace to take a date home to, but it was where the evening had taken them.\n\nSurprised by the sudden downpour during their rooftop picnic, Megan had suggested they cut through the university campus to try and find shelter under the buildings. Since they were both soaked to the bone, Jordan had proposed they stop in her room on campus to wait out the worst of the rain. She'd been a little nervous to bring this up since she didn't want Megan to again think she was just trying to lure her into bed. Fortunately, the shivering Megan had been keen on the idea and had agreed gratefully.\n\n\"Make yourself at home,\" Jordan said. \"I'll go make us some tea.\"\n\nShe rushed off to the kitchen, unwilling to leave Megan's side for too long. She had already known she liked the girl, but after tonight, she could easily say she was head-over-heels. Apart from the rain, the date had gone swimmingly. Megan seemed to be enjoying herself and Jordan was pretty sure she'd redeemed herself for her earlier mess. She'd been amazed to find out that Megan had liked her from the very beginning, which made her want to try even harder to deserve the girl's affection.\n\nWhen she came back into the room with two steaming hot cups of tea, Megan was standing by her boxing poster, having clearly used her time alone to check out every inch of the room.\n\n\"Friend of yours?\" She asked with a smile.\n\n\"I wish!\" Did Megan really not know who that was? \"That's Nicola Adams. She's the best female boxer in my weight division, or probably across all divisions. She's a total rock star!\"\n\n\"And she's cute too. That helps, doesn't it?\" Megan teased.\n\n\"Not as cute as you,\" Jordan countered with a wink.\n\n\"Oh, too smooth!\" Megan laughed.\n\nJordan started taking off her wet clothes and saw Megan staring at her in shock.\n\n\"You should really get out of those wet clothes. You'll get a cold,\" she said, stripping off her trousers.\n\nMegan shook her head and sat down on the bed. \"I'll be alright. I'll just have some tea.\"\n\nJordan shrugged and took off her shirt. Her underwear was a bit wet too but judging by the look on Megan's face, she probably shouldn't take that off in front of her. The girl had that same expression as the first time she'd seen Jordan in her underwear. Jordan grinned; Megan was easily impressed. She slipped into a pair of joggers and a dry t-shirt, hoping that would restore Megan's ability to have a normal conversation.\n\n\"You're shivering...,\" Jordan said, as she sat next to Megan. \"And your lips are turning blue.\" She kissed them lightly for emphasis.\n\nMegan gave a satisfied little moan. \"But that helps. Do that again.\"\n\n\"What helps is to get out of these wet clothes. I'd run you a hot bath but...\" Jordan gestured helplessly at the size of her room. \"I think you should have a hot shower though; warm up a bit.\"\n\n\"I'm not getting anywhere near a shower with you around! You clearly have no respect for boundaries,\" Megan said jokingly.\n\nJordan laughed. \"You seemed to quite enjoy it at the time,\" she teased back.\n\nThis was the first time they'd addressed that situation again. As she said it, she wondered if it had been the wrong thing to say. She didn't want Megan to think she didn't take her objections serious.\n\n\"Hmmm, I did...,\" Megan finally admitted, lifting the weight of the world off Jordan's shoulders. \"I really thought then that you just wanted sex though,\" she added, without meeting Jordan's eyes.\n\nJordan raised Megan's head up with her hand and looked deep into her eyes. \"I really didn't. I promise.\" She kissed Megan lips affectionately. \"You're not getting off that easy,\" she added with a smile.\n\nMegan started to say something but stopped herself. She went bright red. Jordan burst out laughing. What was that thought? She was dying to know.\n\n\"What did you want to say?\"\n\n\"Nothing!\" Megan blushed even harder.\n\n\"I hope it didn't have anything to do with getting off?\"\n\nMegan's reaction told Jordan that she'd guessed right.\n\n\"It didn't!\" Megan burst out, before launching a well-aimed punch at Jordan's shoulder. As Jordan started laughing, Megan got up quickly and said: \"I think I'll have that shower after all.\"\n\n\"Go ahead. Although I now think that maybe you'd better cool off instead of warm up.\" Jordan was still laughing as a mortified Megan disappeared into the bathroom.\n\nJordan took the opportunity to take off her wet underwear. As she kept her clean underwear in the bathroom, she slipped back into her joggers and t-shirt without it.\n\nShe fidgeted restlessly. What should she do while she waited? The thought of Megan naked in her shower, just an unlocked door away, was seriously distracting. Once again, she found herself sorely tempted to join her. She might have, if she hadn't made that mistake once before. Instead, she sat down on her desk chair and played on her phone, not really taking anything in.",
        "When Megan emerged from the bathroom, she was wearing Jordan's satin boxing robe. Her pink hair was even punkier than usual, clearly having been towel dried roughly. She gave a quick twirl, showing off Jordan's name in large letters across the back of the robe. She looked so adorable in the bright green garment with the black trims that Jordan was speechless for a moment.\n\n\"There wasn't anything else,\" Megan said shyly, when she saw Jordan staring at her.\n\nShe was right. Apart from Jordan's underwear, there wasn't a single piece of clothing to be found in that bathroom. Even the robe was only there because Jordan had been trying to steam out some creases. Jordan wondered suddenly if Megan had borrowed some of her underwear or if she'd decided to go commando too? She certainly kept pulling that robe together nervously as if she was hiding something. Jordan mouth went dry and she took a quick swig of tea.\n\n\"Anyway, I was sort of waiting for you to join me in the shower,\" Megan said, casually pushing the robe open a little bit to reveal a deep, bra-less cleavage.\n\nJordan almost choked on her tea. \"You're joking, right?\"\n\nShe was about to explain how she would have loved to, but thought that she'd be out of line again, when Megan giggled.\n\n\"Yeah, I was.\"\n\n\"Damn girl. What are you doing to me?\" Jordan burst out, grinning at Megan's cheekiness.\n\n\"Well...,\" Megan said as she started untying the band that held the robe together.\n\nJordan moved to the edge of her seat and hoped her eyes wouldn't pop out of her head with the intensity of her stare.\n\nMegan hesitated and fidgeted. Jordan saw that her hands on the band were shaking lightly.\n\n\"I'm sorry...,\" she said. \"I'm not usually this shy. It's just... You make me so nervous.\"\n\nJordan smiled at her warmly, her heart melting at the girl's admission. \"Hey, it's okay,\" she said, as she got up and moved towards Megan, intending to take her in her arms.\n\n\"It's not... I really wanted to be all smooth and sexy. And just drop this robe for you. But...\" Megan averted her gaze and shuffled on the spot, clearly losing her nerve rapidly.\n\n\"Why don't we do it together then?\" Jordan pulled her shirt over her head as she set another step towards Megan.\n\nMegan's eyes grew big as she looked at Jordan's now naked upper body, her gaze sliding over her stomach, her arms, her breasts.\n\n\"Oh Jordan, you're so hot...,\" she mumbled. \"Your abs... They just don't look real.\"\n\nJordan suppressed a snicker and closed the distance between them. She took Megan's hand and lay it on her belly, enjoying the sensation of the girl's hand on her skin.\n\n\"They are real,\" she said. \"This is all real...\" She moved Megan's hand to one of her small breasts. \"And it's all yours.\"\n\nShe wrapped her arms around Megan and kissed her, their tongues embracing again as they had done in the pouring rain. Megan's hands explored her upper body carefully, as if she was still questioning its authenticity. A shiver of pleasure went through Jordan's body as Megan's fingers brushed over her nipples.\n\nJordan touched the band of the robe and asked: \"May I?\"\n\nMegan nodded and Jordan slowly untied the knot. She let the robe slide open to reveal a strip of nakedness down the centre of Megan's body. Jordan forced her eyes to go slowly and trace a path from Megan's collarbone, to her belly button, and then to her sex. She took in the strip of light-coloured hair that seemed to show her the way; invite her to follow it down.\n\nWith another look at Megan to make sure it was okay, she slid the robe off her shoulders and let it drop to the floor. Her mind going blank with sheer affection and desire, she marvelled at Megan's breasts as they were revealed. She remembered the feeling of them in her hands; their soft weight resting against her palms.\n\nShe took Megan in her arms again and pressed her naked chest against Megan's. Her hands slowly traced Megan's back and found those cute little dimples above her buttocks that matched the ones in her cheeks, which she had first discovered in the shower. Her hands followed the curve of her buttocks down and came to a rest there.\n\n\"You are so beautiful, Megan,\" she said softly.\n\n\"Lose the sweatpants,\" Megan replied, rather less emotionally.\n\nJordan grinned and complied eagerly. As the fabric slid down her thighs, she watched Megan take in the new parts of her body that were revealed to her.\n\n\"God, you are perfect,\" Megan huffed, almost in frustration, before kissing Jordan eagerly.\n\nHer kiss had a new urgency, her lips and tongue pressing into Jordan's hungrily, devouring her. Jordan responded by pulling Megan's body into her and guiding her towards her single bed, where they crashed down rather unceremoniously; a tangle of naked arms and legs.\n\n\"I never put out on the first date,\" Megan said, pausing. It seemed she was surprised to find herself in this position, rather than trying to stop herself.\n\n\"I feel like we've sort of been dating for a while, in a way...,\" Jordan replied sincerely.\n\n\"Yeah, me too...\" Sufficiently reassured, Megan resumed her ravenous kisses of Jordan's receptive lips.\n\nFor a while, they were all over each other: rolling and turning; caressing and touching, tangling and untangling themselves, while their lips never broke contact. It was when Megan's hand slipped between Jordan's legs and made her gasp in surprise, that they slowed. Panting, Jordan settled half on top of Megan, her head on Megan's shoulder.\n\nMegan's fingers slid between her lips and traced her slowly yet deliberately. Megan was a woman on a mission. Jordan moaned as Megan's fingers found her clit and gently started rubbing it. She propped herself up to kiss Megan again and matched the movements of her tongue to those of Megan's fingers.\n\nBreaking off the kiss, she let her own hand slide down Megan's belly and over the neat strip of coarse hair. Her fingers glided into her slit, which was slick with her moisture. Exploring gently, she listened for Megan's cues as she zeroed in on her sensitive areas. Soon, it became hard to distinguish between her fingers and Megan's, her clit and Megan's, as they settled into an intoxicating rhythm of synchronised moves.\n\nHer lips were on Megan's; then Megan's voice was in her ear, moaning quietly; her mouth was on Megan's nipple; Megan's mouth on hers; their lips met again. It was like a well-coordinated dance that neither of them had rehearsed, yet both of them executed perfectly; complementing and completing the other's every move.\n\nMegan pushed her hips up and started to breathe faster. Jordan felt herself getting close to her climax too, which was encouraged further by seeing Megan's body responding to her own pleasure. Continuing as long as she dared and concentrating on holding back her own desire, she kept indulging Megan while raining down kisses on her neck and chest. When Megan groaned loudly while at the same time giving a hard thrust with her hips, Jordan had to squirm away from Megan's fingers. Close call.\n\n\"Not yet...,\" she gasped.\n\n\"I want to taste you,\" Megan murmured.\n\n\"I want to taste you too.\" The thought made Jordan almost come again.\n\n\"Turn around...\"\n\nJordan pried herself away from Megan's arms. As she shuffled and prepared to get into position, Megan broke through this slightly awkward phase by grabbing on to her thighs and pulling her down over her face. Jordan didn't have much time to think about how quickly Megan was going to be intimately familiar with her pussy, as right in front of her own face, wiping every coherent thought from her brain, was Megan's.\n\nThere was a brief moment in which they both hovered, not yet giving into the desire of devouring what was in front of them. Then Megan gave another tuck on Jordan's thighs and Jordan complied by settling herself onto Megan's mouth. She gasped as Megan's tongue slid between her lips and started licking and sucking her eagerly.\n\nOverwhelmed by desire, Jordan lowered her own face to Megan's pussy. She dipped her tongue inside her hungrily and took in the taste of her sweet juices. Feeling Megan's tongue darting skilfully around her clit, she set to work on Megan's, provoking small squeals of pleasure.\n\nThey seemed to have an unspoken agreement to take their time, each pausing briefly when they felt the other getting too close. Jordan wanted this to last forever; she would happily spend eternity wrapped up in this numeric position with Megan. Inevitably, however, their lust was building and pauses became more frequent. It became harder to concentrate on giving Megan pleasure when the sensations between Jordan's legs were reaching unparalleled heights. She sensed from the erratic movements of Megan's tongue that she had the same problem.\n\nJordan couldn't hold off much longer and she wanted Megan to come as badly as she wanted it for herself. If they had been in any other position, she would have checked with Megan before starting the home run, but as they were both rather occupied, she decided to take her chances.\n\nIncreasing her pressure on Megan's pussy and no longer intending to pause, she ground herself into Megan's face. Megan's lips and tongue were everywhere and Jordan wasn't sure anymore if Megan was licking or sucking her, or if she was merely rubbing herself against the girl.\n\nShe mimicked the sensations to Megan's pussy as best as she could master and felt Megan's body responding. Megan uttered a muffled moan and her hands were shaking on Jordan's thighs, her fingers digging into the flesh. Suddenly, she was shaking all over and Jordan let herself go too. Their mutual orgasm passed over them in an overwhelming wave of other-worldly ecstasy, as their bodies trembled on top of each other and they groaned into each other's skin.\n\nAfter what seemed an eternity of bliss, Jordan became aware of the sensation of gentle kisses on her pussy and thighs. Megan was slowly waking her up from her climax coma. Jordan crawled awkwardly out of her position on top of Megan, her legs protesting after being in the same position for so long. Sighing contently, she settled back into her position in Megan's arms and snuggled her neck.\n\n\"Oh my god...,\" was all Jordan could say.\n\n\"Yeah...,\" Megan offered, similarly eloquent.\n\nJordan propped herself up on her elbow and looked at Megan's spent face. As she struggled to find the words to describe how amazing Megan was, Megan said, as if reading her mind: \"Just kiss me.\"\n\nWith a smile, Jordan did just that, savouring the irresistible taste of sex on Megan's lips. Megan responded, deepening their kiss as their feelings became one. Jordan again felt that overwhelming sense of affection coursing through her whole body. As she let herself be swept away by it, her eyes welled up, to her surprise.\n\nJordan gently broke off the kiss and settled onto Megan's shoulder, feeling a tear leave her eye. As she listened to Megan's breathing, she realised with staggering clarity that she loved this girl. It may be a while before it would be acceptable to admit it, but there was no doubt in Jordan's mind: she loved Megan, and she would love her for as long as she'd let her.\n\n\"Will you stay?\" She whispered.\n\n\"If you'd like me to.\"\n\n\"I would. I'd like to wake up just like this, with you next to me, every morning,\" Jordan said honestly.\n\n\"I'd like that too. Although perhaps we could try my bed sometime. It's a little bigger.\"\n\nJordan smiled and hugged Megan tight. \"I don't need it to be big. I'll be right here anyway.\"\n\nJordan must have dozed off after that, because she woke up to Megan kissing her gently and caressing her belly.\n\n\"Oh sorry, did I wake you?\" Megan asked innocently.\n\n\"Is it morning already?\" Jordan felt groggy and it was dark in the room.\n\n\"Not quite, but I couldn't wait until morning...,\" Megan replied in a seductive voice, as she rolled on top of the sleepy Jordan. She pushed Jordan's legs apart and settled between them.\n\nJordan smiled and pulled Megan closer, meeting her demanding lips. This would be a long and fun night; the first of many."
    ],
    "authorname": "Salandar",
    "tags": [
        "falling in love",
        "first date",
        "kickboxing",
        "lesbian friendship",
        "lesbian romance",
        "lesbian sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-boxer-3"
}