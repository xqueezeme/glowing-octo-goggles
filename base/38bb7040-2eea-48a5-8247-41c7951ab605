{
    "title": "Aurora - Wings of the Goddess Pt. 03",
    "pages": [
        "This is a work of fiction. All characters depicted are 18 and over.\n\n*****\n\nThey couldn't let Hayley go without introducing her to their old friend O.J. Once the initial shock had run its course, she quickly warmed to the idea of being nailed pussy-to-pussy to a hot little blonde by a foot or so of rigid black plastic. Because it was Beck who was chosen to initiate her into the art. And it was just as much fun for Tanya, who arranged the novice up on her hands and knees then readied her for the impaling with a deep, thorough licking. Hayley watched over her shoulder as Beck backed up with a huge, black plastic dong dangling out of her pussy. She shivered as Tanya scooped it up and mushed her pussy-lips open, thumbing the tip into her tight, pink hole and after a few frantic thrusts she was a goner.\n\nInexperienced Beck might have been but she put up an exuberant display, clamping the dildo in place with her muscles, rocking to and fro to squelch the artificial cock in and out of the squeaking young female. After a few minutes they synchronised and while they didn't slap butts it was close. When Tanya lay on her back and shuffled under Hayley to suck on her dangling breasts, Hayley went off, climaxing in a gush of ejaculate that showered the bed. Not wanting to miss out, Tanya dis-impaled Hayley and quickly took her place, rapidly fucking Beck into a bed-shaking orgasm.\n\nThen, as good hosts do, they bathed their guest and took her to breakfast. Walking her to the shop, Tanya picked out and paid for an exquisite ensemble for Hayley to wear- a gorgeous blue dress with matching knickers and bra. They swapped kisses, phone numbers and email addresses, until the clock struck nine and it was opening time.\n\n\"Am I ever gonna see you guys again?\" Haley asked forlornly at the door, as Beck and Tanya stepped onto the footpath.\n\n\"I certainly do hope so.\" Tanya said earnestly. \"Like I said, you can visit me anytime if I'm around.\"\n\n\"Beck?\"\n\n\"Of course you will! We're about to sail north for a while, heading out this arvo. But when we get back, we'll catch up, I promise.\"\n\nTanya bumped Beck with her shoulder. \"Sorry Sweetheart, you'll have to have my share.\"\n\n\"Oh no.\"\n\n\"No, really. Think you can handle her solo?\"\n\n\"I'll give it a red hot go.\"\n\n\"That's my girl.\" Tanya said and wrinkled her nose. \"There you go, Toots, what do you reckon? Looks like you're on a promise.\"\n\nHayley dipped her head and looked in the direction of her mound. \"Know what? I think I just wet my brand new pants.\"\n\n\"That's my job.\" Beck mugged and then rose up on tiptoes and kissed her on the mouth. \"And it's one I take very seriously.\"\n\nTanya hooked her arm through Beck's and tugged her away. \"We'd better let this poor girl get to work. Bye, Boo'ful,\" she waved, \"be good.\"\n\n\"Wouldn't dream of it.\" Hayley replied. \"And don't forget my membership, Tan.\"\n\n\"I won't. Now find that dream and go for it, young lady, listen to your heart. And for goodness sake, find yourself someone who appreciates girl-cum.\"\n\n***\n\nWatson and Vicky were still busy having breakfast- coffee and hot croissants- when Beck turned up hand in hand with Tanya. \"Hello campers.\" Tanya hailed brightly, \"How was your night?\"\n\nVicky rose, kissing Beck first, then Tanya, as they boarded. \"Had an absolute ball.\" she replied breathlessly, mentally adding, '-ing'\n\n\"How about you two?\" the old man asked.\n\n\"This girl you sold me.\" Tanya said crossly. \"I want a refund.\"\n\n\"Why?\"\n\nTanya badly wanted to say, 'Because she's fucked', but the ink was hardly dry on Vicky's new paradigm so instead she replied, \"Well when we're out on the town no one looked at me.\"\n\n\"You should see the gorgeous new dress Tanny bought me.\" Beck announced excitedly.\n\n\"Poor Tan.\" Watson tutted, \"It's a wonder she hasn't gone bankrupt. So what did you get up to?\"\n\n\"We went to a ss-\" Beck began but Tanya managed to slip in a surreptitious elbow.\n\n\"We just did dinner.\" Tanya replied airily, \"Then hit the pub for a couple of beers.\"\n\n\"I'm surprised they let you in.\" Watson said.\n\n\"Funny you should mention it.\"\n\n\"Really?\"\n\n\"Uh huh. Let's just say it always pays to carry your passport. Isn't that right, Beck?\"\n\n\"Uh huh,\" Beck nodded, \"and what about you guys? How was your night?\" And she wanted specifics... how many positions, how many orgasms, how many times did her old man cum in or on her?\n\n\"Oh...\" Watson shrugged, then he and Vicky traded a glance, \"we just had a quiet one in.\"\n\nA quieter one, at any rate, while the neighbours argued loudly into the night. Trapped in the husk of a cold, sexless marriage, the sixty-five year-old retired executive had been badgering his dowdy bride to try swinging. She wanted none of it, to the old man's frustration, interested only in perpetual financial security. So the thought of some busted-ass yachtie, a man not much younger than he, blatantly fucking that brown-haired young stunner was like a kick to the balls for the cashed-up old businessman. His wife eventually left, storming out of the marina, heading back to town and the luxury high-rise where Beck and Tanya would soon be entertaining their new friend. Whereupon the cruiser's old owner locked himself in the saloon, with a fridge full of grog and some porn DVDs, and spent the rest of the night beating himself senseless.\n\n\"Hmm...\" Tanya intoned, \"I bet you did.\"\n\n\"What a waste.\" Beck sniffed, knowing full well it was bullshit.\n\n\"Oh I don't know,\" Vicky said, her cheeks bunching with a wall-to-wall smile, \"we did drink lots of Champagne. Didn't we, Damo?\"\n\n\"Can't remember.\" Watson shrugged. \"I passed out after the fourth or fifth bottle.\"\n\n\"Right.\" Tanya replied, not believing a word. The nape of her neck tingled and she could feel someone's eyes boring into her. Turing her head, she looked over her shoulder at the big black cruiser a couple of berths away, and its wealthy old owner, standing on the after-deck, coffee mug clutched in a white-knuckled hand. He was staring at the yacht and the gathering of females- a teen, a twenty-something, another one in her thirties, all of them so gorgeous he wanted to cry. And there, in the middle, surrounded by pussy, the lone old pervert, who'd spent half the night volubly... fucking... the gorgeous young crumpet in green.\n\n\"Good morning.\" Tanya waved. \"Nice day for it.\"\n\nThe sour old codger turned with a shake of the head and disappeared into his boat muttering obscenities\n\n. \n\nTanya watched him go, blinking. \"Well that was rude.\"\n\n\"What?\"\n\n\"That rude old man. I just said good morning and he totally blew me off. And not in a good way, either.\"\n\n\"Oh...\" Watson shrugged, \"that's just us nautical types. We like to keep to ourselves.\"\n\n\"Macca!\" Beck said, patting Vicky's knee, \"Are you gonna come for a sail?\"\n\nThey'd been so busy overnight the subject hadn't come up. \"Well I'd love to, Becks. As long as that's okay with your dad.\"\n\n\"Dad?\" Beck grinned. \"Can she?\"\n\nWatson and Tanya exchanged an eloquent glance. \"You'd better ask Tan.\" he shrugged, \"She's the boss.\"\n\n\"Well I didn't bring her here just to play tiddlywinks.\"\n\n\"And I still have to break in my mop.\" Vicky said hopefully, unable to wipe the smile off her face.\n\n\"So I guess that settles it.\" Tanya sighed. \"Damo. I'm entrusting you with the firm's most valuable asset. Roger's PA. You gotta promise you won't let anything happen to her.\"\n\n\"That's okay,\" Beck piped up, \"I'll be the one looking after her.\"\n\n'Oh no you won't' Vicky thought.\n\n\"Tanny?\" Watson asked, \"Don't wanna come with? There's plenty of room.\"\n\nTanya lay her hand on his shoulder. \"Love to, Sweets, but I gotta fly. Literally. I'm on the eleven twenty five to Brissy.\"\n\n\"Not taking the Stream?\"\n\n\"Bloody Roger's got it.\" Tanya tutted, \"You'd think he owned the flippin' thing.\"\n\n\"I thought he did.\"\n\n\"That's not the point! Airlines,\" she shuddered, \"brrrrr...\"\n\n\"Don't worry, Tan,\" Beck said, \"when I'm your pilot you can have first choice. Roger can fly RPT.\"\n\nTanya tousled Beck's gleaming hair. \"Well that's the plan, Stan. What do you reckon, Macca? Wanna hang out with these guys for a while?\"\n\n\"Well, yes, I'd love to, but Damon hasn't officially invited me yet.\"\n\n\"Making you gag for it, huh? Damo? Got room on board for this sweet little scrubber?\"\n\n\"That depends. Can you vouch for her. I have standards, you know.\"\n\n\"Hundred and ten percent. She has her own bucket and comes in a size eight bikini.\n\n\"Very promising. How long can I keep her?\"\n\n\"I'll need her back by the fourth at the latest. Ten days. Is that long enough? Just drop her where's there's any decent-sized airport.\"\n\n\"What do you say, Vick?\" Watson asked, \"We could poke up north for a while. Spend a few days out on the reef.\"\n\n\"Oh you'd soooo love the reef, Vicky!\" Beck said, grasping her hands. \"I can teach you to free dive.\" And there was another sort of diving she would dearly love to show her. If push came to shove and fantasy came to reality.\n\n\"If that's okay with you guys?\" Vicky said.\n\nThere was a chorus of 'Mmm hmm's.\n\n\"That settles it.\" Tanya said. \"Beck? You know that thing you wanted to show me? Downstairs? In your cabin?\"\n\nBeck squinted in thought for a moment and the light came on. \"Oh, right. Come on down and let's take a look.\"\n\nTanya emerged ten minutes later, wet from ear to ear like she'd just been eating watermelon, wafting the scent of wet puppy. Beck came up, similarly dishevelled and all aglow from a vigorous tongue-lashing. \"Well, Macca,\" Tanya said, \"I'd better be off. May god bless you and all who sail in you.\"\n\n\"God can kiss my big fat butt,\" Vicky replied, \"but thanks for the sentiment.\"\n\nThey kissed. Tanya smelt funny. She tasted funny too. \"Thanks for bringing me up, Boss.\" Vicky whispered in her ear, \"And for everything else.\"\n\n\"You just have an awesome time, Darling. That's an order.\" Tanya looked over Vicky's shoulder at Watson. \"Damon. There might be pirates. Be a dear and walk me to the gate?\"\n\n\"I'll take you.\" Beck hastened and Watson put a hand on her arm.\n\n\"You had her last night.\" he said, \"It's my turn.\" Climbing out of the cockpit, he jumped onto the concrete finger and held out his arms. \"Madam.\"\n\n\"Oooo...\" Tanya cried, \"Madam. You don't get called that every day.\" With a farewell kiss for Beck, Tanya stepped down onto the swim platform and onto the berth, straight into Watson's waiting arms. \"Laters, Macca.\" she waved, \"Be a good girl.\"\n\nVicky nodded slowly and emphatically. \"Definitely not.\"\n\n\"Give her the safety brief, Moosh,\" Watson called, \"then crank up the donk.\"\n\nBeck saluted. \"Aye aye, Captain.\"\n\nArm in arm, they set off for the gate, and once they were out of earshot Tanya looked at him. \"What do I tell Rodge?\"\n\n\"I'll bring her back in one piece, I promise.\"\n\n\"I mean about plan 'B', silly.\"\n\n\"Plan what?\" Watson frowned. \"Oh, B, Plan B. You mean operation 'Make Beck's Wildest Dreams All Come True'?\"\n\n\"Seems only fair. She did it for us.\"\n\nWatson heaved a sigh. It was like standing on a precipice, looking down. It reminded him of when he was a kid, poised on the edge of the ten-meter diving platform, looking at the pool, impossibly small, way down below. Overcome by the sense that he might miss the water and smash into the concrete instead, he had never taken that leap, descending to the five-meter platform before jumping off. And it felt much the same now, the longing, the fear. \"She's going to make an awesome pilot.\" the old man intoned.\n\n\"Is that a yes?\"\n\n\"If you guys are up for it.\"\n\n\"Yessss!\" Tanya squeezed his arm. \"You're doing the right thing, Damon, I promise. The Universe brought us together for a reason. None of this has happened by chance.\"\n\n\"Hang on.\" Watson glared, \"That's my line.\"\n\n\"Suffer baby. What goes around comes around. You can now enjoy the fruits of your own influence.\"\n\nWatson exhaled through puffed cheeks. \"It's gonna be tough. Letting her go.\"\n\n\"It's not forever, Sweetheart.\"\n\n\"You'll look after her, won't you?\"\n\nTanya leant away from him, scowling. \"What on Earth makes you think she needs looking after?\"\n\nWatson laughed. \"Touch\u00e9.\"\n\n\"Look. Anyone who wants to get to her will have to go through me. Then Macca. Caddy and Maya will guard the flanks while Ally protects the rear, lucky bitch. Don't worry, we've got her covered.\"\n\n\"Don't fuck with the sisterhood, huh?\"\n\n\"You better believe it.\"\n\nWatson propped as a tear spilled from his eye. \"What the fuck?\" he demanded angrily, swiping it away, \"where did that fuckin' come from?\"\n\n\"Your eye, Sweetheart.\"\n\n\"Frikken' hay fever.\" Watson muttered, palming his eyes.\n\n\"It's love, Darling. Nothing to be ashamed of.\"\n\nThe closer they got to the gate, the slower they walked. \"Wish you could stay a few days.\" Watson said.\n\n\"Oh, we can hang out any old time.\" Tanya replied. \"This one's for Macca.\"\n\n\"How's she been faring?\"\n\n\"She's had her ups and downs. She nearly went back a couple of times, that's why I brought her up here. To see Doctor Watson for a jolly good top up.\"\n\nWatson had spent half the night topping her up and she had a slow seepage of semen from her pussy to prove it. \"Well,\" he sighed as they pulled up at the gate, \"here we are.\"\n\nThey fell into a clinch, oblivious to onlookers, and exchanged a deep passionate kiss. \"Mmm...\" Tanya wiped her mouth, \"can't wait til it's my turn.\"\n\n\"Tan?\" Watson asked. \"Why does your face taste like pussy?\"\n\nTanya hefted a shoulder, \"And why does my pussy taste like face? Who knows? It's just one of life's mysteries.\"\n\n\"Dammit!\" Watson cursed under his breath, \"Wish we had time for one quick-\"\n\n\"Patience, Darling.\" Tanya shushed, finger to his lips. \"There's plenty of time.\"\n\n\"Hope so.\" the old man frowned. \"Anyway, Tanny, I guess I better let you go, and as usual thanks again for everything. One thing's for sure, when Beck does go, I know she'll be in the best of hands.\"\n\n\"Yes. You do.\"\n\n\"I just hope she takes the chance seriously. She likes to play you know, and she's very persuasive.\"\n\n\"I'll make sure she knuckles down.\" Tanya said and patted his arm. Realising her faux pas she slapped a hand over her mouth. \"Ooops... I guess I better rephrase that. Seriously though. Here's that shot at motherhood I so badly wanted.\"\n\n\"With benefits?\"\n\n\"Strictly rationed.\" Tanya winked, \"Every time she passes an exam.\"\n\n* * *\n\nThe surly old neighbour was back on the deck of his cruiser, watching the beautiful brunette and skinny little blonde tomboy, both in bikinis, untie the yacht then nose out of the berth. That other lucky bastard was nowhere to be seen... lying all alone in his cabin with any luck, dead from a coronary.\n\nClearing the marina, Beck stuck her head through the hatch and yelled downstairs. \"Where to, old boy?\"\n\nBusy banging out another episode, Watson didn't even look up. \"You tell me.\"\n\nBeck withdrew. \"Saint Bees it is.\"\n\n\"Where are we going?\" Vicky asked, hardly able to breathe for the excitement.\n\n\"A sweet little island with a sweet little surprise.\" Beck replied. \"Here. Come and take the helm.\"\n\nWhile Vicky steered, Beck scurried to and fro, hoisting the sails and a short time later Watson heard the engine shut down. Aurora carried on at the same speed, wind-powered now, the water hushing and gurgling past the hull. The old man stuck his head out of hatch. \"Ahoy there, Beck. Where are we going?\"\n\n\"As if you care!\" Beck sniffed. \"Go on back to your computer.\"\n\n\"No, really. So they know where to look for my body.\"\n\n\"Saint Bees.\" Beck said, \"If you really must know.\"\n\nWatson screwed his face up. \"Again? Why don't we just move there?\"\n\n\"Stop complaining. If there's nobody there we can camp on the island. And introduce Macca to the...\" she winked, \"special residents.\"\n\n\"Special residents?\" Vicky echoed. \"What special residents?\"\n\n\"You'll find out. Dommy?\"\n\nWatson shrugged. \"I don't care where we go as long as it's not the marina.\" And as long as there were no baleful old men glaring at him, through narrowed eyes burning with envy.\n\nIt was going on for evening when they pulled up to the island. Two other boats were already at anchor in their favourite bay, but when the sun went down they both cranked up and set off the way Aurora had come. Day sailers, obviously, charterers or locals, heading back to the bright lights of home.\n\nMotoring to the island in the RIB laden with camping gear, they set up camp on the grass above a white sandy beach, then gathered up coconuts and firewood. With a hearty dinner of fish curry on board and the campfire dying to coals, Beck stood up and arched her back. \"Know what?\" she said, \"I think I'll go sleep on the boat.\"\n\nWatson looked at her, his eyes bright with campfire-light. \"Why would you want to do that?\" he asked thought he already knew. So he and Vicky could have at it, and make as much noise as they bloodywell pleased.\n\n\"Who knows?\" Beck shrugged. \"She might drag anchor.\"\n\n\"Go back to the boat?\" Vicky asked, \"In the dark? Isn't that dangerous?\"\n\nBeck looked over her shoulder at Aurora's white anchor light, weaving gently in darkness like a drunken star. \"Dangerous? Why?\"\n\n\"It's... um...\"\n\n\"You know, that's probably not a bad idea.\" Watson intoned, silently blessing the girl. \"Just in case.\"\n\n\"Can I have some Milo?\" Beck asked.\n\nWatson compressed his lips. \"You do realise, don't you? You'll have to give that up? If you want to be a pilot.\"\n\nBeck shrugged. \"Then I'd better make the most of it.\"\n\n\"Give up Milo?\" Vicky asked, a little confused.\n\n\"All the sugar.\" Beck explained. \"Makes me hyper.\"\n\n\"Just a small one.\" Watson said. \"I'm serious. If you want to fly you'll have to leave all that behind.\"\n\n\"Mmm... okay.\" Beck nodded. Bending at the waist, she pecked him on the forehead then, standing over Vicky, dipped her head and kissed her lightly on the mouth. Her groin tingled at the feel of Vicky's big, cushiony lips, and the evening's agendum suddenly crystallised. Back to the boat, have a quick smoke, whack on a Bragg sisters' movie. A beer or two or maybe some French Champagne, then crank up her trusty vibrator and go to town.\n\n\"Be careful, Little Mermaid.\"\n\n\"It's okay, Vick,\" Watson reassured her, \"she could drive this thing with her eyes shut.\"\n\n\"You know,\" Beck replied, slipping on a head torch, \"I might just give that a go.\" Gathering up an armful of gear, she carted it over to the beached inflatable and loaded up. Watson pushed up to his feet and followed her, Vicky bringing up the rear.\n\n\"Take it easy, Moosh.\" he said, \"Make sure you tie-off the tender.\"\n\n\"Yeah, yeah...\"\n\n\"And don't stay up watching movies all night. I want you back here bright and early.\"\n\nThe RIB squeaked over the sand then nosed into the desultory surf. \"And don't stay up nya nya nya...\" Beck mocked, wading out to her knees before jumping on board. \"Poor Vicky. Sure you don't want to come with me?\"\n\nWatson steadied the tender while Beck shrugged on a blue and yellow PFD. Dropping the motor, she gave the starter a couple of hip-twisting pulls and sat on the floor once it sputtered into life. \"Ready to cast off!\"\n\n\"Bon voyage, Moosh.\" Watson huffed, giving the RIB a shove as Beck clunked the motor into gear, \"Next stop New Zealand.\"\n\nPuttering out through the miniature breakers, Beck hit open water and throttled up to a raucous howl. Side by side on the beach, Watson and Vicky watched her disappear.\n\n\"God,\" Vicky breathed, \"that girl is amazing.\"\n\n\"Really?\" Watson said darkly, \"Say that after you've lived with her a couple of weeks.\"\n\nVicky drew a short, sharp breath. \"So it's really happening?\"\n\n\"I think it's pretty much unstoppable.\"\n\n\"Oh Damon, that's just fantastic. Does she know?\"\n\nWatson shook his head. \"I'm leaving that to Roger. It's his money after all.\"\n\nVicky hugged the old man to her flank. \"You'll miss her like crazy, Damon, I know you will, but you're doing the right thing. The greatest gift a father can give his daughter is letting her go.\"",
        "Father. Watson cringed inwardly at the very idea. \"Until she figures out how much work she has to do.\"\n\n\"Nuh! She'll be such an amazing pilot, I know she will. Just imagine, Beck and Alana, flying all over the world-\"\n\n\"On matching broomsticks. Right.\"\n\n\"On matching which-whats?\"\n\n\"Broomsticks, Vicky. You know, as in witches. Broomsticks. Aerial conveyances. For the use of.\"\n\n\"Pretty flash broomstick if you ask me. The Stream.\" There was a brief interlude of silence then Vicky said, \"Her poor mum. She would have been so proud.\"\n\nProbably not. Even as they spoke, Beck's 'mum' was busy sleeping off a massive drug overdose, in an unmarked grave in an outback town, itself slowly expiring under the pall of an open-cut mine.\n\n\"Time for bed, Vick.\" Watson sighed. Bed, but not sleep.\n\n\"Already?\"\n\n\"Unless you want to hit the casino.\"\n\nVicky looked up at a vast, luminous banner, the Milky Way, stretching to eternity overhead. \"Know what?\"\n\nWatson shook his head. \"No.\"\n\n\"Bed has such a nice ring to it.\"\n\n\"It's actually just sleeping bags on a double-bed air mattress.\"\n\n\"Luxury!\"\n\n\"Guess what?\" Watson said then offered his arm, \"I managed to sneak a bottle of French Champagne into my pack.\"\n\n\"Really?\" Vicky looked at him, beaming. \"Dammit, Captain. You think of everything.\"\n\n\"Be prepared, I always say.\"\n\n\"So shall we?\"\n\n\"Lets shall? What do you reckon? It's not everyday you get to stay in a hundred billion star luxury hotel. Champagne, bed...\"\n\n\"And rampant dirty sex.\"\n\n\"Let's face it, Macca, you don't deserve one skerrick less.\"\n\n* * *\n\nAurora sped through the night at one thousand six hundred kilometres an hour, heading due east for the dawn. Beck lay back on the settee bed, half drunk and blissfully stoned, dildo-ing her vagina to the brink of delicious orgasm while fantasising about Vicky. About kissing her, sucking her tits, eating her out. About fingering her sweet little pussy while tonguing her to a big, gushing cum. Only recently a virgin, Vicky would be a deliciously tight fit, and that little pink tic tac would pop right into her mouth.\n\nA few hundred meters away, paralleling Beck on her night flight, Watson was busy turning Beck's fantasy into juicy reality, fucking Vicky doggy-style first, on a beach towel under the stars, then a thirty minute medley in the tent starting with cowgirl, then working their way through another bout of doggy before finishing off with good old fashioned missionary. Replete, they all slept, Beck tucked up under a sheet in her cabin on the boat, Watson and Vicky under a sleeping bag, in a tent on an island under the palm trees.\n\n* * *\n\nThe sound of an approaching outboard penetrated Watson's sub-consciousness enough to elicit a brief, lucid dream. When a hand shook the tent and a voice cried, \"Wakey, wakey!\" he grumbled awake while Vicky came-to with a start beside him.\n\nHe could tell the moment he opened his eyes it was still early. As he rolled onto his back his flaccid cock flopped flat onto his belly, all fat and happy, caked with the residue of a young female's slippery insides. \"What time do you call this?\" he croaked, while Vicky flapped around in a panic to hide her nakedness.\n\n\"You said bright and early, old man.\" Beck said, setting off to light up the camp stove.\n\n\"You're a disgrace to idle youth, you are.\" the old man grumbled. \"Aren't teenagers meant to sleep in till lunchtime?\"\n\n\"It is lunchtime.\" Beck retorted blandly, \"Somewhere.\"\n\nVicky shimmied into her bikini bottoms and shorts, then pulled a T-shirt over her pointy little tits. Far more used to bras and business shirts than such unfettered lack of confinement, her girls were jiggling and bouncing with glee. Unzipping the flap, she crawled out of the fabric womb into the light of a brand new day. And what a day it was, with a cobalt-blue vault of clear, cloudless sky overhead, stirred by nary a breeze, the temperature a few degrees below absolute perfect. She arched her back, stretching, then joined Beck at the side of the burnt-out campfire. \"Good morning Little Mermaid.\"\n\nBeck stood and they exchanged a breast-to-breast hug, while Watson threw their bedding out and crawled into the daylight. Beck pumped up the Shellite stove and flashed up the preheat, setting three enamel camping mugs on the fire-blacked rocks before assembling the components of a morning cup of tea. Emptying the tent, Watson set about dismantling the flimsy structure, in a hurry to get the housekeeping done so they could devote the rest of the day to more important matters. \"Umm...\" Vicky said, turning on the spot, \"are there any public toilets around here?\"\n\nBeck straightened, then spun the lid off a waterproof plastic drum and held out a roll of toilet paper. \"About a hundred meters over that way.\" she said, gesturing with her chin in the direction of the scrub. \"Make sure you bury it if it's a... you know... and be careful you don't sit on a scorpion.\"\n\n\"Scorpion?\" Vicky cried in alarm. \"I might get stung?\"\n\n\"No.\" Beck shook her head.\n\nVicky shrugged as if to say, 'Then why?'\n\n\"Think about it.\" Beck said, her sky blue eyes big and sincere, \"You're a teeny weeny animal just minding your own business, then all of a sudden, some dirty great human the size of a mountain, squats over the top of you and-\"\n\n\"Becky!\" Watson snapped.\n\n\"Just saying, is all.\" This, in fact, was the very same warning that had come straight out of her old man's mouth and she couldn't see why she shouldn't just pass it on.\n\n\"Maybe I'll just hold on.\" Vicky said nervously.\n\n\"Pfft!\" Beck blew a raspberry. \"This is as nature intended. Do you know, the Earth actually selected for animals that could fix nitrogen in their wee? That way, they could help nourish the grass that fed the animals, that fed the-\"\n\n\"For pity's sake,\" Watson cried, \"the poor girl just wants to go to the loo.\"\n\n\"That's okay,\" Vicky said unconvincingly, \"a girl's gotta learn. Still, I don't really fancy being bitten on the bott-bott by a pissed-off bug.\"\n\n\"Or pissed on.\" Beck snorted.\n\n\"Rebekah!\" Watson barked, \"That will do. Look, Vick, I can run you out to the boat if you'd prefer. You can just use the dunny.\"\n\n\"No, no,\" Vicky raised a hand, \"Becky's right. It is our natural state, isn't it? How deep do I need to dig, oh Teacher?\"\n\n\"You'll work it out.\" Beck replied, \"In fact, tell you what, I'll come with if you like. To keep a lookout.\"\n\n\"Would you?\"\n\n\"Sure.\" Straightening, Beck looked at Watson. \"Old man! The preheat needs relighting. Handing over.\"\n\nWatson crouched down beside the cooker. \"I have the con.\" he said, dribbling fuel into the little pump-up camping stove. \"And don't be all day.\" he called as they set off hand in hand. \"Places to go, people to meet...\"\n\nA smile crept unseen onto the old man's face. 'And you, my dear Macca, are in for a little surprise.'\n\n* * *\n\nThe island hosted an enclave of Koalas, in a swathe of eucalypt forest a few hundred hectares in area. Beck and Watson had been there so many times they were on first-name terms with most of the creatures, whom they'd christened collectively the Beastie Kids. Beck led the ascent, as usual, but had to pull up at regular intervals to let the others catch up. She looked every inch the explorer in her khaki cargo shorts and sleeveless green T-shirt, a war-weary pack on her back and a pair of bird-watching binoculars slung round her neck.\n\nWhen the other two caught up, halfway up the hill, Beck was gazing through the binoculars at the skyline. \"Well would you look at that.\" she breathed.\n\n\"What can you see?\" Vicky panted, hands braced on her knees. \"The grim reaper? Is he looking for me?\"\n\n\"My totem.\" Beck said in a quiet voice.\n\nThe old man tapped her arm and she handed him the field glasses then pointed. While Watson set about trying to pin the target, Vicky propped an elbow on Beck's shoulder and swiped a beading of sweat from her brow. \"You little mountain goat you. I think I'm about to have a cardiac arrest.\"\n\nBeck whipped off her bush hat and pressed her ear to Vicky's chest. \"Aww...\" she smiled with a faraway look in her eyes as Vicky blinked in surprise, \"Listen to your sweet little heart go pitter-pat.\"\n\nVicky went to pin Beck's head against her breast but stopped herself mid-flight and dropped her arm by her side. \"Give it to me straight, doc. Am I gonna make it?\"\n\n\"D'oh,\" Beck scoffed, looking up, \"it's doing a hundred and twenty, max.\"\n\n\"I thought you were a runner.\" Watson teased, his own heart pounding at the bars of his ribcage.\n\n\"Plodder, Damon, not a jolly gazelle.\"\n\n\"Can you see my bird?\" Beck asked.\n\n\"Nuh,\" Watson shook his head, scanning the treetops. \"He must have landed.\"\n\n\"She.\" Beck corrected as she turned on the spot. Her arm shot out. \"There she is.\"\n\n\"What are we looking at exactly?\" Vicky asked.\n\n\"My totem.\" Beck replied, \"A Brahminy kite.\"\n\nWatson nudged Vicky's arm with the binoculars. \"Here, take a look, just above the treeline. There's a raptor, with chocolate brown wings and tail and a bright white head and chest. You can't miss it.\"\n\nVicky pegged the target and tried to slow her breathing. \"That's beautiful.\" she quavered, still partially puffed. \"What's it called?\"\n\n\"Brahminy kite.\" Beck announced, \"Haliastur indus.\"\n\n\"And what was the other thing you called it? A totem?\"\n\n\"No. My totem.\"\n\nVicky handed the binoculars back. \"What's that supposed to mean?\"\n\nBeck fell briefly into a flashback.\n\nThe first time they reached land after the trauma of her escape, they anchored in the river of a small coastal city. Watson was far too paranoid, and Beck far too frightened, for her to go onshore, so she was left, hiding out, while Watson went through the process of buying her clothes- shorts, shirts, dresses, intimate apparel- and reprovisioning the yacht with an extra mouth to feed. She needed other stuff as well, girl stuff, like soaps and shampoos, like brushes, hairclips and scrunchees, all of them utterly alien to the old man. Even buying them cast Watson into a state of squirming self-consciousness, an old man buying stuff for someone young enough to be his grand daughter.\n\nAnd every time the old man left and the frightened little runaway fretted alone on the boat, a pair of visitors would turn up, chocolate-winged, white-bodied birds of prey, come to look after her. Brahminy kites.\n\nBy the third and last day of the layover, Beck was looking forward to the old man leaving just to see if the two birds returned. And they did, as soon as he disappeared in the RIB. And from then on, whenever they were near land, she was always on the lookout. And as often as not she would see them- the very same birds she insisted, the same individuals, and old man was not about to argue. Besides, it was he who decreed them her totem, her spirit animals, who would see her safely through the rest of her days.\n\n\"Becky? What's that mean? Your totem?\"\n\n\"Oh,\" she shrugged, \"you know, like a mascot. Never mind, I'm just being silly.\"\n\n\"No sillier than I was back in the day.\" Vicky said darkly. \"At least you can see the jolly things.\"\n\n\"We all done with the mytho-ornithology?\" Watson rumbled.\n\n\"Mytho-ornithology?\" Beck scoffed, \"Did you just make that up?\"\n\n\"No,\" Watson glared, \"I did my PhD in it.\"\n\n\"PhD? Bleeding... Psycho... hyper...\" Beck searched the bush for a 'D' word, \"dementia.\"\n\n\"Ah hah!\" Watson levelled an accusing finger, \"So you have heard of it.\" He snapped his fingers. \"Water bottle. Raus!\" \n\nEach taking a gulp from one of Beck's battered plastic canteens, they saddled up again and steeled themselves for the rest of the climb.\n\nBeck was standing under a tree, jumping up and down, when the others plodded panting to her side. Making sure not to look up in case she gave the game away, Beck offered her hand to their sweating guest and towed her into position. \"What can you see?\" she asked excitedly.\n\n\"My whole life...\" Vicky gasped, \"flashing past... in front of my eyes.\"\n\n\"Anything else?\"\n\n\"You mean that beautiful white light? Should I walk towards it?\"\n\nBeck shook Vicky's arm. \"Come on.\" she twirled her finger, \"Look a-round.\"\n\nVicky did so, expecting something at eye-level, a plant, a ruin, some Aboriginal art, but in the end she just shrugged her shoulders.\n\n\"Vickyyyy...\" Beck said, then gestured upwards with her eyes.\n\nVicky looked up. \"Oh my god!\" she cried, startled off the ground, \"Oh my god! It's a Koala!\"\n\n\"Not a koala.\"\n\n\"Oh my god,\" Vicky squealed, jumping up and down with unbridled delight, while a brace of addled marsupials stared back, \"there's two of them!\"\n\n\"Uh huh. So. Do you like my surprise?\"\n\n\"Oh my god!\" Vicky gushed, \"Look at that. You know I've never, ever seen one in the wild.\"\n\n\"Well you have now.\"\n\n\"We had them nailed up there especially.\" Watson affirmed. \"Just for you.\"\n\n\"Oh my god,\" Vicky breathed, shading her eyes, \"aren't they just so flippin' cute? Look at those cute little ears. Just look at those cute little noses.\"\n\nVicky went to take a step underneath and Beck pulled her back. \"Woah, woah, not too close.\"\n\nVicky looked at Beck with a furrowed brow. \"Why not?\"\n\nWatson turned away, pretending interest in some object on the ground, so Vicky wouldn't see him biting his lip. \"These are no ordinary koalas.\" Beck said gravely, an arm around her victim's shoulders, manoeuvring her clear.\n\n\"What do you mean?\"\n\n\"You've never heard about the Saint Bees Koalas?\"\n\nVicky shook her head, suddenly wary. \"No.\"\n\n\"I'm not surprised. The government's been trying to keep a lid on it.\"\n\n\"Lid on what?\"\n\n\"The mutants. You see, these islands were used for weapons tests in World War Two.\"\n\nVicky peered deep into the blonde's big blue eyes, searching for any sign of artifice. \"What sort of weapons tests?\"\n\nBeck returned Vicky's scrutiny with poker-faced sincerity. \"Biological weapons.\"\n\nVicky nodded, vaguely recalling a case she'd studied in law school, something involving Wold War Two, North Queensland and weapons experiments. \"So what happened?\"\n\n\"They couldn't get guinea pigs so they had to use koalas.\" Beck said gravely. \"And they mutated.\"\n\n\"These koalas?\"\n\n\"Uh huh.\" Beck nodded, eyes wide-open and disarming. \n\n\"They mutated how?\"\n\n\"They turned into a brand new species.\" Beck breathed. \"They became flesh-eaters.\"\n\nVicky snorted. \"Oh bull-plops.\"\n\n\"Nuh uh. They're called Phascolarctos carnivosa. Look it up.\"\n\nGoosebumps sprang up all over Vicky's sweat-sheened skin. She looked over her shoulder at Watson, who was down on one knee with his back to them, peering under a rock. \"Damon? Do something about your girl, would you?\"\n\n\"Sorry, Vick?\" the old man replied, not turning around.\n\n\"It's true,\" Beck declared, taking Vicky by the arm and dragging her attention back to the bewildered marsupials. \"Look at their hands.\"\n\nVicky ducked and weaved trying for a clear view of the little grey furballs. \"What about them?\"\n\n\"How many thumbs can you see?\"\n\nAfter staring long and hard, Vicky put a hand over her mouth. \"Oh my god!\"\n\n\"Exactly.\" Beck nodded. \"Two thumbs. And look at those claws. You don't see those on your average herbivore.\"\n\nVicky's hair was standing on end. \"Damon? Is Beck telling porkies?\"\n\nWatson, by now, had his nose on the ground trying to bite back the laughter.\n\n\"I'm not telling porkies!\" Beck protested. \"Just look at those claws.\"\n\nVicky shot Beck a disparaging glance then looked up. \"Well what do they eat?\"\n\n\"Meat!\" Beck said in a low, ominous voice.\n\n\"You mean they're scavengers?\"\n\n\"No.\" Beck shook her head, \"They eat live prey.\"\n\n\"Those sweet little munchkins? Pull the other one.\"\n\n\"It's true.\" Beck insisted. \"They drop down on their victims and dig those claws in,\" she said and her voice dropped to a whisper, \"then crawl up to their necks and sever their spinal chords...\"\n\nVicky looked at Beck from the corner of her eye. \"Rebekah Watson, as I live and breathe. This is the biggest load of malarkey I've ever heard.\"\n\n\"It's not,\" Beck shook her head, \"honest. Tons of papers have been written on them.\"\n\n\"Really?\" Vicky retorted dryly, \"Well how come I've never read any.\"\n\n\"Exactly. You've never heard of Saint Bees either, have you? Yet here we are. And there are the koalas.\"\n\n\"Oh, Becky. There's got to be a logical explanation.\"\n\n\"There is...\" Beck said in Vicky's ear, \"it's called a mutation.\"\n\n\"I'm gonna Google this young lady, and if I find out you're fibbing...\"\n\nVicky looked up feeling distinctly uneasy, as the koala looked back with vacant, beady eyes. Timing it to the heartbeat, Beck drew a short, sharp breath and suddenly barged her.\n\n\"LOOKOUTHE'SCOMINGFORYOU!\"\n\nVicky left the ground with a shriek that made even the koalas blink, then stood clinging to Beck as the shock did a quick lap of her spine. She heard laughter, and looked over her shoulder to find Watson rolling around on the ground clutching his ribs. Pushing Beck away, she stood for a moment, jaw clenched, puffing like a freight train. She lunged. Beck darted nimbly out of reach before dropping to a squat, apoplectic with hilarity.\n\nVicky stood over the laughing girl, fists on hips. \"Why you little rascal, Becky Watson. I've got a good mind to spank your bottom.\"\n\n\"P... promise?\"\n\nWatson struggled to his feet then staggered in circles, similarly stricken. His apprentice had done well. Climbing to her feet, Beck sashayed past him and they slapped palms. \"This whole thing was a setup.\" Vicky fumed. \"Wasn't it, Damon? You were in on it too.\"\n\nGathering her into his arms, Watson gave the irate brunette a loving embrace. \"See one, do one, teach one. We'll come back one day with someone else and you can have a go.\"\n\n\"Flesh eating koala.\" Vicky fumed. \"Like I even believed it.\"\n\n\"You just about shat yourself.\" Beck cackled, then doubled over in another fit of side-splitting laughter.\n\n\"I've got a long memory, Rebekah Watson.\" Vicky wagged her finger. \"One day when you least expect it...\"\n\n\"I really must remember to bring a camera next time.\" Watson sighed. \"That was gold.\"\n\n\"It... would... go... viral!\" Beck declared, smearing her eyes.\n\n\"I'll give you viral?\" Vicky snarled, hooking Beck into a headlock and knuckling her skull. \"You little brat.\"\n\n\"Oh, well,\" Watson said, \"mission complete. Fifteen out of ten, by the way, Moosh. Extra marks for the story about those biological experiments. Very creative.\" Duly praised, Beck performed an elaborate bow. \"Now, if we've finished scaring the pants off our guest we'd better get back.\"\n\n* * *\n\nIt was mid morning by the time they reached the top of descent, where they paused for a drink and a breather. Watson scanned the visible world with the binoculars, then handed them over to Vicky. \"There's your ride.\" he said, gesturing with his chin in the direction of the shapely white yacht, riding at anchor in the small horseshoe bay. Another vessel had turned up in their absence, a beautiful big cat, and another was inbound a few miles away.\n\nClear of the bush and all its prickles and barbs, Beck commenced stripping for the descent. Vicky looked on, patently bemused, as the diminutive blonde peeled off her T-shirt and dropped her shorts to reveal her favourite bikini. Watson was in two minds whether to intervene in the impromptu striptease, but, no. They would be crammed together on a forty-five foot yacht for the next ten days so she might as well get used to it. And besides, the old man was betting Beck would have Vicky comfortably naked by the end of their voyage. Turning her back on Vicky, she swept her hair forward and dropped her chin. \"Remember that day in the pool, Macca?\"\n\nVicky reached for the bow of Beck's bikini top and hesitated. 'In front of your old man?' she wondered, then looked askance at Watson. He eyed her levelly from behind the lenses of his Sun-Smart sunglasses. Licking her lips, she took the proffered bow and gave it a tug. ",
        "Beck turned around, all smiles and pulled on her bush hat. Vicky's pupils dilated as she did her level best not to stare at a perfect pair of firm little tits, just a couple of bumps, with stiff pink nipples standing proudly erect. And no tan lines. \"Come on, Macca,\" Beck said with a jerk of the head, \"there's no more prickles. Let's get a bit of sun in them bones.\"\n\nVicky squirmed restively. The sight of the little blonde's treasures was truly mouth-watering, and the thought of unleashing her own girls into the wild was making her groin throb. But it was wrong, surely, to expose such unmentionables in the public domain.\n\n\"Carry these, old boy?\" Beck said, flicking Watson with her bikini top, oblivious to Vicky's inner turmoil.\n\n\"Like I've got a choice?\"\n\n\"Hold on,\" she said, snapping her fingers at Vicky, \"You can carry Macca's too.\"\n\nTaking a huge breath, Vicky shimmied out of her shorts then unbuttoned her shirt. She could already feel the slippery, slidey sensation between her legs, as she turned on Beck and lifted her hair. \"If you would be so kind?\"\n\nBeck tugged the bow at the nape of Vicky's neck, then did the same in the middle of her back. Vicky turned around, her luscious lips compressed, trying to fight off the smile of unbridled delight. She crossed her arms, hands flat on her breasts, squeezing her treasures together to create the perfect cleavage as her nipples pressed into her palms. \"Umm...\" she said, \"what if we see someone?\" though truth be known she hardly cared.\n\n\"Well this will be their lucky day.\" Beck replied and took her hand. \"Ready? Last one on the beach is a rotten egg.\"\n\n* * *\n\nTheir next destination was out on the Great Barrier Reef. With too little daylight left to reach the immense natural ramparts, they harboured up in the bay for the rest of the day, with a few hours of snorkelling to while-away the afternoon. Clad in nought but bikini bottoms, the two young females cruised the shallows, hunting, exploring, diving down or simply kicking along on the surface. \n\nFor Vicky it was a revelation. For Beck a chance to show off and play instructor. For Watson, on lookout, it was simply a feast for the eyes. Quickly shrugging off her modesty, Vicky thrilled to the sensation of water flowing over her bare skin, delighting, from time to time at the sight of Beck's lithe little frame. Not that she was the least bit attracted to females, certainly not in that way, but the young girl's body was a thing of such beauty. The way she looked, the way she moved, an exquisite little vehicle for a stunning young soul. A work of art, a pint-sized masterpiece.\n\n* * *\n\nWatson awoke at four, way before dawn, and eased off the vee-berth being careful not to wake his sleeping companion. Worn out from their climb and her brush with the flesh-eating koalas, then roundly exhausted by several hours of snorkelling, followed by an evening of barbequed fish and French Champagne, all topped-off with an hour or two of stealthy, steamy, frantic, furtive sex, Vicky slept like she had never slept before, dead to the world and utterly replete.\n\nClimbing into the cockpit, Watson cranked up the diesel and left it idling while he padded forward and winched-in the anchor. Underway at half throttle, he checked his sleeping guest once more then snuck aft and stuck his head through the door of Beck's cabin. Flat out on her belly under a disheveled sheet, the little blonde was sleeping like a babe, hair strewn over her pillow, one bare leg hanging over the side. A surge of love and lust welled up inside the old man but quickly faded away, leaving only the aftertaste of aching regret. In a few short months the dream would be over. He would relinquish his accidental soul-mate to another dimension, hand her on to her future. And be back where he started, a solitary old man sailing over the horizon in the glow of his existential sunset.\n\nStill, it wasn't all bad news. Beck swore black and blue that she was his forever, and once she was a pilot he could fly with her anywhere. Everywhere, in fact, with Beck and her mentor, the funny, feisty, foul-mouthed firecracker, Alana. All pie in the sky, of course, but why not? The Braggs had already shown they had the means, not to mention the will. And to think, all of this because of one simple good deed, fixing a stranger's broken down boat.\n\nMotoring out of the bay, Watson set the sails and once they were underway he shut down the engine. And it happened again, as it always did. Aurora came alive, shuddering and creaking, shouldering her way through the swell at a steady six knots, heeled over, heaving gently as the fifteen knot breeze flowed over the curve of her airfoils. Dialling up the autopilot, Watson set a course for a distant reef, utterly content and totally at home.\n\nIt was just before dawn when a light came on down below and a head popped up out of the hatchway. Beck yawned mightily and looked at him, blinking. \"We on our way?\" she mumbled and palmed her sleepy eyes.\n\n\"Nahh.\" Watson shook his head, \"I just ran these up for decoration.\"\n\nBeck climbed into the cockpit, stark naked, and arranged herself in his lap. \"Where's Macca?\"\n\n\"Still asleep. Actually comatose is probably a better word.\"\n\nBeck reached under her butt and squeezed his meat. \"I heard you fucking her, you dirty old man.\"\n\n\"You did? Well you must have very good hearing. We were in stealth-mode.\"\n\n\"Yeah, well, I might have accidentally had my ear to your door.\"\n\nWatson pinched her bottom. \"You dirty little girl. You'll have to stop doing that, you know. She'll spring you one day.\"\n\nBeck shuffled in his lap to make way for a growing erection. \"I have a right to enjoy it as well.\"\n\n\"Really? According to whom?\"\n\nBeck thumbed herself in the sternum. \"Me!\" she declared then looked around as if checking the coast was clear. \"Was it fun?\"\n\nFun? The old man had unleashed years of Vicky's pent-up sex-energy and had found himself, once or twice, almost fearing for his life. Doggy, cowgirl, on the bottom, on the side, standing, sitting, squatting, she wanted it all. She wanted it hard, she wanted it fast, she wanted it deep, she wanted it dirty, and had a seemingly inexhaustible supply of orgasms. Not to mention an insatiable huger for cum. \"You know, I think I've created a monster.\"\n\n\"With the emphasis on 'mons'.\" Beck wrinkled her nose. \"Does she have a nice pussy?\"\n\n\"First of all, Beck, 'nice pussy' is a tautology. Second of all, it's none of your business.\"\n\nWhile the old man was doing his best to sound irascible, his cock was busy swelling into a raging hardon- if not fully blown then about to be. \"Hmph...\" Beck crossed her arms, \"I guess I'll just have to find out myself.\"\n\nA wave broke to windward and Beck cringed, cackling, as the spray pelted her naked skin. \"Aww look...\" she giggled, \"I'm all wet. And I also got some of that spray on me.\" She stood, feet apart, her thigh-gap silhouetted against the light looming up from below, wide and plump with her pussy lips slightly parted. \"I'm going back to bed,\" she said, and held out her hand. \"Tuck me in?\"\n\n\"Was that 'tuck', or 'fuck'?\"\n\n\"Settle down, Mister, I said 'tuck'. Right after you've given me a jolly good tingering.\"\n\nWatson checked the chart plotter. Their course was taking them south of the nearest obstacles by a good five miles. \"You know, I should probably stay up here.\"\n\nAnother wave broke and Beck hunched her shoulders as the spray caught her a glancing blow. \"Aww come on... just a quickie? All I had last night was Dennis the Dildo.\"\n\nThere was open water on their present heading and Watson had set the radar alarm. Safe as houses. \"I really shouldn't, you know.\"\n\nBeck took his hand. \"Oh yes,\" she nodded, \"you really should.\"\n\n\"What about Vicky?\"\n\n\"Sure. If you think she'd be interested.\"\n\n\"Seriously, Moosh. She might smell your pussy on my cock.\"\n\n\"Taste it more likely. Come on old boy, she's still fast asleep. Please...\" Beck stuck out her bottom lip, \"Just a quick one?\"\n\nWatson double-checked the autopilot, double-checked the chart-plotter. \"You're a bad influence, Missy.\" he griped, getting to his feet, a massive tent pitched in the front of his board shorts.\n\nThey crept downstairs and Watson cast a glance at the door to his cabin. An image of Beck leapt to mind, standing at the door, naked and no doubt interfering with herself. He shook his head. Make that two monsters. Slipping through the door like a little randy cat, Beck threw herself onto her bed and flopped her legs apart. Watson dismasted his shorts then peeled off his sweater while his cock looked around for something to nail. He put a finger to his lips. \"Nice and quiet now, Moosh.\" he whispered then rubbed his hands. \"So how would you like it?\"\n\nBeck sat up, reaching for his cock, then pulled him down with it, reclining as he settled onto her. Wrapping her small, cool hand around the base of his shaft, she ploughed herself open with his tip, then pushed her membrane back and settled him in her hole. \"Ohhhhhh... yeah!\" she groaned, \"Now that's what I'm talking about.\" Bringing her knees up, rotating her pelvis, she hooked her ankles over the small of his back.\n\nWatson gave her an exploratory poke. \"Christ,\" he huffed, \"that's tight.\"\n\n\"Well push harder!\"\n\n\"Sure you don't need some limbering up?\"\n\n\"This is limbering up. Come on, Dommy, really slam it into me. I mean it. I'm so fuckin' horny. I want you to pound me.\"\n\nSometimes Beck's eyes were bigger than her stomach, at least the sexual equivalent. \"Okay. But don't go giving yourself a tummy-ache, okay?\"\n\n\"I won't.\"\n\n\"I've heard that before. Remember the time-\"\n\nBeck clutched the old man's butt cheeks, trying to pull him into her. \"For fuck's sake, Dommy! Just shut up and fuck me.\"\n\nPopping through her outer muscle ring, Watson thrust into her as hard as he dared, halfway between a push and a stab. With barely two thirds of his length inside her, his cock head-butted her rubbery cervix.\n\n\"Ow ow ow!\" Beck yelped, then dug her heels into his butt spurring him on. \"Don't stop.\" she cried, arching her back, muscles clenching his meat as her pussy uttered a little wet fart. \"Holy fuck!\"\n\nPushing up, Watson looked down at the sight of his stiff cock buried deep in the little blonde's belly. \"Christ that looks awesome.\"\n\n\"Quick, Dommy!\" Beck panted, \"Fuck me.\"\n\nWatson settled onto her, then took up a measured pace, flexing his well-muscled back to piston his prick in and out of the girl. It came out each time slicked with bright slime, as Beck's insides reacted gleefully to the impaling. \"Oh god that's beautiful.\" she breathed, belly heaving, eyes closed and head to the side. \"Dommy?\"\n\nWatson picked up the pace, hammering into her. \"Uh huh?\"\n\n\"When Vicky... cums... does she... squirt?\"\n\n\"A little.\"\n\n\"Does she taste good?\"\n\n\"Like something out of a lolly-shop.\"\n\nBeck's hips were humping and writhing, thrusting each time the old man powered into her. \"Is she all nice and slippery?\"\n\n\"Slippery as eel snot and by god is she hot!\"\n\nWatson heard a vague thump outside and screeched to a gasping stop.\n\n\"What the fuck?\" Beck cried, aghast, clawing his butt, \"Why did you stop?\"\n\n\"I thought I heard something.\"\n\n\"For god's sake, it's just the flippin' rigging.\"\n\nWatson listened for a moment then picked up where he'd left off. Beck was on the boil, a few minutes from liftoff, and he settled his weight onto her, driving into her as deep as his cock would go. \"Oh, Dommy!\" Beck mewled, \"Oh, Dommy... I can feel you in my heart.\"\n\nIt was close. By his own estimation he was bottoming-out near the small of her back, between the bulge of her cervix and a resilient, slippery muscle wall. He felt that well familiar flood as her pussy got set to detonate.\n\nA voice yelled, 'DAMON!' and the cabin door flew open. \"Becky!\" Vicky cried in a panic, \"I can't find...\n\n\"Damon?\"\n\nWatson looked over his sweating shoulder at a pair of wide, green eyes.\n\n\"Becky?\" she breathed, her face shrivelling in shock. \"Damon? What the bloody hell is going on here?\"\n\nWatson stiff-armed himself up, his cock withering inside Beck as his blood turned to ice. \"Vicky. Honest. It's not how it looks.\"\n\nVicky screwed her face up until her eyes were wrinkled slits. \"Not how it looks? You're naked. Lying on top of your daughter. And it's not how it looks?\"\n\nWatson raised his hips, pulling out, as Beck struggled to sit underneath him. \"Macca,\" she panted, \"honest. We can explain everything.\"\n\n\"Explain?\" Vicky panted, backing out, \"Why you're having sex? With your own father?\"\n\n\"But he's not-\"\n\n\"YOU BASTARD, DAMON!\" Vicky screeched, \"You filthy animal! You... you... you... you BEAST!\"\n\nThe door slammed shut. Watson rolled over and sat on the side of the bed, head in his hands. \"Well... That's blown it.\"\n\nBeck knelt beside him and draped an arm over his shoulders. \"Oh, Dommy,\" she croaked, \"I'm so sorry.\"\n\nWatson squeezed her knee. \"It's hardly your fault.\"\n\n\"But it is my fault.\" Beck keened, then buried her face in her hands and started to cry.\n\n\"No time for that, Moosh.\" Watson sighed getting to his feet. Pulling his shorts up over a bewildered half-mongrel he ruffled her hair. \"Come on, Sweetheart. Time for some damage control.\"\n\nWatson stole forward and tried his cabin door. Locked. \"Vicky,\" he knocked on the door, \"can I talk to you?\"\n\nThere was a sharp intake of breath and a voice shrieked, \"GET AWAY FROM ME!\"\n\n\"Please Vicky, you have to listen. You see Beck's not really my daughter. She-\"\n\n\"DON'T TALK TO ME!\"\n\n\"I'm begging you Vicky, just hear me-\"\n\nWatson winced as Vicky's voice licked a strip from his hide. \"I SAID DON'T TALK TO ME! NOT EVER!\" There was a thud as she hurled herself screaming against the woodwork. \"GO AWAY!\"\n\nCursing miserably, the old man slouched away and mounted the steps to the cockpit. Beck was topsides, clad in baggy grey track-pants and faithful old hoodie, dressed-down in retrospective modesty. She looked up as Watson sat heavily beside her. \"I heard that.\"\n\n\"Christ!\" he breathed with a shake of the head, \"What a nightmare.\"\n\nElbows on knees, Beck palmed her face. \"It's all my fault. If I hadn't been so greedy.\"\n\nArm over her shoulders, Watson rocked her gently side to side. \"Takes two to tango, Moosh, I'm just as guilty as you. God dammit... if only we hadn't been sprung.\" By someone he liked so much, who was such a vital part of Beck's putative future.\n\nBeck dried her eyes. \"Do you think it might help if I talked to her?\"\n\nWatson shrugged. \"Can't hurt to try.\"\n\n\"No worries.\" Beck said, leaning forward to get to her feet. \"I got us into this, I'll get us out.\"\n\n\"You're a good girl, Moosh,\" Watson said, patting her hip, \"but don't go blaming yourself.\"\n\nDown below, Beck rapped softly on the locked wooden door. She could hear Vicky sobbing softly inside. \"Macca?\" she called. \"Vicky. It's me.\"\n\n\"What do you want?\"\n\n\"Can we talk?\"\n\n\"There's nothing to talk about.\"\n\n\"Vicky, please. Damon and me. There's something you need to know.\"\n\n\"Oh I know alright. Everything I need to know.\"\n\n\"Vicky! Listen! He's not my dad.\"\n\n\"Stop, Rebekah, I know he's making you say that. And you lying is just making it worse.\"\n\n\"Vicky please. I'm not lying. It's just that-\"\n\n\"GO AWAY! Unless you want my help to get away from that... that... that monster, otherwise you're wasting your breath.\"\n\n\"Vicky... please?\"\n\n\"I mean it. Now go away and let me pray. Let me pray for forgiveness. Let me beg for mercy for turning my back on the Lord. But before you go, I want you to give that creature a message.\"\n\nWatson looked up as Beck mounted the companionway. \"Vicky says we have to turn back.\" she announced, looking rattled.\n\n\"She what?\"\n\n\"We have to turn back.\" Beck said, sitting beside him. \"And she said if we don't, or if you so much as try to come near her, she'll throw herself overboard and hope for god's mercy.\"\n\nWatson's chin hit his sternum and he knitted his fingers over top of his head. \"What's she doing now?\"\n\n\"Praying.\"\n\n\"Praying?\" Watson groaned.\n\n\"Uh huh. For forgiveness. From the angry old sky fairy.\"\n\n\"Jesus Christ.\"\n\nBeck nodded, \"Him too.\"\n\nThe sun was coming up. Shoulders stooped under the burden of shame, Watson stepped behind the starboard helm and cranked up the engine. Beck came up beside him, looking small and frightened in her salt-starched grey pullover, her untamed hair dancing in the breeze. \"What are we gonna do?\"\n\nWatson dropped the autohelm offline. \"What can we do? We have to turn back. If we keep on going we'll be holding her against her will.\"\n\n\"Maybe she'll calm down.\"\n\n\"And maybe her friend Jeebers will come strolling across the water.\"\n\n\"He can't.\" Beck said woodenly, \"Not since he got those holes in his feet.\"\n\n\"Ready to come about, Moosh?\"\n\nBeck crawled onto the elevated moulding. After making sure everything was shipshape, she called, \"Leeee hohh.\" then dropped back down to crank the winch. As they came about the sails swapped sides, and Aurora heeled onto the opposite tack. After tidying up, Beck rubbed the old man's back between the shoulder blades. \"Brekky, old boy?\"\n\n\"Might as well.\" Watson shrugged. \"And make it a big one. We can always buy more once we get back to town.\"\n\n* * *\n\nVicky jumped ship before they'd even tied up, throwing her gear over first then springing off the bow onto the hardstand. Not a word had passed between them since Beck's first failed attempt and she left without so much as a 'farewell and get fucked'. Storming out of the marina, she waved-down the very first taxi she set eyes on and disappeared in a cloud of incendiary wrath.\n\nKatrina from the marina had seen them pull-in and wandered down smiling to say hello. \"Back so soon?\" she hailed, pulling up beside Aurora on the short-stay dock. \"Let me guess? You just couldn't live without me?\"\n\n\"Well we're only human.\" Watson said wearily.\n\n\"I knew you'd come crawling back.\"\n\nBeck finished tying up and stepped onto the dock to give her erstwhile boss a hug. Nobody's fool, Katrina picked up on the less than jubilant vibe. \"Now that's not the old Beckinator I know. What's the matter, Darlin'? You look like you've been ridden hard and put away wet.\"\n\nWatson blanched at Karina's stroke of clairvoyance while Beck pulled back and swung her hair over one shoulder. \"Oh, it's nothing.\" she shrugged, absent-mindedly weaving a thick platinum plait. \"I'm just a bit tired. I had to get up early for my watch.\"\n\n\"Well, you see now.\" Katrina said knowingly, \"That's what happens when you spend too long on land. You go soft.\"\n\nBeck shot Watson a glance. That wasn't the only thing that could make you go soft.\n\n\"What's the plan, Stan?\" Katrina asked. \"How long you hanging round?\"\n\n\"We've only got to make some last minute adjustments.\" Watson replied. \"Then we'll wait for the flood and give it another crack.\"\n\nKatrina's phone rang and she checked inbound ID. Turning her back, she stalked to and fro with the phone to her ear then killed the call and returned. \"Sorry guys, gotta huss. Some poor old gerry's locked herself out of her apartment.\" She hugged Beck around the shoulders. \"Don't you dare leave without at least coming up for a brew.\" Katrina smiled a cheeky smile. \"Everyone's been asking where you are.\"\n\nThey watched her go, Watson dismally coiling a rope. As soon as Katrina was out of earshot Beck turned on him. \"So that's it? You're just gonna let her go?\"\n\nWatson blinked. \"Katrina?\"\n\n\"Vicky! There must be something you can do.\"\n\n\"Like what? Drug her? Hypnotise her? Knock her on the head and drag her back by the hair?\"\n\n\"We could always appeal to a higher authority.\"\n\n\"God?\"\n\n\"Higher.\"\n\nWatson frowned. \"Higher than god?\"\n\n\"Much.\" Beck nodded. She had her phone out and was busy waking it up. \"I'm ringing Tan.\"\n\nTanya! What a brilliant idea. If anyone could sort this mess out it was she. Leaving her to it, Watson ducked down below, while Beck sat back under the Bimini, bare, brown feet crossed on the cockpit table. Thumbing Tanya's avatar, a little striped kitten, she waited and waited until the number rang out, then killed the call without leaving a message. She tried again. The third time she failed, Watson, back in the cockpit, plucked the phone from her hand and let it go to the message bank.",
        "'Hi,' Tanya's voice said, 'I can't take your call right now, but if you'd like to leave your name and your number, I'll get back to you.' \n\n'Beeeep'\n\n\"Hi Tanny,\" Watson sighed, \"it's only me. Vicky caught me and Beck in a... umm... compromising situation. We just brought her back and she's gone and done a runner and I'm worried she might go back to the cult. Please give her a ring as soon as you get this and try and talk some sense into her. Lots of love. Me...\"\n\nBeck slung an arm over the old man's hunched shoulders and he handed over the phone. \"Don't worry, Tan'll fix it. If anyone can, Tan can.\"\n\n\"As long as she gets that message in time. Where the fuck is that woman when you need her?\"\n\n\"Don't stress, old boy. It'll all work out, I promise.\"\n\n\"Stranger things have been known to happen I guess, but not many. Come on. Let's finish tidying up then grab a brew and wait for miracle.\"\n\n* * *\n\nThey killed time with a quick forage in town, then swung-by for a superficially convivial coffee with their good friend Katrina. Then it was a matter of just hurry up and wait, in the hope the aforementioned miracle materialised before the turn of the tide.\n\nWhen the phone chimed with an inbound message Beck swiped it up off the table.\n\n\"Is that from Tan?\" Watson asked, rousing himself. They were right on the brink of hauling canvas but his hopes picked themselves up just in case.\n\nBeck read in silence for a while then looked at him. \"It's from Vicky.\"\n\n\"Really?\" Watson asked, rising to look over her shoulder. \"Let me see.\"\n\nBeck hugged the phone to her chest. \"I'm not allowed.\"\n\n\"Come on, Moosh. Show me.\"\n\nBeck shook her head. \"The message says specifically not to show you. And when she asks, because she will, I'll either lose Vicky's confidence or have to lie.\"\n\n\"Well just the gist of it then. What does it say?\"\n\n\"She wants to see me. Just me. At the hotel.\"\n\n\"What for?\"\n\nBeck shrugged. \"How should I know?\"\n\n\"Well?\"\n\n\"Well?\" Beck echoed, \"Do you think I should?\"\n\n\"Do you think you should?\"\n\n\"Might as well...\" Beck said and hefted a shoulder, \"if there's even the faintest chance of turning this around.\"\n\nWatson chewed his thumbnail, thinking. Vicky had already declared she never wanted to see him again, so there was no real way of making it worse. He heaved a deep breath. \"Well, I guess. There's no harm in seeing what she wants.\"\n\n\"That's what I reckon.\" Beck nodded. \"Hang on. I'll just nip down and get changed.\"\n\nBeck disappeared downstairs and quickly showered, then came back up in her favourite floral skirt and a pastel-pink polo top. She'd brushed out her hair into a dazzling platinum mantle and daubed on a quick lick of makeup. Watson looked at her then did a double-take. \"Don't want to dress it down a little? She wants a powwow, not a date.\"\n\n\"Trust me, Dommy. I have to look my absolute best. Especially for what I'm about to do...\"\n\n\"Why? What are you doing?\"\n\n\"It's time to show Vicky the real me.\"\n\n\"You vicious little bitch.\" Watson breathed.\n\nBeck threw her head back, laughing, and the tension popped like a soap bubble. If there was one thing she adored about her old man... a bomb could be going off in an orphanage on fire and he'd still see the funny side. \"Well, like you say, if she can't take a joke she shouldn't have joined.\"\n\nIn spite of the levity, Watson had an inkling of what his beloved girl was about to endure. \"You sure, Mooshkins? Don't want to write it off, just cut and run?\"\n\n\"What's that other thing you say? Winners never quit and-\"\n\n\"Quitters never win. It's a universal truth, I know, but if the bird has already flown...\"\n\n\"Then I'd better fly after it.\"\n\n\"Okay, Mooshkins, if you're sure.\"\n\n\"Well I'm sure, Dommy, but what about you?\"\n\n\"What about me?\"\n\n\"Honestly? If I can pull this off? In your heart of hearts do you still want her back?\"\n\n\"What? Of course I want her back. I happen to be very fond of the girl, even if she thinks I'm a monster. Besides... she's a sweetheart, Moosh, but she's just a babe in the woods and if she goes back to that cult she'll be done for.\"\n\n\"That's all I need to know. Anyway, better not keep the lady waiting. Smoke me a kipper, skipper, I'll be back for breakfast.\"\n\nThe old man reached out and squeezed her hand. \"You're a good girl, Moosh. Now I know why I keep you around.\"\n\n\"Why?\"\n\n\"You can grab a case of Veuve on your way back.\"\n\n** *\n\nBeck set off along the promenade, running the gauntlet of stares. As she crossed the path of one old couple, a mischievous breeze lifted her skirt, revealing a tiny pair of light green panties framing a succulent thigh gap. Quickly regaining control of her renegade hem the tiny little blonde nodded 'good day', and left them in her perfumed wake, the old man clutching his heart, the old woman clenching her jaw.\n\nFollowing instructions, Beck messaged Vicky when she arrived at the hotel and the fugitive buzzed her in. Moments later, to Beck's surprise, she found herself outside the very same room where she and Tanya had spent most of the night fucking Hayley. The pot plant gave it away, on a table between the lift and the apartment, the one she'd given a drink in the morning. Her first good deed for the day. Maybe it was an omen, maybe not, but at least the room had some ripping good energy. Pausing for one last preen she rapped on the door.\n\nPeering through the peephole first, Vicky opened the door a crack and scanned for lurking monsters. \"You came on your own?\"\n\n\"Of course,\" Beck nodded, \"just like you told me.\"\n\n\"Did you show that... animal... my message?\"\n\n\"He is not an animal, Vicky.\" Beck rolled her eyes, \"And no, I did not.\"\n\nVicky unchained the door and pulled it open, standing aside as Beck squeezed through. Gone was the effortlessly sexy young female of yesterday. In her place stood a pinch-faced frump in a non-descript T-shirt and shapeless black track pants. Her forehead was bruised from prostrating herself at the feet of a vengeful god, and her eyes were red and puffy from non-stop weeping. Too distraught to notice Beck's own meticulous preparations, she followed the girl in and chained the door. \n\nBeck dropped her handbag in the lap of the nearest armchair. When she turned, Vicky reached out and lay her hands on her shoulders. \"Becky.\" she breathed, her bloodshot eyes probing Beck's baby-blues, \"I just want you to know. I don't blame you.\"\n\n\"What for?\"\n\n\"For what that... creature... has done to you.\"\n\n\"He hasn't done anything, Vicky. If you'll just let me-\"\n\n\"Shhh shhh shhh...\" Vicky put a finger to Beck's lips. \"You've been brainwashed, Becky, don't you see? Brainwashed and violated, just like me.\"\n\n\"Wrong.\" Beck shook her head. \"On both counts.\"\n\n\"No no no... Rebekah, listen. That old man is the devil. He has cast a spell over you and put scales over your eyes. Pastor told me. He's blinded you, literally, but I am here now to help you see the truth.\"\n\n\"Vickyyy.\" \n\n\"It's okay, Becky, it's okay. Pastor told me this was gonna take time. To bring you into the light. To undo what that creature has done. But trust me, Becky, help is at hand, and the moment of salvation is nigh.\"\n\n\"So is the moment of talking some goddam sense into you.\"\n\nVicky fisted her palm. \"This is exactly what Pastor Neil told me you'd do. He said you'd struggle, he said you'd profane, he said you'd fight back even as we tried to save you. But that's okay, that's okay. I can bear this for you, Rebekah. I want to save you.\"\n\n\"You're too late, Vicky,\" Beck replied wryly, \"I've already been saved. A couple of times as it happens.\"\n\n\"Shh shh shhh... hush Little One. I have a plan.\"\n\n\"Really? This should be good.\"\n\n\"Uh huh,\" Vicky nodded, deftly dodging the sarcasm, \"it will be. Because when I go back I'm taking you with me.\"\n\n\"Go back? Where?\"\n\n\"To the congregation, Beck, back to my family. When I go back you're coming with me. And you... are going... to meet... Pastor Neil.\"\n\n\"Who?\"\n\n\"Pastor Neil!\" Vicky said manically. \"Our leader. Our prophet. He's a great man, Beck, a wise man, a Godly man. As soon as I got in, I called to beg for forgiveness and I told him all about you. I told him what that... that... creature has done to you, what you've been through. And you know what? He said already knew all about you. He said he'd foreseen all of this in a vision, years ago. And then he revealed I'd been sent here to save you.\"\n\n\"Oh he did, did he? Sounds like his crystal ball must be on the blink. Or he's got the wrong channel.\"\n\n\"No, Becky, I'm serious. It was uncanny. He even knew you live on a yacht. In the tropics. With an... ugh... with a filthy old pervert. Who's also the devil.\"\n\n\"Oh really. And did you happen to mention where you were, what you'd been doing? Who you were with? Did you happen to say you'd been sailing?\"\n\n\"I might have mentioned one or two details but he already knew.\"\n\n\"Oh for god's sake, Vicky, that's called a cold-reading. All the fakers do it. You told him the whole lot and he just read it back to you.\"\n\n\"Oh ye of little faith.\"\n\n\"Oh ye of little brain. Look. I know you think you're doing the best for me but you're barking up the wrong bloody tree.\"\n\n\"How can you say that? You're in the fast lane to eternal damnation Becky, can't you see? I mean, having sex with your own father... it's... it's... just abominable.\"\n\nBeck backed the feverish young woman up to the sofa. She'd given Hayley a huge, gushing orgasm on these very same cushions, but sadly there was nothing to see of the Great Wet Spot. \"Vicky.\" she said levelly, sitting her down, \"I'm telling you. Damon... is not... my father.\"\n\n\"Rubbish!\" Vicky scoffed. \"Of course he is.\" She jabbed her temple with a finger. \"He's brainwashed you, Becky, understand? That's why you're saying all this. He's a master manipulator. I should know, he even hoodwinked me. You poor girl. Your own father. Not just a fornicator but a psychopath.\"\n\n\"He's not, Vicky, he's not. For the last bloody time. He's not a psychopath, he's not a manipulator, and he's definitely not my dad.\"\n\n\"Well that's what your birth certificate says.\"\n\n\"I know it does.\" Beck said, sitting beside her. \"But my birth certificate, the one we used, it was... how can I put it... an engineered document.\"\n\n\"Engineered? By whom?\"\n\n\"I can't say.\"\n\n\"You mean it's a forgery?\" Vicky demanded, aghast. \"Your birth certificate? Is that what you're saying?\"\n\n\"A substitution.\" Beck said wearily, \"For a truth that can never see the light of day.\"\n\n\"So you're not related? In any way?\"\n\n\"No.\" Beck shook her head. If she could make that point it was half the battle.\n\n\"You'll swear to that?\"\n\n\"Hand on my heart.\"\n\n\"Then it's a lie.\" Vicky fumed, nostrils flaring, \"And you used it... you used me... to create another lie. And that makes me an accessory to a crime.\"\n\n\"How could it? You didn't know.\"\n\n\"Doesn't make any difference. You used me, you swindled me, you caused me to break the law. I mean, how much more twisted can this all get?\"\n\nBeck tried to pull her into a hug but Vicky fought her off. \n\n\"Just what sort of people are you? I abandoned a life of faith and piety. I sacrificed my chastity. I turned my back on my shepherd, my flock. I even broke up with my fianc\u00e9, and for what? For some fleeting carnal gratification and a litany of lies!\"\n\n\"No, Vicky. For freedom.\"\n\nBut not for much longer. Vicky had already been on the phone to a patently thrilled Pastor Neil. He'd foreseen these events, he said, and just been waiting for her call. The time had come.\n\nWatson, he told her in his lilting, sonorous voice, was the devil incarnate. He'd used his satanic powers to lure her away. Because she was one of the Pastor's chosen and the devil was jealous. Desperate to win her, Satan-Watson- they were one and the same- had hypnotised Vicky and put scales over her eyes, overpowering her faith with lust and alcohol. And she would have been lost, forever, sacrificed on the altar of sin, had the shock of seeing him in the throes of desecrating his daughter not broken the thrall. And in this moment of clarity, she, Vicky, had come to realise where she truly belonged... with Pastor Neil and his family of loyal disciples.\n\nAnd what about girl? Just a teen? Really? Diminutive and delicate you say? Utterly vulnerable? Then it is your destiny to save her, part of God's plan. But make haste. If you are to escape the devil's clutches you must leave now. Get on a plane, as soon as you can, and do anything it takes to bring the girl.\n\nSo Vicky booked two airfares on a flight out that afternoon, one in her name, the other in Beck's. By ten thirty they'd be back in Sydney where the Pastor and a band of hand-picked acolytes would meet them at the gate. From there they would travel to the Pastor's multi-million dollar bush retreat, where Vicky would go into penitence for forty days, while Beck underwent transformation, from heathen and sinner to disciple and celestial wife.\n\n\"Freedom?\" Vicky sneered. \"Is that what you call it? Stumbling blindly around in this illusory world, steeped in sin and corruption? Really? Well if that's your idea of freedom you can have it.\"\n\n\"No worries.\" Beck said, tensing to rise. \"So long, Vicky, give my regards to the cult.\"\n\n\"What are you doing?\" Vicky demanded aghast. \"I've already booked you a ticket. You can't walk out just like that.\"\n\n\"Wanna bet?\" Beck scoffed nonchalantly, already on her feet smoothing her skirt.\n\n\"But I'm trying to help you.\"\n\n\"And I'm trying to help you.\"\n\nVicky heaved an exasperated sigh and patted the cushion. \"Come, Becky, please, sit down. Please. Just hear me out, okay?\"\n\nBeck looked from her handbag to Vicky and back again, weighing her options. She'd come with high hopes of winning her back but was now about to leave empty handed, with nothing more to show for her efforts than a sectarian sales pitch. Still, now was not the time to stand on her digs so she sat, back straight, knees pressed together, gaze fixed straight ahead. \n\n\"Becky, my little lost lamb.\" Vicky said gently, caressing her cheek. \"Please believe me. I'm not the one who needs help. I'm serious. This may be your one and only shot at salvation. Come with me Rebekah, be redeemed. Be forgiven, be reborn. Can you imagine, being unburdened of all your sin? Having your slate wiped clean, your debt forgiven?\"\n\nThe words rolled off her tongue as they had done a thousand times before, on street corners, in shopping malls, bearing witness to unsuspecting strangers, spreading the word, beautiful youths with brooding minders, fishers of men.\n\n\"Can you imagine how it would feel, to live in light, to live in sanctity? Come with me, Beck. Come and dwell with Pastor as one of his own. You won't need for anything, your every need will be catered for. Physical, spiritual, emotional, moral, you name it...\" she gave Beck a nudge, \"what we all call 'a hamburger with the lot'.\" Vicky took Beck's hands. \"This is my sacred duty, Becky. I want this for you. I want to take you home. Your real home, your forever home, with Pastor and our family. So come. Join us, Rebekah, live the life eternal. It's your fate, your destiny.\"\n\n\"It's not my fate.\" Beck said dryly, withdrawing from Vicky's grasp, \"and it's certainly not my destiny. Forget it, Vicky. I'm not going with you.\"\n\n\"But Pastor awaits.\"\n\n\"Let him.\"\n\n\"Don't you get it? He's offering salvation. He will personally vouchsafe your entry to paradise. I mean, the Pastor himself. Isn't that amazing?\"\n\n\"Paradise.\" Beck blew a raspberry. \"I already live there.\"\n\n\"No.\" Vicky said quietly. \"You don't. You dwell in a carnal world, riven with sin, ravaged by the winds of temptation.\"\n\nBeck rolled her eyes. \"Oh you do go on.\"\n\n\"It's true, Rebekah.\" Vicky whispered. \"You live in a wasteland.\"\n\n\"No. I live in a beautiful forty-five foot, dual-helm cutter-rigged sloop. With blue water everywhere and reefs and tropical islands. I feast on fresh fish and coconuts everyday, and more fresh crayfish than you could poke a stick at. I have someone who adores me and together we are totally free. If that's what you call a wasteland it'll do me.\"\n\n\"Living in permanent separation from the Lord?\" Vicky said bleakly. \"That wouldn't do me.\"\n\n\"Want to know what Damon says?\"\n\n\"NO!\" Vicky raised a hand. \"Don't even say that name.\"\n\n\"Why not?\"\n\n\"The very thought of him makes me want to vomit.\"\n\n\"'Cos you saw the two of us bonking? Grow up.\"\n\n\"That filthy... dirty...\" Vicky shuddered. \"A man having sex with his very own daughter. His own flesh and blood. The very idea is repulsive.\"\n\nBeck clenched her teeth. \"I...\n\n\"am not...\n\n\"his daughter!\"\n\n\"Is that so?\" Vicky jeered. \"Then who are you? Hmm?\"\n\n\"Do you really want to know? Who I am? You want the truth?\"\n\n\"Truth?\" Vicky snorted. \"You can't even spell the word.\"\n\n\"Really? Well let me tell you. I am the issue of a prostitute. The Thing who gave birth to me was-\"\n\n\"The Thing?\" Vicky shook her head in confusion. \"Hang on. You mean your moth-\"\n\n\"NO!\" Beck barked. \"Do NOT use that word. I'm talking about the Thing. The pissing, shitting oxygen thief who spat me out of her body. After lugging me around in her belly for twenty eight wasted weeks.\"\n\nBeck watched Vicky flounder, trying to process the stark revelation. \"As I said,\" she went on calmly, \"the Thing was a prostitute. And a drug addict. A twenty dollar whore who put the 'bag' into scumbag. Pregnant at sixteen and thrown out of home. A borderline illiterate with no hope of ever getting a job, living in government housing on permanent welfare. Scavenging food from KFC and Mcdonald's, shoplifting clothes or stealing them from charity bins. Or flat-out begging, using a malnourished, snotty little brat as bait.\"\n\n\"Oh no, no, no!\" Vicky said, slowly shaking her head. \"Uh uh. I can see what you're up to Rebekah. Trying to spin some great big sob-story hoping I-\"\n\nBeck hammer-fisted the sofa, startling Vicky up off her seat. \"SHUT THE FUCK UP!\" she shrieked then sat, chest heaving, while Vicky stared back in bare-faced dismay. \"You think this is fun?\" the little blonde snarled. \"I'd rather stab myself in the eye with a pencil than go through this. But I like you, Vicky, and I can't stand to see you throwing your life away. This is for your benefit, understand, so if you'd be so kind as to just keep... your mouth... shut.\"\n\nFor a moment the apartment simmered with silence, Beck struggling to compose herself, Vicky just struck dumb. Flicking her hair back, Beck summoned her nerve, then cleared her throat and quietly continued. \n\n\"We lived in all sorts of places when I was little, from filthy squats and broken down cars to shelters and community housing. Then a trailer park, down by a beach. Picture-postcard one side of the fence, garbage dump on the other. A real rat's nest, full of down-and-outers just like us. So many needles and used condoms lying around kids couldn't even go to the playground. It was always full of drug dealers anyway, sitting on the swings waiting for customers. Even the cops avoided the place it was that dangerous.\n\n\"We lived in a run-down portable cabin. One room, infested with spiders and cockroaches... living room, bedroom, kitchen all rolled into one. The furniture consisted of a fold-up plastic picnic table, four grubby old white plastic chairs and a coffee table with one missing leg propped up on a breeze-block. Plus a moth-eaten sofa picked up from the side of the road and a beaten-up flatscreen TV... stolen, naturally.\n\n\"And one double bed. The Thing used to call it her work-bench and it took up half of the room. There were no partitions, not even a curtain, so while she was flat on her back, busy working, I used to burrow down in this mouldy old beanbag, and hide my face in a putrid brown corduroy cushion... the closest thing, by the way, I ever had to a teddybear.\"",
        "\"You were actually there?\" Vicky asked in a tiny voice. \"While she was... fornicating?\"\n\n\"Well where else was I gonna go? Outside with the meth-heads? Outside with the derroes? And the drunks and the hookers and the kiddy-fiddlers? There was no bloody way, and it wasn't like she could send me to day-care.\"\n\n\"And She let you watch?\"\n\n\"Made me more like it. Called it on the job training. And why not, most of the punters got off on it. You know how it is, when you drive past a really bad car accident? You don't want to look but just can't help yourself? It was like that. Every now and then I'd just have to take a peek and there they'd be, her 'clients', staring at me over their shoulders, their great big asses bouncing up and down, eyes bugging out and mouths hanging open...\"\n\nVicky put a hand to her mouth. \"How old were you?\"\n\n\"Nine? Ten? Honestly, I don't know. I still have no idea when I was actually born.\"\n\n\"So you might actually be-\"\n\n\"Do NOT go there.\" Beck warned. \"'Okay? Just don't.\"\n\n\"But those men... Did any of them ever... you know... try to touch you?\"\n\n\"All the time... offered some serious money, too... but the Thing would never be in it. Don't go thinking she was protecting me though. It was just, if word got out and I was taken away she was gonna lose all of her bennies... child support, free housing, free medical, that sort of thing. Heaps of scumbags had been caught hawking their kids and they were gone so fast it made their heads spin. We had this joke... 'what's the difference between a pit bull and Child Services?' Give up? 'A pit bull eventually lets the kid go'.\"\n\n\"What about school?\" Vicky asked.\n\n\"What about it?\"\n\n\"Surely they would have given you refuge?\"\n\n\"I never went.\" Beck said matter-of-factly, \"Or only rarely. The Thing never went so why should I? Not learning to read and write never did her any harm. And it was such a hassle anyway, waking up before lunch, washing my uniform every couple of weeks. And have you any idea how it feels to be called 'povvo'? To have the other kids laugh when you turn up to school, with all your bits and pieces in a shopping bag?\"\n\n\"Why didn't you turn to the church?\"\n\n\"The church?\" Beck glared. \"Get real.\"\n\n\"If you went to the right one.\"\n\n\"Maybe,\" Beck said dryly, \"but there weren't any Buddhists around.\"\n\n\"There are many, many good people of faith, Rebekah.\"\n\n\"And plenty of bad ones, and they're the ones who'll fuck up your whole frikken' life. And besides, I was in enough trouble, because the Thing finally managed to score herself a boyfriend. She was a real catch, let's face it, in the same way as herpes or syphilis, so who could resist? \n\n\"So, enter the the Maggot. At least that's what I used to call him. Picture your typical junky... a scrawny, scabby, rat-faced little scrote with missing teeth and a mullet, all covered in jail tattoos. With that whiny junky voice,\" Beck shuddered, \"you know the one. Or you should, if you've spent any time hanging around court. He just turned up one day when the Thing was holding a pissup and never went away. Then one thing led to another because even scumbags need a partner and before you know it they're making me call him 'dad'. And that was it, the Thing had herself an official relationship so we could move back to community housing. It was like Christmas.\n\n\"So what on Earth could anyone, even a small time dealer and wannabe pimp, see in a foul-mouthed, obese, twenty-something slut missing most of her teeth? A business opportunity, that's what. With his brains, he said, and my looks, they could make a killing. She'd look after the 'advertising' and take all the bookings, while he took care of the cash. She'd take sixty percent, he'd take forty, and have free access to all the fringe benefits. It was gonna be awesome. They'd be rich, he said, buy a car, take a holiday, and she'd get something back for all those years she'd wasted raising me.\"\n\n\"Wasted?\"\n\n\"According to her.\"\n\n\"But why?\" Vicky pleaded, \"Why did she treat you like that? Why did she hate you? What did you do?\"\n\n\"You'll have to ask her.\" Beck Shrugged.\n\nVicky was shaking her head again. \"But why would anyone, let alone a moth... woman, do that to their child? It doesn't make sense.\" \n\n\"You reckon? Well hold onto your hat because it's about to get better. Because soon we reached the point where I was about to make my debut. On the Game. Not that I had any say in it, but word went out that the fruit was nearly ripe and a mate of the Maggot's put in a bid. And that was that. I was about to be dished up to my very first customer, just as soon as he got out of jail.\"\n\nThe colour had drained from Vicky's face. \"Jail?\" \n\n\"Maximum security, to be precise,\" Beck nodded, \"for almost killing a dude. Convicted armed robber. Mid-level dealer and outlaw biker, not to mention rapist and child-abuser... apart from that a model citizen. He'd just done a five year stretch and was about to hit the streets on parole and I was gonna be his welcome home surprise. His nickname was 'Shank', as in the stabbing implement. He was six foot-four and weighed-in at one-twenty kilos and hadn't touched a female in over five years. I was four foot-nine and barely weighed forty kay-gee. And I was a 'virgin',\" Beck made air commas, \"which was technically true, though I'd done just about everything else. Not bad, eh? For a cool five grand? Forty-eight hours to do what he liked with me- invite his mates for all they cared. They thought it was a great joke. Said he'd either squash me flat or just split me in half, then after that it was 'first serve, first cum'.\n\n\"I only found out a few days before the 'appointment', while they were counting the cash at the kitchen table. And it suddenly made sense why they'd both been staying so close, almost smothering me, keeping me in their sight, dragging me everywhere they went night and day. Because I was suddenly worth something. Which is how I came to bobbing around in a tinny, fifteen miles out to sea, with the Thing and the Maggot one afternoon.\"\n\nVicky shook her head in confusion. \"Tinny? What's a tinny?\"\n\n\"A small metal boat. You know, a runabout. With an outboard motor. Which in this case had run out of fuel.\"\n\n\"What were you doing out in a boat?\" Vicky frowned, thrown by the sudden twist.\n\n\"Fishing. What do you think?\"\n\n\"Fishing?\"\n\n\"Geez, Vicky. You really should do something about that irony deficiency. Of course we weren't fishing. We'd just nipped out to pick up some drugs. From a prawn trawler. This was another of the Maggot's brilliant ideas, use fishing boats rather than moving the gear by road. Only the bloody thing never turned up, or the Maggot just got the directions mixed up cos' he was so fuckin' dumb. In any case we just kept looking, and looking, and looking till we ran out of gas. And there we were, stranded in the middle of nowhere. Under the sun. No food, no water, no beacon, no mobile phone. Not so much as a rusty fishhook. Nothing. And it's not as if we'd told anyone... 'we're just popping out to pick up some meth'. No. No one had the faintest where we were.\"\n\nBeck took a big, deep breath then swept back her hair. She'd always kept these memories so deeply interred the exhumation was taking its toll. Her hands were shaking and her belly was tight and she was sweating in spite of the aircon. Vicky hadn't budged, she hadn't even blinked, torn between horror and sheer disbelief.\n\n\"Anyway,\" Beck carried on, \"what's the first thing you do in a situation like that? Running out of fuel in a little tiny boat beyond sight of land? That's right, you have a massive fight. A stand-up, ding-dong brawl with lots of kicking and punching, and do your best to capsize the boat. Luckily they were both so hung-over it couldn't go on for long and eventually they puffed themselves out. And the Thing just sat there, sniffling and whining, while the Maggot chain-smoked the last of his durries, sucking down the last of his beers. And suddenly the Thing says,\n\n\"'How long will it take before we both die of hunger?' We both, mind you. And the Maggot goes...\"\n\n'Fucked if I know. One week maybe, maybe two.'\n\n\"'A weeeek?' the Thing howls, 'I can't last a farken' week. Look at me. I'm farken' famished as it is.'\n\n\"And the Maggot says, 'For fark's sake just settle down, sooner or later someone's gunna find us.' And the Thing says,\n\n'Settle down? How can you say settle down? We're gonna die! We're gonna starve to farken' death! For fark's sake we have ta do somethin'.\n\n\"'Do something?' the Maggot screws his face up. 'Like farken' what?'\n\n\"And the thing starts darting her eyes at me, jerking her head. 'You know what...'\n\n\"And the Maggot just sits there, racking his brain cell. Then suddenly he says, 'You don't mean?'\n\n\"And the Thing says, 'Well what else can we do? I don't wanna die!'\n\n\"And the Maggot goes, 'But that'd make us cannonballs...\n\n\"And the Thing screams, 'WE'VE GOT NO FUCKEN' CHOICE. She's retarded remember, she won't even know...' \n\n\"And meanwhile I'm sitting there, in the middle between them, head swivelling like I'm at a tennis match. And I'm going, 'What the fuck are they on about?' Until the Maggot, ever practical, says, 'but we don't have a knife.' And suddenly I realised what they meant.\"\n\nThe penny dropped and Vicky looked like she'd just swallowed a mouthful of sick. \"Rebekah... n... n... no. You can't be serious.\"\n\n\"Can't I? The Maggot even thought up a way they could do it. Without a knife. Tie the anchor rope round my ankles, then throw me over the side and let the sharks open me up. 'They won't take much if we drag her in real quick' he said and I started crying, and the Thing gave me a back-hander on the cheek.\"\n\n\"Stop!\" Vicky raised a hand. \"Seriously? Do you seriously expect me to believe they'd actually... actually...\"\n\n\"Eat me?\" Beck sniffed. \"Why not? Wouldn't be the first time the Thing took a bite out of me.\"\n\nSweat popped out on Vicky's forehead and she was shaking. \"I don't believe you.\"\n\n\"You don't?\" Beck challenged then tugged her collar open and fingered a faint, crescent bite-mark- almost invisible- on the tender skin where her neck met her shoulder. \"Check it out. This was back in the day when the Thing still had most of her teeth. I've got another one on my bum if you wanna see.\"\n\n\"No!\" Vicky put a hand over her mouth and it looked like she was about to throw up. \"Rebekah please... please. Please tell me you're making this up.\"\n\n\"Well that would be a lie, wouldn't it?\" Beck said. Getting to her feet, she hiked up her skirt, then pulled down her panties and twisted at the hip to reveal two vague, dashed parentheses on her left buttock. \"See? You can actually count the teeth. Top and bottom. There was so much blood it filled up my shoe.\" Restoring her garments, she straightened her arms. \"See my wrists?\" she said, \"These marks? From fending off when I got thrown through a window.\"\n\n\"Stop it!\" Vicky surged to her feet and staggered to the sliding glass doors. \"This just can't be true. What sort of woman could do that? To her own child? It's... it's... inconceivable.\"\n\n\"Pfft!\" Beck scoffed, \"Don't even ask about the hot iron.\"\n\n\"Nuh!\" Vicky breathed, her body shaking. \"It just can't be true. If she hated you so much why didn't she just give you up?\"\n\n\"I was her meal-ticket, like I told you. And why bother anyway? Probably figured she'd be doing me a favour.\"\n\n\"Well you would have told someone. You would have gone to the authorities.\"\n\n\"The authorities?\" Beck demanded. \"Seriously? Like the cops? Who used to drag my ass home every time I got busted for shoplifting? And joke between themselves about looking forward to my autopsy, so they could see what I kept in my knickers, aside from snickers, without breaking the law? Then they'd stand there going 'tut tut' while the Thing ranted and raved, going on about how she was at her wit's end when she was the one who sent me out in the first place. You mean those authorities? Or Child Services? That bunch of fat, stupid, sociologist do-gooders and mincing homosexuals? The ones who tried convincing the Thing I was profoundly autistic. And it'd be much better for everyone if they just put me away. Because I was retarded... sorry... 'intellectually challenged'... since I wouldn't make eye contact or so much as open my mouth, but only because I didn't need the two fucking black eyes. Or the education depart-\"\n\n\"Stop.\" Vicky said, raising her hands in surrender. \"No more. If this is true it's an abomination. If it's not then you are. Either way I've heard enough.\"\n\n\"You sure about that?\" Beck asked, \"Because this is where it starts to get interesting. Because this is where you-know-who is about to turn up. You know. The monster. The beast.\"\n\nVicky looked around in a quandary. She was in love with the old man, there was no doubt about it, and part of her still longed for paradise-lost. But to hear the little blonde out might be mistaken for giving him the benefit of the doubt, for the act of betrayal that had just rocked her world. \n\nThe silence ran into overtime so Beck finally made the first move. \"Fair enough,\" she said, calling Vicky's bluff, \"it's no skin off my nose.\"\n\nAs Beck went to rise Vicky held up a hand. \"Becky wait. Okay, if you insist, please go on. But don't go expecting me to ever forgive him.\"\n\n\"So, what you're saying is I'll just be wasting my time?\"\n\n\"What? No, I'm sorry Beck, I'll try and keep an open mind. If nothing else this will just reinforce my decision.\"\n\n\"Well let's just see about that. Now, where was I? Oh, right, about to be butchered and served up for dinner. They would have done it, too, in spite of everything they tried to say later, and even came up with a cover story. I just fell overboard, they'd tell the cops, and before they could save me, along came a nasty old shark and dragged me away. Of course the boat would have to be scuttled to do away with the evidence and if the cops had their doubts, then let them go after it.\"\n\nBeck flung her arms up and Vicky jumped. \"Then suddenly up jumps the Maggot and I just about shat myself. This is it, I figured. One was gonna hold me down while the other tied me up and I was going over the side like it or not. Instead the Maggot just starts jumping up and down, waving like a maniac, shouting at the top of his lungs. Then the Thing joins in, shouting and waving, cos' over on the horizon they'd just seen a sail.\n\n\"Want to hear something silly?\" Beck smiled wanly. \"I thought it was an angel at first, and the sails were her wings. A real one. And she'd turned up because I was about to die, and she was coming to take me back home.\" \n\nBeck paused to swipe a tear from her cheek then took a deep breath and continued. \"But, no,\" she said thickly, \"it was a yacht, and it was more or less heading our way. Then all of a sudden it turned away and the other two just went ape, jumping up and down, screaming and swearing, pelting empty beer cans in its direction. Then the yacht turned back almost as if it had heard, and they were both laughing and cheering, and roughing me up all friendly like as if as if all that talk... the stuff about killing and eating me... as if everything they'd just said had been some kind of joke.\"\n\nSitting there in her pretty skirt and pale pink polo-shirt, Beck looked less like the confident young woman who'd first walked into the apartment, and more like the little lost girl of her sordid tale. Looking up, she patted the cushion beside her and to her immense surprise, Vicky shuffled over and perched her bottom on the edge of the seat, head bowed, hands clasped in her lap.\n\n\"It took him twenty minutes to reach us.\" Beck said, \"Then there he was. 'The Beast'. The creature as you like to call him. He looked like a kind old man to me, a little on the startled side, standing there on the stern of this beautiful yacht. He asked if we were okay and of course the answer was 'no', so he threw us a line and hauled us in and one by one we all climbed on board.\n\nBeck gave a grunt of dour laughter. \"The other two thought it was Christmas... cold beer, sandwiches, being waited on hand and foot, lolling around in the cockpit like tourists on a cruise. And even though the Thing told the old man I wasn't hungry, he fed me anyway... rice and fish curry... on the sly when I went down to use the loo. It was incredible. I had never ever, in my life, met anyone like him. He was so quiet and polite and he spoke in a funny voice... sort of calm, gentle, with none of the filth I was used to. And he looked different too. His hands were clean and so were his feet, with none of those gnarled yellow toe-claws. Even his smell was different... almost sweet... the whole kit and kaboodle, like nothing I'd ever experienced.\"\n\nBeck shivered at the onslaught of memory and goosebumps sprang up on her skin, while her nipples gathered themselves up and stood to attention. Beside her, in spite of everything, Vicky was undergoing a similar flush of arousal.\n\n\"And all the way back,\" Beck said, picking at her nails, \"he kept asking if I was okay. And calling me 'Sweetheart', not in a sleazy way, but a kind way. A lovely way. Have you any idea how that feels? To be treated like that? After a lifetime of being told you're utterly worthless? Being told your whole life it would have been better if you'd been drowned in a bucket at birth? Can you imagine?\"\n\nVicky bit her knuckles, eyes tight shut, as tears spilled onto her cheeks. Yes, she could. Only too well.\n\n\"And I started thinking... maybe this was it. Maybe this old man was going to save me. Maybe he'd realised what these people were doing and somehow he'd take me away. And I started cooking up these wild fantasies... maybe he was super-rich and when we got back he would buy me, make me his servant or just keep me like some sort of pet. Or he'd just fight them for me, throw them both overboard... I spent the whole time dreaming up all these crazy scenarios. But nothing happened. In the end he just left me there, standing at the boat ramp, then turned his back and puttered away. It was like a kick in the guts. After all that kindness, all the sweet talk, he left me behind feeling totally and utterly betrayed. And I thought, 'You heartless old bastard'. He must have seen what was happening, he must have, so why didn't he do something? Save me, rescue me, tear me out of the clutches of these drug-fucked scumbags?\n\n\"So that was that... off we went, back to the dump, and they all sat around getting hammered, the Thing, the Maggot and the Maggot's big brother. That frikken' asshole was another piece of work, fresh out of the slammer with nowhere to go, sleeping on the couch, throwing his weight around, another fucking scumbag breathing down my neck. And the other two were making out it had just been one great big adventure... the search for the fabled fishing boat, the running out of fuel, all that talk about killing and eating me. And the weird old man in his poncy boat with all the free beer. And what the fuck was he doing out there all on his own? Running drugs?\n\n\"Then the Maggot snaps his fingers and goes 'why fucken' not?' A senior citizen? In a nice big boat? That thing could carry tons of drugs and who'd look twice at a doddering old idiot? Why not grab some petrol then pick up a carton, and pay the silly old prick a visit? Just to say thanks, wink, wink. And maybe line him up for some part time employment.\n\n\"So off they went with a jerrycan for fuel but they were both so smashed at first they forgot me. So they had to double back, before the Maggot's big brother had a chance to get his hands down my pants. That meant it was dark by the time we reached the yacht and then they just left me there, sitting in the tinny getting eaten alive, while they were downstairs partying-on.\" \n\nA big fat tear welled in Beck's eye and she swiped it away. \"And all I could think about was that kind old man.\" she sniffled. \"He must have known what was going on, he must have, so why didn't he do something? And then it hit me... if the kindest human being I'd ever met in my life, if he wouldn't help me then nobody would. It was an epiphany. I finally realised I was all on my own and no one was going to save me but me. My fate was in my hands and my hands alone. And if I was gonna do something I was gonna have to do it right now, because in a few days time they were flogging me off to a drug-dealing crim. Once he was done I was going on the open market and that would be that, I'd eventually wind up a fat, drug-fucked hooker just like the Thing. And for the first time in weeks there I was, out of their sight... It was now or never.\"",
        "Beck shot Vicky a glance. She was still perched on the edge of her seat, eyes closed, head bowed. Whether she was actually getting all this, or still wallowing in her own despair was anyone's guess.\n\n\"Couldn't steal the tinny,\" Beck said, \"too noisy for starters and the Maggot had taken the curly-chord. So I looked at the old man's RIB... the rigid inflatable... but the outboard was off and I just wasn't strong enough to put it back on. It was up on davits with a canvas cover over the top, hanging at a bit of an angle, so if you stood in the cockpit you couldn't see in. So I figured maybe, just maybe, I could hide out in there and hope the others figured I'd just fallen overboard. No idea what I was gonna do then but that didn't matter. I had to go. It had literally reached the point of do or die.\"\n\n\"You weren't afraid they'd come looking?\" Vicky asked in a tiny voice, \"When they saw you were gone?\"\n\n\"Of course I was. But look, I'm pretty small, and I figured if I just burrowed right down. And if they did manage to find me there was always Plan 'B'... over the side and let the sharks take care of it. Or the crocs. Either way I was done. They could kill me if they wanted, or I'd just kill myself, it didn't matter either way right at that moment.\n\n\"And no sooner had I made my move than up they came.\" Beck raised her hand, finger and thumb almost touching. \"Honestly, it was that close... if I'd hesitated even a couple of minutes I'd be dead. And I just lay there, shivering so hard I was sure they would hear, waiting for the shouting to start. Any second now, I thought, and they'd start tearing the joint apart, then open the RIB and that would be that.\n\n\"And just like that they took off,\" Beck snapped her fingers, \"the outboard started and off they went as if they hadn't even noticed I was gone. The next thing I knew the yacht's engine started up too, and we were moving. And I thought to myself, maybe she was an angel after all. Aurora. It was a miracle. I was escaping. Damon wasn't doing for me, mind you, he was just afraid the scumbags might come back but that didn't matter. All that mattered was we were getting... the FUCK... out of there and all my prayers had just been answered.\"\n\nBeck exhaled through puffed cheeks at the effort of telling, then straightened and raked her hair back. \"I stuck it out for two days.\" she said. \"Two long, miserable days. I was seasick. I was starving hungry and dehydrated as anything. And I was terrified. A couple of times when I took a peek out all I could see was the ocean, and all I could hear was the sound of the waves and water rushing over the hull. And I shat myself, literally, if you really want the unvarnished truth, so there I was, lying in a pool of my own filth, wondering how much more I could take. But it still didn't matter, because every hour that passed I was further away. \n\n\"Then, as if I wasn't already scared enough, we suddenly got walloped by this great big wave. It's called a knock-down, when the yacht tips on its side and almost rolls over. I got thrown round so much I thought I'd broken my neck and Rib's anchor smashed me right on the shin. Couldn't help it, I just screamed, and that's how Damon found me, the poor old boy. Sorry, the Beast. The RIB's cover came off and there he was, standing there holding a speargun. He almost puked at the smell 'cos it was so bloody disgusting, but he lifted me out anyway and took me downstairs. Put me in a nice hot shower then gave me clean clothes... one of his T-shirts that came down to my knees and a pair of his undies, held up with a great big safety pin. And then he fed me. I was so flippin' famished I managed to puke it back up but he still wasn't angry, he just sat there, rubbing my back, comforting me, feeding me soup by the spoonful. Chicken noodle, I'll never forget. And toast. Then he moved his gear out of his cabin and put me to bed. And I have never, ever, ever slept so peacefully. It was over, Vicky. I'd been saved.\"\n\nVicky shook herself out of her trance. The story might be true she had to grudgingly concede, but nothing could condone the act she'd just witnessed. \"Maybe so,\" she whispered, \"but it came at a price, didn't it?\"\n\nBeck squinted at her. \"What price?\"\n\n\"You know what price.\"\n\n\"You mean the sex?\" Beck demanded and Vicky nodded. \"Have you even been listening?\"\n\n\"Of course I have!\"\n\n\"Then why are you getting hung up on the least of the details? Don't you get it? He saved me.\"\n\n\"Right. For himself.\"\n\n\"What bullshit!\" Beck railed. \"Know what happened first? He tried to take me back. Not to them, of course, because he'd already figured that out, but back to the authorities. The same ones who abandoned me in the first place, who all sat back and let those people ruin my life. Said he'd drop me off at a women's shelter. Where I'd be safe. Safe? What a joke! The Thing used those places like a holiday resort... free food, free clothes, all those fat, stupid do-gooders running around after her. I would have wound up in a place full of women just like her and there was no fucking way I would do that. I wasn't going back I said, ever. I told him I'd jump overboard if he so much as tried, but he turned around anyway so over I went.\n\n\"And I meant it, too.\" Beck said, breathing hard, \"It wasn't a dare. I wasn't just doing it to get some attention. I honestly figured I'd be better off dead. Because if he took me back they'd just march me home anyway, and when they got their hands on me I'd be history. They'd done it before and they'd do it again. And it made no difference to him, that selfish old man, because he didn't care about me anyway.\"\n\nBeck swallowed a couple of times, choking back her anguish. \"But he did care, Vicky. He stopped the yacht and jumped right in after me. Right out there in the open sea. Then he fought me off, while I was kicking and biting, screaming at him I wanted to die. He dragged me back, literally. From the jaws of death.\n\n\"So we turned around again and off we went, back on the original course. Then Damon came up with another idea. He asked how old I was and I told him, 'eighteen', so he's like, 'Right. You're old enough to look after yourself, so I'll just drop you off at the next major town. Give you some money to buy a bus ticket south and pay for a few days' food. You cool with that?'\n\n\"Well the answer was no, I wasn't cool with that. I wanted to stay. I wanted to be out there, on that beautiful yacht with its angel-wing sails, with the wind and the waves and the... emptiness. It was incredible... the quiet, the isolation, the... the... the cleanliness... no dumped cars, no stolen motorbikes, no broken furniture lying out in the yard... just the sea and the sky and the wind and the waves, and no living souls for as far as the eye could see. I wanted to stay with her, Aurora, but I wanted to stay with him even more. The kind old man with the quiet voice who'd just jumped into the water to save me.\"\n\nBeck fell silent and Vicky looked up to see tears coursing over the little blonde's cheeks. She went to lay a hand on at first but quickly pulled back, still torturously conflicted. The whole thing smacked of an intricate lie, an elaborate fiction cooked up as an alibi. But then again.\n\nRallying her composure, Beck smeared her face. \"I wanted to stay,\" she said quietly, \"Damon wanted me gone. Diametrically opposed as he likes to say. Now. I'd promised myself if I ever escaped I'd never have sex ever again, but if there was one thing I knew it was this... every man has the same fatal weakness. And I could use that weakness to get my own way. I could have a home. A home and safety and someone to look after me. Someone to love. And for the first time in my life someone to love me. I could have a life, Vicky, with a meaningful future, and there was one sure-fire way I could get it. I could seduce him.\"\n\n\"Right.\" Vicky scoffed. \"I bet he didn't take much seducing.\"\n\n\"Well you'd know.\"\n\nFor a moment there was silence as Vicky glowed with searing embarrassment.\n\n\"And he wouldn't be in it anyway.\" Beck said haughtily, with a silent 'so there!' \"When I started to push he just pushed back and the harder I tried the harder he pushed me away. To the point he even started locking his door, something you should never, ever do in a yacht out to sea. But he wanted me, Vicky, I could tell. I could see it in his body-language. And I could feel it, even while he did his best to avoid me. I'd catch him looking at me sometimes, eyes so full of longing it almost hurt. All the signs were there and I knew if I just persevered... So that's what I did, cuddling up at the dinner table, making him brews. Asking him to tuck me in, hoping he'd stay...\n\n\"And then some time on the third or fourth night out of the RIB, I woke up to the sound of this great big storm. We were bang in the middle, so the thunder and lightning both came together and the wind was making this awful sound, halfway between a moan and a howl as it tore through the rigging. Flash! Boom! Another first for me and I was terrified, so I bolted upstairs in my T-shirt and knickers. And there he was, the D-man, standing behind the helm, looking like some sort of hero straight out of a fairytale. Bravely steering Aurora through the thunder and lightning, through the crashing waves and pissing-down rain. But he was digging it, in his element, literally, drenched to the bone with the spray pelting his body, water running out of his beard.\n\n\"Well, he tried to send me back at first but I wouldn't go... if we were gonna die, goddammit, then I wanted to see it coming. Then some of the running-rigging jammed and Damon was like, 'Becky, here, Sweetheart, could you do me a favour. Here. See this compass? Just turn the wheel this way and that to keep us pointing in this direction while I go forward and deal with this mess...' And he left me there, alone, with his most cherished possession in my hands, and if I had to pick the moment I fell in love with him that was it. And I mean true love, right, not a sort of 'what's in it for me' deal of convenience. I was a goner.\n\n\"Now, if anything could convince him that was it. Right? He could put me there at the helm of his yacht and I'd do what he told me to do... hold a steady course, not the slightest bit frightened, even while I was secretly crapping myself. Right? Wrong. It was still a done deal. Some time tomorrow we were gonna reach land and he'd be done with me. And just to prove the point, that afternoon he gave me an envelope, with a thousand bucks cash, more money than I'd seen in my life. For a bus fare and food. I've still got it by the way, he said to hold onto it, in case the day ever came when I changed my mind.\n\n\"But then the storm was gone and it all went quiet and he made me go back to bed, and when I tried his cabin later of course it was locked. And I didn't sleep a wink all night. After all I'd been through in my previous life I'd found where I most wanted to be, but we were nearing the coast and in a few short hours it'd be over. I was desperate. Just like I'd been given a little peek at heaven, just so it could be taken away.\"\n\n\"No! Heaven's not on this-\" Vicky began and Beck cut her off.\n\n\"Vicky don't. Okay? Point is the subtle approach clearly wasn't working, so as Damon always says, 'if at first you don't succeed use a bigger hammer.' I'd been hoping I could pull it off without actually getting undressed, because I had such a terrible body image and was really ashamed.\"\n\n\"You?\" Vicky asked, genuinely surprised. \"But you're... you're... umm... normal.\"\n\n\"That's not what I'd been told.\"\n\n\"By whom?\"\n\n\"You know whom.\"\n\n\"Da... that man?\"\n\n\"Certainly not. He is such a sweetheart he pretends it turns him on. The Thing. Zits for tits, boobs like bee-stings, hip bones you could use to slice watermelon. Knobby knees, ribs sticking out. I was convinced I was gross. Still, I figured, it might be worth a try and I really had nothing to lose. And everything to gain if he actually fell for it.\n\n\"So when morning came I went up on deck and spread out a towel on top of the yacht. Gorgeous day, sky as clean as a whistle and barely a breeze, like something out of a postcard. And I did it. I took off my T-shirt and knickers, and lay down on the towel on top of Aurora. And waited. And waited. And waited for what seemed like forever, until finally I heard him poking around downstairs. And I thought, 'Here we go'. Sure enough in a minute or two suddenly Damon popped up, looking for me, since my door was open and my cabin was empty. And he just stood there, looking, wondering what to do, then turned away. And as he was leaving, in this deep, gravelly voice he said... 'Careful, Rebekah, make sure you don't get sunburnt.'\n\n\"So I asked him, 'Would you mind putting some sunscreen on me?' and held out the bottle he keeps in the cockpit. And he just says, 'That's okay, I'm sure you can do it yourself.' And I said, 'Pleeeease, Damon. Just be nice to me.'\"\n\nBeck smeared her eyes again and fell silent again for a modest eternity. \"And that was it,\" she said in a little voice, \"he took the bottle and started slapping sunscreen all over my back. And when he was finished I turned over and... well... let's just say he finally caved.\"\n\n\"Poor man.\" Vicky muttered, scene playing out in her mind. \"Must have been terrible.\"\n\n\"I know, right.\" Beck replied earnestly, ignoring the barb. \"A lifetime's sense of moral superiority just blown away. You know he was so sick with remorse after we did it the guilt nearly killed him. He was just so disgusted, thinking he'd taken advantage of me, while all along I was taking advantage of him. I knew exactly what I was doing, Vicky. I was exploiting him.\"\n\nVicky got up and wandered aimlessly around the room, grappling with conflicting emotions. Part of her that wanted to believe Beck's incredible tale, while an equal proportion clung doggedly onto denial. \"And you honestly believe he's not using you?\" she asked in a tiny voice. \"Because that's how it looked.\"\n\n\"Using me?\" Beck demanded, aghast. She stood, a head shorter than the pacing woman and gripped her wrists. \"Do you know I managed to get knocked overboard one day? In a storm? Without a lifeline? And Damon jumped in? So now there's two of us, overboard in the middle of the bleeding Pacific, trying to catch Aurora as she drifted away.\"\n\nVicky turned her head, avoiding eye contact. \"Has it ever occurred to you?\" she demanded sullenly, \"His so-called act of 'heroism' might have been self-serving?\"\n\n\"Self-serving?\" Beck's jaw sagged. \"How?\"\n\n\"Well... so he could keep on having sex with you.\"\n\nBeck shook her head in dismay. \"What is it with you religious people and sex? Really. It's such an insignificant part of our lives. We rarely have sex more than two or three times a day, sometimes four, a few more maybe if we're out there becalmed. That's a couple of hours max on your average day. What's that?\" Beck stared at the ceiling while she performed some quick mental arithmetic, \"It's like not even ten percent. And what about the rest of the time? Hmm? When he's teaching me to sail or helping me with my maths and my English? Or catching food for us to eat or cooking us dinner? Or snorkelling with me, or teaching me binomial nomenclature? Or we're just cuddling in the cockpit counting shooting stars? Or-\"\n\n\"Thank you Becky,\" Vicky muttered, twisting her wrists free, \"I get the picture.\" Shuffling back to the sofa she sat down, head bowed. It was only just dawning that she'd made a terrible mistake. Either way. By setting foot on board Aurora in the first place or running away. \"So... how many other young girls has Damon had sex with?\"\n\nAn image flashed through Beck's mind. Of Maya, straddling her old man, hands flat on his chest, madly cranking her hips to and fro as the tip of his prick tickled her tonsils. \"None of your bloody business.\" she said, sitting down beside her. \"The same as what you do is none of his. Do no harm, that's our first and foremost rule.\"\n\n\"Really?\" Vicky curled her lip, \"What's rule number two?\"\n\n\"If it feels good do it, as long as you don't break rule number one. If everyone lived like that it would be paradise.\"\n\nAnd it did feel good when she did it, Vicky thought bitterly. Awesome in fact. She crumbled, toppling sideways so her head landed in the little blonde's lap. A tiny part of her asked, 'What's that nice smell?' while the greater part carried on with the self-flagellation. \"I'm so confused, Becky.\" she whispered. \"I've already called Pastor Neil to tell him the news. I'm coming back to he fold. He said to hurry and he said to bring you.\"\n\n\"Fat chance.\"\n\n\"He said Damon is the devil and he wanted to save you.\"\n\n\"Right.\" Beck snorted. \"For himself.\" She went to stand and Vicky threw her arms round her waist.\n\n\"Please, Becky, no. I'm sorry. I'm so sorry. I'm just so confused.\"\n\n\"Mentally defective, more like it.\" Beck retorted, \"If you thought you were gonna hand me over to a cult.\"\n\n\"Oh, god, Beck. I don't want to go back.\"\n\n\"Then don't.\"\n\n\"But I've already booked two tickets, for you and me.\"\n\n\"The only thing I'm boarding is my beautiful yacht. And soon as I do the devil and me are leaving, and this time there's no turning back.\"\n\n\"Becky?\" Vicky whispered. \"Take me with you?\"\n\n\"Seriously?\"\n\n\"Yes... No... Oh, Becky, I'm just so confused. I feel like my feet are either side of a chasm. The Pastor on one side, you and Damon on the other.\"\n\n\"So choose.\"\n\nVicky lay her head back down on Beck's smooth-skinned thighs. She could hear the girl's stomach gurgle, smell her delicate musk. \"So confused...\" she whispered, \"so confused.\"\n\n\"I bet you're bloody not.\"\n\nVicky stiffened. \"What do you mean?\"\n\n\"Tell me something, Macca.\" Beck said, absent-mindedly stroking Vicky's hair, \"Do you like sex?\"\n\nVicky didn't respond at first, then gave a tiny nod.\n\n\"Well I do too. I love it in fact. So why should it be okay for you and not for me?\"\n\nVicky screwed her face up in revulsion. \"With the same man?\"\n\n\"Well he's good enough for you, isn't he?\"\n\nVicky processed Beck's question, then barely nodded once more.\n\n\"And he's not my dad, right? So it should be okay. Shouldn't it?\"\n\n\"Yes...\" Vicky said, almost inaudibly, \"I guess it should.\"\n\n\"Well? Is it?\"\n\nVicky couldn't answer, because the canny little blonde had her cornered. One of the most breathtaking benefits of Vicky's newfound freedom was the ability to target, flirt with, fuck and farewell anyone she found sufficiently attractive, the whole thing underpinned by a modicum of caution. She was in absolutely no doubt as to Watson's sexual ability, so why should it all stop with her?\n\n\"No,\" Beck shook her head, \"It's not okay, is it? Cos' you've just been bitten by the old jade dragon.\"\n\nVicky pushed herself up, squinting. \"The old jade what?\"\n\n\"Dragon. You're jealous Vicky. Admit it.\"\n\nThe young woman buried her face in Beck's lap, her body racked with sobs. \"I thought I was special.\" she keened, inadvertently revealing the kernel of her anguish.\n\n\"You are special, Vicky.\" Beck rolled her eyes. \"You're special to him and you're special to me. And you're special to Tanya, who's special to Damon. Who's special to me while I'm special to him. We're humans,\" she said testily, channelling her old man, \"not bloody bookends.\"\n\n\"Can I ever go back?\"\n\n\"To the congregation?\" Beck asked. \"Fill your boots.\"\n\n\"To Aurora.\" Vicky sniffled.\n\n\"Why not?\"\n\n\"What about Pastor Neil?\"\n\n\"Fuck Pastor Neil. He can get his own yacht.\"\n\n\"No. I mean what will I tell him?\"\n\n\"Know what I'd tell him?\" Beck asked, then doubled over and kissed Vicky wetly in the ear. \"Absolutely zilch. Let the dirty old pervert and his minions turn up at the airport.\" She giggled. \"Can you imagine? Him. Standing there, rubbing his gnarly old hands together, waiting for the two of us to walk through the gate? I'd love to see the look on his face when that final passenger comes through. The filthy old pig.\"",
        "Vicky pushed upright, face slick with tears. \"Do you think he'll t... take me back?\"\n\n\"The Pastor?\"\n\n\"D... Damon.\" Vicky quavered, smearing her eyes.\n\n\"In a heartbeat.\" Beck said, getting to her feet. Vicky's eyes widened as Beck lifted the hem of her skirt and looked down. \"Saaaay,\" she glared as her hair fell forward in a platinum veil, \"who's been leaking all over my legs?\"\n\nVicky swallowed as her gaze fell on Beck's green knickers. \"Sorry about that.\"\n\n\"So you should be.\" Beck sniffed, wiping the tear-trails from her thighs. \"Bloody drama queen.\"\n\nVicky just couldn't drag her eyes away, fascinated by the sight of Beck's broad thigh gap, the pale green fabric of her panties so full of promise. One side of the leg-elastic had ridden up into her cleft, revealing the overhang of a taut little butt-cheek. Vicky licked her lips. \"So what do you reckon?\"\n\nBeck smoothed her skirt then swept back her hair. \"About what?\"\n\n\"Can we go back?\"\n\n\"Of course we can.\" Beck said, pinching the back her dress, restoring her wayward briefs. \"That's why I came here.\"\n\n\"But I mean... just like that?\"\n\n\"Why not?\" Beck shrugged. \"If you're good to go. Or do you need a little while to think things over?\" Beck looked at her slender wrist where her watch would have been had she owned one. \"Only make it quick, cos' time and tide wait for no man, or runaways for that matter. \"\n\nVicky got to her feet and wandered aimlessly around, picking up bits and pieces and putting them down. Standing at the bedroom door she stared at the clothes strewn all over the floor, fun clothes, bikinis and colourful sarongs, now discarded as the trappings of sin. Beyond, in the bathroom, the remains of her beloved green slip hung out of a trash can, ripped asunder, along with the twenty-page, hand-written love-letter she'd been waiting to give him, torn to confetti, page by page. She looked at Beck. \"I just don't think I can do it.\"\n\n\"Do what?\"\n\n\"Go back.\"\n\n\"Suit yourself.\" Beck sniffed and went for her handbag.\n\nVicky leapt in front of her, seizing Beck's wrists. \"That's not what I meant.\"\n\n\"Well what did you mean?\"\n\n\"I mean... after all those things I said. Calling him a beast, calling him a monster. How am I ever gonna look Damon in the eye?\"\n\n\"Don't go thinking you've cornered that particular market.\" Beck snorted. \"How do you think I felt? When you barged in and found me flat on my back bonking your boyfriend?\"\n\n\"I am so, so sorry, Beck, honestly. I feel absolutely mortified. But I thought he'd fallen overboard and I just...\" She shrugged.\n\n\"He's not the one who went overboard.\"\n\n\"Poor Damon. What should I do?\"\n\n\"Stop cutting off the blood to my hands for starters.\" Beck said and Vicky let go. \"Now come on, Vick,\" she sighed, massaging her wrists, \"you're a big girl. You'll just have to suck it up, same as I did. It'll sting a bit but just for a minute, I give you my word. Now what do you say?\"\n\nVicky took a great big breath, then nodded. \"Okay. I mean, what's a little death-by-humiliation between friends?\"\n\n\"Pfft!\" Beck blew a raspberry. \"We're all in the same boat. In this case literally. Anyway, by the end of the day we'll all be laughing about it.\"\n\n\"You really think so?\"\n\n\"Guaranteed,\" Beck winked, \"or my name aint' Feral Beryl. Come on, Macca, I'll help you pack.\"\n\n* * *"
    ],
    "authorname": "RaptorDreaming",
    "tags": [
        "double dildo",
        "group sex",
        "jailbait",
        "taboo",
        "old man young girl",
        "lesbian sex",
        "teen sex",
        "mature"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/aurora-wings-of-the-goddess-pt-03"
}