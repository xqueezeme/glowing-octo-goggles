{
    "title": "April Fool",
    "pages": [
        "About thirty years ago I did marriage counselling. A good number of my tales arise from those sessions, suitably doctored to preserve confidentiality.\n\nThis little scrap of nonsense arose from an aside made by a client I was counselling. It was an additional little niggle in their troubled relationship, a side issue: he would play practical jokes on her, and apparently from what she said, some of his pranks were quite emotionally painful. I don't think we followed that up -- there were more important things to deal with in that relationship.\n\nNo sex in this one, but a lot of fooling about!\n\nIt is written in British English: eg 'fanny' = genitals rather than ass\n\n------ \n\nIt was April the First when I rang Seth's doorbell. I was going to ask him if he fancied a lunchtime drink. We were neighbours, and we got on well.\n\nWell, he opened the door and stood before me absolutely drenched to the skin. His hair was stuck to his skull, and his clothes were dripping water making a pool on the wooden floor.\n\n\"What the fuck?\" I exclaimed. \"What's happened Seth? I was going to see if you wanted a lunchtime bevvy, but--\"\n\n\"Give me ten minutes to shower and change and over a pint I'll tell you all about it, and in the process something of my life-story. How's that?\"\n\nSo twenty minutes later we were sitting in the Fox and Hounds with our pints.\n\n\"So go on,\" I urged him, \"Tell me all.\"\n\nThis is his story in his own words.\n\n-----  \n\nI wonder, Joe, how you are at taking a joke against you? Do you go along with the general laughter or go into a sullen silence, or perhaps become enraged? You don't need to answer that.\n\nYou've heard people saying \"I can take a joke as well as the next man.\" \n\nWhen you hear that, you know there is a 'but' coming. In my case the 'but' came after a number of such jokes.\n\nWhen I was in my early twenties, a good while ago now [he smiled: he was not that old], I met and fell in love with my Bernie, short for Bernadette as you know. She was pretty. Still is, of course. I don't need to bore you with details, you've seen her often enough. You'd agree she has a couple of outstanding features, and an outgoing personality. Well, in those days it was an understatement; she was lively, cheerful, vivacious and an incorrigible flirt. \n\nShe was also very loving, and I mean very loving. Still is. We spent a great deal of time engaged in fairly athletic sex in bed and around my or her flat. I'll spare you the details.\n\nShe fell in love with me, and I with her, and after six months 'going together' as we used to call it, I asked her to marry me and she said yes. So we were an engaged couple and she moved in with me, as was and is the fashion. Try before you buy.\n\nI left out one aspect of her character which you won't know about: she was mischievous. She loved to play practical jokes on people. I had my share. They were innocent enough before we became engaged. Things like ink-soap that blackened the face, salt in the sugar bowl, too much extra chilli powder in my chilli, that sort of thing. It wasn't constant, just every now and again, and usually when others were around to share her laughter at my discomfort. And yes, I laughed along with everyone else with gritted teeth, but laughed louder without the gritted teeth when they too were on the receiving end of her pranks.\n\nThere was the time we were going to a formal dinner. She carefully unpicked the thread from the seam down the back of my dress trousers. Then when we were at a table in the dance that followed, and I was standing with my back to the dance floor, she dropped her bag and asked me to pick it up. The inevitable happened, and my trousers ripped completely from crotch to belt, exposing my boxers to the other tables. What a laugh! The only relief was that I didn't go commando, which would have been a real balls up.\n\nA while after we moved in together, the tricks changed and took on an even more sexual nature. \n\nI don't want to go into too many details, I don't want to imagine you laughing too hard at my discomfort after all this time Joe, but here is a precis.\n\nThere was the time she reminded me, after I had stripped naked to get into bed, that I had not taken out the garbage bin to the front of the house, and the bin men were coming early. \n\nI sighed and got out of bed.\n\n\"No one will see you, do it naked. Just put it out and run straight back to me, lover. I'll come down and be your look out by the door.\"\n\nOnce I was outside in the nude, she locked the door. I stood on the porch until our gay neighbour Jeremy invited me out of the cold into his house, and proceeded to try to seduce me. I felt like a young virgin in the clutches of an ageing lothario!\n\nOf course he was in on it. How they laughed! I managed a light chortle.\n\nThen there was the time when John and Debbie were staying over. I went up to bed after locking up to find the bedroom door locked and the sound of a couple having loud sex in our bedroom. I thought it was Debbie and John until Debbie joined me on the landing.\n\nJohn was with Bernie! I was frantically hammering on the door, yelling for Bernie to open up, when she and John came up behind me. She put the key in the lock and opened the door to allow me to see the recorder on the bed having its own orgasm.\n\nHow they all laughed! I almost managed a grin.\n\nAnother time our friend Sharon, who was a fox, any man's wet dream, was alone with me in our living room. Bernie had intimated she was going for a long bath. \n\nSharon said, much to my amazement, that she had always wanted 'a piece of me' and stood in front of me as she stripped off her tee shirt, then her jeans, displaying her lime green, translucent bra and g-string. No, not a thong, a g-string, in fact no more than a piece of string. It hid nothing of her not inconsiderable charms. The bra pushed her tits up and together. Her stomach had a gentle roundness which drew the eye to her crotch, if it wasn't there already.\n\nThen she leant forward displaying those glorious globes, unzipped me, fished out my pecker which was straining at the leash, then she straddled me and sat on my lap, slipping my rigid tool between her succulent bum cheeks, the lips of her gash hotly kissing my length. \n\nI was petrified that Bernie would catch us, but Sharon assured me Bernie would be gone for a long time. I was not convinced. She began to move her hips sinuously to and fro, and her bra-covered breasts were jiggling right in front of my face when she pressed my face between them.\n\nI was buried in their mammary delights when Bernie came into the room. She screamed, and then there was an almighty row. Bernie was calling Sharon all sorts of names, Sharon was yelling at her that I had seduced her, and I was apologising nineteen to the dozen to both of them! \n\nApologising! For what? I'd done nothing wrong! I was an innocent bystander, if that's the word -- my cock had certainly been standing, but I was terror-struck by the whole scene. Needless to say my erection began to wilt; let's face it, that was not foremost in my mind.\n\nThen they stopped, laughed and shouted \"Gotcha!\"\n\nThat time not a wisp of a smile crossed my quivering lips, and they were quivering, not with fear or mortification, but shock and anger. I hobbled out, pulling my pants up from round my ankles as I went, my cock waggling ahead of me, to the sound of Bernie shouting after me, \"Come on, Seth, it was a joke. Loosen up!\"\n\nWe got over it, eventually, partially because Sharon came to me afterwards and said how much she enjoyed the feel of my cock. In retrospect, the feeling of Sharon's delectable fanny rubbing my cock would have been mind blowing if I had not been so frightened of being found out! \n\nSharon said she was disappointed she did not get a fuck out of it; she actually said she was 'that close' to slipping me in! So was I. It would have turned the tables on Bernie, but I don't think we'd be married now.\n\nIt got worse. There was the time when we threw a party and a number of people were staying over rather than drive home drunk. I went for my shower -- that house only had one bathroom, and while I was in there, Bernie crept in and took all my clothes, and all the towels. \n\nWhen I got out, I shouted to her, thinking I had forgotten to notice if there were any towels in the bathroom. No reply. So I opened the bathroom door dripping wet, to find she had assembled all our visitors on the landing outside. There was I stark naked, facing all our friends. They laughed. They pointed and there were some comments about my 'size'. They were not complimentary! I am absolutely average in that department I assure you, but it dented my confidence and embarrassed the hell out of me.\n\nI did not grin, or chortle, my lip did not quiver, I scowled, and slammed the bathroom door shut. Eventually Bernie brought me towels and a bathrobe. No apology. Neither of us spoke. Next morning I stayed in bed until they had all left.\n\nIt caused our first major row, in which of course I used the famous phrase \"I can take a joke,\" I mentioned before, along with the 'but', and I heard her scornful \"You can't take a joke, you wuss!\". \n\nThere was a long and cool silence between us for a while, after which things thawed, but she never apologised even after all that time. I just gave in I suppose. You couldn't resist her sensuality and seductive under-dressing for long.\n\n----- \n\nHere he went into some sort of reverie, a grin on his face.\n\n\"Seth?\"\n\nHe jumped. \"Oh, sorry. I was just remembering. The way she could slip her knickers... Oh, yes. Back to the story.\"\n\nHe shook himself and continued.\n\n----- \n\nThere was a lull after that. While she didn't apologise and from her later remarks told me she thought I was a bad sport at the time, she probably did think that she had gone a little too far.\n\nThe second major and this time a relationship-breaking prank happened at one of the wilder parties we went to. It was in a very large house shared by six friends of ours, and there was dancing in the cellar, food in the back room and drink in the kitchen. The other ground floor rooms were full of people talking in groups, but later one was darkened allowing couples to engage in various sexual activities and as a result be in various stages of undress. \n\nI had left Bernie dancing with some of her girl-friends to get her and myself another drink, and when in the kitchen was detained for some time in conversation with Tom, the fianc\u00e9 of Ann, Bernie's 'best friend'. He was joined by Fred, and try as I might, I could not shake them off. \n\nEventually I apologised, broke away and took the drink down to Bernie. She was not there, and neither were her friends. So I climbed the stairs and looked in on the kitchen. No one.\n\nPerhaps she was getting some food, so to the various rooms I went. Crowds round the tables, but no sign of her. Finally I took the drinks to the darkened room. It was dim in there, and so it took a few seconds for my eyes to become accustomed to the darkness. There were quite a few people in there as before. \n\nMy attention was distracted by one couple: the girl was a corker and stark naked, her tight tits bouncing gently as she rose and fell with her back to her naked partner, who was fingering her. \n\nThen I saw Bernie. Now she had dressed sexily for the party in her crop top and micro-skirt, and under it a thong, and the first thing I noticed was that the skirt had ridden up over her bottom which was on display, and the thong was missing. \n\nThe reason her bottom was on view was that she was kneeling in front of a man I did not know. He was sitting back on the sofa, his shirt was wide open and her hand was stroking his chest. His head was thrown back in ecstasy, and the reason for the ecstasy was Bernie. Her head was in his lap and she was bobbing her head up and down with his hand on the back of her head. She was giving the sod head! I did not notice that the room had become very still, as I leapt across the floor and pulled her off him.\n\n\"What the fuck are you doing, Bernie?\" I shouted.\n\nAt the same time I noticed there was no sign of his cock. It was a set up. She had been acting.\n\n\"Gotcha!\" she crowed, and the whole room erupted in laughter, and there in the doorway were our friends who had followed me from the kitchen to enjoy my embarrassment.\n\nI turned, pushed through them, and left not just the room, but the house. It was a shortish walk to our house and before I had covered half the distance, Bernie had caught me up.\n\n\"You stupid bastard!\" she slurred. \"Can't take a joke! You're pathetic.\"\n\nI stopped and turned to her. I was seething. \n\n\"Where are your knickers?\" I spat.\n\nShe grinned at that and pulled them out of her handbag, not at all guilty.\n\n\"Who did you fuck?\" I growled. \"You don't take your knickers off for nothing.\"\n\n\"I didn't fuck anyone, it was part of the set up,\" she said scornfully.\n\n\"I'm supposed to believe that? You think flashing your naked arse at all those people, showing your cunt to all and sundry is a joke? I don't!\" and I turned and walked on.\n\n\"Don't be such a prude!\" she yelled after me. \"Don't think I'm coming home after your behaviour!\"\n\n\"OK,\" I shouted, turning again. Lights were coming on in houses around. \"Go back, but don't bother to come home after fucking your boyfriend. I think that's just about finished our engagement. I'm sick of your fucking practical jokes [which, if you think about it, they were].\"\n\nI walked on. She stood for a while, clearly wondering what to do, before following me home.\n\nI ignored her as we prepared for bed and she said nothing either. Once in bed she turned to me, reaching out seemingly wanting some loving, but I turned my back and turned off the light. \n\n\"Please yourself!\" she sighed. \"You should learn to take a joke.\"\n\nI was tempted to answer but since I had my back to her I kept quiet. Thanks to the drink I was asleep in minutes.\n\nThe next morning was not pleasant. Both of us had hangovers, and as a result were ratty with each other even without the residual antagonism arising from her practical joke. She brought the subject up too early.\n\n\"It was a joke. It was really funny,\" she said out of the air as we ate our toast as quietly as we could out of consideration for our headaches, and drank our coffee. \"I've said it before, you really have to learn to take a joke.\"\n\nI said nothing since my mouth was full of toast. She took this to be sulking.\n\n\"Grow up, Seth, sulking doesn't suit you.\"\n\nI finished my mouthful.\n\n\"Bernie,\" I said quietly, \"there's such a thing as a sense of proportion. You have no sense of proportion. Last night you pretended to be unfaithful as a joke. You took off your knickers and exposed your sex to everyone in that room. You should have seen the look on the men's faces. They were grinning even before you 'surprised' me. I don't suppose you saw their pitying looks at me. \n\n\"Let me try to explain this to you. They were thinking, that's a nice piece of arse. Seth poor sod, can't hold on to his woman. What a loser! I think I'll have a shot at that cunt, she's obviously asking for it. \n\n\"And while we're at it, let me take you back to that party at our place. You exposed me to all our friends. Did you hear what they were saying about my prick? You didn't just play a joke, you humiliated me completely.\"\n\n\"Rubbish!\" she retorted. \"You're just a straight-laced prude.\"\n\n\"OK,\" I said. \"You're a practical joker, and you tell me I can't take a joke. You won't change and I won't change. We're engaged. Now. What's the logical step from here?\"\n\n\"What d'you mean? Next step?\"\n\n\"I mean, you can't stop humiliating me, and I can't see the joke. We're incompatible. So there's only one outcome, isn't there?\"\n\n\"You mean?\"\n\n\"Yes, Bernie,\" I said sadly. \"Time for you to move on. Find yourself another fall guy, someone who can take a joke. Time to call our engagement off.\"\n\nSilence.\n\nThen: \"You'd finish our engagement over this?\"\n\n\"Yes.\"\n\nSilence.\n\n\"Seth,\" she said quietly, almost subdued. \"I love you. Please don't do this.\"\n\n\"If you love me, why do you insult me by humiliating me in front of all our friends? Doesn't feel like love from here.\"\n\n\"Seth,\" she sounded exasperated. \"I'm sorry, I don't see it that way, it just fun. It's just that you are too sensitive. You don't seem to be able to take a joke.\"\n\n\"I agree with you, I can't take any more of your jokes,\" I said. \"Either you stop or we're finished.\"\n\n\"OK,\" she agreed after a pause. \"If that's what it takes, no more jokes.\"\n\n\"There had better not be,\" I replied, \"because the next time you try anything, we're finished, you do understand that? I mean it, Bernie! There'll be no second chance. Finished!\n\n\"Yes, I understand. I promise -- there'll be no more.\"\n\nSo there was a truce. She came to me and we made up. It was almost worth the fighting. She was very good at making up -- on the dining room table, then in bed.\n\n----- \n\nAgain he fell into some sort of trance.\n\nAgain: \"Seth?\"\n\nAgain he shook himself. \"Sorry, I was remembering... You've no idea what she can do with her... That table was never the same.\"\n\nHe sighed and once again returned to his tale.\n\n----- \n\nWe were back in harmony, and true to her word there were no more jokes.\n\nBut.\n\nIt was Tom. He was living with Ann his fianc\u00e9e, both of whom aided and abetted Bernie's little game at the house party. \n\nA couple of weeks after Bernie and I came to our agreement, one of our friends, Austin, had a birthday and there was another party. \n\nIn a corner of the living room there were a group of us lads chewing the cud about our football teams and generally hanging out.\n\nTom brought it up. Bernie had been talking about our private lives and conversations. I didn't like that.\n\n\"Hey, Seth,\" he crowed, \"I hear you've finally stopped Bernie enjoying herself!\"\n\nThe lads all sat up as if pulled by an invisible net. There were big grins all round. They remembered.\n\n\"Oh, yeah,\" I said. \"I've no real interest in Bernie any more. As you know Tom, I've had the hots for you for years! Time for us both to come out and get together; your place or mine?\"\n\nLoud laughter.\n\nTom's wide grin disappeared; everyone else laughed, but he was not a happy bunny.\n\n\"I meant you won't let Bernie have any fun anymore, no more jokes? That's what she told Ann!\"\n\nI was not laughing either. I got up and left the group. I looked for Ann, and met her as she came out of the bathroom.\n\n\"Ann,\" I said, \"can I talk to you?\"\n\n\"Yeah!\" she said, slightly the worse for drink.\n\nWe talked. She smiled, she grinned and laughed. And agreed: she found Sophie and gave her a message.\n\nAnn then excused herself and stepped back into the bathroom. \"OK!\" she called. \n\nI entered after her. She was on the worktop between two washbowls, her thong dangling from one ankle, her skirt covering her embarrassment. I moved between her legs as we heard the pounding of feet on the stairs, and began to simulate congress -- thrusting in and out.\n\nTom arrived, along with the group. \"Hey!\" he shouted, \"Get off her!\"\n\nHe rushed in and was about to grab me when I stepped back, showing my pants were still safely zipped up.\n\n\"Gotcha!\" Ann and I cried. Tom was not happy. He did not see the joke -- unlike our mates who were helpless with laughter. They also appreciated Ann's exposed state as she slipped off the worktop before putting her knickers back on.\n\nHe turned to leave, but I caught his arm.\n\n\"Are Bernie's jokes that funny if the joke's on you?\" I asked. \n\nHe stopped, and being highly intelligent saw the parallel immediately. He had laughed the loudest from the doorway and had helped to delay me so I would be fooled. Now he saw it from the other side.\n\nHe grabbed Ann and the two could be heard arguing as they went down the stairs.",
        "Next thing I knew, I was attacked by an irate Bernie.\n\n\"You lowlife!\" she shouted, causing a certain amount of attention. \"How could you humiliate Tom like that?\"\n\n\"Payback.\" I said. \n\nShe stared at me and then the penny dropped. \n\n\"So I can't play jokes but you can?\" she snarled.\n\n\"That was payback for helping you last time. I don't play jokes on my friends if they don't play them on me. Where's your sense of humour?\" I relished that last comment!\n\nThat was the end of the argument. Once again I got the cold shoulder at home for a day or two, then gradually things thawed. Her lingerie got more flimsy and eventually relations were resumed. You should see some of her underwear! On second thoughts, perhaps not.\n\nAnd Tom? He came to me one evening in the pub and apologised. He hadn't thought about the effect from the other side. \n\nIt was two weeks before Bernie's and my wedding when Tom came back to me with a worried look.\n\n\"Seth,\" he said as we got our pints. The women were in the throes of wedding preparations and we had agreed we were better off out of it. \n\n\"I've got to warn you. Bernie is planning one last trick before you finally get hitched.\"\n\n\"I don't believe it!\" I said. \"I warned her what would happen if she tried anything else.\"\n\n\"She's planning it for your party. She reckons it'll be too late by then for you to back out. She did solemnly promise no more after that.\"\n\n\"So why are you telling me?\"\n\n\"She wants to enlist my help. She reckons I'll want revenge after your trick at the party,\" he grinned, \"but I know how I felt, and I'm not going to put you through anything like that again.\"\n\n\"So what's her plan?\"\n\n\"She's going to make a video. It's for late on in the party. I'm supposed to video her and I think, John, as they go into your bedroom. Then the scene will change to them both in bed dressed, but under the covers and simulating him humping her. Once they've 'orgasmed' they relax for a few seconds -- long enough for you to get really angry, then they jump out of bed and shout 'Gotcha!'\"\n\n\"So this video will play at the party?\" I asked. \"Late on -- in front of all our friends, the lot?\"\n\n\"Yep!\" he answered.\n\n\"OK.\" I said, a plan forming in my mind. \"This is what we do.\" I gave him a key to the house, and went to find John.\n\nThree days before the wedding, I had my stag do and Bernie had her hen party. Not the night before, because there was a meal for family at our house. Not two nights before, because we had a mixed party for friends -- no kids allowed. \n\nMy stag do went off relatively quietly. We drank rather too much, even though we knew there was another party the next night. At the time we thought we were quite restrained. After the stripper had been and danced all over me, Tom came in and told me he had a video to show me, or rather two videos. We waited until the party finished before going to his place and viewing the two masterpieces.\n\nThe first video was for Bernie. It began to play.\n\nTom had deliberately made it to look as if a rank amateur were following Bernie and John, who everyone knew was hung like a horse. The picture bounced and twitched. They were in our house and going up the stairs with their arms round each other.\n\n\"Just this once,\" she said to John, \"I must have that huge thing in me before I settle down with Seth.\"\n\n\"You'll get it all right, baby,\" scoffed John, \"but you might not be satisfied with Seth afterwards!\"\n\nJohn and Bernie were seen entering the bedroom, and then the scene abruptly changed to one showing the bed. \n\nJohn's head and bare shoulders were seen and he was obviously shafting Bernie quite hard. I had to admire his simulated action!\n\n\"Oh yes, yes, yes John!\" she cried.\n\n\"This is how you like it isn't it Bernie? My cock stretching your tight little pussy?\"\n\n\"Oh yes, John, harder, please harder. You're so big!\"\n\nAnd so on until with yelps and cries they orgasmed together.\n\nAfter gasping and sighing for a short while, they both sprang out of the bed. John, stripped to the waist and Bernie fully dressed in jeans and teeshirt.\n\n\"Gotcha!\" they shouted at the camera. \n\n\"Bernie wants to give you this message, after the trick,\" said John to the camera, \"that she promises solemnly that this was the last joke. She will never ever play a practical joke on you again.\"\n\nI nodded, \"That's so true, but too late.\" \n\nTom laughed and played the second DVD. It was exactly the same as the first one, until the point where they rested for a moment. Then two short scenes were carefully edited in. Tom had done a masterful job: you could hardly see the join.\n\nThe next evening the party went roughly as parties do, people milling around, people talking, drinking, eating and dancing to various styles of music. \n\nTom came to me. \"I managed to switch the DVDs. Bernie was very pleased with hers. I'm supposed to come to you and tell you I have a DVD to show, an early wedding present from a well-wisher. \n\nBernie's friends had done their job and a crowd gathered in the living room to watch it on the big screen on the wall. There was a good deal of muttering, knowing looks in my direction, secretive grins and giggling. It was clear most of the folk there knew something was afoot. I smiled innocently at Bernie. She smirked at me.\n\nSo the DVD began to play.\n\n\"Ooh,\" said Bernie, \"What am I doing here?\" as the pair on the screen climbed the stairs. Everything went quiet, and I affected a hostile stare at Bernie. She grinned.\n\nWhen the scene shifted to the bed, there were catcalls and cheering, and I heard a few comments using the word cuckold. I made as if to stand up, which caused more merriment as Tom pulled me back down.\n\nThe orgasms were greeted with applause, and then there was quite a prolonged pause. Bernie looked surprised, as well she might, the pause was much longer than on her DVD.\n\nThen instead of the two bounding out of bed, John filled the frame as he got out of his side of the bed naked, his substantial cock at half mast, and wandered off screen presumably to the bathroom. \n\nWe had suborned him to do this when on his own in our bed. He was something of an exhibitionist, and had no qualms about appearing naked: with his equipment that was not surprising. He had stroked himself to half mast and then got out of bed. \n\nThere was a murmur of worry from the previously cheerful crowd, and a good number of glances my way. Bernie looked horrified, but there was worse to come.\n\nThe camera abruptly changed scene to Bernie's side of the bed. For me, who knew the next scene (we had filmed it ourselves about six months before for our own enjoyment), it was obviously filmed at a different time, but no one else would notice. \n\nOn the big screen, in full view, Bernie smiled at the camera as she climbed out of bed naked, and obviously just fucked. She stood with her legs apart, and put her hand to her sex, middle finger extended under her. The picture froze and the image remained of her in that pose. She would remember when she had done that for me some months before. For everyone else, she had just been fucked by John for the benefit of her husband to be.\n\nThere was dead silence. Bernie suddenly shouted in anguish, \"Turn that fucking thing off!\"\n\nTom pressed play and the screen went blank except for one word. \"Gotcha!\"\n\n\"What's up, Bernie?\" I mocked. \"Can't you take a joke?\"\n\nShe burst into tears.\n\nI continued in the shocked silence that followed. \"You remember, I hope, what I said the last time you tried to humiliate me? If you ever tried to do anything like that again, the wedding would be off.\n\n\"It's off.\n\n\"Perhaps you understand now how I felt when you played your stupid tricks and made me look a fool. You can explain to the family why there's no wedding. Why not play them the DVD? I'm sure it'll give them a good laugh. Good bye Bernie, have a nice life!\"\n\nWith that pandemonium broke out, and Tom and I left the house and went to his place, where Ann, looking sombre as well she might, made us some coffee and allowed us to unwind.\n\nIt was late; time for bed really, but the house phone rang. We all knew who it was.\n\nI know conventional wisdom turns off all phones and refuses all communication, but in fact what Bernie had been doing wasn't all that serious. It was just that I couldn't face a lifetime of humiliating tricks and if I'd allowed that one, I thought I would never be free of them. I personally didn't care if I got married or not, but I did love Bernie very much, and therefore I was torn. \n\nOn one hand I couldn't live with a trickster; on the other, I really wanted to share my life with her. So when Ann picked up the phone and looked quizzically at me, I took the phone from her.\n\n\"Hello Bernie.\"\n\n\"How could you do that to me, Seth?\" she asked. She didn't seem angry, just sad.\n\n\"Easy,\" I replied somewhat flippantly. \"I had a good teacher. You displayed me naked to our friends, I did the same to you. You pretended to give a blow job, I made a video pretending you were really unfaithful.\"\n\n\"I'm sorry,\" she said. \"I never meant to hurt you, you know. I do love you very much.\"\n\n\"Bernie,\" I said patiently, \"I told you how much you hurt me. I told you I wouldn't put up with it any more. You agreed not to do it any more. You said I was worth it, then you tried to do it again. Well, it got up and bit you. Now you know the feeling.\"\n\nThere was muffled sobbing at the other end.\n\nListen,\" I said. \"Get some sleep. Come to Tom's tomorrow and we'll talk.\"\n\n\"Does that mean--\"\n\n\"No,\" I cut in. \"I told you the marriage would be off if you tried anything. I meant it, but it doesn't mean we can't talk.\"\n\n\"You mean stay together?\" \n\n\"Perhaps. It depends on what we decide when we talk.\"\n\n\"Thanks, Seth.\"\n\n\"Good Night Bernie.\"\n\n---- \n\nSeth paused in his tale. I got him another pint and waited. He relaxed, drained half of it, and continued.\n\n----- \n\nOK, I can tell you won't allow me to leave it there. That could be seen as a poor practical joke [he grinned at me].\n\nThe marriage was off. She explained it to the families, and had a hard time, but was forgiven on my pleading that she'd been punished enough.\n\nWe had the reception and the party in the evening. After all we'd already paid for it. At both, Bernie apologised for causing the cancellation of the wedding. She said something like this:\n\n\"Ladies and Gentlemen, this will be the only speech. I played a number of humiliating jokes on Seth, and when he complained I always told him he couldn't take a joke. One joke was so bad, now I look back on it, that he threatened to end our relationship and the wedding if I didn't promise never to play a joke on him ever again.\n\n\"I promised. Then, well you all know what happened. I tried to play a last joke, and he turned it round on me. It was only then I realised how he had felt.\n\n\"So,\" here she went down on her knees. \"I'm sorry Seth for all the tricks I've played. And for ruining our special day. I promise before all these people that I'll never play another joke on you, or anyone else.\"\n\nI lifted her up. \"I forgive you,\" I said, \"and I promise to live with you as long as we both shall live, or until you play the next practical joke.\"\n\nThere was applause and some laughter.\n\nWe then solemnly cut the 'living together' cake, and drank champagne to our future together.\n\nWell, she was true to her word. She never played another joke on me ever again.\n\nTwo years later she got pregnant, and I took her to the register office and we got married. We'd had the wedding meal and the party two years earlier. She cried all the way through the quiet ceremony, to the confusion of the registrar.\n\nAs I said, I can take a joke as well as the next man, but. \n\n---- \n\nSeth paused and had another drink from his pot.\n\n\"But today?\" I asked. \"You were soaking wet. Surely that was a practical joke?\"\n\n\"Today,\" he said, affecting solemnity, though with a wry grin, \"a plastic bucket of water, placed over my study door drenched me to the skin. \n\n\"Mark, my oldest son, apple of my eye, only twelve years old mind, laughed and laughed, 'April Fool Dad!'\n\n\"Immediately I turned and looked accusingly at Bernie.\n\n\"'I had nothing to do with it.' she was laughing. 'It's April the First, All Fool's Day. All his own idea, must be in the genes!'\n\n\"'OK.' I said with a smile. 'I can take a joke!' and smirked at Bernie who was aghast at the hypocrisy of my comment. I did enjoy that!\n\n\"Then you rang the doorbell.\n\n\"I got dried and changed, and just before coming out, I made my son an apple-pie bed, and put the ink soap in his soap-box. I'm looking forward to bedtime.\" \n\nSeth sat back with a serious though contented expression, as, like Bernie, I looked at him in some amazement.\n\nThen a smile began to play on his lips and on mine. \n\n\"My round, I think,\" he said, going to the bar. "
    ],
    "authorname": "Alwaysraining",
    "tags": [
        "pranks",
        "a biter bit"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/april-fool-1"
}