{
    "title": "Anal Addiction Ch. 03",
    "pages": [
        "This story contains sex between a transsexual top and a male bottom. If you do not like stories where a man gets fucked by a transsexual please stop reading.\n\n*****\n\nIt was after 9PM when I got home from work. As I walked in the front door of my apartment and set my keys down I thought about Nina. It had been two days since we had gotten together and I hadn't heard from her since. She had said that she would text me and I knew that two days wasn't a long time but after she had fucked me on Saturday night I had been thinking about her a lot.\n\nBeing with Nina had solidified something in me that had changed that night at Wendy's apartment: I was addicted to receiving anal sex from a girl. The role reversal of being on the receiving end and the feeling of Nina's cock sliding in and out of my ass proved to me that I needed something more than a genetic girl could offer. I needed girl cock. And after one night with Nina I felt like I had found that and a whole lot more.\n\nI felt my cock begin to get hard as I thought about Nina. That seemed to happen all the time over the last couple days but now that I was not in public or at work I just decided to go with it. Unzipping my pants and fishing my semi-hard cock out I sat down on the couch and let it lay against my leg. As I looked down at it I thought about how much longer and thicker Nina's cock was even though I had a respectable seven inches.\n\nI suddenly had an idea. I slid my phone out of my pocket and typed out a text message.\n\nMe: Hey Nina, how are you?\n\nI quickly pressed the green send button.\n\nLaying back on the couch I took my semi-hard cock in my hand. As I gently began to massage it I thought about my night with Nina. I thought about how attractive she was. About how natural our sexual chemistry was. About the way she looked at me while she fucked me. My cock was almost completely hard when I felt my phone buzz. I looked down to see a text message reply.\n\nNina: Hey handsome! I'm still at work but heading home soon. How are things with you?\n\nMe: Things are good with me. I was just thinking about you and all the fun we had on Saturday. ;)\n\nNina: Mmm, yeah, that was really fun. You are such an enthusiastic bottom!\n\nMe: Hehe, I guess I just couldn't help myself. And speaking of my bottom... I'd love to get together again soon.\n\nNina: Me too! I'm really tired tonight though. It's been a long day and I'll probably only have the energy to jack off and pass out when I get home.\n\nMe: Oh I didn't necessarily mean we should get together tonight. This wasn't a booty call or anything. But the thought of you jacking off is a real turn on. :)\n\nNina: Oh really? You'd like to watch me stroke it?\n\nMe: That would be hot! Although I'm not sure I could just sit back and watch. I would definitely want to put it in my mouth... and my ass.\n\nNina: Mmm, I'd love to lay back and have your lips wrapped around my cock right now!\n\nOur text message conversation was really turning me on. My cock was now hard as a rock. Maybe I could convince Nina to get together with me sooner rather than later.\n\nMe: I'm more than willing to swing by your place tonight...\n\nNina: That's so tempting! Unfortunately I don't really have the energy to entertain tonight. I really just want to get off quickly and go to bed.\n\nI didn't know if it was my extreme horniness or if something had changed in me but suddenly I just needed her cock. I wanted it in my ass but I would settle for whatever I could get.\n\nMe: You are more than welcome to stop by my apartment on your way home. I promise to do all the work and make it quick!\n\nNina: Really? That would be amazing!\n\nMe: Yes really. I'll text you my address.\n\nNina: You are a God-send! I'll head out from the office in about 15 min.\n\nI texted Nina my address and then waited. Did I really just offer to please her sexually with nothing in return? I shook my head in disbelief that I would be excited to suck her dick without something more happening. Reaching down I took my hard cock in my hand and smiled as I felt it pulse with my heartbeat. A few minutes later I got a text.\n\nNina: On my way. Be there in 10.\n\nI got up and walked around. I was really excited. Pacing back and forth around my apartment it seemed like no time had passed before I got another text.\n\nNina: I'm out front. Should I park or do you want to just come out?\n\nI had assumed she would come in but from her question it was clear that she wanted to do things as quickly as possible. Besides, I was too horny to wait even a second longer than necessary.\n\nMe: I'll come out.\n\nTucking my hard cock back into my pants I practically ran out the front door. Exiting the front gate of my apartment complex I saw a black sports car stopped right in front of my building. Walking over I opened the passenger side door and climbed in.\n\nLooking over at Nina I smiled. \"Thanks for coming by,\" I said.\n\n\"Thanks for inviting me!\" She replied enthusiastically. \"Your texts were really turning me on! Check it out,\" she said as she grabbed my hand. \"I'm already hard.\"\n\nShe placed my hand on her pants and I could feel the bulge of her large, hard cock.\n\n\"You're not the only one,\" I said with a small chuckle.\n\n\"Yeah, I noticed,\" Nina commented with a smile. \"You had a tent in your pants just walking towards the car.\"\n\nShe reached over and placed her hand on top of my hard cock. Giving it a quick rub she smiled at me seductively. Suddenly I wanted her cock in my mouth as soon as possible.\n\n\"Why don't you head over there,\" I said as I pointed down the block. \"There is an alley behind that building where we should have a little privacy.\"\n\nShe nodded and put her hands back on the steering wheel. Driving down the street she pulled into the alley I had indicated and then turned the car off. As soon as she did I leaned over and put my lips to hers. She immediately responded by pulling me closer. Her mouth opened and her tongue swirled with mine. Chest to chest we kissed like we were long lost lovers reunited at last.\n\nMeanwhile I moved my hand off her cock and attacked the button of her pants. A few seconds later Nina reached down and assisted me with getting her pants undone. Breaking our kiss she leaned back and lifted her ass, sliding her pants and panties down to her knees in one quick motion. With Nina's smooth hard cock now bare in the moonlight I smiled at her and then I leaned my head down.\n\nI swiftly took the head of Nina's cock in my mouth as she moaned above me. Swirling my tongue over it I slid my mouth down and sucked in the first few inches of her shaft. Pulling my head back up I wasted no time getting into it and in seconds I was bobbing up and down on her cock. It tasted good. More musky than the last time we were together but that just meant more of Nina's feminine scent. With my saliva making her cock slick I increased the pace of my sucking.\n\nUsing one hand to play with her balls I brought my other hand down and rubbed my own cock. As the volume of Nina's moans increased I unzipped my pants and let my hard cock out. As I stroked it I started to take more and more of Nina's cock in my mouth. With every down stroke I took another half inch and after a minute or two I had almost the whole thing in my mouth. It pushed against my throat with every downward thrust and Nina gave me encouragement.\n\n\"That's it,\" she breathed between moans. \"Take that cock.\"\n\nHer words stoked the fires of my lust and I drove my head down harder into her lap. Relaxing my throat muscles I pushed down steadily until I had to come back up for air. Repeating the motion a few times I was able to take more of her cock than ever before. The increasing volume of Nina's moans above me told me I was doing well which only turned me on more. Before long I found myself moaning as much as she was.\n\nThe loud sounds of my slurping her cock echoed through the car. I focused on keeping my lips tight around her shaft as I slid my mouth from the head of her cock down to the base. After a few seconds Nina began lifting her hips to meet my mouth and from her increased breathing I knew that she wouldn't last much longer. She quickly let me know that she was close.\n\n\"I'm almost... there,\" she moaned. \"Stroke it baby.\"\n\nPlacing my hand at the base of her cock I squeezed and slid it up. Using my tongue on the head of her cock I milked her shaft with my hand. Up and down I went, using my saliva to provide lubrication. I furiously pumped my own hard member as I stroked and sucked Nina's cock. Nina began to buck her hips in rhythm with my mouth and then she let out a loud moan.\n\nNina's cock exploded in my mouth. Her warm, sticky cum flooded into me with force. With each beat of her heart I felt more of her seed splash against my tongue. I continued to pump her cock with my hand as her warm cum filled my mouth. It took a while but slowly the flow began to subside and I worked my throat muscles to swallow everything in my mouth. It must have been a big load as it took me multiple swallows to get it all down.\n\nAs Nina collapsed back in her seat I slowly removed my mouth from her cock and then kissed the tip. Leaning back in the passenger seat I smiled over at her. \"How was that?\" I asked.\n\n\"Amazing,\" she said with exhaustion. \"You are very orally talented!\"\n\nI surged with pride at the compliment. I even felt my cock twitch in my hand. Nina must have noticed too because she looked down to see it standing up in my lap.\n\n\"Sucking my dick turns you on that much huh?\" At a smile from me she continued, \"Can I watch you finish yourself off?\"\n\n\"Right now?\" I asked.\n\n\"Yeah, I want to watch you jack off after taking my full load.\"\n\nI smiled and then started stroking my hard cock. As I did I looked over at Nina to see her intently watching my hand slide up and down. She had a small smile on her face. Looking down in her lap I saw her large, semi-hard cock laying across her leg. It was still shiny from my saliva and I focused on it as I increased the pace of my stroking. I couldn't believe that just looking at Nina's spent cock would be such a turn on.\n\nNina leaned over and opened up the glove box. Pulling out a few tissues she handed them to me and then leaned back to continue watching. No one had ever watched me masturbate before but I found it strangely exciting. The interested look on Nina's face as I stroked myself thrilled me. I began to pump my cock faster under her watchful eye and I quickly reached a point at which I needed one more thing to get me to orgasm.\n\nI quickly unbuckled my pants. Then I pulled my hard cock back through the hole in my underwear. In one smooth motion I slid my pants and underwear down to my knees and immediately went back to stroking my cock. I brought my other hand down past my balls and began rubbing my asshole. I let out a moan as I quickly pushed a finger in and felt my anal ring tighten around it. With a finger penetrating my ass and my hand sliding up and down my cock I felt myself rapidly approach orgasm.\n\nI leaned back in the passenger seat as I came. My ass tightened around my finger and my whole body jerked as spurt after spurt of cum filled the tissues on my stomach. I didn't cum as hard as I did on Saturday night but it was definitely a bigger load than when I masturbated alone. I kept stroking my cock until I felt the last drops of cum leak out. When I was done I collapsed back into the seat and tried to catch my breath.\n\n\"That was hot!\" Nina said beside me. \"I love that you wanted something in your ass.\"\n\nI smiled at that even as I had wished for it to be her cock filling my ass when I came. A few seconds later Nina pulled up her pants and started the car. I pulled mine up too as she turned the car around. Stopping in front of my building I leaned over and gave her a kiss.\n\n\"Thanks again for coming,\" I said.\n\n\"Anytime,\" She replied with a smile. \"And let's get together at my place again soon. I gotta get more of that sweet ass!\"\n\nI laughed and said, \"You got it. Talk soon.\"\n\nI headed inside and collapsed on the couch. That was amazing. I had never done anything like that before but it was a great experience. I never would have guessed that I could get so turned on sucking dick. I would have rather had it in my ass but the grateful look on Nina's face after I swallowed her full load was worth it. I couldn't wait to see her again. Walking back into my room I went to bed happy that night.\n\nThe next couple of days passed slowly. I wasn't that busy at work so I constantly found myself daydreaming about Nina and her large cock. One day I even had to go home on my lunch break to masturbate and relieve the pressure. Every night after dinner I watched transsexual porn while I pumped my dildo in and out of my ass until I came. My anal obsession seemed to grow by the day.\n\nOn Friday I got home from work around eight. As I walked in the door I felt my phone buzz in my pocket. Fishing it out I looked down to see a text message from my friend Mike.\n\nMike: Hey man, want to grab a drink tonight?\n\nI smiled. Mike and I had been friends for more than ten years and even though we lived down the street from each other we rarely hung out anymore. I figured that he must be single again if he wanted to go grab a drink.\n\nMe: Sure, when and where?\n\nMike: How about now? The Corner Bar?\n\nMe: I'll be there in thirty.\n\nI grabbed a quick snack from the kitchen and then jumped in the shower. The Corner Bar was a short five minute drive from my apartment and in no time I was on my way. Pulling up to the bar I smiled at the same old faded sign out front as I entered. Looking around I saw Mike waving to me from the other side of the room. As I walked over I saw Mike pay the bartender for two beers and then pick one up. He handed it to me and then picked up his own.\n\n\"To women,\" he said with a smile as he touched his glass to mine and then raised it.\n\nI laughed. \"To women,\" I repeated and then I took a swig.\n\nAfter Mike had taken a drink he looked over at me. \"Judy broke up with me,\" he said as an explanation for the sudden invite to drinks. \"Said I wasn't putting in the effort anymore.\"\n\n\"Is that true?\" I asked.\n\n\"Yeah, probably\" he said with a shrug. \"OK, definitely. We just lost the spark somewhere along the way. I mean, when we first got together we fucked like rabbits.\" A smile crossed his face. \"Every position imaginable. It was unbelievable! But we just don't do it anymore.\"\n\n\"So it was just about sex?\"\n\n\"No, yes, I don't know. It was everything really.\" He paused and looked me over. \"You look like you're getting laid.\"\n\nWas it that obvious? \"Yeah, here and there,\" I said nonchalantly.\n\n\"Tiffany right?\"\n\n\"Oh no, we broke up a couple weeks ago. This is something new.\"\n\nMike smiled. \"What's her name?\"\n\nI smiled back. \"Nina.\"\n\n\"She sounds hot,\" Mike said jokingly. \"Is it serious?\"\n\n\"We just met.\"\n\n\"Good,\" Mike said as he turned and looked around the bar. \"Because we are both getting laid tonight!\"\n\nI couldn't help but laugh at Mike's comment. As I followed his gaze around the bar I saw that there were a number of cute girls there already. I saw a good looking brunette standing with her friends about twenty feet away and I smiled. She was definitely my type. Then the next thought that popped into my head was 'I hope she has a dick.' I almost dropped my drink.\n\nI had never had that thought about a random girl before. I guess being with Wendy and then Nina had unlocked a desire inside me that I didn't even know was there. I looked back over at the brunette. It felt so weird to fantasize about her having a cock. To imagine being on my knees sucking it. To imagine looking back at her as she fucked me from behind. I shook my head to clear those thoughts.\n\n\"Everything OK?\" Mike asked.\n\n\"Yeah,\" I said distractedly. \"So who do you have your eye on tonight?\" I asked him so I could change the subject in my head.\n\n\"That brunette is cute,\" he said as he nodded towards the girl I had been looking at. \"Anyone else in that group look interesting to you?\"\n\nI looked at the group of girls. There were four of them standing together talking. \"I'll figure it out as we go,\" I said.\n\nWe walked over and Mike quickly struck up a conversation with the brunette. I ended up talking to a short, blonde girl for a while and although she was attractive we didn't really hit it off. I found myself glancing over at the brunette from time to time and going back to my original thoughts about her. She would definitely be perfect if there was a dick hiding under that skirt.\n\nAfter about thirty minutes of general small talk I excused myself and headed back to the bar. I bought drinks for myself and Mike and then I returned to the group to hand him the beer. After that I just walked around the bar for a while. I struck up a conversation with an attractive older woman for a few minutes but when her friends returned from the bathroom they all left.\n\nAs I circled the bar again I suddenly thought about Nina. We had been together twice now and the sex was unbelievable. I don't think I had ever been that sexually compatible with someone. Her playful personality and her sexual aggressiveness were the perfect combination. The more I thought about her the more I had to hide the growing erection in my pants.\n\nOn my third lap around the bar I felt my phone vibrate in my pocket. Pulling it out I saw that it was a text from Nina. Speak of the devil.\n\nNina: Hey handsome!\n\nI stopped next to an empty booth and composed a reply.\n\nMe: Hey there! How are you?\n\nNina: I'm good. Sitting here talking to a friend about you.\n\nMe: Oh yeah? What about?\n\nNina: I was telling her about last Saturday night. Then I started telling her about how you sucked me off in the car the other night. It's making me super horny. Any interest in coming over right now?\n\nMe: Yes! Your friend doesn't mind?\n\nNina: Not at all. She told me she is getting wet just hearing about it.\n\nMe: Sounds good to me!\n\nNina: Great! Hurry over and just come in when you get here, the door will be unlocked.\n\nI walked over to let Mike know I was leaving. He looked at me questioningly but I could tell that he just wanted to keep talking to the brunette. I reassured him that everything was good and then I left. It took about ten minutes to drive to Nina's place and when I got there I took the back staircase. At her door I knocked once to let her know I was there and then I pushed it open. Letting my eyes adjust to the low light of her apartment I slipped my shoes off and looked towards the couch.\n\nNina sat at one end of the couch and her female friend sat at the other. They were both looking over at me since they had been expecting me. Nina was wearing a tight t-shirt with no bra and had a blanket draped over her lap. Her friend was wearing a thin-strapped tank top over jeans. She had curly brown hair that was tied up in a messy bun and from where I stood she looked pretty attractive.\n\n\"Thank goodness you are finally here!\" Nina said with a smile. \"We have been talking about sex for the past hour and I'm so horny. Do you want to sit on my cock?\"\n\nBefore I could answer she threw the blanket back to expose her hard cock standing up in her lap.\n\n\"I'd love to,\" I said with a chuckle as I walked towards the couch. I couldn't help but focus on Nina's big, beautiful cock as I got closer. It was standing straight up and there was a glistening bead of precum on the tip. I couldn't wait to have it in my ass.\n\nAs I passed her friend I extended my hand and introduced myself. She told me that her name was Brittany and now that I could see her up close I realized that she really was as attractive as I had initially thought. The high cheekbones in her slender face brought the focus to her beautiful blue eyes. With a ready smile she told me how much she had heard about me.\n\n\"OK, enough small talk,\" Nina said as she looked at me charmingly. \"You should really take those pants off.\" She gave her dick a little shake to bring my attention back down to her cock.",
        "\"Duty calls,\" I said to Brittany with a smile.\n\nShe laughed as I turned towards Nina. Surprisingly I didn't find Nina's insistence that I immediately satisfy her offensive. I really wanted to get fucked and her playfully assertive attitude only seemed to turn me on. Maybe I should have been anxious about how it looked to Brittany but I honestly didn't care. If she thought of me as Nina's 'bitch' and therefore 'not a real man' that was her problem. I liked girl cock and I didn't care who knew it.\n\nI stepped over to Nina's side of the couch. I bent over to give her a quick kiss on the lips and then I unbuttoned my pants. Letting them fall to the floor I stepped out of them and slid my underwear down. My cock was already semi-hard in anticipation and I reached down and gave it a few quick strokes. I was about to step forward when Nina interjected.\n\n\"Can you grab some lube out of the drawer?\" She asked as she pointed towards her nightstand.\n\n\"Sure,\" I answered as I turned and started to walk over. On the way I slipped my shirt over my head and let it fall to the floor. When I reached the nightstand I looked back over my shoulder to see Nina watching my bare ass and lightly stroking her cock.\n\nNina turned to Brittany. \"See? I told you has a very fuckable ass,\" She said with a smile.\n\n\"You were right,\" Brittany responded with an amused grin. \"It's very sexy.\"\n\nI smiled as I turned around and opened the drawer. Reaching in I picked up the bottle of lube and returned to the couch. Snapping open the cap I poured some lube into my hand and then I reached down and grasped Nina's cock. Sliding my hand up and down a few times I enjoyed the look of pleasure that crossed Nina's face. Once her cock was sufficiently coated I reached back and spread some lube on my hole. I even slipped a finger into my ass to prepare myself.\n\n\"Ready?\" Nina asked.\n\n\"Definitely,\" I answered with a smile.\n\nWith a quick glance at Brittany I climbed onto the couch facing Nina. Straddling her lap I positioned my ass over her cock and began to lower myself down. When I felt the tip of her member make contact I made a slight adjustment so that it was lined up with my hole. Then I slowly pushed myself down on her hard cock as I looked into her eyes.\n\nWe both moaned as the head of her cock penetrated me. I had been using my dildo at home but it couldn't fully prepare me for Nina's monster cock. I needed to pause for about ten seconds to get used to how much my hole was being stretched out but then I began to push down again. Inch by inch I took her cock until I finally found myself sitting in her lap. We both sighed contentedly.\n\n\"Ahh,\" Nina breathed out. \"This is just what I needed.\" I felt her cock pulse in my ass as she reached up and lightly caressed my face. \"Thanks.\"\n\n\"It's my... pleasure,\" I said between breaths.\n\nI lifted my ass up and began to slowly bounce up and down on her lubricated cock. It was a smooth, steady motion that sent waves of pleasure through me as I felt every inch of her fill me completely. I closed my eyes and focused on the friction as I slid my ass up and down. It took a minute or two for me to get fully accustomed to the size of Nina's cock but by then I was in heaven.\n\nI increased the pace of my bouncing motion. My ass began to jump up and down on her cock with vigor as the volume of our moans increased. The sound of flesh slapping against flesh filled my ears whenever I came all the way down in Nina's lap. The smell of sex filled my nose as our bodies rubbed against each other. I got lost in the feeling of her cock sliding in and out of me.\n\n\"No wonder you were going on and on about your new boy toy,\" Brittany said next to us. \"He's really loving this.\"\n\nI opened my eyes. I had been so focused on Nina's pleasure-giving cock that I had actually forgotten Brittany was there. I glanced over at her to see her looking down at my hard cock that was slapping against Nina's stomach every time I sat down. I hadn't even realized that I was hard until I followed her gaze.\n\nI looked back over at Brittany and I did a double take. She was laying back on the other end of couch with her jeans unbuttoned and one of her hands was down the front of her pants. She was clearly rubbing herself while she watched me fuck Nina.\n\n\"I told you... he loves it,\" Nina replied breathlessly. \"And right now... I love... this ass.\" To punctuate her last word she brought both her hands up and slapped my backside.\n\nLooking back at Nina I smiled and then I redoubled my efforts. I knew she was getting close and I really wanted to make her cum. I grabbed onto the back of the couch for leverage as I began to really work my ass on her cock. I slid up until just the head of her cock was inside me and then I slammed myself back down in her lap. The volume of Nina's moans immediately increased.\n\nLess than a minute later Nina wrapped her arms around me and pulled tight against her. Chest to chest she held me firm as she started to really pump her cock up into me. With my erection trapped and stimulated between us I leaned down and began to kiss her neck. That seemed to do the trick as seconds later her moans reached a crescendo.\n\nNina threw her head back and moaned. Her whole body bucked and spasmed against me as she came in my ass. I could feel each shot of cum leave her cock as I squeezed my ass tight around her shaft. It took about thirty seconds but finally Nina gave one final moan and then collapsed back on the couch.\n\n\"Amazing,\" Nina said as she looked up at me. She smiled contentedly through the thin sheen of sweat across her brow and added, \"I really needed that.\"\n\n\"Like I said... it's my pleasure,\" I replied honestly as I sat back in her lap with her large cock still firmly embedded in my ass. As I shifted I could feel her warm cum deep inside me. It was a huge turn on.\n\n\"That was really hot!\" Brittany said from the other end of the couch.\n\nI turned to look at her and she smiled lustily at me. She kept her hand in her pants and she continued to rub herself. Leaning forward slightly Brittany looked down at my hard cock. \"Did you cum?\" She asked.\n\n\"Nope, not yet,\" I replied as I looked down. My hard seven inch cock stood out proudly from my body and pulsed with my heartbeat as I felt each twitch of Nina's spent cock.\n\n\"So I guess I have a question for you,\" Brittany said.\n\n\"What's that?\" I asked as I looked over at her.\n\n\"Do you eat pussy?\"\n\nA big, dumb grin crossed my face. \"Yes I do!\" I replied enthusiastically. I glanced back at Nina to see her smile and nod.\n\n\"Good,\" Brittany said as she hooked her thumbs in the waistband of her pants and lifted her ass off the couch. \"Because if you eat pussy half as well as you ride dick I'll be cumming in no time!\"\n\nAs Brittany slid her pants off I lifted my ass up off of Nina's semi-hard cock. Immediately I felt the muscles of my gaping asshole contract and a trail of Nina's warm cum run down the inside of my right leg. I smiled at Nina and then turned and took a few steps towards Brittany's side of the couch. My hard cock bounced up and down as she slid her thong off and threw it on top of her pants on the floor.\n\nWith a smile on her face Brittany spread open her long, smooth legs directly in front of me. Her shaved pussy was already glistening wet from her fingering and her clit was swollen. Almost on instinct I went to my knees in front of her. Bending at the waist I leaned forward and brought my face down. She smelled really good.\n\n\"Ready when you are,\" Brittany purred.\n\nShe gasped as my warm mouth covered her pussy. Burying my head between her thighs I opened my mouth and used my tongue. I focused on her clit but I used my tongue liberally, licking all over to taste her sweet juices. Her moans told me which spots to focus on and after a few minutes she was writhing under my tongue.\n\n\"Oh yeah,\" Brittany breathed. \"That's it. Eat that pussy.\"\n\nShe looked down and made eye contact with me. Her sexual hunger was obvious as she reached down and grabbed the back of my head. Pulling my face into her pussy she began to grind herself against me. Up and down she rolled her hips as she used my mouth for her sexual gratification.\n\nI was loving it. I had been so obsessed with girl cock recently that I had almost forgotten that I liked genetic girls too. I was enjoying the lusty moans Brittany was making as I continued to lick and suck on her pussy. It wasn't quite as enjoyable as sucking Nina's cock but I was savoring the moment.\n\nI glanced over with just my eyes to see Nina watching me. She wasn't looking at my face but she seemed to be focused on my lower body. With my hard cock bouncing up and down underneath me I arched my back and gave my bare ass a little shake. Nina smiled as she sat there lazily stroking her wet, semi-hard cock.\n\nA few seconds later Nina got up off the couch. I continued to focus on eating Brittany's pussy as Nina went to her knees next to me and placed one hand on my back. With her other hand she reached underneath me and began to milk my swollen cock. Slowly and gently at first she gradually increased the pace until I started moaning.\n\nNina kept her hand on my cock as she slid around behind me. She planted a kiss on each of my ass cheeks and then without warning she brought her mouth down directly on my hole. My whole body jerked from the sensation of her performing analingus on me. I knew she probably tasted some of her own cum in my ass but she dove right in anyway.\n\nWith my tongue in Brittany's pussy and Nina's tongue in my ass I rocked back and forth. Nina continued to play with my hard cock as I got and gave pleasure in turn. The feeling of Nina's strong tongue swirling around my hole made me moan and breathe heavily on Brittany's clit. That seemed to turn Brittany on as she continued to buck her body up and down on my face.\n\n\"So... good,\" Brittany breathed.\n\nNina took her hand off my cock and her mouth off my ass. I was momentarily disappointed but seconds later I felt Nina position herself on her knees directly behind me. She gently rubbed my back and then I felt the head of her cock at my hole. She leaned forward so that I felt her bare breasts on my back and she brought her mouth to my ear.\n\n\"Ready for round two?\" Nina whispered.\n\n\"Mmm Hmm,\" I replied with enthusiasm into Brittany's pussy.\n\nWith her hands on my hips Nina pushed her cock back into me in one smooth motion. As soon as Nina's cock was all the way in she began to pump my ass with long, slow strokes. I didn't need any time to get used to her size and I immediately began to moan. I felt waves of pleasure radiate out from my ass and my whole body felt warm as my hole was stimulated by Nina's large cock.\n\nEvery forward thrust by Nina pushed my face harder into Brittany's pussy. I kept my tongue in motion but I was not surprised to find myself losing focus. Nina's cock in my ass just felt too damn good. I wasn't the only one that noticed as Brittany suddenly tilted my face up so that I was looking into her eyes.\n\n\"I'm so close to cumming but you are losing focus,\" she chided me playfully. \"Come here,\" she said as she curled her fingers up and beckoned me to her. \n\nI looked back over my shoulder at Nina. She stopped fucking me and pushed her cock into me as deep as it would go. I sighed contentedly as she gripped my hips tight and we both shuffled forward on our knees. When my knees hit the couch I stopped and Brittany pulled my mouth down to hers. At the same time she reached down and lined my hard cock up with her soaking wet pussy. I slid in easily.\n\nI moaned as Brittany's warm pussy enveloped my cock. We continued to make out as I began to slowly pump my cock in and out of her. At the same time I felt Nina do the same to me. It took a few seconds to get our thrusting in sync but then we all began to moan.\n\nI didn't know I could get so much pleasure at once. The feeling of Brittany's pussy as I thrust my hard cock into her was fantastic. But it was just the icing on the cake of the incredible feeling that Nina's large member was giving me. In and out of my ass it went and it pushed me into a state of bliss I didn't know I could reach. My head swam with euphoria as I lived in the moment and focused on the pleasure.\n\nAs I rocked back and forth between Nina and Brittany I noticed that Nina had stopped behind me. I glanced back to see her smiling as she let me create all the friction. Every time I pulled my cock out of Brittany I felt Nina's cock fill me up. Then when I pushed forward into Brittany I felt Nina's cock sliding out. It was unlike anything I had ever felt before.\n\nI knew I wouldn't last long. The pleasure of the stimulation of my cock and my ass at the same time was just too much. As I felt my orgasm approaching I increased the pace of my rocking. As I moaned that I was coming Nina pushed forward to bury her cock completely inside me. Her motion pushed me forward into Brittany who grabbed me and hugged me to her as I began to cum.\n\nMy whole body spasmed as I filled Brittany with my seed. I felt my ass contract around Nina's cock as my body heaved with every shot of cum out of my cock. I buried my head between Brittany's breasts as I hung on for the remainder of the best orgasm of my life. By the time I was done I had to lay there for ten seconds and just try to catch my breath.\n\n\"Wow,\" said Brittany above me.\n\nI lifted my head off her chest and looked at her. I smiled sheepishly and shrugged. \"That was intense,\" I said.\n\n\"No shit,\" Brittany replied with a laugh. She looked past me at Nina. \"Is that what you meant by 'he has great orgasms'?\"\n\n\"Exactly,\" Nina said behind me. \"I told you it was hot,\" she said as she ground her cock into me.\n\nI moaned at the feeling of Nina's cock still in my ass. Usually I would be done with sex as soon as I came but for some reason I still felt horny. I could feel my cock beginning to soften slightly but I still wanted Nina to fuck me. I pushed back against her playfully.\n\n\"Well, I have some bad news,\" Brittany said with a smile as she looked at me again. \"I haven't cum yet. So it looks like you will have to use that talented tongue again until I do.\"\n\nNina barked a laugh behind me and then grabbed my hips. Pulling me back with her as she shuffled backwards on her knees I felt my cock slide out of Brittany's pussy with a wet plop. When we had gone back a couple feet Nina stopped with her cock still deep inside me and waited.\n\nI looked down at Brittany's pussy. It was wet and swollen from my fucking. After a few seconds I saw thick white liquid begin to appear at the entrance. My cum. Did I really want to lick my own cum out of Brittany? Nina had licked her own cum from my ass and it didn't seem to bother her any. Not only that, I was still horny.\n\nI lowered my face down. Covering her pussy with my mouth I heard Brittany gasp. I flattened my tongue and pressed it against her clit. Using small swirling motions I stimulated it until I heard Brittany moan. As soon as she did I felt Nina slowly start to pull her cock back out of my ass. I let out a small moan as Nina went back to fucking my ass with long, slow strokes.\n\nAfter a few seconds of focusing on her clit I let my tongue dip down. Scooping some of my cum out of her I sucked it into my mouth. I had never tasted my own cum before but it wasn't bad. It was actually a mixture of my own salty cum and Brittany's juices and for some reason it turned me on to know that it was my cum. Seconds later Brittany grabbed my head and pulled my face back into her pussy.\n\nAt the same time Nina started to fuck my ass harder. She shortened the length of her strokes and her breathing increased as she began to push harder into me. I focused on the feeling of her shaft sliding in and out of me as my semi-hard cock swung freely between my legs. I moaned into Brittany's pussy as I pushed back against each of Nina's powerful forward thrusts.\n\nI couldn't believe how much cum I had pumped into Brittany's pussy. As she got closer to orgasm it seemed like I was getting a steady stream of my own semen into my mouth. Brittany bucked her ass off the couch as she ground her pussy into my face. I did my best to focus on her sensitive spots and in no time her chest was heaving with her heavy breathing.\n\n\"I'm gonna...\" Brittany moaned. \"I'm gonna cum.\"\n\nSeconds later I heard Nina moan behind me, \"Me too... Let's give it to him.\"\n\nBrittany tightened her grip on the back of my head and I pushed my tongue further into her. At the same time Nina gripped my hips tight and began pounding me with hard thrusts. It was a race to orgasm that Brittany won. She moaned as she ground her pussy against the bottom half of my face. The rest of my cum gushed out along with a good amount of her juices, covering my face and running down my chin.\n\nNina was right behind her. She moaned behind me and pushed all the way into me as she emptied her second load of the night into my ass. The feeling of her cock spasming in my ass and her warm seed deep inside me was another huge turn on. Between Brittany cumming on my face and Nina in my ass I felt great. I had just given two beautiful women orgasms.\n\nBrittany collapsed back on the couch. \"See?\" She said with a weary smile. \"I knew you would give me an amazing orgasm.\"\n\nI smiled up at her from between her legs, her juices still covering my face. \"Anytime,\" I said with a wink.\n\nNina barked a laugh behind me. \"Nice try,\" she said as she leaned back and her large cock slipped out of me. \"I know you enjoyed Brittany's pussy tonight but let's face it, you are addicted to this cock,\" she said as she slapped it against my crack with a wet plop. \"You need it.\"\n\nI turned my head to look over my shoulder at Nina. \"Is my anal addiction that obvious?\" I asked with a smile.\n\n\"Yes,\" Nina and Brittany both answered at the same time.\n\nWe all laughed."
    ],
    "authorname": "Tallnhard1",
    "tags": [
        "transsexual",
        "shemale",
        "blowjob",
        "anal sex",
        "threesome",
        "creampie"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/anal-addiction-ch-03"
}