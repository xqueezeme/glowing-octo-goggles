{
    "title": "Carly's WMAF Fantasy Pt. 08",
    "pages": [
        "(Again, I appreciate all the feedback and kind words. Thanks guys. I understand the complaints about the lack of a slow seduction. A) I couldn't make it work with where I wanted to take Sherry's character later and B) I was kind of impatient to get to the \"good stuff\". I'm going to try to introduce a couple slow burn seductions though because clearly you guys want it!\n\nSmall note: I'm not an expert by any means in the subject matter at the end of this chapter. If I got anything wrong, be gentle as my only guide was the internet ;)\n\nIf you haven't read the other chapters, go read those. And, as always, feedback is welcome.)\n\n*****\n\nI woke up the next day to a soft click-clack sound in the apartment and was quickly overtaken by the smell of something delicious. And for once, it wasn't the smell of pussy that I'm talking about. Carly was in my kitchen wearing only her slut collar and her high heels. Her hair was up in a nice high ponytail so that the neckwear was on full display. She was getting better with the stripper heels and looked incredibly sexy as she swayed her hips back and forth, walking around the kitchen.\n\n\"Good morning, Master. How does eggs and cinnamon buns sound? I was going to do bacon but the thought of grease splatter was a little too much even for a pain slut like me,\" she said with a wink. \n\nI grabbed her and gave her a huge kiss while squeezing her ass, \"It sounds lovely. And you made the right choice. I'm the only one who gets to hurt my toys.\" My fingers tweaked her nipples to punctuate my point. \n\n\"What are we doing today, Master?\"\n\n\"MMmm...\" I said, kissing her naked shoulder. \"First, we're going to eat breakfast,\" I told her as my hands drifted to cup her pert breasts, \"then we're going to have a long,\" kiss, \"hot,\" pinch, \"shower.\"\n\n\"Uhh... Master,\" she pleaded.\n\n\"What's the problem my pet?\" I said as my hands trailed down to her moist slit.\n\n\"I'm sooooo empty, Master.\" I slipped my finger inside and her legs practically buckled. \"Pleeease, Master. I don't want to be greedy but I've been so good and I need it so bad... please.\"\n\n\"Need what, slut?\" I whispered huskily into her ear.\n\n\"Your long, thick, white cock, Master.\"\n\n\"Good girl. Get up on the counter on your knees, slut.\" She looked at me slightly confused but didn't hesitate. She climbed onto the cold, hard granite countertop. I pushed her forward so she was presenting her gash to me. \"Stay there, cunt.\" I left the room and returned a couple minutes later. \"Use your right hand to play with your clit.\"\n\n\"Yes, Master,\" she said and immediately complied. I took the two binder clips I'd brought from the bedroom and applied them to her nipples. \"Oww... Oh yes,\" she said as the pain eased to pleasure.\n\n\"Now keep yourself right on the edge of orgasm while I eat. If you manage to do that, I promise you can ride my cock to as many orgasms as you'd like before we take that shower.\"\n\n\"Oh thank you, Master. Thank you.\"\n\n\"And practice your dirty talking while you're doing it, slut.\"\n\n\"I will, Master. I will... Fuck, I need you to pound my gaping fuckhole,\" she started. I made myself a plate of breakfast and went to the small table at the end of the kitchen area. It was a perfect place to view her lewd display. I could see her cunt juices dripping down onto the counter top as she was practically a faucet at this point. Her litany of nasty, perverse, degrading comments continued unabated as I ate. \n\n\"I could really get used to this,\" I told her.\n\n\"You can have this every day if it's your wish, Master. Every fucking day of my life I'll debase myself like this for you. Just say the word. I'm that desperate, Master. I need you that bad. See what you've made me, Master. A stupid, brainless bimbo ready to do anything for the promise of some cock and orgasm.\"\n\n\"Pitiful, chink whore,\" I muttered as I stabbed at my eggs. She simply moaned in ever increasing arousal as her frustration bloomed large within her. I took my time, taunting and teasing her when I could. Reminding her not to stop when I noticed her starting to slow down. By the time I finished my breakfast, she was not even close to thinking straight.\n\nI walked over to her and grabbed her hair, \"Lick the plate, cunt.\" I then used her ponytail like a handle as she stuck her tongue out and I \"washed\" my plate clean. \"Now come get your reward, whore,\" I said and walked back into the bedroom. Before I even got to my bed, I heard her hop off the counter and take the five rapid steps to the bedroom. I turned around just in time to see her hurdle on top of me, crashing me down into the bed with her on top.\n\n\"Thank you, thank you, thank you, thank you,\" she babbled over and over as she grabbed my cock and guided it to her hole. When she was fully lined up, she sank down fully on it and let out a long sigh of contentment. \"I needed that, Master. I'm not complete without you in me,\" she said. She ground against me for about ten seconds before she came. I felt her juices flood all over me and she kept grinding and bouncing. I played with her tits and flexed my cock inside her but mostly just let her enjoy herself. She'd earned it. She rode me to four more orgasms before collapsing down on my and showering me with kisses. \"You are fucking amazing, Master. I feel bad for every girl that doesn't get to fuck you.\"\n\n\"So getting me to fuck other women is altruism for females around the world?\"\n\n\"MMm... something like that, Master. But mostly it's my gift to you. A glorious cock like you shouldn't be bound to one pitiful, yellow set of holes.\"\n\n\"Even if they're the best holes?\"\n\n\"Even if I'm the best holes, Master,\" she said with a playful grin. We shared another kiss, longer and more tender this time. \n\n\"Let's go get cleaned up and I'll tell you all about my plans for your sister today. Fair warning though. It might make you horny again,\" I grinned.\n\n\"I'd be mildly disappointed if it didn't.\"\n\nTrue to my word, it was a nice long shower. One of the things I'd loved about the shower in this unit was how big it was. Because of an architectural quirk, this unit had about five more square feet to it than others with a similar floor plan. What was nice was that it didn't really change the value any but the builder had used those five feet wisely. Nobody would notice an enlarged corner in the sitting area or bedroom. But five extra feet in the shower? That was priceless. Carly and I took full advantage of that space and greatly enjoyed our shower. At one point, I just sat back on the tiled shelf and watched her wash her hair under the steaming water. I told her all about my plans for the day. I was right, they did get her all hot and bothered again but she was a very patient and obedient girlfriend and kept herself under control... barely.\n\nWhen we got out of the shower, I led her back to my room and had her sit on the bed. \"I have another surprise for you, sweetie. I cleared out a little space in my closet for you. It's not much, but I wanted you to have a bit of space for your stuff when you're here.\" I opened the closet and showed her a small bit of the closet. True to my word, it wasn't much. What my unit had extra in shower space it sort of lost out in the closet space department. Nevertheless, there was enough room for a small wardrobe and I had drawers to spare in my dresser for the rest. On the rack there were already three outfits I'd bought for her. I pulled out one, a purple backless minidress with a loose, plunging front that left little to the imagination.\n\n\"Oooh... Master... I love it. If Sherry thought I looked like a fobby ho last night...,\" she trailed off as she slipped the dress on.\n\n\"And one last surprise, sweetie,\" I said, holding out my hand. As she shimmied sexily into the dress she looked and saw the key in my hand. \"I've already told the doormen about you and this key gets you into the unit. The elevator code is 0137 and you do it backwards for a panic code.\"\n\nShe looked at me, I think a little stunned. \"Jay, thank you very much. I didn't expect this.\"\n\n\"I want you to feel fully and completely welcome here,\" I told her and gave her a kiss which she returned in full. As we broke our kiss, I smiled and looked her, \"Whatcha thinking?\" \n\n\"Nothing bad, Master.\"\n\n\"Well if it's good, why not tell me?\"\n\n\"I'm not ready to. Almost but not yet.\"\n\n\"And if I ordered you?\"\n\nShe bit her lip and gave me another kiss, \"I'd tell you if you ordered.\"\n\n\"Good,\" I said and pulled her tight to me. \"That's all I needed to know.\"\n\n\"Thank you, Master.\"\n\n\"Hey, come look at what I got?\"\n\n\"Another surprise? You're going to spoil me,\" she said with a laugh.\n\n\"This one is kind of for both of us,\" I said. I opened the entertainment center in the living room revealing the flatscreen. Then I turned on my game system and handed her a controller. The screen flashed on with large bright green letters. \"League of the Smiting Ancients!\". Carly squealed and hugged me, \"You bought it? Oh that's awesome. Do you like it?\"\n\n\"I wanted to wait until you were here to play it together,\" I said as she rapidly signed in with her have tag, \"GoldenGoddess\". \n\n\"So sweet,\" she said. We loaded in and started selecting our characters. \"Doctor Drake is good for beginners. You can summon a dragon and basically hide behind it.\"\n\n\"Or I could play heal bitch for you,\" I said hovering over the top ranked healer, a nearly naked girl in chainmail named Clarity.\n\n\"So the only place I get to boss you around is digitally? I like it,\" she said as she locked in a small little leprechaun looking creature with a tail and a huge sword. Krk'l was the character's nonsense name.\n\nWe started the game and it was instantly apparent that she was RIDICULOUSLY good. We had two people on our team worse than me (and it was my first game though I'd played other MOBAs) and Carly single handedly carried us to a win even after the fifth person rage quit.\n\n\"Uhhhh... what are you ranked?\" I asked as we locked into game 2.\n\nShe blushed, \"I might be pretty high.\"\n\n\"Seriously... how high?\"\n\n\"Well the company doesn't let employees show up in the top 500 so I'm just diamond.\"\n\n\"But where would you be...\" I said locking in another hot babe healer. \"I'm sensing an art pattern by the way.\"\n\n\"Yeah. It's been discussed. I like the eye candy but some better range is coming. And uh... last time I checked my hidden ELO was... uhmmm... seventh?\"\n\n\"Uhhh.. percentile?\" I said hopefully, feeling suddenly slightly emasculated by my submissive slut girlfriend.\n\nShe smiled big, \"Nope. Like there's six human beings better than me.\" Her tone was flat and hard to read.\n\n\"Ohh,\" I said. Ego is a funny thing. Intellectually, I knew that lots of people were better than me at things I love and was good at. Intellectually, I knew Carly was better than me at lots of things. Intellectually, I knew she'd been playing a bunch during development and I'd only played my first game. And yet... and yet... confronted with the reality of that Venn diagram overlap and I was suddenly very surprised at the reaction lingering in my mind.\n\nCarly looked at me while the screen loaded. Her brow furrowed in concern. She was getting really good at reading me. \"What's wrong, Master?\"\n\nAs irrational as it sounds, I wanted to throw the remote down and walk away. But I also wanted to fuck her into submission. And part of me wanted to show the bitch who the real gamer was. I'm not proud of those thoughts. But I am happy that I pushed them down and joked, \"Just thinking you're going to have to train me pretty hard to get me better than you.\"\n\n\"If that's what you want, Master. But maybe we could duo queue and be better together than separate,\" she said with a cautious smile.\n\nI squeezed her thigh and said, \"That sounds perfect.\" Relaxing into the game, I enjoyed the next few much more. I started to follow the game better and listened to Carly's advice. As a designer and early play tester, she had a huge knowledge edge on me. Virtually all of the top players were either early beta testers or employees. The few that were neither were streamers and a couple eSports pros that were goofing off.\n\nBy my fifth game, I'd gotten the basics down. Carly was still impressively stomping people but I at least felt like I was helping.\n\nWhen I finally thought to check my watch I realized Sherry would be there any minute. Feeling both the need to reassert my dominance and set the stage for the day, I turned off the game and laid back on the couch, \"You may suck my cock until your slut sister gets here.\"\n\n\"Thank you, Master,\" she beamed with a genuine smile of happiness. She kneeled down on the floor and freed my cock from the khaki's was wearing. Carly had already become quite the deep throat expert as she effortlessly showed by taking my cock down her throat. She looked up at me, never breaking eye contact as she bobbed slowly up and down. I think she sensed my intent and made no effort to really get me off, simply wanting my cock to feel constant pleasure until her sister arrived. She kept working my cock for about ten minutes before I heard the buzz for the apartment. I hit the fob on my key chain that would let Sherry into the building and waited. \n\nA few minutes later I heard the muffled step of her heels in the tiled hall outside my door. She knocked twice and I called, \"Come in.\" Carly never even hesitated. \n\nThe door swung open and Sherry's voice whispered, \"Oh, my.\" Only then did I tear my eyes away from my beautiful girlfriend and look up. Sherry was dressed very casually with a short, flouncy blue skirt and a white, cropped turtleneck sweater that showed off her thin waist and big tits. She was wearing nice four inch fuck me heels and some sort of white stocking too.\n\n\"Those had better not be pantyhose, slut,\" I said simply as I felt my cock grow in Carly's throat. I placed a hand on her head and quickened her pace.\n\nSherry watched me and pulled her skirt up, not even bothering to close the door. She was wearing a pair of thigh highs and she looked delicious. She stood there, completely bare, displaying herself for my approval. \"Good girl,\" I told her as I held Carly down on my cock. I watched Sherry as Carly sputtered a little for breath. My surging cock was filling her throat and she was fighting the overpowering urge to struggle. After a good 30 seconds, I pulled her off me and she panted, gasping for air. I reached down and stroked my cock, feeling close to bursting. It didn't take long and I shot my load all over Carly's exposed cleavage. \"Don't clean it off, slut. You can let it dry.\" \n\n\"Thank you, Master. The privilege to wear your cum is more than I deserve.\" \n\nI loved the almost ritualistic way she thanked me for debasing her. Something about that really got to me. I reached down and cupped her chin, \"Keep being a good cum bucket and you'll get plenty more, sweetie.\" I stood, fixed my pants and held a hand for Carly to help her up. \"Now let's go shopping so this slut has some proper clothes. And so she can learn about her surprise, right, baby?\"\n\n\"Oh yes, Master. She's going to LOVE her surprise.\"\n\n\"Would you like me to beg or is part of the game teasing me, Master?\"\n\nJust as Sherry asked that, my neighbor walked by. The 35 year old mother of three did a sharp double take before waving in embarrassment and walking past. The three of us laughed and I escorted the girls out and down to the lobby.\n\nFifteen minutes later we were standing in front of Rigby & Peller, a high end lingerie shop that sold designer undergarments. Sherry's eyes got big as we walked in. She grabbed her sister and whispered, \"These are like hundred dollar bras... I thought you said he wasn't rich!?\"\n\n\"I've got some money saved up. Don't think that this is your life from now on. But I thought a little splurge was appropriate. Ah... here comes your personal stylist.\"\n\nAgain, Sherry's expression was fantastic. Carly clung to my arm but I pushed her away, \"Oh know, sweetie, she's yours too. I want both of you to get some nice things.\"\n\n\"Really, Jay? You've done enough. I'm gainfully employed, you know,\" she said. At first, I thought she was being a little defensive but I quickly realized that wasn't it at all. She was worried about taking advantage.\n\nI simply responded by saying, \"I know. It's fine. I'm happy to. Go have fun,\" the stylist came up to me. She was the wife of a coworker and I knew she wouldn't be judgy.\n\n\"I saw your facebook status change,\" she said with a twinkle in her eyes, \"Are these the two girls making things 'complicated'?\"\n\nMadison was the second wife of one of the guys that was hired in with me. He'd struggled a bit at first and I'd helped him through the first six months at the company. He and his wife had taken me out to dinner multiple times, the last time just a few weeks ago when I'd made partner. Dave had been jokingly jealous but I think both of them were legitimately happy for me. I always enjoyed hanging out with them as they were wonderful, intelligent company and Madison was big flirt. She constantly tried to make Dave jealous but he never blinked which drove her nuts. She was about four years younger than us, long straight dirty blonde hair and a pretty good nice frame with great legs. \n\n\"Well... sort of,\" I said, unsure how to start explaining this to people. \"The tall one is my girlfriend, Carly and one of the girls making things complicated. The other 'complicated' girl is in Orlando. The shorter one here is Sherry, Carly's little sister.\"\n\n\"And she is...?\" she trailed off letting the question hang.\n\n\"Convenient,\" I said, watching Madison for a reaction.\n\n\"You're an interesting fella, Jay. David has kept some secrets from me. Color me intrigued.\"\n\n\"Don't be hard on Dave. This is all new to me too.\"\n\n\"Okay,\" she said noncommittally. \"And what are we buying them today.\"\n\n\"Carly gets whatever she wants,\" I said quickly and Madison nodded. \"Sherry gets three bras. Lacy and not full coverage. And a nice garter belt or even better a waist cincher if you got one,\" Madison jotted a couple notes down. \n\n\"Got it. You don't care about your girlfriend's lingerie but you have specific requirements for her little sister,\" she said with a smirk. From someone else, I would have taken it as an attack but I could tell she was messing with from the tone in her voice.\n\n\"Like I said, she's convenient and uncomplicated. And Carly already knows what I like.\"\n\n\"Very interesting indeed,\" she said, biting her lip and sizing me up for what seemed like the first time. \"I'll make sure you're very happy with all your purchases.\n\n\"Oh, if it's a garter belt, make sure Sherry leaves wearing it,\" I told her. She made a tiny tick mark on her pad and I waived to the girls as I started out of the store. I had a sudden thought and turned around, \"Carly?\" I called out. My girlfriend turned and looked at me, \"You might want to uhh,\" I gestured as if I was wiping my chest. She blushed with embarrassment and Sherry snickered. Madison took a glance at Carly then back at me appraisingly. With that, I left for a bit. I had some other arrangements that I had to make. When I returned about an hour later, the girls were close to finishing up. They were giggling and laughing in the dressing room while Madison stood outside waiting.\n\nShe smiled when she saw me walking up. It was the smile of a VERY happy saleswoman. \"Don't tell me the damage. Tell me your commission,\" I said. I knew her percentage. I just didn't want to hear the big number.\n\n\"Two Hundred, bucks,\" she said. Her commission was 20% so I was a little surprised. \n\n\"Really? Were they really picky?\"\n\n\"Not once I gave them my employee discount,\" she said with a smile. \n\n\"Ohh,\" I said. The employee discount was 15% and it came off the commission. So that meant... \"Four grand?\" I asked, choking a little. I hadn't quite expected THAT. It was fine, the cost didn't really bother me THAT much. It just caught me a little by surprise.",
        "\"Trust me, you'll be calling me tonight to thank me,\" she said. \"Or maybe I'll talk to David and we can thank each other.\" The last was said huskily and quietly. I actually looked around for David, thinking he must be nearby and that's why she was flirting with me. To mess with him.\n\n\"Is he here?\" I asked. \n\n\"David and I have an... arrangement. Wait...? Did you think I flirted with you to make David jealous?\" she actually doubled over laughing. It took her a minute to recompose herself. \"Jay, you are fucking priceless. Talk to David on Monday. He'll explain it.\" \n\nI was confused but now couldn't stop picturing all the things that I'd always imagined about Madison but had suppressed. I had no idea they were swingers. Or whatever. It did force me to think about it. I knew I wasn't ever going to share Carly. She was mine and if there'd been any doubt, the visceral possessiveness that flared up at the mere thought of Dave fucking her reinforced it. But Sherry. Now Sherry I felt differently about. And then that line of thinking brought me to Kyrsten. Would I share Kyrsten? Yes? No? No. Definitely not. She was far too fragile to have the emotional roller coaster. If I even broached the subject with her, I suspected she'd take that as a sign of rejection. No. I wouldn't share Kyrsten either. But definitely Sherry assuming I didn't discover some deep seated psychological issue today.\n\nMy musings were interrupted by the click of the dressing room door and the two girls came out laughing and joking. I thought it was a sign of a pretty good childhood that these two were as close as they were. Particularly given what we'd done the night before.\n\nI paid for the clothes, trying to avoid peeking and spoiling surprises. Madison gave Sherry her card and told her to come back for the pieces that had to be tailored. Then she turned to me and said, \"Talk to David.\"\n\n\"What was that about?\" Carly asked as I watched the brunette's ass recede into the back.\n\n\"Oh, I think I've been offered a trade. One barely legal chink cunt for a crack at hers.\"\n\nSherry said, \"Hey,\" with reflexive offense but Carly simply squeezed her hand.\n\nShe then said to Sherry, \"Master wants to whore you out for pussy. Is that a problem?\"\n\nSherry looked at Carly then at me. \"No,\" she said after thinking about it. \"As long as he's safe, I'm down.\"\n\n\"Good girl,\" I told her. \"Now let's go get your surprise.\"\n\n\"Oh thank you, Master,\" she said. \n\nAs we walked down the street, I held Carly's hand and put my other possessively on Sherry's ass. We got a few looks but it's NYC. There's two things you have to learn. First, nobody's paying any attention to you and second, they've seen it all before even if they were. \"Don't be too excited, slut. This is a test as much as it's a gift.\"\n\n\"A test? How so?\" she asked, some reservation edging into her voice.\n\n\"A test of your resolve and dedication to me.\"\n\n\"Did you test my sister this way?\"\n\n\"She had her own test to prove that she was good and faithful slut.\"\n\n\"Have I given you any cause for alarm, Master,\" she said boldly, emphasizing the last word despite our surroundings. THAT did earn us a few looks.\n\nI chuckled a bit. \"No, slut. But I like testing sassy little bitches and you've certainly been the sassiest.\"\n\n\"And the bitchiest,\" Carly piped up. \n\n\"Hey!\" Sherry protested but it was only half hearted.\n\nWe turned another corner and saw the canopy proudly labeled. \"Orleans Ink\". The Upper East Side doesn't exactly have a lot of tattoo parlors and such. This one was the only one I knew of and they catered to a more upscale clientele. \"Wait... a tattoo? Really?\" I couldn't tell if she was excited or not.\n\n\"Not today, slut. I'll explain,\" I told her as we walked in. Tattoo parlors aren't all manned by burly guys with full sleeves and a ton of metal on their face. In fact, they were usually staffed with a pretty eclectic bunch. This one had a buddy of mine from college working there. A guy that you wouldn't really ever guess did this for a living. He was clean cut, wore polos, no tats, no piercings. But he loved the art of it and really dug it. But this place didn't just do tattoos. \"You're going to have to earn a tattoo. Today you're starting with a piercing.\"\n\nSherry gasped. When she spoke next, it was barely a whisper, \"Where... Master?\"\n\n\"Your right nipple, slut,\" I said and I openly groped her tit. \"And if you're good, next time you can get the other one done. And after that,\" I leaned in and whispered in her ear, \"I'm going to get your clit pierced.\"\n\nSherry's knees nearly gave out. Carly and I had talked about it the night before and she'd confided in me that their parents had been incredibly strict about body modifications when they were young. Carly, obedient child that she was, took that to heart and had never even gotten her ears pierced. Her sister, ever the rebel, had been the opposite. She'd gotten her ears pierced and that had caused a massive fight in the family. After that, she had promised to not do it again but she'd confided to Carly that that had only made the desire for more grow into a full blown fetish for it. \n\n\"And if you're really, really good,\" I said whispering into her ear and running my fingers along the small of her back, \"I'll someday put a tramp stamp on you that says, 'White Owned Holes' \"\n\nShe moaned loud enough that everyone noticed. \"She's fine. Sorry. Something she ate,\" I said covering lamely. I gave Sherry a little swat and directed her towards my friend.\n\n\"Jay told me what you want, right or left?\" he asked professionally.\n\n\"Uhhh... right, I guess,\"\n\n\"Now this will hurt a bit,\" he said as he started walking her through the procedure and the after care. I listened carefully as he talked about the latter part because I wasn't sure if Sherry was fully paying attention. She looked pretty glazed over.\n\n\"You sure this is good with her?\" I leaned over and asked Carly.\n\n\"Oh yeah. She's terrific. I guarantee you she is wetter right now than she's ever been in her life.\"\n\n\"Yeah?\" I asked, wrapping my arm around Carly's waist and pulling her close. \"And you?\"\n\n\"Do I want one? No. Definitely not.\"\n\n\"Oh, I know that. But does seeing your sister get one do anything for you?\"\n\n\"Hrmm... a little... but not in the way you're imagining. No. What's fucking hot is that you're making her do it. And it's hotter because you're making her do something that you know she wants but is too scared to do. You're pushing her into her own fantasies. That's fucking perfect. It's everything a well bred Asian geisha dreams for in a Master,\" she said to me sweetly.\n\n\"And are you happy with that? Her being my toy like that? Me using her just for pure selfishness?\" I asked.\n\n\"Stop,\" she said with a gasp.\n\n\"What?\" concern in my voice. Had I overstepped?\n\n\"If you keep talking like that I'm going to be literally leaking down my legs.\"\n\n\"Oh?\" I asked, suddenly very interested, \"Does me talking about using and abusing your little sister make your cunt flow freely? Do you picture me tormenting her? Crying? Begging? Worshipping my fat white cock?\"\n\n\"Maasssster... please,\" she whined. My cock stirred in my pants. \n\n\"Dumb slut. Can't even hold it together for a couple hours in public,\" I whispered and straightened back up leaving her squirming and frustrated. I heard a soft yelp of pain and I assumed Sherry's piercing had just been performed. We couldn't see past the privacy screen but it sounded like her. A couple minutes later, she came out. I shook my friend's hand and thanked him. \"How long should she keep it in?\" \n\n\"A couple months at least. Here's a pamphlet that explains everything. No playing with it for at LEAST three months. Seriously,\" he said warning me and Sherry. \"You'll feel like it's healed, you'll not take my advice and then you'll end up explaining an awkward infection to doctor. And it's weird but I've gotten used to saying it, nothing rough for at least 9-12 months is best.\"\n\nSherry and I sort of stared. I knew the healing process was long but hadn't fully appreciated how long. \"Don't worry though, after that, your girlfriend and you are gonna love it.\"\n\n\"Oh that's not my girlfriend. It's her little sister. This is my girlfriend, Carly,\" I said making the introductions. He stumbled and stuttered in confusion before eventually extending his hand and shaking. I was actually starting to enjoy the reactions from people.\n\n\"Hey... wait... didn't some redhead post the other day?\"\n\n\"Kyrsten?\" Carly said and he nodded carefully, \"Yes. That's my Master's other girlfriend. He has a very full life,\" she said to stunned silence. He turned to face me and opened and closed his mouth a couple times.\n\n\"You see some weird shit in this place, man. Never thought the weirdest would come from you.\"\n\n\"You and me both, brother. Thanks for doing this. I'll be back with Sherry if she likes it.\"\n\n\"Okay... but you have to give me actual details. I gotta update the alumni newsletter about this.\"\n\n\"Fuck you,\" I told him with a friendly tone.\n\n\"From the looks of it, you might be all out of fucks to give,\" he said with a laugh.\n\n\"I hope not,\" the two girls said in unison before all of us burst out in laughter. On the walk home, Sherry kept reaching up to touch her still sore nipple. \n\n\"Do you like your present?\" I asked as we walked. \n\n\"Fuck yes, Master.\" I noticed she hadn't stopped calling me that, regardless of who could hear since she'd gotten the piercing. \"It's perfect. And I will earn more. I'll earn all of it. I promise. I feel so fucking deliciously owned right now. And thinking about being your whore... fuck... the thought of being fucked by some random guy just so you can get some new pussy... Oh my God I need to be fucked.\"\n\nCarly and I chuckled, \"I think you've broken my sister,\" she said. \n\n\"Oh that reminds me, Sherry. Since the no bra rule has to go away for awhile, you'll have to trade it in for a new one. No cumming without my permission.\" That was another thing I hadn't learned in my cursory research. A bra was going to be required for her pretty much day and night for a couple months at least.\n\n\"Of course, Master. But that's not much of a rule. I was truthful last night. I want you to reward me with denial and only make me cum as a punishment. I'm a prideful, willful, awful little bitch when I cum. And I hate that. And I don't want to be that way with you. I feel so small and pathetic and submissive when I'm being denied. And that's how I want to feel. I can't explain it but just thinking about being... like... locked up and kept from cumming is so hot.\"\n\n\"How does making you cum punish you if it makes you all bitchy again?\"\n\n\"Uhh... well... uhh... do you know what a forced orgasm is?\"\n\n\"No...\" \n\n\"Well, giving me one orgasm and sure... I get all smug and can go turbo bitch. But if you hold me down... or tie me down... or whatever... and you give me multiple ones. If you wring them out of me until I can't take any more... And I'm not talking like three or four. I mean like 10... 15... 20. Like that. I love it. I do it to myself when I need to study really badly. It's the only way I can focus and it's... fuck... it's glorious Master. And I get all wonderfully content. That's the way to punish me and put me back in my place, Master.\"\n\n\"Interesting,\" I said as I tried to casually adjust my hard cock in my pants as we walked. Carly watched and laughed.\n\n\"She's a kinky little fuck toy,\" she said and I nodded but I was thinking. Inspiration had struck. We got to the condo and I let the girls into the building.\n\nI grabbed Carly and whispered, \"I'll be right back... 15... 20 minutes. Go edge your sister. Keep her right on the edge while I'm gone. Cuff her hands to the bed and there's ankle restraints that are under the bed. Make her suffer. I'll be right back.\" I gave her a quick kiss and barely heard her surprised, \"Yes, Master\" as I sprinted back out the building. True to my word, I was back at my front door in 17 minutes flat. I was short on breath having sprinted the whole way there. I heard some muffled sounds coming from my door but it turns out it was reasonably soundproof. \"Good,\" I thought as I let myself in. \n\n\"Fuck... please... Carly... I need it... but oh, God... I'm so close... I want to... but don't make me... please. Master will be so mad. Don't make me... but God... do something. Shove something up a hole. Fuck!!\" she screamed. I walked in and saw Carly's ass as she bent over and worked over her sister's cunt. She still had her dress on but it was bunched up and one hand was working her own clit teasingly. Sherry was tied up and restrained on the bed, thrashing in near ecstasy as she was kept right on that edge of pleasure.\n\nHer eyes were closed as I walked up to her so she didn't see me. Suddenly, she felt me and her eyes opened, \"Master! Oh God... your slut's tongue is doing evil, wonderful things to me... she's so good. So fucking good. I need to cum but I don't want to, Master.\"\n\n\"I know, slut. It's okay. I think I understand. Here, this will help.\" I pulled out a ball gag from the bad and strapped it to her mouth. She looked at me with half closed eyes. Confused, aroused and very, very frazzled. \"You'll need it to keep from waking up my neighbors for the next part,\" I told her. I disappeared from her view and tightened the leg restraints, pulling her legs wider.\n\nI made sure the wrist cuffs were secure and locked her to the headboard. Only then did I take out the vibrator wand I'd just purchased. \"We're going to find out how many orgasms you can have, slut.\" Her eyes grew wide and she struggled against her restraints. Carly sat up like an eager pet, looking at me with awe. \"I'm going to spend the night fucking your sister while we find out exactly how much of your pathetic little brain we can delete with orgasms. How does that sound, slut?\"\n\nShe screamed into the gag and I chuckled. I leaned in and whispered. \"Do you want to earn those other piercings?\"\n\nShe stopped thrashing and nodded meekly. \"And do you want to earn that tattoo?\" Again, she nodded submissively. \"Then this is the price you pay, chink. Now do you want this?\" her nod was emphatic.\n\nI switched the wand on and held it to her cunt. It took a minute to find the right spot and speed but when I hit it, she started bucking and cumming like a volcano. She was screaming into the gag and thrashing around. I held the wand there and her screams turned to pleading whimpers until another orgasm wracked through her. Sure that I'd found the right spot, I pulled out the athletic tape that I'd bought and gave it to Carly. She grinned and I held the wand down while she firmly taped it in place. Carly screamed in semi-protest as we did it until another orgasm ripped through her. Each time, her screams became more primal and her whimpers afterwards more desperate. \n\n\"Another, slut?\" I said between them. She already was starting to look worn but she nodded. \"Good girl. And would you like to watch Carly and I fuck?\" again she paused and thought before finally giving an affirmative nod. \"Good girl. Tell you what, you'll keep cumming until Carly does. How's that sound?\" Again a nod. This one thankful for the light at the end of the tunnel I was providing. \"Excellent. Carly? I'm going to use your mouth and ass tonight and you're not permitted to touch your clit. Understand?\"\n\nCarly's \"Yes, Master,\" was nearly drowned out by Sherry's scream and whimpers. Carly crawled up and put her face right next to Carly's face. She leaned forward and licked the tears from her face and said with an evil lilt, \"Oh, don't worry, slut. I'm going to make sure you know every fun thing our Master is doing to me. I wish he allowed me to cum as much as he does you,\" she said mocking her sister before twisting her left nipple suddenly and giving a firm twist. That caused another orgasm to rip through her sister as she sobbed uncontrollably into the gag.\n\nI realized that this was a game I wasn't sure the rules of yet so I pulled the gag from her mouth, \"More?\" I asked her simply.\n\nShe nodded furiously, \"Yes, Master. Don't stop until you want. Don't ever stop... I promise I'll be a good girl for you. I'll earn every humiliation you deign to give me.\"\n\n\"Good,\" I said before placing the gag back in her mouth. I leaned down and circled wide the newly pierced nipple. Careful to not touch the barbell. Then I reached up and ever so gently allowed my finger to give the lightest graze to the swollen nipple. She groaned and then her whimpers only got louder when I used my other hand to squeeze her left tit, sinking my fingernails into the ample flesh. When I came up, I gestured to Carly to crawl above her sister so that they were face to face. Or actually, since Carly was a little taller, they were more like face to chest but close enough. I lubed up Carly's ass and slid my cock into her without preamble.\n\n\"Fuck yes. Master is filling my ass, sister. His huge white cock is filling his favorite hole. Did you know what? My ass is his favorite hole. It's so much better than your useless slut cunt.\"\n\nI hadn't seen this side of Carly. Despite being nearly universally submissive, apparently she had some pent up aggression towards her sister. I proceeded to fuck her ass slowly at first then harder and faster, all the while she was narrating with a certain sinister glee to her sister. I lost track of Sherry's orgasms after ten or so. But it was well above that when I finally let loose into Carly's sweet little ass. We cleaned up in the shower, laughing and flirting loudly leaving her sister to her erotic torment. \n\nWhen we came back out, Sherry was limp and glassy eyed. She rolled her head to the side and caught sight of my cock which caused her to have another orgasm which, of course, just sent her into more sobbing and whimpering. At this point, it had been almost 45 minutes and god only knows how many orgasms. I pulled up between her legs and slid my cock into her flooded cunt. Carly had gotten me nice and hard in the shower again so I filled up my little fuck toy quite nicely. She came again and I could feel her tight hole clench me before I started pounding her again. I fucked her through another two orgasms before pulling out and offering my cock to Carly's waiting mouth as she eagerly knelt by the bed. She would occasionally pull off me and tell Sherry what she was doing.\n\n\"He's fucking my whore throat, Sherry.\"\n\n\"He's a fucking god with this thick white cock, bitch\"\n\n\"I bet you would kill to have this cock back in your empty hole,\" that one caused Sherry to whimper into another orgasm. They were getting more and more pitiful and she was crying continuously through them now. \n\n\"Your fucking useless, empty holes. Master made me wait a whole week without cumming and here he is giving you dozens and I haven't heard a thank you from your lips.\"\n\n\"Fmmkmmspr\" she said and I pulled out of Carly's mouth and shot my cum all over her face and tits. Sherr orgasmed once again, this time shaking uncontrollably. I could tell she was basically gone at this point and decided to end it.\n\n\"Carly, hump your sister's leg until you cum.\"\n\n\"Yes, Master,\" she said eagerly and climbed up onto her sister. She slid her slick slit across her sister's shin while watching Sherry's barely open eyes flutter and roll. It didn't take long before she moved up slightly and started really grinding her cunt into Sherry's knee. After about three or four minutes, she finally started cumming before collapsing onto the floor. Sherry had one last pitiful orgasm as I yanked the tape off and pulled the vibe off. \n\nI undid the gag and all that came out of her mouth was, \"Thankyoumasterthankyoumasterthankyoumaster,\" over and over. Her eyes were unfocused at first but eventually they found my face as they held her. \"Thank you,\" she said clearly.\n\n\"You're welcome, pet,\" I told her as I wiped her sweaty hair from her face. ",
        "\"I promise I'll be good. I won't be bad. I'll be good. I won't make you do that again. I promise. I promise.\"\n\n\"You don't want me to do that again?\" I asked, half joking and half confused.\n\n\"Oh no, Master. You can make me do that whenever you want. My body is your plaything. But I don't ever want to do something that earns that punishment again. That was brutal. Delicious. But brutal.\"\n\n\"I don't understand you,\" I said and gave her a tender kiss. Carly looked on with a contented smile.\n\n\"I'm an enigma,\" she said with surprising perkiness given the last hour. \n\nThe girls curled up with me, one on each shoulder. \"He's a generous and glorious, Master isn't he?\" Carly asked her sister.\n\nSherry swallowed and nodded, \"You were right, by the way. I am definitely made for this. Everything feels right when I'm servicing thick white cock. It's...\" Sherry trailed off, searching for the right word.\n\n\"Primal?\" Carly asked knowingly, reaching out and stroking her sister's hard nipples sending a shiver through her sibling.\n\nSherry nodded, \"It's like a fucking biological imperative. Like I need to be just OWNED by him. I felt a little bit of that before with the boys in high school. But having a white MAN slide that fat cock in me? I can't ever go back to anything else. This is what I need.\"\n\n\"I'm glad he made me share him with you,\" Carly said.\n\n\"Me too... Though I don't know how you do it. I just want to keep this cock all to myself forever.\"\n\nCarly and I laughed, \"Be a good girl, and you'll keep getting plenty of my cock.\"\n\n\"MMmmm... yes, Master. But Carly's the good one. I thought you prefer me... bad,\" she said in a breathy whisper into my ear.\n\n\"Just keep being you, slut,\" I told her as I grabbed a handful of her hair and gave her a forceful kiss."
    ],
    "authorname": "Masterful_Husband",
    "tags": [
        "bondage",
        "clothing",
        "forced orgasm",
        "incest",
        "interracial",
        "lesbian",
        "piercing",
        "submissive",
        "threesome"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/carlys-wmaf-fantasy-pt-08"
}