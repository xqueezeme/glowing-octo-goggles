{
    "title": "The Twelve Vitali Ch. 29",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they continue to mean the world to me and have brightened my days. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\nCat woke to find herself sandwiched between the legs of the two men she loved as they worked on their devices silently. Both looked freshly showered and shaved, as if ready to go to work. She had a sense of deja vous, and came awake and smiled as Ricco put down his device and leaned down to kiss her.\n\n\"Good morning, Beautiful. How did you sleep?\" Ricco asked.\n\n\"Good,\" she lied, hoping that Matteo hadn't realised how many times she had woken up during the night. Each time though, he had been there beside her. Awake and working on his laptop, but close and touching so she knew he was there like a solid rock, never moving while she needed him and staying true to his word.\n\n\"Would you like to tell him the truth, or shall I?\" Matteo asked, looking at her dubiously.\n\n\"You were right here every time I woke, keeping me safe, and I fell straight back to sleep,\" she sighed. \"I did sleep well. I need to see Lucca, then I'll feel better and relax more. I kept seeing him fall in my dream. Once I know he's okay I'll be fine, I promise.\"\n\n\"He's not okay,\" Ricco said gently. \"He has a head injury from his fall, and he is unconscious.\"\n\n\"But he will be okay?\" she asked softly, her eyes large and luminous.\n\n\"The early signs are good, but it's just a waiting game now,\" Ricco delivered the news as gently as he could. \"If you get up and have breakfast we will take you to see him.\"\n\n\"Yes, please!\" she said quickly, and scrambled from the bed into the bathroom.\n\nShe had a quick shower and dressed in a comfortable flowing skirt and top before hurrying out to the kitchen, frowning at the huge hot breakfast that sat on the bench. She felt her belly clench and wondered if she could use the baby card to opt for her preferred breakfast of fruit and cereal. She had power here; both Ricco and Matteo kept telling her she held power here. She should be able to eat what she felt like, shouldn't she?\n\n\"I'm sorry, Lisa. I don't think I could stomach anything that heavy. Do you think I could just have some yoghurt and muesli, and maybe some fresh fruit?\" Cat asked.\n\n\"Of course, Catriona,\" she said with a smile.\n\n\"You should eat something substantial, proteins,\" Matteo growled in a low voice hearing her request.\n\n\"I am eating healthy, and there are two other meals in the day to load up on proteins and carbs,\" she said lightly, trying to avoid a battle of wills.\n\n\"You need to make time to go and see Zachary today as well, don't forget,\" Matteo tried to prompt her without telling her that she was eating for two now.\n\n\"I haven't forgotten. That still doesn't mean I have to eat things I don't enjoy for breakfast. I like yoghurt and muesli and fresh fruit,\" Cat sighed, seeing that despite her best intentions this was going to become a battle of wills. \"I've never been a fan of eggs unless they're in cake or something,\" she admitted.\n\n\"You never said,\" he accused.\n\n\"Matteo, my love,\" she smiled and cupped his cheek, kissing him chastely. \"everything has happened so fast for us, we can't possibly know everything there is about each other like normal couples.\"\n\n\"I guess,\" he agreed grudgingly, having felt that same sense of rush surrounding their relationship in the last two days.\n\nCat sat and ate, trying to slow her movements to cover how anxious and eager she was to get to the hospital. She knew Matteo would barely let her visit at all if she seemed upset or anxious, so she stilled her nerves and ate at a steady pace, taking time to eat all the fresh fruit Lisa had prepared for her as well. Then she waited patiently for a few minutes before leaving the table.\n\n\"I'll just check in with Arturo, if he is here. Let me know when you're ready to leave,\" Cat said casually. \"Lisa, if you have time for a quick chat, that would be great, but otherwise we can catch up when I come home,\" Cat said, making her way out of the kitchen to her office.\n\nMatteo hid his smirk, realising just how anxious she was to leave but letting her have her moment of self-denial. He took a few extra minutes to finish his coffee before moving from the room, with a smile at Lisa, who seemed amused by the morning's antics.\n\nRicco had foregone breakfast to have a heart to heart talk with Arturo. While he appreciated that Arturo took his job with Cat so seriously, and was obviously loyal to her, there was something very off-putting about the way he had spoken to Matteo yesterday morning. He also knew of Matteo's gut feeling in the last few days that something was amiss in his attitude. Ricco tended to be the nice guy to Matteo's controlling and demanding demeanour, which was fed by his constantly high-stress levels recently, but Ricco had no problem being the arsehole if it was needed to put someone in their place.\n\n\"You will treat Matteo with the respect due to him as leader of this family! You will realise that your need to know the family business is far down the list of our priorities! Trust me when I tell you that Cat is our greatest priority!\" Ricco said forcefully, standing over Arturo's desk intimidatingly. \"We do not run our schedules past you! You run Catriona's past us, and not putting a lunch meeting with friends on her schedule to surprise her must be approved by both Matteo and myself! We don't just wish to know her precise schedule, we demand it, and if you overstep your position again, not even Catriona will be able to save your position in the house! Do we understand each other?\"\n\n\"We do,\" Arturo said stiffly. \"I over-stepped, it won't happen again.\" The abduction of the woman he served yesterday had truly crushed any notion he had that his position here was as a mere social secretary; making appointments at salons, going shopping and attending charity events. Yesterday had shown him just what an integral part of this family she was, starting with the conference call from CJ and Sebastian and carrying on throughout the day to the horrible moment when the alarm had sounded, and the whole building erupted in panicked activity when she had been taken.\n\n\"Just remember that each of us is facing the pressure inherent in our position, and none more so than Matteo at the moment,\" Ricco was quietly impressed that young man made no excuses but simply accepted the rebuke and thinly veiled threat he had made.\n\n\"I fucked up, I admit I didn't understand the full picture. I do now, and you can believe me when I say it won't happen again,\" Arturo said contritely.\n\n\"Actions speak louder than words, you need to show us that you mean that,\" Ricco said seriously, and turned to walk out of the room, only to find Cat watching.\n\n\"For once I don't want to know,\" Cat shook her head. \"It sounds like you two have sorted out your differences, and that's fine.\" She dismissed the conversation and went on in a business-like manner. \"Arturo, I am going to the hospital this morning, and then I need an appointment with Zachary Vitali. I would like you to find out if he can meet me there or if I have to go to his surgery. I would rather not give the gossip columns anymore fodder to run with. Anything else on the schedule I don't think I can commit to until I find out how Lucca is this morning. I am sure people will understand once they know he had an accident and I am needed at his side. That's the general line, okay?\"\n\n\"Certainly, I will text you if there is anything urgent that needs your immediate attention, otherwise I will put off your appointments until next week so you can stay flexible during Lucca's recovery,\" Arturo responded with the same business-like manner. \"Would you like me to ask someone to sit in with Sebastian and CJ this morning so you can catch up on the tutorial when you are ready?\"\n\n\"I actually know what the software is, and I believe Zion would love access to it as well. I'll give him a quick call and explain, although I am sure Sebastian is quite capable of doing this on his own.\"\n\n\"Lucia and Peri Donati have both called several times, both last night and this morning,\" Arturo told her of the most urgent-sounding of her calls.\n\n\"Could you send their numbers through to my new phone, please? I will call them back when I can. Is there anything else that can't wait for one more day?\"\n\n\"I believe Ally Gambaro is returning to Perth today and had been hoping to see you at the house on the hill before they left,\" Arturo said tentatively.\n\n\"Okay, well, find somewhere decent, close to the hospital, and ask her if she would like to make a quick lunch or an afternoon tea there with me, and apologise that I didn't make it out to the house for me,\" Cat said. \"Ricco and Matteo will force me to eat at some point, so I may as well do it with friends, if I can,\" she smiled. \"So, hospital, lunch and Zachary today. I should be able to manage that without too many problems,\" she grinned.\n\n\"A quick call to Lucia or Peri as well would help smooth some worry lines too, I think,\" he agreed.\n\n\"Yes, send those to me asap!\" she gasped.\n\n\"Already done,\" he held up the phone in his hand.\n\n\"Great, now I am going to cave in and beg my husband to hurry up and drive me to the hospital. I think he goes slow on purpose sometimes just to hear me beg him to move faster!\" she said, then covered her mouth. \"Oh dear, that came out wrong!\" she gasped. \n\n\"Sounded like a good idea to me,\" Matteo grinned. \"But I am ready to go, so you can save that begging for later,\" he chuckled as she blushed.\n\n\"Great, let's go,\" she said overly brightly, trying to ignore the innuendo, making him chuckle more.\n\n*****\n\nCat gasped as she walked into the room where the unconscious body of Lucca lay. She had been told of his injuries, but she hadn't been truly prepared for the bruises and scrapes on his face and shoulder that she could see about the sheet. Cat turned to look at Theresa, who looked haggard after spending the night sitting at her son's bedside.\n\n\"I'm so sorry!\" Cat went to her, apologising as she went. \"I can't even begin to tell you just how sorry I am!\"\n\n\"You didn't do this, Catriona. Nobody blames you for what happened yesterday,\" Theresa said sadly. \"Come sit with me, and tell how you are doing after your ordeal,\" she said sadly.\n\n\"I am fine,\" Cat said, dismissing the question. \"Have the doctors been to see him this morning? Have they said why hasn't he woken up yet?\"\n\n\"The fracture in his leg is not bad and should heal well. He is young and fit, and there are no complications,\" Theresa said. \"We just need to give him time to heal, he is a strong man,\" she closed her eyes as if in pain. \"A specialist flew in last night to review his case, and had agreed with the doctors here. He will recover, he just needs time,\" she opened her eyes and Cat could see all of Theresa's anxiety written there in the watery brown orbs. \"He is my firstborn,\" she whispered. \"I couldn't bear to lose him.\"\n\n\"He told me about it yesterday,\" Cat smiled and took Theresa's hand. \"How Matteo and Ricco and Jacobi were so much older than him and the younger siblings, that in many ways he grew up like the oldest child, even though he wasn't.\"\n\n\"Yes, I guess he was,\" she smiled. \"By the time he went off to school Matteo and Mia were already at university. I expect you and Lucca have a lot in common, being about the same age.\"\n\n\"We grew up in totally different worlds, though, so we had very different experiences and likes and dislikes, I expect,\" Cat answered truthfully. \"We were having such a good time, though, yesterday. I told him about what it was like growing up, and he took me to one of his favourite places when he was younger. He was pretty horrified that I'd never been to Luna Park.\"\n\n\"I'm surprised he didn't take you to the adventure garden, he was quite obsessed with the hedge maze there when he was younger,\" she gave a small, sad laugh. \"There was a hedge maze in the Harry Potter series, and he was always looking for an owl and his invitation to Hogwarts, but the maze he just loved. Like he had found proof that the magic in the books was real.\"\n\n\"Harry Potter is his secret indulgence?\" Cat asked, tilting her head.\n\n\"I don't know that it was so secret, but that was when he was much younger. I doubt he still believes Hogwarts and magic are real,\" she looked at her son's bruised face and reached out to place her hand over his. \"It would be nice to ask him though, don't you think?\"\n\n\"That would be better than Christmas to me right now,\" Cat said genuinely.\n\n\"Theresa, Catriona and I will stay with our boy now. Go home and eat and freshen up, please,\" Stefano spoke softly, and Cat could see Theresa about to refuse the request. \"You need to change your clothes, and he will not wake up without people who love him here. Roberto will not go without you, and he needs a small rest,\" Stefano pressed.\n\n\"Yes,\" she said reluctantly. \"You will stay with Lucca?\" she asked Cat, gripping her hand.\n\n\"Of course, I wouldn't be anywhere else right now,\" Cat said truthfully. \"If you bring me back the Harry Potter book I will read to him and remind him of happier times.\"\n\n\"I'm sure they would have one downstairs in the library,\" Stefano said. \"I will ask for it for you while I walk Theresa out.\"\n\n\"Thank you,\" Cat said, moving her chair closer to the bed and taking Lucca's hand. \"Oh God, I'm so sorry,\" she said to the lifeless looking man.\n\n\"It's not your fault,\" Ricco said quietly, pulling the second chair up beside her. \"Lucca would hate to hear you blaming yourself when none of this was your doing.\"\n\n\"I can't help it, they were after me, and he got hurt because of that. If I hadn't been with him none of this would have happened,\" Cat said sadly.\n\n\"That's true, but it would have been whoever was with you, maybe Matteo or me. We all know the risks of being part of this family. No one blames you, you have to believe that,\" he said reasonably.\n\n\"Where is Matteo?\" she asked, suddenly worried for him as well, knowing he would shoulder the blame and grief for this as well. It was who he was always worrying about his family, although he rarely showed it as anything other than stiff anger.\n\n\"He went to check on Vanessa,\" Ricco said carefully, not wanting to add to her worries but needing to be honest.\n\n\"She is still in the hospital?\" Cat asked, thinking that her accident had happened over a week ago, and each time she had asked about her during the week she had been told that Vanessa was doing well and almost recovered.\n\n\"She returned for a checkup this morning, and to see Lucca,\" Ricco explained. \"She still needs help with her broken arm. She is more than a little frustrated with the cast.\"\n\n\"Oh, I feel bad I never asked about her accident, but you both seemed so confident that she would be fine with a little rest,\" Cat said, then turned to Look at Lucca. \"I think Lucca will need more than a little rest.\"\n\n\"He is a strong man, and his injuries look far worse than the doctors assure us they are. He just needs a little rest, and he will wake up,\" Stefano said adamantly. \"I know this to be true.\" He turned to look at Ricco, \"You're in my chair.\" Chuckling, Ricco rose to his feet and moved so his father could sit next to Cat. \"Go and see if you can find the book Catriona wanted,\" he commanded, dismissing his son from the room.\n\n\"He is a strong man,\" Cat smiled at Stefano and squeezed Lucca's hand.\n\n\"We have not talked much, you and me,\" Stefano said. \"I tend to scare people with my knowledge when I do not watch what I say carefully.\" He admitted. \"Roberto is much better skilled with the social niceties and pragmatics involved in dealing with others.\"\n\n\"Roberto is very good at putting people at ease. Even when he was asking very difficult things of me, I felt at ease with him,\" she admitted. \"I love him like a father figure, and, you are right, we have not spent enough time together to share that bond.\" \n\n\"I get feelings about people, sometimes I see things, but more often I just know things,\" Stefano said as a fact rather than explanation. \"I often speak about those things I know, forgetting that others do not have the same feelings. Roberto knows me and understands me. He listens to my counsel. I knew you would come to us long before you arrived. I knew you would love and lose Ricco before finding Matteo. We didn't manipulate or plot, as Matteo has wondered from time to time, we had no need, because destiny played her hand in your love of my sons.\"\n\nCat turned in her chair to look at him. He knew she would become part of his family the way she had? She frowned, not quite understanding. He was the oracle, of course, Matteo had tried to explain what that meant more than once, and, as close as she could understand it, the oracles were akin to psychics in their ability to read people and foretell the future. Could he truly have known she would be the wife of Matteo, the heir apparent of this family?\n\n\"You doubt my words?\" he asked.\n\n\"It's not that I doubt your words, it's more that I am not sure I really understand how you know these things. I have no experience, aside from old ladies who read tarot cards and always said the same things to everyone,\" Cat said honestly.\n\n\"I don't need those sort of theatrics,\" Stefano chuckled. \"I know you hold my grandchild in your belly,\" he grinned.\n\n\"Did Zachary or Matteo tell you?\" she asked.\n\n\"I wasn't sure if you knew yourself,\" he chuckled. \"It will be a Christmas baby, so you will need to make sure you celebrate his birthday equally with the holiday season.\"\n\n\"We only found out last night, I hadn't even thought that far ahead, to tell you the truth. It just doesn't seem real yet,\" she tilted her head.\n\n\"It will be a cause for celebration for the whole family,\" Stefano said. \"You have made a very big impression on the men of my family. The women will be harder to impress, I fear. Women always are.\"\n\n\"I have no doubt about that,\" Cat admitted. \"Is there more I should know about the women of our family?\" She asked.\n\n\"Theresa loves you like a daughter, and that is no easy thing to have accomplished. I do not think you need my help to manage the women's business of our family,\" he smiled and touched her hand where she held Lucca's. With the contact, his eyes widened, and he looked at her speculatively.\n\n\"What?\" she asked, seeing the look on his face.\n\n\"You care for Lucca, that is plain to see,\" Stefano said. \"He cares for you also, perhaps too much.\"\n\n\"We have become close friends,\" Cat admitted. Even though she understood Stefano's meaning, she didn't want to acknowledge it. She watched the older man as he lapsed into silence, a faraway look in his eyes. It seemed like they had been sitting there in companionable silence for a long time, when they were interrupted by a hospital volunteer who held a copy of the book she had asked for.\n\n\"Thank you,\" Cat stood to accept the book. \"I appreciate you making the trip up for me.\"\n\n\"We don't often get requests for books; most people bring their own, or have family bring them in. I don't mind coming up to see a fellow lover of Hogwarts,\" the woman said with a small grin.\n\n\"Honestly, I've never read it or seen the movie, but I am told my brother-in-law is a big fan, so this will be fun for both of us,\" Cat engaged in the friendly banter, taking the book from her hands. \"Thank you very much for bringing it up so quickly.\"\n\n\"Is everything alright?\" Cat asked Stefano, who still hadn't moved and seemed to be staring off into space. When he didn't answer, she placed a hand on his arm and he turned to look at her.\n\n\"I am fine, thank you, just lost in thought. Please, read for Lucca. I am quite content to sit here and listen too,\" he encouraged.\n\n\"Mr. and Mrs. Dursley, of number four, Privet Drive, were proud to say that they were perfectly normal, thank you very much,\" Cat began to read the book after settling back into the chair beside Lucca's bed.",
        "Cat continued to read on and off as Doctors came to do their rounds and family members came and went. When Zachary arrived, she left Lucca's side to have a blood test and book in for an ultrasound scan to determine exactly how many weeks pregnant she was. Ally, Oscar and Nathaniel had also accepted her invitation to lunch at a nearby restaurant, and she left the hospital with barely a few chapters of the book read, but found she was enjoying the story of the young boy who grew up in a cupboard under the stairs.\n\nMatteo and Ricco both escorted her to lunch with their friends, and Cat was surprised by how happy she was to see Ally's friendly smile, and how grateful she was for her concern for Cat and her family. During the lunch, she had managed to laugh and escape the worries of everything that had happened in the last twenty-four hours. She truly enjoyed Nathanael's deadpan wit, and found that Ally had begun to see his humour for what it was.\n\n\"This trip has been wonderful for us, thank you,\" Ally said conspiratorially, as Oscar and Nathanael shared a joke from their youth with the other men at the table. \"I don't think I have ever felt this close to the two of them at one time.\" She smiled widely.\n\n\"It's unusual that we can talk about the men we love instead of one man, isn't it?\" Cat whispered back, her eyes looking at the men as they all laughed at a joke the women had missed as they talked quietly.\n\n\"Not as much for me as it must be for you,\" Ally acknowledged. \"I always knew this life was a possibility for me. I guess I hadn't fully embraced it though, and neither had they until Nathanael started talking to us honestly about how he was feeling after his trip to Malaysia and spending time with Ricco last weekend. It's been great having a real holiday together for the first time. I almost feel ready to go back and face my mother-in-law again,\" she pulled a face. \"Mikayla Gambaro is a formidable woman.\" \n\n\"I think I have been lucky to have Theresa, she's like the mother I never had,\" Cat said, not wanting to go into her background, but not wanting to hide it either.\n\n\"I knew from the wedding that your only family was your brother. I thought you might be overwhelmed marrying into one of the biggest families of the tables,\" Ally acknowledged.\n\n\"Overwhelmed was a good way to describe it, at first, but I am loving being part of such a big family now that I am getting used to it,\" she said genuinely. \"I hope I have a big family of my own as well!\"\n\n\"That's not hoping, it's an expectation for us,\" Ally laughed. \"Promise me, even if we are perpetually pregnant and unable to get together like this we will stay in constant touch. I enjoy talking to you so much. You're not like the other mothers in waiting.\"\n\n\"Mother's in waiting?\" Cat asked.\n\n\"Those of us who are waiting to take over from our mothers-in-law. The next decade will see a full changeover of the tables. We're the first generation to know so far ahead of time. But then we're the first generation where the second son didn't automatically inherit the chair,\" Ally explained.\n\n\"Roberto is not the second son,\" Cat said, making Ally frown at her.\n\n\"Maybe it was just perceived to be the second son in every family then,\" she said thoughtfully. \"It's certainly the first generation to have mothers that weren't born to the tables.\"\n\n\"At least I'm not alone in that. Peri's a hard act to follow, but she makes it easy by just being so...\" she searched for the word she needed.\n\n\"Yeah, she is so...!\" Ally agreed. \"Not just for you, but for all of us. I keep telling myself it's because Josh and Dante make her look that good, but I'll admit it's the other way around most of the time. Our men try to make us look good, but it's up to us to make them look good, in reality.\" She looked across the table to where the four men still laughed and joked with each other. \"We love them, so it's not so hard to do,\" she laughed lightly.\n\n\"Not just them, but the rest of the table too,\" Cat said quietly. \"I hope you don't think I'm rude, but I'd like to get back to the hospital. I'd like to be there for Lucca. He got hurt because of me, not that the family wants anyone to know that, but he did, and I just want to be there for him when he wakes up.\"\n\n\"Of course,\" Ally said softly in response. \"Don't give it a second thought, I'll get this.\" She indicated the men. \"Oscar, don't we have a plane to catch?\" she asked, interrupting her husband's conversation and flicking her eyes to Nathanael.\n\n\"My fault entirely,\" Nathanael rescued his brother. \"I get so caught up in reliving a misspent youth. I'll call you next week, Matt, to thank you for buying us lunch,\" he grinned and got to his feet.\n\n\"I expect you and Oscar will be returning the favour soon enough,\" Matteo shrugged. \"I believe Roberto has a trip planned to the west soon.\"\n\n\"Great, you must bring Cat with you!\" Ally exclaimed. \"I just love her. Thanks for picking a good one, Mattie,\" she laughed, coming to her feet with the rest of the table.\n\n\"I had you in mind the whole time,\" he chuckled, moving to stand beside Cat. \"Luckily, we have the same taste in women,\" he winked at her as the other men chuckled.\n\nThe group left the restaurant together, and Cat returned to the hospital with Ricco and Matteo, who tried without success to get her to return home. She went straight back to Lucca's room, and, after checking on his condition with the nurses, took up the book and began reading again. The afternoon was much quieter than the morning had been, and she managed quite a few chapters of the book and began to enjoy it without all the interruptions. She finally understood what the hype was about when she was younger. She became disappointed with interruptions throughout the evening, however, and found it harder to put off Matteo and Ricco's requests to return home for the evening with so many people willing to sit with Lucca. Cat could see their frustration with her refusal beginning to show, when she finally put the book down and sighed.\n\n\"Lucca,\" she whispered close to his ear. \"Please open your eyes and tell me everything will be okay. I'm so, so sorry. I feel just awful, please wake up.\"\n\n\"Cat, you need rest,\" Matteo said in his commanding I-don't-want-to-argue-about-this-again tone. \"It's time to go, you have been here all day!\" Cat turned to look at him to implore him to let her stay without another argument, when a voice croaked beside her.\n\n\"Let her stay,\" the whispered croak was barely audible, except to those closest to him.\n\n\"Lucca!\" Cat whirled around to face him. His eyes were still closed, but his lips moved again.\n\n\"Stay, Cat,\" he croaked, and with a great effort opened his eyes to narrow slits to look at her.\n\n\"Oh, Lucca, all you had to do was ask,\" she said in a soft voice. Cat's eyes welled up with relief as she clutched his hand in hers and smiled. She was aware of the movement and noise around her as nurses and doctors were called for, but she remained beside him, just as he had asked her to. Nurses asked her to move or to wait outside, but Lucca refused to let go of her hand and just kept repeating the same words.\n\n\"Stay, Cat,\" he repeated, as the doctor who came to examine him asked the family to wait outside. She looked helplessly at Matteo, who grumbled and left the room with the other visitors, lifting his phone from his pocket to call his parents who had gone home not long before Lucca had woken up.\n\nCat listened to the doctor as he asked Lucca a series of questions, and Lucca's eyes threatened to close several times again. He seemed to have no real recollection of what happened, believing he must have tripped getting into the car, but otherwise he could answer all the questions about the prime minister and what year it was. Real relief washed over her, and she smiled down at him. Now that she knew he was safe and out of any danger she was ready to go home without argument, after she had stayed for a little bit longer to make sure he was okay.\n\n*****\n\n\"We're going out to the house on the hill for the weekend, and possibly most of next week. You can come and convalesce out there with us, if you like,\" Matteo offered. They had put off going out to the house until Lucca was well and truly on the road to recovery. As the doctors had predicted, he was strong and fit and, despite his head injury and the moon boot on his lower left leg, he was itching to get out of bed and go back to his normal life.\n\n\"You're going to commute every day?\" Lucca asked sceptically.\n\n\"Cat wants to meet with the architects and designers, and I won't let her out of my sight for very long since the last attack, so I will charter a helicopter to fly back and forth. Ricco will be out there mostly with the security team and you, if you want to come,\" Matteo explained.\n\n\"What about work?\" Lucca asked.\n\n\"What about it? You can't go back to work until you have a clearance from Paolo, so it's not like you will be missing much. Unless, of course, you want to go home to Papa's house and let Mama fuss over you for a few days instead?\" Matteo chuckled as Lucca grimaced.\n\n\"Cat fusses just as much, but I have to admit I don't seem to mind it in the same way,\" Lucca admitted. \"Yeah, a trip to the country sounds great, thanks,\" he agreed. He had lain in this bed for two days, and he needed so badly to get out of this room. He would have gone home to Papa's if that was his only choice. Lucky for him it wasn't.\n\n\"Mr. Matteo Vitali?\" A young woman's voice asked from the doorway. She knew exactly who he was, but she had been instructed to deliver her package and use a very specific script which she couldn't deviate from.\n\n\"Yes?\" Matteo turned around and eyed the young girl, taking in the courier credentials that hung around her neck and the work shirt she wore.\n\n\"I have a package for you, but I need to see some identification before I get you to sign for it,\" she said, trying to be more businesslike than she ever had been in the past.\n\n\"Sure,\" he fished his licence out of his wallet and handed it to her, looking at her curiously as she checked it meticulously, looking up into his face.\n\n\"Sign here, please,\" she indicated the space on her clipboard and watched as he signed before handing over the package. While still holding one end of it, she spoke again. \"I am supposed to tell you that this has been through four delivery services before coming to us, so do not shoot the messenger who wound up at your door.\"\n\n\"What's that supposed to mean?\" Matteo frowned at her.\n\n\"I dunno, I'm just the courier, and I say what I'm told,\" she shrugged. \"Have a great day,\" she grinned and left the room, walking hurriedly to the elevators.\n\n\"You think I should stop her?\" Matteo asked Lucca.\n\n\"Nah, her message was pretty clear. Whoever sent you that was telling you they covered their tracks and not to bother the girl who delivered it. You better open it though, because now the suspense is killing me, and I don't want to be stuck in here any longer than necessary,\" he chuckled.\n\nMatteo pulled a chair up to the side of the bed and opened the courier sack, pulling out two files and a long letter. He began to read as Lucca took the smaller of the files and thumbed through the contents. The results of the DNA testing showed a match with a male, simply referred to as JT, and another referred to as TT, the father and grandfather of Cat. He picked up a photo from the same file and looked at it. It could have been of Cat, but it was faded and yellowed and looked to have been taken in the forties or early fifties, by the fashion. The woman, however, unmistakably looked like Cat. Lucca turned the photo over in his hands and read the single word on the back of the photo. \"Katinka.\"\n\n\"We can't do this here,\" Matteo said abruptly. He looked up from the letter and gathered the two files and letter, pushing them back into the courier sack. Picking up his phone he called Zachary. \"I need you to check Lucca out of the hospital and bring him to the penthouse as soon as possible.\" He hung up and dialled again. \"Ricco, find Cat and get to the penthouse, I'll be there in fifteen,\" he hung up and dialled again. \"Thomas, I need you and your Dad at the penthouse in twenty, if not sooner.\" He made one last call. \"Kalum, pick up Papa and get to the penthouse asap.\" No one had questioned him or his commands, instead, just agreeing. It was the first time he felt the power inherent in being the new Chair.\n\nLucca, seeing the urgency in his brother, had already swung his legs off the bed and was walking slowly but steadily to the closet where his clothes were stored. He knew he was still next to useless with the fractured leg and skull, but he was glad Matteo was not leaving him out of whatever was happening.\n\n\"Go, Zach will get me soon enough,\" Lucca said, waving a hand as he hobbled, putting as little weight as possible on his fractured leg. \"Go and do what needs to be done.\"\n\n\"Thanks, Luc, I'll catch you up when you get there,\" Matteo said seriously, and took off with his phone to his ear again as he called Knox. Nothing about this was threatening, quite the opposite, in fact, but the undertone, the not knowing where it came from, and the knowledge that the man who had sent it had engineered Cat's abduction once already, rattled Matteo to his core.\n\nWhen he arrived home, he found Cat had been delivered a package and letter of her own. The slim file that Lucca had thumbed through had also been in Cat's package. She did not, however, receive the thicker file with the damning evidence outlining who had been targeting them with the lookalikes. Matteo was thankful for that. Cat sat quietly in one of the cosy chairs on the outside deck just staring at the letter and the photo, saying nothing.\n\n\"How long has she been like that?\" Matteo asked Ricco.\n\n\"Arturo said the package arrived less than half an hour before you called,\" Ricco said quietly, his eyes not leaving Cat. She had asked for some space to think, and once again they were trying to give it to her.\n\n\"Get Lisa to set up for a meeting, in my office, I guess. Logan was right, we really do need an Athenaeum here,\" he sighed. \"I'm going to let Cat know the others are coming and where we will be when she is ready.\" He took a breath and stepped out onto the deck to greet her with a soft tentative kiss.\n\n\"If he had have known of my exitance he would have saved me from my wretched life,\" Cat said quietly as Matteo approached her. \"His words, not mine.\"\n\n\"If he truly is your grandfather, and I have some doubt that is true,\" Matteo said evenly, not wanting her to think that she suddenly had a family she could call her own. \"We don't know if this is all true or if it is someone wanting to get close to you, to us, for nefarious reasons. You have to give us time to find out the truth. Do you understand? I won't put you in danger just because one man who had you kidnapped against your will and hurt Lucca says so.\"\n\n\"You're right. I know you're right, but it just feels true. It's so easy to believe with all of this evidence,\" Cat said, flailing the letter and the paternity results in her hand, and he could see the hope in her eyes that she did belong to a family who cared about her now that they knew who she was.\n\n\"You are a Vitali, you have more family than you could ever want now,\" he said, and he could see her open her mouth to argue. \"Blood alone does not make people family, there must be love and connections, and you are so loved by us, Cat, loved by me and all of our family.\"\n\n\"I know. I do know that, Matt,\" she looked up at him and sighed. \"What do we do now?\"\n\n\"Now we find the truth of it for ourselves. The TT person sent me a courier as well, with a lot more information. Thomas and Cosimo will be here soon, along with Papa and Kalum. We are going to go through it all piece by piece. Do you want to come, or would you like some more time to think?\" Matteo offered to include her in the conversation rather than leave her to over think the small file she had been sent with the test results and the photo. He would also like to read the letter sent to her, if she would let him.\n\n\"Just a few more minutes, please,\" she said quietly. \"I will come when they arrive and share my courier sack with you.\" She knew by the way his eyes followed the letter that he was eager to read it, but she wasn't ready to share its contents just yet.\n\n\"Alright,\" he leaned over to kiss her. \"Don't over think this just yet, okay?\" Cat nodded and cupped his cheek, smiling softly at him.\n\n\"I'm okay, honestly,\" she said softly. \"It's just a lot on top of everything I have had to deal with lately.\"\n\n*****\n\n\"Lucca, you can barely keep your eyes open,\" Cat said softly. \"Please, let me show you where the guest room is. Nothing is going to be decided tonight, they've been through all of the information so many times you all know it by heart.\"\n\n\"Come on, my son. I, too, am going to go home and think about what we have learned tonight,\" Roberto said, looking as pale and exhausted as his son.\n\n\"Where he goes I follow,\" Stefano agreed, standing from the table.\n\n\"Thomas and I won't be far behind you, and Zach fell asleep on us an hour ago, so we should let him go home too,\" Cosimo added his weight to the sentiment of the others as everyone stopped to look at Lucca.\n\n\"Okay,\" he finally gave in, \"but only because Cat asked to take me to bed,\" he grinned at his brothers as Cat gasped and shook her head.\n\n\"I'm pretty sure she offered to show you the guest room,\" Matteo gave him a deadpan look.\n\n\"You say tomato, and I say tomayto,\" Lucca chuckled and came to his feet unsteadily, forcing Ricco, who had stood with his fathers, to move forward to prop him up.\n\n\"Come on, Romeo, let's get you to bed,\" Ricco chuckled. Cat followed them, turning down the bed and watching as Ricco helped Lucca strip down to his boxers.\n\n\"Enjoying the show?\" Lucca asked Cat with a lascivious grin, making her blush.\n\n\"I'm so sorry this happened to you, Lucca,\" she said quietly. \"I know you don't blame me, but if they hadn't come for me, you wouldn't be hurt right now.\"\n\n\"Everything you said is true,\" Lucca agreed. \"This is their fault, not yours though. You do get that on some level, don't you? They came for you, but you didn't force them to abduct you, did you?\"\n\n\"No, but if I had been...\" she started to explain her feelings.\n\n\"If you weren't with me, it could have been Ricco or Matt that got hurt, and they are far more important to the family at this time than I am. If I miss a week or two of work, it's no big deal. If Matt missed work, the world might just come down around our ears,\" he exaggerated with a grin. \"We all know what a big sook Ricco is when he's injured, and nobody wants to go through that, so it's better this way. You have to see that.\"\n\n\"I'm standing right here!\" Ricco warned his younger brother good-naturedly.\n\n\"All I'm saying is that, of the people who circle around Cat, I'm possibly the best one to have been in this situation. I'm younger, fitter and healthier, and I will recover quickly. It's no big deal. You were all lucky I took one for the team,\" he chuckled.\n\n\"Just don't do it again,\" Ricco grumbled at him. \"Now sleep; or you'll end up back in the hospital instead of here with us where Cat can fuss over you properly.\" Ricco rolled his eyes. \"One chapter tonight and that's it!\" he warned Cat.\n\n\"I don't know that he'll keep his eyes open for more than one page,\" Cat countered, but went to get the book.\n\n\"We'll probably be up most of the night,\" Ricco said quietly under his breath as he walked from the room with her, leaving the weary Zachary to check over Lucca before he left. \"This has messed with Matteo's head; Theo is a good friend of his and Mario's cousin. If they were behind what happened over the wedding weekend, like the evidence he was sent points to, he'd be shattered.\"",
        "\"Okay, one chapter, then I'll try and get some sleep,\" she said, knowing that's what he was asking without saying it. \"Unless I fall asleep while reading too, then I may just sleep with your brother after all.\" Cat teased.\n\n\"There are worse things that can happen,\" Ricco chuckled, and turned back toward the office where Matteo still sat with Thomas and Cosimo.\n\n\"The first line says it all,\" Thomas said. \"The enemy of my enemy is my friend.\" He quoted the letter Matteo had received. \"There are no threats here, just information which we can verify ourselves. No one could be that stupid to think we would go to war with another table without doing our own investigation. Even though there has been bad blood between the Martino's and us for generations, it is hard to believe, so we must investigate ourselves.\"\n\n\"So just to recap from the beginning,\" Cosimo said, studying the photographs emails and texts messages spread out on the table in some form of a timeline. \"Vanessa tells Mario that the ghost town is real, and about seeing her mother, who was once a Martino and had a dubious love affair with her brother, Mario's second cousin. Mario then talks to his cousin, telling him Maria is alive,\" he looked at the younger men for confirmation and saw that Thomas was creating the timeline on his tablet as his father talked.\n\n\"That was the end of January,\" Matteo put in. \"Possibly the last week, or first few days of February at the latest.\"\n\n\"That matches the dates on the evidence. So, January, we find out about Maria and the ghost town and Vanessa confided in Mario,\" Thomas read his notes. \"February...\" he looked up at his father to continue.\n\n\"I guess I have to wonder when these people started looking at Cat... If the evidence dates back to January before any photographs of Cat emerged in the media, or anyone even knew of her relationship with Matt or our family?\" Ricco asked.\n\n\"There were a couple of photos from the book launch in Brisbane and the art gallery, maybe, though I'm not sure about that,\" Matteo considered the question.\n\n\"Let's just deal with what we have in front of us first before we begin to speculate on the why's and wherefores,\" Cosimo said. \"The Martino technical engineers knew they couldn't cover their tracks well enough, I imagine, which is why they sought our help from the dark web. The evidence shows their inquiries about an impregnable system, and one of the Tatar took the job, which is why there is such a great amount of evidence here. It won't be hard to verify it with the Papillo when the data mining started, and if these breaches actually occurred in any of the facilities listed, even if they didn't get any information on the ghost town.\"\n\n\"I'll call Rick first thing,\" Matteo said. \"If we were being watched at this time they may have seen Cat and questioned where she came from.\"\n\n\"During March you both had trials, and then you went overseas without Cat, but your official engagement pictures were published, and they have those,\" Cosimo shuffled the pile of evidence for March into one pile. \"The lack of evidence had been obviously frustrating the Martino's, which is how they came up with the look-alike idea, which the Tatar provided facial recognition software for, and Mario and Giovanni took the lead on using information from Vanessa, which is why Mario had spent so much time in Melbourne over the last few months.\"\n\n\"The Tatar backed off at that point, according to this, because they became aware of Seubi involvement. They hadn't identified themselves to the Martino's as Tatar, so they just fell away from the situation, but their involvement had allowed them to leave surveillance in place in the Martino technologies,\" Thomas continued for his father.\n\n\"It's rare for the Tatar to get involved in any of the other family dynasties,\" Ricco considered what was being said. \"Why this time? Was it just because they were curious about Cat?\" A memory niggled at the periphery of his mind, but he couldn't quite catch hold of it, and it bothered him, but nothing he was hearing was jogging his memory enough to recall it.\n\n\"Maybe it's only that they are particularly good at hiding their tracks that we think they don't get involved?\" Thomas said. \"They have always been unthreatening. They're nomads, travellers, gypsy's, whatever you want to call them. But can we truly be sure about their neutrality where we are concerned? They obviously think of the Suebi, and maybe even the Martino's as an enemy. That certainly doesn't sound neutral. And did we even consider until now that they had resources comparable to ours? Seriously?\" He directed his question to his father. \"The Suebi are bottom feeders, we are used to having to deal with them. But the Tatar? Who will reveal themselves next? The Salians?\"\n\n\"The fact is we don't know if any of this is true. Or even if the anonymous sender is Tatar,\" Matteo sighed. He had a headache now, and he knew he needed answers for Cat. \"There is nothing more we can do tonight. Let's gather everyone tomorrow. I'll get Hilary to set up the large conference room for the full table. We can't keep squeezing into Papa's with our numbers, and, to be honest, it will draw less attention if everyone gathers here in HQ.\"\n\n\"Yeah, alright, we could all use a little rest,\" Cosimo said finally. \"You've sent through copies of the documents?\" He asked Thomas, who rolled his eyes at his father for asking such a question.\n\n\"Yes, Papa, let's go,\" he sighed and stood. \"We'll work it out, Matt, get some sleep. There is no threat in this, just information that we can verify, for the most part. Probably worth keeping a closer eye on Vanessa, though, until we work out the truth of it.\"\n\n\"Yeah, she wouldn't have done it purposely though. I would bet she was just confiding in the man she should have been able to trust,\" he sighed, defending his sister, despite the evidence that she had been an integral part of the strange happenings around them lately. They'd all known the consequences of talking about what they had seen in the ghost town.\n\n*****\n\nCat woke in her own bed to find Matteo asleep beside her. She was grateful that he had managed to shut his eyes, if only for a little while. It was rare for her to see either of the men she loved sleeping, and she stayed very still, not wanting to wake him.\n\n\"You slept with another one of my brothers,\" he murmured without opening his eyes.\n\n\"What?\" she gasped.\n\n\"Ricco carried you in here last night after he found you asleep beside Lucca,\" Matteo grumbled, rolling over and trapping her below him. \"You don't have to sleep with all of my brothers, you realise.\"\n\n\"True, Leo and Raphael are a little young for my tastes, but some of your cousins are pretty handsome,\" she teased.\n\n\"No more brothers or cousins!\" he growled, but there was a glint in his eyes that told her he was more amused than unhappy.\n\n\"How will I find out all your deep dark secrets if I don't snuggle up to the people who know you best?\" she asked.\n\n\"Just ask me. I know me best!\" Matteo bent his head to kiss her. Deepening the kiss, he moved between her legs, widening them and pressing against her, making sure she knew just how much he wanted and needed her. Their whole relationship seemed to be one crisis after another, and he felt like they had never truly just had time to enjoy each other and their relationship since returning from Brisbane together.\n\n\"I thought you would be rushing off to meet with all those brothers and cousins this morning,\" she whispered as he broke the kiss. \"Not that I'm complaining,\" she wound her arms around his neck.\n\n\"Ricco and Thomas are getting everyone up to speed while I take my time saying good morning to my wife,\" he grinned and kissed her again. \"You seem to forget you married me, not my whole family,\" he admonished her.\n\n\"Well, I see them more often than I see you lately,\" she giggled, and Matteo leant down and bit her lip gently.\n\n\"Perhaps, but I am going to remedy that, starting today,\" Matteo murmured, pressing against her again and feeling her raise her hips to meet his.\n\n\"Tell me more,\" she whispered, squirming beneath him.\n\n\"Maybe,\" Matteo murmured huskily, \"But first,\" he teased. His kiss was as gentle as a butterfly, at first this time. The next movement of his mouth brought a little more pressure, her lips opened slightly at the feel of the tip of his tongue gently teasing the tender flesh of her lower lip.\n\nHe smiled as a soft moan escaped her lips. His fingers tightened around the back of her neck, and he pulled her body closer to his, deepening the kiss, leaving no doubt that he intended to be exceedingly late for the meeting with the men of his family. He wrapped his arms tightly around her; one across her shoulders and the other under the curve of her bottom, then he rolled onto his back, taking her with him in one fluid movement.\n\nCat's bright blue eyes widened in surprise at finding herself neatly planted atop him, her thighs splayed on either side of his hips. Rolling her hips, she could feel the hard ridge of him pressed into the soft flesh of her pussy, so she took advantage of the new position. Bracing her hands on either side of his head, she pushed herself up. Her sleep-tousled hair fell in a curtain across her face to tickle at his chest, and a wicked grin spread across her lips as she lifted her hips a fraction of an inch and arched her back, rolling her hips again and pressing down onto his hard cock. She heard his breath hiss in through his clenched teeth, and she peeked at him through her lashes, and wiggled a little more, setting him more firmly into her moist folds. Grinning at having affected him enough to hear a muffled groan, and feeling his hands reach for her hips to still her movements, Cat stilled momentarily.\n\nHaving kept her still for several moments, Matteo relaxed back and gazed up at her, a sly smile on his face as one hand quickly left her hip and smacked her ass. As she yelped in surprise, he quickly pulled her back down on top of him and smacked her ass twice more. His smile faded, his dark eyes bright with undisguised lust as she began to rotate her hips, pressing down on him again.\n\nHer eyes closed, and small white teeth glinted behind warm pink lips as she bent to nibble his neck, paying particular attention to the tender spot just below his ear. She distantly registered his hands gliding over the hot pink flesh to cup her bottom. He lifted her slightly away from him so that she could feel his cock glide between the hot wet folds of her pussy. Sinking her teeth into his neck to distract him slightly, she reached back and took his hands, pulling them up above his head in the way he often pinned her to the bed. She knew she couldn't restrain him if he really wanted to be loose, but it excited her to have him at her mercy, if only for a short time.\n\nMatteo raised his eyebrow at her and smirked, and she leaned forward to lick over the bite mark she had left on his neck. She heard his soft moan and grinned to herself as she licked her way down his throat to his chest, nibbling here and there. Her tongue flicked out and gently teased his nipple, knowing this would excite him. His hips insistently pushed up into her, proving that she knew her man well, and a thrill ran through her when he finally broke free of her grasp, is hands moving to her rotating hips once more.\n\nEnjoying being the tease for once, she wriggled free of his hands again and slid down the length of his body, pausing to nip the flat belly with her teeth. She was on her knees between his legs, running her hands up his thighs. Looking up at him, she lowered her head, taking his hard cock into her mouth, never breaking eye contact.\n\nHis legs tensed, and his fingers twined into her hair. She'd smiled around him, running her tongue up the underside of his shaft. She felt his little shiver and slid her mouth back down on him, taking all of him and feeling him press into the back of her throat.\n\nHer left hand curved under his ball sack and cupped him, stroking with soft, gentle fingers. She felt him pulsing on her lips, and she moved down onto him. His fingers twined to the point of pain in her hair, his hips thrusting up, forcing more into her mouth, making her gag slightly, but she loved the taste of him and kept her head low, devouring him. She distantly heard him moan, and she gave a small gurgling whimper in response.\n\nMatteo decided she had had her own way long enough, and pulling on the hair that was wrapped around his fingers, he led her back up his body, smiling at her small whimpers of pain and disappointment. With the grace of an athlete, he changed their positions, pushing her down onto the bed and rearing up above her.\n\nIt was his turn to taste the sweetness of her skin, his tongue running down a similar path to one Cat had taken down his body. He loved her breasts, the small pale pink nipples puckered sweetly, and he sucked them between his lips, making her breasts rise into pointed mounds of flesh. His hands rested on her breasts as he kissed his way down her body, nipping the soft skin below her navel and kissing her flat belly.\n\nHis hands spread her thighs wide and he nipped at the soft white flesh there, listening to her sigh of pleasure. He placed extra pressure on her thighs, watching the lips of her pussy part, and leaned forward to flick his tongue over the centre of her being at that point in time. A wicked grin curled his lips as he felt the pleasure ripple through her, making her thighs tremble and his cock harden further.\n\nHis lips closed over the tiny bud, and he began to whip it gently with his tongue. Her fingers threaded through his hair, pulling his mouth closer to her as her hips came off the bed to meet him. Her lips parted with soft whimpering gasps. He ran his hand up her thigh and slowly pushed his fingers into her, first one, then two, marvelling at how tight she always felt. She moaned, thrusting her hips upward once again onto the fingers and into his mouth. His tongue began to work at her faster, and he could feel her wetness begin to coat his hand. Her muscles tightened around his fingers, and he knew she was close to the edge of that abyss of pleasure that would wrack her body and leave her weak and trembling.\n\nPulling free of her grappling hands, Matteo rose above Cat, again guiding his throbbing cock into her. He slid in only a fraction at a time, and the excruciating slowness of his movements nearly sent him over the edge along with her as she mewled at him for more, harder, faster, rougher. Finally embedded in her to the hilt, he felt her muscles grip him, and a groan of pleasure rumbled from his throat as he began to answer her pleas and fuck her hard and deep. He guided her legs up the length of his body from where they had wrapped around his hips, essentially doubling her in half, and watched her breath shorten even more as she cried out her need.\n\nCat dragged her fingernails down Matteo's back, enjoying the added grunts of pleasure he issued. He stiffened, moaning her name and, unable to hold back the tide, began arching harder into her, wanting her to cum with him. He looked at the glazed eyes and the wide panting mouth of the incredible woman he married and growled loudly as he came. She matched him completely, and he felt the muscles around his cock pulse with her own orgasm milking the cum from him.\n\nMatteo collapsed beside her, allowing Cat to unfurl her legs, and they both lay breathing raggedly for long minutes. Cat turned to look at him, leaning up on her elbow, and smiled crookedly. She loved him, they were an odd couple to have found each other, but what they had was incredible, despite the other people in their lives and relationship, and as she gazed at him she knew he felt the same.\n\n\"Tell me about this remedy you have to see more of each other,\" she finally said, going back to the conversation they had started before their desires had gotten the better of them.\n\n\"We can discuss it over breakfast, I think I need a shower after that,\" he chuckled.\n\n\"Oh no you don't!\" Cat yelped and jumped up, racing him to the bathroom, \"I get the shower first!\" she challenged him. After a brief tussle they showered together, continuing to tease and stroke each other. Cat finally disengaged herself before she got too distracted again and made them both even later to start the day. By the time Matteo had finished showering and shaving, Cat had dressed, done her hair and make-up, and felt prepared to face the day, no matter what it brought. They went out to the kitchen and sat together in cosy comfort as Lisa prepared their breakfast.\n\n\"So, this remedy?\" she asked again, more than curious now.\n\n\"Ricco and I thought it would be a good idea to spend a few days, or even a week, out at the house on the hill with you. You could meet with the renovation team, and we could talk about the changes he and I would need now that our lives have changed so dramatically since I gave you the house. That is, if you still want that house to be our main residence,\" Matteo said.\n\n\"What sort of changes?\" she asked, frowning.\n\n\"I am going to need an Athenaeum, for starters,\" he said. \"The big room with the big table and all the chairs, like Papa has,\" he explained as her frown deepened.\n\n\"That makes sense, I guess,\" She acknowledged.\n\n\"We have to plan for our future as leaders of the family now. Not just our little family,\" he said, touching her belly. \"We hadn't expected Ricco to be part of our relationship, or have so many people intimately involved in our lives. We will need a separate server, a generator for emergencies, and possibly quite large additions to the house. As it is, even though I built it for a big family, it will need to be bigger. You need a studio, and Ricco will want a meditation retreat, and me, well, I need both of you to be happy and safe no matter where we are.\"\n\n\"Will you commute to work? Lucca isn't well enough to take over again if you are not here,\" she said, thinking about what he said. \"We don't have to stay out there. We can do it all by plans and discussion, with maybe just a day trip this weekend.\"\n\n\"I have great people working for me, trust me, the company will not grind to a halt if we are not here for a week or two,\" he chuckled. \"The family, our family, has to be my priority now.\" He reassured her. \"Besides, Ricco came up with an interesting suggestion for the commute to and from our home here and the house on the hill,\" he smiled enigmatically.\n\n\"Oh, did he?\" she asked.\n\n\"This building has a helipad on the roof, and there is enough room out there to land one,\" he gave her a boyish grin. \"I think he's always wanted to fly, and I have to admit the idea is appealing.\"\n\n\"Do you have a helicopter?\" she asked, stunned by the idea.\n\n\"No, but we could charter one for a while and see how the idea works,\" his grin got bigger. \"If we liked it, we could buy one for us. I'm sure I'd have volunteers to take flying lessons,\" he chuckled.\n\n\"You know that will be another toy your youngest brothers will want to play with,\" she laughed at him.\n\n\"Probably, but you know how that has gone for them so far,\" he continued to chuckle, enjoying the relaxed morning with her and remembering how and why they had fallen in love so fast. The more he considered spending time with her and Ricco out at the house on the hill, away from the dramas that plagued their lives, the more he looked forward to it.\n\n*****\n\nMatteo had reluctantly agreed to go down to the meeting of the tables once Arturo and Bradbury had arrived, leaving Cat to tend to Lucca, who was now awake and in need of assistance and company. He made sure both men knew that if she wanted to go anywhere, he needed to be alerted immediately.\n\n\"Stay home this morning and look after Lucca for me, please?\" Matteo asked, pulling Cat into his arms one last time and kissing her.",
        "\"Sure, I need to finish that book we've been reading anyway,\" she said easily. She had planned to stay home and wrap her head around everything she had learned yesterday, and the fact that she had a family, her father's family, that never knew of her existence. She also needed to talk to Bradbury, and she wasn't sure she wanted to do that in front of Matteo or Ricco. Not that she would hide the conversation from them later, but she wasn't sure what answers he would give her, if any, and how they would react.\n\n\"Who are you, and what have you done with my wife?\" he asked, narrowing his eyes. \"That was far too quick and easy.\"\n\n\"I know you're worried. I am too, to tell you the truth,\" Cat sighed. \"I'd never purposefully make you worry about me. You know that, right?\"\n\n\"Yes, but I'm glad to hear you say it,\" he held her close. \"If anything happened to you...\" his breath caught. \"It won't, I will make sure of it. Thank you for staying home this morning, I'll come up and see you for a late lunch.\"\n\n\"Sounds good. Maybe bring Ricco with you? I'm not used to him not being here at all in the mornings,\" she smiled softly.\n\n\"I'll let him know he's in trouble,\" Matteo smirked.\n\n\"That's not what I said,\" she laughed lightly and shook her head. \"Tell him I missed my Good Morning from him.\" It was true. He was there every morning until today with a smile and the words, 'good morning, Beautiful'. Cat walked Matteo to the foyer again and kissed him before he stepped into the lift, and she turned back into the apartment.\n\nBradbury stood like a sentry in the foyer, and Arturo stood in the living room, waiting for her to meet with him. First, though, she wanted to check on Lucca, and found him sitting up in bed finishing a breakfast that Lisa has served on a small tray that sat on his lap. Cat smiled and sat on the end of the bed.\n\n\"How are you feeling?\" she asked quietly, trying to study his face.\n\n\"Better than yesterday,\" he smiled. \"Hospital food doesn't compare to Lisa's cooking. How are you feeling after all the revelations last night?\" Lucca asked.\n\n\"I'm still processing it all. It's hard to believe I had a family that never knew I existed before, or why they would suddenly find me now,\" she admitted. \"I just need some time to think about it properly, without all of the cloak and dagger stuff and the obvious concerns of your brothers. I love them enough that I won't go charging off to find the mystery man for myself and make them worry even more, but that doesn't mean I haven't thought about meeting the man who claims to be my grandfather.\"\n\n\"If you did I would have to get up out of this bed and go with you, and neither of us wants that today,\" he smiled crookedly.\n\n\"You won't have to get up to follow me around. I have promised to be here to look after you this morning. You will, however, have to get up and have a shower sooner or later,\" Cat said. \"I think Matt is organising a nurse to visit to help you, he's not very happy that I fell asleep in here reading last night,\" she grinned. \"He accused me with sleeping with another of his brothers.\"\n\nLucca laughed loudly, liking the play on words, and they continued to banter as he finished his breakfast.\n\n\"Good morning, Beautiful,\" Ricco's voice sounded behind her.\n\n\"Good morning,\" she turned her head to accept a kiss from him.\n\n\"Geez, Lucca, you're looking pretty ordinary this morning, but I guess you're used to that. Maybe the cut will scar and make you look handsome for a change,\" Ricco said.\n\n\"He's always been jealous because he was blessed by being merely handsome, unlike me, who was born to be more than just fabulously handsome,\" Lucca shrugged. \"Ricco could never possibly hope to be as handsome as me, his face is too long and his eyebrows too shaggy... I could go on, but you can see for yourself,\" he spoke directly to Cat.\n\n\"You could be right,\" Ricco considered. \"It was probably natures way of making it up to you for being short. I'll admit you are handsome... for a short man.\"\n\n\"I'm almost as tall as you!\" Lucca took the bait, making Ricco grin.\n\n\"Almost doesn't come into play when talking about height, little brother. I am taller, you are shorter, but you could be the most handsome short man in this apartment, at least if you had a shower and cleaned up a little,\" he chuckled.\n\n\"Yeah, I was just about to do that once I finished breakfast,\" Lucca agreed, wanting to change the subject after letting himself react to his brothers teasing, and wanting to change the topic of conversation.\n\n\"Your nurse is here. You can shower and have your war wounds seen to while Cat has breakfast with the taller, if not more handsome, brother,\" he smirked.\n\n\"Matteo came back?\" Cat asked, knowing that he was taller than all of his younger brothers.\n\n\"Urgh!\" Ricco rolled his eyes at her but continued to smile.\n\n\"I don't need a nurse, I'm fine,\" Lucca groaned.\n\n\"You have a fractured leg and a head injury. You get a nurse, or you go back to the hospital, your choice,\" Ricco said firmly. He had known Lucca would argue with the decision, but it was done now. \"Do what we ask, and after I've eaten and spent some time with Cat, I will take you down to the conference with everyone else.\" He said as if speaking to a wayward child and offering a treat.\n\n\"I've just finished breakfast with Matteo, and I wanted to talk to Bradbury for a minute,\" Cat said. \"You can go and see Lisa, I won't be far away. I promise I have no plans to leave the apartment this morning. You don't have to babysit me.\"\n\n\"I'm not here to babysit you,\" Ricco grinned, moving to sit behind her and wrap his arms around her waist. \"I constantly think of many things I want to do with you, and, trust me, babysitting doesn't even cross my mind,\" he murmured in her ear as his lips brushed her neck.\n\n\"Do you have to do that right here?\" Lucca groaned.\n\n\"Do what?\" Ricco smirked innocently. Lucca was saved from answering by the arrival of his cousin, Isaiah. He had followed his father and older brother into medicine\n\n\"What?\" Isaiah asked. \"You didn't really think they would send up a pretty young nurse for you to shower with, in your condition, did you?\"\n\n\"I wasn't expecting you,\" Lucca admitted. \"How did you get roped into this? I'm hardly the type of patient you're used to.\"\n\n\"I'm a doctor, my speciality doesn't make much of a difference to looking after a bump to the head, but I can get Papa to come up and supervise you, if you like,\" Isaiah said indifferently. \"However, my speciality means I will eventually be seeing you, no doubt,\" he looked at Cat with a knowing smile.\n\n\"Eventually, we have plans, of course, so you don't have to drum up business here,\" Ricco chuckled, stepping in after seeing the look of panic on Cat's face after they had decided not to tell anyone for at least another four or five weeks. They first wanted to be sure everything was going smoothly in the first trimester.\n\n\"Fair enough, practice makes perfect,\" Isaiah grinned. \"That's why you have so many younger brothers, after all,\" he teased his cousin. Knowing that his older brother would inherit his father's practise and his place on the table, Isaiah had sought to make himself just as invaluable to the inner circle of the family by going into obstetrics. There were always pregnant women and babies in this prolific family.\n\n\"We'll leave you to it,\" Cat said softly, and touched Lucca's arm softly. \"Don't overdo things.\" She stood and smiled at Isaiah uncomfortably and left the room with Ricco.\n\nCat walked absently toward the kitchen with Ricco, thinking of the minuscule life that sat within her. It was hard to believe she was pregnant, but she knew it to be true now. Both Matteo and Ricco mentioned it often, yet it seemed as if it wasn't real, she didn't feel any different. She didn't feel sick in the mornings; she didn't feel bloated or fat. In fact, she felt like she had more energy than ever before.\n\n\"Do you think Zachary told him?\" Cat asked Ricco quietly.\n\n\"I doubt it. It's not uncommon for the women of our family to fall pretty quickly, though, so it's not unusual for him to say that,\" he said, trying to ease her concern. \"We will have to tell him soon, though, because he is an obstetrician, and the best person for you to see now that Zachary has confirmed your pregnancy.\"\n\n\"I guess,\" Cat said thoughtfully. \"It just doesn't seem real yet. Maybe when...\" she sighed, not knowing exactly when or what she expected to feel, but right now nothing about her body told her she was expecting the heir to the Vitali family. The thought occurred to her that she was starting her own family now in more than one way. Not only was she now part of the huge Vitali family and expecting a child of her own, but she also had this strange and strangely hopeful letter from someone claiming to be her grandfather. The thought crashed down on her. She'd had so much to deal with over the last few months; so much to take on and accept that was so foreign to everything she knew growing up, that the idea of having a child right now, when she barely knew who she was as a person anymore, terrified her.\n\nRicco looked at Cat when she stopped talking, expecting her to speak again once she had gathered the stray thought. It wasn't unusual for her to pause halfway through a sentence to reword her thoughts. As he watched her, he saw tears fill her eyes, and he frowned, taking her in his arms and holding her close. It was long moments before he spoke softly.\n\n\"Can you tell me?\" he asked. He had the feeling last night, with the letter and her withdrawal onto the deck to be alone, that she was overwhelmed. He wondered if this was finally the straw that had broken the camel's back, so to speak. Both he and Matteo had asked so much of her, and now that the wedding and Gathering were over, and life should be about settling into a calmer, cosier family life where they should be excited about having a baby, they have a new drama hanging over them. No one could possibly blame her for being emotional. She hadn't had a week of so-called normalcy since meeting Matteo, or, if he thought about, since meeting him almost a year ago.\n\nCat shook her head, she couldn't help the tears in her eyes, but she had said everything to both Ricco and Matteo already. To say anything else now would just be whining, she thought. At least he wasn't trying to pry the reasons for her tears from her as Matteo might have. She'd never cried so much as she had done in the past week, and, regardless of everything she had given up and taken on board for the men she loved, she knew that, no matter what, they would love her in return and be there for her, as Ricco was now. Cat knew she had no reason to be scared, but she was, so she snuggled into his shoulder and let her tears fall properly as he held her silently in his strong arms.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "brothers",
        "insecurities"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-29"
}