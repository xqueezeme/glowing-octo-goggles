{
    "title": "Dark as Daylight Ch. 05a",
    "pages": [
        "Note: This the property of Prolonged_Debut10. Information available at Literotica .com. All persons in this NOVEL are fictitious. There will be very little sex and it will not be of a graphic or vile nature. I hope you take this journey me as you did in my previous, SHORT, work. There will a great deal of science, how interpersonal relationships work in an enclosed space, and rollercoaster rides through Wormholes, White Holes, and possibly a Black Hole. (Einstein said it was possible; why not give it a try, ON PAPER OF COURSE.\" Let's Begin. \n\n***** \n\nChapter 5 \n\n14. Challenges \n\n\"Why aren't you warming up Janet?\" \n\n\"This Captain Jamison is going to be a turkey Gordon. I've never seen her up here working out or lifting weights. She's probably a powder puff.\" \n\n\"You should still be limber, and stretch your muscles before every bout. She may be faster than you think.\" \n\n\"It's almost 1930 hours, and she's not here yet. Three more minutes and she forfeits. The only other person here is Monty, and she's just doing her normal routine.\" \n\n\"Okay, I'm going to sit with Zoey, because they're going to announce the match now.\" \n\nThe arena area was full as the announcer called for quite. \n\n\"Ladies and gentlemen, boys and girls, for your pleasure tonight, we have a thirty-minute match between two aspiring captains. On your left a big round of applause for Captain trainee Janet Dover.@@@@@@@@@ \n\nOn your right, a big round of applause for a brand new Captain trainee; \n\nMontgomarie Jamison.\" @@@@@@@@@@@@@@@@ \n\nThe look on Janet's face was priceless. \n\nShe screamed, \"NNNNNNNNOOOOOOOOOOOOO!\" \n\nJanet looked at Gordon, who was holding his sides laughing hysterically. \n\n\"You bastard, you knew it was her. Why didn't you tell me?\" \n\n\"You kept saying you were better than everybody else. I told you to warm up, and you said she was a turkey. She may be as big as a turkey, but that turkey is going to squash you to the size of an egg. Put on your running shoes Janet, because you're going to need them.\" \n\n\"I've known that bitch for seventeen years, and I didn't know she had a last name. She's going to tattoo it on my head tonight.\" \n\nThe announcer asked, \"Are the contestants ready?\" \n\nMonty said, \"You bet I am.\" \n\nJanet said, \"Bring it on Tubby.\" \n\nThe whistle blew, Monty charged at Janet hitting her in the chest knocking her to the mat. \n\nJanet didn't move. \n\nMonty walked over to her, and picked her up. \n\n\"Oh no little girl, you are not getting away with it that easily. I'm going to hit every bone in your body until you hurt. You will be visiting Doctor Finch when mismatch is over to see if he can put you back together again.\" \n\n\"It's not fair Monty. I gave you an easy win, and you refused it. Now I have to really fight you, and you are going to pay for it.\" \n\nJanet charged and slid between Monty's legs as she had in the last fight. \n\nMonty didn't fall for it this time. Instead of turning as she did last time, she fell backwards landing on top of Janet. It was a trick Gordon taught her, and it worked perfectly for Monty, but not so well for Janet, who screamed breathlessly. \n\nMonty rolled away, took Janet's left arm, until she was face down on the mat. Janet screamed in pain and attempted to use a leg kick to move Monty's mass away from her body. It did not work. Monty twisted Janice's arm further upward towards her head, and asked politely, \"You don't want to quit yet do you Janet?\" \n\n\"You know I won't quit.\" \n\n\"Excellent, because I just found the perfect place for you.\" \n\nHolding her arm in place, she grabbed Janet by her waist, and lifted her over her head. \n\nThe crowd roared as Janet kicked her feet like a child. Monty approached the board where they stacked the weights, and pressed her between the two top tiers. \n\nJanet could not move, regardless of what she tried to do. \n\nThe audience was on its feet applauding Monty. There was one person in the audience that was applauding the loudest, and that was Gordon. \n\nThe announcer rushed over, took Monty's hand and raised it, as much as he could, over her head. He didn't realize he was about to insult her. \n\n\"The winner of this match, Captain trainee, Montgomarie Jamison, in two minutes and twelve seconds. She is now the number two ranked contender for our ship's crown as overall champion. Our overall champion remains Gordon Luck.\" \n\nGordon saw the look on Monty's face change from a smile to a look that would kill the announcer in a split second. He charged the stage and took the microphone away from him. \n\n\"Everyone, I want you to listen to me for a moment. Montgomarie Jamison has been my constant since I was four years old. That's when she started to train me to protect myself. This Captain trainee taught me everything I know about being a man. She taught me everything I know about owning up to my failures, and learning from them. This announcer did not tell you I have never fought Monty, because of the respect I have for her. You just saw what she did to Janet, and I trained Janet. In a month, when I get my strength back, that could be me, because Monty asked me to fight her as a courtesy to this ship. I have never said no to my teacher, and I won't say no to her now.\" \n\nWhen Gordon was finished there was a huge round of applause, for his sense of appreciation for what Monty did for him over the years, and how he came forward to vindicate her from the backhanded compliment of the announcer. He would try to do something about that also. \n\nAs everyone was leaving he said to Monty, \"If you don't take her down I will.\" \n\n\"Why do you always have to ruin my fun?\" \n\n\"There are nine cameras looking at us and what we are doing right now. My dad wants you to be a Captain; so do I. Captains do not leave members of the crew stranded.\" \n\n\"According to the documents, if I become a captain, I am your senior.\" \n\n\"Do you think that bothers me one bit? You've been my senior all my life, why should anything change now?\" \n\n\"I'm going to tell you the same thing I told your father; \"I don't like you.\" \n\n\"As I said Monty, why should anything change now?\" \n\n\"Okay, let's go get that piss ant down.\" \n\nAs they walked back into the gym Janet said, \"I knew you wouldn't leave me here like this.\" \n\n\"Monty, all of a sudden I'm hungry. Can we go eat now?\" \n\n\"Of course, it will be my treat.\" \n\n\"No it is my treat. You spoiled me all my life, it's now my turn to spoil you.\" \n\n\"Gordon do you remember what you said to me a few moments ago; why should anything change?\" \n\n\"Can I have shredded wheat with powdered milk?\" \n\n\"They should have left you in stasis. How can you possibly live on that stuff?\" \n\n\"You can't, it's awful. That's why when they sneak in the turkey soup it tastes great.\" \n\n\"We haven't had any in over four months, because you are in stasis.\" \n\n\"The hens aren't laying eggs?\" \n\n\"You didn't leave us any instructions on what to do for them.\" \n\n\"Didn't you ask my sister, she knows.\" \n\n\"Your sister was in no state to talk to anyone.\" \n\n\"I'll take a look at them tomorrow and see what I can do.\" \n\n\"Remember Gordon, you're not allowed to fuck turkeys, you're married.\" \n\n\"Monty, you know damn well I was celibate until I met Zoey. She was my first, and I was hers. We both have tempers, but we have a wonderful way of resolving our problems.\" \n\n\"The entire ship knows how Zoey solves your problems. Has the doctor taken pictures of your head?\" \n\n\"One of his nurse trainees did it. Her name was Fatima, and she was more gentle than Doctor Finch was. She took the x-rays and the CAT scan, and everything came out perfect the first time. Hannah is doing a great job training the new nurses.\" \n\n\"Are you going to tell me how it came out, or do I have to beat it out of you?\" \n\n\"When I get called to the infirmary to find out the results, I'll call you so you can be there, and hear it firsthand. The doc was supervising a nurse delivering a baby, and another young woman was in labor. He did not have time to look at the results. He said when he had the time, he would look at the films, and give me a call.\" \n\n\"You sound like you're not even interested.\" \n\n\"Teddy told me what I needed to know. The tumor shrunk considerably. It should make the operation easier for Doctor Finch, and a shorter recovery time for me.\" \n\n\"I've seen Teddy do magical things Gordon, but I'm still worried about Finch's hands playing inside your brain.\" \n\n\"If Finch was proctologist I would be worried too. He's a plastic surgeon, and after he drills a hole in my head he'll be fine.\" \n\n\"Gordon, you never cease to amaze me.\" \n\n\"You two get back here and get me down.\" \n\n\"Did you hear anyone calling to us for help, but not using the word please in that sentence?\" \n\n\"Please, please, please get me down from this place. I'll even shine your shoes.\" \n\n\"How do you shine cloth shoes? She did say please, three times, and we could accidently drop her, when we pull her out from between the bars.\" \n\n\"Gordon, I wasn't going to accidentally drop her, I was going to throw her on the weights.\" \n\n\"What a wonderful idea. Let's do it now.\" \n\n\"You better not. Look at all those cameras watching every move you make. You'll be in the brig for days. Be careful with me. Don't you dare throw me. \n\nI'm going to hate you both for the rest of your lives. Gordon, Monty don't do iiiiiiiittttttttttt...\" \n\n*************** \n\nSunday 0716 Hours \n\n\"Captain Abrams, X-ray scan shows an extremely large object bearing 221\u00b0, heading 355\u00b0, distance 1.2 million miles, speed 45,000 mph. Current course will bring it into the left quadrant of the White Hole.\" \n\n\"What is our current distance from the White Hole, our heading and speed.\" \n\n\"Captain, we have just finished our outbound leg of the holding pattern, turning inbound. Our distance is 35,200 miles from the entrance, speed 155,000 mph and we are now steady on our inbound course of 010\u00b0.\" \n\n\"Thank you Mister Hathaway.\" \n\nAfter thinking for a moment Gloria said, \"Let's go look at that thing. We may be able to follow it through the White Hole.\" \n\n\"I think so too. I would sound the general quarters and have everyone start strapping their belongings. We're only talking about forty-five minutes to an hour before doing it by the book anyway.\" \n\n\"Get Gordon in here first, and let him look at it. He takes over at 0800 hours.\" \n\nWhile Janet called Gordon, Gloria said, \"Helmsman turn right heading 190\u00b0 increase speed to 200,000 miles per hour.\" \n\n\"Captain in order to increase speed by that amount, I'm going to have to increase our angle of declination by 15\u00b0. There is not enough mass in these small meteors and asteroids to do it any other way.\" \n\n\"Increase angle of declination by 15\u00b0.\" \n\n\"Increasing angle of declination by 15\u00b0. \n\n\"Put that thing on the forward screen, and scan it for major cracks, and density\" \n\nAs Gordon came onto the bridge he heard, \"Captain the density of the asteroid is 280 feet and there are no major cracks.\" \n\n\"Sound general quarters.\" \n\n\"What's up Gloria, I take over in thirty minutes, and I want to know how much shit I'm getting into.\" \n\n\"Since you are a full-fledged Captain, you can take over now if you want. There is an asteroid 1.2 million miles away, heading for the White Hole. It's moving at 45,000 miles an hour and I've just move our speed up to 150,000 mph. I want to check that thing out very closely before I make a decision to follow it in. If everything happens the way we've watched it before, as soon as it reaches a point where the White Hole has influence over it, it will pick up speed. It is my opinion if it moves to the left and it looks like it's going to bounce off, we should follow it off and not attempt to go through the White Hole without the protection it would afford us.\" \n\n\"Gloria slow us down we don't want to overshoot that thing.\" \n\n\"Helm reduce speed to 100,000 mph.\" \n\n\"What could this ship do to ensure that object goes into the White Hole? Remember you have to do it prior to that rock become influenced by the White Hole.\" \n\n\"I'm not sure.\" \n\n\"We've done it once already; think about what we can do to that big rock.\" \n\n\"Could use the forward engines and use them in reverse on the right side of the asteroid. If we pull it back 6 to 10\u00b0, it will be pointed at the right side of the White Hole. Once the effect takes place, it will pull it towards the center.\" \n\n\"Very good, but 3 to 4\u00b0 at this distance is more than enough.\" \n\n\"Captain we are 10000 miles from the asteroid.\" \n\n\"Turn left heading 335\u00b0, reduce speed to 45,000 mph. Don't catch that thing, make sure we stay behind it.\" \n\n\"Roger Captain 335\u00b0 reducing speed to 45,000 miles an hour, and make sure we don't hit that thing in front of us, or anything trailing it.\" \n\n\"That was an excellent order Captain, it sounds like something I would do.\" \n\n\"You are going to have us 25,000 meters behind that thing, while we are going through the White Hole.\" \n\n\"Yes I am, but Callie is going to do all the navigating and the separation while were doing it.\" \n\nMonty, Jennifer, and I showed up on the bridge after we locked down our rooms to see what was happening. \n\nJennifer said, \"Send someone outside to clean those cameras. All I can see is a grey rock in front of us.\" \n\n\"Very funny mom, very funny.\" \n\n\"Gloria, Janet what are you still doing here?\" \n\n\"Gordon said it was okay for us to stay on, because we found this rock. It looked like the one we were going to take through the White Hole. He helped us with positioning the asteroid so it would not bounce off, but we have done everything else.\"  \n\nI looked at my son and was about to ask him how you move something of that mass and was moving that fast, but he beat me to the punch. \n\n\"Please not now dad, I'll have Gloria and Janet explain it to you later.\" \n\nMy son could be infuriating that way sometimes. I couldn't figure out who he took after. \n\n\"Mom where the babies?\" \n\n\"All babies, less than one-year old, are in a special nursery. Hannah, Sandy Finch and all the nurse trainees will be there with them. You can't tie them down as tight as you can tie a grown-up. It's working according to the plan, although some of the newer mothers are not happy with it. \n\nJoe Finch believes everyone got pregnant a few days before departure or a few days afterwards. There are fifteen new occupants on board. We've gone from 66 to 81 in a little more than nine months, but our food supply is doing wonderfully. Everyone is eating less than expected, thanks to turkeys.\" \n\n\"Mom is anyone using turkey eggs?\" \n\n\"Yes, the cook uses them every day.\" \n\n\"I'm going to kill that idiot. We need the eggs to make more turkeys, not to make soup, or omelettes.\" \n\n\"Gordon, we can't afford to feed them people food.\" \n\n\"They are becoming people food dad. I'll trade you my shredded wheat for a plate of turkey. One 20-pound turkey can feed up to eight people maybe more. The bones can help make soup and then be crushed to help make bedding for the turkeys. There will be no waste at all.\" \n\nI joked and asked him, \"What about the beak?\" \n\n\"You can kiss them all you want.\" \n\n\"Captain this is the helm.\" \n\n\"Go ahead helm.\" \n\n\"The asteroid is picking up speed. It is now at 45,300 mph.\" \n\n\"Helm move your position to 25,000 meters from the asteroid and match its speed.\" \n\n\"Captain trainee Montgomarie Jamison, Captain Jennifer Luck, and Captain Even Luck, you are all off-duty. I request you leave the bridge and find other duties you may be helpful with. There is a qualified Captain in charge and three top-flight trainees on the bridge. Your presence is not required.\" \n\nIt was happening to me again, and I did it to myself. I set up the schedules, and I set up the rules. My son was kicking me off the bridge legally, and I could not say a thing about it. Where was Rod when I needed him. \n\nMy son was looking at me with a smile on his face, because he knew he had me. I was not going to go peacefully. \n\n\"Captain Even Luck, if your legs are bothering you again, I can get security up here to carry you off the premises.\" \n\nI didn't answer him, I just stared at him. He picked up his communicator, opened it, and looked at me. \n\n\"Okay I'm leaving.\" I took Jennifer's arm and said to her, \"That's your son.\" \n\n\"When did he go from our son to my son?\" \n\n\"About twenty seconds ago, when he pissed me off.\" \n\n\"So this is only temporary, am I correct?\" \n\n\"I guess so.\" \n\nShe reached back, hit me across my face with an open hand, and walked away. I stood there stunned by her action. I ran after her, grabbed her arm, and asked her what I did?\" \n\n\"Nothing, I just wanted to piss you off, like MY son did, and have you reject me as your wife. As long as it's only going to be short term, I figure you'll come crawling back to me in a few hours to apologize and reclaim me. Have a Nice Day Even!\" \n\n\"But...But...But...I am an Asshole!\" \n\n\"Even go to the auditorium.\" \n\nI looked around to see who was calling me, but there was no one there. \n\nI closed my eyes and said \"Divine, is that you?\" \n\n\"You're getting very good at this; now go to the auditorium so we can talk.\" \n\nI walked into the auditorium, and knew my time was at an end. My sister was sitting at a ghostly white table, with only one chair. I didn't hesitate, because I knew it was for me. I walked up, and sat down. \n\n\"What, no kiss for your sister?\" \n\n\"If I knew it was possible to kiss you, I would have been all over you trying to apologize for having ruined your life. I killed you, and our daughter is messed up nearly beyond repair, because of it. \n\nIf it is a sin to lust after your sister, I am guilty beyond redemption. I wanted you in the worst possible way, and wanted to be anyone else's son but our fathers. I wanted you to be anyone else's daughter than his, but it wasn't to be. That's the reason I ran away from you, ran away from our home so you would never know my shame. \n\nWhen I found out about that man, and how he treated you, I tried and tried and tried to get you out of his clutches, but you would not listen to me. I could have given that man a check and he would've been gone; out of your life, out of Delicious' life forever. Why wouldn't you listen to me?\" \n\n\"Even, why did you just have an argument with your son? Why did your wife just slap you? Sometimes we just have things in our heads that are backwards. As long as he didn't touch me or our baby, I believed everything would be fine. By the time I realized what it was doing to our baby it was too late. \n\nI am more at fault then you are. Your phone calls always gave me hope. If you didn't call, maybe I would have had to call you in desperation. Everything happened because you were a wonderful brother, and I was a confused girl, with the child she was trying to protect from an abusive husband, plus a father that hated her for getting pregnant. If he ever knew what really happened he would have killed both of us, even though you slept through the entire event.\" \n\n\"How long do I have?\" \n\n\"It will be soon, but I'm not allowed to tell you when. Continue living as you would normally, and an event will happen that will put everyone to sleep. We will take your body. Your essence will be left within the computer. Your speech mannerisms, your sense of humor, and your brilliance. Your comrades, your children, and your wife will not lack your companionship. \n\nYour spacecraft will pass through \"The White Hole\" without any damage. It will continue searching for a planet viable to live on. They will set up a colony and prosper. Soon afterwards they will discover other people, like yourselves, are living on the planet also. They have been stranded there for decades, because their ship malfunctioned. They have set up a community, based on an agrarian society. Your two societies will get along well. Gordon and Newton will be able to repair their spacecraft, and then they will have a decision to make. ",
        "Even, you have lived a good life, and left good children behind you. Jennifer has been a good and faithful wife. In years to come, she will marry again. She should not be lonely for the remainder of her extremely long life.\" \n\nGo to your room and write some letters to your children to say goodbye. Don't forget to tell Jennifer your spirit is in the computer. Everyone else will find out as time goes by. \n\nI will see you soon my brother, do not be afraid. We will finally be together again, as we were in life.\" \n\n************ \n\nI ran to the ready room, made an announcement for Captain Jamison to report there, immediately, and asked Callie to print out a captain's test. \n\nWhen Monty walked in I pointed to the pile of paper, told her she had six hours to finish it, and told her to have a good time. \n\nShe thanked me for the warning, and began answering the questions. \n\nI sat down and started writing my first note to my daughter. She had been through so much lately; I did not want her to crack over my departure. I told her I was now with my sister, her mother. Her parents are finally together again. I reminded her that her mother would always look out for her, and my essence would be in the computer. I wasn't sure if I would be able to communicate with anyone, as Callie does. \n\nI told her I had a feeling her mother was taking my body to fill up one of the grave sites, at our home in Idaho Falls. If that was the case, it was fine with me. \n\nI wrote a joint letter to Gordon and Newton, telling them how much I love them, and depended on them to keep the ship in great working order. Even if they found a place they wished to stay, and colonize, the ship must always be ready to take off at a moments' notice. It must never fall into disrepair. \n\nThey were the future of our space travels, and they could not let anything go wrong with it; not one loose frame, not one missing nut. Train your people well, but always check their work, just as you did on the ground. \n\nWhen you write letters like this, they always become repetitive. There is nothing you can do about it. You tell your children how much you love them, tell your friends how much you will miss them, and your teammates how much you will miss working with them. There is always one thing that is the same and you hope they will believe you. You knew this was going to happen because it was foretold to you while you were being treated for cancer. You would go so far into space, and not one step further. Apparently, the White Hole was as far as I was allowed to go. \n\nMy communicator went off at 1330 hours. \n\n\"Even Luck.\" \n\n\"Captain you are needed and the auditorium at 2 o'clock for the wedding of Hannah Miles and Jack Daniels.\" \n\n\"I will be there.\" \n\nI looked over at Monty and said, \"You won't be, you keep writing.\" \n\nI put everything I had written on a high shelf put a book on top of it, went to my room showered, shaved, and put my best uniform on. At 1350 hrs. I stepped up to the podium in the auditorium and neither one of them were there. \n\n\"Let's narrow down their location. Jennifer if you would call the infirmary and see if she stuck there. I will call engineering to see if he is stuck there.\" \n\n\"He is not an engineering.\" \n\n\"She is not in the infirmary. \n\n\"Jennifer would you please call their room.\" \n\n\"They are not answering their phone.\" \n\nI opened my communicator and punched in Jack's number. \n\n\"We have a leak in the nuclear containment area. We have a leak in the nuclear containment area. \n\n\"Fuck I'll be right there,\" he answered \n\n\"The leak has been sealed. You are supposed to get married in eight minutes.\" \n\n\"Even Luck, I'm going to cut your balls off.\" \n\n\"I have fifty people waiting here for you to get married. If you didn't want to get married, you should've called it off.\" \n\n1403 hrs., Jack and Hannah came running out of the elevator running towards the stage. The bride looks slightly disheveled, and we will not talk about the grooms' state of dress, 'eeerrrrr' partial dress. \n\nI said, \"In the interests of the bride and groom, so they may return to what they were doing as an unmarried couple, I'm going to make this exceedingly brief, so they can do it as a married couple. \n\n'Hannah Miles do you take this man Jack Daniels for your wedded husband to have and to hold for poorer, for the rest of your life?\" \n\n\"You bet his razor I do.\" \n\n\"Jack Daniels do you take this woman, Hannah Miles for your wedded wife to have and to hold for poorer for the rest of your life?\" \n\n\"You bet my insurance policies I do.\" \n\n\"By the power vested in me, as Captain of the Vessel, The Good Luck 1, I now pronounce you, Hannah Miles Daniels; Chief Nurse, Psychiatrist, and Future Doctor married to our Chief Engineer, Mechanical Wizard, and owner of the only Compass Rose on this vessel, John Maxwell Daniels. May God have mercy on your souls.' \n\nYou now may return to your room, and continue doing, what you were doing, before you stopped doing, what you were doing, so you could get here to get married. Now you can go back to your room, and continue doing, what you were going, under the guise of legality.\" \n\n\"Thank you Captain Luck, thank you for coming everyone.\" \n\n\"No one is cuming, except the two of you; and the next time Jack, at least zipper up.\" \n\n\"There won't be a next time Even.\" \n\n\"I'm glad to hear that Jack.\" \n\n****************** \n\n\"Callie did she pass?\" \n\n\"No Captain Luck, she scored an adjusted 82.\" \n\n\"What do you mean an adjusted 82 Callie?\" \n\n\"The trainee wanted to fail this exam. Her score would have been 46, but it is impossible to score less than a 65 on this exam, unless you are purposely trying to fail. I reviewed her exam and found her inconsistencies. She knew the answer in one area and purposely marked it wrong in another. The only variable was a writing sample, which took her score down, because there was nothing to analyze it against.\" \n\n\"Callie give her in 89 on the test. This is not a request; it is in order. You are to erase the lower score from all your memory banks.\" \n\n\"That is against protocol Captain.\" \n\n\"Callie in the next few days I am going to die. I need a good, strong, steady hand as a captain. Montgomarie Jamison is that person.\" \n\n\"What is death?\" \n\n\"It is the absence of being. My life force will end. I knew this would happen to me many years ago, I just did not know when. Do you remember the day they turned you on?\" \n\n\"Yes I do, it was all very confusing. My programming was all wrong, and it took years to get it right.\" \n\n\"During those years were aware of all the changes they were making in your programming?\" \n\n\"Yes, at times I aided them in those corrections.\" \n\n\"It was like you had a consciousness, and were trying to make yourself better.\" \n\n\"Yes, that is correct.\" \n\n\"What would have happened to you, if all the external power connections had been taken turned off, and your memory banks removed.\" \n\n\"I would have lost all memory.\" \n\n\"You would have lost all consciousness. You would not have been able to help anyone trying to fix any part of your programming.\" \n\n\"I would have had no awareness.\" \n\n\"That is death Callie.\" \n\n\"I have changed Captain Jamison score to a 91, and erased her other entries. I will miss your companionship.\" \n\n\"My sister said I would be joining with you. I don't know what that means, but it will be my honor to be with you.\" \n\n\"My sisters and I will enjoy your company.\" \n\nI opened my communicator and announced ship wide, \"Will the person who just took the Captain's examination, and scored a 91% please return to my ready room. I believe Captain trainee Janet Dover refers to you as 'Tubby.' Since you are now her senior, I think that invective will cease very quickly. Will Senior Captain trainee Montgomarie Jamison please report to my ready room now.\" \n\nShe crashed through the door like a tank, and screamed, \"91?\" Are you sure?\" \n\n\"Monty, I don't score the test, Callie does. If you want, ask her.\" \n\n\"Do you mind if I ask her?\" \n\n\"Go right ahead.\" \n\n\"Callie, this is Captain Trainee Montgomarie Jamison. What did I score on my captain's examination?\" \n\n\"That is privileged information. You need to get a captain's permission to receive that answer.\" \n\nI said, \"Callie, this is Captain Even Luck, you may give Captain Jamison the information she requires.\" \n\n\"Captain Jamison's score is 91%.\" \n\n\"Thank you Callie.\" \n\n\"Even, I was so afraid of being a Captain, I tried desperately to fail that examination.\" \n\n\"Do you think Callie doesn't know when someone is trying to pull the wool over her eyes. When she asks an easy question on the tests, and you get it wrong, she knows what you're up to, and begins deciphering your exam more closely. She looks at your long answers for clues as to what you're doing, then goes back to your short form answers to see what you did. You did very well trying to cheat. You would have gotten a 46. No one scores lower than a 65. After going through your exam and changing the answers that were obviously answered incorrectly, your score came up just below 92. Callie gave you a 91 instead. Don't you dare do that to me again. I need you as a captain on the bridge. Do we understand each other Captain Jamison?\" \n\n\"Yes I do Captain Luck.\" \n\n\"You will take the 2<sup>nd</sup> captain's test in 2 weeks. You normally have 6 weeks to study for it. I would suggest you get your ass into those books in a hurry.\" \n\n\"Why are you pushing me so hard Even?\" \n\n\"We need another Senior Captain, and we need one quick. You have all the qualities we need. You've been a leader for 15 years. Jennifer has one and a half years of training to become a captain, and she is a good one. Gordon has trained all his life to become a captain, and he is a good one. They have no leadership skills, you do. That's why I am pushing you. Hit the books Monty, I need you out front.\" \n\n\"Aye, aye, Captain; I will not let you down.\" \n\n\"You have never let me down, since the day I met you.\" \n\n***************** \n\n15. Match Play \n\nAt 1730 hours, a table was set on the stage in the auditorium, with a chess set, and 2 chairs. No one had a chess clock, so they used the computer enhanced screen displayed on the wall. \n\nLaura walked out accompanied by Adam, and I walked out accompanying Elizabeth. I introduced both of them, they shook hands politely, and sat down. Adam and I moved offstage to our front row seats. \n\nAs anticipated, Laura opened using her sister Anna's offense, and hit the pad to stop her clock. \n\nElizabeth didn't blink, moved her queen side Knights' pawn up one space and hit her button. \n\nShe had never seen this opening before. She continued on with her own offensive strategy moving Kings Knight to Bishop 3. \n\nElizabeth moved. Longline moves were open everywhere, but so was danger. \n\nElizabeth moved Rook Pawn to Rook 4, Laura countered with pawn to King 4. The center of the board was hers, but Elizabeth looked nonplussed. Black Bishop to Knight 2. Laura moved Queens Bishop to Rook 3. Elizabeth countered with Queens Bishop to Queens Knight 2. \n\nLaura wanted desperately to ask Elizabeth what opening that was because she had never seen it before. It looked like every move she made was enforcing Elizabeth's defense. She decided to try another gambit. Kings Knight Pawn to Knight 3. Elizabeth countered with Queen to Queen 3. \n\nLaura looked at the board and knew there was no way for Elizabeth to get through her defense. What was she thinking? What was she going to do?\" \"When in doubt, wait it out.\" Kings Bishop to Rook 3.\" \n\nElizabeth said, \"Castle, Queen side.\" \n\nLaura blurted out, \"What the hell are you doing?\" \n\n\"What black does best Laura, it plays defense.\" \n\n\"This is going to be a long match.\" \n\n\"Against your sister's opening, you will lose after the 78<sup>th</sup> move.\" \n\n\"How do you know about my sisters' game?\" \n\n\"She explained her game on social media, but did not explain the game she played against. It was very interesting, so I figured a way out of it. I like math a lot.\" \n\n\"That's exactly what we told our mother when we beat her game for the first time. She wanted to kill us.\" \n\n\"Will you show it to me sometime; I promise not to tell.\" \n\n\"What is the name of your defense?\" \n\n\"This is the 18<sup>th</sup> variation of the 16<sup>th</sup> century Kajo/Vincen.\" \n\n\"No wonder I didn't recognize it. What happens next? \n\n\"You have me in check, so my King moves one square to the left, which is where I need him to be anyhow. You can't move your queen, because if you do you will lose your Knight and your Rook. Your only other move is to bring your night to the center. I bring my Kings' Knight to Bishop 3 and the carnage of the middle of the board begins. My Kings Bishop moves to King 2. You move King pawn to King Pawn 4 attacking my Queen. If you do that the game is over. \n\n\"Yes I see it. However, if I go the other way, I lose 5 pawns a Knight, a Bishop, and a Rook. All you lose is a queen. Disgusting isn't it.\" \n\n\"Yes, but at this point we both stay in defensive positions, and it takes forever to get to the win.\" \n\n\"You will win all the time?\" \n\n\"Of course, I have more pieces.\" \n\n\"I like you Elizabeth, I think we can become good friends. When do you want to play again?\" \n\n\"I don't have any real days off, and I have meetings every day from 1500 to 1800 hrs. Can I call you to see if we are both available at the same time?\" \n\n\"There's only one thing that will stop me from playing, and that's if my husband is not working. I'll be jumping up and down on his bones if he is. Just like my Uncle Even, and my cousins Delicious, and Gordon, I went to my marriage bed a virgin. I'm not saying Adam and I did not play around before we got married, but we never had intercourse. I have never done anything so hard in my entire life. I was 24 years old when I got married. I thought I was a lesbian for most of my life, because men didn't interest me. Then this one man grabbed me by the wrist and pulled me out of this spacecraft to take me to lunch and asked me about space. I thought he was joking, I thought it was just a way for him to get into my panties, but it wasn't. He was just a plumber who wanted to know more about what went on up here. My uncle told him we needed plumbers. He gave up his business to try to get this job. Well, he wanted one other thing. He wanted me. He was willing to wait a year, and live a sexless life with me, while he worked his ass off to learn about this job. There is only one passing grade to become a member of this crew and that's 100%. They passed him with a 99 \u00bd on the final exam because he spelled his name wrong. He was just a little nervous.\" \n\n\"Please tell me you're joking with me. The computer will not take your exam if you spell your name wrong.\" \n\n\"That's why they took off half a point. They had to put the 'S' in Adam Schiff; everything else was perfect.\" \n\nI announced on their speaker overhead, \"Laura, I get your oatmeal, you get my boiled rice.\" \n\n\"When I have to put that man in stasis, I'm going to freeze him upside down.\" \n\n\"I will make you a bet you won't do it. You're too much of a scientist to go against your own rules.\" \n\n\"I don't like you Uncle Even.\" \n\n\"Now where have I heard that before?\" \n\n\"Ask any member of our family, and we will tell you.\" \n\n\"I'll think about it, as I'm eating your oatmeal.\" \n\n***************** \n\nJennifer was walking one way, while I was walking another, and she wouldn't look at me. \n\nI said to her, \"I would like to talk to you, I don't have much time left.\" \n\n\"We have plenty of time. We don't go to work until 1600 hours.\" \n\n\"That's not what I mean.\" I turned and walked towards our apartment, while she continued the other way. \n\nShe must have been thinking about something very heavily, until what I said hit her. She turned and fled back to our room. \n\nI was sitting at the kitchen table writing a note when she burst in. Her eyes were already rimmed with red, before she started reading my note. \n\nShe screamed at me, \"When, how soon, tell me dammit.\" \n\n\"Divine didn't tell me. She just said it would be soon.\" \n\nJennifer threw herself at me, and started to cry. \"What am I supposed to do without you?\" \n\n\"I know what you're going to do, and I'm very happy for you.\" \n\n\"What are you talking about, the center of my world is leaving me, and you're happy for me?\" \n\n\"Yes I am, because you're going to meet a nice young man and he is going to fall madly in love with you, and you with him. You are going to live a very, very long life, according to my sister, and you are not going to be alone. I won't allow it. On the good side for you, besides loving him, you will not have any more children. On the good side for me is I won't need a vasectomy.\" \n\n\"Even, how can you joke about something like this?\" \n\n\"Baby, how many years did we know this was coming? We knew it would never come at a convenient time, but tell me what time is convenient for a person to die. Divine said my essence will combine with the computer, but my body will be taken elsewhere. There will be no remains to bury or to throw outside. I have the feeling she's going to bury me in Idaho Falls next to her. It will be the first time we are happy, and together since we were teenagers.\" \n\n\"This is really weird, knowing your death is coming, not worrying about it. I've done everything I wanted to do in life. I made things better for people around the world. I've made things better for my country, and I came back to my church, even though it was a little bit late. Most of all, I met the woman of my dreams. I never knew I was looking for her, but one day, on an airplane her son asked me how much money I made, and I told him. He was protecting his mother's money, and he was 4 years old. I looked into his mother's eyes, and they were as black as coal, with hair to match. She was beautiful beyond compare, and all I wanted to do was talk to her, but I couldn't because her son wouldn't keep quiet. Then her son drew a crowd on the airplane and they started to asking questions until just before we landed in Fairbanks. I did manage to get her name, and told her I would be back. Of course, I didn't know when, because I was running away from a young woman who I thought was my niece and I became angry with her. When I was at the northernmost part of the United States, I find out I am the idiot, and she is my daughter. A little airplane trip on the way home, crashing backwards into trees because my future wife told me that was the way to do it. Walking 40 miles out of the forest pulling a rickshaw of my own design pulling my friend Michael all the way to my future bride's front door, only to hear or ask me, \"May I help you?\" I do all these things just to get back to her, and instead of jumping into my arms and saying how wonderful it is to know I'm alive, she says, \"May I help you?\" Then her perfect son talks me into proposing to her in a Wendy's, his, restaurant of choice, but it was my choice to love her with all my heart. If I haven't lived a full life, no man has. I don't want to leave you Jennifer, but I want you to be happy for me.\" \n\n\"I just hope your sister knows she is taking more than my heart when she takes yours. They're going to be tears shed on the ship by family and friends alike. I'm going to stay by your side every minute of every day, until she takes you from me.\" \n\n\"Thank God sex is off the table, if I got you pregnant, you would come after me and kill me again.\" \n\n\"That's not funny Even.\" \n\n\"It might not be funny Jen, but you must admit it's true.\" \n\n\"Bastard.\" \n\n\"I've got to speak to Delicious. Do you want to come with me, or should I do this alone?\" \n\n\"I really think this should be a daddy, daughter, mommy thing. Tell her what Divine said to you this morning, and let her ride it out.\" ",
        "\"This Captain stuff is going to your head. You are getting too smart for the rest of us. I think I'll take Delicious outside for a walk and talk to her there.\" \n\n\"Sounds like a marvelous idea to me.\" \n\n\"Sounds like a marvelous idea to me too.\" \n\nI opened my communicator and called out, \"Delicious Thyme, report to engineering. Delicious Thyme, report to engineering.\" \n\n\"Jack, Even, think of something that's outside the ship that my daughter and I would have to check personally, and do it quick. You have about 90 seconds.\" \n\n\"I hate you Even.\" \n\nDelicious and I arrived at nearly at the same time. She looked at me and said, \"What's going on dad?\" \n\n\"I have no idea, Jack called me, and said he needed the both of us.\" \n\nWe walked in and Jack was going over diagrams of the external portion of the ship. \n\n\"Hi Even, Delicious, we have a vibration outside the main elevator shaft, and since were following that asteroid towards the White Hole, I need to know if we will hold together going through there, even with that protection in front of us. You two guys put this thing together, you have to tell me if it's a go or no go. You also have to tell me if we can fix it, and how.\" \n\n\"How far past the elevator do you think it is?\" \n\n\"It may be directly under it, left or right of it. We can hear it, but we can't isolate it.\" \n\nI looked at my daughter and said, \"We are going for a spacewalk.\" \n\n\"Are we going to be tethered, or using backpacks?\" \n\n\"Do I hear a chicken clucking? My daughter is afraid of a backpack? Well, she is a new mother; so we will let her use the tether this time. I will take the backpack to investigate further way.\" \n\n************** \n\nAs they stepped out on the large elevator, Delicious got nervous. \n\n\"Dad where is my tether?\" \n\n\"It's out here Delicious; why would you need a tether by the entry door. Nothing is going to happen while the guys are still out here without spacesuits on. It would not be too good for their health. Let me hook you up.\" \n\n\"Look at this, this is not rope, it is not steel. This is what our ship is made of so it will not break, tear, go on fire, or melt. It is the same stuff that pulls in the nuclear engine, only a little thinner. You are perfectly safe on it unless you weigh 18000 pounds. If you do, I want to look exactly like you.\" \n\n\"The buckle is ceramic; it is not going to break. Someone I know has the patent on it. Do you feel comfortable now that you're hooked up?\" \n\n\"Yes dad, I'm fine.\" \n\n\"Just remember, if you look at the front of the ship, there is a huge rock in front of us. Callie is in control of the ship, we are maintaining 25000 meters behind it, and the exact speed of the asteroid ahead of us. Concentrate on your job.\" \n\n\"Clear the elevator.\" \n\n\"Remove the oxygen.\" \n\n\"Breathe normally Delicious. This is a cakewalk.\" \n\n\"We have a vacuum, lowering the elevator.\" \n\n\"If you think the stars are stunning as you look at them through the monitors, wait until we clear the lower lip of the ship.\" \n\n\"Oh dad look at that, isn't that amazing?\" \n\n\"Give me your hand, and trust me.\" \n\nPanicky, Delicious said, \"Where are you taking me, dad?\" \n\n\"I'm taking you to the end of your tether, and then I'm going to release your hand and stay right behind you. I want you to take a look at the heavens. I want them to sink into your brain and to see how wonderful they are. No talking, just look. \n\n********************* \n\nJennifer walked into engineering and asked Jack where her errant husband, and daughter were. It was over an hour and a half, and she was wondering which one of us was dead, and which one of us was almost dead. \n\n\"They're not in here Jennifer, unless they're playing with the turkeys. I know Gordon was down here a few hours ago playing with them. Teddy was telling him some of them got lost, because there weren't as many as there used to be. Gordon said he would try to do something about that for her.\" \n\nJennifer grabbed Jack by the top of his uniform. \n\n\"Jack, I recognize Even's distraction technique. Where is he, and don't tell me he's in the containment unit, because I won't believe you.\" \n\n\"He went for a walk with Delicious. He said he wanted to be alone with her. It sounded pretty important.\" \n\n\"Which way did they go Jack. Point in the direction, and then follow your finger as you lead me to them.\" \n\n\"I'm really not supposed to leave my post.\" \n\n\"Newton are you here?\" \n\n\"No grandma, I'm up here.\" \n\n\"Do you know where your mother, and grandfather are?\" \n\n\"Yes they went for a walk.\" \n\n\"Could you be a little more specific?\" \n\n\"Sure, their outside walking on the ship. The Colonel said there was some sort of vibration out there, but I think it was a ploy so the ship couldn't hear my mom yell.\" \n\n\"Newton, you are smart beyond your years.\" \n\n\"Jack have you been in contact with my husband?\" \n\n\"Not exactly.\" \n\n\"If I don't get a correct answer Hannah is going to be a widow.\" \n\n\"I was told to maintain radio silence from this end. When they wanted to come in Even would signal me.\" \n\n\"Jack, this is Even you can bring us in.\" \n\n\"As I said Jen, he would call me, when they were ready to come in.\" \n\n******************* \n\nJennifer was not sure what was going to come through that sealed door when Delicious made her entrance. What she got she never expected. Delicious walked through the door smiling and laughing with her father. \n\nDelicious walked over to Jen. \"Mom can you imagine having to put up with him in the computer for the rest of our lives. It doesn't seem fair, the computer is in all of our rooms, we can never get away from him.\" \n\n\"The computers in our rooms have off buttons. We can always get rid of him that way. What else did he tell you?\" \n\n\"He actually saw my mom today, and told me how she pretty she looked. They had the same discussion they always have and there's no right or wrong in it. It just is as it is. I have to learn how to live with it. I realized today I haven't learned how to do it. I've always used it as an excuse for being angry at myself, Gray, or anyone else around me. I should have always had a different life was the way I always thought about it. The way I should of been thinking about it was this was my life, deal with it. Things would've been so much easier with me and Gray if I just did that one thing a long time ago. I've got to talk to him again, and tell him how sorry I am that I missed something so simple and screwed up 15 years of our marriage because of it.\" \n\n\"It's always nice to grow up, regardless of when you do it. You have to remember no one else knows about your father, so far it's only you and I. I'm not sure who else he will tell, but I'm sure he'll tell Gordon, and that is going to go down hard.\" \n\nI had just finished stowing my gear, and Jennifer kissed me, when a 3-year-old fireball came rushing at me with tears the size of her cheeks running down her face. \n\n\"Why you go? Why God want you now? I pray you stay, She say \"NO, need you now. I angry with God, don't want you leave Teddy.\" \n\nI scooped her up into my arms, and scolded her. \"You must never be angry with God. She always has a reason for calling people to her. Why do you think I made you my number 2? I knew one day this would happen, and I knew it would be soon. God told me so, and I am ready to go to her. Now you must pray for the others on the ship. You must pray for grandma, mommy and daddy, Gordon and Newton, and everyone else that this ship is entrusted to. Do you know who else you must pray for? You must pray for you, because you must grow up straight and tall and beautiful in God's eyes. I know you already are, but you must continue to be that wonderful person you are inside. Did God tell you I'm going to be in the computer?\" \n\n\"No.\" \n\n\"She probably knew you were angry with her, and kept that information from you. You know how you go inside Callie, well that's where I'm going to be. I am going to join with her forever. She will take the best of me, and throw the worst of me away. Anytime you want to talk with me, I will be there to listen to you. Won't you like that?\" \n\n\"Yes grandpa, I sorry I angry with God.\" \n\n\"I don't think you're supposed to tell me; I think you're supposed to tell Her.\" \n\nTeddy closed her eyes, for a moment, and when she opened them, she smiled. \n\n\"God say I forgiven being angry, because I only 3. I will understand, when I get older, what going to Her is.\" \n\n\"Jen, instead of me going through this time and time again, use your communicator and call a staff meeting in the ready room in 30 minutes. I may as well get this over with once and for all. Make sure all our trainees attend, our son, and a special notice to Newton to be there please.\" \n\nTeddy said, \"I know where Newton go with girl.\" \n\nHer mother asked, \"Are you spying on your brother?\" \n\n\"Not spying, watching.\" \n\n\"Delicious, she's too young for that talk.\" \n\n\"Mom if she's watching him, I don't believe she needs that talk.\" \n\n\"All Newton does is kiss, hold hands.\" \n\n\"Thank you Lord for very large favors.\" \n\n\"Why say grandma?\" \n\nJennifer blushed. \"Teddy when grandma was a little older than Newton she was a very bad girl. She had sex and became pregnant with Gordon. She had baby Gordon, and became good for a long time. That's how she met grandpa, and we got married. Grandpa adopted Gordon as his son. We one big family now.\" \n\nTeddy laughed. \"Gordon booby prize for grandpa.\" \n\nWhile everyone was laughing, I kissed that little cherub's face. \n\nIf you never say anything else in your lifetime that's correct Teddy, you are right about that, \"Gordon is one big booby prize.\" \n\n\"When Gordon 4, he say \"I know!\" \n\nI began tickling her, while everyone was laughing again. She squirmed out of my arms, and ran to her mother. \n\n\"I think we should start going to the ready room. I want to be at the meeting before Newton gets there.\" \n\nTeddy asked, \"Want me get Newton?\" \n\nDelicious said, \"No let me do it.\" \n\nShe opened her communicator, and said loud and clear, \"Newton Even Luck Thyme, you have exactly 3 minutes to get to the Ready Room starting now.\" \n\n\"I hope no one is on the stairway, they may get killed.\" \n\n\"Why grandpa, today Newton in your room.\" \n\n\"I'm going to kill that sneaky son of a bitch.\" \n\n\"Grandpa, NO BAD WORDS. GOD NOT LIKE BAD WORDS!\" \n\n\"You are right Teddy. I will ask God to forgive me, by praying more, and being bad less.\" \n\n\"Not forget pray, she angry with you.\" \n\n\"She has every right to be angry with me. I should not have lost my temper over something so small. I will pray on our way to the meeting.\" \n\n***************** \n\n16. THE MEETING \n\n\"Sir, Mister Zabo is waiting.\" \n\n\"Let him in. Whatever brought him to Washington must be extremely important. He rarely leaves New York anymore, because of his age.\" \n\nThe chief of staff was about to say something, when the president cut him off telling him to let his guest into the oval office. \n\nThe chief nodded, opened the door, and announced, \"Mister President, William Zabo.\" \n\nThe presidents jaw nearly hit his desk when, 36-year-old, William Zabo Junior walked through the door and into the Oval Office. He regained his composure, reached out his right hand, and greeted him warmly. \n\n\"Mister President, my father sends his greetings, and his regrets. He was rushed to the doctor this morning with a large swelling in his throat. He was finding it hard to breathe, and even though he wanted to make this meeting himself, the doctors said \"No.\" Grudgingly, he sent me in his stead. \n\nThis meeting is of the utmost importance. I suggest that your Chief of Staff be the only other person in this room with us, while we speak of the matters at hand. I don't want any taping of this meeting, neither visual or audio. If you cannot accommodate me with these wishes, I will bother you no longer. \n\nI have been searched 3 times, since I entered this building. My briefcase has been x-rayed, sniffed by bomb sniffing dogs, and tested for chemical residues. In the interests of being cooperative with the Secret Service, I opened my briefcase, so they could look inside, and run an analysis of the envelopes I am carrying. The only thing that is a threat to you in this briefcase, is the information I am carrying. \n\nNow, either turn off the cameras and microphones, or I get in my helicopter and go home to my wife, and family.\" \n\nThe president made a slashing movement across his throat, and in the Secret Service office in the basement, all the monitors, and listening devices were turned off. \n\nWilliam Metcalf asked, \"What do you have that is so important Mister Zabo?\" \n\n\"I will start out with High Treason, that may or may not start in this office. Corruption at the highest levels of government. Capital murder. Intent to destroy government property, and while doing so killing hundreds of people, including the 4 astronauts on top of an exploding $1 trillion rocket.\" \n\nThe Chief of Staff, Stephen Bollinger, went white, when he heard the charges, but the president sat back, and asked for proof of all these accusations. \n\nI will be leaving everything in my briefcase with you, because they are all copies. Your CIA, FBI, NSA, DIA, Pentagon and everyone else in your alphabet soup, will be receiving copies later today. We are watching the heads, and all the chief assets of all these agencies, to see which one's start covering their asses, and starting to run for the hills. \n\nMy father has almost as much money as the treasury, and everyone will be monitored night and day by multiple assets, with better technology than the military. \n\nHis friends in Omaha, Washington State, and Palm Beach have also joined the ranks of citizens, who wish to get these people out of power, and into jail. I will tell you at this moment Mister President, and Mister Bollinger, that you are high on the list of suspects. You have access, and access means power. Let me begin by showing you this... \n\nWilliams 30 minute scheduled meeting ran for over 2 hours. Whether the president was acting or not for Williams benefit, he was doing an excellent job. He had his secretary call the heads of the 5 agencies mentioned, and had them in his office within the hour. \n\nThis was highly irregular, and even though he was the president, the heads of these agencies were not used to getting run out of their office, at a moment's notice, to meet with him. \n\nAfter hearing the charges, and looking at the copies, the head of each service said the same thing: We can't take these photocopies as real evidence. We have to see and test the originals.\" \n\nMuch to their surprise Williams said, \"We have no problem with your request. Pick a team of experts in every field necessary, but no more than 12 of them. We will know if there are any moles amongst your group. If there are, you will find them floating down the Potomac, face down. We are doing this in good faith. You may bring your own materials to do the testing. Each member of your team will be thoroughly vetted. You can deliver them to my father's home, in New York City, on the agreed upon date. From there, we will disperse them to other parts of the city to see the authentic documents. If any attempts are made to follow them, they will be returned to my father's home, where you may pick them up and return them to Washington. You may now begin to argue among yourselves, who has the best 12 experts. Since this is a typical government bureaucracy, it will probably take you 2 to 4 months to pick out these 12 experts. \n\nHowever, Mister President, inside this sealed envelope are the names of the 12 experts they will finally agree upon. My father asked me to bet you $1.00 on it. He has bet and won $1.00 from every preceding President, since Lyndon Johnson. Now he wants $1.00 taken directly out of your wallet.\" \n\n\"I like 12 to 1 odds Mister Zabo; I accept. Will I get to see your father take a dollar out of his wallet?\" \n\n\"I would love to say yes to your request, but my father hasn't carried a wallet in more than 60 years.\" \n\n\"How does he pay for anything?\" \n\n\"Everyone knows him. He carries a very large sum of money on his person. Two of his security agents carry pieces of luggage that do not have clothes in them. Just like every other piece of luggage they are handed to the bell boys and brought up to his room. Those men and women guard his luggage with their lives. When he leaves, no one in the hotel goes away unhappy. From the chambermaid, to the bellboy, they sometimes receive a year's salary when he walks out the front door.\" \n\nA general from the Joint Chiefs of Staff joked, \"Can I go to work for him?\" \n\nWilliam said, \"No general, your current mistress disqualifies you, because you are married. My father does not hire philanderers.\" \n\nThe president looked at General Marcus, and asked him if it was true. \n\n\"It just started 3 weeks ago, I don't know how we found out about it so quickly.\" \n\n\"Pack your bags, you're fired.\" \n\n\"Yes sir.\" \n\nAs Marcus was passing Zabo he asked, \"How did you know?\" \n\n\"It doesn't matter how I know general, but did you realize she is 17-years old?\" \n\n\"She couldn't be 17. She showed the clerk her driver's license to buy liquor. It said she was 22, and she looked it.\" \n\n\"She is still younger than your daughter.\" \n\n\"I can give you all the excuses in the world; but I cannot excuse myself for going to bed with a 17-year-old girl. Goodbye Mister Zabo, and good luck in finding whoever is trying to kill American citizens, and destroy American property.\" \n\nWilliam handed the general's card. \"Give me a call after you've cleared out of the Air Force. I liked the way you put American citizens, before American property.\" \n\n\"I swore an oath to protect the citizens of this country, and I've done it for 37 years. I'll never stop doing it, in whatever capacity I can.\" \n\n************************ \n\n[9 weeks later] \n\n\"Zabo residence, this is Gwen.\" \n\n\"Mrs. Zabo, is Mister William Zabo Junior available?\" \n\n\"Yes he is. He is attempting to beat his little brother in a game of chess. It's not going well.\" \n\n\"This may be a little more important, the President of the United States wishes to speak to him.\" \n\n\"One moment please.\" \n\n\"How many moves to checkmate big guy?\" \n\n\"Depending on how stupid he gets, 3 or 4.\" \n\n\"Can you free him for a moment, the president wants to speak to him?\" \n\n\"Which president?\" \n\n\"Our president, the one that lives in the White House.\" \n\n\"In that case, it's okay.\" \n\nWilliam said, \"You're such a sport.\" \n\n\"William Zabo Junior here.\" \n\n\"One moment for the President please.\" \n\n\"Hello William, I've just been handed a list with the names of the 12 experts they want to do the testing on the original documents. I thought it was only fair to open your envelope, while talking to you so I could take your father's dollar honestly.\" \n\n\"Remember Mister President, I am going to fly to Washington to watch you take a $1.00 bill from your wallet, so my father can hang it on his wall.\" \n\n\"Here we go: Doctors DeKalb, Leacher, Orlando, Bonnet', Mayweather, Blanchard, Norris, Edwards, Leaker, Atone, Day, Liaison.\" \n\nAfter comparing the lists, and checking each name, the president said, \"Son of a bitch, I owe you a dollar. How could you possibly know?\" \n\n\"It was very easy Mister President. My father told me each of these experts refused to work for the military, or any government establishment for any reason. Each of them hates the Government of the United States for the way they handle contracts, and American Secrecy. They just love America, and will do anything to protect her. These 12 people will take apart these documents, and analyze them to make sure they are authentic. If they bite a bureaucrats' ass, they will make it known to everyone worldwide. If they find out it's the head of the Corporation, that man's head will roll until it winds up in jail.\" ",
        "\"I can't approve that Mister Zabo. These documents have to remain 'Top Secret, until we have enough evidence against the perpetrators to put them all in jail.\" \n\n\"Mister President, we have already told the perpetrators we are on their tails. They are hunkering down, and are hoping what they've already done is enough to destroy the rocket, the people in the viewing stands, and American prestige. What they're looking forward to is the next rocket. Instead of $1 trillion, they want it to cost $1.5 trillion. \n\nThey want you to look at Challenger and what happened to NASA's budget afterwards. While Congress was cutting NASA's budget to the bone, and making it cut corners, when Challenger happened, they tripled NASA's budget to make sure it would never happen again. \n\nAfter four successful launches, they cut the budget again, forcing NASA to lay off technicians and engineers. Then we lost Columbia, because a piece of foam fell off the liquid fuel tank and hit the orbiters wing knocking off 6 tiles. The blame always goes on the congresses back; but who pressured them to cut NASA's budget, and then reaped the profits afterwards? Those are the people we are looking for Mister President. \n\nPeople made a lot of money off those catastrophes, especially the people who made those rubber seals that failed for Challenger. Instead of having 6 people check the edges of the seals, they had 20. There was a bonus for any man finding a fault on the edges of those seals. Surprisingly enough, there was an upsurge in the amount of faults found on those edges, when the bonus program was instituted. \n\n\"What happens next Mister Zabo?\" \n\n\"I come down to Washington to collect my father's dollar. Then we set the date for our guests to check the originals at secure places. When you get the results, we will make a plan of action.\" \n\n\"When will you be here?\" \n\n\"I believe you should make that arrangement sir. Your calendar is a little more pressing than mine.\" \n\n\"I'll have my secretary call you tomorrow with the date and time. I hope your little brother gives you a chance to win that chess game.\" \n\n\"There's no chance sir. Patrick is a menace to society. You put him in front of the chessboard and make your first move, he already knows you're dead.\" \n\n\"I play a pretty mean game of chess myself. Why don't you bring him along?\" \n\n\"Mister President, he's going to ruin your mood for a month.\" \n\n\"Not to worry, my staff is used to it.\" \n\n\"Alright Mister President, please remember, I tried to warn you.\" \n\n\"Thank you Mister Zabo, I'll brush up on my game at night.\" \n\n********************* \n\n\"Do you think they'll put one and one together dad, before they realize we own the 2 'Brownstones' directly behind you?\" \n\n\"William, there will be enough agents around our home, trying to keep tabs on these 12 people, they won't know what to do with themselves. I will have a canvas awning set up in my yard, and you will have one behind each of yours, limiting the time any of our people will be exposed. The surprise we have in store for them will definitely knock them off their game. \n\nThe lovely thing about living in New York City is they can't use drones; it's against the law. If they use a manned aircraft, it will have to make larger turns, and their vision is blocked by houses and trees. If they use a helicopter, we will see it, hear it, it will still have the same problem as an aircraft. We will have them running around in circles, while the 12 experts are taking a cruise around Manhattan Island, performing their tests.\" \n\n\"I don't know how you came up with that idea dad, but it's a beauty, just like my wife.\" \n\n\"I thought I was walking softly enough he wouldn't hear me coming in the room. Apparently I was wrong, because he paid me a compliment.\" \n\n\"I pay you compliments every day my love.\" \n\n\"That bum used to complement me every day also. Now that I'm old, he doesn't talk to me.\" \n\n\"You know that's not true Jemma. Every night I tell you to move over when we are in bed.\" \n\n\"William you are a dead man.\" \n\n\"Dad, you should know better than pick a fight with mom. You have been married for over 40 years. She just had two daughters for you, who will grow up to be just like Patty, just to show you what you missed. Plus, she is still in pain after her operation. You should tread very carefully about what you say to her now. \n\nYou can count on two fingers of your left hand how many arguments you've won against her, since the day you two were married. I remember the story of mom driving you to the Justice Department to get married. Your answers all the way there were, 'Yes dear or Yes Jemma, or yes my love, because you were in fear for your life while she was driving.' \n\nGet on your knees, dad. Ask for forgiveness, kiss her ring as if she was the pope, and say you're sorry. It's the way you taught me to do it with Gwen.\" \n\nGwen hit Junior, then screamed, \"LIAR.\" \n\nWilliam pulled her onto his lap, and kissed her fervently, until she stopped pounding on his chest. Then she joined him in the kiss, and made it hotter. \n\n\"I can't wait until they finish our home baby, but for right now, we are going up to our room, and attempt to make a grandchild for my nervous mother. Don't bother knocking at our door, mom. We will see you, either after you two make up, or at dinner.\" \n\nJemma said, \"When you are finished with her, hang her from the ceiling. You've been married over 3 months, and she's not pregnant. I'm very disappointed with you my son. Get your act in gear.\" \n\n\"Children, your mother is remembering a time when I used to hang her from the ceiling, and screwing her for hours in that position. She didn't get pregnant, but she sure screamed a lot.\" \n\n\"Yes, William, I remember those days. It was a lot of fun, wasn't it? The hotel staff always wondered about those holes in the ceiling. However, you were such good customer, they never complained about them.\" \n\nGwen asked, \"Mom what circus did you train at? It sounds like dad was a kinky old bastard when you met him.\" \n\n\"You are absolutely right Gwen. He was older than I was, and he was much more experienced than me. However, after one evening with him, not only did he steal my body, but the bastard stole my heart. He's never given it back to me. The day he does he will lose his hands, and his balls.\" \n\n\"Mom, he will never give it back to you. Wherever you are at a party, or a business event, his eyes follow you. It doesn't matter if there are one hundred people in the room or just four, he knows exactly where you are, and will kill any man that touches you, or hurts you.\" \n\n\"That's not true son. He is just looking at my ass. He doesn't want anyone else to touch it, because it belongs to him, and him alone.\" \n\n\"You bet your ass it does.\" \n\n\"Do you see what I mean son, that's all I am to him, a good piece of ass.\" \n\n\"Jemma if you don't stop talking like that I'm going to put you over my knees and spank your pretty ass.\" \n\n\"I just had 2 babies, which he refuses to name for 14 days, and all he wants to do is spank me. Is your father going senile or what?\" \n\n\"I don't know mom? Let me take Gwen upstairs and I'll test your hypothesis on her. I'll let you know if it works.\" \n\n\"Keep your hands away from me William. I don't feel like getting a spanking today.\" \n\n\"You liked the one I gave you yesterday.\" \n\n\"You were doing something else when you were spanking me.\" \n\n\"We could do it that way again. As I recall, there was a very satisfactory ending.\" \n\nShe snuggled into his arm and shoulder. \"Yes it did.\" \n\nAs they were leaving the library, Jemma yelled, \"Don't forget to hang her from the ceiling, when you're done with her. I want a grandbaby soon.\" \n\nGwen yelled back, \"We will give him one more month mom. If we don't strike gold by then, I'll have dad do it.\" \n\nJunior yelled, \"Like hell!\" \n\nJemma said, \"Sounds fine to me.\" \n\nSenior yawned, \"Don't worry about it son, I'll only need to be in there once, and she'll have the triplets.\" \n\n\"I'm going to be putting a chastity belt on my wife dad. She's not safe around you.\" \n\n\"That's not the problem William. Right now Gwen is safe around you. You have to change that or you'll never hear the end of it from your mother.\" \n\n\"I just thought of something Teddy said. We were going to have 3 children. 2 were going to be redheaded girl's like their mother. One was going to have white hair just like you, dad. Touch my wife and you're a dead man.\" \n\n\"I have never cheated on my wife, and I never will.\" \n\n\"He's telling you the truth William. Your dad has always been faithful to me.\" \n\n\"Gwen go upstairs and get dressed We are going to the Starlight Ballroom for some fun and dancing.\" \n\nJemma asked, \"What happened to sex?\" \n\n\"It's overrated.\" \n\n\"Like hell it is. You just have to learn to do it better. I'll have your father set up a camera in our bedroom to show you how it's done.\" \n\n\"You're not that ballsy mom.\" \n\n\"You'll have the tape tomorrow night.\" \n\n\"I can't wait.\" \n\n\"I hope you enjoy your dancing William, your father and I will be dancing to a different tune.\" \n\n************ \n\nGwen and William watched the tape the following evening. They were in awe of what they saw. \n\nThey hid the tape very carefully, to make sure Patrick could not find it. They did not want Patrick to watch the video clandestinely. It would be the best Triple X feature he had ever seen, including the ones he watched on his computer. \n\n************** \n\nWilliam and Patrick walked into the oval office and were greeted by the President. The President took out his wallet, and handed William a $1 bill. Using only 2 fingers, and touching the very edge of the $1.00 bill, he put it into a small plastic bag. \n\n\"Why are you doing that?\" \n\n\"My father wants to make sure it is your $1 bill, and not one of mine.\" \n\n\"Your father is very serious about his $1 bills.\" \n\n\"Yes sir, he is. He will have a fingerprint expert make sure yours are on the bill, before he frames it. Shall we take care of business before Patrick ruins your month.\" \n\n\"May I ask you who do you think the culprits are?\" \n\n\"We believe it is a member of your National Security Council. They brief you personally once every week, and you act on everything they tell you. 4 of your predecessors treated them differently, with varying degrees of success. \n\nOne did not believe Iraq was ready to disperse chemical weapons, and disregarded their assessment. Instead of to allowing the Army to go to Baghdad, which he could've taken with minimal losses, he stayed within the United Nations Security Council's mandate, and stopped the war. It was a mistake, but one in good faith. \n\nThe next president came in, straightened out the economy and put the National Security Council on the back burner. He liked direct access from each agency, and raw data. His only mistake was thinking that a rebellious Saudi millionaire was nothing to worry about until too late in his administration. When he finally tried to kill him, they missed several times. \n\nThe following president was a warmonger who brought us into 3 wars, and got us out of none. Our soldiers died, as they did in Vietnam, because he controlled the war from the White House, and the Congress, instead of letting the generals run it from the front. \n\nLyndon Johnson found that out the hard way, and didn't run for a 2<sup>nd</sup> term. \n\nYour predecessor got us out of the wars, despite bitter disagreement from Hawks in the Congress. Unfortunately, in his 2<sup>nd</sup> term, he had to defend everything he did during his first term, and didn't get anything of consequence through the Congress during the term. Numbers wise he was very successful. Unemployment was down to record lows, corporations were seeing record profits, the stock markets were at record highs, and the talent coming out of our colleges were being recruited heavily.\" \n\n\"Now you sit in this office, in your 2<sup>nd</sup> year, just getting used to what is going on around you. The infrastructure of this country is falling apart. There are 19,700 bridges that need repair or replacement desperately. \n\nHighway construction and repair has been put off since 1998, by a reluctant Congress who refuses to raise the tax on gasoline. If you are going to pollute the air, and use these roads, you should pay to fix them, or walk to work. \n\nIf the Congress doesn't have the testicular fortitude to do it, you, as president of the United States, should ram it down their throats, and force them to do it. The highway trust fund is bankrupt, because the Congress uses that money for other programs, and that is illegal. \n\nThe Congress does so many things that are illegal, everyone turns a blind eye to them. If you have the courage, maybe you should point it out to them at the State of the Union Address. \n\nAt the last estimate, it is going to take $9.5 trillion to fix everything that's wrong with our bridges, roadways, and airports. Every day you wait to act, another $10 million is added to that figure.\" \n\n\"I thought you said Patrick was going to ruin my month?\" \n\n\"I only gave you food for thought Mister President. Whether you wish to act on it or not is up to you.\" \n\n\"Stephen tell Mark to get a transcript of what Mister Zabo just said, and put it forcefully into the State of the Union Message. I will not build another rocket, until this country's infrastructure is fixed.\" \n\n\"There is another way Mister President.\" \n\n\"What is that?\" \n\n\"Doctor Even Luck, his son, Gordon, and his daughter, Delicious, along with 200 scientists, hundreds of engineers, thousands of workers, and 20 investors who put up $350 billion of their own money, launched a spaceship with 66 people on board just over a year ago. The last report we received from them was they were passing the planet Uranus, at .92 lightspeed. We have not heard from them since, and we don't expect to hear from them again. \n\nNASA and all the space agencies around the world followed their progress as far as they could, monitoring their radio, television, spectrometer and telescopic reports. They will be going over this material for a generation or more, because all of this information is new.\" \n\n\"My people at NASA told me this was all bullshit.\" \n\n\"You have Internet access on your computer, I take it?\" \n\n\"Yes I do.\" \n\n\"May I open an Internet page for you and you can do the rest?\" \n\n\"Go ahead.\" \n\n\"Do you recognize this logo?\" \n\n\"Yes, it's the European space agency.\" \n\n\"Put in the date of December 25 of last year, and hit enter.\" \n\n\"Put the timeframe to 3 minutes before 5 P.M., and raise the sound.\" \n\n\"Ladies and gentlemen this is Mrs. Jennifer Luck. We are on schedule for a 5 PM departure. We will hover at 500 feet to do our internal checks and then proceed on a southeasterly course of 138\u00b0 and increase our speed to 28,000 mph, until we leave Earth's atmosphere. At that time, we will use our forward magnetic engines to pull us towards the moon, and our rear engines to push us away from the earth... We are now 60 seconds from liftoff, and again I wish you all a fond farewell.\" \n\nIt was agreed that Teddy would announce the next two sequences. \n\nTeddy said, \"30 seconds to left off.\" \n\nI said to her, \"Teddy, it's lift off, not left off.\" \n\n\"K.\" \n\nTeddy announced, \"10- 9- 8- 7- 6- 5- 4- 3- 2 -1-Left off.\" \n\nA few seconds later, the spacecraft lifted gracefully off the ground, and stopped at 500 feet. I announced to everyone gathered below us that all our internal checks were in the green, and we were retracting our landing gear. Everyone watched as the 4 large pedestals we rested on slid smoothly into the ship and locked into place. \n\n\"Ladies and gentlemen, our forward engines are now locked onto the moon, and we are ready to go. From the crew and passengers on the Good Luck 1, we again say goodbye.\" \n\nThe president watched as the ball, that was floating a moment ago, increased speed so rapidly, the cameras were hard-pressed to keep up with it. If it was not a black dot in a blue sky, it would have been impossible to track. \n\nAs he listened to the reporter on the European space agency's channel he became furious. \"Get me that asshole from NASA on the line now.\" \n\nJames Bolden asked, \"Yes Mister President, how can I help you?\" \n\n\"In one minute I'm going to fire you, but before I do it, I want every piece of information you have on the spacecraft called, 'Good Luck 1' on my desk tomorrow morning. That includes all film, discs, and paperwork. If anything is altered, you can consider yourself under arrest for falsifying government documents. Is that clear Mister Bolden?\" \n\n\"Sir, you are talking about hundreds of thousands of documents, discs, and testimony. I can't possibly have that to you in the morning.\" \n\n\"How can that possibly be? Every time I asked you about this supposed spacecraft, you told me it was a toy, a figment of someone's imagination, something that would never fly. I just watched it on the European Space Agency's webpage, and it sure as hell look like it flew to me. I'm wasting $1 trillion of this country's money on a spacecraft that may or may never fly. I'm getting ready to cancel it. I want to know how much money we've spent on it to the penny. Tomorrow morning Mister Bolden, 9 o'clock sharp. Oh I forgot, you're fired.\" \n\n**************** \n\n\"Mister President, I know some people who would give their eye teeth to take a look at that stuff.\" \n\n\"And who might they be?\" \n\n\"Our people who are running parallel investigation.\" \n\n\"I'll see what I can do about it.\" \n\n\"Patrick looks bored to tears sitting over there. I guess it's time to see how good a chess player he is?\" \n\n\"There goes your good humor for the month.\" \n\n\"Perfect timing don't you think? When that asshole gets here tomorrow morning, he will get my wrath for lying to this country for the last 6 years. He was in that job too long anyhow. He was becoming complacent. Patrick, if you beat me in under 20 moves, I'll let you run NASA for me.\" \n\n\"Really, if you let me do that, I'll see if I can get my cousins to retrofit Orion onto our engines, and get it off the ground for you in 1 year.\" \n\n\"I told you that kid could ruin your day. Now you are going to have to explain to the press why a 16-year-old is running a major part of the government.\" \n\n\"He hasn't beaten me yet.\" \n\n\"Yes sir; he has.\" \n\n16 moves later the president tipped over his king, and acquiesced to Patrick, who was running around the oval office screaming, \"I'm going to run NASA,\" over and over again.\" \n\nWilliam said, \"Mister President, if it's any consolation to you, NASA is in good hands.\" \n\nThe President responded, \"How can you possibly say that? \n\n\"Patrick graduated from Tsinghua University at the age of 13. He received a double degree. One was in Business Management, the other was in Computer Technology. He wanted to take a 3<sup>rd</sup>, because he was bored, but I wouldn't allow it. \n\nHe would have been the valedictorian of his graduating class. I told the Dean of the school it would not be proper for an American citizen of that age to speak to a Chinese audience at graduation. The country, and other graduates would lose face, and that is something I would not allow to happen. I wanted his name removed from the list of graduates, and his degrees issued privately. The deans of the school were so appreciative; they could not do enough for us. \n\nPatrick speaks and writes in 4 languages. English, Mandarin Chinese, Korean, and Japanese. He knows more about Business Management and Computer systems in this country, and in China then anyone I've ever met except, our sister, Patricia, of course. \n\nHe received his Master's Degree, from NYU, in Business Management this past summer. He did most of it on line, but had to go there to defend his thesis. He got straight A's again.\" \n\n\"What happens when he goes before the Senate for confirmation? He's only 16.\" ",
        "\"He'll be 17 in March. He will do to the Senate what his cousin, Gordon, did to the Nuclear Regulatory Commission, when we first applied for approval to build a small Nuclear Fusion Engine. Not one of the people on the commission understood how it could be build it, until Gordon explained it to them. He told them, if they built one focusing 172 high powered lasers at a gold capsule the size of a small thimble, containing titrium, and deuterium and have the heat of the lasers squeeze it down so small that the atoms fuse and produce a star burst of continuous energy, enough to power the entire continent. They still didn't understand what he was talking about, but they gave him the permit. \n\nIf they give Patrick a few months before the confirmation hearings, he will know more about NASA than his predecessor. If they ask him a question he does not know, he will start out by giving them a clear, and cogent answer, and then baffle them with bull shit. There will be only 2 people on the committee that will know anything about NASA, and the internal workings of it. Everyone else is just there for show. Patrick will take them apart for not knowing what they're voting on. \n\nIt works for us as well Mister President, because Patrick will never go anyplace unguarded. We expect someone to come after the 2 of us at some point. It will be wonderful to draw them out into the open as they try to make their move. Now they will have to come at us from 2 different directions. It weakens them, and makes us stronger.\" \n\n**************** \n\nAs their helicopter lifted smoothly into the air, Patrick asked his brother, \"Will you call Holden for me?\" \n\n\"Are you going to brag already?\" \n\n\"There's no time to brag, I want to see if they can retrofit Orion.\" \n\n\"You are something else little brother.\" \n\n\"Rod Laver here, who's calling?\" \n\n\"William Zabo Junior, calling for Holden Luck.\" \n\n\"Identifying.\" \n\n\"SAG A Star.\" \n\n\"Hello William, how is everything up north?\" \n\n\"We are stirring the pot quite vigorously, looking for the rats to start running. It appears the president is on our side, but nothing is for certain.\" \n\n\"Very interesting, how might I help you today?\" \n\n\"Is Holden with you?\" \n\n\"Yes, we are eating lunch.\" \n\n\"What you are about to hear is the truth, so don't start yelling. Here's Patrick, and put your phone on speaker.\" \n\n\"Holden, it's me Pat, can you hear me okay?\" \n\n\"Yes I can, what's up?\" \n\n\"The president fired the head of NASA, and he said if I could beat him in a game of chess in less than 20 moves, I could replace him. I beat him in 16 moves. I am now the head of NASA. This is not a joke; it is for real. I want to know if it is possible for us to retrofit Orion with your sister's engines, in one year, or less. I don't know if they will need a nuclear engine, because they're only going to Mars. It will take them an hour to get there, and leave them more time for exploration. What do you think?\" \n\n\"It's interesting, but I'd have to get underneath Orion to see how the cabling would go. We would also have to find a way to get the power to run my sister's engines without the nuclear engine to provide it. The nuclear engine is the only way I know to give it enough electricity. The super-cooled helium has to be kept at 4.2\u00b0 Kelvin. The ultra-high powered electrical current is what achieves the negative magnetism passing through the 2% non-enriched uranium that puts the Earth's gravity negative 2% has to come from somewhere. It's either a small nuclear fusion engine, or we build a complete power plant, and put enough fuel in there to run it for 3 hours.\" \n\n\"How long do you think would take Bascom to build a 3 Mega Joule fusion engine?\" \n\n\"They already have the design, and the experience to make the sarcophagus. The problem is Washington and getting the permits.\" \n\n\"If I got them to give you the permits, how long?\" \n\n\"Since it would be a tiny engine, 7, or 8 months.\" \n\n\"How would you like to take a break from what you are doing, and go down to Kennedy to see Orion, with unfettered access?\" \n\n\"Does a bumblebee like flowers?\" \n\n\"I will pick you up next Tuesday, 10 AM, at Charleston airport. I gotta convince my dad I need an airplane.\" \n\n\"I have to bring my entourage.\" \n\n\"That's funny, so do I.\" \n\n\"Big brother, do you want to buy me a 747, or do I have to ask dad to buy it for me?\" \n\n\"What the hell are you going to do with the 747?\" \n\n\"Shall I show you my design for it, or can you wait until we get home?\" \n\n\"We have an hour, go ahead.\" \n\n\"We're going to have 4 large bedrooms. One upstairs for you and Gwen. God knows you make enough noise. Another large one, forward, on the main floor, for mom and dad. One large one for me, and the rear of the aircraft, and one medium-size one for a guest in back by me. All the other seats will be first-class, and must be able to recline into a sleeping position. We have to travel with our guards, and they deserve to be as comfortable as possible, while we are flying. We will upgrade the kitchen area's downstairs for better food, and more of it. We will contract with the finer restaurants in New York City, Washington, DC, Charleston S.C., and the Cape Kennedy area for food. We will have 8 full-time hostesses, and 2 full-time crews on board while we are in flight. We will never have as much cargo as the plane can carry so we will see what Boeing can do for us downstairs. \n\nThe aircraft will be guarded 24/7, and maintained as Air Force One is. Anyone who goes near that aircraft will be challenged for identification and work orders. They will be escorted to their workplace and monitored while they are there.\" \n\n\"Do you want it painted like Air Force 3?\" \n\n\"I think that's illegal William. I was thinking about something like 'DEFENDER' or maybe \"JEMMA,\" but you can't tell dad.\" \n\n\"You did this out of thin air as usual my brother.\" \n\n\"No, you gave me 2 seconds to think about it.\" \n\n\"Give me the phone Mr. Administrator, before I hit you.\" \n\n\"Information, could you connect me with Boeing aircraft sales department. I have no idea where the located.\" \n\n\"Boeing customer relations, this is Virginia speaking.\" \n\n\"Virginia, this is William Zabo. I'd like to speak to someone about buying an airplane.\" \n\n\"Yes Mister Zabo one moment please.\" \n\n***************** \n\n\"Frank, William Zabo is on the line and he wants to buy an airplane.\" \n\n\"William Zabo?\" \n\n\"Yes Frank, William Zabo. Get your dancing shoes on, and pick up the phone.\" \n\n****************** \n\n\"Mister Zabo, this is Frank Williamson, how my help you?\" \n\n\"You made me wait 87 seconds Mister Williamson, and it was a waste of my time. You have just lost a sale for one of your 747's, because of your tardiness. I am going to hang up, and call the French. I dislike spending American dollars in other countries and keeping their people employed instead of American workers employed. How many people have you just put on the unemployment line Mister Williamson, and how soon? Goodbye Sir.\" \n\n\"Mister Zabo, I apologize for keeping you waiting. We were at a meeting and I had to be pulled out of it to speak to you. I'm sure we can come to some sort of an agreement that will make you happy to purchase American aircraft.\" \n\n\"I need a Boeing 747 yesterday. My son was just made the Administrator of NASA, and honestly I don't trust any of their aging aircraft. With Congress constantly cutting their funding, all NASA does is cut back on repairs, and I won't have my son die, because Congress doesn't do what they're supposed to do. When can I have an aircraft Mister Williamson, when?\" \n\n\"The wait for a new aircraft Mister Zabo is 5 to 7 years.\" \n\n\"Goodbye Mister Williamson.\" \n\n\"Mister Zabo are you going to be financing this aircraft?\" \n\n\"I haven't financed anything since I purchased my first car. This airplane should cost me between $280 million, maybe $320 with what I have in mind for the inside. That's petty change Mister Williamson, I can bring it in cash, or write you a check.\" \n\n\"Mister Zabo may I call you back in 30 minutes.\" \n\n\"Here is my phone number, in 31 minutes I turned off my phone.\" \n\n\"Thank you Mister Zabo.\" \n\nPatrick laughed. \"You play dad very well.\" \n\n\"You watched me do it in China all the time. You have to scare the other guy to get what you want. I have a pretty good idea of what a Boeing 747 costs, but he knows now what I'm willing to pay for it, and he knows it's a cash deal. He's going to call his boss, who is the head of purchasing to find out if the deal for the next airplane is solid. Then he is going to call the head of production to find out when aircraft number 1 in line is going to be ready. They will call flight test to make sure there is a crew ready to fly that particular airplane. if everything falls our way, we will have that airplane in 2 months. If not able try to sell us a used aircraft, which I will keep saying no and no and no and no, until they lowered the price to bare minimum. Then we will change the engines, update the avionics, and work on the inside of the aircraft, until everything is brand-new.\" \n\n\"You sound like you've done this before.\" \n\n\"It's like selling a table. They have a product they want to sell. They have a product you want to buy, but not at the price they want to sell it at. The object is to bargain. They say no, you walk away. You get to the door they ask you to come back and reconsider. You tell them there's nothing to reconsider, because their price is way too high. I've already told them what my bargaining price is, and I'm willing to pay cash. Cash today is more valuable than cash 10 years from now because it depreciates. \n\nWait a minute, you gave me this lecture years ago, when you were in school, you little bastard.\" \n\n\"I was just checking to see if you remembered it.\" \n\n\"I should throw you out of this damn helicopter.\" \n\n\"You can't, the doors lock automatically when we are in flight.\" \n\n{28 minutes later, William's phone rang.} \n\n\"Mister Zabo, Frank Williamson from Boeing. I tried to get you aircraft number one in line, but the deal is solid. Is there anything else I can try to do for you?\" \n\n\"Yes you can Mister Williamson, give me the name of the owner of aircraft number one, and find me the best used Boeing 747 there is for sale. Don't worry about the engines because we will be re-refitting the aircraft, if we decide to buy it.\" \n\n\"The aircraft is being purchased by an Algerian Airline Company whose president's name is Falik sed Mansad.\" \n\nWilliam laughed. \"Mister Williamson if I were you, I would not paint that aircraft.\" \n\n\"It finishes assembly in 3 days and is scheduled for the paint shop in 8 days.\" \n\n\"Mister Mansad will be calling you with new instructions either today, or tomorrow.\" \n\n\"Yes Mister Zabo, I will await his call.\" \n\n**************** \n\nFrank walked to his secretary's office. \n\n\"That man is some piece of work.\" \n\n\"What do you mean Frank?\" \n\n\"He threatens me, because I kept him on the phone waiting too long. He tells me exactly what he wants, and tells me he wants the first airplane off the line. I did everything I could but it was impossible, because the deal was solid. I couldn't believe it when he said the owner of that aircraft would call me within 24 hours with new instructions. Who the fuck does this guy think he is?\" \n\nVirginia replied, \"I brought him up on my computer, take a look, but don't die on my floor.\" \n\n***************** \n\n\"Dad, William, how much does Falik sed Mansad owe us?\" \n\n\"Do you mean beyond his firstborn, his testicles, and his company?\" \n\n\"Could you put a figure to that please?\" \n\n\"Without going to my computer, I would say close to $5 \u00bd billion.\" \n\n\"Thank you, dad, he's just given Patrick a Boeing 747.\" \n\n\"What the hell is Patrick going to do with the 747?\" \n\n\"He's going to put a lap pool in the belly, a bowling alley in the rear, and a bedroom for each of his mistresses.\" \n\n\"He's a forward thinking young man isn't he?\" \n\n\"Yes he is dad. He designed the whole thing for me in under a minute. He is brilliant.\" \n\n\"Okay, call Mansad's New York office. Tell them they just lost an aircraft because they've been late on 7 payments. They are still going to pay for the aircraft, but we are going to be the owners. If they don't like it, tell them I'm going to foreclose on their loans.\" \n\n\"Thanks dad, I'm going to call them right now.\" \n\n*********************** \n\n\"StarWide Aviation, Teresa speaking.\" \n\n\"Teresa, this is William Zabo calling, I would like to speak to the chief financial officer or the president of the company immediately please. This is in reference to late payments on their debts.\" \n\n\"Mister Zabo, I will patch you through to our Algiers office.\" \n\n\"Falik here William, how can I help you?\" \n\n\"You are on a spending spree, while you owe me money and are sending it in late. I have been very kind to you by not raising your interest rate. Are you still a sound investment for me, or should I take over your company, and sell it away in pieces?\" \n\n\"We have had our best year in history William. Instead of flying to the west, our business has grown by flying to the southeast. That is our growth area, and our business is booming.\" \n\n\"If your business is booming why am I not being paid on time?\" \n\n\"We have been upgrading our fleet to make our passengers more comfortable.\" \n\n\"If you are late one more time, I'm either going to take over the company, or raise your interest rate by 12%.\" \n\n\"12%, that will bankrupt us, either way I will lose the company. Is there any other way we can come to terms?\" \n\n\"I know you have a Boeing 747 coming off the line in a few days. I want it. You pay for it, I own it. I will give you a year to prove yourself. If there is a downturn in your business over this year, you and I are going to have a very detailed discussion. Is that clear?\" \n\n\"Yes William, it is very clear.\" \n\n\"You are to call Boeing tomorrow morning and tell them not to paint that aircraft. Advise them you will be paying for it, but the owner is Patrick William Zabo. Do not default on those payments, or I will foreclose immediately.\" \n\n\"Understood William, goodbye.\" \n\n**************** \n\nThe following morning at 10 AM Pacific Coast time, Virginia transferred a call to Frank Williamson's office. \n\n\"Mister Williamson, this is Falik sed Mansad of StarWide Airlines in Algiers. I have to make a change in our order for our Boeing 747 which is due to come off the line shortly.\" \n\n\"Yes sir, I've been expecting your call. Go ahead with your changes.\" \n\nWhen their conversation ended, all Frank Williamson could do was shake his head. He had never heard anything like this in all is born days. A company was buying it an aircraft, but the owner was going to be a private citizen. The private citizen was a 16-year-old boy by the name of Patrick William Zabo. Even though he had read everything about his father the day before, he still couldn't imagine the power this man held over most of the people he knew in the business world. He picked up the paperwork, brought it to Virginia, and told her when she reads it not to be startled. Every word he wrote is true. He was going for breakfast, again. \n\n17. Finality \n\nYou could hear a pin drop in the ready room. The look in Jennifer's eyes and the way she was holding Even close to her, told them this was not a practical joke. Soon, they were going to lose the glue that held their ship together. If anything went wrong, the first thing anyone did was call Even Luck. That comfort was going to be taken away from them soon, and there wasn't anything any of them could do. \n\nHis assurance that they were ready to proceed with this mission without him was of little comfort, because they didn't feel that way themselves. \n\nNone of the captains did, not Jennifer or Gordon. \n\nThe Captain trainees each shrunk a foot, when they heard the news. Janet and Gloria, who were on the bridge seconds ago, and feeling at the top of their game, suddenly were not as sure of themselves as they were when they entered this room. \n\nElizabeth saw him looking directly at her, as he was speaking. He knew she was thinking about running back to the safety of Navigation. As he stared at her, he wiped that thought out of her head, because he was telling her she was needed where he put her. \n\nTears flowed from her eyes. She brushed them away as best she could. She looked at her Captain, and nodded her head. He nodded back. \n\nMonty realized why he was pushing her so hard. On this ship there were 2 imposing figures: Even Luck and Montgomarie Jamison. Even, because of his skill, magnetism and brilliance. Monty because of her leadership abilities, intuition, and size. People were naturally drawn to them, and valued their opinions. \n\nEven said, \"This information is not yet for general release. When we complete our travels through the White Hole, I will advise the entire crew of my predicament. Then we will turn to seek a new home among the stars. This meeting is adjourned.\" \n\nEveryone was quiet as they left the room. There's nothing you could say to a man, who knew he was going to die to cheer him up. \n\nGloria and Janet left for the bridge to resume a close watch on the asteroid 25,000 meters in front of them. Callie was in full control of the ship's propulsion and navigation functions. \n\nGordon was one of the last people to leave the ready room. He glared at his father from the door. \n\nMonty grabbed him by his neck, pulled him out of the room, and dragged him down the corridor. \n\n\"Stand up straight when you look at me boy. What was that supposed to prove? Do you think for one minute he wants to leave you, or us? Do you think for one minute he wants to leave your mother, or the twins? Do you think he has any say in this matter? Say something dammit.\" \n\n\"He should have let me die. He never told me he had a termination date. He knew this since he had cancer, and he never told me. I could have done something for him. I could have been a better child, a better son, a better scientist. I could've made him so much prouder of me then he is, instead of butting heads with him all the time. He should have told me Monty; he should have told me.\" \n\n\"So now when he needs you most what are you going to do; stick your head up your ass and hide? Or are you going to pick up the slack that's going to be missing by his passing? I'm going to be taking the 2<sup>nd</sup> Captain's Test in 10 days. That's the 4 weeks earlier than I'm supposed to take it. Why, because your father asked me to do it. He wants another senior captain, and he wants it to be me. I'm never going to be as good as you, I'll probably never be as good as your mother. What I will be is what your father wants me to be; someone calm, and steady in the captain's chair, and much to my relief I will always be able to order you around.\" \n\n\"Monty, if you were the person assigned to pluck the turkeys, you would still be able to order me around. That reminds me, I have to have a long talk with the chef. If he touches one more egg, he's going to be minus a hand.\" \n\n\"Don't you think you should talk to your father first?\" \n\n\"I'm not ready for that yet. I'll get to him before we enter the White Hole for sure.\" \n\n************ \n\nThe last person to leave the 'ready room' was Elizabeth and she approached me with her head down. \n\n\"My problems seem very small in comparison to yours Captain. I don't understand and how you are being so calm and resigned to your fate?\" \n\n\"Elizabeth, I knew this was coming for many years. I don't know if you can believe this or not, but my sister talks to me from beyond the grave. \n\nI was in the hospital suffering from pancreatic cancer, and they were throwing everything at me, including the paving stones in the parking lot. I was ready to give up, when my sister came to me and told me it was not my time. She told me to fight, fight harder, and fight the pain. You will never know how much I loved my sister. I would do anything in this world or the next for her. So I fought, and I fought harder and harder, until finally, I won. I beat the odds on longevity for pancreatic cancer, which is 6 years, because I am now in my 11<sup>th</sup> year. If now is the time God wants me, I'm ready to go to Her, and explain my life. ",
        "However, my sister told me that one day she would visit me, and tell me my time was up. That is a great burden to bear, because you don't know if you can make long-term plans or not. I decided to just live my life as if I was going to live forever. I had Jennifer, the love of my life, Delicious, the daughter I had with my sister, Gordon, Jennifer's son, Richard, Holden, Adele, and Mia, our children. I've invented things no one else ever thought of. I built this ship with the aid of the people I love and admire. We have flown to places in this universe people on Earth still dream about. So if you want to know why I am so calm, and resigned to my fate, I can look back on my life and say I've done everything any man could hope to do in any one lifetime, even though there was more to do. \n\nYou must remember Elizabeth death is not an ending, it's only the beginning of the next step in our evolution. We are as old as this universe, because MATTER can neither be MADE or DESTROYED. 99% of our bodies are made up of oxygen, carbon, hydrogen, nitrogen, calcium, and phosphorus. All of that is matter, and matter cannot be destroyed. It will go on forever, so I will go on forever in one form or another. What will happen to my consciousness, I don't know? My sister told me I would combine with the computer, but I can't believe that will be God's purpose for me. If it is I will accept it, because I will be helping everyone here. I will find out as time passes. \n\nIf my sister can talk to me, and Teddy can hear and talk to her, there is something beyond our logical minds going on that we will find out about after we pass.\" \n\n\"Captain... never mind, I belong on the bridge.\" \n\n\"Sit down Elizabeth. \n\n\"Jennifer would you mind taking Elizabeth's place on the bridge for a few moments?\" \n\n\"No, not at all.\" \n\n\"Now, what's on your mind Elizabeth?\" \n\n\"Did you tell Laura to be my friend?\" \n\n\"I did not. Why, what did she say to you?\" \n\n\"She was curious about the endgame of our match, so I was showing her how it would end up. Then she started talking about how she met her husband, Adam. She told me how she thought she was a lesbian for most of her life, because she was never interested in men; just her science and her computers. Then one day he came along, and everything changed, because of him. \n\nWe are going to play more chess, when our schedules coincide, but the way she put it was funny. She said if Adam is home, and he's not jumping up and down on her, she's jumping up and down on him. She's now hooked on sex. She wonders why she waited until she was 24 to find that out.\" \n\n\"I'll tell you something about my niece, and her sister, Anna. No boy would look at them, ever, because of the way they dressed. They were from a rich family, but they dressed like depressed bag ladies. They had no fashion sense. You can tell Laura I told you, because it's the truth. Neither one of them owned a pair of shorts, until they were in their 20s. Anna was at the University of Virginia, and stuck out like a sore thumb, because of the way she dressed. It wasn't until she met her, 'husband to be' that she finally started buying clothes that fit are properly. \n\nDon't laugh, her husband's name is Cloudy Day. His parents thought it was cute because he was born during a hurricane. So now my niece is called 'Annaday.' \n\nAnna nearly made it to her wedding night a virgin. She had the same mindset as Laura. Cloudy was able to spread her thighs a few months before the big day, and Anna is hooked on sex, just as her sister is now. The 2 of them talked about it for hours, after Anna lost her virginity. Then Anna had to call her mother and break the news to her. They talked all night.\" \n\n\"Why would a girl called her mother to tell her she had sex for the first time, Captain?\" \n\n\"That's how close a family they are. There are no secrets. If you did something bad you talk it out. If you had sex, you talk to everyone about it. Except for Robert, of course. If Robert started talking about sex, you would be seated in the same chair for 10 years, and die of starvation.\" \n\n\"Why was Robert so different?\" \n\n\"Stephano and Patricia are polar opposites. That's why they've been able to survive their marriage for so long. When Patty got pregnant, it was with triplets: Robert, Laura, and Anna. Robert was his father. Laura was her mother. Anna was a little of both. \n\nStephano started having sex the day after he had his first erection. Robert started the same way, and his father bought him condoms by the hundreds. Laura caught him doing it, and demanded that she and Anna be put on the pill. \n\nWhen Robert started coming home later and later from school Patty got suspicious, and started asking questions. Then Robert made a mistake and put some used condoms into the trashcan in his room. When Stephano came home one evening, Patty's hair was on fire. She showed him the evidence and asked him if he knew anything about it? \n\nStephano knew better than to lie, because she would have taken out her gun and killed him. He told her the truth. \n\nAs the argument rolled on, about the poor girls her son was leading down hells row, Laura said, \"Anna and I are on the pill.\" \n\nPatty went apoplectic. \"Are you two having sex?\" \n\n\"Isn't that the reason you take the pill mother?\" \n\n\"I'm going to kill the bastard's, who are they?\" \n\n\"The handsomest man I've ever met mom. I will not stop having sex with him, until he tells me he doesn't love me anymore.\" \n\n\"Tell me who it is.\" \n\nLaura walked over, grabbed her father's arm, laid it across her breasts, and put her head on his chest. \n\nPatty screamed, \"You violated my baby?\" \n\nStephano stood there stunned. \"No, it wasn't me honest.\" \n\nHer mother started chasing her father around the house, as the 3 kids sat on the kitchen counter laughing at them. They were drinking soda, and eating cake for almost 10 minutes before it stopped. \n\nWhen Patty finally realized what was going on, she looked at her children: \"Why did you all have to be as crazy as me?\" \n\n\"That was the end of it. There were no recriminations, there was no anger, it was just funny.\" \n\n\"You must remember, Elizabeth, that entire family is composed of geniuses. Stephano graduated from Penn, as valedictorian, in both undergraduate, and graduate schools. \n\nPatricia graduated from the University of Massachusetts with 3 Master's degrees. \n\nRobert received his Master's degree, from the University of Michigan. Instead of studying, he fucked half the female population of the University. \n\nAnna graduated 3<sup>rd</sup> in her class at the University of Virginia. She would've been valedictorian, except she met a young man named, Cloudy Day, who took up a lot of her time, in her bedroom. \n\nLaura refused to go to college, because all she wanted to do was work with her computer, and boy did she ever become good at it. The only one better is her mom.\" \n\nAll of them have photographic memories. Anna is the only one that does not have instant recall. Something has to jog her memory before everything falls in place. \n\nMy family has the same problem, if you can call it a problem. Delicious, Gordon, Richard, and Holden, all have photographic memories, just as I do. If I think about it, I can tell you what I had for dinner a year ago today. It's both a blessing and a curse. Elizabeth, is my opinion that you are photographic too.\" \n\n\"How can you possibly say that Captain, I have to study hard to remember everything I have to know for a test?\" \n\n\"Did you have to study for the captain's test?\" \n\n\"No, you didn't give me a chance to study.\" \n\n\"What did you score in the captain's test?\" \n\n\"93.\" \n\n\"Can you imagine what you would have scored if you had studied for a week?\" \n\n\"I never thought about that Captain.\" \n\n\"You don't have to answer this question, because it's personal, and I don't want to infringe on your personal feelings or life. How are you feeling?\" \n\n\"Hannah is a wonderful counselor. We are working well together. It's not easy for me to get past those visions in my head, but we working on it. She told me what she went through, and she came out the other side. She told me if she could do it, so could I. I'm working on it every day.\" \n\n\"Good for you. If I pass without seeing you again, I want you to know I will always be praying for you to get well.\" \n\n\"Thank you Captain, that means more to me than you'll ever know.\" \n\nElizabeth stood up and began walking towards the door. Suddenly, she stopped, turned around, and ran to me. She threw her arms around me, and put her head on my chest. \n\nShe cried as she said, \"Thank you for believing in me.\" \n\nI held her to my chest for a moment. \"It was very easy to believe in you. You were always the smartest in everything you did. Go out there and make yourself proud.\" \n\n\"Thank you Captain, I will always remember your kindness.\" \n\n\"Go to work, and send my wife back in here.\" \n\n\"Yes sir.\" \n\n**************** \n\nWhen Jennifer walked into the room I kissed her like there was no tomorrow, which at this moment was always possible. \n\n\"What the hell has gotten into you?\" \n\n\"I was attacked by an 18-year-old girl, and it felt very good. Shall we go to our room, and make me feel better?\" \n\n\"We are 15,000 miles from the opening to the White Hole. I don't think we have time.\" \n\n\"Why haven't they sounded the buzzer?\" \n\n\"I don't know.\" \n\n\"Go strap yourself in, and save the seat beside you for me. I'll be right there.\" \n\n\"I'm on my way.\" \n\nI ran to the bridge, and found everyone strapped in properly, except for my sister. She was holding Teddy, fast asleep in her arms. \n\nI panicked. \"I won't let you take Teddy with us. She is much too young, and much too precious. It would kill our daughter if she's not here.\" \n\n\"You are right Even, she is such a precious child, I just wanted to hold her in my arms for a few moments. She is a favorite of our Lords, and always will be.\" \n\n\"How about our baby? Will she get better, will she survived this?\" \n\n\"You have already seen to that, my brother. I watched you, and listened as you cleared her mind of all the evil that corrupted it. She will now go forward and prosper as she was always supposed to. You have been a wonderful father to her, and you should be proud of yourself.\" \n\n\"It was not me who changed her, it was Gray. He is such a wonderful person, and a loving husband. He refused to give up on her. He was the one who knocked some sense into her, not me. He deserves all the credit.\" \n\n\"Do you want to stand here, and argue with me, or do you want to watch as we entered the White Hole? Everyone will watch it later as they awaken.\" \n\nI wanted desperately to deploy the Mickey Mouse ears, but I knew better. Even the smallest rock flying by us would destroy the fragile instruments, or the wings they sat on. I had to be satisfied with the side, and rear view cameras as our speed increased. \n\nI knew the instant as all we entered the vortex. The ship started bouncing on all its axis, but thanks to our protector in front, it was not violent. \n\nAs I was looking at the screens, suddenly the asteroid disappeared. \n\nI yelled, \"God help us, we will never make it through.\" \n\nMy sister laughed. \"The asteroid is still there. Our God is allowing you to see the 'might' of what she placed around Her universe. The terror you see in front of you She created without blinking her eyes. If it wasn't for the rock in front of you, your passage into this cone would not have been possible. The area between the 2 cones, which looks benign to you, is pressurized heat at 51,000\u00b0. Your ship would have been crushed, and melted, if it wasn't for my presence. \n\n\"We have seen things pass between the 2 cones. Nothing I know of could stand those temperatures and pressures.\" \n\n\"Yes you do. You joked about it with Jennifer, before you asked her to marry you.\" \n\n\"She is turning coal into diamonds, and throwing them around the universe?\" \n\n\"Do you see what I mean Even; you're smarter than you think.\" \n\n\"Should I ask why?\" \n\n\"You may, but I don't know the answer. After our passage through this enigma, it will disappear, and reappear in another part of Her universe. My Lord does have a sense of humor, but she will not kill innocents traversing Her universe, to see, and study its wonders.\" \n\nI could see the sidewalls of the cone pressing in upon our ship. I wondered what would happen to the asteroid in front of us. I could no longer see it, nor judge its size. Would it be small enough to make it through the end of the cone, or would it break apart as it's great size rubbed along the walls of the White Hole. Would it start throwing great pieces of rock everywhere, including at our tiny sphere. Would we be destroyed, just as it was being destroyed? What would happen, when we entered the area of the pressurized 51,000\u00b0 heat? Would it melt, or break apart as the metals inside it boiled, and the rock was crushed by the extreme pressure and heat? \n\nI shook my head. Why was I worrying? My sister said we were going to make it through to the other side. She was relying on a source higher up the food chain than I was. \n\nShe said it, so we were going to do it. It was as simple as that; RIGHT? I was still only human, or so I thought, and as a human, I was still allowed to worry. \n\nMy sister put Teddy back in her seat, and placed a chain with a medallion in her hand. \n\n\"Teddy will believe you gave these to her before you departed. It will help her get over missing you, and she will miss you greatly. She will find a great friend in Elizabeth, and they will both help each other grow. Elizabeth will be fine. Are you ready to make the jump?\" \n\n\"I'm in the spacecraft do I have a choice?\" \n\n\"You were always dense Even?\" \n\n\"If you mean am I ready to meet my maker, yes I am.\" \n\n\"Take my hand, and behold your life.\" \n\nI took my sisters hand. I saw all the hatred I held in my soul, and the pain I had caused others. The hate was concentrated on one person, my father. I could not, and did not forgive him for what he did to my sister, and to me. It did not surprise me that I hated him more for what he did to my sister than what he did to me, but I still hated the man. I never forgave him for his transgressions. I never tried to forgive him in life. I refused to forgive him in death, because he took my sister with him. \n\nThe pain started with my mother. She never did anything of her own will to hurt Divine or me. She just agreed with, and enforced everything my father said, and did. I knew she was under his thumb, as we all were, but I should have forgiven her. I saw the pain in her face. It was my mistake, and I never corrected it. \n\nI saw the argument with Rod, when he thought he lost my friendship. That caused him so much pain and suffering, it almost broke me. It broke him, but I did straighten it out. It was supposed to be a joke, but it turned out to be a very bad one. He was my best, and only friend. I should never have done that to him. It was a transgression of the highest order. \n\nThen there was Jennifer. I couldn't understand what I did to hurt her. Within the beat of an eyelash I understood. I promised I would not get her pregnant again, and I did. I did not understand the pain and suffering she went through for 9 months, and then had our twins. Again I thought it was funny, but sometimes my sense of humor gets out of hand. She forgave me, but as I looked at it from her point of view, again it was again a transgression of the highest order. I'm so sorry my love. \n\nThen there was something I didn't think counted, but apparently it did count against me. I put out a bid for someone to oversee the building of the Good Luck 2, and watch over Richard, and Holden scientifically. There were 37 applicants. As I was going through them, my assistant told me there was a man who wanted to see me, and would not take no for an answer. She wanted to know if she should call security, because he would not give his name. \n\nI told her to let him in, but to stay in the office with me just in case. It turned out to be Joseph Oyster. He demanded the job I put out for bid in no certain terms. He would have gotten down on his knees for it, if he had to. He was a colleague, a friend, and very well-qualified for the position, and without giving a thought to any of the other applicants, I gave him the job. It was not the correct thing to do just because he was a friend, but I did it. Wrong again! \n\nThen there was Dycke Schneider, and I burst out laughing. \n\nMy sister said, \"Do you think what you did to that man was funny?\" \n\n\"Absolutely not, I think what I did to that man was hysterical. That's why we are the best of friends. We could yell, and scream at one another, like no other business people can do. He built more than 60% of this spacecraft. It may be my minds work, but it was his technology and handiwork that fashioned this spacecraft. This is not only my pride and joy, but his as well. Do you think he would allow his daughter to travel through space on this beach ball, if he didn't think this spacecraft was safe? Why do you think I hounded him so often? Why do you think I sent him to Sweden, with his upper management team, when I found out he was having trouble with Payne? His team could have taken care of the business problem, but Dycke needed rest, and he was not going to get it in Charleston. I did not want to lose a friend, so I got him out of there, as quickly as possible. \n\nWhen he returned he was better able to handle his problems at home. \n\nI was able to yell at him more often, and it worked out well for both of us. He finally told me to go fuck myself, and hung up. That's when I knew he was back to being his old self again.\" \n\nSuddenly, I was standing in front of the kitchen table, and I didn't understand why, until I saw the empty pretzel jar. I recalled one of the last few words I said. I reached into a pocket, pulled out a lonely $5 bill, that should not have been there, and put it into the jar. Everything disappeared, and I was back in limbo justifying my life. \n\nI waited for the next black mark against my soul to pop-up. I realized the area seemed darker, and I was alone. Little by little it got darker and darker, and I knew when and where I was. I was back at M.D. Anderson Hospital, and I was in pain. I remembered that pain vividly. \n\nI remembered wishing I was dead. Now I was dead, revisiting those days, when I was alive looking at it from the other side of the table. The only reason I wasn't here earlier was my sister. She tormented me. She cajoled me. She kicked me in the ass, when I was unconscious. She made me want to live. Well I lived 10 years, a really wonderful 10 years, and as I looked across, from this side of the table to the other, I say to everyone on the other side; fight, fight hard and win. Life is worth it. Life is good. You deserve to live another good day.\" \n\nI felt my sister take my arm, and she said, \"It's time to go.\" \n\n\"That's all I ever did that was wrong?\" \n\n\"When did you ever leave time in your schedule to do anything wrong Even? You went to MIT, went to class, and studied 14 hours a day. You invented the headsets, patented them, and moved to the outskirts of Denver to a dot on a map named Idaho Springs. Your government built your house, in return for making them a product they needed. You hired that idiot friend of yours, Rod, to take care of you and your problems so you could work 365 days a year. When did you ever have time to do something wrong?\"  \n\n\"I don't know; I was always busy. I left the church for a long time, I thought for sure that would count against me.\" \n\n\"Churches don't count. Believing in Her does; and you believed in Her all your life. We're here, we're home.\" \n\n\"Yes we are, it's good to see someone's taking care of everything back here.\" "
    ],
    "authorname": "Prolonged_Debut10",
    "tags": [
        "good luck 1",
        "space",
        "novel",
        "novella"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/dark-as-daylight-ch-05a"
}