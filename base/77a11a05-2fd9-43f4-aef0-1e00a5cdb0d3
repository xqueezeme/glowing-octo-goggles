{
    "title": "A Big Shiny Blue Marble Ch. 44",
    "pages": [
        "***Meet Randi Farber. She's a young woman who's having a hard life and still manages to smile now and then in spite of the things which have happened to her. 0_o\n\n---------------\n\nBook of the Forsaken Part 1\n\nIn the ruins of Palmyra, another servant awoke in darkness.\n\nTaken from an almost dead world by the same malefic race which had taught -- and used Dakhete, this servant had been bound by ties placed on her soul and brought here, kept in slumber as insurance -- a weapon to be used if necessary to hopefully destroy their half-Djinn servant, who was a weapon that they had chosen for their purposes.\n\nShe'd never been needed and had been largely forgotten. By the time that the last of the masters had thought that he needed her, it was already too late as Dakhete ended his existence.\n\nWith the passing of the last one who kept her in her sleep, she'd slowly found herself rising and working her way toward consciousness and it had taken a long time. Even for one such as her.\n\nMost of the building where she'd been kept had fallen in. It took a little effort in her weakness, but she broke the seals which held her and just walked out, a little surprised to be able to do it. She guessed that the seals had been damaged or, ... perhaps they'd faded somehow.\n\nIt didn't matter much, she thought, she was free.\n\nBut she'd never been a willing servant. Her servitude had been forced upon her and now, standing as weakly as she felt, there were things to do. The first thing was to find some kind of sustenance, and the next thing after that was to try to even begin to remember.\n\nWhen she had those things in order, then it would be time for her vengeance against those who had imprisoned her.\n\nHer family had been among the last, but that gave no one any right to pluck her out of her life and force her to do the things that she'd done in the name of another race of beings. She didn't know it, but by taking her out of the life that she'd known of scratching to find enough to get her through another day, they'd saved her. She would likely have chosen her death instead, but that choice had never been hers to make from the instant that she'd been taken.\n\nAs she walked, half-stumbling, but regaining more of the use of her limbs with each movement, the first thing which came to her was her name and who she'd been. \n\nRudhi Natheah, she remembered with a little satisfaction as she looked around. Her kind had once ruled their small world and she sought to find the others -- the warm memories helping her to seek, but as she walked further, she felt nothing returned to her. When she'd been brought here, she'd been able to feel them, even as far from her was they were. Now...\n\nNothing.\n\nPushing the thought from her, she spotted a few small creatures, rodents of a sort, she guessed, but she was hungry now and so they'd do. She sat down a little heavily in her weakness, leaning against a broken piece of masonry and the activity of the creatures stopped instantly. After a moment where they stood frozen in confusion, they began to approach her slowly. As each one came into the range of her reach, she picked them up and consumed them.\n\nIt was only the cruelest turn of capricious fate that had seen her people -- a world of them -- decimate their own numbers in the wars of their world. Because of that, she'd been forced into her servitude, when really, her kind would have easily ruled over the beings which had taken her away had her family been only a little more numerous. After all, her captors had been only blood-drinkers.\n\nRudhi's kind could do that and sometimes did, but to them, it was only sustenance and it had been rarely done. With nothing in her to sustain her for much longer, she didn't stop at only that, she consumed the creatures completely. After millennia with nothing in her gut, there was pain, but now it was only a way marker on the road to her recovery.\n\nWith a little food in her, she sat back for a time, remembering. She didn't know what had happened to cause her to be set free, but she wanted revenge now. When she thought of herself again, she looked at herself from outside of her body and decided that she'd weathered this rather well, considering. She'd never spent any time in the company of humans, barely knowing that they were here and she certainly knew nothing of their lives and how things were measured when one looked at them.\n\nShe didn't know it, but to them, she'd appear as a very beautiful female of at most, twenty-one of their years old. Her hair was long and coal black with the barest hint of waviness to it. The eyes which looked out from under her thin eyebrows were pale blue and her skin was a slightly warm alabaster tone in color. The only items of clothing that she wore were the small rings as piercings, one through each nipple and one through her navel to mark her among her kind as belonging to the house of the last rulers. \n\nShe decided that nudity wouldn't do for the moment, and so she thought back to the ruin that she'd walked out of not far off and tried to summon her few possessions to her. Nothing came and it confused her for a moment until she remembered that they all lay in her mind where she'd put them so long before to protect them from the passage of time.\n\nWith a thought, she wore the thin jeweled black leather collar of her family once more, and there were the thin leather thongs hanging from her nipple rings to indicate that she would one day be the ascendant queen. The thought pained her slightly, now that she knew that she was all that there was, and she wasn't on the world where she'd now have ruled over no one and nothing.\n\nShe looked down, feeling the high solid boots which added to her height now and her eye caught the gleaming blades which adorned them. It caused her to remember that she was first and foremost a warrior of the highest house.\n\nShe stood up and the thought of her cloak filled her mind for an instant until she felt it billowing around her, dark as night and silently crinkly against her perfect skin. She felt the thin covering over her sex and if she'd known that to many women on this world hundreds of years ago, what she wore as a piece of clothing was nothing more than a piece of underwear which they'd called a thong at the time, she might have laughed a little and nodded.\n\nBut she wasn't in the mood for that now.\n\nThe small bodice of soft leather hugged and cradled her breasts once more, but it hid nothing -- as was proper where she was from and her eye was drawn to her familial markings, noticing that they'd faded. \n\nEasily repaired, she thought and a moment later, they looked like the honors which they'd been once and a look from outside of herself again pleased her. Rudhi knew nothing of the one on the far side of this world -- a stranger here herself called Ksyusha, but they shared some abilities, and by pure coincidence, they also wore markings on their faces which resembled fangs that ended far down their cheeks, though the style of the markings were very different.\n\nRudhi knew nothing of this and likely wouldn't have cared a whit if she did. She looked at the back of her right hand.\n\nThe jewel was still there, gleaming softly from where it sat embedded into her flesh. With a thought and a movement, her left hand wore her war gauntlet, and she held her long, thin and cruel sword in her right hand. For the first time in a length of time that she was not even cognizant of, Rudhi smiled.\n\nIt caused her to look around after a moment as she came to the realization of what must have lain behind her awakening. The ones who'd kept her here were gone -- dead and gone -- and she was left here. She wanted to rage when she'd made the only possible deduction, but found that she couldn't.\n\nWhat she really had to do was find her way in this place somehow until she'd either found a way to exist here which allowed her to forget or she had to find a way to die. One or the other, and either one would require both time and strength for one choice, weakness for the other. It had taken however long she'd lain here to weaken her. Her own death was out of the question like this, now that she'd eaten even a little.\n\nSo she walked for a time in the moonless darkness, stopping when she heard the sounds of a little music. It was strange to her, but she knew what it was and looking around, she saw the wagons of a small group of migrants, pulled around their fires as they ate and drank and sang.\n\nRudhi wasn't evil -- well not what she would have considered the meaning of the word to mean as it applied to her, but she had begun to remember that she'd had lovers on her world -- two of them, promised to her when they'd all been infants. They'd discovered each other in the wars and had begun between them a little early. Those two males had meant everything to her, but that was long ago and far away now. \n\nShe needed something to push the memory back -- something or someone to make her forget that pain for a time. She saw the humans and decided that they were enough like her for what she wanted now. \n\nRudhi's lovely mouth pulled into a smile again as she looked. She didn't know it right away, but the smile revealed the fangs in her mouth a little. When she caught it, she decided that she ought to hide it for the moment, not knowing anything at all about these creatures.\n\nShe now felt several hungers at the same time.\n\nHer gauntlet faded and her blade disappeared as she walked down the slope in the direction of the caravan, a beautiful and barely dressed young woman who approached a little hopefully.\n\n------------------\n\nIn the morning, she lay sated -- for the most part, anyway. The humans either stood nearby, those who still could, saying nothing in their nakedness and only waiting to see if they'd be required once again, man or woman - or they lay dead.\n\nShe moaned loudly as her orgasm overtook her and a few moments later she decided that it was enough at last so she pushed the last male that she'd decided to use off her and rose to stand. They watched her, thinking little and feeling nothing. She stepped to one young woman and kissed her slowly, with care and a lot of feeling. \"Can you understand my thoughts to you?\" she asked with her mind so that no particular language was needed.\n\n\"Y-yes,\" she heard in careful reply.\n\n\"Good,\" Rudhi sighed, \"For the good of all, you will lead and no one here will interfere. I have made it so. My gift to you all for sharing yourselves with a traveler such as me for a night. With you leading, the right decisions will be made when they are needed. I have given you this for what you have done for me.\"\n\nShe looked around, \"These dead ones will need to be seen to. They were either very old or very stupid -- a hindrance to you in any case, and that is why I chose them to feed upon, blood and flesh, since I needed it. With these gifts from you all, I will not need this again for a long time.\"\n\n\"I ask one thing,\" the young woman said in her thoughts, \"Are we to become wampyri now?\"\n\nRudhi looked into her worried eyes, and she saw the fear of things which came in the night and had troubled the sleep of these simple people for generations. \n\nShe shook her head, \"I see what it is that you fear. I am not like this. There is the dawn and we stand in the full light of it already. I am not dead, my beauty. I was only hungry, and taking my fill this way sates me the fastest.\"\n\nShe walked away then along the pathway, not really thinking about anything and it was her mistake as she was swept up in a cloud of dust and blood and bodies, crazed demonic bodies. For a time, she had to fight to stay clear so that she could see what this was.\n\n-----------------------\n\nColorado\n\nHe was hunting, but not with any desperation to it or anything. They still had some meat left, but she'd told him that he ought to go and hunt for them, since she was feeling miserable and throwing up more than if she'd consumed something poisonous. He wasn't crazy about the idea, but he could take a hint, so he went.\n\nAt the moment, he was working his way along about the mid-slope of a large draw, wondering why he hadn't seen much in the way of wildlife for a little while. He knew that he wasn't the quietest creature in the woods, but he was quiet enough when he was hunting. There was no breeze, so it couldn't be that his scent was warning any of the creatures that he'd normally be looking for.\n\nBut then he heard it; something crashing through the trees a little, as though they weren't concerned about disturbing the wildlife or drawing attention to themselves. He stopped to listen and after a moment, he could hear that it was a someone, and that she was crying at least a little. He listened carefully and after a few moments, he saw the motion down the slope from him and a ways ahead.\n\nHe stood in some confusion and amazement then. It was a young woman crashing through on her way to the stream which meandered along the bottom of the draw. He didn't want to intrude, but ...\n\nAs he eased a little closer, wanting to know a little more and a little hopeful that the reason that she was upset wasn't too bad, he saw it as she came to the edge of the stream and his eyes almost left his head as he watched her. She threw off her coat and then her heavy boots went next as she sobbed, and it came to him then that she was more than upset. The young woman was angry as well.\n\nWhen she had her pants off and the bottom half of her was bare, she began to hiss from the discomfort and the cold as she washed herself furiously. He'd never seen anything like it. So upset, he thought and he wondered about the cause as he noticed that she was even speaking to no one in particular as she muttered angrily.\n\nHe realised that he was intruding and he turned then to be on his way quietly when he heard her cry out and before he'd even turned back to look, he knew that she'd fallen into the stream. He made certain that the safety on his rifle was on and he ran down the slope as fast as he could. As he got to the edge, she was already working her way out, but the freezing cold was sapping her strength severely.\n\nShe looked up and he could see that she was in a hell of a bind; in pain from the cold and already upset and whatever reason that she might have had to want to wash herself here had now become a situation which was life-threatening. For all of that, she wasn't happy to see a strange man here with her.\n\nShe couldn't even speak, she was so cold, but if she could have managed the words, he had no doubt that she'd tell him to stay the fuck away from her. He reached and grabbed an arm to get her onto the bank. She just began to cry again. He could see that she'd been doing quite a bit of that and that her lip was swollen.\n\n\"Stand here,\" he said as he leaned his rifle against a boulder. He turned back and he had her pants and her boots. \"Lean on me,\" he said as he knelt before her, \"You'll get your pants wet, but you need to have something on.\" She didn't move - other than her now-violent shuddering.\n\n\"Lean on me, so I can get your pants on you,\" he said and it was no request. After a moment, he felt her weight and he helped to get her legs into her pants. Her boots were next and she almost fell, but he stopped her more than once. \"Can you stand while I get you your coat?\" he asked looking up. The woman nodded, but it was a little hard to tell, she was shaking so much.\n\nHe was gone and then back in a flash, helping her into her coat. When he stepped back, she looked so forlorn, small and wet and freezing to death as she shivered. He held up his hand, \"I can warm you,\" he said, \"but you'll have to have a little trust because I'm going to hug you then. I promise that I won't harm you or anything. Miss, I don't know where you live, but unless it's even closer than a two minute walk from here, you're dead. This is serious here, do you understand?\"\n\nShe nodded, or it looked as though she tried to, and she tried to speak as well, but that would have taken more than the life that she had left to say, so he shook his head. \"Don't try to speak. I won't hurt you in any way. Just come here and hold onto me for a minute.\"\n\nShe couldn't even do that, so he stepped forward slowly and he took her into his arms. They stood like that for a couple of minutes and then he said, \"I need you to close your eyes and if you can do that, I can promise you that you'll feel a lot warmer really quickly and I still won't harm you in any way, but it's going to need your trust, ok?\"\n\nHe couldn't tell if she was agreeing or not so he just shrugged, \"I hope that you can bear this. I really do want to help you.\"\n\nShe noticed that his coat disappeared, along with the rest of his clothing. The young woman was horrified at what she was looking at as the man that she'd thought had found her turned into something which almost made her bladder let go. The only thing which prevented it was the look on his face. \n\nThe whole time, whenever she'd looked at him, she'd seen a young and rather handsome man. Considering what she'd been through just over an hour before, any man was about the last person that she wanted to see. But she did see the concern on his face.\n\nThat look didn't change, though the face sure did. She'd managed to reach her frozen hands up to hold onto him, but now it wasn't what she wanted. She couldn't feel much with her fingers and hands, but she did notice that the leather of the coat was gone, replaced by fur - warm fur. When he moved a little, she felt the muscles underneath the fur. \n\nShe looked up, and the rather longish soft brown hair was now really long and black. The nose was longer because his face was longer and there was a bit of a snout. The mouth that she saw before her was filled with rather long and cruel-looking teeth. She wanted to push herself away, and as she began the motion, she looked a little higher and she saw his ears, long and a little pointed near the tips. His skin had gone from a normal skin tone for a Caucasian to a dark and mottled sort of striped gray, and ... She almost moaned in terror. \n\nHe had horns as well.\n\nBut the eyes had changed then, and now the ones that she looked into were an incredibly light gray -- nearing white. All of that, she saw, but he still wore the same look of concern for her somehow.\n\n\"I'm sorry,\" he whispered, \"I know that you've got to be terrified. That's why I wanted to you close your eyes, but I guess it was too much to ask. I won't hurt you. Just try to hold still.\"\n\nHer terror was almost complete and she felt her knees want to buckle as she saw and felt his wings move, but an instant later, they were around her and she could feel the beginnings of a great deal of warmth from him as she sheltered inside of them.\n\nShe looked up from his large shoulder into his face and he smiled a little weakly. \n\nIt took her a few tries, but he knew what she was trying to ask. \n\n\"I'm a demon, obviously,\" he said, \"Anyway, if you can manage to believe me a little, I meant what I said. Are you beginning to feel a little warmer now?\"\n\nShe nodded very slowly, surprised at herself. She didn't know how this was possible, but she was losing her fear of him to a degree. \"How far away do you live?\" he asked, \"If you can have just a little more faith here, I promise to take you there and I won't come back. I just don't want to see you die of cold -- especially knowing that I can prevent it.\"\n\nTo her surprise, she told him in her stuttering, shivering way, wondering why it was that she felt so much better and how something that ripped people up could speak so well and smell so good.\n\nWhen she'd told him, he nodded, and, slinging his rifle over his shoulder, he picked her up and carried her to her home still as covered by his wings as he could manage it for her. It was only over the top of the rise and about a half a mile after that. When he set her down on her feet, he told her to make certain that she light the stove hot and live next to it for a few days, and to have a really hot bath if she could. He told her to take care of herself and he turned to walk back the way that he'd come. ",
        "She asked him if he had a name and he'd smiled as if it seemed a little funny to him that she'd think that he might not have one. He told her and then he'd walked off as she stood looking at his tail.\n\nShe stood in her doorway watching him walk and wondering about him. She had to admit that she'd never really seen a demon who looked like that, and from what she could see, she was even more surprised that she liked the way that he looked, though she stared after a few seconds as she watched him change back to looking like the man who she'd seen at first, clothes and all.\n\n-----------------------\n\nWhen he got back to where he lived, the one there smelled another female on him in an instant and she almost tore his eyes out in her rage before he'd even gotten the chance to tell of it. It was already after dark, and he didn't know it, but she caused it to rain in her anger. In the cold temperatures, that rain froze in seconds wherever it landed.\n\nHe drew back and touched the scratches on his face, looking at the blood on his fingers. \"I didn't do anything but try to help somebody, that's all. She fell into the stream and she was freezing. She'd have never made it to her home.\"\n\n\"Was she thankful?\" the female sneered, \"Did she let you fuck with her after that? Tell me where, and I'll make sure that she does not bother you when you hunt anymore.\" She grabbed him by the fur on his chest then and pulled hard, \"I am your female. Me.\" \n\nShe began to tell him what he would do and when as far as she was concerned, but she found herself on the floor holding a hank of his fur and watching him as he walked away toward one of the other dwellings in the empty community. She raised her hand and he turned, feeling what was meant before it happened.\n\n\"Do that,\" he said quietly, \"and you lose me. All that I've heard for weeks is how important it is that we are not the last of our kind. I doubt that you've considered the possibility, but I'm beginning to think that we don't belong here.\"\n\n\"But I love you,\" she said.\n\n\"And I love you,\" he replied, \"but we're killing that off nicely too. I helped someone who needed it, and you act like I was doing something that I shouldn't have been doing. Now you're talking nonsense as though I'm your slave or something. I've lived all of my life without you or that thing between your legs. If you think that I'm hopelessly tied to either one, ...\"\n\nHe turned and began to walk again, \"I'll see you in a day or so and we'll talk then. I figure that you have a whole lot of feelings and things coming up in you right now on top of feeling sick. Now isn't the time.\"\n\n\"Why?\" she asked, \"I am sick from your child. I am not losing control of myself.\"\n\nHe laughed, \"My child? Not yours at all? You were forced somehow and played no part?\"\n\nHe shook his head, \"Look at your hand. You stand there ready to throw your rage at me with your will. I know you enough to see that you are having such trouble with the last of your control. I understand it, as least I try to. You see nothing but yourself and what you think you want.\"\n\nShe tilted her head, \"What is it that you want?\"\n\nHe shrugged, \"I want the one back who loved me so,\" he said, \"the one who laid her heart out to me. I want to struggle to make her life better as she tries to keep her stomach down. I want to try to comfort that one.\"\n\nShe opened her mouth, but he was quicker, \"I don't want to hear accusations which are absurd. I don't want to be treated as though I am a servant who has done something wrong, and right now, I want to be alone. You're not the only one who is upset.\"\n\nAs he made up a bed of sorts to sleep on, he already knew that she'd be gone in the morning. It wasn't what he wanted, but her knew that as long as she was like this, there was no reasoning with her. It had happened before.\n\n-----------------------\n\nAs she sank into her hot bath, the young woman at the farm knew nothing of any of this. She'd locked the place down tight, but she was still afraid -- though not of the one who'd helped her. She relaxed into the heat of the steaming water, glad that she'd survived her ordeal, and feeling better for what had happened afterward when she'd gone to wash, knowing that even so, she had to be careful now not to get sick. \n\nIn a minute, she felt herself smirk. She didn't think that she'd expected something sinister out of him in a biblical sort of way, though she had been rather prepared to hear something difficult to pronounce with a ton of consonants. \n\nEven so, she thought, Billy was a strange name for a demon. \n\nThe next day, she felt better and the one after that, she was back at her friend's place, working to put together a short-term dream of hers. It was short-term now that it was nearing completion, but it was very important to her all the same.\n\n------------------------\n\nIt had taken a while and a little experimentation, but Rudhi learned that there were differences in the way that these demons who beset her flew and how she did. What she did was not really flying, it had much more to do with her will, and she could do it without thought or effort and certainly without any flapping. And there was another thing here, she realized.\n\nThey could only fly so high. She'd figured that out only after days of flying over the ocean. But after seeing land below her again and landing to learn what she could there, she found that there were demons here as well, and that for some reason that she didn't understand, if they saw her, they attacked her.\n\n------------------------\n\nRandi Farber shivered a little as she watched the rising fuel level through the filler in one of the fuel tanks on her big-assed pig. When it neared full, she turned off the flow with the valve and jumped down to hurriedly hang the hose up on the bracket which she'd fabricated that morning. It was a bit of grunting, but Randi got the hitch in place and kicked the frozen locking latch free so that it the fuel rig would remain hitched.\n\nShe looked around for a minute and wondered where Copper had gotten to. She hadn't seen her for a while now and out here, you tend to worry about your friends if you don't see them for a time. It had been almost a month. She shrugged after a moment and clambered up to shimmy into the hole over the driver's seat, heaving a little to pull the hatch shut over her as she did before she dogged it down tightly.\n\nShe knew that she should have been wearing her coat for this, but she was just so fed up and tired of winter. She was also not thrilled about getting her new coat smeared with grease -- and besides, with Copper gone, she'd had to do a lot of the final set-ups and checks by herself. Everything had been tested over and over. What didn't work was removed and replaced if there were spares, and if there were none, what didn't work had been repaired. Now it was time to see if all of that sweat was going to pay off. \n\nShe shivered a little, even though she was sitting on a fleece laid over the driver's seat. There was compartment heat available and she'd turned it on, but the metal interior would still be cold for a little while as the ancient machine warmed up for the first time in more than four centuries.\n\nRandi was a redhead and she had the classic temper which came with that -- once her fuse had been lit and had burned a little while. She stood about 5 feet 6 tall and she was a little slim. Her ancestry had been pure human and for a time, she'd been one of the girls that Copper and Luddy had hated back when they were all in school. But that was then, and even so, Randi had never been one of the ones who had poked fun at anyone who was a little different. It wasn't until almost the end of their time at school, but the three girls had become good friends by then.\n\nRandi and Copper had a relationship based on things which they each excelled at. Copper could brew up a batch of something which could make you forget your troubles right quick and Randi had long ago learned the way to make incredibly fine-tasting meat products - sausages and smoked roasts, mostly, which just went with Copper's talent. But producing what she did, and the heavy nature of that had always been a pain in the butt to her. \n\nShe didn't have a place to sell out of and hauling everything to sell in the market at the town was a problem in both directions. Meat products were heavy, and a wagon-load rolling slowly through these mountains tended to attract a lot of hungry noses. More than once, she'd had to cut the traces on her horses and jump up on one to leave her work to the bears and try to get away. The return trip was sometimes fraught with another peril -- men who wanted your money and almost always wanted your ass too.\n\nThat was when she'd seen what Copper had built up with her late father and Randi had gotten her brainwave. She'd wanted a Bradley too, but she didn't think that she'd need all of the toys, bells and whistles that her friend had. She'd have been fine with just a rolling, lockable frame and maybe a gun, though not the sort of thing that Copper had mounted. But after a lot of talk and a half a keg of Copper's brew, well, the two of them had looked around the place where Copper lived.\n\nBuilding up another Bradley would have removed a lot of usable spare parts for Copper so that was out. And whatever they did, it had to be diesel-powered. Copper had found huge tanks of the stuff buried in the ground on that base. There had been a lot of turbine fuel as well for the newer heavy tanks, but that had turned to jelly long ago.\n\nSo it had to be a diesel and Randi wanted something that a bear just couldn't get into and something where she could sit and laugh at the thieves as well. A long look around had brought them to a small number of older tanks in the reserve portion of the base.\n\nIt seemed that the farther back they walked in the rows of now-ancient armor in the storage buildings, the older the tanks got, but there were still a few in good condition.\n\nThe two friends decided on a couple of projects for the future; one old main battle tank for Copper to fool with and a lighter one as a solution to Randi's problem. There were a handful of very old Sheridans on the base, including a couple of well-painted gate guardians and out of that handful, they'd put together a working one. What she'd wanted was something that could get her and her produce to town and back in safety. \n\nWhat she'd gotten, well, ...\n\nIt weighed 'only' 34 thousand pounds and could travel over flat and level ground at as fast as 40 miles per hour -- if you didn't mind the way that your teeth crashed together over some of the bumps. But that didn't matter to Randi. She could ride with it buttoned up tight, safe within its metal shell, and though it had been meant to have a crew of four, it was drivable by one, and with a little practice, she could turn it into a thing to be feared -- by more than only her.\n\nIt had been made to do a lot of things but as with all jack-of-all-trades, it had turned out to be a master of none in actual service. Too light and small to mount a main gun which could deliver a kinetic energy penetrator to another armored target in a fight, it mounted a large 152 millimeter low velocity gun -- something which Copper referred to as a B.A.G. or 'Big --Assed Gun'. All that it could fire was High Explosive, Anti-Tank ammunition and canister shot, but for a longer reach, it could launch a Shillelagh missile through the same thick barrel. \n\nNone of this really mattered to Randi, she just thought that it looked too mean to want to tangle with it, though she did learn as much as she could about it all from Copper's manuals, just in case.\n\nRandi had learned about wrenching from Copper over the winter and now she sat getting warm in her M551A1 Sheridan light tank. She remembered how Copper was quick to tell her, \"It's not a tank -- not in the old books anyway, it's a 'reconnaissance vehicle' -- whatever that is,\" she'd laughed, \"Looks like a tank to me too.\"\n\nBy the book, it wasn't quite as quick as Copper's Bradley, but Randi didn't care about that either and today was the day to try it. She'd have waited for Copper a little longer, but she had meat to sell, so today was the day after getting herself fairly covered in grease as she'd lubed it up. Thank God that Copper had taught her how to drive the thing using an old tracked utility vehicle as a teaching tool.\n\nShe was a little lurchy with it at first, but she got the hang of it soon enough as she rumbled along happily. She sat there grinning from ear to ear as she went and slapped the top of the instrument console in front of her affectionately as she toned her voice to sound something like her mother's had sounded to her once long ago, \"Ooh, Momma just LOVES her little piggy,\" she laughed as she adapted a few new words to an old nursery game.\n\n\"This little piggy goes to market,\n\nSo that Momma won't have to stay home.\n\nThis little piggy hauls roast beef,\n\nAnd the bears and the robbers get none.\"\n\nShe rolled along until she came to a place where there was a wall of granite facing her across the valley. With a little squeezing and careful maneuvering, she was in the gunner's station and the turret transited smoothly to lay the barrel of the main gun on the face of the cliff four hundred meters away.\n\nShe loaded a HEAT round, hoping that it was still good after all of the time that it had been in storage and, making a small sighting adjustment as Copper had taught her to allow for the range in her rangefinder, she stuffed her ears with some small bits of rags and ...\n\nThe tank moved a little, the back end of the gun moved a lot and, rags or not, Randi almost jumped straight up out of the chair, remembering just in time to look through the viewfinder as the shell slammed into the granite wall. It made a bit of a mess over there, but ... Randi laughed. \n\nFuck the bears, she thought and fuck the thieves as well. \"Because THIS little piggy,\" she laughed to herself quietly, \"Well, this little piggy goes BOOM, BOOM, BOOM, all the way home!\" \n\nShe ran the breech through its fairly slow cycle and after a bit of careful grunting, she stuffed one of the missiles into the breech very carefully and stood there puffing for a minute. She hoped that it would work the one time that she wanted to try it. The damn thing weighed sixty pounds.\n\nThis time, it was only a matter of sitting and guiding the missile with a controller, and the mess that the thing made gave her a nice feeling, though the doubted that she'd ever use it for anything. She missed Copper now. It would have been a lot more laughter if they'd done this together.\n\nShe straightened the turret and began to motor along. She wanted to get home and start loading up for her trip to town the next day. Not having the big doors that Copper had was going to make loading this with her produce a challenge, but that was life, she supposed. \n\nShe hit the brakes a while later when she saw a figure step out of the bushes, recognizing the man who had beaten and raped her as well as robbing her twice before. The sheriff hadn't done a thing when she'd complained. More than anything, he was the reason that she carried a shooter on her hip these days. She supposed that he'd been the real reason why she was scared to death to ride through this valley and the underlying motivation to want to have this vehicle in the first place. \n\nHe held up his hand and it made her laugh a little when he commanded the thing to stop, by the way that his mouth was moving, though she was sure that he couldn't see her as she watched him through the bullet-proof glass of the small driver's periscopes. She kept going slowly and he scrambled ahead out of the way, but she saw him draw his pistol as he backed up yelling that whoever was in there had better stop or he'd shoot.\n\nSo Randi stopped, and she could hear his shots from outside faintly. \n\nShe'd stopped and he'd still fired. \n\nRandi revved the engine and lurched forward as the thief began to run and Randi allowed it, wanting him out of her way. She had no intention of wasting one of her shells on his ass. \n\nThough it was a nice thought, she smiled.\n\n\"Fuck you Mister, and you have a nice day now,\" she smiled. She had a scar on her lower lip from his ring when he'd hit her six months ago and she still had nightmares, but at least she was still breathing and she hoped that now he'd never bother her again.\n\n\"Yea, though I drive through the valley of the shadow of death,\" she smiled to herself grimly, \"I shall fear no evil -- because I've got a seventeen ton dick.\"\n\nThere was a shortcoming to all of this, she realized after a few more miles. This was comfort, she thought, this riding around in her new rolling home away from home. Now she understood what Copper had been blathering about to her all of those times. Oh, she'd gotten it before all of the work, but now as she swayed and bounced along slowly, she finally knew real protection and personal safety. All that it needed was one of those 'Home Sweet Home' knick-knacks on the wall, she smirked.\n\nBut she didn't have one. It wouldn't really have mattered if she did; there wasn't enough blank wall space in here to hang one up -- and there was another thing that she didn't have, she realized a little sadly. With the way that this rolling hunk of steel bobbled and bounced, she realized that she didn't have a piss pot -- and she really needed to go.\n\nThen she remembered the hatch in the floorpan in this compartment. She rolled to a stop and climbed up into the turret, traversing it in a 360 degree circle to see if there was anyone out there. Seeing no one, she slid back down and went forward to open the emergency escape hatch. She took a quick look-see with her head hung down before she squatted over the opening and went.\n\nWell this was nice, she decided, but as time went on, she became aware of a change in the ambient sounds outside. She could hear the rumbling and quiet clattering of the 300 horsepower Detroit 6-cylinder supercharged diesel engine, and she could hear the hiss of her urine, but as the seconds went by, she could hear a rising sound, like wailing or, ... screaming.\n\nShe finished hurriedly and slammed the hatch shut, dogging it tightly before she jumped up and scrambled back to the turret. As she swung it around, she saw something that caused her jaw to fall open.\n\nThere was a dark smudge out there, downslope from her. It wasn't large, but it was moving uphill through the air close to the ground on a path which would take it past the front of her vehicle, and it seemed to be completely oblivious to the cloud which was chasing it or, ... well that's what it looked like to her. She stepped up the magnification and the smudge turned into a woman in a black cape, flying slowly up the slope somehow and not seeing the , ... Randi groaned.\n\nDemons. \n\nA whole great big flock of the things that the woman was about to be overtaken by. Randi had heard tell of these strange flocks and how they moved over the land, but that there now seemed to be more of them than ever before and the flocks seemed to be getting larger as well. She didn't know anything about the woman, who seemed to be able to fly somehow, but if they caught up to her and she just sat in her shelter as it happened ... she didn't even want to think about that.\n\nShe looked around the panels in front of her and found the switches for the smoke grenade launchers and fired one of the six of them attached to the outside of her turret -- a holdover from a time when vehicles like hers could hide themselves in clouds of thick smoke though Copper had told her that thermal imagers had negated any benefit. She turned and scrambled up to open the commander's hatch on top.\n\n\"HEY!\" she yelled as she pointed, \"Behind you!\"\n\nShe saw the woman look back at what pursued her, but her head snapped around to look at Randi, who knelt on the turret and beckoned to her frantically -- all the while asking herself if she was nuts. It would have been a little funny in a strange way to Randi -- as the woman turned to see what followed her, she'd said a few words to herself and though Randi didn't understand what was said, she just knew that somehow 'What the fuck?' was in there somewhere.",
        "\"Come on!\" she called out, \"Over here!\"\n\nThe fugitive put on a burst of speed and amazed Randi as she flew toward her. Randi pointed down as she yelled, \"Down in here, all the way down -- hurry!\"\n\nRandi didn't stop to think about anything too much, other than this woman was amazingly beautiful -- and another thought which came to her was a little disconcerting as she knelt there with thick smoke beginning to billow up around her. The woman had seemed to just flow down through the hatch like smoke herself. But there was no time to think about much of anything now as Randi scooted her legs into the hatchway and clambered down, stopping only long enough to close the hatch and dog it as the outline of her tank became invisible in the qualms of thick, stinging phosphorus smoke.\n\nShe was coughing a little by the time that she stepped past the woman, \"That was close,\" she said as they heard and felt a few impacts against the outer hull, \"I hope they give up and move on,\" she said over her shoulder, \"I've got way too much shit up there for them to break off.\"\n\nShe turned on the thermal imaging as she slewed the turret sideways and saw that the cloud of creatures had moved away a little back down the slope to where there was no smoke.\n\nShe heard words then, \"That is the third time in four days,\" the woman's voice came to her, \"the second time, they took me out over the water -- hundreds of them - and it was all that I could do to defend myself. It took long over a day. As I slew the last four, I was over land again. I have fought many enemies at once before, but I do not know the ways of this place very well yet and I am not strong yet either.\"\n\nRandi thought that from the way that it had sounded, this woman had been chased out over one of the larger lakes in the area. She thought about it a little as she turned and stepped around the woman, looking for something in the ammunition rack.\n\n\"What is it that you search for?\" he heard from the woman. \n\nRandi pointed to the small monitor, \"Take a look. They're moving away a little, but I think they'll turn around and come back. I just want to find a beehive round. They're supposed to be good for this kind of thing. I'm sure that we put a few in here.\"\n\nFinding one of the four that she had aboard, she hefted it and stepped to the gun, hitting the 'OPEN' button. As she breech whined open and down to receive the round, she stuffed it gently inside and hit the 'CLOSE' button and the breech began to close.\n\n\"Excuse me,\" she said quietly as she gently pushed her companion aside a little, and she centered the reticule over the now-returning bunch of demons as her guest looked over her shoulder. As she made minor adjustments, she hoped that this would work and in spite of herself she looked a little carefully for a moment.\n\nAs hard as she stared, she couldn't see even one demon there who looked even close to Billy.\n\nShe slapped the button to fire the gun.\n\nThere was an exclamation of surprise from the woman as the gun slid back in recoil and the canister shot roared out of the barrel on its way. A millisecond later, a secondary charge ignited and released the hundreds of fleshettes -- small steel darts which flew downrange toward the cloud of demons, whining as they went. Neither of the occupants of the Sheridan heard it, but the sound was the reason for the name of the round.\n\nRandi hit the button to open the breech again and a little acrid cordite smoke filtered back toward them from it. She found the switches marked \"NBC VENTIL.\" and turned them on. She hadn't really understood what they were for, but she knew from her reading that the system pressurized the interior of the hull slightly. She loaded another round and closed the breech.\n\n\"You-you have slain most of them!\" the woman exclaimed, \"What was that?\"\n\nIt was true. The ground was littered with the torn bodies of the dead and the dying. The rest were regrouping, but they began to head off in another direction. \n\n\"That was a beehive canister,\" Randi said, \"It's for when you're looking at a lot of things coming at you -- like people or ... demons. It rips them up with little arrows. I've never used one before, but I sure like it now,\" Randi chuckled as she looked for bodies which were moving and she began to shoot them with short bursts from the coaxial machine gun. \n\nWhen nothing moved anymore, she slowly turned from the imager and realized that she hadn't been able to understand what this woman had said in her first exclamation, but she had understood everything since they'd come down inside -- and the more that she thought about it, the more certain she became that she had actually not really heard anything. She reached for her pistol, but found that it was gone. A hell of a time to lose it, she chided herself.\n\nWhen she looked up slowly, she saw the woman smiling at her as she held out Randi's shooter, \"You lost this as you carried the thing that you placed in there.\"\n\nRandi stared as she took the weapon. The woman's lips hadn't moved and she could see the fangs in that smile -- though oddly enough, it looked to be a very friendly and thankful smile to her, all the same.\n\nRandi turned her head and stood looking at the screen again as she slid her pistol back into its holster, knowing that if she was right in her surmisal, she'd done exactly the wrong thing to offer this vampire a little safety. In doing it, she'd been a trusting fool again and it was now very likely going to cost her about the last of what she had -- besides this wonderful toy that she'd bolted together with her friend Copper, she thought that her unremarkable life was down to about its last minute or so.\n\nRudhi stood waiting for her companion to say something. She'd have minded a lot more, but this was the first moment that she'd really had to look at this girl who lived in the most amazing contraption to her.\n\nThe young woman had bright red hair, tied back as it was a little crudely. It was surprising to her, but everything about her was a little rough, just like her hair had been tied, and yet -- she seemed so lovely this way. Rudhi admired that face and the body beneath it. The girl wore heavy fur-lined boots and her pants were tucked into the tops of them, slightly dirty and torn in a few places. She wore something which looked like a wide leather strap around her bare right upper arm and it was adorned with a few bits of bright metal which caught the dim red lighting in here. Her other upper arm carried a few thin leather thongs and she could see several thin silver bracelets on one wrist.\n\nHer breasts were neither large nor small, and to Rudhi's eyes, they looked as though they were perfect on her, held and completely covered inside a short bodice of rough leather and laced together up the middle with a thin pair of straps over her shoulders. Looking a little lower, she saw that the pants had no waistband and were worn very low on her hips. \n\nShe smiled a little; she could even see the outline of her cleft in the material and the top of her pubic hair was peeking at her over the top of her pants -- right there next to a small marking of some sort in her skin just above where her thigh met her body. There was also another thin thong of leather around the girl's slender waist and she wore a stud through her skin over her navel. Other than another marking in the skin of her upper left arm, the rest of what she saw were smudges of thick and dark jelly -- some sort of lubricant for this machine, she surmised.\n\nRudhi had lain with females before. Where she was from, there were too few available partners of any sort as their days came to an end. To her, it had always only been another source of pleasure to be had, though in her heart, she preferred males to mate with by a fair margin. The thought reminded her of her two males, now long dead and gone, she guessed.\n\nShe felt a little of this one's sadness and hopelessness as she considered her end and when that came to Rudhi, she was a little upset by it. \n\n\"Why are you so ... sad now?\" she asked in her mind, \"You have done me a great kindness here, and I was hopeful to have made a friend in you maybe, but now I feel that you think that you will die now, or soon. I think that there is a mistake here, and I wish to know why.\"\n\nThe green eyes which flashed a little as that face turned to regard her almost took Rudhi's breath away. She'd seen only a few humans from this close up and though the girl who had pleased her a few nights ago was nice to look at, she was nothing in comparison to the beauty who stood before her now.\n\n\"It took me a while,\" Randi said slowly, \"I was just too busy, I guess, but I've just noticed that you can speak to me and make no sound. I've also just seen your teeth. I'm an idiot, I guess, but I've just saved a vampire. I don't know all that much about them, but I guess that you'll want to kill me now. I hope it doesn't bother you too much, but I'm not real happy about that.\"\n\nRudhi shook her head, \"I only speak this way so that I can make myself understood by you. Neither of us knows the speech of the other. I hear your thoughts as you speak, but the sounds that you make? Well they sound good to me, but I understand nothing of it. If I were to speak to you, it would be the same for you. Like this, we can talk.\n\nI am no blood-drinker -- though I have done it when I have had the need, but I have no bloodthirst. A few days ago, I killed a few humans, but that was because I had not eaten anything in so very long. I could have eaten other creatures, I suppose, but those ones were there and it was an easy way to fill my belly in my weakness. None of them suffered. \n\nLook, it is daytime. What you think cannot be here now. And those things are dead, no matter what they might tell you, while I am not. I am only something else, brought here long ago and left forgotten. I have only just awakened a few days ago, and now I wander here and seek to find a way to live, knowing little if anything of this place.\"\n\nShe looked sad then, \"You have been kind to me, and I think that you do not like what I am. I am sorry for this, but I have no desire or need to harm you,\" she tilted her head, \"Why would I, after what you have done? I can defeat the demons easily, but I have not recovered my strength or abilities yet as I try to remember -- and every time that they overtake me, I am not prepared.\"\n\nShe looked around for a moment, \"Please show me the way out of your home and I will leave you. A face like that should never look as sad as I see now.\"\n\nRandi had been taking her first good look at the other one as she'd spoken. What she saw astounded her in many ways. If she was lost here -- or as lost as what this woman was telling her, she didn't want to think about going around dressed as scantily as what she was looking at. \n\nRandi wasn't very attracted to anyone at the moment, and she really hadn't been since the last time that she'd been raped and had crawled off to hide herself away again. She didn't know what had happened to her friend Copper, and she'd have been amazed to learn of her relationship and love with a demon of all things -- and a female one at that.\n\nRandi had never had the slightest inclination to be attracted to women, though she had to give this creature her due. If there ever was a female that Randi would have looked at and seen beauty in the purest sense, then she was looking at it now. She still wasn't attracted to anyone, but she found that she could stand to look at this girl and like it.\n\n\"So you're not going to kill me or suck my blood out of me or anything like that?\" she asked a little cautiously.\n\n\"No,\" she heard the thought in her mind, \"Why would I kill someone who I hope for as a friend to me? I have no one here. I hoped that I could learn from you. I would do anything that I could for you for what you did for me.\" \n\nShe sighed heavily, \"I do not even know your name, but I tell you that I ache to know someone. I was a high one where I am from, long ago. I was proud there, but I was taken far from there by blood-drinkers and kept asleep. They are gone now and I cannot go back, and even if I could, everyone there is dead now,\" she pointed to her breast, \"I feel this. There is no one left, and I am alone here, far from my home.\"\n\nRandi didn't know why, but she believed what she heard. \"I'm trying to understand why you're telling me that I'm safe when you just got done telling me that you killed and ... ate some people? Why did you do that? And how can I be safe?\"\n\nRudhi thought that she could understand it, so she just said gently, \"Try to think that I am not from here -- anywhere on this world. I come from another place. What we were there long ago hunted others for food -- and I say to you that what we were when I was taken from my home was a little different, but our beginnings remain with us. \n\nI awoke after ... I do not know how long it was that I slept, but I remember the city there, full of life and humans, though I was not permitted to speak to one or even go close enough to look, really. When I awoke a few days ago, the city was ruined and there was no one there. So much time must have passed. I had to eat, and so I ate some small creatures, but there were not many, and then I found some humans. I am not what you are, but you are the same as me in some ways. \n\nWhat you began as also ate meat. I can see this by your teeth, several of the front ones, anyway. She sniffed a little and looked at a knapsack in the corner, \"What is in there, please?\"\n\nRandi shrugged, \"Just some ale and a little ... meat on some bread.\" Randi's eyes opened a little, \"I think I see what you're saying. We still eat meat, though we don't just push a cow over and start to gnaw on it.\"\n\n\"What do you do to it then?\" Rudhi asked with a slightly challenging smile.\n\n\"We -- we uh, ... we kill it and butcher it to cook over some fire later,\" she looked up then, \"Please don't tell me that you cooked up those people ...\"\n\nRudhi shook her head, \"No. In only minutes, I found that humans are a little too close to me to do that, but I had hunger, so I ate.\" She looked at the knapsack again.\n\n\"Alright,\" Randi said, \"Around here, when we try to meet somebody for the first time, we hold out our right hands and hold onto the other one's hand for a moment, \"She held out her hand, \"My name's Randi Farber. What's yours?\"\n\nRudhi looked at the hand for a moment before she grasped it, \"I am Rudhi Natheah.\"\n\nRandi learned what she'd set out to know. Rudhi's hand was very warm to the touch. When she let go, she grinned, \"If you're hungry now, well, I'll share my lunch with you -- seeing as how we're the same in at least a couple of ways.\"\n\nRudhi nodded with a hopeful smile, so thankful not to have lost the chance to know someone. Randi opened her knapsack and shared her sandwiches and ale as they sat together. Rudhi was surprised at how good they tasted and she said so before she looked over and smiled as she watched Randi laugh a little.\n\n\"So really, your name is Rudy?\"\n\n\"Yes,\" Rudhi nodded, \"why do you smile like that?\"\n\n\"Nothing really, \"the redhead grinned, \"I just like our names, Rudy and Randi.\"\n\n\"Where were you going in your home here?\" Rudhi asked.\n\n\"This isn't my home,\" Randi replied, \"This is just my new wagon, I guess. I prepare meats like what you're eating. Taking it all to market and getting back home with the small money that I get from selling it has always been trouble for me, but it's what I can do well.\"\n\nRudhi asked why it was so difficult and after listening to Randi tell of some of her experiences, Rudhi grew a little angry as she thought about it.\n\n\"I have only been here a little while, and I know you for less than that, but I will help you if I can. No one will steal from you again or hurt you. When do you go to this market next?\"\n\n\"I was going to go tomorrow,\" Randi said, \"If you want to come along, well, I could use some help loading and unloading everything in here.\" She didn't know about the rest, but Randi found herself liking Rudhi now and help was always welcome. \n\n\"We're gonna have to find you something else to wear, though. Dressed like that, we'll have all the men hanging around, but their women sure won't be happy and they're the ones who buy the most for their families.\"\n\n\"What is wrong with how I am dressed?\" Rudhi asked, \"This is proper where I am-\" \n\nHer eyes opened a little wider, \"Ah, you try to tell me something. Alright. Is this better?\"\n\nRandi almost dropped the jug of ale. Except for the piercings and her eager to please smile, Rudhi was naked.\n\n\"No,\" Randi laughed shaking her head as she admired what she saw, \"I mean that you need to be wearing more, not less, Rudy. I've got some clothes at my place that ought to fit you. We're not far from being the same size, I think. Why do you have those little rings there? And what are the leather uh, strings there for?\"\n\nRufhi looked down at herself, guessing that things were done a little differently here and remembering that the humans that she'd met in the caravan had been wearing a lot more than she'd been, now that she thought about it.\n\n\"The rings are to show something,\" she said, \"I did not think it too unusual -- you have something here too,\" she pointed to the stud in Randi's abdomen, \"Where I am from, it shows that I am of noble blood. What does this show here?\"\n\nRandy shrugged, \"Nothing, I guess. I just wanted it.\"\n\n\"You are wearing more than I am,\" Rudhi said, \"but you do not cover yourself that much more, Randi.\"\n\n\"Very true,\" the redhead nodded, \"But this is the way that I like to be when I'm alone or with one of my friends. In town, I wear a lot more than this. People are funny there. I just like my body and it feels good to me to be like this when I'm alone. Sometimes I don't wear this much, but only if I'm alone.\"\n\n\"Where I was,\" Rudhi smiled, \"this was the way that females went. I am the same as you, I think. When I am alone, I feel best with little on me, so long as I am not cold -- like I was outside.\" She looked up, \"I should put the other things back?\"\n\nRandi laughed, \"If you want to, Rudhi. I don't mind looking at you like this -- or that other way, since there's not all that much difference. But you didn't tell me about the other rings and everything. Here, I guess that it means that ... well, I don't rightly know what it means.\"\n\nThe dark haired woman looked down at herself a little uncomfortably, since it was becoming obvious to her that things were very different here. \"Among us, these say that I was to rule one day, \"she sighed, wondering if she ought to feel shame or something, \"and also it shows that I like a little pleasure if they are tugged very gently. They feel nice if they move a little.\" She waved her hand and the thongs were gone from her nipple rings.\n\n\"Well I think that they looked kind of nice,\" Randi said, \"so if you want to wear them, I sure won't mind.\"\n\nThe rings and thongs were back in a moment and Randi nodded, \"Yeah, I do like that better on you, but they scare the heck out of me in a way.\"\n\nRudhi tilted her head, \"Why?\"\n\nIt caused Randi to laugh quite a lot, but when she settled down, she smiled a little ruefully, \"Because I know myself pretty well, I guess. I think that I actually love seeing those on you and it's pretty different for me to admit it to myself, never mind to another person. But I could never wear anything like that. I know I'd just get them caught in everything and hurt myself.\"\n\n\"Ah,\" Rudhi smiled, getting it, \"I get them caught as well sometimes, but if I must be a little careful ...\"\n\nRandi grinned when she saw that the thongs were now tied together, from one nipple to the other. \"I'm glad that I met you,\" she nodded decisively, \"Come on, Rudy,\" she said as she moved forward. She took the fleece from the driver's seat and laid it carefully on a gearcase nearby. \"Can you please sit here for a while as I drive? You'll need to watch your head, but the fleece here will keep your butt clean from the grease on this thing here.\"",
        "Rudhi sat down and her eyes opened a little as she looked over, \"This is very warm! There is heat coming from this around the skin here.\"\n\n\"Uh-huh,\" Randi laughed, \"and that's the other reason for the fleece -- to keep your ass from getting burned. That gearcase will get hot in a while.\"\n\nRandi was about to put the vehicle into gear when she looked through the periscopes at the mirrors that she'd put on the \"fenders\". They stood up about a foot and a half on metal frames and they were there to keep an eye down the sides and toward the rear. She saw a motion in one of them and hissed. \"It's that bastard again. I thought that I ran him off a long way back, but I guess he's got a stubborn streak as well as a tiny brain.\"\n\nRudhi thought for only a moment, \"He is the one who hurt you.\"\n\nRandi looked over, \"Yeah, how did you know that?\"\n\n\"When we like someone, we feel much from them,\"Rudhi said, \"How do I get out again? I will make sure that he causes you no more hurt.\"\n\n----------------------\n\nThe man was sneaking down the side of the thing carefully with his pistol in his hand. He didn't know anything much about it, but from what he'd seen it do to a cliff of solid rock, he thought that it was something that he might find a use for. He just needed to get inside and force whoever was in it to teach him a little before he killed them and drove off. He figured that it would be perfect to use for making a large withdrawal from the bank.\n\nHe stepped away a little as he heard and saw the hatch on the top of the thing fly open. Something dark and transparent shot upwards out of it and was gone. He couldn't see it anywhere, but he knew that he now had his way in. He took one step and the thing was back -- right in front of him now, and the shape of it became ... he couldn't believe his eyes. He was looking at an incredibly beautiful - and naked - woman right there in front of him, but his appraisal took a downturn when she smiled and he saw those teeth.\n\nHe raised his shooter and began to fire as he tried to scramble backwards to get away. Every time that he pulled the trigger, she was somewhere else and he heard laughter. He went through six shots in no time and threw the pistol as he ran back to his horse and pulled his rifle from its scabbard, but she was on him then and the rifle fell, swept aside with no effort from her.\n\nShe grabbed him by the throat then and it seemed a little ludicrous, since he was taller than she was. But those were his last thoughts for a time. He fell to her feet in a heap, unconscious and forgotten for the moment as Rudhi flew back to the idling machine with her heart in her throat.\n\nShe'd felt it as something had happened to Randi.\n\nEven though she'd told the redhead to remain inside the vehicle, Randi had climbed halfway out of the hatch. Now she lay sprawled half off the turret and there was blood seeping out from under her on the paint.\n\nRuhi was there in an instant and turning her friend over, she could see that somehow in all of the shooting, one bullet had found the only person that she knew here -- the one that she was so happy to have found a friend in only minutes before. Randi's eyes opened and she coughed a little and Rudhi could see by the brightness of the blood that she'd been hit very close to the heart and since it was coming out of her mouth, it must have hit her esophagus as well.\n\nRandi coughed again, \"I guess I'm ... too nosy for my own good.\"\n\nRudhi gave quick and careful thought to everything and she sobbed a little in desperation, but she came to an idea several times as she thought furiously. Each time that it surfaced in her mind, she discarded it and sought for another way, but one after another, the other thoughts fell apart in her mind for one reason or another. By the time that she was down to the only thing which remained, Randi had lost consciousness again.\n\nRudhi didn't know what to do, but she decided quickly to act in the only way that she knew would work, knowing that she might not get much in the way of thanks for it if she was successful, but then, if it was really unwelcome, she had an answer for that too and she'd give Randi the way out then. She untied the bodice quickly and pulled it open wide, looking down at a pair of perfect breasts that she couldn't bear to think about being dead.\n\nRudhi thought about herself for a moment, and concluded that she had this to spare by a small margin, so she placed her palm over the wound. Things went in both directions after that; the bullet slowly lifting free and being drawn to the surface, and a lot of Rudhi's life force moving in the opposite direction into Randi's breast. The flow of heart blood stopped in a second and Randi's blood pressure began to increase a little as Randi went from feeling herself drift away down a long deep well to suddenly being caught in the fall and pulled back up.\n\nRudhi kept her hand on Randi's breastbone, only taking it away for a brief instant to pluck the bullet as it rose through the surface and set it aside before placing her hand back gently -- as quickly as she could. She looked down at that face and decided that for the first time in who knew how long, this was someone that she didn't want to see leave her life and it felt good to her to feel determination once more. She began to press down on Randi's chest as much as she dared, not wanting to crack the already damaged cartilage which she felt underneath as she opened her mouth to place her lips over Randi's.\n\nAt the first breath, Randi's eyes flew open and she coughed up more blood. Rudhi was prepared for it and took it, being what she was and she replaced it quickly with another breath as her hand moved slightly in patterns now over the bullethole which was already closing.\n\nThe stricken young woman gasped and inhaled deeply, not understanding how she could -- with Rudhi's face there and her lips over her mouth like this, but every time that she did, she got air as she listened to what rushed into Rudhi's nostrils for them both. She felt pain at first left over from the gunshot, but it passed quickly, and though she felt less pain afterward, what she felt was heat -- searing heat in her chest. Her breastbone ached a little from the injury and the pressure and her mouth hurt somehow in a way that reminded her of having a toothache.\n\nThe deed was done in another minute and Rudhi pulled back to look at Randi with worry and concern for a moment as Randi struggled to try to feel if she was really here and if she was still dying or not and if not then why not and what the hell had just happened here and what the hell had this girl just done here and ... \n\nRandi found that she could move her arms and she reached for Rudhi, who suddenly looked so relieved. \"What ... happened to me?\" she whispered.\n\nRudhi stared and would have answered, but right then, she did something that she knew that this girl wouldn't likely appreciate very much, but she didn't care. Rudhi kissed Randi very softly for a moment and then pulled back. \n\n\"I am sorry,\" she smiled a little ashamedly, \"I am very happy that you live.\n\nSomething from his weapon hit you and you were dying. I thought of only one thing that I could do which I knew would save you.\" She looked a little uncomfortable then, \"There was no way that I could ask, and so I acted. The thing that was in you is gone,\" she said in her thoughts as she looked away and down. She lifted the bullet and held it up before Randi, \"This was in your heart. I have removed it, obviously, and I have healed you, but, ... Randi, you may be very angry with me, because I may have done the wrong thing.\"\n\n\"What. ... what do you mean? I remember tasting blood, ... and ... that you -- \" \n\nHer eyes widened, \"You sucked in the blood that I coughed up!\"\n\nRudhi nodded, \"I told you that I could drink blood. I did it because it was more important to me that you get another breath and I wanted to waste no time in spitting it out, so I swallowed. Randi, I was not feeding on you. I never would. I ... I let you feed on me in a way. I pushed some of my life into you.\"\n\nShe looked very uncomfortable then as she thought, \"I gave you some of my life and I healed what was done.\" She looked away then at the gray sky and the land around them, \"It does not come purely.\"\n\nShe looked down again at the girl in her arms, \"It comes with some of me in it. You may not want this and if I have done wrong, then tell me and I will ease your life away if it is what you want instead, but I could not ask before.\n\nYou were a human and you are still that,\" Rudhi said, \"You are not dead, and I am so happy to see this, but you are also a little like the one who gave this to you now.\"\n\n\"What does -- what does that mean?\" Randi asked, \"You told me that you're not a vampire.\"\n\n\"No,\" Rudhi said, \"I am not. But in some ways I am a little like them. Until now, you had your life inside you. Like all of your kind, you have needed to keep it there by eating and drinking. This has not changed, but now, some of your life is from what I am. I need to eat as well, but it is not enough to keep my kind alive, and so sometimes I need to take life from other creatures -- and it does not matter what they are, so long as there is life for me there. It does not happen often, but it does happen. I would not have needed to do this again for a long time, but now ...\"\n\nShe looked down, \"And you will need it in just the same way now - unless you wish for me to take it back so that you can die.\"\n\n\"I don't want to die,\" Randi said in little more than a whisper as she shook her head, \"I can feel something in me now that's like being hungry -- but I just ate a sandwich.\"\n\n\"Not the same and not enough,\" Rudhi said, shaking her head.\n\n\"What do I do then?\" Randi asked, \"It's getting worse. How do I make it go away?\"\n\n\"It will never go away,\" the other one said, \"just like the hunger to eat; it only hides until the next time. You can take what you need from another by only your touch on their flesh. I am sorry,\" she said,\" It was the only thing that I could do to help you.\"\n\nShe looked at Randi with a good deal of guilt on her face, but Randi smiled then, surprising Rudhi, \"Thank you for what you did, if I was dying. So, I'm not dead, right? I don't feel dead or anything. Actually, I feel pretty good, except for that hunger.\" \n\n\"You will gain strength and live longer,\" Rudhi smiled a little.\n\n\"Well, this is going to be weird anyhow, no matter what, I guess,\" Randi said, \"But, ... \"she sighed a little, \"I don't know how to say this, and Rudhi, I don't know if you can understand it, but, ... well, I've never been real big on girls. Now, I'm still not. But I've found somebody that I like an awful lot and I know that you've just saved my life. Thank you.\"\n\nRudhi smiled with obvious relief, \"I was so afraid that you would be angry. Was that all that you wanted to say?\"\n\n\"Yes -- I mean -- no, I ... well, could you kiss me again? Just one more time? I really liked that.\"\n\nRudhi smiled and kissed Randi again and the redhead even giggled a little as Rudhi licked way the blood which was on her chest afterward, but it ended when they heard the man get to his feet and look around unsteadily. Seeing them, he began to run for his horse. He had a lot of trouble getting into the saddle and almost fell off in his shakiness, but he managed to get the beast turned around and galloping.\n\nRandi had been watching and she sat up as Rudhi allowed it, \"I want him.\" Randi said. \"Am I going to get his shitty habits?\"\n\n\"No,\" the dark-haired one replied, \"You got life from me. From him, ... it is only like food that you need.\"\n\nShe was alone an instant later as Rudhi became the dark streak once more and took the man clean out of the saddle. He fought and kicked, but it was to no avail. Rudhi only smiled as she held him fast.\n\nHis eyes were huge with fear as he saw the redhead walking to him with her bodice hanging open, She was looking far more confident than he'd ever seen her before.\n\n\"Remember me?\" Randi asked, \"You took my money and you kicked the shit out of me.\" Her hand flashed out faster than she'd have believed possible and she almost broke his neck as she slapped him. The man began to cry past his dislocated jaw.\n\nShe grabbed him by the throat as she spoke around her new and slightly longer teeth, \"You fucked me. You fucking RAPED me! And then you beat the shit out of me again, just for fun -- just to see me cry and beg. I pissed blood for a week, you ASShole! \n\nWell now it's my turn.\"\n\nShe lunged for his shirt and tore it clean through, leaving red lines and bruises behind. As he tried desperately to fight, she raised the thumb under his throat and he began to choke, but he hung motionless and still as she placed her palm over the middle of his chest.\n\nHis eyes bulged in horror as he felt his life leaving him. The eyes there sunk into his darkening face and when she let him go to drop onto the ground, he was a dead husk.\n\nRandi stood with her eyes closed as she began to feel better. \"Just tell me,\" she thought quietly, \"Am I a ghoul now?\"\n\nRudhi thought for a moment as she tried to understand the word. \"No,\" she said at last, \"As I take the meaning from you, it means someone who eats the dead. And before you ask, you are not hungry because we ate those ... sandwiches.\"\n\n\"I didn't leave anything for you,\" the redhead said suddenly, \"You helped me and - \"\n\n\"Listen now,\" Rudhi said as she put her arms around Randi, \"You seek to find words for this which I do not know. You wonder about the teeth in your mouth. You can hide them. You cannot change what you now are, but you can change how you appear a little. You will use the teeth at some time when you need food as well as the life. You do NOT need to feed on only humans. You need to turn around and go back to your machine.\"\n\nRandi blinked, \"Why?\" and the other one rolled her eyes and pointed without looking, \"The animal that he rode will be enough for me.\"\n\nRandi watched anyway as Rudhi flashed away toward the steed and a moment later she came back while another husk lay forgotten behind her. She handed Randi the man's weapons and his saddlebags. After a look and the quick removal of two boxes of ammunition for each one she threw them into the weeds.\n\n\"We will not need this for a time now,\" Rudhi said and the two walked toward the idling tank."
    ],
    "authorname": "TaLtos6",
    "tags": [
        "supernatural",
        "magic",
        "demon",
        "tank",
        "missile",
        "vampire"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-big-shiny-blue-marble-ch-44"
}