{
    "title": "The Year of the Cat Ch. 20",
    "pages": [
        "100% Fiction. All sexualized characters are adults.\n\n\"I'm so confused...\" Linda took a wincing seat while Janice and Matt put away the groceries she had just brought home. \"Tell me again... why didn't you say that you and Matthew were seeing each other?\" she queried her daughter, shaking her head. \n\nJanice sighed, looking embarrassed. \"Because... you had such a huge crush on him! I didn't want to make you sad.\"\n\nLinda chuckled. \"Baby Girl,... first of all: my crush will always be David Coverdale.\"\n\n\"Who?\" asked Matt. \n\n\"Lead singer of Whitesnake.\" Janice answered. \n\n\"...Secondly:\" Linda continued. \"hearing that you're not marrying Bobby feels better than the BEST that Matthew could ever give me... no offense, darling!\"\n\n\"None taken!\" chirped Matt. \n\n\"Speaking of which...\" said Janice, reaching into the freezer. \"Here, Mom. Sit on these.\"\n\nJanice tossed Linda a bag of frozen peas from the freezer. Linda caught the bag and placed it on her seat cushion. \n\n\"Ooo! So much better!\" Linda exclaimed, taking a seat, feeling the soothing cool on her sore vagina. \"Needless to say, I am fucking THRILLED that you and Matthew are in love!\" Linda beamed. \"He's a good catch! Hold on tight!\"\n\nMatt blushed as Linda patted his butt, playfully, as he passed by on his way to the pantry. \n\nJanice smiled warmly, wrapping her arms around Matt's neck and kissing him with affection. \"Don't worry, Mom. I'm NEVER letting this one go!\"\n\nMatt's smile couldn't have been held back if he tried. He relished the feeling of relief from the mental anguish that had tortured him for the past few days. Janice pressed her body against him, gazing into his eyes with a lustful hunger. \n\n\"I can't wait to feel that big dick slide into my wet pussy!\" she whispered in his ear before turning around with a wink. Janice bent at the hip, placing a bag of fresh tomatoes in the crisper compartment of the refrigerator. \n\n\"So, how was your trip, Matthew?\" Linda asked.\n\nMatt was in a trance watching Janice bend over in front of the open fridge. Her toned legs were bare, leading all the way up to the bottoms of her ass cheeks, which were poking out from beneath her summer dress in a way Matt had never noticed before; bulbous, round, heart shaped and gorgeous. \n\nLinda smiled and cleared her throat. \"...Matthew?\" she repeated, with a smirk. \n\nMatt jumped, startled. \"Oh! Uh... Sorry, what did you ask?\"\n\nLinda grinned. \"Did you have fun in Japan?\"\n\nMatt smiled, broadly, reaching for his camera phone. \"Yes! It was amazing! I have so many pictures to show you all!\" He took a seat on a dining room chair. \"Here... can you two see ok?\"\n\nJanice smiled, taking the opportunity to place herself on Matt's lap, flipping her skirt up before taking a seat. Matt could see her panty clad ass cheeks embrace his thickening cock as she sat. She wiggled her butt, adjusting herself, nestling his dick directly between her legs. Matt bit his lip, feeling the exquisite pressure against his shaft. \n\nLinda came around from behind Matt's chair to look over his shoulder. He was suddenly presented with an enormous, head sized breast resting on his shoulder as Linda leaned forward to see. Her warm tit pressed against Matt's cheek. Occasionally, when she leaned in closer to inspect the images on the small screen, half of Matt's face would be submerged in Linda's delectable mammary fat. \n\nMatt attempted to regale the women with his exploits, despite the distractions. \n\n\"You're a wonderful photographer, Matty! These pictures are gorgeous!\" Janice exclaimed. \n\nAs Matt flipped through the photos, Janice idly toyed with the top button on her low cut sundress, pulling the hem forward, allowing Matt a stunning view of her massive, cream colored, beautifully rounded, breast tops. \n\nMatt lost his train of thought completely, his dick expanding, rapidly against Janice's butt. She couldn't help but to gasp quietly, relishing the feeling of Matt's thick cock pulsing through her soaking panties. Janice cut a subtle glance out of the corner of her eye and slowly began grinding her ass against Matt's dick. \n\n\"Uhhm... You already showed us these ones.\" Linda was saying. Matt gulped, trying to not to moan in pleasure from Janice's sweet friction. \n\n\"Oh! Duh!\" Matt chuckled, nervously. \n\nJanice's subtle movement was igniting her hormones within. Her pussy was throbbing, soaked in desire. She urgently buried her face in Matt's neck, pressing her lips to his skin. Her heavy breathing was the only sound Matt could focus on. He nearly let the phone slip out of his hands to the floor. \n\n\"What is going on?!\" Linda stood upright, noticing Janice kissing his neck. \"Oh!\" She exclaimed, as realization dawned upon her. \"Oh shit! You guys haven't... Oh my god! I'm so sorry! Let me leave you alone so you two can fuck already! Geeze!!\"\n\n\"Thanks, Mom!\" said Janice, hopping to her feet and quickly yanking Matt into a standing position. \n\n\"Thanks, Ms. Paige.\" Matt smiled over his shoulder, as he was being urgently pulled to the bedroom. \n\n\"That's 'Mom' to you!\" she grinned. \"Now, hurry up and go give my daughter that gorgeous cock!\"\n\nMatt let the door close behind him. Janice stood in the center of her room with a wide grin and raised her two arms to the ceiling, expectantly. \n\nMatt eagerly stepped forward and knelt down. His hands reached out to touch the skin of her toned calves. Matt's hands slid up her legs, gathering the skirt of her sundress and lifting it above her waist. He felt the sumptuous curves of her hips and her small midriff as her dress continued to be dispatched towards her head. Matt gasped at Janice's gorgeous, new, toned figure as more and more of her naked body was unveiled. Her huge, jutting breasts created a brief resistance, finally each tumbling free with a massive, undulating wobble. The tiny sundress was finally pulled past Janice's head and tossed to the floor. Matt's eyes were wide as dinner plates as he took in Janice's astounding physique. \n\n\"Holy shit, honey!\" Matt gasped. \"Has my face melted off yet? You are SO fucking HOT!!\"\n\nJanice blushed. \"Thank you, baby. I didn't know you were coming home. so... you'll be surprised when you take off my panties.\" she giggled. \n\nMatt tried to guess what the surprise could be as he reached for the waistband of her underwear and pulled them down. There, before his eyes, Janice's thick, blonde pubic hair crowned her mons between her legs. \n\n\"I haven't shaved my pussy since you left!\" Janice giggled, nervously. \"I was just seeing how big my bush could get. I would have shaved had I known you were coming home. Hope it isn't a turn off!\"\n\nMatt shook his head no with a slight chuckle. \"I haven't flossed today, so it works out perfectly!\" Janice laughed loudly. \n\nMatt's hand reached down as he bent forward to kiss her neck. His fingers delicately combed through Janice's moist pubic hair, caressing the folds of her wet vagina. \n\nMatt felt his clothes being yanked off his body while the two engaged and frantic make out session. His giant, erect dick sprang free from his boxers as Janice desperately pulled his pants down to the floor. \n\n\"Oh god!\" Janice moaned, running her hands over Matt's muscular shoulders and chest. \"I've been dreaming of this moment for months! Take me, baby! Please... take this little pussy and fuck the shit out of me!!\"\n\nMatt shuddered in ecstasy. He picked Janice up by her thighs, her legs wrapping around his waist. He felt the shaft of his dick sliding against her wetness. Their lips and tongues wrested as Matt walked her to the bed and bent over, laying Janice gently on her back. \n\nHer legs spread into a full split, something Matt had never known she was able to do before. Matt lowered his face to Janice's pussy lips. Her thick, protective pelt of pubic hair tickled Matt's nose as his lips made contact with Janice's vagina. He savored her aroma while his mouth closed around her pussy, his tongue dancing with her stiff clitoris. \n\n\"Oooooo! Oh my fucking god! You're so good at eating my pussy!\" Janice breathed, heavily. \n\nMatt continued to lick and suck with youthful fervor, causing Janice's senses to soar through the stratosphere. The thunder crash of her orgasm sent Janice into a sensual fit of passion. She clutched and squeezed her own breasts as another fierce orgasm rolled through her being, taking her by surprise. \n\n\"Oh fuck!\" Janice gasped when she felt a third, intense orgasm building immediately within her. \"Baby! Oh... jesus! I'm cumming nonstop!!\"\n\nJanice arched her spine, throwing her head back as she screamed through the rush of her climax. Her giant tits, tumbled over her face, jiggling against her cheeks. \n\nMatt's dick was already leaking precum when he stood to his feet. His bobbing phallus pointed towards Janice's bright pink snatch as he stepped forward. She moaned through a full body shiver when she felt the wide mushroom shaped head of Matt's dick press to and then enter through her wet opening. \n\nInch after inch slid into Janice's vagina. \"Ohmygod! Fuck yes!! Oh, baby! Fuck me hard! Do it, please!! Slam my pussy with that giant cock!!\"\n\nMatt's placed a firm grip on Janice's flared hips and began a slow, rocking motion, picking up speed over time. His thick shaft was buried in Janice's blonde bush over and over. The slapping sound of colliding flesh could be heard beneath Janice's continual cries of passion. Her tits, which looked huge to Matt before, now appeared absolutely colossal, shaking in repeated waves of luscious flesh. Her proud, pink areolas jostled like rafts on a raging sea of cream pale skin. \n\nMatt noted with delight how much tighter Janice's pussy seemed to grip his dick than before he left. \"Damn, baby! You feel fucking amazing!\" he growled, thrusting his hips in a consistent, rapid tempo. \n\nJanice was in near hysterics. Explosions were occurring inside her, propelling her through pure bliss. Every nerve ending in her body seemed to pulsate with electricity, radiating from her core with every exquisite thrust. \n\nMatt's former concern of a delayed orgasm had evaporated at once, upon feeling the transcendent grip of Janice's superb pussy. He could barely last five minutes before the unstoppable tide commenced, spewing forth the contents of his balls into Janice's quivering quim. \n\n\"Uuuhhh!\" Matt shouted, cumming so hard that his leg's involuntarily spasms nearly brought him to the floor. \n\n\"Oooo! Yes! I feel that cum flooding my pussy!\" Janice cooed. \"I fucking love it so much! I fucking love YOU so much!!\"\n\nMatt embraced Janice tightly, his cock still inside her. \"I love you, Jan... forever... always. I'm yours until I die.\"\n\n~~~~~~~~~~~~\n\nMatt napped in Janice's room, still feeling the effects of the jet lag. Janice had showered, shaved her pubic hair and left Matt alone in her bed, while she joined her mother in the kitchen. \n\n\"Mmm! Mom's Famous Lasagna!\" Janice exclaimed, inspecting the ingredients Linda was placing on the counter. \n\n\"That's right!\" Linda beamed. \"I knew you'd be up for it tonight. I heard you in there, working up an appetite!\" she said, giggling. \n\nJanice laughed. \"I tried to be quiet! I really did!\"\n\n\"Oh, hell.\" Linda said, dismissively. \"We both know that's impossible...\" Linda paused. \"Speaking of which... just to clear the air... are you sure you're ok with me... I mean, that I slept with him.\"\n\n\"Mom! Of course!\" Janice insisted. \"I low-key WANTED you to sleep with Matty! I wanted you to feel like I did: happy, alive, beautiful!! I mean, not to be nosey, but how long has it been since you..?\"\n\nLinda blew out her nose. \"Shit. It doesn't matter; I felt like I just finally lost my virginity last night!\"\n\nJanice's eyes grew wide. \"I know, right? That's how I felt my first time with him too!\"\n\nLinda sighed in relief. \"Well, ok. I just don't want there to be any tension between us. I'm SO so SO happy for you, my Baby Girl!\"\n\n\"Thanks, Mom!\" Janice said, accepting a kiss on the cheek. She regarded the ingredients on the counter. \"Ok!... how do we start here?\"\n\n\"Like every good recipe ought to start...\" Linda replied. A large joint had arrived between her fingers, seemingly out of thin air. \"Hand me my lighter.\"\n\n~~~~~~~~~~~~\n\nMatt slumbered peacefully while the ladies prepared dinner. Barely an hour had passed before he was abruptly awoken by a shrill sounding ringtone on his phone.\n\n\"Damn...\" Matt muttered, reading the display on the screen. \"What could work possibly want from me today?\"\n\n\"Hello?\" Matt answered, emphasizing his grogginess for effect.\n\n\"Turner. Hey. We need you to come in and sign some papers real quick. Standard stuff. It'll only take five minutes.\" said Matt's work supervisor, Jerry. \n\nMatt sighed, audibly. \"This can't wait? I mean, it's my time off... that you approved.\"\n\n\"Sorry. We can't move forward until we get these last signatures.\"his boss replied. \"Literally... three, four minutes, tops.\"\n\n\"Fine...\" Matt grumbled. \"Give me, like... a half hour.\"\n\n~~~~~~~~~~~~\n\n\"Matt. Come on in. Shut the door.\" said his supervisor once Matt had arrived. \n\nMatt took note of the unusual request and sat down in the low chair in front of his boss's desk. \n\n\"Look... I only know how to be direct, so I'll be direct: we're a little pissed at you right now., Turner.\" his boss began. \"You were supposed to keep your crew in Japan for three more weeks. That's the schedule our budget was planned for, that's what the client expected.\"\n\n\"But... we had nothing else to do! And the client was overjoyed! We went above and beyond for them and then we got out of their way.\" Matt replied. \n\n\"That's secondary to our main goal, Turner: maximizing the profits! Now the client is asking to change the contract to have the rest of the projects done that quickly! This is aggressively cutting into our bottom line and... I'm sorry, but there's gonna have to be consequences.\"\n\nMatt shook his head in disbelief. \"Are you kidding?!... Ok! Fine... what'll it be? Unpaid suspension?\"\n\n\"No, Matt. Unfortunately, we have to make an example out of you... you're fired.\"\n\nMatt sat still, blinking in confusion. \"... f-fired?!\" \n\nMatt's boss wore an uncomfortable grimace on his face. \n\n\"You realize that you wouldn't have this job... hell, this COMPANY if it weren't for me!\" Matt spat, angrily. \n\n\"Matt... let's not get security involved with this.\"\n\n\"You know what...\" Matt's anger was nearing a point of regret. He stopped, breathing slow to calm himself. \"I didn't ask for any of this. I gave up A LOT to be sent halfway around the world... and now you...\"\n\nMatt stopped short, his spirit feeling dejected and betrayed. He stood up, quietly. \"This is wrong, Jerry.\"\n\nHis boss shuffled paperwork on his desk, refusing to meet Matt's eyes. Matt almost felt himself welling with tears. Without another word, Matt turned and left the room, letting the door close loudly behind him. \n\n~~~~~~~~~~~~\n\nMatt climbed the stairs to his apartment in somber reflection. As he ascended, he could clearly hear Janice and Linda's raised voices, exclaiming in elated excitement from the top floor. \n\nHe opened the front door to the delicious aroma of freshly cooked lasagna and the sight of Janice and Linda jumping up and down, whooping and shouting in celebration. \n\n\"Mom just got her settlement money!!\" Janice exclaimed to Matt. \n\n\"1.3 MILLION, BABY!!\" Linda screamed for joy. \n\nMatt gasped, nearly forgetting his own troubles. \"Holy shit! Congratulations!!\"\n\n\"Don't ruin the mood.\" Matt told himself as he hugged Linda. \"Just keep your bad news to yourself for now.\"\n\n\"This is HUGE, Mom!\" Janice bounced, excitedly. \"You finally get to enjoy the fruits of all the years of hard work you put in raising me and Tracy!\"\n\n\"Oh!\" Linda exclaimed, pinching Janice's cheeks, affectionately. \"I'd do it all over again in a heartbeat!\"\n\n\"Well, what are going to do to celebrate?\" asked Janice. \n\n\"Oh... I don't know... there's so many things I wish I could have done with you and your sister when you were younger!\" Linda pouted. \"I never got to take you to the circus or trips to the amusement park...\"\n\n\"You gave us a great life, Mom... and... you know... I still like roller coasters!\"\n\n\"Ooo! So do I!\" Linda squealed. \"Baby Boy, are there any theme parks nearby?\"\n\nMatt nodded. \"There's a huge one with a ton of roller coasters. It's just about two hours away from here. They got a water park in the middle of it and everything!\"\n\n\"Oooo!\" the women exclaimed in unison. \n\n\"We're going!\" Linda exclaimed. \n\nLinda's delicious lasagna was a much appreciated return to western cuisine for Matt. It was no wonder that the dish was so sought after by her family; the love she put into the meal was apparent in every bite. \n\nAfter dinner, Matt presented a plethora of Japanese souvenirs he had collected over the course of his visit to the ladies. Janice gasped at the beauty of the jade earrings and matching necklace Matt had picked out for her. Linda was given a beautifully printed paper fan, a pair of ornately fashioned chopsticks and a wall scroll depicting a pink cherry blossom tree in springtime bloom. Even Bubsy got a gift; a felt cloth headdress in the shape of a orange daisy flower. Bubsy poked his face out of the opening as Janice pulled the cloth over his head. All three could barely breathe from laughing at the unamused feline; a glowering flower. \n\nThe ladies sat, enraptured as Matt told stories of his exploits and experiences, including his drunken night in Tokyo, being led to the massage parlor. \n\n\"Aww. I feel so bad that you were upset from Bobby's text during that massage.\" Janice pouted. \"You probably missed out on the full enjoyment of the experience.\"\n\n\"Oh! I'll make it right for you!\" Linda spoke up. \"You lend me those muscles bringing my massage table up from the car and I'll treat you to a REAL massage!\" Linda cooed, running her fingertips over Matt's bicep. \n\nMatt grinned at the prospect. \n\nAt the end of the night, he followed Janice into her bedroom, where they cuddled together beneath her bedsheets. \n\n\"Are you ok, sweetheart?\" Janice spoke softly, caressing his chest. \"I noticed you seemed... I don't know, down a little.\"\n\n\"I got some bad news at work today.\" Matt sighed in the quietness of the room, stroking her long, blonde hair. \n\n\"Oh no!\" Janice replied, fearful. \"Please tell me they're not sending you away again!\"\n\n\"No.\" Matt chuckled, lightly. \"I'm definitely safe from that. They... uhh... they fired me today.\"\n\nJanice gasped in surprise. \"They WHAT?!\"\n\n\"Yeah...\" Matt sighed. \n\n\"Oh, baby. After all you did for them?! They should be ashamed! I am so sorry, sweetheart.\"\n\nMatt blinked back his tears. \"You might have messed up by staying with me, Jan...\" he croaked. \"Bobby was right... I AM a loser!\"\n\nJanice looked aghast up at Matt. \"Don't you ever say that again!\" her voice was deadly serious. \"You're winning in ways Bobby NEVER will! And... I'm in love with you... so, when you call yourself a loser, you're calling ME a loser too! And that's just RUDE!\"\n\n\"Sorry.\" Matt pouted. \n\nJanice's serious face showed the tell tale signs of wanting to break in to a grin. Matt embraced her, kissing her forehead. They held each other in the dark silence for several minutes. \n\n\"Is it bad that I'm happy that you're gonna have some time off with me?\" Janice asked. \n\n\"Absolutely not! I'm happy about that too!\" Matt replied. \"... but, even with unemployment benefits, the money I made in Japan is only going to carry me so far.\"\n\n\"Well, don't forget: Tracy is going to be here to help too. That is, if you're still on board with that idea...\"\n\n\"Oh! Yeah...\" Matt answered, blinking. \"So much has happened today... I nearly forgot... tell me your idea again.\"\n\n\"Yeah...\" Janice chuckled. \"Today has been a wild one, that's for sure... I was thinking that Tracy could move in to this room and... I could move in with you in your room...?\"",
        "A genuine smile spread across Matt's face. \"I LOVE the idea of you sharing a room with me! We're taking our relationship to the next level!\"\n\nJanice squeezed him tightly. \"I know!! I'm SO excited! I love you SO much, baby!\"\n\n\"And I love you.\" Matt replied, lifting her chin, gently to kiss her lips. \n\n~~~~~~~~~~~~\n\nMatt emerged from dreamless slumber the next morning to a feeling of wet, resplendent stimulation on his erect dick. Matt opened his eyes to see a person sized mound beneath the covers, positioned between his legs. The head beneath the sheets bobbed up and down as loud slurping sounds were heard. \n\nMatt peeked beneath the sheets to see Janice worshiping his erect dick. She paused to smile up at him. \n\n\"Good morning, my love!\" she beamed, throwing the covers over her shoulders. \"Is this better than going to dumb ol' work?\"\n\n\"Ffffuck yes!\" Matt exclaimed. \n\nJanice squealed for joy, kissing Matt's fat dick up and down his veined shaft. \"I bet your cum tastes different from all that Asian food you've been eating!\"\n\nMatt chuckled through his lustful focus on Janice's hand on his cock. Her fingers applying pressure to his shaft, no where near being able to close around his massive circumference. \n\nJanice's tongue danced around the tip of his penis and frenulum, causing a reflexive jump. She looked like she was having more fun playing with his cock than anything else. She would gaze upon it, lovingly, as her hand twisted around his girth, up and down. Slow, deliberate sweeps of her tongue climbed up the length of Matt's dick, from his balls, all the way to his mushroom crown. Once at the peak, Janice's lips curled around as much of his cock head as she could manage, lightly probing his slit with her tongue. \n\nMatt shuddered in ecstasy under her sweet attention. Janice contently continued her labor, unhurried, for several minutes until she detected him nearing completion. Janice excitedly began pumping quicker, bringing her face close to Matt's leaking phallus. \n\n\"Oooohh... fuck yesss!!\" Matt exclaimed as thick, white, liquid ropes began erupting from his dick. \n\nThe first blast doused Janice's surprised face. She eagerly closed her mouth around his cock to swallow the subsequent, pulsing flow. \n\n\"Mmm!\" Janice said, smacking her lips when his large dick stopped lurching in orgasmic revelry. \"No lie! I think I taste soy sauce!\"\n\nMatt had to laugh. He watched, amused, as Janice wiped the cum off her face, licking her fingers clean, greedily. \n\nSounds of activity in the kitchen was heard beyond Janice's closed bedroom door. \"I think Mom is making breakfast, if you're hungry. I'll be out in a sec. I want to clean up for yoga.\"\n\n\"Good morning, Baby Boy!\" Linda exclaimed when Matt emerged from Janice's bedroom. Matt blinked in the brightness of the morning sun shining through the windows. Once his eyes adjusted, he gasped at what Linda was wearing... or not wearing, in this case.  \n\nShe stood at the stove, stirring scrambled eggs in a pan, casually. She was completely nude except for a knee length, yellow apron tied around her waist. The front of the apron covered perhaps a third of her enormous breast volume. Her chestnut hued areolas peeked at Matt from the edge of her hem. Linda stood with her hand resting on her hip. Her unimaginably large, naked side breast hung outside the thick material. Matt could see Linda's blue veins snaking through the soft surface of her unblemished breast flesh in the bright sunlight. The back of the apron was completely open, exposing Linda's nude posterior from head to toe. \n\n\"Ready for breakfast?\" she cooed. \n\n\"Uhh... yeah!\" Matt shook himself out of his shock and took a seat at the dining room table. Linda approached with a steaming plate and smile, her massive wobbling tits sliding in and out of the narrow apron front covering as she walked. \n\nLinda took a seat beside Matt at the table while he enjoyed his hot meal. Between bites, Matt caught her staring at him with a admiring smile. \"I'm gonna have some beautiful grand babies one day!\" she sighed, resting her chin on her palm. Matt grinned up at her with his mouth full. \n\n\"Ready, Mom?\" said Janice, walking into the room. Matt blinked in surprise to see Janice striding towards the living room, still completely naked, with two yoga mats under her arms.\n\n\"Ready!\" cheered Linda, hopping to her feet and peeling the yellow apron off of her stunning nude figure.\n\nMatt hurried through his remaining eggs, craning his neck occasionally to peer into the living room as the ladies spread their colorful mats on the floor. \n\nJanice switched the television on and scrolled the menu to a guided yoga session program. \n\n\"You're allowed to come watch!\" Janice called out to Matt. Bubsy was already taking his place on the couch. \n\n\"Yeah!\" Linda laughed. \"Come give your perverted cat some company!\"\n\nMatt smiled, taking a seat next to Bubsy. The feline looked mildly annoyed by his presence, feeling a disturbance of his daily routine. \n\nThe Lycra clad woman on the screen gave a warm greeting to her television audience and commenced the session with a moment of controlled breathing. \n\nThrough the course of the half hour session, Matt and Bubsy cat sat riveted to the couch, as the women gracefully contorted their beautiful bodies into pose after pose of lust drenched exhibition. Matt didn't even notice his erection snaking out of the pant leg of his athletic shorts. \n\nMatt was genuinely impressed by Janice's physicality, watching the tight muscles in her back and legs flex and stretch. \"Damn... my girl is fucking HOT!\" he silently exalted. \n\nWhen the program credits began rolling over the screen, the women stood, wiping sweat from their brows. \n\n\"I think I'm getting the hang of this!\" Linda exclaimed, breathing heavily. \"What do you think, Matthew? Do you approve?\" Just then she caught sight of Matt's thick cock, exposed and pressed against his thigh. \"Ooo! I'm taking that as a 'yes'!\"\n\nLinda knelt down, running her hand up Matt's bare thigh and softly gasping his erection. \"Are you ready for your massage now?\"\n\nMatt gulped. His cock twitched in her hand. He nervously nodded his head 'yes'. \n\n\"Go ahead and bring my table upstairs from the car while Janice and I rinse off.\" Linda instructed Matt, patting his leg. \n\nMatt was setting up the sturdy massage table in the middle of the living room when the ladies emerged, each from their own bathrooms. The two women remained casually nude, approaching Matt with warm smiles. \n\n\"Before we start...\" Linda began. \"I want to give Matthew a quick lesson. Baby Girl, do me a favor a climb up onto the table, face down, ok?\"\n\n\"Sure, Mom!\" Janice replied, quickly climbing on top of the softly padded table surface. Her giant tits bloomed out from either side of her body as they were compressed between her torso and the table. \n\n\"Ok, Matthew, pay attention...\" Linda approached Janice, spreading her hands over her daughter's lower back. \"This technique I'm going to show you is gonna relieve some of the soreness she gets from carrying those big hooters around everywhere.\"\n\n\"Mmm! Yes please!\" Janice cooed. \"Educate him, Momma!\"\n\n\"I always told my daughters when they were growing up to stand straight with their shoulders back.\" Linda said as her thumbs rubbed Janice's back in small, circular strokes. \"I knew they were probably going to inherit my huge boobies sooner or later, so teaching them good posture early was gonna be valuable; strengthens the back.\"\n\nMatt watched carefully while Linda pressed hard into Janice's oblique muscles. Linda's knuckles were white with the pressure she exerted as she kneaded her daughter's skin. \n\n\"Oh my god!!\" Janice cried, nearly orgasmically. \"That feels fucking AMAZING!\"\n\nMatt took a turn, mimicking Linda's technique, massaging Janice's back under her supervision. \n\n\"Mmmm! So goood!\" Janice moaned. \n\n\"Looks like you got it!\" Linda said, smiling at Matt. She patted Janice's naked butt. \"Ok, Cutie Booty... it's Matthew's turn on the table.\"\n\nJanice lifted herself from the table, standing to her feet and extending her arms in a wide, full body stretch. Matt watched in awe, his mouth hanging agape at how hugely Janice's round breasts protruded from her chest. \n\n\"Stand up, hun. Let's get you naked!\" Linda eagerly exclaimed, pawing at his shorts.\n\nMatt quickly stripped down to his bare skin and laid, face down, on the table. Janice couldn't resist playfully squeezing Matt's ass cheek as he settled into position. \n\n\"Love that lil' butt!\" Janice squealed. \n\nLinda began the massage by lightly gliding her fingertips up and down the entirety of Matt's naked body. Goosebumps arose across his skin in the wake of her gentle caress. The pressure from her hands increased over time as her movement became more localized in a specific region of his back. \n\n\"Oh, Matthew! Your muscles are so knotted up!\" Linda exclaimed, rubbing him tenderly. \"Those Japanese girls you got taken to were amateurs!\"\n\nLinda turned to Janice. \"Go in my suitcase and find the bottle of body oil, will you please, darling?\"\n\nJanice returned with a small, clear bottle of body oil. \"You two have fun! I actually have some e-mails to send out for work today.\"\n\nMatt felt the warm oil drip onto his back and two hands spreading the ointment over his skin. Linda was able to really dig in and apply her soothing pressure once Matt's body was lubricated. Her strong fingers wove spells of relief across Matt's beleaguered being. \n\n\"Holy cow!\" Matt groaned. \"This feels SO much better than the first time!\"\n\n\"Just wait until your 'happy ending'!\" Linda cooed into his ear as her hand slid up the crack of his ass. \n\nMatt gasped, feeling her fingertips tracing circles around his butthole. Linda's hand then dipped between his legs, fondling his testicles. Matt's semi flaccid cock began to thicken. \n\n\"Get up on your hands and knees, baby.\" Linda whispered in his ear. \n\nMatt raised himself. \"Mmmm! Damn...\" he uttered when he felt her hand slide forward and grip his expanding shaft. Her oily fingers lubricated Matt's entire dick into rigidity as she stroked him from behind. \n\n\"You like this, honey?\" Linda said, bringing her face close and running her tongue up the back of his balls while she continued to jerk him off. \n\nPrecum dribbled from Matt's shiny tip. \"Ooops! Not yet!\" Linda exclaimed, when she felt his moist preamble. \"No sir! Flip over and let me REALLY finish you!\"\n\nMatt rotated himself on to his back in eager anticipation. He looked up to see Linda hoisting her enormous tits up with her forearm while she drizzled body oil all over her gathered cleavage. Her nipples stood out, proudly, almost close enough to lick. \n\n\"Here, honey. You do the honors.\" Linda said softly, bending forward at the hip, letting her giant breasts fall within easy reach. \n\nMatt grinned. With his hands, he went about spreading the ointment all over Linda's gorgeous expanse of soft, rounded flesh. Her amazingly huge tits slipped from his attempted grasping, jiggling in shining splendor against her chest. \n\nLinda then bent lower, squashing her immense softness over Matt's torso. She began dragging her huge breasts down his body, leaving an oily trail on his skin. Soon, Matt felt his cock being bathed by divine, slick, supple flesh. \n\nLinda halted her downward progress, leaning hard on top of Matt's dick. The pliable pressure surrounding his member sent a shiver up his spine. He felt her move his cock between her heavenly tits and begin squeezing against it while she employed a rocking motion, back and forth. \n\n\"Oh jesus!\" Matt whimpered, looking down to see his lucky cock head disappearing and reappearing amidst Linda's bulging, glossy cleavage. \n\n\"That's it, Baby Boy!\" Linda hissed as her tempo increased. \"Give me that cum! Let mama have that juicy load! Mmmm! Yessss! All over my big, fat titties!\"\n\nMatt held his breath when his orgasm began. Cum spurted out of his dick, sending thick ropes across Linda's vast bosom. \n\n\"Ooo! God damn right!\" Linda exclaimed, regarding the mess on her d\u00e9colletage. \"Nice load! You almost covered them completely!\"\n\nMatt caught his breath watching Linda wipe herself clean. \"That was fucking great!!\" he breathed hard. \n\n\"My pleasure!\" Linda beamed, beautifully. \"Now, go hop in the shower, Baby Booby Boy. Rinse that oil off yourself.\"\n\n~~~~~~~~~~~~\n\n\"...And you're SURE that Matt's ok with it?\" Tracy queried over the phone. \n\n\"Oh, girl. You'll see...\" Janice answered. \"There aren't many guys that are more easy going than Matty!\"\n\n\"Well, shit!\" Tracy exclaimed. \"Fuck it! I'm ready! Joey's already taken everything he could from me... I'm lucky just to get the little alimony I got. Screw the rest! I'm so over it at this point!\"\n\n\"Well, I'm booking you a flight, then. Come on home, Tracy!\"\n\n\"Ohmygod I'm so excited to see you and Mom! Does she know yet?\"\n\nJanice gasped. \"No! Let's surprise her!!\"\n\nTracy and Janice giggled and began formulating a plan. \n\nJanice was just hanging up with her sister when Matt emerged from the bathroom, clean from the oil glaze he had received. \n\n\"Hey! Guess who's flying in tomorrow!\" Janice exclaimed to Matt. \n\n\"Tracy?\" he replied, drying his hair with a towel.\n\n\"Yep! We're surprising Mom, so don't say anything, ok?\"\n\nMatt smiled. \"That ought to be fun! ...Hey! I should pick her up from the airport so your mom doesn't suspect anything!\"\n\nJanice closed her eyes tight in childlike excitement. \"Brilliant!! Oh my god! This is going to be so good!\"\n\nJanice arose from her chair, still completely naked from this morning. Matt considered slipping into his boxers, but felt self conscious at the thought of being the only clothed person in the apartment. \"It seems like Janice has gone full 'clothing optional' here.\" he thought to himself. \"Hell, why not enjoy it today? Things will go back to normal once Tracy arrives.\"\n\n\"Grab that water pail behind you, Sexy Man. I want to introduce you to my friends!\"\n\nJanice led Matt around the apartment to all the lush green plants she was growing. She affectionately greeted every one by their own given name, bending closely, so that they might absorb the carbon dioxide expelled from her lungs as she spoke. Matt smiled, admiring Janice's nurturing affection, as she poured a specific amount of water in each bed of soil. \n\n\"My goodness, Mr. Belvedere!\" she exclaimed to the dieffenbachia plant. \"You're looking so happy today! What handsome broad leaves you have!\"\n\nAbove the scent of of rich foliage and herb plants, Matt detected the aroma of burning marijuana. \n\n\"I think Mom's having a bath.\" said Janice, sniffing the air. \"Wanna have a quickie?\"\n\nMatt blew out his nose. \"Damn right!\"\n\nMatt and Janice retreated to the bedroom, closing the door behind them. Janice went right to her bed and bent at the hip over her mattress, presenting her tight ass to him. Despite expelling his load twice already this morning, Matt was helpless as his dick began swelling at the sight of her labia peeking out from the base of her butt crack. \n\n\"Fuck me doggy style!\" Janice cooed, looking back at Matt with a sensual gaze as he lubed his dick into solidity. \"I love the way your dick feels going in me like that!\"\n\nMatt was hard in a few seconds. He approached her snatch and pressed his bulbous mushroom tip in between her puckered labia. \n\nJanice exalted loudly, feeling his fat dick slide all the way into her pussy. His hands gripped her hips and held her fast against him. Janice's knees began to wobble when his expansive girth could be felt pulsing inside of her. \n\n\"You gotta be fucking kidding me!\" Janice exclaimed in urgency as Matt felt the telltale constriction of a powerful orgasm flooding through her. \n\nJanice moaned, trying to control her volume as the orgasm rocked her. \"Fucking... what the fuck?\" she squealed. \"How is your dick so GOOD?!\"\n\nMatt's grip tightened on her hips as he began slowly sliding back and forth inside her. His thick cock head polished the entire surface of Janice's vaginal cavity.\n\nThe two fucked for nearly twenty minutes. Afterwards, Janice cleaned up and prepared a light lunch for the three. \n\nThe rest of the day was spent in relaxed, naked comfort. Matt and the two women spent the remainder of the daylight napping, snacking and cuddling. \n\n\"I could definitely get used to this lifestyle!\" Matt thought to himself with a smile. \n\nWhen night time fell and yawns began, Matt and Janice lay in bed together, holding each other's bodies close, beneath the sheets. \n\n\"So, I figured out which Love Coupon to use first.\" Matt said, referring to the Valentine's Day present Janice had sent him. \n\n\"Oh yeah?\" Janice replied, smiling up at him. \"Which one?\"\n\n\"I want to play a Wild Card tonight!\"\n\n\"Ooo! 'Anything Goes'! Sounds exciting!\" Janice beamed. \n\n\"Yeah... I want a threesome: you... me... and that big ass stuffed bear over there!\" \n\nJanice laughed loudly. \"How did I ever fall in love with such a sick fuck like you?!\" Matt giggled, playfully in response. \n\nShe regarded the large, awkward Valentine's Day gift from Bobby. \"Don't worry, I'm gonna toss that thing. I haven't been able to see out of the balcony for weeks! Will you help me with it tomorrow?\"\n\n\"Sure, baby.\"\n\nJanice nestled into his arms and closed her eyes. Matt smiled to himself, reviewing his glorious day at home in his mind. \"If this is what I can expect by staying home, I never want to look for a job again!\" he mused to himself. \n\n~~~~~~~~~~~~\n\nThe next day, early afternoon, Matt stood behind the barrier in the airport concourse arrival area amongst a scattered group of strangers who were also waiting for the plane passengers to de board. The 'Arrivals' display showed that Tracy's plane had landed on time. \n\nIt wasn't long before weary looking travelers were seen rounding the distant corner and approaching Matt's awaiting group from down the long, wide corridor. \n\n\"Look! There's uncle Henry!\" Matt heard an excited boy exclaim. \n\nMatt wasn't entirely sure what Tracy looked like, so he held up a small sign he had drawn; a white cardboard rectangle with Tracy's name written in bold letters across the front. \"If she's anything like her sister or mother, I imagine she shouldn't be too hard to identify.\" Matt surmised. \n\nHe craned his neck as more and more passengers rounded the corner, dragging their carry on cases behind them. \n\nMatt caught a flash of wavy dark golden blonde hair and a young woman peering over the shoulders of a slow walking group of people. Her large, green eyes widened when she saw the name on Matt's sign and a bright smile spread across her face. The slow group of walkers shuffled onwards, blocking Matt's view of anything but the young woman's lovely, albeit tired looking, face. Finally, an old woman stepped aside and allowed the girl to pass. \n\nMatt nearly let the sign drop from his fingers, in absent minded amazement, when he saw the young woman break free from the lumbering pack of fellow travelers and stride earnestly towards him down the long hallway. \n\n\"Holy fucking shit!\" Matt heard a middle aged man, who was standing beside him, exclaim quietly, under his breath. The man's eyes were fixed on the young woman's approach. \n\nMatt gulped hard. \"Yeah... this has to be Tracy.\" he thought to himself. \n\nMatt had noticed, since arriving back home, that Janice and her mom's breasts were nearly same size now; approximately an M cup. Before he had met Linda, Matt scarcely believed tits could be that big. He attempted not to tremble as his belief was, once again, challenged by the smiling woman bouncing eagerly towards him. \n\nTracy's mind blowing rack bounded freely within her scoop neck, fitted T-shirt, obviously bra less. Her gargantuan breasts seemed to float as they shifted from side to side in a massive swaying wobble. Stress lines emanated from the middle of her top, dancing with ridiculous motion as her tits quaked with every step. Her pinpoint nipples were poking visible, pointed at central 45's, as though her gigantic breasts were held aloft by an invisible brassier. ",
        "Matt attempted valiantly to focus on her pretty eyes as she approached and stood before him. Besides the most attention grabbing genetic similarity, Tracy also possessed the signature \"Paige Girl\" features; a beautiful smile, round cheeks and bright eyes. \n\n\"There's no 'e' in my name.\" Tracy smiled, looking down at the sign Matt was still mindlessly holding up,. \n\n\"Oh! Sorry. Hi! I'm Matt.\" he said, folding the cardboard sign and bowing low to greet her. \n\nTracy blinked, confused. She awkwardly bowed in return. \"Pleased to meet you. I'm Tracy.\"\n\nMatt became aware of himself and quickly offered his hand to shake. \"Sorry... I just got back from Japan.\" \n\n\"Well... 'domo arigato' for coming to pick me up!\" Tracy grinned. \"...sorry, that's the only Japanese I know.\"\n\nMatt chuckled. \"Don't be sorry! I spent almost three months there and I only got you beat by a few words. Did you have a nice flight?\"\n\n\"Oh, yes!\" she exclaimed. \"It just got better and better the further I got away from that shit hole!\"\n\n\"Excellent! Well, then... shall we head to baggage claim?\" \n\n\"No need. Everything I own fits in this carry on.\" Tracy sighed to the knee high suitcase on wheels by her side. \n\nMatt bowed his head. \"Mmm. Starting over is pretty brave. You've got guts, Tracy. I want you to know that Janice and I are really happy that you'll be staying with us.\"\n\n\"Thank you, Matt. You offering your home to me means the world! I promise to be as little of a burden as I can be!\"\n\nMatt chuckled, dismissively. \"You're no burden at all. We're practically family at this point!\"\n\nTracy smiled. \"Yeah... Janice really sounds happier now than I've ever heard her...\"\n\nThe two walked silently for a few paces before Matt suddenly felt a tug on his sleeve. He halted and turned towards Tracy, who was standing still, looking at him with a serious expression. \n\n\"You... you're not going to break her heart, are you?\" she asked, quietly. \n\nMatt looked concerned, shaking his head. \"No! Of course not. I love Janice... more than anything!\"\n\n\"You're not going to turn into some raging asshole on her when she gets a breast reduction for you... and then her boobs grow back twice as big when she gets pregnant?\"\n\nMatt gulped. \"Believe me, I'd NEVER ask Janice for a breast reduction. I love her breasts just the way they are!\"\n\n\"Good answer.\" Tracy said as she resumed her path towards the exit. \"Do you mind if we stop for a burger somewhere on the way? I'm famished!\"\n\nMatt drove Tracy to a drive through fast food restaurant on the way home. Pulling up to the house, Matt put the car in park and texted Janice to let her know that they had arrived. \n\n\"Ok! Perfect! Come on up! Mom's taking a shower!\" the reply text said a moment later. \n\nMatt led Tracy up the three flights of stairs to the apartment. At the top flight, Janice was waiting with a wide, excited grin.\n\n\"Ohmygod! Tracy!!\" Janice whisper screamed, rushing downstairs, practically bowling Matt out of the way in her excitement. \n\n\"Oh, Baby Sis!\" Tracy exclaimed with her arms outstretched. \n\nThe sisters embraced on the stairs, squealing for joy. Matt smiled at the happy reunion, feeling warmth in his heart at the sight of Janice so unbound with glee. \n\nHe carried Tracy's small carry on the rest of the way upstairs and stowed in a place Linda wouldn't see. \n\n\"Honey! Is the coast clear?\" Janice whisper yelled from the stairwell. \n\nAt that moment, Matt heard the shower water turn off in his bathroom. The smell of burning marijuana wafted from the doorway. \"Yep! But, it sounds like she's almost done. Hurry!\"\n\n\"Ok, come on, Tracy.\" Janice exclaimed quietly to her sister. \"Let's get you in position!\"\n\nLinda emerged from the bathroom after her shower, wearing her silk robe and her hair in a towel. \n\n\"There you are, Baby Boy!\" Linda exclaimed when she saw Matt and Janice standing side by side in the dining room next to the enormous stuffed purple teddy bear. \"Did you get your errands taken care of?\"\n\n\"Oh! Yep.\" Matt replied, trying not to act suspiciously. \"We... uh, Janice and I... we were just going to take this teddy bear down to the curb for trash pick up!\"\n\nLinda furrowed her brow. \"...ok.\"\n\nJust then, the giant stuffed animal twitched. Bubsy cat, who had been sniffing the paw of the bear, darted off in alarm. \n\n\"What the fuck was that?!\" Linda shouted. \n\nMatt and Janice feigned surprise when the enormous stuffed bear raised his arms and began flailing them, up and down. \n\n\"Help me, Mommy!\" a high pitched voice cried out from the bear. \"Don't let them throw me away!!\"\n\nLinda's bloodshot eyes grew wide with dumbfounded terror. Her shocked gaze settled, suspiciously, on the burning joint in her grasped fingers. \"Guys... did you...?\"\n\nJust then, Tracy leapt out from behind the giant stuffed animal. \"SURPRISE!!\"\n\nLinda's expression went from confused fear, to astonished amazement, then to tearful joy as she rushed forward. \n\n\"TRACY! Holy shit! My Tracy is here!\" Linda hugged her daughter tightly as tears poured freely from her joyful eyes. \"Oh... both of my beautiful girls together!!\"\n\n\"Hi, Mom!\" Tracy grunted as Linda squeezed her, tightly. \n\nLinda released her grip and stepped back, letting herself have a good look at her daughter for the first time in several months. \"My god, Tracy!! You look incredible!\" \n\nTracy rolled her eyes. \"A hot mess, more like it!\"\n\n\"Nonsense!\" Linda clucked. \"You're gorgeous!\"\n\nMatt took a seat on the rocking chair, petting Bubsy cat as the feline purred on his lap. He smiled, watching the three gorgeous women excitedly catch up on family news and gossip while they sat together on the couch. \n\nLinda's eyes grew large as she looked down onto Tracy's enormous bosom. \"Ok, girl. You gotta tell me what's going on with THESE!!\" she said, giving Tracy's breasts a quick squeeze. \n\nTracy sighed, rolling her eyes in exasperation. \"Yeah, just when I was getting used to my little C cup titties... I found out I was pregnant. I swear, it was like my tits were pissed at me for getting a reduction! They started growing like crazy- seriously, like a cup size every week!\" \n\n\"My pregnancy barely made it to the first trimester before... \" Tracy lowered her head in sorrow. The two women on either side comforted Tracy in her melancholia. \"... but, yeah. They kept growing even after. They've finally seemed to slow down lately. I don't even know how big they are now, but I'm not wasting any more money on bras that I'm just gonna keep outgrowing.\"\n\n\"Good call!\" Linda exclaimed, raising her hand for a high five. \"I wanna see them! Go on! Show us!\"\n\nTracy's eyes shot over to Matt, seated on the rocking chair. \"Mom! No! I'm not showing my boobs to a stranger!... uh, no offense.\"\n\nMatt gulped, feeling awkward. \"That's ok! I'm... uhhh... going to see if Bubsy needs his litter changed.\" He rose and quietly left the room, carrying the furry feline in his arms. \n\nOnce the women were alone, Linda exclaimed. \"Ok! Now?\"\n\nTracy was untucking her fitted shirt from her slacks. \"Are you sure about him? He's awfully quiet.\"\n\n\"Oh, Matty is just like that at first.\" Janice replied. \"Once you two warm up to each other you'll see how charming he is.\"\n\n\"Matthew truly is a special guy.\" Linda chimed in. \"You know I don't say that lightly.\"\n\n\"Well, ok!\" Tracy answered as she lifted her shirt over head. \n\n\"HOLY SHIT!!\" Linda and Janice both shouted, staring, open mouthed, at Tracy's uncovered breasts. \n\nHer unveiled juggernauts looked as though they were hand sculpted by a masterful, yet perverted craftsman. Tracy's areolas were wide, rose colored, sitting on the center of each of her massive, spherical, full, flawless breasts. \n\n\"God damn!! They're... they're PERFECT!\" Janice exclaimed. \n\n\"Fuck!\" Linda added. \"I haven't seen prettier titties in my whole LIFE!\"\n\n\"These?!\" Tracy scowled. \"They're too big to be perfect!\" she shook her head.. \n\n\"I'm gonna agree to disagree with you on that, Girly Girl!\" Linda clucked. \"It looks, to me, like they just got prettier with size!\"\n\n\"For real!\" Janice gasped, unable to tear her eyes away. \"They're so perfect, it's like they're fake... but, they aren't! They're natural... SUPER natural!\"\n\nTracy actually started blushing. She pulled her shirt back over her head, covering herself once more. \"Well, thanks, you two.\" \n\nJanice bounced, happily in her seat. \"So, Mom... Tracy and I have another surprise for you.\" she said, excitedly. \n\n\"Another surprise?!\" Linda exclaimed. \n\n\"Yep!\" Tracy confirmed with a smile. \"Janice is letting me move in with her HERE! You get to have fun with your settlement money without worrying about taking care of me!\"\n\nLinda was just about to protest, when Matt's voice was heard from behind the living room doorway. \"Is everyone decent?\" \n\n\"It's ok, babe. Come on in.\" Janice called out to Matt. \n\nMatt approached Linda with his phone. \"Ms. Paige! You gotta see this!\" On the screen, the browser was open to a promotional website. She took Matt's phone, examining the web page. \n\n\"Legends of Rock Cruise...\" Linda read, out loud. \"A luxury cruise to the Bahamas, featuring... blah blah and blah blah and...\" her jaw dropped. \"Whitesnake!\"\n\nHer eyes grew wide, reading the details of the cruise in shocked disbelief. \"Oh my god... a fourteen day cruise... me and David Coverdale on the SAME SHIP FOR TWO WEEKS!!\"\n\nTracy and Janice traded a knowing grin about their mother's lifelong infatuation with the rock star. \n\n\"Oh... I'm going. I have to! I have to find David and I have to have sex with him. That's all there is to it!\" Linda stood to her feet, inspired. \"I don't care if he's old looking... I don't care if he's married... I'm gonna find him... I'm gonna seduce the SHIT out of him... and I'm gonna fuck that man! Oh girls... I promise you: David Coverdale's dick... right here\" she placed both of her hands on her pelvis, framing her vagina with her fingers and began gyrating her hips. \"POW! Right in the pussy!!\"\n\n\"So...\" Tracy said, turning to Janice, as her mother pantomimed riding an aging rocker's cock in the middle of the living room. \"I see Mom hasn't changed at all!\""
    ],
    "authorname": "Jugg_Head",
    "tags": [
        "big tits",
        "huge boobs",
        "enormous breasts",
        "slow burn"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-year-of-the-cat-ch-20"
}