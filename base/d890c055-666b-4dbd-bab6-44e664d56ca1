{
    "title": "The Training of Cecelia Ch. 02",
    "pages": [
        "Summary: Proud woman discovers the joys of submitting to anal sex.\n\nNote 1: Thanks to TigerSir for suggesting this novella and many of its themes, and for pushing my limits a little.\n\nNote 2: Thanks to Tex Beethoven and TigerSir for editing this ambitious story.\n\nNote 3: This is part two of what I'm certain will become a lengthy novella. (Including this installment, it's already slightly more than 37,000 words long, and once it reaches 50,000, which appears more than likely, it will qualify as a short novel.) Also, although it contains a lot of typical silkstockingslover themes, this one digs deeper into BDSM than I usually go.\n\nIn part one Cecelia, a CEO with a major ego, is put in her place by a company fixer who sees past her strong-willed female persona to her natural submissive nature, and he begins training her to be a completely submissive slut.\n\nAnd now... the morning after her complete submission... or what she had thought was her complete submission....\n\nThe Training of Cecelia Ch. 2\n\nThe next morning: Sunday\n\nI woke up feeling completely refreshed... I opened my eyes, and only then realized I hadn't slept in my own bed.\n\nThen last night came flooding back to me.\n\nI'd willingly cheated on my husband.\n\nI'd allowed another man's cock into my mouth and my pussy.\n\nI'd allowed another man to come on my face.\n\nI'd allowed another man to fill my unprotected womb with his seed at a time when I was at my most fertile. He might have gotten me pregnant, and I absolutely hadn't cared! (Strangely, I still didn't.)\n\nI'd allowed another man to tie me up, thus rendering me completely helpless.\n\nFuck!\n\nI should have felt guilty of course, yet oddly, I didn't.\n\nInstead, I felt liberated.\n\nInstead, I felt alive.\n\nInstead, I craved even more.\n\nI rolled out of the bed... alone... wondering where he was... likely upstairs somewhere, since I was in the basement of his house... wondering what time it was.\n\nI got up and stretched. I felt surprisingly refreshed after a night of such extremes of sexual debauchery. I didn't feel tired at all. I went to the phone in my purse and saw twelve messages from my husband. I read them all, and only the last three expressed some concern about my welfare.\n\nI called him. \"Hey,\" I said. \"I'm alive.\"\n\n\"I was worried.\"\n\n\"I just needed a day without electronics,\" I said, which except for the vibrating toy, was actually the truth. \"Sorry, I should have told you I was taking a technology break.\"\n\n\"Good for you,\" he said, having told me many times I lived far too much on my devices. Always having them on, responding to text messages and such at all hours of the day or night, including when we were out to dinner, or even during social gatherings.\n\n\"Yeah, I figured you'd appreciate it,\" I said, although my tone conveyed a slight hint of annoyance at his patronizing response.\n\n\"Woah. I didn't mean that in any way except 'Good for you',\" he clarified.\n\nSure, he meant well; and he certainly wasn't trying to start a fight. But I was, so I said belligerently, \"I know what you meant.\"\n\n\"Honey, I didn't mean anything at all,\" he attempted to backpedal, immediately on the defensive. Which was a position I put him into a lot, I realized.\n\n\"Sorry,\" I apologized, as I realized I was only trying to start a fight so I'd feel less guilty about cheating on him. \"I'm feeling just a little sensitive,\" which was true; my pussy felt raw from last night's overuse.\n\n\"No worries,\" he said. \"How was it to unplug and just let go of the rest of the world?\"\n\n\"Amazing,\" I said, conscious of still telling him the absolute truth, even while misleading him. \"Liberating, even.\"\n\n\"I said that you would,\" he said, again not deliberately attempting to start a fight, but oblivious to his own smarminess... he was who he was.\n\n\"Yeah,\" I said, ignoring his stereotypical 'I told you so', and instead saying, \"It felt liberating just to let go.\" I stopped short of adding '...and to give free rein to my carnal lust'.\n\n\"That's great,\" he said, oblivious to what he was calling 'great'.\n\n\"Yes, it was amazing,\" I said, really enjoying telling him something scandalous, while he thought I was saying something far more innocent. \"Literally life-changing.\"\n\n\"Awesome,\" he said. \"Well, I hate to cut this short, but I'm attending a breakfast meeting.\"\n\n\"Sounds good,\" I said. \"I need to go get some breakfast myself.\"\n\n\"Love you,\" he said.\n\n\"I love you too,\" I said automatically, now feeling slightly guiltier, although still not very much. I did love him. I really did. Just not with any passion anymore, and recently I'd realized I needed a lot more than just vanilla love.\n\nWe hung up, and after going to the washroom, I looked around for my dress, since I was wearing only the garter belt and stockings I'd worn beneath it last night. Not finding it, I shrugged and walked upstairs to where I assumed the kitchen would be. (The previous evening when I'd arrived, I'd been so preoccupied with other matters I hadn't noticed whether Paul's house even had a kitchen!)\n\nTo my surprise, he was already up.\n\nTo my further surprise, he was sitting at the kitchen table reading an actual printed newspaper! Who still does that in 2021?\n\nAnd next to my astonishment, he had a woman wearing a maid's outfit kneeling under the table sucking his cock!\n\nHe didn't look up, as he said casually as if there wasn't an elephant in the kitchen sucking his dick, the dick I wanted to suck, the dick I'd been hoping would be my breakfast, \"There's a full breakfast ready for you in the dining room. Be sure to fill yourself up, because you have a busy day ahead.\"\n\n\"Yes, Master,\" I said submissively, secretly glaring at the brunette under the table who was bobbing slowly on his penile masterpiece... jealousy and envy coursing through me.\n\nI went into the next room, where a very nice spread was indeed laid out. I dished up some pancakes, some sausage (not the sausage I was craving), some bacon and some toast. It was only with the amazing aromas and food before me that I suddenly realized how hungry I was... all I'd eaten last night was some cum, and nowhere near enough of that... not for nourishment, anyway.\n\nI returned to the table and sat down across from him. As I began eating, he asked, \"How was your sleep?\"\n\n\"Surprisingly refreshing,\" I reported.\n\n\"Why surprisingly?\" he asked, finally looking up at me for the first time since I'd arrived upstairs.\n\n\"I don't normally sleep very well,\" I explained. \"I tend to be a restless sleeper.\"\n\n\"That's because normally you're constantly thinking about work and never letting yourself go,\" he said, or more like lectured (but just pedantically, not browbeating me at all).\n\n\"I suppose,\" I responded as I ate some bacon. He was likely right. I was usually either working or thinking about work every waking moment of my day, regardless of where I was. But last night, from the moment I'd wandered curiously into his sex room, my work brain had vanished... I hadn't thought about work at all!\n\n\"Oh, there's no I suppose,\" he refuted. \"I know what I'm talking about.\"\n\n\"Yes, Master,\" I said, loving his strong confidence and knowledgeable persona.\n\n\"You do know it's almost eleven?\" he enquired.\n\n\"What? No way!\" I gasped, having not even glanced at the time when I checked my phone, preoccupied with my husband's texts. \"I never sleep in that late!\"\n\n\"That's the freedom granted by your ultimate submission,\" he explained.\n\n\"I guess so,\" I laughed. \"I can't believe it's eleven already.\" By now I would normally have worked out, read the news (on my iPad of course, not an actual newspaper), eaten breakfast, showered, and would likely be on my computer working, even though it was a Sunday.\n\n\"One thing about submission and surrendering your control completely, is the astonishing tranquility resulting from unthinking obedience,\" he said. \"Or less wordily, once you let me do all your thinking, you're free.\"\n\n\"I hadn't thought of that,\" I admitted, not sure it could possibly be that simple, and yet I did feel a tranquility I was far from accustomed to... a relaxed morning, even on a weekend, wasn't something I normally experienced.\n\n\"Ah, but as of last night, it's no longer your job to think when we are together,\" he said, as if I should have remembered, which hurt just a bit, even though I vaguely remembered hearing him say something like that last night. \"From now on, I'll be doing all your thinking for you. At least whenever you aren't working.\"\n\n\"Yes, Master,\" I obeyed, happy he'd included the addendum. What he was saying was that he saw me as his submissive slut whenever we weren't at work, but he still respected me as a career woman with a head on her shoulders whenever we were in the workplace... which was exactly the kind of relationship I'd been secretly fantasizing about, and even longing for, for many years.\n\n\"Good. Now once you've finished eating, and no big hurry, you may help yourself to seconds if you like, then you may go shower, second room on the right down that hallway,\" he pointed, \"and then go to the next room on the right, the third one, and put on the attire I've arranged to be left for you on the bed,\" he instructed. And then he groaned, and from his expression, he'd just unloaded his morning load into the maid's mouth.\n\nAnd pitifully, all I could think was, Why not my mouth? Which served me right I suppose; he'd warned me not to think.\n\n\"Yes, Master,\" I replied, still finding just mindlessly obeying his instructions not only as natural as breathing, but also completely liberating.\n\n\"Good,\" he said. \"Barbie, you may come out now, and stand up.\"\n\n\"Yes, Master,\" she obeyed. A moment later, she was standing before me with a couple drops of his cum still on her lips, which she soon licked clean.\n\n\"Barbie, this is Seesee; Seesee, this is Barbie,\" he introduced.\n\nI did a double take! It couldn't be! But it was! My eyes went wide! I knew this woman! Fuck, everyone knew her! She was a Senator from our state of Massachusetts. She was a role model for all women. She would possibly become the first woman U.S. President. Although her name wasn't Barbie, never Barbie, it was always Barbara. Except when you weren't addressing her as 'The Honorable Senator Brown'.\n\n\"It's pleasant to meet you, Seesee,\" she greeted me graciously. After she'd given me a thorough and approving look up and down my body, she thereafter ignored my almost total nudity, apparently viewing it as an inconsequential (but pleasant) detail of my presence here.\n\n\"Actually, we met a couple years ago at a fundraiser for women in need,\" I mentioned, in awe of the personage standing in front of me, and doing my best to act as if I weren't virtually naked.\n\n\"I'm sorry for not remembering,\" she apologized, apparently sincere.\n\n\"Please don't be,\" I hastened to reply. \"I can only imagine the number of people you must meet on any given day.\"\n\nPaul cautioned, \"Now it goes without saying that whomever you meet, and whatever you witness in my house, is all one hundred percent confidential.\"\n\n\"Absolutely!\" I agreed wholeheartedly, with so many questions swarming around inside me. But the main one was simply: how on earth had Barbara Brown, such a well-known politician and internationally respected feminist, ended up under a table wearing a maid's outfit, sucking Paul's cock and swallowing his cum? \"But... Seesee? Really?\"\n\n\"If the honorable Senator here can tolerate being called Barbie, I don't think it unreasonable for me to trivialize your name as well.\" Then addressing the cock sucking Senator, \"Do you object to my calling you Barbie, your honor?\"\n\n\"You know I don't, Master,\" she replied with a saucy grin.\n\n\"Then Seesee, it's settled. Barbie will help you to orient yourself after you've showered.\"\n\nAfter she walked away with impeccable dignity, managing to do so wearing six inch heels, impractical for any woman under any circumstances, he said, clearly reading my mind like he always did, \"Like I said, many strong women are searching for a man who can sexually put them in the place they crave.\"\n\n\"She's married, you know,\" I pointed out, although my own marriage obviously hadn't stopped me from handing over my reins to him.\n\n\"So?\" he asked.\n\n\"Just saying,\" I said.\n\n\"Most of my pets are married; they're just never sexually satisfied until they've joined my \"chosen family\",\" he said.\n\n\"Have you fucked her husband?\" I asked, recalling his telling me he planned to fuck mine, and Barbara's husband was a nationally prominent businessman.\n\n\"I cuckold every husband of every woman I train,\" he said, not directly answering the question, but nevertheless conveying the answer. \"Now go shower. We need to begin your Day Two's training.\"\n\n\"Yes, Master,\" I said, as he left the room and I headed to the bathroom.\n\nI took a long, not quite scalding hot shower... cleansing myself of sin, while prepping myself for more sinning.\n\nI got out, wrapped a towel around myself and went into the bedroom, where I found only a pair of white thigh high stockings and a white leather collar placed neatly on the bed. No panties. No bra. Not even any lingerie. The collar had a small metal ring for attaching a leash. I understood immediately that today would be an entirely new level of submission, compared to last night's.\n\nI sat on the edge of the bed and slid on the silky sheer stockings... which were easily the softest, sheerest, silk stockings I'd ever worn.\n\n\"You look good in those,\" Barbara observed, slipping unobtrusively into the room.\n\n\"T-t-thanks,\" I said, in awe of still being almost naked with this woman I admired so much. I knew she was almost sixty, but she didn't look anywhere near that age.\n\n\"I see you're Master's newest recruit,\" she said in a friendly way, coming over to me, carrying a white leather leash in her left hand.\n\n\"So it would seem,\" I said, part of me ashamed to be seen in such a humiliating situation, yet the knowledge that she'd obviously once been precisely where I was now during her own journey, made it far less so.\n\n\"Don't be too concerned about what you're about to experience,\" she said reassuringly. \"Even though it will be unbelievably challenging at first, once you give in to Master completely, you'll experience levels of freedom and pleasure you can't even imagine right now .\"\n\n\"Do you feel that way now?\" I asked, as she attached the leash to my collar.\n\n\"It took me some time, and some intense struggling against myself to get there,\" she explained openly and warmly, rather like we were sisters in arms. Except that she already knew the terrain lying ahead of me extremely well, while I couldn't even imagine it yet. \"Like you're experiencing right now I suspect, I went back and forth between two extremes. Thrilling to my ultimate submission and often even exulting at times, but attempting to cope with my ultimate shame and guilt at other times. Can you relate?\"\n\n\"Yes and yes,\" I said, this intimate conversation really buttressing my feelings. I had a difficult road ahead, but she had every confidence I'd eventually make my way along it, just like she herself had done. \"But I'm hoping the other side is different?\"\n\n\"Well, I'm not promising you'll ever feel totally guilt free, or at least not until your husband submits too, but the emancipating emotions of your submission, combined with the variety of pleasures you'll experience almost every step of the way, will usually override most of the guilt,\" she predicted.\n\n\"That's how I felt last night,\" I admitted.\n\n\"I'm glad,\" she said. \"You're very pretty,\" she added, as she leaned in and kissed me. Not passionately at all, but warmly, reassuringly.\n\nI felt wetness gush out of my pussy the moment her lips contacted mine while I mindlessly returned her kiss, in awe of whom I was kissing.\n\nWhen she broke the kiss, she offered, \"I'd love for you to come by my home for a visit sometime.\"\n\n\"Really?\" I asked.\n\n\"Yes,\" she nodded. \"I can promise you'll have the time of your life.\"\n\n\"I can imagine,\" I smiled.\n\n\"You see, I may be a submissive to Master, but I'm also Mistress to a number of submissive women,\" she said, a single finger gliding back and forth across the sensitive flesh between my bare breasts.\n\n\"I'd become your pet without any hesitation,\" I replied, literally trembling with excitement at the possibility.\n\n\"I know you would,\" she said, her finger slowly slithering down towards my fevered pussy. Just as a finger of her other hand was almost touching her own pussy underneath her black, extremely short skirt.\n\n\"Ohhhhhhhh,\" I moaned, without her finger even touching my core.\n\n\"Oh, would I love to fuck you right here and now, you pretty thing,\" she sighed, \"but Master has given me very clear instructions.\"\n\nHer hand moved completely away from me, and she tugged gently on my leash.\n\nUnderstanding her silent instruction, I lowered myself first to my knees, and then onto all fours, symbolically becoming her pet. Or perhaps she was only serving as my pet sitter until delivering me to Paul.\n\n\"Follow me,\" she said, and I did, wetness leaking out of me, as I followed this submissive/maid/Mistress/feminist/Senator, like a bitch in heat.\n\n\"Yes, Mistress,\" I replied, the idea of perhaps ending up between the legs of someone as powerful and inspiring as Barbara was a major rush.\n\nShe didn't say anything, but I thought she might be smiling as she led me back down the hallway, awkwardly (me, not her) downstairs to the basement, and back to the scene of last night's criminal activity. (Not literally of course, it only felt like it.)\n\n\"Climb onto the bed,\" she instructed.\n\n\"Yes, Mistress,\" I said, doing as she instructed.\n\n\"Are you already stealing my new pet before I even get her trained?\" Paul asked unexpectedly. I hadn't noticed him when I crawled in... since I was focused on the incredible legs of the amazing women who'd taken me for a walk. (I know, Woof! But this could be you someday, if you're extremely lucky!)\n\n\"Steal isn't the right word,\" Barbara said. \"Borrow, I think is a better descriptor.\"\n\n\"She's quite a catch, with many possibilities,\" Paul said.\n\n\"Her possibilities are endless,\" Barbara agreed, \"eventually anyway, but not just yet, at least not for me,\" as she stroked her hand enticingly over my ass.\n\n\"I'll see you when you return next week, slut,\" Paul said, obviously dismissing her.\n\n\"Yes, Master,\" Barbara said, sounding a little disappointed, just like I was. \"It was nice meeting you, Seesee. Enjoy your training.\"\n\n\"Thanks,\" I said, wondering how soon I'd be able to become her pet too. But taking a step back from the thought, I couldn't help but shake my head at just what I was thinking. How quickly I'd shifted from a no-nonsense boss all my employees feared, to... to... whatever I was now.\n\n\"Don't worry,\" he said. \"You'll get to play with Barbie someday.\"\n\n\"I truly hope so,\" I said, hoping she heard that, but I was facing the other way, and wasn't even sure she was still in the room.\n\n\"Oh, I guarantee that you will,\" she replied, still nearby and sending a real thrill through me! \"But for now, I have a flight to catch.\"\n\n\"Bye, slut,\" Paul said, and hearing Paul addressing someone as prominent as Barbara with that slur was simply surreal!\n\n\"Bye, Master,\" she said.\n\n\"So are you ready for Day Two of your training?\" he asked me.\n\n\"Yes, Master,\" I answered with some trepidation, but still willingly enough.\n\n\"Today's training will be more intense than last night's.\"\n\n\"That I can't fathom,\" I said, recalling how intense everything had gotten last night.",
        "\"Oh, but you will soon. I'm just beginning to push your boundaries,\" he said, as he walked around the bed I was sitting on carrying some rope, sat down next to me, and tied my wrists together... in front of me, thank God... and then maneuvering me into a strange position, he lifted me up with a forearm beneath my belly and brought my bound wrists underneath me towards my legs, before tying them to my ankles... and thus face planting me into the bed. Totally exposed and vulnerable, I mused that this must be what a face down, ass up position would be. \"This will be uncomfortable at first, but eventually you'll get used to it.\"\n\n\"Yes, Master,\" I said with outward docility, but not certain he was correct about the getting used to it part, although the uncomfortable part was true already.\n\nHe then got off the bed and fixed a bar between my ankles, keeping them about eighteen inches apart. I hated my total helplessness, and yet I was powerfully turned on.\n\n\"I hope this means I'm getting that big dick of yours,\" I said.\n\n\"Not until you've earned it, or at the very least begged sufficiently for it,\" he said, as I then felt something shoved into my mouth... and strapped around my head. A ball gag. It seemed I wouldn't be doing any begging anytime soon!\n\nInstead of his dick, I felt a vibrating toy slid into my pussy. \"Mmmmmm,\" I moaned into the gag, wishing I could say something nasty to him. Reliving last night, then this morning seeing him getting head under the kitchen table, my being kissed and touched by Barbara, and now a toy in my pussy, had me completely ready to erupt.\n\nHe once again lifted me up and propped three cushions beneath me, so instead of being face planted, I could now see immediately in front of myself, but only a couple feet or so. He then placed an iPad in front of me, so just about all I could see was its screen.\n\n\"Now watch these videos, but no coming,\" he instructed.\n\nI would have argued that this prohibition seemed impossible to comply with, but I was bound securely with a gag in my mouth, so my protests literally never left my mouth.\n\n\"I'll be back in a couple of hours,\" he said casually, and left me to it.\n\nAgain I wanted to say something, to plead with him to fuck me, yet all I could do was perch within the cushions on a fulcrum of my hands and feet, in a very awkward and strange doggy style position, and sort of enjoy the teasing vibrations inside me while resisting coming because of them, and watch the video placed before me from about a foot away.\n\nThe first video had been filmed in this very room, on this very bed, and it showed a big boned blonde with her face pixilated out, taking simultaneous cocks in her pussy and ass... a kink I'd never tried, and in all truth never even fantasized about. I'd done a few wild things in my youth: in the early days of my professional career I'd sometimes used my mouth and body to get something I wanted, but I'd never given up my ass... it just didn't seem erotic... I was never intrigued... it was just an out hole... plus, it seemed so unsanitary.\n\nThis blonde would disagree with me. She had a gorgeous English accent with which she begged, \"Double team my holes, fuck my arse, fuck it good.\"\n\nHearing the word 'arse' made me smile. I couldn't explain why, but arse sounded dirtier than the American 'ass'... and also somehow kinkier. Her performance didn't make me want to take a dick in my ass, but she made it apparent that she found it very pleasurable.\n\n\"What are you?\" Paul's voice asked.\n\n\"I'm a dumb cunt who loves a dick in her arsehole and another knob in my quim, while my useless husband wanks himself,\" she said, looking right at the camera, assumedly her husband either filming or near the camera, or perhaps the video was for him to see later.\n\nWhich made me wonder.\n\nHow would my husband Joseph take my infidelity?\n\nHow well or how badly would he take watching another man's cock using my mouth or my pussy?\n\nHow would he take meeting Paul, with my introducing him as my Master? Especially if I did it while almost naked, and down on my hands and knees while Paul held my leash?\n\nHow would he take being turned into a cock sucker, and then ass fucked, like Paul had told me he'd someday do to him?\n\nBut did Paul actually fuck men? He didn't seem like a man who'd fuck another man. He was a man's man. A man who knew what he wanted and took it. I simply couldn't imagine his fucking another man. Yet a week ago, I also couldn't have imagined myself naked and bound in another man's sex room watching porn, praying for him to hurry back so he could use me any which way he wanted!\n\nFuck!\n\n\"Oh yes, come in my arse, come in my shit box, so my cuckold husband can crawl over here and eat my gaping arsehole while it's leaking with a real bloke's cum,\" the woman spoke wickedly. If I didn't know this was a homemade porn film shot in Paul's sex room, I would assume this was a scripted video. No one talked like that in real life... yet there she was... and here I was... which was where she'd been... which... I must have been getting delirious since my head was spinning!\n\nAs I continued watching, her moans getting louder, her speech getting nastier, and Paul becoming equally verbal (for some reason the man in her other hole... and which hole each man was in I couldn't say, since all I could see was her pixilated face and her tits, that weren't), I couldn't help but replay my week just past, and how I'd progressed from a strong, no-nonsense businesswoman to being here almost naked, securely bound and completely lacking in any control of my actions whatsoever. And even including the frustration of my constant struggle against coming, I was pleased as punch to be here!\n\nI'd known within a minute of meeting Paul there was something about him... something magnetic... something that drew me to him like a moth to a flame, even while his eyes saw through my tough no-nonsense exterior to the submissive inside me who was silently yearning to be allowed to come out and play.\n\n\"Yesssss, he's coming in my arse, Harold,\" the woman screamed, and this nasty revelation appeared to trigger her orgasm.\n\nI didn't want to get ass fucked... it still seemed so wrong... yet knowing I likely wouldn't have any choice about it, the idea of cum getting shot up my ass was oddly intriguing.\n\nThe scene shifted to a different woman, who was being fisted... something I had indulged in more than a few fantasies about doing. The idea of taking a fist, or even a wrist, or perhaps even an entire forearm up my cunt, was a highlight of my bucket list that really turned me on... although in all my fantasies, it had been a woman doing it to me... and in this case it was a man, likely Paul who was fisting this hairy pussy... the shot an extreme closeup of only that, so I couldn't remotely tell what the woman looked like... I could only listen to hear her moaning while the forearm fucked her.\n\nCould I take a fist?\n\nAnd a wrist?\n\nOr an entire forearm?\n\nI recalled how in our meetings, Paul's eyes had always appeared able to see right into me. And if he really could... he'd know I wanted this. To be fist fucked.\n\n\"Oh fuck, I'm so full!\" the woman moaned.\n\n\"Only real sluts take entire fists up their cunts,\" Paul informed her (and me), confirming my suspicion about whose fist this was.\n\n\"That's what you've turned me into... a real slut,\" the woman accused, but not in a blameful way, just giving credit where it was due.\n\n\"No, you were always a real slut, you just didn't know it,\" he corrected her.\n\nThis was similar to something he'd said to me. He'd seen in me what my blind husband hadn't detected in more than twenty years of marriage... my need to be used... to be dominated...\n\n\"Yes, you awoke the submissive slut within me,\" she moaned, sounding like her orgasm was rising.\n\nPerhaps that was true for me too, or at least partially true. Maybe I'd always been a slut and was just afraid to act like one.\n\nI'd always known I had this slutty side inside me dying to come out. From the porn I watched. The erotica I read. The fantasies I had. The sexual extremes I'd gone to with strangers a few times when I was younger, that I'd always judged myself so harshly for afterwards... they all pointed to that side of me.\n\nSo Paul wasn't necessarily awakening the submissive slut within me, but was rather just giving her permission to come out and play... was telling her she wasn't shameful but natural... and was helping me to accept that this dirty side of myself wasn't a catastrophic character flaw or a fatal weakness. For that's what I'd always told myself after my orgasm had ended from a nasty masturbation experience of imagining myself being treated like a slut.\n\nAnd as Barbara had told me earlier... the result was liberating!\n\n\"Ooooooh, fuck,\" the woman screamed, as she came from the fisting. Paul pulled his arm out, and her cum sprayed all over the place, like a faucet had burst. Again something I'd only seen in porn... although with the volume of fluids I'd squirted when I came yesterday following all that teasing may have been close.\n\nI couldn't help but imagine Karen, my secretary cum pussy eater at work, and very recently my new friend and Mistress, spreading my legs on my desk and fist fucking me.\n\nThe scene switched to a slender black woman with cocks in all three of her holes... being fucked airtight.\n\nGetting spit-roasted back in the day had been exhilarating (until the shame always hit me afterwards), and I knew I'd love to get fucked from both ends again... big lovely cocks using my pussy and mouth as I bounced back and forth like a rocking horse... but this time guilt free! Or at least that was my hope... Barbara had told me it would become a possibility once Paul had gotten my husband Joseph on board with my new lifestyle. And with his new lifestyle as well!\n\nI wondered why Paul was making me watch all of this. Was he foreshadowing each of those events happening to me? Or was he only trying to drive me wild with hot, nasty homemade porn while he had me bound, helpless and with a toy buzzing slowly in my pussy.\n\nThen it hit me!\n\nHad he filmed my submission last night?\n\nWas he filming me right now?\n\nAnd if he had filmed me last night and/or was doing it now, would he add me to this compilation?\n\nAnd was I okay with that?\n\nHe had blurred the faces of both women I'd seen so far, and I hadn't seen any more than the cunt of the fisted girl.\n\n\"Oh yeah, this bitch loves it,\" someone who wasn't Paul said.\n\nThe woman moaned on the cock in her mouth in response as I wondered... even after everything I'd submitted to so far... including giving myself to Paul mind, body and soul... and cheating on Joseph with very little guilt and absolutely no remorse... I wasn't sure I could ever go this far. Being ass fucked. Then once that hurdle was surmounted, being fucked airtight.\n\nSomehow cheating on Joseph with Paul I felt okay with, since I felt strongly that Paul was my sexual kindred spirit while Joseph never had been, so it didn't really feel like cheating... but fucking a second guy, or a third one, would unquestionably qualify.\n\nI know that logic is irrational, but it made sense to me.\n\nI'd obviously crossed a line... a crossing that could never be undone. Yet there were still other lines I wasn't prepared to cross... but then I realized with foreboding that I'd declared I would obey Paul without hesitation no matter what... and I'd pledged to be his willing slave with no expiration date... body, mind and soul.\n\nThe video switched to a Latina, at least her body type suggested she was one. She was kneeling at a gloryhole bobbing on a cock, presumably a stranger's, through a hole in the wall.\n\nVery much like the fisting, this one excited me.\n\nThe idea of sucking a stranger's cock, or better yet several strangers' cocks, through a barricade concealing the men's and my identities I found extremely exciting, and this was one of my ultimate fantasies. I'd been tempted a couple times while visiting distant cities to explore the experience ... but had resisted the temptation.\n\nCock after seemingly endless cock!\n\nLoad after endless load!\n\nThe girl then stood up, turned her huge booty around, and backed up to take a cock in her pussy.\n\n\"Fuck, that's so hot,\" I moaned into the gag. (Well I knew what I was saying, even though nobody else could have made any sense of it.)\n\nThis gloryhole wasn't inside a dirty bathroom like in every porn film, but it was in what looked like a very nice room... it was even carpeted. Which made me wonder if this gloryhole was here in Paul's house! It seemed unlikely, but that's what popped into my head.\n\nThen I wondered fancifully if I could somehow create a gloryhole in one of the men's rooms at work, so I could extract a few doses of cum from my employee's cocks in an attempt to give something meaningful back to them... and thus making amends for my harsh treatment of them over the years.\n\nWhich brought me to what in retrospect should have been an obvious question. Why weren't there any gloryholes for women... you know, where women (or perhaps men as well) could eat pussy discreetly! in 2021 wouldn't one think this was a brilliant idea?\n\nHow many women who were straight but curious, or bi and hungry for pussy, or lesbians just cruising for anonymous cunt, would frequent such a service? But I needed a label for this innovation. Pie spread? Cherry dive? Peach dip? Beaver pie?\n\nActually, this version of a gloryhole and thus the label, made a lot of sense, since it would give any woman, perhaps even a very shy one, the opportunity to savor the glory of another woman's sweet hole. Maybe the gloryholes for cocks should be renamed instead. Dick stop? Cock suckers' delight? Jizz emporium?\n\nI shook my head at how meandering my thoughts were becoming while I watched this woman bouncing back onto the cock in the wall. The videos in front of me and the buzzing inside me were driving me wild, and they were turning my brain into a muddled mess... which truth be told, it really had been ever since Paul had first walked into my office.\n\nThe woman spun around, dropped back to her knees and devoured the cock. Unfortunately there was no sound for this clip, but assumedly she swallowed his load. God could I use a load, or even two.\n\nThe video changed scenes again... this one with sound again... and this time it was two girls in a 69 while Paul, I assumed it was Paul, was fucking the one on top.\n\nI imagined Karen and my sharing this same 69, with me on the bottom licking her pussy while Paul fucked her from behind.\n\nAs I imagined this menage, I couldn't help but be shocked all over again to recall learning that behind Karen's persona of married with a kid who'd just turned three, my secretary who'd willingly for years been eating my pussy whenever I beckoned her, was actually, or perhaps was also, a dominant woman who had a stable of at least several pussy lickers in our office building... something I hoped to learn lots more about while I progressed in my sexual awakening.\n\nLike I did, she hid her true sexual identity behind a businesslike fa\u00e7ade... just like Barbara did as well... and I now decided, like many women must be doing.\n\n\"Oh yes, fuck me,\" the top woman moaned to the onscreen Paul, and I really wished someone would fuck me right now! I was so horny I'd likely be eager to fuck the next man I saw, regardless of his age, looks, body type... I just needed anyone's dick pounding my pussy and giving me permission to come so fucking bad ... this toy inside me right now, along with my being forbidden to orgasm, was super fucking frustrating.\n\nI begged aloud to Paul... whether he was present or not... to please make me come, but of course my pleas were muffled into incoherent babble.\n\nAs I watched, I wondered who else at work might be willing to let me dine on her pussy ... one more reason to begin hiring more women.\n\nJust like giving myself mindlessly to Paul, I also didn't view my eating more pussies or allowing more women to eat mine, as cheating.\n\nI wondered how long I'd been bound here like this. However long it was, it was very uncomfortable by now.\n\nPaul came in the girl's pussy, pulled out, and the girl on the bottom leaned up to dine on that assumedly delicious cream pie... another thing I'd love to try... eating a man's cum from a freshly fucked pussy. Mmmmmmmmm!\n\nThe scene changed again, and this time I audibly gasped. I mean as audible as anyone could gasp with a ball gag wedged inside their mouth.\n\nA naked woman with huge tits was kneeling in a men's bathroom, and she was being pissed on!\n\nNow this wasn't a kink I'd ever even considered! Of course I'd run across the term golden shower once or twice, but I'd never given the possibility of actually doing it... from either vantage point... any consideration at all. That was a style of kink I wasn't remotely interested in.\n\nNo way would I ever want anyone to pee on me. That would be sinking to a level of degradation I wanted absolutely no part of. None! The sight of it actually caused my burning pussy to chill a little, while cock after cock, and then even two women, pissed all over her face and tits while calling her filthy names, and then strolled out, once they'd emptied themselves on her. The woman even kept her mouth wide open to catch as much of the urine as she could, which made this disgusting visual even worse. Why would anyone willingly allow that to happen?\n\nThen as yet another stream of piss was entering her mouth, she brought her hand to her pussy and frantically rubbed herself... and then came in under a minute, while she even swallowed a mouthful of the vile stuff!\n\nWhat the fuck? Who would actually do this? Who the hell would allow themselves to be humiliated and degraded like that? And then to get off from it?! Incomprehensible!\n\nPaul sure as fuck had better not want me to get pissed on. That was a line I surely wasn't willing to cross. Ever!\n\nThe video changed again, thank God, and this one rekindled the flame inside me. A petite Asian woman (I'm pretty sure she was Asian), with long, straight lavender hair reaching almost to her ass, was on her knees while about a dozen men encircled her... each of their dicks hard and looking ready to erupt.\n\nThe girl crawled from cock to cock, sucking one and stroking two others at each stop.\n\nTotally unlike the previous scene, this one was hot. I mean it was really hot!\n\nThis was another of my recurring fantasies. Having an abundance of cocks loaded and ready to explode all over my face was the ultimate rush. The feeling of even just one man's warm cum on my face... the most I'd ever experienced at a time... had always been a turn-on for me... perhaps it was because of my submissive nature... perhaps my secret desire to be humiliated... or perhaps it was only the warm sensations of a man's cum splattering on my face along with the knowledge of what it was... but it had always turned me on big time.\n\nBut a dozen loads... all coating my face... fuck... so hot!\n\nGod, did I need to come! But frustratingly, I wasn't allowed to. Nevertheless, I almost did! But I managed not to.\n\nInstead I just watched, as cock after cock unleashed a massive load all over this Asian beauty's face... which although it was partially blurred out without overly hampering the visual, it was still hot as fuck.\n\nShe moaned while each load splashed down on her.\n\nShe continually begged for even more cum.\n\nAnd once all those pistols had shot their loads, she scooped the accumulated cum off her face and ate it by the handful!",
        "So fucking hot!\n\nThe video ended, and then the cycle began again with the big boned British blonde being banged in her quim and her arse by Paul and some other bloke.\n\nAs it did, I pondered the obvious... how far was I willing for my own journey to go?\n\nYes, I had irreversibly crossed a line.\n\nNo, I couldn't go back in time and reverse my decision. Nor would I want to.\n\nYes, right now I was helplessly bound on a bed waiting for my Master to return, and undoubtably when he did I was either going to enthusiastically suck his cock, or get myself fucked, the very instant he allowed it to happen.\n\nYet anal?\n\nYet double penetration?\n\nYet airtight?\n\nYet... gah!... golden showers?\n\nYet facilitating in convincing my husband to suck cock and get fucked?\n\nWould I be willing to do any of those?\n\nI certainly wasn't comfortable with anal... and yet I sensed that with the right convincing I might be willing to explore it, and if Paul outright ordered me to, I'd grit my teeth and proceed, and maybe I'd even turn out liking it.\n\nMy husband sucking cock? Actually, that kind of turned me on... but the idea of his getting fucked, less so.\n\nBut the idea of enduring a golden shower was a complete turn-off. Just watching it had been bad enough.\n\nYet even as I pondered these... I had to admit very real... possibilities, I wasn't all that confident about my answers.\n\nI had agreed to obey Paul without hesitation, no matter what.\n\nI had agreed to be a mindless bimbo for him. Did my carte blanche submission necessarily mean I'd be subjected to whatever deviant acts Paul could imagine? Including everything I'd just watched, that he'd not only imagined, but had actually followed through with, and even filmed with these other women whose paths I was following?\n\nIf I honoured my promises... which I couldn't deny had been made with utter sincerity... possibly even desperation not to miss the opportunity... I literally had no choice about doing whatever he might order me to do.\n\nOne thing was sure... he was going to push my boundaries. He'd even told me he would!\n\nAs the scene changed again to the fisting one, he walked in and asked breezily, \"Enjoying the video?\"\n\n\"Most of it,\" I answered, unable to turn around and look at him, and thus recalling I had a plastic ball strapped in my mouth so he wouldn't have understood me at all.\n\nHe chuckled, \"I guess I should remove your gag if I'd like a comprehensible answer.\"\n\nHe unfastened and removed the ball gag, and instantly I began moving my mouth around through extreme grimaces... a mouth stretch, per se.\n\n\"So did you enjoy the video?\" he asked as he sat down and began fucking me with the toy.\n\n\"Most of it,\" I repeated, this time understandably.\n\n\"Only most of it?\"\n\n\"Yeah, some of those things were a little too extreme for my tastes.\"\n\n\"Which ones?\" he asked, sounding genuinely curious.\n\n\"The peeing for sure,\" I said. \"Yuck!\"\n\n\"Yes, lots of people can't wrap their heads around some people finding golden showers pleasurable.\"\n\n\"It just seemed like humiliation for humiliation's sake.\"\n\n\"Many people see it that way. But did you see her cum?\"\n\n\"Yes,\" I admitted.\n\n\"Do you think it was faked?\"\n\n\"No, it certainly seemed genuine,\" I said after a moment's thought.\n\n\"Every woman, and every man for that matter, has a kink or two that many other people if they knew about it, would find scandalous or taboo or disgusting,\" he said.\n\n\"I suppose that's true,\" I said, thinking that my submissive nature, and also my fisting and bukkake fantasies, would all fit into that category for sure.\n\n\"For her it's being pissed on,\" he said, still slowly fucking me with the toy. \"It's her ultimate rush... it even triggers her most intense orgasms.\"\n\n\"I just can't fathom anyone going there,\" I said. \"But regardless of what I think, I can't deny it certainly worked for her.\"\n\n\"A large part of your training will be to experiment with a wide variety of kinks so we can discover the triggers that lead to your most intense orgasms. And also to discover those activities that truly repulse you. I promise never to force you into doing something I truly believe will cause you extreme anguish, harm you emotionally, or that will damage your reputation or would place your career at risk. But short of those, you will obey me in all things. Except that... you'll have a safe word which I'll always honor without hesitation. Everything stops if you invoke your safe word, and then we can discuss the issue openly, with no further coercion from me, at least not until the end of our discussion. Do you understand all that?\"\n\n\"Yes\", I replied quietly, and now with the possibility existing of my having at least some say in these matters, I was surprised to find myself questioning just how repulsed I really was by all that I'd seen.\n\n\"I play hard with my fuck toys -- but I never break them. In part that's so I can continue using them but also, as hard as this may be to believe sometimes, I cherish each and every one of you. However, sometimes it might feel like you're broken. But even then only for a little while.\"\n\nHis confidence and absolute certainty were creating desire and hunger inside of me I had never... ever... experienced. At this moment, I truly would do anything he required, no matter how repulsed I thought I may be by it.\n\nWe sat quietly for a few moments, while he allowed me to process everything he'd just said... and then...\n\n\"Was there anything else you found disturbing?\" he asked.\n\n\"Anal,\" I admitted.\n\n\"Oh,\" he said.\n\n\"Yeah, I've always considered my anal passage like a river flowing in only one direction, which is downstream.\"\n\n\"Well, that is most unfortunate,\" he said, his hand beginning to caress my ass.\n\n\"It's just so dirty,\" I added, a chill coursing through me from his tone, and the appearance of his hand on my ass.\n\n\"Well, you are a dirty slut,\" he reminded me, \"and all my dirty sluts take dicks in all three of their fuck holes. That is non-negotiable, unless you choose to say your safe word, and we can end now.\"\n\nI didn't say anything while I pondered this new speed bump placed in my path, and while he pulled the toy out of my pussy.\n\n\"You didn't come, did you?\" he asked, I'm sure already knowing the answer.\n\n\"No, Master,\" I said. \"Although I came close at times.\"\n\n\"Good girl. A crucial part of your training is learning to control your orgasms,\" he said, walking over to a cabinet.\n\n\"Yes, Master,\" I said, watching him as best I could, from the awkward position I was still restricted to.\n\n\"You see,\" he said, as he grabbed some toys and some lube, \"submission requires mindless obedience, submission requires complete obedience, and submission requires putting your utter trust in my judgement. Although in return, my dominance over you requires that I always keep your best interests close to my heart, even though it won't always appear that I am to you. And in time, you'll learn from experience that I'll never harm you. You'll often experience pain at my hands, but never any lasting harm, just lasting benefit.\"\n\n\"I do trust you, Master,\" I said. \"That's how I ended up bound like this in the first place. I trust you noticed I didn't resist you in the least.\"\n\n\"Yes, I agree. So far you've been a very good pet, Seesee,\" he said, as he approached my ass.\n\n\"Thank you, Master,\" I said ridiculously.\n\n\"So do you trust me?\" he asked, as I felt something wet poured into my ass crack.\n\n\"Yes, Master,\" I answered. I did trust him, it was myself I wasn't sure I could trust.\n\n\"And you understand that I know what's best for you.\"\n\n\"Yes, Master,\" I repeated like a parrot, since from the beginning, whether I'd realized it or not at the time, he'd always known exactly what I needed.\n\n\"Then I'm about to prepare your asshole for my cock,\" he said.\n\n\"Didn't you say something about a safe word?\"\n\n\"Yes, but not for this exercise unless you wish to end our relationship before it begins. Like I just told you, anal is non-negotiable.\"\n\n\"Yes, Master,\" I said, \"please do as you wish,\" although my tone conveyed I wasn't at all excited or comfortable with this turn of events.\n\n\"Trust me,\" he said. \"You're going to love being an ass slut. It's one of the most authentic of submissive acts.\"\n\n\"It's just not a prospect that's ever turned me on,\" I said, \"unlike everything else you've ordered me to do.\"\n\n\"Well then,\" he said, as his finger probed the entrance of my butt hole, \"prepare yourself to be proven wrong. You're about to experience another variety of pleasure that you'll love, and it can only occur during anal sex.\"\n\n\"Okay,\" I said, but I flinched as I felt his finger slide inside me. I'd been expecting pain, but all I did feel, at least for now, was a little awkwardness.\n\n\"This will feel a bit weird at first,\" he informed me, very much like a doctor warning, 'This may hurt a little,' while intending only the best for the patient, as Paul slowly wiggled his finger inside my ass.\n\n\"You know there are erogenous zones inside your ass, right?\" he asked.\n\n\"I've never really thought about it,\" I replied, which was true.\n\n\"Yes,\" he added. \"There's a greater concentration of nerve endings in your rectum, and thus a higher potential for experiencing pleasure there, than there is in the entrance to your cunt. Although it's not as high a concentration as in your clit.\"\n\n\"Oh.\"\n\n\"And men have a higher potential for anal pleasure than women do,\" he added.\n\n\"Really?\" I asked, as he slowly moved his finger in and out... which felt surprisingly sensual.\n\n\"Yes. You've heard of prostate orgasms?\"\n\n\"I guess so.\"\n\n\"Those aren't possible for women to have, since you don't have prostate glands, but I'll be giving your husband one eventually,\" he said, as he pulled his finger out.\n\n\"I still can't imagine my enjoying this,\" I said.\n\n\"I know you can't,\" he said, as I felt something else poking at my ass. \"But until it happened to you, had you ever imagined being bound with a plastic ball strapped in your mouth and with a toy in your asshole? And then being forced to watch amateur porn where you knew one of the participants, and experiencing all this while being forbidden to come?\"\n\nI was about to respond, when he slid a sizeable toy into my virgin asshole.\n\n\"Nooooooooooooo,\" I moaned, both answering his question and protesting against his shoving the toy up my ass!\n\n\"There will be some pain,\" he cautioned, again sounding very much like my imaginary doctor just now, \"but only at first.\"\n\n\"I'm feeling that,\" I said, as my ass burned... not intensely... but undeniably.\n\n\"Embrace the burn,\" he advised. \"It's far more pleasant if you manage to do that,\" as he got off the bed, seized the vibrator and slid it back into my pussy... except this time it was raging away on high!\n\n\"Ooooooooooh, fuck,\" I moaned, as those powerful vibrations inside my pussy completely distracted me from the relatively slight pain in my ass.\n\n\"Now I have a new requirement for you. In the next several minutes, I want you to come as many times as you possibly can!\" he ordered enthusiastically as he began furiously fucking my pussy with the toy!\n\n\"Oh, Gooooooood,\" I screamed, as permission granted, plus the intensity of the vibrations, he had me erupting in just a few seconds.\n\n\"That's one,\" he said, holding the breakneck vibe deep inside my pussy while pulling the plug out of my ass.\n\n\"So intense,\" I moaned, as the orgasm continued ripping through me like a tornado touching down over and over again.\n\n\"A slut comes upon demand,\" he said, \"so that was well done,\" as I felt a larger toy sliding into my ass.\n\n\"Oh fuck,\" I yelped, as a new burn coursed through my asshole from the greater stretch.\n\n\"Focus on the pleasure,\" he ordered as the toy, which was not only quite wide but also quite long, kept advancing deeper inside me... much deeper than his finger or the previous toy had gone... creating even more pain as it drilled down to new depths.\n\n\"Okay, I'll try,\" I moaned, clenching my teeth as the pain hit, but the pleasure from the toy in my pussy did a reasonable job of numbing it.\n\n\"Soon you'll be taking my dick in your ass,\" he said, \"which is even longer and thicker than this toy,\" as it completed its journey into my ass.\n\n\"I don't think I'll ever be able to take your big cock in my ass,\" I worried.\n\n\"You're about to be very surprised, then. With adequate preparation, your ass will be able to take huge cocks,\" he said. \"Just like your mouth and your pussy.\"\n\n\"I don't know,\" I said, as the vibrator in my pussy and the toy in my ass seemed to be battling for my sole attention... at the moment neither of them winning.\n\nPain!\n\nPleasure!\n\nBattling it out!\n\nThe only quality they had in common was intensity.\n\n\"The pain will subside soon, and then all you'll feel is intense pleasure,\" he predicted, as for now he fucked only my pussy with its toy, the anal toy just resting deep inside.\n\n\"I really don't know,\" I moaned, even though the fast fucking and intense vibrations had my next orgasm rising quickly.\n\n\"Trust me,\" he said, as he really fucked my pussy with the vibrator.\n\n\"Ooooooh,\" I moaned, as now the pleasure actually was winning, engulfing the pain.\n\n\"It's already happening,\" he said unnecessarily, as he now began fucking both of my holes with both of the toys.\n\n\"Oh fuck yes, it really is happening, so fuck me, please fuck me as hard as you can!\" I moaned, the intensity of both toys now striving harmoniously towards driving me wild... both of my holes being fucked in unison provoking such rapture through me.\n\n\"Fuck what hard?\" he asked, pulling both toys out. \"Like I insisted upon last night, tell me what you want.\"\n\n\"My pussy, my ass, please Master, fuck my pussy and fuck my ass,\" I begged desperately, wanting those fucking toys back inside me! I wasn't absolutely certain even now whether the toy in my ass had been enhancing my pleasure or not, but I was absolutely certain the dual sensations had combined into something incredible! And now while he was leaving me hanging, I was desperate for the fireworks to resume.\n\n\"You're sure?\" he asked.\n\n\"Yes Master, I'm sure,\" I responded lustfully.\n\n\"You're absolutely sure you want your ass fucked?\" he asked again.\n\n\"Yes please indeed, please fuck my ass, fuck it with the toy, fuck it with your big cock, fuck it with a redwood tree if you want,\" I babbled just short of temporary insanity, willing to do anything to have my holes filled again... feeling so bereft and empty with nothing inside either of them.\n\n\"So are you telling me you want me to fuck your asshole and take your anal virginity?\" he asked. \"I want to be very clear about this. It has to be a decision you're making freely.\"\n\n\"Yes Master, I'm freely asking... no, I'm begging you to take my anal virginity,\" I pleaded, no longer caring about the stigma of anal sex, or about any stupid phobia about it that my former self (of about half a minute ago) may have had about it.\n\n\"But someone told me it's dirty,\" he said, using my words against me.\n\n\"And I'm your dirty slut,\" I declared, likewise using his against him. \"So please Master! Make me your three-hole dirty fuck slut!\"\n\n\"'I'm really going to gape your asshole,\" he warned.\n\n\"Gape the shit out of it,\" I said, although at the time I had no idea what gaping even was.\n\n\"Cute choice of words,\" he laughed, as he slid the raging, vibrating toy back into my pussy and positioned his cock at the doorway to my ass.\n\n\"Just shove it in,\" I said. \"I'm not afraid anymore, I want to feel the pain. I want to feel your cock destroying my asshole.\"\n\nHe obliged by slowly sliding his cock into my ass.\n\n\"Oooooooooooh,\" I moaned, as his fat cock slowly filled my ass... spreading my ass... creating a new burn... a new pleasure... a new intensity.\n\n\"Oh yeah, this asshole is now mine to use, or to share, however I wish\",\" he said, his hands grasping my hips as his cock kept going deeper into my ass.\n\n\"Yes, you own my asshole,\" I agreed, my head light, my body on fire... not at all worried about, or even registering his words 'to share'.\n\nPleasure!\n\nPain!\n\nIntensity!\n\nSubmission!\n\n\"What are you?\" he asked.\n\n\"A slut,\" I moaned. \"An ass slut.\"\n\n\"My ass slut,\" he corrected me.\n\n\"Yes, Master,\" I said, as his cock continued driving deeper and deeper inside me. \"I'm your ass slut.\"\n\n\"Such a tight ass,\" he moaned, and he was now resting his front against my backside... his cock all the way inside me.\n\n\"Such a lovely huge cock I have in my ass,\" I said, feeling so full, so good, so slutty, and yet so completely at ease... lost in a surreal moment of tranquility with at least eight inches of cock inside my virgin asshole. Yes, I still felt some pain, but now it was a good pain.\n\n\"Ready to get ass fucked?\" he asked.\n\n\"No, but yes,\" I said, knowing I'd just irreversibly crossed another line... and had reclassified another former taboo.\n\n\"Tell me what you want,\" he ordered, an instruction that to me was becoming his mantra, as he bucked his hips three times... hammering his cock into new depths in my ass and creating new pain, which in turn triggered new pleasure... the buzzing in my pussy continuing to add its own intense pleasure to the mix.\n\n\"I want to be your ass slut,\" I declared, \"over and over again, as often as you please,\" my body on pins and needles, but only wanting to give in completely to my submissive nature, and to behave like the slut I was born to be.\n\n\"Good answer,\" he approved, as he held my hips firmly, and began fucking my ass... slowly at first.\n\nPleasure!\n\nPain!\n\nIntensity!\n\nComplete rapture!\n\nI was probably going to hell for committing such a sin, but not anytime soon. And for now, I was floating into heaven while feeling such peace.\n\nThe pain continued dissipating more and more with each slow stroke, as all eight inches slid in and out of my no longer virgin (and no longer out-only) hole. \"Oh fuck,\" I moaned mindlessly.\n\n\"The pleasure is consuming you now, isn't it?\" he asked gently, as he continued fucking my ass.\n\n\"Yes, it's so good,\" I agreed, feeing complete serenity and pleasure while I was being sodomized.\n\n\"Tell me what you want,\" he repeated after a few dozen slow strokes.\n\n\"To be your complete ass slut,\" I replied dreamily. \"And for now, to have you fuck my ass harder.\"\n\n\"Like this?\" he asked, slamming into me.\n\n\"Yeeeeeees,\" I screamed, a brief moment of pain coursing through me, that was instantaneously numbed completely by the fresh surges of pleasure swarming inside me.\n\n\"Now I'm going to fuck your ass through multiple orgasms,\" he announced, as he began fucking me harder... deeper... rougher.\n\n\"Yes, yes, fuck my asshole just like that!\" I moaned/shouted, my next orgasm already coursing through me.\n\n\"Come like some nasty slut getting her asshole pounded,\" he demanded, as he really reamed my butthole.\n\n\"Yes, yes, oh fuck, yeeeeeees!\" I screamed just a few seconds later, able to do absolutely nothing except continue coming from getting my shit hole fucked.\n\n\"Good girl,\" he praised, \"but now I want another one!\" as he kept fucking my ass through my existing orgasm... while the vibrator inside me continued pulsing intensely, assisting in summoning the next one!\n\n\"Soooooo good,\" I moaned, as the orgasm still ripped through me, making my entire body quake, even while I could feel that next orgasm he required from me rising up.\n\nFor several more minutes, he kept fucking me.\n\nHard!\n\nDeep!\n\nAnd then that next orgasm struck!",
        "Then another!\n\nAnd yet another!!\n\nEach one bringing intense pleasure to me... so much of it I couldn't bear it anymore; I was overwhelmed!\n\n\"No more, no more,\" I begged weakly, the pleasure finally reaching such intensity I was about to pass out.\n\n\"No more what?\" he asked, still pounding my ass.\n\n\"No more fucking,\" I said. \"I can't take it anymore.\"\n\n\"Not until I unload in your ass,\" he denied me, not slowing down... this incredible man having the stamina of an eighteen-year-old.\n\n\"Oh fuck, if that's what you want, then do it! Fill my ass with your cum,\" I pleaded, the intense pleasure actually driving me a bit insane.\n\n\"Beg harder for my cum, and cum again just one more time, so you can milk the cock that owns you! And this time, squeeze that asshole as you come,\" he ordered with total dominance, while he pounded me like a real man who knew exactly what I needed!\n\n\"Yes Master, please cum in my filthy fuck hole and use it for your pleasure. Let me be your cum dump! Cum inside me, and I'll always do anything you say!!\"\n\n\"Okay, you filthy greedy slut, you're all mine!\" And, \"Here it comes!\" he bellowed after a couple dozen more strokes, as unbelievably, yet another orgasm erupted inside me!\n\n---+++---\n\nI woke up a few minutes later... or maybe an hour later... half a day?... I really had no idea... no longer bound... and lying comfortably on my back.\n\nI opened my eyes, and the first thing I saw was Paul sitting in a chair nearby, apparently having been waiting patiently for me to wake up, and with a glass of water in his hand. He might be the most demanding taskmaster imaginable, but at this moment I thought he was so incredibly sweet! What a treasure!\n\n\"Drink this,\" he said gently, coming over to hand it to me.\n\nI leaned up on an elbow, still feeling incredibly weak, accepted the water, and downed the entire glass in a single go.\n\n\"You'll always need to replenish your fluids after a good fucking,\" he told me.\n\n\"Makes sense, I must have lost a lot of liquid,\" I joked.\n\nHe smiled, \"Yes, you're quite the conveyer belt for rapid fire orgasms.\"\n\n\"You did come in my ass, right?\" I asked, pretty sure he had, but those last few minutes were a total blur.\n\n\"Yeah,\" he nodded.\n\n\"I can't believe you took my anal virginity.\"\n\n\"You seemed to be enjoying yourself.\"\n\n\"Maybe a little bit... the vibrator distracted me,\" I said, trying to defend my complete lack of restraint while he'd been railing my asshole.\n\n\"Yes, that was the point of my using it,\" he said. \"But the next time I pound your ass, we won't be needing any toys.\"\n\n\"Next time?\" I asked.\n\n\"Yes, that ass is mine now, and it will be well used, just like the rest of my newest three-hole fuck toy I call Seesee,\" he said.\n\n\"That sounds reasonable,\" I agreed, still thirsty.\n\n\"I'll get you some more water,\" he offered.\n\nHe left, and I sat all the way up, and then felt like I was sitting in a puddle of cum. I stood up and saw that I had been... it was a huge pool of his cum and mine intermingled.\n\nHe returned, handed me the water and said, \"I need to head out soon. Tomorrow we'll begin the next stage of your training.\"\n\n\"There's even more? What's left, now that you've sodomized me?\" I asked with an eager smile.\n\n\"You'll see. We're just getting started,\" he said.\n\n\"That's what you said last night,\" I said.\n\n\"It was true last night, and it's true again today,\" he elaborated. \"Tomorrow you'll begin completing a list of assigned tasks.\"\n\n\"Really?\" I asked.\n\n\"Really,\" he nodded. \"Seven days, seven tasks.\"\n\n\"I can't wait,\" I said, already curious to know what they were... although I did know they'd have to be pretty kinky.\n\n\"I know,\" he said. \"My endeavor is to make all your fantasies come true, and also to push your limits to extremes that even given everything I've put you through so far, you've still never imagined.\"\n\n\"I don't know whether to drop to my knees and suck your cock again in gratitude, or turn and run away in terror,\" I joked, admiring his semi-erect cock.\n\n\"For now, neither. Now go home and prepare for a week of awakenings,\" he ordered.\n\n\"Yes, Master,\" I said, as I looked around for the outfit I came here wearing so long ago. Or so it felt like, although in fact it had in fact been less than twenty-four hours.\n\n\"Oh wait, and In the future whenever we get together, and your safe word will be 'coconut'\" he said.\n\n\"Coconut?\" I asked.\n\n\"It's a distinctive word, and one that wouldn't ordinarily be used by anyone,\" he said.\n\n\"What about suck my coconuts?\" I asked playfully.\n\n\"Has that phrase ever left your lips before now?\" he asked, not smiling at my playful banter.\n\n\"No, I guess not,\" I said. \"And I hope I'll never utter the word again. I actually hate coconuts.\"\n\n\"Or we could use pineapple instead,\" he offered.\n\n\"No coconut is perfect,\" I said. \"Coconut is something I'll never eat or drink, yuck, so it can symbolize the way I'll do absolutely anything for you from now on, so and I'll never need to use that word.\"\n\n\"Good,\" he said.\n\n\"Plus, I like pineapples,\" I smiled, recalling how I'd sometimes noticed a subtle different taste in Joseph's cum whenever he'd eaten some pineapple.\n\n\"Now get out of here, slut,\" he said, slapping my ass.\n\n\"Yes, Master,\" I replied, wondering what next he would have in store for me... and very excited to find out.\n\nTHE END OF PART 2"
    ],
    "authorname": "silkstockingslover",
    "tags": [
        "anal",
        "submissive",
        "stockings",
        "lesbian",
        "cheating",
        "first time",
        "milf",
        "bdsm",
        "silkstockingslover",
        "submission"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-training-of-cecelia-ch-02"
}