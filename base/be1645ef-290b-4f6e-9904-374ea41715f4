{
    "title": "The Twelve Zenati Pt. 38",
    "pages": [
        "Authors note: Hello everyone.\n\nI guess I should tell you about the connotations of Australian Indigenous people being on country or back to country rather than being in the country as you might say in other English speaking countries. Saying \"Back to country\" is like saying I am going home or back to my roots. The indigenous use the word country as home but in an individualised way like the Yugambir tribe would call the area where I live country and say going back to country as coming to the Gold Coast and its surrounds in southeast Queensland. They would be on country when they are here, not in the country, if that makes sense. There is no \"THE country\"; it is just country. I hope that helps calm all the grammar nazi's out there.\n\nAgain, I am grateful to MsSensualiT for her continued help to be my second set of eyes as we crawl slowly towards the end. I hope those of you who enjoy this series continue to do so.\n\n~ellie. \n\nThe end of the last chapter:\n\nGideon raced through the streets of Darwin, heading for Madrina's home. The silly old woman had come home from the gathering early. As he pulled into her street and saw her house, he breathed a sigh of relief. Now to get her to a safe place if he could. He stepped out of the car and approached her door, taking long, rushed strides in his urgency. Taped to the door was a note with his name on it. He pulled it off to read the message.\n\n\"Dear cheeky boy, I am not so old and senile that I would not head for safety on a night such as this, but I knew when I couldn't get hold of anyone that you would come. So trust that I will be around to embrace my grandchildren.\" He could hear her cackle in his head, but it was interrupted by a rumble, then a flash of light and Gideon's world went dark.\n\n*****\n\nGenesis and Olivia had already left the ship when the first of their small fleet was hit with a missile of some kind. They were swimming as stealthily as they could toward shore when a hail of bullets sprayed the water and the boat they had been aboard only minutes before. Genesis kept Olivia close to him. She cried out in what he thought was fear until she continued to cry in a high pitch wine and clutched her shoulder.\n\nLooking up at the sky as the helicopters veered away, Genesis decided to head back to the boat rather than try for the shore while there was blood in the water attracting sharks of all kinds. Distant cousins helped him back onto his ship, having gotten there first from their own vessels intent on protecting the couple.\n\nThe helicopters did not turn to ensure they had completed their job, and Genesis led their small, waterlogged group inside the one remaining ship so he could see how badly Olivia had been hurt.\n\n*****\n\nThe one opening in the dark room, the door, gave little light when Marcella woke in the cave-like hut. She guessed it would still be early by the lack of light and noise from beyond that door. In this place, isolated from the people they cared about, it seemed to Marcella that the world was against them and the only people they could rely on now were each other. Their hearts were becoming more entangled, and she couldn't remember why she had wanted to fight it so hard. She moved her head forward from where it nestled in the crook of his shoulder so it was over his chest where she could hear his heartbeat.\n\nNoah stroked a hand up her body as she repositioned herself and felt her satiny smooth skin underneath his hands. He fit an ass cheek in each hand and pulled her closer, lifting as he rolled her onto him until her expectant face was even with his. His lips latched on to hers as if she was the only oxygen source in the room.\n\nMarcella had never been kissed like this, not even his other rousing kisses compared. It was impetuous, wild, and romantic, obliterating any thoughts in her head and at the same time tasting blissfully sweet. Maybe it was the experience of the crocodile almost dragging her into the sea or realising how much he loved her as they fled to this remote place. She went from scared out of her mind to panic because she wasn't sure about his plans to keep her safe when they both knew it was an impossibility.\n\nBoth were panting hard when the kiss ended, and their eyes glued together with a heartfelt ache for something neither of them had been looking for but had come to them regardless. A maelstrom of emotions passed back and forth, but both had a deep ache inside only the other could fill. Whether it was the disasters that plagued them, or the fear of losing each other, it was vital at that moment to have their arms around each other. They could both feel it now, and Marcie had given up fighting him for an independence that left her lonely and without even her family in the end.\n\nThey both became desperate, their kisses becoming frantic. Each felt fiercely alive, basking in their tempestuous feelings for each other. Everything around them faded into insignificance, and they only heard their heartbeats thundering in their ears. Noah rained kisses on Marcella's face as she passionately tried to kiss him back.\n\nMarcella leaned back, her heated eyes taking him in. She wiggled in his grasp until he let her move down his body where she could easily slide his boxer briefs over his hips. She wrapped her hand around his rapidly hardening cock and sucked it into her mouth as if she was starving. Hearing his groans sent chills down her spine as she worshipped his cock with her mouth. It satisfied her in a way she had never known with another man, and his moans were food for her soul.\n\nFeeling his hands pulling her head to his cock, and feeling him grow in her mouth made her glow with the power she had over him. Even when she gagged on his cock, it made her yearn for more. She felt powerful and sexy, blazing with the heat of genuine desire for him inside her coming to life. Deep in her heart, she knew he belonged to her, just as much as he claimed she belonged to him.\n\nMarcella was lost in a lust-filled headspace where her only focus at that moment was Noah's cock. She felt him throbbing in her mouth, smelled his scent and tasted his manly essence. She was free to be the wild, sensual animal she wanted to be with him. She wasn't constrained by who or what she was expected to be by the man she was with, for once. His was not the expectation of a man using a toy or possession for pleasure. Theirs was a mutual exchange, and she could see that difference now, which made her enjoy him and the power over him he allowed her all the more.\n\nNoah may not be perfect for others, but he was perfect for her. The world around her had faded away, and it was just her and the man she was choosing to claim as her own. She could feel the quiet pleasure of her softer inner voice and the grudging respect of her harsher voice which made it more pleasurable for her to take him like this. She swallowed around his cock, taking all of him in then.\n\nThen suddenly, Noah yanked her off his cock and pulled her up by her arms. Her eyes were hazy and glazed as she looked at him questioningly. The question was answered almost immediately when she felt the head of his cock prying open her heated, wet pussy. Marcella wrapped her arms around his neck and her legs around his waist. As she slid down his cock her whole body reacted to the feel of his tremors running through her as he filled her.\n\nUsually, he would warm her up with multiple orgasms during foreplay, but this early morning drive towards release, they both felt was a train that couldn't stop. This morning she was raw with sensations, and he felt big as he pounded into her tight pussy and gripped her breasts hard as if holding on to her was a matter of life and death. She took deep gasping breaths as his exquisite erotically painful torture exploded within her body. Her scream of ecstasy echoed throughout the canyon. If the camp weren't awake before, they would be now as she cried out to God and anyone else who would listen about the pure pleasure she felt.\n\nEach pounding thrust created more fireworks behind her eyes as he filled and stretched her like never before. It was excruciatingly rapturous, as his unforgiving and relentless cock filled her in the most brutal of intimate dances. Marcella felt his cock slam deep into her and crush her clit between their joined bodies with the back-and-forth movement. From the very first tingle, she felt her climax consume her. She didn't know how it was possible, but his hands and his cock seemed to touch everywhere at once. Each stroke of his hands or cock set off another round of pleasurable explosions inside her. It seemed to her that he was bigger and deeper inside her than he'd ever been, but she was helpless to resist him. It was unbearable pleasure bordering on ecstasy and was everything she'd ever wanted from a partner and never been able to let go enough to ask for or receive, she realised. The revelation of what she was giving in to him and the absence of the walls he had battered down to access that hidden part of her was so overwhelming that tears pricked at her eyes.\n\nTsunami after tsunami of ecstasy washed over her as the orgasms piled on top of each other. She could barely catch her breath, and her heart was beating so fast she was afraid it might explode. Her man, because she could accept that now, was sending her into orbit with each pounding movement, and it was exactly where she wanted and needed to be. Each day since arriving back from Perth with Noah had led her to give up a little more of herself to him, yet here, in the middle of the desert, she had finally surrendered that last barrier to him.\n\nHe took her the way she wanted and the way he wanted. She was free, yet he claimed her body and soul. Noah loved, adored and protected her, guiding her and making her his queen. He filled her mind with passion and wonder while the bliss exploded in her body. He was wild, almost feral, as he thrust into the willing sweetness of her body. Marcella gave him her all, her reluctance entirely falling away, as her gift to the man who loved her like no one else ever had before.\n\nHe pushed her hard, continuing to fill her with more orgasms than she could count. Each was more searing and fulfilling than the last. Finally, Noah freed his hands and rolled over, looming above her. He slid his hand through her silky hair and grabbed a fistful of it. His fist jerked her head backwards, exposing her delicious neck. The jolt of pain and pleasure rippled down her back as his lips and teeth claimed her neck. Her veins throbbed beneath his voracious mouth in this very primal act of domination. Marcella's exposed neck told Noah that she trusted and believed in him. The erotic chills of having him feast on her neck only enhanced the pleasure she felt as he filled her with his cock.\n\n\"Fuck, I never knew I could love someone this much,\" he groaned, his lips caressing her lips with the vibrations of his voice. Marcella felt the whole world shake all around her as if she hadn't heard the earth-shattering words before but knew it to be the realisation that in the cave in the middle of nowhere, she finally understood the difference between fucking and making love. Her heart and mind were filled with a bone-deep sense of love and belonging. Every time they made love, she felt him worm his way deeper inside her heart. She freely gave him whatever he wanted because she belonged to him, but she also knew he belonged to her. That it was an equal playing field, they were on. That's what she felt deep inside. One couldn't exist without the other.\n\nPowerful waves of sweet ecstasy lifted her and swept her effortlessly along in their wake. She was lifted and carried from the crest of one wave to the next. Only when the ecstasy overwhelmed Noah, and he pumped his climax into her, did he tenderly deposit her back on the shore of the soft bed they slept in and curled his body around hers. They held each other close as Marcella's body throbbed in continuing sweet waves of pleasure and glowed with satisfaction.\n\nMarcella took stock of herself in that warm moment, luxuriating in a new form of freedom where she wasn't alone and didn't have to fight the world that way. It wasn't easy to believe it could be this way, but she could feel the warmth of his love inside her, and she was confident he meant everything he had told her. She hid inside his arms, afraid to let the world intrude and as she felt his arms tighten around her, she knew he felt the same.\n\nNoah had thought he would have to fight for the rest of his life to get Marcella to open herself up and realise her potential, just as his father had with their mother. Only in this past week, she had proven him incredibly wrong and had given herself to him with the kind of love and passion he had only dreamed of from her. He realised that he had closed himself off from genuine love choosing the Kept rather than real relationships, and that Marcella had saved him, just as much if not more so than he had saved her.\n\nHe didn't know if it was the curse or not. None of his symptoms was like his brothers, and he knew he would never share Marcella with another soul as Xavier and Dom did. However, he could also recognise that he had hurt her early on in the relationship and deserved her wrath. Once Marcella made up her mind about someone or something, she was all wind and lightning, and he had gotten too close to hurricane Marcella. She had swept his heart away, and while he was trying to catch her heart, she had given him the greatest gift a man could ever receive, her trust.\n\nHer smile intoxicated him, while her soft, sad eyes tore open his heart. Whatever happened next, he belonged to her as much if not more than she belonged to him. She had stolen his heart with her love and passion. He softly and lovingly kissed her as if he couldn't help himself.\n\nMarcella kissed him back just as gently. Everything about him told her that he loved her, and she gave him a lopsided grin that got bigger as she snuggled deeper into his chest. She kissed the side of his neck and purred contentedly like the kitten he called her so often.\n\nNoah groaned quietly at the sound and pulled her tighter against his chest. Suddenly he stiffened, as noise from the camp started to feed into their tiny haven. He kissed her again and began to unfold himself from around her body so he could get dressed and find some clothes for her. However, he found Marcella's hands tightened around his body, and he looked down at her, a small chuckle rumbling from his chest before he dropped his head for another kiss.\n\n\"Don't want to get up yet?\" he asked with a raised eyebrow. Then he chuckled again as she shook her head and burrowed into his chest again.\n\nIt wasn't that Marcella was lazy. On the contrary, her whole life before Noah had been all work. She worked damn hard to get where she had and only allowed small snippets of time to socialise with the others in her law firm's office. It was almost as if her life before Noah had happened to another person entirely. The ball busting bitch she had been known as had been softened and moulded into an unrecognisable version of herself, one that would happily ignore all of their problems right now and stay curled up in bed with him.\n\nHe made her feel free and powerful, yet she felt soft and pliable at the same time. She felt equal amounts of anguish, tears, laughter and euphoria. For the last three months, she had been on a roller coaster of emotions full of euphoric highs and terrifying lows. They involved love, satisfaction, freedom, and adoration as if she was finally finding her home. However, when her roller coaster hit the lows, she felt guilt, fear of failure or inadequacy, insecurity and disappointment in herself. She had doubts about herself that washed over onto him. Yet, he seemed to always be there for her. He became a friend, lover and protector who seemed to know her strengths better than she did.\n\nShe was finally ready to admit she trusted him with her heart and her life. He had proven himself by coming for her time and again. He had taken her when he loved her. Her practical side wondered where this was going and how it could ever really work, but her spiritual side felt she had finally found the man who wouldn't let her down. Despite all the conflicts, she knew she couldn't be without him now. He was a part of her, and she needed him just as she needed food to survive. Tears filled her eyes again as the thought didn't make her flight or fight instincts rise even a little.\n\n*****\n\nNoah and Marcella were well and truly awake and considering breakfast when someone arrived with the news that there had been several attacks on the family in Darwin and the family property. There was also concern that no one could contact the boats that Genesis and Olivia sailed on. Noah grabbed at his phone and immediately tried to reach Gideon. Wedging the phone into his shoulder as he pulled on clothes haphazardly, he redialled several times before giving up and feeling the knot of dread pull tightly in his belly. Finally, he pulled the now dressed Marcella to him.\n\n\"Do not leave my side for anything today, understand?\" he asked seriously. She nodded, and they left their cave-dwelling to join the anxiety-ridden men and women of the camp who were preparing for battle even though there was no outward sign anyone knew who was in the camp aside of the usual ringers and jackaroos from Kriol country communities.\n\nAgain, Marcella was assailed by Mad Max images when she watched as different vehicles were used to cordon off the open area between the shed and the cliff face. It was odd, but she shook her head while clutching Noah's hand in hers because she was as worried for him as he seemed to be for her. She followed him to where Whipper stood with a group of equally elderly men and women discussing the information they'd managed to glean from their scouts.\n\n\"There are groups of bikers coming from the southeast and the west that are still at least half a day away or more,\" Whipper said as soon as Noah had reached them. \"There's another group of bikers in the northeast who have been sitting on the border, but not moving until today. Not all have moved, but a few are heading our way and could be here in a matter of hours if they have extra fuel with them. Nobody seems to be in the wetlands that our men can see, at least no one out of the ordinary, but there is a road train travelling from the southwest that will be on us in an hour at most. The big trucks of the road train will find it hard to cross this rough territory, but we are watching them. It's time to sit tight,\" Whipper advised after telling him what he knew. \"They could just be touring groups, it's not unusual to get them up here, but we are monitoring them closely.\"\n\n\"The family?\" Noah asked, dread making him clench his teeth.\n\n\"No news is good news. They have people watching their backs just as surely as you have me,\" Whipper chuckled. Another man, Noah knew as Vinnie, moved closer with his phone clutched to his ear, and his brows furrowed in concentration as if he couldn't believe what he was hearing.\n\n\"The ghost-walkers are moving toward us,\" Vinnie said with quiet awe in his voice. \"They so rarely leave their desert home, but twice in a season doesn't bode well.\"\n\n\"Friends,\" Noah said without any inflexion in his voice. \"I have information that the Varangian tried to double-cross them too, and their allegiance is with the Princess who lives with the Vitalis now. At least most of them anyway.\"\n\n\"How do we know if they are the most? Or if they side with him?\" Vinnie asked.\n\n\"You can trust me as my family does, I guess. I've been wrong before, but it doesn't happen often,\" he smirked, feeling confident rather than arrogant about the Tartar's intentions. They seemed to be coming to their aid. He looked down at the crude map in the dirt at their feet and could see they were being assailed on practically all sides. Now the question was. What was the plan to get through this?",
        "Marcella said nothing. She didn't know any of these men or women, but her fate was inextricably linked to Noah's. She realised he was clever to bring her to the middle of the freakin' desert because even at her most independent, she wasn't dumb enough to strike out on her own in the middle of a damn desert. She seethed inwardly at getting into this situation at all.\n\nA tug on his hand to release Marcella's alerted Noah to the fact that not all was right. Knowing now what he hadn't known so many weeks ago, he moved immediately. He turned, picking Marcella up and carrying her stiff form back to the cave.\n\n\"Marcella?\" he questioned gently. He was looking down into her eyes, trying to gauge whether she was with him and, if not her, then who.\n\n\"Stupid bitch! He knows you're here now,\" the usually soft and kind voice of Chella exploded within Marcella's head. \"She already told you we couldn't go it alone because we were in the middle of the desert! So what were you planning to do? Grow wings and fly us out of here all on your own? Ignore the fact that we love him just as much as he loves us? Regardless of your interference.\"\n\n\"Marcella, I need Marcie right now?\" Noah said sternly into the silence as he could see her melting down again before his eyes. \"I will keep her safe you can trust me to keep all of you safe. You are mine, Marcella. Now is not the time to fight that instead of working as a team. You need to let Marcie do what she knows is right.\"\n\n\"He knows!\" the warrior hissed in her mind, shocked that he wasn't as stupid as she had always thought.\n\n\"Of course, he knows. He loves us despite everything you have done to push him away. Now let her come back so they can work together to keep us safe,\" Chella demanded, trying to undo the binds the warrior had forced on Marcie as they stood listening to the report from Whipper.\n\n\"You need me now. She isn't strong enough to do what needs to be done if it comes to that,\" Marcella said directly to Noah.\n\n\"She's stronger than you think and would be stronger still if you worked with her instead of against her. Let her come back to me,\" Noah demanded, wrapping his arms around her and drew a deep breath. \"I need all of you, each and every part. I need the warrior you who takes on everything and everyone regardless of the odds of winning. The soft one who is compassionate enough to forgive the people who would hurt us and my Marcie, who has finally realised there is so much more to live for than she ever knew before because she trusts the love, she found with my family and me. All of you! Just come back and face this final hurdle at my side, together.\" Noah knew he was being overly dramatic, but he wasn't sure what else to do when faced with the woman he loved retreating within herself and letting her ill-equipped alter egos take over.\n\n\"I told you that he would come for me,\" Marcella snarled, \"Now I am stuck here with you in the middle of a desert and nowhere to go or hide!\"\n\n\"That's right,\" Noah said as if the thought confused him. Then he smiled. \"That's right, isn't it?\" he chuckled. \"I didn't do it on purpose, but wow, I couldn't have planned this moment better if I tried.\" He pulled her resisting body tighter against his own. \"Marcie, Konrad will take you from me over my dead body,\" he promised her.\n\n\"You don't get it, do you?\" she pushed his chest, needing space from him. \"That's exactly what I'm afraid of, you idiot. You and all of these people are in danger now because of me!\" her eyes brimmed with tears, and the small voice of Chella gasped at hearing the warrior Marcella admit her fears for Noah.\n\n\"Well, that's not true,\" Noah shook his head, stifling his smile of pure joy at hearing her words. \"The Varangian has been dealing out damage to the various families of the tables for over a decade now. Sure, you and your sisters were part of his plan, but so were Veronica and Emily Donati, so was Matteo Vitali and some of the Martino and the Farnese clan. You're just a cog in the wheel that the Zenati have given a flat tyre. This isn't your fault any more than any other woman he threatened or their family. This is an egotistical madman finding all his plans failing and lashing out at the family that finally derailed him. My family. The catalyst for our involvement and for bringing you here to us was Olivia. So, if it is anyone's fault that he is lashing out at us, it's Olivia.\" So he reasoned out as he spoke and pointed his finger at the one person that would ensure that she would fight beside him.\n\n\"Olivia?\" Marcella asked as if confused.\n\n\"If Genesis hadn't found her and discovered who she was, none of this would have happened, and all Konrad's plans would still be in place. We would probably be none the wiser, but he did find her and you and Vivienne arrived to be loved and protected by us,\" he explained. \"This isn't about you. Maybe a little bit, but whether you were here with me or not, he would be tracking down my family and trying to end our holdings in the territory.\"\n\n\"Olivia, we need to go help, Olivia!\" Marcella struggled in the circle of his hands as if she had forgotten everything else when hearing about Olivia again.\n\n\"No, we need to help ourselves, and Olivia and Gen need to help themselves now. No one is alone, and we do not need to rush off to rescue anyone because other people are already doing that. Listen to me, Marcella. You are the one who needs help now. You need to be safe and secure. Stay with me, and just for once, trust me to make sure everything is going to be okay,\" Noah pleaded with her, not letting her pull from him physically or mentally anymore. \"I need my Marcie, so we can do what needs to be done together.\"\n\nMarcella stared at him. She was stunned by his calm reasoning when all she wanted to do was fight and howl at the unfairness of it all. At the genuine heartache, she felt not just for her sisters and herself, but everyone caught up in this madman's plans. She took a deep breath as her alter egos fell back under the crushing truth of his words. This wasn't about her. She wasn't the star of the show, only a bit player that would be cast aside once her role was complete like in any long-running series. Blinking slowly, Marcella focused on Noah. She knew him well now, and she could admit if only to herself that she loved him and didn't want him in harms way any more than she would wish to see Olivia or Vivienne there.\n\n\"Tell me what needs to be done,\" she said slowly, not willing to bend to him totally or apologise but at least willing to hear his plans and help where she could.\n\n\"Marcie?\" he asked uncertainly.\n\n\"No, Princess Puking Petunia,\" she rolled her eyes. \"You act as if you don't know me,\" she shrugged, understanding why he was acting that way but not willing to acknowledge it.\n\n\"Sometimes I feel I could live with you for my entire life and never truly know you,\" he gave a half-smile and bent his head to kiss her, his arms wrapping around her torso. \"Let's go see Whipper and find out the latest news.\" He led her back outside into the sun, confident now he had headed off the danger her warrior personality might have presented for them.\n\n\"They may know the general area we are in but not this spot, and let's face it. It's hard to find even for those that know where it is,\" Vinnie was saying to the group of men around him. \"I say we sit tight. If the ghost walkers coming towards us aren't threats, then we remain hidden here in the mouth of this canyon. The only structure is the shed, and that's hidden enough to be out of sight of an ariel sweep.\n\n\"You're right,\" Whipper agreed as many of the men nodded. \"Keep the scouts on rotation. Let's not let any one of the groups surrounding us get a jump on us.\" He turned to acknowledge Noah as he re-joined their group with Marcella at his side. \"The group to the south looks like a combined group of men from the tables. Our scout recognised Valdemar among them and a Donati man who used to race bikes,\" he said as if asking Noah if he knew anything about it.\n\n\"There was a group meeting at Cameron's corner or Poepell's, one of the corners anyway to find out what the guard or the Tartar were doing. Maybe they have noticed the other movement toward us and are trying to intercept?\" Noah suggested.\n\n\"Call him to see if there's a signal. They may not know they are riding into a war zone,\" Whipper warned. \"Or at the very least, they could have better info than us.\"\n\n\"I suppose the secrecy of our location is a moot point now?\" Noah fished his phone from his pocket and turned it on.\n\n\"Seems that way,\" Vinnie grumbled.\n\n*****\n\n\"Leighton!\" Vivienne said urgently. \"Gideon, is not answering. He would never not call to say good night or good morning. Somethings wrong, I know it! Please, you must find him for me, or I am going back to Darwin to find him myself!\" She declared adamantly.\n\n\"Stop! Breathe! Tell me slowly when the last time you heard from him was, and we will start from there,\" Leighton said, trying to soothe his sister.\n\n\"Leighton, if you ever talk to me when I am panicked, you won't make it out alive. What is wrong with you? The only appropriate answer right now is, Yes, Vivienne!\" Lydia scolded her husband.\n\n\"Yes, Vivienne,\" he stated. \"Your phone please?\" he held out his hand and looked at the last call from Gideon and then turned to leave, saying over his shoulder. \"I'll do what I can to find him.\" Hardening himself against the gasp of his wife and the cry from Vivienne. Explosions had rocked the northern capital all night. His chances of getting accurate details from the city right now were slim, and his primary contact in the family was the man he was searching for and couldn't reach. Entering the room, he had gathered his brothers in; he looked at them and drew a deep breath.\n\n\"Does anyone have contacts in Darwin that can locate Gideon Zenati for us before Vivienne loses her mind or goes into premature labour?\" He asked into the expectant silence. Half a dozen men pulled out phones and began contacting the people they knew.\n\n******\n\nValdemar and the men he rode with pulled up in a tiny town that was not much more than a T-junction, but it had a communications tower, and that was all they needed. The men drank deeply from water bottles and snacked on what they carried in their saddlebags as they held their phones to their ears, collecting and disseminating information from their individual tables.\n\n\"It's a race, they reckon, and we aren't in the lead. So I'm guessing you know all about coming from the back of the pack,\" Red teased Lawrence Donati.\n\n\"Foreign concept for me, but luckily Zenati's taking the lead on this side of the invisible line,\" he chuckled as they all finished their calls, made sure their tanks were full and their bodies hydrated before they took off again.\n\nValdemar added little to the conversation of his fellow riders. They all knew the risks and that it was a race to the hidden canyon in the red desert of central Australia. Only he knew that it wasn't a two-man race now. People came at Noah and Marcella from four different directions. With his family being assailed on all sides in Darwin and the large family property, there was little help coming aside from himself and those he rode with into the desert. He just hoped that the bonds of the twelve would hold out when faced with a common enemy.\n\n*****\n\n\"Alright, thanks to Orlando and Pietro, we now know who two of the five groups heading toward us are and that they are on their way to help us,\" Whipper announced. \"We also have access to a satellite that old Ernie is trying to read for us as it updates.\"\n\n\"The bikers from the south?\" Noah asked to confirm what he already knew.\n\n\"They are the mechanics from each of the tables. They are making good time on their machines as you would expect. We thought they were half a day away, but I would say half of that if they keep up their speed,\" Vinnie nodded from where he stood behind Ernie, who constantly updated a map on a pinboard he held on his desk near the computer. He used different coloured pins to denote each group. \"Your father and his generation are coming from the north with the watchers that have gone through the process again.\"\n\n\"Good, so the east and west are the Varangians?\" Noah again was seeking to confirm his thinking.\n\n\"We believe Konrad is part of the road train coming from the southwest, but there seem to be two distinct groups travelling in the same direction. One using what passes for roads down that way, the other one going cross country trails,\" the elderly Ernie spoke, looking hard at the screen before him as he spoke and then pushing pins into the pinboard map to show the progress. \"I'd say your father will be late to the party as for the others who can say who'll get here first, but I imagine we'll have visitors within the hour.\"\n\n\"Time to put our plans into action,\" Whipper said, and the camp immediately began to break down around them. They could defend, of course, but in the vastness of the Never-Never, they were the experts and had little to fear compared to those who came for them. They would give them shadows to chase as sure as they created big dust clouds on the horizon surrounding them.\n\nMarcella watched in amazement as men and supplies disappeared into the caves and behind rock forts, leaving only Ernie, Vinnie and his computer set up still working just within the shed, which could be closed at the last minute. The ringers took to their vehicles, and Marcella climbed into a small, armoured vehicle with a claw-like arm used to capture and steer the wild bulls of the bushlands. She crowded into the back with Noah as two ringers took the front. Unless something untoward happened, no one should even know they were within the truck as it sped over the hard-packed dirt unhindered by the ground cover or low scrubby bushes.\n\nPlacing her hand in Noah's, she tried to give him a smile of reassurance that she was fine and not about to lose it again. She knew he had faith that these men knew the land they were on better than anyone else and they would be safe. She also knew his agreement to ride hidden in the back with her was made with her in mind. She knew he would rather be at the front leading the charge, but was meeting this threat at her side just as he had demanded she be at his side.\n\n\"Noah, you good, bro?\" AJ, the passenger in the front, asked.\n\n\"Yeah, good,\" he squeezed Marcella's hand.\n\n\"He'd be better in your seat but doesn't trust me not to hold your hand,\" she lifted her hand entwined with Noahs.\n\n\"Fair enough, I wouldn't trust you with all this either,\" he chuckled and flicked his dark curls from his face. \"It's a burden I have to live with and why I keep Dougy around to help fight the women off.\"\n\n\"No,\" Dougy groaned and shook his head. \"Just no.\"\n\n\"Which way are we headed?\" Noah asked, heading off that conversation.\n\n\"We're heading toward the southeast,\" he said cheerily. \"I heard Larry Donati was with the bikers. I want him to sign my shirt,\" he pulled a racing jersey from the glove box and waved it around.\n\n\"Yeah, good luck with that,\" Noah chuckled. \"I take it that Val's leading them in-country?\" he clarified even though he knew it was true.\n\n\"Yeah, as if any of those southern city slickers would know which was up out here. There ain't no road signs or nothing,\" AJ chuckled. \"Dougy here is one of the best trackers around,\" he punched the driver's arm lightly. \"We'll be right, don't you worry, Marcie.\" he nodded and smiled widely at Marcella. Even with Noah's verbal slap in the face that he had delivered earlier, she still felt like this was all her fault, and she pushed down the guilt and focused on what they were doing.\n\nThey heard the low rumble long before they saw the colour of dust that low rumble made on the horizon. Assuming that was the group of bikers they were headed towards, Dougy adjusted their trajectory somewhat and headed towards it a little slower than before. It wasn't like he could hide the dust cloud his truck kicked up from the dry red earth, so he knew they had been seen for better or worse.\n\n\"Wait!\" Noah cautioned. \"I don't think that's the men we were hoping to meet,\" he pointed to the dust cloud, his gut telling him to get away from it as fast as possible. \"Boulders? Ridges? Any cover at all nearby?\" He asked.\n\n\"Yeah,\" Doughy spun the wheel, changing direction so fast. Noah felt his neck jolt with the movement and tightened his arm around Marcella, who had stiffened beside him.\n\n\"What the fuck!\" AJ yelled as he was jostled around in his seat.\n\n\"Whip says he got oracle sight, and if he wants to hide, we fuckin' run for the hills,\" Dougy said, not looking away from the rough terrain in front of him.\n\n\"You good?\" Noah asked Marcella looking at her pensive expression. She was unnaturally quiet, and he knew he should be more worried about what was going on in her head, but right at that moment, he just wanted to keep her safe. \"This truck was built for this terrain, and Dougy is one of the best ringers in the territory. So we will be fine until back up arrives.\"\n\n\"I'm good, and there's just nothing I can do right now. I have no idea where we are even to try to make suggestions let alone tell you what to do,\" she shrugged, feeling completely helpless and hating it. \"Would you be happy if I was yelling to be let out or telling you to go fuck yourself because that's about as helpful as I can be right now?\" Her anger simmered just below the surface now.\n\n\"Ah, there's my feisty kitten,\" he grinned. \"Stay angry. That's what you will need to be if they catch up to us,\" he chuckled.\n\nThe rumbling they had heard from a distance grew louder, and the distinctive thump of blades became apparent. AJ climbed up, hanging out of the window to see for himself.\n\n\"Chopper, flying low and closing fast, we won't be able to see through the dust storm it's creating soon, so time to choose. Stop and make a stand here where we can prepare or trust Dougy to get us beyond the ochre pits to make a stand with the wall at our backs,\" AJ gave them the options he thought best. He got a grunt from Dougy, who seemed to lean forward as if he could make the truck go faster with the movement.\n\n\"The Pits,\" Noah agreed and looked at Marcella. \"We are heading west towards the McDonald ranges now. The pits are more like a tall wall of rocks surrounded by desert sands, not actuals pits.\"\n\n\"Okay,\" Marcella nodded, then snarked. \"So, this is a sightseeing tour then?\"\n\n\"In a way, a little rushed, but we can come back and do some camel racing or visit Uluru if you've never seen it up close,\" he shrugged.\n\n\"Wait, we're close to Uluru?\" she gasped wide-eyed. \"I didn't realise we were that far south. So the Alice is close by?\" she asked.\n\n\"That's subjective at best, but we are southeast of the Alice heading west if that helps. So close in the outback can be hundreds of kilometres away, unlike the city where close is just around the corner or something like that,\" Noah said as if putting some thought into it as they raced and bounced over the scrubby terrain head for what looked to Marcella like a rocky outcropping.\n\n\"Okay, sure, we'll have a honeymoon in the desert,\" she snarked again. \"Once we overthrow the evil madman and restore order to the world like the superheroes we are,\" she rolled her eyes.\n\n\"Damn fucking skippy!\" AJ agreed. \"I told you I should have brought my cape, but you said no, we won't be facing off against the enemy today,\" he punched Dougy's arm.\n\n\"Arch-villain,\" Dougy corrected. \"But go ahead and punch me again and see what happens. You could get lucky after all,\" he growled, spinning the wheel as dust kicked up around them, making visibility almost impossible. Then, slamming it into reverse, he drove backwards, breaking suddenly and then sitting with the truck idling as he turned to look at Noah. \"Rainbow Serpent at your back if you have a miracle in your pocket, now's the time to bring it out.\"",
        "Noah looked out at the sand and dust that swirled around them. He wished he had a miracle owed to him from any deity or culture, but what he had was here and now and an undying need to keep Marcella safe. If this was where they would make their stand, then so be it. He took the black blade he had made when he had lost her to the Varangian and pressed it into her hand. If things went pear-shaped, he didn't want her completely unarmed and unable to defend herself. She looked down, not at all surprised and pulled the blade to her lap, hiding it in the folds of her shirt with a silent nod.\n\n\"You built this rig?\" Noah asked Dougy.\n\n\"Yeah, she tough enough to withstand a couple of charging bulls at top speed,\" Dougy nodded, also doing the math on what their options were.\n\n\"So, a landed bird shouldn't be a problem then,\" Noah said with a quiet calm that spoke of his resolve to protect the woman he loved at any cost.\n\n\"No problem at all,\" Dougy turned his head, a small smile coming over his face.\n\n\"Fuck it! I'm wearing the jersey,\" AJ pronounced into the quiet calm of the truck. \"It's better than the fucking cape, anyway.\"\n\n\"Yeah,\" Marcella laughed at the absurdity of the moment. \"Cover all that up for me, will you. It's distracting.\"\n\nThere was a beat of silence, and then all three men laughed with her as they watched the helicopter edge closer its skids close to the ground. Whoever was flying it knew what they were doing.\n\n*****\n\nIt was Orpheo Pellegrini who noticed the dust cloud in the distance first. He edged up into the man in front, moving into his periphery and signalled and then turned his bike to head towards what his gut told him was where he needed to be. The other riders didn't question it. Instead, they took the predetermined cues from each other and turned to the dust ball that seemed to be coming closer to them. Finally, Valdemar Zenati signalled after another fifteen minutes, and the twelve men stopped and shut off their bikes at another hand signal from Lawrence Donati. He had been riding at Valdemar's right. The two had become the self-nominated leaders in their territories, and the others accepted the fact without fuss.\n\n\"Helicopter,\" Chase Vitali said, feeling the thump of the rotors on the air.\n\n\"Something happened in camp,\" Orpheo shook his head, trying to make sense of the feeling he had. \"The ones we are here for are that way, either in the helicopter or being chased by it. You need to trust me on this.\"\n\n\"That's a big ask,\" Lawrence said, drawing a breath, knowing the other families weren't as suspicious of the Pellegrini as he was.\n\n\"The whole point of this was to tear the families apart, and what you just said proves it. It's time to trust each other, and if I'm honest, I think he's right this time,\" Red Sergi nodded.\n\n\"Sitting here is getting us nowhere we can split up and ride in both directions or stay together,\" Chase said, not willing to risk any more time on petty shit like this. \"I'm with Red and Orpheo. The rest of you make your own minds up.\" He crammed his helmet back on and started towards the dust cloud.\n\n\"I got nothing but respect for you guys. If they think it's right, I will follow,\" Valdemar said. He had a firm belief in the oracle's powers and the power of gut feelings amongst the men in his family. He'd seen their curse in action enough times not to second guess any mystical feelings. Right now, his gut told him to follow rather than lead, and that was good enough for him.\n\n\"I'm with you,\" Larry said, burying his personal distrust of the Pellegrini family for the good of the tables. The remaining men caught up with their brothers within minutes, and they sped towards the dust ball on the horizon, the thumping noise of the helicopter becoming more evident above the smooth sound of the bike engines.\n\nCresting the last dune, they could see down into the small gully where a strange-looking vehicle that seemed to be surrounded by homemade armour plating was backed against a colourful rock wall. By a helicopter that was attempting to land and kicking up even more dust and sand as it did so. To even try and get close would be stupid. They would be able to see even less than they could now. The lead bikes stopped and, after a moment, pulled off their helmets.\n\n\"I don't care which one of you does it, but someone better get some software for us to talk to each other without taking off the helms if we are going to continue these road trips together. Keeping our tables secrets secret is one thing, but there has to be some joint frequency we can exploit,\" Zakarij Gastone grumbled.\n\n\"Any other thoughts on how we can get in there without going blind and killing ourselves?\" Paulo Farnese asked. \"Mick and me avoid the deserts in our territories for obvious reasons,\" he said, nodding at Mick and shaking the sand out of the scarf he had been wearing. They all had bikes created for the conditions, but it was still tough to ride through it all.\n\n\"If we go down there, we sacrifice our bikes, that's a given, but I bet we could do some damage if we can get some air off those rocks down there,\" Gian Armarti grinned.\n\n\"Only an Amarti would be thinking about aerial stunts at a time like this,\" Chase chuckled. \"Alright, I'm in. I reckon I could pull a couple of stunts out of my box of tricks if those rocks slant right.\" He pulled on some goggles to have a close look.\n\n\"So, we're doing this?\" Orpheo asked, still unsure of the Australian humour and not sure when they were joking or telling tall stories or when they were serious about putting their lives in danger by trying to perform some sort of tricks with their bikes while essentially being blind to the landscape and even more importantly the rotor blades of the helicopter.\n\n\"I reckon we aim for the tail. We take that out of commission. They won't have the stability they need to take off even if they do get who or what they came for,\" Mick said. Helicopters were his thing living in such a vast territory. He also knew Valdemar was a flyer and looked at him for confirmation.\n\n\"That'd do it,\" Valdemar nodded. \"Though any damage will put them out of commission in the desert. Sand gets in the engine their fucked no matter how you look at it.\" There was a general consensus of agreement.\n\n\"Someone watch Chase and me go first, so we know who scores best. Then, the winner gets to play for a day in the others garage,\" he chuckled and held his fist out to Chase for a bump.\n\n\"Done,\" Chase agreed, thinking he would do that anyway. But, he'd always wanted to play on a snow ski and hadn't had the chance yet.\"\n\n\"I'm impartial at this point, so I got you,\" Orpheo laughed and shook his head, taking his goggles from his saddlebag.\n\n\"That's fair. See you on the other side,\" Gian grinned and revved his bike, racing toward the standoff between the helicopter and strange vehicle.\n\n\"Regardless of what he's offering, if you're making those armoured vehicles, our first reunion is in your garage,\" Chase said to Valdemar and put his helmet on before following Gian down into the desert.\n\n\"Yeah, I can get on board with a reunion at Val's garage,\" Mick said and, with the others, also began securing his helmet and preparing to go down and do as much damage as they could to whoever had cornered the Zenati vehicle.\n\n*****\n\nIt seemed to happen so quickly that Noah couldn't quite work out what was happening. The helicopter had seemed suspended in the air before their vehicle bringing up a dust cloud to make their visibility almost nothing. Suddenly the roar of another engine intruded on them, and dark shadows raced through the cloud beyond what they could make out clearly. Then the helicopter dropped and tilted to the side, its rotor digging into the sand and dragging it forward.\n\nThey seemed to hold their collective breath until Dougy seemed to wake up and pushed his foot back onto the gas spinning the wheel and barely missing the landing skids as he took off away from the flailing machine. Then, when they were far enough away, he turned again to see what was happening.\n\n\"Seems you got your miracle after all,\" AJ said with a little bit of awe in his voice. \"Your brothers showed up with seconds to spare,\" he noted, looking at the men and the bikes circling the stricken helicopter as it came to rest in a massive cloud of dust and dirt. Dark figures scrambled from its interior, and they were rounded up one by one.\n\nMarcella felt like an age had passed before the men they travelled with let her and Noah out of the truck. She approached the men sitting in the centre of a ring of motorcycles, unconcerned that they would hurt her in any way. She held the hem of her shirt in one hand, still concealing the knife Noah had given her, which seemed to have slipped his mind.\n\n\"I know you,\" she said to one of the men. \"You're one of his generals. Did he send you here for me or for whatever you could find?\"\n\n\"His obsession with you would have killed us all,\" the man snarled. \"You were not worth this war of his when we needed to regroup. So he did not send me here. I came to end you and his obsession so we could recoup our losses and go back to the bigger plan,\" he spat.\n\n\"You don't honestly think that's possible now, do you?\" Red asked from where he sat astride his road bike. \"There are twelve riders here representing the twelve tables and their families and working together for the greater good. There is no world you could create to make Donati forsake Pellegrini or Vitali turn his back on Papillo. Do I need to go on?\" he asked seriously.\n\n\"We have our difference, but they will always be less than the sum of our bonds with each other. Even with all the damage you have done to my family, we are still here and trusted by the twelve,\" Cesare Battaglia, who had been silent for much of the trip, spoke. \"She plans to end you with that black blade she has hidden in her shirt, and I'm inclined to defend her right to do that because of all the families represented here; I owe her at least that much in reparation.\"\n\n\"You what?\" Marcella gasped, turning to look at the man who had spoken.\n\n\"What would you prefer. I can hold the general in place for you if you like, or I can do the deed for you and save your conscience. Killing is a dirty business best left to warriors such as myself and your beloved. Perhaps you would have him do the deed?\" Cesare asked, truly curious now as he stepped closer to Konrad's general.\n\n\"I gave you that for self-defence, not murder Marcie,\" Noah said gently. \"You're not a murderer. Even with everything that has happened to you and the people you love, you're not a killer.\"\n\n\"There's a pretty deep mineshaft in my backyard I could drop him into,\" Mick offered with only a tiny curving of his full lips to show how much he would enjoy that.\n\n\"I've got a hidden ghost town where we could find some room for him,\" Benji Papillo offered with an evil grin.\n\n\"So many options. You know we'd love to have the generals company too,\" Cesare chuckled. \"I doubt he'd like it much, but that's a moot point right now. What's it to be, Marcella?\"\n\n\"I...\" Marcella started, then stopped and lifted the blade in her hand to the sun, noting that only the edge gleamed as the flat black metal soaked up all the sun. \"This was made by the man who claims to love me for the express purpose of killing Konrad, and it would be a shame to use it for anything else don't you think?\" she asked in a cool, eerily calm voice. \"So, if you tell me where he is and what his plans for me were, I will ask one of the less bloodthirsty tables to take you into custody. Maybe the Donati's? Oh, that's right, you screwed them over more than even me. So, few options are available to you now. Perhaps, the Battaglia is best. Justice is their speciality, after all.\"\n\n\"There's a Sergi here?\" he asked.\n\n\"I am Red Sergi, and if you were expecting me to be less savage than my brethren because we are known to be peacemakers think again,\" the man said, his back stiffening like he was being accused of being in league with this man.\n\n\"No, but that is why Konrad is staying on your side of the border rather than retrieving his pet for himself,\" the general spat.\n\n\"That's a lie. He's not in Mount Isa with your thugs,\" Red admonished. \"You don't think we're that clueless, do you?\"\n\n\"You're right. He's not, but what the fuck do I care right now. It's a well-known fact that Varangians are the true descendants of the best of the best Viking mercenaries, and that hasn't changed. At the moment, you have the bigger purse, so to speak. So, my intel is probably worth our lives, and if it turns out to be true, our freedom,\" he narrowed his eyes at the man he thought he would have the most chance of negotiating with for a reprieve. \"We'll come quietly until you reach a place where you can get a signal out to your people, and then we will negotiate our release.\"\n\n\"How about I just let Noah kill you now for all of the trauma you have inflicted on his lady,\" Red shrugged as if that was the preferable option. \"I mean, if you did that to my wife, we wouldn't be discussing the matter at all. So if you think I am the safe bet, you should think again. Pellegrini is probably your man because he's new, but that could also mean he wants to prove himself to the rest of us. I don't know. Amarti's are the lovers of the group, right?\"\n\n\"Yeah, but our Amarti is certifiably insane. Did you see what he did to their chopper? Without a scratch to him or his bike?\" Orpheo asked. \"Sorry, Chase, he got you on points for that one.\"\n\n\"Only because he rode first and the shit chopper started to spin,\" Chase grumbled. \"Fine, you can come to raid my garage after we find out where they build those bull catchers,\" Chase indicated the armour-plated vehicle the two ringers stood in front of with their arms crossed, watching the proceedings.\n\n\"Dougy built it. It would be best if you asked him about it. Val's too citified. The truck he built barely lasted a season of bull charges. It had so many holes from being rammed by the bull horns we had to retire it before it fell apart,\" AJ laughed loudly as Valdemar turned a hard glare on him. \"You know it's true, brother. He's a great driver, though. We hunt with him whenever he comes back to country.\"\n\n\"That sounds like a challenge to me. One that I'd me more than happy to help you with, my friend,\" Gian Amarti grinned widely.\n\n\"I'm in,\" Chase chuckled. \"We better clean up this mess first, though. \"Val, take Red and Zed and head over toward the original rendezvous point. There should be a tower around there. Find out what's going on, check in with our details, and get back to us as soon as possible. We can't have been far away from the spot.\"\n\n\"Or, we load those buggars into the back of the truck, and we all go,\" Dougy announced, fishing a cordless drill from a side toolbox that sat camouflaged within the plating. He began removing some of the panels to show a tray on the back of the twin cab.\n\n\"If they're stupid enough to jump out and go it alone in the desert without their phones or water, I say good luck to them,\" AJ agreed and went to help Dougy. \"Besides, if we left you for even a minute, Whipper would kill us deader dead, and no one wants that.\"\n\n\"No indeed,\" Gian chuckled and went forward to help with the truck as well.\n\n\"Val,\" Noah called to his cousin and went over to where he stood with a shellshocked Marcella, not expecting the others to all fall into a circle around them. But, instead of moving away, Noah placed an arm around Marcella, keeping her close as she looked bewildered by the attention they garnered. Then he told them what he knew.\n\n\"Your team was one of five closing in on the camp where we stayed last night. I don't know how safe it will be to return. There were bikers from the northeast, Mount Isa probably. Some from the north seemed to be on course to intercept the first group. A road train is coming from the southwest and another group due west.\"\n\n\"So, you're telling us you're fucked, and now we're fucked right along with you,\" Lawrence ran his fingers through his hair and puffed out a long breath.\n\n\"No, man,\" Red said as if he knew that wasn't the case at all. \"The Tartar is turning. That's probably the southwest contingent, the road train. I imagine they will cut off whoever is coming from the west. As for the North and Northeast, Mount Isa was locked down this morning. So if anyone got out, they aren't important. I guess the north is where Konrad is hiding and sweating over a game board as all his pieces go missing. Maybe double-check exactly what direction that northern group are headed. How far out did you think they were?\"\n\n\"Half a day or so,\" Noah said, scratching at his cheek. It couldn't possibly be this easy. All these months of fighting the game master and his minions, it was over in a minor skirmish and Konrad wasn't even here to face him. He felt deflated by Red's words, and no matter how he processed it, he just couldn't believe that it could be over so abruptly. He needed to see Konrad for himself, dead or alive, before he would believe it.\n\n\"Let's not get ahead of ourselves. Gian and Chase can scout ahead with me to the camp you were at,\" Valdemar said. \"You can follow, and if it's not clear, we'll double back and make a new plan.\"\n\n\"That's fair,\" they all nodded and agreed with Noah before the scouts headed to their bikes while the other made sure the Varangians were secured in the back of the plated truck.\n\n*****\n\nWhen they arrived, the camp seemed calm, with about half of the occupants returned to help with surveillance and disseminating information. Valdemar and his two companions idled about three hundred metres away, waiting to be recognised and acknowledged. They didn't look under duress or pressure from unknown enemies. On the contrary, they looked jovial, if anything and Valdemar frowned, slowly riding forward to greet the men operating the communications centre in the middle of the desert.\n\nBy the time the rest of the men with Noah and Marcella arrived, Valdemar had caught up on the information coming out of the various sectors and was able to get everyone up to speed. Only the Zenati and the Farnese had come under attack this time. He kept a steady hand on Paulo's shoulder as he spoke of injuries to watchers and several doctors when he relayed the news of the explosion that levelled the wing of the hospital Jessa had been confined to along with her mother.\n\n\"They're dead?\" Marcella whispered.\n\n\"I'm sorry, Marcella. There is no easy way to deliver news like that,\" he said.\n\n\"What about the boys?\" she asked, her voice sounding choked.\n\n'They were staying with Massimo and Constance. They are okay. We think he was only targeting your sisters,\" Valdemar said quietly.\n\n\"I'll call home and ensure they are well cared for,\" Paulo offered.\n\n\"Noah, there's more,\" Valdemar swallowed heavily. \"Gideon was caught in one of the explosions. He's alive, but it's bad.\"\n\n\"Vivienne is in the Kimberley, right?\" Noah asked, his voice tight and expression stiff. He didn't want to lose it in front of Marcella, who would only blame herself.\n\n\"Yeah, she's fine with her brother,\" Valdemar nodded.\n\n\"Olivia? She was with Genesis,\" Marcella cut across his words reeling from the death of her older sister and mother. She needed to know Olivia was safe. If not, then what was this all for in the end?\n\n\"No one has been able to find them, there was an explosion off the coast, but we don't know that it was them,\" he said slowly as if not wanting to deliver the news.\n\n\"Noah, you have to get me to Darwin. You need to get me to where I can do something, anything. I can't just sit here safe with you while they are lost or hurting,\" she pleaded, and he wrapped her in his arms.\n\n\"Okay, we'll get there,\" he said, feeling the same sense of urgency around his brothers. \"You just have to give me time to organise it. If we tried to drive, it would take days. So you have to give me some time. We can drive to Alice, but I will need someone with a plane there,\" he started thinking through his options. \"Val, get me a phone and be prepared to leave your bike and fly us home.\" He said as a plan began to form in his mind.",
        "*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "desert",
        "cave",
        "dominance",
        "submission",
        "family",
        "out back"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-38"
}