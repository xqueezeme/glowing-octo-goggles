{
    "title": "A Ring Named Ezzie Pt. 02",
    "pages": [
        "Editor's note: this story contains scenes of incest or incest content.\n\nPart 1 was longer than I expected. I cut Part 2 a tad short. I was looking to add one more piece but I will carry it to Part 3. A question to the reader. How many pages is too many? Would you like more shorter stories or a few longer ones?\n\nAs always comments are always welcome. \n\n*\n\nMonday morning is finally here. I put on the company polo, jeans and work boots Mr B asked me to. He told me he always wants his guys to see him in work clothes ready to work if needed, and his customers to see he doesn't think he is above the crew. \n\nWe walk into Mr Reynolds office and he gets up and greets Mr B and myself. He makes a comment to Mr B about hiring a young guy. I take the chance to step in. \n\n\"Well Mr Reynolds after a few core courses I have put off. I will have completed my Bachelors in Financial Analysis with a minor in Business Management by Christmas break. That's 3 \u00bd years to my BA. Mr & Mrs B have been family friends for years. I heard him talking to my Dad about this contract and offered to help.\"\n\nI switch gears a little to brown nose. Mr Reynolds, don't think of me as young. Think of me as a smart, driven guy. Much like you must have been when you were younger. I point to one of many pictures of him and various politicians etc. \"Sir, is that you and Gov Brown?\"\n\nNow he gets to do what he likes. He gets to talk about himself. He points to two photos he is most proud of and tells me all about them. While he is talking I talk with Ezzie. \n\n\"Ezzie please make him little by little see the value of this as we review it, so at the end he knows it's a good deal and has to sign it.\"\n\n\"No problem Ben. It's done.\" Says Ezzie. \n\nWe get down to business. I hand everyone a copy and start reviewing it. We finish and Mr Reynolds looks at Mr B. \"You should have gotten this young man's help a long time ago. I like this contract. I think we have a deal. Where do I sign?\"\n\nI see a huge grin on Mr B's face. I point both men to the last page. They each sign it and swap, then sign again. Both men now have signed copies of the 5 year deal. \n\nI spend a little more time asking him about different photos and local celebrities. Mr Reynolds is happy to tell me all about his famous friends in the photos. \n\nWe walk into the elevator and the doors close. Mr B lets out a big Whoop and pulls me into a bear hug. He holds me by my shoulders. \"You did it! You did it! How in god's name did you do it?\"\n\nI laugh. I told you I am a people person. I can read people. Mr B hugs me again. \"You did Great Ben. Thank You So Much!\"\n\nWe get into the truck and before he even starts the truck he calls Mrs B. He is talking so loudly I can't really hear Karen at first. She then hears the commotion, and she screams. \"You did it? You got it?\"\n\n\"I did.\" I have to say loudly. I step out of the pickup. \"That's better.\" I say. \n\nKaren sounds so happy. \"Ben you did it.\"\n\n\"I did Karen. I told you I would.\" I say. \n\nHer voice changes. \"Please come to me Ben.\"\n\nMy heart stops in my chest. \"Just as soon as we get to the shop. I am in my car and coming to you.\" \n\nShe actually giggles. \"I have to go get ready. I Love You.\"\n\n\"I love you too.\" I say. \n\nI get back in the truck. Mr B is just hanging up with Mrs B. \"What do you say to an early lunch to celebrate, on me?\"\n\nNNNNOOOOOO! \"Ezzie please make him feel he has too much work to do.\"\n\n\"I understand Ben.\" She says. \n\n\"Actually Ben. I am sorry. I do have some pressing matters at work that need my attention. How about instead. We all go out tonight on me...well on Mr Reynolds.\" Mr B laughs. \"I will have Mrs B call your Mom and set it up.\"\n\n\"Mr B can I ask a small favor?\" I ask. \n\n\"Sure Ben.\" He says\n\n\"Can you call Uncle Ray and tell him the news?\" I ask. \n\nMr B gets a big smile on his face. \"I sure can Ben.\"\n\nMr B makes the call on the speaker. Ray picks up. \"Ha. That was a fast meeting. When do I get my money.\"\n\n\"Well you were right Ray.\" Says Mr B. \n\n\"I knew it. I knew it. Am I on speaker? Can Benny Boy hear me?\"\n\n\"I can sir.\" I say smiling at Mr B. \n\n\"So when am I getting my money Benny Boy?\"\n\n\"Never!\" I say. \n\n\"Welching on a bet? Welching on a bet you insisted we sign on paper. I knew it.\" Ray roars. \n\nMr B yells. \"Raymond!\"\n\n\"What?\" Ray yells\n\n\"You were right, he is a smart young man. You Lost! Mr Reynolds signed on the dotted line.\"\n\n\"No Fucking Way!\"\n\nMr B laughs. \"Oh Yes Ray. I have the signed contract in my hand. I will give Benjamin the key I have for the cabin for his two weekends.\"\n\n\"FUCK! I gotta go.\" Says Ray and the line goes dead.\n\nMr B looks at me seriously. \"How would you like to help me from time to time with the business end of my business?\"\n\nI smile. \"I would love it.\"\n\n\"Good. We will talk tonight. I have work to do. Let's get back to the shop.\"\n\n\"Thank you Mr B.\" I say. \n\nWe get to the shop, and I waste no time. I am in my car heading for Karen. I grab my phone and call her. \n\n\"Hi Benjamin.\" She says. I can hear the smile in her voice. \"Are you in your car?\"\n\n\"I am. I will be there in 15 minutes tops.\" I say. \n\n\"Come in the front door. It's open for you. Lock it when you come in.\"\n\nI am overcome with emotions. This is finally happening. I can't believe it. \n\nEzzie says in my head. \"Talk to her.\"\n\n\"Karen...I love you.\" I say. \n\n\"I love you too. Wait until you see how much, and maybe that's how little. I have very little on right now waiting for you.\"\n\n\"Oh fuck.\" I moan. \n\n\"Oh we are definitely fucking.\"\n\nI step on the gas. \"10 minutes\"\n\nShe laughs and hangs up. 12 minutes later I am tripping over myself to get out of the car. I walk in the front door and turn to lock it. I turn back and she is at the top of the stairs. \n\nThe sunlight is streaming in on her. She stands there in a white frilly lace robe. Her black hair past her shoulders almost to her boobs. \n\n\"Say something Ben.\" Ezzie almost yells in my head. \n\n\"Oh wow.\" Is all I get out. \n\nKaren giggles and slips off her robe and tosses it in the air down the stairs. I get just a glimpse of the lingerie under it. \"Would you like to join me in my bedroom?\" She says as she walks out of sight.\n\nFuck yes! I charge up the stairs two at a time. I get to the landing and look in her room in front of me. She has on a frilly lingerie like a one piece bathing suit . It has a little extra embroidery over her nipples and crotch. The rest is basically transparent. \n\n\"Oh my God you are gorgeous.\" I say. She walks up to me and pulls up my shirt. \n\n\"And you are way overdressed.\" She says. I bend over to let her pull my shirt off. She unbuckles my belt and looks at my feet. \"Ben you have to take off your boots if I am going to take off your pants.\"\n\nI lean against her dresser. I have my boots unlaced and socks off in under 30 seconds. She comes to me at the dresser and reaches her hand behind my neck, and pulls my lips to hers. She gives me the softest, most intense kiss I have ever received. I can never remember a kiss getting me so turned on.\n\nHer hand slides from my neck, to my belt to join her other hand. She opens my belt and then unbuttons my jeans. She pulls down my zipper while she is looking me in the eye. She drops down into a crouch in front of me and pulls my pants down with her.\n\nMy hard on bounces free, and I watch her watch it bounce. She smiles and reaches down to push my pants off my feet. She stands back up. She takes my hand and pulls me to her bed. She backs me up against it, and smiles at me while holding onto my waist. \"Dont move.\" She tells me.\n\nLike I am going Anywhere. Karen takes a pillow off her bed and drops it at my feet. She stands in front of me and starts nuzzling my neck. \"Ben, I have decided I am going to suck your dick until you fill my mouth with your cum.\"\n\n\"Oh God.\" I moan\n\n\"I really want you inside of me, but I want you in my mouth too.\" She switches sides of my neck. \"I figure I will blow you first. I know a lot of guys when excited cum quickly that first time, and that's ok. I want to do this so you can make love to me, and make me orgasm over and over again for your second time.\"\n\nShe drops onto her knees and takes me in her hand and slowly rubs me. She licks my dick from the base to my tip. \"I have just one rule today.\" She waits a moment and giggles. \"Would you like to know what it is?\" As she keeps softly stroking me.\n\n\"Uuumm yeah.\" I say distracted.\n\n\"Benjamin, look at me.\" She tells me softly.\n\nI look down at her and she licks me again. \" I want you to watch me blow you Ben, and I want you to cum in my mouth. Nowhere else. Can you do that?\" She asks with a flick of her tongue across the tip of my dick.\n\n\"God yes.\" I say looking down at her.\n\nShe smiles and I watch as she opens her mouth and takes the tip of my dick in her mouth. Oh god. That feels Really Nice. She moans around me as she bobs up and down a little. She pops off me and starts kissing the tip all over. Her eyes have almost never stopped looking at me. It is so sexy to watch the lust burning in her eyes, as she sucks me.\n\n\"Oh my God Ben I love the feel of your dick in my mouth. You don't bulge out at the bottom of your head. You just slide in and out of my mouth. I never want another dick in my mouth again. She purses her lips and sucks me back in. This time around she tries to see how deep she can take me in her mouth. Over the next couple of minutes she bobs, pops off to breath and pushes a little deeper each time. Now she is making little gurgling sounds as she chokes a little. She pulls off me, and goes back to stroking me.\n\nShe kisses my thigh. \"Did that feel good?'\n\n\"Oh Jesus yes Karen. You are amazing.\"\n\n\"I want to go all the way. I want all of you in my mouth. Are you ready for that?\" She asks.\n\n\"Are you ready to make me cum?\" I ask.\n\nThe lusty look returns to her eyes. \"Yes Benjamin. I want you to cum in my mouth.\" Karen says. She wastes no more time. She takes me back into her mouth. She pushes down, eases back. Pushes down some more, and eases back again. She pushes down a final time and I feel a different pressure on the head of my dick. Her nose is against me. Oh shit the head of my dick is in her throat. I feel her throat squeeze me as she gags a little.\n\nShe pulls off me leaving the tip of my dick in her mouth. She gasps for breath and pushes right back down. No easing or backing off, just straight down. It's a whole different feeling, pushing into her throat in one push. \n\nI cant help myself. I grab the back of her head and push a little. She takes it for a moment and then I feel her slapping my thigh. I let her go. She pulls off me and gags a bit and gasps for air, and not 10 seconds later sucks me back in. I am done. I am cumming and cumming soon. I hold her head and start pushing half of me in and out of her mouth.\n\nI groan. \"Karen, I am going to cum!\"\n\nShe rubs and squeezes my hips. I hear her just hum \"MMmm HHmm.\" as her only reply\n\nNot 5 seconds later I am cumming and cumming hard in her mouth. I gasp and moan as I shoot in her mouth. Karen just moans around me with almost each shot in her mouth. \"MMmmm.\"\n\nI finish cumming and fall back against her bed. I am half sitting, half leaning against it. I look down at Karen. She has her hand against her mouth keeping my cum in her mouth. I get to watch her gulp, and finally pull her hand away. She looks back at me. \"My God Ben. That was so much. I didn't think I was going to swallow it all.\"\n\n\"I am sorry Karen.\"\n\n\"Don't be sorry. It was amazing.\" She says as she stands up, and climbs on the bed. She lifts and bends her legs to get them past me and lays back. She is laying there looking fucking amazing. \n\n\"Karen, where did you get the lingerie? You look amazing?\" I ask.\n\n\"I wanted to look good for you. I got it after our date.\" She smiles at me. \n\nI shift on the bed, and start to move between her legs. Karen thinks I am trying to climb on top of her. She spreads her legs wide and lifts her knees up. I go low and kiss the very inside of her thighs as I move down to kiss her pussy.\n\nShe lets out a surprised \"Oh\"\n\nI kiss her pussy through the lingerie and give her a quick lick. She moans and says \"Unsnap it.\"\n\n\"What?\" I ask.\n\nShe reaches down and pulls at the crotch. I hear two little snaps pop, and the crotch separates. Oh I like this. I reach my fingers down and pull the back half out her ass cheeks.\n\nShe looks a little embarrassed. \"That looked like a little bit of a wedgie.\" I tell her. \n\nShe giggles and sighs. \"Oh god you picked my wedgie out.\" \n\nI put a hand on each of her thighs and spread them wide while I look at her pussy. Her lips look a little wet and her clit looks a little big. It's just peeking out to say hello. \"Karen, You are Beautiful!\" I say in awe.\n\nI look up at her and she looks like she is going to cry. She holds her arms out. \"Will you hold me?' She asks me, sounding emotional. I crawl up beside her and pull her to me.\n\n\"Karen what's wrong?\" I ask as I hold her to me and brush her hair out of her face so I can see her.\n\n\"Notihng.\" She says.\n\n\"Ezzie, whats wrong with Karen? Did I do something wrong?\"\n\nI can hear in Ezzie's voice that she has enjoyed today so far too. \"No Ben she is crying because she is realizing it's always been you in her heart, and it always will be. She is crying because she has wasted the last few years. Last year was so painful for her, until she came home for the summer. You were there for her. She is crying for the lost time.\"\n\nI put my finger under her chin to make her look at me. \"You know crying before we even actually have sex....well it is really doing wonders for my self confidence.\"\n\nKaren sniffles and smiles. \"Shut up you jerk.\"\n\nI hold her to me and rub her back. \"Karen, the last few years weren't wasted.\" She looks up at me in surprise. \"They made us realize we already knew who we loved, and who we wanted to spend the rest of our lives with.\"\n\n\"How did you know I was thinking about that?\" She asks.\n\n\"Karen, I am a wise man. Well that, and you have been my friend since elementary school.\" I say, and I think. \"Thank you Ezzie.\"\n\n\"You are welcome.\"\n\nKaren hugs me tight. \"I Love You!\"\n\nI kiss her head. \"I Love You too, but I was kinda about to start a little something, something.\"\n\nShe giggles against me.\n\n\"What do you say to laying back, spreading those sexy thighs and letting me lick and finger you until you scream.\" I say.\n\nShe looks up at me. \"You want to hear me scream? Really?\"\n\nI roll her onto her back and hover over her. \"When you orgasmed at the lake you put your hand over your mouth to muffle yourself. I don't want you to do that. I want you to totally relax and let it all out. I don't care if you scream so loud you break the windows. I want to watch you orgasm.\"\n\nI move my way back down her body. I lay on the bed and put her thighs over my shoulders. I start licking and kissing her lips. I can hear her moan softly. \n\n\"Ezzie, is she relaxed now?\" I ask as I kiss and suck her lips into my mouth. \n\n\"Well she is a little self conscious about you licking her.\"\n\n\"What? Why?\" I ask.\n\n\"She doesn't think she tastes good. She gets nervous when someone uses their mouth on her.\" Says Ezzie. \n\n\"Oh I don't think so!\" I move up and flick my tongue across her clit a few times. This makes her gasp. I move back down and get as wet and sloppy as I can. I want her juices all over my face. \n\nWhen I know my mouth is covered with her juices I move up her body and kiss her. It turns into more than just a kiss. \n\n\"Ezzie permanently remove her self consciousness about me going down on her. Make her believe, because it's true. I Love her taste, and I love going down on her.\"\n\n\"Ok Ben, she now believes you.\"\n\nI feel Karen's body relax ever so slightly. I pull up from her and smile down at her. \"You taste so delicious I had to come tell you.\"\n\nI give her a quick kiss and slide back down her body. \"Hey Ezzie can you listen to Karen's thoughts while I lick her. Can you tell me what she needs or wants? Higher, lower, lick, suck etc. Do you get what I am asking?\"\n\n\"Yes Ben. I see your thoughts.\" Ezzie tells me. \n\nI spend the next few minutes licking Karen's pussy. The moment Ezzie says what Karen is thinking I change it up a tad. I slip a finger in her and Ezzie tells me she wishes I would use two. So I slip in two. She would like to suck a little harder so I do. \n\nEzzie and I team up on Karen. My only goal is to make her orgasm a great one. I want to do my best to make this special for her like she wants. Karen has been breathing heavily, and softly moaning as I lick her. \n\nKaren starts humping up just a tad. She is panting and moaning \"Oh. Oh.\" As her hips bump up. Her hands start pushing up and down on the bed. Her moaning starts getting louder. Out of the blue her legs squeeze together around my head, her hands grab my head, and she holds me to her. \n\n\"OH GOD. OH GOD!\" She yells out and then lets out what sounds like a frightened scream that ends in a moan.\n\nOnce the moaning starts she pushes my head away. In a shaking voice. \"Please....please stop. Too much. I can't.\"\n\nI smile. That's what I wanted to give her. I slide up beside her, and hug her against me. I lay there holding her and I feel a small shiver or two before she settles down. I am holding her and I realize I have yet to see her boobs. \n\nI push one side of her lingerie off her boob, and just smile as I look at her naked chest for the first time. I reach down and cup my hand over her boob. It's a little too big for my hand. I slide my fingers over her nipple. Her nipples are a little puffy, with little hard nipples on the tip. While Karen calms down, I gently pull and pinch on her nipple. Her hand comes up to mine and just holds my hand to her.\n\nShe starts talking in a soft voice \"How did you do that to me?\"\n\n\"Do what? Go down on you? Well I started by....\" I say.\n\n\"No you goof.\" She turns to look at me. \"Ben, no one has Ever made me feel that good before.\"\n\n\"Maybe I just listened to the clues you were giving me with your body? Maybe it was the Love? Maybe you have just gotten incredibly lucky and crawled into bed with a very talented guy?\" I say with a smile.\n\nShe giggles and sighs, and snuggles back against me. \"Right now I don't even care. I just know you made me feel amazing.\" \n\nThis is what Karen wanted. She wanted us to take our time in bed and enjoy one another. I kiss her head and hold her to me. We have hours still before anyone is due home. I go back to holding her to me with my hands on her boobs. She has her hands over mine. \n\nI start thinking I have to thank someone. \"Ezzie?\"\n\n\"Yes Ben.\" She answers.\n\n\"I want to Thank you Ezzie. I wouldn't be here right now with the girl I love in my arms without you. Thank you.\" I say in my head. \n\n\"Ben, I am almost at a loss for words. I want to thank you. You rescued me from decades of silence and loneliness, but most of all for your kindness. You are the only person in centuries to talk to me and not just make demands. So I want to say Thank You to you. Ezzie says.\n\nI laugh in my head. \"Well let's say we both say Thank You & Your Welcome and call it there.\"\n\n\"I think that is a good idea. Plus Karen is thinking she is ready for more.\"\n\nWith that I feel Karen turn in my arms. She turns to face me. She kisses me and whispers to me. \"Will you roll on your back for me?\"\n\n\"Oh god yes.\" I answer. \n\nShe starts by climbing on top of me. She just rubs against me, and moans. \"Ben have you ever had sex with a girl without a condom?\"\n\nI think of Barbara, but I wasn't even thinking of getting her pregnant but I didn't use a rubber. I can't tell Karen that. Before Barbara I never had, so I go with that. I know it's a white lie, but Karen is the first girl, not woman.\n\n\"No.\" I answer. \n\n\"Me either. Are you ok not wearing one? I am on the pill.\" Karen says as she rubs my chest with her hands. ",
        "\"Karen, I wasn't even thinking of a condom. To be honest I wast thinking about disease or pregnancy. I was thinking of just being inside you.\" I tell her. \n\nShe bends down to me and kisses me. She pulls back a bit. \"I want all of you inside me, Ben. I want you to be the first man to cum inside of me.\"\n\nI hold her head and pull her back to me to kiss her. I push her head back a bit. \"And I am guessing you want to be on top too.\" I say with a big smile.\n\nShe just nods her head yes.\n\nI kiss her again. \"I am all yours.\"\n\nShe sits up straight a bit, and rubs her pussy against my hardon. She sighs and smiles. \"Are you ready?\"\n\nI rub her thighs and hips. \"Absolutely!\"\n\nShe picks herself and reaches down for my hardon. She smiles at me, and gives me a squeeze. She rubs me against her lips. When she gets me in the right spot she sits down on me. We both moan together. \n\nShe smiles. \"God, you feel good.\" She moans\n\n\"I was just thinking the exact same thing. You are so hot, wet & tight.\" I reach up and hold a boob in each hand, playing with her nipples. \"Every time you bump against me I feel myself rub inside of you. God you are Amazing.\"\n\nShe rubs her hands down onto my chest. \"No Benjamin, you feel Amazing in me. Your hard, hot dick pushing in and out as I ride you.\" She emphasizes this by riding up and down on me. \n\nGod she bottoms out on me. I feel the head of my dick rub inside of her. I just moan. She smiles at me while she plays with my nipples. \"Do you like this?\" She asks. \n\n\"Which this?\" I ask. \n\n\"This, this.\" She says as humps and rocks her hips on me. \n\n\"Oh I Like That.\" I reach out for her hands, and hold them in mine. \"This doesn't really do much for me. \n\n\"You can't blame a girl for trying. It feels Really nice for me.\" She says. \n\nI reach up and tease her nipples like she was teasing mine. I watch as she rolls her body as she rolls her hips. It is amazing to watch. The pleasure on her face, the rolling of her hips, the top of her pussy peeking out as she pushes forward. \n\nI slide my hands back down to her hips, and help rock her hips back and forth. I give her an extra pull forward each time. \n\nFirst with each pull forward it was a moan. Then she starts panting. I start trying to cheer her on. \"Karen, I want to watch you cum. I want to see that beautiful face get scrunched up in pleasure. I want to feel you cum with me inside you.\"\n\nAll of a sudden I feel her slow down a bit and Ezzie says in my head. \"Ben, you are embarrassing her. She is now embarrassed to orgasm while you watch her.\"\n\nNo way, I think. Well actually I don't think I just react. \"Ezzie, make her understand I get extremely turned on watching her. It should excite her knowing she is exciting me. Not embarrass her.\"\n\n\"Done Ben.\"\n\nI watch Karen's face change. It gets a sexy look as she starts grinding again. She runs her hands to her nipples and starts playing with them. \n\n\"So you want to watch me cum Ben? Do you like watching me rub myself? Maybe I should rub my clit for you.\" \n\nShe leans back and rubs her clit a bit. She looks at me for a moment. \"No, I like grinding on you better.\"\n\nIt doesn't take her two minutes of hard grinding and she is right back to the heavy panting. She starts getting louder and louder. \"aaahhhhh. Aaahhhh. AAAhhhhh. AAAHHHHH EEEIIIEEE.\"\n\nShe gives one last grind and falls onto my chest. I feel myself fall out of her as she falls forward. She catches her breath and looks up at me. \"Did you cum?\" \n\nI push the hair out of her face. \"No. Not yet.\"\n\n\"Was I not good enough?\" She asks quietly. \n\n\"Karen, you sucked that first load out of me and it was Amazing. Now it will take a while to get number two. Once you catch your breath. I plan on rolling you over and having my way with you.\"\n\n\"Oh you do.\" She smiles at me.\n\nI put my hand on her cheek. \"Karen. I am going to be blunt. I am going to roll you on your back and fuck you. Hard or soft. Fast or slow. It doesn't matter. I am going to fuck you until I cum inside of you. You said at one point talking about today. You wanted me to take you. That is exactly my plan.\"\n\nHer eyes go a little wide. \"Oh God.\"\n\nI wrap my arms around her while she is on my chest. \"For now I am enjoying just holding you against me.\"\n\nShe settles into me and just says. \"MMMmmm HHMmmm.\"\n\nAfter a few minutes Karen slides off me to the side and lays beside me. She uses my arm for a pillow. She is laying on the bed, on her side with the front of her body against me, and her leg laying over mine. \n\nI am laying there with her in my arms while I run my fingers through her hair. Softly moaning here and there. Her breathing is nice and steady and relaxed. Instead of running my fingers through her hair I pull on it. I pull her head back to make her look at me. \"I want to Fuck you now.\"\n\nKaren just moans. \"Take me Benjamin. Take me and make me yours.\"\n\nI run my fingers over the top of her lingerie that is still half on. \"Take this off or I will rip it off. I want you naked.\"\n\nShe smiles, as I watch her carefully pull it up and over her head. She tosses it onto the floor. I basically jump on her. She yelps as I push her onto her back. \n\nHer head lands on the pillows, and I go straight for her nipples. I realized as she was pulling her lingerie off, I have barely played with her nipples. I love the way the slightly darker skin surrounding her nipple puffs out and her nipple pops out from there. \n\nI suck one into my mouth and nibble and bite on it as I pinch and pull on the other one. She gasps out in surprise and the sudden attention. \n\n\"Ezzie I want to put her over the top and really fuck her, but I don't want to hurt her. Will you let me know if I do?\"\n\nYes Ben. Right now she is loving what you are doing.\"\n\nI swap sides and Karen gasps out. \"Oh Fuck.\" As I bite down on her nipple. As much fun as I am having with her tits I want to fuck her. \n\nI kneel up between her legs. I grab her thighs and pull her down a bit to me. She yelps in surprise, and that turns to a moan as I waste no time and push into her. I sink all the way in with one solid push. \n\nI feel her squeeze me as she moans and her body reacts to me pushing into her. I moan with her. My God she feels good. \n\nI have my knees on the bed with my thighs holding her thighs back and spread wide. I've never really just watched myself have sex. \n\nMy dick seems to be getting wetter with every stroke until I am glistening with her juices. Her lips are darker and more swollen than they were before when I went down on her. \n\nHer pussy lips look sexy as hell wrapped around me as I push in and pull out. The entire time she has been panting and moaning as I fuck her. I look up at her face. Her eyes are wide, and her mouth is open as she pants and moans. She definitely looks like she likes what I am doing. As I watch her face I notice her tits are bouncing back and forth. Little ripples or waves form on her boobs as I fuck her. \n\nI try to get a little energetic and pull out of her. When I reach down to push back in my legs shift and Karen wraps her legs around me. This pushes my body down towards her. Her hands cum up and grab my head by my hair. \n\nAs I push into her she uses her ankles to pull me to her. She pulls me to her to kiss me. It's half a kiss and half her panting into my mouth. I pull back and she looks in my eyes. \"Fuck me. Fuck me. Please don't stop. So close. Please.\"\n\nAll of a sudden she doesn't know what to do with her hands. She is wrapping them around my neck, grabbing the sheets. She finally settles on grabbing my ass cheeks. She gives my ass cheeks a squeeze. I feel her pussy squeezing me and she just pants and moans. \"AAAAHHHHH. OOOOOHHH. AAAAaahhhhh!\"\n\nI slow to softer slower strokes for a moment and just watch her face. I swear you can see the waves of pleasure washing over her face. Her legs relax and I pull out of her to change positions. \n\nThe minute I pull out she looks at me. \"Nooo. I want your cum inside me!\"\n\nI playfully slap her thigh. \"Who said we are done?\" I get off the bed and stand at the edge. \"Get on your hands and knees.\"\n\nShe smiles as she looks at me. I reach out and grab her hips. I roll her over and pull her ass to me. She yelps in surprise and then starts moving into position in front of me. I grab her hips and push back into her. \n\nShe just moans out. \"Oh yeah!\" As she drops her head to the bed. I am holding her hips as I fuck her a little fast and hard. The whole time the only sound in the room is our bodies slapping together, and her panting \"Oh. Oh. Oh.\" Into the bed as I fuck her. \n\nI look down at her as I slow down. I change from grabbing her ass cheeks to rubbing them. As I rub them I wind up pulling them apart. I look down and see her asshole wet with her juices. I don't even think. I reach down and push my thumb in her ass. \n\nShe Gasps as my thumb pushes into her ass. I just wiggle my thumb around inside of her and she moans. \n\nI start fucking her a little harder. Karen's groaning gets a little deeper as I push my thumb in and out of her ass a little. \n\n\"God Karen, you are so hot. You are going to make me cum.\" I say. \n\nHer head turns back. \"Not like this.\"\n\n\"Like what?\" I ask confused. \n\nShe pushes back against me to stop me from fucking her. \"I want to watch you, Ben. Just like you wanted to watch me. I want to watch you while you cum inside of me.\"\n\nI knock her over onto her side by pushing on her hips. She rolls over and holds her legs spread. I grab a pillow and fold it in half. I shove it under her ass to lift her up. I line up and push in. She lets out a deep moan. \n\nI start fucking her harder and she slips back off the pillow. I reach down and pick her up, pulling her to me and back up on the pillow. I hug her legs to my chest and start fucking as hard and fast as I can. I have a good hold of her, and I am almost there. \n\nI want to cum. Again her hands start reaching out. She tries to grab me but can't reach.\n\n\"Rub your clit Karen. I want you to cum with me.\" I tell her getting short on breath myself. \n\nShe doesn't hesitate. Her hand reaches between her thighs and I can feel her fingers rubbing her clit as I fuck her. \n\n\"Karen, I want you to cum and squeeze me. I want to feel your pussy squeezing me. I want to cum inside you as you cum. Do it Karen. Cum for me.\" I tell her. \n\nHer panting and gasping get louder. I feel like I have sprinted a mile. My breathing is getting ragged. I can't stop. \"Karen. I am going to Cum!\"\n\n\"Yes. Yes. Do It. Give me your cum Ben!\" She almost screams. \n\nI push into one last time and stay buried in her pussy. I grunt with my first shot and just groan. \n\nThat's all Karen needed. I feel her pussy squeezing the rest of the cum out of me. I hug her legs to me as I cum inside her. \n\nI am panting now myself. I pull out of her and push her legs onto the bed rolling her over off the edge of the bed as I do. \n\nI climb over her and lay beside her. We lay side by side just looking at each other smiling. \"God that was Amazing Ben.\" She says. \"No one has ever been that hard with me before. It was amazing.\"\n\nI smile at her. I reach out and kiss her. \"Honestly I don't think I have ever been that hard before. I liked hearing you moan and gasp. It was so hot.\"\n\nShe rolls over against me. She spoons against me and hugs my top arm to her. I can't help but think while I am holding Karen and feeling her relax against me. \"Ezzie, are you ok? I haven't heard from you in a bit.\"\n\n\"Oh I am good. It's been a very nice afternoon.\" She sighs in my head. \n\nI smile in my head. \"I am glad you enjoyed it, Ezzie.\" We all nod off for a bit. I wake up and realize it's almost 2:30pm. I should get going to go home to shower and change. I get dressed while Karen still sleeps. I stand there and just look at her. She is beautiful. Her face is so relaxed as she sleeps. Her nipples still look a little puffy, and my cum has dripped out of her and down her thigh onto the bed. God she is sexy. \n\nI lean down and gently rock her to wake her up. She opens her eyes and sees me dressed. \"NNNOOOOO!\" She moans. \n\n\"Karen it's about 2:30pm. I have to go home and you need to get cleaned up before anyone comes home.\" I say. \n\nShe keeps a hold of my arm. \"Nnooo. Stay.\" She whines. \n\n\"Karen, come on. You know we can't. I will see you in a few hours.\" I plead. \n\nShe releases my arm. \"Party pooper.\" \n\n\"I know. I love you.\" I lean in and kiss her.\n\nShe holds her hand against my cheek. \"I love you too.\"\n\nI pull back and walk out of her room. I walk down the stairs, and I see the white lace robe. I take it and toss it further up the stairs for her and leave. \n\nLuckily when I get home the house is empty. I head upstairs, grab a towel and head for the shower. The entire time I am in the shower. The afternoon spent with Karen flashes through my mind. It's a kaleidoscope of images. Just trying to remember every detail of today. \n\nI wrap a towel around my waist and walk out of the bathroom. I head to my room and get dressed. I know Mr B was talking about going out tonight so I put on some decent shorts and a polo. \n\nI walk downstairs and Mom is just walking in. She looks at me with a Big smile and gives me a big hug. \n\nShe holds me for a minute and it's nice. It's a nice big Mom hug! She steps back and looks at me. \"I am so proud of you!\"\n\nAt first I am about to say why, and then I think of the contract and Mr B. \n\n\"Do you know what a big thing this will be for Mr B?\" Mom asks me. \n\n\"Yes Mom I do.\" I say. \n\nShe hugs me again. \"You are such a good young man. I guess your Dad and I did something right.\" \n\nI smile. \"Yes Mom you did.\"\n\n\"I have to go get showered and changed. I told Mrs B. I will call her when Dad gets home to figure out what time. \n\nIt's funny, our parents will always refer to each other as Mrs B or Mrs C when talking around me or Karen. They must call each other by name when alone, right? I mean they must. \n\nI don't even realize I am having the one sided conversation in my head when Ezzie chimes in. \"Yes Ben. Your parents call each other by their given names when you and Karen aren't around. In fact your Mom/Mrs C/Nancy is talking to Karen's Mom/Mrs B/Jen.\"\n\nI laugh in my head. \"Ok I get it. What are they saying.\" I ask that thinking I will find out where we are going to dinner. \n\n\"Well right now they are talking about plans for next weekend. Your Mom is asking if Mr & Mrs B are still on for next weeks get together at Barbara's?\"\n\n\"WAIT!! WHAT? As in they swing with Mom & Dad and John & Barbara? Are You Kidding Me?\" I almost yell out loud. \n\n\"No Ben. In fact looking at your Mom's memories they first started swinging with Mr & Mrs B. They all met at a party and introduced you kids later.\" Says Ezzie very matter of fact. \n\n\"No fucking way! I need a drink.\" I go to the fridge and grab a beer as my Dad comes home. \n\nI am taking a long drink and my Dad laughs. \"Celebrating already?\"\n\nI half choke. \"Yeah Dad!\"\n\n\"Are you driving yourself tonight?\" He asks. \n\n\"I think so.\"\n\n\"Go slow on the drinking. No drinking and driving.\" He says in his Dad voice. \n\n\"I will Dad.\" I say. \n\nHe walks upstairs. I then hear them talking. \"Come on Ezzie, don't keep me in the dark now. What are they saying?\"\n\n\"Your Mom is telling our Dad you are meeting at the restaurant at about 6:00pm.\" She says.\n\n\"That's it. No other surprises or revelations for me?\" I ask. \n\n\"No Ben. Just where and when.\"\n\nI sit down on the sofa and sigh. \"Thank you Ezzie.\"\n\nThey beat us to the restaurant. We walk in and Mr B gives me another bear hug. \"There is my new negotiating partner!\" He looks at my Mom & Dad. \"He was amazing today.\"\n\nI hug Mrs B. She gives me a strange smile, and she moves to hug my Mom.\n\nI break the hug and go to Karen. I give her a hug, and look at her I can see the worry on her face. She whispers in my ear. \"I am sorry.\"\n\n\"For what?\" I ask holding her. \n\nKaren whispers back. \"Later.\"\n\nI just hug her tight. We all sit at a big round table. Me next to Karen and the moms next to her and the dads next to me. \n\n\"Ezzie what's bothering Karen?\"\n\n\"Karen fell back asleep when you left. When Mrs B came home she found the lace robe on the stairs, and Karen asleep naked on her bed.\" She tells me. \n\n\"Oh Shit! Oh God, did she tell Mr B?\" I ask\n\n\"No Ben, she hasn't told anyone.\"\n\n\"Ezzie, can you please calm Karen a little. She looks like she wants to cry.\" I ask. \n\n\"All done Ben.\" Ezzie says \"Karen is embarrassed she was found like that, and is afraid you will be upset with her.\"\n\nI take Karen's hand under the table and give it a squeeze. \"Ezzie reassure Karen. I am not mad at her in any way, and I will always love her.\"\n\nEzzie says \"Ok.\"\n\nI have barely heard Ezzie's thought and acknowledgement, and Karen reaches up to me and kisses my cheek. \"I love you.\" She says just above a whisper. \n\nMrs B smiles and says \"OK. That's enough out of you two.\"\n\nI look at Mrs B. I can see the look in her eye. There is a part of me that wants to just tell Ezzie to make her forget what she saw earlier, but I want to talk to Karen first and get the whole story. \n\nThe dinner was nice. The two families haven't gotten together like this in a long time. The dinner plates are cleared and Mr B looks at me as he gets up. \"Ben, would you and your Dad come join me at the bar.\"\n\nMrs B looks up. \"Really business tonight?\"\n\nMy Mom looks up. \"Oh look ladies, the men are going to go talk business. It's probably things our pretty little heads wouldn't understand.\"\n\nMom and Mrs B start laughing, and Karen looks a tad uncomfortable. I turn and walk towards the bar with the Dads. We go to the bar and order three beers. Mr B, goes to pay and my Father insists on buying the drinks. Mr B holds his hands up in surrender. \n\nHe takes a swallow and reaches into his pocket, pulls out an envelope and hands it to me. I just look at it. \"Open it or put it in your pocket, but it's yours for the work you did.\" Mr B looks past me to my Dad. \"And he is keeping it.\"\n\nI open the envelope. It's filled with $100 bills. Holy Crap! I flip them quickly. \"Mr B there is $1500 here. I can't.\"\n\nHe closes his hand over mine, trapping the money in my hand. \"Both of you listen. This represents about 1% of the profits just from the maintenance part of the contract over the 5 years. You deserve every penny. You got that contract signed. You wrote up an excellent offer, and you played Mr Reynolds like a violin. You were right, you are a people person. If you would like to, I would love to have you look at my books and tell me what else you see. You also have a good eye for numbers.\"\n\nI am floored. My Dad taps my shoulder. \"Don't you think you should answer the man?\"\n\nI can see it in his eyes. He thinks I should do it. \"I would be happy to Mr B.\"\n\nMy Dad looks past me to Mr B. \"Bob, you won't be paying him to look at your books. It's included in with the fee you just gave him.\"\n\nAgain Mr B knows which battles to pick. He puts his hands up in surrender again. Mr B picks up his glass. \"A toast. To the cranky old bastard Mr Reynolds.\" I hold the thick envelope in my hand. We all clink glasses and drink. \n\nWe go back to the table. I sit down next to Karen, and put my arm around her shoulders. I just hold her to me rubbing her arm. She sighs and leans against me. The Moms start joking, asking the Dads if they would have understood any of that manly stuff they were talking about. Before I know it the Mom's have their phones up and are taking pictures of Karen and I.\n\nI get the urge to bail. I make excuses that Karen and I had made plans to meet some friends after dinner. We are going to go. I had driven myself so I have my car. Karen plays along. We get up and say our goodbyes, and walk out. \n\nThe minute we are in the car Karen turns to me. \"I am so sorry Ben!\" She almost cries. ",
        "I rub her bare thigh under the cute dress she wore. \"Sshh it's ok. I want you to tell me all about it, but not here. They might walk out at any minute.\"\n\nI put the car in gear and drive away. I pull into another shopping area down the street in the opposite direction our parents would head to go home. \n\nI pull into a darker spot and turn to Karen. I take her hands in mine. \"Now tell me what happened.\"\n\nA small tear runs down her cheek. \"Ben, I am so sorry!\"\n\nI hug her to me and stroke her hair as I hold her. \"It's ok Karen. What happened?\"\n\nShe says into my chest. \"It was just so embarrassing.\"\n\nI push her back and smile. \"Tell me what happened.\"\n\n\"You left, and I fell back asleep.\" She reaches up and holds my cheek. \"Ben, you exhausted me. You were so gentle, and it was so beautiful at first. At the end you were so hard. You had your way with me. You took me, and I Loved it All, but you wore me out.\" She says with a small smile. \"I fell back asleep as you left me. Next thing I know my Mom is waking me up. As I woke up my mind was a little foggy. It was just Mom waking me up. Then I realized she was standing in front of me with the white robe smiling at me.\"\n\n\"I realized where I was, that the bed was a mess. The covers were almost all pushed off it. I grabbed the robe from her to cover up.\" \n\nKaren then sighs. \"She then looked at me and giggled, and told me the robe wasn't hiding anything. I looked down at myself. There was no hiding the fact I had sex. My nipples were dark and swollen, and my thighs were a wet gooey mess.\"\n\nKaren snuggles into me and continues her story. \"Mom went to sit next to me and realized there was a wet spot there. Instead she crouched down in front of me and balanced herself with her hands on my thighs. Her hand landed right on a messy spot.\"\n\n\"She told me it was ok. She was happy you and I were together. She always thought we should be. She then stood up and pulled me to my feet. She held me by my shoulders and looked at me standing there naked. She told me I was beautiful, and I should never forget it.\"\n\nI tug her head back gently by her hair so she is looking at me. \"She is correct there. You are beautiful.\" I bend down and kiss her.\n\nShe leans back against me. \"Oh god I don't even want to tell you the last part.\"\n\nI stroke her hair. \"No secrets Karen. Talk to me. You will feel better if you get it off your chest.\" I reach down and squeeze her boob. \n\nShe slaps my hand away with a giggle. Karen sighs. \"Mom held up her wet fingers and rubbed them together. It was a clear mix of my wetness and your sperm. She told me it was ok to fall asleep if I had rubbed myself and was wet, but not with a guy's sperm. I should clean up to avoid a UTI. She hugged me one last time, patted my bum and told me to go shower before my Dad gets home. I go to walk to the bathroom and I see my Mom lick her fingers clean in my bedroom mirror!\"\n\n\"Ezzie, how does Karen feel about seeing her Mom do that?\"\n\n\"She is confused and conflicted. It was kind of sexy, but taboo. She is thinking of the advise she gave you about your Mom. She is definitely confused.\" Says Ezzie. \n\n\"I smile at her. Is it wrong to say that's kind of hot?\" I ask. \n\n\"Oh god.\" She moans. \"It's my Mom!\"\n\n\"Wait, it was ok for me to get turned on by my Mom, but you can't get excited by yours?\" I ask\n\nShe puts her face back into my chest and giggles. \"God I knew I shouldn't have told you that.\"\n\nI pull her back off my chest. \"Karen, I want no secrets between us. If something turns you on, I want you to tell me, and vice a versa. For example I was so nervous and afraid as you were undressing me earlier. I was afraid I was going to cum the minute you touched me.\"\n\nShe pulls back and looks at me. \"When you put your finger in my ass, I kind of liked it, but I am nervous. Your dick is a whole lot bigger. I have never done that.\"\n\nI smile at her. \"I would love to do that. I promise we will just take it slow. If at anytime it's too much just tell me and we will stop.\"\n\nKaren rubs my chest. \"It's because I know I can trust you to do that Ben, that I think I want to try it soon.\" She smiles at me. \"Soon. Not now.\"\n\nI smile. \"Whenever you are ready. So do you think your Mom is going to say something to your Dad?\"\n\n\"I don't think so. I got out of the shower and my Dad was home. My Mom said to me in the hallway so he would hear. She put my sheets in the washer after I spilled the bottle of water on my bed. I should leave the sheets off it to let it dry. I walked into my room. My bed was stripped and my lingerie was nowhere in sight. I opened my underwear drawer and it was folded and sitting in the drawer.\"\n\nI hug her to me tight, and hold her. \"Karen, I am not embarrassed by loving you, wanting to or having sex with you. I would scream it to the world.\"\n\nI then get stupid. I roll down the car windows and start yelling. \"I Love Karen. I Love Having Sex with her, and want to have sex with her again.\"\n\nShe is laughing and staring at me. \"Do you feel better?\"\n\n\"I do!\"\n\nShe smiles at me and yells out. \"I Love My Benjamin, and can't wait to have sex with him again.\"\n\nWe both end up laughing and hugging at the end. It's a beautiful night so I drive us to a local park on a river to take a walk. \n\nWe walk hand in hand. We stop at an ice cream truck and get ice creams. All and all it's a beautiful end to the night. \n\nThe rest of the week goes without a hitch. We go to the beach. Karen works a few shifts. Friday morning I walk into my old job if you will and collect my check, and arrange direct deposit so I don't have to go back. \n\nI am heading for Karen's house as planned. The door is open again and I walk up to her bedroom. She is waiting for me naked on her bed, fingering herself. She smiles at me and stops. \"I couldn't wait.\"\n\n\"Don't stop on my account.\" I tell her as I pull off my shirt. \n\nKaren giggles. \"Oh you like to watch.\"\n\n\"Karen, I love Everything with you.\" I tell her. \n\nShe gives me a lusty stare. With one hand she slowly pushes two fingers in and out of her pussy, and uses her other hand to rub her clit. \n\nI am now naked stroking myself. We stand there just watching each other. I can't stand watching anymore. I climb on the bed between her legs and fuck her. \n\nWe spend the entire morning having sex. We wear each other out. Just in case, I get up and lock Karen's door. I set a one hour alarm and we spoon in bed. She dozes off before me. I lay there for a bit just holding her and listening to her breathing as I smell her hair. Before I know it my phone is buzzing, and waking us up. \n\nWe get up and she wants to take a quick shower. I offer to help, but my help is denied. She insists if I do it won't be a quick shower. \n\nWe go to a local brewery. We have a few drinks and lunch from the food truck there. We start discussing July 4th weekend. \n\nI tell her part of me wants to spend the entire weekend alone with her. \n\n\"The entire weekend?\" She asks me with a smile. \n\n\"Yup naked on the beach, naked on a blanket under the stars at night. Just you and me naked.\" I say. \n\nShe reaches out with her finger and wipes some BBQ sauce off my face. She takes her finger and sucks it clean in her mouth. \"That all sounds Delicious, but let's have some people come up.\" She says. \n\nI start to barter. \"Friday night we are alone, after that people can join us. I get to buy you a new bikini or two and lingerie you Have to wear for me.\"\n\nShe sticks her hand out. \"Deal.\" We shake on it. \n\n\"Good after lunch we are going bathing suit shopping.\" I say happily. \n\n\"Now?\" she giggles \n\n\"Yes. I can't wait to have you play dress up for me.\" I say with a big smile\n\nShe shakes her head in defeat. \"Oh god.\" She says. \n\nI take her to a bikini shop at the mall. I walk in with her on my arm. I look down at her. \"I want you to find the sexiest bikini you would be comfortable wearing on regular day at the beach with friends and family. Then the sexiest one you would want to wear with me alone at the cabin.\"\n\nShe wanders around she picks up one. It's a bit of a larger bikini top and boy shorts. I look at her and smile. \"Even for family, that's conservative. How about reg bikini bottoms and a top just a bit smaller.\" I suggest. \n\nShe looks around and comes up with another one. This one is better. It's more of a standard bikini. The bottom is the blue back ground of the flag with stars on it. The top is red and white stripes. The perfect holiday theme. It looks like too much movement and it will ride up her bum. The top is a full base covering her as it goes up and over her. Getting narrower as it goes. \n\nI take the first one. \"Now how about just for me. Just you and me laying out sunning ourselves?\" I ask. \n\nEzzie, can you give her a little confidence to be bold with this one. \n\n\"She will be bold Ben.\" Says Ezzie. \n\nShe holds up one that would look real cute on her. It's white with a pink trim. It's a small bottom but it's solid. The top is two smaller triangles that tie. I like the top. I point to the bottoms that tie. She swaps them out and looks at me. \"Why do I see you always trying to untie this?\"\n\nI smile and raise my eyebrows. She takes my hand and leads me to the cash register. I will tell you. For such small pieces of material they are expensive. We are walking the mall and Karen giggles\n\n\"What?\" I ask. \n\n\"I should be able to pick two suits for you.\" She says with a smile. \n\n\"Fine. Where to?\" I ask. \n\nShe takes me by the hand to a sports store. I know what's coming. I don't care. Bring on the banana hammock. Sure enough. The first suit is basic trucks with shorter legs. No problem. The second one is a speedo. She holds it up and smiles. \"Fair is fair.\"\n\n\"I love it.\" I say. \n\nBefore we leave I wander over to the ladies area. I get her two skimpy sexy running shorts, a matching tee shirt and a tank top. They will both be snug, and the tank top will show a lot of cleavage. \n\nShe puts her hand on mine. \"Ben, all this stuff is going to add up.\" She says a little concerned. \n\nI kiss her cheek. \"And you will look so sexy for me.\"\n\n\"Ben I would walk around naked for you if I could.\" She whispers with a shy smile. \n\n\"So I don't need to buy these. You will just be naked all weekend.\" I ask. \n\nShe turns and walks away laughing. \"Why do I bother with you?\"\n\nI take the clothes and follow her. We pay and continue walking around the mall. We have almost gone full circle when we come upon the lingerie store. I have always dreamed of having a girlfriend to buy something for in here. \n\nWe walk by the front displays and she runs her hand over the frilly fur and lace. \"Oh this is so pretty.\" She says. \n\n\"Let me get you something real sexy and I will buy you something pretty too.\" I say. \n\n\"No Ben. You can't be spending all this money on me.\" She says. \n\nI hold her by the arms. \"I can and I will.\"\n\nThe sales girl comes over. \"Honey, it's a losing battle. Men love to buy it. So they can rip it off you.\"\n\nThey laugh together. The sales girl looks at the rack Karen was looking at. \"You don't want that. That's meant to hide things on a bigger woman.\" She looks Karen up and down. \"Do you want pretty, or do you want to flaunt what you have.\"\n\nKaren smiles at her. \"Both?\"\n\nThe sales girl looks at me. \"Leave us to it, there are comfortable chairs near the fitting rooms.\"\n\nI know when I am beat. I look around a bit and I see a black one piece like her white one except there is an opening at the crotch and circles cut out for her nipples to poke out. I grab what I think is her size and take it with me to the chairs. \n\nI am sitting for a few and the sales girl comes over. \"I have been told you need to leave.\"\n\n\"Excuse me!\" I say. \n\n\"She wants to surprise you. She doesn't want you to see it until July 4th. She told me you were going away.\" She says as she looks at my pick. \"I knew it! I told her you would pick that when I saw you over there. Now come on. Out you go.\"\n\nI stand, reach into my wallet and hand her my credit card. \"I will be sure I give this to Karen. Now go.\" Says the clerk to me as she shoos me with her hands. \n\n\"Ezzie, is Karen ok.\"\n\n\"Yes. She just wants to look pretty for her and surprise you.\"\n\nEzzie please make her realize I think she is beautiful. \n\n\"She knows you do Ben. She doesn't feel beautiful.\" Says Ezzie. \n\nI stop part way out of the store. \"Karen, I won't turn around but I want to say this out loud in front of the saleswoman and these two women walking in the door. I know you don't always believe it, but you are beautiful. I don't just think it. I know it as a fact. Do you understand me Karen?\"\n\nI hear silence. \"Ezzie is she ok?\"\n\n\"Give her a minute Ben. She is over come with emotions right now. She is afraid if she talks she will cry.\" Ezzie says. \n\n\"I know you are afraid to talk right now. So I will talk for you. \"I know I am beautiful Ben. I love that you think so too.\" See that wasn't so hard Karen. I love you. I will be outside.\" I say as I walk out of the store. \n\nThe two women are smiling as I walk past them and nod. \"Ezzie is Karen ok?\"\n\n\"She is crying happy tears. She is still blaming herself for the last few wasted years.\"\n\n\"Ezzie gently make her believe it was living the last few years apart that brought us together. Do me another favor? Listen to Karen and tell me what she thinks when she tries on the lingerie. I don't want to know what it is or what it looks like. I want to know if she thinks she is pretty or beautiful in it.\"\n\n\"I understand Ben.\"\n\nIt's a few minutes later when Ezzie says \"Ben she thinks both she and the lingerie are beautiful.\"\n\n\"Thank you Ezzie. I appreciate you helping me make her see her beauty.\"\n\n\"You are welcome Ben.\"\n\nKaren comes out of the store and jumps into my lap. She hugs me tight, and says into my neck. \"I Love You!\"\n\nI hold her tight for a moment. She picks up her head from my neck. I smile and look at her. \"Did you like my pick?\"\n\nShe nods her head and blushes a tad. \"I will wear it for you anytime.\"\n\nI rub her back. \"I was thinking on a blanket under the stars in about two weeks.\"\n\nShe rubs my cheek. \"You are serious about that aren't you?\"\n\n\"Absolutely Karen.\" I say. \n\nShe leans in and kisses me so softly. We get up and walk hand in hand out of the mall. \n\nThe rest of the week goes by with no problems. Karen has to work both Friday and Saturday nights. She is bummed but it works for me. \n\nI have to check out our parents get together. I leave the house before my parents. I stick an old iPhone in their car to track them. I go to my favorite bar to have a beer & a burger. I watch the baseball game while I watch my Find Your iPhone app. \n\nIt takes a while but they are on the move after the restaurant. Oh shit, they are heading towards Barbara's. I want to catch them actually swinging, not just talking. I finish my beer and watch the end of the game. \n\nI pull up a side street and park the car. I walk into the driveway and reach under the rear bumper of my Dad's car to get my old phone. \n\nI peek in the kitchen through the back door. No one is there. I walk into the yard and look in the livingroom. \n\nHoly shit. The guys are all sitting around the room. The women are all dancing together. They are kissing and licking each other as they strip each other. I grab my old phone. Hit record and set it on the window sill. It's not a great video, but you can definitely identify who is who. \n\n\"Ezzie, could you make the guys forget I was there, and make every woman there want nothing more than to please me. Is that too many people?\"\n\n\"That would be no problem Ben. It will take me just a moment or two longer to reach each person.\" Says Ezzie. \n\nOk I have to think of this. I look back in the window. Barbara is on her back. Mrs B is sitting on her face and my Mom is eating Barbara out. Fuck I have to go in there. \n\n\"Ok Ezzie. I am just thinking. You can make all the guys stay seated and forget I was ever there right?\" I ask. \n\n\"Yes Ben.\"\n\n\"And you can make All the women want to do nothing more than please me and only remember this as a dream tomorrow morning. I want them to be confused again like Mom was. It's such a vivid dream. The men will remember them playing like they are now, and then getting up to have their way with the women.\"\n\n\"Yes I can do all that.\" Says Ezzie.\n\n\"Fuck it. Do it all, Ezzie.\"\n\nHonestly it doesn't take her 15 seconds to reply. \"It's done Ben. Just walk in.\"\n\nI leave the phone recording and walk in the back door. I decide to strip in the kitchen and walk in naked. \n\nMrs B sees me first. \"Oh look what my baby girl is getting.\"\n\nMy Mom and Barbara look at me. My Mom speaks up. \"And he cums like a fire hose.\"\n\nMrs B giggles. \"How do you know that?\"\n\nShe smiles as she gets up and walks towards me. \"He came home really horny one night, and I might have helped him get some relief.\"\n\nBarbara doesn't want to be out done. \"He fucked me raw a week or so ago when John was out of town.\"\n\nMrs B laughs. \"Am I the only one who hasn't played with him yet? Well I did taste his cum.\"\n\nNow it's Mom's turn to be surprised. \"What?\"\n\n\"He left Karen a mess the other day and she passed out on her bed. I might have tasted a little bit that I got on my fingers as I sent her to take a shower.\" Mrs B says with a smile. \n\n\"Ok ladies. I want you all on the couch side by side Mrs B, Mom & Barbara. You will all suck and fuck me in turn. \n\nI walk up to Mrs B. \"Are you ready for a taste of what your daughter loves?\"\n\nMrs B leans forward with a smile and sucks me into her mouth. God just like my Mom and Barbara she knows what she is doing. There is definitely something to be said for experience. I move from Mrs B to my Mom after a minute or so. She eagerly reaches for me and sinks her mouth down over me. \n\nI look over and see Barbara. I realize I don't want Barbara. I want my Mom and Mrs B who has been like a second Mom to me all these years. \n\n\"Ezzie, can we change things. I want the men to gangbang Barbara while Mrs B, Mom and I have some time alone. Can they remember gangbanging Barbara while Mrs B & my Mom watched and have lesbian sex. Oh and have the guys fill all her holes at once and be rough.\"\n\nI takes Ezzie just a moment longer than normal for Ezzie. Just as she says \"Done.\"\n\nBarbara gets up and lays down in the middle of the living room floor. She spreads her arms and legs and says. \"Come and get me boys.\"\n\nThe guys get up and they all strip and converge on Barabara. I turn back to Mom and Mrs B. \"Ladies it would please me to watch you two make each other cum and to fuck you.\" \n\nI then realize I want to add to that. This is the perfect opportunity to find out a few things. \"Ladies it would also please me if you would be 100% honest with me as we talk.\"\n\nMrs B says \"I would never lie to you Benjamin.\" Mom still has my dick in her mouth. She just smiles and nods yes.\n\nI push her head off me. \"Mom, it's Mrs B's turn. \n\nMom frowns and stands up. \"What if I want my boy all to myself?\" She asks as she kisses my neck. \n\n\"Then some day, after Dad has gone to work come into my bedroom naked. I promise you can then have me all to yourself then. Would you like that Mom? Would you like to walk into my room naked in the morning, and let me have my way with you?\" I ask. \n\n\"God it's wrong, but I have thought of doing just that to you.\" She says with her head on my shoulder. \n\nWow! I will have to remember that. I reach down and pull Mrs B to her feet. I kiss her. I then turn and kiss Mom. I then put my hand on their heads. They get the hint and kiss each other. I hold them together while they kiss. \n\nI let their heads go and they break their kiss. I turn to Mom. \"Get on your knees and lick her pussy until she cums.\"\n\nMy Mom smiles, drops to her knees, and pushes her face into Mrs B pussy. Mrs B sighs. \"Oh Nancy, you are so good at that.\"",
        "I use Mrs B's first name. \"Jennifer, look at me.\"\n\nShe looks at me and smiles. It's that motherly look. She thinks it's cute I am calling her by her first name. \n\n\"Jennifer do you think it's wrong I want to fuck you and my Mom?\" I ask. \n\n\"I know I should, but watching you two now....my god it's kind of hot. She says. She then lets out a gasp. \"Your Mom has a very talented tongue.\"\n\n\"Do you think your daughter does? Have you ever thought of having sex with Karen?\" I ask her. \n\nShe just stares at me. \"Karen told me you wiped our juices off her thigh. She saw you lick your fingers clean in the mirror.\"\n\n\"Did you like the taste of your daughter's juices?\" I ask. \n\n\"Yes I liked her taste. She is a little sweet.\" She answers. \n\n\"Yes she is. I love going down on her. Have you thought about going down on your daughter?\" I ask. \n\nShe moans. I don't know if it's because of my Mom or my questions. \"Yes I have thought of it, but she is my daughter.\"\n\n\"Is it wrong that my Mom is licking your pussy?\"\n\nShe smiles. \"Not at all.\"\n\n\"Is it wrong that my Mom has sucked my dick and swallowed my cum?\" I ask. \n\n\"Oh god. I should say yes, but I think it's hot.\" She says. \n\nI lean in and nuzzle her neck. She moans and shivers. \"Oh god Nancy. Please don't stop.\" \n\n\"Answer me Mrs B. If I told you it would please me would you have sex with Karen?\" \n\nMrs B grabs my Mom's head and holds it to her as she moans \"YES. YES Yes I will have sexy with my daughter.\"\n\n\"You are the best Mrs B.\" I kiss her on the lips. \"Now that Mom has your pussy nice and wet would you like to fuck me and see what your daughter got the other day?\"\n\n\"Oh god yes Benjamin. Please fuck me.\" She begs. \n\n\"On one condition Mrs B.\" I say. \n\n\"Anything!\" She answers. \n\n\"I want you to eat my Mom out while I fuck you from behind.\"\n\nShe doesn't even answer. She steps back from my Mom. \"Nancy lay back and spread your legs. I am going to eat you while your son fucks me.\"\n\n\"No fair.\" Mom says. \"He is my son. Shouldn't I fuck him first?\"\n\nMrs B crawls between Mom's legs and I get on my knees behind Mrs B. I smack Mrs B's ass cheek playfully. She yelps a little. \"Don't worry Mom. Once I fuck Mrs B you two are swapping places and I am fucking you.\"\n\nI waste no time. I push into Mrs B. God she is so warm and wet. I stay deep inside her for just a moment enjoying the feeling. I then grab her hips and start pulling back out and back in. A little faster and harder each time. \n\nIn no time Mrs B is grunting with each thrust in. I lick my thumb and push it into her ass. \"Oh god.\" She groans. \n\nHer ass is gripping my thumb. I wiggle around back and forth as I ask. \"Mrs B do you like to get fucked in your ass?\"\n\n\"Like it? No. I do let Bob do it on special occasions though.\" She says as she looks back at me. \n\nI reach forward and push her face back into my Mom's pussy. \"You can lick and listen.\" I fuck her just a little harder now, pulling her back onto me as I push in. \"I don't want your mouth leaving my Mom's pussy until you make her cum.\"\n\nI look up and I realize my Mom is really liking what Mrs B is doing. Her eyes are closed, her mouth is half open. \n\n\"Mrs B, I want to fuck your ass.\" I say and Mrs B just moans. \"But if you promise to lick my cum out of my Mom & make her cum before I make you cum I won't fuck your ass....tonight.\"\n\nMrs B pushes two fingers into my Mom and the sucking and slurping sounds get louder. I think she agrees. I want Mrs B to win, because I want to cum in my Mom's ass and have Mrs B lick it clean. \n\nFor the next few minutes I fuck Mrs B. Anytime she starts getting too excited I slow down. I look over at Barbara and almost laugh. They have every hole filled and fucking her. \n\nJohn, her husband is under her with her back to him, and I am guessing in her ass. My Dad is on top of her fucking her pussy, and finally Mr B is on his knees feed her his dick. \n\nThe grunting, and slurping sex sounds almost sound like a bad porno. My attention is pulled back to Mom as she starts panting loudly, and lets out a loud high pitched. \"FFFUUUCCCKKK!\"\n\nI am glad I told Ezzie to have them want to please me. I will have to remember that. My Mom is panting coming down from her orgasm. Mrs B is catching her breath, as I stop fucking her and stay deep inside her. I am sure she is a little bummed I never made her cum. \n\n\"Ladies, it would please me to have you swap positions. Mom eat Mrs B out and make her cum. She deserves it. While I fuck you.\" Mrs B pulls herself off me to lay on the floor. Mom dives into Mrs B. I move behind Mom and rub my dick up and down her pussy lips. \"Mom do you want to fuck your son?\"\n\nMy Mom looks back at me over her shoulder. \"Yes Benjamin. I want you to Fuck me.\"\n\nI line up and push in. She is every bit as wet and hot as Mrs B. My Mom is smiling back at me. I reach forward and push her face back into Mrs B. \n\nI know Mom lets Dad fuck her ass. I plan on fucking it too. I slobber all over my thumb, and let a big blob of spit drip onto Mom's ass. No sooner does it land, and I am pushing my thumb into her ass. She moans and looks back at me. \"Like Father, Like Son.\"\n\nI shove in with my thumb. Mom grunts. \"You aren't supposed to be talking.\" I tell her. She turns and goes back to Mrs B's pussy. \n\nI fuck her ass with my thumb for a while. I can feel myself getting closer. When I notice Mrs B grab my Mom's head and hold her tight to her pussy. She starts small high pitched panting. With almost every pant she gets louder and louder until she yells out a high pitch. \"YYEESSS!\"\n\nMy Mom has pulled back from her pussy and is kissing her thighs. I decide it's time to fuck her ass. I pull out of her pussy and push in at her ass. I catch for just a split second and sink balls deep into her ass. \n\nMom screams out in surprise. I hold her hips so she can't get away. So gasps and moans so loud with each stroke in. \"Is this how Dad does it Mom?\"\n\n\"NO.....He Starts....Slow.\" She gasps as I fuck her. \n\n\"Mom, I am fucking you hard until I cum.\" I say. To be honest between Mrs B's pussy, Mom's pussy and now her tight ass I am surprised I haven't cum yet. \n\nI have a tight grip on her hips and I am fucking her ass hard. Mrs B has moved so Mom's head is resting on her thighs and she is stroking Mom's hair. \n\nMom looks at me. \"Ben. You have to ....cum soon or ....slow down. I... can't. ...it's too much. Please baby!\"\n\n\"Hold on Mom.\" I am so close. I do not want to stop. I am still fucking my Mom's ass Hard. I don't want to stop. I can't stop. I have to keep going and cum in her ass. \n\nMom is now almost pleading. \"Please baby... I can't... Please!\"\n\nI slam into her one last time and I grunt rather loudly. \"FUCK!\" I push in and stay deep in her ass. My hips jerk with each shot of cum in her ass. Almost as if they were trying to push my dick further inside her. I finish cumming and drop back onto my haunches with a sigh.\n\nAs my dick pulls out of Mom's ass she lets out a big sigh of relief. Mrs B holds my Mom and rocks her trying to sooth her. I look over at the guys and Barbara. She is now on her hands and knees straddling her husband John, Mr B is fucking her ass from behind and she is sucking my Dad off. I shake my head and laugh. \n\nI decide to put the women in the correct position before I leave. \"Ladies it would please me to see you two 69ing with Mom on top until you both reach orgasm.\" Mrs B smiles at me. Mom tries to but I was rough on her ass. She is still feeling it, but she moves into position over Mrs B. I get up and walk into the kitchen. I see a dish towel hanging from the stove. I take it, wipe myself clean, get dressed and walk out. As I walk past the window I grab my phone and head for my car. \n\nI am heading home, when I call out to Ezzie. \"Mmmhmm?\" She answers. I actually laugh out loud in the car. Ezzie is still feeling good after sex.\n\n\"Ezzie, are you ok?\" I ask, still laughing.\n\n\"Yes Ben. I am OK.\" She says.\n\n\"Well I don't want to kill your buzz, but TY for tonight.\" I tell her.\n\n\"You are very welcome. It was enjoyable for me too.\"\n\n\"I am glad, Ezzie. I really am.\" I say, and I stop talking so she can enjoy this one thing she told me she feels as her own. \n\nI think to myself I will have to remember the part. \"They want to please me\". It was so easy to say it would please me, and have them do it. That will be a good thing to remember in the future. \n\nKaren will probably be calling me after her shift, to say good night. I want to see what footage my phone got, and chop it up into usable pieces. So I grab my iPad and start trimming a clip of the footage. \n\nSure enough, not 30 minutes after Karen's shift ended she is FaceTiming me from her room. I offer to take her for breakfast in the morning. I want to show her a small clip of the ladies together and see what she says. My hope is it turns her on. If it does, maybe I can get her to agree to a threesome with a girl with nothing more than a little Ezzie encouragement. \n\nI really don't want to change Karen. At worst I just want to give her the courage to do something she doesn't have the courage to do.\n\nI pick her up the next morning and we go to breakfast. I pick the restaurant because they have really high backs to the booths that will give us some privacy to talk about last night. \n\nWe have our coffee, and have ordered. Karen is holding my hands in hers across the table. She asks me. \"Would it hurt you to let me get a good nights sleep for once?\"\n\nI laugh. \"Excuse me?\"\n\nShe gives me a small embarrassed smile. \"I dreamt of you, well us last night.\"\n\nI smile and squeeze her hands. \"Really? What were we doing? We're we sitting in a restaurant like we are now?\"\n\nKaren giggles. \"Not even close.\"\n\n\"Well what were we doing?\" I ask innocently. \n\n\"Really?\" She asks. \n\nI look into her eyes. \"Yes really. I want to know your dreams and fantasies. I want us to feel free to tell each other Anything.\"\n\nShe squeezes my hands. \"Do you know how amazing you are?\"\n\nI joke. \"Well I can't be that amazing. I haven't made you scream my name over and over again.\"\n\nShe slaps my hand. \"Stop!\"\n\nI smile at her. I know she can see it in my eyes. I am turned on thinking she had this dream of us. I soften my voice. \"Please tell me.\"\n\nShe looks around. \"Here? Now?\"\n\n\"Karen nothing turns me on more knowing you are turned on. I love watching you. Your face, your expressions, your emotions when we have sex. It turns me on so much watching you get turned on.\" I tell her. \n\nShe softly rubs her fingers across my hands. Her voice gets very soft. \"We were at Uncle Ray's cabin. We were naked on a blanket in the yard, just like you told me you want to be.\"\n\nI interrupt. \"Wait, so I was on my back looking up at your beautiful pussy and a beautiful star lit sky?\"\n\nShe smiles at me. \"Yes you were, and I had your beautiful hardon in my hand and mouth. You were making me feel so good at times I couldn't keep you in my mouth. I was gasping so hard. I had my head on your thigh. I was watching my hand stroke up and down with the stars behind it.\" She smirks at me. \"I saw stars when you made me orgasm.\"\n\nI squeeze her hand and smile at the joke. I look into her eyes. \"There is more isn't there? Tell me all of it Karen. Please! I want to know what excites you.\"\n\n\"Oh god! It's embarrassing Ben.\" She pleads. \n\n\"Karen, should I be embarrassed to tell you I think of you at night sometimes, like I did the other night after dropping you off. Should I be embarrassed to tell you I went home and thought of you naked while I jerked off until I made a mess of myself?\" I ask. \n\nShe face betrays her. She is amazed I said it, and I can see the lust in her eyes. \"I can see you like the idea of that. Can't the same turn me on for you?\"\n\nShe just stares at me. \"Karen, I love you. I am not embarrassed to tell you what excites me, or to tell you I farted.\"\n\nThat gets a giggle out of her. \"God, guys are so gross.\"\n\n\"Please Karen!\" I say. I am about to ask Ezzie to nudge her when she starts talking. \n\n\"You were on top of me. I had my legs wrapped around you. You were kissing my neck and I was looking up at the stars. You were breathing heavy like you do when you are getting excited. I am in heaven as you slide in and out of me. You are being hard, and it feels so good. All of a sudden you pull back from me, and pull out of me. You start jerking off over me and you spray me with your cum. Your warm sticky cum lands everywhere. I cum as the first shot splatters on my chest. You are laying beside me catching your breath as I lay there running my fingers through your cum.\" She says. \n\nAs if on cue the waitress walks over with our breakfast. We just look at each other. She comes back and refills our coffee. I look at the waitress and ask. \"I think my girlfriend needs some more cream.\" I pause for just a moment. \"For her coffee.\"\n\nThe waitress leaves to get it and we both start laughing. \n\nWe settle down and eat our breakfast. We walk out hand in hand. I drive us to the lake where I told her about Mom & Barbara. We leave our shoes in the car and walk the sandy shore line. \n\nWe come to an old stone wall that is half submerged in the water. I sit down and pull her into my lap. Karen looks around and sees people. She gives me a look as if to say we are not playing around here. \n\n\"Relax.\" I say smiling at her. \"I want to talk to you about something.\"\n\nShe looks at me a little concerned. \"What's wrong?\"\n\n\"Nothing is wrong. I kind of tripped over something I shouldn't have, and I felt I should share it with you.\" I say. \n\n\"What are you talking about Ben?\"\n\n\"Remember when you found me here freaking out?\" I ask. \n\nShe rubs my cheek. \"Of course Ben.\"\n\n\"I kind of fell back down that rabbit hole. Only the hole got more crowded.\"\n\nShe holds my face in her hands. \"Ben, what's wrong? Please tell me what's bothering you?\"\n\n\"I am telling you because I don't want any secrets between us. Can you promise me you won't freak out?\" I ask. \n\n\"Ben, I promise. What's wrong?\" She asks. \n\nSo I start telling a little white lie to get the ball rolling. \"Earlier in the week I saw a text come in on my Mom's phone from your Mom. I forget it's exact wording but it sounded like your parents were looking forward to...umm... seeing my Mom and Barbara last night.\"\n\n\"Yes they all went out together.\" She says. \n\n\"Umm Karen it was more like she was looking forward to Seeing my Mom and Barbara like I saw them.\" I say. \n\nKaren's face lights up in surprise. \"Ezzie, please let me know if she is going to freak out.\"\n\n\"I will Ben. Right now she is shocked, surprised and in a little disbelief.\" Ezzie tells me.\n\n\"So last night I went to the bar for dinner and to watch the game. On the way home I saw our parents' cars at Barbara's. I couldn't help it. I stopped to check it out. When I peeked in the window I saw this.\"\n\nI hold up my phone with a picture of our Mom's and Barbara all naked hugging and kissing each other. \n\n\"Oh My God! My parents too? Where are our Dad's?\" She asks in a hushed tone. \n\n\"Well after I saw this I ducked back down. I couldn't believe what I was seeing again. I just stayed there ducked under the window processing it all. When I looked again I saw this.\"\n\nI change the photo to a screenshot of all the guys on Barbara. Our Dads are clearly identifiable. \n\n\"OH SHIT!\" She gasps loudly.\n\n\"Ezzie?\"\n\n\"She is surprised, but ok Ben.\" She answers me. \n\nIt takes Karen a moment, but she looks at me and giggles. \"Jesus, both our parents are pervs.\" She stares at the photo of the Dads again. \"I mean my god. How did she take all three of them?\"\n\nI tease her. \"Well there is that third hole?\"\n\nShe laughs. \"You are a perv too. Where were our Moms?\"\n\n\"Ummm 69ing off to the side. I took off after I took the picture.\" I say. \n\n\"Oh my god our parents are swingers. They swing together.\" She giggles. \"Our Moms were 69ing while our Dads attacked poor Barbara.\" She says. \n\n\"Poor Barbara? Umm her face doesn't look like she is complaining in the least.\" I say. \n\n\"Hey why didn't you say something last night when we talked?\" Karen asks. \n\nI hold up the phone. \"You think this was something I should drop on you on FaceTime?\"\n\n\"No I don't suppose so.\" She looks at me. \"And what did you go home and think about last night?\"\n\n\"I will answer you honestly if you promise to answer a question for me honestly.\" \n\nShe kisses my lips softly. \"No secrets.\"\n\nI take a deep breath. \"I thought about you taking Barbara's place.\"\n\n\"In which photo?\" She asks. \n\n\"Both.\" I answer\n\n\"Both! You want our Dads to have their way with me after our Moms do?\" She asks a little surprised. \n\n\"Well to be honest, I was seeing you and me replace Barbara and her husband.\" \n\nShe laughs. \"Oh you little perv. So you want us to fuck our parents?\"\n\n\"Well you know I would love to see you with a girl. We have talked about that, and you were the one that said I was seeing my Mom as a sexy woman. Why can't I imagine the woman I love with two sexy women that I love.\" I say. \n\nKaren just stares at me. \"Oh my god. It was one thing to tease you about your Mom, but my Mom too?\"\n\n\"Ezzie, is she ok? What is she thinking?\" I ask. \n\n\"She is actually seeing herself naked with both Moms in the picture in place of Barbara.\" Ezzie tells me. \n\nI decide to tease her a little. \"So having me and our Dads have our way with you is ok?\"\n\n\"What? No I didn't say that.\"\n\n\"So what. Were you liking the idea of being with our Moms?\"\n\n\"Ok wait a minute. Stop!\" She says. \n\nI hold her to me on my lap. \"Karen, I am not trying to embarrass you.\"\n\n\"I know. It's just so weird.\" She sighs. \"Ok yes now that you have said it. I can see me taking Barbara's place with our Moms. It's weird and exciting at the same time.\"\n\n\"How about the other picture?\" I ask. \n\n\"Oh my God! I mean my Dad? Every little girl dreams of her Dad, but.....\". She trails off for a minute. \"I have seen porn with two guys on one girl and thought of that, but Jesus three at once? I don't know how she did it.\" She says. \n\nI bounce her on my leg. \"Can I ask something?\"\n\n\"Sure?\"\n\n\"Are you mad I told you? Should I have kept this to myself?\" I ask. \n\nThen in my head. \"Ezzie, is she ok? Is she mad at me, or maybe her parents?\"\n\n\"No Ben, she isn't mad at anyone. She thinks it's sweet you are concerned she might be mad. She is realizing that she is now seeing her parents as people and not just Mom & Dad, and those people can want to have sex just like she does.\" \n\n\"Wow Ezzie. She is really thinking this through. Thank you.\"\n\n\"You are welcome Ben.\" Ezzie says. \n\nJust then Karen leans in and gives me a kiss. She pulls back and looks at me. \"Did that feel like the kiss of a woman who is mad at you?\"\n\nI shake my head no. \"Umm No?\"\n\n\"What did it feel like?\" She says as she smiles at me.\n\nI smile back at her. \"Like the kiss of a woman that wants a whole lot more than a kiss.\"\n\nShe smiles at me. \"I knew you were smart.\" \n\nI stand up. Picking her up as I go. I play like I am dropping her in the water. \"Does someone need a cold shower?\" \n\nShe screams. \"BEN NNOOOOO!\"\n\nI laugh. I don't want to risk soaking our cell phones. If not for them I would walk into the water with her in my arms like the old monster movies. Instead I gently drop her to her feet. \n\nShe smacks my chest. \"Jerk!\" I just laugh more. \n\nWe continue our walk knowing Friday is just a few days away and we will be heading up to Uncle Ray's cabin. \n\nIt's finally Friday. I throw my oversized duffel bag with my clothes in it in the trunk, along with another duffle bag and backpack I already had in there, and head to Karen's. \n\nI get to her house and she has a medium and a small suitcase. I look at her and just say \"Really?\"\n\nShe smiles at me. \"Shush you. I want to be prepared.\"\n\nIt's just us in the house. \"We bought all you will be wearing at the mall the other day.\" I tick off on my fingers. \"Bikini, lingerie or naked.\"",
        "\"Shut up!\" She laughs. \"Just put them in the car.\"\n\nWe drive up and make two stops for food and drink. We have all the bags in the house, and the stuff in the refrigerator. I grab Karen and throw her over my shoulder. \n\nShe starts laughing and yelling. \"Put me down!\"\n\nI grant her wish in the bedroom. I drop her on the bed, and reach for her hips. I pull her shorts and underwear down in one pull. \"Ben!\" She shrieks. \n\nI pull one leg free of her shorts and fall face first onto her pussy. I dig right in. Licking and kissing her all over. \n\nHer shirking changes to sighs and then moans. \"Oh Ben!\"\n\nShe runs her fingers through my hair. \"Ben, get up here. Let me play with you.\"\n\nI look up from between her thighs. \"No.\"\n\n\"No? Why not?\" She asks, a bit surprised. \n\nI kiss her thigh. \"Today I am going to play with you and tease you. Whenever I feel like it I am going to rub you, tease you, lick you and finger you. I am going to get you so worked up you will be begging me to fuck you tonight under the stars.\" I say. \n\n\"Oh god, no Ben. Let me have you.\" She begs. \n\nI crawl over her. I slide a finger into her as I kiss her. She is moaning into the kiss. Holding my head to her. She eases up on her hold and I pull back breaking the kiss. \"Please Ben.\" She pleads. \n\nI move back down her body, and tease her clit as I continue fingering her. I kiss just above her pussy and look up at her. \"Are you horny?\"\n\n\"God yes!\" She sighs. \n\n\"Good!\" I go back to licking and sucking her clit. \n\nShe puts her hands back in my hair and holds my head to her. \"Oh god Ben. Please. I Need you Inside me.\"\n\nI pick my face up out of her pussy. I start fingering her a little harder and faster. \"Your choice Karen. Cum on my fingers or my tongue?\"\n\nHer hips are humping up with my fingering. \"Oh you are so mean.\" She says. \n\nI smile up at her. \"Choose Karen or I will stop.\"\n\n\"Fingers. Fingers. Please don't stop. I am so close.\" She reaches down and rubs her clit. \n\nI watch in awe. My wet fingers are pushing in and out. Her hips are rolling. Her finger is flying on her clit. \n\nShe starts panting and out of the blue. She moans and yells out. \"Oh FUCK!\" Her hips bounce up off the bed and fall back. The hand that was rubbing her clit grabs the hand I was fingering her with and pulls it back. \n\nI know she needs a minute, but I call her name. \"Karen.\"\n\nShe looks up and watches me lick my fingers clean. \"When you are ready, put on the white bikini and come on out.\"\n\nIt's difficult to not just fuck her, but I have a plan. I walk out of the room, and hear her let out a big sigh behind me. \n\nThe shopping bag from the sports store is on the table. I strip and put on the Speedo, and head outside. \n\nIt's a good 15 minutes later that Karen comes out in the sexy bikini. I stand and turn as I hear her coming. Holy Shit! She looks Amazing! The bikini top covers her nipples enough that she doesn't have to worry about a nip slip without a lot of movement. The front is a perfect little triangle of cloth over her. I can see the simple knots on each side of her hips. My god I can feel myself getting hard again in the speedo. \n\nShe gets closer to me and does a slow spin. The back, if she stood still, would just cover her butt crack. With just the fifty foot walk from the cabin to me it is now in her crack. Her crack and pussy are the only things covered by the bottoms. I want to jump her, but I can't. \n\nThe plan is to tease her and make her orgasm all day today. Tonight I want her so horny she won't know what to do with herself. \n\nShe smiles as she looks down at my hardon. \"I guess you like the suit?\" She asks. \n\n\"Absolutely I do!\" I say. \n\n\"Do you like it enough to go back inside with me and have sex with me?\" She asks with a smile. \n\n\"Normally I would jump at the chance, but today, as long as the sun is up. It's all about you. I will tease you and play with you anyway I can and make you cum. Except for fucking you or letting you touch me.\" I tell her. \n\n\"Ben, that's just mean!\" She says. \n\n\"Karen, just like you wanted our first time to be special and loving. I want you to remember our first night here as the night I drove you crazy. When I do fuck you tonight under the stars, I want to make you see stars.\" I say to her as I hold her by her hips. \n\nI run my hands down her ass cheeks rubbing and squeezing them. \"I was thinking of one other thing for tonight too.\"\n\nShe looks at me with weary eyes. \"Do I dare ask?\"\n\n\"Before midnight I am hoping to have cum inside of you three times.\" I say softly to her. \n\nShe smiles, and after a moment I can see the light in her head go off. Her face betrays her surprise. \n\n\"Ezzie, what is she thinking?\"\n\n\"She is nervous and excited to try it. She is afraid it will hurt.\" Ezzie tells me.\n\nI run my fingers through her hair. \"Karen, I promise you. If it's too much at anytime we will stop. I have a plan to take it nice and slow, and I have a big tube of lube made for anal sex.\"\n\nShe puts her hand to her mouth in surprise and to hide a giggle. \"They have lube just for it?\"\n\nI smile at her. \"They do. I actually did a lot of reading and research on it.\"\n\nShe giggles louder now. \"You didn't!\"\n\n\"I did. I wanted to know why some women like it and some don't. Most of them that don't were rushed into it. Your bum needs to be slowly stretched. I have the perfect plan.\" I tell her. \n\n\"Ezzie, is she ok?\"\n\n\"She is very nervous, but she trusts you and will try it for you.\" She tells me. \n\nNow she looks nervous. I hold her face in both my hands and tilt it up to look at me. \"Karen, you know I love you right?\"\n\nShe smiles and nods yes.\n\n\"You know I would never hurt you?\"\n\n\"Oh Benjamin, that thought never crossed my mind.\" She tells me. \n\n\"So while I was researching this.\"\n\nKaren can't help but giggle. \"Oh god what does your Google search history look like?\"\n\nI laugh. \"Never mind that. You should see the ads I get now.\"\n\nWe both laugh for a moment. I get us back on track. \"So in my reading it was suggested there be a safe word to stop everything. I was thinking in honor of July 4th it should be Independence. If we are doing anything, and someone doesn't like it just say that word and we both stop.\"\n\nShe runs her hand up my cheek. \"You really did read up on this.\"\n\n\"For an entire night last week.\"\n\nShe pulls me down to her and kisses me. She gives me a soft gentle loving kiss. She breaks the kiss and holds my face in her hands. \"I couldn't give you my virginity, but I can't think of anyone else I would want to give my virgin bum to.\"\n\nShe pulls me into a tight hug. We stand there just holding each other. She lets me go. \"So what do we do until the sun goes down.\" She asks. \n\n\"We sun ourselves, and I tease you.\" I say with a big smile. \n\nShe hugs me again. \"It's a good thing I love you!\" She says into my neck. \n\nWe sit on the lounge chairs side by side. I watch her rubbing in sun tan lotion. \"Do you want some help?\" I ask. \n\nShe laughs. \"I think I am in enough trouble with you today. I will lotion my front up. Thank you for the offer though.\"\n\nI smile. \"Anytime. I will be happy to do your back when we roll over.\" Sure enough 20 minutes later it's time to flip. I insist she lotion me first. \n\nShe runs her thumbs under my speedo to feel me ass. \"I can go further.\" She says sweetly. \n\nI sit up and motion her to lay face down. \"Don't worry Karen. When the stars come out we will go a lot further.\" She lays flat, and turns her head to the side. I stroke her hair and pull it to the other side.\n\nI reach down and pull the knot loose around her neck. \"HEY!\" She says in surprise. \n\nI bend down to her, and kiss her neck. \"You don't want tan lines on your neck do you?\" I ask as I pull the knot around her back. \n\n\"Ben!\" She almost gasps and whispers. \n\n\"What? Look around.\" I wave my arms out. Woods on one side, bushes on the other and no one home on the other side of the bushes. \"I am just worried about tan lines.\"\n\nShe giggles and lets me rub in some lotion. I get down to her bottoms, and she looks at me. With a serious tone she says. \"Benjamin, my bottoms stay tied!\"\n\n\"Of Course! I wasn't thinking of untying them.\" I say with as much innocence as I can muster. I will admit I do thoroughly enjoy rubbing in the lotion on her exposed ass and hips. I do more than just lotion her. I am messaging her thighs and ass cheeks. She is moaning as I do. My hands are nice and greasy, and I get an evil idea. Suntan lotion isn't exactly lube, but it should do the trick. \n\nI pull her suit to the side, and rub my finger against her asshole. \"Ben?\" She hisses out. She has barely said my name and I push my finger into the first knuckle. She gasps out. \n\nShe stares at me wide eyed. Her mouth open in shock. \" Ezzie is she ok?\" \n\n\"She is surprised you slipped your finger in her bum so easily.\" She says.\n\nI lay down beside her. We stare at each other for a moment. I know better already, but I ask. \"Does it hurt?\" I ask as I just move it in and out about a half an inch back and forth. \n\n\"Oh shit.\" She moans. \n\n\"Karen, talk to me. Do you remember the safe word?\" I ask. \n\n\"Yes I do, and no I don't need you to stop.\" She says, staring at me. \n\nI push a little deeper to the second knuckle, and increase the fingering to about an inch in and out. She moans a little. \"What do you think? Are you ok?\" I ask. \n\nShe giggles a little. \"You have your finger in my bum.\" Karen says. \n\n\"I do. What do you think?\" \n\n\"It feels different, odd. It doesn't hurt, but it's a new feeeeelliiinngg.\" She says. \n\nShe said it didn't hurt so I push my finger all the way in and wiggle it around. \"Oh wow that feels deep.\" She says, as her ass squeezes me as I wiggle my finger. \n\nShe looks at me concerned. \"We aren't doing this here, or now are we?\" She asks. \n\n\"Karen, are the stars out yet?\" I ask. \n\n\"No.\"\n\nI keep pushing my finger in and out of her ass. \"This is just an intro course. When we get to the 200 level course tonight then we will be Doing It.\" I say\n\n\"What happens in the 100 level course?\" She asks. \n\nI think for a minute. I wasn't planning on it this early. \"I think these chairs are getting uncomfortable don't you?\" I ask. \n\nShe smiles at me. \"A little.\"\n\nI think she was hoping I would move the fun inside. She looks a little surprised as I hop up. \"Don't move. I will be right back.\"\n\nI run to the trunk and grab the two bags I already left in there earlier, and run back down to Karen. I stop before the chairs at what looks like a good spot. I drop the backpack, and open the duffle bag. In the bag I have folded and rolled a thick, plush queen sized blanket. One side is a soft flannel, and the other is a soft fake lambs wool like material. \n\nI start to open it and lay it on the ground. Karen gets up with her top re-tied and smiles at me, and walks over to help spread it out. She starts feeling it. \"Oh my god this is so soft. Where did you get it?\"\n\nI smile. \"The bedding store by the mall. You aren't the only one that can want things to be special you know.\"\n\nShe kneels on the blanket and reaches for my hands to pull me down onto my knees. From there she wraps her arms around my neck and kisses me. As we kiss she drags me down with her body weight so she is on her back and I am over her. \n\nI lean down and kiss her. I whisper to her. \"Shall I hold your legs up in the air for the boaters on the lake to see, or do you want to roll over?\"\n\nShe looks at me a little nervous. \"Just a finger?\" She asks. \n\n\"For now we are just in the Intro course.\" I reach into the backpack and pull out a tube of Anal-Eze I ordered online. \"This lube will numb you just a bit too.\" I tell her. \n\n\"Just a finger right? Not You?\" She asks nervously. \n\n\"Ssshhh. I promise just these.\" I hold up my hand and wiggle my fingers. \n\n\"Oh god.\" She moans as she rolls over. \n\nI reach down and untie her top again. She is leaning up on her elbows, so her top falls off. I look down and see her nipples are hard. I reach down and pinch them a bit. She smiles at me and sighs. \n\nI pull the top away. \"I don't think you need this right now.\" We lock eyes for a moment. \"Karen, I want you to do something for me while I play with your bum.\"\n\nShe raises her eyebrows as if asking what. \"I want you to play with yourself and make yourself cum as I finger you.\"\n\nShe looks a tad embarrassed. \"You want to watch me? I have never done that all the way before while someone watched.\"\n\n\"Will you do it for me?\" I ask. \n\n\"With me like this you won't be able to watch.\" She says. \n\n\"I will feel your fingers as I play with your bum, and I will be able to watch the most important part. You! I want to watch your face as you orgasm.\" I tell her. \n\nShe blushes at that. \"Now I am going the rub some lube on your bum and finger your ass. I am not stopping until you make yourself orgasm.\"\n\n\"You have me naked.\"\n\nI don't give her a chance to finish. I pull the knots on her bottoms. \"BEN?\" She yelps. \n\n\"What you are right. You are basically naked.\" I say with a smile. \n\nShe looks around and lifts her hips, and sighs. \"Pull them off.\" \n\nI move down and pull her bottoms off. I then can't resist bending down, and licking her ass as I hold her cheeks open. \"OH GOD!\" She gasps as I lick her bum. As I flick my tongue around she just moans. \"MMMmmmmm.\"\n\nI then push my tongue into her ass. Once my tongue pushes in she sucks in a big gasp of air. \n\n\"Ezzie, is she ok.\" I laugh in my head. Ezzie really is becoming my permanent wingman. \n\n\"She is fine Ben. She is in no pain or discomfort, just turned on. She feels it's a little dirty. She isn't sure what to think.\" Ezzie tells me. \n\nI need to word this carefully. I am remembering her waking up in the car wanting to blow me with her Dad driving. \"Ezzie I know you said you lower peoples inhibitions when having sex. I don't want to turn her into a bimbo, but if it feels good I want her to just go with it and not think about it. For just this weekend. Not forever. Am I making sense?\"\n\n\"Yes Benjamin. It's done.\" She says. \n\nKaren moans. \"I can't believe you are licking my ass, and I think I like it.\" \n\nI stop licking her. \"Aren't you supposed to be doing something?\" I ask as I nibble at her bum cheeks. \n\n\"Nope.\" She answers\n\n\"Oh I think there is.\" I say before biting her cheeks a little harder. \n\n\"Nope I was asked to play with myself when you finger my ass.\" She laughs. \n\nSo that's it...OK then. I grab the lube and squeeze some on her asshole. I rub my finger in it and push it in all the way in one slow stroke. \n\n\"Oh god that feels so deep.\" She moans. She lifts her hips and I feel her fingers inside her. She wiggles her fingers against mine inside her. \"Oh wow that's you in my bum.\" She says with surprise in her voice. \n\nI lay back down beside her while I slowly and gently slip my finger in and out of her bum. She turns her head to look at me. The embarrassment is gone. If anything there is a smile on her face. \"Are you enjoying watching me?\" She asks. \n\n\"Absolutely! You are so beautiful. It's so sexy to watch you get excited and orgasm. It's Almost the best part of sex with you.\"\n\nShe smiles at me. \"I don't know if I should be insulted or not? My beauty is Almost the Best Part?\"\n\nI laugh. \"It is a very close second. You just feel too good when you suck me into your mouth, or when I am inside you.\"\n\n\"Trust me Ben I love the feeling of you inside me too. I have never orgasmed so hard with anyone else before.\" She wiggles her bum. \"I think I kind of like this too.\"\n\n\"Do you like playing with yourself for me?\" I ask. \n\nShe looks me in the eyes. \"It's kind of kinky.\"\n\n\"And how do you like the second semester of Intro to Anal?\" I ask as I slip a second finger in her ass. \n\n\"AAAAAHHHHhhh. Oh that feels big. Slow. Slow please. Wow!\" She says rapid fire. \n\nI am gently now pushing both fingers into her. \"Oh God!\" she gasps as both fingers bottom out. \"Fuck! Don't move! Give me a minute.\"\n\n\"Karen do you need the safe word?\" I ask. \n\n\"No. No. It's so full. Oh my god.\" She gasps. I pull my fingers out and she moans. \"No, I am ok. Put them back.\"\n\nI squeeze more lube out, and push them back in slowly. \"Just getting more lube for you. I want everything to slip right in for you. My research said Lots of Lube!\" I tell her as her ass just swallows my fingers. \"Rub you clit harder. I want you to cum for me. I want to feel you cum and squeeze my fingers in your ass.\"\n\nI start fucking my fingers in and out. Almost all the way out, and all the way back in. Back and forth. Karen's hips hump back now and again. Her fingers rub against mine inside her every now and then. \n\nKaren sometimes squeezes her eyes closed. \"Honey, are you ok? Just say the word.\"\n\n\"No no I am good. It was So Full when you put in the second finger. It didn't hurt, but almost felt like a cramp. Now it's just so full. God I can't believe it.\" She says. \n\nI pull out my two fingers. I grab her hips and flip her on her back. I put her legs over my shoulders and lay in front of her. I push my two fingers back in her ass, and suck her clit into my mouth. \n\n\"Oh fuck yeah.\" She moans. \n\nI keep her clit in my mouth. I suck on it, nibble on it and flick it with my tongue. My two fingers are pushing in and out of her ass. \n\nKaren starts her heavy breathing and panting. Followed shortly by \"Oh God. Oh God.\" She finally yells out rather loudly. \"Oh FFFUUUCCCKKKK!\" And she cums. Her ass is really squeezing my fingers. \n\nHer squeezing stops and pull my fingers out of her. I crawl up along side her and she snuggles into me. She looks into my eyes. \"Ben, I want to please you. Let me do something for you.\"\n\n\"Are the stars out yet?\" I ask\n\n\"You know you are driving me crazy right?\" She asks. \n\n\"I know. That's my plan. After you catch your breath, what do you say to dinner?\" I ask. \n\n\"Does dinner include drinks?\" She asks. \n\n\"Absolutely and the beginning of the 200 level anal course.\" I say with a smile\n\n\"There is more?\" She asks. \n\n\"Just like the 100 level course you just completed with a fall and spring semester?\" I tell her. \n\n\"Oh god you are going to kill me.\" She moans. \n\n\"Never. I just want to drive you absolutely crazy so we never forget this weekend.\" I kiss the top of her head. \"As much as I love looking at you naked why don't you put back on you bikini and come up to the deck. I will pour us some drinks and get dinner on the grill. \n\nI leave her on the blanket, and head to the cabin with the knapsack. I drop the bag on the deck and head in for dinner. \n\nI come back out to start the grill, and put dinner on. I look up and Karen is walking back to the cabin buck naked. \n\nShe has a piece of the bikini in each hand. She smiles when she sees me watching her. \n\nShe walks up onto the deck. \"Is there a problem?\" She asks me with a smile. \n\n\"No ma'am.\" \n\n\"Good.\" She smiles as she kisses me. \"Are you sure I can't do anything for you?\" She asks as she grabs me through my Speedo. \n\n\"You don't get that until you complete two more semesters. You should be done by the time the stars start to come out.\" I say. \n\n\"Well then I will go get cleaned up.\" She bends over the railing and reaches down between her legs, her hand comes back wet. \"You left me a gooey mess.\"\n\nShe stays like that for a moment looking over her shoulder at me. She then stands up and runs her finger across my lips. \"Your loss!\" She smiles at me and walks inside her hips swinging as she goes. \n\nGod Damn It! I want to fuck her so bad. Stick to the plan. Stick to the plan. She is trying to get under your skin. I have to tell myself. \n\n\"Yes she is Ben. She was hoping when she bent over the railing you would have sex with her.\" Says Ezzie. \n\nI take a deep breath. \"Thank you Ezzie.\"\n\n\"You are welcome Ben, but keep in mind Karen is Very Very Worked Up. It's almost mean to keep the woman you love waiting like this. After all, you did do this to her.\" Ezzie says. ",
        "\"I know Ezzie. Thank you for looking out for Karen. We are almost there.\" I tell Ezzie as I put dinner on the grill. \n\nA few minutes later Karen comes out of the cabin. She is carrying a large salad bowl with salad in it while dressed in one of my tee shirts. I am 99% sure she is naked under it. Her boobs sway a bit as she moves. When she is still her nipples are just visible every here and there. The shirt isn't tight enough for them to be clearly visible. \n\nShe intentionally bends over in front of me allowing the tee shirt to pull up. Yup she is naked. She straightens up and smooths the tee shirt back down. It's a little longer than a mini skirt on her. \"Oops!\" She says smiling at me. \n\nI walk over to her and push her towards the railing and the backpack. She lets me turn her around and bend her over the railing. I grab the lube and a small butt plug from the bag. I lift her shirt up and put my body against hers. \"Are you ready for more Anal Training?\" I ask. \n\n\"I am ready for you to Fuck Me!\" She answers. \n\nI hold her head and turn it to the setting sun. \"We are almost there, but for now I have a small surprise.\"\n\nI stand up and rub some lube on the plug and push it against her asshole. She flinched. \"What are you doing?\" She asks. \n\nI push it in a bit, and she lets out a little moan each time it gets deeper. Little by little I push it in and out. Each stroke is a little deeper. The deeper it goes the wider it gets. It's a thinner smaller plug, but at its widest it's a little thinner than me. \n\nI stop it from going all the way in for a few strokes. She moans as it gets to the widest part, and then I back off. I give it a final nudge and her bum pulls it in and holds it. She gasps as it settles in place. I wipe the lube into her skin and pull her shirt down. \"All done!\" I say. \n\n\"What?\" She turns and looks at me. \"It's in me still.\" She says surprised. \n\n\"I know and it's going to stay there.\" I pull her shoulder up to stand her up. Her face has an odd look on it. I lean down and kiss her. \"This is going to help stretch your bum so I won't hurt you later.\" I hold her face and kiss her again. \n\nWe break the kiss. She looks at me. \"This is weird.\" \n\n\"Wait until the next semesters training. I promise it will be better.\" I hug her to me and rest my head on hers. I hold her for just a moment and then have to go back to the grill. \n\nI pour her some wine, and I have a beer while cooking. We finally sit to eat and she is fidgety in her seat. \n\n\"Everything ok?\" I ask. \"You look like you have ants in your pants...well if you had on pants.\"\n\n\"No, some pervert stuck a toy up my ass.\" She says to me with a smile. \n\nWe finish dinner and clear the food off the deck. We are walking back out onto the deck and I stand behind her and pull her against me in a hug. I look out across the lake and the sun is just falling behind the trees. \"Time for the final semester.\" I reach between us and start to pull on the base of the butt plug. I pull a little harder and harder until it pops out. \n\nKaren lets out another moan as her bum pushes it out. I nudge her back towards the railing and bend her back over it. \"Last one.\" I say, as I reach into the backpack again. This one is a little bigger with a special surprise. I lube it and push it in. More than half of it slips right in. I then replay the in and out like before and in just 3 strokes her ass pulls it in and she moans a little louder. \n\nI stand her up, take her by the hand and lead her to the chairs by the shore. When we reach the blanket I drop the backpack and keep walking. I sit on one of the padded chairs and pull her onto my lap. Half teasing and half serious I say. \"I could spend the entire night like this with you in my arms.\"\n\nShe looks at me with play anger. \"As nice as it is sitting in your arms. If you don't fuck me soon I will rip your balls off in your sleep!\"\n\n\"WOW!\" I laugh. \"You are violent. Let me calm you down a bit.\" I reach into my pocket and click a button on the remote. \n\nKaren jumps in my lap with a Yelp. \"REALLY? It vibrates too?\" She says a little miffed. \"I Don't Want a Toy!\"\n\nI click her from low to medium. \"Oh Fuck!\" She moans. \n\n\"I will make you a deal. I will fuck you once you orgasm in my arms. Whether the stars are out or not. Once you orgasm I will take you to the blanket. I will pull out the toy and fuck your ass until I cum in you. Then we spend the night having sex under the stars.\" I say. \n\nShe drops her head against mine and sighs. \"Turn it up. I hate to admit it feels nice but I need more.\"\n\nI click it on high, and Karen gasps. \"Oh Fuck!\"\n\nI can feel the vibrations in my lap as she sits on me. Before too long she is humping her hips. I whisper to her. \"Karen, I want to watch you cum. Use your fingers too. Let me watch you.\"\n\nShe giggles. \"You are a little perv today. Fingering my ass. Sticking a toy in my ass. Wanting to fuck my ass, and wanting to watch me play with myself.\"\n\nI lean down and kiss her hard. She responds with just as much passion. I break the kiss and smile at her. \"No it's ok. Don't play with yourself. I will turn off the toy and we can sit here until the stars come out.\"\n\nShe sits back a tad and reaches between her legs. \"Don't you dare turn that off. Besides, I love having you watch me. Seeing the lust in your eyes as you watch me turns me on.\"\n\nShe spreads her legs wide and starts rubbing her clit in circles. Her lips spread open a little and I can see she is already very wet. \n\nShe watches my hand as I reach down and slide two fingers between her wet lips. She lets out a loud sigh as my fingers slide in. She smiles at me. \"Are you breaking the rules?\"\n\nI pull my fingers out and hold them up wet and shiny. \"I just wanted a taste.\" I suck my fingers into my mouth.\n\n\"I want a whole lot more than a taste.\" She says as she watches me with lust in her eyes. \n\nIt's not two minutes later. She starts gasping and moaning louder. She is definitely going to cum. Not a minute later she is cumming and moaning \"OH FFFUUCCCKKK!\" As her body shivers in my lap. I shut off the toy and drop the remote. After a moment catching her breath she got up off my lap. She grabs me by my hand and pulls me to my feet. \n\nShe leads me to the blanket and stands us in the middle of it. She drops to her knees and pulls down my Speedo. She doesn't miss a beat. She sucks my dick into her mouth. \"Oh Fuck.\" I moan. \n\nShe isn't messing around she starts in high gear. She pulls her mouth off me and smiles at my wet shiny hardon in front of her face. \n\nShe pulls off her, well my tee shirt she is wearing. She drops the shirt by the backpack and grabs the lube. She squeezes a line of it on my dick and rubs it in to lube me up. \n\nShe lays back on the blanket and pulls her legs back spreading herself wide open. \"Pull out that damn toy and Fuck My Ass Now.\"\n\nI drop to my knees in front of her. I reach down and pull rather hard on the plug. It pulls right out. Karen grunts as it pops out. She looks me in the eyes as I just look at her. \"Please, Ben don't make me beg.\"\n\n\"I am nervous I won't last long Karen. I am very worked up too.\" I say. \n\nHer face softens. \"Maybe for my first time that will be a good thing. We have all night, so why don't you stick your beautiful dick in my ass and we can get started.\"\n\nI nudge closer and put my dick against her partially open ass and I slip right in about half way. We both moan. \n\n\"God, you are so tight.\" I say \n\nJust a second later Karen says. \"God, you feel so big.\"\n\nWe both laugh. Karen looks down at me. \"Give me all of it.\"\n\nI push in until I bottom out. It feels fantastic. Karen moans the entire time until I bottom out. \"Stay there a moment. My god you feel so big.\"\n\nHer eyes are wide open as she looks at me. \"Little strokes Ben. Slow little strokes.\"\n\nI do as I am asked. I don't think I am moving more than an inch, and I am doing it very slowly. Jesus this is nice. She is so hot and tight. I can feel her squeezing me so tight as I fuck her. \n\n\"Oh I feel so full. Give me more Ben.\" She moans. \n\nI am now pulling out about halfway and have a slow steady pace going. Her eyes go from half open to wide eyed at times. She is gasping and moaning with almost each stroke. \n\nAfter a few minutes of this slow pace I can feel myself getting there. Karen looks at me as she reaches down to rub her clit. \"Ben, do you remember in my bedroom I told you I wanted you to make love to me and take me?\"\n\n\"I do.\"\n\n\"Ben, I want you to take my ass now. Make me yours. Fuck me as hard and as fast as you need to to cum in my ass.\" She says. \n\nI rub her thighs, and look at her concerned. \"Are you sure?\" I ask. \n\n\"Ben, do you remember the safe word?\" She asks. \n\n\"I do.\"\n\n\"If I say it, do you promise to stop?\" Karen asks. \n\n\"Of course.\" I say. \n\n\"Then no matter how much I scream. I want you to make me yours Now.\" She tells me. \n\nI start fucking her harder and faster. She starts moaning and letting out small screams. Even though no one is next door. There are other houses that can hear us I am sure. \n\nI grab the tee shirt she took off. Wad it in a ball and push it in her mouth. \"Someone will call the cops.\" I say. \n\nShe screams into the tee shirt. \"FUCK ME!\" It's very muffled. I push her legs back more and start fucking her ass hard. God she is screaming, but no safe word. \n\nI can't last any longer. I look at her. \"I am going to cum Karen. I can't take anymore.\"\n\n\"YES......CUM!\" She says. The gag muffles too much. That's all I can make out. My thighs are slapping against her ass cheeks. Her ass is gripping me like a vice, and her hand is rubbing her clit raw. \n\nI am panting, and grunting as I shove in one final time and flood her ass with cum. God I feel like I am never going to stop cumming. I half collapse against her thighs after cumming when she screams into the gag and her ass Clenches down on me. \n\nWow if I hadn't just cum her ass clenching down on me like that would have made me cum, that's for sure. I stay in her catching my breath and watching her orgasm. \n\nShe starts slapping my chest. She spits out the gag. \"Take it out, Please.\" \n\nI pull out and she rolls onto her side moaning and reaching back for her asshole and rocking a bit. \n\n\"Ezzie is she ok?\"\n\nI get very concerned I have hurt her. I drop beside her and hug her to me. \n\nEzzie answers. In a distracted voice like she is trying to pay attention. \"She is very uncomfortable, but she is also calming down from her orgasm. She is sore and can't believe it felt good too.\"\n\n\"Thank you Ezzie. Sorry I had to bother you.\"\n\nShe is feeling good after my orgasm. I feel a little bad for interrupting that. \n\nI squirt some of the lube into my hand. I reach down and push her hand away from her bum. \n\n\"No Ben. Please, I need time.\" She pleads. \n\n\"Ssshhhh. It's ok. It's just some more lube. It will help numb a little bit of the pain. I gently rub it all around her asshole. \"Just one finger in to rub in the lube and out ok?\" \n\n\"Ok.\"\n\nI slip in my finger, and she moans. I rub it around and pull it out. I wipe the lube off my hand on the blanket and hug her to me. She is curled up a little into a ball so I curl up with her and just hold her. \n\nIt takes a few minutes for Karen to relax. I am feeling guilty because I hurt her. \"Karen, we never have to do that again. I am sorry.\" I say. \n\n\"What? Why are you sorry?\"\n\n\"I hurt you. I didn't want to hurt you!\" I say. \n\n\"Oh My God Ben No! We are absolutely doing that again. Am I sore yes. I wanted you to take me. I wanted to get Fucked Hard. I was so horny after you teasing me all afternoon, but oh god! I was so full. It was different from regular sex. It was amazing. I definitely want to do it again.\"\n\nShe turns in my arms to face me. \"I am glad it was you I was able to give my virgin bum to.\" She leans in and kisses me softly. She pulls back from the kiss, and smiles at me. \"Not this weekend though.\"\n\nI smile. \"Whenever you are ready.\"\n\nHer smile brightens my already excellent day. She rolls back over against me. \"Right now I want a time out, and to cuddle.\"\n\nShe snuggles against me. Giving her ass an extra wiggle when she feels my softening dick against her. I pull the blanket over us and just lay there with her. She nods off, I just lay there holding her. Listening to her breathing, and smelling her hair. \n\nIt was a short nap, maybe 20 minutes. Now it's dark and some of the stars are out. She stirs in my arms and hugs them to her a little harder. \"Hi!\"\n\nI kiss her head \"Hi. Is your bum ok?\" I ask still feeling guilty. \n\nShe rolls over again and puts her hand on my chest rolling me onto my back. She is on her side, beside me. She looks up at me with concerned eyes. \"Ben, I know you fucked my ass hard. Just like I told you to. And it felt amazing and was well worth it.\"\n\nShe climbs on my body and kisses me. She moves down and kisses my neck, chest, and stomach. She looks at my half hard dick.\n\nShe looks up at me. \"If I were upset with you, would I do this?\" She bends down and takes my semi hardon in her mouth. It takes no time with her sucking and licking to get me hard. \n\nI lay back looking up at the stars when I remember Karen telling about her dream. \n\nI call out to her. \"Karen. Your dream. Spin around for me.\"\n\nShe smiles with me still in her mouth. Somehow she manages the move herself into a 69 without ever taking my dick out of her mouth. Her knees land on either side of my head. I reach up and gently pull down. \n\nShe drops her hips and makes contact with my mouth. I push my tongue right between her lips. She moans as I lick her all around. I use my thumbs and spread her wet lips wide open. \n\nI love looking into a woman like this. Her lips spread wide open. You see a little pink flesh at the entrance and then the darkness of the velvety softness that lays beyond. \n\nI go from licking her clit and running my tongue along her lips and between them. To sucking and and gently tugging on her lips with my teeth. To sucking and nibbling on her clit. \n\nI am like a squirrel with ADD. I am all over her pussy up, down, left & right. I love her taste, and I am driving her crazy. She gasps and moans around me as she sucks on me. Which causes me to moan as I eat her out. \n\nOf all the stupid things to think of while Karen is 69ing on top of me. Having Ezzie on my finger is better than winning the lottery. I wish I could do something for her. \n\nWait. I wonder. \"Ezzie, I am going to ask you a big favor.\" \n\n\"Yes Ben.\" She replies sounding relaxed like me. \n\n\"Ezzie. No questions. No talking or thinking out loud until I talk to you again. I hope you enjoy this.\" I say. \n\nI pull the ring off my finger. I roll Karen off me onto her back and climb over her. \n\nI land on her and kiss her. As I do I put the ring on her finger. I break the kiss and she looks at me strangely. I smile at her. \"Not what you think. It's the wrong hand. It's my lucky ring, and I want you to wear it because you are about to get Very Lucky.\"\n\nShe looks at the ring and then at me. \"I am going to get lucky huh?\"\n\nI kiss her again. \"Oh yeah. I am going to fuck you, and fuck you until I can't fuck any more.\"\n\nShe reaches her arms out wide and her legs around me. \"Bring it!\"\n\nI nudge my body forward and I can feel myself rubbing against her wet lips. The angle is off. I go to reach down, but Karen beats me to it. She grabs my hardon and aims me in the right direction. I just have to push forward and we both moan together. \n\nI start pushing in and out of her. She grabs me by my ears to get my attention. \"Benjamin, I wanted our first time to be special and soft and to make love to you. You have me so worked up Ben, tonight I want to be Fucked. I want you to Fuck Me Hard. I want the scream when I orgasm. I don't care who hears us.\" She says to me. \n\nI don't answer her verbally. I just start Fucking her Hard. First all you heard was grunting and slapping skin. Then the slapping skin became wet slapping skin as Karen really got into it. I was still grunting, but Karen's grunting turned to panting. With the occasional \"Oh Fuck. Oh God. So good.\"\n\nI flip us over with no warning. Karen yelps as she gets pulled on top of me. She gets situated and starts humping me hard. I reach up and grab her nipples a little hard and pull. \"Karen, grind yourself on me. Make yourself cum. I want to watch you cum.\"\n\nI twist and pull on her nipple hard enough to make her moan. \"Cum for me Karen. I want to feel your velvety soft pussy convulse and squeeze me as you cum.\" I reach down to where our bodies meet. I am covered in her juices. I wipe my fingers in it and put them in my mouth to suck clean. \n\n\"God Karen, you taste so good. Cum for me and pour those sweet juices all over me.\" I rub my fingers back in her juices and slide them up to her mouth. She doesn't blink and eye she opens her mouth and sucks my fingers clean as she moans. \n\nI was thinking of rubbing her clit but her hips are grinding against me so quickly. She is humping her clit back and forth. I don't think my fingers will help. So I go back to her nipples and pull on them. \n\nHer moaning is getting louder and faster. She puts her hands over mine and looks me in the eye. \"Harder.\" She gasps out between moans. \n\nI pull and pinch harder. I am afraid if I pull much harder I will really hurt her. Her hips start bucking in rhythm to her panting. She is going to cum. \"Fuck. Fuck. Fuck. Fuck. Fuck. Fuck. FFFUUUCCKKKKK!\" She screams out. \n\nI feel her juices leak out all over me. Her pussy clenching me tight, and she falls down onto my chest. \n\nI give her no break. I can feel myself building up to cumming. I am not stopping now. I flip her off me. She is now facing the lake. I crawl behind her and pull at her hips. \n\nI pull her up onto her knees. Her shoulders stay down on the blanket, and I don't care. I get in position behind her. I rub my dick through her wet lips and push back into her pussy. I slip right back in and Karen moans. \n\nI grab her hips and start right back up with the hard fast fucking. I don't know if I am being too hard on Karen. It's hard to tell, and I can't ask Ezzie. She is on Karen's finger hopefully enjoying sex from a woman's point of view. \n\nAgain my thoughts go astray. How quickly I have become accustomed to asking Ezzie something in my head and she isn't there. \n\nKaren breaks my thinking. \"Ben please. I need.... a break.... It's too much.... Please.\"\n\nI keep a hold of her hips and keep fucking. \"I am going to fill you with cum as I promised. Cry uncle and say the word, and I will stop. Otherwise hold on.\"\n\nHer answer is to bunch the blanket up and stuff it in her mouth. Her screaming gets louder and louder. It ends in a muffled screaching scream. She started to squeeze down on me, and that puts me over the top. Just as I start to cum, Karen falls forward and flat. I have no choice but to jerk myself off. I end up covering her ass in cum that should have been in her pussy. \n\nI have never seen Karen like this. Her whole body is actually shaking and shivering. \n\nWe have gotten ourselves down at the edge of the blanket looking at the cabin. I reach down and pull her up by her armpits. \"Nnnoooo.\" She moans. \n\n\"Sshhhh. It's ok. I am just moving you.\" I tell her softly. \n\nI move us around. With her cum covered ass I pull her to me and hug her to me. She just moans and shivers. I don't know if it's the cool night air, the orgasm or both that she is shivering from. I flip part of the blanket over us and lay back. \n\nI lay there holding her thinking I did it. I told her I wanted us naked under the stars and here we are. God the stars are beautiful up here without the bright city lights to ruin them. \n\nI am admiring the stars when I realize Karen is asleep/passed out. Fuck it. I closed my eyes and relax. \n\nI wake up a bit after midnight according to my watch. Karen is still fast asleep against me. We should go inside to bed. I get up on one knee and scoop her into my arms. I am not a jacked guy, and she is not a tiny slip of a girl. Her dead weight is a bit more than I thought she would be. ",
        "As I stand up straight she wakes up. She sees she is in my arms. She wraps her arm around my neck. \"My hero.\" And she leans her head against my chest. I walk up to the house. \n\nShe pulls her head off my chest. I need to use the little girls room. I gently stand her on the deck and she walks in the sliding door. I take a quick look around. Other than the blanket still down on the grass everything looks in order. I walk inside.\n\nI wait for her to come out of the bathroom, and go in behind her. I see a wet washcloth and figure I should probably wash off before getting into bed. \n\nI get into the bedroom and she is waiting for me, holding the covers up for me to get into bed. I crawl in and she lays her head on my chest and is back asleep in probably 3 minutes.\n\nI hold her in my arms and look down. Her hand with Ezzie on is on my chest flat out. I reach down and slide the ring off her finger, and slip it back on mine. \n\n\"Ezzie, are you awake?\"\n\n\"Yes Ben.\"\n\n\"Did it work?\"\n\n\"You scared me Ben?\"\n\n\"How did I scare you Ezzie?\"\n\n\"You took the ring off so fast I was afraid I had done something Wrong and you were mad at me.\" Ezzie tells me. \n\n\"God No Ezzie. I wanted to surprise you. I didn't want you to see my idea.\"\n\n\"Yes I figured that out when I listened to your thoughts after you put me on Karen. That is the kindest thing Anyone has ever done for me, Ben. Thank You.\"\n\n\"Well did it work. Did it feel different?\" I ask. \n\n\"Oh God Yes Ben. It was amazing, but you are tired. Please get some rest. I can tell you about it in the morning.\"\n\nI fall asleep a satisfied man........to be continued."
    ],
    "authorname": "ao1701e",
    "tags": [
        "mind control",
        "mother son",
        "incest",
        "anal"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/a-ring-named-ezzie-pt-02"
}