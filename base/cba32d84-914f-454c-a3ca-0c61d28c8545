{
    "title": "Driving Home for Christmas",
    "pages": [
        "Authors Note\n\nI am indebted to Mostera 1 for casting an eye over this and helping me improv e this story.\n\n\n\n\n\n\nIt happens every Christmas, the radio stations pick a number of festive songs and play them every hour so that we all get heartily sick of them. Often it's Merry Christmas Everybody by Slade, this year the most popular seems to be Chris Rea's Driving Home for Christmas.\n\nIt's just come on again, for the second time since I left my Lake District cottage. As I edged along the motorway, driving from jam to jam, it sounded like Chris was singing from my viewpoint.\n\nI'm driving home for Christmas,\n\nI've got red lights all around.\n\nWell he was right there, we crawled along the M6, and the cars all around are braking to a standstill again. I was thankful that this was the last year I would undertake this journey in the holiday season. I looked across at my wife. She was sound asleep as usual. For the last ten years I'd either done this drive or a much longer one. I pulled into the nearside lane as John Lennon came on the Radio singing So this is Christmas. When John asked, \"And what have you done?\"\n\nI had to answer, \"Quite a lot actually John.\"\n\nIt was true over the last ten years a lot had happened, and most of it on or around Christmas. Ten years ago was supposed to be our first Christmas back home again. The previous year Phoebe had started at university, and David was already there, so Penny and I were empty nesters. This was our chance we thought. We were free to do something useful with our lives. I'd become disillusioned with education and Penny felt she could do something that made more difference to people. We'd both seen TV programs showing the plight of kids in Romanian orphanages. We saw an advert for someone to manage a project that took children out of the state orphanages and gave them a more normal life. We applied and got the job. To tell the truth Penny got the job, and took me along for the ride. We'd been offered a one year contract, so I negotiated a one year sabbatical and off we went.\n\nThey prepared us reasonably well. We had a day before we went when we had back to back classes on Romanian culture and the language. Our final class was all about the things we had to be careful about. They told us all about the gypsy beggars and the pickpocket gangs that would be after, not just our cash, but also our passports. The single people in the group were warned against allowing themselves to be seduced by someone of the opposite sex. They were told this was a common ploy for people wanting the right to live in the U.K. Both Penny and I were surprised that people would go to such lengths just to be able to live in Britain.\n\nIt turned out that our classes hadn't prepared us well at all. Rural Romania was like going back in time sixty or seventy years. Few houses had running water, and the electricity went off for at least a few hours a week. However, the country was beautiful, and the people warm and friendly. We loved the country but so much needed doing and we felt we were only scratching the surface. \n\nWhen a leading charity advertised for a project coordinator for Romania and Bulgaria, Penny applied. By Romanian standards the salary was out of this world. The charity provided a flat, car with driver, and an interpreter. Even Penny was surprised when she was offered the job. The remuneration package meant that we could live like kings in Romania. We decided that Penny should stay on, moving to Bucharest, and I should return home to honour my obligation to the college. That August saw me flying home, leaving my lovely wife behind. Penny's employer would pay for flights home three times a year. We planned for her to come home for Christmas, Easter, and August. At the end of her long summer break, we would both fly back to Bucharest.\n\nI can't say that I was happy leaving her behind, but it was only until Christmas. At the airport she waved me off with tears in her eyes. \n\n<center>***</center>\n\nChris was back on the radio when my wife gave me a nudge. \n\n\"Can we stop?\" she asked. \"I really need a loo.\"\n\n\"Just one mile to the next services, we'll stop there.\"\n\n\"Typical\" I thought.\"The first time I manage to get up to the national speed limit, and we have to stop.\"\n\nSlade had just started wishing ever one a Merry Christmas. I switched off the radio, got out of the car, and stretched my stiff body. We made our way across the snow covered car park and into the warmth of the service area. There was still no escaping the festivities. From the PA system I could hear Wizard, wishing it could be Christmas Everyday. We visited the toilets then bought coffee and some overpriced, badly cooked food, and sat down to eat. You don't enjoy motorway food, it's just fuel. While I was refuelling my mind wandered again.\n\n<center>*****</center>\n\nTen years ago, in 1996, I'd been really looking forward to Christmas. I knew what my best present was going to be, having my lovely wife back, helping me to fill up that big house. David and Phoebe would be home from university, and we would be a family again. As the holiday got closer I got almost as excited as a child waiting for Santa. With one week to go the college closed for the holiday and I got home a little drunk from the Christmas party. Perhaps that was the reason I was slow processing the phone call.\n\n\"Allo are you Mr Andrew Styles?\"\n\n\"Yes I'm Mr Styles, who is this?\"\n\n\"Is international call from Romania. I have Doamna Styles for you. Vorbit, vorbit.\"\n\n\"Hello Drew, Drew are you there? Look I've only got this line for three minutes so we'll have to be quick. How are you? Is everything OK that end?\"\n\n\"Hello Pen, god it's good to hear your voice. I've missed you so much. --Yes everything is fine here. I'm on my own at present but I expect David and Phoebe to arrive tomorrow. What about you? When will you be home? If you give me your flight number I'll meet you at the airport.\"\n\nThere was a deafening silence that lasted long enough for me to think we'd been disconnected.\n\n\"Hello, Hello, Penny are you there?\"\n\n\"Yes I'm still here.\"\n\n\"Well, when are you coming home?\"\n\n\"That's what I called about. I can't make it. We've got a project running with the street children here. They need my input; I won't be able to get home till February.\"\n\n\"No! No, that's not right; it's not the deal we signed up to. They promised that given sufficient notice they would fit your duties around your availability. You did tell them you were coming home for Christmas?\"\n\n\"Don't be silly, of course I did, but this project just came up. Oh Drew you wouldn't believe how many street children die over the holiday period. We can't just ignore it.\"\n\n\"I'm not asking you to ignore it, but I don't believe they can't spare you for a few days, so you can be with your family.\"\n\n\"Oh Drew don't make this harder than it has to be. I'll be back for the half term holiday and we can have a couple of weeks together.\n\n\"None of us get half term holidays, so we still won't see you. Tell them no. Tell them you're coming home.\"\n\n\"I can't do that. I've already said I'd stay.\"\n\n\"So that's it fait accompli. Nothing I can do about it. Well thanks for telling me.\"\n\n\"Oh Drew, please don't be like that. I'll make it up to you, I promise.\"\n\nI just started to speak again when the operator came on the line.\n\n\"Time is up, you go now good bye.\"\n\nAll I heard after that was the dial tone. I was left with the job of explaining to my children, why their mother wouldn't be home for Christmas. I smacked my fist against the wall and even the alcohol didn't deaden the pain. How could she do that to us? How could she be so thoughtless? I couldn't understand why she didn't find it as important as I did. I was still cursing when the phone rang again. Thinking it was Penny again I rushed to the phone.\n\n\"Hello.\"\n\n\"Drew, is that you?\" The posh voice of Lady Caroline came as a surprise. She ran the organisation that funded the children's home we'd worked in for the previous year.\n\n\"Drew, I need a favour. Did you mean it when you said you'd help get supplies to Oituz if we needed it?\"\n\n\"Yes, of course I did. I'll certainly help if I can. What do you want me to do?\"\n\n\"You know we do a Christmas run every year, with the children's presents and all the festive supplies. We've had a problem, normally we get volunteer drivers from my son's regiment, but they've been sent to Kuwait ahead of schedule. We've got two drivers but I don't think it's safe for them to get there in the time allowed with only two of them. Can you help out? You should get home in time for Christmas.\" \n\nI sat down and thought about it. \"Caroline, I've had a few drinks today and just received a bit of bad news. Can I call you back tomorrow, say about 2pm?\"\n\n\"OK, I'll try to find someone, but I'm really pinning my hopes on you.\"\n\nI went to bed and the following day picked up David and Phoebe from the station. I told them all about my telephone conversations, and said that I was seriously thinking about driving on the Christmas run. It was David who came up with the solution.\n\n\"Why don't you drive over there with the van? They can leave you in Oituz, and you can get the train into Bucharest and spend Christmas with Mum.\"\n\n\"But what about you two? What are you going to do?\"\n\n\"We can do what we did last year. We'll go to Gran's house. You know how much she'd like that.\"\n\nHe was right of course. If the mountain wouldn't come to Mohamed, then Mohamed would go to the mountain. When I called Lady Caroline that afternoon she was overjoyed, even when I told her that it would be a one way journey for me.\n\n\"Oh, don't worry Drew they can take their time coming back. It's the outward journey that is time constrained. I don't want them driving for too long. If you can get yourself to Dover Eastern docks at 8 am on Sunday. You need to meet with Captain Percy Marshall.\"\n\nAt five to eight on Sunday morning I was standing at the docks with my cardboard sign saying who I was looking for. I walked around for a few minutes before I was approached by a tall, slim, and rather attractive young woman wearing battle fatigues.\n\n\"Andrew Styles.\" she said. \"I'm Captain Marshall, welcome aboard.\"\n\nI must have looked surprised because she went on.\n\n\"You were expecting a man weren't you. I'll bet Lady Caroline told you my name was Percy.\"\n\nI nodded.\n\n\"It's short for Persephone. Now Andrew, Caroline says you speak Romanian, is that right?\"\n\n\"Yes, a little, I wouldn't say I was fluent but I get by.\"\n\n\"Good man that may be very useful. Come and meet my sergeant. We'll have a quick cup of coffee and be on our way.\"\n\nSergeant Jacqueline Carter was a short voluptuous woman with a pretty face and red hair.\n\n\"Hmm, brought us some new talent then Percy.\" she turned to me. \"Well Andrew, what have you got to offer two defenceless maidens?\"\n\nI felt the colour coming to my cheeks. \"I can speak a bit of Romanian.\"\n\n\"We won't be there for two days. A fine figure of a man like you must be able to offer something to us weak little maidens on the way.\"\n\nPercy laughed as my face went even redder. \"Leave him alone Jackie, and stop calling yourself a maiden. We both know it's a long time since you were one of those.\"\n\nThey took me out to a cream coloured Volkswagen Sprinter, parked in the queue for the ferry. I was shown all the stuff being sent out to Oituz, which strangely included a washing machine for a helpful council official. There was a mattress and sleeping bag on the floor behind the drivers cab.\n\n\"That's where we bed down between driving stints.\" said Percy. \"You sure you're up for this Andy?\"\n\n\"Of course, I am, and please call me Drew.\"\n\nWe boarded the ferry and one and a half hours later we were in France. We drove in two hour stints, and slept for four hours at a time. By 8pm we were in Germany, driving down the Autobahns. It was my turn to get my head down so I stripped down to my underpants, climbed into the sleeping bag and went out like a light. I woke to the feeling that I wasn't alone. I could feel two large breasts pushing into my back; an arm was wrapped around me. A hand was reaching between my legs. I tried to move away by unzipping the sleeping bag. I rolled over and saw Sergeant Jackie Carter, wearing only bra and pants.\n\n\"What's wrong Drew, don't you like girls?\"\n\n\"Of course I like girls. I like them very much, but I'm a married man on the way to see his wife. I'm sorry Jackie I can't help you.\"\n\n\"Oh, come on Drew. What happens in the van stays in the van. No one will know.\"\n\n\"I'd know.\"\n\n\"You wouldn't say that if it was Perce in here with you.--I've seen the way you look at her.\"\n\nI could feel the colour coming to my cheeks. \"It wouldn't matter who it was, Jackie. I love my wife and I won't give her reason to doubt me.\"\n\n\"Your loss, you wouldn't have been disappointed.\"\n\nI pulled my clothes back on and slipped into the passenger seat next to Percy. She turned to look at me and smiled. As she drove she would keep glancing over at me and grin.\n\n\"What?\" I said, and she grinned again.\n\n\"What's so bloody funny?\"\n\n\"You didn't go for it then? I told her you wouldn't. I'm sorry that's about as subtle as Jackie gets.\"\n\nI realised Jackie was right, I did find Percy attractive. Even in the dark I could see her high cheek bones, turned up nose and plump lips. Her short hair was pulled back behind her ear and she wore her army beret.\n\n\"Are you really a captain?\" I asked her.\n\n\"I certainly am; I'm also a nurse. We both are.\" \n\n<center>*****</center> \n\n\"It's Romania again isn't it?\" My wife was holding my wrists shaking them pulling me out of the daydream. \"I'm right aren't I? You've been quiet for ages. It's always Romania when you get like this.\" She looked lovingly into my eyes. \"I've told you I will take all that away, just give me time. You know I love you don't you?\"\n\n\"Yes of course I do.\"\n\n\"Then know that I'll make you forget. It will help that this is the last time we make this journey.\"\n\n\"Are you looking forward to moving into the Styles family home?\"\n\n\"I can't say that I am; too many memories.\"\n\n\"Well I am curious to see you in your natural habitat as it were. Don't worry, if it's uncomfortable for you we can always sell it. I think it's important for you to be back among the people who know you and love you.\"\n\nI smiled at her and took the first bite of my Chicken Korma. Almost immediately, I wished I hadn't bothered, I hate motorway food. After coffee we were on our way again. \n\nBing was on the Radio singing about wanting a White Christmas. It was alright for him, he didn't have to drive in it. We managed half an hour before we ran into another jam. Wham were singing Last Christmas I gave you my heart but the very next day you gave it away. Ouch, that one was just too close to home.\n\n<center>*****</center> \n\nWe went over the Alps into Austria and by the end of the first day we'd crossed into Hungary. With no more autobahns everything got slower. It took us ten hours to cross Hungary and the roads were getting progressively worse. We crossed into Romania at Oradea. At first the roads were actually cleared but as we moved further into the country the roads became more icy. The Romanians never treated the roads; they just ploughed them and left you to drive on the packed ice. We stopped, fitted the chains to the wheels, and continued. It we climbed up over the Carpathians into Transylvania. Jackie broke out a sledge and was swinging all over the road at the end of a rope attached to the van. Going back down the mountain she gave me several frights as the sledge caught up with us. I pulled her back into the van and in the wee small hours of the morning we reached Oituz. We donned our Santa suits and unloaded the van. The staff were pleased to see us, especially when they realised that one of the Santa's was Domnul Drew (the name they gave me when I worked there). They helped us with the unloading and fed us, and just before midnight we turned in. I'd planned to get the train from Onesti at 3am and the girls were going to drive me to the station so we all turned in.\n\nI was woken by Percy shaking my shoulder.\n\n\"Come on Drew it's 2.30. We need to get a move on. I dressed quickly and we were soon on our way we made it to the station with minutes to spare. I queued for my ticket hoping the train didn't arrive until after I'd got my ticket. It was gone 3am when I got to the window and asked for my Ticket.\n\n\"Nu exista trenul a tres\" said the clerk.\n\nThat was when I realised what the day it was. The three o clock train only ran three days a week. Percy noticed me cursing and walked over.\n\n\"What's wrong Drew?\"\n\n\"It's Tuesday, the train doesn't run today. I'll have to wait here for a couple of hours, get the train to Adjud and change there to the train to Bucharest. I won't get there until 3pm.\"\n\nShe turned to look at Jackie. \"Haven't you always wanted to see Bucharest, Sergeant?\"\n\n\"What? Oh! Oh yes, Paris of Eastern Europe they say. Yeah, always wanted to see it.\"\n\n\"Well what are we waiting for?\" She turned back to me.\"Looks like we're going to Bucharest, can we offer you a lift?\"\n\n<center>*****</center>\n\nThe radio was playing Jonah Lewie trying to stop the cavalry as I crossed on to the M1. My wife squeezed my forearm.\n\n\"It will be alright you know. We'll soon settle in and you will be amongst all your old friends.\n\n\"I know.\" I said and I patted her hand.\n\nMud started singing about how they were going to be Lonely this Christmas as I caught up with yet another traffic jam.\n\n<center>*****</center>\n\nIt took six hours to travel the 160 miles to reach Bucharest and we set about finding Penny's apartment block. By 9.30am we were entering the lift. The girls wore their battle fatigues but I'd opted for the Santa suit, complete with beard.\n\n\"You won't be wearing that suit for long you know.\" said Jackie.\n\n\"She's right Drew; you'll be the best Christmas present she's ever had.\" Percy added.\n\n\"Thanks girls I really appreciate what you've done for me. I promise you at least one decent cup of coffee before you go.\"\n\nI've got to admit I was surprised when the lift actually worked and we got out on the third floor. Looking down the corridor I could see the outer steel door open, and locked back against the wall. That was a good sign. It meant she was home. I rang the bell and for the first time felt uneasy. I could hear voices from inside. A young man in his mid twenties answered the door. He was a skinny lad with a thin face and pointed chin. He wore only a towel wrapped around his waist.\n\n\"Da\" he said as he looked at me in my Santa suit. He obviously didn't recognise me but I knew him. It was Ion Damanescu, Penny's interpreter. I'd met him a few times before I'd left for England. I was about to speak when I heard her voice from inside.\n\n\"Who is it, darling?\"\n\n\"Mo\u0219 Cr\u0103ciun.\" (Santa Claus) he said.\n\n\"There's money in my purse. Get rid of him and come back to bed.\"\n\nI don't know why but I felt calm everything was suddenly clear. The girls would later tell me that it was all very quick but to me it was almost like slow motion. I put my hands behind his head and pulled him to me for the traditional Romanian greeting of a kiss on each cheek. However the only kiss he got from me was of the Glasgow variety. My forehead came down across the bridge of his nose, not once but twice. When I let go of him he went down like a sack of potatoes. I walked into the flat giving his flaccid body a couple of kicks as I did.\n\nPenny was still calling out to him as I strode into the bedroom. As she looked at me, her eyes widened, her mouth fell open and I waited for the scream. When it came it was loud and piercing. She pulled the sheet up to wrap it around her naked body. She held the sheet with one hand as she stretched the other arm out towards me.",
        "\"Please don't hurt me, please. I've got money. I can give you money, please don't hurt me.\"\n\nIt took me a while to realise who she was talking to. It sounded like she was talking to a stranger. Then I remembered the Santa suit and the beard.\n\n\"Where is Ion? What have you done to him?\" \n\nI just pointed to the hall as I moved over to check the wardrobes. I checked out the spare bedroom and the bathroom before returning to the hallway. Penny was kneeling beside Ion, still holding the sheet around her. I stood by them grabbed her purse and opened it.\n\n\"You see, see I've got money. Here take it but don't hurt us please.\"\n\nI stepped closer and letting go of the sheet she held her left hand out to stop me.\" The sheet fell down exposing her naked breasts. \"That's what he tells his mates.\" I thought. \"She may be old but she's still got a hot body and she can't get enough of me.\"\n\nI grabbed her hand and started to pull off the rings. The pleading started all over again.\n\n\"Not my rings. Oh please not my rings; Take the money please.\"\n\n\"What can I tell my husband.\" she said as the rings came off her fingers.\n\nI looked down at her with nothing but contempt and I spoke for the first time.\n\n\"You don't have a husband, not anymore.\"\n\nIt's strange when you have that much adrenaline coursing through your veins. I could see the shock spreading across her face.\n\n\"Drew!\" she almost whispered. She reached up and pulled the beard down revealing my face.\n\n\"NO\" she screamed as I walked away.\n\n\"Happy Christmas.\" I said, as I walked out the door. The girls said nothing as I walked past them. The lift doors were closing as Penny came out into the corridor, still trying to cover herself with the sheet.\n\n\"Don't go Drew, we need to talk, it isn't what it looks like. Please Drew, come back\"\n\nPercy reached for the door open button but I grabbed her hand and held it away from the buttons. As the lift started moving I turned to look at them.\n\n\"Have you girls got room for a passenger?\"\n\n\"No.\" said Jackie.\"Nobody rides for free. You'll have to earn your keep.\"\n\n\"I will, Jackie. I'll do whatever you want.\"\n\n\"Now that sounds interesting, what do you say Perce?\"\n\n\"Leave him alone Jackie, can't you see what a mess he's in?\"\n\n\"I'll tell you what, He may be in a mess, but I'm glad he's on our side. Did you see the way that guy went down?\"\n\n\"Just zip it sergeant.\" Percy was getting irritated. She turned to me.\"Get in the back and get your head down, we'll talk later.\"\n\nShe slapped me lightly on the shoulder as I got in the back of the van.\n\nCurled up on the mattress I tried to sleep but as my anger subsided the sorrow and the questions started. Did she just not love me anymore? Why not just tell me she'd found someone else? What could that scrawny little runt give her that I couldn't? Eventually rocked by the motion of the van, sleep swept over me. It was 1pm when I woke and climbed into the cab next to Percy.\n\n\"Feeling better? She asked.\n\n\"I don't know how I feel right now. I'm calmer than I was. It seems like a bad dream now, I can't believe it happened.\"\n\n\"Oh it happened alright. I wish it hadn't, I've never witnessed anything like that before. I hope I never see it again.\"\n\n\"Oh dear was it that ugly?\"\n\n\"Not so much ugly as harrowing. You seem like a pretty nice bloke, we've come to like you a lot. It's hard to see a mate go through something like that. For what it's worth I thought you were very restrained.\"\n\nShe put a hand on my thigh and squeezed it \"We're just coming up to Sibiu. What do you say we stop and break out the camping stove? I don't know about you but I'm missing that breakfast we didn't get in Bucharest.\"\n\n\"You've got my vote.\" said Jackie from the driving seat.\n\nWe stopped, we cooked, we ate and we talked. By the time we were ready to move on I was more in control and able to take my turn at the wheel. I was happy to continue driving so both of the girls got some sleep. They woke in time to find me arguing with the border guards about how much I should pay in export duty on the fuel in our tanks. They wanted fifty British pounds. They weren't interested in Romanian lieu. I showed the guards the mattress in the back and told them we would happily sleep in the van and take our chances with the next shift. Five minutes later they came back with an offer of five pounds. In the end they settled for all the Romanian money we had and we were on our way again.\n\nI turned in once we got onto the main road to Budapest and surprisingly slept. I was surprised to find that after a few hours I was not alone. A warm slim body slipped into the sleeping bag with me. I turned to find Persephone snuggling up to me.\n\n\"Are you OK?\" she asked.\n\n\"I think the hospital term would be, as well as can be expected.\"\n\n\"That bad huh?\"\n\n\"I feel sort of numb really.\"\n\n\"That's understandable. It will get better and we'll help you.\"\n\nShe kissed me on the forehead and cuddled up to me. She was wearing nothing but her underwear and as we lay there I was surprised to find there were stirrings in my loins. Percy ran her hand down my chest and I started to get hard. When she reached my waste I put my hand on hers and held it.\n\n\"Any further and your likely to get a surprise.\"\n\n\"I'm a nurse, not much surprises me. To be honest I'd be very disappointed if there was no reaction.\"\n\n\"Oh there's definitely a reaction. Little Drew is getting very excited but big Drew is not ready for anything like that yet.\"\n\n\"That's OK we can just cuddle for a while.\"\n\n\"Thanks, I'd like that.\"\n\nWe must have lay there for more than an hour and I noticed Persephone had fallen asleep. I extracted myself from her embrace and joined Jackie in the cab.\n\n\"I knew it.\" she said. \"Not so eager to get away from Percy were you? I should be insulted.\"\n\n\"Nothing happened, alright? Nothing.\"\n\nShe just smiled at me \"If you say so.\"\n\n\"I do say so.\"\n\n\"None of my business anyway. You like her, she likes you. Where's the problem? You're not still thinking about your wife are you?\"\n\n\"It may come as a surprise to you Jackie, but I'm not at all sure what I think about my wife at this time. For more than twenty years I've loved her unconditionally. Now I hate what she's done but I'm not sure how I feel about her. I'm still getting my head around it.\"\n\nShe went quiet for a while. It was another ten minutes before she spoke again. \"Look Drew, I'm sorry right. It's just that the way you tore into that arsehole in Bucharest, I thought that it was all over.\"\n\n\"It probably is but I just don't feel single just yet. Can you understand that?\"\n\nShe reached over and patted my leg. \"She doesn't deserve you. You know that.\"\n\nI put my hand on top of hers. \"Thanks Jackie. -- Just say when you want me to take over the driving.\"\n\nAn hour later I took the wheel, and took us all the way to the Austrian border. Once back in Western Europe we stopped for food and fuel. During the meal I tried to keep the conversation away from my personal life, with some success. Percy's eyes rarely strayed from my face. Whenever her eyes met mine she would smile, reach out and squeeze my hand. We decided that had to be the last food stop on the journey. We had to get back to Calais by Christmas eve so from there on it would be fuel and toilet stops only. We stocked up on soft drinks, cold food and snacks that could be eaten on the move. We had a rota of four hours driving four hours in the cab and four hours sleeping. I had first shift in the sleeping bag. To my surprise I slept but three hours in it became apparent that the shift system had gone out of the window I woke to find a naked Percy climbing into the bag with me. She pulled my head down to her breast.\n\n\"You may not realise it yet but you need this. From my experience it cures a lot of ills.\"\n\n\"I sorry Perce I really don't think I'll be up to much right now.\"\n\n\"Nonsense, just do to me what you really want to do to her. Just this once Drew, use me. We can work everything else out later but right now just fuck me.\"\n\nShe could feel my erection and knew I was ready for her and she was right about how I felt. If Jenny had been there I would have fucked her. There would have been no love involved, I wanted to hurt her the way I was hurting. I'm not proud of myself but I did as she suggested I thrust into her as if she was Penny and I wanted it to hurt her. There was no gentleness, no caressing or kissing, no love just hard rampant sex. More than once she cried out but she never tried to stop me. Her legs wrapped around me as I pumped my juices into her, and then we were done. \n\nAs I fell to the side of her I looked at her face and was overcome with guilt and shame. I'd deliberately tried to hurt this lovely young woman purely because the one I wanted to hurt wasn't there. She may have invited it but that was no excuse. I started to apologise and for the first time the tears started to come. Percy said nothing. She wrapped her arms around me and held me close to her as I cried for the loss of my wife and the mother of my children. \n\nEven Jackie was tactful enough to say nothing as I slipped into the passenger seat. I'd been sitting there for an hour or more before she eventually spoke.\n\n\"Toilets and fuel stop at the next service centre, are you OK with driving after that?\"\n\n\"Yeah, I'm fine with that; it'll give me something to do.\"\n\n\"So what happens now? For you I mean.\"\n\n\"I go home. Maybe I'll ring my mother to see if she's got room for me for Christmas dinner. I suppose I'll have to tell her and my kids all about it.\" \n\n\"I don't envy you in the slightest, but don't worry about your mum; she'll make room for you. It's what mums do.\"\n\n<center>***</center>\n\nShe reached over and wiped a tear from my eye. Mariah Carey came on the radio singing \"All I want for Christmas is you\" exactly the thoughts in my head as I'd travelled out to Romania all those years ago. More tears started to come.\n\n\"I think we'd better stop at the next services.\"She said. \"I need the loo and we need to get you sorted out.\"\n\nThe food in motorway services maybe awful but most of them have a Starbucks or Costa Coffee so you can get a decent cup of coffee. In my experience there isn't a lot that can't be made better by a good cup of coffee. By the time my wife had returned from the toilet my spirits were already lifted. She sat down opposite me and reached out for my hand.\n\n\"Now what's all this about?\"\n\n\"You know what it's about, you've already said it. It's Christmas time and I'm driving. It does it to me most years; this year just seems a bit worse.\"\n\n\"But this is the last year you'll be doing this. You're moving back home, close to your family. You should be happy; you'll be able to be a proper grandpa to your grandchildren.\"\n\n\"I am happy about that, really I am. I'm not so sure about moving back into that house.\"\n\n\"Then we'll sell it and find a new place to start over again. I just want you to be happy.\"\n\n\"I am happy. Most of the time I'm as happy as I've ever been. It's just that from time to time something reminds me of the day my life fell apart. We've rebuilt it recently and I'm grateful to you for that, but I've lost ten years. On days like this I'm mourning the loss of those years.\"\n\n\"You don't have to be grateful to me, I love you, it's my job to make you happy. It hurts me to see you like this.\"\n\n\"I'm sorry my love, I'll be fine once we get there. As you say this is the last time and I've got you to help me. Things can only get better.\"\n\nI took her hand and kissed it. I looked into her eyes and knew how lucky I really was. We finished our coffee and left.\n\nChris Rea was back on the radio when we left. \"I'm driving home for Christmas; I can't wait to see those faces.\" You and me both Chris I thought as we slipped back on to the motorway. \n\n<center>***</center>\n\nBy the time we reached Luton we were back in heavy traffic. Band aid were on the radio asking do they know it's Christmas reminding me of our arrival in Calais all those years ago. Percy and Jackie had been trying to find an English speaking radio station. As we pulled into the docks in Calais they picked up the BBC and Band Aid. It was the early hours of Christmas Eve. Percy set about getting us on the next ferry. I'd been quite surprised by the fact the change in my attitude. Since Percy and I got together I was feeling more in control of my emotions. Not right, but a hell of a lot better. I did more than my share of driving, it helped keep me focussed. \n\nBy 5 am we were boarding the ferry to Dover. Jackie got out of the van and I was about to follow her when someone grabbed my arm. Percy smiled at me.\n\n\"Where do you think you're going?\" I was about to answer when she started again. \"We have a mattress and over an hour of complete privacy. Now you owe me Mr Styles, and I think it's time to collect.\"\n\nShe locked her lips on mine and in no time we were doing the tongue tango. We moved into the back of the van.\n\n\"This time I'm not her OK. I know you fancy me, now you've got me. This is not punishment I want to enjoy this one.\" \n\nWe lay down on the mattress kissing as we removed each other's clothes. She really was gorgeous once the army fatigues were removed, slim, but shapely. Her high cheek bones and blue eyes were what always attracted me to her. At that moment it was what drove me wild with desire. As we held each other she whispered in my ear.\n\n\"Make love to me Drew, not for any reason other than because I want you to.\"\n\nThe van was still warm inside so at first we were quite comfortable being naked. I started kissing her lips, and worked down her neck. As I reached her breasts her hands came around the back of my head, pushing it hard down on her breast. I sucked and nibbled on her nipple before moving on to the other one. She tried to push herself up as she pulled my head down. My mouth was filled with her breast as I sucked on her. She rose and fell as she groaned and eventually released my head. I moved further down, over her stomach. With my fingers working her breasts and nipples her mound rose up to my lips. I felt her hands on the back of my head again as her vulva moved up to meet me. I found her clitoris and sucked on it. Her bucking became so extreme that I tried to pull my head away. Percy pushed my head down harder and started to yell between gasps.\"\n\n\"No! No don't stop... don't stop.. Oh god, don't stop now.\"\n\nI continued to suck her clit and flick it with my tongue. In only seconds she was arching her back and moaning loudly before her whole body started to shake. I pulled my head back up and settled back to lie beside her. She rolled towards me and put an arm around me. I pulled her close to me and her leg wrapped around mine. I pushed her onto her back and climbed between her legs. As I entered her, her hands came down to my arse as she tried to pull me harder into her. The rolling of the ship blended with our movements, until she cried out in ecstasy as the orgasm swept through her. I felt myself pumping juices into her. I rolled her over on top of me as I softened inside of her. She lay on my chest and I wrapped my arms around her and held her. I stroked her hair and back as she moved up to kiss me.\n\n\"That woman is crazy.\"\n\n\"What woman?\"\n\n\"Your wife. She must be an idiot. That was good you know?\"\n\n\"But not as good as younger harder dick.\"\n\n\"He may have been younger but I seriously doubt he was better. A girl likes a man who cares about her when making love. Most younger men only care about getting themselves off. Do you think we can squeeze another one in before we dock? I'll help if you need it.\" \n\n\"Give me a while and maybe we can try again. In the meantime it's getting colder in here, we need to cover up.\"\n\nI grabbed the sleeping bag and unzipped it so that it became like a quilt. I pulled it over us and cuddled up to her. If anyone had told me I would be ready to go again in twenty minutes I wouldn't have believed it but after only fifteen minutes of cuddling and stroking each other Percy slipped beneath the quilt and I soon felt her taking my cock into her mouth. As she sucked on me moving her head up and down, I felt myself getting harder. I felt an involuntary urge to thrust forward but Percy pushed me back. I'd moved onto my back and when Percy pulled her mouth off my cock I started to roll over towards her. She pushed me onto my back and she straddled me. She lowered herself onto me and began to gyrate on top of me. I had no trouble holding back my orgasm; I didn't expect to be able to produce one. Percy worked harder leaning forward and placing her hands either side of my head. Her tits began to swing as she forced her self down on me. I took them in my hands squeezing them and rubbing my thumbs over the nipples. I have to admit it felt good. I would never have believed how good. Making love to Penny was never like that, she would never take me in her mouth and we'd got into a rut with positions. Suddenly it was like a whole new world. Percy sat back on me moving her hands back to hold her ankles as she threw her head back and her back arched. I wouldn't call it a groan so much as a roar that came out of her, as she emptied her lungs. I did manage to produce another load which I pumped into her. She collapsed onto my chest and I held her there. We lay that way until we heard movements outside. The crew were preparing to dock.\n\nWe dressed quickly and by the time Jackie opened the door we were both sitting in the cab. I'd planned on flying back so I'd got a taxi to the docks. Both girls agreed to take me home and in return I offered them the chance to take a shower. I stepped through my front door at 9.30 am on Christmas Eve. Both girls used the shower and washed their hair while I cooked breakfast for us. We sat eating eggs and bacon. I noticed Jackie looking at Percy and grinning. Most of the time Percy was looking at me. After breakfast the girls had to leave. They had to return the van to its owner before close of business. Before she left Percy kissed me.\n\n\"Keep in touch Drew.\"\n\nI found a pen and paper and wrote my home and mobile number down. As I gave it to her she took the pen and wrote her own number down for me. Then they were gone and I was left alone. I knew this would be crunch time, being on my own and allowing myself to dwell on things. Realising I was a bit low on food I decided to go out and do some shopping, To be honest it was mainly to get me out of the empty house. I managed to make that last well into the afternoon before settling down in front of the television. I soon got bored and started work on the things I was going to have to do in the coming weeks. I fired up the computer and started looking up our bank accounts. To tell the truth I was still running on autopilot. Pink Floyd described it best. I'd become comfortably numb. I sat in front of the computer doing what I could to separate our finances. Most things would have to wait until after the holiday but I did what I could. That night I slept in my own bed. It was the best night's sleep I'd had in a long time. I woke at 9 am Christmas morning to the sound of the phone ringing.\n\n<center>*****</center>\n\nBing and Bowie were singing Peace on Earth/Little Drummer Boy when she answered the phone for me.\n\n\"Hello.--No he's driving at the moment, can I help? Hang on I'll ask him.\" She looked over at me. \"It's Alison she wants to know when we expect to get there.\"\n\nI looked at the queue of traffic ahead of me.\n\n\"On a normal day, we'd be there in about two hours, but with this level of traffic who knows?\"\n\n\"Come on give me a guess. She wants an answer; we can always ring again if we get delayed.\"\n\n\"Ok tell her three hours.\"\n\n\"Hello Alison, did you hear that? -- Yes it's been a bit grim I've never seen traffic this bad but Drew says it's like this every year.-- No I know, it's just the way he is always makes the effort sound like nothing. Yes we look forward to it. Are you ready for your move? -- Yes its' all ready, should be January 3rd. OK we'll see you soon.\"",
        "She disconnected the call and dropped the phone back in the console.\n\nReaching over, she squeezed my hand.\n\n\"They are all looking forward to seeing us.\"\n\n\"I'm looking forward to it aswell, especially the kids. I've not been much of a Grandpa, living up in Ullswater.\"\n\n\"I'm sure they'll love having us nearby.\"\n\n\"You realise we'll end up as cheap baby sitters, don't you.\"\n\n\"Of course I do, and stop making it sound like you resent that. You'll love having them as much as they'll love being with us.\"\n\nI smiled at her. \"You know me too well,\"\n\n\"Why do I do that?\" I asked myself. I always made it sound like I didn't want to be burdened with my grandchildren. The truth was just the opposite and the children knew it.\n\n\"Drew, would you like me to take over the driving. You must be feeling tired by now.\"\n\n\"Well I can't say I'm not a bit fed up with this traffic. I'm not used to having someone to hand over to. As Boney M started singing Mary's Boy Child as the traffic started to thin out a bit. We moved off again.\n\n<center>***</center>\n\nI picked up the phone. \"Hello!\"\n\n\"Daddy, what are you doing here? You're supposed to be In Romania with Mum.\" It was my daughter Phoebe.\n\n\"It didn't work out the way I'd hoped; perhaps I should have told her I was coming.\" \"\n\n\"What do you mean dad, surely she was pleased to see you.\"\n\n\"I mean it would have given her time to get rid of her house guest.\"\n\n\"Daddy what are you talking about. I spoke to mum this morning and she said she hadn't seen you.\"\n\n\"Oh, she saw me alright, not for long, but she saw me.\"\n\n\"We can't talk about this on the phone. What are you going to do now?\"\n\n\"I'm going to have some breakfast then maybe go down to the pub.\"\n\n\"Don't be silly Daddy. Gran's cooking more than enough for us so if you don't want to hurt her feelings you'll get yourself over here and celebrate Christmas with your family.\"\n\nMum was indeed pleased to see me, as were Phoebe and David. Everyone tactfully avoided talking about Penny. I'd like to say a good time was had by all but the fact of the matter was that we all tried too hard. For me, there was still numbness. I pretended to laugh at things everyone else found funny. I tried to feign surprise and appreciation for the presents I was given. I wore the Christmas jumper that mum had knitted for me. I thought I was doing a good job of projecting an air of normality. However, I soon noticed the anxious looks. By evening I was feeling bloated having eaten and drunk too much in the day. Certainly I'd had too much alcohol to drive home so I decided to sleep on mum's sofa. I thought everyone had gone to bed when I went to the kitchen for some water. When I returned I found my son sitting in the armchair opposite the sofa. I sat down on the sofa and pulled out the duvet Mum had dug out for me.\n\n\"You know Gran's worried about you. No change that, we all are.\" David said between yawns.\n\n\"I really don't know why, I'm okay. I thought I'd been remarkably calm.\"\n\n\"Oh, you have. Too calm. So calm that we don't recognise you. I never thought I'd ever long to hear one of your bad jokes but today I'd have loved to hear one. What's happened Dad? What's happening with you and mum?\"\n\n\"Nothing out of the ordinary, it happens to plenty of couples. We've done well really, it's over twenty years.\"\n\n\"What are you talking about Dad? What's happened?\"\n\n\"Your mother has found someone else. That's the real reason she didn't come home for Christmas she's sharing it with her new man,\"\n\n\"No there must be a mistake. You and mum, you're like, forever.\"\n\n\"I thought so too Son, I really did, but she's found someone else and I've got to accept that.\"\n\n\"What do you mean; you've got to accept it? I never thought I'd hear a son of mine giving up without a fight.\" I hadn't heard her come down but my mother was standing in the living room doorway and looking angry. I turned to look at her.\n\n\"Just what do you expect me to do, Mum? Hit her on the head and drag her home by the hair? She's got another man. She chose to stay there with him instead of coming home to us. How much clearer can it be?\"\n\n\"Well I don't believe it, not Penny. It must be a misunderstanding, have you spoken to her?\"\n\n\"You could say that, we said a few words, very few.\"\n\n\"Well how do you know she's found someone else?\"\n\n\"I met him Mum. He answered her door wearing nothing but a towel.\"\n\n\"Well I think you should talk to her. There must be an explanation Penny wouldn't do that to you, she just wouldn't.\"\n\n\"She has done it Mum and now I've got to build a life without her. Now if it's all the same to you I'd rather not talk about it any more. I'd really like to get some sleep.\"\n\nI started to get undressed. Mum and David went to bed leaving me to sleep. I lay down on the sofa and pulled the duvet over myself. Sleep was hard to come by that night. I realised that I'd managed to push the events in Bucharest to the back of my mind. Now it was all out in front again. To make matters worse, I'd just forced myself to think about life without Penny. \n\nSome time during that long Christmas night I must have drifted off to sleep because I don't remember seeing the sun come up, or hear anyone coming down stairs. I woke to the sound of voices, speaking in hushed tones, coming from the kitchen.\n\n\"What can we do Pheeb they're both grown ups, they can sort it out for themselves. It's not up to us to interfere.\"\n\n\"Have you listened to yourself David? This is Mum and Dad we're talking about not two strangers. We have to do something to get them together to talk about this.\"\n\n\"From what Dad said last night, it's all done and dusted as far as he's concerned. Gran even tried the 'Man up and fight for her' speech, but it didn't work. I think he's made his mind up.\"\n\nAs they were talking I pulled some clothes on and made my way toward the kitchen.\n\n\"You said it yourself David, he's in shock right now. He doesn't know what he's thinking. First we have to get him to see a doctor, and then we have to get him to talk to Mum. It's all a big mistake, it must be.\" \n\n\"It was a mistake all right.\" I said, standing in the kitchen doorway. \"And I made it. I believed her when she said she could handle the year out there on her own. 'As long as I have your love' she said 'I can handle anything.' I believed her, that was a mistake. I believed that I was so important to her that she'd be overjoyed to see me on her doorstep. That was a mistake, she was horrified. Now David what have I always told you about mistakes.\"\n\n\"The man who never made a mistake, never made anything!\"\n\n\"Quite right, but I have made something. I made you two and I'm very proud of you, you were not mistakes. There is something else about making mistakes; you have to learn from them.\" I turned to Phoebe. \"I have learned. I've learned that nothing is forever. Everything has a finite life and the relationship between me and your mother has just come to an end.\"\n\n\"No Daddy, I don't believe that. Mum loves you, I know she does. I don't know how you can stand there and calmly say it's all over. It has to be a misunderstanding. It just has to be.\"\n\nI held both her arms and turned her so I could look into her eyes. \"Your mother has a new man in her life, well more of a boy really. The last I saw of her she was kneeling, half naked, beside him, begging me not to hurt him.\"\n\nI let go of her arms and in floods of tears, she ran from the room.\n\n\"Are you telling me you knocked him down?\" David asked. \n\n\"The old Glasgow kiss comes in handy sometimes. Like I said not so much a man more a boy. Anyway he went down and stayed there. -- I suppose that means he had some sense, staying down I mean.\"\n\n\"Are you sure he wasn't unconscious? You could have killed him Dad.\" \n\n\"I don't know, and I don't care. I doubt that he's dead; I wouldn't have got out of Romania if he was. Either way the little shit got what he deserved.\"\n\n\"Now that sounds more like my son.\" Mum said as she came into the kitchen. \"Now you need to go back out there and bring your wife home.\"\n\n\"She's not my wife now, Mum. She chose him over us. She's his now. I can't say it doesn't hurt, because it does. It hurts even more because I know how much it's going to hurt her.\"\n\n\"What does that mean? You're not planning to do something stupid are you?\"\n\n\"No. The only thing I'm planning is divorce. I'm not the one doing something stupid. I've lost count of the number of times we were told about this sort of thing before we went out there but she still fell for it.\"\n\n\"Fell for what? I don't understand.\"\n\n\"Think about it Mum. Penny is a woman in her forties. She looks pretty damned good for her age but she's still in her forties. In the next ten years she'll be going through the menopause. What does a twenty something lad see in a woman like that? -- I'll tell you what he sees the chance of permanent residence in the UK. That's what he sees. He doesn't give a shit about her or us or anyone else. He just wants to get out of Romania.\"\n\n\"Well that's all the more reason for you to bring her home. To stop her making that mistake.\"\n\n\"Don't you see Mum? She's already made it. He's moved in with her. She wanted to spend Christmas with him not with us. The days of the caveman approach are gone. She's made her choice and now we've all got to live with it.\"\n\n\"So what are you going to do now?\"\n\n\"Like I said last night, I start the process of separating her life from mine. Start thinking about living without her. --Perhaps I should go home. I know I'm lousy company.\"\n\n\"You'll do no such thing. You're not leaving me on my own on Boxing Day. If you must you can take the children home with you tonight, but I want to spend another day with my family.\"\n\nAnd so it was, we all stayed with mum until 9 pm then David, Phoebe and I went home. The following day the country went partially back to business as usual. The banks were open but the solicitors wouldn't return to work until the 2nd of January. I went to the Building Society first and gave them a cheque to cover the outstanding balance on our mortgage. I'd already shifted most of our savings into the current (Checking) account. What did we need the savings for now? The world cruise I'd planned for our 25th anniversary was never going to happen. Paying off the mortgage seemed a better use of the money. Next was a trip to the bank where I set up a new current account for myself, arranged to have all the household bills paid from the new account. I transferred what I thought was mine from the old account and took my name off of it. It still left Penny with a tidy sum. Eighty per cent of her salary was being paid into that account and she had no need to touch it.\n\nBack home both David and Phoebe thought I was acting with undue haste. They still had the idea that their mother would come home and explain everything. Phoebe made two attempts to call her mother, no easy task in those days. Each time she tried the call went unanswered. Mum called me everyday and opened with the same question. \"Have you spoken to her yet?\" Every time the phone rang Phoebe raced to get there first and every time was disappointed when it wasn't her mother.\n\nOn New Year's Eve I got a surprise call. It's a woman for you Phoebe said as she handed me the phone. I was somewhat surprised to hear the classy tones of Lady Caroline.\n\n\"Hello Caroline what can I do for you?\"\n\n\"Oh, nothing really I just wanted to thank you for doing the run for us. I was really worried about the girls doing it on their own.\"\n\n\"Ah yes! You might have told me Percy was a woman.\" I heard her laugh.\n\n\"She's quite a girl our Percy, isn't she.\"\n\n\"You know her then?\"\n\n\"I know her mother, Lady Sally Marshall. She sort of volunteered Percy for the job.\"\n\n\"Yes, well as you say she's quite a girl.\"\n\n\"Now Drew, you must tell me if I'm being an interfering old bat, but Percy told me what happened in Bucharest. I have to say Penny is not the woman I thought she was.\"\n\n\"That makes two of us.\"\n\n\"Yes, well, water under the bridge as they say. --What I really rang for was to tell you that if there is anything I, or the organisation can do for you, you only have to ask. Anything at all, if it's in my power you'll have it.\"\n\n\"Thank you Caroline, that means a lot. Don't forget me if you need anything out in Oituz.\"\n\n\"Goes without saying dear boy. Now you keep your chin up and keep me informed. -- Oh, nearly forgot. Percy says you know the slimy little bastard. Does he have a name?\"\n\n\"Yes I met him when Penny first got the job. He's her interpreter. His name is Ion Damanescu.\"\n\n\"Damanescu, right, got it. I'll be keeping an eye on him. Got to go now, things to organise. You keep your pecker up and don't forget to keep in touch. Bye for now.\" \n\nPhoebe just looked at me.\n\n\"Lady Caroline.\" I said \"She runs the..\"\n\n\"I know who Lady Caroline is.\" she interrupted. \"What I want to know is who is this Percy?\"\n\n\"Captain Persephone Marshall she was one of the other drivers on the trip to Oituz.\"\n\n\"And that's all she is, just one of the drivers? You see when you were talking about her I saw a hint of the way you used to look when you talked about mum. It was like having my dad back.\"\n\n\"Look she's a very nice young lady, they both were. But she's only thirty, what interest do you think she'd have in an old fart like me?\"\n\n\"I don't know dad, it takes all sorts. But I know you like her. Don't go doing anything silly while you're on the rebound.\"\n\n\"You make me sound like a lovesick teenager. Like I said she's a nice girl but I doubt I'll be seeing anything of her.\"\n\nPhoebe decided to leave it at that. She seemed more worried that her mother hadn't called. \n\nI got through New Year and on the 2nd of January I set out to find a solicitor. It didn't take long, before the morning was over, everything was underway. The solicitor assured me that Penny would be informed of the divorce proceedings within the week. I'd started back at work before Penny rang the house. Phoebe took the call, and told her I was at work. She wanted to talk to her mother and was somewhat disappointed when Penny didn't want to talk. That evening she couldn't wait to tell me.\n\n\"Mum rang today. She really wanted to talk to you.\"\n\n\"Oh, pity I missed her.\"\n\n\"Yes well she didn't talk much. She's going to ring back tomorrow at ten.\"\n\n\"Well it's a shame that I won't be here then isn't it.\"\n\n\"Dad really, she's trying, the least you could do is meet her half way.\"\n\n\"What's done is done and can't be undone. I don't think we have anything to talk about and I have a mountain of marking and preparation to do.\"\n\n\"But Dad she says you got it all wrong, why can't you just talk to her?\"\n\n\"Because she's still trying to pretend that I didn't see what I saw. Until she's prepared to confront the truth there is no point in either of us wasting our time.\"\n\n\"So you won't even talk to her?\"\n\n\"I won't take time off work to do it.\"\n\n\"Daddy you have to try and fix this.\"\n\n\"I did, I drove all the way to Bucharest to spend Christmas with her. I'd call that making an effort.\"\n\n\"Dad you have to give her a chance. Isn't it possible that you misunderstood?\"\n\n\"It's difficult to misunderstand a man in a towel answering the door in your wife's flat.\" \n\nPhoebe left me alone for the rest of the day. She was disappointed when I still went to work the next day. She told me Penny cried when she found out I wasn't there. \n\nMy colleagues at work realised something was wrong, but no one guessed what. Even my students asked me what was wrong. I'd not noticed that I was doing anything differently but it seemed that others had. I was just coming to terms with things when I came home to see her sitting on a suitcase on my front step. I knew it would happen sooner or later but I still wasn't ready for it. I didn't think she'd seen me so I drove straight past the house and went to the pub. By the time I got back she'd gone. The next day I started getting calls on my mobile. I refused to answer during working hours but when a call came in during lunch break I answered.\n\n\"Yes Penny, what do you want?\"\n\n\"I want to talk to you, what do you think?\"\n\n\"Are you sure you can afford the time to be here? Isn't there some project demanding your attention? Isn't Ion's bed getting cold while your here?\"\n\n\"You don't know what you're talking about Drew. That's why we need to talk.\" \n\n\"You want to talk, come to the house at 2 pm Saturday. I'll be in then.\"\n\nI disconnected the call without giving her the chance to say any more.\n\nSaturday afternoon brought a small delegation to my door. My mother and daughter accompanied my wife I invited them in and made coffee. We sat chatting about Phoebe's university life and Mum's social life. Penny talked about her projects in Romania. Once coffee was out of the way, I suggested that Mum and Phoebe leave us to talk.\n\n\"I'd like them to stay if you don't mind.\" Penny said.\n\n\"It's OK with me; I thought you would want the privacy. --OK Penny what do you want to talk about?\"\n\n\"Well there's this for a start.\" she said slapping the solicitor's letter on the table.\n\nI picked up the letter and read it. \"It seems self explanatory to me. I'm suing for divorce.\"\n\n\"Well that's what I need to talk to you about. I don't want a divorce, I love you. I want to grow old with you. What happened in Romania was all a big misunderstanding and poor Ion has a broken nose because of it.\"\n\n\"So tell me Penny dear what did I misunderstand? When a man answers my wife's door wearing nothing but a towel, what's to misunderstand.\"\n\n\"I realise what it looked like but it wasn't like that. Ion just came over to use the shower. There was no hot water in his block. You know the way it works out there, if one person doesn't pay the bill the whole block get's cut off.\"\n\n\"You see Dad; I told you there was an explanation.\"\n\nI just sat there as if deep in thought. \"I see, so I didn't hear you ask who was at the door? And hear him tell you it was Father Christmas?\"\n\n\"Yes that did happen Ion had just stepped out of the shower when you rang the bell so he went to the door.\"\n\n\"And when he told you it was Father Christmas, I didn't hear you say, 'Oh get rid of him and come back to bed'.'\"\n\nPenny's face started to redden. \"I did say to get rid of him; I thought it was a beggar.\"\n\n\"And come back to bed?\"\n\nHer face reddened more. \"No I didn't say that. He hadn't been in my bed. You must have misheard.\"\n\n\"Oh, I see. So he was not sleeping with you, and he just came round to use the shower. I see.\"\n\n\"Exactly now can we get back to being man and wife and forget about all this.\" she said tapping the solicitors letter.\n\n\"While we're about it why did you change the locks and shut me out of my own house?\"\n\nI pulled my phone from my pocket. \"I see, it looks like I got it wrong doesn't it.\"\n\n\"Exactly Daddy, now all you have to do is apologise to Mum, and set about mending things\"\n\n\"I don't understand how I could have got it so wrong. You see I thought that if a man came over to use the shower then his clothes would be in the bathroom, but as you can see they weren't.\"\n\nI showed all three of them the picture of the bathroom that I'd taken with the phone.\n\n\"What you do see in the picture is all his toiletries and shaving gear. Now let's move to the bedroom.\" I brought up another picture on the phone. \"Oh look there are his clothes, so he just thought he'd give you a look at what he had to offer before he had a shower.\"\n\nPenny's face was almost cherry red now. \"Let's just look a bit further at how I got it so wrong. Here is a photo of the inside of the wardrobe. Now if poor Ion was just popping around to use the shower, why did I find one side of the wardrobe full of his suits? In fact why did I find all the signs the benefits people look for, as evidence of co-habiting.\"",
        "Both Phoebe and my mother were looking at Penny.\n\n\"Now the way I see it here is that somebody is telling porky pies, and I know it isn't me.\"\n\n\"Mummy how could you?\" Phoebe said as Penny's head sank into her hands and she started to cry. \n\nThis was the moment I'd dreaded. I could never stand to see a woman cry but when that woman was the love of my life I was sure I'd cave in. I sat watching her cry waiting for my tears to fall. I expected the urge to move around the table to take her in my arms. Nothing happened. \n\n\"Oh Drew, I'm so, so sorry. I never meant for this to happen. I never meant to hurt you. I love you. I was just so lonely and when a younger man found me attractive I just buckled. I've sent him away, honest I have. I'll never see him again. I'll give up my job and move back home. Please Drew; please say you'll forgive me.\"\n\n\"You don't have do that Penny. You don't have to give up your job.\"\n\nShe stopped crying and when she looked at me I could see the hope in her eyes. \"You really mean that, I can continue working in Bucharest?\"\n\n\"Of course you can.--Most solicitors are quite capable of handling something like this over the phone and, with the money they are paying you, I'm sure you could fly back for any serious negotiations.\" \n\nBoth my mother and daughter sat there open mouthed as I continued. \"What you have to decide is whether to accept my offer and let the divorce go ahead quickly, or whether you are going to fight over every last teaspoon and drag it out for three or four years. I think I know which one Ion will want.\" \n\nI paused, waiting for her answer. It was a long time coming. She tried to compose herself and then spoke quietly. \"I've told you before, I don't want a divorce. It has nothing to do with Ion. We are not together anymore. I want you; I want to grow old with you. Please forgive me and let's start again I'll do anything you want.\"\n\nThis time I was the one who left the dramatic pause. \"Now I really have a problem. You say you've split up with Ion, but you came in here telling me you were never together. You see my problem? What do I believe? I can't spend the rest of my life trying to figure out what is the truth. I don't want to worry every time you smile at another man, and I don't think you want that either. --I think you'll find the terms are quite fair. Everything left in your current account and the savings account is yours to keep. The only thing I want is this house. I have many fond memories of this house. I want to keep it. You don't have to make your mind up straight away. Go back to Bucharest; talk it over with Ion. I'm sure you'll come to the right decision.\"\n\n\"How many times do I have to say this? Ion is no longer a part of my life.\" She got up and paced back and forth at the end of the table. \"I don't believe this. I make one mistake, just one mistake, and you want to throw away twenty two years. Twenty two good years of working together, bringing up children together and yes, loving each other. You want to throw it away for one mistake.\"\n\nStill calm I sat at the table and spoke quietly. \"I didn't throw any of that away; you did, when you invited that slimy little bastard into your bed. The minute you let him persuade you to break your promise to us, and stay out there for Christmas. What did he tell you? That you couldn't trust your Romanian Project workers to do their visits if you weren't there checking up on them? That they'd be selling all the food on the black market as soon as you got on the plane? You of course swallowed it all because deep down you wanted to stay with him. You wanted the thrill of going to all the parties with your young lover on your arm, then going home to ride on his young hard dick. He stroked your ego as much as your pussy. He may be gone now, but he'll be back, because he's in love. He's in love with your lovely red British passport. --I think this meeting is over let me know your decision. If you want to fight the settlement you'll need to find a solicitor.\"\n\nI got up, walked to the front door and held it open. It didn't take long for them to take the hint. Penny walked out first; she tried to kiss me but ended up brushing her lips across my cheek.\n\n\"Just so that you know, I'm staying at your mother's\" She walked out with her head down and got in her hire car. \n\nMy mother followed her and as she came past me she said, \"I hope you know what you're doing.\"\n\n\"So do I Mum. So do I.\"\n\nPhoebe was the last to leave. \"I'm sorry Daddy; I really thought it was all a misunderstanding. How can you be so calm?\"\n\n\"I don't know sweetie. It just feels like I'm somewhere else just watching all this happen. I guess it's some form of defence mechanism.\"\n\n\"Well I don't like it, I want my Daddy back. --I'm going to Gran's house to help settle her down, then I'll be back. I love you Dad\" \n\n<center>***</center>\n\n\"I want to drive.\" I could feel her shaking my arm.\n\n\"What?\" It was a little difficult to take in. In all my years with Penny, she never wanted to drive. Even when I wanted a rest she would rather stop than take over the driving.\n\nThe wombles were wishing us a Wombling Merry Christmas as she repeated the statement.\n\n\"I want to drive. You are preoccupied with something and your driving is suffering, so pull in to the next services, I can go to the loo and we'll change places.\"\n\n\"Yes ma'am.\" I said giving a mock salute.\n\nShe gave me playful punch on the arm \"You just behave yourself soldier or I'll put you on a charge.\"\n\n\"Oh dear! No fun tonight then?\"\n\n\"That will depend on your orders won't it?\"\n\n\"Yes ma'am. What will it be ma'am? By the numbers, shoes off two, three, four. Trousers down, two, three, four. Willy out. Wait for it, wait for it. I'm waiting for it. Ouch!\" I said as she hit me again.\n\n\"There's just one thing stopping me giving you such a slap.\"\n\n\"And what is that ma'am?\"\n\n\"My husband is back. I don't know where you've been for the last few hours but it certainly wasn't with me. But now you're more like the man I married.\"\n\nGreg Lake came on the radio singing about how he believed in Father Christmas as we turned onto the slip road for Toddington services. I parked the car and we went inside to the toilets. I waited for her outside the toilets with all the people milling around. I swear I didn't have to see her to know she'd come out. I felt the draft caused by every male head turning to look at her.\n\n\"Fancy a coffee?\" she asked as we walked away.\n\n\"Is the Pope a Catholic?\"\n\nShe punched me again. \"Come on you caffeine addict, let's get you a fix.\"\n\nWe sat drinking our coffee and she kept smiling at me. \"Are we OK now?\"\n\n\"We've always been OK.\"\n\n\"Alright are you OK now? Feeling a bit brighter?\"\n\n\"I'm sorry; it's driving at this time of year it always takes me back ten years. I'm over it now.\"\n\n\"You'd better be. --I'm still driving though. You can have a rest. Caroline told me to look after you and that's one lady you don't cross.\"\n\nI smiled. \"You know that's something I've learned over the last few years.\"\n\n\"She has a lot of respect for you. I knew she liked you but it goes deeper than that. A sort of grudging admiration. You must have done something to impress her.\"\n\n\"We did cross swords once or twice but we both had the same goal.\"\n\n\"That's more or less what she says about you.\"\n\n\"Then she'll be glad you are looking after me.\"\n\n\"I have my orders too you know.\"\n\nWe laughed and held hands as we finished our coffee. As we left the service area Paul McCartney was Simply Having a Wonderful Christmas time. Once back on the road she reached over and squeezed my hand.\n\n<center>*****</center>\n\nI was feeling very sleepy, I heard Steel Eye Span singing Gaudete as I drifted into dreamland. I floated back to the days after the break up. Penny had gone back to Romania, determined to fight the divorce settlement. She had vowed to fight me for the last teaspoon. She wasn't really interested in the settlement; she just wanted to delay the divorce. It didn't matter how many times I told her that only the lawyers would win, she was determined to do anything to delay things. However, she didn't come home for Easter as she'd promised, and shortly after the holiday, she decided to accept the settlement. \n\nBefore the Easter break, Bob, my head of department, called me in to discuss the advertising for my replacement. I looked at the ad, skimmed over the text, and told him it all looked OK.\n\n\"To tell you the truth Drew I wish I didn't have to do this.\" He said. \n\n\"I don't see what you're getting at, if you think you can cover with the staff you have, don't advertise.\"\n\n\"Don't act dumb, you know I haven't got anyone that can do what you do. I heard a rumour that's all. The rumour has it that you're having second thoughts about going to Romania.\"\n\nWell the rumour was wrong Bob. I'm not having second thoughts. I'm just not going. Not this year, not ever.\"\n\nA smile spread across his face. \"That's the best news I've heard all year. When is Penny coming home?\"\n\n\"Whenever she likes, I'm not involved in that decision. If you are asking me if I'd like to stay on, the answer is yes. Now if there is nothing else I have a lot of assignments to mark.\"\n\n\"I'm sorry Drew, I didn't mean to pry. Look if there's anything I can do, just say the word.\"\n\n\"Thanks Bob, but there's nothing anyone can do.\" I left his office and went back to my desk. \n\nIt took three months from Penny's change of heart, for the divorce to be final. I didn't think I would miss her the way I did. I'd had almost three months without her before Christmas. Why should it be any different now? Of course the answer was quite simple, before Christmas I had something to look forward to. I'd store away things to tell her. I'd hear about stuff and say to myself Penny would like to hear about that. Then it was like a link between us, now it was a reminder that she was gone for good. \n\nI became unwilling to cook for only one person. Some days I'd eat in the staff coffee shop at work, more often I would just go without. I grew a beard because I couldn't be bothered to shave. I saw no reason to get my hair cut so I just let it grow. I'd always been overweight so I didn't worry when I lost a few pounds I didn't even notice when my clothes started to hang on me. When the children came home for Easter they both tried to get me to smarten up, but I couldn't see anything wrong with the way I looked. It required very little maintenance. I kept telling them I was alright. The truth was that I didn't really know how I was, or how I felt. I was still running on autopilot watching all the shit fall on someone else. It took a couple of phone calls to pull me together. \n\nThe first came from Percy, and was quickly followed by a visit. Hearing her voice was a tonic in itself. I thought that seeing her would be even better. I had what you would call a rude awakening. I saw her car pull onto the drive that Saturday morning, and rushed to open the front door. I stood there for a moment as she looked straight through me. Slowly the realisation came to her.\n\n\"Drew.\" she said slowly. \"Is that really you? What the hell has happened to you?\"\n\n\"What do you mean? I'm alright. I'm fine. I may have lost a bit of weight but I could afford to lose it.\"\n\n\"Not that much you couldn't.\" She said as she pushed past me dragging her kit bag behind her. I followed her in.\n\n\"Good god Drew, this place is as big a mess as you are. What are you doing man? Where's the coffee?\"\n\nI pointed her in the direction of the coffee machine and dug a fresh bag out of the cupboard. She set about making some coffee then started on me.\n\n\"What happened to that lovely man I went to Romania with? You're an absolute mess. What happened to you?\"\n\n\"You were there Perce. You know what happened.\"\n\n\"I know what happened in Bucharest, but that was months ago. You can't let it bury you like this, because that's what it's doing.\"\n\nI didn't know what to do or say. I just sat down at the table and watched her busy herself in the kitchen. She washed a couple of cups and poured us both a coffee. Coming over to the table she put a cup in front of me and sat down.\n\n\"Drew, you can't carry on like this. You are letting that evil little shit get the better of you. Imagine how he'd feel if he saw you now.\"\n\n\"I don't see what's wrong with the way I live.\"\n\n\"Your joking this place is a tip, no wonder your kids are worried.\"\n\n\"Who says they're worried?\"\n\n\"Caroline. David spoke to her. He said that you don't listen to them or your mother she was their last resort. I don't know why but he thought you might listen to her, and she thought you might listen to me.\"\n\n\"So that's the only reason you're here then, because Caroline sent you?\"\n\n\"I'd have been here months ago if you'd done what you promised and kept in touch. If I'd known you were divorcing her I'd have been here to support you. I thought she'd have done her best to get you back.\"\n\n\"Oh she did. She came back and told everyone a whole pack of lies. I knew then that it had to be over. I mean I almost believed her, and I was there. I knew I couldn't trust her again. I still love her Perce but I know it has to be over. If I had to leave her on her own I'd be wondering what she was doing. I keep telling myself, I should never have left her out there on her own. I should have broken my contract here and stayed with her.\"\n\n\"And you made that decision all on your own did you? You didn't talk about it; you just decided to leave her there?\"\n\n\"No, of course not. We talked about it, but I shouldn't have accepted it when she said I should come home and finish my contract.\"\n\n\"Now look Drew, there is no way that any of it was your fault. You both made the decision for Penny to stay out there. Even then just because she was on her own, she didn't have to cheat on you. You were on your own, did you take a lover? NO. Not even when Jackie offered it to you on a plate. Not until you caught her with her knickers down did you stray. So get this into your head right now. None of this is your fault.\"\n\nI sat there sipping my coffee and taking in what she'd said. I looked around the room. She was right it was a mess. I took another sip and looked at her.\n\n\"Perce. --This is a lousy cup of coffee.\"\n\n\"She laughed at me. \"Yes it is, isn't it? I'm not used to your coffee machine. What do you say to me getting you cleaned up, and then we'll go out and get a decent one.\"\n\nHer intention was to get rid of my beard and cut my hair, but that was confounded by not finding any scissors. Instead, we drove into town to a Barbers shop, and they did the honours for her. I came out with short hair and clean shaven.\n\n\"Now that looks more like the Drew I know. Now that we are in town, I think we should buy some clothes that fit you better.\"\n\nBy the time we got back to the house, I'd kitted myself out with casual and work clothes that were a little loose fitting but a lot better that the ones I'd been wearing. The loose fit was Percy's suggestion.\n\n\"I intend to see a bit of that weight going back on.\" She said.\n\nI took Percy up stairs and asked which room she fancied. She took one look in the master bedroom and said \"This will do fine once we get it cleaned up and change the sheets.\"\n\n\"This is my bedroom.\" I said.\n\n\"That makes it even better. Come on; give me a hand with these sheets.\" \n\nThe night was absolute bliss for me. There was no rampant sex, in fact there was no sex at all but for the first time in nine months, I fell asleep in the arms of a woman, a woman who was still there, when I woke at 5 am. Ever since Christmas I'd had trouble sleeping, five hours was fantastic. I turned to look at her. How could this lovely woman be interested in me? I soon rationalised it. She was doing it for Caroline. Caroline had sent her to look after me. But then that Christmas Eve came back to me. Does a woman really do that just out of sympathy? I was still running this through my head at 7 am when I put the coffee on to brew. I took two cups back up to bed and gently shook her shoulder.\n\n\"Wake up gorgeous. Coffee is ready.\"\n\nI climbed back into bed.\n\n\"How can you call me that when I've just woken up? I must look like the back end of a bus. What time is it?\"\n\n\"It's about 7.30. I've been up for a couple of hours. To tell the truth I don't sleep that well these days.\"\n\nShe sat up, showing me her beautiful breasts, and took a sip of coffee.\n\n\"It was just me then. You can get good coffee out of that machine.\" The smile she gave me was priceless.\n\n\"So.\" She said. \"You're not eating right, that's obvious, and you're not sleeping well. What else? How do you feel Drew?\"\n\n\"Fine, I feel fine.\"\n\n\"So, one of your students hands in a first class piece of work, how do you feel?\"\n\n\"I congratulate them. I tell them it's a great piece of work and that they should be proud of it\"\n\n\"That's what you do but how do you feel? Let's try again. A man or a student calls you a spineless wimp, how do you feel?\"\n\n\"I think that if all he can do is hurl insults then he's lost the argument. That's his problem not mine,\"\n\n\"You're not getting this. You're telling me what you think, not what you feel. One last try. Someone calls your wife....No someone calls your daughter a worthless slut. How do you feel?\"\n\n\"STOP THIS. Just stop it, I don't know alright. I don't know how I feel. It's like I've got some sort of insulation between me and the outside world. It filters all that out and gives me the stuff I can handle.\" \n\nThe tears were coming to me eyes as she put her arm around my neck and pulled my head to her breast. She was stroking my head.\n\n\"I'm sorry baby. I know it's hard but I have to know what's wrong before I can help. Have you got anywhere you need to go today or shall we just spend the day in bed. If you can bring your best game I know I'll enjoy it.\"\n\n\"I've got to go to mum's for Sunday lunch she'll be expecting me.\"\n\n\"Will she mind if you bring a friend?\"\n\n\"Probably not, I'll give her a call and find out.\"\n\n\"Good then we'll get up and I'll start the breakfast while you have a shave and a shower.\"\n\nWhen my mother opened the door to us, she couldn't believe her eyes. She stepped back to look at me then rushed forward to grab me.\n\n\"You've cleaned yourself up. Thank god for that. Come in.\" We both walked in and mum looked up at Percy. \"And who is this young lady?\"\n\n\"Oh sorry mum this is Percy or Captain Persephone Marshall if you want to be formal.\"\n\nShe gave Percy a big hug. \"I'm very pleased to meet you dear. Are you the one responsible for this?\" She asked pointing to me.\n\n\"Hello Mrs Styles. Yes maybe a little. I only got here yesterday.\"\n\n\"Well if that's the difference you can make in one day, you'd better stay for a while.\"\n\n\"I intend to Mrs Styles, don't worry.\"\n\n\"Percy's under orders from Lady Caroline.\" My mother loved to think that I knew titled people so it was always Lady Caroline when I spoke to her.\n\n\"I was coming anyway. Caroline just pushed me along a bit.\"\n\nWe had lunch and I managed to eat a little more than usual but not enough to satisfy mother.\n\n\"I see you haven't got your appetite back yet.\"\n\n\"I'm working on that\" said Percy. My mother looked at her and seemed to be struggling to find the words she wanted. Eventually she spoke.\n\n\"I'm sorry my dear, I really can't call you Percy. That's a man's name, it makes you sound all butch, and I can see you're not. I don't mean to offend you, but is there something else I can call you?\"\n\n\"You sound like daddy. Persephone was mummy's idea and daddy always hated it. When people started calling me Percy it was too much for him. He used to call me Sephie. You can call me that if you like.\"\n\n\"Sephie.\" said mother looking at Percy. \"Hmm, well it's a lot better than Percy, it suits you.\" \n\nAs we were about to leave Percy went to use the bathroom. Mum squeezed my hand.\"You've got a good one there son. You want to hold on to her.\"",
        "\"Mum she's 32, I'm 45; what interest could she possibly have in me? We're friends, that's all.\"\n\n\"Well call it wishful thinking if you like, but I see more than that. I'm telling you, you could do a lot worse.\"\n\nOn the drive back home Percy was bright as usual. \"I like your mum, she's so natural and she's worried about you.\"\n\nI started to smile.\n\n\"What?\" asked Percy\n\n\"It's nothing.\"\n\n\"It must be something, that's the first time I've seen you smile since I got here.\"\n\n\"It's just mum matchmaking. I told her you were out of my league.\"\n\n\"And how do you know that?\"\n\n\"What?\"\n\n\"You don't know what league you're in until you start playing the game, and you my friend, haven't begun to play the game yet.\" \n\nWhen we got home we started work on the house she tidied and dusted while I went round with the vacuum cleaner. By the time evening came upon us, it was back to the state that Penny would have found acceptable. We sat on the Sofa. Percy's head was on my shoulder and we both had a glass of wine. She snuggled up to me.\n\n\"That was a lovely and very productive day. This place looks more like a home now. There is only one problem. --It looks like her home doesn't it.\"\n\nI looked around at the photos, ornaments and nick knacks. All Penny's, nothing of mine on show at all there were ornaments I'd bought her for her collection. There were photographs of the two of us, some of the children, but nothing that showed that I lived there. \n\n\"I don't see you with any of this. I see you as a man with books on the shelf not ornaments. What about all these cushions?\"\n\nI pulled one out from behind me. \"I've always hated them. Unnecessary clutter as far as I'm concerned. I think Penny thought that you couldn't have too many cushions,\"\n\n\"Well it's your house now. It's time to make your mark on it. Sweep away the old life and start again. We'll start tomorrow after you've seen the doctor.\" \n\n\"I don't need to see the doctor, there's nothing wrong with me.\"\n\n\"Yes there is, and you are going to see him tomorrow.\"\n\n'You'll be lucky' I thought as I imagined Percy doing battle with the doctor's receptionist. She stood up, taking my hand and indicating that she wanted me to get up. \n\n\"Come on.\" she said.\"I'm tired; it's time to turn in.\"\n\nThat night as I spooned into her my hand fell down onto her naked breast. She put her own hand on top of it and pushed it hard against her. Little Drew was not responding, but I loved just holding her.\n\n\"Percy.\"I whispered. \"My mum was right; you're much too feminine to be called Percy. Can I call you Seph or Sephie? She turned her head towards me. \n\n\"Are you saying you want to be my daddy?\" \n\n\"No of course not I just think Sephie suits you better.\"\n\n\"As long as you hold me like this, you can call me anything you like.\"\n\nI knew what she meant there was tremendous comfort in holding her. I even felt a certain stirring down below, something I hadn't felt since Penny went back to Romania.\n\nI was up and about early again the next morning. I left Sephie, in bed. Just because I couldn't sleep past 4.30 am there was no need for her to be up. Something she'd said the previous night was eating at me. She was right, this is my damned house, I thought, and I'm going to take it back. I went out to the garage and found a box and some newspaper. The first thing to go was Penny's collection of frog ornaments. I wrapped each one in newspaper and put it into the box. With everyone there was a memory, and some brought tears to my eyes, but I carried on. I'd finished the frog collection and started on the framed photographs when I heard her behind me.\n\n\"We only cleaned this place yesterday, what are you doing?\"\n\n\"I'm boxing up her life, to make room for mine.\"\n\n\"That sounds like a good idea, but don't you think you should have put some clothes on first.\"\n\nI looked down at myself and realised that I was stark naked. \"Oops\" was all I had to say.\n\nSephie laughed at me. I looked at the clock and was surprised to find it was already 8:20 am.\n\n\"I'll go up and have a shower and get dressed\" I said.\n\nAfter a longer than normal shower, and a quick shave, I got dressed and went back downstairs. I was just in time to hear one side of a telephone conversation.\n\n\"I don't care what the rules are. He needs to see a doctor and he needs it today.\" I knew she'd have this sort of trouble.\n\n\"OK so who makes the rules, put me through to them. -- To hell with the practice manager, let me speak to the senior partner.\" She put her hand over the phone.\n\n\"Breakfast is on the table.\" she said. She returned to her call.\"OK, he can talk to me now or be talking to the chairman of the Primary Healthcare Trust before lunch. Ask him which it is to be?\" There was a long pause before she spoke again. \"If it was physical I'd have taken him to the hospital.\" Another pause \"Look Mr Styles needs to see a doctor today. If you insist on prevaricating I will hold you personally responsible for anything that happens to him. -- Yes 12 noon will do fine thank you.\"\n\nShe came to the table and sat down.\n\n\"Was all that strictly necessary?\" I asked.\n\n\"I think it was. You need some medication. The sooner you get started on it the better. I can help you with most things but I can't prescribe medicine.\" \n\nAt the doctor's surgery, I felt like a little boy having mummy come in to talk to the doctor. As it happened it was a good job I did because Sephie told him a lot more than I would have. He seemed very interested in the out of body feeling. He told me I was suffering from shock and depression and thanked Seph for bringing me in. He wanted to talk to her about her battlefield nursing, but time constraints meant that we had to leave. The doctor gave me a prescription and advised me join a gym and see a counsellor. I told him that was no problem as the college provided both. \n\nWhen I took my certificate in to work, Bob took one look at me and said \"Thank god your back.\"\n\n\"I'm not coming back for a month Bob. The doctor signed me off.\"\n\n\"If it means I get the real you back, you can take another month.\"\n\n\"I hope one will be enough.\"\n\nI went home to finish boxing up ornaments and picture frames. It was partway through the second day before I had all traces of Penny boxed up and in the garage. I'd even moved out the glass fronted display cabinet, she used to display her Clarice Cliff tea set. I sat down at my desk and wrote a letter asking her what she wanted to do with it all. \n\nIt took about three days for the medication to start kicking in and I started to feel more connected to real life again. The daily workouts at the gym were actually making me feel better and giving me an appetite. Sephie came with me to the gym and little Drew started to get excited when I watched her on the rowing machine. The house was looking somewhat bare after my purge and I was considering what to do with it. I decided to completely redecorate and buy new furniture. Out would go the flowery fabric sofa and chairs and in would come a leather chesterfield and a recliner. With the furniture ordered we started on the painting. It was while we were painting the living room that the second phone call came.\n\nI knew who it was as soon as the operator asked for my name. \"I have a call for you,\" the operator said in a very thick Romanian accent. Penny came on almost immediately.\n\n\"Oh Drew, Drew how could you?\" I thought this had something to do with clearing out her belongings.\n\n\"How could I what?\"\n\n\"I know you were upset, but I never thought you'd be this vindictive.\"\n\n\"Penny, it would help if I knew what the hell you are talking about.\"\n\n\"It's Ion. He's been sacked. They said it was because his relationship with me was not professional.\"\n\n\"Why would that have anything to do with me? You told me you'd given him his marching orders.\"\n\n\"Well we might have had dinner together once or twice.\"\n\n\"And I'll bet that was followed by breakfast the following day.\"\n\n\"Aren't I entitled to some male company? After all you made it clear you don't want me any more.\"\n\n\"Are you surprised? I gave you the chance to explain and all we got was lies, with you trying to convince everyone that it was my fault. That I'd got it all wrong.\"\n\n\"Even so, you didn't have to report Ion to my bosses. Now I've got a crabby old woman for an interpreter And Ion can't get another job, he thinks he's been black listed.\"\n\n\"Well I am sorry.\" I said, my voice dripping with Irony. \"It couldn't happen to a nicer bloke.\"\n\nSephie took the phone from my hand.\n\n\"Now listen to me you selfish bitch. Drew has a lot more to worry about than whether your toy boy has a job or not. What's the problem? I'm sure you'll keep him in the manner to which he wants to become accustomed.\"\n\n\"You swan off to Romania leaving a broken man behind you, and all you can worry about is your lover's job. Now go back to riding your boyfriend and leave us alone. (pause) Don't give me any of that. I was there. I know what happened. --Nice tits by the way.\"\n\nShe put the phone down.\n\n\"Selfish Cow\" she said.\n\nWe stood there looking at one another without saying a word. Her eyes softened as she looked at me, I could feel a smile spreading across my face. We moved closer and as we did the laughter started. We fell into each other's arms, still laughing.\n\n\"Did you just tell my ex-wife, she has nice tits?\"\n\n\"I did.\" she giggled \"I should have said for your age.\" we giggled some more.\n\n\"Did you mean it?\"\n\n\"Yeah, of course. They didn't sag much and they're bigger than mine.\"\n\n\"I'm not so sure about that, I think I need to look at yours to compare them.\"\n\nShe pulled off her paint daubed tee shirt, reached behind and unclipped her bra. She brought her arms forward and let the bra fall to the floor. I just stood looking at her with my mouth open.\n\n\"Well.\" she said \"what do you think.\"\n\n\"Maybe a little smaller, but absolutely gorgeous.\" \n\nI moved my hands up to cup them and as I did I brushed my thumbs across her nipples. They immediately started to stiffen. She moved her hands up my arms and suddenly we were locked in a passionate embrace. I felt her pulling on my tee shirt so I leaned forward to allow her to pull it off. We tugged at each other's waistbands and in no time we were both naked rolling around on the dustsheets, picking up all the spots of paint we'd dripped on them. Our tongues danced the tonsil tango as we lay side by side in a tangle of arms and legs. I rolled her onto her back and used my mouth to re-examine her breasts. She took my head in her hands and pulled it hard to her breast.\n\n\"Oh yes, Drew. Make love to me.\"\n\nI climbed between her legs, happy to note that little Drew was standing to attention. As I entered her she let out a huge sigh. As I slowly moved in and out of her she pulled my head down to kiss me. I could feel her fingers moving deftly across my back. I found my self driven to push down harder into her with every stroke. She arched her back and her hands came down to my arse pulling me harder into her. Her loud grunts gave away the fact that she was having an orgasm. I paused for a while buried deep inside her as she came down from the ecstasy. I rolled over bringing her over on top of me. I pulled her arse cheeks apart slipping my finger in to stroke her rosebud anus. The result was renewed thrusting.\n\n\"Oh my god, Drew. Oh my god, Oh my god.\"\n\nMy finger entered her anus and her shouts became incomprehensible as the thrusts became harder and the grip got tighter. I'd tried to hold back as long as I could but as her body started to shake I felt my juice pumping into her. She lay on top of me as she came down from her orgasm. I could feel the moisture on her back as I moved my fingers gently across it. She lifted her head and kissed me.\n\n\"I've said it before and I'll say it again. That woman must be crazy.\"\n\n\"But she does have nice tits.\"\n\nShe laughed at me. \"Yes she does, but I'm glad you're playing with mine.\" \n\nUp to that point I'd been unaware that I was stroking the side of her breasts. I moved my hands up and stroked her shoulders and massaged her neck.\n\n\"Do you know? I could lie like this forever.\"\n\n\"It's alright for you; you haven't got the lid of the paint tin under your arse.\"\n\n\"I rolled over on top of her and she ran her hands down over my arse. She found the lid and pulled it off. \n\n\"Now you'll have a big grey circle on your bum. --Perhaps we ought to go up and have a shower. I'll clean the paint off you.\" \n\nIt turned out we both had paint on us but it came off fairly easily. I joked about buying some red paint and coating her body with it so that I could roll her along the wall. It quickly degenerated into game of chase me which somehow ended up with us lying naked on the bed. We didn't get much more painting done that day. For the first time, since before Christmas, I felt happy. \n\nShe stayed with me for a month before she had to leave to go back to her unit in Catterick. I didn't know whether to laugh or be offended when she told me how she'd secured her leave. She told them she needed compassionate leave to go home and nurse her father back to health. \n\n\"Why did you do that? I don't mean why did you tell them that. I mean why did you come? A girl like you must have hundreds of young men queuing up to be with you. Why did you waste your time on a boring old fart who can't even hold on to the woman he had?\"\n\n\"First of all will you stop calling yourself old. You are not old. Second I came here because I wanted to. I like you Drew, I really do. I thought I'd made that abundantly clear. Yes there are other men, there is even one particular man, but he's in the army too and we don't get to see a lot of each other. While we are a apart we have a sort of \"Don't ask, Don't tell\" agreement. I know that makes me sound promiscuous, but I'm not. Apart from Clifford, you are the only man I've slept with in two years. If I thought...\"\n\nShe didn't seem to be able to finish what she wanted to say.\n\n\"If you thought what?\" I asked\n\n\"It doesn't matter. What I'm trying to say is that I'm finding it very hard to leave, but I have to go. We are still friends and I want to keep in touch. We can get together from time to time. I really care for you Drew, but I have to go.\"\n\nAfter she left we tried to Skype each other every night and whenever possible one of us would travel to be with the other. I was eating properly and still using the college gym, and soon put some of the weight back. This time it was in all the right places. When David and Phoebe came home for the summer break they found a new home and a new dad. When I met Phoebe at the station she gave me a double take.\n\n\"Wow Dad, you look so fit. What happened to you?\"\n\n\"I stopped feeling sorry for myself and started on building a new life.\"\n\n\"Well whatever you are doing, you should keep it up. I've never seen you looking so good.\"\n\n\"Just wait till you see the house.\"\n\nShe filled me in on the happenings at university. We got home and as I took her through the front door her jaw dropped.\n\n\"This is amazing.\" she went into the living room then the dining room.\n\n\"It's all so ... so ... I don't know, so you.\"\n\nShe looked along the shelves which once held ornaments. \"All your favourite books I see, and I like the pictures. It's all so different, sort of minimal. Not my taste maybe but anyone who knows you would know this is your house.\"\n\n\"You'll be glad to know, your room is exactly how you left it.\" \n\nDavid was far less effusive. He walked into the living room and said, \"Whatever happened to your hatred of decorating?\"\n\n\"I had a bit of help.\"\n\n\"You must have. Who ever it was did a better job of motivating you than mum ever did.\"\n\n\"Strangely enough your mother provided a lot of the motivation.\"\n\n\"Yeah, well perhaps the less said about that the better, eh Dad? --Still, it looks good, sort of up market bachelor pad.\"\n\nThe two of them spent some time catching up during dinner. It wasn't till we sat drinking coffee that things began to open up. I could tell that Phoebe had something on her mind so I asked what it was.\n\n\"I've been speaking to mum.\"\n\n\"Well of course you have, she's your mother you should be talking to her.\"\n\n\"She's getting married Dad, at the end of July. She's asked us to go out for the wedding.\"\n\n\"I'm not going.\" said David.\n\n\"Well I can't say I'm surprised, but it's not my business anymore. I didn't expect an invite but I don't want to be there and see her make a fool of herself.\"\n\n\"Well I've told her that I can't see why she is in such a hurry. I mean she can't be pregnant can she.\"\n\nI almost sprayed my coffee over the pair of them.\n\n\"I somehow doubt it's your mother who's in a hurry.\"\n\n\"Well if it's her husband he'll be the first man I've ever met who's in a hurry to get married.\" Phoebe said.\n\n\"I guess it's Ion Damanescu that she is marrying and he'll definitely be in a hurry.\"\n\n\"But why Dad I don't understand.\"\n\n\"He's in a hurry for an entry visa. Lovely as she is, it's not your mother he wants. If they've been married for a year, he will get automatic right of entry to the UK and can apply for permanent residency. It breaks my heart to see her falling for it, we were warned often enough.\"\n\n\"You still love her don't you Daddy. I know she loves you. Can't you just hop on plane, go out there and bring her back?\"\n\n\"How can you ask that? You were here when she sat and told a pack of lies. She tried to pretend it was all a misunderstanding and that I'd overreacted. She told me she'd kicked him out, now she's marrying him. How can you expect me to trust her again?\"\n\n\"She thinks you've cast her off. After all you did divorce her. She doesn't want to be left alone that's all. I know that if she thought there was a chance she'd be back here like a shot.\"\n\n\"Well if she doesn't want to be alone, she's marrying the wrong bloke.\" I looked at David. \"You're being very quiet over there, don't you have anything to say about it.\"\n\n\"Not really, no. If she wants to marry him then more fool her. Any man who can seduce a happily married woman has no principles. They're welcome to each other. I'm not going to be there to see it.\"\n\n\"She's still your mother David. I don't want to see you cutting yourself off from her.\"\n\n\"Well if you say she is Dad, I've got to believe it. All I can say is that she hasn't been acting like my mother this last year.\"\n\nThey both went out that night and left me to my own devices which meant calling Sephie. I can't say that the news about Penny didn't disappoint, but it was not my problem anymore. In mid July Phoebe set off for Bucharest. When she got back, she told me the wedding went off without a hitch, but was reluctant to say anymore. I got the impression that something had happened but she wasn't saying anything.\n\n<center>*****</center>\n\nSomeone was shaking my leg. Gary Glitter was on the radio singing about his Rock and Roll Christmas.\n\n\"Come on, wake up sleepy head. I need your help.\"\n\n\"What? Where are we?\"\n\n\"We are just coming up to the Dartford Crossing. I need you to get some cash together for the toll.\" \n\nI delved into my pockets and pulled out a handful of loose change. \n\n\"Dartford already? That was quick.\"\n\n\"It certainly was not, the traffic has been awful. It feels like it's taken ages to get this far. You've been asleep that's why it seems to have been quick.\"\n\nI counted out the money and made sure we had exactly the right money for the toll. We moved onto the Queen Elizabeth Bridge and she looked at me.\n\n\"I don't know what you were dreaming about but it seemed like fun, at one time I'm sure you were laughing.\"\n\n\"It was not so much of a dream, more of a memory.\"\n\n\"Well I'm glad there are some happy memories.\" \n\nShe wound down the window as we approached the barrier. I passed her the cash; she dropped it in the trough and started to wind the window up.",
        "\"Why didn't we just stay together then, instead of wasting so much time?\" She asked as we moved off again.\n\n\"I don't know really, I didn't really believe we could make it work. I mean you had him, and your career. You do realise that my confidence was totally destroyed. I mean my wife took up with a younger man. I felt old and useless.\"\n\n\"Yes, I don't think I realised how much that had affected you. Still we had good times to remember.\"\n\n\"They were good times weren't they?\"\n\n\"Yes they were, and now we are going to have many more.\" She reached over and squeezed my hand.\n\nThe Ronettes were singing I Saw Mommy Kissing Santa Claus as we turned onto the coast bound A2. I settled back in my seat remembering the last time I dressed up as Santa Claus. Nobody Kissed me. My eyes closed and my mind drifted back. \n\n<center>***</center>\n\nI'd been dreading my first Christmas as a divorcee. I had no idea what Penny was doing and I had a horrible feeling that she might try and gatecrash our celebrations with her new husband. In the end she opted to stay in Bucharest Both Phoebe and David were invited to go out there at her expense, but both turned it down. Phoebe told her it wouldn't be worth flying out because she wanted to spend some of the holiday with me. I watched her as she put the phone down.\n\n\"If they think I'm spending more than a day in that man's company, they've got another think coming.\"\n\n\"You make it sound as if you don't like your new stepfather. I would have thought you would get on, you're in the same age group.\"\n\n\"Yes but he's married to my mother, something he seems to forget from time to time.\"\n\nShe wouldn't expand on the comment but it didn't leave much doubt in my mind as to what had soured the wedding for her.\n\n\"Never mind, there's always next year. They'll be living in Britain by then.\"\n\n\"You really think you've got it sussed, don't you Dad? Mum loves her job and she likes Romania. What makes you think she'll quit?\"\n\n\"I've read the same text book he has. My guess is they'll come over for David's graduation. She'll probably have a few interviews lined up with the hope of being able to go back and tell them she doesn't want to renew her contract. They'll be back in Britain by September.\"\n\n\"Daddy you're so cynical.\"\n\n\"Yes and it's putting a damper on things, so lets get on with preparations for Christmas. I know your Gran is looking forward to having us all together, I thought we would have her come here this year. She won't feel she has to do so much in someone else's house.\"\n\nChristmas almost went off without a hitch. I say almost because I did have three phone calls. The first came from Lady Caroline, a nice touch I thought. She was checking to see how I was, knowing Christmas would bring memories. Next to call was Sephie. Mum gave me a big grin when I said I would take it in the bedroom. Sephie was spending the holiday with her parents and rang to say thank you for her present. We must have spent half an hour on the phone. We never seemed short of things to talk about. She asked me to pass best wishes on to mum before hanging up. I'd just put the phone back on its base station when it rang again.\n\n\"What have you been up to I've been trying to get through for ages I nearly missed my slot.\" said an all too familiar voice.\n\n\"I'm sorry Penny; I forgot to put my life on hold in case you rang.\" I could hear her calling my name as I put the phone down on the table and called Phoebe and David. Mum looked a bit concerned so I went and sat next to her.\n\n\"A certain young lady sends her best wishes for Christmas.\" I said. Her eyes lit up.\n\n\"Do you mean that nice young girl who used to come for Sunday lunch?\"\n\n\"That's the one.\" I reached under the sofa and pulled out a parcel. \"She also asked me to give you this. She said she knows it's not much but she wanted to get you something that you would enjoy.\"\n\nMum opened the parcel and found a small tin of Shortbread biscuits from Fortnum and Mason's.\n\nTears came to her eyes.\"How did she know they are my favourites? And look they're from Fortnum's\"\n\n\"She's a very observant girl, Mum. Of course they came from Fortnum's. She said they had to be fit for a queen so she went to the queen's grocer.\"\n\n\"Now I know you're mucking about.\" she said wiping the tear s from her cheeks.\"Now just behave yourself, you're not too big for a slap you know.\"\n\nI was holding my hands up as if I was protecting myself from mum but I was watching Phoebe who seemed to be having a hard time with her mother.\n\n\"No I can't bring him to the phone. He's in the shower, I don't think dad wants him dripping all over the carpet. -- Well if we'd known you were going to call I'm sure he'd have got up earlier. -- No mum you don't have to make an appointment to talk to your children. You just have to accept that surprises don't always work out as you plan them. Just ask Dad. --No. I'm sorry I shouldn't have said that. --Look perhaps if you rang back later. -- Oh I see.--Yes, Merry Christmas to you too.\"\n\nAs she put the phone down I slipped my arm around her shoulders. She reached up and took my hand.\n\n\"They're going to Ion's parents for lunch and she forgot the time difference.\"\n\n\"Is David really in the shower?\"\n\n\"No he'd just got out when you called. I couldn't tell her that he didn't want to talk to her.\" she buried her head in my shoulder.\"It's so horrible being piggy in the middle Dad. I know she's the one in the wrong, but she's my mum and I love her.\"\n\n\"Of course you do.\"I said stroking her hair. \"And so you should. Leave David to me. If he doesn't want to talk to her then he can tell her himself.\"\n\nI waited for her to dry her eyes and asked if she and her Gran could finish cooking Christmas dinner. When she said she could, I called up to David.\n\n\"David. Get your arse down here; we're going down the pub.\" He started to protest but I soon stopped that. \"You're coming with me or you're feeling the rough end of your Gran's tongue. Which is it to be?\"\n\n\"OK. OK. I'm coming.\" \n\nHe didn't take kindly to being told to man up. As we walked to the pub his head was down as he suffered the lecture.\n\n\"I thought I brought you up better than that.\" I said. \"If you've got an issue with your mother you damned well tell her about it. You do not hide behind your sister.\"\n\n\"I wasn't.\"\n\n\"Yes you were. Tell her I'm in the shower you said. She's your mother. She brought you into this world. The least you owe her is an explanation.\"\n\n\"How can you be on her side after what she did to you?\"\n\n\"I'm not siding with her. If I'm siding with anyone it's your sister. She still wants a relationship of some kind with your mother, and you're making it pretty difficult for her.\"\n\n\"So what am I supposed to do, tell her to piss off?\"\n\n\"If that's the way you feel, yes.\"\n\n\"I can't. I can't do that to her dad.\"\n\n\"Then you can do what your sister does, try to remain friendly or do what I do, be civil to her, treat her like any other person you know. What you don't do, is to get your sister to lie for you. Are we clear on that?\"\n\n\"Crystal clear, Dad. I suppose that means you want me to get the beers in.\"\n\nI slapped his back. \"Since it probably comes out of my pocket in the long run, I'll get them in.\"\n\nI was pleased to see that David's first action on getting home was to give his sister a hug and an apology. The rest of the holiday went well and I even got to see Sephie at New Year.\n\nBy Easter David was starting to get a little stressed with final exams coming up. He also had to decide what to do about graduation. It was to be held in the cathedral, each student was only allocated two tickets.\n\n\"I've been thinking about what you said at Christmas. I think I'd like to give mum a chance to come to my graduation. I only get two tickets so you might find yourself sitting next to her if she comes. Would that be alright with you?\"\n\n\"No problem for me.\"\n\n\"Well, of course, she may not come.\"\n\n\"She'll come alright, but she'll want to bring arsehole with her.\"\n\n\"She'll be out of luck then, I only get two tickets and you're having one\"\n\nSure enough on a bright July morning I found myself standing in the cathedral waiting for the graduation ceremony to start.\n\n\"You're looking well.\" she said as she took her seat. \"The single life must agree with you.\" \n\n\"It has its moments.\" I looked her up and down.\"You're looking ... well, tired, if I'm honest.\"\n\n\"I'm not surprised we didn't get in till 3 am.\"\n\n\"Well I hope you took plenty of water with it.\"\n\n\"Don't be sarcastic; you know I'm talking about the flight.\"\n\nA hush fell over the congregation as they introduced the honorary doctorates being awarded to the great and the good. Each of those honoured gave a short speech, and then the first round of graduates filed in. As they did Penny tried for a bit more conversation.\n\n\"You are still single then. I seem to remember a woman talking to me when I called you at home.\"\n\n\"Oh yes, still single, you know what they say, once bitten twice shy.\"\n\n\"I suppose I asked for that. I thought perhaps a woman was responsible for the new look. You never looked like that when we were together.\"\n\n\"Well since you ask it was a woman that caused me to lose weight. I went to surprise her for Christmas and found her shacked up with another man. It's amazing what something like that can do to you.\"\n\n\"Really Drew, can't we put all that behind us? I've married again. I've moved on. Isn't it time you did the same?\"\n\n\"I have, I've moved on so far that I told David it was OK to invite you.\"\n\n\"You mean he asked your permission to invite me?\"\n\n\"Not permission as such but he did ask if I was alright with it.\"\n\n\"But you haven't moved on enough to let him send a ticket for Ion. He was very hurt you know. He'd have loved all this.\"\n\n\"David only got two tickets. You didn't seriously expect me to miss my own son's graduation so that Ion could see the ceremony.\"\n\n\"Oh! I'm sorry, I didn't know.\" \n\nThe university chancellor took his place and the graduation ceremony proper, got started. David's group, the Computer Science students were the last group and so we had a lot of applause to get through before the sight we'd come for, our son being presented with his degree and being welcomed to the university rolls. Once it was all over we all filed out into the sunshine. Penny didn't seem to be able to take her eyes off me. In the end she had to say something.\n\n\"I just can't get over the change in you. I mean it's only eighteen months and you look so different. --It's a good difference though.\"\n\nIn no time at all David found us. Still wearing his board and gown he posed for photos with me and then with his mother. Another parent saw us taking turns being photographed with David and insisted on taking a picture of all three of us together. When things calmed down David thanked Penny for coming.\n\n\"I gather I have to thank your father for the invitation.\"\n\n\"That's not what I said, and you know it.\"\n\nDavid calmed things down. \"I asked dad if it would be alright with him if that's what you mean. To tell you the truth Mum I wanted you here. I wanted to share this with you and dad. You've both helped to get me here, but if it had been a choice, it would have been Dad.\"\n\n\"Well that's put me in my place.\"\n\n\"Sorry mum but you asked.\" \n\nI tried to smooth things over. \"Why don't you go and disrobe then I'll buy us all lunch?\"\n\n\"I can't I'm afraid. I'm meeting Ion for lunch.Unless, of course.......\" She didn't finish the sentence, She saw the look on both our faces and knew the answer was no.\n\nOh well then, I'd better run.\" she said, then turned to David. I'll see you again soon darling. We're over here for a couple of weeks now. Then we are moving back permanently in September.\" She gave David a kiss on the cheek then nodded towards me and left.\n\nDavid and I just looked at each other. David shook his head. \"I just hope your wrong Dad.\"\n\n\"So do I Son. So do I.\"\n\nDavid spent a couple of weeks at home, and then went on a European trip before he started work for a large software house in London.\n\nPenny did return in September bringing her young husband with her. I heard about it from Phoebe but she never spoke in detail. I did find out that she'd landed quite a good job with a children's charity working in the UK. I never heard about Ion and didn't much care. For a while I didn't see anything of either of them and that was the way I liked it. \n\nI was still happily carrying on a long distance relationship with Sephie. It wasn't ideal but we managed to get together now and then, and made regular Skype calls. I would have loved to be with her more, but service personnel have to go where they are sent. At least that's what I told myself. At the back of my mind there was also the spectre of Clifford. Sephie never spoke much about him but I guessed he was closer to her age than mine. There is something about being replaced by a younger man that makes you sensitive about age. I kept reminding myself that we were just having fun and that I should enjoy it while it lasted. \n\nAs Christmas approached I began to notice some changes in the relationship. Sephie seemed to have something on her mind but didn't want to share it with me. After a while I felt I had no alternative but to ask outright what the problem was.\n\n\"Are we alright Seph? Is there something you're not telling me?\"\n\n\"Well there is something, and I'm not sure how it will affect us. I'm being sent to Germany in the new year.\"\n\n\"That's not a problem is it? You'll still get leave and it'll soon be over. How long will you be there?\"\n\n\"Two years. Yes I'll get leave but it's not much, only six to eight weeks in a year. I don't know what to do.\"\n\n\"There's not much you can do is there? I mean if the army says go, you've got to go.\"\n\n\"I could resign my commission; get a job in the health service.\"\n\n\"But you love the army life and you'd have difficulty slotting into a nursing job at the same level. You can't seriously tell me you want to sacrifice your career?\"\n\n\"That depends on what's here for me.\"\n\n\"I can still fly out during the college holidays.\"\n\n\"So you don't want me to resign.\"\n\n\"Well of course I'd love for you to stay here, but you can't give up your career for me.\"\n\n\"Well I suppose we can carry on the same. We'll still have Skype won't we?\"\n\n\"Of course we will, I'll talk to you everyday.\"\n\n\"Of course.\"She said, and kissed me. \n\nI didn't know what it was, but something was definitely different between us that weekend. Physically it was just the same but something, something I couldn't quite put my finger on, was missing. Following the weekend was Christmas. Sephie spent the holiday with her family and I spent it with mine. That is I spent Christmas day with my family. Boxing Day it was just Mum and me, David and Phoebe went to spend the day with their mother. I tried to call Sephie but she didn't answer the call. It worried me a bit and I must have been thinking about it when the children came home. David asked what was wrong but I just told him that I'd missed them. Phoebe saw through me. The next day at breakfast she pinned me down.\n\n\"What is it Dad? You've been quiet all last night and you're still not really here now. Is it because we went to see Mum yesterday?\"\n\n\"No, of course not, you should see your mother when you want to; I've just got something personal on my mind.\"\n\n\"Oh my god, Dad, You haven't split up with Sephie have you?\"\n\n\"There was nothing to split up we are just friends, you know.\"\n\n\"Yeah sure Dad. So if you are just friends why are you so withdrawn today?\" \n\n\"Things are just a bit weird right now. She's been sort of distant, and yesterday she didn't take my call.\"\n\n\"Tell me about it Dad.\" So I did. I told her all about the weekend.\n\n\"And you told her to go, I don't believe you Dad. Don't you know anything about women?\"\n\n\"No, I'm beginning to think I don't. I mean your mother and now Sephie, no I don't understand.\"\n\n\"Dad, she offered to resign her commission for you. She offered to give up the army that she loves, and what did you say? --You say 'Oh no don't do that' \"\n\n\"She didn't offer as such. She was just going through her options.\"\n\n\"Dad she was sounding you out, trying to see if there was any chance of a future with you.\" \n\n\"You mean I should have asked her to quit.\"\n\n\"No Dad. You should have asked her to stay. You should have told her you'd do anything to make her stay. You're in love with her aren't you?\"\n\n\"I don't know, I think I might be. I mean at first I thought it might be the old nurse patient thing. I mean it was her that helped me get over your mum. Now I love being with her. If I don't talk to her everyday I miss her like there is something missing in me.\"\n\n\"Have you told her that?\"\n\n\"No! She's a young woman she wouldn't want to be tied down to an old fart like me. Then there's Clifford, I know she's still involved with him, I'm just a way of filling time while he's not there.\"\n\n\"I don't believe that Dad, not Sephie, she's not that kind of woman. I'm sure she really cares for you.\"\n\n\"That maybe so, but what right do I have to step in and ruin the life she's planned for herself?\"\n\n\"Dad, don't you think that should be up to her? You've got to tell her, Dad. Tell her how you feel. Go and see her tell her you want her to stay.\"\n\nOn new years day I was on the A1 driving past the Doncaster turn off when my phone rang. When I saw the call was from Sephie I switched on the hands free. \n\n\"Hello Sephie, I'm on my way to Catterick I should be there to meet you from the train.\"\n\n\"What? No. Don't do that. I won't be there.\"\n\n\"What do you mean? Why won't you be there? What's happened?\"\n\n\"They shifted our deployment forward. We shipped out on the 27th. I've been trying to Skype you but you're not online.\"\n\n\"Sephie, I'm driving right now. Can I ring you back when I've parked up?\"\n\n\"Sorry I'm about to go on duty and wont have my phone. Go home, I'll Skype you tomorrow. Bye.\"\n\nAt the first opportunity I pulled off the road brought the car to a standstill and called her back. The phone rang for a while, and then went to voicemail. I'd been intending to stand before her and lay my heart bare, to stop her leaving. Now I find she's already gone. I just sat there for a while trying to get my head around it. Eventually I turned around and started making my way back home. I was still feeling deflated when the Skype call came through. Sephie was happy and smiling. Just the opposite of the way I was feeling.\n\n\"What were you doing driving up to Catterick? We hadn't arranged anything.\"\n\n\"I was planning to surprise you when you got back, you weren't meant to leave for another two weeks.\"\n\n\"I know. I was called back from leave on Boxing Day, and we shipped out early. I'm sorry; there was no time to talk to you. --So was there a particular reason for you wanting to see me?\"\n\nThat was my chance. I could have told her that I loved her, that I wanted to be with her, that I wanted her home with me in Britain. That's what I'd intended to say to her the previous day. Somehow, things had changed; it was no longer a matter of asking her not to go. Now I'd be asking her to come back. It seemed different to me so I didn't tell her what I'd wanted to. Instead I gave a far more neutral reply.\n\n\"I just wanted to see you before you left.\"\n\n\"Ah that's sweet. I'm really sorry I wasn't there, but you can still talk to me whenever you want. --There's nothing wrong is there?\"\n\n\"No nothing special, I just missed you.\"\n\nI heard the sound of someone else in the room and Sephie turned to say something to the other person. When she turned back to the camera she looked a little embarrassed.\n\n\"I need to go Drew. We only got into our quarters yesterday, I haven't been shopping yet.\"\n\nWe said our goodbyes and I disconnected. I hadn't realised that tears were forming until the water started to run down my cheek. Phoebe saw me and came and sat on my lap."
    ],
    "authorname": "DeYaKen",
    "tags": [
        "infidelity",
        "politics",
        "driving",
        "romania",
        "christmas",
        "accident"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/driving-home-for-christmas-1"
}