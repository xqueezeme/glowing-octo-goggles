{
    "title": "Hunting the Hunter",
    "pages": [
        "And now for something completely different...\n\nHey there, this is a bit of random fantasy based on the Elderscrolls games put out by Bethesda. So yes, most of it, excepting the bits I messed with and made up, is the intellectual property of the fine people at Bethesda. Bethesda you're the bomb, please don't sue me or anything. ^^ \n\nOn another note, if you're a 'Fire' reader, this may or may not be your cup of tea. Considered yourself fairly warned, but you never know until you try. This also isn't a 'quicky', if you catch me, so be warned there as well. \n\nOther wise, have fun! Or criticize me brutally, whatever turns your twisted crank. ^^\n\n-enithermon\n\n*********\n\nA tiny drop of sweat coalesced somewhere under leather bindings and began to move, sliding in a halting zigzag along a pronounced collarbone. It shifted, collecting momentum, snowballing its way along the tendons of the throat, down over the chin, skirting the ear and tightly pulled wine coloured hair. It rested briefly at the inward curve of the temple, a shimmering stalactite reflecting ash grey skin and the cool blue glow of the ruin's ancient mana soaked walls. Long, leather bound legs tensed around a fallen ornamental column of smooth white stone, and slim dark fingers flinched against the taunt bow string, running a wave of tension through the dangling inverted body. \n\nThe tiny drop shivered, trembled, fluxed, and dropped. Blood red eyes watched the drop fall, a tiny blue star, and followed it with the glinting head of a steel arrow. The drop hit the mark's back, and the gray skinned ogre reared its head up to its source. It opened its razor toothed maw to release a terrible roar as it sighted its prey, his yellow eyes flashing ferociously. He let out a gurgling sound instead as the arrow pierced the soft flesh of his throat, and another as a second pierced the yellow glare of his left eye driving him to his knees and rending the soft tissue of his small brain. \n\nInanna nocked another arrow and waited. There had been three of these guar-brained monstrosities in the great hall, and if one had scented her, it was likely the others had too. She thought of all the curses she knew in every language she could think of to pass the time and draw her mind from the ache in her thighs and the blood slowly pooling at the top of her brain. Lucky for her she had a heart like a wild boar's and it pounded away, fighting gravity to keep her legs from growing numb. When she finished her list, and there was still no sign or sound that even her hunter's ears could pick up, she descended, dropping with a soft pat barely louder than her falling bead of sweat had made. \n\nShe salvaged what she could of her arrows, the one through the eye coming out easily. She managed to get a shallow one out of the shoulder as well. It was a lousy shot. She'd been aiming for the throat, but she consoled herself with the defense that she'd been running backwards over rubble at the time. She'd stupidly aimed the first two at the heart forgetting that the muscle there was so thick and hard even an Orc probably couldn't get a sword all the way in there. These creatures were a minimum of eight feet tall and practically as thick as tree trunks, and those were the runts. Ogre's were never armed, but they didn't need to be. If one of those fists ever got a grip on you it would snap you in half like a piece of stale bread, and a solid blow would turn your insides to scrib-jelly. \n\nShe wasn't even going to try to get the arrow out of his throat. She'd probably shred her wrist on his teeth getting it out. She cocked her head at the creature as she crouched over it, wiping her arrow heads off on its dirty loin cloth. The teeth would be worth something, she knew of alchemists who used them, but loosening them might take too much time. \n\nShe licked her lips and glanced at the entry to the grand hall. From somewhere inside came a long huffing howl. It was unsettling, but not worrisome. She'd hunted these things enough to know that it wasn't a sound of agitation. It did remind her that she didn't have leisure hours to sit around pulling teeth, and that it wasn't beasts she was hunting today.\n\nShe patted her rucksack to make sure nothing had shifted unduly during her little acrobatic display. The nimbleness was a relatively new skill, she used to be a hunter among her people, strong and fast. Home to her was a brutal and barren waste that made the body hard and the mind sharp, that or it killed you. Living in the shadow of the red mountain was a trial of will, and her tribe endured it enthusiastically. Her new career wasn't nearly so brutal or honourable. \n\nReally, it wasn't more than that of a glorified thief. The skills she'd learned as an Ashlander came in handy, but sometimes the situation, such as this one, called for slyness and a certain level of flexibility, both of which had been hard won skills born of necessity. She was Dunmer, the dark-skinned mer, and like most Dunmer was a skilled and natural death dealer, but when a thousand gold pieces are at issue, and you're working on a deadline, 'run away' quickly becomes a valid and practical option. She had what she came for and after several hours of hard and dangerous labour in the labyrinth of the ruins, now she just needed to tuck tail and get out before anything else decided to waylay her.\n\nShe took one last look at the hulking nine foot mass and took off at a light sprint. She'd come in this way and killed anything that might stop her already, so no need to maintain the any semblance of stealth. She lept up the steps to the exit, three at a time. The blood rushed through her legs satisfactorily and she slowed only as she approached the door. Time for stealth again, one never knew what would decide to make camp in the surface ruins. She could only hope the minotaur carcass she'd left on the doorstep would be discouragement enough while she got through with her business. The door opened up into a spiralling staircase and she immediately heard a voice. \n\n\"Bloody murder\" she whispered under her breathe, stepping over the minotaur, instinctively double checking that it was really and truly dead. This was the irritating part where she had to decide to stick her neck out or shoot first and ask questions later. Sometimes she preferred the ogres. There was no question about what they would do to her if she said good day. These folk could be friendlies, and she really didn't like shooting friendlies, but they just as easily could be something else. \n\nShe couldn't quite make out everything they were saying but she caught the words, \"tracks,\" \"the beast...this way,\" and \"in the ruins,\" and decided they were probably hunters. She held her bow up so the tip would be visible as she rounded the stairs, and be the first thing shot at if anyone had an itchy finger. No shots so far, that was a good thing. A couple second later she was pulling herself onto a crumbling pillar base and waving jauntily, bow still in hand. Somewhere far off to the left and out of sight a cry of alarm sounded.\n\nThat's when the shots started. Luckily she'd seen the man off and ahead to the right reach for his arrow and was already making for higher ground when it sliced through the air where her chest would have been. Her arrow was already in flight before his landed and caught him in the right shoulder, a decent enough shot to put him out of commission as a bow man. She couldn't see his face, but the names he was calling her told her it was a fellow Dunmer. \n\nShe grinned and swung her bow as she pulled another arrow and released it into the chest of a noisy Nord woman charging her from behind with a rather frightening looking battle axe swung over her head. Unfortunately she was wearing a plated chest piece and the arrow did little more than slow her charge. Which suited Inanna well enough because it gave her the extra second she needed to get a clear aim at her face, and get her bow pulled that much tighter for her second shot. She released just as the woman was close enough to split Inanna like a log and the pale fierce blue of her eyes was visible in the thumb thick gap in her visor. \n\nA thumb's width was wide enough and the Nord and her axe clattered backwards into the debris of the ruins before she got the chance. The noise was satisfying, but it also dulled her ears to a third assailant coming from her right who she caught out of the corner of her eye at the last possible second. She was able to avoid the blow of the sword, but it nicked her bow, sending it sliding out of her hand and skidding over a wall and onto a lower level of the ruins. It also knocked her off balance and put her on the ground. \n\n\"S'wit\" she cursed with a growl, and rolled on her shoulder away from a second quick blow that contacted with the stone next to her head and sent a ringing into her sensitive ears. She got a look at the face under the leather armour and saw a grinning khajiit standing over her, already swinging again. The cat-people were fast, and this looked like one of the big strong ones too. She rolled again, only this time towards his legs and managed to push out one of his --or perhaps her --legs throwing the arc of the blade off enough to save Inanna once more. The quick kitty gained its balance and laughed throatily. \n\n\"Be still dark one. Ma'jira want to help you meet precious ancestors.\" 'Definitely a female', Inanna thought as she redirected her foot from the groin to the knee, 'good thing she spoke up, I would have wasted a move.' This kick connected more soundly and the khajiit stumbled, opening herself up to a quick knife wound in the thigh which made her buckle even more. Inanna wanted to pull away, to gain her breathe, but then the cat could too, and if you had an opening on a khajiit you kept it open, that was rule number one. Number two was never let them get those claws into you, that's some nasty business there. She rolled up onto her feet, flanking her opponent and went for the gap under her leather helm, only to find she was too slow and was knocked off her feet with a wild back hand. She went sliding, and used the momentum to roll herself over the edge, hanging a second before dropping and diving for her lost bow, ignoring the taste of blood in her mouth. She'd been lucky it had been a backhanded swipe. \n\nAgain she was too slow and the pissed off kitty came flying after her. Inanna's instinctive reflexes saved her as she rolled on her back and delivered a two legged kick into the stomach of the pouncing female. It was a two in one. She knocked the air right out of her and sent her sword clattering to the ground and maybe even within Inanna's reach. \n\nShe didn't want to take the chance that it wasn't and clawed her fingers instead, thrusting her palm up against the khajiit's belly and let loose every ounce of destructive force she could muster on such short notice. She breathed hotly through her teeth as the wave of flame coursed out of her fingers and through the lithe feline body and blasted her away and off of her. \n\nDragging herself to her feet Innana snatched up the sword, and broke into a run. The Khajiit was still stumbling to her own feet. She was a tough one. The blast had injured her though, making her slow and disoriented. Inanna regrouped her energy in a single deep breath and charged with a feral shout, slamming into her adversary with every ounce of strength she had left, forcing the blade through the light leather armour and into soft flesh. The force of the blow sent the khajiit careening back, twitching and gurgling. \n\nInanna watched, panting a little from the exertion, before finally deciding to take pity on the writhing figure. She palmed another dagger and finished the job as quickly and painlessly as possible. She left the sword where it was, as it wasn't worth the effort of wrenching it out of the body. She moved to collect her bow, still breathing hard, feeling a little worn all of a sudden. She hadn't over stretched herself or anything, but if she didn't reign it in a little with the brute force nonsense she would soon. \n\nNo sooner had she bent to pick up her neglected weapon than she felt the fine hair on the back of her neck lift and her skin twitch as if a cool breeze had run over it. The air, however, was heavy and still. She moved slowly, lifting her bow into position, curving her body so that she could snatch the arrow and twist in one movement. Whatever was watching her was behind her, was close, and was quiet enough to be incredibly deadly. \n\nShe whirled, her arm arching, arrow in hand, nocking and aiming, pulling in one long fluid motion, and she saw it, huge, and right in front of her, less than fifteen feet away. Her fingers moved on their own, her body trained by rote to act without thought, and she looked into its eyes almost too late. The eyes shocked her...they appeared to be looking back, really looking, like they were somehow aware, and they were the most incredible shade of green she'd ever seen, set in a broad and tawny head. \n\nThere were no bared teeth, no tensed muscle, no sign of fear or aggression. An absurd voice inside of her screamed at her to turn the shot, sounding too much like a death wish. But gut feelings were what kept her alive, and she was very much a creature of instinct. At the last quarter-second she twitched, tilting her bow and let out a loud sigh as the arrow whispered harmlessly into the woods, landing in some tree with a soft thunk. The adrenaline was still pumping through her and she tried to keep her hand steady as she lowered the bow. If it was going to attack, it would have already, she'd just given it an opening.\n\n'It' looked like mountain lion, but it was much much bigger. The size of a big warrior Khajiit, but it was a quadruped. She'd heard of cat-people who walked on four legs, but this didn't strike her as that. It was too much like an animal, not a beast-man, and they were too far north for that weren't they? But its size was unusual, and those eyes. They were watching her in a way that was far too intelligent to be normal. \n\nShe'd hunted since she was a small child, and she'd never seen a look like that from anything she'd faced. Even the 'sentient' beasts like minotaurs and draugh didn't look at you like that, hell most bandits could even muster up that much thoughtful appraisal, just angry snarls or dumb looks of shock as you ran them through. Cats could be smart, but not that smart.\n\n\"Hello.\" She said softly, her voice still rough from the physical rush of the fight. Its head turned slightly to where her arrow had wizzed off to. \"I didn't have to miss.\" She offered, both as an apology and a warning, if it could understand her, and she had the very disconcerting feeling that it could. It locked eyes with her again, and she thought she saw...what? amusement? A sort of gleam? Was she going crazy? Too much time spent alone wandering around in the dark?\n\nThen out of nowhere the animal's relaxed stance changed and its body tensed, she knew that stance, it was going to spring...but its head was facing the wrong way...toward her, but not at her, behind her. A millisecond later her fingers where once again wrapping around an arrow and her body twisting in that old familiar pattern. This time she let the bolt fly without a blink of hesitation and tensed with a gasp as a dagger flew past her shoulder. It was a rough shot, not enough tension, and the arrow hit low, the hip or the leg perhaps, but she couldn't see where exactly because the former bowman was now a throat-less corpse under a great golden body. Leave it to a fellow Dunmer to get the drop on her. \n\nHer guard was back up, and she dropped into a crouch, crawling to a ledge for cover as she scanned the ruins for more movement. She'd been an idiot to let it drop, but she'd forgive herself for being distracted by the lion. She held her breathe and listened. All she could see was the still forest and all she could hear was the light click of claws on stone. She turned back to the big cat and found him already on his way over, circling her at a respectable distance. This one was a male, she noted as he circled. I hope that wasn't his girl I skewered she thought with a smirk. He licked his muzzle to clean the remaining blood and watched her, his body still tense and head lowered. \n\n\"That it you think?\" She whispered as she turned away to scan the woods and the clearing below the ledge. She still had her throat, so clearly, as bizarre as it was, they were on the same side. She turned back and he looked out past a low wall and lifted his head. She crawled over to the wall he seemed to be pointing to and peeked over the side, grimacing at the sight that greeted her. \n\nNearby was another, bigger, Khajiit with its light armour in bloody shreds and farther away a pale skinned man of some kind, she couldn't tell which, was slumped against a tree, his head attached in only the most technical sense of the word. There was a third body face down in the long grass. From this angle it was unrecognizable, but the awkward splay of the limbs was confirmation of its status as no longer among the living. She slid back down the wall and sat back against it, sizing up the odd beast.\n\n\"Well I guess it's two to three then...I'm calling the bowman a draw.\" She smirked, then winced as the adrenaline slowed and all the little aches and pains started rearing their ugly heads. Her face hurt the most. The Khajiit had really given her quite the knock. She felt her jaw gingerly for any damage worse than a few bruises. As she did the great beast edged closer with a lowered head and made her pause as she eyed him warily. He stopped when she stared back at him, no doubt having sensed her tense up with caution, and turned away instead, leaping up on a big stone block. He turned giving her one last long look, still thoughtful, before leaping off the other side.\n\n\"And then he was gone.\" She muttered, pushing herself up and taking a peak in her bag. Thankfully nothing inside was damaged, thank the ancestors for Ayleid craftsmanship. She collected herself, the rest of her things, and whatever gold she could find on the bodies...not like they needed it anymore, and started her long journey back to civilization. Thankfully Cheydinhal was the nearest walled city, and it was the closest thing she could call home next to the dump of a shack where she currently laid her head in the waterfront district of the imperial city. She'd have to pay for her bed there, but the place was crawling with Dunmer, so she usually got a decent meal and a cheap room without too much effort and a minimum of dirty looks or smarmy comments. \n\nShe pulled into town in record time having miraculously encountered nothing hostile on her way, not even an irate mud crab. Once or twice she felt the hairs on her neck stand up and she found a nice high rock to survey from, or take pot shots from, which ever became necessary, but never saw anything. She half wondered if that big cat was tailing her, but figured in the end she was just jumpy from all the excitement, and the overwhelming strangeness of the afternoons events. And it was strange. \n\nShe wracked her brain trying to come up with an answer for that weird cat and came up with none. She even considered Daedra...but she could only think of one daedric prince who might randomly traipse around mundus as an animal, and the beast that had helped her didn't look like a psychopathic poetry writing mad-god. Then again, what did that look like? She chuckled to herself. She'd had the honour of meeting the hero Nevarar, who had come to their tribe for guidance in the quest against the false gods of the tribune. And she'd --yes, she, and a Breton, who'd have thought it -- had had some interesting stories about that particular god. One involving a fork, a bull netch, and an insane Argonian lizard man...but that was neither here nor there, and it didn't involve smart green-eyed lions. ",
        "When she got through the gates it was still early, so she took a walk to let her blood cool a little and enjoyed the breeze the little streams created as they wound through the town, and the sight of the mournful willows bending into the waters among the lilies and hyacinth. It was a nasty town as far as the locals went, and as far as the count and his guards were concerned, but it was at least aesthetically charming. Very much a Dunmer town; beautiful and deadly. She ignored a couple of rough looking Orcs who gave her the eye as she crossed a bridge and sat on a little bank of grass and closed her eyes with a sigh, smiling at the warbling sound of some sad drunk, crooning off key songs about cliff racers. Ah, Morrowind, she still wasn't sure she missed it, but once in a blue moon she got a pang or two. \n\nSoon she'd have enough to get and furnish a place here, where she could get a taste of home without all the miserable blight, ash, and death that went with it. This last run should seal the deal, provided the count could be made amenable. She patted her satchel one more time and lay back into the grass. \n\n\"Fly, cliff racer fly,\" she sang under her breath along with the distant drunk, and chuckled as she looked up at the bright green and yellow leaves of the willow. Her chuckle faded and she sighed, her smile inverting as she once again considered those bizarre green thoughtful eyes. \n\n****\n\nThe Count was not amenable, or at least not without her having to jump through some pretty irritating hoops first. She had enough money of course, to purchase and furnish the place she had her eye on, but apparently the Count 'wasn't sure' he wanted to sell it just yet, but he might be more likely to if he had a certain rare goblet that was apparently in an abandoned ruin not even a quarter day's trek from the city. Lucky her. Bloody pompous Hlaalu sycophants, she never liked that house... no one liked that house, not even the Imperials who had used them to gain a foot hold in her home land when the fractured houses weakened enough to allow it. At least that's what the ones stationed outside Ald'ruhn always told her. Then again they were in Redoran territory, so it was best not to like the Hlaalu. But as the Temple Ordinators were fond of saying, they were all \"scum.\" Then again they said that to just about anyone really, it was apparently their favourite word. \n\nShe gritted her teeth as she jumped down from her perch in a twisted old tree. She'd been casing the ruin for an hour and had seen nothing yet. There would be something, there always was, and the Ayleid ruins always had the worst kinds of somethings. \n\n\"Please don't be undead.\" She whispered. She hated the undead. Ancestor ghosts where one thing, even skeletal guardians, she was used to those, but the zombies...and the wraiths...those made her brain crawl. It was all that dark necromancy the imperials were so fond of. At home there were strict taboos on the mistreatment of the dead, and the desecration of the body and the soul. \n\nZombies were just...unnatural. The headless ones where just plain unnerving if nothing else. She'd seen an ash zombie once, a servant of the demon Dagoth-Ur, in a cavern she'd hazarded into during a particularly nasty blight storm while hunting in the ashlands. The sight of it, of the empty gaping hole where its eyes and nose should have been, it's skull hollow and black, had sent her back into the storm and had given her nightmares for months. Howling red winds and starving blighted cliff racers were a day in the grazelands compared to that horror. \n\n\"Ah well,\" she sighed, it was this or she started looking for a house somewhere else. \n\n\"Maybe it will just be rat infested. Or even better, be full of big stupid bandits\" She said cheerfully and crept up on the ruins, making her way to the entrance. This one was laid out a little differently. Instead of the multiple tiers and spiraling stair cases it was just a row of broken columns glowing white in the late morning sunlight and leading in a sweeping curve up to a massive winged figure draped in morning glories. Behind it stood the rectangular stone doors, set in a rocky outcropping. She neared the statue from the side, and still could spot nothing, no people, no animals, no...well maybe not. A low growl sounded beside her and she froze. She'd already thought to have her arrow ready, and all it took was a shift to see the lion emerge from behind the statue. \n\n'Why lions all of a sudden,' she wondered. This one was also bigger than normal, but not as much as the last one she'd seen, but then this one, she noted right away was female anyway. Either way she was pretty formidable. Unlike the last one, this one was snarling, and tensing, and ready to jump. Inanna was about to respond in kind when out of thin air a second appeared between her and the first, so close she could see the speckles on its muzzle, and this one was massive. She hadn't even heard it. Sneaky kitty. She jumped back startled and re-aimed at the new cat, only to find herself trapped in the line of two bright green eyes.\n\n\"You!\" she croaked, and let the string slacken...though not so much that she couldn't still fire one off if she was wrong. This couldn't be happening. The other cat came charging to his side and Inanna raised her bow again. The big male growled low and menacingly, making both of them freeze. Both her and the smaller cat were looking between each other and the big guy standing between them. Inanna suspected that neither were entirely sure just who he was growling at. Inanna slowly lowered her weapon and the female moved away, but her ears were still flat, and her eyes watchful. She appeared to have the same sort of eerie thoughtful eyes as her friend, though hers were a dark blue, and not particularly happy. Inanna hooked her bow over her arm as a sign of good faith and held up her palms. \n\n\"I, ah, I'm surprised to see you again.\" She thought his eyes looked much more wary this time than they had before, perhaps he didn't recognize her. Maybe he thought she was hunting him, maybe that's what those other folk had been up to. \n\n\"I'm...I don't know if you can understand me...but, I'm a treasure hunter,\" she emphasized the word treasure, \"I find artefacts for people.\" She tilted her head to the door way, \"That's what I'm doing here...is that ok? Is...um...is this your place? I'll leave...\" She felt a little foolish as the beast stared at her, no doubt wondering what all the strange noises she was making were all about. \n\nThe other cat had stopped looking at her like she was dinner, and more like she was an interesting toy, which wasn't much of a consolation. She looked between the two of them, waiting for one to move, either to attack or wander off, or start talking back...whichever. \n\nApparently it was none of the above. Instead the green eyed lion moved towards her, passing her with only a hands breadth between them, making her hair stand on end, and walked towards the door and sat next to it. She stared at him and he stared back, then looked at the door and back to her. She took a tentative step forward, then another. No one was growling yet, though the female was giving her what could only be called a dirty look, so she kept going until she was standing next to green eyes with her hand on the door. She gave the cat a questioning look and pushed it open. They stood there a while and finally he entered, pausing at the foot of the stairs until she followed. Blue eyes also followed so that Inanna was sandwiched between them. \n\nShe was stunned at her own calmness. Certainly she was nervous, but normally this should be terrifying. Yet there she was. Perhaps it was merely too unreal to be upsetting just yet. They led her like that through two halls and down into a series of narrow circular corridors. Once or twice she thought she saw something moving in the distance down side corridors. More big cats? Perhaps they were some form of Khajiit after all, some sort of non-verbal kind, a hybrid or something. She huffed out a confused breathe and both of them stopped and looked at her. \n\nShe smiled apologetically. Green eyes searched her face a moment then turned back leading her into a smaller space with a single door. He sat again. She approached but recognized it was a pressure activated gate. She could see nothing on hand, and nothing on the other side of the lattice door. She looked around and arched a brow at a new fourth member of the group, this one minimally larger than Blue, though just barely, and watching from a distance down the hall. She lifted a hand in greeting, assuming it was also one of these obviously sentient cat things, then kept looking around for the trigger mechanism. \n\nShe finally looked up and noticed a narrow walk way over head, part of which was obscured. The walls were pretty rough and cracked, and the walkway wasn't too high above them so she ran her hands over the wall till she found a good grip and started to climb. Someone, she assumed blue eyes, growled, and she looked down. \n\n\"Don't worry, I think I just found the pressure block, I won't leave your sight.\" She figured even if they couldn't understand the words, the tone of voice would at least count for something. She kept climbing and the growl subsided. \"Ah ha!\" she crowed softly as she pulled herself up. The block in question was protruding slightly and had a tell tale blue crystal in the middle. She didn't know how these things worked, just that they did. She pushed it and saw the grate slowly rise up. \n\nIt was easy enough just to hang and drop down, and she walked through the gate with haste, not surprised when it slammed shut behind her. She turned and both visible cats were up and alert. Green eyes started pacing. \n\n\"Don't worry, Serjo\" she said softly through the gate, not sure what else could hear here in the gloomy corridors that led away from the gate, \"some of them are timed...there's usually an exit in a hidden walk way over the entrance.\" She still wasn't sure they could understand her, but she was saying it as much for herself as for them. She wasn't thrilled about having to find a new way out. It wasn't the first time it had happened, but that didn't make her particularly happy. She grinned at the big cat, hoping to show him she wasn't afraid, though mostly to get him to stop pacing, it was making her anxious. She took a deep breath and shifted her arrows on her shoulder so that the silver ones fell within closest reach. If there were wraiths, she'd need them.\n\nFaric ignored Mirisa's steady questioning glare and watched with interest and apprehension as the slender dark skinned Elven girl merged skilfully into the shadows, the only evidence of her presence the twin red flames of her eyes that flickered towards his as she cast one last look behind her. Then she was gone. \n\n\"Now will you explain what the hell it is you think you're doing letting some stranger flounce around our lair?\" She was standing naked, hands on her hips, her blond hair a halo around her face. She did not look happy. \n\nShe was the best warrior among them, second to himself, and their little tribes second in command, she had every right to question him. He just wasn't sure he had a really good answer. Generally he was careful about this sort of thing, never random or unpredictable, always looking out for the interests of the group. Especially now, especially when they were at risk as they were, hunted, and driven from their home-lands into new and unknown territories. \n\nThat's the only reason she had let it get this far. He knew that. He tried to think of something convincing as he shifted. They could communicate in their other form, but it was more senses, shapes, feelings, and concepts. The finer points of dialogue were generally lost, i.e. it was harder to sell someone a line. Their throats just weren't built for speech. He turned looking down at her and ran a hand through his hair. \n\n\"Well, she's not entirely a stranger.\" He began with a sigh. She cocked a brow at him. \"She was the dark elf warrior I told you about from the ruins up north. The one who helped take out that last group of hunters.\" He'd assumed she must have been a powerful fighter, after he saw the way she drove that sword through the other hunters armour. That wasn't an easy feat, even with leather armour. She was a lot stronger than she looked, and just as fast.\n\n\"She doesn't look like much of a warrior to me.\" She crossed her arms over her breasts and gave him a smarmy look. \"what did she call herself...treasure hunter? She's just a sneaky little thief. If anyone questions her about our whereabouts, she'd sell us out for a steak and a pint of ale.\" He chuckled.\n\n\"That sounds more like you Mirisa. I think she'd hold out for cyrodilic brandy...she looks shrewd that way.\" She smirked back.\n\n\"Either way big man, you better make sure she doesn't. Clearly you think you owe her or something, which is why I haven't torn her to itsy bitsy pieces, but if I find out she talked and you did nothing to stop it I'll shred both of you.\" \n\nHe nodded thoughtfully.\n\n\"you'd be well within your rights.\" He nodded again. She was right, he'd taken a foolish and stupid risk letting her in here, letting her live for that matter. He wasn't a killer though, and he did feel like she was somehow on their side, like he owed her, even if it was just for lowering her weapon, for recognizing what he was and actually giving a damn. She wasn't a killer either. A hunter perhaps, a warrior even, but not a killer. He could have killed her that first time, and she had been smart enough to know that. She didn't have to turn her aim like she did, but that didn't mean she would have hit him if she tried. \"I don't think she would though.\"\n\n\"How can you know?\"\n\nHe shrugged. \"I just have a feeling.\"\n\n\"That's comforting.\"\n\nHe mimicked her stance and crossed his arms. \"I have good ones sometimes you know.\" Her smirk widened. \n\n\"I bet.\"\n\n\"What's that supposed to mean.\"\n\n\"It's spring, Mr. Alpha male with no mate and very sensitive nose.\" \n\nHe did frown at that.\n\n\"I've already mated\" he growled, \"I have a child, I'm not some hormonal boy Mirisa.\" Indeed, he was turning sixty one in a few months.\n\nShe sighed and looked at him seriously. \"I'm saying this as a friend, so don't try to rip me open, but just because you lost Pern doesn't mean you lost everything else. I know it's pretty fresh, but it's been a few years now, and quite frankly she oozing pheromones and you're in a good state to pick them up.\" His frown deepened. He didn't like talking about Pern, but he couldn't be angry with Mirisa, she'd lost a mate as well to the hunters, and at least he still had little Aina to remind him of her. Mirisa never had the opportunity to have children.\n\n\"She's not one of us, she doesn't go into hea..\" She held up her hand.\n\n\"The fact that you're not aware of catching them should be evidence enough that you're not thinking clearly. Believe me, I don't know much about those dark elves, but that girl is practically glowing, maybe they have their own cycles too, we're used to men where we're from, not these southern elves, we can't know for sure. I'm grown up enough to admit that it's part of the reason I want to lay into her so bad.\" She grinned broadly and with menace. \"I've always been the competitive type.\"\n\n\"And what exactly are you competing for?\" He asked dryly.\n\n\"Have I ever needed a reason?\" \n\nHe lightened a little. \"No, no you haven't.\"He gave her a wry smile. \"Is she really...\"\n\n\"Oh yeah. So watch yourself.\"\n\nHe frowned and nodded seriously. \"I will. But I still get the feeling she's trustworthy. We'll see. I'll keep an eye on it. If it works out, it might be useful to have a contact for once. We're outsiders here, we know no one, and the hunters don't seem to be letting up.\" \n\nHe paused thoughtful and looked back into the dark corridor the shadow of a woman had disappeared into and then back at Mirisa who had already shifted back. \"Besides if she is just a 'sneaky thief' she might know someone who can help us figure out who's behind the hunters. No matter how many we kill, they seem to keep coming back. They're just mercenaries, someone is hiring them. Someone who knows of our existence.\" \n\nShe looked at him sceptically, and he smiled back. \n\n\"I know, I know...I'll be careful. You know I'd never do anything I thought for a second might jeopardize our position. Owyn,\" he called as she turned away, and he watched the young male bound forward, lowering his head deferentially to Mirisa as he passed her even as he eyed her swaying haunches, she growled half heartedly at him and he averted his eyes. Now there was a hormonal boy, barely twenty two, old enough to be interested, not old enough to know better.\n\n\"Keep an eye on this gate will you? Let me know if that elf comes back.\" Owyn huffed and lay down obediently beside the gate as Feric shifted back and trotted off to look for this supposed second exit. If this was going to be their new home for the time being, he wanted to know it like the back of his hand. It would only be a matter of time before someone would track them here, and he needed to be prepared. \n\n\"Disgusting creatures.\" Inanna covered her mouth to keep from gagging as she pulled her arrows out of the fetid corpse, and watched the flesh disintegrate and ooze at her feet. The only redeeming thing about the undead was that you usually got most of your arrows back. It really helped cut down on expenses. They were also stupid as hell and helped set off traps before she even got there. This one had done most of her work for her by charging at her through a suspicious looking corridor with long slits in the ceiling.\n\nShe bit back another gag and pulled a bit of dark clothe out of her bag, wrapping it around her face. It helped a little, enough to get her supplies back without losing her breakfast. The evil looking metal blades were still rising and falling rhythmically around her as she worked, but she'd watched them long enough to side step each of them as she progressed. She wasn't about to complain, but these ruins really were a bit repetitive. Once you've survived enough of them, there are few things that can surprise you. \n\nInanna resisted the urge to sigh and continued her torturous creep deeper into the bowls of the ruin, hoping it would end soon. She'd been through two proper doors, and umpteen gates, and still no bloody cup. The corridor turned and she was faced with yet another gate, this one with a floor trigger. She sighed and peeked through the lattice work, trying very hard not to set off the trigger before she was good and ready. She couldn't see anything from where she stood so she opened the gate and snuck in a little further. \n\nThe hall opened up into another great hall dotted with columns and great stone alters. In a far entry way she spotted a warm glow that could only be fire. So there was something living down here after all. That combined with the presence of zombies usually meant one thing. Necromancers. She barred her teeth in a silent snarl and picked the darkest shadow she could find in which to set up shop. \n\nIt was a long wait, but at least she was right side up this time. Her patience paid off and finally a figure in a dark robe entered the room. She could see instantly it was an Altmer, and she bet her life there was probably a self congratulatory smirk plastered on his pointy arrogant face. Her own people weren't exactly friendly, but as a general rule no one really liked these high elf pricks. 'Good thing his heads so bloated with ego,' she thought darkly,' it'll make a better target'. No sooner had she had the thought than a shining barb hit home and the figure crumpled. She let loose a second for good measure, hitting him as he fell, ensuring his silence.\n\nThe next figure came out, this time more quickly, more warily, perhaps sensing something was wrong. The woman called out. ",
        "\"Armion?\" and stepped into the light. She saw the body just as the arrow was careening towards her in mid flight and she stepped back gasping. The shot hit, but in the shoulder since she was already pulling away. It drove her back, but she was able to cast something before the next shot came at her. This one hit as well, but she was ready for it, and the damage was minimal. A red-black cloud swirled beneath the mage's feet and a swaying headless monstrosity articulated rapidly before her. Inanna resisted the urge to curse. The thing wasn't running yet, just staggering around providing a body shield, no one had spotted her. \n\nShe shot an arrow off into a side hall, making both the mistress and her meat puppet move in that direction. She sneered. Weren't sorcerers supposed to be intelligent? Who actually fell for that trick anymore. This opened the little witch up for another hit, which thankfully made solid contact. \n\nThe down side was that she was clearly using a protection spell and was still standing, that and the fact that they'd finally figured out where the shots were coming from. \n\nThe headless pile of rot came careening towards her. She fought the rising panic that was clawing up her throat and re-aimed her bow at the sorceress. She'd learned the hard way that without the sorceress the summoned creature would disintegrate; otherwise you could kill zombies all day and not make headway. They just kept summoning more. She struggled to maintain her focus as it neared her with a sickening howl, and tried to ignore the fact that headless things shouldn't be able to howl. \n\nHer gloved fingers parted and another shot went flying. The second necromancer crumpled, and the zombie vanished in an oily grey smoke. \n\nInanna dropped to a crouch and exhaled, letting her suppressed shudder run its course through her. She had to focus, had to keep alert. These creeps always ran in packs. She searched the rooms attached to the hall and found nothing more interesting than a few soul gems and a bit of gold. Still no cup. \n\n\"It had better be here\" she griped as she stealthed her way into the last hall. The room was wider and grander than the previous ones and was lit with four great fires in massive oil basins. The floor was streaked with blood, and the walls hung with the black and white arms of their illicit trade. This one clearly had potential. She was blessedly high up in a walkway overlooking the charming scene, which gave her plenty of time for cheap shots before they figured out what was going on. There were two of them again, though their hoods were up so she couldn't determine what they were.\n\n' No matter', she thought cheerily, 'everyone responds the same way to a steel barb through the back of the skull'. \n\nThey were leaning over a fresh looking corpse doing gods only knew what to it and were completely distracted. She aimed at the nearer one whose back was turned to her and caught him in the center of the upper back. She followed, as usual with a second arrow in more or less the same place, though this one caught closer to the neck. Her third shot caught the stunned, still standing, partner in mid cast, halting the spell and sending the necromancer stumbling back, gaping at the arrow sticking out of his chest. He looked like he was about to cast again so she took aim for the head. \n\nHer mark was moving around too much and the arrow missed entirely. She cursed and crouched back against the wall. It was possible they hadn't seen her yet. She heard a terrible noise as another zombie was summoned. She readied her arrow and swung her bow over the banister, but nothing was there. \n\n\"Where in oblivion...\" she turned down the hall and made a gurgling sound of shock at the sight of the putrid thing bearing down on her. With a terrified cry she did the only thing she could think of and grabbed the banister and jumped. She threw herself against the wall, trying to use the friction to slow her momentum as she fell. She tried to roll when she hit bottom, but the floor was moving too fast towards her and she contacted with a terrible sharp pain in her ankle that shot up her leg making her shout. Stupid move...very stupid. But zombies did that to her. Made her panic, without fail...Meridia take them.\n\n\"Die!\" Screamed a high pitched voice as a diminutive robed figure lunged towards her. She had her bow, but it was too late for that. She dropped it and pulled a knife from her thigh and lunged back using her good foot for propulsion and nailed the figure with her shoulder, twisting to take the knife wound in the arm, and sliding her own knife into the figure's side. It went in like butter with nothing more than robes between her steel and the flesh. She twisted the knife and the figure screamed. \n\nThe zombie over head howled in rage and confusion. She wrested the fine looking glass knife away from her opponent and got on top of what she could only assume was a wood elf, he felt so small, and drove the blade into the hooded cowl. \n\nA little flame welled up as she sliced into him. There was a fire enchantment on it, but it must be weak, she'd not even felt the heat of it, never mind a burn. Of course, she was Dunmer, and this little Mer was not. The figure twitched and screamed, and finally stilled. She peaked under the cowl. Bosmer...good guess on her part. \n\nInanna rolled off, taking the glass blade with her. It was much nicer than her own knives. She got up, testing her ankle gingerly. The pain was incredible, she could only hope it wasn't broken. She'd have to get to a healer as soon as she returned. She'd never been good at healing. It was one of the reasons she wasn't chosen to apprentice with the wise woman. They usually sent most girls with strong wills to her, but Inanna was only ever good at one thing, charring things. \n\nShe'd always joked that it was the blood of the mountain itself that was in her veins, turning her mouth and hair red, and making her set random things on fire. In truth it had always bothered her a little that she could never heal anything, just destroy. At times like this it was a little frustrating as well.\n\nShe hobbled over to the other body and pulled him off of the alter. Much to her chagrin she saw a rather elaborate looking chalice next to the body of a naked, still bloody imperial man and saw that it was filled with viscous looking black stuff. She poured the stuff out on the floor, making sure it didn't touch the bodies, or herself for that matter, who knew what this stuff could do. She wrapped it in a bit of cloth from the alter and shoved it in her bag. \n\n\"Am I seriously doing this for a house?\" She asked. \"Well it's this or move back to the Ashlands for an exciting career chasing kagouti through the wastes.\" She screwed up her nose at the idea, that wasn't too high on her list, she was still young, there were too many interesting things to see in the world first. \n\n\"Then again, I swear if I never see an Ayleid city again it'll be too soon.\" She grumbled as she limped out the far door. There were two halls, the right looked like it was to an ante chamber, the left to a metal gate, and for all intents and purposes the exit. \n\nShe didn't even care to check the other room. She could barely walk, the smell of death and rot was in her nose and she was sure it would take weeks to get the image of those zombies out of her head again. To Oblivion with loot, she just wanted out. She limped to the door to find it locked. Well that's what all that lock picking practice was for right? She pulled out a couple picks and started working. \n\nShe broke five before she stopped and took a deep breath. She was being impatient, she had to focus. She pulled another pick out and started from the beginning. She was down to the last tumbler when a rumble behind her made her turn away from her work. \n\n\"kill me now.\" She groaned and watched a stumbling shadow against the far wall. She turned back, took another deep breath, prayed to the ancestors and turned the pick. It snapped. The rumble got louder and the zombie teetered around the corner. She pulled out her bow and started shooting. \n\nFive arrows later it was still closing in, and she had nowhere to run. She made a last ditch effort and closed her eyes, praying for real this time. She opened her eyes to find a bluish white figure swaying before her. It screeched once and turned as the zombie took a swing at them. She cringed against the gate and watched as the ghost slowly drove the zombie back. \n\nShe took another breath and went back to the lock. She almost cried with relief when she felt that only the one tumbler had fallen. She tried again, pushing the sounds behind her out of her mind, focusing, gently prodding, waiting for the right click and...it opened. She let out a cry of pleasure, then a scream of terror as a hand closed around her good ankle. \n\nThe ghost had done a respectable job and the zombie was missing a leg and crawling towards her, some of its insides leaking onto the floor. She crawled backwards trying to pull away, trying to pull through the door. If she could just get through the door. \n\nShe couldn't focus to draw up her inner fire, and its grip was too strong to shake off, not with one fractured ankle. She winced and leaned in towards it against every instinct and drove the little glass dagger through its wrist. It loosened its grip reflexively and groaned as a lick of flame crawled up its arm and she yanked away slamming the door shut with her good leg and holding it as the monster banged against the door. She was exhausted and in pain, and it was winning. \n\nShe whimpered in terror as she reached shakily for her bow which she'd managed to drag with her. She aimed through the grating and fired. It was enough to make it stop pushing, so she fired again, and again, and again, and kept firing until the thing on the other side of the gate looked like a gooey pin cushion. \n\nShe thought briefly of retrieving her arrows, and quickly thought better of it. She'd be sick for sure. Her fear and pain were already making her nauseous. Slowly she half crawled, half dragged herself to the end of the passage and let out a laugh of relief to see the big entrance door beneath her. She'd been right after all. Now how was she going to get down? It wasn't much of a drop, but it was more than enough to be excruciating with a mangled ankle. She sighed. \n\nShe hated to do this but there wasn't much choice. She gathered her will, focusing until her head pulsed with concentration and her vision blurred a hazy blue as it always did when she tried to use healing magic, and wrapped her hands around her ankle. Even with all her force behind it, the restorative spell was weak. It would be enough though to get her to a healer though. She considered taking her boot off to check the damage, but then decided against it. She might never get it on again if she took it off, and it might be what was holding the bone together if it was broken.\n\nFeric paced below the hidden catwalk. She'd been right, and it had irked him that they'd not noticed it sooner. They'd only been here a few days, but that was a few days worth of potential ambushes. He growled low in his throat, the fur on his back pricking in irritation.\n\nA soft sound, like a voice, came from up above. He quieted himself and listened. The sound was followed quickly by a low moaning growl, and a minute later by an unearthly screech that made his hackles rise. He stood stiffly, listening as the moans and screeches continued until they were ended, or punctuated by a soft cry, and a sickening scream. \n\nThe scream was almost above him, or near to it, and it was a woman's. Was it her? His claws dug futilely into the stone. There was a terrible racket like someone thrashing against a metal door, and then silence. He listened closely, desperate for some sign, some hint as to what he'd just heard, and he was answered with a soft low laugh. It was directly above him. He stretched up the walls, his head nearly reaching the walkway, and sniffed the air. It smelled like death and putrescence...like fire and blood, but under that it also smelled ever so faintly of her. But then she she'd smelled of fire and blood before. And something else, something earthy and spicy that made his mouth water slightly. Was that what Mirisa was talking about? \n\nHe lowered himself and walked up to the door, trying to see if he could spot her as well. He turned and there she was. Blazing black-red eyes set in a striking angular grey face peered down at him framed with tendrils of dark red hair that had pulled loose from her tight braid. She looked like a disheveled Dremora. She waved weakly and gave him a crooked smile. \n\n\"Looks like you can understand me after all. I told you about the back door, and here you are Green-eyes. Either that or you heard the commotion.\"\n\nGreen-eyes? He would have laughed. It just came out as a snort. \n\n\"Hold on, I'm coming down...you might not want to be under me, I'm not as light as I look.\"\n\nHe chuckled to himself. 'Under her, she looked light enough for that...and what about under him...'he tensed, where had that thought come from. Perhaps Mirisa was right. He shook his head, then jumped with a growl as a body landed in a heap next to him on the stairs.\n\n\"I warned you.\" She pulled herself into a seated position and slouched against the wall. The passage was narrow so he moved lower to give her space. \n\nShe reached down and felt her ankle, wincing. \"I landed badly playing tag with a necromancer and a zombie. Don't worry, I made sure the Mancer was 'it' \" She explained as he watched her. \n\nShe must have read the shock in his expression because she laughed. \"That's right, I bet you didn't know you had those in your cellar did you, Serjo?\" She leaned back against the steps with a grimace. \"You really can understand me can't you?\" \n\nHe tipped his head in confirmation and she shook hers. \n\n\"Incredible.\" She looked at him a while then shook her head again. \"Anyway, I killed everything I found down there, but if you go exploring, you might want to work in pairs...or groups, I don't know how many of you there are, but don't go alone, just in case I missed something. Plus, look out for suspicious long narrow hall ways...most of them have traps.\"\n\n'You went alone and did alright', he thought as he watched her remove her armored leather shirt and pull the light undershirt over her head. She wore a wrap around her chest, but it still didn't stop him from noticing her smooth flat stomach and gently flared hips as they disappeared into her formfitting leather pants. \n\nHer movements distracted him from the view and he realized she was tearing up her shirt. Then he realized why. There was a long deep bloody gash across one of her arms, not to mention several large bruises and scratches all over the rest of her. They were hard to notice at first because of the already blue tinged ash color of her skin. They appeared as slight dark spots instead of contrasting obviously as it might on paler skin. The gash was still bleeding, and she was dabbing at it ineffectually, hissing through gritted teeth.\n\nInnana froze in surprise as she felt her hand nudged away from her arm and looked up to find Green-eyes practically standing over her. He lent his head to her arm and to her amazement began licking the wound with his slightly rough tongue. She could only gape and sat perfectly still as she watched him. \n\nShe felt herself shiver as the fur of his body brush against the exposed parts of her skin. He stopped then and his head shot up, looking to her face. She could only stare back, her lips parted slightly in surprise and awe. She thought his own eyes registered a similar surprise and he moved back and turned away, putting a great deal more distance between them and turned his head away even as he turned back to face her.\n\n\"Ah...tha-thanks.\" She offered softly feeling her face heat strangely, and looked down at her freshly cleaned arm. It seemed to have stemmed the blood flow as well. \n\nShe took the still clean bits of her shirt and wrapped them around her arm, tying them in a knot with her teeth. She replaced her leathers and rose, using the wall for support. \"Well, ah, thanks again...for letting me, you know, get the, ah, artefact.\" She paused and looked down. \"I'm getting a house with it.\" She offered, as if that meant something. \"I..I just mean I appreciate it.\" She smirked. \"I know Blue wasn't thrilled about it...so thank her for me would you? Anyway...I'd better find a healer for this ankle...\" 'just stop talking and go,' she admonished herself. She cleared her throat. \n\n\"Well, good bye.\" She turned quickly before she could change her mind and left. \n\nFeric went down stairs and relieved Owyn from his watch. Tomorrow he'd take him and Mirisa down there to see just what had been crawling around in there, and what more needed clearing out. Necromancers, he though with another shake of his head. \n\nHe sighed and thought again about what he'd done on the stairs. He hadn't even thought about it until he felt her shake. What the blazes had gotten into him? It had seemed the most natural thing in the world at the time, as if she was part of his pack. He was thinking of following her like last time, but after what Mirisa had said earlier, and that bizarre display he didn't think it was such a good idea. \n\nStill he felt guilty for not going. She was wounded, and he could at least help by discouraging any would be attackers. He started back to the door, then stopped. No, he thought, his responsibility was here, she would have to take care of herself. He growled at himself and went back into the maze. He should probably check on the little ones.\n\n****\n\nInanna trudged miserably up the road casting an irritated glare at the legionnaire swaying by on his bulky looking horse. Where were you ten minutes ago, she groused mentally. He looked back at her and frowned. \n\n\"Is there some trouble citizen?\" He asked looking her over. Was it the blood spatter that tipped you off, or the sliced up leather amour, genius? She bit down her post fight bile and smiled tightly. At least they were more polite than Ordinators. \n\n\"Not anymore.\" She smirked and saluted with one finger to her temple and went back to trudging up the road. All she wanted to do was get a few personal items and take them to her new house without having to kill someone...was that too much to ask? And here she thought Cyrodiil was supposed to be quaint and civilized. \n\nBloody bandits. Bloody goblins. Filthy bloody Minotaurs. Honestly. \n\n\"That does it, I'm saving up for a horse.\" She didn't like the idea or learning to ride those things, she liked having her feet on the ground, but this was getting ridiculous. She felt a tickle on her face and wiped at it with her glove, which returned smeared in blood. She wondered just how much was smeared all over her face. No wonder the imperial had given her such a disgruntled look. A Dunmer smeared in blood could be a pretty chilling sight. She grinned ferociously, no doubt making her even more chilling. Maybe that will keep the fetchers at bay. \n\nShe saw a movement up ahead, and grinned at it. That's right, try me, she thought staring down the figure. Bloody Bandits. \n\nIt was a dark-skinned Redguard man, He was leaning against a rock, and had picked up a mean looking axe, and was started towards her...then stopped. \n\nShe grinned wider when she was close enough to see his eyes, and he hers. He put down his axe and went back to leaning against the rock. \n\nHmm, maybe this look was working for her. She should just walk around smeared in blood all the time, maybe then they'd leave her alone.\n\nShe cast another look over her shoulder as she passed him, but he was already watching down the road for an easier mark. On second thought the drying blood was making her skin itch, and she smelt like goblin, which was not a pretty smell. It was already getting dark, and she still had a solid hour of walking before she got the Chydinhal. She didn't really want to walk in covered in blood and smelling like roasted goblin, nor did she want to spend the next hour or two enjoying the sensation of gooey gob blood drying all over her face. ",
        "She turned off the road. There was a decent little lake with a charming waterfall nearby, and it was just far enough from the road to be private, but not far enough to be troll infested. \n\nNot that she was shy, but she didn't want someone stealing her stuff while she tried to scrub the goblin off her. Or maybe it was bandit...that last one had been a gusher. She shuddered and stripped off her clothes. She'd clean the leather when she got back, right now, she just wanted to clean herself.\n\nFeric grunted as he peeled away from the scene. He'd lost the hunters, literally. They were all dead at the bottom of the hill, under the hooves of a couple of very unhappy minotaurs. He smirked to himself. He was hoping this would happen. He smelled those two from a mile away, and those four idiots were so intent on tracking him they didn't notice where he was leading them. He growled darkly. \n\nHe was sick of spending his time leading these people on wild goose chases all over the countryside, but it was the only way he could think of keeping them away from the new den. The adults could take care of themselves, even if there were only five now, but it was a different story with all the little ones. Three of the cubs were part of his original tribe, but they'd taken on a lot more orphaned cubs from other groups. Now they outnumbered the adults. \n\nHe growled again and broke from the cover of the trees after scenting fresh water. He was tired, angry, and thirsty. One thing at a time. The stream was fresh and quick moving, and the cold water felt good in his throat. A light splash disturbed his little break and he lifted his nose to investigate. The air was clean, but then, the stream disappeared a few feet ahead over a ledge, it could be a high enough cliff that the scent was lost. \n\nHe approached the edge cautiously and peered over the ledge. There was a large pool at the bottom, but a good portion was blocked from sight by an overhang. Just his luck. He still couldn't smell much. With a mental shrug he turned to the side and bounded down the rocky boulders that lined the small waterfall. \n\nSomething caught his eye, a pile of something. He got closer. Leather. It smelled of Blood. Blood and something else...something like...fire. He narrowed his eyes, and inhaled more deeply, looking for another scent, a spicy scent underneath. \n\nThere was a splash, and suddenly he caught it. Spice, and earth. He looked up, his mouth already watering. It couldn't be. It certainly smelled like her.\n\nThe Dark elf broke the surface of the water and pushed the red hair out of her eyes. It was darker than usual...but then it was wet. She opened her eyes and gasped in surprise. A flame leapt up in her hand almost instantly as she looked from him to her things and back again. \n\nThe boulder he was on was flat and dry, so he just lay down and watched her, more curious than concerned. He already knew she was fast and dangerous, the necromancer with an arrow through his forehead she left in the ruins would have told him that even if he hadn't seen her fight before, but it was a controlled dangerousness. True to form she paused and tilted her head at him. \n\n\"You're kidding me.\" She called from the center of the pool. The flame died in her hand and she disappeared under the water, only to surface below him in front of his rock. She pushed the water out of her eyes with her palms and grabbed the edge of the rock and looked up, her face level with his claws. \n\nShe was trusting. He could blind her with a swipe she was so close. Maybe that's why he trusted her, she trusted him first. When he'd pounced on that other dark elf, she knew instantly he wasn't going for her. Most wouldn't have assumed that. Or maybe she's just that good, and she could read it. A good hunter could. She gave him her crooked smile.\n\n\"We've got to stop meeting this way. One of these days I'm going to accidentally blast you.\" She pulled up a little, folding her elbows on the rock and lifting her shoulders into view. Her skin shimmered wet and glowed in the waxing moonlight. \n\nShe was dark and bright at the same time, like obsidian, and the rest of her, her hair and eyes, was as dark and rich a red as arterial blood. He noticed her mouth was almost the same shade as her hair when it was damp. The wet strands clung to her smooth lightly muscled shoulders in curling tendrils of deep burgundy. Mercifully the rest of her was still below the ledge and hidden from his roving eye. \n\nHe snapped his eyes back to her face, once he realized they had been roving. He took another deep breath. She smelled good clean. Less fire and blood, and more spice and earth. Like a desert after a rain. She let out a throaty laugh. \n\n\"Don't let your eyes wander too far there. Your girl might get the wrong idea.\" Her voice sounded lower, harsh, yet smooth. Like rocks and water...quicksand. He blinked at her and she laughed again. \"I tease...I'm sure I'm not even your type. You know...biped and all.\" \n\nShe grinned and slid down along the rock and, to his surprise, hefted herself gracefully out onto the boulder, settling beside him. He turned away as she sat down, but it was too late. The image was going to be burned into his brain for a good long while. She was long and sleek and glistened like a dark jewel as the water cascaded off her. \n\nShe was one long elegant curve from her delicately pointed ears to her tightly muscled calf. He tried to focus on the water in front of him, but he could see her pull her knees up to her chest and lean forward to wring her hair out over the ledge in the corner of his eye. His eyes darted back to her and slipped almost automatically over her arm and to the curve of her breast as it pressed against her thigh. \n\nHe looked away again and huffed. What the hell was his problem, he was used to nudity, Hell, he spent most of his time like that. It happened when you were constantly shifting forms. You couldn't get dressed and undressed every five minutes. Yet...he huffed again. She really did smell good. Really, really good. He swallowed reflexively.\n\nInanna shook her head slightly as she wrung out her hair. How odd that she kept running into him. She'd almost have thought maybe he was tailing her. Then again it had been her who went to the ruin, and since she lived in Chydinhal now, and they not far away in the ruins, she assumed at least that they still did, they'd be more likely to run into one another. Besides, it had been more than a couple weeks since that last run in. She crossed her arms over her knees and laid her cheek on them, turning her face so that she could watch him. \n\nHe was staring into the water, making a funny snorting noise. She cocked a brow at him.\n\n\"You ok there Green?\" He turned his head to look at her and she raised her head. The look was intense. Had she pissed him off some how? She held up a hand. \"Hey, sorry, I...is it the name? I don't mean anything by it. It's just...you know...those unbelievable eyes of yours. I'm sure you hear that all the time.\"She grinned gamily. He tipped his head slightly to the side, his gaze still intense, then turned away, looking back in the direction of the road. \n\n\"Do you hear something?\" She frowned and uncurled herself getting up, she hadn't heard anything, maybe he was distracting her again, he was good at that.\n\nThe rock was slippery and she put out a hand instinctively against his shoulder to catch her balance. His head whipped around and she snapped her hand back, realizing what she'd done. She took a step away, holding up her hands. \n\n\"Sorry...slipped.\" She smile feeling a little wrong footed and pointed down to the rock. He was still staring at her...and still with that drilling intensity. She cleared her throat and turned away, picking up her bag and looking for a change of clothes. She really didn't want to put that other smelly stuff back on. She grabbed her things and tossed them onto the grass, then followed it. She didn't need to crack open her head trying to balance on one foot while shuffling into her clothes on a slippery rock. \n\nShe pulled out her glass knife and put it on top of the bag, just in case he really had heard something.\n\nShe bent over and shook loose a pair of clean pants. They weren't leather, but then it wasn't much farther to go, and she could probably outrun most things if she got desperate and had to go looking for imperial back up. The hair on her neck stood on end again and she slowly craned her head over her shoulder. What did the Breton's say? Deja-vu.\n\nThe lion had joined her on the grass and was making a slow circle around her, though with less of the polite distance of the first time. She frowned. \"Everything alright?\" She asked, suddenly feeling the reality of her situation. \n\nBig ol' lion, with big shiny claws and little naked her. Not a lot to put between his claws and her skin. \n\nShe wondered at how that fact had managed to slip her mind at all. That wasn't like her. She glanced nervously at her knife and started calling up the fire in her blood...just in case. He stopped, and his head lifted, as if scenting the air and he tilted his head at her again. His eyes shone, his head lowered. Predator.\n\nSlowly she knelt as he padded deliberately towards her, his shoulder blades rolling as he moved in that special and ominous way only a cat can move. She never took her eyes off him as her fingers found the hilt of the glass dagger and, though his eyes slid to the dagger, he kept coming. \n\nShe was breathing hard by the time he stopped, just out of reach, just barely. His eyes were locked on hers, and she was torn between the fact that he'd never menaced her before, and the dangerous glint in his eye now. He lowered his head just a fraction and took another step his gaze unwavering. Her fingers tensed and her eyes shot to his paws...his claws were still retracted. \n\nShe breathed out a little, but her fingers maintained their grip on the knife. He took another step. She was on her knees, and he really was massive, so they were more or less eye to eye. His nostrils flared. \n\nWas he...smelling her? Could he smell her fear? Some animals attack because of the scent of fear...but he wasn't really an animal...was he? Then again, some men attacked for the same reason. She furrowed her brow and held her breathe. He moved his head in a little closer. It was as wide as her shoulders. At this range those jaws would take her head right off before she could get a decent hit in. She resisted the urge to whimper, or to strike. Focus, remain calm. \n\nHe breathed out and the warm air brushed over her neck and shoulder. She shivered and closed her eyes. The shiver reminded her of something. It reminded her of the brush of fur on the stairs in the ruin. The gesture he'd made, of helping her, had been almost affectionate, and certainly it had been a kind one. It had made her blush. \n\nShe opened her eyes, a little calmer and half raised her free hand, the fire that had been welling up in her fingers already snuffed out. He turned his eyes to her hand and she paused, then bit her lip and raised it a little further. He hadn't tore her up yet, she reasoned. He surprised her by turning into the raised hand, and her fingers made contact with the thick fur of his neck, just below his ear. He made no move to pull away.\n\nSlowly, experimentally she slid her hand up behind the ear, massaging underneath it. She'd 'known' a couple Khajiit who always liked it when she did that. Apparently it was very relaxing. Green seemed to like it too and his eyes, still holding hers, relaxed in that sleepy way. She sat back on her knees, relaxing herself a little. He let out another heavy breathe which ran down over the night chilled flesh of her collar and breasts. \n\nHer fingers finally quit their grip on the knife and she brought the other hand up as well, and ran it over his neck. His pelt was smooth and thick, and very warm. He just stood there, still as stone, eyes half closed as she ran her hands over him. She could feel herself tremble just a little, though more from amazement than fear. She felt a smile twitch her cheeks. Would this ever look strange if someone came into the clearing just now. A naked Dunmer practically cradling the head of an over-sized mountain lion, not something you see every day. \n\nHe must have sensed her change in mood as he shifted under her hands, taking another step forward so that one big paw rested next to her knee, and his head pushed forward, nuzzling into her shoulder and hair. She teetered a little and closed a hand into his fur to keep from tumbling back. \n\nIt didn't seem to bother him, he just did it again, his big cheek rubbing up against her. She let out a light, short laugh. Was he marking her? She smiled and breathed tremulously. So that's what he was up to. She tried to contain her blush. In any cat-like species she knew, this was usually a sign of affection, or at least possession, which to some people, like her own, was tantamount to the same thing. She had to admit, she was flattered. She leaned in to his next brush so that her cheek brushed his back. 'If you're going to mark me, let's make it even', she thought with a chuckle and a little involuntary shiver as he brushed against her sensitive ear. She was rewarded, and startled, by a quick lap at her throat with a rough tongue. \n\n\"You shouldn't sneak up on a girl like that,\" she said thickly against his cheek, \"she might think you were up to no good.\" He pulled his head back and looked at her. His expression hadn't gotten any less intimidating, but now she at least knew it wasn't because she was on the menu. She gave him a shaky smile, still a little unnerved by his behaviour, though no longer terrified. Why was he looking at her like that? \n\nHe lowered his head and nuzzled her again, this time brushing down over her chest and pressing at her so that she fell back a little onto her bottom. She let out a squeak and tried to right herself, but he was still rubbing his cheek and jaw against her.  \n\nThe sensation didn't help her collect herself either. The feel of his fur against her breasts was highly distracting and made her gasp as little shivers of heat started running up and down her stomach. She really did blush then, and was about to push him back a little, or at least to a less intimate and stimulating part of the body when she was stopped by the shocking sensation of a long tongue running up the length of her stomach and between her breasts. \n\nNow it wasn't entirely an unfamiliar sensation, she liked those sly Khajiit males as much as the next wholly shameless girl, but it was utterly unexpected in this particular instance. She could only gasp and gape, eyes going wide as she watched him do it again, this time over her breast, catching an already hard nipple against his slightly sandy tongue. That sensation pulled out a choked groan from her throat, something between pleasure and shock. \n\nHe took another step so that her legs were pinned between his front paws. She shook and gripped his neck, her fist still buried in the fur. His tongue continued to lap at her, roving over her throat and breasts, and finally down over her stomach, his nostrils flaring. She blinked and gasped, trying to regain control of her mind which had so quickly been overcome by the startling electric sensations twisting around her spine and sending her brain reeling into a reddish haze. She'd always been something of a sensualist, and she found it hard not to respond instantly and completely to pleasant sensations. One took what one could get when one was raised in a volcanic desert of ash.\n\nShe managed a mild curse and pulled herself up onto her elbows, shaking the cobwebs out of her head and tried to suppress the delicious shivers his tongue was causing. This was not right she admonished herself...think girl, snap out of it. It was...well...weird. She blinked and looked up at him. His head was low again as he looked back at her. His eyes were glowing even more intensely than before. Another shiver ran up her spine, making it arch a little. Damn it, stop that. \n\nShe knew exactly what that look was now. He wasn't serious...was he? Well that would be a new one...even for a Dunmer. It might even be worthy of one of those crazy Telvanni wizards...wait what she thinking!\n\n\"Y-you're not...are you?\" she breathed, her voice rasping with...what? With desire? She shivered again, then went wide eyed as he grinned at her. Actually grinned, with lots of teeth. A Khajiit type grin. A very, very, wicked Khajiit type grin. \n\nShe twisted back away a little when he gave her that look, then realized with a gasp what she'd just done. Her next gasp was more like a breathy cry as his tongue swathed up the inside of her thigh and down over the center of her heat.' Oh my gods that feels amazing', her brain screamed in delight before she could find the will to disapprove. She almost did, but then another long wet rasping lap sent her into a series of back arching shudders. It was just like a Khajiit she thought dimly through the haze, only...bigger. She shuddered and fell back, no longer willing to make the effort to do anything else. She just sort of...fell open, and ran a hand over his cheek absently as she twisted in gasp inducing pleasure beneath his tongue.\n\nShe was flushed and panting when he finally pulled away and nudged her hip with a low growling sound. She propped herself back up on her elbows and looked up at him. He rolled his shoulders and growled again, staring her down. What was he trying to...oh. She looked straight between her legs and his chest and saw his problem. The red cloud in her mind cleared a little, though just a little, and she swallowed. She looked back up at him, and those green eyes bore down on her.' Well, Oblivion take me', she swore silently,' I'm here aren't I?' \n\nIt didn't look like it would kill her...though it might do something damn near to it. She glanced down again and gnawed her lip hesitantly. It would be...interesting, at the very least. She flushed even darker, if that were possible, and licked her lips.\n\nFeric was practically shaking as he looked down at her, every muscle tensed, his chest vibrating with a low growl of want. His mind was a dark fog and the only thing he could see clearly was the sleak, silvery, erotic female splayed beneath him. Her scent filled his head and her heady taste coated his tongue. \n\nHe purred in rapture as her small dark pink tongue ran over her swollen lips and she slowly twisted her body beneath him, her eyes never breaking from his. She pulled herself up onto her hands and knees and he growled with pleasure at the sight of her swaying hips in front of him. He couldn't remember the last time he wanted something this badly. Hell he could barely remember his name just at that moment. He tore his eyes from her wriggling backside and caught her looking back at him past her shoulder. Her eyes smouldered like burning embers, sending an inexplicable sensation along the length of his spine.\n\nHe practically pounced on her, and she let out a little whimpering squeal as his belly slid over the length of her back. He closed his eyes, delighting in the heat that radiated off he, and the writhing movement of her slim body as he pinned her to the ground. She fell forward on her elbows, her hips jutting up. He nuzzled against her hair, devouring the scent of her. He couldn't get enough of that scent. \n\nHe paused, the fog in his mind lifting slightly. There was something about that scent...something he knew he should know about it. He growled to himself in frustration, what was it? No sooner than he'd growled however, the little female underneath him squirmed with a groan and he felt himself pressed hard and hot against her soft, slick, warm center. \n\nEvery rational thought fled before it had the chance to form, and he was lost in the breathtaking feel of her tight body stretching around him as she pressed herself back against him. He growled and she growled back. The sound might have surprised him if he hadn't been so distracted by the feel of her wrapping around him. ",
        "She was incredibly tight and incredibly hot, practically searing. He shook, and she grunted softly and pressed back harder. Her soft sound of effort broke him of his stillness and he extended his claws, pressing them into the ground, digging in as he leveraged himself against her hips, meeting her slow press with a hard thrust of his own. She cried out and jerked forward with the pressure of the thrust, held in place only by the weight of his body pressing down on her, still pinning her. \n\nShe shoved back, trying still to pull more of him inside her. 'Eager little sylph,' he growled to himself and met her movements roughly and enthusiastically with his own until he could feel himself wedged as far and as tightly as he would go. \n\nThey stayed that way, frozen, both shaking faintly as she gasped gently, her forehead bent down resting in the cool grass and her fingers wrapped tightly around his lowered forelegs. Slowly he pulled out, his eyes rolling a little at the way her body clung to his. He pulled almost all the way, then dug in his claws and slammed hard into her, spreading her, claiming her. She gasped almost silently and her fingers bit into his fur. He thrust again, then again, pulling all manner of arousing sounds from her lovely throat. \n\nHe continued to caress her shoulders and neck with his cheek, enjoying her scent, and the taking pleasure in in his own scent as it clung to her hair and skin. His scent. 'Mine' he thought through his haze, and shuddered again with satisfaction as he continued to thrust down into her. His eyes turned to her long slender neck, exposed as her hair fell forward, spilling like a waterfall of blood red wine into the grass. Her perfect, smooth, unmarked skin shone like dark silver. \n\nHe moved naturally, instinctively, letting her build, feeling her tighten around him, feeling himself swell to the point of bursting. He rose up without thinking, his lips curling back over his teeth and felt her skin break between his jaws, and her hot blood seep like liquid fire against his tongue.\n\nInanna screamed, but her chest was already so tight, so breathless, it came out as a rasping cry instead. The sudden sharp pain, and the vibrating pulses of something completely indescribably, as his teeth came down around the nape of her neck, holding her as he fucked her, made her body jerk and twitch against the heavy mass above her. She convulsed and shook, her senses torn between the delicious silk of his stomach sliding against her body, the blissfully electric, half-painful pulsing of her clenching sex around the thick cock inside her, and the red pain of his sharp teeth at her throat. \n\nShe whimpered helplessly in his grip as she felt him release inside of her in undulating waves of heat. Her own body responded instantly, pulsing and sending currents of electric pleasure shooting through her veins. She felt him release her, and after a moment felt the warmth of his tongue against her back and neck, cleaning the blood away, and soothing the ache of the wound. \n\nHer body clung to his as he pulled out of her and she collapsed with an inaudible grunt into the cool of the grass, her only thoughts muddled exclamations of wonder and disbelief. \n\nNothing actually hurt just yet, just throbbed wonderfully, though she was certain it would start aching eventually. But now she just felt...exhausted, empty and full at the same time. She was lying on her side, staring off at nothing in particular, and felt a heavy warm bulk press up against her back. She turned her head weakly and saw him next to her, on his stomach, leaning to one side, scanning the line of trees and the path out towards the road. 'Well', she mused pulling a coherent thought together, 'at least one of us is paying attention.' After which she promptly passed out.\n\n***\n\nInanna grumbled and turned onto her back, this spot was warmer she noted...then frowned. Had she heard something? Why was it so cold? And damp? She blinked open her eyes and stared with confusion at the starlight sky over head. She shifted, realizing instantly that she was laying naked in the grass, and that she hurt all over. Not real bad mind you, just a mild dull ache. It was especially bad in her neck and for some reason in her...oh...yeah. She blinked. Azura have mercy on her. Did she just do what she thought she did?\n\n\"I guess that wasn't an especially twisted dream after all, \" she murmured, \"and I thought the one about Dagoth-Ur was bad.\" She grimaced and sat up, ignoring the slight twinge of a cramp in her side. She ran a hand through her still damp hair and brought several tangles and bits of grass out with it. She propped an arm on her bent knee and looked around. Had he left already? That wouldn't have been very gentlemanly, what with her naked and unconscious in the middle of a bandit infested wood. Not gentlemanly by half. \n\nShe spotted her pants in a heap by her bag and grabbed them, yanking them on and stumbling to her feet at the same time. \n\nFrom the direction of the road she heard a shout. That's what must of woke her up. She grabbed her shirt and dagger, and pulled it, the shirt that is, over her head as she broke into a light jog. Light because she was still waking up, and still ached all over. She came up over a little rise, between the brush that bordered the road and the edge of the little lake, and stopped short. It was the Redguard bandit with the big axe and a mean looking lion, only the bandit was in a heap and the lion was prowling toward her. She balled her fists on her hips.\n\n\"You know, I scared him so bad he didn't even want to fight me.\" She smirked at him as he passed her, and he gave her what she could only describe as a wry look. Could lions look wry? \n\nThis one did. What on earth was he? \"What are you anyway?\" she asked, tailing after him, knowing full well he couldn't answer. \n\n\"Let's play twenty questions then.\" She chirped. She thought his shoulders slumped a little. This was good, talking is good, it would keep her mind off...other things. \"Are you a Khajiit of some kind?\" He shook his head once. She sighed. She grabbed her things and he waited for her, it being assumed, apparently, that he was accompanying her the rest of the way. Well, that is gentlemanly then. Better than she usually got. They kept near enough to the road to keep an eye on it, but out sight of any passersby. \"Are you just an unusually....\"she smirked, \"friendly, lion who thinks he's people?\" He snorted. 'Guess not then'. \n\n\"Am I crazy?\" \n\nHe gave her a side long glance. \n\n\"Well I guess we're not ruling that one out just yet. Hmmm, well, what else,\" she tapped her lip with mock pensiveness, \"what could you be? Are you a sorcerer?\" No. Oh, brilliant! \"Did you go to Leyawin and get bopped with Wabajak?\" He gave her a very confused look. \"You know...Sheogorath's staff? The one that turns things into...well, things? I saw a guy in the fighters guild turn someone's horse into a little white rabbit. No really, I swear on my ancestors, \"she said crossing her heart, \"it was the funniest damn thing I ever saw. I literally cried I laughed so hard. Apparently he'd only done it to amuse his little sister. That's brotherly love for you.\" She frowned. \"I guess that means you're not Sheogorath either. He would have known what I was talking about.\" So that ruled out the mad-god then.\n\nShe appraised him and he ignored her, his eyes were busy scanning the dark. It was sort of nice travelling with someone who was as paranoid as she was, it meant less work on her end. She watched the road and kept thinking out loud. \n\n\"Well, you don't smell deadric...so you're not from the Oblivion planes...\" she winced, \"oh god you're not undead or anything are you?\" \n\nHe gave her another sidelong look that said rather clearly, 'I'm not even going to dignify that with an answer.' \n\n\"Are you mortal?\" Nod. Well that didn't help much. \"How mortal? I mean, like Men or like Mer?\" He cocked his head at her. Maybe he didn't know the difference. \"I'm Mer,\" she gestured to her ears, \"Dunmer specifically, pointy ears, dark skin, red eyes. Altmer are the tall slightly golden obnoxious ones, and Bosmer are the short pale obnoxious ones. Dunmer are somewhere in between. And obviously perfect.\" She purred. \n\nHe snorted. \"Don't pretend you don't think so.\" She murmured mischievously. She quieted and gestured to the road. Two sketchy looking fellows in dark cloaks were chatting behind a rock. That's not suspicious, not at all. They took the long way around to avoid them.\n\n\"Anyway, we live longer. Take me for instance...I'm pretty young, I'm only Eighty six. Of course if I were of the race of men, that would be pretty old, seeing as how they have the life span of a fruit fly. So are you also long lived?\" He glanced at her again and made an affirmative gesture. \"Well, that's interesting then, perhaps you are Mer...of a sort.\" She scrunched her nose, \"Orcs are so I don't see why you couldn't be. Now I wonder how long you do live. My people can stretch their lives up to and over a thousand years, but those are usually the exceptional cases, often involving magica of some kind, like house Telvanni for instance, that is if they can keep friends and loved ones from stabbing them in the back first.\" She looked back at him from the road, he was looking a little bit incredulously at her. \"Not familiar with the Dunmer people I take it?\" \n\nHe shook his head, and she chuckled. \n\n\"Well generally we don't often live too much past five or six hundred, depending on one's lifestyle of course. The life span for my people is decidedly shorter on average. Ashlanders that is,\" she explained, \"we live in the grazelands and the ash wastes on the north steppes of Red Mountain, not exactly the easiest life. I was a clan hunter. It's a big volcano, by the way...Red Mountain. \" She grinned. \"Explains a lot doesn't it.\" \n\nHe made an emphatic nod which made her chuckle darkly again. \n\n\"We all have the eyes and the skin, but it varies. I'm a paler shade of grey than most, and my hair, though not unusual, is less standard than shades of black.\" She still grinned at him and held up a hand, wiggling her fingers and making them glow with subdued fire. \"I've got the volcano in my veins.\" \n\nShe dropped her hand and turned her attention back to the road, her smile fading quickly. They were almost there, she could see the walls peaking through the brush. He must have seen it too and stopped. She sighed and turned back. \n\n\"Well I guess this is where I get off the ship. Shall we part here?\" He bowed his head. She gave him a small, but very sincere smile. Happy to be safely inside city walls, but not quite ready to leave her strange friend, she lingered, looking at the ground in a not quite comfortable silence. \n\nHe didn't go bounding off, and she didn't want to be the first one to go. Ah well, thus is life. You meet a nice lion and then you're forced to go your separate ways. She shook her head at the absurdity of the situation and met his steady gaze. \n\n\"Well, goodnight then Muthsera,\" she whispered softly, \" thank you for seeing me home.\" She smile one last time and turned towards the big grey stone walls, slipping past the stable and nodding politely to the two on-duty guards. They nodded back sullenly and continued to ignore her. \n\nShe stretched and yawned as she picked her way towards her house, stepping around an unconscious Dunmer snoring in the mud. Classy. Then again hadn't she woken up with grass in her hair an hour ago? She snorted. I'm sure his excuse is less interesting than mine, she thought with a smirk. \n\nShe still could quite believe...if she didn't ache like she did...Bloody hell! What's gotten into her? She still felt a little flushed, and her palms were damp. How strange. Very strange.\n\nFeric watched as she walked away, and wondered what exactly' Muthsera' meant. Whatever it was, the way she'd said it made it feel like a caress. He sighed and felt free to watch the sway of her hips as she moved. No harm now. It was too late for that, the damage had been done. And what damage it was. \n\nHe let out the low dangerous growl that he'd been suppressing until she left and stalked off back towards the deeper woods, just in case anyone had spotted him. He doubted it, but she was distracting him by talking the whole time. It had helped. He didn't have to think too much, but now here he was, alone with his thoughts, and the one particular nasty thought about the incredible, insane mistake he had just made. \n\nDammit! Fool! Why in blazes would he ever...like that? In this form...and he bit her! Marked her, and bit her! No thought, no reason, just waltzed right over and claimed her on the spot. Fuck, he bit her! He growled again. If he'd wanted her so badly he could have just shifted, explained himself, and propositioned her the normal way, the way any idiot with half a brain would. But no. He did it the old fashioned way. The way one does it when they claim their mate...because that just makes so much more sense...damn it all to the sixteen hells! \n\nAnd she let him! Now that was hard to get one's head around. She seemed completely un-phased. Damn but those dark elves...what had she said, Dunmer? Remarkable creatures. He shook his head.\n\nHe would just have to forget it happened. No one need suffer the consequences but him. He did it, it was his problem. She wasn't one of them, it shouldn't affect her, and if no one else knew, then it was just his burden, his torture. And if Mirisa finds out...\n\nFuck.\n\nHe was now mated to a practical stranger, not even a race he knew anything about, and he couldn't do a damned thing about it. What's worse...she was beautiful, stunningly even, she was strong, and a hunter like his people, which was so very appealing, and the very worst of it...she just smelled so damn good. He was going to have to stay away from her, far away. He could already feel the pull in his mind telling him to turn around and go back to her. This was going to be incredibly painful. Fuck.\n\nWhen he neared the new den Mirisa was waiting for him. She padded up and brushed against him in greeting. He could feel relief, confusion, sarcasm and irritation roil from her body, and more or less in that order. She shifted and walked over to the door pulling a robe from behind one of the blocks and pulled it on, then tossed one at his feet. He grudgingly shifted as well. At least in the other form they didn't have to talk about it. \n\n\"Told you so you ass.\" \n\nHe grunted. Again, only she could get away with that.\n\n\"You reek of her.\"\n\n\"What's your point Mirisa.\"\n\nShe glared. \"I'm concerned you let her in just so you cou...\" The look he gave her made her stop.\n\n\"That, is out of line.\" She pursed her lips.\n\n\"Yeah sorry. I know, you can do what you want, you're not a kid...but you're sure? You know me better than to think I'm just saying this to be difficult.\" He sighed and nodded.\n\n\"I know, you were right. I did lose my head a little, but not about the tribe or their safety. I still trust her. I wasn't even planning anything, I just sort of...ran into her.\" He sighed again, this time a little more plaintively. She broke her frown and chuckled. \n\n'Yeah, well ,you must have ran into her pretty hard. I guess you've earned a romp though. God knows months of playing hide and seek with these sons of scamps is making me edgy. And I have to say, she is quite the looker. Just...try not to go mixing business with pleasure\" \n\nHe gave her a sardonic look and turned to go inside. Well at least Mirisa couldn't know the rest of the details. If she only knew just how much control he lost she might think he was slipping. Hell he thought he was slipping. He didn't want her challenging him for leadership, this was no time for that, and she was responsible enough to do it if she thought it was best for the group. \n\n\"So,\" she asked conversationally, \"Owyn wants to play bait, are we game?\" He nodded.\n\n\"I think he's capable.\"\n\n\"Me too.\" He smirked at her.\n\n\"\"Really?\"\n\n\"Shut up Feric...he's a kid.\"\n\n\"A kid with good taste.\"\n\n\"Well we can't hold that against him can we.\" She smiled at nothing in particular. Well, he thought, maybe this won't be so bad after all. He felt alright. Mirisa seemed ok, and there were no obvious side effects, aside from the faint pull at the back of his mind...then again, he'd never had to avoid a mate before, he wasn't completely sure what it would do. He'd heard things...and none of them were pretty. but, she was a race he knew so little about, who knew what might happen.\n\nDammit to hell."
    ],
    "authorname": "Enithermon",
    "tags": [
        "oblivion",
        "cats",
        "dark elves",
        "fantasy adventure"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/hunting-the-hunter"
}