{
    "title": "Trailer Trash Ch. 01",
    "pages": [
        "Note from Slick: A lot of you enjoyed the \"TOMBOY\" series and have asked for me to write another story that included sports and some romance. This story starts slow so if you are looking for instant sex go elsewhere. All rights reserved. \n\n*\n\nThe school bus was about five minutes early and had just pulled up to the bus stop when Emily Miller exited her modest mobile home located about half-way down Jacob hollow. \"Wait! Wait!\" she screamed as she held the four books in her arms while running full speed down the dirt road. Today was the big math final that she had to take in order to have a high enough grade score average to get into Black Mountain State. \"WAIT!\"\n\nOnly the dust cloud and exhaust smell from the tailpipe remained behind the bus when Emily finally made it to the bus stop. She knew the next bus stop was almost a half a mile down the road next to her uncle's house. With grit and determination she took off running knowing that she could run the distance in about four minutes. \n\n\"There she comes,\" Maggie Miller yelled when she saw her first cousin running after the bus. \n\n\"Should we tell the bus driver?\" Paul Miller asked her sister. \n\n\"Na, I'll bet you a buck she won't make it,\" Margie said holding up a dollar bill. \n\n\"I'll take that bet,\" Jimmy Davis yelled. Kids were now pushing down the aisle watching Emily gaining ground. \n\nSuddenly the bus started slowing down way before the next stop. \n\n\"What are you doing!\" Maggie yelled towards the bus driver. \n\n\"There's a dog in the road,\" Rufus shouted. \n\n\"WELL RUN OVER IT!\" Maggie cried out. \n\nEmily saw the bus stopping and turned on her afterburners. \"SHU DOG!\" \n\nRufus opened the door and Emily dashed up the steps to a standing applause. \n\n\"Give me my dollar!\" Jimmy said as he jerked it from Maggie's hand. \n\n\"Hey that's my lunch money!\" Maggie jumped over two seats not caring that her short skirt rode high over her basic white panties. \n\nAround the curves and up and down the slopes the bus made its weekday trip to the city about seven miles from Jacob Creek. At the top of the large hill sat the high priced estates that looked down upon Glendale. The Jacob Creek kids stared at the manicured lawn daydreaming that it was their house and the sporty red convertible sitting in the driveway belonged to them. \n\nEmily saw the familiar stop sign and knew the bus would be very shortly passing his house. She pushed over one of the younger kids to stare at the front door hoping Brandon would be leaving just at that moment. \n\n\"Why do you torture yourself?\" Maggie said from across the aisle. \"Hillers don't go out with Creekers.\" \n\nAlthough Emily and Maggie were first cousins they might as well had been sisters. They spent most of their evenings and weekends together since........well....since they could remember. \n\n\"Hush, there he is,\" Emily said as her eyes lit up and a huge smile formed across her lips. \n\n*****\n\n\"Don't worry I'll pick up the dry cleaning!\" Brandon yelled as he grabbed his car keys and headed out the door. He glanced quickly at the large yellow school bus driving by and saw her face again. He tried to remember her name but it escaped him. He knew she was a creeker and had her in a few of his classes the past few years at Glendale High but until the past month didn't know she existed. It was almost a month ago when he and his football buddies sat in the bleachers watching the girls taking gym class. \n\n\"Look Coach James is setting them up for a race,\" Bud Young laughed. \"This ought to be funny.\" \n\nBrandon saw his girlfriend Missy waving up at him but he quickly looked the other way. His parents had set them up a year ago because her father was the mayor and it would possibly help his father's construction company if he went out with their daughter. \n\n\"Do you think Missy will blow them away?\" Bud asked his friend. \"I know I can't catch her in a foot race.\" \n\nBrandon looked down the line of girls and saw one of them looking up towards them. She smiled and blushed when they made eye contact. \"I'll take the third girl from the left,\" he said. \n\n\"GO!\" Coach James yelled. Suddenly twelve girls took off around the quarter mile track stretching around the football field. Missy quickly took the lead and was about four body lengths ahead of the others when she looked up at Brandon and waved. \n\n*****\n\nEmily was blocked in by two girls, which squeezed towards the inside track. She looked up ahead and saw Missy Johnson's dark brown ponytail flapping as she built a sizeable lead. She knew Missy was going out with her heartthrob and even though she didn't have a chance with him she wasn't going to let a Hiller beat her in a race. \n\n\"Look's like your girl is lagging behind,\" Bud laughed as he slapped Brandon on his back. \n\n\"There's still a half to go,\" he said jokingly. Even he had trouble beating Missy. \n\n\"Look she's dropping out,\" Bud laughed when he saw Emily suddenly stop to let the crowd go by. \"I guess you picked the wrong girl.\" \n\n*****\n\nEmily couldn't go forward or to the right and the left was not an option so she did the only thing she could do to get free. She glanced behind her and saw a space and suddenly stopped and watch as the group of girl's raced by. \n\n\"Now we got a fair race,\" she thought as she smiled and took off around the outside of the crowd. Running on the outside track increased the distance but it didn't bother Emily any. \n\n*****\n\nBud had lost interest in the race and had turned around facing the other way when Brandon whispered, \"You want to bet any money on Missy?\"\n\n\"Sure, Ten bucks,\" Bud said smiling thinking his pal had gone wacko. \n\n\"Deal,\" Brandon smiled as all the guys turned to see Emily flying around the bunch. \n\n\"Damn!\" Bud exclaimed as he watched the short hair blonde gain ground on Missy who had not looked back for sometime. \"RUN MISSY RUN!\" \n\nMissy smiled up at the guys again and heard Bud yelled something. She just smiled and saw him pointing behind her. She was smiling when she turned to see one of the Creeker girls only two paces behind. The smile turned to panic as she looked for Coach James who was a quarter the way around. No one had ever beaten her in a race since the third grade and she was the one offered a scholarship for track. Her chin rose upward as she pumped her arms to get more speed. Normally she paced herself in a quarter mile race but the footsteps behind her were getting louder and louder. \n\nThe cheerleaders stopped practicing as did the band. The whispers turned into loud words as the whole stadium was watching the two girls approach the finish line. \n\nSweat poured from Missy's face as her breathing labored. Her mouth was gapped wide for oxygen. Just a bit more she thought. \"I'm going to win again,\" was her thought when out of the corner of her eye she saw some movement. Her legs were like rubber when the other girl's body blew by her. At the finish line Coach James pushed the button on his stopwatch as Emily ran by. Missy made it to the coach and grabbed her knees in exhaustion. \n\n\"YES!\" Brandon yelled. \"Ten bucks pal.\" \n\nThe crowd of girls made it to the finish line and watched as Emily Miller made another lap. She didn't even look winded. \n\n\"A victory lap,\" Maggie whispered and giggled to the other Creekers. When Emily made it back to the bunch the Creeker girls were waiting and cheering. \n\nEmily looked for Missy but the girl had already left the field. \n\n\"Emily right?\" Coach James asked as he walked over to her. \n\n\"Yes sir,\" she said politely. \n\n\"Where have you been for the past three years?\" \n\n\"Here sir.\" \n\n\"My god girl why haven't you come out for track? Do you know you almost tied the state record?\" \n\n\"I live on Jacob Creek sir. I can't stay after school because I won't have a ride home if I miss the bus.\" \n\n\"Hell, I'll make sure you get a ride home,\" Errol James smiled. \"You know with times like the one you just had you wouldn't have any problems getting a scholarship.\" \n\nEmily heard his words but they didn't comprehend. \"A scholarship?\" \n\nErrol looked at the old worn-out sneakers she was wearing. \"Do you have any running shoes?\" \n\n\"Running shoes?\" Emily only had an old dirty pair of sneakers and a nice pair of dress shoes for Sunday services. \n\n\"What is your shoe size?\" \n\n\"I.......uh....don't know.\" The shoes she was wearing were given to her by her aunt and they didn't have a size in them. \n\n\"You look to be about a size seven so I'll see if I can find you a pair. \"Stop by my office in the gym before you finish your last class.\" \n\n\"But sir, I'm not sure if I can be on the team,\" she blushed. Emily's father was real strict about where she could go and not go. \"I have to ask my father first.\" \n\n\"I understand. If you want I could come by your house and speak to him.\" \n\nEmily was ashamed of living in a mobile home because she had heard all the Hiller's remarks about the trailer trash Creekers before. \"No........I mean I'll talk to him tonight.\" \n\n\"Great. By the way where did you learn to run like that?\" \n\nShe smiled for the first time. \"I run my dogs every night for about two miles. They used to be able to beat me.\" \n\n\"Maybe I need to get me some dogs,\" Errol laughed. \n\n*****\n\n\"She was lucky,\" Missy said to her two girlfriends Allison and Brandy. \"She snuck up on me and if I had known she was coming I would have taken off earlier.\" She smiled when she saw her boyfriend walking down the bleacher stairs towards her. \n\n\"Hi,\" Brandon smiled. For the first time his girlfriend had lost a race and maybe now he wouldn't have to keep hearing about how great she was. \"Tough race.\" \n\n\"She caught me by surprise,\" Missy frowned. \"I'll get her next time if she even shows up in gym class anymore.\" \n\n\"Well from the conversation Coach James had with her a few minutes ago I think you have a new teammate.\" \n\n\"No way,\" Brandy said. \"A Creeker on our team. Can't we vote her off?\" \n\n\"I think it's the coach's decision,\" Brandon grinned. \"Besides she might be the piece of the puzzle you need to get the State Championship this year.\" \n\n\"You don't think I can bring it home?\" Missy said as she picked up her books and handed them to him to carry. \n\n\"You can't do it all,\" Brandon answered. \"Why don't you all give her a chance?\" \n\n\"Yuck........A Creeker........get real,\" Allison said while putting her index finger in her mouth like she was going to gag. \n\n***** \n\nEmily saw her friends up high in the bleachers after she walked away from Coach James. Maggie was the first to run down the twelve steps to hug her. \"You did it! You beat Little Miss Perfect.\" \n\n\"Shhh,\" Emily whispered before turning and glancing down at Missy surrounded by her entourage which included Brandon. \"I'm going to have to watch my back as it is.\" \n\n\"I got your back,\" Maggie grinned. Being the youngest kid with three older brothers she could hold her own with the best of them. Maggie peeked down as well and saw Brandon looking up at them and smiling. \n\n\"He's looking at you,\" Maggie whispered. \n\n\"No he's not,\" Emily gasped. \"He doesn't even know my name.\" \n\n\"I bet he will pretty soon,\" Maggie giggled. \n\n*****\n\nIt was fourth period after her math exam when Emily finally had enough time to get to the coaches office. She tapped lightly on the door but he did not answer it. Another teacher walked by. \n\n\"Can I help you?\" Colleen Drake asked. \n\n\"I....uh...was...looking for Coach James.\" \n\nSuddenly the door opened and he stood there smiling. \"Emily....come on in. I was hoping you would make it.\" \n\nEmily held her notebook and chemistry book to her chest as she followed him back into his tiny office. \n\n\"Here..........try these on,\" Errol said while handing her a nice pair of Nike running shoes. \n\n\"Uh....I can't take those.....they look new.\" \n\n\"They are new and you can take them. I normally get a few free pairs of sports shoes every year from Sports World for times like this.\" \n\nEmily knew he meant charity cases but wasn't going to turn down a chance to get some real running shoes. She smiled as she took them from his hands and slipped off her worn sneakers. After pulling on the right on and seeing it fit perfectly she quickly slipped on the second one. \"These are really nice.\" \n\n\"They are yours.\" \n\n\"But my father may not let me be on the team,\" she said sadly while standing on them and jumping up and down a few times. \n\n\"Never-the-less they are yours,\" he grinned. Errol had always felt bad for the kids from Jacob Creek because of the ridicule they received from the Hillers and even from some of the teachers. \"We have our regular pre-season practice starting next Monday so I hope your father says yes.\" \n\n\"Me too,\" she grinned. She sat back down to take them off but he stopped her. \n\n\"Wear them to make sure they fit OK.\" \n\nAgain her eyes lit up and her smile went from ear to ear. \"Thank you sir.\" \n\n\"Please call me Coach,\" Errol grinned. \n\n*****\n\nMissy could see the kids whispering as she walked through the hallways later. For the first time in her life other kids were taking about her in a negative way and she didn't like it. \n\n\"What is that girl's name?\" She whispered to Allison as they waited near the gym. Allison had told Missy that she had seen the girl go into the coach's office. \n\n\"Trailer Trash,\" Allison giggled. \n\n\"TT,\" Missy smiled. Suddenly Brandy turned. \"Here she comes.\" \n\nEmily was so excited to be wearing the new shoes her eyes were looking downward so when she turned the corner she didn't see Missy until she ran into her. \"OHHH!\" Emily bounced backwards when Missy's body shoved forward. \"Sorry.\" \n\n\"You are sorry,\" Missy grinned as she glanced down at the girl's cut-off denim shorts and loose tee shirt. \"Don't you know we have a dress code in this school?\" \n\nEmily's face turned red with anger but she knew from pass history that if a Creeker and Hiller got into a fight it would always be the Creekers fault. She stared into the other girl's hateful eyes as she moved up to her. \"Don't press your luck.\" \n\nBrandy and Allison moved up behind Missy. \"And what are you going to do?\" Missy asked. \n\nNone of them saw Maggie's body as it moved quietly and with purpose behind both Brandy and Allison. \"Are these girls giving you a hard time?\" \n\nBrandy and Allison quickly moved to the side thinking it was a teacher behind them but smiled when they saw the shorter but stockier girl. \"Is this your little sister?\" \n\nEmily saw Maggie clinch her fists and knew she was seconds away from pounding them so she moved into Missy pushing her aside and took Maggie's hand. \"Come on it's starting to really smell in here.\" \n\n\"Bitch,\" Missy said just loud enough for Emily to hear. It was then she noticed the newer running shoes. \n\n*****\n\nBrandon sat on the first bench in the Chemistry class with Bud as they heard the bell signifying the class to start. Old man Johnson looked over his bifocals. \"OK, everyone read experiment 14 and get started.\" \n\nIt was a couple of minutes later when the door opened causing everyone to look up. \n\n\"I'm sorry I'm late,\" Emily said to Mr. Johnson. \"I was with Coach James.\" \n\n\"Next time tell your coach that being late is inexcusable.\" \n\n\"Yes sir,\" she said while looking down and moving past Brandon's bench. She had been afraid that if she looked at him that he would be able to see how much she liked him. For three years and six months he had never said a word to her until now. \n\n\"Nice race.\" \n\nEmily gulped and peeked up into his handsome face and brown eyes. \"Tha.......thanks.\" Her heart was fluttering as she moved to the back bench to sit next to Maggie. \n\n\"What's wrong with you?\" Maggie asked after Emily dropped all of her books on the floor. \n\n\"Shut-up,\" she whispered. \n\nBrandon had noticed her many times before except she had been so shy that he didn't think she really wanted to talk to him. She definitely was very cute and had a nice body but what he liked about her was her smile. Especially when she sat on the school bus as it passed his house. \n\nIt was about ten minutes into the class when Emily noticed Mr. Johnson walk up to her bench. \"Ms. Miller. I would like for you to change benches with Mr. Samuels.\" \n\nEmily had to think for a minute about just who Mr. Samuels was. She knew most of the kids by their first names. It wasn't until she saw Bud walking behind the teacher. Panic sat in quickly because she knew Bud was Brandon's partner. \"But, we have already started the experiment.\" \n\n\"I think we need to change partners once in a while because I know certain students do most of the work.\" He glared at Maggie. \n\n\"Hey, I get the supplies for her,\" Maggie grinned. Maggie wasn't upset because she had thought that Bud was cute. \n\nEmily gulped and picked up her notebook and chemistry book. She moved around Bud to allow him to take her seat and looked to the front of the room at Brandon who was turned on his seat smiling at her. She suddenly realized that he had asked for her to be his lab partner. \n\n\"My name is Brandon,\" he said holding out his strong hand. \n\n\"I know,\" she snapped back at him. After placing her notebook on the bench she looked at the way he had his experiment and noticed it was wrong. \"That's not going to work.\" \n\nBrandon smiled because he had asked Mr. Johnson before the class started to change his partner with someone who knew what was going on. Of all his subjects he was about to fail chemistry and needed some help because it would prevent him from getting his football scholarship. \"Will you help me get it right?\" \n\n\"Sure,\" she smiled at him for the first time not on a school bus. \"This tubing comes from the condenser top and goes to the trap.\" \n\n\"What's wrong with the way I have it?\" \n\n\"It will probably build up pressure and explode,\" she giggled. \n\n\"Oh,\" he grinned. \"So you just saved my life and now I owe you.\" \n\nEmily thought he was serious. \"You really don't owe me.\" \n\n\"I owe you $10,\" he said laughing. \n\n\"What?\" \n\n\"I'll tell you after class,\" he said smiling. For the first time in a long time Brandon felt excited being with a girl. As she pulled the tubing off and reattached it correctly he looked at her soft lips and blue eyes. \n\n\"Don't,\" she whispered as her fingers tried to push the tubing on the bottom of the condenser. \n\n\"Don't what?\" He grinned. \n\n\"Don't look at me.\" \n\n\"Sorry,\" he grinned before turning around and looking at his notebook. For the next ten minutes they drew the piping layout and then called Mr. Johnson over to look at it. \n\n\"Mr. Walsh. You just might pass this chemistry class yet.\" \n\nAfter the teacher turned to walk away Brandon reached over and placed his hand on her which was on the bench. \"Thank you.\" \n\nEmily saw his hand on hers and felt him gently rub across it. It was too much for her little heart to take so she quickly jerked it away. \n\n\"Sorry,\" Brandon whispered looking disappointed. \"I shouldn't have.\" \n\nEmily wanted to grab his hand in hers but knew someone in the class would make sure Missy knew about it. Being on a track team where the captain hated her guts was bad enough. Lucky for her the bell sounded and class was over. She grabbed her stuff and almost ran from the room. It was ten minutes later as she waited for the school bus when Maggie strolled up to her. \n\n\"So are you panties wet?\" She whispered. \n\n\"God Maggie you are so gross sometimes,\" Emily whispered back. \n\n\"I saw him touch your hand.\" \n\n\"Really?\" Emily smiled. \"I thought I was dreaming it. How did you and Bud get along?\" \n\n\"Not bad really,\" Maggie grinned. \"You know once you get to know him he's pretty funny and even nice. So what do you think your father will say about you being on the track team?\" \n\n\"He'll say the same thing as always. EMILY YOU DON'T NEED TO BE DOING THINGS IN SCHOOL BESIDES READING, WRITING, AND ARITHMATIC.\" She said loudly trying to imitate his voice. ",
        "Word was already out in the school that Emily had beaten Missy in a race as well as the fact that Brandon won $10 on the race. Emily smiled when Maggie told her. \n\n\"So that's why he owes me $10,\" Emily thought as the bus moved through the rich neighborhood and then down the hill towards Jacob Creek. \n\n*****\n\nMissy was the last person in school to know that Brandon had bet against her in the race. She waited angrily at his black mustang convertible as he walked down the long steps from the gym to the parking area. \n\n\"Hi babe,\" he said smiling while moving his lips forward to kiss her. But Missy was ready for it and slung her open hand around until it flattened hard against his un-expecting face. \"SMACK!\" \n\n\"Shit! What was that for?\" He asked as he rubbed the red skin. \n\n\"YOU BET AGAINST ME TODAY!\" \n\n\"That fuckin' BUD!\" He grumbled. \"I didn't bet until Emily had passed you.\" \n\n\"EMILY! You know her name?\" \n\n\"Missy it was just a gym class race. Everyone knows you are faster than her.\" He tried to pull her compact body into his but she forcefully shoved him back. \n\n\"I didn't lose the race. She cheated by hiding back until my head was turned. I can beat her any day of the week.\" \n\n\"I know,\" he said feeling her arms fall to her sides. He moved his hands down her lower back until he felt the rise of her round buttocks. \"My parents won't be home tonight if you want to stop by.\" Missy had been promising him that they could go all the way if the conditions were right. \n\n\"I have my period,\" she said lying. \"Why don't you call Emily?\" She huffed before turning and walking over to her BMW coup. \n\n*****\n\nEmily hid the new shoes and was sitting at the kitchen table when her father got home. Jim Miller had hit on some rough times the past few years. His wife had left him for another man and he had lost his job at the refinery where he was the supervisor of the men who operated the big equipment. After the bank took their modest house he finally got a job at the post office. The only bright thing in his life was his daughter who had not given up on him. \"Hi sugar.\" \n\n\"Hi Daddy,\" she smiled as she jumped into his arms for a hug and light kiss on his cheek. \"I made you your favorite.\" \n\nJim glanced at the stove and saw the large steel pot which meant he was going to have Pot Roast tonight. \"Finally something went right with me today.\" \n\nAfter serving him the pot roast and cooked carrots she moved to the chair across from him. \"Daddy you know I want to go to college right and I think I have the grades for a partial scholarship to Black Mountain State.\" \n\nJim sighed and wiped his mouth. \"A partial scholarship won't be enough baby. \"I've used all of our savings just to buy this pre-fabricated home and lot.\" \n\n\"I know but.........I have some......really-really....good news.\" She hesitated when he looked up at her. \n\n\"Well?\" \n\n\"The track coach saw me running today in gym class and.......\" She gulped. \"He thinks I'm good enough to get a full track scholarship.\" \n\nWhat she had just said didn't surprise him because he had seen her running with the dogs the past few months. As much as he wanted to say no he knew it was because he was being selfish and didn't want her to leave him alone. \"Isn't track practice after school? How will you get home?\" \n\n\"The coach said not to worry about it.\" \n\nJim smiled. \"Are you sure he isn't just trying to get another body on the team?\"\n\n\"No............he timed me today and said my time was close to the state record.\" \n\n\"Let me think about it tonight and I'll leave you a note tomorrow morning on the table.\" He normally left for work an hour before she even woke up. However the next morning she was wide awake when she heard the door open and close and his truck start up. After sprinting down the narrow hallway to the kitchen she stopped and frowned when she saw the table empty. She was about to turn around and go back to her bedroom when she noticed a piece of paper on the floor. She smiled when she leaned over to read what was written on it. \n\n\"Never look back.\" \n\n\"Thank you Daddy.\" \n\n*****\n\nOnly a small light was on in the rear of Bud's garage as the two boys sipped on a cold can of beer. Brandon had told his friend about his argument with Missy. \n\n\"Sorry man I didn't think the word would get back to her about the bet,\" Bud said. \n\n\"Actually you might have helped me because things haven't been going so well with her anyway,\" Brandon added. \"My father is going to kill me but I'm going to break up with her.\" \n\n\"The Mayor's daughter?\" Bud laughed. \"He'll probably have you arrested.\" \n\n\"It's all about her,\" Brandon sighed. \"All Missy talks about is her life and how great a runner she is.\"\n\n\"Does this have anything to do with the Creeker girl?\" \n\n\"Her name is Emily,\" Brandon said seriously \"You know she is really smart in Chemistry. How are you doing with her friend?\" \n\n\"She's not as smart but she had me laughing pretty much the whole class. You know talking to a Creeker was a lot of fun because she was not so much into her appearance or clothes.\" \n\n\"How would you like to go on a double date this weekend?\" \n\n\"Holy shit. You're serious about breaking up with Missy. Please do it somewhere where I can see it happen.\" \n\n\"I don't think so. So do you want to go on a double date or what?\" \n\n\"Well hell yes. I hear the Creeker girls all fuck and give damn good blowjobs.\" \n\n\"If you make any bad remark about Creeker girls in front of Emily I'll kick your ass.\" \n\n\"Me?\" \n\n*****\n\nMissy had just rolled out of her bed when she heard her maid call for her. She opened the bedroom door and said, \"What do you want Marie?\" \n\n\"Mr. Brandon is here to see you!\" \n\n\"He probably wants to apologize,\" Missy thought. \"Tell him I'll be down in a few minutes!\" She quickly ran into her bathroom and combed her hair and gargled. A few minutes later she strolled down the stairs. \"Here to say you are sorry?\" \n\nBrandon shook his head and held out his hand. In it was her class ring. \"I don't want to go out with you anymore.\" He had thought of other ways to tell her but decided she would only understand a direct approach. \n\nMissy stopped about three feet from him and looked at the ring. Never had any boy broken up with her before. \"You're joking right?\" \n\n\"I'm not joking Missy. Neither one of us is happy so this is the best way.\" \n\nSteam built up in Missy's body and anger quickly escaped. \"Oh no. You are not breaking up with me. She slapped his open hand causing her ring to fly onto the floor and then swung her other hand up to again slap his face. However his time he was ready for it and grabbed her wrist. \n\n\"We're finished.\" As he held her wrist he grabbed her necklace and pulled it and his class ring over her head. \"I'll give you the necklace back in school today.\" He turned and left the speechless girl in shock. \n\nA few seconds later she realized what had just happened. \n\nBrandon jumped into his black convertible and was backing out when she ran from the large mansion out onto the large lawn. \"Brandon wait!\" But he just pulled down his sun glasses and drove away. \n\n*****\n\nEmily and Maggie knew something was up when their school bus pulled into the large drop off area. Kids were all standing around in clusters whispering about something. Not being shy Maggie moved into one of the groups and spoke to them. A few minutes later she caught up with Emily who had started walking to her locker. \n\n\"Em.......slow down,\" Maggie giggled. \"You are not going to believe what I just heard.\" \n\n\"What?\" Emily asked. She had more important things on her mind than gossip. \n\n\"Brandon broke up with Missy.\" \n\nEmily stopped in her tracks. \"Are you sure?\" \n\n\"Oh yes, everyone knows about it.\" \n\n\"God she is really going to hate me now,\" Emily thought. But at the same time she realized Brandon was a free man. A tiny smile started gradually on her face and by the time she made it to her locker it was a full blown grin. As she grabbed out her Economics' text book she felt someone tap her on her shoulder. She turned expecting it to be Maggie and looked up into Brandon's eyes. \n\n\"Uh......hi...,\" he grinned. \"I......uh..was wondering if.....you would like to go out with me this weekend.\" \n\nEmily heard his words but they didn't make any sense. Her mind was cluttered with so much emotion and excitement that she couldn't even talk. \"Agghh.........go........uhhh.......out?\" \n\n\"I broke up with Missy his morning.\" \n\n\"I........uh....heard,\" she said sweating and feeling flush. \"You want to go out with me?\" \n\nHe smiled. \"Yes.\" \n\n\"I.........uh...uh....guess so.\" Her heart was beating so hard she knew he could hear it pounding in her chest. \n\n\"You guess so?\" he repeated. \"I know we really don't know each other very well but........actually Bud is asking Maggie out as we speak. Maybe we could go on a double date.\" \n\nEmily looked down the long hallway and saw Bud and Maggie talking by her locker. \"Yes.\" She smiled. \n\n\"Great,\" he smiled back at her. \"I can come by your house and pick you up around 7:00PM tomorrow night.\" \n\nEmily panicked realizing she didn't want him to see that she lived in a pre-fab home. \"It might be better if you pick us up at the gas station at the bottom of the hill.\" \n\n\"Uh..........OK,\" Brandon said. \"Bud and I will pick you two up at 7:00PM. If Maggie agrees.\" \n\n\"Oh she will,\" Emily added. \n\n\"See you in Chemistry,\" he said before turning and walking away. \n\nEmily had not noticed two girls who were standing in listening range who were now whispering and giggling. She wanted to ask them to please not say anything but she knew it was hopeless. She closed her locker and walked down towards Maggie and Bud. \n\n\"Good morning Bud,\" Emily grinned. She stopped short when she noticed Maggie's hand in his. \n\n\"So I hope you said yes,\" Bud grinned. \n\n\"Yes I said yes. Brandon has the details.\" Emily replied. \n\n\"See you later,\" Bud whispered to Maggie as he leaned forward and gently kissed her softly on her lips. He turned and moved away. \n\n\"What was that?\" Emily said when he got out of hearing distance. \n\n\"What?\" \n\n\"Yesterday he doesn't know you and today you are holding hands and kissing.\" \n\n\"We didn't really kiss,\" Maggie giggled. \"That's tomorrow night.\" \n\n\"Jesus Maggie. He's going to think you are easy.\" \n\n\"Maybe I am,\" she giggled. \n\n*****\n\n\"That tramp,\" Missy said to Brandy in the girls' locker room before gym class started. \"She must have promised him sex or something.\" \n\n\"That's right. Why would he break up with you unless she promised him she would fuck him?\" \n\n\"Just make sure everyone knows,\" Missy smiled as the other girls walked into the locker room to change into their gym shorts and tee shirts. \n\n*****\n\nEmily had seen and heard the other kids whispering when she walked by or into the early morning classes. Most of them were supportive but a few Hillers pushed up their noses when they saw her. It didn't bother her until she walked into the locker room and Maggie walked up to her. \n\n\"The rumor is that you promised Brandon that you will fuck him. Missy must have started it.\" \n\nEmily quickly glanced over Maggie's shoulder at Missy who was surrounded by four other Hiller girls and started walking her way. \n\n\"You take Missy and I'll take the others,\" Maggie whispered with clinched fists. \n\nBut Emily had noticed something about Missy. As she moved up to her Missy backed up expecting the Creeker to punch her. Missy knew she could get thrown out of school if she hit the Mayor's daughter. \n\nInstead Emily smiled and leaned over. \"Where is Brandon's ring?\" \n\nMissy's hand moved up automatically to touch it but she realized it was gone. \"You're a whore.\" \n\n\"You're a poor loser,\" Emily smiled as she turned and walked to her locker. \n\nMaggie stayed close to Emily while she took off her denim shorts and sweatshirt. The two got dressed and headed out to the track. \n\nCoach James had the girls lining up again to get another chance at seeing if Emily was just lucky the last time. He knew Missy was upset but figured it would make her put in more training hours and to get into better shape if Emily could provide some competition. \n\n\"Hold up,\" the coach said when Emily ran out onto the track. Once she was in line he took out his stopwatch. \"Once around the track again like yesterday.\" \n\nMissy glared down the line at Emily as she took her starting stance. There was no way the Creeker was going to beat her again. Her eyes roamed up into the bleachers where she saw Brandon and Bud as well as half the school who had turned out to see if Missy could lose two races in two days. \n\nEmily smiled at the other girl and wiggled her toes in her new track shoes. Next to her was Brandy who whispered, \"You're going to lose today whore.\" \n\n\"Well see,\" Emily whispered back. \n\n\"Ready, on your marks............GO!\" Coach James screamed. \n\nMissy broke away quickly and put every ounce of her speed in order to get to the front. She wanted to get a big lead because she had seen Emily's speed at the end. \n\nAgain Emily found herself trapped in the pile of runners with Brandy squeezing her into the pack. As she moved back again to let the pack go by so did Brandy. Emily was not ready as Brandy's elbow smacked her in her chest causing stars in her eyes from the pain. \"OWWWL!\" For a moment she lost her breath and even had to pull up for a second. By now Missy was way out in front and even catching the pack would be tough but Emily was not a quitter. \n\nMissy peeked back and saw Brandy giving her the thumbs up. They had talked about roughing up the slut and it seemed to be working. \n\n\"Shit did you see that?\" Brandon asked Bud when he saw Brandy elbow Emily causing her to stop running. \"They are ganging up on her.\" \n\nOthers also saw it and most of the Creekers booed. Coach James saw it as well but was more interested in what Emily was going to do. More than half the race was over when Missy crossed the halfway point. Suddenly the people in the stands were standing and cheering as Emily turned on her afterburners and quickly closed in on the pack. \n\nMaggie had stayed in the pack and didn't know what had happened until she looked back to see Brandy and Emily behind them. She was pissed but waited until Brandy moved back up behind the pack waiting for Emily once more. \n\n\"Come on bitch,\" Brandy laughed as Emily's long strides moved her up close to her. As Brandy swung her body to the side to slam into Emily she suddenly tripped over something and went face downward on the track. \n\nEmily smiled at Maggie and jumped over Brandy's prone body. \"Go get her,\" Maggie yelled. \n\nEmily blew by the pack and saw Missy had about a ten person lead as they passed the \u00be point. She heard the people yelling but didn't know they were cheering for her until she saw Brandon jumping up and down. \"GO EMILY!\" \n\nBecause Missy jumped out so quickly her body was quickly draining of its energy. Her eyes looked ahead at Coach James who had the stop watch in his hand. With all of her last bit of effort she made it to him just before Emily blew by her on the outside. \"I WON!\" She screamed. But no one was clapping. She was breathing rapid as she turned to the stands to see them rooting for her but they were all looking at Emily who continued running around the track again. \"Coach..........I won,\" she directed at Coach James who was also watching Emily. \n\nEmily was disappointed she had not beaten Missy but was thrilled that most of them were cheering for her. She continued the run around the track and as she once again crossed the finished line the cheers were deafening. Embarrassed she gave everyone a slight wave of her hand and moved over to the fence where Brandon, Bud and Maggie stood. \"I guess I lost.\" \n\n\"No, I think you are the big winner today,\" Maggie giggled. They looked at Missy who stood alone in the middle of the track. \n\n\"Do you know you ran the mile in about six minutes?\" Coach James asked when he walked up to her. \n\n\"Sorry,\" Emily answered. \"I think I can do better than that.\" She knew she didn't go all out the last lap. \n\nAs they all walked from the track back to gym Maggie and Bud walked ahead of Brandon and Emily holding hands. Emily was nervous walking like this next to the most popular boy in the school with many kids watching. Her heart almost exploded when he moved his hand down to take hers. She smiled and looked up into his brown eyes. \n\nEmily had about fifteen minutes to shower before the next class and had wrapped up in a large towel before removing her underwear. She moved into the shower room and saw one of the shower stalls empty. After moving inside and adjusting the water she moved her somewhat tired but very excited naked body under the warm spray. It was about a minute later when her shower curtain opened and a naked Missy stood there looking at her. \n\nMissy's world had turned upside down in only a matter of about 24 hours. She was not the fastest runner in school anymore and had lost the most popular guy. She knew her body was one of the best if not the very best she had seen in the school so she figured she would let Emily know it as well. After waiting for the Creeker to go into the shower she pulled open the curtain and grinned. Her smile lowered when she saw Emily's full and very firm uplifting breasts with rosy pink nipples. The girl's abs were tight and creamy leading down to a full blonde bush between her firm and smooth thighs. \n\n\"Can I help you?\" Emily asked as she turned and displayed what only a few of her girlfriends had ever seen. After hiding it under the baggy clothes Emily was proud now showing it. \n\n\"I.......uh.......thought.....this shower was empty.\" \n\n\"It's not,\" Emily said while turning to show Missy her nearly perfectly shaped hips. She heard Missy close her curtains and thought about how Missy had shaven her pubic mound. Emily had read of such things in Cosmopolitan in the library but until now had not seen it. Her fingers parted her thick golden bush and rubbed over her swollen clitoris. For the first time her body was alive and excited. \n\n*****\n\nIt was after school when Maggie ran up to Emily. \"I have us a ride home if you want to go shopping.\" \n\nEmily normally didn't spend too much of her hard earned money on clothing but this was not a normal time. \"Really?\" \n\n\"Yes we need something to wear for tomorrow night.\" \n\n\"I'll call my home and leave a message for Daddy,\" Emily giggled. An hour later the two girls walked through the mall and up to the Victoria Secret store window. \"And why are we looking here?\" Emily asked. \n\n\"Well I hear that Brandon only broke up with Missy because you promised you would let him fuck you,\" Maggie whispered. \"So you will need some sexy underwear.\" \n\nEmily punched her friend on the shoulder. \"Don't even say that as a joke. I won't need sexy underwear because he won't get that far.\" \n\n\"Too bad,\" Maggie giggled as she held up a tiny matching set of black panties and a bra. \"It's about time we lost our virginities.\" \n\n\"Speak for yourself,\" Emily blushed when an older woman who overheard Maggie walked by. Emily too purchased a sexy pink panty and bra set but not as tiny or sheer as Maggie's. After buying a new and tighter blouse Emily and Maggie then headed over to the front of the mall where Maggie's aunt picked them up. \n\n\"I'm in here,\" Jim yelled when he heard his daughter come home. \n\nEmily moved into the small living room and put her book bag on the chair. Inside of it were her new clothes that she didn't want him to see. \"Hi Daddy.\" \n\n\"So why the last minute trip to the mall?\" \n\n\"Uh.......there's a party tomorrow night and Maggie and I are going to go to. I just wanted something to wear.\" \n\n\"You look good in anything,\" Jim grinned. \"So show me what you bought.\" \n\n\"It's just a blouse,\" Emily lied. \"Not much.\" ",
        "\"That's OK. I like seeing what you buy,\" Jim said feeling uneasy about her reaction. \n\n\"I.......uh....have to go to the bathroom,\" she said as she grabbed her book bag. She tossed it in her bedroom and moved into the bathroom. \n\nJim knew he shouldn't do it but he had to see what all the secrecy was about. He jumped from the sofa and quickly moved into her bedroom. After opening the zipper he saw and looked down into the gold Victoria Secret bag and gasped. \n\nEmily took her time in the bathroom hoping he would forget about looking at the clothing she had purchased. After finishing an article of her teen magazine she flushed, washed her hands and moved outside. She froze when she saw her book bag open and her clothing bags missing. \"I can't believe you took my clothing bags,\" she said as she walked into the living room.\n\nJim held up the pink bra and panties. \"Is there something you want to tell me?\" \n\nEmily thought quickly. \"After the party a few of us girls are going to have a slumber party. I..............I mean we all sit around in our underwear and pajamas. Most of my underwear is old and...\" Suddenly her eyes teared up and she started to cry. She didn't want to complain to him about her lack of nice clothes because he had lost so much the past few years. \n\nJim felt about three inches high. \"Oh God I'm such a jerk,\" he whispered as he hugged her body into his. \"I have to remember you are almost a woman now and you should have nice clothing. I wanted to surprise you but I got a promotion at the post office and will be making a lot more money.\" He reached into his pocket and pulled out a hundred dollar bill. \"This is yours.\" \n\n\"Oh Daddy. I love you so much.\" Her tears turned to tears of joy. \n\n***** \n\nBrandon was sitting in the family room watching TV when he heard his father's voice, \"Brandon will you please come up here?\" \n\n\"Sure...........what's up?\" He asked when he turned the corner only to see Missy's father the Mayor standing there. \n\n\"Mr. Cameron,\" Brandon said nervously. \n\n\"Hello Brandon,\" the Mayor said without smiling or offering his hand to shake. \n\n\"The Mayor just told me that you broke up with his daughter,\" Paul Cook said. \n\n\"Uh.......yes sir.....,\" he said softly. \n\n\"Well Missy has taken it pretty hard,\" Mayor Jack Cameron said. \"She said you were pretty abrupt and didn't even give her a chance to reconcile any problems you might have thought you two had.\" \n\nBrandon wanted to let the pudgy short and bald man have it but he held back because of his father's business. \"Sir, things haven't been good for us for quite a while and......\" \n\n\"Well I think you owe it to all of us if you would just give her a call and maybe get together this evening,\" Paul said. \n\nBrandon couldn't take any more. \"You know my dating Missy was arranged in the beginning and it was a mistake then. I'm sorry sir but I think it's best for all of us if we just stop it right now.\" He turned and moved back down the stairs. A few minutes later he could hear the Mayor speaking loudly and then heard the front door close. His father walked down a few minutes later. \n\n\"You broke up with her because she wouldn't let you fuck her?\" \n\n\"That's not it,\" Brandon said calmly as he gripped the football tightly in both hands. \"To be truthful Missy only cares about herself.\" \n\n\"Well fuck son. What am I going to do about the contracts I have with the city?\" \n\n\"I'm sorry Dad but I can't do it any longer.\" \n\n\"No but you can date some trailer trash girl from Jacob Creek?\" \n\nThat was it for Brandon as he rose and stood five inches over his father. \"You know I've always been proud of you. Until now.\" He moved by him and their shoulders smacked firmly together. \n\n\"Me too,\" Brandon heard his father say as he moved up the stairs. He needed to talk to someone and found his car heading over the hill to Jacob Creek. \n\n*****\n\nMaggie had just finished her work shift at the gas station when she noticed the black sports car pull up. \"Well look at that,\" she said to the man who was taking the next shift. \"I'll help him.\" \n\n\"Hello,\" Maggie grinned as she walked up to his car. \"Fill er' up?\" \n\n\"Oh hi Maggie,\" Brandon said. \"Actually I was looking for Emily.\" \n\n\"I thought the date was tomorrow night?\" Maggie asked suspiciously. \n\n\"It's is but I.........I guess I should just go back up the hill.\" \n\n\"No...........wait,\" Maggie said. She knew Emily would kill her if she had sent him away. \"Let me give her a call and see if she can see you.\" Maggie knew Emily was ashamed of her mobile home. \n\nAs Brandon waited in his car Maggie quickly called Emily's cell phone. She answered on the second ring. \"Hello.\" \n\n\"Em........it's me. Brandon is down at the station looking for you.\" \n\n\"Now?\" \n\n\"Yes now. He wants to see you.\" \n\n\"Oh God,\" Emily said as she looked at her image in the window next to her bed. \"I'm a mess.\" \n\n\"What do you want me to tell him?\" \n\n\"See if he can wait about fifteen minutes. I'll be there as soon as I can.\" Emily said before hanging up and running into the bathroom. After washing her face and combing her hair she ran back into the bedroom and pulled off her nightshirt. She thought about putting on her new underwear but didn't. A few minutes later she moved into the living room. \"Dad I'm going down to Maggie's for a few minutes.\" \n\n\"What?\" Jim asked when she woke him up. \"Ok........just don't be too late.\" He quickly fell back to sleep. \n\nEmily put her track shoes on and ran down the dirt road about \u00be of a mile. She saw his car when she turned the curve and started walking slowly. When he saw her he moved out of his car and walked up to her. \"Thanks for coming out.\" \n\n\"Is there something wrong?\" she asked hoping that he had not gone back with Missy and was breaking their first date. \n\n\"Well.....sorta but....\" He looked over his shoulder at Maggie who was standing near them trying to listen. \"Can we go somewhere?\" \n\n\"Uh......\" Emily remembered her father's warnings about getting into a car with someone she really didn't know. \"Why don't you leave your car here and we can walk down to the elementary school?\" \n\n\"Sure,\" Brandon answered. He went back into his car and as he parked it next to the garage Maggie ran over to Emily. \"What is going on?\" \n\n\"I don't know,\" Emily answered. \"He wants to talk?\" She lifted her shoulders. \n\n\"Do you want me to follow you?\" \n\n\"No, we are just going to the school to talk. I'll be OK.\" \n\nBrandon walked back over to the two girls and then walked next to Emily about a \u00bc mile away to the school. \"Are you OK?\" Emily asked. \n\nBrandon smiled. \"I am now. I've found someone who really cares if I'm OK.\" He realized they were now out of site of the garage and reached down to take her hand in his. \"Thanks for coming out tonight.\" \n\n\"I was bored anyway,\" Emily grinned. She rubbed her small thumb over the back of his strong hand and felt her body heating up again. A few minutes later she led him to the playground and to the swings. She didn't want to let his hand go but did when she sat in one swing and he in the other. \"So welcome to Jacob Creek.\" \n\n\"I've been here a few times,\" Brandon grinned. \"I never really had much reason until now.\" \n\nEmily blushed at his reference to his desire to see her. She wanted to ask him why he was there but waited. Finally after a few quite minutes he said, \"Missy's father came by my house tonight.\" \n\n\"The Mayor?\" \n\n\"Yeah........big deal......Mayor of Glendale,\" Brandon laughed. \"She told him that I broke up with her without giving her or us a chance to reconcile our differences.\" He realized that maybe Emily didn't want to hear about Missy. \"I'm sorry. I know Missy is not your favorite person right now.\" He had heard about their verbal exchange in the locker room. \"She shouldn't have said what she said about you.\" \n\n\"That's OK.\" Emily smiled. \"People who really know me know that it's not true.\" \n\n\"How come I've..........I mean........we have......never........you know....talked?\" \n\nEmily laughed. \"I'm a Creeker and you are a Hiller.\" \n\n\"I know but I have some friends down here that played on the football team.\" \n\n\"How many Hiller guys date Creeker girls?\" Emily asked. \"Or even Hiller girls date Creeker guys?\" \n\n\"That's pretty bad isn't it?\" \n\n\"It goes both ways,\" she said as she jumped off the swing and moved over to a wooden bench by the slide. \"A lot of my girlfriends wouldn't think of dating a Hiller guy.\" \n\n\"Why not?\" Brandon asked while moving next to her on the bench. \n\n\"Let's see,\" Emily said as she patted her index finger on her lips. \"Hiller guys are conceded, have big egos and are normally into themselves. Did I miss anything?\" \n\n\"Uh.........no,\" he grinned. \"Do you think I'm like that?\" \n\nShe reached down and took his hand in hers again. \"If I did I wouldn't be here right now.\" Suddenly their eyes locked and their heads moved closer and closer until his lips pressed against hers. \n\nEmily didn't have any sexual experience but could kiss with the best of them. He was patient by not trying to french her but she wasn't. It was her narrow hot tongue that licked across his lower lip until his mouth opened just enough for her tongue to dash inside. \n\nAfter dating Missy for so long Brandon had forgotten how exciting it was to kiss and to let the girl know how much he enjoyed kissing her. Emily's lips and tongue quickly had him aroused and breathing heavily. Finally after two minutes of deep wet kissing she pulled her lips from his. \n\n\"Jesus,\" he said while smiling and taking a deep breath. \n\nEmily giggled at his reaction and peeked down at the swollen member pushing up on his jeans. \"I'm glad you came by tonight.\" \n\n\"I told my father and the Mayor that Missy and I are through,\" he said as he caressed the tiny blonde hairs on her forearm. \n\n\"That tickles,\" she giggled however she didn't stop him as his fingers moved slowly up her arm onto her covered shoulder and then slowly up her soft neck. \"That........feels good,\" she purred. They played with her earlobe and then moved over her cheek to her closed lips. She kissed the fingertips before they continued to her other ear. He was quickly turning her on and getting her passions up to where his were. As his fingers moved down her neck towards her other shoulder his wrist brushed against her right breast. She gasped and he quickly pulled his arm and hand away. \n\n\"Sorry.........I wasn't.......trying to......\" \n\nEmily had dreamed of this moment for so long and now that it was here it was moving too fast for her. \"I know,\" she whispered. \"Let's talk some more.\" \n\nBrandon smiled and leaned back with his hands behind his head. \"What do you want to know?\" \n\n\"Tell me about Brandon,\" she whispered as she took his arm and pulled it over her head and down her shoulder. \"What do you like and dislike?\" \n\n\"Let's see........I like football and basketball........and pizza and....video games. I.........uh...........dislike.....mean people and liars and ...............Mayors. Emily laughed and took his hand over her shoulder and brought it up to her lips. She kissed the tips of each finger. \"Is that all you like?\" \n\n\"No.....,\" he grinned as he moved his face down to look into her eyes. \"I like you.\" \n\nAgain Emily blushed because she had never really had that serious of a boyfriend before. \"You don't even know me.\" \n\n\"I know enough and when I was having a hard time at home tonight the only person I could think of was you,\" he whispered. He closed his eyes and again moved his soft lips to hers. This time their tongues met at their lips and moved aside to allow the other intruder in. \n\nEmily was lost in her passions as they turned their bodies to get closer. She moved her hand out to pull his hips into hers when her fingers pressed into his hard-on. Her eyes opened and her tongue moved back but he would not let her go. She quickly moved her hand from his crotch and returned her tongue into his lips. It took three minutes this time before they broke apart. \"I didn't mean to....\" She said blushing. \n\n\"I know,\" Brandon laughed. Then she laughed. It was then Maggie ran up onto the school yard. \n\n\"Emily your dad is looking for you.\" \n\n\"I better go,\" Emily grinned as she stood and took his hand. \"I live up this way.\" She pointed to the hollow behind the school. \n\n\"Thanks for coming out and seeing me,\" he whispered. He wanted one more kiss before they parted but Maggie stood there gawking. \n\n\"Uh Maggie.........\" Emily said as she pulled out of his arms. \n\n\"Sorry,\" Maggie smiled as she turned and looked away. \n\nEmily melted into his big arms and body and felt his hard penis right away. Her body would not allow her to pull away so she pressed into it harder until she measured its length. It was huge. \n\nBrandon also was surprised at the large breasts now pressing into his muscular chest. Her baggy clothes had definitely hidden her assets. As their tongues danced together one last time that night their hands and fingers explored each other's backs but above the waistline. \n\n\"Ah hem,\" Maggie said after another minute had passed. \n\nEmily broke away and whispered. \"I can't wait until tomorrow night.\" \n\n\"Me too,\" he whispered back. He turned and moved back down the road to the gas station. \n\nAs soon as he was out of sight Maggie smiled. \"Did you see how big he is?\" \n\n\"No,\" Emily lied. \"Why do you have to make everything relate to sex?\" \n\n\"Tell me your panties are not wet,\" Maggie giggled. \n\nEmily wanted to lie but couldn't. \"Well..........just a little.\" \n\n\"Right.\" \n\nWhen Emily walked into her mobile home she found her father sitting up. \"Why did you call Maggie?\" \n\n\"Your cell is on the counter in the kitchen. You never leave without it and why didn't you get on the phone when I talked to Maggie?\" \n\n\"I walked down to the gas station for some gum. Maggie had to finish the dishes.\" She lied. It was the second lie she had told him that day and she couldn't remember the last time she had lied to him. \n\n\"Sorry but.........you know I worry about you,\" he said. \"Tomorrow night I'm going over to Bobby's house to play some poker.\" \n\n\"I remembered,\" she smiled. \"I'm going to bed. Goodnight daddy.\" \n\n\"Goodnight peaches.\" \n\nEmily moved into her bedroom and locked her door. She didn't even look for her nightgown as she quickly stripped and moved under her covers completely naked. Her mind thought back about how hard and stiff he was when she accidentally touched it and how long it felt pressing against her stomach. Her fingers parted her blonde bush and toyed with her raised clitoris until she was ready to cum. Never before had it been so good and so exciting. \n\nBrandon too was in his shower thinking about Emily's hot kisses and soft breasts. His eyes were closed as he imagined sucking on her hard tips and caressing her round ass. But most of all he imagined being naked with her in a bed hugging and touching. He only lasted a couple of minutes before the hot spray washed away his spunk. \n\n*****\n\nThe next morning Brandon hopped down the stairs in the best mood he had been in for quite a while. He hoped his father was not around and smiled when he saw his mother at the table. \"Hi Ma.\" \n\nSylvia looked up when her son walked in and saw the smile on his face. \"What are you so happy about?\" \n\n\"Didn't Daddy tell you?\" \n\n\"Well yes but I got the impression you were having a hard time.\" \n\n\"No he's having the hard time because he's only worried about losing the construction contracts. I guess those are more important than my happiness.\" \n\nSylvia smiled because she had never really liked Missy anyway and knew the girl was all about herself. \"I'm glad you are happy. Now tell me about this........other girl.\" \n\nHe grinned and pulled a bagel from the large basket on the table. \"I have never met anyone like her before. She's up front with you and has a great smile and I just really like being with her.\" \n\nSylvia grinned because it was the first time she had seen his eyes sparkle just from talking about a girl. \"I'll talk to your father.\" \n\n\"Thanks Mom,\" he said while leaning over to kiss her cheek. \"You know I think I like Emily because she reminds me of you.\" \n\nSylvia felt her eyes tearing up. \"Well she must be nice.\" \n\n\"She is.\" Brandon jumped up and moved into the game room to play some video games to get his mind off of Emily. \n\n*****\n\nEmily slept in the next morning until she heard her father tapping on her door. \"Emily can I come in?\" She pulled the sheet up over her nakedness and watched the doorknob turning. \"Give me a minute!\" She yelled. \n\nJim stood outside wondering why she had locked her door. A few minutes later the door opened and she stood there in a long blue terrycloth robe. \"You are locking your door now?\" \n\n\"I......uh....was trying on clothes.\" Again she lied. \n\n\"Well......I just wanted to tell you that your mother called this morning and she wants to talk to you.\" \n\n\"I don't want to talk to her,\" Emily snapped back. Since her mother left her father for another man Emily had only spoken to her about five times. \n\n\"She said she has broken it off with Bill and is living alone downtown. She wants to meet with you for lunch sometime.\" \n\n\"I don't want to speak to her,\" Emily said firmly. \n\n\"Emily she left me not you,\" Jim said standing in her doorway. \"She felt it was best that you stayed here with me and all of your friends.\" \n\n\"I'll think about it.\" \n\n\"Good.\" \n\n*****\n\nIt didn't take the Mayor long to get the city engineer to call Jim and tell him he did not get the large drinking water plant contract. Jim had not gotten much sleep the night before because of what his son had said about not being proud of him. He definitely regretted what he had said back to him. He knew he should have cooled down but his temper got the best of him as he shoved open the Mayor's door. \n\nMayor Cameron pushed his chair back when he saw Jim barge in. \"What do you want?\" \n\nJim leaned across this desk and looked the small bald man eye to eye. \"I just wanted you to know I'm glad my son dumped that stuck up princess of yours. And, I want you to also know that I know all about your brother in law getting the waste disposal contract.\" \n\n\"How dare you come in here and threaten me. I can have you arrested.\" \n\n\"I don't think you want to bring the law into this,\" Jim grinned before backing away. He looked at the picture of Brandon and Missy on the Mayors bookshelf and picked it up. As he pulled off the back and took out the print he said, \"I'm proud of my son for doing something he should have done a long time ago.\" With that he ripped the photo in half and took the half with his son on it. \n\nMayor Cameron looked down at the torn photo on his desk of his daughter Missy as Jim turned and walked out. \n\n*****\n\nMaggie stood behind Emily as they combed their hair for about the tenth time that afternoon. \"God I feel like this is my first date,\" Maggie giggled. \n\n\"It is the first one I've had with someone I really like,\" Emily added. \n\n\"Let's put on our new undies,\" Maggie giggled again. \n\nBefore Emily could answer she looked into mirror and saw Maggie pull off her tee shirt and sports bra. Two small but perfectly shaped breasts appeared with two hard cherry red nipples in the centers. \"I wish mine were as big as yours.\" \n\n\"I have always wished for smaller ones,\" Emily blushed as she pulled off her shirt and bra. \"I know they slow me down some when I run.\" Both sets of eyes looked at the 36C mounds and large light pink areoles. \n\n\"I'll bet Brandon likes them tonight.\" \n\n\"Would you stop? This is our first date and he won't be seeing these tonight,\" Emily smiled. \n\n\"I spoke with Bud this morning and he said they want us to come over to Bud's house tonight because his parents are out of town.\" \n\n\"I don't think that's a good idea,\" Emily said before unsnapping her shorts and pushing them and her plain white panties down over her pink hips. When she stood back upright Maggie was also naked showing her newly trimmed light brown bush. \"When did you do that?\" ",
        "\"This morning. I read that most guys like it. You should do yours.\" \n\nEmily looked at her wild growth of Golden Fleece. \"I told you he's not going to get that far.\" \n\n\"I saw how you two kissed last night. I think you want it more than he does.\" \n\n\"Those were just kisses,\" Emily said before turning and picking up her new panties. She pulled them up over her thick growth and saw the many escapees. \"Maybe I should trim it some.\" \n\n*****\n\nBrandon was home alone that afternoon still playing some video games when the doorbell rang. He opened the door to see Missy standing on the doorstep. \"What do you want?\" \n\n\"That's not a nice way to greet someone you dated for two years,\" she said. \"Can I come in?\" \n\n\"It's not a good idea.\" \n\n\"At least give me ten minutes,\" she said before pushing open the door and walking inside. \"Are you alone?\" \n\n\"Yes.\" \n\n\"Good.......maybe we can have some privacy.\" \n\nBrandon noticed the micro short and tight skirt and the almost sheer pink silk blouse. Since it was Saturday afternoon he wondered why she was dressed up. \"What's the occasion?\" \n\nMissy peeked down at the semi-sheer blouse and her new half-cup bra. \"Us.\" \n\n\"Missy there is no..........US.......anymore,\" he said quickly looking up from her pink mounds. \n\nBut she only smiled as she walked by him into the familiar den that they had necked so many times before. \"We had a lot of good times on that sofa.\" \n\nBrandon watched as she sat down but didn't worry about her skirt like she normally did. \"Those times are over.\" He did remember the many nights that she had allowed him to fondle her bare breasts under her shirt or even touch her bare pussy under her panties. Never had she allowed him to see either of them. Only once did she jerk him off to completion which left many a night with him having a hard-on after she left. Never had she worn a short skirt while they were alone. \n\n\"So can I have a drink?\" She purred. \n\n\"Missy.....you have to leave.\" \n\n\"It's just a drink and then I'll go.\" \n\n\"Diet Pepsi,\" he said before turning and walking into the kitchen. He knew her clothing was getting his excitement up and wanted to get her out of the house. \"Here you go,\" he said as he walked back into the den. He froze when he saw her naked body lying back on the black sofa. \"What the fuck?\" \n\n\"It's what you wanted right?\" she giggled as her left leg opened wider to show him her pink slit. \"You don't have to go to Jacob Creek to get it.\" \n\nBrandon was speechless because so many times he had tried to imagine what her naked body looked like and now it was there all laid out for him. Her breasts showed no sag and her nipples were begging for his attention. \n\n\"Come here,\" she commanded softly. \n\nBrandon's body failed him as it did what she said. He sat at her feet looking down into her glistening and swollen pussy lips. She reached down and took his hand before guiding his fingers up to gently rub across her opened outer lips. \n\n\"Touch me.\" Missy whispered as she let go of his hand and opened her legs wide for him. \n\nIt had been a few weeks since she had allowed him to touch her down there but this was the first time he had free access to explore. His middle finger captured her dampness as it moved down over her bald pubic area and then down over her raised clitoris. \"Ohhh,\" she moaned as her legs opened even wider. Now she was totally open for him to do as he pleased. \n\nThe video game kept making the same sounds as his fingers moved down into her pinkness. He was about to pull away and push down his shorts when his finger moved into her pussy up to the middle knuckle. His puzzled face looked into her eyes after realizing she was not a virgin. \"You're not a virgin.\" \n\n\"It's Ok,\" she giggled. \"You won't have to worry about hurting me with your large.....\" she giggled. \"Take off your shorts and put it in.\" \n\n\"But...........when?\" He moved his hand back from her moist lips. \n\n\"When you broke up with me I was really mad and I called Jerry.\" \n\n\"Jerry! Fucking Jerry Rhodes.\" Brandon knew that they had dated before the Mayor set her up with him. \n\n\"He doesn't mean anything to me,\" she said as she sat up next to him. Her fingers pulled down his zipper and reached in to pull out his hard long cock. \"I love you.\" \n\nIt was the first time she had said those words. Before he could stop her she lowered her mouth and engulfed his huge crown. \"Oh God,\" he moaned as her tongue flicked up and down his shaft while her lips moved the same. \"Stop,\" he said while gaining enough strength to pulled her mouth from his hard-on. \n\n\"Did Jerry teach you that too?\" \n\n\"Yes......but I'm yours now,\" she giggled while pushing him back and throwing her leg over his lap. Her fingers aimed his cock up at her bald pussy lips as she lowered her body downward. As the crown pushed into her inner lips she felt his strong hands jerking her up and off. \"Brandon don't.\" \n\n\"Missy........I'm going upstairs. When I come back down I want you out of here,\" he snarled at her. \n\n\"But........I want you to fuck me.\" She sobbed. \"Isn't that why you broke up with me? \" \n\n\"No, I broke up with you because I don't like you. Go and get Jerry to fuck you.\" \n\n\"Brandon please,\" she begged but he was gone. \n\nJim Walsh decided to call it quits that day after his blowup with the Mayor. When he pulled into his driveway he noticed the silver BMW coupe of Missy's parked next to Brandon's car. \"This should be interesting,\" he grinned as he moved into the front door. He heard a door close upstairs and walked softly down the hallway. He looked into the den and saw Missy pulling up her white lace panties over her bald pussy mound. His eyes roamed up to her nice titties and tiny nips. It had been a while since he had seen someone as beautiful as she was. He tried to turn and back away but she looked up and saw him. \"Mr. Walsh!\" \n\nJim turned expecting her to be covering her nakedness and shocked but instead she stood proudly showing him her privates. \"Oh I'm sorry.......Missy........I didn't know.........\" \n\nMissy was shocked at first but realized that he was a man and she had this power over men. \"It's OK. I'm sure you've seen naked women before.\" \n\n\"I......uh.....better let...you...get dressed,\" he could see her shaven slit through her sheer panties. \n\nMissy dropped her bra and walked slowly up to him. \"I was hoping you could talk to Brandon about us.\" \n\nAlthough Jim was mesmerized by her nakedness he was no fool. \"Brandon has made his decision and it's his to make. Right now I think he made the right choice.\" Jim smiled and walked up the stairs. \n\nBrandon was lying on his bed listening to his IPOD when he heard a tapping on his door. \"Shit,\" he said before jumping up and opening it. \"Missy let it go!\" \n\nJim smiled. \"I think she will after today.\" \n\n\"Dad.\" \n\n\"I just wanted to say that I was very wrong and am sorry. I'm so proud of you.\" \n\nBrandon smiled and hugged his father. \"I'm proud of you too dad.\" \n\n*****\n\nMaggie was lying across Emily's bed reading a magazine when her cousin walked in wearing tight jeans and her new blouse. \"Damn girl.........are you sure you are my cousin?\" \n\n\"Yes,\" Emily giggled as she turned showing the tight jeans across her round buttocks. \n\n\"Well we have ten minutes to get to the gas station.\" They grabbed their purses and hurried out of the door. \n\nBud and Brandon were 30 minutes early and anxious as they waited for the girls to come and meet them. One of the guys from the football team named Scott Miller stopped for gas and saw Brandon. \"Yo...whasssup?\" \n\n\"Just waiting for someone,\" Brandon grinned. \n\n\"Yeah I heard about you and Emily. You know if you mess with her I'm going to mess you up.\" \n\nBrandon smiled at the 260 pound linebacker who had messed with a lot of opposition the past year on the field. \"I'll remember that,\" he smiled. \n\nAfter he left they saw the girls walking down the narrow blacktopped road. \"Holy shit,\" Bud said when he saw the two girls in tight jeans and silky blouses. \n\nBrandon only grinned as Emily walked up to him. \"Hi.\" \n\n\"Hello,\" she said softly. \n\n\"You look really nice.\" \n\nEmily blushed as she saw his eyes checking out her tight clothing. \"Thank you.\" \n\n\"Would you like to get something to eat?\" Bud asked as he put his arm around Maggie's back. \n\n\"Sure,\" she grinned. \"I'm starved.\" \n\n\"Let's go,\" Brandon said as he held open the passenger door for Emily while Bud did the same in the rear for Maggie. A few minutes they were driving back up the hill. They passed Brandon's house and Emily smiled as she remembered all the times on the bus when she looked at the front door hoping he would come out. She glanced at him and saw him looking at her. \n\n\"Uh......keep your eyes on the road,\" she giggled. \n\n\"Sorry,\" he said looking sad. He then reached over and took her hand in his. She didn't let it go. \n\n\"Your table is ready Mr. Walsh,\" the short woman said to them as they waited at the country club restaurant. Brandon could see the woman was puzzled as to why he was not with Missy. \"Thank you Janet.\" \n\n\"Wow, I feel like royalty,\" Maggie giggled as Bud pulled back her chair and waited until she sat down. \n\n\"Me too,\" Emily smiled as Brandon did the same. The dinner was going perfectly until Brandon saw Missy walk in with her parents. \n\n\"Shit,\" he whispered as he quickly looked away. \n\nEmily heard him curse and turned just to catch Missy's glaring eyes when the girl saw her sitting next to Brandon. \"Ut....oh.\" \n\n\"Ignore her,\" Brandon whispered. They managed to do just that as they finished their salads but just before the entr\u00e9e's came Emily saw Missy's feet next to her chair. \n\n\"Well look what we have here. Creekers eating at the County Club. Who would have thought?\" \n\n\"That's enough Missy,\" Brandon said as he tossed down his napkin and started to stand. \n\n\"Don't worry I'm leaving,\" Missy grinned. \"Make sure you tell her about our fun we had today at your house.\" She licked her lips and walked away. \n\nBrandon gulped and glanced at Emily who stared back at him. \"Your house..........today?\" \n\n\"It's not what you think,\" Brandon said quickly. \n\n\"I hope it's not what I'm thinking,\" Emily said feeling the anger rushing to her fists. \n\nBud and Maggie sat back watching it all unfold. \n\nEmily waited for him to say it was not true but he just looked at her. \"And, I thought you were different.\" A few tears formed in her eyes as she slowly dropped her napkin onto the chair and stood up. She turned and quickly walked towards the restroom. \n\n\"Emily wait,\" Brandon said but she was already out of the room. Maggie quickly got up and followed her. \n\n\"What was that all about?\" Bud asked. \n\n\"Missy came by today and offered herself to me thinking it was why I broke up with her,\" Brandon whispered. \"We messed around some before I came to my senses.' \n\n\"Shit man. If you screw up my date with Maggie I'll........\" Bud stopped after realizing Brandon was six inches taller than he was and weighed about thirty pounds more most of which was muscle. \"Never mind.\" \n\nBrandon glanced over at Missy now sitting next to her father. She winked at him and smiled. \n\n***** \n\n\"Emily you don't know what happened,\" Maggie said outside the stall her cousin had locked herself in. \"At least let him explain.\" \n\nA few seconds later Emily walked out wiping her eyes. \"I guess you are right........I mean...he said he doesn't like her anymore.\" \n\n\"Jesus, I never thought I'd see you crying over some guy,\" Maggie said as she hugged her. \"Go out onto the patio and I'll send him out to talk to you.\" Maggie turned and moved back into the restaurant. \n\nA few minutes later as Emily looked out onto the well landscaped golf course she heard the door open behind her. She didn't turn around. \n\nBrandon walked up behind her and started to touch her shoulder but stopped. \"She came by today unannounced and I told her to leave but she didn't. After I got her a drink I found her......\" He stopped. \"I found her naked on the sofa.\" \n\nEmily took a deep breath and moved away from him as she tried to control her anger. He moved up behind her again. \"Emily......I won't lie to you. I touched her and then realized it was only you I want to touch. But she was so determined. She unzipped me and...\" \n\nEmily had heard enough. \"I guess your desires to touch me were not enough were they?\" She wiped some more tears from her eyes and moved towards the steps leading down to the putting green below. \n\n\"Wait..........I stopped her and told her to leave. I knew I shouldn't have done anything with her but.......I'm such an ass.\" \n\nEmily stopped in the middle of the stairs and turned. \"You stopped it and told her to leave?\" \n\n\"Yes........I only want to be with you.......I mean I don't mean you know....\" He realized that she could take his meaning as only sexual. \n\n\"You are an ass,\" she said as she moved up to him. \"But you told me the truth and that means a lot to me.\" \n\n\"Will you forgive me?\" \n\n\"I'll think about it,\" she answered as she took his hand in hers and led him back into the restaurant. \n\n\"Whew,\" Bud said when he saw them holding hands. \"Your french fries were getting cold so I ate them,\" he smiled at Brandon. \n\nBut Brandon's only thoughts were on this girl who had so quickly captured his heart. As they finished their meal they held hands up onto the table so Missy could see it. \n\n*****\n\nThe desert part of the meal went great as Emily fed her small \u00e9clairs directly into Brandon's mouth making sure Missy could see it happen. By the time he signed the check all four of them were excited about heading back to Bud's house. Brandon and Emily were quiet as they heard the other two making out in the back seat \n\n\"Ouch!\" Bud cried out when Maggie pinched his hand that was trying to get under her blouse. \n\nBoth Brandon and Emily looked back and saw Maggie grinning. \"He was being bad.\" \n\n\"Bad boy!!\" Brandon laughed. Finally the sports car pulled into Bud's driveway and then into his four car garage. \n\nBud pushed the remote button he had taken before he left the house and the door closed. Both girls realized they were now trapped inside of this house. \n\n\"Well are you coming?\" Bud asked Emily as he walked by her door. \n\n\"Yes,\" she said nervously. They all moved into the large kitchen, past the dining room and into a huge sun room porch overlooking the gigantic back yard. \"What does your father do?\" Emily asked. \n\n\"He's the plant manager at the refinery,\" Bud said casually. \n\nEmily stopped. \"It was your father who cut all of those jobs two years ago?\" \n\n\"No, he was only an assistant then. Why?\" \n\n\"My father lost his job,\" Emily answered. She looked around the very rich and decorated house. \"Does your father make enough to afford all of this?\" \n\n\"Na,\" Bud laughed. \"My mother is rich.\" Bud moved to one of the large leather sofas and pulled Maggie down next to him. \"How about a movie?\" \n\nEmily glanced at Brandon and saw the nervous look on his face which probably meant it was time to turn down the lights and to get to know each other better. \"Music is good enough for me,\" she smiled as she moved to the other sofa placed 90 degrees from the one Bud and Maggie were on. \n\nBud picked up a remote control and suddenly soft music was playing. He hit another button and the lights suddenly got really dim. \"I bet you've done this before,\" Maggie whispered. \n\n\"Not that much,\" Bud whispered back. \"My older brother set it all up.\" \n\nEmily took off her shoes and pulled her feet up under her hips as Brandon settle in next to her. \"Thank you for a wonderful dinner,\" she whispered while he leaned his upper body towards her and his lips lightly to hers. Before their tongues could reacquaint themselves they heard moaning on the other sofa. They kept their lips together while looking over at Maggie and Bud who were now lying next to each other with their lips locked. \n\nEmily wanted to go further than she had ever gone before with a boy but not as fast as Maggie was going with Bud. After a few minutes of giving Brandon her hottest kisses he pulled away and took a deep breath. \"Where did you learn to kiss like that?\" \n\nEmily giggled. \"My cousins.\" \n\n\"Cousins!\" Brandon exclaimed. \n\n\"Just kidding,\" she giggled. \"Haven't you heard that Creekers marry their cousins?\" \n\n\"Not really........is it true?\" \n\nEmily elbowed him. \"No......of course not.\" \n\n\"Just kidding,\" he smiled. \"But I'm not complaining.\" \n\n\"I'm sure you aren't,\" Emily whispered before returning her open lips to his. \n\n\"Don't,\" Maggie said loud enough for Emily to hear. Emily broke away her mouth from Brandon's and saw her cousin's blouse unbuttoned and Bud's hand roaming over the small black lace bra cups. \n\n\"I think we should go somewhere else,\" Emily whispered. Seeing Maggie and Bud going so fast was making her feel uneasy. \n\nBrandon too was feeling uneasy and didn't want to upset Emily by going too fast. \"Good idea.\" He moved off the sofa making sure to twist his body preventing Emily from seeing his forming hard-on in his slacks. After the morning with Missy it didn't take him much to get excited. He looked out over the pool and remembered the guest house. \"Let's go over there.\" \n\nMaggie didn't know that they were alone until Bud pulled down her bra cup and her hard nipple popped out. She jerked it back up and looked over to see the other sofa empty. She then giggled and pulled the cup back down again and felt a boy's lips on her breast for the first time. \n\nBud didn't waste anytime as he suckled on her two small tips. He had done the same to his last girlfriend however she had never allowed him to touch her pussy. \"Maybe tonight?\" He wondered as his mouth opened to engulf most of her small breast. \n\n\"Ohhh,\" Maggie moaned feeling like a woman for the first time. She could feel his manhood pressing against her upper thigh and wormed her fingers under their bodies to curl around its thickness. Maggie had jerked off a boy a few months ago at her eighteenth birthday party. \n\n\"Ahhh,\" Bud moaned when she squeezed and released his throbbing rod. He thought that it gave him the go ahead to open the snap on her jeans. \n\nMaggie's head was back while he licked and sucked her nipples. She wanted to pull out his penis but decided to take it slow. That is until she felt him open her jeans and pull down her zipper. \"Bud no,\" she said releasing his cock and pulling up her zipper again. \"Not tonight.\" \n\nBud sighed and moved back. He had gone too fast but it was her who had touched his cock. He moved onto his back and looked up at the ceiling fan. \n\n\"Sorry,\" she whispered as she moved her naked breast over onto his shoulder. \"No one has ever touched me there and it is our first date.\" \n\n\"Really?\" He asked before he thought. \"No one has touched you down there?\" \n\nMaggie pushed him back. \"Just because I'm a Creeker you think I'm easy?\" \n\n\"No........I........didn't mean.....\" But she jumped over him and moved to the other sofa. But she stayed bare breasted. \n\n\"Maggie....come back over here,\" Bud begged. \n\n*****\n\nEmily stopped short when the guest house door opened and she saw the king size bed in the center of the room. \n\nBrandon gulped and saw she had stopped. \"Come down onto the rug with me.\" He dropped down onto his back and offered her his hand. \n\nShe bit her lower lip as her body moved downward until she was lying directly on top of his hard body. She felt the hard lump between his legs as her lips once again found his. A few seconds later his thigh pressed between her legs and up against her inflamed pussy. \"Ohhh,\" she moaned into his mouth. Suddenly her body lost control as her hips rubbed up and down his muscular thigh. \n\nBrandon's head was spinning because he knew she was getting close to climaxing as he was. But he didn't want to cum in his slacks. \"Wait...\" His hands moved down and touched her nice soft buttocks for the first time. ",
        "\"What's wrong?\" she whispered between large breaths. \"Don't you like it?\" She had made sure to rub against his hardness. \n\n\"Yes too much,\" he chuckled. \"I........uh...don't want to.......cum in my slacks.\" \n\nEmily giggled and blushed. \"Oh.\" She put her lips into his neck and licked his tender earlobe. \"Will you show me what to do?\" \n\nBrandon was shocked at first that she was willing to jerk him off but wasn't going to pass up the chance. \"Are you sure?\" \n\n\"Yes. I don't want Missy to come by your house anymore,\" her lips sucked in his earlobe sending shivers up and down his spine. \"Take it out.\" \n\n\"Jesus,\" he whispered as he reached down and opened his slacks. His fingers pulled out his throbbing member and moved up to take her trembling fingers. She didn't resist as he guided them downward until they touched the swollen tip of his bare cock. \n\nEmily wanted to look down at it but was too afraid. Instead her fingers rubbed and explored down its length to the opening of his boxers and then inside to cup his balls. It was a first for her so she wanted to take the time and learn. \"What do I do?\" \n\nBrandon's eyes were closed and his mouth opened wide while he curled her fingers around his thickness and then covered them with his. He then started a slow up and down stroking motion. \n\nEmily got the motion and after he pulled his fingers away got it going really good. Then she stopped. \"When you cum you are going to mess up your slacks.\" \n\n\"Take them off for me,\" he whispered. \n\n\"Oh God,\" she thought as her body moved back and she glanced down at the hard long penis in her fist. Her face was bright red as she released him and jerked his slacks and boxers down to his ankles at the same time. This time when her hand returned to his hard-on she kept her eyes on it as she stroked him. \n\n\"Oh God Emily,\" Brandon moaned. He moved his hand up under her blouse and up across her bra strap. As his fingers toyed with the clasp her fingers stopped and she sat upright. He thought he had blown it but instead saw her unbutton her blouse and then reach behind her to release her new pink bra. She smiled as she turned and showed a boy her naked breasts for the first time. \n\n\"God they are so beautiful,\" he grinned while moving his large hand up to cup the closest one. Her long hard nipple pressed into his palm while he caressed and rubbed up and down it. He was about to lean over and kiss the hard tip when she pushed him back and then moved on top of him. Her mouth found his again and her body moved up and down his hard length.. It was only a few seconds later that he groaned and warned. \"I'm going to cum.\" \n\nEmily tried to move off but his hot spunk shot from the hard tip and covered his thick pubic hair and the front of her jeans. Her fingers quickly grabbed it to aim it to the side while load upon load of his cum emitted from his hose. Finally he moaned and dropped back. \n\nEmily smiled because she had pleased him without going too far. Most of the girls she knew had jerked off boys before but she had never found one worthy enough until now. \"Did I do OK?\"\n\n\"God yes,\" Brandon whispered as he sat up and saw the mess on her jeans. \"But I didn't want that to happen.\" \n\nEmily looked at the door leading into the bathroom. \"I'll see if I can clean it off.\" As she started to move up she picked up her bra but he grabbed it from her hands. \n\n\"Please don't put it back on,\" he begged. \n\nShe blushed and stood up over him while looking down at his now limp penis which was only about five inches long. \"That is amazing.\" \n\n\"So are those,\" Brandon laughed as he lunged up to cup her titties but she jumped back. \n\n*****\n\n\"Are you still mad?\" Bud asked as he realized he had to go to her. \n\n\"Yes. You thought that I was easy because I live on Jacob Creek.\" \n\n\"Not really,\" he said while moving next to her and leaning over to nibble on her neck. \"I was hoping we could really get to know each other.\" \n\nMaggie sighed and moved her head back on the cushion as his tongue left wet marks while moving down her neck to the small valley between her bare breasts. \"I'm not mad anymore,\" she giggled while taking his head in her hands and pulling his mouth to her waiting nipple. \n\n\"Ummm,\" she moaned softly. After two minutes of kissing her hard tips he moved up to her mouth. \n\n\"I'll do only what you want to do,\" he whispered. He figured it would be better if she called the shots. \n\n\"Good,\" she said smiling. \"Take off your pants and underwear.\" \n\n\"What?\" He asked suddenly fearful of being totally naked in front of a girl. He knew his penis was not as big as Brandon's. \n\n\"You said you would do whatever I wanted.\" \n\n\"Yes but....\" When she pushed his lips back from her chest he said, \"Ok, I'll do it.\" \n\nMaggie sat back and watched a boy undress for the first time. When he pushed down his briefs and stood back showing his six inch hard-on she smiled and motioned for him to walk to her. \n\nBud had never had a girl touch him before so when Maggie's right hand grabbed his hard cock he almost shot his wad right there. \n\n\"It's nice and hard,\" she whispered while rubbing her thumb across the few pre-cum droplets. \"Come here and sit on my lap and face away from me.\" \n\nBud quickly turned and lowered his naked ass onto her lap and felt both of her hands move around from the back to once again capture his shaft. \"Lean back and let me take you to heaven,\" she giggled. \n\nBud did just that and marveled at the way she would bring him to a climax and then back off. Her lips sucked on his ear while she stroked him fast and then slow. \"You're mine now Bud Sampson and down forget it.\" \n\n\"I............uh.......won't,\" he moaned. His hips were now rising and falling as she jerked him off. \n\n\"\"Ready?\" \n\n\"Yes oh God YES!\" Her fingers suddenly kicked into overdrive and his hot white fountain erupted. \"NOW MAGGIE NOW!\" \n\nShe did her best to hold onto his exploding cock but it finally slipped from her fingers because of all the lubrication now covering his pubic area. \"You better go and clean up.\" She whispered. \n\n*****\n\nEmily partially closed the door and removed her jeans. She felt the dampness between her own thighs as she leaned over to wash out Brandon's passion. She didn't see or hear the door open but did feel his hands on her waist just above her tiny pink panties. \"Brandon!\" She yelled as she dropped her jeans into the sink and turned. \"You shouldn't see..........me like this.\" Her hands moved down and covered the visible blonde bush coming through her panties. \n\n\"But you saw me,\" He grinned. His fingers moved slowly down her arms to her fingers. One by one he gently pulled them away until they rested to her sides. \"You are so beautiful.\" He whispered while tracing his fingers around the waistband of her silk undies. When they met at her center they dove under the elastic and pulled outward. \n\n\"Don't,\" she whispered not believing it herself. But his fingers now under the elastic moved back outward to her hips and then pushed downward. \n\nBrandon took his time uncovering her soft mound of blonde curly hairs that was neatly trimmed into small triangle. \"So soft,\" he whispered while rubbing his fingers through the golden mons. \n\nEmily's body had taken over the control now as she put her hands on his shoulders while his body lowered her panties down over her bush and dripping slit past her thighs and down off her legs and feet. She lifted one foot at a time and watched his eyes move up her body as he stood back up. She grabbed the bottom of his shirt to make him naked like her. When his naked front moved into hers they both realized how great it felt. \n\n\"Touch me,\" she begged as her legs opened. Brandon did just that and quickly found out she was indeed a virgin. \"Oh God Brandon, touch me right here.\" Her fingers guided his to her throbbing clitoris. \n\nHe did as she said and soon it was her that was moaning and groaning as her body was about to explode. \"Ah God......I've never........Oh my............It feels so..........GOOD!\" Emily Miller for the first time lost total control of her body as she climaxed. \"It felt so good she was about to scream. \"Stop or I'm going to scream!\"\n\n\"Good,\" he laughed as he rubbed her clitty faster and faster. \n\n\"NOW I'M GOING TO CUMMMMMM!\" The windows in the guest house shook when her high pitched voice shattered the air. As she climaxed her mouth moved to his and her tongue fucked in and out of his lips. Finally after another minute she pushed him back. \"See what you made me do!\" \n\n\"What?\" \n\n\"I didn't want you to see me naked tonight and not only did you see me you touched me and made me cum!\" \n\n\"Sorry,\" he grinned. \n\nEmily turned and pulled her damp jeans from the sink. \"I better put these in a clothes dryer.\" She pulled up her panties and then her bra before pulling on her blouse. By the time she was finished Brandon was dressed and was holding the door open for her. \n\n\"I can't go into the house in my panties,\" Emily said. \n\n\"Take them off,\" he laughed while grabbing her jeans from her hands and running towards the house. \n\nEmily being quicker passed him at the sunroom door and jumped inside. Brandon was right behind her and they both stopped when they saw a naked Bud sitting on Maggie's lap. \n\n\"Jesus Maggie,\" Emily said when she saw her cousin stroking Bud's soft penis. She realized then that Brandon was very well-endowed. \n\nBud quickly reached down and pulled his slacks up over his dangling participle. \"You two could have knocked.\" He saw the blonde bush through Emily's pink panties. \"Talk about us.\" \n\n\"Don't look,\" Emily said blushing. She jerked the jeans from Brandon's hands and covered her nearly exposed pussy. \n\n\"The dryer is down the hall to the left,\" Bud grinned. He watched Emily's cute nearly naked ass as she turned and moved away. \"Nice ass.\" \n\nEmily shocked them all by wiggling it. \n\n*****\n\n\"Uh Brandon do you mind?\" Bud asked as his best buddy stood there gawking at his nearly naked body on Maggie's lap. \n\n\"Sorry,\" Brandon laughed before moving down the hallway to find his girl. \n\nEmily put the jeans in the dryer on the warm cycle so her already tight jeans wouldn't shrink anymore. After pushing the cycle button she moved into the small hall bathroom to dry off under her panties. \n\n\"Emily,\" Brandon said as he tapped on the door. \n\nThe door opened and she walked out and into his arms. As their lips meshed his hands explored her panty-covered buttocks. \n\nShe pushed back and looked into his eyes. \"I don't want you to think that I'm easy.\" \n\n\"I don't.........\" \n\n\"We are going too fast......\" \n\n\"I know.....\" \n\nHis fingers gently massaged her soft cheeks while his lips nibbled at her neck and earlobe. \n\n\"Stop........\" she said as she pushed him back. \n\n\"Don't you like it?\" \n\n\"Yes...oh God yes....I like it too much. That's why we have.....to stop.\" \n\n*****\n\nBud quickly pulled up his briefs and slacks and then sat back down next to Maggie. \"It's not fair. You got to see me but I only saw your breasts.\" \n\n\"It gives you something to look forward to,\" she giggled. Her hand moved behind his head and pulled his lips down to hers. \n\nAfter about ten minutes Emily's jeans were dry enough to put back on even with the objection of Brandon. They finally sat on the sofas and watched a sitcom when Emily realized it was almost midnight. \"OH NO!\" \n\n\"What's wrong?\" Brandon asked. \n\n\"It's late and my father will be home before me,\" she gasped as she stood up. \"We have to go.\" \n\nThe four of them hurried to Brandon's car and then sped down the hill towards Jacob Creek. \"You can drop me off here,\" Emily said when they got to the gas station which was just about ready to close. \n\n\"I better take you straight home,\" Brandon said while driving past it. \n\n\"Let me out at the school,\" Emily said nervously. \n\n\"Emily you have to get home,\" Maggie said. \"She lives about a half-mile up that road.\" \n\nEmily looked for the landmarks and when she saw her aunt's house she said, \"There it is,\" Maggie was about to say something but Emily glared at her. She looked at Brandon and leaned over to lightly kiss him. \"I better go.\" Before he could say anything she opened the door and jumped out. Maggie did the same. \n\n\"Geez, they really wanted to get rid of us,\" Bud said as the two girls walked towards the older wood frame house. \"Well she was late and I don't want to get in trouble with her parents.\" \n\n\"I think she lives with her dad,\" Bud said. \"Maggie said her parents split up when he lost his job at the refinery.\" \n\n\"It must have been tough on Emily,\" Brandon said as he backed out of the dirt driveway and headed back down the long dark two lane road. When they got to the school Bud found Maggie's purse. \"Shit.......here is Maggie's purse,\" he said. \"Let's go back and give it to her.\" \n\nBrandon did a u-turn in the school parking lot and headed back up the hollow. As they got to the house where the girls went into Bud grabbed the purse and ran up to the door. Brandon watched as he tried to see what Emily's father looked like but instead an old lady answered the door in her robe. Bud talked with her for a while and he saw the lady point up the road. When Bud returned he said, \"That was Emily's aunt. Emily lives six lots up the road.\" \n\n\"But why would she say she lived there?\" Brandon asked himself as he drove up the road counting the lots. When he got to the sixth one he saw the mobile home. \"She lives here? In a trailer?\" \n\n\"I told you she was trailer trash,\" Bud joked. \n\n*****\n\nEmily and Maggie took their time walking up the road to her mobile home because they could see her father was not at home yet. They giggled as they talked about seeing the boys naked and were almost into her driveway when they saw headlights coming back up the dark road. \n\n\"Oh God.......it's them,\" Emily gasped as she grabbed Maggie's wrist and pulled her behind a large bush by the entrance to her dirt driveway. \"Duck down.\" \n\nThe car drove very slowly up to her driveway and then pulled into it. \n\n\"She lives here,\" they heard Brandon say. \"In a trailer?\" \n\n\"I told you she was trailer trash,\" they heard Bud laugh. \n\n*****\n\n\"We better go,\" Brandon said suddenly realizing why Emily had not wanted him to take her directly home. As he turned to look over his left shoulder to back out he saw Emily and Maggie standing next to the car. Emily had tears in her eyes and Maggie looked as if she was going to kill somebody. He stopped the car and saw Emily's eyes pouring. She suddenly ran towards the trailer. \n\n\"EMILY WAIT!\" Brandon yelled. \n\n\"You asshole,\" Maggie said before swinging her open hand and smacking across Bud's face. She too turned and ran after her crying cousin. \n\n\"Fuck Bud!\" Brandon said wanting to smack his friend like Maggie had just done. He put the car in park and moved up to the door. \"Emily.\" He said as he knocked on it. But no one answered it. He knocked again. \"Talk to me.\" \n\nHe was about to knock again when he saw another set of headlights pull up behind his car. He turned to watch a tall man walk up to him. \"Just who are you?\" Jim asked. \n\n\"Brandon Walsh sir,\" he answered nervously. \n\n\"And what are you doing here?\" \n\n\"I........uh....need to talk to.....Emily.\" \n\n\"You do huh?\" Jim said. \"Well you wait here and I'll go and see if she wants to talk to you.\" He pushed Brandon aside and moved inside. When he opened the door he almost knocked Maggie over. \"Uncle Jim,\" she said. \n\n\"What is going on?\" \n\nMaggie was still mad as a hornet. \"Emily is crying in her room because those boys called us trailer trash.\" \n\nJim knew he should have counted to ten but to hear his baby crying in the other room was too much. He pushed open the door and grabbed Brandon's shirt collar. Even though Brandon was well-built he was not prepared when the man shoved him off of the small wooden porch. \"Sir let me explain,\" Brandon said as the man moved down to complete his ass whipping. Jim was about to grab the boy again when he heard Emily's voice. \"NO DADDY....JUST LEAVE HIM ALONE.\" \n\nBrandon looked up at the girl who had taken his heart. \"Emily I'm sorry I........\" \n\n\"JUST LEAVE!\" She sobbed before turning and running back into the house. \n\n\"EMILY PLEASE!\" \n\nJim took another step. \"You better leave son before I do something we both will be sorry for.\" \n\n\"Brandon lets go,\" Bud said from the car. \n\n*****\n\nWhen Jim entered the trailer his daughter was sitting next to Maggie on the sofa. \"What the hell was that all about?\" \n\n\"Daddy I'm sorry but I........I mean we.......had a double date with those boys tonight. After they dropped us off they....I mean we over heard them calling us trailer trash.\" Emily wiped her eyes again. \"I'm sorry I lied to you about us having a slumber party.\" \n\n\"Those boys live up on the hill?\" \n\n\"Yes sir,\" Maggie said. \"We thought that they were nice and....\" \n\n\"Well you are not trailer trash or any kind of trash. I'll go speak to their parents tomorrow and straighten this all out.\" \n\n\"No please don't.\" Emily said. \"I made a mistake and thought I knew someone. I didn't.\" \n\nJim knew what she was saying because he thought he knew his wife before she walked out on him. \"I know baby. Just remember you will always have your family.\" \n\n\"I know,\" she said wiping her eyes again. \"I love you Daddy.\" \n\n\"Me too sweety.\" \n\n*****\n\n\"I should kill you right now,\" Brandon said to Bud as they drove back up the hill. \"FUCK!\" \n\n\"Shit man I was just joking. You know me.\" \n\n\"I told you to not joke about Creekers. FUCK!\" \n\n\"I'm sorry man. I know you really liked Emily too.\" \n\nBrandon didn't respond as he tried to figure out a way to get her to talk to him again. \n\n*****\n\nIt was Sunday morning when the sun came up again for Emily. She had cried most of the night until her body finally dozed off. Her father let her sleep while he drove down to the small Christian church by the gas station. \n\nEmily was still asleep when her cell phone woke her up. She picked it up expecting it to be Maggie, \"Hi.\" \n\n\"Emily it's me,\" Brandon said quickly. \"Don't hang up.\" \n\n\"Why you are calling trailer trash?\" she said angrily before hanging up. \n\n\"Wait.......it wasn't me who....\" He said before he realized she had disconnected his call. He called back but her cell phone was busy. When he got her answering message he said, \"Emily I didn't call you trailer trash. It was Bud and he was just joking. God I want to see you again so bad. Please don't be mad. Call me please.\" \n\nBrandon put his phone down on the table and saw his father walk into the kitchen. \n\n\"Sorry but I overheard your message,\" Paul said as he poured himself a cup of coffee. \"It sucks being a teenager doesn't it?\" \n\n\"It's not fair,\" Brandon said. \"I finally found someone I really care for and Bud screws it up.\" \n\nPaul sat down. \"So this girl is something special?\" \n\n\"Dad........I've never felt this way towards a girl before. I think about her when I get up, all day and then before I go to sleep.\" \n\nPaul laughed. \"I know how you feel.\" \n\n\"Really.\" \n\n\"Yes and I married her,\" Paul grinned. \"Now I'm not saying you should marry her but I sure wouldn't give up.\" \n\n\"Yeah but she is really pissed.\" \n\n\"Does she care about you like you do her?\" \n\nBrandon sat upright. \"Well yes.......I think so. I mean before Bud screwed it up last night.\" \n\n\"Well right now I expect she is hoping you'll make things right.\" \n\n\"How do I do that?\" \n\nPaul smiled. \"I have no idea. Ask your mother.\" He stood and walked out the door. \n\nSylvia pushed the shovel down into the dark dirt by her blue ribbon roses. As she picked up the shovel load she saw her son walking up to her. \"Are you here to help me dig?\" \n\n\"Yes if you will give me some advice,\" Brandon smiled. She handed him the shovel and he took the next five minutes to tell her about his date last night minus the sex part. \"So what should I do?\" ",
        "\"There's nothing really you can do,\" she said while shaking her head. \"You are more like your father every day.\" \n\n\"Ma it wasn't me. It was Bud.\" \n\n\"I know but all she heard were the words \"trailer trash.\" In her mind she thinks that you think of her that way.\" \n\n\"So there's nothing I can do?\" \n\n\"Nope but I have a few friends who live down on Jacob Creek. What is her full name?\" \n\n\"Miller.......Emily Miller.\" \n\n\"I'll do my best but I can guarantee anything.\" She smiled as she took her shovel back. \"You dug the hole pretty deep.\" \n\n\"Thanks Ma,\" Brandon said smiling. At least he had a faint ray of hope. \n\n*****\n\nEmily finally moved out of bed and into the bathroom. She didn't bother washing up because she had decided she was not going to ever leave the trailer again. She wobbled into the kitchen and was about to pour a glass of milk when someone knocked on her door. She peeked out making sure it wasn't Brandon and saw her Aunt May. \"Hi Aunt May,\" Emily said trying to hide her sadness. \n\n\"I heard what happened,\" May said as she pushed into the mobile home. \"Are you OK?\" \n\n\"Not really,\" Emily said trying to hide back tears again. \n\n\"You know I knew a girl once that was my best friend. But we came from different neighborhoods and no one ever gave us a chance.\" \n\nEmily sat up. \"Is she still your best friend?\" \n\n\"Well yes but I haven't seen her much lately,\" May said. \"You see she split up with her husband and moved away.\" \n\n\"You're talking about my mother,\" Emily said sitting back. \"But she didn't come from a rich family.\" \n\n\"Are you sure?\" May asked. \"Just because she didn't ask her parents for any money doesn't mean they weren't rich.\" \n\n\"I never met my grandparents,\" Emily said. \"Mother told me that they were dead.\" \n\n\"They are dead to her but are very much alive,\" May grinned. \"They have wanted to meet you for years but your parents have denied it.\" \n\n\"But why would they? I mean why does my mother hate them?\" \n\n\"Because they wouldn't accept your father when she told them she wanted to marry him,\" May answered. \"They wanted her to marry a rich man.\" \n\n\"God that is so stupid. I mean if they love each other why shouldn't they be together?\" \n\nMay grinned. \"Do you like this boy?\" \n\nEmily wanted to say no but couldn't. \"God yes Aunt May. When I'm around him my body gets so tingly and I have trouble breathing. What should I do?\" \n\nMay smiled and tried to stand up but being in her late seventies her legs were not so strong anymore. \"Maybe you should talk to your mother?\" \n\n\"No way,\" Emily thought as her Aunt walked out of the trailer \n\n*****\n\nBrandon tried calling Emily again that night but only got her voice mail. He told her again how much he cared for her and that he had not called her trailer trash. The next morning he made sure to be standing on his front porch when her school bus rode by but her face wasn't in any of the windows. After jumping into his sports car he easily beat the slow bus and was waiting for it when it pulled into the school. He held a dozen red roses in his hand as he stood there waiting for her to get off. \n\n\"She's not coming to school today,\" Maggie snarled at him as she brushed by him. \n\n\"Maggie wait,\" Brandon said as he ran up and walked next to her. \"She knows it wasn't me who called her........\" A few other kids walked by and he didn't want to say it out loud. \n\n\"You don't get it do you?\" Maggie said as she stopped and looked at him. \"She was embarrassed that you even know she lives in a trailer. It didn't matter that you didn't say it because you were there.\" Maggie turned and saw Bud waiting for her at the top of the steps going into the school. \n\n\"Don't even say a word,\" she growled as she pushed by him. \n\n\"I guess I really screwed up this time. Didn't I?\" Bud said to his long time best friend. \n\n\"Don't say a word to me either,\" Brandon said as he tossed the dozen roses into the nearby garbage can. \n\n*****\n\n\"Something is going on between Brandon and Trailer Trash,\" Brandy whispered to Missy as they dressed for gym later on. \"Someone saw him standing by her school bus this morning with roses but she didn't get off. That Maggie girl argued with him and then he threw the roses into the garbage can.\" \n\n\"Really?\" Missy smiled. \"I knew he would realize what a tramp and low life she really is.\" \n\n\"What are you going to do?\" \n\n\"Nothing. Seems she is doing everything I need right now.\" It also meant Missy would win today's race during the gym class. With the help of the new trainer her father hired she knew she would be on top again very soon. \n\nCoach James later noticed Emily was missing and asked Maggie where she was before he started the half-mile race. \n\n\"Sick,\" Maggie said without emotion as she stared down the line at Missy who was bouncing up and down and smiling. \n\n\"OK on the line,\" Coach James said before looking at his watch. \"GO!\" \n\nThe pack took off but Missy quickly took the lead and never looked back as she won by at least 50 feet. Maggie managed to finish second which made it worse since she was the first one to get to Missy. \"So Trailer Trash is afraid to race me I hear?\" Missy giggled. \n\nMaggie tried her best to hold back but when Missy gave her the finger she bolted into her until the princess tumbled onto her back on the infield grass. Maggie got three punches into her right eye before the Coach and others pulled her off. Ten minutes later the principle suspended her for at least a week. \n\n*****\n\nEmily was watching a Harry Potter movie when her door opened and Maggie moved in. \"What are you doing home so early?\" \n\nMaggie grinned. \"The principle let me go home early since I gave little miss perfect a black eye.\" \n\n\"NO.....\" Emily said before turning off the movie. \"Why?\" \n\n\"Well she called you trailer trash first and then gave me the finger.\" \n\nDidn't anyone hear her or saw her do it?\" \n\n\"Yes but who is going to say something back to the Mayor?\" \n\n\"I owe you,\" Emily grinned. \n\n\"Yeah but I have a week suspension and it maybe longer. I might have to take summer school to graduate.\" \n\n\"A black eye?\" \n\n\"Well it wasn't black when I left the principle's office but it sure was swollen. I'm sure it's black now.\" \n\n\"Good,\" Emily smiled for the first time all day. \n\n\"So are you going to quit the team now?\" \n\n\"No way,\" Emily grinned as she pulled on her new shoes. \"I better go and run the dogs.\" \n\nBrandon hurried out of his last class and into his car. He wanted to get to Emily's trailer before her father got home from work. As he drove down the two lane road he saw her running away from him with two dogs trying to catch her. He hung back and admired her speed and her cute little butt. \n\nEmily heard the car behind her and motioned for it to pass but it just stayed back. Finally she turned and ran backwards to see just who it was. She saw Brandon and her heart skipped a few beats. She turned and took off even faster than before. \n\nBrandon saw her now running away from him and then passed both her and the dogs. When she got to her trailer his car was in the driveway and he was sitting on the small porch. \n\n\"I don't want to speak with you,\" she said as she gasped for air with her hands on her knees. \n\n\"I'm not leaving until you do,\" he said. God he wanted to hug her but knew she would probably make him pay for it. \n\n\"Good......stay here until my father gets home,\" she said as she walked up the steps by him and into her home. Maggie was staring out the window. \n\n\"What did he say?\" \n\n\"He said he's staying on the porch until I talk to him.\" \n\n\"Your dad will kill him.\" \n\n\"I know,\" Emily said as she peeked out at his strong back and arms. She too wanted to feel them around her. \n\nEnd of Chapter One\n\n*\n\nNote from Slick: Hillers/Creekers. Yankees/Red Sox. Why can't we all get along? I know this chapter went slow but most of you ask for stories this way. Stay tuned for Chapter 2 and send me an email with any ideas and don't forget to vote.  "
    ],
    "authorname": "Slickman",
    "tags": [],
    "category": "First Time",
    "url": "https://www.literotica.com/s/trailer-trash-ch-01-2"
}