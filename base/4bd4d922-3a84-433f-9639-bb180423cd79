{
    "title": "The Year of the Cat Ch. 21",
    "pages": [
        "100% Fiction. All sexualized characters are adults\n\nMatt sat the enormous purple stuffed bear down on the street curb in front of his house. The bear's embroidered smile rested against the green dumpster, grinning up at him. \n\nMatt was surprised to find his forehead beaded with sweat in the morning sun. \"It feels like it might be hot one today.\" he thought to himself, looking up at the clear blue sky. He paused, examining the weather forecast on his phone screen. \"Hmm. An early taste of summer today. Nice!\"\n\nAcross the street, Matt's elderly neighbors were standing on the porch of their home, waving goodbye to a sullen looking teenager, dragging his suitcase to a waiting SUV. \n\n\"Bye, Samuel!! Thanks for visiting!\" the elderly woman called out. \n\n\"Keep those eyes peeled, Sammy!\" the kindly grandfather exclaimed. \n\nJust then, Matt heard a clicking noise from above his head. He looked up to Janice's balcony, where the doors were being flown open wide.\n\n\"Oh! So lovely out!\" Janice exclaimed, stepping out into the sun. \"This door has been blocked so long.\"\n\nMatt gave Janice a cat calling whistle from below. Janice giggled and blew him a kiss. \n\nMatt had a clear view of the bare bottoms of her jutting tits from the vaulted lower hem of her T-shirt. \n\nHe turned to see the teenager pause at the open back door of vehicle, looking forlornly up at Janice. Then, casting a glare down at the purple bear, he climbed into the car and shut the door. \n\n\"That was weird.\" Matt thought, turning to head back upstairs. \n\nUpon entering the apartment, Matt opened the door to see Linda holding Tracy, tenderly. She had her face buried in her mother's shoulder, softly sobbing. \n\n\"Oh!... A-are you alright, Tracy?\" Matt asked, concerned.\n\nTracy fell silent immediately and raised her head. She wore an angry scowl. Her red, puffy eyes burned into his. Without a word, Tracy huffed off towards Matt's bedroom and slammed the door. \n\nMatt's eyes were wide with fear. \"What just happened?\" he whispered to Linda. \"Did I piss her off?\" \n\nLinda stepped forward and cradled Matt's cheek. \"It's not you, honey.\" she sighed. \"Right now, Tracy's pissed at ALL men.\"\n\nLinda took a cautious peek to the door and whispered to Matt. \"She just found out that her ex shared naked pictures of her online to his friends.\"\n\n\"Oooohh!\" Matt winced. \"Poor Tracy... God... she's been through so much!\"\n\n\"I know! She needs a distraction today.\"\n\n\"Well... I was just outside and it's beautiful weather today. I don't know... do you want to go to try to take her to the beach or something?\"\n\nLinda's eyes grew wide. \"I got a BETTER idea:\" She clapped her hands, excitedly. \"Amusement park!!\"\n\nMatt gasped. \"Yes!! That's a GREAT idea!\"\n\nLinda bounced, excitedly. \"You go tell Janice and I'll tell Tracy!\"\n\nJanice smiled brightly at the idea when Matt told her of Linda's planned day trip. \n\n\"This is going to be so much fun!!\" she said, after hitting 'Send' on her email file. \"That's all I had to do for work, so I guess I'm ready!\"\n\n\"I don't know if the water park section will be open this early in the season.\" Matt said. \"But I'm gonna wear my swim shorts, just in case. It's fixin' to be a hot one today!\"\n\n\"Oof. It's been awhile since I've had a proper fitting swimsuit.\" Janice replied, opening her dresser drawer. \"Hope I have something that isn't going to get us kicked out of the park!\"\n\nLinda returned to the living room smiling. \"Tracy's on board with the plan. She just needs a minute to cool down.\"\n\nMatt could smell a waft of burning marijuana coming from the Tracy's bedroom door. \n\n\"Great! I know the way there, so I'll be happy to drive.\" he smiled. \n\n\"Perfect!\"\n\n~~~~~~~~~~~~\n\nThe two hour drive to the giant amusement park went by smoothly. Matt noted the lengthy construction project on the highway running opposite of his that he would have to contend with on the way home. \n\nSoon, Matt and the three women were being guided to their parking spot in the huge, sparsely populated lot. \n\n\"Hmm. Must be too early in the season for the big crowds.\" Janice mused. \n\n\"All the kids are still in school! We get all these roller coasters to ourselves!!\" Linda whooped. \n\nMatt grinned, as he walked hand in hand with Janice. She smiled, gleefully up at him. She was wearing a tiny red tank top with thin spaghetti straps and a pair of cutoff jean shorts that just barely managed to hide her round, shifting butt cheeks. Her tight red top rode high, exposing her toned tummy and bellybutton. Her colossally jutting bust stretched the top hem of her shirt, causing a jiggling overflow amid her bulging, bouncing cleavage. Beneath the red fabric of her top, the edges of an alarmingly tiny string bikini could be detected. Matt eagerly anticipated the chance of an afternoon watching his girlfriend's gorgeous wet body take in the sunlight. \n\nLinda strutted, happily, wearing a light colored, horizontally striped tube top and a pair of small athletic shorts. Matt couldn't help himself but to stare, concerned at Linda's tits, which were in the constant process of oozing out of her minuscule covering. Linda would bounce along, unconcerned by her failing garment, letting more and more of her massive breasts fall into view until Matt was sure her nipples were going to slide right out. At the last possible moment, just before her areolas were eclipsing the hem, Linda would pinch her cloth top and hoist it up again. Her giant tits would be swallowed by flexible top, the horizontal stripes shifting to accentuate her volume. Linda would let her tits fall back to place afterwards, creating a spectacular, crashing, wobble. \n\nTracy, meanwhile, walked a pace behind the group wearing an enormous, black Iron Maiden T-shirt. The draping cloth couldn't obscure her massive breast size, but hid her figure well, all the way down, nearly past her fitted boy short style bottoms. She glared at people passing by who had to take double, sometimes triple takes, at her mother and sister's bouncing display. \n\n\"What is it with guys and boobs?!\" Tracy exclaimed, addressing the group, but looking directly at Matt. \"Why are you all so obsessed with them?!\"\n\nMatt cleared his throat, nervously. \"I can't speak for all guys, but as far as I'm concerned: I love t-\"\n\n\"We know!\" Tracy interrupted. \"It's painfully obvious, Matt. You haven't been able to stop staring at my sister's all morning... or my MOM's, for that matter!\" Tracy scowled. \n\nLinda looked back at Tracy with a stern look. \"Matthew can look all he wants! He knows he has consent from both of us, so CAN it, Missy! He is not the one that hurt you.\"\n\nTracy glowered, looking down at the pavement. \"Whatever...\" she grumbled to herself.\n\nThe four approached the entrance. Linda proudly paid the admission price for the group at the kiosk. \n\n\"Thanks, Mom!\" Janice exclaimed as they strolled through the entrance. \"How does it feel to be able to afford this?\"\n\n\"It feels wonderful!\" Linda exulted. \"Oh! Speaking of affording shit, did I tell you that I snagged the VIP package for that Legends of Rock cruise? It includes a Meet and Greet with the band! Ooo! I can practically taste David's white snake now!\"\n\n\"Grrrross!\" Tracy groaned. \n\n\"Hey, Tracy!\" Janice chirped. \"Remember our song we wrote?\"\n\nFor the first time all day, Tracy's angry facade cracked into a smirk. \"Which one? We wrote dozens!\"\n\n\"The PERFECT one for Mom's cruise!~\" Janice crooned, giggling. \n\n\"Oh god...\" Linda rolled her eyes, fully aware of what was about to commence. Tracy apparently did as well. A wide smile burst upon her face. \n\nMatt grinned as Tracy and Janice began singing in loud voices: \n\n\"Oh, sail me away!~\n\nOn the bright shining seas~\n\nWhere all the first mates~\n\nAre down on their knees!...~\"\n\n\"Cover your ears, Matthew...\" Linda implored. \"This isn't the type of parenting I need you to hear.\"\n\nThe sisters regaled several raunchy verses of their tune to each other as Matt and Linda watched on; partly amused, partly aghast. \n\nAll around them, thrill rides of every sort spun, twisted and roared. \"God! Where do we start?!\" Linda shouted above the din of the park. \n\n\"Let's go to that roller coaster right over there!\" Janice said, pointing to an enormous white, wooden coaster. The entrance to the line was just a few feet away and the long passage to the attraction was almost completely empty. \"C'mon! We'll probably get to go straight on to the ride!\"\n\nAs predicted, the four found themselves being seated in the aged metal cars of the coaster; Janice and Matt seated behind Linda and Tracy. The metal lap bar pushed down over their legs. The girls, especially Tracy had to be wary of getting their breasts squashed by the bar as it lowered. \n\n\"Ooo! I'm excited!\" Janice squealed in girlish excitement as she snuggled Matt's bicep. \n\nFinally, after the ready check, the brakes to the coaster disengaged and the rickety contraption rattled out of the station. \n\nMatt's eyes had a hard time looking away from the intense jiggling going on in Janice's cleavage as the coaster rounded the corner and began it's clacking, slow ascent to the distant pinnacle. \n\n\"Wow!! Look! You can see the whole park from up here!\" Tracy marveled as the first train cars disappeared over the precipice. \n\n\"WOOOOAAHHAAA!!\" Linda screamed in chorus with the other riders as the coaster plunged into the depths with a roar. As soon as her arms extended upwards, her tiny tube top retreated for cover around her waist. \n\nBetween Janice's softness being battered by physics and Linda's tits flying free in the seat in front of him (still visible), Matt could barely focus on the ride, itself. \n\nThe coaster sped through winding tracks, dipping low through the gaps in the massive wooden girders. The age of roller coaster was unknown, but had all the earmarks of being one of the park's first attractions. The passengers were tossed around inside the clattering cars as the coaster careened through hairpin turns. \n\n\"Ooof!\" Matt chuckled, feeling Janice's body slam against him from the G forces. \"I'm getting beat up!\"\n\n\"You know you love it!!\" Janice laughed. \n\nAt last, the coaster wound around the last turn and slowed to enter the station once more. The four giggled together as their equilibrium settled back to normalcy. \n\n\"Mom!\" Tracy exclaimed. \"Fix your top!\" \n\nLinda casually pulled her tube top up and over her tits the instant before the train entered the sparsely crowded station. \n\n\"Phew!\" Janice exclaimed, standing up and climbing out of the car towards the exit. \"That was a bruiser! Let's go on one of the new sleek roller coasters next!\"\n\nThe four gathered together outside to look over a map of the park. \n\n\"Ooo! This one looks neat! Look at all those loopty loops!\" Tracy said, pointing to a light blue railed thrill ride on the opposite side of the park. \n\n\"We can take the sky gondola!\" Janice exclaimed, pointing to the small, four seated, open roofed car suspended by a thin line, high above the ground. \n\n\"'The Buckets of Death' you mean? No thanks!\" Linda protested. \"I'd rather walk.\"\n\nThe four agreed to stroll through the amusement park, taking in the sights and sounds on the way. \n\nThey walked past the section of the park devoted to water attractions. They all suddenly became aware of the heat, looking on at the people floating blissful on giant inflatable rings in a narrow waterway in the shape of a meandering river loop. Visitors in swimwear braved steep splashing ramps, sliding on their backs at break neck speeds. When the group came upon a massive wave pool, complete with a tiki bar, Linda insisted they visit it later in the day. \n\n\"Yes!\" Janice replied. \"I can't wait to get some sun on my skin! Did you bring your swimsuit, Tracy?\"\n\n\"Yeah...\" Tracy answered, hesitantly. \"but I'm not so eager to show off. I barely fit in it.\"\n\n\"Join the club!\" Janice giggled. \"I'm wearing one that I haven't worn since your wedding!\"\n\n\"Jesus! You falling out of that bikini back then!\" Tracy gasped. \n\n\"If you're feeling self conscious, then just keep your shirt on.\" said Linda. \"That's all I'm gonna do.\"\n\n\"Uhh, Mom... you can almost see through that top already. If you get it wet it's gonna be invisible!\"\n\n\"...And?\" Linda replied. \n\nTracy shook her head, chucking. \"I swear... you and Janice are just begging to get roofied.\"\n\nJanice stopped in her tracks and glared at Tracy. Matt watched tensely as Janice's eyes welled up with angry tears. He attempted to gently hold her hand. \n\n\"W-why d-don't you shut the fuck up, Tracy!!\" Janice sputtered through her tears as she sped off to a nearby bathroom. Matt quickly followed her. \n\nTracy blinked in confusion. \"What's her problem?\"\n\nLinda shook her head at Tracy, giving her an admonishing look. \"That was the WRONG thing to say to your sister.\" Linda said quietly to Tracy. \"Janice WAS roofied at a party... she had to be brought to the hospital to get her stomach pumped and everything!\"\n\nTracy's shoulders slumped, realizing her faux pas. \"Fuck!... Really?! Oh... poor Janice. What a nightmare! Who ended up helping her?\"\n\n\"That guy right there.\" Linda said, nodding towards Matt. \"Janice and him weren't even together then, just roommates. He probably saved her life that night!\"\n\nTracy's eyes looked over to Matt. He stood, holding Janice's body against his. Her head to his chest, cradling her tear stained face against his shoulder in tender comfort. She held on to him tightly as she sniffled her tears away. \n\n\"Yep.\" Linda continued. \"Janice told me later that it was then that she knew that Matthew was the real deal.\"\n\nTracy sighed. \"I'll go say 'sorry'.\"\n\nShe meekly approached Janice. Matt looked up to see Tracy's sorrowful expression. He whispered softly in Janice's ear. She nodded in response and Matt quietly stepped back to let the sisters speak privately. \n\nLinda took Matt's arm with a smile as he approached. The two strolled a few paces away, letting the girls speak. Within just a few minutes the two looked over to see the sisters hug each other tightly and stride hand and hand together towards them. \n\nMatt noticed, upon the sisters approach, that Tracy was looking at him with a softer, more sincere smiling expression. Together, the four continued their walk towards the arcing blue tracks rising high above the tree line. \n\nThe popularity of the sleek, modern roller coaster was immediately apparent in the long, snaking line of people waiting for their turn to board. \n\n\"Here's where everyone is!\" Janice laughed as they took their place in line. Matt couldn't help but chuckle to himself at the astonished faces reacting to the sight of the gorgeous trio of extremely well endowed women as they passed through the waiting area. \n\nThey were nearing the coaster gate when Tracy sidled up next to Matt, wearing a bright smile. \"I'll ride this one with you... if that's ok.\"\n\n\"Sure!\" Matt happily replied. \n\n\"It looks like me and Mom are going on first.\" Janice said. \"If we end up getting separated, do you guys want to meet at the food pavilion for lunch?\"\n\n\"Sounds good to me!\" Tracy replied. \n\n\"Ok! Here we go, Baby Girl!\" exclaimed Linda, as the gate opened before them, allowing them to take their seat on the awaiting coaster train. \n\nTracy watched in silent trepidation as the 'over the shoulder' harness lowered over Janice and Linda's heads. She could see their visible discomfort when the hard rubber coated frame squashed down upon the women's large breasts as it was buckled by the attendant. The gates closed again and with a silent hiss, the coaster suddenly launched out of the station with unbelievable speed. The roller coaster passengers' surprised screams quickly faded away into the distance. \n\n\"Our turn next!\" Matt clapped in excitement. \n\nIt was just a few minutes before the next empty train slid, silently into the station. The gates opened once again. Tracy gulped as she took a seat. She reached up to the harness and pulled down as far as she could withstand. The buckle at the front of the harness dangled far out of reach from its mate. An attendant rushed forward and pushed the harness down further. Tracy yelped in pain. \n\n\"Hey!!\" Matt shouted at the pimpled attendant. \"Take it easy on her!\"\n\n\"If I can't buckle this, she can't ride!\" the attendant replied, slightly panicked. \n\n\"I... I can't fit ... Oh my god...\" Tracy whispered. She was mortified as she looked up to see the people in the crowded waiting area craning their necks to see what was causing the delay. She could feel her neck burning as her face turned bright red. She was almost about to burst into tears, when she felt a gentle hand come to rest on her shaking wrist. \n\n\"It's ok. Don't worry, Tracy.\" Matt said in a calm, friendly voice. He gently took her hand in his. \"We can just go. It's alright.\"\n\nMatt's harness was disengaged and he stood to assist Tracy to her feet. He held on to her hand as the guided her towards the exit. Tracy's head hung low with shame. \n\n\"Let some air out of those things, honey!!\" a man called out from the crowd before Tracy and Matt rounded the corner. A laughing response filtered through the waiting area. \n\nTracy bolted from the station in embarrassment, leaving Matt casting a scowl over his shoulder. He quickly caught up to her as she ducked into the nearby sky gondola entrance. \n\n\"I wish I could just disappear!\" Tracy said, fighting back tears. She leaned on Matt's shoulder. He ventured to wrap his arms around her, she sank further into his embrace. \n\n\"Let's get in one of these gondolas.\" Matt suggested, sympathetically. \"That'll get us away from the crowd.\"\n\nTracy and Matt stepped onto the bright green suspended bucket-like gondola car and took a seat across from each other. The car swayed as it glided out of the station, riding on a wire that led into the sky. \n\nMatt nervously regarded the people below becoming smaller and smaller as they increased their height. \n\n\"Thank you for not adding to the scene down there.\" Tracy said quietly as the car gracefully traversed the park. \n\n\"You looked embarrassed enough. I'm so sorry that happened to you, Tracy.\"\n\nShe smiled at Matt's genuine sentiment. She was just about to respond when suddenly, the gondola car halted to stop. Tracy and Matt's eyes were wide with fright as the car swayed back and forth, slowly rocking to a standstill. They both held on tight to the railings, not daring to look over the edge to confirm how far they were dangling above the ground. \n\n\"Fuck! Are we about to die?\" Tracy whimpered.\n\nA speaker at the opposite of the bolted door crackled to life. \"Please do not panic.\" a voice spoke. \"We have temporarily suspended this attraction to attend to a medical emergency at the station. Please remain calm and stay seated. Normal operation will resume shortly.\"\n\nMatt breathed a sigh of relief. \"Ok... so. I guess we'll just hang out for a bit?\"\n\n\"No pun intended.\" the two said in unison, laughing.\n\nA moment of awkward silence fell over the two relative strangers. Matt idly gazed around the park down below. \n\n\"Sorry I was being a cunt to you earlier today.\" Tracy finally said, meekly. \n\n\"You weren't being a cu-... a 'C' word.\" Matt smiled. \"I don't know if I'm supposed to know this... but your mom told me what happened to you... how your ex leaked your private pictures online. I understand where your anger towards guys is coming from... and you're justified. A lot of guys make it really tough.\"\n\nTracy smiled at Matt. \"Thank you. It doesn't excuse my behavior though... especially when you're being so nice to me. I'm... I'm just hurt... inside. My heart is broken... and we're living together now in a small apartment and... you're going to see that.\"\n\n\"I don't mind. I know that you need this time in order to heal. I'm more than happy to help you in any way I can. And... for the record, Tracy, I am truly sorry for your pain.\" ",
        "Her pretty eyes closed briefly to prevent tears. She reach out and affectionately stroked Matt's hand that rested on his lap. \n\n\"Thank you, Matty.\"\n\nAnother silence befell the two. \n\n\"Gee, I hope everyone's ok down there. It's been a long time, kinda.\" Matt said, peering into the obscuring tree cover below. \n\n\"Hmm.\" Tracy said, shielding her eyes from the blazing sun above. \"I feel like I'm missing a prime opportunity to get some color on my skin while I have this relative privacy.\" she said, gathering the bottom hem of her loose, black shirt. \"Do you mind if I...?\"\n\n\"No! Uhh..\" Matt gulped, nervously. \"I'll just look over this way for awhile.\" he said, shifting in his bench seat to turn his eyes away. \n\n\"That's sweet, Matty...\" Tracy said with a blushing grin. \"but, I don't mind if you see me in my swimsuit... as long as it's just you.\"\n\nWith that, Tracy began lifting her large, black shirt over her head. Matt braced himself for what he was about to see underneath her shirt. A black, one piece bathing suit with tiny white polka dots shown at her midriff, first. Despite Matt's mental girding, when Tracy's two tremendous breasts fell from her shirt with an almost audible 'gallump' sound, he had to gasp in astonishment. Her swimsuit's inadequate coverage ability resulted in Tracy's gargantuan tits overflowing the built in cups. Her huge breasts arced in two unbelievable huge bulges, emanating from her extremely compressed, deep cleavage and leaping up to her collarbone, clear to her overhanging side boobs. The thin, halter style strap held the swimsuit aloft with a commendable strength, pressing into her soft breast skin. The front dipped low, displaying many gorgeous inches of fat, squashed cleavage bursting forward. \n\nMatt's eyes grew wide, taking in the stupefying spectacle as Tracy's face was covered by her T-shirt for a few tense seconds. \n\nWhen she set her shirt down beside her, Tracy cast a cautious eye to Matt, who was innocently examining the clear blue sky above. \n\nShe smiled to herself, watching Matt's obvious attempt to not let his eyes fall below her neckline. \n\n\"Matty~...\" Tracy cooed in a playfully teasing lilt. \"It's ok to look at my body. If Mom and Jan are ok with you, then I am too. Besides... in that tiny apartment, it's only a matter of time till we all see each other naked anyway.\"\n\n\"Yeah, the odds are actually better than you think.\" Matt chuckled. \"...especially with a cat who can open doors!\"\n\n\"No shit! Really?\" \n\n\"Yep. Bubsy pulled that trick on me in front of your mother one time.\" Matt blushed. \n\n\"Seems like it only made her love you more!\" Tracy giggled. \"I'll have to keep my eyes open.\"\n\nMatt wasn't sure how to respond besides an awkward chuckle. \"Uh... I think I should let Janice know we're ok.\" he said, reaching into his pocket for his phone. \n\nTracy sat back and draped her arms over the railings of the car. Her chest was thrust forward, straining her swimwear to nearly obscene limits. \n\nMatt happened to glance up, slightly from his typing to see Tracy's nipples erect and pressing hard into her polyester swimsuit, mere centimeters from cover. Her gigantic breasts were nearly splitting the seams at her sides and front. Matt's gazed couldn't resist lingering on the stunning beauty erupting before him. He blinked and looked up at Tracy, who was watching him with a soft smile. \n\n\"Let me know if it's too much titty for you.\" Tracy said, calmly. \"Somehow, I doubt it is.\" she added with a smirk. \n\nMatt's face paled in embarrassment. He quickly looked away, fumbling for the Send button on his screen. The phone tumbled from his clumsy hand, thudding to the floor of the car. \n\n\"Whoops!\" Matt chuckled, leaning forward to retrieve his device. \n\nJust then, without warning, the car lurched, resuming its operation. In the unexpected shift of equilibrium, Matt found himself falling forward from the sway. His face planted directly in between Tracy's enormous tits, becoming lodged by gravity. \n\n\"Mmmrrphhmm!\" Matt exclaimed from his soft enclosure. He could detect Tracy's loud laughter when his ears weren't being blocked by breast meat. \n\nMatt finally managed to break free, throwing himself back against his chair with a panicked expression. \"Oh jesus! Tracy! I'm so sorry!! It was an accident!!\"\n\nTracy was wiping tears of laughter from her eyes. \"Oh my fucking god!!\" she wheezed. \"Your fucking face was priceless!! Oh geeze, I'm never gonna forget that! Hahaha!\"\n\nHe sat across from her, bright red; his smile attempting to break through his embarrassment. \n\n\"C'mon it was funny!\" Tracy said, leaning over to pat his knee, reassuringly. \"I guess it's time to get my shirt in again, huh?\" She gathered the large black T-shirt and navigated her arms and head through the holes. \n\n\"Janice texted back.\" Matt said, regarding a chirp on his phone. \"They're meeting us at the station and then we're gonna go have lunch together. Sounds good?\"\n\n\"Hell yeah!\" Tracy replied, pulling her shirt over her bust. \n\n~~~~~~~~~~~~\n\n\"Oh thank goodness! You're safe!\" Linda exclaimed, rushing forward to hug Tracy as she stepped down from the gondola. \"Were you terrified the entire time?\"\n\nTracy scoffed. \"No, Mom! It was fine! Me and Matty kept our cool up there. Right, Cupcake?\" she said patting Matt on the arm, affectionately. \n\nHe grinned over his shoulder at Tracy. \"That's right! Cool as cucumbers.\"\n\nJanice leapt into Matt's arms, kissing him deeply. He squeezed her tight. \"Oh! I missed you, baby!\"\n\n\"I missed you too, darling.\"\n\n\"So, what happened down here?\" Tracy asked as they walked out of the station together. \n\n\"Some guy passed out from the heat in his gondola. They had to get a med crew to lift him out.\" Janice said, holding Matt's hand. \"It took them awhile... he was no stranger to the buffet line, if you know what I mean.\"\n\n\"I sure feel like a stranger to the buffet line!\" Linda exclaimed. \"Is anyone else super hungry?\"\n\nEveryone emphatically answered in the affirmative.\n\n\"Great! Let's eat!\"\n\n~~~~~~~~~~~~\n\n\"Okaaay!\" Matt called out as he approached the three lovely ladies sitting at the umbrella covered picnic style table. \"We got a large pepperoni pizza and four drinks in exclusive commemorative cups coming in at a cool $24.00 a pop!\"\n\n\"It's worth it!\" Linda beamed. Matt handed her bank card back to her. \"Besides! I GOTS it like that, Yo!\" Linda pulled a pose reminiscent of an 80's rapper. \n\nTracy and Janice both rolled their eyes. \"Ohmygod. Please don't talk like that, Mom!\" \n\n\"What!? You're jelly cuz of my fat wallet? It's the bomb dot com, Yo!\"\n\nJanice and Tracy cringed in embarrassment. \n\nMatt looked around the table. \"Hold on, girls. I forgot napkins. I'll go get you some!\" \n\nTracy's eyes followed Matt quickly weave through the crowd, back into the cafeteria. She smiled at Janice. \n\n\"I think you might have found yourself a good one, Jan.\" Tracy said, nudging her sister. \n\n\"I KNOW I did!\" Janice replied over her mouthful of pizza. \n\n\"So... \" Tracy whispered. \"Does he have a brother?\"\n\nJanice shrugged, swallowing. \"Maybe? Matt was adopted. I don't even think he knows.\"\n\nMatt was heading back towards the table with a handful of napkins, when suddenly a raised voice called out nearby. \n\n\"HEY! YO, BOSSMAN!\"\n\nMatt's head spun towards the familiar voice. \n\n\"Oh SHIT! It IS him! What's up, dawg!!\" \n\nMatt was pleasantly surprised to see his former workmates, Reggie and Paul, approaching with wide smiles. He hadn't seen the two men since they had left Japan. \n\n\"Well, DAMN!\" Matt chuckled. \"What are the odds? How's it going, guys?\"\n\n\"Aiight. Hey, Yo. We heard about what they did to ya at work. Man, that shit is WHACK!\" said Reggie. \n\n\"What can you do?\" Matt sighed. \"I hope you guys watch your back with this company. You see now how they'll do you.\"\n\nPaul scoffed. \"Who you tellin'? They got us being shipped off to Saudi Arabia for two jobs- back to back. SIX MONTHS in the fucking desert!\"\n\n\"Yeah, we out here enjoying the little time off we got before that shit starts in a couple weeks.\" Reggie said in a somber tone. \n\n\"Damn...\" Matt felt a mix of sympathy for his friends and intense relief that he didn't have to join them. \"Well... stack that money.\"\n\n\"No choice!\" Paul chuckled, peering around. \"Ay, so anyway... you out here with your two honeys?\"\n\nMatt shook his head. \"One of 'em had to go home to Louisiana, buuuut...\" he leaned to the side, looking over Reggie's shoulder.\n\nPaul and Reggie both followed Matt's eyes to the three gorgeous, voluptuous women sitting nearby, smiling over at him.\n\n\"Ssshhiit!\" Reggie hissed, spinning back around quickly. \"Are you fucking kidding me? You the goddamn 'Titty Whisperer'!\"\n\n\"That's what's up!\" Paul interjected. \"My dawg gets knocked down a notch and what does he do?... He steps up his muthafuckin' game!!!\"\n\nMatt tried not to turn red in front of the guys. \"Well, man... you two be safe out there. It was good seeing y'all again.\"\n\n\"Aiight, big dawg!!\" The two men gave Matt a warm, farewell handshake and a hug and proceeded on their way. \n\nLinda, Janice and Tracy were all smiling at Matt when he took a seat, laying down the stack of napkins on the table. \n\nWhen everyone had had their fill of lunch, Linda asked what everyone wanted to do next. \n\n\"Let's do the Bumper Cars!\"\n\n\"Great! That sounds fun. Then let's go to the Water Park!\"\n\n\"Okay!!\"\n\n~~~~~~~~~~~~\n\nBehind the wheel of his Bumper Car, Matt found himself immediately set upon by all three maniacally laughing ladies. \n\n\"Aaaahhh!\" he screamed in comical panic as he wound his car away from their pursuing bumpers. Matt was leading the three women on a chase around the large, oval shaped track, weaving, hastily around the other drivers. Linda managed to pull ahead and force Matt into the wall while Janice rammed him from behind. Tracy spun around and T-boned his car against the barrier, pinning it in place. \n\n\"Haha! We got you, Matty!!\"\n\n\"Team Titty: ONE! Team Testical: ZERO!!\" Tracy exclaimed with glee. \n\n~~~~~~~~~~~~\n\nThe group were weary with laughter by the time they found themselves standing at the entrance to 'Splash Zone', a dedicated water park, smack dab in the center of the sprawling amusement land. \n\n\"Time to get WET!\" Janice cried, peeling her tank top off over her head and rushing through the gates. Matt and Tracy gasped at Janice's minuscule bikini top allowing a shocking amount of visible, pale breast meat spilling out of the front, sides and bottoms. \n\nLinda followed Janice's example by bending at the waist and pulling her shorts to the ground. Beneath she wore black bikini bottoms, secured at the side with a loose knot. She hoisted the bottom hem of her tube top beneath her massive breasts, pulling the upper hem down to an almost obscene degree. \n\n\"I feel rather conservative in my suit, all the sudden!\" Tracy chuckled at Janice and Linda's state of dress. She hesitantly lifted her shirt over her head, revealing her ill fitted one piece. \n\n\"Ooo! Sexy Lady!\" Linda squealed at Tracy. \"We need drinks! Will you go get us a refill at that Tiki Bar while Janice and I get a seat?\"\n\nTracy collected the group's cups and walked across the paved path past the wave pool. Heads everywhere turned to get a better look at Tracy's enormous assets bouncing as she walked. She could feel their eyes practically burning her skin with their focused attention. \n\nThe young man behind the bar was mesmerized by Tracy's approach. He had to shake himself out of his blatant staring as she stepped up to the rail. \n\n\"Four frozen margarita refills, please.\" Tracy said setting the cups on the bar. \n\n\"Coming right up, beautiful!\" the charming bartender crooned. \n\nTracy nonchalantly gazed around the water park, watching the laughing visitors cavort in the rollicking waves. \n\n\"Here you are, gorgeous. On the house!\" the young man said, sliding four full plastic cups towards her. \n\n\"Oh! My... thank you?\" Tracy blinked. \n\n\"Anytime... for you!\"\n\nShe blushed, slightly, carrying her drinks away. \n\nTracy approached Linda and Janice seated on their poolside lounge chairs. \n\n\"Here's your drinks!\" Tracy said, standing in front of the ladies as she set down their large plastic cups. \n\n\"Thanks, Trace.\" said Linda quickly. \"Ok, sit down! He's almost here!\"\n\n\"Who?\"\n\n\"Matty!\" Janice whispered with a grin. \"We're watching him get out of the pool! Here, have a seat!\"\n\nTracy scoffed at her sister and mother's eager anticipation as she took a seat in between them, facing the pool. \n\nGiant, twisting, multi colored water slide tubes emptied into the wide receiving pool, regularly depositing a laughing or screaming park visitor with a large splash. \n\n\"Wooo!\" Janice heard Matt's voice, as he sped down the water slide on his back. He slid into the shallow landing pool, sending high waves of water flying, his legs akimbo in the air. \n\n\"Ooo! Here he is!\" Linda exclaimed, sitting up straight to better her view. \n\nTracy looked over at Janice's rapt attention to Matt swimming towards the steps directly in front of them. She was biting her lip, unconsciously. \n\nTracy smirked, until she saw Matt stand to his feet and stride up the steps. Her skeptical smile vanished, replaced by open mouthed awe. \n\nHe was wearing a pair of light colored shorts and an excited, boyish smile as he swiped his wet hair away from his eyes. \n\nTracy's eyes couldn't resist watching rivulets of water running down his large biceps, pectorals and his defined six pack abdomen. Matt's thin fabric shorts rode low, showcasing the V shape of his lower abs. Her eyes widened at the enormous bulge at his crotch. His clinging soaked shorts were like a second skin on him, leaving practically nothing to the imagination. \n\n\"Holy fuck!\" Tracy exclaimed, a little too loudly. \n\nJanice and Linda both giggled at Tracy's reaction. \n\nMatt was out of ear shot, grinning obliviously. \"You sure you don't want to go on the slide?\" he called over to the girls seated nearby. \"It's really fun! I think I want to do it again!\"\n\n\"Go ahead, honey buns!!\" Linda waved. Her voice lowered to be heard only by the women. \"Hopefully he loses his shorts this time!\"\n\nJanice blew him a kiss. \"Have fun, baby!! I love you!\"\n\nMatt beamed. \"Love you too, babe! Ok, see you soon!!\"\n\nThe three women all leaned over at the same time to watch his tight ass bounce in his shorts as he trotted away to the waiting line steps. \n\n\"Fucking delicious!\" Linda exclaimed. \"Tell me you saw that bulge, Tracy.\"\n\n\"Yeah, of course! How could you not!?\"\n\nJanice giggled. \"Told ya he was a big boy!\"\n\n\"He's a lot bigger than Joey ever was, that's for sure!\" Tracy blinked., lowering her voice to a whisper. \"...but, why is he walking around with a boner?! Don't you think he's going to get into trouble?\"\n\nJanice spun her head towards her sister, barely able to withhold her laughter. \"That wasn't a boner!\" she exclaimed. \n\n\"Not even close!\" Linda chimed. \"In fact, it looked to me like that water must have been freezing!\"\n\nJanice giggled. \"Yeah! It was so cute and tiny!\"\n\n\"TINY?!\" Tracy balked. \n\n\"Oh, yes.\" Janice answered. \"My man is a grower AND a shower!\"\n\n\"Lucky bitch!\" Tracy murmured behind her sip of drink. \n\n\"Tracy!\" Janice exclaimed. \"That's YOUR dick too, remember?\"\n\n\"Oh god...\" Tracy laughed. \"That damned 'Pact'.\"\n\n\"Yes! Exactly! Our pact!\" Janice exclaimed, standing to her feet. \"A pinky promise... that if one of us is alone and desperate, then the other has to be willing share her man!\"\n\n\"I wasn't EVER serious about that!\" Tracy exclaimed. \"We were drunk!\"\n\n\"It's. A. Fucking. Pinky. Promise!\" Janice clapped at every word and then sat down in her seat, as if to close the discussion. \n\nTracy shook her head, sitting once again. \"But, aren't you're in love with him? You got this wonderful man and he's all yours, Jan! Are you sure you want to just... share him?\"\n\n\"We've always shared everything our whole lives.\" Janice answered, serenely. \"...all three of us. Anything that's mine is yours, Tracy... and that goes for you too, Mom.\"\n\n\"So... hypothetically, you would be ok with your boyfriend fucking Mom?\" Tracy retorted. \n\nAt that moment, Linda's straw slurped loudly at the bottom of her cup. She swallowed and exhaled. \"That train already left the station, Doll face.\"\n\nTracy gasped. Her eyes widened in disbelief. \n\n\"Yeah.\" Janice added. \"... and I AM ok with it.\"\n\nTracy spun around to Linda. \"Mom!? You really had sex with Janice's boyfriend?\"\n\nLinda rolled her eyes. \"I didn't know that he-.... it's a complicated story.... but, yes, Matthew and I had AMAZING sex and I'd happily fuck him again, anytime he wanted.\"\n\nTracy held on to the sides of her temple in frustrated confusion. Janice obliged Tracy with an abbreviated run down of the events that had occurred over the past few days. Tracy shook her head in wavering disbelief. \n\n\"Bobby...!\" Tracy exclaimed, at the end of Janice's tale. \"What a snake! I can't believe he would stoop so LOW!\"\n\n\"Well... good riddance to him. On to MUCH better things!\" Janice said with a grin. \n\n\"So... Matty is ALL THAT, huh?\" Tracy said, skeptically. \n\nJanice scoffed. \"It'll be a MIRACLE if I don't end up trying to jump his bones at least once while we're here.\"\n\nTracy shook her head in amazement at Janice. \"What has happened to my sweet little sister?\" she exclaimed. \n\n\"Girl... something changed when Matty and I finally DID it.\" Janice replied with a serious tone. \"I used to just think sex was something intimate and nice. Something that would keep my man somewhat happy...\"\n\nTracy nodded silently, in agreement. \n\n\"... but NOW!?\" Janice exclaimed, leaning toward her sister. \"... it's all for ME! I fucking CRAVE his cock day and night! It's gets me off in ways I had NO idea was even possible!\"\n\n\"Preach it, Baby Girl!\" Linda called out. \n\nJanice took Tracy's hand. \"Please! Do yourself a favor. I promise, it's ok! You deserve it!\"\n\nTracy's confused eyes scanned her sister's face closely for the secret tell that would always reveal Janice's deception. None appeared. \n\n\"Ooo! Ooo!\" Linda exclaimed, hopping up and down in her seat. \"I think I see him again!\"\n\n\"Woooooo!\" came Matt's joyous cry as he splashed down, once again. \n\nJanice leaned close to Tracy and whispered. \"Watch this!\"\n\nJanice winked at her sister, as she rose to her feet. \n\n\"That was great, baby!!\" Janice shouted, hopping on her tip toes to the edge of the pool to meet him. \n\nMatt couldn't help but gawk at the vast amount of publicly exposed breast mass jiggling towards his face. Janice wrapped her arms around his neck and smothered his head in between her tits. \n\n\"You were going SO fast, baby!\" Janice cooed. \"It was so SEXY! God! I wish there was somewhere we could go around here where you could just... tear this little bikini off of me and plough my pussy till I screamed!!\"\n\nMatt gulped, feeling his dick thickening in his wet shorts. \"M-me too!\" Matt stuttered. \n\n\"Or like... maybe we could swim to the deep end of the wave pool and then you could push my bottoms to the side and fuck me in front of EVERYONE! Wouldn't that be hot?!\"\n\nMatt's dick was approaching full, engorged length. His pleading eyes raised to Janice's from between her breasts. \"I think I better sit down... before I get arrested!\" he whispered. \n\nJanice subtly turned her head and smiled back at Tracy. She stepped back and took his hand, leading Matt to their chairs. \n\nShe made sure to keep Matt close behind her, hiding his jutting cock from view against her round ass. It was just a short traversal to where Tracy and Linda were seated. \n\n\"Stand right here out of sight, baby! I'll help you dry off.\"\n\nMatt followed Janice underneath their beach umbrella. She approached, giving Tracy a subtle look as she stepped aside.\n\nTracy was suddenly presented with an eye level close up view of Matt's full erection, pressing against his shorts in vivid clarity. His shaft was pointed towards his left pocket, jutting out past his hip. ",
        "\"That's what I'm talking about!\" Linda exclaimed, fishing for her camera phone in her purse. \n\nA towel was thrown over Matt's blushing face as Janice rubbed his hair dry, rigorously. \n\nTracy couldn't help but gawk in amazement, staring at the evidence of the largest dick she had ever conceived of. The astonishingly thick veined shaft and bulbous, mushroom tip wobbled before Tracy's wide eyes as Janice rubbed Matt's body dry. \n\nLinda was talking carefully composed video footage of Matt's bouncing cock bulge. \n\nWhen Janice moved the towel down to dry his shorts, Tracy raised her eyes to see Matt's red, embarrassed face, his eyes darting around the crowd to make sure no one was staring. A wave of sympathy for the blushing man washed over her, recalling her own recent online exploitation. \n\n\"Mom! Stop!\" Tracy scolded Linda. \"You're being terrible. Here, Matty. Sit down next to me. No one was looking, sweetheart. Just us, it's ok. \"\n\nLinda lowered her phone as Matt quickly took a seat. \"I wasn't gonna SHARE it with anyone! I was just gonna use it to rub my bean to in the bath tonight!\"\n\n\"Poor guy.\" Tracy draped another towel over Matt's lap. \"Here you go, Matty Pants... hey, I like that! Can I call you 'Matty Pants' from now on?\"\n\nMatt's blushing shade slowly faded as he nodded and smiled to Tracy. He could feel Tracy's warm breasts press hard into his arm as she leaned close and kissed him on the cheek. \n\n\"Maybe tomorrow you can help me try to get my pictures off the internet.\" Tracy spoke softly to Matt. \n\n\"Uhh... sure!\" He attempted to ignore her huge, warm breast resting on his forearm, pinning it to the armrest of his chair. \"I.. I'm no expert at computers, but I'll see what I can do.\"\n\n\"Thank you, Matty Pants!\"\n\n\"Smile, you three!\" Linda called out raising her camera phone once more to take a picture. Janice and Tracy stood to pose on either side of Matt, who remained seated. His head was crowded on either side by bulging soft breast fat, as the girls gathered close to fit in the frame. \n\n\"I think Matthew is smiling.\" Linda giggled. \"Okay! Say 'cheese'!\"\n\n\"Cheese!\" the sisters and Matt grinned, happily. \n\n~~~~~~~~~~~~\n\n\"That's sweet of you to stay and keep Tracy company while Mom and I ride this coaster.\"\n\n\"Are you ok with it? I mean... do you mind that your sister and I are spending a lot of time together today?\"\n\n\"I LOVE that you two are getting along so well!\" Janice said softly as she embraced him, resting her head on his shoulder. \n\nMatt let out a sigh of relief. \"Ok, good.\"\n\n\"Why are you so nervous?\" Janice said, looking quizzically up at him. \n\n\"I'm just... scared. I'm scared that I'm going to screw it up with you and... well, I just don't ever want to feel that feeling again... the feeling of losing you.\"\n\n\"Oh my god, baby...\" Janice embraced Matt so tightly that a tear was squeezed from his eye. \"Don't you ever worry!\" she said softly in his ear. \"You are STUCK with me! For good!\" \n\nTheir lips mashed in a passionate kiss. \"Nothing you could do with Tracy or my mom will ever change how much I love you.\"\n\nMatt blinked. \"Well... I mean, thanks. But, your mom was a misunderstanding and... I don't have any designs on your sister.\"\n\n\"Why not?\" Janice looked almost offended. \"She's fucking gorgeous!\"\n\nMatt's eyes widened. \"I... I... I agree, but-\"\n\n\"No more 'but's'!\" Janice exclaimed. \"Tracy deserves good dick too, just like my mom! So, if you two 'make a connection' one day, believe me, I will be the first one cheering. \"\n\nMatt blinked in disbelief. \"U-... \"\n\nJanice laughed at his befuddled expression. \"I told this exact same thing to Tracy earlier today and she looked at me just like that! What's with you two?\"\n\nJanice gave him a kiss goodbye, before turning towards her mother. \n\n\"See you after the ride, Sexy Man!\" Linda called out, as her and Janice walked through the entrance to the coaster waiting line. \n\nMatt stood alone for few minutes, idly watching people pass by while he waited for Tracy to return from the ladies room. \n\nA moment later, he looked up to see Tracy walking towards him, quickly. Her pace was so fast her massive bosom shook more recklessly than Matt had ever seen; quaking with every step. When she got close enough, Matt could see a tense, fearful expression on Tracy's face. \n\n\"Don't freak out!\" she said quietly, but urgently, as she approached. \"Just act natural!\"\n\nWith that Tracy pressed her body to his, grabbing his face and kissing him with the familiarity of a long time lover. \n\nMatt tried valiantly to suppress his stunned expression, at Tracy's request, despite her passionate kiss being the last thing he had expected from her. \n\n\"Hold me!\" Tracy whispered urgently, clutching his body close. \"Like we're boyfriend girlfriend!\"\n\n\"What's going on?\" Matt whispered in her ear as he held her, tenderly.\n\n\"There's a man in a brown shirt behind me... is he still there?\" Tracy said, quietly. \n\nMatt's eyes scanned the crowd over Tracy's shoulder. He spotted a man with a dark complexion in a brown shirt several yards away, near the sculpted topiary. He was staring directly at them with a scowl. \n\n\"Yeah... he looks kinda mad. What's his problem?\" \n\n\"He was stalking me! He followed me to the bathroom... then he was waiting for me when I got out, saying he wanted my number. I told him I was here with my boyfriend, but... he wouldn't stop!\"\n\n\"Yeah, well. He looks like he needs some more convincing...\" Matt said, locking eyes with the man in stare down. \"Stay here. I'm gonna go have a word with this fucker.\"\n\n\"No!\" Tracy cried, clutching Matt tighter. \"Stay with me, please! Here... convince him this way!\" She grabbed Matt's hands placed them on her ass cheeks. She, then took Matt's face and gave him another long, sensual kiss. Matt felt Tracy's tongue enter his mouth and begin stroking his with a fierce display of passion. His cock began to harden against her body. \n\n\"Mmmph!\" Matt exclaimed, feeling her crotch grind against his expanding penis. \n\nThe two made out, passionately, for almost a full minute while passing people regarded them with mild amusement. \n\nFinally, Tracy reluctantly disengaged her kiss and looked up into Matt's eyes. \n\n\"Is he gone?\"\n\nMatt once again cast his eyes over her shoulder. The dark man had supposedly moved on. \n\n\"Looks like he got the message.\" Matt said, quietly, releasing his hold on her butt. \n\n\"Wow...\" Tracy breathed, almost to herself. \"That was the most action I've had in YEARS!\" \n\nShe turned away, accidentally grazing Matt's erection with her wrist. \"Ooops!\" Tracy said, eyeing Matt's massive bulge in his shorts. \"Good to know I still got what it takes.\" She cooed, patting his protruding lump, playfully.\n\nMatt gulped, his cheeks donning a shade of red. \n\n\"Sorry for working you up like that, Matty Puffy Pants. How do you get rid of that thing? What do you need to do, some deep breathing?\"\n\nMatt sighed. \"Yeah... I just need to sit for a moment or two. Where do you want to go, once... you know... everything is calmed down?\"\n\nTracy's eyebrows raised. \"How about I whip your ass at Skee Ball!\" \n\nMatt chuckled. \"You must be new around here... See, cuz I'M the only one whippin' ass at Skee Ball 'round these parts!\"\n\n\"Hmm. We shall see, won't we?\" Tracy cooed as she playfully bounced her hip against Matt's slowly deflating bulge. \n\n~~~~~~~~~~~~\n\nWhen Janice and Linda emerged from the coaster exit gate, they spotted Matt and Tracy waiting nearby. Tracy wore a satisfied grin, her arm draped around her prize: a giant, chubby unicorn stuffed animal nearly the size of a full grown adult. \n\n\"Another victory for Team Titty!\" Tracy exclaimed. \n\n\"And another giant stuffed animal!\" Janice moaned, her hand covering her forehead. \n\n\"Her name is Sadie. Isn't she adorable?!\" Tracy said, hugging the cartoonishly obese horse. \"I won her by whipping your boyfriend's ASS in Skee Ball!\"\n\nTracy cast a teasing glance over to Matt, who quietly ate his crow. \n\nJanice smiled at Matt. \"I should have warned you that Tracy has always handled balls like a champ.\"\n\n\"Oh yeah?\" retorted Tracy. \"Too bad you can't play Skee Ball with your mouth, you'd win every game.\"\n\n\"Mmm!\" Janice grinned, blissfully. \"Balls in my mouth...\"\n\n\"Ok., everyone. Let's go on one last ride... all together this time!\" Linda exclaimed. \"C'mon! There's one right there!\"\n\nTracy left Sadie the unicorn to wait by the exit to be retrieved afterwards. The four shuffled through the line to the unknown ride. Turning the corner they found themselves at the entrance to a pagoda with several round rafts floating at the mouth of a raging, man made river. Four seats lined the interior of the open roofed raft, facing each other. \n\n\"Uh-oh. I think we're about to get wet!\" Janice said with comic anticipation. \n\nThe four were seated and the giant raft disengaged, careening towards the rushing waterfall before them. \n\nThe girls squealed at the splashes of water that came over the edge of the large raft, soaking their feet. \n\nThe water craft rocked and bounced down the twisting, narrow water path. Colliding rapids send cascading sprays of water over their heads. \n\nA massive peal of water draped directly over Matt's head, soaking him to bone in an instant. \n\nThe women all cackled in hysterical laughter at Matt's shocked, drenched face. \n\nSuddenly, they turned a corner and were faced with a corridor of waterfalls spilling over the edges of both barrier walls onto the churning water path. \n\n\"Oh shit!\" Linda exclaimed. \n\nGallons upon gallons of water poured directly into the raft as they traversed the corridor. Any hope of emerging dry at the end of the ride was dismissed by all four. \n\nMatt had to giggle at the three completely drenched women, draping their wet hair from their face. \n\nLinda had to pull her top back up before the raft returned to the station. As predicted, the translucent fabric was practically invisible in it's wet state. \n\n\"Good thing I packed us a change of dry clothes.\" Janice giggled, regarding the puddle forming around the group as they stood outside the gate. \n\nThe four soggy fun seekers, plus a giant unicorn, departed the park at sunset, smiling and laughing at the exciting memories formed today. When they got to the car, Janice handed out towels and dry clothes to Tracy, her mother and herself. \n\n\"Sorry, honey.\" Janice said to Matt, handing him a towel. \"I didn't go digging through your drawers for your clothes.\"\n\n\"No problem, wearing this is just fine with me.\" Matt exclaimed, peeling off his soaked shirt, wrapping the towel around his waist and dropping his wet shorts to the ground. \n\nMatt was stepping out of his clothes, when he looked up to see the girls wriggling out of their swimsuits between the parked cars. He quickly turned his back to them and kept a lookout for any passing visitors. \n\n\"Are you kidding me, Janice?\" Matt heard Tracy's voice behind him. \"THIS is what you brought me to wear?\"\n\n\"It's all I had! Relax. It's just for the ride home, geez!\"\n\nMatt ventured a peek behind him and immediately had to do a double take at Tracy's attire. \n\nShe was wearing a light, backless sundress with a skirt so short she had to keep pulling it down to keep from exposing her bare ass and vagina. Yet, every time Tracy tugged the bottom portion of the dress down, the top portion responded in the like, revealing an astounding amount of Tracy's enormous breasts from its ultra loose, low cut front. The thin shoulder straps dipped to depths just as staggering as a roller coaster, constantly sliding over her shoulders, allowing glimpses of sheer acres of breast skin, crowned with peeking rose colored areolas. \n\nMatt quickly turned around to face away. He could already feel his dick flexing against the towel around his waist, secured by a simple tuck. \n\n\"Uhh... we have a problem.\" Linda said, regarding the back seat of her small four door sedan. \"That giant stuffed toy is going to take up an entire seat!\"\n\n\"We can put Sadie in the trunk.\" Tracy suggested. \n\n\"It's full, Sweet Cheeks.\"\n\nA naughty smile crept across Janice's face. \"Why don't I drive us home and you sit on Matty's lap!\"\n\nTracy and Matt looked at each other in their meager state of dress with a sense of anxious trepidation. \n\n\"Why can't I sit an Matthew's lap?!\" cried Linda. \n\nJanice shot her mother a menacing look to urge her silence. \"Because, she weighs less than you!\"\n\n\"Ouch...\" Linda pouted. \"I guess you're right.\"\n\nTracy gulped. \"Uhh, if that's what it'll take to get Sadie home... then, I'll be ok. How about it, Matty Pants? Think you can handle my fat ass sitting on your lap for two hours?\"\n\nMatt giggled nervously. \"I... uh... sure!\" He caught Janice eyeing him with a mischievous smile. \n\nMatt was seated in the back, nestled close beside the giant stuffed unicorn, bare chested in his towel. Despite her best efforts to conceal her nakedness, Tracy's exposed vagina presented itself to Matt's wide eyes by a gust of wind up her small sundress when she lifted her leg to enter the vehicle. \n\n\"Welp... \" Tracy sighed in embarrassment, sitting down, quickly on Matt's lap. \"I guess we're getting to know each other rather quickly.\"\n\nMatt's only idea on how to keep from accidentally impregnating Janice's sister, was to tuck his long dick under his thigh, essentially sitting on it. He didn't count on Tracy's added weight creating an exhilarating pressure on his legs, squeezing his cock out of semi flaccidity and into rock hardness. He gulped, trying not to give away his discomfort. \n\nThe giant stuffed animal's awkward shape crowded Matt and Tracy, blocking them from view of Janice and Linda. The car speakers began playing Linda's Sexy Time Mix CD in blaring volume. Tracy gulped, realizing the intimate privacy she had with Matt, as well as the accumulating moisture of her vagina at the prospect of what dwelt beyond the thin layer of terry cloth beneath her. \n\nJanice pulled the car out of the parking lot and wound it towards the exit. Matt kept his hands to his side with Tracy perched directly on his lap. She ventured to lean back, resting her bare back on Matt's chest. Matt's breath shuddered as his eyes looked down over her shoulder at the view of Tracy's massive, nearly naked breast tops reacting with a jiggle to every pebble the car tires passed over. \n\nWhen Janice turned the corner, Tracy nearly toppled off his lap. Her ass slid off to the side, dragging Matt's towel with it. The tucked knot undid, effortlessly.\n\n\"Ooops. You're gonna have to hold on to me, Matty Pants.\" Tracy said, pulling Matt's arms around her waist. \"Technically, I guess you're just 'Matty' now, huh?\"\n\nMatt's forearms were nestled just underneath Tracy's quaking, massive tits as he held on to her. Every little bump in the road created a sloshing contact of warm, heavy breast against his arms. Their bare, outward flair even bounced against his upper arms at times. \n\n\"There!\" she sighed, contently. \"Not bad! You actually make a pretty comfy seat.\" \n\nJust then, Janice took a speed bump at an accelerated pace, causing a bounding leap. Matt felt her heavy breasts bounce hard and press into his rested hands. The top of her dress couldn't withstand the massive movement and fell away with little resistance. \n\n\"Jesus!\" Tracy shouted to Janice. \"Why don't you take those a little faster next time!\" She casually pulled her tiny dress up over her huge tits. \n\n\"Wha-? You say something?\" Janice shouted back over the loud music. \n\nMatt was secretly biting his lip, casting his eyes to the ceiling in silent, desperate prayer. His cock was throbbing against the back of his thigh, slowly slipping free. \"How am I going to survive two hours of this?\" he nervously pondered. \n\nJanice entered the highway. The smoothness of the roads and the relatively small amount of traffic reassured Matt's mind for the time being. \n\nTracy repositioned her self on Matt's lap. She flung her legs to the side, twisting her ass against Matt's lap. She rested her head against his shoulder, reaching an arm around his back. Matt could feel that towel beneath her had separated and one of his legs was entirely exposed. \n\nSoon, Matt detected a slow, deep breathing rhythm coming from Tracy, indicating the likelihood that she had dozed off to sleep. \n\n\"Phew!\" he said to himself, feeling the blood pressure in his cock beginning to subside. \"Maybe I'll just get some shut eye, myself.\"\n\nResisting the temptation to take a peek at Tracy's current state of dress, Matt closed his eyes and soon found himself lulled into relaxing slumber. \n\nThe passage of time was unknown when Matt slowly emerged from sleep. His eyes focused to the darkness of night outside, watching passing orange road signs announcing road work for the next 35 miles. His senses barely registered the steady bouncing motion of the vehicle. Every twenty yards, a joint in the rough, unfinished expressway passed underneath, causing the car to hop, rhythmically. Matt could feel Tracy's weight bearing into his lap over and over. A similar, soft weight was also pressing against his hands and arms in a steady, surging tempo. Before Matt was aware of himself, he instinctively spread his palm wide and cupped a full, squeezing grasp of supple softness. \n\n\"Mmmm!\" Tracy cooed, softly. \n\nMatt's senses immediately flew into full awareness as he gasped in panic. At the moment he realized his hand was groping Tracy's enormous breast, he immediately released his grip and sat up straight. \n\n\"Why'd you stop?\" Tracy asked, looking back at Matt in the dark of the backseat. \"You were being a great support on this bumpy road.\"\n\n\"I'm sorry. I was asleep! I... I didn't realize what I was doing!\"\n\n\"Matt! Relax!\" Tracy chuckled while she repositioned herself, leaning back, once more, against Matt's chest. \"It's ok! Here... Go ahead. Please! This bumpy road is too bouncy for my girls!\"\n\nTracy took Matt's hands and insisted on mashing them against her huge, soft, wobbling breasts. Matt watched in amazement over her shoulder as she held his hands to her chest. Her enormous tits bloomed outwards from the pressure, punishing her slip of a sundress with expanding softness. Her gorgeous, delectable mammary fat was jiggling in tempo to the bumps on the expressway against his open palms. \n\nMatt's brief reprieve from his erection during his nap was over. His upper lip sweated when he realized not only had his dick slipped free from his thigh prison and was currently expanding towards his knee, but their movement during sleep had also dispatched his towel completely from his lap. Matt could feel against his upper legs that Tracy's tiny skirt was now the only barrier separating their intimate skin from direct contact. \n\nHe watched, breathlessly as Tracy's straps hopped closer to slipping off her shoulders with every rhythmic bump. \n\n\"You must be more into kissing.\" Tracy turned her head to speak softly in Matt's ear. \"You don't seem... 'inspired' like you were earlier today.\" Matt detected a hint of disappointment in her voice. \n\nHe gulped. \"Oh! Uhh-\"\n\n\"Woo!! Hold on! Big bump ahead!!\" Janice shouted out over the music.\n\nThe vehicle bounded over a large hump in the rough road. Tracy and Matt both found themselves weightless and airborne for a brief moment. Matt's erect dick flew free from its constriction and naturally pointed up, before the two riders were slammed back down into their cushioned seats. \n\nMatt only heard Tracy gasp at first before the erotic sensation flooded his awareness. \n\n\"Oh... my fucking...\" Tracy whimpered, feeling a solid veined shaft and a wide, bulbous mushroom topped cock sliding up and down against her bare vagina. The thick, stiff brim of Matt's bell shaped crown was polishing Tracy's throbbing clitoris directly with every bump in the road. \n\n\"Shit!\" Matt hissed. His panicked eyes looked down to see Tracy's dress straps dangling off of her elbows and his hands clutching two palmfuls of her gigantic naked breasts. ",
        "\"Mm! Mm! Matt... you- you're dick it's... OH MY GOD....fuck....\" she squirmed on his lap. \"please... oh, FUCK that feels good!!\" Tracy moaned, sliding herself against Matt's rigid shaft.\n\nHe felt her fingertips softly land on his throbbing cock, lightly examining his length and width with gasping amazement. \n\n\"Jesus Christ!\" Tracy exclaimed. \"There's no fucking way... how the FUCK?!\"\n\nMatt's cock flexed against her clitoris, involuntary, every time she ran her fingers over his sensitive frenulum. She gasped at the stimulation. Her light touches up and down Matt's penis slowly became stroking sweeps of Tracy's entire palm. \n\nMatt's protesting mind became silenced by the simultaneous stroking of Tracy's hand against one side of his solid dick and the rhythmic bounce of the highway against her soaking wet vagina on the other side. \n\nLost in the magnificence of the sensation, Matt ventured a kiss on Tracy's neck as his hands began massaging her breasts, holding them aloft. \n\n\"Oh... Matty... you're making me...\"\n\nMatt felt Tracy's body grow tense. Her intense orgasm slammed into her like a head on truck collision.\n\n\"Oh... oh my god.\" she breathed, urgently. \"OH FUCK!! OHHH MAAATTYY!!!\" Tracy bellowed, drowning out the blaring music.\n\nJust over the din of the car Matt could hear Janice and Linda laughing together in the front seat. \"One point for Team Testicle!\" Janice giggled \n\nTracy writhed on his lap, trying to repress the orgasmic waves, yet refusing to relinquish her hold on his erect cock against her pussy. \n\n\"God damn! Your cock is MASSIVE!\" Tracy said, trying to regain her composure. \n\n\"Thanks.\" Matt breathed through the adrenaline coursing through him. \n\n\"Mmm.... Matty? Uhh...yeah, that thing is NEVER entering my pussy.\" Tracy said, matter of factly. \n\n\"Uh.. ok?\" replied Matt, taken slightly aback. \n\n\"Sorry, but I'm sure that huge thing will destroy my vagina! Tracy sat up, putting a bit of distance between their genitals. \"...and, I'm sorry, but my pussy is just too pretty. You can't see it now, obviously, but... trust me.... I don't know how Janice does it! I can only imagine my coochie would look like an Arby's sandwich afterwards!\"\n\n\"Well... first of all, you're under no obligation to fuck me.\" Matt replied with a chuckle. \"and secondly, just so you know... Janice's pussy is just as beautiful today as it was the first time I saw it. \"\n\n\"Aww! Thank you, baby!\" Janice called out from the front seat. \n\nTracy and Matt's eyes widened to each other, realizing that their activity could be heard. \n\n\"Anyway...\" Tracy continued, a little quieter, closer to Matt's ear. \"Thanks for the great orgasm. Uhh... what now?\"\n\nMatt sighed. \"Well, I guess I should cover myself up again aaaand... I'll... uh... try some of that deep breathing.... yeah.\"\n\nThe vehicle continued to bound over bumps on the ailing expressway. Tracy's titanic tits were hopping past her shoulders from her bouncing perch. Every attempt to back away from Matt's totem pole boner only resulted in her quickly slipping back into place, pressing against her wet pussy. Needless to say, Matt's erection indicated no sign of going away anytime soon. \n\n\"Hmm.\" Tracy smiled. \"You know...\" she leaned her head right to Matt's ear and whispered. \"There are much better ways to get rid of boners!\"\n\nMatt blinked. \"Wha-\"\n\n\"Just relax...\" Tracy smiled as she twisted her body around to face him. Matt found himself being straddled after she switched positions. Her naked thighs bridged over his bobbing erection, which lightly batted itself against Tracy's dripping snatch. \n\n\"I like kissing too!\" Tracy whispered, taking Matt's face in her palms and guiding his lips to hers. \"...and you happen to be a fantastic kisser!\" \n\nA slow, solid mashing of lips and tongues commenced between the two. Matt felt Tracy's hands guiding his to lift her dress over her head. A cautious, wet contact, gliding up and down his shaft was felt as Tracy pressed her labia around Matt's significant girth. \n\n\"Jesus! I feel like I'm mounting you! My god, you are soooo thick!!\"\n\nSoon, Matt felt her raising herself up slightly. Tracy's colossal breasts jiggled as they pressed against his shoulders, neck and chin. \"Can I put these in your face?\" she breathed, raising a single massive breast and feeding her large nipple to Matt's trembling lips. \n\nMatt answered by locking suction around as much of Tracy's areola as he could manage. Her thick nipple went rigid as he wound his tongue around the wide nub. His hands went about the mammoth task of cradling the enormous tit, lifting it further to bury his face into her softness. \n\nBelow, his cock head prodded Tracy's labia and upper thighs. A few times, his bouncing, meandering pole pressed upon it's forbidden prize; the delicate, pink folds of Tracy's pussy. His wide head was denied access by nature, his cock glancing off her small, tight opening. \n\nHer slit teased his throbbing member while he continued to caress Tracy's stupefying breast mass volume with his tongue, lips and fingers. \n\n\"Mmmmph!\" Matt exclaimed with his mouth full. Ropes of warm, white sperm squirted from his cock, bathing their abdomens. \n\n\"Oh my god!! SO much cum!\" Tracy gasped, feeling the warmth dripping down her belly. \n\nMatt took a moment to catch his breath. \"I'll just use the towel to clean up.\"\n\n\"Good call, Matty Splatty Puffy Pants!\" Tracy giggled. \"Uh-oh!! I think I just came up with a new song, Janice!\"\n\n\"Matty-Splatty-Puffy-Pants~\n\nHumpin' sisters, moms and aunts~\n\nHumpity-bumpity- do the Pants Dance, Matty~\n\nOne titty, two titty: pants go splatty~\n\nCome on doooo the Matty-Splatty-Puffy-Pants Daaaaance~\"\n\n \n"
    ],
    "authorname": "Jugg_Head",
    "tags": [
        "huge boobs",
        "big tits",
        "enormous breasts",
        "slow burn"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-year-of-the-cat-ch-21"
}