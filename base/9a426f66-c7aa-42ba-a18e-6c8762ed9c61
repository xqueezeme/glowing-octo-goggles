{
    "title": "Deceptions Ch. 03",
    "pages": [
        "'If she doesn't hurry up and put her fingers inside me, I'm going to scream! What is she waiting for? I know she wants me, so why doesn't she just take me already?'\n\nSo there I was, shouting inside my head. Completely naked, I lay facedown on a queen-sized bed. Katherine and I were alone on stage, and the touch of her teasing fingertips exploring my bare, writhing bottom was driving me insane.\n\nEarlier, after she had sent the rest of the cast and crew home for the evening following our first full rehearsal of the 'fucking' scene, she'd asked Dirk and me to stick around for a few extra minutes, explaining that she wanted to talk to us about something.\n\nI had no problem with that. Despite being naked, I'd just flopped back down onto my stomach atop the rumpled sheets. Dirk, though, clearly seemed a bit embarrassed. With Katherine having taken a seat next to me on the bed, he found himself standing directly in front of us, his big dick bobbing right in our faces.\n\nFunny thing, about Dirk's dick. He had stayed soft pretty much the entire rehearsal. Come to think of it, that was probably the first time I'd ever seen him soft since we'd started this whole sexy game. On every other occasion his cock had always been at least semi-hard, whether it was the 'sixty-nine' scene rehearsals or the nights we'd gotten together at the dorm. Just hearing Katherine describe the hotter scenes was usually enough to make him hard.\n\nI swear, he must have been born with an erection!\n\nThis rehearsal, though...not so much. He was between my legs, and we were supposed to be fucking, so I was fully expecting him to be super hard. I just knew he would be dying to put it inside me once we were 'pretend' fucking.\n\nNope, and I don't blame him, either. There were way too many distractions. Katherine was constantly hovering over us; moving the covers this way, changing the overhead lighting that way, forever repositioning us. It was actually kind of aggravating. Every time he'd roll on top of me to begin the scene she would immediately interrupt us, shouting, \"Cut!\" or \"Wait!\" or \"Hold on, I have an idea!\" Then we'd be swarmed over by her and the stage crew.\n\n\"I hope it won't always be like this,\" Dirk whispered, spooning me beneath the covers between takes.\n\n\"Me too. This isn't half as much as fun as I'd imagined it,\" I added, accentuating my point by smiling over my shoulder while wiggling my bare ass against his soft cock.\n\n\"Sorry. If they would ever just leave us alone, you know I'd\u2014\"\n\n\"There he is!\" I grinned, wiggling against him again as I felt his dick twitch and stiffen. \"Dirk, I'm only teasing. I feel the same way. With so many interruptions, it's difficult even to think straight.\"\n\nFinally, we'd caught a few moments of alone-time. Katherine had decided to call it good for the day, and while everyone was shuffling around gathering their things, Dirk and I were able to touch each other without any instant interruptions.\n\n\"You'd better put something on to cover that crazy thing!\" I said, giggling at the sight of his swaying pole. Naked, we'd climbed out of bed to grab our clothes, and Dirk was almost completely hard.\n\nSo of course Katherine chose that moment to come have her little talk with us.\n\n\"This will only take a second...\" she said to Dirk, who was obviously looking around the stage for his robe. Sighing in resignation, he just stood there, his enormous erection bobbing directly in her face as she sat beside me on the bed.\n\nFeeling playful, I reached out and boinged his cock, bopping the tip with my index finger. It bounced up and down like a sprung jack-in-the-box, and Katherine and I burst out laughing. Dirk laughed too, relaxing despite his predicament.\n\n\"So, what's up?\" I asked, exchanging grins with Katherine.\n\n\"You mean besides this?\" she giggled, grabbing Dirk's huge boner...then she made it boing too! Oh my god, I about died laughing, especially when she put her hand on Dirk's stomach and said, \"It was just staring at me! I had to do something!\"\n\n\"Oh, so you think this is funny, huh?\" he grinned, turning to me. \"You want funny? I'll show you funny!\" He started swinging his dick left and right and round and round, bapping my laughing face with it. Using it like a club, he pummeled my cheeks, nose and eyes before stuffing it into my wide-open mouth. I swear, I was almost delirious with laughter as I halfheartedly attempted to fend off the comical barrage he was administering with his oversized truncheon of a cock.\n\n\"Had enough?\" he crowed, gleefully pounding deep into my throat.\n\nI was laughing so hard that tears were pouring down my cheeks, until finally I pulled back and shouted, \"I surrender! I surrender! Just don't beat me to death with it!\"\n\nSatisfied that he'd demonstrated his mastery, he nonchalantly changed gears. \"So, Katherine, what's up? What do you need to speak to us about?\"\n\nJust like that!\n\nKatherine was still laughing, but she calmed herself down enough to say, \"Guys, I just wanted to talk to you about how things are going so far. I know this has to be a bit of a shock, performing naked on stage and doing simulated sex scenes, and I wanted to tell you that I think you're handling it awesomely. I never would have guessed that you're both only eighteen, or that neither of you had ever done any professional stage work. The way you're breezing right through everything, anyone would think you two are seasoned vets at this stuff.\"\n\n\"We're just doing what you tell us,\" I said, happily hugging my pillow.\n\n\"Yeah, and pretending to have sex with Jen is not exactly the most difficult job in the world,\" added Dirk, with a sly grin.\n\n\"Oh, I'm sure it isn't...\" smiled Katherine, resting her hand on my lower back in a gesture of friendliness. \"That's not it, though. It's the way you two still remember and execute your lines. It's the way you take direction. It's the way you stay in control, even when I know it must be awfully hard.\"\n\nShe made a show of eyeing Dirk's bobbing cock before turning to me with a sexy smile. \"So temptingly hard,\" she added, biting her lip.\n\n\"See you guys tomorrow!\" we heard from offstage. \n\nThe last of the crew were leaving. The three of us were alone on a darkened stage, with a couple of offstage lights plus the one nightstand lamp illuminating the bed. That was the lighting the audience would see. Our 'fucking' scene wasn't going to take place in near-total darkness like the 'sixty-nine' scene.\n\nMeanwhile, Katherine was doing subtle little fingertip circles up and down my spine.\n\nOooh! Tingles!\n\n\"So do you guys have any questions for me about any of this?\" she asked, again eyeing Dirk's throbbing erection.\n\n\"Yeah, I have one...\" said Dirk. He turned to her, bringing his cock nearly to her lips. \"Doing plays like this, I mean with these simulated sex scenes, have you ever had actors actually do it before? You know...not just pretend?\"\n\n\"Do you mean have I ever directed porn?\" she grinned. Leaning forward almost imperceptibly, she let his tip brush against her soft cheek. Slowly turning her head, she trailed her lips along the length of his shaft and over the crown before pulling back with a beguiling smile.\n\n\"No, nothing like that...\" I said, jumping in, totally enthralled by her sexy tease. I flashed her an approving grin, and she coyly bit her lip again as I continued, \"He means have any actors in your plays ever disregarded the fact that they're only supposed to be simulating the sex? Have they ever actually gone ahead and had real sex on stage when they weren't supposed to?\"\n\n\"Is that what you two want to do?\" she smiled, caressing my back.\n\n\"Could we, if we wanted to?\" answered Dirk.\n\n\"Are you asking me would I mind as the director if you fucked my gorgeous little Jennifer right here on stage?\" Katherine responded, grinning evilly. She patted my ass, and I wiggled it for her. I just couldn't help it.\n\nShe laughed, \"See? You always do that!\"\n\nI laughed too. \"It's your fault! You know you've got me constantly thinking about it now. It's like whenever someone looks at or touches my ass, I should do it every time. It's almost becoming automatic!\"\n\nKatherine patted it again, then she even squeezed it, saying, \"Excellent! If I accomplish nothing else in this life, at least with your wiggling ass I'll return to my maker knowing I provided one great service to mankind! You do have the prettiest bottom I've ever seen, Jen. I have to admit I love when you wiggle it, even if it's not for me.\"\n\nI did an exaggerated wiggle for her. \"Like that?\"\n\n\"Damn, girl! That looks absolutely awesome! Maybe too awesome, if you know what I mean....\" Laughing sweetly, she patted my ass again before simply stroking it, which she continued to do during the rest of her talk with us. \"Anyway, getting back to your question, to be honest I don't know whether anybody has ever done that before. I've only directed two other plays with nudity, and only one of them really had any implied sex. The way we set those scenes up, I doubt they did anything for real. Besides, that couple wasn't nearly as beautiful and perpetually horny as you two are. They probably had a much easier time of keeping their hands off each other.\"\n\n\"Could we - could you - get in trouble?\" Dirk asked.\n\n\"Good question. The best answer I can give you is that as far as I know this theater isn't zoned for live sex shows, which is what you're talking about, right? I know we didn't apply for any of that sort of licensing. I also know that the producers and I never even talked about the possibility of the actors doing anything for real. They want a sexy show, not a sex show. I'm pretty sure they don't want explicit sex even if it was legal, which I'm almost positive it isn't in this instance.\"\n\n\"But what about you? Would you get in trouble, and would we?\" I asked.\n\n\"Yes, maybe. Both of us, possibly. All three of us, I mean,\" Katherine answered.\n\n\"Okay, I was just curious. Now, if you don't mind,\" Dirk said, drawing our attention to his flagging cock, \"I'm gonna go get dressed and head on home.\"\n\n\"Okay, see you tomorrow...and you too...\" I smiled, reaching up to give his thick length a couple of playful final strokes.\n\n\"Yep, see you tomorrow, and good job today! Awesome work!\" grinned a thoroughly amused Katherine, calling after him as he went to fetch his robe from the back of the sofa. Slipping it on, he gave us this big shy act. We all laughed, then he blatantly flashed us before heading off to his dressing room.\n\nOnce he was gone, Katherine said, \"Jen, hold on a sec. I'll be right back....\" Hopping up from the bed, she dashed over to the little break room offstage. I heard a faucet running, then she returned with a bottle of water and a washcloth. A few moments later we heard the stage door open and close as Dirk left the building.\n\n\"You look hot,\" she said, handing me the water. The washcloth felt cool but not too cold as she pressed it first to my face then down my back.\n\n\"Temperature-wise, too,\" she smiled. \n\nI grinned happily at the compliment. Lifting my hips a little, I wiggled my ass again for her. \"That feels so good, Katherine. Thank you.\"\n\n\"You're very welcome,\" she said, still smiling while languidly running the washcloth down my legs and over my back, giving me goose bumps all over. \"You're the most gorgeous girl I've ever seen...with the most amazing, beautiful body...\" she continued.\n\n\"Mmmm...you're gorgeous too.\"\n\nI couldn't believe I said that, but it's true. Katherine is achingly beautiful, and I'm developing a serious crush on her. She makes me feel like I have my very own guardian angel, she's so sweet and wonderful to me. Also, she really is genuinely beautiful. Although probably in her mid-thirties, she has a youthful look, and she behaves just like a happy child. She has these huge chocolate eyes and full lips, and I love the way she keeps her long, sexy hair in a French braid draped over one shoulder. She's slim and darkly exotic, with awesome breasts, like an Italian movie star.\n\nShe is totally hot. I had never been with a woman before, not even with my friend Steph, yet I easily pictured myself being with Katherine. The way she was touching me, and especially the way she was looking at me with those amazing eyes, she was making me want her like crazy.\n\n\"Jen, please, let me finish. What I'm trying to say is that because you are so extraordinarily beautiful, we may have some issues with Dirk and the play.\"\n\n\"What do you mean?\" I asked, becoming concerned. 'God, please don't let her have second thoughts now about casting us,' I thought.\n\n\"Jen, let me be straight with you. When we first met, I had my doubts about casting you, simply because of how beautiful you are. You're even more gorgeous than the real Layla, and I was worried that the egghead music critics might rip us for casting such a strikingly beautiful ing\u00e9nue in a real woman's role. I got over it, though, once I saw your auditions. You're great, and you're great with Dirk.\"\n\nHaving discarded the washcloth, Katherine was stroking subtle circles across my back and down my legs. Tracing elegant swirls up my thighs, she paused at my ass. \"Does it bother you, my touching you this way? I'll stop, if you want me to.\"\n\n\"Don't stop. Keep going...\" I whispered, rolling my hips with desire.\n\nRunning her fingertips over my tingling curves, Katherine began caressing my ass. There was no pretense of it merely being a warm gesture of support, like before. No, she was simply helping herself to my bottom.\n\nGod, I loved it. Wiggling my ass again, I bent one leg at the hip to spread myself open for her.\n\n\"So perfect...\" she whispered. Leaning across my thigh, she propped her head up with one hand while continuing to caress my ass with the other. She was looking directly between my legs, and I knew my drenched pussy was flowering open.\n\nI wanted her to see. I wanted her to take me.\n\n\"Jen,\" she finally continued, \"I'm okay now with how beautiful you are. You've proven to be serious about this play. You've also proven to be talented and worthy of the role. Besides, fuck the critics if they say you're too young and beautiful. I think you're absolutely perfect.\"\n\nShe laughed, and so did I. Since I was facing away from her, she was basically talking to my ass! What a strange yet wonderfully erotic feeling it was to have this gorgeous, talented, sexy woman talking so respectfully to me even as she was openly lusting for my pussy. I was so turned on, I was either going to get up on my knees and arch my back or I was just going to roll over and spread my legs for her.\n\nContinuing on, she said, \"You and Dirk are what I'm worried about now. It's obvious that you two really want to have sex...real sex. You do, don't you, Jen?\"\n\n\"Yes,\" I said, moving my hips in small undulations beneath her caressing fingertips. \"Mmmmmm, yes, we want to fuck.\"\n\n\"Have you yet?\" she asked, her breath so warm and sexy on my bare skin. God, she was driving me absolutely insane.\n\n\"Fucked? Each other? No, not yet.\"\n\n\"But you plan to, don't you?\" \n\n\"You know we do, Katherine. He's killing me with that hard cock of his. I'm sure you know what I mean. The way he's always so hard for me, sometimes it's all I can do to keep from jumping him.\"\n\n\"Yes, baby, I know exactly what you mean. He has an amazing cock. I was literally starting to drool there, watching it bob and sway only inches from my lips. I was dying to take him into my mouth, just the way you did. I didn't know about his cock when I cast him for the part, but once I saw it, my god....\"\n\n\"Are you going to fuck him too?\"\n\nKatherine was still helping herself to my ass, and I felt a huge climax building deep inside me.\n\n\"As much as I'd love to, I doubt it,\" she said wistfully, giving each cheek a firm squeeze. \"That probably wouldn't be a good idea. I don't think my boyfriend would be too thrilled with the idea of his woman fucking eighteen-year-old cock, no matter how gorgeous the cock. I don't think my girlfriend would be too thrilled about it either.\"\n\nSilence. As she continued her teasing figure-eights on my bare bottom, she let that one hang there.\n\n\"Your...girlfriend?\" I finally asked, then I gasped. She'd slipped a single painted fingernail into my crack. She brushed ever so gently over my asshole before trailing down to my pussy, which instantly went into wet spasms. This beautiful woman knew exactly how to drive me crazy. As my orgasm was approaching, my hips were bucking, and Katherine just kept softly knocking.\n\n\"Yes...my girlfriend,\" she said, the smile evident in her voice. \"With everything I've told her about you, she's already super jealous. The last thing I need is for her to be worrying about another cock, too. She doesn't mind sharing me with my boyfriend, but I think she might draw the line at a second man.\"\n\n\"What about sharing you with other girls?\" I asked, barely able to get it out.\n\nJesus, she was killing me. When the soft pad of her fingertip touched my wet lips, I just about passed the point of no return. I was about to explode! \"Katherine,\" I panted, \"you're going to make me cum!\"\n\nShe dropped the hammer on me. \"Jen,\" she whispered, slowly sliding her finger inside, \"I know you're about to cum...and to answer your question, my girlfriend doesn't mind sharing me with other girls - with you, baby - as long as she's eventually invited to watch...and join us.\"\n\n\"Oh, Katherine...god!!\"\n\nKatherine let out a squeal of delight when my body convulsed from the crushing orgasm she'd given me. She cupped her hand over my pulsing pussy, just holding it there while I rode out a long, wet cum. \n\nWhen I was finally done, and my breathing was returning to normal, she leaned down to give my naked bottom a sweet kiss. \"Gorgeous girl, you cum just as beautifully as you do everything else,\" she said, gently moving my sweaty hair off my neck before sliding up my body to blow cool air onto my moist skin.\n\n\"That was incredible, Katherine. I've never cum before with a girl,\" I said, smiling over my shoulder. \"Thank you so much. You are just completely awesome.\"\n\n\"No, thank you...\" she whispered, painting my grateful bottom with tender, lingering kisses. \"Baby, that was the most beautiful thing I've ever seen.\"\n\nI grinned softly. \"Katherine, don't look now, but I think I'm falling in love with you.\"\n\n\"Jen, don't you look now either, because the feeling is more than mutual.\" She was still stroking my wet hair as she trailed a series of delicate kisses along my spine. \"Still, what are we going to do about you and Dirk fucking?\"\n\n\"What do you want to do about us fucking?\" I purred, writhing beneath her soft lips.\n\n\"I know you two are going to fuck; that's not the issue. There's no way he can resist you. Christ, I can barely resist you.\"\n\n\"I don't want you to resist me. I want you to take me,\" I moaned.\n\nCaressing my ass, she leaned down to kiss it again, this time adding a few teasing nips. \"God, baby, if you only knew...but let me get back to the subject, okay? Sweetheart, I have no problem with you and Dirk having sex. I just don't know whether any of us can handle you two having full-blown sex as a part of this show. That could be a very bad idea. It might be a very bad thing for your career, and mine too. Jen, please, whatever you do, you have to make sure the crew and the audience think you're only acting. Yes, I want the sex to look real, but we can't show them everything.\"\n\nI thought about that for a moment. Realizing what she'd just said, I pondered whether to say what I was thinking. I decided that since she was being so straightforward and honest with me, she deserved the same respect. I rolled over onto my back so we could see each other and talk face-to-face.\n\nAt first she gasped, then she bit her lip when she took in the sight of my drenched, naked pussy. God, the way she did that, it was so fucking hot!",
        "Reaching up to her, I gave her one of her own coy smiles. \"Katherine, I noticed you didn't say Dirk and I can't have sex on stage. You just said to make sure the crew and the audience think we're only acting.\"\n\nKatherine was simply beaming. She pulled me into her arms for a loving hug, which I eagerly returned. With moist, shining eyes she kissed me gently on the lips before brushing my hair from my face. Smiling with heartbreaking beauty, she sweetly touched the tip of my nose.\n\nIt felt like she was looking right through me when she sighed, \"Please, Jen, just be careful.\"\n\n~ ~ ~\n\n\"You gotta be shittin' me!\"\n\nThat boyfriend o' mine, he sure is an eloquent devil, isn't he?\n\nAnyway, that was his reaction when I called from the theater to give him a juicy little teaser about yesterday's 'sixty-nine' scene rehearsals and tonight's sexy interlude with Katherine.\n\nAn hour later, having barely walked through the door, I wasn't given a chance to say a word before Ray and J.T. attacked, tackling me to the carpet. Working as a team, they immediately started in with their 'horny frat boys' interrogation, which basically consisted of stripping me naked and totally molesting me.\n\nLaughing at their pent-up angst over having to wait for their nightly fix of Jen's Sex News, I promised to tell them everything they wanted to hear if they would just let me up. Grudgingly, they finally dismounted. Scrambling onto their beds, they were like children impatiently awaiting their favorite bedtime story.\n\nIt was really adorable, I have to say.\n\n\"You two will love what happened tonight with Katherine,\" I grinned. \"All guys want their girlfriends to do lesbo stuff, right?\"\n\n\"Hell yeah!\" said Ray, anxiously tapping his foot on the floor. He looked like a trained sea lion flapping a flipper while waiting for a sardine treat.\n\nJ.T. was becoming super impatient. \"Jen, c'mon! You gotta tell me about your first lesbo experience!\"\n\n\"Okay, okay!\" I laughed. \"Are you sure you want to hear about the other stuff, though? The non-lesbo stuff?\"\n\n\"I know I do!\" Ray exclaimed, comically wagging his tongue at me.\n\nJ.T. threw a Nerf football at his head. \"Pipe down over there, you dog! This is my girlfriend we're talking about here!\" Then he turned back to me with a quasi-serious expression. \"Okay, you tell me...do I really wanna hear it? Is it going to drive me insane?\"\n\nI pondered it for a moment, and that's when I realized things had fundamentally changed between us. J.T. really wasn't in the forefront of my thoughts any longer. It made for an oddly ironic situation because had I still felt like I was really 'with' him, I would have also felt compelled to tell him the whole truth and nothing but the truth.\n\nNow? My overriding feeling has become one of wanting to be gentle with him; even to protect him. 'No need to blow him up. Let him enjoy this. Don't make it too painful for him,' I thought.\n\nWith that realization, I went ahead and did it; I made the decision to deceive him.\n\n\"Okay, here's what happened....\" \n\nI proceeded to dive into a slightly sanitized description of what was really going on during rehearsals. I told them about the nudity, but not all of the actual touching. Or the sucking. Or the biting. Or the stroking. Definitely not the cum-swallowing. No mention of offers or promises.\n\nI completely left out the wild episode with Dirk in the rec room.\n\nI did feed whatever part of J.T. it was that got off on hearing about his girlfriend turning on Dirk, the female director, and a theater full of actors and stagehands. It was a delicate balance, giving him enough to stoke his excitement while not giving him so much that he might choke on it.\n\nMainly he got all excited over hearing how Katherine described me and dressed me and positioned me. His raging boner bore testament to the fact that he absolutely loved hearing about Dirk pulling my panties down and lifting my robe to show off my bare ass to the audience.\n\nRay and J.T. both moaned when I demonstrated Katherine's bit about my little ass-wiggle. \n\n\"Let me see you do it in your tiny robe, like you'll do it in the show!\" Ray pleaded.\n\nGiggling over his excitement, I said, \"God, you're such a horndog! Fine, give me a second to clean up.\"\n\nGrabbing my silk kimono, I noted with satisfaction the strong scent of wet pussy emanating from the robe following last night's amazing rendezvous with Dirk. I sauntered off naked to the bathroom and took a quick shower, washing my hair and thoroughly cleaning my ass and pussy.\n\nOkay, I may have spent just a little more time than was absolutely necessary on those parts, sensually touching myself. 'It's Katherine's fault!' I thought, giggling beneath the warm spray.\n\nInstead of bothering to do up my hair I simply towel-dried it, giving it a wet and wild look I knew the guys would love. Slipping on my robe, I only tied it tightly enough to keep it from falling open right away.\n\nFinally poking my head out of the steamy bathroom, I grinned, \"Turn off the TV and all the lights, except the one desk lamp. Oh, and flip on some music.\"\n\nThe guys jumped into action, then they jumped right back onto their beds.\n\nSwear to god, the way those goofballs were so excited about seeing me, I felt like the Crown Princess of Fucktavia! They've both had sex with me, and one of them fucks me almost daily, yet they were acting as if they'd never seen a naked girl before!\n\nWhatever. It gets me off. I've at least learned that much.\n\n\"It looks like this, only with Dirk totally squeezing and fondling my ass,\" I smiled, strutting into the room. I reprised the little ass-dance I did for Dirk in the rec room, when I had my back to him while leaning over the love seat. This time I was leaning forward onto the computer table as I subtly pulled up my robe to expose my bare ass and pussy.\n\nWatching the guys in the wall mirror, I saw that they were staring in awed silence as I wiggled my bottom for them. More than anything, I was just rotating my hips. That's really what the ass-wiggle is all about. It's not like I do those \"ghetto booty\" jello shakes you see in rap videos. No, it's simply a sexy little wriggling of my hips that makes my ass look so playful and inviting.\n\nI was really beginning to see why Katherine and Dirk liked it so much, and I felt myself becoming wet again because of it. Bending at the waist, knowing I had two horny guys ogling my smooth bottom and glistening pussy, it was only exacerbating my excitement.\n\n\"You like?\" I asked, giving them a flirty grin over my shoulder.\n\nJ.T. said, \"It's awesome, but didn't you say you're supposed to be standing straight, then Dirk squeezes and shows off your ass?\"\n\n\"You know, you're right. Ray, c'mere.\"\n\nRay hopped right up, and J.T. couldn't help but laugh over the obvious hard-on his roommate was sporting in his boxers.\n\n\"Sorry,\" Ray said sheepishly to me, after I'd positioned him near the computer table.\n\n\"Don't be. I always want you nice and hard like this. If you're not dying to fuck me every time you see me, I'm definitely doing something wrong. Now get down on your knees, right between my legs. Oh, wait a second....\"\n\nI reached into my overnight bag and pulled out a pair of sheer panties. Doing another slinky hip-wiggle, I slipped them on before facing Ray again. \"Okay, slowly slide your hands up the backs of my legs and over my ass, lifting my robe with your wrists to show my ass to J.T. Take your time in pulling my panties down. When my panties are at my feet, I'll step out of them, then you slide your hands back up my thighs to my ass. Caress and explore my bottom all you want, gently squeezing it while making sure to keep it exposed so J.T. can see it. That's when you start kissing and nuzzling my pussy.\"\n\nRay looked up at me with so much joy, it was like I'd just told him I had the keys to his new Lamborghini inside my pussy.\n\nGod, I totally loved how every little thing was becoming so much fun!\n\nPeeking back over my shoulder, I said to J.T., \"It will look just like this, only it'll be in front of a lot of people, and it'll be Dirk touching me every night.\"\n\nJ.T. had his hand beneath the pillow he was using to cover his lap. He was already jacking off.\n\nWith a sexy smile I silently mouthed, \"You know you love it!\" Then I turned back to Ray. \"Ready when you are.\"\n\nGrinning like an idiot, Ray began to slide his hands up my thighs, and again I said, \"Oh, shit. Wait a second. I forgot, we stand by the couch and make out first before you pull my panties off and nuzzle my pussy. That's when I do my initial little ass-wiggle, while we're hugging and kissing.\"\n\n\"Okay by me!\" Ray said with a laugh, standing to face me. I laughed with him as we put our arms around each other. \n\nTurning us sidelong to J.T., I whispered in Ray's ear, \"Kiss me hard, like you mean it, and push your cock into my pussy as you slide your hands inside my panties to fondle my ass. After you turn us, that's when you go to your knees to peel down my panties. If you really want to drive J.T. crazy, lick my pussy while you show off my ass.\"\n\nSmiling in anticipation, I recited my lines before launching into a passionate kiss with him.\n\nHe was tentative in returning it.\n\nHissing in his ear, I said, \"I told you to kiss me like you mean it! Take me the way you did on your bed, when you fucked my brains out. Show me how badly you want to fuck me again....\"\n\nRay immediately attacked my tongue, startling me just a bit when he grabbed my ass and jammed his cock between my legs. I'd expected him to press it lengthwise up against my pussy, but when it popped through his fly he pushed it straight into the gap at the top of my thighs.\n\nSo there we were, totally making out, his hard cock sawing between my soaking wet pussy lips. He kept trying to put it inside me, and I even tugged my panties aside for him, but the angle was all wrong; he was only able to get the head plus another two or three inches in before it would eventually pop back out. Still, god, it was so hot to be basically fucking Ray right in front of J.T.\n\nWhat a crazy week!\n\nAfter a few minutes of heavy tongue-sucking and awkward sorta-fucking, Ray finally turned us back to the computer table. When he dropped to his knees, I experienced a definite feeling of longing for the hard cock that had suddenly deserted my pussy.\n\n\"You're so fucking sexy, Jen,\" he said, looking up past my camel toe and bare breasts to my smiling face.\n\nAffectionately cupping his chin, I noticed a droplet of pre-cum glistening on the tip of his cock. As it quickly grew, its sheer weight separated it from the pee slit, until it was hanging by a single fine strand. When the strand finally broke, the large droplet landed on my bare right foot.\n\n\"Nice,\" I grinned to a blushing Ray. \"Now take off my panties.\"\n\nHe slid his hands up the backs of my thighs, and again I began wiggling my hips. When his fingertips reached the top of my panties, he pressed his face to my pussy, inhaling my scent. Pulling back, he kissed the heart of my slit, right below my clit.\n\nChills.\n\nHe tugged my panties down; once they were past my pussy, he buried his face between my thighs. Stepping out of my panties, of course I had to spread my legs. Ray seized that opportunity, immediately driving his stiffened tongue into my open, vulnerable sex. As he began eating me out, he made sure to cup and squeeze my bouncing ass. Lewdly rolling my hips, I pulled his face against me. I was absolutely loving it, and was trying to get even more of his tongue inside my eager pussy when he pulled the meanest and most unexpected trick ever. Completely out of nowhere, he stopped licking me and casually rose to his feet. \"You mean like that? Is that how it'll look?\" he asked, giving me a dopey grin.\n\nJ.T. just sat there, totally gobsmacked. His hard cock in hand, he was going at it hot and heavy.\n\n\"Oooh, you really are a bastard,\" I said to Ray.\n\nSmiling triumphantly, he chuckled, \"Yeah, that's what Mom always said. So what are you gonna do about it?\"\n\n\"This...\" I grinned. Dropping to my knees, I quickly took his cock into my mouth, sucking hard all the way down. He yelped when I pulled off to say, \"You won't last thirty seconds, hot shot!\"\n\nI was right. He didn't even make it through my warning sentence. Just as \"...hot shot!\" was issuing from my hungry mouth, he cried out while launching this incredibly humungous load all over my face! At the same time, I also felt a half-dozen ropes of hot cum shooting on my ass!\n\nBurgeoning freak that he is, it seems J.T. had also been unable to hold back! He'd jacked off right onto my ass!\n\nWith cum dripping from my forehead, the bridge of my nose, my upper lip and all down my left cheek, I looked back happily over my shoulder. Grinning sheepishly, J.T. gave me the palms-up shrugging gesture, as if to say, \"Sorry! What else could I do?\"\n\nHe groaned when I swiped his cum off my ass and popped my fingers into my mouth. He groaned even more when I stuck out my tongue to lick Ray's dripping cum from my face. When I was finished gathering up and swallowing all their cum, I offered him a sweet smile. \"Instead of jacking off, you should've just fucked me. I would have taken you both.\"\n\nThe guys looked absolutely poleaxed, frozen in place as I stood and slipped off my robe. Still smiling sweetly, I sat down naked at my computer.\n\n'I wish I had Katherine's e-mail,' I thought. 'God, I want her to fuck me.'\n\nOh well, at least I knew Steph would definitely make herself cum once she read tonight's update.\n\n~ ~ ~\n\nDirk and I were laughing as we hung out together backstage before the next rehearsal.\n\n\"I thought for sure you were going to make Katherine give you a blowjob!\" I giggled, punching him in the side. \"She would've done it, too, right in front of me! You almost had her!\"\n\nHe smiled smugly. \"Nah. Couldn't you see?\"\n\n\"See what? I saw you waving your big cock in her face, totally tempting her to suck it! That's what I saw!\"\n\n\"Jen, Jen, Jen...\" he grinned, shaking his head. \"For such a smart girl, sometimes you're a real dummy.\"\n\n\"What are you talking about?\" I asked, becoming exasperated.\n\n\"Girl, can't you see it? Katherine doesn't want me, she wants you. She has a huge crush on you. Yeah, okay, she wants my dick, but that woman is totally in love with you. All I know is she better not get to fuck you before I do, you little slut!\"\n\nI thrilled to his every word. Each syllable shot straight through me, and he could see it in my eyes. \"Aha! You know I'm right, don't you? So, Little Miss Innocent, exactly what happened last night after I left, hmmm? Did our sexy director treat herself to a bit more of this...\" he grinned, slipping his hand beneath my robe to caress my bare bottom.\n\nFlustered, I asked, \"Do you really think so? No joking around now, do you seriously think she has a crush on me?\" Then I thought, 'God, I hope so, because I sure do have one on her.'\n\nDespite all the other crazy stuff that happened yesterday, it was mainly because of Katherine that I found myself tossing and turning in bed last night, unable to sleep. Thoughts of her being in love with me had managed to supplant thoughts of Dirk fucking me; even Dirk fucking me in the ass.\n\nThen I remembered that soon Dirk would be fucking me, and my thoughts were at least equally split again! I could hardly wait for him to fuck me. I didn't care where. I just knew I wanted that beautiful cock inside me, filling me with cum. \n\n'Maybe Katherine will lick Dirk's cum out of my pussy!' Pausing, I giggled to myself, 'Girl, you are in need of some serious mental help. Get a grip, Jen.'\n\nDirk jumped back in, saying, \"Jen, we've all noticed how Katherine looks at you, how she totally dotes on you, and especially how she talks about you. She gets all starry-eyed anytime someone even mentions your name. If she's not already in love with you, she's well on her way. That woman has got it bad for you.\"\n\n\"You could just as easily be describing yourself there, champ...\" grinned Mike the sound guy, walking by with a shoulder full of cables.\n\nOnce Mike was out of earshot, I snerked while beaming at Dirk, who gave me a warm grin. \"No news there, Jen. You know how I feel about you. Everyone knows.\"\n\n\"Yeah, because you don't exactly hide your feelings very well!\" I laughed, reaching inside his robe to give a tug on his seemingly constant erection. We were just standing there, and his dick was jutting straight out! God, I swear, it was like ten feet long!\n\n\"I'm not exactly trying to hide my feelings,\" he smirked, watching as I stroked him. I'd only meant to give it a single tug, but once I get my hands on that gorgeous dick of his I simply can't stop! He's well aware of it, too. \"Jen, I want you to know how much you turn me on. Besides, it's not like I have a choice anyway. This always just happens. When I'm with you, I can't help it.\"\n\nHe gets so fucking hard...so impossibly long and thick; even if it's only to touch it and play with it, I feel like I'm already addicted to his cock. Smiling, I continued fondling him right out there in the open. \"Speaking of Katherine, yes, she and I did talk last night after you went home. Dirk, she knows we want to fuck. She's worried we're going to be too obvious about it, and everyone will see that we really are having sex on stage.\"\n\n\"What did you tell her?\" \n\n\"I wasn't going to lie, not to Katherine. What would be the point, anyway? She knows how badly we want each other. I admitted to her that yes, we're going to have sex.\"\n\nDirk was stunned. \"You told her we're going to do it for real during the play?\"\n\n\"No, not exactly. See, she basically said that she knows we're not going to be able to resist having sex, but we need to make sure the crew and the audience think we're only acting. I sort of teased her by pointing out that she wasn't actually saying we can't do it.\"\n\n\"So she's okay with it, as long as no one catches on?\"\n\n\"I don't know that she's necessarily okay with it so much as she simply seems resigned to it. She says she can barely resist me, so she knows you won't be able to.\"\n\n\"See? She already told you she wants you! That's awesome! Plus she doesn't mind if we do it!\"\n\n\"Dirk, we need to be careful, okay? She's trusting us not to blow it. Specifically, she's trusting me. I don't want to make her look bad for hiring us. We're only kids; we're nobodies, really, and she took a big chance on us. We can't mess this up for her. Seriously, we need to be professional. I told you, baby, you can fuck me anywhere you want, anytime you want. You know I want you, and all you have to do is take me. Just don't get us in trouble here. Promise?\"\n\n\"Okay, okay,\" he said, chastened by how serious I was about it. \"I'll be good, I promise.\"\n\nRelieved by his response, I giggled, \"I didn't say we couldn't still do it! I'm just telling you, we need to make absolutely sure that we don't get caught. We have to follow every one of our cues, and we can't sound all retarded from trying to do our lines while we're in the middle of fucking. We've got to keep ourselves hidden when we're doing things, and we can't lose our minds and forget where we are, especially once we start cumming. I don't know about you, but I'm likely to lose consciousness the first time you cum inside me. You better not let me freak out, and you really better not let me pass out!\"\n\n\"I'll try to make sure you only cum a little, okay?\" he smiled, giving my hip a good-natured squeeze.\n\n\"Yeah, right!\" I laughed. \"Every night I hear how you make all those girls cum 'only a little,' as they're bashing in our dorm wall and screaming like wild Comanches!\"\n\n\"Are you saying I can't be a gentle, sensitive lover?\" he asked, feigning insult.\n\n\"When you put this inside my ass, you better be gentle...at least the first time,\" I whispered, stroking his cock.",
        "\"I will, I promise,\" he said, becoming serious again. \"I want you to enjoy it.\"\n\n\"If I enjoy it, I'll learn to love it, then I'll want to do it again and again, right?\" \n\n\"Exactly.\"\n\nWondering about that, I had to ask. \"Why my ass so much, instead of my pussy?\" \n\n\"Who said this is an either-or deal? When did I ever say anything about 'instead of'? I want all of you, not just your ass.\"\n\n\"Mmmm...you better...\" I smiled, leaning back to rub my deep split up and down his perfect erection.\n\n\"But I want your ass, too,\" he smirked.\n\n\"I know, and I can't wait for you to have it,\" I said, trying to keep my urgent whispers quiet. \"Since I can barely fit little things in there, I can't even imagine how I'm ever going to take you in my ass, but I'm dying to feel you inside me. God, I wanted so badly for you to fuck me that night at the dorm. I was totally offering myself, and I couldn't believe it when you wouldn't take me.\"\n\n\"You know I wanted to, Jen. It wasn't that I didn't want you. I just think our first time should be truly epic, and I know you'll always remember it if it's on stage, in front of a live audience.\"\n\n\"Dirk, our first show is still weeks away. Seriously, I don't think I can wait that long. If I can't have you in my ass until then, you at least have to let me feel you inside my pussy.\"\n\nHe gave me this totally patronizing smile. After checking to make sure no one was looking, he reached inside my robe to caress my nipple, then he leaned down to kiss my ear. \"Patience, beautiful girl, patience...\" he whispered before heading off to his dressing room.\n\nNow he was just taunting me.\n\n~ ~ ~\n\n\"Guys, I wanna do one more little change to the bedroom scene,\" Katherine said, taking the two of us aside before the next day's rehearsal. \"After talking with Jen the other night, I think there's a better, sexier way.\"\n\nBiting suggestively on her pen, she flashed me a flirty grin.\n\nI didn't quite know what she had in mind, but I sure liked the sound of it!\n\n\"Let's just say Jen inspired me,\" she added coyly, \"and now I want a little more of her in this scene.\"\n\nI laughed, \"Katherine, I'm already going to be naked and having sex, so how much more could I possibly be in it?\"\n\nWith the cutest little giggle she said, \"Touch\u00e9. Anyway, what I want to do is open this scene with you lying facedown on the bed, maybe reading a magazine, or just napping after your awesome sixty-nine. You're still nude, with the bed situated at an angle to the audience. Dirk comes in naked from the bathroom and sits beside you on the bed. He begins to stroke your legs, your back, and your ass. It's a really affectionate, loving moment. It will look so beautiful to the audience, Jen.\"\n\nShe gave me a warm, revealing smile. We both knew she was describing what she had done to me on that same bed, and she'd decided to add it to the play.\n\n\"After a little while, you'll start to respond to his caresses.\" Again she gave me a knowing look, which I returned with a happy smile. \"You'll begin moving on the bed, writhing beneath his hands. Eventually you'll say, 'Look at my goose bumps. You're giving me chills. Let's get under the covers.' Then you'll both hop up and climb into bed.\n\n\"I want the audience to see you, Jen. I want them to see your nude body, all of it, and yours too, Dirk. Seeing you two will blow people away, and we're safe in doing it. I want you to go totally crazy on each other in bed, yet you still have to make absolutely, positively sure to keep the important stuff covered by the sheet.\"\n\nReally wanting to drive home the message, she stared at us one at a time. I silently looked at Dirk, then we both nodded for her, indicating we understood.\n\n\"Just your lower bodies, though,\" she continued. \"Remember, I want the audience to see you both from the waist up. Dirk, when you're on top of her, I want you to lock your arms and hold yourself steady above her. I want the audience to see Jen's breasts shudder with each powerful stroke you feed her.\"\n\n\"God, Katherine, you're killing me here...\" I said, tightly crossing my legs to rub my clit. Listening to her, it took all my willpower not to reach down and stroke my pussy.\n\nShe saw how horny she was making me, which made her grin. \"Good, Jen. That's the whole idea. I want you going out of your mind with lust. Now, Dirk, you really need to remember to keep at least the bottom of her ass covered when she gets on top and rides you. I want the audience to see your hands guiding her hips as you thrust deep inside her, and you can even show her ass grinding on you, but you cannot let that sheet fall completely away.\n\n\"Look, people are used to watching simulated sex. The girl grinds, the guy moans, and all anyone sees is maybe her pussy hair since she never lifts her hips enough to show anything major. That's how these things always go, and everyone's okay with it. With you two, though, I want more. I want Jen to move up and down on your breathtaking cock the way a woman really does when she's on top. I want everyone to see her incredible breasts bouncing on her chest. Dirk, I want it to look like she's really fucking you, but in order to do that you have to keep the important parts covered. You can't forget, and you can't slip up. Don't let us see your erection driving between her spread lips.\n\n\"Jen, when he's on top, I don't mind if the sheet slips down to show his ass pumping into you. That would be perfect, actually. Just don't let it fall so far that we can see between his legs. Don't let us see what his cock is doing to you. I mean definitely show us what his cock is doing to you, but don't literally show it.\n\n\"This is really important, guys, since the lights are going to be on during this one. You won't have the protection of darkness, like you will with the 'sixty-nine' scene. Can you both promise me that you'll make absolutely sure to keep the important stuff covered every single time? I'm talking no slip-ups. None.\"\n\nWhen I nodded in agreement, Katherine took my hand and squeezed it.\n\nDirk also nodded, though he added a question. \"Katherine, umm, what am I supposed to do...you know...I mean, how am I supposed to deal with....\" Glancing down, he gestured to his stiffening cock, every inch of which was clearly evident in his thin cargo pants.\n\nKatherine said, \"Oh, I'm glad you brought that up. This is going to be kind of tricky for you. Dirk, I don't mind if you're as hard as a rock during the sex scenes. Go ahead, let your cock become a foot long for those. My god, you'll have Jen spreading her legs for you, offering you her naked, gorgeous pussy. As beautiful as she is, you wouldn't be human if you didn't have a hard-on then. That's okay, though. She'll cover you with her upper body whenever she's giving you a blowjob, plus the lights will go down. When you're fucking her, the sheets will take care of it. The thing is, we just can't let the audience see you fully hard. That's the whole point. We cannot let them see you with an erection.\"\n\n\"Good luck with that,\" he answered.\n\nKatherine grinned. \"Honey, I wish we could. I really do. We'd sell a lot more tickets if we were allowed to show off your spectacular cock in all its mouthwatering glory.\"\n\n\"I know I'd come,\" I said, smiling sweetly.\n\n\"I'm sure you would, in more ways than one!\" laughed Katherine. \"Here's the tricky part, though. Dirk, when you first walk to the bed to start this scene, and again when you and Jen get up to climb under the covers, you two are going to be totally naked; we're talking full-frontal nudity. I want the audience to see how beautiful you both are. They'll see your cock then, and you can't be erect. Somehow you at least need to keep it soft enough that it's not throbbing hard and jutting out halfway across the stage, like it usually is. I don't mind if it's semi-erect. In fact I'd prefer it that way, because it would look awesome. Totally soft, maybe a little chubby, or hanging thick and partially erect, any of those are fine since they won't get us in trouble. You just cannot have a full-blown erection whenever the audience will be seeing your cock. It's too obvious with you, and we can't have you trying to hide it either. You two are supposed to be completely comfortable together, so you wouldn't try to hide it from her.\"\n\nGiving him a teasing grin, I giggled, \"I guess you better think of baseball, or maybe that hideously fat English teacher we had in high school! Just picture her totally butt-naked!\"\n\n\"Yeah, yeah,\" he said, \"laugh away, little girl. You have that luxury. When you get turned on during these scenes, it's never a problem. Meanwhile, I have to look at you and touch your naked body and somehow not get hard. Laugh all you want, but she's right, this won't be easy.\n\n\"Katherine, seriously, any suggestions? I know you don't care if I get hard when we're covered up, and you're right, I will, but what should I do to avoid getting hard those other times?\"\n\n\"Believe it or not, Jen's right,\" she said. \"Most actors will tell you they just try to think about things that aren't sexy, or they'll focus on their lines. Of course it doesn't always work. Sometimes a guy simply can't help it, and everyone understands that.\n\n\"Honestly, though, this comes up a lot more often in TV and film. Since there are so few plays that involve these types of situations, it usually isn't too much of an issue in live theater. Like I told you guys, this is fairly new ground for me, directing a play with full nudity and serious simulated sex.\"\n\nI said, \"Dirk, don't worry, it's not going to be a problem. The more we keep rehearsing these scenes, the less excited you'll get. Eventually all of this will become no big deal to you. Just watch, pretty soon here you won't even be able to get it up for me!\"\n\n\"That'll never happen,\" he said, smiling confidently.\n\n\"No, I doubt it ever will,\" grinned Katherine. \"Like she said, though, we'll just need to work on it. We still have time before the first live performance. Besides, it's not important that you get hard; it's only important for certain scenes that you don't get hard. If you never become erect, that would be fine.\"\n\n\"No it wouldn't!\" I whined, making a pouty face while playfully slapping her on the shoulder.\n\n\"Sweetie, I don't think you have anything to worry about. Here, watch this....\" She leaned over to Dirk and whispered, \"Do you want to fuck Jen?\"\n\nShe stepped back, and we watched his thick cock rise to full erection in his cargo pants. Flourishing her hands like some hottie hostess on a TV game show, she presented it as if it were a grand prize vacation in Bora Bora. \"See?\" she giggled. \"That's the least of our worries. Jen, his wonderful cock wants you in the worst way, and that's not about to change. Making him hard will never be a problem for you. The main thing is even though I can't have Dirk getting hard-ons at the wrong times, I still need his passion. Seriously, I wish I could show his enormous erections. I want the audience to see his crazy desire for you. The passion you two give me on stage is awesome. I need that, always; every scene, every show.\"\n\n\"Poor Dirk!\" I said teasingly, reaching over to stroke his erection, and a giggling Katherine just shook her head. Her expression changed, though, when a small wet spot began forming over the tip of his pulsing cock. Looking Dirk straight in the eye, I continued stroking him, only much more sexily; as the wet spot grew, I cooed, \"Poor, poor Dirk. Such a huge burden you carry...such a long, thick, delicious burden....\" Kneeling before him, I took firm hold of his shaft and flicked my tongue all around the drooling crown.\n\n'Two can play the taunting game,' I grinned to myself, sucking Dirk's silky pre-cum right through his pants.\n\nSmiling softly, Katherine sighed, \"You guys are killing me.\"\n\n~ ~ ~\n\nOur next rehearsal was an emotional tug-of-war, the two of us doing our best to tease and outright torture each other. During the 'pull down my panties' scene Dirk playfully bit my clit, literally making me jump. Looking up smugly from his knees, he gave me a \"Gotcha!\" smile. I got my revenge, though, during the 'sixty-nine' scene. After he rimmed my asshole and made me cum like crazy, I brought him to the very brink in my mouth. As he moaned for me to finish him, I squeezed the base of his cock really hard, preventing him from cumming. Over and over I walked him right to the very edge, only to leave him hanging every time.\n\n\"What's the matter, honeeey?\" I grinned, sweetly singing it into his mouth after taking off my robe and spinning around to lie on top of him.\n\nWhen we got to the scene on top of the sheets, Dirk couldn't stop himself from becoming totally hard. Looking over my shoulder while pressing my ass against him, I smiled at the sight of his huge erection. \"Sweetie, your big, gorgeous cock is saying he wants to go inside me now. I think you should listen to him.\"\n\nHis dick visibly throbbed. \n\n\"Cut!\" yelled Katherine, and the whole crew busted up when she added, \"Medic! We've got definite wood!\"\n\nA few minutes later, after Dirk had gotten control of himself a bit better, we tried running through that same scene again. This time he went straight for my weak spot, penetrating my asshole with the tips of his ring and middle fingers. Staring between my legs, he teased me into a jumpy little orgasm, making me yelp as I squirted all over his hand.\n\n\"Clean up on aisle five!\" a stagehand shouted.\n\nI was totally mortified, yet I couldn't help but laugh along with everyone else.\n\nEventually we made it through that scene, then we got up to get into bed. Although Dirk's cock was jutting straight out, it was at least somewhat rubbery, so Katherine let us continue. When we climbed under the covers, Dirk leaned down to kiss me, whispering, \"Now you're gonna pay, little girl.\"\n\nHe simply tormented me. That's all anyone could call it. I know Katherine wanted us to go crazy during the sex scenes, but he really was driving me insane with the way he kept dragging his fully erect cock through and over my grasping pussy. He would press the head against my clit, making my whole body spasm; then, while biting my nipples, he'd do these maddening little pokes between my wet lips...in...then out...in a bit further...then right back out.\n\nI finally just grabbed his ass and tried to pull him inside me, crying out, \"Goddammit, fuck me!\"\n\nKatherine was ecstatic! \"Yes! Perfect! Just like that!\" she cheered, clapping and jumping up and down like a proud PTA mom. \n\nOnce we switched places and I was on top, I again got my revenge; that is, if cutting off my nose to spite my face can be considered revenge. Pressing my pussy all along the length of his shaft, I gave him the most blatant stripper-grind in the history of lap dance sluts. As I fully drenched his cock, he squeezed my hips so hard that I was certain it would leave bruises.\n\nHis breathing was becoming ragged when Katherine called out, \"Sheets, guys! I can see pink!\"\n\nAs Dirk quickly pulled the sheets over my ass, I leaned down to kiss him and whisper, \"You're going to cum for me, aren't you, baby? Your cock desperately wants inside my pussy, but he's not allowed in right now. This is what you want to feel though, isn't it?\" Nipping his lower lip, I slid up a bit to grasp his shaft with my ass. I flexed and flexed, continuing to drench him with my molten pussy; finally I could feel it in his cock and see it in his face that he was ready to cum, and I breathed into his mouth, \"Always remember, your cock belongs in my pussy...and my ass.\"\n\nI felt his shaft pulsing between my lips; when his hands clutched my hips in a sudden death-grip, I smiled smugly as he shot gobs and gobs of pearly white cum onto his stomach and chest. Extending a good eight inches, one rope shone conspicuously wet on his neck. I was sorely tempted to lick it all up, but after the way he'd been so cruel to me the entire day I decided to let him deal with it on his own. I was really hoping the whole crew would see it.\n\n\"Excellent!\" Katherine shouted, ending the scene, and I got up to put my robe on. When she came to us and saw Dirk's thick cum glistening all over his body - and none dripping from my pussy - she giggled to me, \"Good girl! That'll teach him!\"\n\nShe went ahead and fetched him a small towel, then we left him there on the bed.\n\n~ ~ ~\n\n\"Where's J.T.?\" I asked Ray, later that night.\n\nSomething was obviously wrong. It was just the two of us sitting on Ray's bed, and he was clearly on edge.\n\n\"Uhhh...he went out,\" was all he would say.\n\nNoticing his level of agitation, I decided not to push it. He quickly jumped into the shower before taking off, leaving me alone in their room.\n\nFine by me. I just wanted to Instant Message with Steph anyway, so that's what we did. E-mailing her is okay, but Instant Messaging is always a lot more fun. Since we live so far away from each other, the main way we communicate is through texting for short messages and the internet for longer things. Phone calls are just too expensive.\n\nWe had a total blast. After I told her all about Katherine, she said that had she known I was such a \"raging dyke\" she would have fucked me a long time ago!\n\n\"Better late than never!\" I responded.\n\n\"Big talk, from 2,000 miles away!\" she wrote back.\n\n\"You'll see! The next time you come home, maybe you and I can do a hot lesbo show for Ray and J.T.!\"\n\n\"Screw that. You can keep J.T. If we're gonna have a threesome, I want it to be with Dirk...or Katherine!\"\n\n\"Mmmm, me too.\"\n\nEventually we had to call it a night, and I went to bed...alone. That's when I discovered why Ray had been acting so squirrelly. Climbing into bed, I pulled back the covers, and there lay a wet, neon pink thong.\n\nIt wasn't mine.\n\n~ ~ ~\n\n\"Jen, are we going to have a problem with J.T. being here? I mean, seriously, is he gonna freak out when he sees you and Dirk together?\"\n\nKatherine and I were speaking alone in my dressing room after J.T. had unexpectedly showed up for tonight's rehearsal. She was genuinely concerned for me, and for Dirk too. I'd already told her about their history, in particular J.T.'s near-obsession with Dirk, so she was a little worried.\n\nWhen I asked J.T. what he was doing there, he said he wanted to watch one of my \"crazy sex shows\" in person, and I believed him. He wasn't looking to cause any trouble. If anything, he was just horny. He didn't want to have to wait for me to come by the dorm later before he could get his nightly fix of Jen's Sex News. For once he wanted to witness it firsthand, that's all, and that's what I told Katherine. \n\n\"You don't need to worry about him. He's fine. He just wants to check it out. I told you, he likes to watch me be sexy, so this will get him all excited. I didn't even know he was coming tonight, but now that he's here, hey, whatever. After that crap he pulled on me with Miss Pink Thong, I'm really looking forward to this.\"\n\n\"Okaaaay...\" she said, sounding more than a little dubious. \"Anyway, you're sure those panties weren't yours? There's absolutely no chance you left them in his bed?\"\n\nI just smirked. \n\n\"Okay, so it was a stupid question,\" she grinned, then she gave me a warm hug. Brushing my hair away, she kissed my ear and whispered, \"He must be the biggest idiot in the world.\"\n\nAll throughout the rehearsal Dirk never mentioned a word about J.T. being there. Rather than say anything, he just laid it on extra thick during the make-out scenes, shooting me these fiery looks that sent awesome chills down my spine. He was fully hard the entire time, and Katherine totally let it slide.\n\nGod, it turned me on to see him being so competitive and...possessive?\n\nThat thought absolutely made me wet.\n\nWhen we arrived at the scene where he was supposed to expose my ass and nuzzle my pussy, he bypassed my pussy lips and any real nuzzling. Instead he went straight for my cunt, spreading me open and jamming his tongue deep inside. There I was, standing with my bare ass facing the audience, and Dirk was fully eating me out. Since the first few rows of seats are beneath the stage, I'm sure everyone had to be able to see my pussy, so they also had to be able to see Dirk's tongue plunging into my pink depths.",
        "Nobody said a word; except for the wet sounds of my pussy being licked and sucked, the auditorium was utterly silent. Katherine was letting him devour me, so I just went with it; draping my thigh over his shoulder, I spread myself open while wiggling my ass as sexily as possible. It wasn't like I had to fake it, either. My hips were going crazy from Dirk eating my pussy with all of them watching.\n\nWhen we got to the 'sixty-nine' scene Dirk went straight for my ass, spreading my cheeks and tongue-fucking my tight little star. Moaning long and hard, I came almost instantly, and I couldn't believe he didn't empty his heavy balls right down my throat. He was just brutally fucking my face, driving his cock past my lips as I noisily sucked and slurped in a vain effort to keep up with his relentless pounding. I finally began begging out loud for his cum, but he wouldn't give it to me. He was being a real brat.\n\nOnce I'd spun back around to conclude the scene, I stayed right where I was, face to face on top of him. I was giving him time for his cock to go soft; at least that's what I was supposed to be doing. As the curtain descended, we lay grinning in each other's arms, and he followed Katherine's instructions to a tee by gently caressing my ass. I didn't quite play my part, though, choosing instead to drive him insane by clenching my wet pussy all over his pulsing cockhead.\n\n\"Ooooh, fuck, Jen! What are you doing?\" he grimaced.\n\nGiggling, I got up to grab my robe. Carrying it instead of putting it on, I headed naked to my dressing room. A few moments later there was a knock on my door, then J.T. came in.\n\n\"So, what did you think?\" I asked, grinning in my vanity mirror.\n\n\"I...umm...you're a great actress, Jen. You were just awesome. Damn, it looked so real!\" was all he managed to splutter out.\n\n\"Did it? Did you enjoy seeing me do those things...with Dirk?\" Still grinning, I turned to him. \"C'mere.\"\n\nHis hard-on was obvious, and I stroked him through his pants. \"I guess you did...\" I purred. \"Mmmm, you're really going to like this next scene. You'll get to watch Dirk fuck me. Will that turn you on even more, baby? Are you looking forward to seeing me naked with him, my legs spread, my dripping wet pussy being pounded by his huge cock? Do you think you'll cum from watching me, the way you do when I suck Ray's dick?\"\n\nI was really laying it on thick. I was enjoying it, and he deserved every bit of it. \n\nBefore the next scene was about to begin, I positioned myself diagonally on the bed, making sure to point my ass directly towards the audience. Again Dirk came out with an enormous erection; again Katherine let it slide. Undulating my hips in rhythm with Dirk's exploring hands, I did my slutty best to expose my wet pussy to J.T. I was praying Dirk would finger-fuck me, and not just my pussy. I wanted him to jam his fingers deep in my ass. Instead he just kept spreading me, opening me wide with outward caressing motions.\n\n\"You have such a gorgeous pussy,\" he whispered.\n\n\"Mmmmmm...touch it,\" I whispered back.\n\nTeasing me instead of touching me, he again pulled my ass open. \"You have the cutest little asshole.\"\n\n\"It's yours, but you better take it soon, before I get tired of waiting and give it to someone else,\" I smiled, turning my head to look at him.\n\n\"Someone else like J.T., or someone else like Katherine?\" he grinned.\n\nI just wiggled my bottom again. \"Mmmm-hmmm! I bet she would know exactly what to do with my ass....\"\n\nIt's a good thing we weren't mic'd! We were whispering to each other, and Katherine always loves when we do that. She thinks it adds to the realism of the scene, so she never stops us. She just lets us roll in and out of the script.\n\n\"Awesome, Dirk!\" she called out. \"That's an amazing shot of her! Jen, you can't imagine how gorgeous you look!\"\n\nSince Katherine seemed to be letting everything go, Dirk went ahead and slid two fingers inside my pussy, deeply fucking me. Moaning, I tilted my hips and spread my legs, totally showing myself to the audience.\n\n\"Okay, I think you guys are more than ready to move on to the next scene!\" laughed Katherine, but only after she'd let him openly fuck me for a good thirty seconds! Dirk was still completely hard when we hopped up, and all she did was laugh again. \"Jesus, Dirk, is that a cock, or a flagpole at the United Nations? Would you get that thing beneath the covers already, you big show-off!\"\n\nOnce we'd climbed into bed, Dirk finally broached the subject of J.T. being at the rehearsal.\n\n\"Why did you bring him here?\" he whispered.\n\nI jumped when he slapped his cockhead against my clit. \"I didn't,\" I said, my breathing becoming ragged. \"I had no idea he would be here tonight. He just decided to show up on his own.\"\n\nDirk leered evilly. \"Jen, take it in your hand. You know what to do.\"\n\n\"Oh, you really are cruel,\" I grinned, reaching down to grasp his steely length. With my other hand I spread my lips while guiding his large flared crown inside the drenched mouth of my pussy. \"Maybe with him here you'll finally do more than just tease me....\" Smiling sexily, I slid my hips forward, taking a good three inches of cock-perfection into my warm, wet embrace...then I suddenly gasped.\n\nHe'd dropped his hips, sinking his thick slab all the way inside me.\n\n\"Ohhh god!\" I moaned, wrapping my arms and legs around him. He leaned down to kiss me, then it was just wild tongue-wrestling for a solid couple of minutes as his ravenous cock pounded my pussy. Pulling the sheet down, I grabbed his bare ass and drove him into me hard and fast. He was going so deep that it felt like he was bombing my throat, and still I wanted more. Our bodies were loudly smacking together, his huge balls slapping against my ass. I raised my legs higher, draping them on his shoulders; I could hear our wet sluicing sounds, which drove me even crazier. His cock completely filled me, and it was...perfect. It was fucking perfect. I only wished I also had it in my mouth at the same time it was gloriously ransacking my cunt.\n\nFinally I screamed, \"Yes! Yes! Fuck me, Dirk! Fuck me!\" \n\n\"It's 'Eric,' you nitwit!\" came a stagehand's voice. \"What are you, blonde? You're being fucked by Eric Clapton, not Dirk, remember?\"\n\nI laughed, Dirk laughed, and suddenly the whole theater was busting up! Looking past Dirk's arm, I saw Katherine laughing so hard that tears were streaming down her face, and even J.T. was laughing into his cell phone.\n\n\"FINE!\" I shouted, still laughing along with everyone else. \"Fuck me, ERIC! Oh god, ERIC! Keep fucking me with your huge ERIC cock! Fill my wet pussy with your ERIC cum!\"\n\nHow awesome! How totally, amazingly awesome! Dirk was finally fucking me, the whole crew plus my boyfriend were watching, and we were all having the best laugh ever!\n\n\"I mean it,\" I said, whispering to Dirk. \"Fill me with cum. I've waited so long to feel your cock inside me, and all I want now is to feel it explode. Fill my pussy with your biggest load ever....\"\n\nChanging things up, he started fucking me slowly and deeply. I was finally getting to experience the feeling of his massive cock taking my pussy, and it was everything I had ever imagined. It was so big that it literally stretched me open; I felt totally stuffed with warm, hard cock. On every upstroke I jumped at the electric sensation of his silky shaft dragging deliciously along my clit...on every downstroke I moaned when his cockhead kissed my cervix. Each time he hit bottom, his balls slapping against my wet ass cheeks, I cried out with joy.\n\n\"God, it's splitting me open...so deep inside my pussy...mmmm, baby...I love your cock...your huge, pounding cock...ooh, yes, fuck my pussy!\" I moaned, loudly enough for the janitor to hear me!\n\nThat's when Dirk rolled me up on top of him. It was just awesome, too, the way he stayed buried inside me the whole time!\n\n\"Sheets! Sheets!\" shouted Katherine.\n\n\"Sorry!\" Dirk shouted back. \"Won't happen again! Promise!\"\n\n\"Better not!\" she laughed. \"I saw more than just pink that time, you mule!\"\n\nThe crew loved that one, and I loved watching Dirk's face as I sat up and reached back between my legs to stroke his cock. I loved it even more when I slowly slid down, fully impaling myself on his long, thick shaft.\n\n\"Keep my pussy covered, but make sure to let my ass show. I want you to squeeze it like crazy while we fuck our brains out. I'm not going to stop fucking you until we both cum,\" I whispered.\n\n\"You know J.T. is watching. Do you think he realizes?\" \n\n\"Probably...you let the sheet drop...dunno...don't care...do you?\" I grinned, panting each set of words in short bursts as I rode up and down his thrill-ride cock.\n\n\"Not really,\" he said, pulling me down for a hot kiss.\n\n\"Good, then fuck me better than you've ever fucked anyone. Let J.T. watch as you take me from him,\" I moaned, cumming on his cock just from saying it.\n\nArching my back, I reached up to cup my breasts and pinch my nipples. Dirk began a ferocious slamming deep inside my pussy, making me cry out in sheer delirium. I was sure everyone could hear our bodies smacking together, but I guess that's what Katherine wanted because she shouted, \"Perfect! This is the perfect fuck!\"\n\n\"Jen, where do you want it? I'm getting close!\" hissed Dirk, and I had to reach back to hold the sheet when he let go of it to mash my breasts with both hands. I knew my ass was showing, so I started squeezing it myself while bouncing up and down on his magical dick.\n\n\"Awesome move, Jen! Love the ass squeezing!\" cheered Katherine.\n\nLeaning down, I whispered to Dirk, \"Definitely in my pussy. I want all of it, as much as you can give me.\" Then I gave his lip a little bite. \"Now get your hands back on my ass, and remember the sheet!\"\n\nHe returned his frantic paws to my ass, but I think he was past the point of paying much attention to the sheet. It sure felt like it had slipped below his hands, which were spreading my cheeks wide open as he mauled them, just squeezing and smacking them in a glorious frenzy. All he wanted was to cum. He was in a wild sprint to the finish line, and nothing else mattered except his majestic cock pounding into my ecstatic pussy at a redline-crashing pace.\n\nWhen he finally exploded inside me, I screamed, \"YESSSS! FUUUUUCK MEEEE!\" I think I shocked Dirk with how loud I was, and I know I startled Katherine because she literally shrieked! God, I came hard. There was so much cum dripping from both of us, we couldn't risk getting up from the bed.\n\nApplauding with even more crazy enthusiasm than usual, Katherine exclaimed, \"Now THAT is how I want you two to fuck for me, every time!\" When I just dropped in a heap onto Dirk's chest, Katherine dashed backstage to grab us a couple of towels. \"I'm guessing you guys will need these...\" she whispered, grinning brightly as she tossed them on the bed. \"Just stay here and catch your breath. I'll cover for you.\"\n\nFrom then on, Katherine always made sure there was a big towel hidden beneath the sheets for us.\n\nKnowing I had about an hour before my next scene, I went back to my dressing room. After checking my messages, I turned the lights off and curled up on my little couch to take a quick catnap.\n\nA few minutes later there was a knock at my door. \"Jen, it's me. Can I come in?\" asked J.T.\n\nI was only wearing a short robe, and my pussy was still leaking cum. I knew I had to reek of sex.\n\n'So? I just did a sex scene! Of course I'm all sweaty, and why wouldn't my pussy be wet?' I thought, trying to rationalize it.\n\n\"Come on in,\" I said, leaning over to adjust the dimmer switch. I was about to ask him what he thought of the scene when he just launched himself on top of me! Before I even knew what was happening, he was thrusting his erection inside my cum-filled pussy!\n\n\"Oh, fuck, Jen! That was the most awesome thing I have ever seen! You made it look so real!\" Railing me like a madman, he laughed, \"Jesus, your pussy is totally drenched! I've never felt it this wet before! God, you are so fucking hot!\"\n\nGrasping his hips to pull him into me, I urged him on. \"Hurry, baby,\" I whispered. \"We don't have much time, so cum for me.\"\n\nI wanted him to add his cum to Dirk's, just to make sure.\n\nAs J.T. was pouring his load inside me, I heard another knock on my door. Before I could say anything, Katherine popped into the room.\n\n\"Oh! Sorry!\" she said, quickly ducking back out.\n\n\"You gotta get out of here!\" I giggled to J.T., pushing him off of me and out the door.\n\nA few moments later I was lying back on my little sofa, laughing to myself over how crazy things had gotten lately. The knock on the door came again, and this time Katherine asked, \"Jen? May I come in?\"\n\n\"Come on in. Everyone else does!\" I laughed.\n\nShe came in and sat down beside me on the sofa. \"Sorry about that. I didn't know you had company,\" she smiled, caressing my face. \"Sweetie, you should probably lock the door when you're entertaining guests.\"\n\n\"I'm sorry about that, too. I swear I didn't know he was going to come to my dressing room, then he just went crazy. God, I've never seen him so horny. He was inside me before I even had a chance to say anything. The next thing I knew, there you were, watching him fuck me like a maniac....\"\n\n\"Can't exactly say I blame him,\" she grinned. Taking my hand, she laughed, \"For as long as he lives, I bet the image of you fucking Dirk like that will forever be burned into his brain!\"\n\nI squeezed her hand and held it to my chest. My robe was open, I was lying on my back with two full loads of cum inside my pussy, and my favorite person in the whole world was smiling at me. I didn't know what to say, so I just kissed her hand before bringing it back to my chest.\n\n\"Are you okay?\" she asked.\n\nI'd already gotten over J.T.'s clumsy horndog attack. Honestly, it barely even registered with me. I was still replaying in my mind the epic fucking Dirk had given me, and I was also enjoying lurid visions starring my sexy Katherine.\n\n\"Oh, believe me, I'm just fine,\" I said, smiling softly. \"And thank you...thank you soooo much.\" I kissed her hand again before laying it on my bare stomach.\n\n\"What are you thanking me for?\" she asked, returning my smile while gently rubbing my warm tummy.\n\n\"I'm thanking you for everything you've done for me, and for the way you always make me feel so beautiful. Katherine, it's everything you do, and every word you say. I love every moment I'm with you. I swear, I love every single thing about you.\"\n\nKatherine started crying! Oh god! I sat up and hugged her, frantically kissing her beautiful, glimmering eyes. Then I started crying too!\n\n\"Jen...god...you amazing, wonderful girl...you have no idea what you're doing to me,\" she said, brushing away our tears.\n\nAs she touched my face, I basked in the warmth of her radiant smile. \"Katherine, all I know is that for the first time in my life I'm feeling what other people feel. I've never felt any truly intense emotions before, and now you're making me feel them every day. Because of you, I'm becoming a real woman. This time you've given me - this time with you, and with Dirk - it's like a godsend.\"\n\n\"What about J.T.?\" she asked, seductively running her fingertips through my soft little landing strip of pubic hair.\n\n\"Mmmm, you have the best touch in the whole world, you know that?\"\n\n\"If that's true, it's only because I'm touching the most beautiful girl in the whole world,\" she said, smiling sweetly. \"So, what about J.T.?\"\n\n\"This will sound cruel, but I think I'm pretty much done with him. He cheats way too much, plus he's just not...you know....\"\n\n\"He's just not what, baby?\" she asked, caressing my wet pussy lips.\n\n\"He's just not...you. He doesn't make me feel the way you do. No one ever has. Katherine, I've never been in love before, not until I fell in love with you.\"\n\nHer bottom lip trembling, she tried to respond, but her voice caught in her throat. I spread my legs for her, and she let out a sexy gasp.\n\n\"Are you going to make me cum again?\" I asked, reaching out to touch her shimmering tears.\n\n\"Yes, I will...if you want me to,\" she whispered, her steady gaze fixed on my delicate pink petals.\n\n\"You know I do.\"\n\nSmiling happily, she spread my lips with her fingertips, and a new thought instantly overwhelmed me.\n\n\"Katherine, will you let me make you cum too? Please?\"\n\nHopping up to lock my door, she purred, \"Mmmm, I've got news for you, baby....\" Returning to my side, she reached beneath her skirt to slip off her panties. \"You already have...many, many times.\"\n\nWhen she leaned down to kiss me, I knew my wildest dreams were coming true. She pressed her tongue between my lips, making me moan her name. Grasping my breast, she pinched the nipple before lightly nipping at it with her teeth, and I nearly passed out.\n\n\"Then let me do it again. God, I want to see you cum,\" I managed to whisper between ragged breaths, as I began turning her hips.\n\n\"Oh, Jen...\" she moaned.\n\nI felt warm breath on my tender labia, then a soft, feminine kiss. 'Oh my god,' I thought, realizing she was going to eat my pussy full of cum; clutching her beautiful bottom, I shuddered through a sudden, delicious orgasm.\n\n\"Oh god...oh fuck!\" she yelped when I pressed my mouth to her silky slit. As I slithered my tongue inside, I felt her pussy spasm. It was just amazing, the way her entire body quivered.\n\nDamn, I wanted her more than anything. Burying my face in her gorgeous sex, I spread her open and attacked her shining wet flower with a hunger I'd never known. When she cried my name, moaning it deep inside my pussy, I came and came and came....\n\n~ ~ ~\n\n\"Jen...Dirk...this is Jeff, my dashing boyfriend, while this stunningly sexy creature is Carrie, my dearest friend in the whole wide world.\"\n\nKatherine shared a secret smile with me as she introduced us to Carrie, her girlfriend. \"Nobody here but you knows about us. Everyone else thinks she's just my friend,\" Katherine whispered to me, giggling as we all exchanged hugs.\n\n\"Your secret is safe with me!\" I whispered back, grinning while playfully biting her ear.\n\nAfter shaking Dirk's hand, Jeff was pretty obvious in the way he looked me over.\n\nCarrie, though, wooo, she looked at me like, well, I'm not quite sure. Was her look that of the protective mother antelope who spies a hungry hyena trailing after her foal, or was it more the look of the hungry hyena? I couldn't read her, but she was definitely giving me an intense stare.\n\n\"So you're the gorgeous thing Katie keeps going on and on about,\" she finally said, her eyes conspicuously traveling up and down my body. \"It's Jennifer, correct?\"\n\nI still couldn't tell. Was I the threat or the prey? \n\n\"Yes, it's Jennifer. Everyone just calls me Jen,\" I smiled.\n\n'Madison Avenue blonde,' I thought, quickly pigeonholing her.\n\nCarrie looked very high-dollar; slick and refined...unattainable. She seemed nine feet tall, all of it slim legs and golden blonde hair. She had small breasts and a tight, beautiful ass, with not an ounce of fat anywhere on her elegant body. Adding everything up, including her long, slender neck, she looked positively regal.\n\nShe also looked positively feral. I decided I'd need to watch myself around her, at least until I could read her intentions more clearly.\n\n\"I hear you and Dirk will be putting on quite a show for us tonight,\" she said, inscrutable as ever.\n\nGoing out of my way to look her over just as blatantly as she was appraising me, I gave her a coy smile. \"It's mostly Dirk's show. He sings, he plays guitar, he makes love and war and chases after fire trucks. He carries everything. The show is named after my character, but I'm really more of a prop than anything.\"\n\n\"Hmmm...now why do I have this feeling that you're being just a skosh overly modest?\" Grinning mischievously, she took my hand and held it over my head, inviting me to spin for her.",
        "'You really want to check me out? Fine, I'll show you all I have...' I decided, spinning for her as sexily as I could, provocatively thrusting my tits and ass out at the appropriate moments.\n\n\"Oh my! Katie certainly wasn't exaggerating,\" said Carrie, flashing an approving smile. \"Darling, truly you're being entirely too modest. You are absolutely stunning, and our dear, sweet Katie doll has doubtless concocted a deliciously wicked scheme that will display each of your uniquely pleasing talents to the utmost effect.\"\n\nKatherine and Carrie exchanged amused grins before Katherine laughed, \"Jen, don't mind her. Believe it or not, she always talks that way. She's quite the flatterer.\"\n\nAfter giving Jeff and Carrie each a warm kiss on the cheek, she led Dirk and me away, explaining, \"I really need to get these two backstage now. It's time to start getting ready for the show!\"\n\nCarrie never took her eyes off me.\n\n~ ~ ~\n\nOpening Night was finally upon us. After what seemed like only the blink of an eye, all the long weeks of rehearsals were over. It was time to do this thing in front of a live audience.\n\nJudging by the way Katherine came blustering excitedly into my dressing room to tell me the place was sold out, I guess the advance buzz must have been pretty good. The biggest thing to her was the fact that at least two major papers had sent reviewers to catch our show.\n\n\"I know you're gonna knock 'em dead, Jen,\" she enthused. \"It's just Dirk's overly eager cock we've gotta worry about. Seriously, we should hire him a fluffer. Instead of having the girl blow him to keep him hard before his nude scenes, we'll have her blow him to make him cum. Maybe that way he won't have such a huge boner every second he's in front of the audience!\"\n\n\"No!! Don't ruin my toy!\" I whined, adding a dramatic pout. Laughing together, we hugged, and just as quickly as she'd blown into my room she was gone again.\n\nDeciding I was as ready as I was ever going to be, I went to Dirk's dressing room to wish him good luck.\n\n\"So, are you all set for the night of your life?\" he smiled, greeting me with a warm, friendly hug. The amazing thing about his hug was that it was probably the first completely innocent body-contact we'd ever shared.\n\n\"Yep! I'm like totally spazzing!\" I exclaimed, squeezing him tight. \"I can't believe it's finally here, our first professional Opening Night! What about you? Aren't you excited too?\"\n\n\"Jen, I need to tell you something...\" he said, pulling me by my hand to his sofa.\n\n\"What is it?\" I asked, wondering why he'd suddenly become so serious.\n\n\"Okay, here's the deal. You know I took this thing on as kind of a joke, right? The only reason I signed up to do this was to be with you...well, okay, and also to piss off J.T.\"\n\nI was about to respond when he cut me short.\n\n\"Just let me get this out before you say anything,\" he said, squeezing my hand.\n\nNodding, I let him go on.\n\n\"I moved in next door at the dorm to be close to you, and I auditioned for this play to be with you. You already know that. The thing is, I never seriously thought I'd get the part. I mean, c'mon, I'm not even an actor. I figured nobody in their right mind would ever hire me to play the lead role in a professional play, much less the lead role as Eric fucking Clapton! That's insane!\"\n\n\"But you're great, Dirk. You really are. Everyone says so,\" I said, squeezing his hand right back.\n\n\"Jen, I haven't even been trying! I've just been fucking around while enjoying my time with you. That's all it was ever about to me. I never cared about this play!\"\n\n\"Dirk, okay, so your plan worked. You got me, didn't you? You should be happy now. Everything went exactly the way you wanted; the moving in next door, this play...all of it. What's the problem?\"\n\n\"Jen, what I'm trying to tell you is that I'm scared shitless, okay?\"\n\n\"Scared? About what? You know I'll do anything you want.\"\n\n\"That's not what I'm talking about. See, it suddenly dawned on me during my ride home after our first time, you know, when we finally did it on stage. I thought to myself, 'Holy fuck, dude, your whole life could change because of this play. More importantly, so could Jen's, and you better not screw it up for her. This could be the beginning of everything she ever dreamed about. It could put her on the road to stardom...and you too, you idiot! Did you even consider that?'\n\n\"Jen, now that this thing is really here, it's hitting me like a ton of bricks. I realize what's at stake, and I'm afraid I'll blow it. I'm afraid I'll blow it for you.\"\n\nKissing his hand, I said, \"Dirk, you'll be great. You're always great. Just do what you do. You know the songs, you have a killer voice, and you could do your lines in your sleep. When we're together on stage, just look at me; remember who I am to you, and who you've become to me. I promise, everything will be fine.\n\n\"Besides, believe me, I'm nervous too! It's okay to be nervous. Nervous is good; that's what everyone always says.\"\n\nGiving him a sexy look, I slid his hand up the back of my thigh and under my robe. \"Baby, remember what you promised me. Tonight's the night, and J.T. will be in the audience. Focus on that. As long as you keep thinking about what you're going to do to me out there, you'll breeze right through this thing, just like you always do.\"\n\n\"I did promise you tonight would be the night, didn't I?\" he grinned, cupping my bare ass.\n\nI pressed myself hard against him, whispering in his ear, \"Yes, you did, baby. Tonight I give my ass to you. For the first time ever a cock - your cock - will fuck me in my forbidden place. You will take my ass tonight, Dirk. I've saved it just for you, and I want you to keep thinking about how amazing it's going to feel when you slide your huge dick up my tiny, virgin hole. Before you know it, you'll have taken my final cherry, and we'll be cumming together...with J.T., Ray, Katherine, my parents, and all of New York City watching. We'll even get to read about it in the papers!\"\n\nReaching down to squeeze his growing cock, I grinned, \"You're gonna be awesome tonight. You are absolutely going to own.\"\n\n\"You're starting to sound like Katherine,\" he said, hugging me close. \"And I mean that in the very best of ways. Thank you, Jen. I knew I needed to talk to you.\"\n\n\"Are we still good for tonight then?\" I asked, trying to chirp as cheerfully as Katherine would. Glancing down, I saw that he had another enormous erection. \"God, baby, look at you...\" I said, going to my knees. Quickly undoing his pants, I pulled out his throbbing cock and brought it to my mouth. Moaning hungrily, I gave it a couple of long, delicious slurps and teasing nips before using two hands to feed it all the way into my throat. Savoring the intense pleasure, I hummed happily around his thick shaft, then I simply began bobbing my head, eagerly sucking every glorious inch. I didn't want him cumming just yet, though, so after giving his pee slit a final little lick I came to my feet again. Never releasing his insatiable hard-on, I returned to his warm embrace. \"Mmmm...your dick is definitely ready for tonight,\" I purred, playfully biting his lip.\n\nDamn, my heart was racing. My life was zooming, and I was loving every second of the ride.\n\n\"You just wait, little girl. You won't even be able to walk tomorrow,\" he breathed hotly, slipping a thick finger up my ass as his tongue slithered into my mouth.\n\n\"Promises, promises,\" I whispered, dancing my bottom while melting into his kiss.\n\n~ ~ ~\n\nThe play was going along great, but then I had it easy since the early scenes were mostly all music pieces with Clapton and Harrison. My first appearance wasn't until a good twenty minutes in, so I was able to sit off to the side of the stage and watch Dirk belt out his songs.\n\nLooking out at the audience, I noticed J.T., Ray, and Katherine's people were all in the second row. When Carrie spotted me, she blew me a kiss! Giggling, I blew one right back. Beaming brightly, she pretended to catch it before dropping it down the front of her dress! I laughed so hard that I had to cover my mouth, which made her laugh too.\n\nSuddenly I was no longer nervous; I was just eager and excited. I wanted...everything. I wanted love and laughter and adulation. I wanted sex. I wanted hands and mouths, pussies and cocks. I wanted to cum for the world, and I wanted Dirk, Katherine and Carrie to cover me in kisses.\n\nI laughed to myself when I realized I also wanted to make that sweet knucklehead Ray cum in his pants.\n\nFinally my part came up, and I honestly don't even remember reciting my lines. I can't recall anything I did, at least not until our first make-out scene.\n\nAs Dirk and I were getting ready to head on out there, Katherine gave us each a big hug before offering her final words of encouragement. \"Let's really turn up the heat, guys. Just totally go for it!\"\n\nTo her great relief, I'm sure, Dirk managed not to be completely erect during our first hug, kiss and grope. I did my little ass-wiggle when his hands went to my bottom, then I giggled in his mouth at the sight of Katherine clapping excitedly offstage.\n\nWhen Dirk stood me front and center and began running his hands up the backs of my thighs, I think I floated right out of my body. \n\nI'll never forget the lone female gasp I heard from the otherwise strikingly silent audience when Dirk first pulled my robe over my ass. As he tugged my panties down, I had a wet, crashing orgasm that I thought would never end. To my everlasting gratitude, he quickly realized that at least on this night he had to do more than simply squeeze and cup my bare ass before nuzzling my pussy; he also literally had to hold me up, just to keep me from collapsing. \n\nI barely had enough presence of mind to do my ass-wiggle before stepping out of my panties. \n\nDirk whispered, \"Relax, Jen. This is just like that night at the dorm when you showed off your ass in your sexy robe, daring me to take you. You wanted me to fuck you right there on the couch, hoping someone would see us. That's all we're doing now. Knowing that people are watching, you're letting me touch your ass and eat your pussy, the same as we've been doing for weeks. No biggie, right?\" Grinning, he made sure to show the audience every inch of my naked, trembling bottom, and with the way he hungrily licked my pussy I didn't need any reminders from Katherine to dance my hips and wiggle my ass.\n\nHis gentle words brought me back into the moment, and finally I was able to settle down.\n\nAlthough Katherine couldn't have known what Dirk had said, she gave us a big thumbs-up when she saw me relax and mentally rejoin the scene. Once Dirk could tell that I was back on the same planet with him, he playfully nipped at my pussy while whispering, \"Good girl! There's my beautiful slut!\"\n\nSmiling happily, I mouthed, \"Yep! Here I am!\" Grinding my hips, I pulled his head firmly between my legs, then I went that one step further again by draping my thigh over his shoulder. I wanted everyone in that audience to see his tongue lapping away at my wet pussy.\n\nFrom off to the side Katherine stage-whispered, \"Awesome!\"\n\nWhen we moved to the scene where I was to unsnap Dirk's silk pajamas, I heard another couple of gasps from the audience, including a seriously hot moan from Carrie. That wasn't designed to be one of Katherine's \"show off Jen's ass\" scenes, but I kind of spaced on where I was supposed to position myself. Katherine wanted me sitting up straight on my knees as I began to undo his pajamas. Instead I was leaning forward, and the gasps came in response to the spread-legged shot of my bare ass and pussy I was inadvertently offering the audience.\n\nNuzzling the front of Dirk's pajamas as I pulled them open, it was obvious he was fully hard. I knew we needed to get those house lights lowered, but I couldn't resist the temptation to run my lips over his crazy bulge, which made Katherine giggle. When Dirk reached to click off the little lamp on the end table, I made a sexy show of tugging his pajamas down and tossing them aside before nudging him onto the sofa.\n\nWhat a relief, having the place go nearly dark. What a rush, too! A breathless hush fell over the audience, then a continuous murmuring began to build as I returned my lips to his rampant erection. \"Here we go, baby!\" I whispered excitedly. Moaning around the head, I slowly swallowed him all the way down, taking my sweet time to savor every last inch. Thrilled to be sucking his dick on stage, I was determined to perform the sexiest blowjob anyone in that audience had ever seen. Moving my bare ass in provocative circles, I arched my back and used both hands to pump him while slipping the tip of my tongue into his already-drooling slit. Also, instead of using my Layla wig's long hair to help keep him somewhat covered, I casually hooked it over my ear so everyone would be able to see the silhouette of my mouth traveling up and down his seemingly endless pole.\n\nThe way he kept thrusting his hips and tugging on my nipples told me he was growing impatient, though, which he confirmed by suddenly pulling me up into a sixty-nine.\n\nI'm sure Katherine thought we went a little too fast there, but I think we more than made up for it once I was on top of him.\n\nAt first I thought Dirk was going to be content to lick my pussy as I hummed my throat around his pounding length, but it wasn't long before he buried his face in my ass, loudly slapping my cheeks with both hands. A startled squeal came from a woman in the audience; still we made no effort to quiet the passionate sounds of our oral sex display. In fact, I went out of my way to give him the wettest, slurpiest, noisiest blowjob ever. I didn't even try to use my upper body to shield what I was doing. No, I just trusted to the lighting while continuing to thrill to the thought of the silhouette I imagined we must have been making with my mouth hungrily moving up and down his towering erection. Letting out a deep moan, I realized that I wouldn't have minded at all if Katherine had left the house lights on. I wanted everyone there to watch me suck his beautiful dick.\n\nIn the meantime Dirk just kept laving and deep-tonguing my asshole, making me smile around his shaft. Normally he devoted most of that scene to eating my pussy; this time he spent nearly all of it prepping my ass for what we both knew would be happening in the very next act.\n\n'What a considerate guy!' I thought, laughing to myself at the absurdity of it all.\n\nI wasn't about to let him shoot his initial huge load of cum down my throat, though...not this time. I knew he could get it up and cum again after intermission, no problem; that wasn't the issue. No, I simply wanted to save his biggest eruption for my very first ass-fucking. By giving the base of his pulsing shaft a firm squeeze every time I felt him approaching blast-off, I let him know that he wasn't going to be allowed to cum just yet. Fortunately, it didn't take him long to pick up on what I wanted. Knowing Katherine was still waiting for our \"massive orgasms,\" Dirk and I actually went into full-on acting mode! Yep, we faked the loudest, wildest mutual-cums ever! It was hella fun!\n\nFinally, following another loud smacking of my bottom from Dirk - which had become our usual cue - I got up from the couch. With my body turned sidelong to the audience I slipped my robe over my shoulders, letting it fall to the stage. Arching my back and cupping my breasts, I was happy to see my fully erect nipples standing out nicely in profile. I held that pose for a few beats before slowly bending at the waist to climb down on top of Dirk.\n\n\"No cumming for you yet, mister,\" I whispered once we were pressed together, face to face. Giving the audience another sexy silhouette, I pooched my wiggling ass way up high, right into Dirk's welcoming hands, then I teased my full breasts with their erect tips back and forth over his lips.\n\n\"Holy fucking god...\" came a male voice from the audience, just before the stage went completely dark.\n\nUtter silence...then an explosion of raucous cheers, whistles and applause.\n\n\"I think we done good!\" smiled Dirk as the curtain slowly descended.\n\nNodding happily, I kissed him on the lips. \"C'mon, let's go!\" I said, pulling him up once the curtain had lowered all the way. He made a move to grab my robe and his pajamas, until I whispered, \"No, those still need to be here at the beginning of the next scene. We never do put them back on, remember?\"\n\nWe dashed naked off the stage, and Katherine was right there to meet us with two plush robes before hurrying us away. Finally stopping to pull us into a group hug near our dressing rooms, she was literally jumping up and down with joy!\n\n\"Did you hear that? Did you guys fucking hear that?! They went crazy for you! They loved it! You were absolutely incredible! Jen, that was the hottest thing ever, the way you moaned and made all those slurping sounds as you sucked his dick! God, you did such long, sexy strokes, letting us see the silhouette of your mouth moving up and down his huge cock! Then there was that killer kitty-stretch you added at the end, when you arched your back and thrust out your erect nipples! Damn, girl, that was awesome! Where did you come up with that? And oh my god, you had like a five-minute orgasm when Dirk lifted your robe and pulled down your panties! I about died, watching you cum and cum and cum!\n\n\"Dirk, what did you do to calm her down there? Before you somehow pulled her back together, she looked like she was about to dissolve into a puddle right in front of you! Seriously, what did you say to her?\"\n\nGrinning, Dirk took my hands. \"I told her to relax; that it was no biggie. She's used to having me show off that perfect ass of hers, so let's just do what we always do.\"\n\nI smiled to Katherine. \"He said exactly the right thing, in exactly the right way, at exactly the right time.\" Then I turned back to Dirk. \"Thank you so much, baby. You totally saved me out there.\" Giving him a big hug, I smothered his face with smacking wet kisses.\n\n\"That's awesome, Dirk...really awesome,\" Katherine said, taking his hands after we'd finished hugging. \"You guys are just amazing. I still can't believe you haven't been doing this for years. You two have the poise of people who've performed on stage their entire lives.\"\n\n\"Hey, what can I say?\" smiled Dirk, without a hint of sarcasm. \"I love this girl. I'll do anything for her. You guys oughtta know that by now.\"\n\nMy hands went to my mouth in shock. Blinking through my tears, I could only whisper, \"Oh, Dirk....\"\n\nHe gave me a deeply penetrating stare. \"Jen, you know I love you. Whatever happens out there, I am not going to let you down.\"\n\nWith her big, gorgeous eyes filled to overflowing, Katherine moved me into Dirk's arms for the warmest, sexiest, most erotic kiss of my young life. As she hugged me from behind, I felt her beautiful tears on my neck.\n\nJust wanting to touch her, I reached back to caress her face. After kissing my shoulder, she brought my hand to her lips. One by one she kissed my fingers, then, as suddenly as she does everything else, she ran off behind some heavy curtains, leaving the two of us alone backstage.\n\n\"You know what this means,\" I said, looking up starry-eyed at Dirk.\n\n\"What does this mean?\" he asked, giving me a sweet, wonderful smile.\n\n\"It means no refunds, and no returns. Now you have to take my ass in this next scene. You wouldn't dare turn me down again, like you did at the dorm...not if you love me.\"\n\nHugging me close, Dirk whispered in my ear, \"I do love you, Jen, and I don't want any refunds. I only want you.\"\n\n\"So no more of our little deceptions? Awww, and just when I was starting to get the hang of it,\" I teased.\n\nWe knew we only had a few minutes before the start of the next scene; not that we really had anything major to do in order to get ready for it. I mean it wasn't like we had to do any big wardrobe or make-up changes. We were going to be fully nude. All we had to do was take our positions and wait.",
        "Finally, it was time. I was led to the bed, and Dirk went into the little ersatz bathroom the crew had included for the hotel room scenes. Feeling truly liberated - or was it truly wicked? - I positioned myself atop the covers with my leg fully bent at the hip, spreading myself wide open. A lot of people in that audience were going to get a clear view between my legs; in particular, those who were sitting stage-left would have a perfect shot of my naked pussy.\n\nThen I remembered that Carrie was sitting over there! 'Amazing,' I thought. 'J.T. and Ray are also there, yet I'm more excited about Carrie seeing me!'\n\nThe house lights blinked, letting everyone know that the play was about to resume.\n\nWhen the curtain rose, there I was, facedown naked on the bed, illuminated by a lamp on the nightstand plus some ambient stage lighting. I had my head turned toward the bathroom. I wasn't about to miss Dirk's first full-frontal display before a live audience!\n\nI was supposed to be asleep, the two of us having moved over to the bed following our sixty-nine on the sofa. Exiting the bathroom, Dirk would join me on the bed, gently waking me so we could slip under the covers and make love.\n\nI giggled to myself when I noticed that I'd happened to lay right on top of Katherine's ever-present, thick and fluffy \"clean-up\" towel hidden beneath the covers.\n\nThat Katherine, she never misses a thing. I swear, she really is the best woman I've ever met.\n\n'Here he comes!' I thought excitedly, watching the phony bathroom door swing open. When I heard the first gasps, whistles and catcalls from the audience, I grinned to myself, 'That's right, ladies, eat him up!' His cock was by no means soft, that's for damn sure! He wasn't fully erect, but he was nothing like flaccid either. As he bounced his way over to me, god, he was absolutely ginormous! His swaying shaft was just outrageously long and mouthwateringly thick, and only a little rubbery. Totally thrilled for him, I giggled into my pillow, \"Yeah, you show 'em, baby!\"\n\nWith his awesome dick bobbing crazily, he knee-walked across the bed before settling in beside my hip. Gently stroking my lower back to wake me, he leaned down to nuzzle my neck, giving me sweet little kisses just below the ear.\n\nI whispered, \"Well hi there! It looks like someone was maybe a little too happy to see me laid out like this, huh?\"\n\nHe whispered back, \"I tried to think of baseball, but I just kept imagining you as the ball girl! You were showing the crowd your ass every time you bent over to grab a foul ball!\"\n\n\"Be happy, baby, your cock looked amazing. I'm so proud of the way you showed it off, and I bet Katherine totally loved it. Now say something to me, silly!\"\n\nAfter sitting up to caress my legs, he recited his 'wake-up' line. That was my cue to stir and do my little part there, which consisted of a happy purr, an ass-wiggle, then a warm and breathy, \"Mmmm, that feels good.\"\n\nLeaning forward, he began kissing and stroking me everywhere. He must have really been into it because he kissed me a lot more than we'd ever rehearsed it for that scene. Starting between my shoulder blades, he trailed his lips down my spine and all the way through my ass crack, eventually slowing to linger over my tingling little star.\n\nA woman in the audience let out a low, sexy moan.\n\n\"Look at my goose bumps. Baby, you're giving me chills. Let's get under the covers,\" I said, finally reciting the long-awaited line...my passport to heaven.\n\nI stood and stretched at the foot of the bed, and that was another thing I just added out of the blue. Stretching way up high on my tiptoes, I raised my arms above my head, clasping my hands together at the very top. It was a move that tightened my abdomen and arched my back, forcing my breasts to thrust out as far they would go while also giving the audience a great look at my flexing calves and thighs. By spreading my legs shoulder-width apart, I offered another perfect shot of my glistening pussy.\n\nAnyone in the first few rows definitely had a clear view of my wet lips, and I'm sure the light shining through my bare split must have made for one sexy silhouette. When I was done stretching, I bounced down onto my heels, making my full, heavy breasts judder.\n\nTurning to walk around the bed, I heard a female voice from the audience moan, \"My lord....\"\n\nOnce I'd made my way over to my side of the bed, I bent at the waist to fluff my pillow before pulling back the covers, knowing full well I was wagging my naked pussy directly at the audience.\n\nI was about to cum again, and we hadn't even started yet!\n\nWhen I climbed into bed, I wasted no time in spreading my legs and pulling Dirk on top of me. Grinning in anticipation, he moved between my wide-open thighs while leaning down to kiss me. I knew I needed to keep at least some of his ass covered, so I raised my knees to form a tent with the sheet.\n\nOne of the great things about that scene is there's no scripted dialogue. Katherine just wants us to fuck. As long as we remain in character, whatever we say while we're having sex is fine by her. We don't need to fake anything.\n\n\"Remember to call me 'Eric' this time, doofus,\" Dirk whispered.\n\nI laughed out loud, which probably would have seemed oddly inappropriate to the audience were it not for the fact that Dirk chose that moment to make it look like he was very obviously pushing inside me. The timing of his first hip-thrust made it seem like I was laughing with joy as he drove between my legs, and that's exactly what he was doing. His incredible cock was smoothly penetrating my welcoming pussy. As it so happened, I was laughing more and more with every amazing inch that kissed my hot depths. My pussy was so wet, I was sure everyone in the building could hear it. I was literally dripping down my ass, and I had my first big orgasm of the scene when he whispered, \"Here it is, baby...this is where we go for it. Finally, we're going to fuck the way we've always wanted to.\"\n\nI creamed all over his balls, and that was it; I completely threw myself into fucking him.\n\n\"Take me! Fuck my pussy!\" I cried, and Dirk drilled me like a man on a mission. Slam! Slam! Slam! For god knows how long, we were just this unceasing pagan cacophony of grunts, moans and unintelligible panted commands and exclamations.\n\nHe at least had the presence of mind to whisper, \"The sheet! Remember my sheet!\" I pulled him into me by his ass, using the sheet to help drive him home; matching the rhythm of his powerful thrusts were my crazily bouncing breasts, shuddering hips and wild animal moans.\n\nI happened to glance past his arm into the crowd, where I noticed a middle-aged woman simply touching her fingertips to her throat. Unblinking, her expression frozen, she looked like she was in a trance. Quickly scanning down the row, I spotted Ray elbowing J.T. in the ribs, goading him over and over. Again I laughed out loud, even as Dirk continued to devastate me with his incessant pounding.\n\nI heard our bodies slapping together, accompanied by the deliciously wet sluicing sounds of my pussy clutching his shaft on every stroke.\n\nMy glance landed next on Carrie, whose face was a total blank; as if in a daze, almost spellbound, she was absentmindedly sucking her middle finger.\n\n'Yes, watch me, Carrie. Watch how I take this huge cock,' I thought. Throwing caution to the wind, I let the sheet slip below my hands clutching Dirk's ass, further revealing his unrelenting assault on my joyful pussy.\n\nMoments later I came again, drenching us both, as well as the towel beneath us. When Dirk felt me cumming, he slid two thick fingers up my ass, making me jerk spasmodically through an endless screaming orgasm. That was the longest one ever! Jesus, I just could not stop cumming. Gushing out a torrent of clear juice, my pussy completely soaked us. There was so much hot, slippery cum on our slightly scratchy towel that it felt like we were fucking atop a huge slice of warm buttered toast.\n\n\"Oh my god...oh my god...oh my god...\" I kept babbling, wondering when my crashing orgasm would ever release me. Finally, as I felt it cresting, I pulled Dirk down and tightly hugged him while crying out, \"I love you!!\"\n\nOnce I'd regained some semblance of awareness, I rolled him onto his back, making sure to keep his granite cock inside me. Straddling him, I felt my entire upper body and most of my ass become exposed to the audience. He grasped my bottom through the sheet and just kept fucking me and fucking me, stretching my tiny pussy to the limit. I was bombing his cock, my breasts bouncing even more crazily as my ass shuddered with each pounding stroke from his mile-long dick. Slowing to grind on him, I lost my mind over the feeling of his enormous spongy crown kissing my cervix. I started up a loud moaning, shamelessly begging for his promise to never stop fucking me. Pulling me close, he brought my breast to his mouth; I screamed when he took my entire areola between his teeth and bit down hard. Capturing the aching nipple, he began giving it little nips, making me yelp like a bitch in heat with each bite.\n\nWhen he finally released my pulsing tip, I sat up nice and high again, lifting until he popped out of me. Grinning triumphantly, I took hold of that gorgeous fucking billy club of his and positioned it at my tight little pucker. \"Now you're going to give it to me!\" I growled, releasing my thighs and pressing my ass down...down...down. Trying to impale myself, I literally howled from the exquisite pain, and Dirk laughed in astonishment at my wild banshee cry. I'd only taken the head and maybe the first couple of inches inside me, and already it was the fullest I had ever felt.\n\nDirk laughed deliriously, matching the manic rhythm of my howls as I kept pushing. I didn't care how much it hurt; I wasn't going to stop until I'd taken that entire battering ram all the way up my ass.\n\n\"GODDAMMIT! FUCK MY ASS!!\" I screamed at the top of my lungs, and Dirk cried out right along with me when I drove myself down as hard as I could. \n\nMy brain melted, and I probably broke a window somewhere. Feeling his balls slam into my quivering bottom, knowing I'd done it, I had finally taken a cock all the way up my tight, sexy ass - and not just any cock, either, but Dirk's massive pole - that realization set me off; I started launching myself up and down, fucking him in an out-of-control frenzy. Howling in a consistent guttural pitch, I was cumming so much that I don't think it ever really stopped.\n\nWhen his dam finally burst, and I felt the eruption of hot cum jetting deep inside my tremulous clutch, my mind completely snapped. All hell broke loose, and I had to throw myself down against his chest as my pussy began squirting and squirting and squirting! I was going off like a busted sprinkler head, just gushing all over us, making a wet, sopping mess everywhere. I had to stay down; if I'd sat up at all, everyone in that theater would have seen a fountain of clear cum arcing out of me!\n\n\"Oh my fucking god,\" I panted as my insane orgasm kept washing over me, thoroughly wiping me out. I had never gushed like that before, and it just wouldn't stop! What in the hell was happening?\n\nThough Dirk was holding me tight, his manic laughter also never stopped. He just kept laughing and laughing, like he was being tickled by a thousand wet-nosed puppies! \"I can't believe it! I can't believe it!\" he kept panting between rapid bursts of laughter. \"God, I love you! You are so incredible!! I love you!!\"\n\nI totally rag-dolled; there were no bones in my body, other than the colossal one still pounding its way up my ass. I was nothing but a gelatinous blob of utterly satiated girl-flesh.\n\nFinally his tireless cock began to soften, and with an audible 'plop' my ass squeezed him out. Holding each other, we trembled together, our breathing eventually finding a shared rhythm.\n\n\"I can't believe you did that!\" he whispered, still laughing a little. \n\n\"Me either! I've never done that before!\"\n\n\"Jen, that was awesome! That was the greatest thing ever!\"\n\n\"Oh god, it really was...it really was....\" Smiling serenely, I punched him in the chest, making the audience laugh.\n\n\"Oww! Jesus! What was that for?\" he whispered, holding his chest.\n\nI giggled, \"That was for making me wait so long, you big jerk!\"\n\n~ ~ ~\n\nHaving made it through Opening Night, we were all standing around together afterwards in the lobby. I pretty much had no choice but to join everyone, since my dressing room was filled to bursting with about a million red roses. There wasn't any room left for me!\n\nKatherine was beaming as she spoke with all her various well-wishers, and she made a point of introducing me to everyone. Saying that it was tradition, she insisted I hold a large bunch of long-stemmed roses while taking pictures and accepting congratulations, then she had me speak with the small gathering of media that appeared seemingly out of nowhere.\n\nMy parents were never going to miss my first professional show, not in New York City, and they were standing with Professor Keener and Katherine. Dirk was understandably concerned about what they would say, but I knew there was no reason to worry. They were dyed-in-the-wool theater people who weren't the least bit uptight about nudity or sex.\n\nAfter Dad shook Dirk's hand and congratulated him on his fine performance, my parents held me at arm's length while Mom declared that her little girl had really grown up. They hugged me and told me how proud they were, then Mom began crying when Professor Keener joined our hug.\n\n\"I hate to be the kind of guy who says, 'I told ya so!'\" he grinned to Mom. Laughing heartily, he went ahead and said it anyway.\n\nWhen Katherine literally jumped into his arms, he twirled her round and round as if she were a little girl. She was certainly laughing like one. God, she was so gorgeous. In Katherine's never-ending world of happiness this was the most joyous moment yet, especially with all her friends there to share it with her.\n\nOnce things had quieted down a bit, Ray and J.T. made an appearance. Standing at Dirk's side, I was quietly talking with my parents when Ray came up to me and blurted excitedly, \"Jen, I had no idea you could be that good! You were totally awesome! Girl, I'm serious, you're gonna be a star!\"\n\nThanking him, I gave him a big hug. It really felt great to know that he was so genuinely excited for me. Ray was always such a sweetheart.\n\nAfter J.T. said hello to my parents, he gave Dirk a grudging nod before turning to ask me if we could have a quick moment alone.\n\nExcusing myself, we moved to a quiet alcove.\n\n\"Jen, first I just want to say how awesome you were. Seriously, congratulations, you were incredible. You really are a great actress, and Ray is right, you're gonna be a big star.\"\n\nGrateful for his encouragement, I gave him a warm hug, only to have him pull away. Visibly distraught, he couldn't bring himself to look at me as he continued, \"I also wanted to say I'm sorry. I know you found those panties in my bed, and...fuck. Jen, I don't deserve you. I'm not smart enough or mature enough to be with someone as amazing as you. I swear, you've always been nothing but awesome to me, and I've been a total asshole. I know I have a lot of growing up to do, and all I can say is I'm sorry I'm still such an immature idiot that I couldn't treat you the way you deserve to be treated.\"\n\nHanding me my overnight bag I'd left in his room, he kissed me on the cheek before nodding toward the group. \"Here's your stuff. Go, Jen. Go be with people who deserve you.\"\n\n\"Thank you for not making this difficult,\" I said, returning his kiss.\n\nHe was crying. I had never seen J.T. cry, and his face was pure sadness as he turned and walked away.\n\nBy the time I returned to the group, everyone was making plans to go celebrate. Katherine's boyfriend said he regretted being unable to come along, explaining that he needed to be at JFK within the hour to catch a red-eye flight, and Carrie said she also had to get going. They offered their final congratulations, with Carrie blowing me another kiss, and Katherine saw them out.\n\nAs soon as she came back inside, she affectionately snuggled in against my arm. Dirk and I ended up catching a ride with her to Professor Keener's \"Opening Night celebration bacchanal!\" at his favorite Italian restaurant, where we all laughed and carried on until finally we closed down the place.\n\nWhen it was time to call it an evening, I hugged my parents goodbye after thanking them for coming. Professor Keener laughed, \"Are you kidding me? They wouldn't have missed this for all the tea in China! For that matter, did you think there was any chance whatsoever that I might have permitted their absence here tonight? Noooo, darling, none of us were ever going to miss our sexy little Jennifer's scintillating, sensational, spectacular Broadway debut!\" Lifting me into a bear hug, he grinned that he couldn't wait to brag about me in class come Monday morning.\n\nMoving the party outside following a final round of farewells, he and his friends informed my laughing parents that they were kidnapping them, and together they all headed off carousing into the night.\n\nRejoining Dirk and Katherine, I told them about my break-up with J.T. They understood that for obvious reasons I didn't want to go back to the dorm. Dirk said it would be no problem to call his brother and get another room assignment, and he hoped I would come stay with him once he found a new place. Then he mentioned how late it was, saying it was time for him to head on home.\n\n\"Dirk, of course I'll come stay with you,\" I said, taking his hands. \"You know I will...and I can't wait for our next show.\"\n\nWe shared a warm hug, and he gave my bottom a couple of teasing pats while whispering, \"Speaking of which...are you okay?\"\n\nHappily wiggling my ass, I breathed into his mouth, \"Mmmmmm-hmmm...never better. Have I told you how awesome you were tonight? Thank you, baby. You were right, you know. As long as I live, I'll never forget my first ass-fuck.\"\n\n\"As long as I live, I'll never forget your first ass-fuck either!\" he laughed. \"I love you, Jen, and you were absolutely incredible tonight. You gotta do that squirting thing again for me, too!\"\n\n\"Oh god!\" I squealed, burying my face in his shoulder. \"I can't believe I did that!\"\n\n\"Neither could I, but I totally loved it!\"\n\n\"Seriously? You're not just saying that to be polite?\"\n\n\"Jen, god no! That was the hottest thing I've ever seen! I wanna make you do that every time!\"\n\nI giggled, \"If that's your plan, then you better get us some rubber sheets for our new place!\"\n\nAfter we enjoyed a long, steamy kiss, I stepped aside so Katherine could give him a hug goodbye. Grinning mischievously as she moved into his warm embrace, she whispered something in his ear that made them both laugh, then she reached down and started squeezing and fondling his cock! Making a really sexy show of it, she was totally feeling him up! She even put his hands on her bottom and did a killer ass-wiggle for him!\n\nWe were all still laughing when Dirk's taxi rolled up to the curb. Loading him inside, Katherine and I took turns leaning in to give him our final kisses goodbye, then we watched together as his cab drove off into the million-watt kaleidoscope of Times Square.\n\nOnce he'd disappeared amid the swirling sea of crimson tail lights, Katherine took my hands and held me at arm's length, just the way my parents had. Spinning me like a fairy princess, she laughed, \"So where does the most beautiful girl in the world go to celebrate her smashing Opening Night performance at the theater?\"\n\nContinuing to twirl on my own with my arms spread wide, I giggled, \"You tell me! You're the most beautiful girl in the world!\"\n\nWhen I twirled my way back to her, she pulled me close for a wonderful hug. Right there on the sidewalk she gave me a long, tender kiss that turned my heart to pudding, then she took me by the hands again. \"Seriously, Jen, where will you go tonight?\"",
        "Grinning, I kissed her on the nose. \"I guess I'll go back to my own dorm. Hopefully my roommate hasn't already replaced me.\" \n\nHolding my gaze, she brought her hands up to cradle my chin. \"Jen, come stay with me, at least until Dirk gets his new place together.\"\n\n\"Oh god, Katherine, really, you've already done so much for me. I wouldn't want to be an imposition.\"\n\n\"Nonsense, baby, it's no imposition at all. I would love to have you. Besides, I still want to celebrate some more!\"\n\nSquealing with joy, I gave her a wildly excited hug, then we shared the hottest kiss I ever could have imagined. With my head still spinning, I panted, \"Are you sure? You really wouldn't mind having me stay with you?\"\n\nShe kissed me again, moaning as our tongues danced together. Pulling back to look into my eyes, she brushed a hand across my cheek; lingering there, making subtle circles, she traced delicate patterns along my jawline and down my neck before bringing a single fingertip to rest between my breasts. Following an electrifying pause, she slowly drew the words 'I love you' over my heart.\n\nI gasped, and she returned her hand to my face. Like the first drops of a gentle spring rain, her fingertips caressed my lips. Leaning in to give me the softest, sexiest kiss, she whispered into my mouth, \"Yes, baby, I'm absolutely certain. Please be with me tonight.\"\n\n~the end~ \n\nPlease leave a vote and a comment to let me know what you thought. Your comments and questions deserve a response so when you send feedback make sure to include a valid return address."
    ],
    "authorname": "stevieraygovan",
    "tags": [],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/deceptions-ch-03"
}