{
    "title": "Eros Spa Ch. 01",
    "pages": [
        "Anna looked into the mirror as she slipped out of the robe she had donned after her massage. Standing there naked, she had to admit she was a very good-looking young woman. She was working on her Masters Degree in Art, and as little time as was left for exercise, she still looked pretty trim with full breasts and nice curves in all the right places. She still felt she had a little bit of a tummy but she had read that most guys found this very attractive.\n\nShe sighed, \"Lots of good my body has done me ...\" Her love life was almost non-existent. She dated a few guys in the past year, but for the most part they were unsatisfying relationships, especially where sex was involved. The guys always wanted to have sex and although she didn't have anything against sex, she just never understood what all the fuss was about. She masturbated and had orgasms both with her partners and on her own, but they weren't the mind-blowing experiences other people described. On top of that, her art career never seemed to get going. In high school she had been considered quite an artist, and in college she had been ok, but when it came to finding people to buy her paintings or photographs, she had a hard time making any money, which was why she ended up back in school going for her Masters. At least that way she could find some private school to teach at after she graduated. But recently, her grades had been falling.\n\nHer professor said her work lacked \"passion\" or \"feeling\" or some other catchy phrase artsy people throw around ...\"Excellent composition but I think it is missing that something.\"\n\nAnna shook her head and brought herself back to the here and now, walked over to the steaming hot tub and slid into the almost too hot water. All in all today hadn't been the waste of time she thought it would be. When her slightly odd aunt had given her a day of \"pampering\" at the dubiously named Eros Spa for her birthday, she wondered if it was yet another attempt to spice up her love life, which her aunt considered \"dull.\" It had turned out to be a perfectly normal spa where she had had a manicure, been rubbed down with various sweet smelling substances, and spent a goodly long time baking in some sort of goop that was supposed to be good for her skin. She was massaged by a sweet woman with an Indian accent and incredible fingers, and now lay soaking in a delightful tub of hot, bubbling water.\n\nOpening eyes she hadn't realized she had closed, she saw an attractive looking woman in her late thirties or early forties slip into the room. She was dressed in a white doctor's coat and black clogs.\n\n\"Sorry to interrupt you. My name is Rachel and I am one of the owners of the spa. I trust you have enjoyed your stay thus far?\"\n\n\"Yes I have. It has been very calming and a truly delightful time,\" Anna replied sleepily.\n\n\"Is my time up?\" She asked realizing she had no idea how long she had spent, \"checking her eyelids for holes,\" as her father used to say.\n\n\"Oh no, it's just time for your last treatment. Then you can come back here and soak for as long as you would like.\" Rachel said as she held out a fresh robe and towel for Anna.\n\n\"I thought I was all done for the day.\" Anna slipped into the robe belted it and began to towel her hair dry.\n\n\"Nope, we still have the treatment that has made Eros Spa so famous.\"\n\n\"Um, exactly what kind of therapy is this ...\"\n\n\"It is our sexual release therapy. It is what sets Eros Spa apart from all the other spas that are out there, and makes us so exclusive.\"\n\nThoughts of killing her aunt ran through Anna's mind as she tried to picture exactly what this woman in a white lab coat was talking about. It was obviously another attempt by her aunt to spice up her love life, this time much more direct than the ridiculously skimpy underwear she had received from her as a Christmas gift.\n\n\"What? Like some kind of male prostitute is going to \"service\" me?\" Anna made a face of disgust at the thought that even her aunt would come up with something as horrid as this.\n\n\"Oh! You didn't know about our spa before you came?\" I am so sorry! Most of our clients know exactly what to expect by the time they get here.\" Rachel looked genuinely horrified that no one had explained what was going on.\n\n\"No, there is nothing as degrading as prostitution going on here. What our therapy consists of is a very specialized machine that is designed to give you very intense sexual gratification. So hopefully you will leave here very relaxed but energized.\"\n\n\"Well that doesn't sound as bad ...\" Anna laughed nervously, thinking, 'but I am still going to kill my aunt.' Aloud she asked, \"What is this machine, some sort of giant vibrator or dildo?\"\n\nRachel visibly relaxed as she chuckled, \"Well I suppose you could think of it like that. What it really consists of is a base unit that inflates a rubber phallus using water pressure to keep it ridgid but still flexible. By increasing the pressure in different channels of the artificial penis, it can create a surprising amount of motion.\"\n\nShe paused, then went on, \"Would you like to see it before you decide whether or not you are interested? Most of our clients find it to be a most gratifying experience.\"\n\n\"What the hell, my professors keep telling me I need to broaden my experiences. I might as well see it,\" Anna replied with a hint of curiosity in her voice.\n\nRachel led her down the hall. They passed no one, and Anna hadn't seen anyone else aside from the various employees of the spa since she left the well appointed waiting room hours ago. She knew there must be other clients, but by keeping them apart it let her believe that all these people were here just to pamper her. They went through a door off the hall and entered a room quite like several of the others she had been in at the spa already. It was paneled in red wood and had what appeared to be a modified massage table in the middle of the room, able to adjust in many ways. A padded cylinder protruded from the center so that it would be between the legs of anyone lying on the table. What appeared to be a nozzle stuck out the side of this cylinder.\n\n\"This is the main unit,\" Rachel explained, patting the cylinder in the middle of the table, \"and this,\" pointing to the nozzle, \"is where the phallus extends.\"\n\nShe thumbed a small remote and a white rubber object slowly unfolded looking slightly like a condom inflated with water. Pushing on it with a finger, Rachel showed Anna that it resisted firmly but still gave some.\n\n\"These are disposable so there are no health concerns, and they are very strong. We have never even had a leak. Even if there was one, the machine is designed to immediately shut down, and the fluid is simply water so there is no danger ... so, what do you think?\"\n\n\"Ummm ... it's interesting.\" Anna was a swirl of embarrassment, curiosity, anxiety, and countless other emotions. She couldn't decide if she should run, give this contraption a try, or simply go back to the hot tub. Also, she could tell she was blushing from her ears all the way down to the tops of her breasts.\n\n\"If you like you can sit over there,\" Rachel indicated a small bench built into the wall, \"and I could give you a demonstration. That way you can see there is nothing to worry about, and who knows you might like it ... I certainly do.\"\n\nRachel smiled warmly at the younger woman. Anna took her seat and crossed her legs under the terrycloth robe. She sat down more out of shock and a lack of any other options that didn't seem rude.\n\n'What the hell am I doing here watching another woman getting fucked by a machine, no matter how advanced it is' she pondered.\n\nAnother part of her mind was strangely curious and excited to see what would happen. Rachel matter-of-factly unbuttoned her white coat and removed her shoes. She revealed a slim, tight body with small breasts whose pink nipples were already hard. There was no feeling of a show about it however, just a woman taking off and folding her clothes in a very business like manner. Anna was startled that Rachel had no clothes on under her uniform. She guessed that Rachel was not kidding when she said that she enjoyed the machine and was already exited by the prospect of getting to use it. It certainly wasn't cool enough in here to explain Rachel's hard nipples any other way. In fact, it was as warm as a moderately hot sauna, and so humid that Anna noticed as a wisp of steam drifting in front of her. Obviously, this was intended to keep naked people comfortable, but it made her robe seem slightly oppressive. Anna watched as Rachel positioned herself on the table, using the remote to move the nozzle until it was just parting the lips of her vagina.\n\n\"There, it is all set to start. Now you see that I can wrap my legs around the main unit or put them on the table. I can basically move in all sorts of ways, and the machine can compensate for this quite easily once it is calibrated.\"\n\nRachel sounded almost as if she was giving a lecture to a class of students, but Anna could hear a quiver of excitement in her voice that betrayed this. Rachel pushed a button on the remote, and Anna felt herself leaning forward in anticipation, almost against her will.\n\nRachel took a deep breath which was practically a gasp before saying, \"It's unfurling and growing to penetrate me. I have set it for a short but intense setting. If you choose to take advantage of it, your experience will be much longer, and even more pleasurable.\"\n\nAnna uncrossed her legs and leaned forward with her hands on her knees. She could see the machine pushing its fake dick in and out of Rachel, slowly at first but quickly increasing speed. Suddenly it plunged all the way into Rachel and stopped. Rachel was breathing much faster, her breasts rising and falling rapidly, but she managed to sound almost normal as she continued the lecture.\n\n\"As you can see, it can move in and out, but now it is using its ability to change shape to rub inside my ... ungh...\" Rachel's eyes closed and her body tensed, but before Anna could be concerned, she continued, \"pussy,\" she giggled slightly, \"finding my g spot from time to time, which I enjoy very much.\"\n\nAnna realized she was becoming aroused watching this woman enjoy herself, especially when she was still giving a pseudo lecture, and especially when that lecture used such words as \"pussy.\" Anna hadn't really heard anyone say something like that in a discussion; they usually used another euphemism unless they were trying to be dirty, but in this context it wasn't dirty, just exciting.\n\n\"The temperature of the water can also be ... eeeeeee ... controlled, creating some very unique sensations.\"\n\nRachel was genuinely having a hard time keeping her words straight as the machine continued doing whatever it was doing to her. Her hips were lifting and thrusting in twitchy little motions as her excitement built. Anna was amazed at the muscle tone in Rachel's legs these movements revealed.\n\n'\"I hope I look that good in ten or fifteen years,\"' she thought even as her eyes were glued to this very excited woman.\n\nShe had never seen another woman experiencing sexual stimulation like this. She had seen some of those porn movies but they always seemed as fake as they really were. This was right in front of her. Not five feet away, a woman was almost writhing in pleasure, and still trying to describe what was happening. The machine had resumed its pistoning into Rachel, and she was bucking to meet its mechanical thrusts, a thin sheen of sweat covering her body. Her hands clutched the side of the bed and her eyes were closed, as she smushed her body all the way to the padded column. One hand found the remote and frantically found a button on it.\n\n\"This ... is ... my favorite ... part ...\" Rachel panted between quiet grunts.\n\nAnna noticed a small bulb shaped object project out of the column as it continued its assault on the most sensitive places inside Rachel. This bulb descended on to Rachel's clit. It made a buzzing purr and suddenly Anna realized it was a vibrator. It touched Rachel and the effect was explosive. Her hips lifted to meet it, as the squishy swish of the machine's \"cock\" continued in her. Rachel's body shook as she let out a low moan that proceeded to build to a high wail. Every muscle in her body seemed to tense, then she suddenly seemed to collapse back on to the table where she lay still and the machine retreated. Anna never saw the signal for it to do this, or even the phallus pulling out of Rachel. She realized that it must have been deflated and pulled back into the nozzle of the machine. Even as one part of her mind realized these details another part was amazed that she had just watched another woman have what appeared to be a mind- blowing orgasm.\n\n\"Now if I had orgasms like that I could understand why everyone is so hot to trot to have them.,\" she thought.\n\nShe was startled to find that during the course of the show she watched, she had slipped a hand under her robe and was cupping her now very wet sex. She stared at the glistening hand in amazement, wondering if the reason she never got this turned on by herself or with a guy was because she was a lesbian.\n\n\"You probably aren't a lesbian, if that was what you were wondering.\"\n\nAnna gasped because she had forgotten that Rachel was still there; she had become so quiet in her post orgasmic bliss. She blushed fiercely that she had been so obvious.\n\n\"I didn't mean to embarrass you, but it is something we get fairly often, and I just assumed that your look of horror at your hand had something to do with a thought like that.\"\n\nAnna was sure that even her toes were blushing by now. This woman knew that she had at least had her hand on her vagina, and probably thought she had been masturbating while she watched.\n\n\"Oh come on,\" Rachel smiled, \"I am flattered that you were turned on by my 'show' and you just saw me please myself with a machine. You don't need to be embarrassed that I saw you had your hand in your lap.\" she continued as she toweled off her sweaty body, then began to tidy up and clean the machine, changing the rubber tip and wiping off all of it with alcohol.\n\n\"And most women are excited by other women even when they are just naked. It is a scientifically proven fact. I think there is nothing odd that you were turned on by my actions, and I don't think it reflects on your sexuality in any way.\"\n\nAnna still couldn't take her eyes off her toes. When she did Rachel had her coat back on again.\n\n\"So have you decided whether you would like to give our little pleasure machine a try? If you like I can leave while you use it, giving you the remote so you can turn it off when you want ... or I can stay in the room and we can come up with a signal for me to turn it off if you aren't enjoying yourself.\"\n\nAnna hadn't thought she could blush any more deeply than she already was, but she was wrong; even her toenails felt like they were blushing.\n\n\"What the hell?\" she thought, \"I have never had an orgasm like that, and probably still won't.\"\n\nShe was a little scared, but after what she just witnessed she was also curious to see if she would enjoy the experience as much as Rachel obviously just had.\n\n\"No ... I mean yes, I would like to try this thing out ... I guess ... but if you don't mind I would like you to be here to make sure everything is ok,\" Anna told her feet.\n\nRachel chuckled kindly, \"Lots of our clients are nervous. You don't even have to take off your robe if you don't want to. I like to be naked using the machine, but it isn't required.\"\n\n'Shit, if I am going to do this I might as well go all the way.'\n\nAnna stood up, taking off her robe with a boldness she didn't really feel and stepping to the table with a purpose.\n\n\"Relax, you look like a woman on her way to the dentist, not like someone who is hopefully going to have a good time. Climb on up and put one leg on either side of the main unit.\"\n\nRachel positioned a pillow under Anna's head as she followed the directions. Anna felt butterflies in her tummy as she positioned herself on the table. She could feel that she was getting excited in anticipation, in fact she was practically dripping already, which surprised her even more, as most of her boyfriends had complained that she was usually pretty dry. She flinched as the nozzle of the machine touched her crotch firmly.\n\n\"Sorry, I should have warned you first. As you can tell, the machine is warmed so that it will be comfortable. Would you mind reaching down and making sure the nozzle is between your lips? Once the machine starts, you can move however you like, but for right now, keeping still will help make sure everything is comfortable.\"\n\nAnna suppressed an instant desire to wiggle nervously as she reached down to adjust herself, surprised again at her body's excitement, covertly wiping her hand off on the sheet of the table as she moved her hand back to her side.\n\n\"Here, let me hold your hand, give me three quick squeezes,\" Rachel took Anna's hand as she again followed her directions, \"Perfect. Now if you want to stop for any reason just do that, I have found that having something physical to do to make things stop makes people more comfortable.\"\n\nAnna felt a change she couldn't quite describe in the machine pressed between her legs, and considered squeezing Rachel's hand right then, but then Rachel said, \"Ok I started the machine up. You should feel it penetrating you about now.\"\n\nShe patted Anna's hand with her free one, \"You will be fine. Just relax and enjoy yourself. Some people like to close their eyes to enjoy the experience. Just do what feels natural.\"\n\n'Right \"do what is natural\" as I am fucked by a car wash with a cock,' Anna thought, then gasped as she did indeed feel the machine start to protrude into her. It felt like she had somehow gotten a flaccid cock inside herself then it started to get hard. She felt it slowly unfurl deeper and deeper into her, then start to thicken, pulsing slightly as if with a heartbeat.\n\n\"Oh it is so big, and warm.\"\n\n\"A little bigger than an average man, and yes it can change temperature. Feeling good?\" Rachel asked.\n\n\"Its not at all like I thought. I thought it would feel cold and very rubbery but it feels almost real, except very big,\" Anna replied as she felt herself relax slowly.\n\nIt was beginning to feel good she realized, and she shifted her hips slightly as she became more bold.\n\n\"That's great. You don't look nearly as scared. I am going to start it moving now. Remember, you can stop any time you want.\"\n\nRachel closed her eyes as the fake cock slowly moved in and out of her, stroking slowly until it was just barely in her then returning until it was penetrating her to its full depth. This was beginning to feel very good, still nothing amazing, but very good. The machine picked up the pace and Anna started to rock her hips to meet it with each thrust, just as she would have with a real partner. The machine pulled until just the tip was between her pussy lips, then quickly plunged until it was deep inside her. Then it paused for a fraction of a second. Anna let out another gasp as she felt it curl in her; it was almost like a huge tongue inside her. The curl ran along the roof of her pussy crossing her g- spot momentarily before slipping back into her.\n\nOn the next pass she rocked her hips to push harder at that spot as it went by. The huge tongue or cock, she couldn't decide which it felt more like, began to slither inside her, seeming to slide over every inch of the inside of her pussy. Anna's breathing was beginning to speed up as she got more and more worked up by this amazing device.\n\nThe cock in her swelled at the head, deep inside Anna, and she groaned almost against her will as the swollen section moved up and down the cock, pulsing in a wavelike motion. Anna was surprised that muscles she never knew she had seemed to grip the fake cock. Again the cock changed shape and Anna felt that all of the ridges had inflated and it was beginning to slowly slide out of her. As each ridge passed her pussy lips, her muscles seemed to clamp and try to hold in. Another ragged moan escaped her lips, turning to a moan of longing as the end of the cock left her now, very excited body.",
        "It left her just long enough for her to feel empty and with a terrible need to feel it back in her, before she felt it rush back into her body which lifted, without thought, to meet the thrust. Her feeling of inhibition vanished as the machine \"fucked\" her. She bucked and groaned, rocking her hips with the rhythm of the machine, pushing against it as it writhed and twisted in her. She clutched Rachel's hand without realizing it, her eyes closed, lost in the amazing feeling spreading through her body. Sweat began to slick her skin as she worked to feel everything being done to her. The cock changed shape in her continually, sometimes feeling like a cock, other times like a tongue, sometimes as some shape she couldn't describe as anything but amazing. Suddenly she heard a buzz and felt the vibrator on her clit just like she had seen it do to Rachel.\n\nA picture of Rachel at the height of her orgasm flashed through her mind before she was lost in the waves of pleasure radiating from her clit. She ground herself against the vibrator, smushing her clit hard into it as it moved slowly from side to side then up and down. She was vaguely aware of her own cries of pleasure and the slurping noise of the machine as it plunged into her soaking vagina. She felt a tingling sensation start between her legs and quickly spread over her body like her earlier blushes. She lost herself in the feeling, pulling Rachel's hand to her chest and clutching it as the world around her exploded into a burst of pleasure. She had lost touch with everything, her world was dark and she floated on the waves of her orgasm.\n\nSlowly she became aware of the hand on her chest and like a shipwreck victim, clung to it, slowly pulling herself out of the dark bliss that had enveloped her. She realized the machine had retracted, then slowly understood that she was clutching a stranger's hand to her breast. It wasn't a sexual touch; Rachel wasn't fondling her, just holding her hand as Anna had pulled it to her chest.\n\n\"Sounded like you enjoyed yourself. I have heard stories of people having orgasms that made them black out, but I thought they were a myth. I think you might have for just a second there,\" Rachel said with apparent calm.\n\n\"S ... s..sorry I pulled your hand to me like that, but I really didn't know what I was doing\" Anna stammered, \"I have never felt anything even close to that. I thought I had had orgasms but now I think they were just the little flutters before the big one ...\"\n\nRachel helped Anna sit up and get back in her robe, assuring her that it was not a problem, that she understood Anna clinging to her hand as she was being rocked by an orgasm like the one that Anna had just experienced.\n\nAnna tottered back down the hall to the hot tub feeling almost drunk. Looking back, she could vaguely remember Rachel having to re-arrange her lab coat when she moved to help Anna.\n\nAn hour, a long soak, and a refreshingly cool shower later, Anna walked out of the Eros Spa feeling remarkably composed. Just before she left, Rachel met her and handed her a small box with a bow on it.\n\n\"We give one of these to each of our first time clients. It is just a little something for you to try later to remind you of us.\"\n\nAnna accepted the box, suddenly feeling very embarrassed around the woman who had seen her very first mind numbing orgasm.\n\n\"We hope you will come back soon,\" were Rachel's last words as Anna turned to leave."
    ],
    "authorname": "spyro1123",
    "tags": [
        "spice love",
        "anna realized",
        "pulling rachel",
        "huge tongue",
        "anna noticed",
        "anna thought",
        "hand anna",
        "enjoy experience",
        "anna replied",
        "watched rachel"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/eros-spa-ch-01"
}