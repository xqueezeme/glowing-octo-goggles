{
    "title": "A Ring Named Ezzie Pt. 04",
    "pages": [
        "Part Two of the July 4th weekend. As always please feel free to comment.\n\nI wake up and look at my watch. It's a little after 8am. I get out of bed, and head to the bathroom. I get a glimpse out the small bathroom window.\n\nThe sun is up and shining. It's a beautiful day after last night. Thank god the fireworks are tonight. We can take the blanket and....oh fuck. I look out again. Where is the blanket?\n\nI just sigh. \"Fuck!\"\n\nI grab the shorts and tee shirt I took off in the kitchen yesterday and head outside. I scan the yard. I see the backpack close to where we left it. I head down to it. The blue and black butt plugs stand out in the green grass. I grab them and the lube and toss it in the soaked backpack.\n\nI don't see anything in the woods. I turn and look at the hedges on the property line. Our clothes are stuck in and under the hedges, but no blanket. I look again and I see it in the neighbors yard tangled up in a picnic table.\n\nI look up at the deck. I don't see any signs of life. I walk around the bushes and start trying to untangle the blanket when from behind me I hear. \"Can I help you?\" With just a little edge.\n\nI turn it's the owner of the property. I saw him unpacking his car yesterday. \"Yes sir. I am sorry to intrude. I guess my blanket tried to escape last night in the storm. I was just trying to untangle it. Your picnic table was kind enough to catch and hold it for me.\" I say.\n\n\"Ezzie, is he ok? Who is he?\" I ask.\n\n\"His name is Ronald. He seems ok he came running out because he saw you in the yard before you got to the blanket.\" She tells me.\n\nHe looks at me and smiles. \"You're the young man we saw running for the house last night in the storm. The lightning really lit things up last night.\"\n\nOh shit. \"Ezzie, did he really see us?\"\n\n\"Yes Ben. He vividly remembers Beth & Karen running to the house last night.\"\n\nOh fuck. I leave the blanket and walk towards him. I reach out to shake his hand. \"Hi I am Ben.\" I say.\n\n\"Ronald. Nice to meet you.\" He says shaking my hand. He is probably 5-10 years older than my parents. I would guess in his 50's. Black short hair with heavy gray growing in. Lean to Medium build. Just an average guy.\n\n\"Um, listen about last night. I am really sorry. We didn't mean to put on a show.\" I say.\n\nRon chuckles. \"If it hadn't started storming so hard and so fast. We never would have seen you. My wife and I got up to grab some things off the deck and we were back in the house. We turned back just in time for the lightning strike.\"\n\nI just moan. \"Oh god, I am so sorry we flashed you and your wife.\"\n\nHe pats me on the shoulder and laughs. \"It's ok. We were young once too. We had a good laugh, and then some. Come on, let me help you untangle the blanket.\"\n\nWe walk to the table and untangle it. It's heavy as hell it's so wet. He suggests folding it on the picnic table and trying to squeeze it dry by pressing it into the table.\n\nHe starts asking about me. I tell him Karen is Ray's niece, Beth is her friend and I have a buddy coming up later.\n\n\"Cranky Old Ray let you kids have the cabin for the Fourth?\" He asks.\n\nIt kind of sounds like he doesn't like Ray. \"Ezzie, does Ron like Ray?\"\n\n\"No. He is thinking now. How did this kid get that asshole to let him use the cabin?\"\n\nWhat the hell. Let's tell the truth. \"Well he didn't exactly let us. I told his brother, Karen's Dad, I would help him write up and land a new contract. Ray didn't think I could do it. By the end of the day the bet was $1000 of my cash against this weekend and Labor Day at the cabin.\"\n\nRon is roaring laughing. \"I guess you showed him.\"\n\n\"He doubted I was smart enough to write up a good contact, and he doubted I had the people skills to land it where Mr B had failed before.\" I tell Ron.\n\nRon looks at me for a moment. Have you ever thought of selling Real Estate? I own Gold Star Realty. People skills is our thing.\"\n\n\"Ezzie, is he pulling my leg? He owns it? He owns it and has this small cabin?\" I say.\n\nThe wheels start turning in my head. I think realtors make like 3-5% commission. That's $30-50,000 per million. He has offices all over the state. I start seeing $$$$.\n\nWait, something still seems wrong. If he has all this money why this little cabin.\n\nEzzie speaks up. \"He originally bought it with the idea he could talk Ray into selling, but Ray won't sell. He has offered Ray well above the value so he could go buy any other lake house. Ron was hoping to tear down the two and build a bigger, nicer one.\"\n\nAAAHHHH! Now it makes sense.\n\n\"Ron I certainly don't mean to pry, but why are you here in this little cabin?\" I ask.\n\n\"Ezzie please make him tell me the truth.\"\n\n\"Ok Ben.\" Says Ezzie.\n\n\"Well you see Ben. My wife used to Love coming up here as a kid. I thought it would be nice to buy a place. I started looking and then thought I would buy these two parcels and build a new bigger house, but Ray won't budge.\" Says Ron.\n\nI start thinking, and a plan is taking shape. With a little help from Ezzie this could be amazing.\n\n\"Ron, if I may ask, what has Ray turned down for an offer?\" I ask.\n\nRon looks at me. \"I rounded my last offer up to the next hundred thousand mark. That put it just a tick short of the 150% estimated sale price. He could have bought Any house on the lake.\"\n\n\"Ezzie, which of his offices deals with the most expensive homes?\"\n\n\"That would be his North Shore office. He thinks of it as his pride and joy.\" She tells me.\n\n\"Ezzie, please have him agree to the offer I am about to make please. Have him think it's a win-win for him.\"\n\n\"I will Ben.\" Ezzie says.\n\n\"Ron, I would like to make you an offer. I think it's a good deal. For both of us. I think you are right, Real Estate is a good fit for me. I will get Ray to sell you his cabin for your previous offer, plus 50k for any home improvements needed before he moves in. You give me a realtor's job in your North Shore office. Not an intern, a realtor's job selling high end houses.\"\n\n\"Ben, if you had a license I would jump on that offer. Do you have a license?\" He asks.\n\nGod I have to get better at wording things. \"I can get it online right?\" I ask.\n\n\"Well sure. It's a 20 hour course, and then the state license exam is done online too now.\" He says.\n\n\"Ok let's amend the deal. I get the license in the next two weeks, you give me the job with at least one guaranteed house to sell this summer so I can prove myself to you, and I get Ray to sign on the Dotted line by the first day of fall, or it's all null and void.\" I say.\n\n\"Ben, it's a win-win for me. I can't say no to that.\" He says with a smile.\n\nJust then his wife I am guessing comes out. She isn't bad for an older woman. She is a little taller, a little busty and hippy, and her robe is open just enough to show off her tits. She is giving me a big smile.\n\nRon turns and waves her over. \"Mary this is Ben, Ben my wife Mary.\" He says as he puts his arm around her waist. She has a weird smile on her face.\n\n\"Ezzie, why is she smiling at me?\" I ask.\n\n\"She Really liked watching you run in the house last night. She thought about you all night.\" Ezzie tells me.\n\n\"Oh God.\" I laugh in my head.\n\n\"Ron, do you have someone that can write up this deal? We should have it on paper.\" I say.\n\nRon smiles. \"You bet. I will get it written up, and bring it over to you later.\"\n\nI shake his hand. I nod and smile at Mary. \"It was nice meeting both of you. I look forward to working with you in the future Ron.\" I take the blanket and walk back around the hedges.\n\nKaren is waiting for me on the deck. \"What was that?\" She asks, smiling at me.\n\n\"Our future.\" I say.\n\nShe stares at me. \"Our future?\"\n\nI spread the blanket across some chairs to dry. I hold Karen in my arms. \"We can talk more about it later. Right now our immediate future starts back in the bedroom.\" I reach down onto the backpack and grab the wet lube bottle. \"You promised me something today, and Beth was too sensitive last night for you to keep a promise. So we are going back to the bedroom where you are going properly eat out Beth, while I fuck you in the ass.\"\n\n\"Really? Right now?\" She stares at me in disbelief.\n\n\"What better way to start the day? Plus Joe and his girlfriend are coming up, and once he arrives we have to behave.\" I pause for a moment and think. Then I ask Karen. \"Is it wrong that I am ok with a threesome with your friend, but not mine.\"\n\n\"Are you saying you never want to have a threesome with two guys, just two women?\" She asks, smiling.\n\n\"I don't know? I just know right here and now. I want you to myself, and well I know Joe's past. I don't want him anywhere near you sexually.\" I say.\n\nShe hugs me. \"And right here, right now I kind of see it the same way. I don't want another man. I want you, and that's all I want.\"\n\nWe hold each other until I squeeze her ass cheeks, and give her ass a pat. \"Come on. Naked on the bed. I have morning wood that needs attending to.\"\n\n\"Morning wood? Is that seriously a thing?\" She asks me.\n\n\"Why don't you get naked on the bed and you can find out.\" I say.\n\nShe leans up and kisses me. \"Can I ask a favor?\"\n\n\"Anything.\" I say.\n\n\"Can we do anal tonight maybe? Let me have a few drinks. Stretch me with the plugs first. I don't think I am ready right now.\" She says looking up at me.\n\nJesus I can't say no to her. \"On one condition.\" I say.\n\n\"And that is?\" She asks with a smile.\n\n\"I want you in one of the lingeries I bought tonight.\" I say.\n\nShe gives me a big smile. \"Which one?\"\n\n\"Lady's choice.\" I tell her.\n\n\"Deal!\" She says as she steps through the slider and stops. She pushes down her shorts and steps out of them. As she walks to the bedroom she pulls off her tee shirt. She looks over her shoulder at me as I watch her.\n\nShe smiles at me. \"I said no butt sex, I never said regular sex was off the table this morning.\" and she walks naked into the bedroom.\n\nShe crawls into bed to a half awake Beth. I hear them talking when Beth's voice rises a little. \"Uh uh. I need the little girls room first.\"\n\nBeth is half off the bed. She turns trying to grab Karen's hand. \"Karen I Have to Go Pee. Two minutes.\"\n\nI climb on the bed with Karen and half tackle her onto her back. She yelps in surprise. I silence her scream with a kiss. She moans into the kiss as I play with her nipples.\n\nWe have been kissing for a bit when I hear Beth behind us. \"Hey, no starting without me.\" She says as she gets on the bed beside us.\n\nI hop up grabbing Beth first and then Karen. I turn them sideways on the bed. As I grab them by the arm pits to pull their heads over the edge of the bed.\n\nI tell them. \"Ladies Friday night I concentrated on Karen, Saturday it was Beth, don't get me wrong it was Lots of Fun. But this morning is all about me. You two will lay side by side as I use one mouth and then the other. I will then do the same thing to your pussies. The only thing I promise, is to cum I Beth's pussy so Karen can keep last night's promise to lick it clean.\n\nBeth is closest. I push myself forward, and she opens her mouth. I push in until I find out how deep is too deep for her. I then fuck in and out of her mouth. I try to stop before going too far and making her gag.\n\nI look over at Karen and she is watching wide eyed. I pull out of Beth's mouth after making her gag and move to Karen. Like Beth she opens right up. She is doing her best to lick and suck as I slowly fuck her mouth.\n\nLittle by little I get deeper until she has the head of my dick in her throat. I stay there for a moment and then back off as she gags.\n\nIf I keep this up I am cumming in someone's mouth. I pull out and walk to the other side of the bed. I grab Karen's ankles and pull her across the bed. She giggles and screams. I grab Beth's ankles. She sees me coming and yells \"Weeee!\"\n\nWe all laugh. I move back to Karen and while I hold her legs to my chest with one hand, I use the other to help me aim and push into her.\n\nWe both moan. She looks at me and smiles. \"So if this morning is all about you shouldn't you be fucking me hard?\"\n\nI stop holding her legs and slide them around me. I lean over her so I am right in her face. As I do she wraps her legs around me and locks her ankles around me. \"I've got you.\" She says as she hooks her ankles.\n\nI start humping back and forth. I lean in and kiss her. \"Karen, it doesn't matter to me if we are having soft gentle sex or hard and fast. It's all the best sex I have had. I could live the rest of my life knowing your legs would be the only legs to ever wrap around me and I would be a happy man.\"\n\nKaren's eyes get teary. I lean into her neck and ear. I whisper quietly to her. \"I hope you feel the same.\"\n\nHer answer is to hug me so tight it's almost uncomfortable. She finally eases up and I look over at Beth. She has a very happy loving look on her face as she watches us. I tap Karen's thigh and she lets me loose.\n\nI move to Beth. Beth tries to put her hand up to stop me. \"No you two need to be alone.\"\n\nI pull her by her thighs to me and push myself in her. Beth lets out a small groan. Just like I did with Karen. I spread Beth's legs around me and lean over her. I am giving her slowly steady strokes.\n\nI look Beth in the eye. \"Do you know why you are here?\" Beth looks at me unsure what I am asking. \"Ok I will tell you why you are. Karen loves you, and I know you love her. She loves you so much she was willing to share me with you.\" I laugh. \"It's a huge sacrifice for me, but I love Karen.\"\n\nKaren shrieks \"BEN!\" and smacks my arm.\n\nBeth laughs. \"You jerk.\"\n\nI get serious and look at Beth. \"All the great sex aside, I am glad this happened. You are a beautiful woman where it really counts.\"\n\nBeth again looks at me confused. I put my hand on her chest. \"Your beauty is more than skin deep, you are beautiful inside as well as out.\"\n\nBeth looks over at Karen. They are both staring at each other with teary eyes. Beth asks. \"Are you sure he has no brothers or maybe cousins?\"\n\nKaren just shakes her head No.\n\nI stand up, pulling Beth's legs to my chest again. \"The sappy part of this morning's program has concluded.\" I fuck into Beth a little harder. \"Now back to this morning's originally planned programming.\"\n\nKaren sighs. \"Beth, I think I love a dork.\"\n\n\"God, I need to find myself a dork.\" Beth giggles.\n\nThey are cracking jokes and I start to pick up speed. Beth is letting out little moans as I bottom out. I was thinking of swapping back to Karen. I look over at her. She is watching us. I raise my eyebrows at her. She gives me a loving smile, and holds her hand up just a tad.\n\nShe wants me to fuck Beth. I speak up. \"Beth, I am in the home stretch. I am not swapping back to Karen. I am fucking and cumming in you. Once I do I want you to get on top of Karen and 69 until you both orgasm.\"\n\nKaren smiles at me. \"Blah blah blah. Do it already.\"\n\nOh ok it's on now. I roll her over. \"Doggy.\" Is all I say. Beth sticks her ass in the air and I shove in. I pull her back to me and hold her hips tight to me. I give her my A game. She is grunting and moaning as I slam into her.\n\nThe slapping sounds get a little wetter. The minute I feel her wetness seeping out it puts me over the edge. I pull her tight to me and groan as I cum deep inside of her.\n\nAfter a moment of staying buried in her to catch my breath. I look over at Karen. She is facing the wrong way on the bed. I spin my fingers in the air. \"Spin around Karen. You are facing the wrong way.\"\n\nShe spins, and slides right against Beth. I pull out of Beth, and Beth lifts her knee/leg over Karen's face. I get to watch in almost slow motion as a blob of cum oozes out of Beth. Gravity grabs a hold of it and it starts to drop. The string of goo attaching it to Beth gets longer and thinner. It's about halfway down to Karen's face the string breaks and the blob of cum lands on Karen's upper lip, and bottom of her nose.\n\nKaren doesn't let it deter her. She pushes her tongue right between Beth's lips and proceeds to lick her clean. I look down and see Beth shaking her head against Karen's pussy and I hear her licking, slurping and moaning as she goes.\n\nGod damn it! I freaking hate that feeling you get after sex sometimes to pee. I still remember everyone laughing when the teacher tried to explain \"some sperm left in the tube and your body wants it out\".\n\nAs I walk out of the bathroom I hear Beth moan/scream as she orgasms. They are just snuggling together on the bed when I walk in.\n\nI intentionally crawl between them, forcing them to either side of me. They are both laying on their sides against me with a leg over mine. God this is perfect.\n\nPerfection lasts just minutes. Beth rolls over groaning. \"I need the little girls room, and a shower would be a good idea.\" I watch her bum as she walks out of the bedroom.\n\nKaren kisses my chest and giggles. \"So you are planning our future?\"\n\n\"Yes I was serious earlier. I am making plans for Our Future.\" I say. \"For the summer and maybe after I graduate. I am getting my real estate license and selling houses on the North Shore for Ron next door. He owns Gold Star Realty.\" I say as I hold her to me and run my fingers through her hair.\n\nShe is surprised. \"How did you manage that?\"\n\n\"I am a people person. I sweet talked him into it.\" I say. I do not bring up the agreement to sell this place. Ray loves it. It will be a pleasure to have Ezzie make him agree to it.\n\n\"Ezzie, if I asked you to could I have you make Ray agree to it, but always regret it after it just in his own thoughts. He could never tell anyone his true feelings. Just have them in his head.\"\n\n\"I could Ben.\" Ezzie says\n\n\"I don't know if I can be that mean. I will have to think about it, Ezzie.\"\n\nKaren breaks my train of thought. \"Ben, those are expensive houses up there.\"\n\n\"I know Karen. That's why I told him I wanted to work in that office. Until I get my real career going I could probably make $500k a year if I really tried.\" I tell her.\n\nKaren's eyes go wide at the dollar amount. I smile at her. \"It just sort of happened as we were talking and untangling the blanket.\"\n\nShe propers herself up and stares at me in disbelief. \"I pour coffee for $15 an hour for a summer job, and your summer job will make you what? $50,000?\"\n\n\"Well to be honest I was hoping to sell two homes. So depending on the sale price $100-200,000 if I am lucky.\" I say as I hold her and look her in the eyes. \"Karen, any time I have ever thought about my future you have always been there.\"\n\nKaren gets an odd look on her face.\n\n\"Ezzie, what is she thinking?\" I ask.\n\n\"She is wondering if you are going to ask her to marry you. She is nervous and excited.\" Says Ezzie.\n\nI hold Karen to my chest and stroke her hair. \"Karen, nothing would make me happier than to call you my wife.\" I say, and I hear Karen's breath catch. \"But it's our senior year. I don't want to distract us from that.\" Karen lets out a small sigh.\n\n\"Ezzie is she ok?\"\n\n\"Yes she is a little disappointed, but excited you are talking the way you are.\"\n\n\"Thank you Ezzie.\"\n\nI pull Karen to me and kiss her softly. \"Plus I want to do it right, and ask your Dad.\"\n\nA tear trickles down Karen's cheek as she hugs me. I am thinking of rolling her over and making love to her when Beth comes to the door in a towel. \"Someone's knocking on the slider.\" She says.\n\n\"Oh shit. Ron.\" I hop up and pull on a pair of shorts. \"Karen put on something and come out.\" As I run out of the room.\n\nRon is halfway off the deck as I step thru the slider onto the deck, and call his name. He turns with a smile and holds up a couple of pieces of paper.\n\nHe looks at me in shorts only and smiles. \"Did I interrupt something?\" He asks.\n\nI laugh it off. \"No, I was in the back bedroom, and someone was in the shower. So is that it?\"\n\nHe hands me the paper. I scan it and it's all there. License in two weeks, at a minimum one house to sell or list as the contract states, and this property sold to him by the first day of fall for $450,000. I stop at that number. And look at Ron. \"$450?\"",
        "Ron looks at me. \"There is something about you I like kid. I rolled in some extra and removed the renovation money. It's a lump sum offer. I want this property. Get me this property and I think you will make a lot of money with my company.\"\n\nI smile. \"Yes sir.\" I sign my name on 'our' deal, and take a picture of both pages for my records. Ron hands me a folder with two copies of a purchase agreement for Uncle Ray's place that he has already signed, and every place on the lake that's up for sale. \"Have him sign and date both. He keeps one and I get one. Once it's signed we will arrange a time for the closing. If he wants to buy something on the lake, tell him to let me know. I will arrange it.\"\n\nHe then hands me his card. \"Call me the minute you pass the license exam.\"\n\nI take his card and shake his hand. Just then Karen comes out. I put my arm around her waist. \"Ron, this is my girlfriend Karen. Ray is her uncle.\n\nHe reaches out and shakes her hand. \"Very nice to meet you Karen. I think Ben is going to make a lot of money for both of us. He seems to be a very smart, personable kid.\"\n\nKaren smiles and rubs my chest. \"That's very kind of you to say. Maybe I will keep him around for a little while.\"\n\nRon laughs. \"You sound like my wife.\" He turns to walk away. \"Call me Ben.\"\n\n\"Yes sir. Just as soon as I pass.\" I say.\n\nWe watch him walk away and Karen turns to me. Her eyes are wide and sparkling. \"Oh my God Ben.\"\n\nI laugh. \"I know.\" I goose her ass, and she jumps. \"Come on, let's get showered and dressed. We need to find a breakfast place to celebrate.\"\n\nBeth comes outside dressed in shorts, tee shirt and flip flops. \"What are we celebrating?\"\n\n\"Fill her in, Karen. I am going to take a shower. I am just a few minutes into my shower when I feel the air move as the bathroom door opens. \"Hello?\" I ask.\n\nNo answer, until about 5 seconds later when the shower curtain pulls open. Karen is naked and stepping into the shower. \"I heard there is a water shortage. I thought we might shower together.\" She smiles at me as she looks at my growing hardon.\n\n\"Just shower Ben. I don't want Beth to feel left out like a third wheel.\" Karen tells me.\n\nI pout. She laughs as she puts some shampoo in her hand and starts washing my hair and massaging my head. My god that feels good. I lower my head to make it easier to reach.\n\nI open my eyes and I see her puffy nipples in front of me. I reach out and palm each boob and squeeze. She moans a little. \"Ben, we are here to shower.\"\n\nShe spins me into the spray. \"Rinse the shampoo out.\" As I am rinsing my hair a soapy hand grabs my hard on from behind and starts stroking me.\n\nKaren leans her head against my back. \"Would it help if I gave you a handjob and took the edge off?\"\n\n\"Could we help each other?\" I ask.\n\nKaren giggles. \"I could stop?\"\n\n\"No. Don't stop.\" I gasp out.\n\n\"I didn't think you would want me to stop. I can feel you throbbing in my hand.\" She squeezes more liquid soap on me. Her hand is gliding up and down and me. Squeezing as she goes and rubbing my head as she rubs up and down.\n\n\"Ben, I want to stroke you while you cum. I want to make you cum. I want to feel you cum in my hand.\" She moans against my back. Her hand is flying now and squeezing tight at my head.\n\nFuck this is good. I grunt. \"Don't stop. I...uugghhhh.\" I cum all over the wall of the shower. Karen keeps stroking me and cum is flying everywhere.\n\nShe had moved beside me as I was cumming and is giggling as I cum. \"Oh my god it's everywhere.\"\n\nI have to reach down and push her hand off as I shiver. She kisses my arm and laughs. \"One last rinse and that will be a nice clean dick.\"\n\nShe shuffles in front of me and wets her hair. I am standing there catching my breath just watching her.\n\nShe finishes and takes the sprayer down and sprays the cum off the shower wall. She then reaches for my dick, and softly rinses me clean.\n\nShe shuts off the water and pulls the curtain. She steps past me. She grabs a towel and wraps it around herself as she walks out. I grumble to myself and step out of the shower.\n\nI get dressed and we head into town. Karen seems to know the local spots from coming up here over the years.\n\nWe wind up at a nice spot and we all have a huge breakfast. Eggs, bacon, toast, pancakes, coffee and best of all Mimosas before and after breakfast. It's still early but the town shopping area is opening.\n\nThe girls want to go window shopping. I just fall in line behind them. All the way down one side, cross the street and back on the other side.\n\nAt one point I am sitting on a bench waiting for them to come out of yet another store, when I smell warm sweet deliciousness. I look around and there is a bakery a few doors down. Oh I am definitely going there.\n\nThe girls come out to me eating an almost plate sized frosted coffee roll, and I have two large pastry boxes tied beside me. Beth has a bag from the store. She says she saw a cute shirt, I am sorry but I don't care what the shirt looks like. They are happy, so I am good. We share the coffee roll and make our way to the car.\n\nAs we get back to the cabin and clean up a bit. Joe texts me.\n\nJOE - Linda and I are on the road. See you in 2 hours or so. I am stopping for beer. Need anything?\n\nME - Nope all good.\n\nThe ladies decide they want to get some sun. Karen turns to me smiling. \"And we mean get an actual tan. With our suits on.\"\n\nI pout, and say. \"Party pooper.\"\n\nThey laugh and head to the bedrooms. When they emerge they are both in regular bikinis. Don't get me wrong. They look great, but it's not the teeny weeny bikinis.\n\nI kiss Karen. \"I have some studying to do anyway.\"\n\nShe and Beth walk down to the chaise lounges, and get set up on the deck. I go online and download the text book for the exam, and start watching the first virtual class. The class is very basic 101 stuff I already know from my business courses.\n\nI let the video play, and flip to one of the two practice tests they have in the back of the text.\n\nIf this were the real test I would have just missed passing. The business, banking and fiduciary parts I ace, but it's obvious I don't know enough about the actual real estate part of it.\n\nThe first class ends. I take the short review at the end, and I start #2. I tune out the class since I can tell by its title it's a subject matter I know, and I turn back to the text.\n\nAfter reading through and absorbing three chapters the second class ends. This will be a little time consuming, but nothing I can't handle. I should have my license by the end of the week. Studying and cramming is easy for me. I am lucky like that.\n\nI look down at the ladies. They now have the chairs flat, and are laying face down. I look at their butts just rolling up enough to be noticeable. Remembering how their cheeks rippled as I was fucking them from behind.\n\nCrunching gravel interrupts my thoughts. Joe is here. I see the girls heads pop up. I wave them up, and head to the driveway.\n\nJoe pulls into the driveway and hops out. He stops at the front of the truck waiting for Linda to join him, and he looks around. \"Dude this is Nice.\"\n\nHe puts his arm around Linda and they walk to me standing at the edge of the grass.\n\nLinda says to me as they approach in a joking manner. \"What, you are too good to come greet us?\"\n\nI kick my barefoot up in the air. \"No, I am too shoeless.\" As I say this Karen and Beth arrive.\n\nLinda sees them in bikinis. \"Is it too late to lay out with you guys?\"\n\nKaren answers. \"It's like what, a little after noon? Get changed and the boys can cook lunch while tan.\"\n\nI introduce Beth to Joe and Linda. Linda bats her baby blues at Joe. \"Will you get our bags so I can get changed and tan with Karen and Beth?\"\n\nThat turns into Joe getting the bags and me getting the beer and snacks he bought.\n\nI put the beer and the deck and Karen smiles at me. \"You don't mind us tanning do you?\"\n\nI hug her and goose her. \"I wish I had more skin in my hands right now.\" I say as she slaps my hand off her bum.\n\n\"Stop!\" She says giggling.\n\nShe and Beth are giving me looks. \"What?\" I step towards Beth. \"Are you feeling left out?\" I ask.\n\nBeth backs up, pointing at me. \"Behave Ben. You are the one that said no fooling around.\"\n\n\"So if I made the rule I can break it right?\" I ask.\n\nKaren is folding the blanket to carry it. \"Beth, come help me with this.\" Karen looks at me. \"And you keep your hands to yourself.\"\n\nJust as they step off the deck. Linda steps out onto the deck. I won't say she looks bad, because she certainly doesn't. She has an athletic body, is just about the same height as Karen and Beth, but a much trimmer build. She is at best a healthy A cup or small B, her ass and hips aren't flat, but not curvy either.\n\nTypical Nordic blond hair and blue eyes. She is pretty, just not my body type. Joe and I watch them walk down onto the grass. \"Damn, I hate to see her go, but love to watch her leave, and he laughs.\"\n\nThe early part of the afternoon is spent with the girls sunning themselves. While Joe and I have a few beers and just shoot the shit.\n\nJoe and I are hungry and I fire up the grill. I have steak tips, burgers and hot dogs going, while Joe and I start eating chips. The ladies head in and get the salads out and before you know it I hear the blender going. They are making frozen drinks.\n\nThe next hour or so is cooking, drinking and eating. We are all just talking, laughing and having a good time. I don't know where the time went but before you know it the sun is setting.\n\nThat reminds me of the bakery stuff I got. I put the two boxes on the table and we attack a variety of giant cookies, cupcakes and pastries I got at the bakery earlier.\n\nWe are all stuffed and feeling fine from all the drinking. We go down to the blanket to watch the fireworks being set off from a barge in the middle of the lake.\n\nJoe gives me a bit of a look as I lay down with Beth on one side and Karen on the other.\n\nI laugh to myself. \"Ezzie I don't even need you to tell me. I know Joe is shocked the three of us are so comfortable and cuddled together like this. Part of him thinks it's cool I could be having a threesome, but a bigger part is jealous.\"\n\n\"You are correct Ben.\" Ezzie says.\n\nI just look over and give Joe a shit eating grin and laugh to myself. \"Let him guess.\"\n\nThank god Karen is on my far side. No one can see me rubbing her ass under her bikini bottoms. If Linda were on Joe's other side I would be doing the same to Beth.\n\nThe fireworks are pretty good. To be honest I would have been happy to lay out on the lawn with Karen & Beth again making our own fireworks. The show is over and the three of us are just laying together relaxing.\n\nI figured Joe and Linda were doing the same. Until I hear them kissing. The two of them break the kiss and see all three of us watching and smiling at them.\n\nLinda gets a little embarrassed. She stands up and pulls on Joe's arm. \"We should, um.. go to bed.\"\n\nWe all say Goodnight and they walk inside. I stay there with Karen and Beth relaxing. I slip my hand under Beth's bikini bottoms like I have been with Karen.\n\nBeth looks up. \"Hey guys.\" She says. \"Am I a party pooper if I said I would like to just cuddle and sleep tonight?\"\n\nKaren smiles across my chest at her. \"I was kind of thinking the same thing.\" She rubs my chest. \"Are you ok with that Ben?\"\n\n\"Good thing you jerked me off in the shower this morning.\" I say.\n\nBeth giggles. \"I knew you two wouldn't behave in there together.\"\n\nI turn to Karen. \"I think you realize I can never say no to you.\" I turn to Beth. \"Beth, I hope you know I am really glad this weekend happened like this. The amazing sex aside. It has been amazing getting to know you. I am glad you and Karen are such good friends.\"\n\nBeth reaches up and kisses my cheek. \"Thank you Ben. I am very happy you and Karen finally took that next step. All she could talk about after last summer was you, and yes the sex with both of you has been a lot of fun.\"\n\nBeth is on the far side of the blanket. She pulls the excess over us. \"For now let's just cuddle.\" Karen pulls the blanket over her and the three of us relax and snuggle together outside on the lawn.\n\nA little while later. I nudge the girls. I don't want to fall asleep out here again. \"We have a nice comfy bed inside. Let's go.\"\n\nWe get up, fold the blanket and head inside. As we all step through the open slider Linda is walking naked to the bathroom with her face down and her hand under her face. She looks up, sees us and screams as she runs for the bathroom. She slams the door behind her. The three of us laugh. It looks like Linda took a hell of a facial and was heading to the bathroom to clean up.\n\nJoe comes running out of the room wrapping a towel around his waist as Linda slams the bathroom door.\n\nJoe sees us and just mutters. \"Oh fuck.\" The three of us just laugh. The laughter dies down and Linda is yelling from inside the bathroom. \"Joe, get me a towel. I am naked in here.\"\n\nI walk up to Joe, yank the towel off his waist. He swears at me and dives back into the bedroom. I take it to the bathroom and knock. Linda hides behind the door and opens it. She takes the towel and closes the door.\n\nJust a few seconds later Linda comes out with a clean face, and wrapped in a towel. She fast walks past us, and we all start laughing again.\n\nWe walk towards our bedrooms on the other side to the cabin. Beth looks at us and turns towards what should be her room. \"I should go in here.\"\n\nI reach out and take her hand. \"Nope.\" I say.\n\nBeth lowers her voice. \"But Joe and Linda.\"\n\n\"I don't care. Do you care Karen?\" I ask.\n\nKaren smiles. \"Nope.\"\n\nI reach out and take Karen's hand. I start walking backwards into the room. \"There are two rules for sleeping unmolested tonight. I get the middle, and we all must be naked.\"\n\nKaren laughs. \"If we are naked you won't molest us, but if we are clothed you will.\"\n\nI smile. \"These rules only apply until sunrise. Then all bets are off.\"\n\nBeth closes the door and removes her bikini top. \"I can live with that.\" She starts to remove her bottoms.\n\nKaren shrugs her shoulders. \"What the hell.\" She pulls off her bikini.\n\nI strip and lay in the middle of the bed. They ladies crawl in on either side. It's snug, but it's also pretty cool going to sleep with a naked woman on either side of you.\n\nI wake up to an amazing thing. Beth is rolled over facing the other way. Karen has the sheet pulled down off me and is giving me a soft gentle blowjob.\n\nShe notices me wake up and smiles as she pops me out of her mouth. \"I was wondering how long you would stay asleep.\" Karen says as she sucks me back into her mouth a little harder this time.\n\nNow that I am awake she is being more aggressive sucking on me. I just moan and roll my eyes, but I have to ask. \"How long were you doing that before I woke up?\"\n\nShe pulls her mouth off me, but is careful to let some spit drool out of her mouth as she strokes me up and down. \"Probably three minutes or so. I thought I would get a head start on the morning wood.\" She says with a laugh.\n\nKaren dives back down on me and really starts sucking and licking my head. She isn't fooling around.\n\nI start groaning. \"Please Karen. Don't stop. Just like that.\" I beg.\n\nBeth rolls over half complaining because we woke her up. \"Keep it down...oh.\" She sees what Karen is doing. Beth looks at me, and sees I am about to cum. \"Come on Ben. Give your honey some breakfast. Cum in her mouth. That's what she wants. Do it Ben.\"\n\nThat does it. It's not another 30 seconds. I groan her name \"Karen!\" And I cum in her mouth.\n\nKaren smiles up at Beth, as she crawls over me towards her. I can see Beth's eyes widen. Leans down and over Beth. She gives her a passionate kiss. After a moment they break the kiss. Beth sighs. \"Thank you for sharing you breakfast with me.\"\n\nKaren slides between Beth and I so I slide over a bit. \"Any time bestie.\"\n\nThe two of them snuggle together. We lay there for a few minutes. The girls seem to have nodded back out. I hear some movement out in the house. Linda and or Joe must be awake. I might as well get up and take a shower.\n\nI grab a towel and head to the bathroom. I start my routine. Morning pee, and I have moved onto brushing my teeth. I am just spitting out when the bathroom door opens. Beth walks in wrapped in a towel. She locks the door behind her.\n\nShe drops her towel and steps around me with a smile to the shower. \"I heard there is a water shortage. Karen suggested we should shower together to save water.\"\n\n\"Um Ezzie?\" I think.\n\n\"She was thanking Karen for everything this weekend. She really needed it, but was hoping for morning sex when you got up out of bed.\" Says Ezzie. \"Karen sent her in here for one last time in the shower.\"\n\nI smile at Beth as I step into the shower and close the curtain. \"Karen is so thoughtful.\"\n\nBeth turns on the shower nice and hot and looks at me. She gets very emotional and hugs me. \"Hey hey. It's ok Beth!\"\n\nBeth looks up at me. \"No Ben I wasn't in a good place. Before this weekend all men sucked. I was thinking I would never find a nice guy. Then I finally met BEN! The friend she is Always talking about. You made me see there are nice guys still out there. You and Karen have been so kind, and Oh My God. We had anal, a threesome and I had sex with my BFF!\"\n\nKaren moves and the shower splashes over her head putting her hair in her face. I spin us around so I am blocking the spray, and Beth pushes her hair back. \"Seriously Ben. I really needed this emotionally, physically & spiritually. I needed it, and you and Karen have been so kind. This is my thank you to you.\"\n\nKaren drops to her knees and starts blowing me. God she and Karen both do that so well. A little different, but so well. I look down and I can see Karen reaching between her legs with her left hand. I am sure she is rubbing herself.\n\nShe has me hard and I am guessing herself wet. She stands up and kisses me. She breaks the kiss and looks at me. \"I have one rule, well two.\"\n\n\"Ok\"\n\n\"Not my bum.\" She looks at me waiting for me to answer.\n\n\"Ok\"\n\n\"And no cumming inside me. Spray it on me like a fire hose. Give me a warning and I will let you cum in my mouth.\" She playfully pokes at my chest. \"What I don't want is little drops of your cum oozing out of me on the drive home. I want to be nice and clean, after getting dirty with you.\" She says with a smile.\n\nI grab her by the hips and spin her around. She giggles and bends over for me. Her hand is waiting between her legs as I move closer to her. She grabs me with her fingers and guides me into her pussy.\n\nOnce I am in I hold her hips and start fucking her. She braces herself against the shower wall with one hand and rubs her clit with the other. She looks over her shoulder at me. \"I want to say I want your cum inside of me, but I can't Ben. I want to finish you with my mouth. Will you cum in my mouth Ben?\"\n\n\"I have one rule of my own.\" I say.\n\nShe smiles at me. \"And that is.\"\n\n\"Ladies first. I am not pulling out until you cum. If you don't want my cum oozing out of you on the ride home. If you don't want my oozing cum to remind you of this last fuck in the shower. You need to orgasm first. If I cum first my oozing cum will be a reminder to you that you lost the race to orgasm.\" I say.\n\nI feel her fingers speed up on her clit. \"Oh I am not losing buddy. Don't forget you came 15 minutes ago, I didn't.\"\n\nI keep a firm hold on her hips and fuck her nice and firm. We are making wet slapping sounds that echo a bit in the shower, and I don't care.\n\nBeth's breathing is getting heavier. She is definitely cumming first. \"Sounds like you are getting close Beth. I guess you really want my cum in your mouth.\"\n\nShe moans. \"Just keep fucking me. Make me cum. I am sooooo close.\"\n\nJust seconds later she lets out a long low moan and I feel her clenching me as I fuck her. \"That's my girl.\" I say as I soften my hold on her ass and rub her back and bum as she cums.",
        "She sighs and looks back at me. \"Don't stop now. Someone can knock on that door at anytime. Fuck me Ben. Fuck me hard and cum for me.\"\n\nYou don't have to tell me twice. I grip her hips and start slamming hard into her.\n\nShe gasps out at the suddenness of the hard fucking. I am fucking her hard. Twice we slip and almost topple over. At the last minute I gasp out. \"Where?\"\n\nShe almost falls trying to pull away from me and turn to have me cum in her mouth. She misses the first shot. I land on her nose and upper lip. She sucks me into her mouth for the rest.\n\nShe moans around me as I give her another good two shots. I feel her tongue licking around my head. I finish cumming, she pops her mouth off me and swallows.\n\nShe stands up and starts laughing as she squeezes by me for the shower. \"Do I look as bad as Linda did last night?\" She laughs.\n\nWe both end up laughing as I answer. \"No, she was covered.\"\n\nShe is spraying off her face off. I reach out for the shampoo. She pushes her hair back off her face one last time. I reach down and start washing her hair. She tries to say something and I put my finger to her lips. \"Ssshhh. Let me do this.\"\n\nI finish washing her hair and rinse it. I then use a loofa and wash her. One last time I turn her into the water to rinse off. She tries to start washing me.\n\n\"Nope. You should hop out and go get dressed before they find us like this.\" I say.\n\n\"I don't care if they do.\" Beth says rather defiantly.\n\nI don't either to be honest. I know I could easily have Ezzie make them even forget it, but I want it to look and feel right to Beth.\n\n\"Beth, this was me thanking you for this weekend. As much as you say Karen and I were kind to you. You were kind and sweet to us. Even if this weekend never happens again. I want you to know you are welcome to join us on Labor Day too. No pressure or strings.\"\n\nBeth grabs me in a wet bear hug. \"Karen is so lucky.\" Beth says as she hugs me.\n\n\"Yes she is.\" I reply. \"She has a great BFF.\"\n\nShe looks me in the eye, smiles and pulls my face to hers giving me a soft kiss. She then turns and steps out of the shower, and a moment later I hear the bathroom door open and close.\n\nI shower up quickly and get out. I am not 5 minutes behind Beth. I step out of the bathroom and Joe is there in the hallway. \"Dude! You and Beth showered together. Dude!\"\n\n\"Ezzie, did he tell Linda or did Linda notice us?\"\n\n\"No Ben. Just Joe. He was waiting to see who else was in there with the shower running.\" Says Ezzie.\n\nSorry Joe. \"Ezzie, make him forget he saw Beth come out of the bathroom. He saw me, we said Hi, and I went to my room to get changed.\" I say.\n\n\"All done Ben.\" Says Ezzie.\n\nI turn and walk in my room and close the door. Karen has a towel wrapped around her. She drops it and comes and hugs me naked. She holds her naked hips against my towel covered crotch. \"So I hear you and Beth got very dirty, and then nice and clean?\"\n\nI hump against Karen. \"Why didn't you come in?\"\n\n\"In that little shower?\" She laughs.\n\n\"No instead of.\"\n\n\"I think you know the answer to that, Ben. After today she will be back to a dry spell. She and I had been on an almost year long one. She needed one more go, and some alone time with you was nice for that. I can have you almost whenever I want.\" Karen says to me.\n\nI stroke her hair back. \"I told her she is welcome to join us on Labor Day too. No strings for a repeat.\"\n\n\"Oh you are so sweet, but god I hope we repeat it.\" She giggles. \"This was Amazing!\"\n\n\"I just don't want her to feel pressured.\" I say.\n\nKaren bends down and re-wraps her towel. \"I knew I loved you for a reason.\" She says as she kisses me and walks out of the bedroom. I hear the door to Beth's room open. \"See I told you, you would be back Labor Day.\" And the two of them giggle.\n\nI shake my head. I am the guy with a magic ring, and yet somehow those two are in control. Now I am starting to understand some of the things my Dad has said about my Mom over the years.\n\nAfter Karen showers, the cabin starts getting active. The girls start washing sheets and towels while cooking an amazing breakfast. It's a feast. Joe and Linda missed an overnight, and we went out to breakfast one day.\n\nBreakfast food was plentiful. We all stuffed ourselves. While the women cooked breakfast. Joe and I cleaned the grill, and straightened out the yard, deck furniture, and take out the trash.\n\nWe head in and I realize there are two shopping bags she is packing. One is the lingerie store I bought her stuff at before coming here, and the second is the shop in town.\n\n\"Hey wait a minute. I Never saw you in lingerie.\" I complain.\n\n\"I know.\" She says. \"I am sorry, but the nights got away from us. Beth and I even got little matching ones in town for you.\"\n\n\"What?? When??\"\n\nKaren giggles. \"When Beth told you she found a cute shirt.\"\n\nI look at her confused. Karen sighs. \"When we came out of the store and you were eating that ridiculously large coffee roll.\"\n\n\"Wait, there are two lingeries in that little bag?\" I ask.\n\n\"Two, matching lingeries.\" She says with a smile.\n\n\"Let me see.\"\n\n\"Nope. I promised Beth you wouldn't see them until you see them on us together.\" Karen says.\n\n\"What about the special lingerie you got at the store with me? Can I see that?\" I ask.\n\nShe stands in front of me and looks in my eyes. As she rubs her hands on my chest. \"First chance I get to wear it for you, I promise I will. Until then it stays in the bag.\"\n\n\"I don't like you.\" I say with a pout.\n\nShe hugs me tight. \"Aww the poor little boy. It's ok I still love you.\" She giggles.\n\nShe steps back. Put both bags flat in the suitcase and closes it.\n\nFrom there it's take the luggage out to the car. Make the beds when the sheets and towels are dry, and lock up.\n\nI leave a nice bottle of scotch on the table, and the leftover burgers and hot dogs in the freezer.\n\nI have to get home and study for my Real Estate license."
    ],
    "authorname": "ao1701e",
    "tags": [
        "threesome",
        "lesbian",
        "anal",
        "anal sex",
        "group",
        "group sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/a-ring-named-ezzie-pt-04"
}