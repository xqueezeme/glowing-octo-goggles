{
    "title": "The Last Princess of Lorrea Ch. 08",
    "pages": [
        "A deep cough woke her up. Elena blearily opened her eyes, taking in her surroundings- most notably the strong muscular army wrapped possessively around her bare waist. Elena lifted his arm gently inching out from underneath it. Henry coughed again in his sleep, causing Elena to pause before slipping out from under his arm completely. She slid over to the edge of the bed and looked over her shoulder at Henry, his handsome features lit by the flickering light of the fire. Elena noted that she must not have been asleep for very long, as her hair was still slightly damp.\n\nShe looked around and spotted what she was looking for- the brass statue of the archer. She paused for a second, taking in the sounds of the crackling fire and Henry's soft breathing, before rising slowly from the bed. She had only taken a few steps before letting out a shriek as she lost her balance and fell crashing to the floor. Elena looked around her to see what had caused her to fall over and noticed the ankle cuff that tethered her to the bed.\n\nElena heard the bed creak as Henry rolled over to the edge, gazing down at her sleepily. \n\n\"And where are you going?\" he asked, a smirk playing across his lips even in his sleepy state.\n\n\"Untie me\" she growled, realising how ridiculous she must look- on the floor, totally naked, chained to a bed.\n\n\"MMMmmm, I don't think so\" he replied, rubbing his tired eyes.\n\n\"I am not an animal - you can't keep me chained to a bed\" she spat, trying to pry open the ankle cuff with her bare hands, which proved unsuccessful.\n\n\"I can and for the time being, I think it a prudent precaution\" he grumbled sleepily.\n\n\"Precaution? From what exactly? You said it yourself, we have slept together in the same bed almost as long as i've been here\" she said, annoyance etched into her tone.\n\n\"From you, my beautiful scheming Princess. You think that I wouldn't notice that you've taken a particular fancy to one of my sculptures? The archer?\" he said, his eyes alert and piercing, no longer veiled with sleep.\n\nElena kept her face impassive. \"I don't know what you're talking about\" she said with a shrug.\n\n\"Come now, I've slept in this room for many years. I happened to have noticed that that particular statue is a few inches from it's proper place\" he said, as he reached out for the chain, which was stretched taught, caused by the angle that Elena lay on the floor.\n\n\"I was only looking at it, from an artistic point of view. The bow is slightly out of scale with the rest of the statue\" she lied haughtily.\n\n\"I'm sure you were only interested in it for it's, er, artistic value\" Henry chuckled. \n\n\"If anything\" Elena countered, \"YOU are the one that should be chained to the bed, it's YOU who can't be trusted\".\n\nHenry let out a bark of a laugh. \"So you want to chain me up Princess? I never thought that you had such deliciously dark thoughts. Maybe down the road we can revisit that one\" he said, his tone dripping with innuendo.\n\nElena looked at him, her eyes narrowed. \"You know very well what I meant\" she said, a pink blush spreading across her face.\n\n\"Hush now, Princess\" he said softly, as he pulled on the chain. \"It's late and I'm exhausted - come back to bed\" he said, mid yawn.\n\nElena snorted. \"You think I'm going to willingly get into bed with you? You must still be dreaming\" she said, yanking her chained foot out of his grasp.\n\nHenry sighed and scratched his head. \"Fine\" he said sleepily, rolling over, a loud groan issuing from the mattress.\n\nElena stood up and inched towards the bed, reaching out for a pillow, but Henry pulled it out of her reach, along with the bedsheets. \"Oh no, Princess\" he muttered, \"it's all or nothing\" he said, his eyes closing slowly.\n\nFuming, she lay back down on the cold floor, muttering to herself as she stretched out and attempted to find a comfortable sleeping position. She was so angry with Henry that she wouldn't have been surprised if actual steam was billowing out of her ears. After many minutes of tossing and turning, she found a relatively comfortable position on her side, the only problem was that without the sheets and a mattress, she was cold. Elena pulled her knees up to her chest and tucked her hands between her thighs, warming them. She drifted off to sleep listening to Henry's light snoring, but awoke a few hours later, shivering from cold. \n\nThe fire had died down to a collection of glowing embers and her ankle cuff denied her the possibility of stoking or fixing it. She turned fitfully for almost an hour, but failed to fall asleep due to the freezing temperature. \n\nLoathe as she was to slip into bed with Henry, it was the only option other than catching a death of a cold lying on the floor. Elena seriously considered just letting herself get sick, but her oath to her father steered her thinking clear of that conclusion, for if she were to gain any leverage, she would need her wits about her and not be incapacitated by fever or worse.\n\nShe got painfully to her feet, and approached the bed shivering. She hoped that Henry would have kept to one side of the bed, but he was obviously so accustomed to sleeping alone that he lay prone in the middle of the bed.\n\nElena gingerly sat down on the edge of the mattress and slowly lay down, trying her best not to disturb the large slumbering man beside her. As she lay on the edge of the mattress she realised that it was a little warmer than the floor, but not warm enough to cause her shivering to subside.\n\nShe reached over and gently lifted the sheet that was covering Henry and slipped under it, holding her breath for a moment as Henry's snoring ceased suddenly, but she relaxed as she didn't feel him stir. Elena inched a little closer to Henry, using the heat radiating off his naked body to warm up. The shivering continued though, despite their close proximity.\n\nElena slowly rubbed herself against the mattress, hoping the friction would warm her a little. She yelped suddenly, as she felt Henry's arm wrap around her stomach and yank her across the bed against him.\n\n\"My goodness, it's like hugging and icicle!\" he grumbled as nuzzled sleepily against her neck.\n\n\"Let... let... let go of me\" she said, her teeth chattering.\n\n\"Make me\" he breathed warmly against her neck.\n\n\"As you wish\" she whispered, reaching behind her and wrapping her ice cold hand around his soft shaft.\n\nHenry gasped and pushed her and her freezing hand away from his member, swearing loudly. \n\nElena lay back and burst into peals of raucous laughter, she couldn't help herself. It had been a while since she had done anything of the sort and it seemed to have opened up a dam, for she couldn't stop laughing for quite a while.\n\nHenry propped himself up on one elbow and surveyed the giggling Princess with curiosity. Despite bearing the brunt of the joke, he smiled down upon her, her beauty much more pronounced when she was smiling and happy. He wished she would do that more often, rather than the usual haughtiness he encountered.\n\n\"I'm glad you found that amusing, but i'd appreciate it if for the rest of the evening you'd keep your hands to yourself, my ice Princess\" he said as he grabbed hold of one of her wrists playfully.\n\n\"I will if you will\" she hiccoughed, her laughter slowly subsiding.\n\n\"You may be interested to know Princess, that that ankle cuff has a matching pair of wrist cuffs\" he said, his voice still light and non-threatening.\n\nElena's laughter died at once. Her eyes narrowed as she gazed at him, taking in his unblinking stare.\n\n\"That won't be necessary\" she said in a low voice as she pulled her wrist from his grasp and rolled over to escape his piercing stare.\n\n\"Come now, don't be like that\" he cooed to her back, \"I was only joking Princess\" he said, his fingertips tracing the curves of her shoulder and her neck.\n\nGoosebumps erupted all over her skin, even though Henry's closeness provided her much needed warmth. She shivered as she felt his lips plant soft kisses on the back of her neck and shoulder.\n\n\"Please... stop\" she hissed, pulling her shoulder away from his lips.\n\n\"Why should I stop?\" he murmured softly as he planted more kisses between her shoulder blades.\n\n\"Because... it's wrong\" she moaned, grateful that he couldn't see her face, the attention paid to her neck rendering her expression ecstatic.\n\n\"It doesn't feel wrong, though, does it?\" he whispered against her ear, one of his hands moving to cup her breast gently.\n\n\"Yes it does\" she answered, her voice a little stronger, her fingers prying his hand off her breast.\n\n\"Why must you be so stubborn Princess? Can't you see that this is an arrangement that could suit you well?\" he moaned, exasperation in his voice.\n\n\"It does not suit me, to be chained like an animal\" she said slowly, \"It does not suit me, to be imprisoned - however golden the cage may be\" she said, her voice growing stronger by the minute.\n\nHenry rolled her gently onto her back, and looked down at her serious expression.\n\n\"It is only a cage if you choose to see it that way, Elena\" he said softly.\n\nTears welled up in the corners of Elena's eyes. She couldn't control it, Henry's use of her name was melting that tough exterior she had been building just moments ago. She blinked to clear her vision, causing tears to leak out of the corners of her eyes and roll soundlessly into her hair.\n\nHenry reached down to wipe away her tears but Elena turned her head away, his fingertips gently teasing her hair instead.\n\n\"My mother, may she rest in peace, before she die, called me into her chambers\" he said, choosing his words carefully. \"She had a knack for seeing the big picture that my father often missed. She always favoured a diplomatic solution over a military one, if it was possible\" he said, as he continued to run his fingers through her damp hair.\n\nElena's gaze was fixed upon the dark night skies, but she listened curiously for she did not know much about the Queen of Kravaolia and the loving way Henry spoke of her, was a bit of a surprise.\n\n\"She said that she wanted me to be happy and that she knew that I, unlike my father, was happiest during peace times, not in the heat of battle\" he continued.\n\n\"She sensed a brewing danger on the frontier, I do not know how, but she did. She had heard that your mother was inviting young men from across the land to seek your hand in marriage and she proposed that I pay you a visit\" he said watching Elena's eyebrows contract in surprise from this news.\n\nElena turned her face back to look up at the prince, his seriousness unnerving her slightly. \"I do not remember any mention of a Kravaolian suitor\" she said slowly with a frown.\n\n\"Yes, that is because she died a few days later, before she could arrange it. I was too overcome with grief to think much of that request and my father would never approve of it anyway- he hated your King more than any other\" he said, laying back down against his pillows.\n\nThey lay side by side, the heavy silence punctuated only by the rolling thunder outside.\n\nElena did not know what to think as she lay next to Henry, her fingers playing with the golden chain around her neck. Would she have consented to marry him if she had met him prior to all this mess? Elena didn't know what to think, her present knowledge of Henry obscuring the possible Henry of the past.\n\nElena wished to ask Henry something that had been bothering her for almost two years now, but she needed to broach it tactfully.\n\nElena rolled over onto her side pulling the sheet over her chest, this time facing Henry, pushing herself up slightly on one elbow so she could see his face properly.\n\n\"I want to ask you something\" she said slowly, watching his face closely.\n\nIt was Henry's turn to look surprised. He turned his head to look at her, taking in her serious expression. \"Ask away\" he answered.\n\n\"Why did Kravaolia attack Lorrea?\" she asked, her voice half query- half pleading anguish.\n\n\"Because Lorrea was going to attack Kravolia\" Henry said simply.\n\nElena stared back, dumbfounded. \"What?! Where did that come from? It's simply untrue!\" she said indignantly.\n\n\"I have it on good authority Princess, that your country was indeed planning an attack\" he said evenly.\n\n\"But that's absurd! My father would never have done that!\" she said, shaking her head.\n\n\"I know you wish to think that my darling, but he did\" he replied, in what she assumed he meant to be a soothing voice, but to her it was more condescending. \n\n\"A king doesn't often inform his daughter of all his military decisions\" he said, squeezing her hand gently.\n\nElena pulled her hand away. \"He always included me. I knew every move he was going to make, every troop movement- everything!\" she said hotly, her tone firm and forceful.\n\nHenry frowned in confusion. \"That is strange. Our intelligence report told us quite the opposite\" running his fingers through his own hair.\n\n\"Where did this intelligence come from?\" she asked, gripping his hand.\n\nHenry laughed. \"I don't think I can reveal that Princess, inner workings of our intelligence regiment and all\" he said, squeezing her hand back gently, his soft dark eyes watching her face.\n\n\"I do not have an army any more, there is no reason that I cannot have this small piece of information\" she said, the words leaving a bitter taste in her mouth. \"Please, I must know, for my peace of mind\" she said, her eyes gazing into his as she laid her cool hand on top of his warm muscular chest. \"Please\" she begged him.\n\nHenry looked over at her anguished face, considering his options. \"Alright, I suppose I can give you a general hint without giving away too much\" he said slowly, rubbing his thumb over the top of her hand pressed against his chest.\n\n\"Let me see... Let me see. Ah yes, I believe it came from Lord Caspian's regiment\" he said, scratching the side of his head as he reminisced.\n\nElena's heart thudded painfully against her chest. She asked her next question, hoping to be proven wrong.\n\n\"And the one who presented the information to you or your father- it was Lord Caspian or the intelligence bearer himself?\" she asked, waiting with bated breath.\n\n\"It was Caspian who presented it to my Father\" he said, shrugging. \"Look, does this really matter, Princess? Princess?\" he called to her, yet Elena's thoughts were so far removed that she barely heard him call her.\n\nIt was Caspian, she groaned inwardly. All this war, caused by his lies, all the death and destruction had been because he was scorned. A few months ago she would have told herself that she was being a little too self involved to believe that a war had broken out because she refused a man's hand in marriage. However, her meeting with Caspian previously confirmed her reasoning- he could not let go of his hatred, he bore her refusal as a personal front which he had turned into a crusade of sorts.\n\nIt was her fault. All her fault. This understanding crashed down upon her, each time with more force - it was all her fault.\n\nShe sat up suddenly, pulling her knees towards her and wrapping her arms around them as her body was racked with sobs.\n\nStartled, Henry crouched beside her, putting a comforting hand on her shoulder, but she didn't respond.\n\n\"Princess, whatever is the matter? What has upset you so?\" the concern in his voice genuine, but Elena was deaf to his concerns.\n\n\"Oh god.... it was all my fault! All my fault\" she wailed. \"My parents... Malcolm... all those people... their blood is on my hands! It's all my fault\" she sobbed uncontrollably.\n\n\"Shhhh Princess, it wasn't your fault, don't say that\" he said, pushing her hair out of her face.\n\n\"It was all my fault... my fault\" she cried bitterly, her face wet with tears.\n\n\"Come here\" he said, gently pulling on her arm, but she wrenched it out of his grasp.\n\n\"Please, leave me alone!\" she sobbed into her knees, her body shaking violently.\n\n\"No\" he replied, pulling her towards him a little more forcefully, but she was weakened from grief and had no more fight left in her. Elena allowed Henry to pull her against him, wrapping his strong arms around her heaving chest, her tear stricken face pressed against his warm torso.\n\nHenry reached down and removed the hidden pin holding the ankle cuff in place. Elena was so consumed by her grief that the small gesture went completely unnoticed.\n\n\"It's all my fault\" she cried, her tears falling thick and fast against Henry's chest, her arms clutching his back, as one would clutch a piece of driftwood in a turbulent ocean.\n\n\"Why is it your fault Princess?\" Henry asked soothingly, but it Elena did not register his question at all, she continued to cry over and over \"It's all my fault!\"\n\n\"Shhhh....\" he whispered. \"Hush now my beautiful princess, it was not your fault\" he said softly, as he squeezed her even tighter.\n\nThey lay like that for many hours, their limbs intertwined, the silence of the night broken only by her sobbing, which slowly faded around daybreak, as she fell into an exhausted slumber in Henry's arms."
    ],
    "authorname": "long_legs2u",
    "tags": [
        "forced",
        "princess",
        "historical",
        "maledom",
        "feisty",
        "war"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-last-princess-of-lorrea-ch-08"
}