{
    "title": "To Be or Not To Be a Doctor",
    "pages": [
        "This story is about 30,000 words long. You'll see why when you read it.\n\nAll characters in this story are aged 18 and over.\n\nChapter 1\n\nTiffany's bright, pretty face was animated. Her curly blonde hair wiggled as she told the story. The other girls leaned in, their curiosity aroused, eager to hear every dirty detail.\n\n\"...so he really wanted me to give him a blowjob. I was like, all right, but you have to tell me before you cum, okay? I do not want fluid in my mouth. Well, guess what happened?\"\n\n\"I'm pretty sure I know how this ends,\" Cindy sniffed.\n\n\"He shoots his load down my throat!\" said Tiffany indignantly. \"I was like, what the hell! What an asshole.\"\n\n\"Tiffany, I... I do not understand what you are saying?\" said Manjula in a timid voice.\n\nTiffany gave her an exasperated look. She started to repeat, really slowly: \"I\u2014was\u2014giving\u2014a\u2014blow\u2014job\u2014\" \n\n\"No, I heard you correctly. But what is a blow job?\"\n\nThe three white girls glanced at each other. \"A blow job is when a woman sucks on a man's cock,\" Tiffany finally replied.\n\nThis did not clarify things for Manjula. \"You were already eating dinner together? But you said for him to call you when he came?\"\n\n\"What?\" Now it was Tiffany's turn to look confused.\n\n\"Manjula,\" said Cindy condescendingly, \"what do you think she's talking about?\"\n\n\"She was sucking the meat off the chicken bone, but then something about fluid? Was it not cooked properly?\"\n\nThe other three burst into paroxysms of laughter. Manjula sat there, looking dazed, trying to make sense of the joke.\n\n\"Just what do you think a 'cock' is, Manjula?\" gasped Cindy.\n\n\"A cock. You know, a male chicken. We need the females for eggs, so we usually eat the males\u2014\"\n\nTiffany and Cindy found this so hilarious they fell into each other's arms, practically hugging, as their bodies convulsed with mirth. Rachel made at least some effort to hide her amusement, but could not mask the wide grin on her face.\n\n\"Okay, let me explain a few English words to you,\" Rachel finally intervened. \"The word 'cock' did once indeed mean 'rooster', but nobody uses that meaning anymore. Nowadays, it's a slang word for... for...\"\n\nManjula waited, but Rachel actually looked too embarrassed to continue.\n\n\"It means penis,\" interjected Cindy. \"Cock is a slang term for penis.\"\n\nManjula's eyes gaped in surprise. \"You were sucking your boyfriend's penis?\" She forgot to keep her voice down, causing male heads to turn throughout the cafeteria.\n\nTiffany cringed. \"I can't say I really like doing it, but guys insist. Anyway, the beef I have with him is that he came in my mouth. Oh, sorry, I guess you would say he ejaculated in my mouth.\" She spoke the word as if it were from a foreign language.\n\nThe more they explained, the more confused Manjula got. \n\n\"You were having sex? I thought the penis is supposed to go in the vagina?\"\n\nCindy was shaking her head in disbelief. Tiffany put her hand on her forehead. Rachel finally said, \"well yes, that's usually how we have sex, but here in Canada, men often ask their partners to take their penis in their mouth. And it goes the other way too. Women want their partners to touch their pussy\u2014I mean, their vagina\u2014and clit\u2014clitoris with their tongues.\"\n\n\"Maybe you don't have sex education in India,\" Cindy pontificated, \"but in this country\u2014\"\n\n\"I am not from India, I am from Sri Lanka,\" said Manjula sharply. \n\n\"Do you even have a clitoris?\" Tiffany asked, her expression sympathetic. \"I've heard that in a lot of those countries, they remove them.\" \n\nFemale genital mutilation was an African, not Asian, custom (and even in Africa it is on the way out) but Manjula wondered if the other girls knew or cared about the difference. She took a deep breath.\n\n\"We do not remove them in our country,\" she replied, as diplomatically as she could.\n\n\"Whatever. We have to go to class,\" said Tiffany, rising up. \"I hope you're not a biology major,\" she joked, \"else you sure have a lot of extra studying to do.\" Cindy snickered. Even Rachel cracked a smile. They headed out. Manjula sat there alone, stone-faced.\n\nShe was a biology major, of course. The plan was to eventually go to medical school and become a doctor. And here these girls clearly thought she was an idiot.\n\nManjula was not used to being talked down to, treated like an illiterate village bumpkin, constantly condescended to. She did not understand Canada, its ways, its customs, its values.\n\nBack in Sri Lanka she had been the smartest student in her school, the one everyone looked up to with grudging respect. She had read the most books, had the highest grades, won the most prizes. And now here she was, ignorant of everything. Back home, she'd prided herself on her English. She could understand English radio better than anyone, she had confidently given directions to foreign tourists, she had achieved a nearly perfect score on the language tests. And now, because she didn't know their word for penis, of all things, she felt a fool.\n\n***\n\nThe next day Tiffany was again holding court in the cafeteria, this time with a guy who had started chatting her up in the lunch line. His name was Tony Thava-something or other; she'd lost interest by the third syllable.\n\n\"You would not believe some of these foreign students!\" she complained. \"Oh my god! I can't believe they even let them in!\" \n\n\"Surely they can't be failing already?\" asked Tony. \"It's only the second week of term.\"\n\n\"No, it's just the stupid things they say. They can speak English, if you get past the accent, but they're like, totally clueless.\"\n\nTony felt a bit nervous about this. Would she think him clueless too? He was acutely conscious that his own skin was brown, although he wasn't a foreign student.\n\n\"What do they say that's so bad?\"\n\n\"Oh. Yes. It was this girl, her name was Moon Jewel or something\u2014\"\n\n\"Do you mean Manjula? She's in my math class.\"\n\n\"That's what I said. Man Julu. Anyways, well...\" Tiffany paused. \"This was \u2014 how do I say it? \u2014 a girls' conversation. If I tell you, don't get any ideas, okay? This is just \u2014 just for illustrative purposes.\"\n\n\"I won't,\" Tony promised, wondering what she was talking about. \n\n\"We were just explaining to her what a blowjob was...\"\n\nTony was confused. He had only just met Tiffany for the first time. He had, admittedly, approached her mainly for looks \u2014 she boasted a voluptuous figure, a curvy hourglass waist, a generous chest, slender legs, long curly blonde hair. But he had tried to be a gentleman, keeping his eyes firmly fixated on her eyes, clear and green. \n\nNow she was frankly talking about blowjobs? The thought of those rosy red lips curved around his own dick flitted through his mind. He felt a spark of feeling in his cock.\n\n\"...and we said it meant sucking cock,\" Tiffany was saying. \"And she says\u2014she says\u2014\"\n\nShe was now laughing so hard she could barely speak.\n\n\"She says, was the meat not cooked properly?\"\n\nTiffany went on guffawing, and it was a while before she noticed that Tony did not find this amusing at all.\n\n\"What? Don't you get it?\" she queried.\n\n\"You know the real meaning of the word 'cock' is 'rooster', right?\"\n\n\"Yes, she said that afterwards. It was like talking to someone from the nineteenth century.\"\n\n\"No, it was like talking to someone whose native language is not English. She didn't know slang. She thought you were sucking a piece of chicken, and the fluid in your mouth was blood from a chicken that wasn't fully cooked.\"\n\n\"Like, what an idiot! You don't suck on chicken, you bite it off and chew it!\"\n\n\"But you literally told her you were sucking your boyfriend's rooster, and fluid came out, what else was she supposed to think?\"\n\n\"But she had no idea what oral sex was, and she's in university!\"\n\n\"It might not be discussed as much where she's from\u2014\"\n\n\"If immigrants can't integrate into this country, then send them back, I say!\" Tiffany snapped, a nasty expression on her face. \n\nIt was then that it dawned on Tony that Manjula herself was standing a short distance away, the remains of a meal in her tray. Her eyes were wide, her lip quivering, her face set in utter mortification.\n\nShe noticed him looking at her, dropped her eyes, and started to hurry off. Tony got up, ignoring the sputtering Tiffany, and hurried after her.\n\n\"Manjula... wait.\"\n\nShe turned around and faced him, her expression fearful.\n\n\"Look, I just\u2014I just want to apologize.\"\n\n\"No need to apologize,\" she replied, \"it was your girlfriend saying those things.\"\n\n\"She's not my girlfriend. I was just having lunch with her.\"\n\n\"Okay.\" She started to turn away, then he had an idea.\n\n\"Tamil theriyama?\" he asked, hoping he'd pronounced it correctly. Do you understand Tamil?\n\nShe pivoted to face him, her eyes suddenly alight. \"Enna? Ninga ilankaivurunthu vanthinga? Enga\u2014\"\n\n\"Sorry, I don't actually speak Tamil. I just know a few phrases.\"\n\nShe looked puzzled. \"I was asking if you came from Sri Lanka, and where.\" \n\n\"My parents came from Sri Lanka, but I was born here.\"\n\n\"You are Sinhalese?\" Sinhalese was the majority language in Sri Lanka, but most emigrants were from the Tamil minority.\n\nTony sighed. He'd lost count of how many times he'd had this conversation. \"My parents are Tamil, but they didn't want me to speak Tamil. They thought I'd integrate better in Canada if I could only speak English.\"\n\nManjula looked perplexed. \"You are Tamil, and you cannot speak Tamil?\"\n\nTony nodded. \"I get ribbed for it all the time. Tamils don't realize just how hard their language is to learn. I tried studying it on my own a few times, but there's hardly any books or reference materials on it, and they just cover the basics.\"\n\n\"What Tamil do you know?\"\n\n\"I tried learning the alphabet, but I only know a few words.\"\n\n\"Such as?\"\n\n\"Well I remember my mother saying words like polathe pullah, viser cutee, mokku padian, pisasu, channion...\"\n\nThose words meant \"naughty child\", \"crazy kid\", \"stupid boy\", \"devil\", and \"demon\". Manjula was now the one laughing, hard. Her embarrassment was gone.\n\n\"English is the opposite,\" she said. \"There are plenty of materials about the regular language, but you have to pick up slang the hard way.\"\n\n\"Maybe we should trade,\" Tony joked, but Manjula took it seriously.\n\n\"You want to teach me slang, and in exchange I teach you Tamil?\"\n\nHe was about to say he had no time for that \u2014 they were both university students, after all \u2014 but then he realized just how pretty she was. \n\nHer black hair was parted down the middle and tied into braids along the sides, giving her a schoolgirlish look. Her sharp brown eyes were teasing, full of mirth. That face \u2014 it was hard to explain. She had the weather-beaten look so common in recent immigrants from rural India or Sri Lanka, a very human, natural look, free of the makeup Western girls usually wore. Yet her cheeks were round and soft, her lips thin and pleasant. It was a face he could spend a long time looking at.\n\nManjula was dressed conservatively for the relatively warm September weather \u2014 a white blouse that went past the elbows, and a black skirt going past the knees. But nothing could hide how delectable her figure was. She was impossibly slim, with barely an ounce of fat on her. Her breasts weren't large, but she more than made up for it with the sensuous curve of her tiny waist. Tony felt self-conscious, thinking just how well-fed he must look in her eyes.\n\nHe decided. \"How about right after math class on Monday? We can go to the library,\" he said hopefully. \"I have an old basics book I can dig up.\"\n\n\"That sounds great,\" replied Manjula. \"I will see you then.\" \n\n***\n\nTony hadn't been quite telling the truth; although he did have an old basics book, it was a two-hour bus ride away, at his parents' house. They were, of course, thrilled when he suddenly came home for the weekend.\n\n\"So how is school, son?\" his father asked.\n\n\"Have you met a girl yet?\" his mother cut in, eagerly.\n\n\"Mom!\" \n\n\"Don't rush the boy,\" admonished his father. \"He must concentrate on his studies first. Now tell me about your professors...\"\n\nThere followed a more technical discussion about courses and grades, but Tony's mind kept wandering to Manjula. In one sense she was the first real Sri Lankan he'd ever met. Nearly every Sri Lankan he'd ever known had lived in the West for years, if not decades. He had never been there himself \u2014 his parents, unlike some others, had no interest in visiting. Both regularly denigrated it as a \"primitive\" place and considered themselves well rid of it.\n\nHe'd often argued with them on why they hadn't taught him Tamil. \"Why do you want to learn that language?\" his father would ask. \"The whole world is learning English and you want to learn Tamil?\"\n\n\"Your grandfather always said that the mark of an educated man is speaking good English,\" his mother would chime in. Of course, at the next party all the relatives would be happily gabbing away in Tamil \u2014 or sometimes even worse, crowding over a Tamil video \u2014 and he'd be the one person left out. Sooner or later somebody or other would always utter the tired words, \"Why is it that you cannot speak your mother tongue?\" Heads would nod in unified disapproval. His parents never said a thing in his defence.\n\nManjula was literally the first person who had even offered to teach him Tamil, as opposed to scolding him about it. And \u2014 a big smile broke out on his face every time he thought of her. She was just so pretty! \n\nIn addition to getting the Tamil textbook, Tony went to the bookstore. She must really want to learn slang badly if she's willing to spend so much time on me, he thought. He picked up a book on English slang for foreigners, and spent some time on the internet, looking for good sites about music and movies.\n\nThe weekend flew by. Tony decided not to tell his parents about Manjula. He wasn't even sure this counted as a date \u2014 'study partner' was a better term. \n\nWas Manjula even interested in dating? He had no idea. Customarily in Sri Lanka, most marriages were arranged \u2014 his own parents' had been. Your parents would look around for a partner, and your first date would include all four parents. There might be two or three such 'dates' before the decision was made \u2014 marry or not. The idea of a relationship that did not lead to marriage was a very foreign idea.\n\nThe customs had modernized over the years, but only partly. In olden times, parents \u2014 just fathers, really \u2014 had often simply made the decision unilaterally, regardless of what children thought. Nowadays it really was a joint decision between father, mother, and child. The trouble was that parents could still effectively veto their children's choices. Tony had an uncle whose parents had said no to so many girls he'd ended up never marrying at all.\n\nTypically, young Sri Lankans in the West vowed never to go arranged, but if they hadn't found a spouse by Western means (what they called a \"love match\") by age thirty or so, more than a few came crawling back to their parents, asking them to arrange something. His parents had never pressured him to have an arranged marriage, but if he asked, he knew they would take care of it.\n\nTony was nervous about that concept. His parents seemed to have turned out all right, but what if that was just the luck of the draw? What if he got stuck with someone who was shallow or greedy or annoying?\n\nOr who didn't like sex? Tony often wondered how he would explain his late-night surfing habits to a real girl.\n\n***\n\nOn Monday Manjula was quizzing him on the word for 'mother'.\n\n\"Ama,\" said Tony.\n\n\"Not Ama. Am-ma. Double consonant. This difference matters in Tamil.\"\n\n\"Am-ma,\" repeated Tony. \n\n\"Likewise, for father we say Ap-pa. Double consonant. Not Apa,\" she said, enunciating the latter quite differently.\n\nSuddenly it made sense. It was like a light bulb turning on.\n\nSome years before, Tony had taught himself the Tamil alphabet, He had tried writing out words he heard, but kept getting them wrong, never understanding when to use a single and when to use a double consonant. Manjula had made it clear in just a few minutes.\n\nWas she a naturally good teacher, or was he trying extra hard to impress her? Who cared? \"'Leaf' is ilai,\" she said, \"but 'no' is illai. Can you hear the difference?\"\n\n\"Yes! Yes I can!\"\n\n\"Very good.\" She smiled. \"You said you know the Tamil alphabet? Try to read this out loud.\" She tapped some keys and pointed her laptop at him. It was a Tamil website showing some song lyrics.\n\nTony squinted and slowly read:\n\n\"Paattu paadava. Parthu pesuva\u2014 hey, I know this song!\"\n\nManjula looked impressed. \"You do?\"\n\nTony started to sing it. It was one of his favourites, even though he didn't know the meaning of the words. Roughly translated, they went like this:\n\n\"Come to sing a song,\n\nCome to see and speak,\n\nCome to tell a lesson,\n\nCome to fly like a silver moon\u2014\"\n\nIn Tamil, every line rhymed.\n\nManjula joined in the last line. \"And when the girl comes, I will find a way to ride with her.\" They stretched out the last syllable in unison, eyes starting to glow at each other.\n\n\"It is really remarkable that you know that,\" said Manjula, \"that song is nearly sixty years old now.\" Her eyes were shining.\n\n\"That's nothing,\" Tony replied. \"A classic is a classic.\"\n\nManjula looked astonished. \"My friends back home always said I was crazy to listen to such an old song.\"\n\n\"Why, what's wrong with it? My mother plays it all the time.\"\n\n\"They think songs expire or something. Nobody our age in Sri Lanka will be caught dead listening to any music more than ten years old.\"\n\n\"Young people here think that too. English or Tamil, even a one-year-old song is too old for them. They live in the present; they have no sense of the past.\"\n\nManjula's face had a curious expression on it.\n\n\"Do you like any modern songs?\"\n\n\"Well...\" Tony's voice trailed off; he looked embarrassed.\n\n\"Tell me!\"\n\n\"There's Kalasala Kalasala...\"\n\nManjula typed the name into YouTube, then groaned. It was an item number.\n\nTamil music, indeed all Indian pop music, works much like Broadway show tunes. Songs only appear in movies, and every movie is a musical. An item number is a song featuring a hot actress, the item girl, who does not appear in the rest of the film, though she often features heavily in the film's marketing. Kalasala Kalasala was one such.\n\nManjula looked curiously at the item girl gyrating on the screen. Movies featured much more skin than real girls would show, at least in her village. The only clothing the item girl had above the waist was a halter top. Her skirt was knee-length, but several times it rose up well up her thighs. Manjula turned back to Tony. \"This is the kind of thing you like?\"\n\n\"Well, okay yes, that girl is very pretty. But the music is good too.\"\n\n\"I have heard that song before, but this is the first time I have seen the video.\"\n\n\"Really? You're not into videos?\" This was surprising to Tony. Tamils he knew were glued to music videos.\n\n\"I did not have a television or computer back in Sri Lanka. I had a mobile phone, but the only plan we could afford did not have enough data for videos.\"\n\n\"You didn't have a computer? How did you study? Do research?\"\n\n\"On the phone,\" she said, matter-of-factly.\n\nShe looked at him carefully. He tried to match her gaze, but his eyes kept creeping towards the laptop screen. \n\nManjula could not blame him. She had occasionally worn Western-style clothes back in Sri Lanka, but never a skirt above the knee, never a sleeve above the elbow. She had seen clothes like that on Western tourists, but it was an entirely different experience to be surrounded by them. Arriving in August, she had found it impossible to stop staring at the endless bare arms and shoulders, sultry midriffs, and inviting legs everywhere she looked. And if she could not stop staring, what must it be like for the boys? What would it be like to grow up as a boy in this country, with oodles of female skin all around you?",
        "And what would it feel like to wear such clothes?\n\n\"Before we start to study slang, can I ask you a favour?\" she asked.\n\n\"Of course.\"\n\n\"I do not understand fashion in Canada. Do you think \u2014 do you think you could come clothes shopping? With me?\" Manjula's cheeks were pink with embarrassment.\n\nTony hated clothes shopping, which for most of his life had been a grim monotony of waiting while his mother dragged him from store to store, never buying anything he liked. Then he remembered this was Manjula talking.\n\n\"Absolutely. We can take the bus.\"\n\n***\n\nWhen they reached the mall, this turned out to be harder than it sounded. Tony knew little about shopping malls other than where the food court, bookstore, and computer stores were. He was at a loss as to the best place to buy the kind of clothes Manjula was after.\n\n\"Do you not know anything about women's clothes?\" \n\n\"Other than staring at them... I guess not.\"\n\n\"Maybe we should put that to use. Stare at a girl.\"\n\n\"What?\"\n\n\"Just stare at one!\" Manjula snapped irritably.\n\nWell, who can refuse a command like that? Tony let his eyes wander, looking for a hot girl. He settled on one with long slender legs, her white minidress barely clearing the bottom of her ass. The dress clung to her chest, leaving the outline of her breasts plainly visible. As she walked by, Tony could see most of her back visible through a mesh, topped by a mane of straight blonde hair.\n\nManjula hurried after the blonde. \"Excuse me!\"\n\n\"Yes?\" The blonde turned around.\n\n\"My boyfriend was just staring at your outfit,\" said Manjula smoothly, to Tony's consternation. \"I wonder if you could tell me where you got it?\"\n\n\"Oh, of course!\" said the blonde eagerly. She launched into a detailed discussion of brands and colours that made Tony's eyes glaze over. He suppressed the urge to whip out his phone. Manjula, however, seemed just as excited as the blonde.\n\n\"Thank you!\" she called out as the blonde headed off. \"Come on.\" She grabbed Tony's hand and pulled him in the opposite direction.\n\nTony realized that they were now holding hands. What did that mean? And Manjula had referred to him as her \"boyfriend\", or was that just an excuse to talk to the blonde? He decided to just enjoy it.\n\nManjula paused when they reached the store. \"You know why I asked you to bring me here, instead of the other girls?\"\n\n\"Why?\"\n\n\"Because the others will treat me like an idiot.\"\n\n\"You're not an idiot.\"\n\n\"What I want is to buy clothes that make boys stare at me. The way you stared at that girl. Find me clothes that make you... boys like you... want to look at me. Can I trust you to act like a man? A mature man?\" \n\nSeeing how dead serious she looked, Tony could only nod. He knew what made him stare \u2014 the clothes had to show as much skin as possible, and to hang loosely, giving the impression they were about to fall off. He wasn't used to looking at girls' clothes without an actual girl in them, but the mannequins were a reasonable starting point.\n\nThere are breasts men, and there are legs men. Tony was a legs man. None of the outfits he selected went more than halfway to the knee. Manjula, who hadn't shown her legs in public since she was a little girl, looked extremely nervous the first time she came out of the changing room.\n\n\"You don't need to worry,\" said Tony reassuringly. \"Your legs are lovely.\" He could spend all day staring at them. He squatted down for a better look, resisting the urge to look up her skirt. Manjula managed a wan smile. \"Does it look nice?\" she asked.\n\nDid it ever! For the first time in his life, Tony had a good time shopping. He hadn't known what a joy it is to watch a pretty girl try on clothes. Every outfit was another testimony to her loveliness. It was like leafing through a fashion magazine, but the model was here, in front of him, smiling at him, batting her eyes, looking pleased with herself, her confidence growing, her shyness diminishing.\n\nManjula looked adorable in a little red dress that brought out the sensuous curve of her waist. She was fetching in a slight magenta number, translucent enough to see much of her body, if you looked closely. She was delightful in a fluffy black skirt that left her shoulders and upper back bare.\n\nTony did notice she was mentally calculating each price in its rupee equivalent.\n\n\"Are you okay? Can you afford all this?\"\n\n\"Yes... yes, my scholarship includes an allowance for clothes and entertainment. I am just not used to seeing prices so high.\" \n\nNonetheless, Tony paid for her dinner. Afterwards, they went to a discount store, where he found her a tight turquoise T-shirt that clung to her breasts like glue, and denim shorts that hugged a small bit of her upper thighs. On sale, they found a light green sundress with a pineapple design, leaving arms and legs bare. Tony found this so arousing it was all he could do not to put his arms around her and kiss her then and there.\n\nHe even caught one glimpse of Manjula in her underwear, when she opened the change room door to let him pass a shirt through. He turned around quickly, red-faced, but wondered if that had been a giggle he heard. Certainly, the mere thought of her being in her underwear, just a door away from him, brought all manner of forbidden thoughts into his brain.\n\nHad Manjula suspected this? Not long after, she took Tony to the lingerie section, saying she wanted to try this type of underwear. She didn't actually model any of the items for him, making her own decisions in the changing booth. But he did spend some time looking at the illustrations of the ones she'd picked. Mostly white and bright colours, which would contrast perfectly with her brown skin.\n\nAn emerald lace cut out bra and thong, both with plenty of holes to see the action. A delicate little one-piece chiffon teddy. A white fishnet outfit, luring his greedy eyes to the triangle between the model's legs.\n\nTony had masturbated to pictures of girls in lingerie many times, but he had never actually seen a live girl in one. Shopping for underwear with Manjula was, in fact, the most sexually intimate experience of his life so far. How did she feel about it? The confident smirk she gave him as she came out of the change room seemed to say it all.\n\nThey talked more on the bus ride back to campus. Manjula had grown up in a desperately poor village in Sri Lanka's Mullaitivu District. Her parents had been killed in the massacre that ended the civil war ten years before. She'd moved in with her aunt and uncle. Their house had been destroyed in the war, and they'd built a bamboo-mud hut with their own hands. It only had one room, and on it she, her three cousins, and their parents all slept in mats on the floor. They had to make do with an outdoor latrine, just a hole in the ground, really. They cooked on a wood fire outside, settling for raw vegetables when it rained. The family was too far from the coast to easily get seafood, and too poor to afford mutton, so chicken was their primary source of protein. \n\n\"So that is what I thought of when she talked about a cock. We did keep our own chickens, and it really mattered which one was a cock and which was a hen.\"\n\n\"Can you see why the word 'cock' came to mean what it does here?\"\n\n\"Why?\"\n\n\"It's like the Sinhalese word cukula.\"\n\nCukula also literally meant rooster. Roosters are mostly slaughtered for meat. But you need to keep at least one around so that the hens can reproduce. That one rooster routinely mates with a whole row of hens. He is king of the chicken coop; he can have any female he wants. He's a cock. Thus, in Sinhalese slang, cukula means a swinger, or ladies' man. Tony's father had explained this to him once.\n\nManjula, who spoke Sinhalese as well as Tamil and English, knew this well. She began to laugh again, a merry laugh, her eyes twinkling. Tony stared wonderingly into her face, thinking again how beautiful she was. And the outfit she was now wearing \u2014 a short navel top, leaving her midriff exposed, and cut-off jeans, showing off her lovely brown legs \u2014 brought out a surge of emotions in him.\n\nTony thought about how much fun she was to be with, whether they were seriously studying, looking at videos, or even staring at girls together. He looked into her eyes, which had lost that scared look entirely, now carefree and cared for.\n\nHe did not even think about what he was doing until his lips were touching hers. All he could think about was how badly he wanted to be close to her, as close as he possibly could. The touch of her lips felt so wonderful, and her scent filled his senses with delight. He put his arms around her; she was so warm and clean and adorable. He just held her, lips locked, for a long time.\n\nTony pulled back and gazed into her eyes again. He saw warmth there, but also nervousness.\n\n\"I'm sorry, I\u2014\"\n\n\"That is all right. It felt good.\"\n\nHe wasn't quite sure what to say after that, but settled for just leaning back against his seat, her hand in his.\n\n\"I will see you in class on Wednesday,\" she said on leaving the bus. That was in two days' time. Too late, after she'd gone, did he remember he'd forgotten to get her phone number, or offer his.\n\n***\n\nThat night in bed Tony found himself with a raging hard-on. It was not every day you got to watch a very sexy girl try on equally sexy clothes, and be rewarded with a tender kiss. \n\nThat brief glimpse he'd caught of her in her underwear \u2014 he was tantalized by the memory, of that smooth, narrow tummy, the alluring curve of her navel, the silky elegance of her thighs. He wondered what she was doing with the lingerie she'd bought. He felt like he would give anything to see her nude. He had searched the net for years, but had never been able to find professionally produced porn featuring South Indian or Sri Lankan girls, only low-quality, dimly-lit crap taken on someone's cell phone.\n\nBut was it right? Tony knew how conservative Sri Lankans were. Both men and women were expected to be virgins on their wedding night. The only concession made to the twenty-first century is that engaged couples might sneak off for a discreet tryst before the wedding took place. But having sex with one person and later on marrying another \u2014 that was unthinkable. And the age-old double standard was still there. He might still find a wife if he were not a virgin, but he knew if Manjula were not, no one would marry her. \n\nSleeping with her without a truthful promise of marriage would be akin to rape. As much as he liked Manjula, he was only eighteen years old, and she must have been about the same. He just was not ready to marry her. He doubted she was either; teenage marriages were as distant a memory in Sri Lanka as they were in the West.\n\nEven masturbating to thoughts of her seemed wrong somehow, but his erection was more than he could stand. He tried looking at some porn, but suddenly found hardcore distasteful. Softcore \u2014 try as he might, he kept thinking of Manjula. The best he could find was a softcore site featuring black models, the closest he could find to her appearance.\n\n\"Manjula,\" he whispered as he climaxed. \"Manjula.\" \n\nChapter 2\n\nIn math class, Tony usually sat on the far-left side of the room, that being the only place where left-handed desks could be found. But on Wednesday's class, he scanned the room anxiously looking for Manjula.\n\nShe was wearing the revealing sundress he'd picked for her. Stretching out her legs in the front row, she looked irresistible. And few guys could resist her \u2014 there were two flanking her on each side, each vying in assorted ways for her attention. Tony smiled sadly in her direction and went over to the left-handed desk.\n\nHe had a lot of difficulty concentrating in that class. At one point he was struggling to keep up, seeing the professor write out an incomprehensible series of partial derivatives. Manjula interrupted.\n\n\"Excuse me, sir?\"\n\n\"Yes, miss?\" It was almost embarrassing how this professor, notorious for his normally gruff, abrasive attitude, was now being obsequiously polite.\n\n\"That plus on the third line \u2014 should that not be a minus?\"\n\nThe professor stared for a minute \u2014 at Manjula's legs, not the equation! \n\n\"Oh yes,\" he finally said, and corrected it. Tony peered at the whiteboard. Now finally he began to understand the equation.\n\nAfter class, he made a beeline for Manjula. To his immense relief, she waved goodbye to the other guys and walked off with him.\n\n\"Are you a math major?\"\n\n\"Biology.\"\n\n\"Biology? But if you're this good at math, you must be awesome in biology.\"\n\n\"Maths has always been my favourite subject. Even in the sciences, I like physics and chemistry better.\"\n\nTony found it very cute that she used the British form of the word, maths, like his parents did.\n\n\"Why study biology then?\" he asked.\n\n\"I want to be a doctor.\"\n\n\"Why, if math is your favourite subject?\"\n\n\"What can you do with a maths degree?\"\n\n\"Tons of things. You could be a quantitative analyst\u2014\"\n\n\"In finance? We do not have much of that in Sri Lanka.\"\n\n\"There are lots of math-related disciplines. I'm in computer science. Or you could do engineering\u2014\"\n\nShe cut him off. \"I need to be a doctor.\"\n\nQuestions popped into his head, but seeing her expression, he decided to put a stopper in them. He followed her to the library.\n\nThey hadn't actually made plans for another Tamil lesson, but Manjula started one anyway. Before long, she had him try to make complete sentences.\n\nEnakka Tamil theriyum. I understand Tamil. Intha oor nalla oor. This is a nice city. Ninga alahanna. You are beautiful.\n\n\"How do you say very?\" he asked.\n\nManjula's irritation was gone; she had a warm smile on her face. \"Chadyanna.\"\n\n\"Ninga chadyanna alahanna,\" he said. You are very beautiful.\n\n\"Thank you,\" she said. He hoped to press the point further, but she moved on.\n\nEnakka cutherica virappamillai. I don't like eggplant. Enakka puttu virappam. I like puttu.\n\n\"What I would not give for puttu right now,\" she sighed dreamily. \"I have not had any in weeks. Even rice is hard to get around here.\"\n\nIn Toronto, there were any number of Sri Lankan restaurants that would have served that flour-and-coconut dish, but they were not in Toronto. Then a thought occurred to Tony.\n\n\"I know a place you can get good Sri Lankan food. Homemade.\"\n\nHer eyes lit up like a child's on Christmas morning. \"Enga?\" she asked, using the Tamil word for \"where\" in her excitement.\n\n\"My parents' house. I could take you there this weekend. You could stay in the spare room.\"\n\nShe looked suspicious. \"I hope you are not trying to marry me. I am not ready for that.\"\n\nIt was as if a weight had lifted off Tony's chest. \"No, no, nothing like that.\"\n\nHe didn't want to introduce her to his parents as a candidate wife. But he did want to introduce her as his girlfriend. Did he dare ask her that? How did she even feel about the whole notion of boyfriends and girlfriends? If he asked her, would it ruin everything?\n\nThere was an awkward silence.\n\n\"So about slang\u2014\" she said finally.\n\n\"Yes, I've got the book here,\" he replied, pulling it out.\n\n\"If you do not mind, I want... I want to ask you about sex.\"\n\nIs she on to me? he wondered desperately. Had she guessed that he wanted to have premarital sex with her?\n\n\"They were talking about putting a penis in their mouths,\" said Manjula. \"Has any girl done that for you?\"\n\nTony blushed to the roots of his hair.\n\n\"Well... um... the truth is... no, none have.\"\n\n\"I thought that by university most people here have had sexual experience?\"\n\nSo help him, she'd done research. \n\n\"Well, you know, that's an average, I guess I'm, um, in the tail end of that distribution.\" Oh funny man, he thought. I'm in the tail end for getting tail.\n\n\"Do you want to do it?\"\n\nTony dropped the book, staring now with unconcealed hunger at her perfect round lips. Those lips, around his cock. That tiny, smooth, perfect body, on her knees, naked. He felt his cock squirm.\n\n\"Yes. Yes, I would love it.\"\n\n\"What is the appeal? I do not understand.\"\n\nDammit! She hadn't been propositioning him, she'd been curious about the act itself.\n\n\"Well the most obvious is you can't get pregnant that way. The risk of disease transmission is also less.\"\n\n\"Surely that is not the only reason.\"\n\n\"I\u2014\" He hesitated.\n\n\"Do not be afraid,\" she said reassuringly. \"I will not judge you.\"\n\nSomehow that did reassure him. \"A girl's face in... in my midsection is a sign of submission. She's putting her face, the core of her identity, in my sexual organs.\"\n\nManjula looked curiously at him.\n\nHe continued, \"It's... it's especially arousing to see a girl kneeling before me to do it. It would make me feel like a lord, like a master, a king...\" It seemed very silly to say that out loud.\n\n\"I see,\" she said, but it was obvious that she did not see. \"And what is the appeal to the woman?\"\n\nTony had often wondered this himself. \"I... I don't know.\"\n\nShe paused. \"And the comparable thing to a woman, what do you call that?\"\n\n\"The formal name is 'cunnilingus', but it's usually called 'going down on her' or 'eating her out'\".\n\n\"Would you do it?\"\n\n\"Well...\" Tony was conflicted. None of his friends had said anything positive about the smell or taste of that region. But they had very positive things to say about how their girlfriends had responded to it.\n\n\"From what I know, women are much more likely to come to orgasm when stimulated by the tongue, than by the penis.\"\n\n\"Is that not terribly dirty?\" she queried incredulously. In fact, she looked much more shocked talking about going down on a woman than about going down on a man.\n\n\"I guess you could always wash it or something,\" said Tony lamely. When most of your knowledge of sex is second- or even third-hand, eventually you run out of wisdom to dispense.\n\n\"Do not be embarrassed,\" she said kindly. \"I have another favour to ask you.\"\n\n\"Name it.\"\n\n\"I... I tried looking at these videos. These sexual videos. You call them pornography? Most of them are blocked by internet providers in Sri Lanka. And...\"\n\n\"What happened?\"\n\n\"I have never seen anything like that before. It is very scary for me to watch those videos by myself. And there are so many, I do not know which ones boys are watching. I think you must have watched them. Can you... can you show me some?\"\n\nTony's jaw dropped so far he nearly fell out of the chair. \n\nHe had been viewing porn for many years. Most males accompanied this with mental fantasies of pretty girls they knew, in similar poses or acts. \n\nAs the years went by without any other outlet, Tony's fantasies had curved in a different direction. Masturbating to porn had become its own reward. He found himself imagining, not actually having sex with a girl, but merely having her, fully dressed, look at him while he enjoyed himself with porn.\n\nTo have Manjula be the one watching \u2014 at that thought, his cock rose like a tower. Cut the thought, he told himself sternly, she didn't say she wants to watch you, just the videos themselves.\n\n\"You want me... to show you... pornography?\"\n\n\"I feel the biggest divide between east and west is actually about sex. I come from a country where pornography is illegal, and I am now in one where everybody seems to be influenced by it. I need to understand it. And I need... I need,\" she said, shyly, \"a boy whom... whom I trust to show me.\"\n\nTony felt enormous affection for her at that moment. He rose and gently pressed her hands to his lips.\n\n\"Of course... of course, we can do that.\"\n\nThe library is not, of course, a good place to look at porn. Tony wasn't sure where Manjula wanted to go, but she led him to her room. That means she trusted him with knowing where she lived. Then again, it was probably still safer for her than going to his room.",
        "They held hands all the way across campus. Tony saw plenty of guys staring at Manjula \u2014 he felt a surge of pride at this \u2014 but he also noticed girls looking at him. He'd never experienced that before. Could it be that just being with Manjula rubbed off on him a little? Whatever. There was no girl he wanted more than her.\n\nThe effect accelerated once they entered the women's dorm. Tony had never been inside an all-female building; several times he saw very hot girls, dressed in outfits as skimpy as Manjula's, glance at him and flash knowing smiles at her. \n\nTony had been thinking about what to show her. He doubted she would be able to handle his long list of fetishes \u2014 in fact, there were some he feared very much showing to any girl, of any culture. Why even start with full-fledged porn? Pinups would do.\n\nOne of Tony's pastimes was to download images of girls from various sites \u2014 often lingerie or swimsuits, but also ordinary revealing clothes, like miniskirts \u2014 and collect the images into a PDF. He could then have the computer display them in a slideshow, a few seconds per image, full-screen, leaving his hands entirely free. Looking at a series of images has a mesmerizing, almost hypnotic effect even for non-porn pictures; if there are girls, the effect is that much stronger, clothed or not. Tony had also torrented virtually the entire back catalogue of Playboy magazine, painstakingly assembling his favourite photos from each issue into custom PDFs designed to push exactly his buttons.\n\nHis mildest PDFs were for microkinis, bikinis, lingerie, and outerwear. He started with the latter. It did not escape Manjula's notice that the outfits he'd put in his collection were remarkably similar to the ones she'd bought earlier that week, and that she was wearing now.\n\n\"Tony, you... you find these arousing?\"\n\n\"Yes. I usually start with these when I\"\u2014 he stopped when he realized what he'd been about to say.\n\n\"When you masturbate?\" she asked, so gently that he nodded.\n\n\"So when I am dressed like this\" \u2014 she pointed at the sundress \u2014 \"and boys are staring at me, and talking to me, will... will they masturbate later and think of me?\"\n\n\"Probably yes, at least some of them will.\"\n\nShe covered her face in her hands. Sighing, Tony closed the laptop.\n\n\"Why are you closing it?\"\n\n\"Huh? I thought you were offended.\"\n\n\"I should be, should I not?\" She paused. \"But I am not. I feel \u2014 I feel free!\" She sported an expression of defiant joy. She pulled open his laptop and jerked her chin at him.\n\n\"Tell me why you chose these pictures.\"\n\nThere followed a strange session of annotated pinups. Because that girl had a cute expression. This one was in a pose that showed off her legs beautifully. This group of slave-girl Princess Leias had such submissive posture. That girl's wet T-shirt made her look wanton and uninhibited.\n\nTony had sequenced the pictures by how revealing they were. They finished the outerwear and moved on to the lingerie collection. As the shots got more and more racy, and Manjula remained unfazed, he felt his cock grow harder and harder. Soon they were sampling his compilations of nudes.\n\nMore arousing than the girls themselves was the knowledge that Manjula was there watching him. Like him, her eyes shifted back and forth between the girls on the screen and his own face. Thankfully, because they were sitting side by side in chairs in front of her desk, she could not actually see the pillar in his pants. \n\nHe did not realize that his occasional squirms were plainly obvious to Manjula. She also observed that he kept breaking his gaze at the pictures to look back at her.\n\nThe girls did not seem prettier than she herself was. Or were they? \"Tony\u2014\"\n\n\"Yes?\"\n\n\"Why are there no Indian or Sri Lankan girls in your collection? Do you like white girls better?\"\n\n\"No, it's just that it's harder to find these kinds of photos of them. Especially in the large resolutions you need for fullscreen. A lot of sites feature only white girls, with maybe a few token black or Chinese girls. Probably they're what white men prefer.\"\n\n\"Even in Sri Lanka they always seem to want girls to be fair,\" she said in a hurt tone. \"People say I will never find a husband because I am so dark. There are girls who go to Colombo for skin lightening treatments, but I could not afford\u2014\"\n\n\"Manjula,\" he said quietly, turning around to face her, \"there is nothing wrong with your colour. You are more beautiful than any of these girls.\"\n\nHe began to sing the Tamil song Mersalayitten. Translated, it started simply, \"I am mesmerized... mesmerized... mesmerized...\" He hadn't stopped to think that, now that he was facing her, his erection was plainly visible through his pants. This gave his song an entirely different meaning.\n\nManjula had never seen a live erection before. Her eyes were moist.\n\n\"Have you... have you masturbated and thought about me?\"\n\nOh, shit! What do I say to that?\n\nShe had trusted him into her room, and was literally watching him ogle girls in front of her. Didn't he owe her the truth?\n\n\"Yes. Yes, I have.\" Tony's fingers shook. He found himself tensing up, his cock softening, waiting for the inevitable sneer of disdain.\n\nWhat he did not expect was the look of pure, unadulterated happiness on Manjula's face. Her eyes were as radiant as the sun, her smile could have lit up a mansion, every particle of her being seemed possessed by energy.\n\nThis time it was she who stood up, boldly sat in his lap, put her arms around him, and leaned in. There was an energy in her now. He was not kissing her, she was kissing him. Her lips pressed on his with a hot force, her breath hot on his, her arms squeezing him tightly. Her scent all around him was intoxicating. He felt his cock growing hard again, felt it press against her leg, he knew she could feel it too. \n\nSomehow, his mouth was open. He felt the soft wetness of her tongue inside his mouth, gingerly probing into him. Tony had only ever seen this in movies, he could not remember how it was done, all he was conscious of was the overwhelming desire he felt. His hands were on Manjula's back, holding her tightly, drifting slowly downward\u2014\n\nShe came up for air. \"We have seen enough of girls. I want to see a boy.\"\n\nTony nodded and turned towards the computer. \n\n\"Not photos. A real boy.\"\n\nShe looked pointedly at his erection, then sat down on her bed, expectantly.\n\nIt took all the affection he had for Manjula for Tony to overcome his fear. \n\n\"I... I am not large.\"\n\n\"What does that mean to me?\" she countered. \"I have nothing to compare it with.\"\n\nThat wasn't really true, of course. Male porn stars are chosen in no small part because of their size, and many is the man who feels inferior and self-conscious compared to them.\n\nBut Tony also realized, that if disrobing would be scary for him, that was nothing compared to how frightening it would be for her. This was a girl who had only just shown her legs in public for the first time two days ago.\n\nHe stood up. From this angle he could clearly see some silky material under her sundress. Was that the lingerie they'd bought together?\n\nTony's pulse was racing. He was scared, but thrilled in equal measure. The thought of exposing himself to a girl, especially this girl, was practically making him jump with the pressure in his cock.\n\nBut the fear ran deep. It was the fear of a thirteen-year-old that a girl called \"ugly\", right to his face. The fear of a sixteen-year-old to whom a group of girls sarcastically shouted \"nice legs!\" before snickering maliciously. Not long ago, he had been walking on the sidewalk when a passing car lowered its windows. Someone shouted out, \"is it true you have a small dick?\" and drove off. He remembered spending prom night brooding at home, rejected by everyone he'd asked, too ashamed to go by himself. \n\nAs he often did, Tony turned to music to calm himself down. He began to sing again, choosing Kalangalil Aval Vasantham, another sixties Tamil song famous for the poetry of its lyrics:\n\n\"She is the spring among seasons.\" He took off his shoes and socks.\n\n\"She is the painting among art forms.\" He pulled off his shirt.\n\n\"She is the April among months.\" (April was Tamil New Year, a holy month.) He untied his belt and slid it off.\n\n\"She is the jasmine among flowers.\" He undid the button of his pants.\n\n\"She is like a baby, her smile without guile.\" Down came the zipper.\n\n\"She is a fair maiden, her embrace like the snow.\" The pants descended. He stepped out of them.\n\n\"She is the apple of my eye.\" He stood there, his briefs pushing away into a triangle, a large wet spot at its peak. Manjula's eyes were as wide as saucers. She was breathing hard, her fingers digging into the bed.\n\n\"She has turned me into a poet.\" He slipped off the briefs. He stood there, his pulse racing, his cock roaring with desire, precum pooling on his tip. What was she thinking? What was she feeling? The curiosity was making him almost crazed. He had to know. He had to. But he remained silent, giving her the space to explore her feelings. \n\nShe got up, circling around him, eyeing every inch of him as if he were Michelangelo's David. He stared back at her breasts, ass, and legs shamelessly. Imagine that mouth on his dick. Imagine that pussy on it. Yes. At the thought his cock squirmed and another drop appeared. Manjula looked startled.\n\n\"Your... your penis does that... when you are thinking of me?\"\n\n\"We call it 'cock', remember. Also 'dick'.\"\n\n\"What is your, uh, cock thinking?\"\n\n\"It... no, I want to see you naked too. I want to have sex with you.\"\n\nManjula did not answer. Had he gone too far? Finally, she spoke.\n\n\"I am not ready to be married.\"\n\n\"You do not have to be. It is enough for me just to look at you, and be with you.\"\n\nShe stepped towards him, stood on her toes, and kissed him again, deeply. His cock poked her in the stomach. She pulled back, peered down, and started giggling on seeing the wet spot it had left on her dress.\n\n\"Now that dress is stained. You'll have to change out of it,\" he said, only half joking.\n\nShe met his gaze proudly. \"I will do it. On one condition. No, two conditions.\"\n\n\"Name them.\"\n\n\"Only the dress comes off. I am not ready to be naked in front of you.\"\n\n\"Agreed.\"\n\n\"And,\" she licked her lips. \"I want to see you masturbate, while you are looking at me.\"\n\nWild horses could not have prevented Tony from agreeing to that. \"We call it jerking off, or sometimes whacking off, or wanking off\u2014\" but she had darted into the bathroom. She emerged with a towel. \"Sit there,\" she directed, laying it on the bed.\n\nHe sat there, cock aimed directly at her, while she peeled off the dress. It was like a divine revelation. All the life he had lived seemed to lead to this moment, this vision of unearthly, heavenly beauty. That waist, oh that waist, so thin, so curved, so magnetic... \n\nHer lingerie was indeed a silky white. The lace bra was thin and porous, making it translucent. He could clearly see the shape of her breasts, her dark areolas, even how hard her nipples were. And her panties... flimsy and translucent. They looked a size too big, as if they were about to fall off. He could see her black pubic hair very clearly through them. And behind, a glimpse of heaven itself. Manjula's pussy. For him, it was now the very centre of the universe.\n\nManjula shivered. Quite aside from the sexuality, it was cold standing there dressed like that \u2014 she was not used to temperatures under thirty Celsius. The expression of hot desire was clear in Tony's eyes. She had not told him that she'd already looked at videos of men masturbating, on a gay site. She expected him to take his penis \u2014 no, his cock \u2014 in his fist and yank it, like milking a cow.\n\nInstead, he squeezed it gently, like a bottle of jelly. A drop of semen obligingly came out. Hers! That semen was for her! He drew the drop all the way down the bottom of his cock with one finger, then began to massage the underside of his organ with the flat of just two fingers.\n\n\"Tell me what you are thinking,\" she said.\n\n\"You really want to know?\"\n\n\"Yes.\"\n\n\"I'm thinking about your hands on my cock. Of how I want you to touch me like this one day. That this cum \u2014 this semen \u2014 could land on your fingers. Or maybe your belly.\"\n\nManjula swallowed.\n\n\"Or maybe your tongue.\"\n\nShe gaped so wide he had a good view of that tongue. He went on, recklessly. \"I want you to suck my cock. I can't deny it. I want to cum in your mouth. I want you to swallow my cum.\"\n\nShe was shivering. Was she afraid? But she was listening. The sight of an unbelievably gorgeous, nearly nude brown girl watching him jerk off while listening to his fantasies \u2014 almost nothing in that sentence seemed even possible.\n\n\"I can see your pussy. Did you know that? I can see it. It's amazing. I want it. I want you. I want to be inside you. You're so amazing. You're smart and you're funny and you're cute and you're fun. And you're so hot. I want to\u2014to... oh... Manjula... MANJULA!\"\n\nManjula had feared that the cum would shoot out like a water hose and stain her carpet, but it just dribbled out, like squeezing a bottle of oil. \n\nShe stared in wonder at the cum on her bed. The thought of sleeping on that bed, tonight, sent shivers up her spine. She felt an unfamiliar wetness in her own nether regions. Tony was heaving, panting, staring at her.\n\nThe door opened. It was Rachel, Manjula's roommate. \"Hey Manj\u2014\"\n\nShe stopped and took in the sight. Manjula clad only in flimsy white lingerie. Tony naked on the bed, a cum stain in front of him.\n\nWithout a word, she walked out and closed the door behind her. Tony and Manjula burst out laughing and kept laughing for a long time.\n\nChapter 3\n\nThe next day, when calling his parents, Tony decided to try talking in Tamil.\n\n\"This weekend I am bringing someone home.\"\n\nHis mother was astonished. \"What? You are speaking Tamil?\"\n\n\"Yes, I am speaking Tamil.\"\n\n\"How did you learn it? Who is coming?\"\n\n\"Her name is Manjula. She comes from Sri Lanka.\"\n\nAt hearing a female name his mother excitedly burst into rapid Tamil far too fast for him to follow. \"Slower? Slower... yes, she taught me... can she stay Saturday night?... she likes puttu... Mullaitivu district, I don't know the name... okay, bye.\" He felt proud that he hadn't had to dip into English once, after less than a week of Manjula's teaching. She was changing his life, in more ways than one.\n\n***\n\nUnfortunately the amount of time Tony and Manjula had spent with each other had been cutting into study time. They decided to stick to the library for Friday's classes with each other.\n\nTony was now learning verb conjugations. As he had taken French in high school, the concept was at least familiar to him, and Manjula felt satisfied at how quickly he picked it up. \n\nWhen her turn came, Tony reflected that she didn't, so far, show much interest in slang, except for sexual terms. She really had a dirty mind, he thought. He loved it.\n\n\"The vagina in slang is called a 'pussy'. Why is that?\" she asked.\n\n\"Most people here don't know the reason. But I do\u2014\"\n\n\"\u2014because you know everything,\" she interjected teasingly. \"Well not everything, but I tend to look up stuff like this. It has to do with cats.\"\n\n\"Cats?\"\n\n\"A female cat, when she goes in heat, will mate with a whole bunch of males, one after the other. She'll chase each one off afterwards and go for the next. So that part of the body is named for the female cat, the pussy.\"\n\n\"Is that what women are like here? Everyone back home was warning me not to be like them. They say you can have sex with a white girl just by asking, whether you are married or not.\"\n\n\"Where did they learn that?\"\n\n\"That is what people say who have watched English television shows.\"\n\n\"No, girls here usually won't have sex except with their boyfriends.\"\n\n\"But... more than one?\"\n\n\"Yes. If they break up, she finds another boyfriend, and has sex with him. And so on. Eventually, when she finds one she wants to marry, she does.\"\n\n\"So a woman might have sex with four or five men in her life? One after another?\"\n\n\"Yes, that's probably about average.\"\n\n\"And if I broke up with you, you would have sex with another woman?\"\n\nTony looked up fearfully.\n\n\"Do not worry, I do not want to break up with you. But I am asking... say, hypothetically.\"\n\n\"Hypothetically. I would be devastated to lose you. But I would not expect you to remain alone the rest of your life, and I would not want to be alone either.\"\n\n\"But if you got married, how would you expect your wife to feel, knowing that another woman had had sex with you?\"\n\n\"Women here don't mind that, as long as their husbands are faithful to them while they're together.\"\n\n\"A Sri Lankan man would definitely mind. I am not even sure about what we did on Wednesday,\" she said dully.\n\nHis heart sank. \"Do you regret it?\"\n\nShe looked daggers. \"Of course not. I loved it. But if you do not marry me, I would not tell my husband about it.\"\n\nTony did not believe that someone should lie to their partner, as a matter of principle. But what if their partner had asked them a question they had no business asking? And how could he tell someone from another country how to live?\n\nHe wanted to have sex with Manjula, and she knew that he wanted that, and she was with him anyway. That would have to be good enough for now. \n\n***\n\nOn the bus ride out of town the next morning, Tony found himself disappointed to see Manjula wearing a traditional Sri Lankan outfit, a long dress with long sleeves. She still looked lovely, and he had to admit that the clothes themselves, with gold-coloured thread interleaved in the fabric, and little pieces of jewelry dotting them, were prettier than anything he'd chosen. She looked stylish and elegant. Undoubtedly she was trying to impress his parents.\n\nInstead, he decided to broach the other forbidden subject.\n\n\"Manjula, why do you want to be a doctor?\"\n\n\"I am very intelligent. A very intelligent person should become either a doctor or a lawyer, and there is no demand for lawyers in rural areas.\"\n\n\"Are those really the only two career options?\"\n\n\"Yes,\" she said bitterly. \"Sri Lanka is not a rich country. We do not have loads of skyscrapers with consultants and marketers and executives. We do not have high-tech firms with engineers and investment banks with finance jobs. The civil service is reserved for the Sinhalese. The only options left for an educated Tamil are law and medicine. In rural areas, just medicine.\"\n\nShe didn't say the words check your privilege, but this was the equivalent. \n\nTony reflected on the reams of recruiters found at any career fair. They would have nothing like that in Sri Lanka. He himself had chosen computer science after seeing the mountains of jobs in the field constantly being advertised, but that would not be the case there.\n\nAt least she was thinking about careers. That was how Tamils thought about education. Going to university is an obsession since early childhood. The rocky soil and remoteness of the Tamil regions left little work in agriculture, and Tamil parents hungered for their children to get the few professional jobs in the country. When the civil service was made Sinhalese-only, and university places were assigned quotas based on ethnicity, the Tamils had risen in armed rebellion. They were the sort of people who would literally go to war for a chance to get an education.\n\nThere were problems with this, of course. Tamils overwhelmingly pushed their children towards science and engineering disciplines. As a result, hardly anyone studied Tamil literature, and the field suffered a serious lack of scholarship. Tamil literature is one of the oldest in the world \u2014 of languages still spoken, only Greek and Chinese have as ancient a canon \u2014 but few of Tony's relatives had ever studied it, even those who had gone to school in Sri Lanka. Most knew far more about Shakespeare than Shankara.",
        "Tony grew up with this cultural passion to learn. His favourite activity as a child had been reading books, or news and educational websites. He had been just eight when he started teaching himself to code. It had been, he suspected, the main reason he failed with girls \u2014 he was just too much of a nerd, in their eyes. He hadn't watched most popular TV shows, and didn't know much about pop music. Nor did he have the good looks that might have made up for that. Manjula's passion for learning touched his heart. And her skill at teaching language had made him feel so much more connected to his heritage and ancestors.\n\nOn the entire bus ride home they did not let go of each other's hand. He often noticed that she would give him little caresses with her fingers, caresses that felt wonderful.\n\n***\n\nTony had feared his parents would embarrass him in front of Manjula, but that turned out not to be an issue. His mother warmly embraced her as soon as she stepped through the door, and dragged her off to tour the house, stopping at every framed photo on the way.\n\nHis father was looking at him with approval. \"So you finally got yourself a girlfriend, eh?\"\n\nGirlfriend. What a beautiful word that was, really. He felt like he would burst with pride.\n\n\"What is her surname, son?\"\n\n\"I... I don't know, actually.\"\n\nHis father frowned. \"And what village did you say she was from?\"\n\n\"I didn't ask that. She did mention Mullaitivu District.\"\n\nHis father's lip curled, but he said nothing further.\n\nDinner was a surreal experience for Tony. Manjula, relieved to finally have someone to speak Tamil with, was enthusiastically talking entirely in that language to Tony's parents. Occasionally Tony asked for a translation, but seldom got more than a sentence or two. As far as he could tell, his parents were very interested in the changes in Sri Lanka since they had emigrated decades before.\n\nHe found it more amusing to watch Manjula eat. She had eaten like a bird whenever they'd gone to lunch or dinner, but he realized now that was simply because she didn't like Western food all that much. She was gobbling down his mother's cooking as if she hadn't eaten in weeks. In one sense, she hadn't.\n\nSri Lankan food was in fact far from being Tony's favourite. When he was a kid, he used to surreptitiously throw vegetables from his plate in the garbage when his mother wasn't looking. He'd outgrown that, but if you offered him a choice between an eggplant curry and a hamburger \u2014 hell, even a vegetarian burger \u2014 he knew what he would choose.\n\nBut he did love vattalappam, a dessert dish made with jaggery. From the look on her face, so did Manjula. It made him smile to see her so happy.\n\nAfter dinner, his father glanced at him, then leaned forward and asked Manjula something in Tamil, with a serious look on his face.\n\nManjula looked shocked, putting her hand to her lips.\n\nHis father repeated the question, quietly.\n\n\"What are you saying?\" asked Tony, but no one answered.\n\nHis father leaned forward and said something else in Tamil. Manjula burst into tears, but she nodded. Both his parents had a pained expression on their faces.\n\n\"Manjula \u2014 Manjula! What's wrong?\" Tony rose and went towards her, but, burying her face in her hands and sobbing, Manjula scurried from the room.\n\nTony felt his blood pressure rise. He faced his father. \"What did you say to her?\" he snarled.\n\nHis father didn't reply, but said something, still in Tamil, to his mother. They seldom spoke Tamil to each other, except when it was something they didn't want him to understand. She left the room.\n\n\"Please sit down,\" his father said, in English. \"Your mother will talk to Manjula.\"\n\nTony was not satisfied. \"What did you say?\"\n\n\"We do like her, really we do. But there are some things you may not realize\u2014\"\n\n\"WHAT?\" Tony shouted.\n\n\"Manjula is a parachi,\" his father said, simply.\n\nParachi, or pariah if applied to a male, was a term his parents often used to tease. Tony thought it meant \"twerp\".\n\n\"Are you trying to insult her?\" He felt his hands start to ball into fists.\n\n\"No, I mean that she is, literally, a parachi.\" He sighed. \"Maybe we should have taught you Tamil after all. \"\n\n\"Will you get to the point?\"\n\n\"Manjula is an untouchable.\"\n\nAn untouchable. Tony had heard of that in India, but not in Sri Lanka. The caste system, where people were born into hereditary occupational groups, with a carefully defined ranking, with intermarriage strictly forbidden, with brutal honour killings to suppress the lower ranks \u2014 wasn't that long past, part of the dustbin of history?\n\n\"What... what? We don't have untouchables.\"\n\n\"Manjula's ancestors were latrine cleaners. It would have been their job to clean up people's shit \u2014 animals' shit too. No one could touch them \u2014 even when they were beaten, it was with sticks. They would live in restricted neighbourhoods. They could not visit the same temples, nor even eat out of the same plates as other castes.\"\n\n\"That's ridiculous.\"\n\n\"It is a primitive and barbaric system, yes. But our people believe in it. When I was a boy, your grandfather once pulled me by the ear and smacked me because I had talked to the young man he had hired to clean up after the animals. He told me if I ever polluted the house with the presence of such a man, I would get a severe thrashing.\"\n\n\"So now you believe that crap?\"\n\n\"Don't be ridiculous,\" his father snapped. \"My father was wrong. He was a bigot. But that bigotry has not gone away. Even some of my siblings \u2014 if they came here and found out a parachi had been here, they'd walk out, and some of them would want the chair she sat in scrubbed, before they came here again.\"\n\nTony did not know what to make of this. Raji aunty \u2014 a bigot? Ponnambalam uncle? So prejudiced against Manjula he'd want a chair scrubbed? These were aunts and uncles he respected, people he loved.\n\n\"I know you are young to be thinking of marriage. But if you were to marry a girl like Manjula, I don't think more than a quarter of our family and friends would attend your wedding.\"\n\n\"We don't have to tell them\u2014\"\n\n\"Manjula's last name is Alukkuchuttam. Did she tell you that? It literally means 'cleaner of dirt'. Her village is a poor one with many pariahs. Even if she does not reveal that, we can guess from her accent.\"\n\n\"She's not a dirt cleaner! She's going to be a doctor!\"\n\n\"I am sure she will be, son. You have not known this because none of the pariahs made it to this country. They never left Sri Lanka. They did not have the connections to emigrate as refugees, nor the education to qualify as skilled immigrants. Manjula is in fact a rare exception. She must indeed be very intelligent and determined to overcome such a background.\"\n\n\"That's why I like her so much.\"\n\n\"If she marries you, be aware of the sacrifice the two of you must make. You will lose many of your relatives and friends. Children you have grown up with. Uncles and aunts who have loved you.\"\n\n\"How can they still think like that?\"\n\n\"Believe me, I have had this argument many times. Did you know that pariah is an English word too? It is the only English word of Tamil origin.\" Not even the nerd in Tony had made that connection. Pariah in English does indeed mean a despised person, an outcast.\n\n\"We are not trying to be cruel to Manjula,\" his father added. \"Actually we are trying to protect her.\"\n\nTony bristled. \"How?\" He almost spat the words out.\n\n\"Have you been intimate with her?\"\n\nHad he? Did their romp the other day count as \"intimacy\"? Tony genuinely did not know the answer to that question.\n\n\"You don't have to answer that,\" his father continued. \"My point is this. Throughout history, upper castes have preyed on the low. Sexually.\"\n\nTony started to protest but his father held up a hand. \"Nobody in our family will admit to this, but it is true. Traditionally, a karaiyar man, such as us, could have an affair with or even rape a parachi woman, virtually with impunity. Their wives would think of it as masturbation, not infidelity.\"\n\n\"I will never hurt Manjula,\" Tony insisted.\n\n\"Be sure that you do not. If you are intimate with her, and then fail to marry her, you will have hurt her deeply, I can promise you that.\"\n\nTony did not know what to say.\n\n\"We are not trying to impose another country's morality on you. But remember, she is from another country,\" his father said, a tone of finality in his voice. \n\nTony felt his stomach churn. He shut his eyes tightly. This could not be happening, this nightmare, this evil blast from the past. He felt like crying...\n\nCrying? Manjula had been crying!\n\nHe ran out of the room. Manjula was sitting on the couch on the living room, still sobbing. His mother was sitting beside her, crooning something softly in Tamil, but not, Tony noted, actually touching her. \n\n\"Manjula,\" Tony said, struggling to keep his voice calm. \n\nShe looked up at him, then deferentially gazed at the carpet again.\n\n\"Manjula,\" Tony repeated. He grabbed her hands.\n\nIt did not take long for the significance of that to dawn on her. He caressed her fingers gently. She looked at him in surprise and shock. He lifted his fingers to her face and wiped away her tears. He placed a hand on each of her cheeks.\n\nGently, he pulled her to her feet and took her in his arms, just holding her, mutely, while her entire body wracked with sobs. Leaning on his toes, he rocked her back and forth, slowly, soothingly, for a long time, waiting as she cried herself out.\n\nOver Manjula's shoulder, Tony made a gesture at his mother. He let Manjula go. His mother put her hands on Manjula's shoulders, gingerly, as if petting a scary-looking dog for the first time. Tony scowled, and looking abashed, his mother gave Manjula a hug. He motioned to his father, who had entered the room, to follow suit. The older man grimaced, but acceded to his son's wishes.\n\n***\n\nThat night, Tony was lying awake, upstairs in his room. Manjula was in the spare room, in the downstairs part of the house. Would she have gone to sleep? Or was she still upset? He headed downstairs.\n\nShe was awake.\n\n\"I am so sorry,\" she whispered sadly, \"so sorry I did not tell you.\"\n\n\"It's okay. I don't think I would have understood if my dad hadn't explained it.\"\n\n\"Your parents are so wonderful. I was so afraid they would beat me.\"\n\n\"They would never do a thing like that.\"\n\n\"Or not let me stay here.\"\n\n\"They would not do that either.\" Though, he had to admit, they were not likely to tell friends and family about Manjula.\n\n\"But I cannot believe \u2014 do you still want to be with me? Knowing what I am? You still want to touch me?\"\n\nIf there was one thing Tony hated, genuinely hated, it was prejudice.\n\nHe remembered the bitter humiliation he had felt when he was nine, and a classmate had joked about the chocolate that he had supposedly fallen into. He remembered the kids who had followed him home, making sneering imitations of Indian music. He remembered movies like Indiana Jones and the Temple of Doom, how everyone had asked him whether he ate chilled monkey brains. He remembered flinching every time he saw Apu on the Simpsons. He remembered the constant complaining, sometimes even from teachers, about immigrants and how they all soaked up welfare and stole jobs simultaneously.\n\nThere were the stories of Sri Lanka he had grown up with \u2014 of how Sinhalese mobs, death lists in their hands, went from house to house, rioting, killing, burning Tamils to death. He had seen the pictures of his grandparents' homes, piles of rubble, entire streets with smashed houses and burned fields. He remembered the TV images of the thousands who lay dead on the beaches when the war reached its bloody end. His family had fled, scattered all over the world, struggling to find countries that would take their refugee claims, cousins grown apart, cultures dividing them, roots fraying. \n\nWas there anything in the world worse than prejudice? Surely not. And, in his mind worst of all, it had reduced this beautiful girl, this precious girl, to a wreck of tears.\n\n\"How can anyone call you untouchable? I want to touch you \u2014 more than ever.\"\n\nFor the first time since dinner, her lips curled into a smile. \"You never stop, do you?\"\n\n\"I guess not. But it doesn't have to be tonight.\"\n\n\"Yes it does.\" She sat up suddenly. \"Can your parents hear us down here?\"\n\n\"Not if we speak quietly.\"\n\n\"This house is so huge. Just three of you lived here? Ten people would live in a house this size in my village.\"\n\n\"It does feel a lot better with a fourth person in it,\" said Tony. Manjula smiled. \"Your parents are not the only wonderful ones in this family.\"\n\n\"My dad... my dad said it would hurt you very much if we had sex and then did not get married.\"\n\nManjula looked wistful. \"He is a wise man.\"\n\n\"I know... I know in Sri Lanka people get married quickly. My parents only knew each other a few weeks when they decided to get married. But here... here it takes years.\"\n\n\"And couples just have sex during those years? Even if they never get married?\"\n\n\"Yes.\"\n\n\"Does that not make it very painful for them? If they break up?\"\n\n\"Yes, I suppose it does. Breakups can be very painful. Sometimes people get very depressed.\"\n\n\"Do you know why I was crying today? I cried because I thought you would break up with me.\"\n\n\"I won't.\"\n\n\"And when you touched me... I could not believe how it felt. Just knowing that you were willing to touch me. I felt it up and down my body. It was like magic.\" He could hear her breathing hard. \"Will you touch me again?\"\n\nTony leaned over and kissed her softly.\n\n\"With your hands.\"\n\nHe stroked her beautiful face with his fingers. It made him feel warm to see the look of bliss going across it. It was the same feeling he got playing piano, that sense of giving yourself to the world, letting music fill the room. Or in this case, letting joy fill his girl.\n\nHe drew his fingers down her neck softly, watching her close her eyes and breathe deeply. \n\nThen an idea occurred to him. He got up. \"Please stay a little longer,\" she begged, but he was only going to the other side of the bed. He put his hands on her foot.\n\n\"What are you doing?\"\n\n\"This is called a foot massage.\"\n\n\"I should be doing that to you, not you to me. It is not fitting.\"\n\n\"Does it feel good?\"\n\n\"Yes, but\u2014\"\n\n\"You can do one for me later. If it does not feel good, just say so and I will stop,\" said Tony firmly. \n\nManjula, being Hindu, would not have heard the story of Jesus washing his disciples' feet. He who exalts himself will be humbled, but he who humbles himself will be exalted. \n\nHe began to sing Ovvorru Pookalume, a beautiful Tamil motivational song, performed in its movie with a real band of blind musicians. He'd read a translation before, so did know approximately what he was singing.\n\n\"Every flower says, life is a struggle.\" He squeezed each of her feet, from heel to toes, then drew his fingers gently across the tops of her feet to her ankles. If the light had been on, he'd have had a clear view up her robe.\n\nAs if she'd guessed that fact, she pulled up the robe to knee level. \n\n\"Every sunrise says, day follows night.\" He started massaging her calves. They were very tense, but he could feel them relax as he touched them.\n\nShe pulled the robe still higher.\n\n\"Keep our spirit, we will gain what we strive for.\" It was harder to keep his voice steady. Seeing her lovely thighs had been powerful enough, touching them was something stronger. His cock was beginning to rise. No. He could not do that. He could not take advantage of her, not when she was this upset and vulnerable.\n\n\"Your heart, your heart, it can become something new.\" Her silken thighs \u2014 their feel was exciting him. Was it exciting her too? He lightened his touch, running his hands over her knees, circling on the front of her thighs, rising higher, and higher.\n\n\"Whether it be mountain, or be ice, you fight on,\" he sang. Manjula spread her legs wide. Her inner thighs, that glorious region just below her panties, felt so incredibly soft, softer than a feather pillow. Touching it made him nearly mad with desire.\n\nHe bent down and kissed the inside of her thigh. Her leg straightened out like a ramrod. Hands grabbling, she pulled off the robe entirely. Underneath she had on, oh my god... it looked like that dazzling emerald number they'd bought. \n\nHe paused. His mouth was directly over her green panties, and only the dimness of the night light prevented him from seeing through it. Was it moist down there? Should he touch it? His father's words rang again in his brain.\n\nHe let the song speak for him. He no longer remembered the meaning of this verse, but Manjula understood. \"Inside what person is there no pain? As time passes, so does the illusion of pain.\" He moved higher, over that heavenly, curved waist, that impossibly thin midriff.\n\n\"Only the heart that can stand pain will find happiness.\" He put his arms around her soft form and kissed her just above the navel, feeling her warm body yield to his. He felt wetness on his chest. Somehow the smell did not bother him at all.\n\nManjula put her hands under his arms, tugging him upwards. She looked at him with a very tender expression, then burst into song herself. \"Thousands of desires in our eyes, ambitions in our hearts. No one can defeat you if you persevere.\" She kissed him, arms wrapped around each other. As their tongues probed greedily into each other's mouth, their hands wandered, exploring each other's body. Tony stroked her hair, caressed her back, reached down again to fondle her legs.\n\nShe broke for air, then paused. \"We... we have to stop. I do not wish to be pregnant.\"\n\n\"I'll stop.\"\n\n\"But I do not want to stop.\" She grabbed at his shirt, and with an almost angry motion pulled it off. She giggled. \"You need to do more exercise,\" she admonished, putting her hands on his chest. Then she paused.\n\n\"I am torn in two. I want... I want to feel what it is to experience climax. But I cannot get pregnant. I have not seen the doctor.\"\n\n\"You don't have to do anything you don't want to do.\"\n\n\"I wish there was another way. I wish girls could masturbate, like boys.\"\n\nManjula never failed to surprise him at just the right moment. \"What are you talking about? Girls can masturbate.\"\n\n\"How? We do not have a conveniently-sized organ for that purpose,\" she shot back, smacking him on the front of his shorts.\n\n\"What do you think your clitoris is?\" Tony asked.\n\n\"It is a useless organ, an artifact of evolution. Like the appendix.\"\n\n\"Manjula, you have taught me so much already. Can I teach you something now?\"\n\n\"What is it?\"\n\n\"I promise I won't hurt you. In fact, I won't touch anywhere that I haven't already touched.\"\n\n\"I trust you, Tony.\"\n\n\"Will you do as I tell you?\"\n\n\"Yes.\"\n\n\"Take off your top.\"\n\n\"Why am I not surprised?\" she grumbled, but she obeyed. Tony's cock was begging for a closer look, but he knew that turning on the light would only make her feel more self-conscious. \n\nTony had never done this, but he had read about it. He could only pray the web articles knew what they were talking about. He took the tip of her little finger between his index finger and thumb, and gently wiggled it back and forth.\n\n\"Do that, not with your finger, but with your nipples.\"\n\n\"Oh... oh! Oh!\"\n\nHow badly he wanted to take those nipples in his own mouth. He settled for kneeling on the floor and leaning forwards, just enough for his breath to be on them.\n\n\"Circle your finger around them.\"\n\nHer breath was hot and heavy in response.\n\n\"Squeeze them.\"\n\nHe had to put his hand over her mouth to muffle a scream.\n\n\"Now take off your\u2014\" She had them off before he could even finish the sentence.",
        "Manjula was naked. The most beautiful girl in the world was lying nude before him. He stared with wonder at her. No picture, no video, no depths of imagination can do justice to the marvel that is the female human body. Billions of years of evolution, thousands of years of civilization, a lifetime of growth had led them to this moment. There was only the tantalizing form before his eyes, the intoxicating sounds in his ears, the fantastic soft skin that had aroused his feelings. \n\nShe was prostrate with arousal, helpless with desire. He could be inside her in seconds, thrusting triumphantly, feeling that glorious pussy around him. His cock jerked, a wet spot soaking through to the front of his shorts. No. Not yet.\n\nHe knelt between her legs, to get the best possible view. \"Run your fingers outside your pussy.\"\n\nHis heart was pounding. Her breath was coming as fast as a sprinter's. \"Touch your clit.\"\n\nShe had just enough control to stay quiet, but her sudden gasp was music to his ears.\n\n\"Now finger it, the same way you fingered your nipples.\"\n\n\"Oh Tony... oh...\"\n\n\"Touch yourself. You are free. You do not need a man to give you this. You can have it wherever, whenever you want.\"\n\n\"I want you...\" she moaned in Tamil. The deepest feelings come out in one's own language.\n\n\"I want you too,\" he replied, also in Tamil. He could not take much more of this. His hand began to drift to his cock. \n\n\"I love you, Tony...\" And then her body was shaking, quivering. Her heels stomped on the bed, her ass leaped up and down, her head was rolling, her shoulders shaking. Tony had never witnessed a woman orgasm before \u2014 he knew now that what they had in porn were not orgasms. It was like seeing an ocean in storm, but a beautiful ocean, a vastness of energy and feeling and hunger and longing. It was the most powerful expression of human emotion he had ever seen.\n\n\"I love you too, Manjula,\" was all he said, but in English.\n\nTears were flowing down her face. Tony lay down beside her and took her in his arms again. She held on to him tightly, as if holding on to life itself, fingers clawing at him, breath heaving. His cock prodded into her belly.\n\nShe slid down the bed, and he felt his shorts being pulled off.\n\n\"Manjula, what are you doing?\"\n\n\"Shh.\" She sang more lines from the song to quieten him.\n\nAnd then her hands were caressing his feet, touching them in the same gentle way he'd touched hers.\n\nA woman's hands are not like a man's. There is a smoothness they possess that no man can match, like comparing marble to asphalt. Tony could not believe the tingles of joy her touch brought him.\n\n\"Lie still,\" she said. \"Let me be your servant girl.\" He felt her lips kiss one foot, then the other. The simple submission of it left him deeply moved.\n\nManjula had him on his side, allowing her to massage both the front and back of his legs. She drifted her hands upwards, as if climbing a ladder, sending waves of delight up his calves, the hard muscles in his thighs. Each touch of her hands was like magic, a sizzling ray that left marks of joy behind. Nothing in his life had ever felt this good.\n\nShe circled his cock, touching his legs, his belly, his waist, everywhere but the organ pulsing and wet with desire for her. His belly vibrated when her fingers crossed it.\n\nShe put her arms around him \u2014 around his midsection. Her hands were on his ass. For the first time he discovered just how many nerves that part of the body really has. He felt he was going to melt, so powerful were the feelings she evoked within.\n\n\"Oh my god, Manjula,\" he babbled. \"Oh my god.\"\n\nShe rolled him onto his back and spread his legs wide. Her hands were on his thighs again, leaving his crotch to wriggle and squirm in anticipation. Then slowly, she traced her finger lightly, so lightly, up between his legs. She gently pried his legs apart to get a better angle in.\n\nHe felt his groin being fondled, like a guitar. But the feeling! It was a sheer physical pleasure of the kind he'd never felt in his life. His cock was dripping now, dripping onto its base, but Manjula's hands did not flinch.\n\nShe started to caress his balls. He moaned. Surely this was heaven, he had died and gone to heaven, nothing, nothing could feel this pleasurable. Did she see how strongly his cock was jutting in her direction, leaping, thrusting, trying desperately to find this princess, this goddess, that had given it such ecstasy?\n\nShe had but to place her palm on his cock before he burst, burst with the days of pent-up hunger he had for her, burst with the intimacy he felt for her, burst from the gentleness and affection with which she'd cared for him. \n\n\"Was that good?\" she asked nervously.\n\n\"Manjula, Manjula... this is the greatest moment of my life,\" he panted.\n\n\"For me too,\" she said. She contemplated her fingers, white with cum. \"It is not very much, is it? Just a spoonful.\" She brought her fingers to her face and sniffed them. She even put the tip of one finger in her mouth.\n\n\"Not so bad,\" she admitted. \"Maybe for you, the best is yet to come.\"\n\nChapter 4\n\nManjula was so unaccountably cheerful at breakfast the next morning that Tony's mother looked at her suspiciously. Tony feared he would get questions he didn't want to answer, but Manjula smoothly diverted her by asking if she could take some Sri Lankan food back to campus. His mother considerately gave her coolers full of it.\n\nSitting on the bus home, Tony felt a deep sense of contentment. He had a loving, beautiful girlfriend. He had understanding, open-minded parents. His studies were going well. He was even learning Tamil, a dream he'd had for years.\n\n\"Manjula,\" he asked, \"how do you feel?\"\n\n\"Today I feel wonderful,\" she replied. \"What we did last night was wonderful. But I am worried.\"\n\n\"About marriage?\"\n\n\"Not about us. Something will be worked out. I am worried about school.\"\n\n\"Why?\" Tony found it hard to believe Manjula's brilliant mind could be fazed by anything.\n\n\"I have biology tomorrow. I hate biology. It is just so fluid, and messy. I especially dislike the lab sessions.\"\n\n\"What other classes are you taking?\"\n\n\"Chemistry, economics, maths, and English writing.\"\n\n\"What if you dropped biology, and took something else?\"\n\n\"I need biology to be a doctor.\"\n\n\"What if you didn't need to be a doctor?\" He grinned. \"Hypothetically.\"\n\nShe looked at him archly. \"Hypothetically, I could be a quantitative analyst like you said. Or an actuary.\"\n\n\"You can check, but it sounds like your other courses are compatible. Just drop biology and take another class instead.\"\n\n\"I wish I could do that,\" she sighed. \"But I cannot.\"\n\n\"What if you stayed here?\" Tony asked.\n\n\"In Canada? And marry you, no doubt?\" She looked at him with mock outrage. \"You would sacrifice my life plans for your cock?\"\n\nTony did not rise to the bait. \"Even if we had never met, there is a good case for you to remain here. You would be very wealthy by Sri Lankan standards.\"\n\n\"And leave behind my family? My friends?\"\n\nTony contemplated this. Immigrants could sometimes bring their parents over, but Manjula could not bring her aunt and uncle, and certainly not her cousins, or friends.\n\n\"What is your aunt and uncle's income?\"\n\n\"Twenty thousand rupees per month.\"\n\nTony took out his phone and consulted a few websites. \"Okay, starting salary for a quant... after taxes... monthly... convert to rupees. That would be five hundred and thirty thousand rupees a month.\"\n\n\"What?\"\n\n\"That doesn't mean you're rich, since your expenses will also be high. But you could send your aunt and uncle less than five percent of your income, and still double theirs. And your income could double in the first ten years. And in the U.S., quants make even more.\"\n\nManjula was speechless. She had been looking forward to earning a doctor's salary of sixty thousand rupees a month, which would make her one of the richest people in her village. A specialist could get eighty thousand. And that wasn't the starting pay, it was the rate after several years of service. \n\nIf she moved to Colombo and went into private practice, she could earn double or triple what she could in her village, but it would still barely be a quarter of what she could earn abroad, if Tony's figures were correct. And she'd have to deal with the high cost of living in the city.\n\n\"But what happens to my village?\" she asked.\n\n\"What do you mean?\"\n\n\"How can they manage without a doctor? Poor regions like ours have very few doctors of their own. The Government assigns recent graduates for duty in the rural areas. They do a two-year stint and then they leave. The people never get treated by experienced practitioners. And they cannot see a specialist without travelling many hours to the city.\"\n\n\"So you feel,\" said Tony slowly, \"that it's your duty to go back and help them.\"\n\n\"Yes,\" she said fiercely. \"Do you know what we called people like your parents who fled abroad during the war?\"\n\n\"What?\" said Tony, shamefacedly.\n\n\"Runaways. We called them runaways. It was your caste, the karaiyar caste, that started the war. It was your caste that had the good schools and wanted the university places and best jobs. And when the Army came, it was people from your caste who were the first to go abroad. \n\n\"The rebels did not have enough soldiers. So they wandered into villages, into schools. Child soldiers are the most obedient. They came into my school and demanded I go and fight for them. I was seven years old. Appa begged with them, he pleaded, let her finish her studies, she is too young. Finally, they let me go, but only if he went in my place. So he went to fight.\"\n\nTony felt, suddenly, deeply ashamed of himself.\n\n\"Two years later we got a letter. Appa was in hospital. He had lost his leg. Amma was desperate to bring him home. She heard that the Air Force had agreed to let the area around the hospital serve as a safe zone. The Army promised that unarmed civilians who left rebel territory would be allowed to go home. I wanted so much to go with her, to see him again. I missed him so much. Amma said no, it was too dangerous. She went off on foot. It would have taken her two days to get to the safe zone.\"\n\nEveryone Tony knew had either gone abroad or was safe in Colombo during the terrible last days of the war. He had never felt more uselessly overprivileged.\n\n\"There were hardly any doctors at that hospital. There had not been many in the first place, and most had fled. The Government ordered the Red Cross to leave, they accused them of aiding and abetting terrorists. Appa just stayed there, I don't know if anyone treated him. All I know for sure is that Amma did make it there.\"\n\n\"What happened to your father and mother?\"\n\n\"At least they were together. They... they...\"\n\nManjula was not crying; she was stone-faced, with a look of grim determination.\n\n\"The Air Force bombed the hospital anyway, after they said they would not. They said there were terrorists in the hospital. Appa was a rebel soldier, so they would have counted him as a terrorist. But he never wanted to kill anyone. Everything he did, he did to protect me.\"\n\nWhat can you say to a story like this? Tony thought of the sense of contentment he'd been enjoying just minutes before, now apparently gone forever.\n\n\"They cremated all the bodies, right there on the spot. The Government refused to admit Amma had been there. But other people have told me she was going there, they saw her nearby. There were many civilians in that hospital who died. The war ended a few weeks later. They were dancing in the streets in Colombo. I have nothing left of Amma and Appa. Not even their ashes.\"\n\nTony remembered that time \u2014 of how crowds of Tamils had protested the massacres, holding demonstrations in London, in Ottawa, in Washington. In Toronto, a gathering of angry Tamils had stormed onto the Gardiner Expressway and blocked it for hours. To this day, some still believed the dead rebel leader was alive and in hiding somewhere, and that the glorious struggle would one day start again. Many denounced the perfidious Sinhalese, but the steady flow of contributions from the West that had financed the rebels dried up after they were gone.\n\n\"I am so sorry about what happened to your parents,\" he said. It was a hopelessly anodyne thing to say, but he could think of nothing else.\n\nShe took his hand in his. \"It is not your fault. And I cannot ask you to come back with me to Sri Lanka. I do love you, but I do not believe you could handle the standard of living we have there.\"\n\n\"I love you too, Manjula,\" said Tony robotically, but he felt completely unworthy of her. His dreams were of the acquisition of wealth and status. Hers were of taking care of her family and community.\n\nManjula had lost both her parents at the age of nine. She had known poverty, had known deprivation, had known cruelty and suffering to a degree he could barely imagine. He, on the other hand, had lived like an emperor, studied at well-furnished schools, driven smooth-running cars on neatly paved roads, never had to worry about bombings or invasions, and didn't give any more thought to life except to which high-paying job he could get \u2014 or whether he could get his girl to suck his cock. What a waste of space, he thought bitterly.\n\nManjula dozed off as the bus drove on, her head lolling onto his shoulder. Tony thought and thought. Finally, he made some decisions.\n\n***\n\nWhen he got home, he spent some time surfing the net, filled in some forms, and drafted a few emails.\n\nHe texted Manjula: Can't do Tamil lesson tomorrow; booked something else.\n\nHer reply came in seconds: Why what is wrong?\n\nNothing just got somethn to do, he wrote back.\n\nShe took a bit longer to reply. Can you come over around 7?\n\n***\n\n\"Why did you try to thaavi our lesson?\" she asked, in Tamil, when he arrived the following evening.\n\n\"I um, I was volunteering at the student centre lab.\"\n\n\"Volunteering?\"\n\n\"You know, guiding students who need computer help. You'd be surprised how many have spent their life on their phone but can't do squat with a desktop. Some of them don't even know how to type, or do a Google search, or even print a document.\"\n\n\"You got a job?\"\n\n\"No. I volunteered. I did it for free.\"\n\n\"Why would you do that? Do you know these students?\"\n\nTony was puzzled by her attitude. \n\n\"Well no, I just... I know that I'm very good at computers, and a lot of them aren't. I can sometimes figure out in a few minutes what would take them an hour. If I can help them get their work done, it takes away their stress, and I felt better after I went.\"\n\n\"Were you feeling bad?\"\n\n\"Of course I was feeling bad!\" Tony snapped. \"After what you said about runaways, I felt awful. I just thought... maybe you were right, maybe my life should have some kind of meaning.\"\n\n\"So you decided this just yesterday? After we said good night?\"\n\n\"That's right.\"\n\nManjula laughed. \"Do you want to know what I was doing last night?\"\n\n\"What?\"\n\nShe put her finger in front of her crotch and made a wiggling motion. \"You are a very good teacher, you know,\" she said playfully. \"I wanted it so badly I did it twice more after you left back at your parents' house. Last night I did it another three times. I cannot seem to get enough.\"\n\nTony would normally have been quite aroused by this, but he found himself getting more upset. He'd been doing deep soul-searching, and she'd just been pleasuring herself?\n\n\"But \u2014 I was even \u2014 I emailed some non-profits, asking if they'd take me on an unpaid internship next summer.\"\n\n\"What? I thought you said you could probably get an internship with a big famous tech firm, and you needed one to get a permanent job later.\"\n\n\"I guess I decided some things are more important than money.\"\n\nIt was now Manjula's turn to get angry. \"Are you throwing your career away just to be noble?\"\n\n\"Why not? Isn't that what you're doing?\" Tony shouted back.\n\nThere was a silence.\n\n\"Why are you angry with me?\" asked Manjula in a small voice.\n\nTony sat down on the chair. \"I'm sorry,\" he said. \"I'm not angry with you, I'm angry with myself.\"\n\n\"Why, what have you done wrong?\"\n\n\"The question is what have I done right? And after what you said yesterday, I couldn't think of anything.\"\n\nManjula squatted down before him and took his hand. \"Tony, the past week since I met you has been the happiest of my life. That is what you have done right.\"\n\n\"I just thought... you were going to devote your life to taking care of your village, and I\u2014\"\n\n\"I am sorry, I should not have ranted like that,\" she said. \"The reason I got so heated was because you made me realize the flaw in my plan.\"\n\n\"What flaw?\"\n\n\"I hate biology. I can learn it if I have to, but I do not think I will ever love it the way I love maths.\"\n\n\"But you said your village needed a doctor\u2014\"\n\n\"Yes, but you are right too. How can I be a good doctor if I hate biology? I was thinking about that...um...in between.\" She blushed. \"I just miss Amma and Appa so much, I wanted to do something to make their deaths worthwhile.\"\n\nHe looked down at her. \"Their deaths were not worthwhile. It's their lives that were worthwhile. Because they produced you.\"\n\nShe smiled. \"I am glad you are helping in the lab. Maybe I can do something for maths students in difficulty.\" \n\n\"I already know what you can do for Tamil students in difficulty.\"\n\nShe chuckled. \"This was our first fight!\" she said, in Tamil. \"Did you like it?\"\n\nHe found himself relaxing. \"In a way, I did. I think... I think I needed a jolt like that. It really is a cruel and unjust world out there, and we have to do our part to make it better. Not just drift through life.\"\n\n\"You can decide on your internship later. I actually asked you over here for a different kind of jolt.\"\n\nHe looked at her, taking in again just how pretty she was. Her knees were angled before his, her lovely brown skin glowing at him. The little red dress she had on brought out the bright red of her innocent-looking lips. She had clearly just taken a shower, he could smell a trace of scented soap. And he couldn't help noticing that, even though she could have sat in the chair beside him, she was squatting below him, in a submissive position.\n\n\"And what would that be?\" he asked.\n\n\"Rachel is in class from seven to nine. That is why I said to come at seven.\" She said that in Tamil, so it took Tony a moment to process it. \n\nShe stood up, and just as she had before, she slipped out of the dress. There it was again, that feast for the eyes, that slender brown wonder he had the honour to call girlfriend. She had on a frilly red one-piece mesh, loosely hanging off straps around her shoulders, through which he could see most of her breasts. Little flaps ran along the bottom, looking like the only covering for her pussy.\n\nSwaying her body, she slid the straps down her arms. The outfit slowly slid down to the floor. And this was not late at night in a darkened room. This was in broad daylight, with the bright rays of the setting sun coming in through the window.\n\nManjula, nude. Looking a little scared, true, but her pose firm and steady, her gaze very direct. She wanted this. She wanted him to stare at her unclad body, to take pleasure just from the sight of her, to send that familiar hunger coursing through his loins. He could not have been more enthralled if it were the Mona Lisa herself. Her breasts were as round as melons, full and rich, a lusty challenge to his eyes. She twirled around, and he could see that pert posterior, curvy and perfect.\n\nBut her pussy! \n\nIt is not for nothing that the vagina has been called the holiest of holies. It is the canal that gives life itself. It is the desired, cherished target of millions of men throughout history. There has always been something mystical, something precious, even sacred about this organ, this fount of pleasure, this place of so many dreams and so many hopes.",
        "Manjula, nude. The first, the only naked woman Tony had seen in the flesh. His cock was stirring, that was to be expected. But his mind and his heart were just as touched. On all levels he wanted her so badly it hurt.\n\nHe stepped forward.\n\n\"Wait.\" She held up her hand.\n\n\"I\u2014I want you to touch me. I know there are other ways you can touch me. I want you to feel me every way you want. But... but...\"\n\nHe waited patiently.\n\n\"I cannot go back to Sri Lanka and lie. I cannot tell anyone I am a virgin if I am not.\"\n\n\"You want me to touch you... without having sex?\" He reflected for a moment. \"What counts as sex?\" He felt like Bill Clinton.\n\n\"We cannot do anything that could get me pregnant. Even a Western girl would need to see the doctor, right?\"\n\n\"Right.\"\n\n\"And what they said before, about sucking cock. I think I am beginning to understand, now. Why they do it. If it were clean...but no, I think that also counts as sex.\"\n\n\"So what can we do?\"\n\n\"Anything else. I want you to tell me what to do and I will do it.\"\n\nHe forced his eyes off her pussy and back to her face. He saw the love shining there, but the fear too. Dimly, he realized just how hard this was for her, how much of an effort she was making.\n\nHe took her in his arms and kissed her softly. He knew she could feel his cock through his shorts. She pressed closer to him. \n\n\"I love you, Manjula. I will never hurt you,\" he said. He tenderly stroked her back, downwards, downwards. As gently as he could, he put his hand on her ass.\n\nThe effect was electrifying. She went rigid, holding onto him tightly. Her ass was unbelievably smooth, like nothing he had ever felt in his life. He drew his fingers across it, rubbing it, playing with it. When he squeezed her cheeks she gave a sharp breath, then brought her lips to his.\n\nAnd they were kissing again, kissing ravenously, their tongues tasting each other, his hands on her ass, feeling that incredible softness, like sinking his fingers into the softest of fabrics.\n\nHe began to tug at his shirt, but she silently brushed his hand away, and lifted it off herself. She knelt in front of him and kissed the wet spot that had already appeared on his pants. His cock jerked in response. She rapidly pulled off his pants and briefs, and stared wonderingly at his dick. She was so close that he could feel her breath on it. He wanted desperately to grab her head and push his cock into her mouth...\n\nInstead, she prostrated herself on the ground and kissed his feet again. Simultaneously turned on and appalled, Tony lifted her to her feet and led her to the bed. He lay down behind her, cock nestled in the crack of her ass, and put his fingers on her nipples.\n\nShe started. Tony was not at all sure what he was doing, and he knew his own rough fingers could not possibly be a match for Manjula's soft ones. As tenderly as he could manage, he wiggled her nipples. It was like sending an electric current through her body. She started to vibrate, arms and legs flailing. \n\nThe sensation of her nude body against his was overwhelming. Tony was used to masturbation, when feelings were limited to his cock. This was total. Manjula's warm cuddliness aroused his hands, his arms, his chest, his legs, even his feet. He felt fully alive, fully a man, in a way he never had before.\n\nHer breasts \u2014 could anything feel so pliable, such a delight? They melted into his hands as he squeezed them, fondled them, played with them. He softly stroked her belly and traced his finger along her thighs.\n\nWith a sudden roll, she was on him, kneeling on top of him, then lowering those glorious tits, lowering still further \u2014 would she really \u2014 oh god \u2014 \n\nAnd her breast was in his mouth. Tony felt like he had departed this earth, gone to heaven. Her arms were around him. She kissed his forehead lovingly and cradled him against her like a baby, indeed he felt like a baby now, sucking, nursing from one nipple, then the other, licking between them, savouring them. Only the shaking of her arms and the occasional moan revealed that she was just as aroused as he was, if not more.\n\nHis hands were free to explore her, and he did. Her ass felt just as awe-inspiring as before. A thought occurred to Tony. He released Manjula's breast and rolled her on her front again. He kissed her backside, leaving a trail with his tongue, down, down, all the way to her ass.\n\nHe buried his lips in her ass cheeks. They melted into his face, soft and delicate. It was intoxicating. He pushed his lips deeply into her ass cheek, breathing it, feeling the coolness of her smooth skin. \n\nHe rolled her over again and hovered over her pussy. The aroma of arousal was hot and heavy. This was it, the very epicentre of female pleasure. This was the test.\n\nHe dove in, looking for her clit.\n\nWas that it? It felt like a little round flap, in what should be the right place. Gingerly, he licked it.\n\nInstead of the moans he'd seen on the weekend, she gave only a soft breath.\n\nHe tried again, a little harder. Instead, he found her fingers pushing at his face, pushing him away. Was this, then her limit?\n\n\"Do you want it?\" he asked.\n\n\"Venam,\" she replied. Want. So did he. He wanted desperately to make her climax. He had to try.\n\nVery slowly, as cautiously as he could, he probed into her pussy with his finger instead.\n\nManjula yelped, and jerked in his arms. He withdrew his finger. \"Venam, venam, venam,\" she moaned. I want, I want, I want. \n\nTony traced his finger right outside her pussy, enjoying the music of her squealing. He teased her, probing right outside her folds, caressing but not entering them, as gently as he could manage.\n\n\"Tony...please...venam...\" she begged. Somehow his finger was working where his tongue had not. He inserted it in, sliding it back and forth. Each motion of his finger made her face come alive. Her pussy felt wet and soft and accommodating. He found a second finger could go in. And a third.\n\nHe tried curving his fingers upward, until his fingers touched something leathery, like a football. As he stroked it Manjula cried out.\n\nHe stroked it again. She cried out again. She was so cute when she was horny.\n\nWas this what they called the g-spot? He wondered if Manjula herself even knew. No matter. Her clit had to be around here somewhere too. He fumbled around quite a while until finally his thumb touched it. It was so small and delicate, easy to miss. \n\nBut unmistakable when found. If he made a pinching motion, squeezing her clit with his thumb and g-spot with his other fingers, her body roiled like a wave. She babbled away in Tamil, mixing up his own name with various Hindu deities. Tony had not thought himself the equal of Lord Shiva, but what greater power does a male have than taking his girl to a glorious climax?\n\nManjula screamed. Her head thrashed from side to side. Her legs leaped in the air, heels slamming down on the bed. Still, Tony kept to his gentle pincer movement.\n\nAnd then she had rolled over, rolled him on his back, and was kissing him fiercely, embracing him tightly. He could feel her heart throbbing, could hear her breath panting, could see the dishevelment of her hair, the jumble of emotions on her face. \n\n\"Tony...oh, Tony, that was the greatest, the greatest thing anyone has ever done for me.\"\n\n\"For me too. But...\"\n\n\"But what?\"\n\n\"Why didn't you let me lick your pussy?\"\n\n\"It felt very sensitive. I liked it much better when you touched it with your fingers.\"\n\nTony tried to contain his disappointment. If she couldn't handle him licking her, how could he expect her to lick him? Manjula was thinking the same thing.\n\n\"I know how badly you want me to suck you. I... I want to. But... I cannot. Not today. Please forgive me.\"\n\nHe was touched by just how guilty she looked. \"You don't need to feel guilty. I can cum in your hand like before.\"\n\nAn idea popped into his head, but he didn't dare mention it. But Manjula was too canny not to see the gleam in his eyes. She smiled.\n\n\"You are thinking of something else. I know it.\"\n\n\"No, nothing.\"\n\n\"It is you who should not feel guilty about what you desire. I will give you all I can. If I cannot, it is still okay for you to want it.\"\n\n\"I want\u2014\" and he told her. In great detail. It came from a lifetime of watching porn. Just confessing this to a beautiful naked girl, while being naked himself, made his cock snap back to attention, poking Manjula's leg.\n\n\"I will do that for you.\"\n\n\"You don't have to\u2014\"\n\n\"I want to.\" \n\nAnd thus, a few minutes later, Tony was in his own part of heaven, lying on his back, while Manjula kissed and licked him. She nipped at his neck affectionately, making him jump. She twirled her tongue on his nipples, and he felt them buzz in response, his temperature rising. As she nuzzled on his chest he felt a hot spot growing, a warm burning feeling under her lips. The warmth continued, like a fiery fluid of joy, following her tongue down to his belly, down to his waist.\n\nShe pried under him with her hands, squeezing his ass expectantly. Was she actually going to\u2014?\n\nHe turned over, and \u2014 oh god \u2014 her lips were on his ass!\n\nWhat meant more to him than the soft sweetness in that region was what lips on ass represent. How many times, after all, do we use kiss my ass as an expression of dismissal, of contempt? His heart felt like it would burst with gratitude for her submissiveness. He lay there passively, letting himself enjoy the attentions she was giving.\n\n\"Sit up,\" she commanded. He did so, and Manjula was down on the floor, on her knees, massaging his inner thighs with her tongue, pausing now and then to give him an adoring smile. He loved her so much. His cock felt like it was going to explode. Soon it would.\n\nShe kissed it, full on the tip, giggling when it squirmed at her. \"Oh, Manjula,\" Tony was moaning. She pressed his cock against her cheek, closed her eyes, and began to stroke it with her face, not inside but outside her mouth.\n\nAnd Tony painted her face.\n\nIn porn, Tony knew, covering a girl's face with cum is a sign not of intimacy, but of its absence. Not so here. Manjula had done a taboo fantasy, an icon of male dominance, without shame or fear.\n\nHe looked at her cheek, dripping with his mark on her. \n\n\"You have never...you have never looked more beautiful than you do now.\"\n\n\"Do I?\" she wondered. Idly, she picked up her phone and took a selfie. She looked back at Tony, leaned in so her cum-drenched face was beside his, then took another. She even took a selfie with his cock, which managed one last gasp of hardness at that prospect, before she collapsed, laughing.\n\nChapter 5\n\nTony should have been on seventh heaven after that experience. But one thing nagged at him.\n\n\"Why...why did you kiss my feet?\"\n\n\"I am parachi, you are karaiyar. For centuries my people have prostrated themselves before you.\"\n\n\"No! I don't believe in the caste system. We are equals.\"\n\n\"I was only teasing.\" She grinned. \"Your parents were telling me how the community here thinks of caste. I did not tell them, but actually they are stuck in the eighties. In Sri Lanka we have moved on. The rebels did not believe in caste, and did a lot to stamp it out.\"\n\n\"Really?\" \n\n\"The rebel leaders were karaiyar, like you. You know that your people started out as mercenaries, right? It was the Sinhalese kings who paid for them to come from India. But the karaiyar are not the highest caste, they are the second highest,\" said Manjula. \n\n\"Who were the highest, then?\"\n\n\"They are called the vellalas. They have history with your people. During colonial times, the karaiyar got rich sucking up to the Europeans. They had so much money they bought up whole fleets of fishing boats. Lower castes had to pay them rent to use the boats and earn the money back by doing the work of fishing. Your ancestors had imperial patronage and did not do much work. The vellalas were jealous. They called your people the 'boat-owning caste'.\" She giggled. Tony made a face.\n\n\"During the war the vellalas looked down on the rebels and even fought against them. So they made a big deal of equality. They recruited pariah soldiers \u2014 they even tried to recruit me. They made sure anyone could go to any temple. Soldiers could marry into any caste. I went to the same schools as vellalas, and teachers had to teach me. Now it is possible for me to be a doctor. Your people here are a bit behind the times.\"\n\nTony reflected on the sociological irony.\n\n\"You said you like a girl to be submissive,\" Manjula reminded him. \"And... all my life I have been the leader. My little cousins depended on me. All the other children at school, sometimes even some teachers, depended on me. Here I have to constantly navigate this foreign culture. Sometimes I think my ancestors had it simpler. They did as they were told, no matter how dirty, they prostrated themselves, and they did not have to make decisions and plan.\"\n\n\"So you like to submit, because it means you don't have to be responsible?\"\n\n\"Well not really. I know I am always responsible. But I like to pretend. I like to be dirty. And besides...\"\n\n\"What?\"\n\n\"It is worth doing these things just to see the look on your face. I have never seen anyone so happy. It makes me feel very good inside that I can do that for you.\"\n\nTony hugged her. \"Everything you do makes me happy.\"\n\n***\n\nThey settled into a routine. Over time, Tony rutted in a variety of places; her forehead, between her breasts, her belly, even on the crack of her ass, if not actually in it. Manjula loved the sense of being marked as property. She felt particularly docile, even kittenish, after his fingers had been inside her. \n\nThey didn't get to do this as often as they might have liked. Their homework burden was growing, as were their other activities. \n\nManjula had been serious about Tony starting an exercise program. She joined him at the gym, worried that the high-calorie Western diet would erode her figure. Tony liked ogling her in yoga pants, but was dismayed to find that she was in much better shape than he was.\n\nThe non-profits Tony had contacted advised him against unpaid internships, but they did ask him for volunteer help \u2014 cleaning up their databases, fixing bugs on their websites, and the like. In addition to the time he spent on that, he had signed up with one of the political parties active on campus, and now sometimes went to rallies or wrote articles.\n\nTony reflected that he wouldn't even have had the level of energy to sustain this pace without the joy that Manjula had brought to his life. For her part, she volunteered as a math tutor, and had also become active in the foreign students' association. \n\nLacking the time for long play dates in person, Manjula made do by sending Tony nude selfies, sometimes re-enactments of poses from his Playboy collection. He would have liked to send her a dick pic in return, but didn't dare. They both kept each other informed about their masturbatory activities, sending each other racy texts at odd hours of the day or night.\n\nNevertheless, Tony found himself hungering for some real quality time with Manjula. He phoned her up one evening.\n\n\"Hi angel, do you think you could get Saturday free?\"\n\n\"I have a lot of homework.\"\n\n\"So do I. But I want to take you to Toronto. We can rent a car.\"\n\n\"Why?\"\n\n\"We need to take some time for leisure, otherwise we won't be as productive the rest of the week.\" He'd guessed that would be the best argument to persuade Manjula. She finally agreed, on the condition that they leave early morning and return by early evening.\n\n***\n\nIt was a beautiful morning. The green of summer was giving way to the bright colours of fall. Yellow and orange decorated the roads. Manjula stared out the windows spellbound, never having seen autumn before.\n\nShe was also unprepared for the sheer number of cars on the roads.\n\n\"So in Canada... does every family have a car?\"\n\n\"Most of them, yes. Many even have two.\"\n\n\"What an amazing country,\" she sighed.\n\nTony wondered if she'd still feel that way if they got stuck in traffic. But, luckily, they did not. He pulled into Rouge Park. Hand in hand, they strode into the forest of tall Canadian maple trees. Far from the roads, they could hear only the noises of squirrels running, a stream flowing nearby, the wind whistling in the pines. \n\nTony loved walking in the forest. The only thing he found more beautiful than the trees was Manjula. As the weather cooled, she no longer showed off her legs in short miniskirts. But she was no less a feast for the eyes in skinny jeans and a denim jacket, and many were the photos he took of her.\n\n\"We don't have a huge amount of nature here in the city, but we try,\" he said modestly.\n\n\"It is very beautiful,\" said Manjula. \"It is not the same as Sri Lanka, but it is very peaceful. I can see why you enjoy it here. And you do not have to worry about dengue fever or snakebite.\"\n\n\"I haven't spent as much time outdoors as I should,\" Tony began. \"But there are lots of things people do.\" He told her about camping, about water skiing, about canoeing, kayaking, hiking, fishing.\n\n\"It sounds like you people have a lot of fun. Nobody in Sri Lanka can afford these things,\" she said wryly. \"If you are in a boat, it is because your job is a fisherman. And nobody would sleep in a tent if they had money to afford a proper house.\"\n\nPerhaps that was why, Tony thought, his own parents had little interest in the Canadian outdoors. He'd had to beg them to so much as take him on a nature trail.\n\n\"But how do you stand the cold?\" she asked. \"It is fifteen degrees outside.\"\n\n\"That's pretty good for this time of year,\" Tony replied. \"In the winter we can bottom out at twenty below,\"\n\n\"Oh, I will die,\" she said. \"How do you stand it?\" \n\n\"Kids have the most fun of all. They build little forts from the snow. They pack the snow into balls and throw them at each other.\" He told her about skating, about hockey, about tobogganing, about skiing.\n\n\"Do you do this \u2014 this skiing?\"\n\n\"I haven't tried it yet. Maybe we could do it together, this winter?\"\n\n\"Maybe,\" she said, but it was clear to Tony the cold was getting to her. They returned to the car.\n\n\"How about a Sri Lankan restaurant for lunch?\"\n\n\"What?\"\n\n\"You didn't know? There are more Tamils in Toronto than in Jaffna itself, now. Lots of restaurants.\"\n\n\"My village does not have restaurants. Rich people hire cooks to come to their homes. Poor people work as cooks.\"\n\nBefore going to the restaurant, Tony showed her some of the many small Tamil grocery stores and take-outs in Scarborough. Manjula was shocked. \"They have a better selection of spices than we have in our village!\" she exclaimed. \n\n\"Toronto is two percent Tamil,\" Tony replied. \"I think in all of Sri Lanka, only Colombo has a larger Tamil population. Wait till you see the restaurants.\"\n\nManjula had never actually been to a full-service restaurant before, only small cafeterias. She wasn't prepared for the sheer number of dishes on the menu.\n\n\"They offer \u2014 all of these dishes?\"\n\n\"Yup. You pick the ones you want, and they'll bring them.\" \n\nGetting to stay seated while being served by a waiter was a staggering experience for her. Tony had to restrain her from going to the kitchen and offering to help.\n\n\"But they are bringing me food.\"\n\n\"Yes, that's their job.\"\n\n\"But I am a parachi.\"\n\n\"So? Your money \u2014 our money \u2014 is as good as anyone's.\"\n\n\"I never imagined I would ever have servants of my own,\" said Manjula wonderingly. \"How many places like this are there?\"\n\n\"Thousands. Even the smallest town has at least one restaurant. People eat there a lot, just not when they're in a hurry,\" Tony explained.\n\nRestaurant food wasn't quite as good as homemade, but Manjula loved it, though she blanched when she saw the bill. Tony paid it before she had a chance to object.",
        "They slurped ice cream in Nathan Phillips Square. They watched sidewalk performers on Yonge Street. Manjula gaped at the giant sculpture of flying birds in the Eaton Centre. She could not, of course, resist shopping again, but eschewed the expenses of Nordstrom's and Holt Renfrew in favour of simpler, but no less sexy, fall outfits. \n\nThey followed the underground malls to the intersection of King and Bay, then went outside. Manjula was spellbound by the sight, an intersection with four of the city's largest skyscrapers. First Canadian Place, Scotia Plaza, Commerce Court, Toronto Dominion Centre. They glittered like palaces, with gleaming glass doors, smooth marble floors, and flashing ticker lights giving everything a sense of importance.\n\n\"If you got a job as a quant, or a consultant, or an actuary, there's a good chance you could end up working here,\" he said. \n\nTony had never taken seriously the gag that tall skyscrapers are phallic symbols, but Manjula's reaction made him wonder. The expression on her face, at any rate, was very similar to what she looked like when he was fingering her. His cock tingled a little at that thought.\n\n\"Kiss me,\" said Manjula suddenly. She had never actually said that in so many words, but Tony was hardly going to refuse. The wind whipped coolly around her lips, making her warmth more precious than ever. They made out for a while, then went for Tim Horton's legendary donuts and coffee.\n\nLater on, Manjula was even more staggered by the Rogers Centre domed stadium.\n\n\"Fifty thousand people will come here to watch a sports match? That is half the population of our entire district.\"\n\n\"Yes, baseball games can attract quite a lot of people.\"\n\n\"Baseball? I thought you said the most popular sport was ice hockey.\"\n\n\"It is, but they play at the Air Canada Centre...\" On it went, one wonder after another. Manjula gawked at the newly legalized cannabis stores and daringly stomped on the glass floor of the CN Tower. She had never ridden a subway train before, nor a streetcar. \n\nNor had she ever eaten Chinese food, so Tony took her to his favourite restaurant in Chinatown. She was hesitant at first, but her reluctance vanished once the waiter pointed out several spicy Sichuan dishes, and helpfully brought over chili sauce.\n\n\"This entire neighbourhood is Chinese! It is like we are in China!\" she remarked, munching away.\n\n\"Toronto has two other Chinatowns like this. And there are Chinese shops and restaurants all over.\"\n\n\"White people do not mind?\"\n\n\"They're the first to go there. And not just Chinese \u2014 there's Sri Lankan, Indian, Vietnamese, Italian, Portuguese... you name it. Usually they're not concentrated in one neighbourhood, but spread out all over.\"\n\n\"So all these different peoples \u2014 live in the same places? Go to the same schools?\"\n\n\"In Toronto yes. Where I grew up was more than ninety-nine percent white.\"\n\n\"How did you survive that?\"\n\n\"There were incidents\" \u2014 his face flushed \u2014 \"but all in all, it was okay.\"\n\nManjula was having trouble processing this. One of the grievances that had led to war was Sinhalese families, in search of cheaper land, moving into once solidly-Tamil parts of the country, a process the Tamils dubbed \"colonisation.\" It was common to regard other communities, whether ethnic or religious, with deep suspicion. Her own village once had a sizable Muslim community, but the rebels had expelled them years ago. They weren't regarded as Tamil, even though that was the language they spoke. The idea of everybody living side by side happily seemed a pipe dream to her.\n\nShe was in a thoughtful mood on the drive back to campus. \"I had a wonderful time today,\" she said dreamily.\n\n\"Me too.\"\n\n\"But the real reason you brought me here was to show off Canada, was it not?\"\n\nThere was no point in denying it. \"That too.\"\n\nShe sighed. \"It worked. I understand the appeal of this country. I see why so many of our people have come here to live.\"\n\n\"Do you think \u2014 do you think you could join them?\"\n\n\"Part of me wants to. Not just so I could be with you. I see now that Canada has joys and wonders in its own right.\"\n\nTony knew the word but was coming in there somewhere. He waited for it.\n\n\"But how can they leave their friends and family behind? How can you decide on a country so quickly? I have only been here a few weeks.\"\n\n\"People in Sri Lanka marry after knowing each other a few weeks. Most immigrants to Canada have never visited before they come. They rely only on what they've been told. And almost everybody has family back in Sri Lanka, or in many other countries...\"\n\nHe told her the history. The first wave of Sri Lankans who came in the 1980s, strangers in a strange land, were widely accused of being bogus refugees. They struggled to explain to employers what an A-level was. They worked at hamburger joints to put themselves through community college. They spent years living in tiny, roach-infested apartments until they could afford better. They were cut off from other friends and family who had stayed behind, or who had emigrated to Europe or Australia or India instead.\n\n\"I don't think you should make the decision on my account. I think \u2014 if we are still together, after graduation, we can talk about getting married. But don't stay here just for me. Stay only if that's what you truly want. In fact it, need not be Canada. In finance, you could probably find your way to the U.S. or Britain.\"\n\n\"But what about you?\" she wondered.\n\n\"If we were still together after graduation, I'm sure we could find a city that both of us could be successful in. But I want you to think of your future. Be the best person you're capable of becoming.\"\n\n\"So that is my choice,\" Manjula said. \"To be a doctor in Sri Lanka, or a quant or whatever abroad.\"\n\n\"To be a doctor, or not to be,\" Tony half-muttered. \"That is the question.\"\n\nAs it happened, Manjula had studied Shakespeare too.\n\n\"Whether 'tis nobler in the mind to suffer the slings and arrows of Sri Lankan poverty,\" she quipped, \"or to fill out immigration forms to flee a sea of troubles.\"\n\nTony started to laugh. Inspiration had hit Manjula, and she continued, \"to emigrate, to leave \u2014 ay, there's the rub. For in that long exile, what loneliness may ensue, when we have shuffled off family and friends and familiarity?\"\n\n\"Did you seriously make that up just now?\"\n\n\"That undiscovered country, from which no immigrant returns, puzzles the will, and makes us rather bear those ills we have, than fly to others that we know not of,\" she finished.\n\n\"You really know that speech well,\" Tony said. \n\n\"Actually I was thinking about this decision a few days ago, and it reminded me of this speech, so I looked it up.\"\n\nHow typically Manjula. He took her hand and brought it to his lips, all he could manage while driving.\n\n\"I know you would like to paint me tonight\" \u2014 painting being their euphemism for sexual activity, which they often amused themselves with by saying openly in front of others \u2014 \"but I fear I cannot do much for you. I am so tired.\"\n\nThey ended up cuddling in Tony's bed, but going no further than kissing. Tony's roommate found them fast asleep at only ten o'clock, quite early for university students on a Saturday night. Enjoying the side view of Manjula's figure, he let them be.\n\n***\n\nManjula prepared to leave early the next morning. An entire day without homework had to be made up for. \n\n\"I had such a lovely time yesterday.\"\n\n\"Me too.\"\n\n\"Can I ask you something?\"\n\n\"Anything, Manjula.\"\n\n\"I... I want you to share your browser history with me.\"\n\n\"My \u2014 my full history?\"\n\nShe nodded. \"Uncensored. You can edit out your email and things like that. But you know what I really want to see.\"\n\nTony felt trapped. \"There are... there are some things in there that might make you despise me.\"\n\n\"Why? Have you looked at anything contrary to the laws of this country?\"\n\n\"No, but\u2014\"\n\n\"I cannot promise you that I will ever do anything you have watched, or even like your watching it. But I can promise you that I will not hurt you.\"\n\nTony looked at her. She was asking him to share his deepest, most perverted fantasies with her. This was an act of intimacy far beyond anything they'd done before.\n\nYet had he not, in a different way, asked her to change her life, to trust his judgment? Could he not do the same?\n\n\"I can, um...write up a script to export it. I'll email it to you in a bit,\" he said.\n\nThe script was not that hard to write; he even got it to produce a list sortable by frequency of which sites and videos he'd watched the most. Was it safe to actually show her this? Probably not, but he could not lie to her. Not ever. He emailed it.\n\nThat day he found it difficult to concentrate. What was she thinking? Miss you, he texted her. Miss you too, came back the reply.\n\nShe probably hadn't looked at the sites yet. He busied himself with his physics assignment. Kinetic energy \u2014 just like he had with Manjula. Momentum \u2014 just like his cock when it rubbed into her face\u2014\n\nWhat are you doing? he texted again. English writing, she wrote back in Tamil. Which is harder than it sounds, since typing a Tamil letter requires two keystrokes instead of one.\n\nHe went over the Tamil notes he'd made with her. The adverbial participle. Breaker words. Verbal extensions. Tamil grammar was surprisingly complex \u2014 there was, for example, no single word for and. Things only got clear when Manjula explained things.\n\nHe couldn't text her again, could he? He settled for sending over a picture of a rose. Fifteen agonizing minutes went by before she replied. She'd stuck her phone up her skirt and taken a picture.\n\nAfter that, Tony's concentration problems disappeared. He happily finished the physics, made good progress in the math, and covered much of the research for psychology.\n\nMonday night was their free evening, when her roommate Rachel was in class. He texted over, in Tamil, tomorrow at 7? He got a thumbs-up sign in return. Had she looked at the sites yet? He didn't dare ask.\n\n***\n\nAfter math class, Tony's restraint finally gave way.\n\n\"Did you look at the sites?\"\n\n\"Yes I did. I cannot talk now, I am due at the learning centre. We must discuss this tonight,\" she said, walking off.\n\nWas this it? Had he finally gone too far? Tony tried to muffle his panic. Calm down. Don't jump to conclusions. She might just have been in a hurry. He spent the rest of the afternoon with heart racing, worrying if he might have lost the girl he had grown to love so much.\n\n***\n\nHe was trembling when he knocked on her door that evening. Manjula greeted him with a warm smile, which faded as soon as she saw the expression on his face.\n\n\"What is wrong?\"\n\n\"I was just\u2014just so scared of what you might think of me. After you saw those sites.\"\n\n\"They were certainly more than I had ever expected to see,\" Manjula admitted. Tony looked up at her. Back in the warmth of the indoors, Manjula was once again decked in a conical miniskirt, the kind that flies up easily.\n\n\"I thought for a long time about how to say this,\" she began. \"Then I remembered how so many times you have sung Tamil songs to me, even when you could barely speak Tamil. I found an English song I want to sing for you now.\"\n\nShe clicked on her laptop, and the familiar chords of the Beatles' I Want to Hold Your Hand blared out. A sixties English song, fitting given their shared love of that decade's music, in both languages. She'd picked a karaoke version.\n\n\"Oh yeah I, tell you something, I think you'll understand... \"\n\nTony smiled as she danced, swaying seductively, looking pert and saucy and irresistible. So she wasn't mad about the sites. Or maybe she hadn't looked at the worst ones? She didn't have a bad singing voice, and the song's innocence sounded adorable in her higher register.\n\n\"When I, say that something, I want to suck your cock!\"\n\nTony's jaw dropped. \n\n\"I want to suck your co-o-o-o-o-o-ock,\" she crooned, again and again. She had a wicked grin on her face.\n\nTony felt dazed. What was happening? Was this still his Manjula?\n\n\"Oh please, say to me, you'll let me be your whore,\" she cackled evilly, taking off her blouse. \"And please, say to me, you'll let me suck your cock...\" The skirt made its way down, then the bra, then the panties. She sank to her hands and knees and crawled on the floor towards him, sliding up his body and putting her hands on his shoulders.\n\n\"And when I taste you I feel thirsty, inside,\" she leered, waving her tits in front of his face. \"It's such a feeling that, my love, I can't dodge\" \u2014 his heart pulsed \u2014 \"I can't spit\" \u2014 she twirled around, wigging her ass \u2014 \"I must dri-i-i-i-i-i-i-ink!\" she shrieked, twerking her ass against his now-erect cock.\n\n\"Yeah you, got that something...\" she went on, but Tony could hardly hear now, he was lost in the jumble of emotions. All he could think of was how badly he wanted her, wanted to possess her. Her tits were in his mouth, he was greedily, hungrily sucking on them, desire flowing through him. He could not keep his hands from wandering everywhere, that silky smooth ass, those unbelievable legs, that juicy wet pussy. \n\nIn time to the music, Manjula ripped off all his clothes, manhandling him like a stuffed toy. Tony could see, behind her sweet voice, the raw animal desire that was driving her. \n\n\"I want to suck your co-o-o-o-o-o-ock,\" she finished triumphantly. She was on her knees again, her lips just a centimetre in front of the white drop on the tip of his head.\n\n\"But,\" he finally said, exerting every ounce of self-control he could muster, \"but what...what about your virginity\u2014\"\n\n\"For whom? Some man in Sri Lanka I have not even met? It is not he I want to be my husband. It is you I want to be my husband.\"\n\n\"I can't\u2014\"\n\nShe shushed him by kissing his cock. \"I know you are not ready for that. But I also know that I am. Your father was wrong. Nothing you desire can possibly hurt me. I feel I understand you so much better now. I know how long you have wanted this and how much it means to you. I want to give it to you. Tell me how to please you the way you have always dreamed.\"\n\nNo man can resist the siren calls of his cock for long, not when the girl he loves is kneeling before him.\n\n\"Take me to the shower,\" he said at last.\n\nNot since he was a small boy had Tony been bathed by another person. He had her spend most of the shower on her knees, bobbing up only to soap his upper body. Each run of the lather was a gentle caress. \n\nShe pulled him down to a squatting position to get a better grip on his ass. She soaped it up not once, not twice, but three times. Tony struggled to stay upright, so great were the wave of passions her magical hands brought to his body. He felt raw, exposed, open, fully naked in a way he had not before, not even with Manjula.\n\nHe didn't let her touch his cock \u2014 it was already so fired up that it would explode instantly if she touched it. She settled for drying him off with the towel instead.\n\n\"Do you know,\" she remarked, \"this is the very same towel you sat on the first time you came for me? How far we have come since then.\"\n\nHow far, indeed. He had found it thrilling enough merely to masturbate in front of her in lingerie. Now he was going to \u2014 was going to \u2014 he couldn't finish the thought, he was so overcome with emotion that he grabbed her in a rough bear hug and held her tightly for quite a while. \n\nHe remembered the role she wanted him to play. \"You... you really want to be my servant? My parachi servant?\"\n\n\"Do you know what the most attractive thing you have ever done is?\"\n\n\"Um...\" He had no idea.\n\n\"When you were at your mother's house, you helped her in the kitchen. She did not even have to ask you. You set the table, you laid out the food, you washed the dishes afterwards. I could not believe that. No man in my village would ever do that. Not even Appa.\"\n\nThis might not be the moment for Tony to mention the many scoldings and lectures his mother had given him to get him to behave that way.\n\n\"Let me do what is truly woman's work. But only in the bedroom, and only when I ask you. Do not even think about trying to be my master anywhere else.\"\n\n\"M\u2014master?\"\n\n\"Yes, my master,\" she said demurely. Again, she prostrated herself on the ground and kissed his feet.\n\nTony let his inhibitions go, let his theories of social psychology fly out the window. Rare and fortunate indeed is the man with a girl who will strip naked and kiss his feet. He looked down at her beautiful long hair, and let the lust fill him. A drop of precum fell onto her hair.\n\n\"Let's go to bed.\" He hadn't told her to make the trip on hands and knees, but that is what she did, provocatively wiggling her ass from side to side. For the first time, Tony wondered what it would be like to place his cock inside that tight little ass...no, it was not time for that yet.\n\n\"Hands first.\" He lay down on the bed, face forward. He had her kneel between his legs and massage him. He told her exactly how to do it \u2014 with the lightest of touches, giving her soft fingers the feel of a feather. Or, she could curl her nails across his back, drawing lines of energy across him.\n\nHe had her stroke him from neck to heel, but save his ass for the end. \"Delay. Always delay. The more time you give me to anticipate something, the better it will feel.\"\n\n\"Yes, aiyar.\"\n\n\"Aiyar? Doesn't that mean 'husband'?\"\n\n\"It means master, or sir,\" Manjula said with a laugh. \"Though married women often use it when talking about their husbands. Now I see why.\" Tony let himself moan as she caressed his body, let the feeling of warmth spread through him. \n\n\"Now my ass.\"\n\nShe leaned forwards, so that he could feel her breathing on his ass, sending fire bursting through his cock. Her hands, filled with love and care, kept on caressing him, feeling him, arousing him. He directed her to turn her hand sideways and place it into his crack, sliding it up and down.\n\n\"Ohhh, ohh god that feels so good. So good...wait, stop.\"\n\nTony did not want to cum on the bed. He rolled over. His cock stared greedily at Manjula's nakedness.\n\n\"Now massage me, every part of me... every part except my cock and balls.\"\n\n\"Why not those?\"\n\n\"Obey me, parachi,\" he growled, pretending to be stern.\n\n\"Yes, my lord,\" she replied meekly. \n\nMore arousing than the massage was her letting him use language like that. The more she submitted herself to him, the more awe and gratitude he felt for her. Who was this angel who had come into his life, who had given him more joy than he'd believed possible? \n\nHis cock glared up at her. The exposure of it thrilled him. His erection was naked testimony to how much he desired her body. Far from being repelled, she was revelling in it, teasing him with her fingers.\n\n\"You are so beautiful,\" he said.\n\n\"Now I know you can do much better than that. I started going out with you to learn more slang, do you not remember?\"\n\n\"You are my beautiful whore,\" he said. Just saying that forbidden word in front of her made his cock want to explode all on its own. Her eyes lit up. \"I love it when you talk like that.\" She kissed him, and he took the chance to grab her tits, mauling them, fondling them.\n\n\"My sexy slut,\" he added.\n\nShe pushed them into his mouth, cuddling him the way he loved. \"My horny man. My dear, horny man. I love being your slut. I love being your whore.\" Mouth full of tits, hands full of ass, Tony did not reply for quite a while.\n\nWhen he came up for air, he said, daringly, \"I want to put my cock in your cunt.\" He had enough clarity to remember that these words probably carried less stigma for Manjula than for a native English speaker.\n\n\"I want to, so, so much. But I have not seen the doctor yet. But I will do anything else. Anything at all,\" she replied.",
        "\"There is one thing\u2014\" He paused.\n\n\"Is it what I think it is?\"\n\n\"That's why we took a shower first.\"\n\n\"My name is Cleaner of Dirt,\" she said in Tamil. \"I will always clean my master's latrine.\"\n\nTony's body jerked so hard that she tipped off, giggling. How to do this so that he didn't cum straight away? He settled for going on his hands and knees, feet dangling over the foot of the bed. Manjula pulled up a chair to sit behind him. Behind his behind.\n\nThere is reality, and there is fantasy. Tony had tried to keep the two separate, relegating most of his desires to the latter category. But Manjula had burst into his life like a flaming star, redefining his sense of what could be real and what was a dream.\n\nFor so long he had longed for this, he had masturbated to it, but he had never believed he would ever experience it. Now the long wait was ending. Even if he were to live this dream but once in a lifetime, the memory of it would bring warmth, even to his toes, for the rest of his time on this earth.\n\nHis entire body was shaking. \"How are you so calm about this?\" he wondered.\n\n\"I was not calm when I first saw the videos,\" Manjula conceded. \"But then I imagined you in them and I realized it was all right.\"\n\nShe stroked his ass cheeks, gently, then kissed them, one by one. Tony gripped the pillow hard, fighting to remain control.\n\nHe felt her nose probe into the crack of his ass. At that point his knees gave way, and he collapsed on the bed. \"It is okay. Lie down,\" she said soothingly, pushing his feet upward. He moved back up to the bedhead, while she lay down between his legs. She put her hands on his ass cheeks again and gently pried them apart.\n\nThere she was, peering into his most intimate opening. It was clean, as clean as it could have been made, but how clean was that? He could not let her risk infection, no matter how much he desired her. \n\n\"Manjula,\" he panted, \"you have to promise\u2014aaaah!\"\n\nTongue in the mouth feels warm, loving, and tasty. Tongue on the skin feels affectionate, caring, and sensual. Tongue in the ass transcends those as mightily as a rocket transcends an airplane. There are nerve endings in the asshole that Tony had not even suspected to exist. He had never felt, never imagined even possible, the sheer physical pleasure he was now experiencing.\n\nHe screamed. Manjula jerked her head up. \"Are you okay?\"\n\n\"Oh my god, oh my god. That felt so good, I can't believe it\u2014aaah!\" Manjula slid her tongue in again, deeper, deeper, impossibly deep. How was she doing that? Her tongue felt a metre long. The pleasure was wracking his body, consuming him. \n\nShe kept licking his asshole, he did not know how long, while he screamed and stamped his feet and pounded his fists like a toddler. The pressure of her weight on him kept his cock from climax, but the level of arousal and desire was driving him wild. \n\nShe didn't seem to tire of it. In and out her tongue went, sending waves of passion through him like an electric current. Finally it was Tony who had to roll her off. His body was trembling, shivering, barely able to handle the surge of feeling rushing through him.\n\nManjula looked at him nervously. \"Was that good?\"\n\nIn answer, he drew her close to him and clasped her against him. He felt he could not possibly love her any more than he did at that moment. Even if she never did this again, he could never, ever forget it, the closest he had ever come to pure paradise.\n\n\"I can't believe,\" he said finally, \"how... how privileged I am to have you in my life. Truly you are one of heaven's angels.\"\n\n\"I am just a girl,\" Manjula contradicted. \"My work here is not yet complete. But thank you for saying that.\"\n\n\"Your... work?\"\n\n\"Woman's work. Or maybe I should say whore's work.\" She beamed. \"I am tired of painting. It is time for drinking.\" She slid back down to the floor, into his favourite kneeling position.\n\n\"Are you sure\u2014ohhhh,\" he moaned as Manjula lunged for his inner thighs. And then he could not think anymore, could not hold a coherent thought, as her tongue, her sweet, sensuous tongue, was caressing him. She pried his legs apart for a better access, and seductively licked his groin, sending ripples of pleasure through him.\n\nHe was saying something now, he didn't know what, he could not talk coherently, something about how she was angel, she was whore, she was both and they were all together, goo goo g'joob. He closed his eyes, quivering, as his balls, one after the other, went wet in her mouth. Words were failing him now, he was babbling, giggling, making incoherent sounds, his intellectual armour gone, his raw emotions rising to the surface after having been buried for so long. Tongue on balls will break the will of the hardiest. \n\nManjula had been careful not to touch his cock, but he was already on edge. With one swift flick of her tongue, she licked his cock from bottom to top. And then, no\u2014\n\n\u2014 he could not last \u2014\n\n\u2014 and her mouth was on him \u2014\n\n\u2014 and his head was spinning \u2014\n\n\u2014 oh my god, oh my god, this can't be real, it can't, it can't \u2014\n\n\u2014 and he was shooting, he was shooting, he was inside her mouth, inside it \u2014\n\n\u2014 the earth was moving, it was moving, I tell you \u2014\n\n\u2014and he was heaving as much as if he'd run a race, heart thumping, uttering praise to all the gods of Christianity and Hinduism. \n\nHis own goddess lay beside him with a satisfied look, humming to herself, stroking his hair. Tony opened his eyes to see that sweet face in front of him, her expression sly.\n\nManjula opened her mouth. There it was, the white pool, the subject of so many dreams, so many late nights.\n\nHer slow, smiling swallow was like nothing Tony had seen in porn. It was an act that hit him straight in the guts. So many years of waiting, of dreaming, of fantasy, had crossed the line into an unbelievable reality. Tony could not contain himself; he burst into tears. \n\nManjula took him in her arms. She lay there holding him, soothingly, comfortingly, for a long time.\n\nChapter 6\n\nTony felt happier than he had ever been. The song of the birds was sweeter. The touch of the wind made his senses come alive. The grass was greener. Even the girls were prettier, though seeing them only made him want Manjula more.\n\nThey say that oral sex is not sex, but it is. Bill Clinton had been wrong. Tony did not feel a virgin anymore, and he could not think of Manjula as one either. She had been right. They had crossed a line, a line that Tony felt himself well rid of.\n\nHe still wanted to have full-fledged intercourse with her, of course, but he knew how much just this oral sex would have cost her. Let it wait. It was hard to see how he could be any happier than he already was. \n\nHe could not stop thinking about the incredible experience, to the point where he spaced out in class, or dropped sentences with his classmates in the middle of study sessions. \n\nHe even ran into Tiffany at lunch again one day. She stared at him for a moment before recognition dawned. \"Say, aren't you the guy who\u2014\"\n\n\"Thank you so much for introducing me to Manjula!\" he boomed, warmly shaking her hand, then boldly kissing it. He could not resist bragging a bit. \"She knows everything now! Everything!\" he crowed as he walked off, leaving Tiffany flabbergasted.\n\nHe found Manjula in a couch in the lounge area. She smiled, that sweet gentle smile he loved so much. He snuggled up beside her.\n\n\"Somebody looks very happy today,\" she said, with a tone of unmistakable smugness.\n\n\"It was paradise. Pure paradise. The only thing was\u2014\"\n\n\"Please do not say I did something wrong.\"\n\n\"Nothing. But I didn't do anything right, or anything at all, really. I didn't give you anything.\"\n\n\"I think I got the better side of that equation. How do you boys survive with only one orgasm a day? I had three.\"\n\n\"I didn't even notice\u2014\"\n\nShe laughed. \"I do not think you were in any shape to notice. But it is okay. I know now what the other girls meant, why they take it in the mouth. You men have a baser, more raw sexuality than we women. Being close to it like that is like being close to the earth itself, rich and fertile and full of life. Never be ashamed of your carnal desires. They make you the man you are. And watching you react that way \u2014 so strong and powerful and yet at the same time so open, so exposed and vulnerable \u2014 made me feel like a goddess, like Lady Rati herself. It did not feel quite as good as your fingering me, but it was very close. In a moment like that, I only need one hand.\"\n\n\"I still want to keep fingering you\u2014\"\n\n\"You will, believe me, you will.\"\n\n\"But tell me one thing, I have to know...\"\n\n\"Yes?\"\n\nTony's face was red, he could barely meet Manjula's eyes.\n\n\"Did it stink?\"\n\nManjula snorted with laughter, so loudly that it drew stares across the room. \"Of course it did not, foolish boy! I am a cleaner of dirt, not an eater of dirt!\" She kept laughing until she saw just how relieved Tony looked.\n\n\"Actually,\" she went on, \"your kundi tastes better than some other parts of your body. Would you believe it is a little sweet?\"\n\n\"I'm not sure I do believe that. I wonder if... next time... I could do the same for you\u2014\"\n\n\"Next time?\" Her eyebrows shot up. \n\n\"I mean, if... I just thought...\"\n\n\"I was only joking. Of course you can,\" she said. \"I am looking forward to it.\"\n\nTony's cock pulsed a little, and his eyes burned with a hot light.\n\n\"I wish we could do it more often,\" he said. \"Having to work around roommates really sucks. I wonder if we could go away for the weekend sometime.\"\n\n\"I do not think either of us has time for that,\" she said regretfully. \"But there are always the holidays. We can learn how to ski together.\"\n\nTony looked at her, thinking about how much there was he wanted to show her, share with her, explore with her.\n\n\"You know what would be great?\" he asked. \"If you go back to Sri Lanka over the summer or anything, I could go with you.\"\n\n\"What?\"\n\n\"It would be awesome! I've wanted to go there for years, but my parents weren't interested, and they always said I shouldn't go alone.\"\n\n\"I am sure you could manage. You are a grown man, and plenty of foreign tourists come to Sri Lanka.\"\n\n\"But I want to go with you,\" said Tony.\n\n\"There would be far too much gossip in my village. Even your staying in a hotel nearby would lead to rumours spreading.\"\n\n\"But there's the whole rest of the country! I have relatives in Colombo, Batticaloa, and Jaffna\u2014\"\n\n\"Who will also spread rumours, and probably will not even let me in their homes,\" Manjula reminded him.\n\n\"Well, screw them then. I've read the tourist books. I can't believe there's so much to see in one small island.\" Excitedly, he went on about the beaches, among the best in the world, the historical sites in Anuradhapura, whale watching in Mirissa, the elephant sanctuary in Pinnawala, mountain climbing at Adam's Peak, wildlife in Yala National Park, festivals in Kataragama...\n\n\"You know more about travelling in Sri Lanka than I do. I have never been to any of those places. I have seldom gone far from my village, except to visit relatives in Colombo.\"\n\n\"Why not?\"\n\n\"We cannot afford to stay in a hotel. If we do not have relatives to stay with, we do not go. And even bus fare to Colombo can cost as much as five hundred rupees.\" \n\nThat was less than four Canadian dollars. To go a distance of more than three hundred kilometres.\n\n\"Foreign tourists usually take trains or tourist buses, which are air-conditioned and much more expensive,\" she added. \"But they go only to the big tourist sites you were talking about. Those are mostly in the Sinhalese parts of the country.\"\n\n\"What I want to see most of all is Jaffna. Both my parents were born there. I feel I could understand everything so much better if I could see it, just once.\"\n\n\"Why is that?\"\n\n\"It's where my ancestors come from. In that sense, it's home.\"\n\nHome. Manjula's eyes filled with tears. \n\nIt was not the beaches, or the mountains, or the scenery, or the sights that Manjula thought of when she thought of Sri Lanka. It was her aunt and uncle, who had worked so hard to give her the chances to grow and succeed in life. It was her three little cousins who looked up to her, who all called her simply akka, \"big sister\". \n\nIt was also the way the birds warbled, early in the morning, the way the sunlight streamed into the hut. It was the soothing tropical heat, the lush palm trees, the cool evening breezes. It was sipping on falooda on a hot afternoon, tricking monkeys to throw down coconuts, swimming in little streams, sneaking a hot toddy when no one was looking. It was sitting on the ground, eating with your fingers off a banana leaf, the way the gods intended.\n\nTony could sense her distress. \"Home... you're really homesick, aren't you?\"\n\n\"I like it here too. And you have made life here very special for me. But there is no place like home,\" she said, a woebegone expression on her face.\n\nShe lay her head on his chest and he stroked her hair for a while, wondering what he could say to comfort her. Then an answer came to him.\n\n\"In that same sense,\" he pointed out, \"Canada isn't really anyone's home, except for aboriginal people.\"\n\n\"What do you mean?\"\n\nHe told her the story of Canada, the real story. Not the dates and acts of dead white men, but the story of migration and upheaval. It was a tale that ran from orphan French girls desperate for a husband in the seventeenth century to Scots fleeing massacres in the eighteenth; from Irish dying of famine to Italians fleeing overpopulation to Sri Lankans running away from war and poverty. \n\nFor centuries, the long line of defeated peoples had trekked across the oceans to find a new place for themselves in this cold land of the north. All struggled with feeling homesick and lonely and foreign. All battled hostility and suspicion from predecessors who had forgotten their own origins. All learned to thrive, mixing the old traditions and the new, synthesizing a way of life that worked for them. \n\nFinally, perhaps as usual, a song captured his feelings better than anything he could have said.\n\nHome.\n\nHard to know where it is if you've never had one.\n\nHome.\n\nI can't say where it is, but I know I'm going \n\nHome.\n\nThat's where the heart is.\n\nAnd I know it aches,\n\nAnd your heart, it breaks,\n\nAnd you can only take so much.\n\nWalk on...\n\nTony halted at that point, realizing the next lines, leave it behind, you've got to leave it behind, were probably not appropriate to the situation. He just sat there for a while, cuddling her against him, listening to her breathing. \n\nIt did not occur to him that she could always google the entire song later.\n\n***\n\nManjula came late to math class that afternoon. A little breathless, but he could not see any sign of pain on her face.\n\n\"Are you okay?\" he whispered to her. \"I had an appointment,\" she replied, without further explanation. They resumed taking notes. Afterwards she excused herself again, saying she had to meet a group working on a project for economics class.\n\nTony thought this a bit odd, since she wasn't heading in the direction of the library, or even the business faculty. \n\n***\n\nLater, they made plans for their next \"painting\" session, although, as Manjula winsomely pointed out, they were well past the painting stage.\n\n\"But before you come over, I want you to do something. Some Tamil homework.\"\n\nTony was game for this; working on Tamil meant, as it always had, more time with Manjula.\n\n\"I want you to translate this Tamil song,\" she said, handing him a printout. It was Orey Oar Ooril, from a popular mythological film from a few years ago.\n\n\"But no cheating by looking it up online,\" she admonished. \"I can google any translation that is out there. You must do this yourself.\"\n\nTony could live with that. There were dictionaries on hand in the library.\n\n***\n\nHe didn't finish until just before Manjula's deadline.\n\nHe stared at his translation. It was very hard not to conclude that she was sending him an unsubtle message.\n\nHe orders me to follow\n\nHe arrests me with his kisses\n\nOh, this Devasena is imprisoned...\n\nDevasena was the heroine of that film. \n\nThe true warrior who makes a war field out of my chest...\n\nThe demon who kisses me everywhere, with the tip of his sword...\n\nHe caught on to me like a fire,\n\nAnd Devasena burns in that fire of desire...\n\nHe aims his arrow to my heart\n\nAnd I follow him, blindly, unquestioned,\n\nAnd Devasena is speechless...\n\nTony read this up and down, checking again and again to see if he had gotten it right. The song had provoked a reaction in him, all right, though maybe not the one Manjula had been going for.\n\nHe headed over to her room, his pulse racing alongside his footsteps. He had no idea how this evening would end.\n\nHe knocked on the door. He heard a rustling sound of some kind before she finally said, \"come in.\" What did that mean? Usually she just opened the door. \n\nManjula was standing by the window, her divine figure framed by the bright sun, wearing nothing but a shy smile. Her right hand was over her breasts, with something shiny-looking between her fingers. Her left hand brandished a printed sheet of paper, blocking the view of her pussy.\n\nWhat was going on?\n\n\"I saw the doctor.\" She passed him the shiny thing, exposing her breasts. It was a packet of birth control pills. The first row was already finished.\n\n\"And I no longer wish to be a doctor.\" She gave him the paper, letting him see her pussy. Her change of major to applied mathematics had been approved.\n\n\"All that you want is now yours,\" she said proudly. There she stood, her nude body inviting and desirable, her face filled with love and surrender and fierce joy. \n\n\"Not all,\" Tony replied. \n\nEverything had fallen into place. It was clear to him at last what he had to do. His mind, his heart, and his cock were ready to speak as one. He dropped to one knee. \n\n\"Manjula,\" he said, \"will you marry me?\"\n\nChapter 7\n\nManjula's beauty had etched itself into Tony's mind many times before \u2014 the twinkling in her eyes when she laughed, the wild ecstasy when he fingered her, the sweet smile and soft eyes that had mesmerized him so much. But that seemed nothing compared to the look of blissful hope on her face now. \n\nShe opened her mouth. Were her lips forming the word yes? They seemed to for a moment, then snapped shut. \n\nShe was looking at him with excitement in her face, but also doubt.\n\n\"Are you not afraid?\" she asked finally.\n\n\"Why would I be afraid?\"\n\n\"You said... you said that in this country people take years before they decide to marry. That they would rather break up than marry the wrong person.\"\n\n\"You are the right person. I never want to break up with you. Not ever. I love you. I love you more than anything. More than life itself.\"\n\nHer eyes were wet, but still she hesitated. \"Please Tony, you must answer me something honestly.\"\n\n\"Always.\"\n\n\"Do you want to marry me just so we can make love? You do not have to do that. My body is yours, whenever and for however long you want me.\"\n\n\"Of course I want you. I've wanted you from the moment I laid eyes on you. When I look at you I see a beautiful body I can stare at for the rest of my life. I see hands that always know how to excite me. But do you know what else I see?\"\n\n\"What?\"\n\n\"I see a soul with courage. I see a stranger in a strange land, brave enough to try anything new and learn anything different. I see a brilliant mind and a generous heart, a heart that cares about people, deeply. I see someone who inspires me, who has made me a better man. I see the one who has taught me who I really am and where I come from.\n\n\"I see someone who doesn't try to change me or make me something I'm not. I can tell you my darkest desires and you're still willing to trust me with your body. You're the only one I can be myself with, completely. ",
        "\"It is a far, far better thing that I do, than I have ever done; it is far, far better life that I go to than I have ever known.\" \n\nTears were streaming down her face, but Manjula summoned a smile. \"You took that from a book, did you not?\"\n\n\"And more.\" His eyes bored into hers. \"Every path you have trod, through wilderness, through war, has led you to this road,\" he said, absolute conviction in his voice. \"Become who you were born to be.\" \n\nAnd suddenly she was falling to her own knees, grabbing him, holding him tightly to her, pressing her body against his, kissing him with every ounce of strength she had. \"Oh Tony, my beloved, my darling, of course, of course, of course I will marry you.\" He could say nothing else, her lips were on his, they were rolling around on the floor. She was wearing perfume for the first time, the scent was like wine, intoxicating him. \n\nManjula's face was wet with tears, salty, warm tears, tears of joy. Tony could not think of anything else but how much he loved her, how badly he desired her, how he never wanted to be anywhere, do anything, but lay there in her warm embrace.\n\n\"I have learned as much from you as from any professor,\" she said. \"You have taught me about my body, what it means to feel, to live. When you touch me, when you kiss me, when you hold me, I can feel how much love there is in you, how badly you want to give it. I have never felt as safe with anyone as I do with you.\n\n\"I see in you a man who never stops trying to improve himself, never gives up trying to be even better than he already is. I see a man who always has something new to teach me, a man whose mind can challenge mine.\n\n\"I feel like a bird that has left the nest. I feel like a child learning to walk for the first time. You have given me a new life. You have shown me a future I could not have thought possible. You have believed in me as no one else ever has. And I know\" \u2014 she was crying in earnest now \u2014 \"I cannot face life without you beside me.\"\n\nThey lay there on the floor, holding each other in their arms for a long while. Then, on a sudden impulse, Tony rose to his knees, put one arm behind her shoulders, the other behind her legs, and lifted her up. She squealed in surprise, but the workouts they had been doing together had paid off. He was now just strong enough to stand up and carry her to the bed.\n\nManjula's fingers trembled as she fumbled with his buttons, but she brushed his hands away when he tried to undress himself. His cock rammed to attention when she pulled off his boxers. \n\n\"Your cock is so beautiful. It is my favourite part of your body,\" she said, kissing it. She opened her mouth to wrap around it, but Tony had to block her. \"I'm still new at this, I am not strong enough to do both\u2014\"\n\n\"Say no more,\" she replied. \"You are not leaving this room until you have been inside me for as long as you can.\"\n\nNow it was Tony's turn to have tears in his eyes. Every girl he had stared at, every classmate he had been besotted with, every celebrity infatuation he'd felt, every romance-movie star he had longed for, every model who had seduced him online, every porn actress he had masturbated to, all of them were but signs on the path that led to Manjula.\n\nThey lay there together, their hands exploring and feeling every nook and cranny of each other's body. Her skin was so soft and delightful. Her hands drew their magic on him, an enchantment all the more binding because of where he knew it would lead.\n\nTony could hear how powerfully Manjula's heart was pounding, could feel how wet her pussy was, could taste the hunger and desire on her lips. She was his. This beautiful girl was going to be his wife. Her breast was in his mouth, her ass in his hands. The lovers could not keep their hands and lips off each other. They sucked and fondled and licked and stroked and kissed each other to their heart's content, basking in the sheer, unadulterated pleasure they took in each other's body. \n\nAt long last Tony lay on his back. \"This may hurt a bit\u2014\"\n\nManjula laughed. \"Do you mean my hymen? You forget I have done farm work. Mine broke years ago.\" One step ahead of him, to the last. \n\nShe sat on top of him, the picture of brown beauty. Tony could not conceive of anything more wondrous than her naked body. Her hair flowed more smoothly than a waterfall, her breasts were as inviting as ripe grapes, her tiny waist as heavenly as the clouds. He could feel the wetness of her folds brushing the end of his equally wet cock. But none of that beauty could compare to the expression of devotion on her face. For what reason he could barely fathom, he knew that she loved him with every fibre of her being.\n\nSlowly, gingerly, she began to lower her pussy onto his cock. Tony felt her power wash into his body, like the first sip of the strongest liquor.\n\nIn ancient India, the Upanishads told of moksha, of liberation:\n\nFor verily the woman is like the fire of sacrifice\n\nher midsection is the fuel\n\nher hair is the whiff of smoke\n\nher pussy like a flame\n\nthe cock is the coal\n\nthat sets off the sparks of pleasure\n\nTony felt himself leave the plane of this earth and step somewhere beyond. Dreams and reality were melding into one. Time seemed to slow down, as if he could feel all of life foretold in a matter of seconds. As if through some mystic glass, Tony could feel their joy the day they would turn the keys and step into their own home. He felt the bliss of the day their children would arrive, out of this very same holy of holies he was entering.\n\nTony was burning. Indeed his cock was burning, inside a pussy that felt like dragon's fire. He put his arms around Manjula and leaned her forward, thrusting into her. He could feel her body vibrate around him, hear her screaming his name, realized he was screaming hers. \n\nIn his vision Tony could see the struggles, the loneliness, the homesickness, the long nights agonizing how to pay the bills, the times of unemployment, of prejudice, of failure. But they were not his struggles, they were their struggles. There was no more he, no more she, there was only they. One hand washes the other. In the union of cock and cunt is found the strength to break all of life's obstacles, beat back all the hammer blows of this world. Therefore a man will leave his father and his mother and cling to his wife, and they will become one.\n\nManjula was quaking, erupting, eyes rolling, hair flying, holding tightly onto him. Tony was shaking, moaning, and then rivets of power coursed through his body like thunderclaps. His seed poured into her like a storm. This was not cumming as he was used to, a wave of pleasure felt by penis alone. He felt this come from every inch of him, from his head to his toes, from the surface of his skin to the depths of his soul. \n\nIn those seconds Tony's mind flitted through the years, dreaming of the old age they might one day face together, of letting go of youth and beauty, of accepting the rolls and the wrinkles of time. He dreamed of the pain of sickness, of senility, of finally the bleak day when one would say goodbye to the other. Yes, even pain is a dream, if that pain is shared as deeply as the pleasure. For life is more than a song. For every up there is a down, yet no misery faced together is a misery for long. No greater hope could they have, no dream could mean more, than that even fifty, sixty years hence, he might have the privilege of entering this pussy, no matter how much its beauty might fade. This was where his cock belonged. Where he belonged. \n\nShe fell on top of him, arms around him, holding onto him desperately. It could not have been more than a few minutes, but Tony and Manjula were heaving as if they had run a marathon. \n\n\"I'm sorry I could not last longer\u2014\"\n\n\"Do not spoil this moment.\" She silenced him with a kiss. \"Do not worry, I had two climaxes in that time.\" She snuggled into him and lay her head contentedly on his shoulder. There they lay, listening to the sound of each other breathing.\n\n\"I love you so much,\" she said at last. \"I cannot wait to do this again.\"\n\n\"If we get married soon, we could apply for married-student housing,\" Tony reminded her.\n\nManjula's eyes glistened. \"We could do this every day.\" \n\nShe looked up at him. \"I have not forgotten those videos. Over time, one day... one day I want to try everything you desire. Everything.\"\n\n\"But some of those are hurtful\u2014\"\n\n\"They are beautiful. I remember that Bible psalm you told me about. You are my shepherd; I shall not want. Yea, though I walk through the valley of the shadow of lust, I will fear no evil, for you are with me, your hands and your lips, and yes, your cock, they comfort me.\"\n\nTony was too moved to respond. He held her soft, warm body close to him. He wanted to spend the rest of his life cuddling her. Just like this.\n\nPaal irukkum, Manjula began to sing. There is milk. Tony remembered that milk and fruit are ritually displayed in Hindu weddings.\n\nThere is milk, and there is fruit\n\nBut there is no hunger\n\nThere is a bed, and there are sheets\n\nBut there is no sleep...\n\nShe might not be a doctor. But they had found their cure.\n\nThank you for reading my story! If you liked it, please vote and comment!"
    ],
    "authorname": "IsaacTolkien",
    "tags": [
        "asian",
        "blow job",
        "college",
        "handjob",
        "massage",
        "masturbation",
        "rimming",
        "romantic",
        "virgin",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/to-be-or-not-to-be-a-doctor"
}