{
    "title": "Criminal Minds: Gideon's New Life",
    "pages": [
        "Love is only a dirty trick played on us to achieve continuation of the species. ~W. Somerset Maugham, A Writer's Notebook, 1949\n\n***\n\nJason Gideon fidgeted in the underbrush. After a lifetime of these sorts of things, he knew better, but it did not matter. Once again, someone he cared for was in danger. Danger that he had brought. He was nothing but bad luck to anyone. Any woman he cared for. \n\n\"Hey, don't worry that lady can handle herself,\" reassured Hank, the local Sheriff. \"Her daddy was as crazy as the day was long, but one thing he made sure of...that his little girl knew how to take care of herself.\"\n\nGideon only nodded as memories of bloody bodies danced through his mind. He could not protect the people he cared about. Not other agents in his charge and certainly not the women he loved.\n\n***\n\nThree weeks earlier...\n\n\"Hello, stranger. What can I get you?\" said the petite, red head dressed in jeans and a white t-shirt that said Flo's Dinner. \n\nLike the profiler he had been Gideon took in the subtleties of her appearance. Long hair was pulled back into a ponytail from her slightly freckled face. She wore little makeup, just a touch of mascara and perhaps some sort of pink lip gloss. If it were not for the faint lines about her green eyes, he would have placed her age in the early twenties, an error of at least a decade. \n\nAlthough the woman was barely over five feet, she had full, soft curves. Her breasts strained against the t-shirt, clearly more than a handful. But it was the gentle sway of her rounded bottom as she had walked over to his table that had Jason's throat tight and dry.\n\nPushing the words past that tightness, he asked, \"What's good?\"\n\nThe woman laughed. The sound was as sure and swift as a kick to his gut. \n\n\"Suga, I'm the chef as well as the bottle washer. And it is all good. The lunch rush is over so how about I make you a blue plate special, a bit of this and that. You look like you could use some good food,\" she said as those green eyes surveyed him from head to toe.\n\nThe woman had been gone only a couple of minutes as he took in the small dinner that was his latest stop on his journey to...\n\nAlmost four years on the roads of North America and Jason Gideon still did not know where he was going. One thing he had discovered. He could not out run the nightmares from his life as a profiler.\n\nBefore his mind could travel much further down that dark path, she appeared in the doorway that led to the kitchen. She held a plate in her hands. Once more, Jason watched hypnotized as her hips swung softly back and forth like the pendulum of a clock. It was a rhythm that he could imagine dancing to erotically.\n\nIn all his travels, this woman brought forth feelings that he had thought long dead. Feelings he thought he had buried with another woman; a friend and lover killed because of him.\n\n\"I hope that frown ain't for my food, suga,\" she said as she put a heaping plate of food on the table. \"It's pretty basic Texas man food round these parts. With the diner being so close to the army base, I try to give the guys food that will stick to their ribs.\"\n\nGideon smiled at the woman as he took in her culinary efforts. Meatloaf, fried chicken and an enchilada were surrounded by mashed potatoes, green beans and corn. The smell rising from the steaming hot food told him that this woman knew her craft. Just as he had once arrogantly thought he knew his...\n\n\"Hey, no more frowning around my food, mister,\" the woman said as she playfully swatted his arm with a napkin before carefully arranging it and silverware on the table next to the plate.\n\n\"The food smells amazing, ma'am.\"\n\n\"Fancy. Folks round here call me Fancy.\"\n\nGideon frowned again. The word seemed out of touch with this woman. Her jeans and t-shirt might accentuate her every asset, but they were anything but haute couture. Even her food, though it smelled amazing, was definitely not nouve cuisine. No, fancy was not a word that he would use to describe her.\n\n\"Fancy?\" he asked.\n\nShe laughed again and Jason felt his jeans tighten as his cock responded to the smooth melody.\n\n\"Small towns have funny senses of humor. I got that name twenty years ago when I showed up here, a beaten and broke run-away with an attitude. The sheriff called me fancy pants, said I was too big for my britches. It just sort of stuck,\" she chuckled as she turned around. She stuck out her bottom as she brought her hand down hard on the denim covered flesh. \"Guess he was right about one thing, with the middle age spread, I am getting too big for my britches.\"\n\nGideon joined her then in laughter as her green eyes danced with mirth. \"Join me, please,\" he asked as he lifted his fork. \"It has been a long time since I laughed...or enjoyed the company of a beautiful woman while I dined.\"\n\n\"Well, stranger, how can a girl resist such a sweet offer? Just let me turn down a couple of burners in the back.\"\n\n***\n\nGideon waited impatiently as the assault force gathered around the building. \n\nThat afternoon had been the best he could remember in years. They had talked. About everything and nothing.\n\nShe was the widow of an Army Ranger. She had bought this restaurant and an old farm outside of town with the insurance money from her husband's death. It allowed her to stay close to the old life that she had once lived as an Army wife. She fed hundreds of soldiers each week...and served as a mother away from home to many of them.\n\nBut her greatest joy was not the restaurant or her cooking, but her teenage daughter Jessie. The girl had just started High School and was top of her class. She was also on the softball team and a cheerleader. \n\nFancy's green eyes gleamed as she spoke of her child. Gideon wondered what it would be like to have someone glow like that when they thought about him. Wondered what it would be like to be loved by a woman like this.\n\nBut that bridge was burned long ago, he thought as he paid the check and thanked the woman for a great meal and wonderful conversation. \n\nThen a middle-aged and round man with thinning blond hair stepped into the diner. \"Fancy, I might need your help,\" the man in a police uniform said.\n\nThere had been an escape from the local prison; a white supremacist group was hiding out in the area. And in addition to being one of the best cooks that Jason knew, Fancy also owned and trained some of the best tracking dogs in the country. Turned out she was also more than a bit of an expert in survivalist skills as well, having been raised by a father that was both a former Navy Seal and one of the most notorious leaders of the movement.\n\nJason could not leave then. He could not just drive away and leave this intriguing woman to whatever danger the man's plea might bring. And danger it had brought. So Jason introduced himself to Hank Moore, the sheriff and offered his services. He had been rewarded with one of those thousand watt smiles from Fancy...and the offer to stay at her farm...until this thing was over.\n\nAs Jason watched the last of the men surround the small lean-to building where the leader of the white supremacists held Fancy, her daughter and half a dozen other Girl Scouts, Jason wondered if things would ever be over...at least for him.\n\n***\n\n\"Penny for your thoughts,\" she whispered from behind him.\n\nJason turned slowly from where he stood on the wrap around porch. He had been staring off into the darkness counting the stars. But the tiny package of warmth and light that stood in the door way holding two mugs far out shone even the brightest light in night sky.\n\nThe past two weeks he had seen so many sides of the woman.\n\nHe had taken to helping out a bit in the caf\u00e9. He had always loved to cook and while his rich Italian dishes with fresh herbs and homemade sauces might not be traditional 'Texas man food' as Fancy called it, they had proven quite a hit with the soldiers who frequented the diner, especially the group from New York, who said they had not tasted real Italian food like that since their grandmother's. He was rewarded with yet another of those shining smiles from Fancy for his troubles.\n\nHis help in the kitchen had allowed her to spend a bit more time each afternoon with her daughter, who came straight to the restaurant after school. Jessie had been a bit of a surprise. With her light coffee colored skin and tight curls, she was not what one would expect as the grand-daughter for the country's premier white supremacist. Fancy had laughed as she watched him recover from the initial shock.\n\nBut by far the most amazing discovery was the keen mind that hid beneath those flame red curls. As he assisted the sheriff with the case, Jason discovered that Fancy would have made a great profiler. Her understanding of human nature while instinctual was as accurate as many who studied behaviour for decades. Her gut instincts had led to the capture of three of the gang within days. Unfortunately, a fourth had been killed in the capture, the younger brother of the group leader, who remained at large.\n\nJason had watched as the woman rushed to the young man's side, applying pressure to the abdominal wound in an attempt to save his life. She has spoken quietly to the man as his life force drained. But it was the soft sheen of tears in those green eyes as she stood over the dead body that rocked Jason to the core. Tears for a man, she did not know. Tears for a convicted killer. \n\nThat had been what he pondered as he stood on her front porch and looked out into the darkness of the universe that night.\n\n\"Why did you cry today?\" he asked as he took the cup of hot chocolate she offered.\n\nFancy stepped closer to the porch rail, standing so close that he could feel the heat coming off her body in the cool night air.\n\n\"He was somebody's son. Somewhere out there a mother lost her child...and no matter what he might have done in this life time that woman is hurting,\" she spoke quietly as moisture gathered once more in her eyes. \n\nJason could not stop himself. He took the small step that brought him close enough to envelop her in his arms. He had sworn years ago to never get close to another person, but he could not help himself. Somehow over the past couple of weeks, this tiny dynamo had gotten under his skin, had snuck past his every defence. And now all he wanted was to wipe away those tears...to make everything right in her world.\n\nLooking back he was never quite sure how it happened. Had he bent low enough to brush those sweet pink lips? Had she stood on tippy toes, her arms about his shoulders? More than likely both had answered some primal call that bid them towards their destiny that dark night. \n\nThe first taste of her lips had been unlike anything that Jason had ever known. A sensual man, he had taken solace at times in the carnal pleasures of life. He had been honest with the women in his life; friends, women who like him knew the score, casual coming togethers that were about satisfying the flesh and releasing powerful endorphins. \n\nBut this was nothing like that. There was nothing casual about the taste of chocolate and honey and pure woman as Fancy's tongue parried with his own. Nothing casual about the feel of those soft, round curves pressed tightly against his hard frame. And definitely nothing casual about the low purr that she breathed against his lips as she whispered, \"Take me to bed, Gideon.\"\n\nJason had lifted her into his arms and kicked the screen door open with his boot. He prayed that the soft slamming would not wake Jessie; he was not certain that he could stop, not this night. The need to hold this woman, the need to make love to Fancy burned in his mind and body.\n\nMake love...Jason played the words over and over in his mind as he carried her down the hall to the guest room where he was staying. They were foreign to him...to his nature. On a purely intellectual level he had always considered love a commodity beneath him. Physical pleasures such as sex and food. Intellectual challenges such as matching wits against killers or playing chess with Spencer. These he understood, but not love.\n\nBut something inside of him, told Jason that this night was different. This woman was different. And she had proven him right...over and over again throughout the night.\n\nWhen they reached the bedroom, Jason had laid her gently on top of the quilt that he knew she had made herself. Her red hair spread out across the kaleidoscope of colors like waves rolling out from the center as a stone skipped across the surface of a still pond. She smiled at him and his gut tightened into a thousand knots, each tighter than the last.\n\nHer small hands roamed his shoulders, drawing him closer. Until her lips once more captured his. There was nothing tentative or shy about this kiss. The woman took what she wanted, as bold and sure as her name. She captured far more than his tongue as she kissed him senseless. She captured a heart he did not think he had.\n\nPlayfully she rolled them until she sat astride his hips. Her smile lighting the tiny room as she tore at his shirt, she chuckled, \"For a brilliant man, you sure are slow on the uptake, suga.\" She tugged his shirt from the waistband of his jeans and pushed at it.\n\nJason shook his head as the last of his reserves deserted him. \"We'll see who's slow.\" He rolled them over again, pinning her beneath him. He kicked off his boots even as he captured her mouth once more in a battle of wills.\n\nClothes flew about the room. His. Hers. As four hands raced about stripping them from bodies even as they toyed and teased. He found that his first estimate had been correct; her breasts more than filled his large hands. She moaned as he played with her sensitive nipples; the sound that escaped those softly parted pink lips was guttural, primitive and all woman.\n\nIt urged him on as he pushed and pawed at the tight jeans that seemed her constant uniform. She assisted the battle with the offensive intruders by kicking her boots off just as he pushed them past her knees.\n\nJason rose up to stare at his lover. Clad only in the laciest of sheer white panties, the matching bra was pushed back baring one breast to his gaze, she was breath-taking. Her hair was tangled about her from their struggles and where he had bunched his fingers through it as they kissed, using it to pin her to the bed beneath him, captive for his explorations.\n\nThe site of her vulnerable and exposed twisted in his gut. A need to possess and ravish rose up inside of him, out of character though it was. His fingers slipped beneath the edge of silk and elastic. \"I hope these weren't your favorites,\" he grunted as he ripped the material, capturing and bruising her soft lips as he repeated the action on the other side.\n\nFancy whimpered softly into his mouth, but it was not the sound of protest. Jason recognized it, the sound of need. Need that matched his own. He was past the point of reason. His own jeans the only barrier between them, a barrier he could no longer stand. His fingers tore at the button and zipper. Her hands joined his as together they pushed the cool cotton down his heated skin.\n\nFancy moved beneath him. Lifting her hips, she moved them in slow circles, intimations of the act that they both wanted and needed. Jason moaned at the first feel of her warm wetness brushing against his enflamed cock. It was too much. It was not enough.\n\nNot caring that his jeans were still bunched about his knees, he answered her call. Positioning the head of his cock between the welcoming wet folds, he thrust forward. He sank deep inside her tight sheath. Deeper and deeper until he swore that he would be lost forever in her depths just as the stars seemed lost in the dark night sky.\n\nBut Fancy had different ideas. She arched beneath him, drawing him impossibly deeper. Then her body began an erotic dance of its own. Thrusting and retreating, taming and teasing, capturing and captivating. Jason wound his fingers through the long lengths of wavy red silk once more. He held her beneath him, willing her to slow the pace. Begging her to make this moment last. She would not be deterred. No matter how tightly he tugged, no matter how deeply he kissed her lips, she continued to move.\n\nWith a sigh of regret breathed into her mouth, Jason gave into her body's unspoken demands. He thrust forward, joining her in the dance, moving in time to the beat of the primal drums that pounded inside their souls. Their bodies' rhythm matched perfectly as they thrust upward, slamming soft feminine flesh against hard maleness.\n\nBut the dance was over much too quickly. Their cries captured and held between them as their kisses absorbed the earth shattering force of their releases. They lay sweaty and semi-conscious as the night enveloped them.\n\n***\n\nJason reached for his gun as the last of the sheriff's men got into position. Just as the man raised his hand to give the single, the door of the shack swung open violently. Jason held his breath, fearful of a barrage of bullets that might not bode well for a successful ending to the siege. \n\nInstead a young girl rushed out, followed by another and another and another. Jason recognized Jessie as the last to run from the building. Reaching out, he grabbed her. \"Where's your mother?\" he pleaded, feeling as wild inside as the young girl's brown-green eyes looked at that moment.\n\nShe pointed towards the cabin, \"She charged him. They were fighting for the gun. She told us to run. I didn't want to...honest I didn't, but she told me to.\" The girl broke into huge sobs as Jason wrapped his arms about her. \n\nHe was torn apart inside. He watched as the others rushed the small building. He wanted desperately to join them. To race like a hero inside to save the woman that he admired. \n\nBut two things kept him frozen to the spot. First of all, Jessie needed him. The girl was hysterical from the two day siege that had seen her and the other girls held captive by the escaped killer, used as leverage to draw out those he believed responsible for little brother's death. Jason knew that the girl needed to cry, to purge her young soul of the ugliness. Crying and tears...release that he had never allowed himself. He knew too that Fancy would have his hide if he abandoned the girl to those tears alone. \n\nBut something else held him there too. Fear. Fear of what he might see inside that build. Blood and bodies. The bloodied body of another woman, another lover. This one far more precious than he had ever imagined possible. It was more than he could manage. \n\nSo he stood there and held the girl. Held her and listened as the sobs turned to hiccups. Held her and wished with all his heart that he could release matching torrents that would wash away the ugliness of a lifetime. A lifetime wasted hunted killers, matching wits with villains. But tears did not come that easily for Jason Gideon.\n\nThen it happened...as if in slow motion from some bad Hollywood movie. The sheriff emerged. The escaped killer was with him. Hands cuffed behind his back as the man pushed him towards the waiting police car. \n\nAnd they waited. Jessie and Jason stood silently watching that door. Waiting. Waiting for her to emerge. Waiting...and praying. It seemed like years although it could have only been minutes. Finally just as Jason pushed Jessie aside, ready to demand answers from the sheriff, she appeared in the door way. \n\nThose glorious red flames were falling in tangled waves about her shoulders. It was a look that had greeted Jason most mornings for the past week...although he knew the tussle that must have occurred in the shack was far different from the one that they usually shared. But the resulting crown of tangles was the same.\n\nAnd she was smiling. That thousand watt smile which chased the darkness from his soul and made him for a moment believe again in the goodness of man...or at least the goodness of this woman. This amazing, wonderful miracle that was Fancy.",
        "They both raced to her. The three of them meeting somewhere in the middle, a tangle of arms and hugs and kisses. Words would have to wait. Laughter was the only answer for questions unspoken then.\n\n***\n\nJason stood on the porch, staring out into the darkness. The cool night air bristled across his skin, raising tiny hairs on his arms. He should go inside. Get a jacket. \n\nBut he knew that Fancy was putting Jessie to bed. Their day had been a busy one. Ambulances had taken them to the local hospital where Fancy, Jessie and the other girls were all checked out. Of course, there were police interviews to be done as well. There had been no time for sleep. \n\nIt was late afternoon when they finally made it home. He and Fancy had puttered about the kitchen in silence, preparing a meal that was consumed in silence. They had retreated to the living room and mindless television. \n\nThen although it was barely eight o'clock and the sun was just dipping beneath the horizon, Jessie had yawned. When Fancy suggested that the girl go to bed, a frightened look had flashed across her face. A look that her mother instantly recognized. Fancy had suggested that Jessie sleep in her room for the night. \n\nAt the ripe old age of fourteen, the girl had protested, if a bit weakly, that she was too big. But Fancy had reassured her that it was just for the night. Using skills of a true profiler, she had gone so far as to assure her daughter that it was for her sake...a mother's need to know her child was safe. \n\nTogether the two had snuck away to Fancy's room as Gideon cleared the table and did dishes. Then he had come out here to think...to consider what to do next.\n\n\"Want to hear what I think?\" the sweet whisper came from over his shoulder. \n\nHe shifted slowly, capturing her about the waist and drawing her into his arms. He pressed a soft kiss to the top of her head.\n\n\"What do you think?\"\n\n\"Maybe I should have said...what I know,\" she replied looking up at him with those green eyes. \"I did a bit of research on the Internet about the great Jason Gideon. After the way Hank seemed to oh and ah over everything you said and did, I was a bit curious.\"\n\nJason sighed, looking off once more into the darkness. What had she discovered? He knew that there was plenty out there. Plenty for her to find out. Stories about what had happened in Boston. Lives lost, colleagues killed because of his mistake. His break down. And of course, there was Sarah's death. It was all there. Headlines to proclaim his failings.\n\nHer fingers brushed across his cheek and he looked down at those eyes again. Green eyes that he saw then were not filled with condemnation. The quick mind of the profiler rifled through emotions seeking to name what he saw in her face. Pain...empathy...understanding.\n\n\"It wasn't your fault, Jason. None of it,\" her words put truth to his instincts.\n\n\"You don't know that,\" he whispered, years of pain and self-loathing finding voice then.\n\n\"You are right I don't know any more than I read about the things that have happened to you. So let me tell you what I have discovered about life,\" she pushed her finger into his shoulder as she continued.\n\n\"A crazy killer, a crazy white supremacist held my mixed race daughter captive...for two fucking days. Should I have told Hank no when he asked for my help to find those men? Was that kid's death my fault? His brother said it was. Threatened to take the one thing that I loved from me in payback. He said it was all my fault...that I deserved the pain. Did I? Was it all my fault?\" her green eyes flamed as she spoke with passion.\n\n\"Hell, no. We all make decisions. Those guys choose their destinies. They choose to believe that one type of man is better than others simply because of the color of their skins. I understand it; I had it drummed into me every single day of my life until I was sixteen. It was what my daddy believed. What he taught me to believe.\"\n\nGideon watched as she turned back towards the night sky. Her fingers gripped the wooden banister as she spoke, \"Until the day I met the kindest, smartest man who became the best friend I ever had. I was a sophomore in high school, when I met Sean. He was a senior, a star on the football team. He even had a college scholarship offer. He was the best thing that ever happened to me.\"\n\nGideon's throat tightened with each word that she spoke. Something inside of him raged with jealousy...ached to have her feel the same about him. He was half lost in that pain when she spoke again.\n\n\"But he just happened to be black. By accident of birth, something he had no control over. But according to my daddy, it made him sub-human, less than a man. But I knew better. I knew that he was more of a man than my daddy would ever be,\" her voice was filled with emotion as she continued.\n\n\"Then Desert Storm happened and Sean decided that instead of playing football in college, he would join the army and serve his country. When he came home after basic training, my daddy found out the truth...that his baby girl, his precious daughter had a black boyfriend. Someone, one of his friends had seen us at the bus station when I saw him off.\"\n\nShe shivered whether from the cool night air or the memory Jason was not certain. He ached to hold her...warm her. But he knew that right now she needed to talk. A story she had to tell. A story that he needed to hear. \n\n\"Daddy beat the shit out of me. Honestly, if Mama hadn't intervened I think he would have killed me. I ran away then. Took a bus and followed Sean. I was just sixteen then. But he found a family on the base that would take me in...foster me. He went off to Ranger training while I finished high school. When I did, we got married. Then a few years later Jessie came along. Even though I worried every time he was deployed our life was pretty damned good.\"\n\nJason waited as she paused. Again jealousy clawed at his guts. As wrong as it seemed, he admitted it. He was jealous. Jealous of a dead man. A man who had held this woman's heart while all Jason had held was her body. \n\nWhen she finally continued, he could see the fresh tears slip down her creamy cheeks. \"Then one night a dumbed ass teenager decided to get drunk after the prom...and get behind the wheel of the fast sports car his rich daddy had bought him. The accident killed Sean instantly. The guy's girlfriend died later at the hospital. After half a dozen tours of duty, my hero husband was not downed by an enemy bullet serving his country. He was killed less than a mile from our house, coming home to me and our baby girl.\"\n\nJason was shocked by the vitriol that he heard in her voice. In all their time together, he had never seen her angry, heard her say a single unkind word. But now she shook with years of bottled hatred. \"By a stupid kid whose freedom he defended every day of his adult life. And the justice system that he had fought to defend let the bastard go. His daddy bought him the best lawyer that money could buy and he didn't even lose his license.\"\n\nHe felt her pain, agonized over the injustice of it all. He watched her as she dried the tears with the back of her hand, then she continued her story. \"I was a widow...with a toddler to raise alone. And I could have given up...could have just gone into survival mood. But I choose to fight. I wanted better for Jessie. I wanted her to know what her daddy stood for...what this country still stands for. You want to know the biggest lesson that I learned from all that, Jason Gideon?\"\n\nJason nodded. It was all that he could manage as her fiery words bounced about his head. \n\n\"I learned that all we have is now. Life fucking sucks. It isn't fair...and there is nothing you can do to keep the people you love safe from any of it. All you can do is live in the moment. Yes, I lost one of the best men that ever walked this earth to a stupid drunk driver, but we had ten of the most amazing years of my life. Memories that will be with me forever. And he gave me an amazing daughter. I would not trade any of it...the bad or the good.\"\n\nShe reached out and brushed softly at his shirt. Then she looked up into his eyes, \"Life is what we make, Jason. We can live in fear all our lives. Fear that we might get hurt. But you know what...that fear keeps us from living. From living in the moment...from the joy we have right now.\"\n\n\"As I stared down that guy's gun today, I was scared. Scared shitless. Scared for Jessie. Scared for my life. But I was scared too for you, Jason. Scared what another loss might do to you. And that's when I knew I had to do something. Something to protect Jessie. Something to protect you. Even if I was scared, I had to do something. And between how much I love Jessie and how much I love you, I found the strength...the strength to fight again. Just like I did when Daddy beat me, when Sean was killed.\"\n\nShe laughed softly, \"You know I still don't know what the fuck I did back there. When Hank asked what happened, I didn't have an answer. All I remember was knowing I had to do something for Jessie and you...and me. Then the next thing I know I'm sitting on top of that guy twisting his arms behind his back and holding him down for Hank and his men. Hell if I know how I did it.\"\n\nHer eyes sparkled as she looked up at him, \"But I did it. And I'd do it again, Jason. For Jessie...and for you.\" Her fingers brushed softly across his cheek, tracing his five o'clock shadow. \"And whether we have just one more night together before you hop back into your car and keep running from your past...or if we have ten years like I did with Sean...or a life time, I'm going to live. Live in this moment...and love.\"\n\nSilence hung between them for long moments. Jason's mind poured over her words. He thought about the little girl raised by a father that isolated and abused his family. He thought about the teenager with strength enough to see through her father's lies to the truth about the commonality of mankind. He thought about the young widow faced with raising her child alone. He thought too about the woman who must have faced her own past as she stood in that cabin fighting for her child's life. \n\nHis mind turned over her words of love. Marvelled at them. Thanked whatever being there was...if any for such a precious gift.\n\nIf he had been half in love with her already, the truths he saw in those green eyes as he silently held this strong woman in his arms humbled him.\n\nFinding his voice, he pushed words past the tightness in throat. He felt tears stinging the back of his eyes as he spoke. \"How about we head to bed? We have to be up early, if we're going to open the diner tomorrow. I think the sheriff has had enough trouble these past couple of weeks without a riot on the base if those guys have to live much longer without your cooking.\"\n\nFancy took his hand in hers and led him into the house. To the room that had become his...and to a new life without fear. A life of love in every moment...for as long as they had.\n\n***\n\nLove is an act of endless forgiveness, a tender look which becomes a habit. ~Peter Ustinov "
    ],
    "authorname": "Tara Cox",
    "tags": [
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/criminal-minds-gideons-new-life"
}