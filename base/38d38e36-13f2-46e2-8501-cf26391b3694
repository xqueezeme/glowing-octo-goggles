{
    "title": "Pushing Boundaries",
    "pages": [
        "====================================\n\nAll characters are 18 years or older.\n\nThis story can be read as a stand-alone and is my homage to all of the Strip Poker stories on Literotica I have enjoyed over the years. If you would like to read more about the main characters, please check out Pushing Buttons in the First Time category. This story contains elements of anal, exhibitionism, group (mmf and mff), mild reluctance, toys, lesbian, and of course lots of sex. \n\nAustin, Alanna and their housemates play Strip Poker on a rainy day and everyone gets frisky.\n\nThanks to Antematter for the oversight on my Canadianisms. \n\n====================================\n\n\"Austin. Wake up.\"\n\nIt's not that I'm lazy. Sure I've missed a few college classes over the years from sleeping in, but the past two weeks I've been sleeping in more often for a very good reason.\n\nI slowly blinked open my eyes and was quick to sit up when I saw Alanna standing in my bedroom doorway. My best friend since we were kids, we'd been inseparable and ended up as housemates in college. The reason I was sleeping in so much was that two weeks ago Alanna and I started fucking. I'd been in love with her for years, but she had been a gold star lesbian and I had thought she was never interested in me in 'that way.'\n\nTurned out I was very wrong.\n\nAlanna stood in my doorway with a towel around her waist, fresh from the shower. Her thick blonde hair was dark and damp, hanging in ringlets over her bare shoulders; beads of water clinging to her arms and thick, athletic body. Her large breasts were high and proud on her chest, slightly outthrust as she smirked at me, dark pink nipples hard in the open air.\n\n\"Morning, beautiful,\" I said.\n\nWithout a word Alanna stepped over to my bed and dropped the towel at her waist, slipping under the covers I held up for her. Naked body pressed into mine, she kissed me firmly, a teasing smile on her lips as she felt my already swollen dick harden next to her thigh.\n\n\"I love you.\" It slipped out.\n\nAlanna blinked and I almost panicked. Practically twenty years as best friends and two weeks as lovers, but neither of us had ever said those words. At least not like that, and not to each other.\n\nWhat the fuck is wrong with me!?! I screamed in my head.\n\nThat first night together, Alanna had told me she didn't want to see or date other people. It wasn't a 'let's go steady and be exclusive' or even a 'boyfriend/girlfriend' talk; we'd decided to sneak around a bit and not even let our other housemates know because Alanna had said it would be our only chance to do that. Everything pointed to us being together, but I might have just royally fucked that up.\n\nAlanna's slightly stunned expression shifted to one of delight and she squeezed us closer together. \"I love you too, Butthead.\" As she kissed me again it felt like my heart was beating a mile a minute in my throat, forced there by a swarm of butterflies taking over my stomach and chest.\n\nShe loved me.\n\n\"We need to talk about something though.\"\n\nThe heaven I was experiencing came to a crashing halt like a DJ ripping a record track. \"Okay,\" I said slowly, filled with trepidation.\n\n\"Austin, I really, really love you. You are the only guy in the entire world for me. I want to grow old and have gross ninety-year old sex with you. But there's something you can't give me. The other thing I really love is pussy.\"\n\nMy mind, after two dramatic 180 degree turns from panicked to elated and back, was having a hard time catching up. \"So you want to date other girls?\"\n\n\"No, well not really. I just want to fuck other girls. The only relationship I want is with you.\"\n\nI was scrambling to try and figure out how I felt about this. On the very physical hand, I mean... sproinnnggg. I had always fantasized about Alanna with other girls because she had often described her sapphic pursuits to me. Only recently had I found out she'd been doing that to try and spur me into making a move on her and I was too dumb to do it. My mind was also saying yes; I knew Alanna was bisexual, or lesbian with me as an exception or something, so saying yes to this and keeping her happy was the right and fair thing to do.\n\nStill, my heart was screaming no. Or more appropriately, 'Hell to the no!' I'd finally reconciled the love of my life with reality. Alanna had been through a dozen relationships since coming out as a lesbian in the 10th grade. What were the chances she hooked up with some girl and a cosmic event revealed they were deeper soul mates than we were? What if I lost Alanna right after I finally got her?\n\n\"Ok.\" The answer came from the part of me that was envisioning the sapphic pursuits Alanna used to tell me about. And my penis in the middle of them.\n\n\"Ok?\" Her eyes had gotten big and her hands were resting on my chest as we lay next to each other. \"Do... do you want to have sex with other people too?\"\n\n\"I've never been that person,\" I said. \"I don't even know if I could. Sure I've fantasized about other girls, but it's always been you.\"\n\nI'm such a schmuck.\n\nAlanna quirked an eyebrow slightly. \"What if I want you to fuck other girls with me?\"\n\nUh, what? Come again?\n\n\"Uhm,\" I stumbled over my words and thoughts, \"Yes?\"\n\nShe just smiled and curled into me, her hands slipping around my back as she buried her face in my chest. After a long moment of silence she asked, \"So who do you want first? We know a lot of hotties.\"\n\n************\n\nWe stood at the front bay window of our house, six roommates looking out at the torrential downpour. In all honesty we had needed the rain, but did it have to come on our Housemate Bonding Day? Beth, who had planned our outing, was forlornly holding the full picnic basket she had packed that morning when the sky had still been clear and blue.\n\n\"Monopoly?\" Josh, our only other male housemate, asked the room.\n\nWe all groaned.\n\n\"Risk?\" Josh loved board games and we had all played at least a few rounds with him since the start of the school year. His most recent suggestion was met with more groans. At least he wasn't suggesting one of his strange non-mainstream I-bought-it-online-from-korea games.\n\n\"What about something cool like blackjack or poker?\" Malena asked. We all raised our eyebrows and made 'that's a pretty good idea' faces. Malena flashed her all american, girl next door smile and brushed a lock of her light brunette hair from her face. After Alanna, Malena had been on the top of my 'would date' list but I had never pursued her. Always telling myself it was because we lived together, deep down I'd known it was because I'd been holding out hope.\n\n\"How about we picnic inside and play cards?\" I suggested. \"We could move all the furniture and sit on the floor in the common area.\"\n\n\"And drink,\" Beth smiled, setting down the picnic basket. \"Break out your booze, no flasks required.\"\n\nWe all laughed and quickly got to work moving the couches as far to the outside of our little living room as possible, clearing the center of the room for Beth to spread out the classic red-and-white checked blanket. While Alanna, Ricki and Josh disappeared up to their rooms or the kitchen to grab alcohol, Malena and I helped Beth start setting out the food she had made up. It wasn't a gourmet feast by any means, we were college students after all, but the sandwiches looked good and she had splurged a bit on chocolate bars and snack-sized bags of chips for us.\n\nIt only took a couple of minutes for us to be sitting in a circle and eating our sandwiches, red plastic cups filled with coke and our chosen liquor or a beer in every hand. I drained the last mouthful of my second beer as a boom of thunder rolled over the house, the weather outside unabating. \"So,\" I asked, \"What are we going to play for? We need to bet something.\"\n\n\"Snacks,\" Ricki said, gesturing to the chocolate and chips laying in front of her crossed legs. \"Anything unopened counts as a point.\"\n\n\"Mmpgh,\" Josh grunted indignantly, his mouth full from having just shoved a handful of chips in.\n\n\"I like it,\" Alanna said, \"Let's divide everything evenly though. Josh is gonna lose fast enough.\" \n\nThe girls snickered as Josh washed down his mouthful and started to say something before sighing and giving up. Instead he grabbed the deck of cards he had brought out from his room and started shuffling as we evened up the snack items - everyone got a combination of five bags of chips or chocolate bars once it was all doled out properly.\n\nThe first hand took a while to finish because, as it turned out, we needed to clarify the rules on several counts. We all knew what poker hands were generally, but when Beth said 'hit me' on her first turn we realized we needed to sort some things out.\n\n\"Alright, the game is five card draw,\" Malena explained. \"I learned from watching poker on TV so if anyone thinks I'm wrong, say something. We each get five cards face down, like we have now.\" Josh had also assumed we were playing 'regular' poker and had dealt as such. \"Once you look at your cards we do a round of betting. We won't play with blinds or antes since we don't have a lot of snacks for betting. After betting, we can each discard as many cards as we want and draw new cards to replace them. Another round of betting and then we reveal.\"\n\nWe all nodded our tacit understanding of how we were going to play and the game was on. We had to reiterate the rules for ourselves a couple of times during the first hand and no one folded, so when Ricki turned over three of a kind she raked in twelve snacks, making her the rich bitch of the game.\n\n\"I knew it,\" Josh said accusingly, \"Ricki's been too quiet, she's trying to shark us.\"\n\n\"I am not!\" The brunette rugby player complained. \"I got lucky.\"\n\n\"Sure,\" I teased, \"We'll see who ends up winning all the snacks.\"\n\nWe all got our third, or in Beth and Alanna's cases fourth, drinks together and Josh dealt the next hand. I had a pair of twos in hand with an ace high, which wasn't great but had a bit of promise, so I tossed in my last bag of chips, leaving me with a pair of Mr. Big chocolate bars. Everyone but Josh also tossed in a snack, our dealer deciding to fold early. I tossed in my other two cards, keeping the twos and the ace, and had to hide my smile as I looked down at an eight and a second ace. Two pairs!\n\nAlanna was leading the betting this hand and cautiously put in a second snack, forcing everyone but Ricki to raise and leave themselves with only one snack left. I was next and squinted at Alanna, trying to judge her reaction, but she just batted her eyes at me and made our roommates laugh.\n\n\"I call,\" I said, tossing in one of my chocolate bars.\n\nMalena, on my other side, folded. Ricki casually tossed in another bag of chips, her mound of winnings daunting on the floor beside her. Little Beth, her eyes darting from the pot to the hand of cards in front of her, played her tongue over her lip ring a few times before setting both of her remaining snacks into the pot. \"All in?\"\n\nI groaned, echoed by Alanna. Ricki laughed and shrugged, not waiting to toss in another one of her snacks to match the bet. Technically it was Alanna's turn, and she hemmed and hawed over whether to throw in her last snack. If either of us did and we lost, we were out of the game.\n\n\"I call, all in too,\" She finally said, putting her last chocolate bar into the pile.\n\nI looked to my cards again. Two pair, twos and aces. It was a good hand, but with both Alanna and Beth all in, what were the chances they had something better? I took a deep breath and glanced forlornly at my lone remaining Crunch bar. One more hand could keep me in the game. \"I fold,\" I groaned, tossing my cards face down to Josh.\n\n\"Alright,\" he said, looking to the three girls still in the hand. \"Let's see who won.\"\n\nBeth flipped her cards, revealing two pair of eights and nines and I suppressed another groan; I would have beaten that hand. Ricki just shook her head and laughed, tossing her cards to Josh face down - she hadn't beaten Beth. Alanna was grinning like a fiend though, turning over her cards. Three of a kind in fours, the winning hand.\n\n\"Whoo!\" Alanna catcalled, reaching out and pulling her hefty pot back to her seat. \"I'm rich I tell ya. Make it rain!\" She tossed some bags of chips in the air as most of us laughed. Beth, sitting across the circle, was not pleased.\n\n\"Well I guess I'm out,\" she sighed, taking the last sip of her rum and coke and starting to pour herself another.\n\n\"Aw, poor baby Piercings is all sad she lost.\" Alanna called Beth 'Piercings' because she was fairly liberal with her body adornments. Sporting multiple piercings along the rim of each ear, Beth also had two small silver eyebrow rings, a septum piercing in her nose and her lip ring. She'd also shown off her tongue piercing before, though that one wasn't readily apparent. \"Don't worry, I'll spot you some snacks so you can keep playing, but it's gonna cost you.\"\n\nBeth finished mixing her drink and rolled her eyes at Alanna, \"Alright, I don't just want to watch. What do you want?\"\n\nAlanna smirked and leaned into the circle, stage whispering, \"I'll give you three snacks for your bra.\"\n\nI know my reaction was something along the lines of raising my eyebrows and pursing my lips in surprise, and I saw Josh's mouth hang open for a long moment as he tried to process the deal that was forming as well.\n\n\"Oooh, I'm gonna need another beer,\" Malena laughed, handing another one to Ricki as well.\n\nBeth was an outgoing girl and a tomboy - she played bass in our garage band along with Josh on vocals. Since I had met her in our first year of college she'd always been a troublemaker but I'd never seen her do something quite so risky as this. All she had on were a pair of knee-length shorts she'd made out of old skinny jeans, a man's white wifebeater undershirt and a black bra. Her dark hair wasn't even on her side for this since she kept it cut boyishly short and messy.\n\nShe clearly thought about it, stewing in her drink-fueled thoughts, pursing her lips to the side and squinting her eyes at Alanna. \"Alright, I'll do it.\"\n\nJust hearing Beth say those words had me adjusting my sitting position to accommodate the growth in my shorts. Beth sat up on her knees and reached behind her back, undoing her bra. She hesitated and then quickly took a long drink of her rum and coke before peeling the bra out from under her thin shirt and tossing it at Alanna.\n\nBeth sat back and folded her arms under her breasts, \"Happy?\"\n\n\"Yes,\" Josh said, grinning.\n\n\"Not you, thundercunt,\" Beth said, slapping him on the arm from her position beside him. She had nice small boobs, probably a bit more than a handful, but the really interesting thing was that she clearly had both nipples pierced, the studs creating bumps on either side of her nipples.\n\n\"I just have one question,\" Alanna said, still grinning.\n\n\"What's that?\" Beth asked.\n\n\"Are you pierced down below too?\"\n\nBeth blushed and cupped her tits, \"No, I'm not a huge perv, just a little one.\"\n\nEveryone laughed and Josh picked up the cards, starting to shuffle while quite obviously distracted by the sight of Beth.\n\nI leaned back and, seeing that everyone else was distracted by the almost-free boobs, looked to Alanna. She winked at me with a smirk, then nodded her head towards Malena and raised her eyebrows a couple of times. I took a deep breath and tried to calm my nerves, knowing what she meant. It might have started with Beth, but Alanna's goal was to get to Malena because she knew I had the hots for our roommate.\n\nMalena was wearing an old black band shirt that had the arms and a lot of the sides cut out, making it into a sleeveless tee. The gaping sides gave tantalizing views of her thin abdomen and the round sides of her sports-bra covered breasts. Her white, stretchy yoga pants were skin tight and would have had me staring all day at the park if we had gone on our picnic like we had planned.\n\n\"Ok, enough staring you dorks,\" Beth complained, covering up herself again. \"Deal the hand, I need to win back some snacks.\"\n\nJosh dealt but was clearly distracted. I glanced at my cards, I had the eight, queen, king and ace of hearts, along with the four of clubs. It was nothing if I didn't pick up anything good, or I could discard the four and hope for another heart to make a flush. Or, if I was really daring, I could get rid of the eight as well and hope for the jack and ten of hearts, making the royal flush.\n\nI tossed in my lone Mr. Big, signalling I was all in for the hand, and everyone else tossed in something else as well. No one raised, so I discarded the four of clubs and waited for my card, deciding to play it safe and not go for the royal flush. Josh dealt it to me and my hand hovered over it for a moment on the red and white blanket. Any heart, I need any heart.\n\nPeeking at the corner, my chest surged and I struggled not to make a noise. It was the three of hearts, giving me a flush. If I'd been able to, I would have been betting hard - as it was, Ricki raised the bet to two snacks, Alanna and Josh calling, though it put Josh at all in as well. Beth folded quickly, wanting to preserve her dwindling stash, and all eyes turned to Malena, who only had one snack left herself. She hummed and hawed over it for a long moment, glancing at Alanna and Ricki suspiciously. \"All in,\" she said, pushing her last bag of chips forward.\n\n\"That closes the bets,\" Josh said, flipping over his cards. \"Two pair, beat that.\" \n\nAlanna and Ricki both laughed, tossing their cards, and I grinned in victory, \"Flush of hearts. The pot is mine.\"\n\n\"What up mothafuckaaa's!\" Malena crowed, flipping her cards over dramatically. \"Four of a kind bitches, I win.\"\n\n\"Fuck,\" I said, laughing at her antics. Malena was usually quieter and more demure, but was obviously comfortable with her friends and roommates in private more than she was at parties. I liked this side of her, even if it meant I was losing. It was a little more like Alanna.\n\n\"Ooh, talk about making it rain,\" she giggled, pouring her winnings over her head and scooping them up into her lap. \"Alright, boys. Who wants to stay in the game?\"\n\nJosh and I were both out of snacks, and judging by how enthused Malena was I had a feeling we were going to be paying to play.\n\n\"What do you want?\" I asked a little cautiously.\n\n\"I will give you each.. hmmm... three snacks. But I want your pants!\"\n\nThe other girls cheered and I looked across the circle to Josh, who shrugged back at me. We both stood up and I started to unbuckle my shorts as he did the same.\n\n\"Hold on, hold on,\" Alanna said. \"Before we do this, everyone finish your drinks.\"\n\n\"Why?\" asked Ricki.\n\n\"Just trust me, do it.\"\n\nJosh and I sat back down and we all finished off our drinks, several of us taking a deep breath to ward off the light headed rush we got. We'd been drinking fairly consistently since we started our late lunch and we probably all could have used a break instead of more.\n\n\"Ok, so here's what I'm thinking,\" Alanna said. \"We're headed that way anyways, so let's just play strip poker.\" The rest of us were quiet for a moment as we absorbed her proposal. \"The way I figure it, we say no more folding. Worst hand or hands have to take something off.\"\n\n\"What does the winner get?\" Malena asked, but was quickly followed by Beth.\n\n\"What happens when you're naked, are you out?\"\n\n\"I dunno,\" Alanna said. \"If the loser's naked, the winner dares them to do something?\"\n\n\"I like it,\" Malena said, smiling and clearly enjoying her mildly drunk state.\n\n\"Let's do it,\" Beth said, \"Fuck, I'm practically halfway there already.\"\n\nRicki just laughed and nodded.\n\nJosh and I looked across the circle at each other again. People say that women can communicate silently, or married couples, or best friends. Alanna and I had our little unspoken conversations sometimes, but that usually had more to do with knowing how each other thought. Girls don't get how bros have silent communication though. Looking at each other, Josh and I might as well have had a full conversation without even moving an eyebrow.",
        "Dude.\n\nDude I know.\n\nBut dude, we'll be naked in front of each other.\n\nI know, and that'll be weird. But dude.\n\nOk dude.\n\n\"Alright, I'm in,\" I said.\n\nJosh sighed dramatically, \"Well I guess I can't be the only party-pooper.\"\n\n\"Speaking of party-pooper, time to drop them drawers,\" Malena called in a silly fake southern drawl.\n\nI got back up and quickly dropped my shorts, leaving me in a pair of stretchy briefs as the girls wolf whistled. Beth called, \"Take 'em off!\" \n\nSitting back down on the floor I tried to make sure I was 'arranged' to cover up any bulges I was sure to get in the near future. Josh's turn, he stood up and quickly dropped his shorts as well, causing the entire room to start laughing.\n\n\"What?\" he asked cluelessly.\n\nI was just chuckling and shook my head, \"Josh, you're wearing tighty whiteys.\"\n\n\"So? I grew up wearing fruit of the mother fucking loom. Why should I change just because they aren't fashionable?\"\n\n\"You are such a hipster!\" Beth exclaimed as she tried to calm her own laughter.\n\n\"Whatever,\" he said, sitting back down, crossing his hairy legs and giving me the unwelcome vision of his thinly covered crotch.\n\n\"Dude,\" I said indignantly.\n\n\"Oh shut up and let me deal,\" he retorted as the girls continued to giggle at how uncomfortable us guys were.\n\nJosh dealt the hand and I looked down at... nothing. I had absolutely nothing. Everyone else around the circle seemed to be taking the game more seriously, the girls who had won no longer able to just bet frivolously. I discarded three cards, keeping the king of diamonds and jack of clubs, and got back nothing.\n\n\"God damn it,\" I said, tossing my cards into the center of the blanket.\n\n\"Well I guess Austin is stripping,\" Ricki laughed.\n\n\"Let's see if anyone else is though,\" Alanna countered, flipping over her cards to reveal a pair of threes. Each of the girls flipped over their cards, revealing one poker hand or another. Malena had a straight, Beth had three of a kind, and Ricki had two pairs.\n\nJosh was busy facepalming himself. \"I discarded the wrong card,\" he muttered into his hands.\n\n\"No way,\" Beth cackled.\n\n\"Uuugh,\" he groaned.\n\n\"Boys strip!\" Malena yelled, joined by Ricki as they pumped their arms in the air, causing Alanna to laugh and give me a shove. \"Come on, Butthead. Let's see your tits.\"\n\nI stood up and looked to the ceiling, groaning internally. Not three minutes ago this had sounded like a great idea. I started unbuttoning my shirt and Beth started singing, \"Pour some sugar on meeee, in the name of love-\" The other girls went wild and started singing along, the heat rising to my cheeks as I took off my shirt and tossed it at Beth in a wadded up ball, catching her right in the face. She rocked back, laughing hysterically, then rocked back up and pushed at Josh to get him moving.\n\nHe got the same treatment, the girls singing the chorus to the Def Leppard song until he pulled off his t-shirt, flashing his pale white chest covered in dark body hair.\n\n\"I think we're gonna call you wolfman from now on,\" Alanna joked as he sat down.\n\n\"Only if we can call Austin 'the Cavern.' His belly button is huge!\" Ricki said, pointing to my stomach.\n\n\"What? No it isn't,\" I said, covering it.\n\n\"Well it's not small,\" Malena said, her nose scrunched up and her eyes flashing playfully.\n\n\"I think he sometimes keeps cheezies in there for a snack,\" Alanna laughed, causing everyone else to as well.\n\n\"Ok, it's really not that big,\" Ricki said, seeing I wasn't enjoying the teasing.\n\n\"Josh, you know the point of this game is to get the girls naked right?\" I said, turning to him.\n\n\"Nah!\" All the girls giggled at the same time.\n\n\"Josh, deal the hand.\"\n\nHe did, and gave me two pair right off the bat. I wiped a little bit of sweat from my brow, my nervousness fading. There was no way I was going to have the worst hand now. I discarded my off card, hoping to maybe get a full house, but no such luck.\n\n\"Fuck,\" Josh said after the discards and draw. \"You gotta be- Come on. Uuuughh.\"\n\n\"Are you for real?\" I asked.\n\n\"Yes, I'm for real,\" he snapped.\n\n\"Ok, everyone show your hands,\" I said.\n\nA pair of threes, a flush, a pair of sevens, three-of-a-kind nines and my two pair. Not a single loss by the girls.\n\nJosh just sat, looking down at his worthless hand, stewing in his tighty-whiteys.\n\n\"Girls, go easy on him,\" Alanna said, sensing our friend's mood. \"Josh, we won't say anything as long as you promise not to when we need to strip.\"\n\nThe other girls agreed quietly, the mood in the room changing slightly now that someone was going to reveal something 'important.' I was just glad it wasn't me going first.\n\n\"Fine, guess it's time to get into my birthday suit,\" Josh grinned weakly, standing up and quickly shucking his underwear.\n\nI tried not to look too hard at my friends dick, but when it's just sort of out there like that... well, you look a little. He wasn't hard and he was pretty hairy down there, so the whole package looked a little small. I could also see he was uncut.\n\n\"I- ah-\" Josh said, his face red.\n\n\"Josh, just sit down and deal the cards,\" I said.\n\n\"Right.\" He did.\n\n\"You have a cute dick,\" Beth told Josh.\n\n\"What?\"\n\n\"It's cute,\" she reiterated. \"I dunno, it's nice. If you'd had a raging boner it would have been weird.\"\n\n\"She's right,\" Malena said, a kind expression on her face.\n\nJosh blushed a bit more and then started dealing the cards, his package just sort of sitting there as I tried to look at something else, my eyes landing on Malena or Beth's tits or over to Alanna, who seemed utterly disinterested in Josh's display.\n\nCards flew across the picnic blanket. I had a pair of sixes with an ace high, and after discards I drew a second ace, giving me two pair again. Phew, safe.\n\nAs we started flipping over cards I realized Josh was now playing to avoid dares. We hadn't clarified any rules about that, and considering we were already playing strip poker I was more than a little concerned the girls would leverage us into doing something I was not interested in.\n\nJosh didn't lose though, his pair of nines keeping him from his first dare of the night. Instead, Beth swore as she turned over a blank hand, Malena grumbling beside me as she did the same.\n\n\"Looks like it's time to take those pants off Beth,\" Alanna teased with a grin.\n\n\"Ummm,\" Beth blushed, \"No, not quite yet.\" She reached for the hem of her wifebeater, drawing it up over her stomach. I'm pretty sure my dick got hard at the same pace as that shirt lifted, but Alanna stopped her.\n\n\"Whoa, whoa, whoa. I'm not gonna ask why you're going shirt first, but I think we all deserve a little show here.\"\n\n\"What?\" Beth exclaimed. \"Josh didn't have to.\"\n\n\"He was first though,\" I cut in, \"That was hard enough. Plus, you're a lot prettier than he is.\"\n\nBeth blushed and rolled her eyes. \"Fine, what do I have to do.\"\n\n\"Just tease us a little first,\" Alanna shrugged.\n\nBeth rolled her head back and sighed, her tongue playing at her lip ring briefly before she brought her head back up and she was biting her lip. She took the front of her thin, stretchy shirt and tugged it down, her pierced nipples pushing against it prominently and her slightly darker areolae showing through as the neckline pulled lower and lower, her cleavage deepening until we could see most of her boobs, just the nipples covered by the white shoulder straps of the shirt. She jiggled her tits a bit and I realized my mouth was drying up because it was hanging open slightly.\n\nShe let go of her shirt and it bounced back up to cover her, but Beth was soon lifting the hem again, this time slowly dragging it across her stomach until it was bunched just under her boobs. \"I feel so dumb,\" she said, closing her eyes. \"I'm not sexy like you girls.\"\n\n\"I think you're doin' alright,\" Ricki assured her, and when Beth returned her gaze Ricki glanced pointedly at Josh, who was casually trying to cover up the fact that he was now hard.\n\n\"You're having an effect on Austin too,\" Alanna laughed, pointing at the bulge in my briefs. \"Not to mention I think you're doing pretty well myself. And I'm the expert.\"\n\nBeth's flush deepened and she quickly pulled her shirt the rest of the way off, her tits bouncing nicely as they were freed. Her skin was naturally pale and her areolae were a couple shades more tan, her nipples permanently protruding due to the pink barbells piercing them.\n\n\"Did they hurt?\" Malena asked, cupping her own boobs through her shirt and bra.\n\n\"Not really,\" Beth said, one hand coming up automatically to prod at one, \"I mean it's sort of like getting your ears pierced, so it hurts at first but it goes away, and then it makes you feel a little naughty whenever you brush against them and you feel them there.\"\n\n\"Sounds sexy,\" Alanna smiled, \"Looks sexy too.\"\n\n\"Thanks,\" Beth smiled back weakly.\n\n\"Alright, Josh. Deal the cards,\" Malena told our naked dealer.\n\n\"Whoa, hold on there, I think someone was trying to get out of her loss,\" Alanna said.\n\nMalena rolled her eyes and sighed, but it was with a grin and she scrunched up her nose, obviously playing around. \"Well, you guys aren't getting a show this time because the bra is coming off under the shirt.\"\n\nAlanna and Beth booed her as she started peeling the stretchy athletic bra from her body. It was a little awkward, which I was completely fine with because the large arm holes of her shirt gave me a great view as the bra peeled up and over her boobs, leaving them to swing free and bob around in shadow as she pulled the bra through the neck of her shirt.\n\n\"There, done,\" she smiled proudly, placing the bra behind her.\n\n\"Yeah, no show at all,\" Alanna said sarcastically.\n\nMalena raised a confused eyebrow, then looked at me. My mouth was now definitely hanging open and I wasn't even trying to hide the fact that I was very hard under my briefs, the black stretchy fabric clearly framing my dick.\n\n\"You have really nice side boob,\" Alanna filled in.\n\nMalena blushed and crossed her arms over her boobs, \"Oh my god, you weren't supposed to see that yet.\"\n\n\"Oh come on,\" Beth said, \"no way are you allowed to do that while my tits are out. You have way nicer boobs than me.\"\n\n\"What? No,\" Malena argued.\n\nRicki snorted, \"I've seen your boobs before, Malena, and Beth is right. Your boobs are way nice.\"\n\nMalena's eyebrows knotted as she frowned, \"No, you and Alanna have bigger boobs and Beth you have your whole pierced punk girl thing going on. I just have...\"\n\n\"Really, really nice boobs,\" Ricki finished for her.\n\nMalena rolled her eyes again and dropped her arms, my eyes immediately riveting to the few inches of tantalizing sideboob I could see. \"Stop staring,\" she laughed, slapping my arm lightly.\n\n\"Yeah,\" Beth said, punching Josh in the arm as well, \"Deal the cards, bozo. They're just tits.\"\n\n\"I'll stop looking if you stop,\" Josh grumbled as he gathered the cards, and Beth guiltily looked in the opposite direction of the dick she had been eyeing.\n\nCards. I had a good hand and managed a straight. After the discard and draws Josh sighed heavily, obviously pleased, while Malena looked down at her cards incredulously. \"What the fuck?\"\n\n\"No way am I the only loser,\" she continued when we all revealed our hands. \"No way. Aw man.\" She sighed and glanced at me, our eyes meeting for a moment and she blushed. Her eyes moved down briefly to my underwear, and she stood. \"Well, I guess it's time to give you all a show.\"\n\n\"Hold on,\" Alanna said, getting up and taking a couple of steps so that she could whisper in Malena's ear.\n\n\"What?\" Malena asked. \"Why?\" Alanna whispered back, and Malena cocked her head, \"Really?\"\n\nAlanna sat back down next to me, giving me a grin and an eyebrow wiggle.\n\n\"Our resident girl expert seems to think I shouldn't take off my shirt,\" Malena told everyone. \"So blame her, cause I guess my pants are coming off.\"\n\n\"What?\" Josh asked, \"That's lame.\"\n\n\"Hold on,\" Alanna said, putting out a hand to stop his complaints. \"'Lena, knot your shirt in the back.\" Malena cocked and eyebrow but followed Alanna's instructions, baring an inch or so of her thin midriff above the high waisted yoga pants. \"Alright, now spin around.\"\n\n\"Yes, madam director,\" Malena joked, slowly turning to give us all a chance to look at her legs and pert little ass clad in the skin-tight white fabric. Malena was a smaller girl than Alanna, her athleticism more graceful instead of powerful; if she wasn't training for their Rugby team, Malena was doing yoga or tai chi in our little backyard. Her body was bikini-ready, with slim hips and sleek legs that met in a small but what I considered fantastic ass - the yoga pants she was wearing showing off the diamond gap below her crotch and between her thighs.\n\n\"Ok, now bend at the waist,\" Alanna continued directing as we all watched. Malena followed the order, easily bending and letting her arms move out to balance herself as if she were doing one of her yoga moves. \"Great, now arch your back.\" She did and she looked amazing, her ass turned up and stretchy pants clinging to her, her mound pressing out from between her legs. I wanted to bury my face in her still-clothed ass.\n\n\"Now even I have to agree, that is hot,\" Beth said.\n\n\"Yup,\" Alanna agreed.\n\nMalena looked over her shoulder sideways at me and I tore my eyes away from her booty. She quirked an eyebrow and scrunched her nose at me again, smiling as we locked eyes. Her long brunette hair was swept over her opposite shoulder, hanging loosely.\n\nWow, I mouthed to her and her smile grew a little broader.\n\n\"Alright, now reach back and peel your pants down slowly,\" Alanna directed.\n\nDropping her head, Malena reached back and hooked the waistband of her pants with her fingers, slowly tugging the white fabric over the arch of her ass, revealing the white band of a string thong. The pants kept lowering, showing off more and more of her little apple ass, cheeks firm and pressing out against the tightly bundled fabric in her fingers. Because of the way her legs were positioned the string of her thong disappeared between her cheeks and there wasn't a hint of view between them, but as the pants uncovered the rest of her ass her mound came into view and I could see the thong was pulled tightly against her, two lips clearly defined against the fabric.\n\n\"Fuck,\" I breathed out, eyes roaming from the back of her thighs up to two small dimples just above her ass.\n\n\"Like what you see?\" Malena asked, turning to me again.\n\n\"Uh-huh,\" I managed.\n\n\"Happy?\" she directed at Alanna.\n\n\"No, but that'll do for now,\" the more athletic, and fully dressed, blonde replied.\n\nMalena turned and sat back down cross legged, her bare knee brushing mine as she closed the circle a little bit. The knot she had made to keep her shirt up was still in place, tightening the arm holes a bit so that I was seeing less side-boob.\n\n\"Alright,\" Malena clapped, \"Next hand, I want to see some more dongs.\"\n\nThe girls all laughed and agreed, including Alanna. Josh was now clearly at full mast across the circle from me and had stopped bothering to even try and hide quite how aroused he was. \"Well,\" he said, \"I guess you have to hope Austin loses then.\"\n\n\"Pfft, there's plenty of ways for us to see more of your dong,\" Ricki said. \"I can't wait to give you a dare.\"\n\nCards. I had a pair and discarded my other cards, managing to find three of a kind. I wasn't paying as close attention to the cards any more, distracted as I was by the other things going on in the room.\n\n\"I had to open my stupid mouth,\" Ricki laughed when she was revealed as the loser of the next hand. \"Well, I know what's coming off.\"\n\nShe stood and turned around, shaking her butt at us. Ricki was wearing a simple orange spaghetti-string tank top that clung to her upper body and prominent tits along with some sort of cotton-like short shorts. Where Alanna had a thick and powerful body and Malena was thin and wonderfully toned, Ricki was somewhere in between. With some work and dedication she could probably have a physique like Malena with more curves, but as it was Ricki had a bit of flesh to her that definitely added to her ass, thighs and tits. \n\nBouncing her butt a few more times, Ricki looked over her shoulder at us all and winked before laughing out loud and pulling her shorts down to reveal a pair of tight boy-short cut panties. She twerked her ass a few more times, her meaty cheeks bouncing, then sat back down. \"Not a hard decision considering what panties I had on, bitches.\"\n\n\"That's practically cheating,\" Malena snorted.\n\n\"Hey, I didn't know we'd be playing strip poker today. I was ready for a day at the park.\" She sat crosslegged like Malena and it became apparent to those who looked that Ricki had what could only be called a 'fat pussy,' prominent lips pushing against the fabric of her pink spandex underwear. No one else said anything so I kept my mouth shut.\n\nCards. I had two pair off the hop and new I was safe again. Somehow Alanna managed to sneak another single pair by, remaining fully dressed, while Ricki and Malena both flopped with nothing.\n\n\"For real?\" Ricki said. \"I just lost one.\"\n\n\"So? I just lost three of the last four hands!\" Malena countered.\n\nRicki rolled her eyes and peeled off her shirt without even standing, \"Whatever. At least I've still got my bra.\"\n\n\"Not for long I bet,\" snickered Beth. Now that I was looking over at her instead of being distracted by Alanna quietly snapping the elastic of my underwear behind my back or staring at Malena I realized Beth's nipples were obviously standing out a bit more and I wondered if it was just from being in the open air or if she was getting turned on.\n\n\"Yeah well now I gotta pick,\" Malena sighed, standing up. Her hands wavered, obviously unsure of whether she would rather take off her shirt or her thong. Finally she undid the knot on her shirt and slipped her arms inside, slowly lifting it over her head and revealing her tightly toned stomach with it's cute little belly button, then the underside of her breasts. She stopped, teasing us as she looked around the group, then turned to Josh.\n\n\"Hey Josh,\" she said in a sultry voice.\n\n\"Yeah,\" he croaked, clearly mesmerized.\n\n\"Do you like lefty or righty?\" She revealed one boob and then the other. While they may not have been as big as Alanna's, which I had spent considerable time enjoying over the last two weeks, Ricki and Beth were right in saying they were pretty fantastic. Almost a little too large for her frame, they hung pleasantly with upturned pinkish nipples that were begging to get teased and played with.\n\n\"Both?\" Josh said.\n\n\"Good answer,\" Alanna laughed.\n\nMalena sat back down next to me, one leg straight in front of her and the other crossed over her thigh, the bottom of her foot resting on the outside of my leg. I looked down at it, the slender arch and smooth skin, the way it was brushing against the hairs on my leg. As Josh dealt the next hand Malena and I glanced at each other at the same time and her lips, which were pressed together in a somewhat self conscious moment, turned into a little smile before we both got our cards.\n\nBefore I even looked at them I glanced to Alanna and she reflexively looked back, knowing without knowing that I wanted her attention. She glanced down and saw Malena's foot on my leg and raised an eyebrow at me. I twitched one of my own in a, 'is this okay?' tiny gesture. She met my eyes and just barely nodded, more like just a slight raising of her eyebrows and gesture with her chin. The real answer was in her eyes, big and blue and piercing, as she looked from me to the nearly naked Malena, devouring the sight hungrily.\n\nI looked at my cards and had a pair of eights with a king high, so I discarded the other two but got nothing useful back. That was alright though, because Josh grunted in disbelief, \"God damn it.\"",
        "Alanna managed to avoid losing again with a pair of threes, though I could tell by the slight flush in her cheeks she must have just barely scraped that pair together. No one else lost, but the important thing this round with Josh as the loser was that Beth won with three of a kind.\n\n\"So I get to make Josh do something right?\" Beth asked.\n\n\"You get to dare him to do something,\" Alanna clarified. \"If he doesn't want to do it he can always quit - but then he's a chickenshit and has to leave the game and sequester himself in his room.\"\n\n\"What, that wasn't in the rules we agreed to,\" Josh said.\n\n\"Yeah, but it's fair,\" I countered. \"You don't play the game, you don't get to watch the game.\"\n\n\"Fine,\" he grumbled, turning to Beth, \"What do I have to do?\"\n\n\"Weellll,\" Beth said, obviously taking great pleasure in drawing out our bandmates discomfort as long as possible. \"I think since you've been having such a great time staring at us girls, you should give all of us a chance to stare at you. I dare you to stand in front of each of us and ask 'Would you like a better look at my little pinky winky' and then let them see it for thirty seconds up close.\"\n\nJosh blinked and then sighed. \"So I have to let all of you examine my junk for thirty seconds.\"\n\n\"You also have to say the words,\" Ricki informed him.\n\nJosh rolled his head back and looked at the ceiling, then stood up, standing in front of Beth. \"Would you like a better look at my little pinky winky?\" he asked deadpan.\n\n\"Why yes Josh, I would like a look at your little pinky winky, thanks for asking!\" Beth replied as chipper as she could, making us laugh.\n\nJosh was still hard despite his embarrassment, it would be difficult not to be in the situation, and he tensed up for a moment when Beth reached out and held his dick between her finger and thumb, moving it this was and that. \"Honestly,\" she said, \"It is cute, even when it's hard. I've never seen an uncut dick before though, it's kinda weird. Like it's wearing a sweater and wants to just pop it's head out.\" She moved his foreskin back and forth a few times, making him groan, while making a 'Boop!' noise every time his head got revealed.\n\n\"That's probably thirty seconds,\" I said, trying to move the game along.\n\n\"Oh alright,\" Beth replied, letting go. \n\nJosh took a deep breath before moving to stand in front of Alanna. \"Would you like a better look at my little pinky winky?\"\n\n\"Sure,\" she replied to my surprise. I had been expecting her to pass, considering she had never been interested in guys before me, and was blunt about not being interested in other guys now.\n\n\"Really?\" I blurted out. Hopefully everyone else in the game would think it would be surprise because Alanna was supposed to be a gold-star lesbian, not because I was jealous. Scratch that, I thought, they would probably still think I'm jealous.\n\n\"Yeah,\" Alanna said, and that was when I saw the spark of mischief in her eye. \"But just so I can do this.\"\n\nShe didn't waste any time, taking his dick in one hand firmly and tilting it as high as she could, then using her other hand to tickle Josh's nutsack.\n\n\"Aaagh,\" he let out in surprise, his legs buckling and trying to cross at the same time, pulling away from the odd feeling.\n\n\"Tickle, tickle, bitch,\" Alanna laughed, keeping him in place for a moment longer before letting go of him completely. \"Okay, that's all.\"\n\nThe other girls were laughing and I couldn't help chuckling as well, thankful it wasn't me more than anything else.\n\nJosh stood in front of me and I looked him in the eye, trying to ignore the fact that his junk was way closer to my face than I had ever wanted it to be.\n\n\"No Josh, I do not want a look at your little pinky winky,\" I said before he even started his routine.\n\nThe look on his face had a flash of relief and I realized he had been harbouring a little nugget of 'what if' in his head about me. Two and a half years we had known each other and I'd never dated anyone - maybe at some point he had wondered if I was gay and not just obsessed with Alanna.\n\nMalena grinned and let him go through his whole schpiel, but declined, \"I'm good, I saw enough on Alanna's turn.\" This made Alanna start laughing all over again.\n\nOn the other hand, Ricki's answer of, \"Fuck yeah I do,\" was a little surprising. She used a few fingers to play around with him a bit, pulling back on his foreskin and moving him around so she could get a good look. \"You really need to do some grooming down here,\" she said finally, letting go.\n\n\"Hey I didn't know we were playing strip poker today,\" he replied, quoting her from earlier before sitting back down and reaching for the deck.\n\nI got my cards and had to do a double take - I had nothing. No pairs, not even a hint of a straight, nothing. Shit shitty-fuck shit fuck, I thought, discarding three of the cards at random.\n\nI got back three different cards and still had nothing. \"Well, fuck.\"\n\n\"Yay more dongs!\" Ricki cheered.\n\n\"Anyone else lose?\" Josh asked, so everyone flipped their cards to reveal actual poker hands.\n\n\"Damn it,\" I muttered as I stood up.\n\n\"Looks like someone's having a good time,\" Beth joked as all four girls got a good look at the bulge I was making in my briefs.\n\nI took a deep breath and glanced at Alanna, who winked at me. In the two weeks since we had gotten together I had built more self confidence in my body than I had ever felt before. I'd always thought of myself as very average in the dick department, which matched up with how big I figured Josh was too. This isn't a big deal, I told myself.\n\n\"Well,\" I said, looking to Alanna and Malena still sitting on either side of me. \"You want to do the honors?\"\n\nAlanna broke out into a smile, \"You want us to pants you?\n\n\"I'm in,\" Malena said, getting up onto her knees. She was looking up at me, her hands at the waistband of my underwear, bare tits hovering inches away from my legs. Her nipples had gotten hard, her areola swelling around them a bit as well. The image of her like that gave me a rush of blood flow, causing my dick to swell and twitch in front of them. \"Wow, someone's excited,\" Malena said more quietly before licking her lips lightly.\n\n\"You ready?\" Alanna asked her, and Malena nodded. \"One, two, three-\"\n\nThey both pulled my briefs down, my dick springing from it's confines and bobbing up and down before me.\n\n\"Wooo,\" Ricki cheered, \"Dong-dongdong-dong-doooongs.\"\n\n\"Really,\" Beth laughed to her, \"The thong song but with dongs?\"\n\n\"Would you prefer 'It's Raining Men?\"\n\nWe all groaned and I sat back down, Malena and Alanna moving back to their spots.\n\n\"I like the cut look better I think,\" Alanna mused.\n\n\"Why's that?\" Ricki asked. \"You don't even like dicks to begin with.\"\n\n\"I dunno, aesthetics? Have you ever seen an uncut dildo?\" \n\nBeth laughed at the thought and Ricki frowned, \"Huh, I guess not.\"\n\n\"Alright, how about we don't start comparing equipment in the room.\" Josh said.\n\nHe shuffled the cards and dealt. My pair of queens turned into three of a kind, but I was beaten by Alanna's flush of diamonds.\n\n\"Oh come on, again?\" Josh groaned, though I was more interested in the look on Beth's face since she was the other loser.\n\n\"I'm the winner and I say strips before dares,\" Alanna declared.\n\n\"Fuuaaa-\" Beth said, standing up.\n\n\"Come on, Piercings. Let's see what kind of panties you've got under there,\" Alanna giggled.\n\nBeth had gone a long stretch without needing to strip, sitting in her skinny-jean cutoffs, though not quite as long as Alanna had been skating free and clear. \"Well, y'see,\" Beth said, undoing the button and unzipping the zipper, \"I kinda went commando today.\"\n\nShe slid the jeans over her small hips and partway down her thighs, revealing the first vagina of the game. I didn't have the greatest view but from what I could see she wasn't very lippy, her pussy small and neat, topped by an upside down triangle of dark pubic hair to match the nearly-black hair on her head.\n\nAlanna wolf whistled and Beth blushed more deeply, the flush spread down her neck and across the top of her chest as she put one hand over her revealed cooch.\n\n\"No, no,\" Ricki said, \"No covering up. And turn around once.\"\n\nBeth sighed and did so. She had a cute little butt, though it wasn't as nicely defined as Malena's, and a little heart and skull tattoo on the back of her thigh a few inches below her buttcheek. Stripping the shorts the rest of the way off her legs, Beth sat down with her legs together, obviously uncomfortable with being the first naked girl.\n\n\"Alright, this is a good round,\" Alanna grinned. \"Got to see some pussy, now I get to make a dare, can we do this every time?\"\n\nJosh sighed, \"Come on, what do I have to do?\"\n\nAlanna folded her hands together and rested her chin on them, elbows braced on her knees as she sat cross legged. She had a very self satisfied smirk running and I worried a bit on how the others were going to react when her streak finally ended. \"Hmmm,\" she said, \"Well, since Beth wanted such a close look at your dick before, I say you give her a real close look. I dare you to cockslap her in the face and then tea bag her.\"\n\n\"What? That's not fair!\" Beth said. \"I'm not the one getting the dare.\"\n\n\"Oh, you lost anyways,\" Malena laughed. \"Man up and take it.\"\n\nJosh sighed out a chuckle and stood, moving over in front of Beth, who closed her eyes tight and scrunched up her face. He got right up in her face and, rotating his hips, swung his hard dick out to the side and back in, smacking her right in the cheek and dragging the whole thing across her face. The head caught for just a moment below her nose, stuck trying to slip past her septum piercing, before it slipped away.\n\n\"Phwah, what the fuck!\" Beth yelled as she rubbed at her face, but the rest of us were dieing from laughter. Malena fell against my side, holding onto my shoulder as we both tried to catch our breath, and I could feel her breasts pressing into me.\n\n\"Still one more part to go,\" Alanna called.\n\nBeth closed her eyes again and made a dramatically disgusted face as Josh held his dick up and gently placed his balls on her forehead. \"Good?\" he asked over his shoulder to Alanna.\n\n\"Oh yeah, that's perfect. I wish I could take a picture.\"\n\nWe all started laughing again and Beth pushed Josh away, scrubbing at her face. \"I'm gonna get you back so good,\" she growled at him.\n\n\"What? Alanna made the bet.\"\n\n\"Yeah, but you're the one who put your hairy sack on my face.\"\n\nJosh shuffled the cards and dealt and I found myself looking at a natural flush. Fuck yes, I thought, starting to wonder what kind of dare I could give out. As the cards were flipped over my hopes were dashed, though it was still nice to win for a change.\n\n\"You know what,\" Ricki said, \"I don't even care that I lost because Alanna's reign of terror has finally ended.\"\n\nEveryone laughed and Alanna rolled her eyes, unbuttoning her blouse. \"Yeah, yeah. I'm still way ahead of all of you.\" She finished with the buttons and pulled the shirt apart, slipping it off and setting it aside. She was wearing a lacy red bra that held her large tits in place, though I knew from experience she didn't need any lift. Her cleavage was deep and I couldn't help staring at her even though I'd spent the last two weeks exploring her body. I was still mesmerized by the way her feather-light blonde body hair trailed over her golden skin, down into her cleavage from her chest and sparsely over her thick, powerful abdomen into the hint of a trail headed into the waistband of her daisy duke jean shorts. \n\n\"That can change quickly,\" Ricki said, making a sassy kissing face at Alanna before she reached back and undid her bra. She held the cups of her bra together, massaging her tits through the fabric and winking in Josh's direction before revealing them. She had wide areolas a little paler than her natural skin tone, her nipples like large pebbles in the center, and her breasts hung nicely. The only way I could think to describe her was very healthy, with a bit of extra padding at the hips and legs and tits but otherwise fit enough to play rugby with Alanna and Malena, who both took their fitness a lot more seriously.\n\nRicki played with her tits for a moment, lifting them up and presenting them before surprising us and lowering her head and lifting one to her mouth, licking her nipple. She laughed, \"Bet I'm the only girl here who can do that other than Alanna.\"\n\n\"Got me there,\" Malena said, cupping her own boobs, though I noticed the finger on her right hand brushing back and forth against her nipple lightly.\n\nOther than Alanna, who had only lost her shirt, the rest of us were either naked or mostly naked, Malena and Ricki left with just their panties. Shuffling, Josh glanced to his left and right at the two very different girls sat there; Beth with her pierced nipples and smaller boobs, and Ricki with her classically large tits. He had to restart his dealing when he lost track of who he had started with.\n\n\"Mother. Fucker,\" Ricki groaned, the only loser for the round.\n\n\"I guess you care a little bit this time, huh?\" Alanna grinned.\n\n\"Oh, you'll get yours,\" Ricki grinned right back. \"But for now I guess I'm getting nekkid.\"\n\nShe laid back onto her back and lifted her ass off the floor, hooking her panties over her large bum before setting it back down, the fabric bunched halfway down. She then pulled her legs back, giving us a lewd if still-covered view of her ass, crotch and the backs of her legs.\n\n\"Alright Josh,\" Ricki said. \"Go ahead and pull them off.\"\n\n\"Really?\" Josh asked, eyebrows raised in surprise.\n\n\"Yeah, you've taken enough punishment and I feel bad for laughing earlier.\"\n\n\"Wow,\" Josh said, walking over to her on his knees, and I could tell he stopped himself from rubbing his hands together like a little kid waiting to unwrap his present. He delicately hooked his fingers into the bundle of panties as he knelt beside Ricki, then turned to the rest of us. \"Ready?\"\n\n\"No,\" Beth said sarcastically, \"Keep us waiting some more.\"\n\n\"Here we go,\" Josh said under his breath, then slowly started peeling the panties up and off of Ricki. Her thick ass pushed out around the taut fabric and the first 'goodies' to be revealed was her dark little asshole, quickly joined by the thick, pouty lips of her pussy that seemed to hold on to the fabric of her panties for a moment. I'd understood the idea of calling a vagina a 'taco' before, but Ricki's pussy fit the description perfectly, multiple ruddy pink folds held within the puffy outer labia.\n\n\"Damn,\" Alanna said, \"That looks fucking tasty.\"\n\n\"Really?\" Ricki asked, \"I mean, I like it too but I dunno if I would call it tasty.\"\n\n\"Ricki, I think we need to go out and get drunk at a club some night and I'll show you what 'college experimentation' means,\" Alanna said, licking her lips.\n\nWe laughed and Ricki patted herself lightly, chuckling but obviously thoughtful of the idea, then sat back up cross legged. She remained fully on display and my eyes couldn't help being drawn down to her crotch, though soon I had another place to look as Beth matched her, finally getting frustrated with her uncomfortable sitting position and joining us in the 'fully exposed' group. Her lips were much smaller and her whole package looked a bit neater and more spartan than Ricki but still looked tantalizing.\n\nJosh got back to his own seat and grabbed the cards to deal again.\n\n\"Guess I'm joining the naked club,\" Malena sighed, tossing her hand without even flipping it over.\n\nMy eyes traced down her body briefly but we were all distracted as Ricki groaned long and loud. \"Come ooooon. Fucking nothing again.\"\n\n\"Wait, I actually get to give a dare for once?\" Josh asked as he realized he had the winning hand, making us laugh.\n\nMalena got up, putting her hand on my shoulder for balance as she did, and stood with her hips cocked to one side and her thumbs in the waistband of her white thong. \"Ready?\"\n\n\"I think you should do the bend-at-the-waist thing again, but this time stick your butt right in Austin's face,\" Alanna said. \"Y'know, because I call him Butthead.\"\n\nMalena made her cute crinkled nose face as she chuckled and her eyes dropped to me beside her. \"Done, but only if I can call him Butthead from now on too.\"\n\n\"It's a deal,\" Alanna laughed.\n\n\"Sure, everyone gets to call me Butthead now,\" I sighed dramatically.\n\n\"Are you really complaining right now?\" Malena asked over her shoulder as she stood in front of me, legs slightly apart and her luscious, tight ass about a foot from my face. \"I mean I could always do this to Josh instead and he can be my Butthead.\"\n\n\"I'm ok with this,\" said Josh.\n\n\"No, I think I'm good,\" I quickly replied.\n\nMalena gave me one more glance over her shoulder, an odd look in her eye, then faced forwards and bent at the waist, her beautiful ass pushing closer to me. \"So I've never exactly gotten undressed with someone this close to me before,\" she said, her thumbs tugging on her thong, moving it a few inches down her cheeks. \"I don't know if I should tease him for a while,\" - she pulled the thong back up - \"Or maybe if I should just get it over with,\" - it came halfway down now and she pulled it tight, her ass flesh pressing out above and below the elastic waistband.\n\n\"I think he's happy either way,\" Ricki joked.\n\n\"Oh, are you happy back there Austin?\" Malena asked.\n\n\"Just call me Butthead,\" I replied.\n\nShe laughed and her ass wiggled enticingly. At this point, if it had been Alanna and I in private, I would have grabbed her hips and pulled her back into my face, nuzzling and licking to get to the sweet center; as it was I kept my hands on my knees, white knuckled to stop myself from moving.\n\n\"You're being a good boy though, so maybe you can see some more,\" Malena said, lowering the thong until it was well below her ass. From the way she was standing and her outrageous fitness, Malena's pussy was clearly displayed before me between the triangular gap of her thighs. It was similar to Beth's in that they were both fairly spartan, with clean lines, though Malena's inner lips were a bit larger and her clit area was more prominent than the smaller girl's. The real difference though, was that Malena was clearly aroused. She had a glimmer of juices on on her lips and her inner lips were spread slightly as if asking me for the attention I was dieing to give them.\n\n\"So, Austin, how you doing?\" Alanna asked.\n\n\"Mmmgood,\" I replied.\n\n\"I'm glad, Butthead,\" Alanna said, and then Malena stumbled back into me as she got pushed off balance and her ass pressed right into my face. Warm flesh enveloped me for a moment and I instinctively reached out and caught Malena's thighs, holding her upright for a split second until she got her footing and pulled away.\n\n\"Damnit Alanna,\" Malena said, but she was laughing along with the others.\n\nI blinked and shook my head, trying to clear the smell of Malena from my nose before I came just from the idea of eating her out.\n\n\"Alright, alright, that's enough,\" Josh said. \"I know what Ricki's dare is gonna be, so Malena can sit her cute little behind down. Your choice if it's on the floor or on Austin's face.\"\n\n\"That's an option?\" she asked jokingly. \n\nI wouldn't mind at all, I thought in reply.\n\nJosh cleared his throat and turned to Ricki. \"I dare you to tell us your sexiest, real life story while teasing yourself, all with your eyes closed.\"\n\n\"My sexiest story?\" Ricki blushed.\n\n\"Oh, come on, I'm sure you have one,\" Alanna pushed.\n\n\"Well, I- Yeah,\" she said.\n\n\"Ok, go sit on the edge of the couch, close your eyes and start telling the story,\" Josh said.\n\n\"Fine.\" Ricki moved over to one of the couches we had pushed to the edge of the room and sat down, legs closed for a moment before she spread them. Her pussy was on full display, plump and inviting, while her tits rose and fell with her breathing. \"Like this?\"",
        "\"Exactly,\" said Josh.\n\nRicki closed her eyes and took a deep breath, her hands both tracing fingers over her inner thighs. \"Alright, so this happened last year right at the beginning of the year. Do you girls remember when we played those exhibition games up state?\"\n\nMalena and Alanna both hummed their agreement. \"Well, that second night after the games when we all went out to the bar with the men's and women's teams from the other school? I left early that night because I had been flirting with these two guys from the other team. About an hour after we got to the bar I was totally buzzed and wanted to fuck one of them, but then it turned out they were brothers. I didn't even care at that point and I asked them both if they wanted to come back and see the hotel since we were staying in those suites. Well they both said yes, and sort of glared at each other, but I told them it was fine and pulled them out of the bar.\"\n\n\"They got us a taxi and on the way I started making out with the older brother, but I got my hands down the younger one's pants and started giving him a handjob. Halfway through I switched, turning and making out with the younger one while I got my hand in the older one's pants.\"\n\n\"Whore,\" Malena giggled, and Ricki grinned as her fingers left her thighs and came up to her tits, caressing them lightly and brushing over her nipples.\n\n\"Yeah, maybe. But I was so turned on and they were both hot and panting and I kept them both hard until we were up in the hotel suite. Then I asked the older brother if he wanted to see my room, and we left the younger one in the sitting area. As soon as we were in the room I was half naked and got on the floor and unbuckled the older brother's jeans. He had a decent cock, I mean nothing to write home about, but he was raging hard already. I started going down on him and he moaned and moaned, holding my hair back and mumbling about my tits, so I took off my bra and he took one look and came all over them.\"\n\n\"He kept apologizing and saying he would be ready again soon, but I made him pull up his pants and leave the room. I went out with his jizz still on my chest and looked at the younger brother and gave him a 'come fuck me' look, and he jumped up from where he had been sitting.\"\n\nRicki's hands had drifted down from her tits now and were running up and down her pussy, pressing into her folds and spreading around the wetness she had started to develop there. I was physically stopping myself from jerking off as I witnessed her display, but I noticed Beth rolling one of her pierced nipples in between her thumb and forefinger, sort of glassy eyed. Malena was sitting in front of me, looking towards Ricki, and her hands kept clenching and unclenching in the picnic blanket.\n\n\"Once we were back in the room,\" Ricki continued, \"I told him his older brother couldn't last, and that he'd better do a good job. He took off his pants and I realized he definitely had the bigger dick, and as I started giving him a blowjob he grabbed some kleenex from the counter and wiped off my boobs, then started playing with them. That's when I got up on the bed on my hands and knees and said, 'If you've got a condom, you can fuck me as long as you want.' Well he scrambles in his wallet for a condom and can't find one, and tells me to hold on while he goes out to his brother in the other room, completely naked, and begs him for a condom. He finally comes back and says he's got one and starts putting it on while he's watching me play with myself. He gets behind me on the bed and is being all gentle and stuff, asking me if I'm ok every three seconds until I tell him he's not going to break me and I want him to fuck me. So he does - he starts pounding into me and I'm moaning out loud because I'm so horny and it feels great. \n\n\"That's when I look back and see his older brother leaning in the doorway, this sour expression on his face, and I just smile at the guy and shrug and start fucking back at the younger brother until he comes and collapses on my back. I roll him off me and sit on the edge of the bed, pretty much like I am now, staring down the older brother. He thinks this is an invitation so he takes a step towards me and I just hold up a hand and say, 'No, no, you fucked up. All you get is to eat me out.' And so he gets down on the floor in front of me and eats me out for like ten minutes until I came all over his face. A couple minutes later Malena texted me saying she was on her way back to the room, so I kicked the brothers out.\"\n\nRicki had started rubbing herself more firmly by the end of her story, pushing past her dare to tease herself, but stopped now and opened her eyes slowly. \"And that's my sexiest story.\"\n\n\"You are such a bitch,\" Alanna cackled. \"I love it.\"\n\n\"That's why the room smelled so fucking weird that night,\" Malena exclaimed.\n\nRicki laughed, \"Yeah.\"\n\n\"Wow,\" Josh said, \"I think I got my money's worth there.\"\n\n\"Ok, next hand,\" Beth said excitedly, and Ricki took her place back in the circle.\n\nMy cards were crap, and after discarding and drawing new ones they were even worse. \"I lose,\" I said when it was my turn to reveal my cards.\n\n\"Me too,\" Malena said, putting hers on top of mine.\n\n\"And I finally fucking win,\" Ricki grinned. \"Though fucking Alanna dodges the bullet again.\"\n\nAlanna just shrugged and smiled. \"Dare away, oh winner.\"\n\nRicki looked around the room for some inspiration and I wondered if maybe things were going to heat up another notch. With Malena and I both naked, we could do our dares together... or even to each other.\n\n\"I know what to do,\" Ricki grinned evilly. \"I dare both of you to do three laps around the house.\"\n\nMalena and I looked at each other, then out the window. It was still pouring rain so heavily you couldn't see much of anything, so while there was a risk we would be seen it wasn't really a danger. We did live in a cheaper neighbourhood though, without nice lawns or anything.\n\n\"Can we wear shoes?\" I asked.\n\n\"Yeah, that's fine,\" Ricki allowed.\n\n\"I'm in then,\" I said.\n\n\"Me too,\" Malena countered.\n\nWe both went to the front door and put on our cheapest running shoes, knowing they were going to get soaked, then Ricki stood beside the front door ready to open it for us.\n\n\"Alright, here's the deal. Three laps, and the loser has to do a second dare that the three of us will figure out while you're running. Got it?\"\n\nWe both nodded, then Ricki pulled open the door wide. Malena and I both bolted, skidding down the little porch and around the side of the house. I was in the lead but a few steps into the backyard I heard Malena call from behind me, \"Austin!\"\n\nI turned and she smacked into me, or at first I thought she did, but instead she pushed me up against the back of the house and I found myself kissing her in the rain, her body pressed against mine, soft and hard in all the right places. Her hand was on my dick, rubbing my head in her palm while her fingers stroked me. Her tits were pressed into my chest, nipples firm on my skin as we got thoroughly soaked with the rain beating down on us. Her lips tasted faintly of strawberries, but I was more enticed by the feel of her tongue as it played against mine, warm and strong. She broke the kiss and said into my ear over the rain, \"This game better keep going, I was hoping for a better dare with you.\"\n\nAnd then she was gone and it took me a moment to realize she was running again. I took off after her and managed to almost catch up with her as we were rounding the front door, scooting down the side run beside the house and breaking back out into the backyard. I reached out and grabbed Malena by the arm and spun her back into me, picking her small frame up by the waist and pushing her into the wall of the house right where she had pinned me moments ago, her strong legs already wrapped around my waist, pulling me close. We were kissing again and I could feel her now-soaked hair dripping water onto my body, her chest heaving against mine as my dick bounced against the firmness of her ass. We broke for a moment and her lips parted in a sexy pant, our foreheads together. I watched a drop of water build and then fall from the tip of her nose as we reveled in the feel of each other, her hands holding my shoulders and her ankles locked at the small of my back. She had drops of water on her skin and I took a moment to bend my head down and lick across her collarbone, drawing some of them up. I kissed her again with wet lips and she pulled my head to hers roughly with arms around my neck, her muscles moving underneath my hands as I held her by the waist.\n\nI pulled her off the wall and took three steps, still carrying her, over to the old picnic table and laid her down on top of it. Splayed out with her hair wet and wild, tits losing some of their forward shape but remaining perky and upright, stomach taut and rippling with every breath, Malena looked amazing. She gazed at me with a wild expression in her eyes and then I started running.\n\n\"Fuck,\" I heard her laugh, part frustrated, behind me.\n\nShe didn't catch me and I did the last circuit without another incident, reaching the front door a few seconds before her. She burst in after me and Alanna and Ricki stepped forward holding towels, wrapping us in them as we all started laughing. Alanna started toweling me down and I managed to whisper to her, \"She wants me.\"\n\n\"No shit,\" Alanna whispered back. \"And your welcome.\"\n\nI made sure to get my head close to hers before whispering, \"I love you.\"\n\nHer eyes softened and she smiled at me, then boisterous Alanna was back and she gave me a stinging slap to the ass. \"Alright, champ. Time for Malena to find out her punishment for losing.\"\n\nWe all went back into the living room, Malena giving me a look as we took our places, then Ricki gestured to a bag that was new to the room but not to me. It was Alanna's 'toybox.'\n\n\"So we discussed it and we decided if Austin had lost, he was going to have to give one of Alanna's dildos a blowjob,\" Ricki explained and the other girls laughed and I pretended to wipe sweat off my brow. \"But since Malena lost, she has to wear this until the end of the game.\" She held up a long furry tail attached to a small plastic device.\n\nI knew what it was. Alanna and I hadn't used it yet, but I know I had been looking forward to when we did. I'm no furry or anything, but I thought it was sort of weirdly hot.\n\n\"So, this part's a fox tail, obviously,\" Alanna said, gesturing down the orange furred tail portion to the white tuft at the end. \"And this part is a buttplug to keep it attached.\n\n\"Uh, what now?\" Malena said, one hand going back to her tush protectively.\n\n\"It's really small, like the smallest one there is,\" Alanna assured her.\n\n\"I've never had anything up my butt before though,\" Malena said.\n\n\"And I've never been tea bagged,\" Beth snorted. \"Are you in or are you out?\"\n\nMalena was obviously startled by the prospect of having a buttplug inside her, but she also didn't want to be out of the game. Her hesitation to answer drew out and Ricki wiggled the tail at her.\n\n\"I think it will look really cute,\" I offered.\n\nShe looked to me, then back to the tail and bit her lip. \"Alright, what do I need to do?\"\n\n\"Here,\" Alanna said, reaching out and taking the tail from Ricki. She dug into her toy-bag and pulled out a bottle of lube, smearing a dollop onto the purple plastic nodule at the base of the tail. As she spread the lube over the plastic she said, \"Look, this tapered point goes in first, and then you push past this wider bit and you're done, this little part is the only thing that stays sticking out. The flat piece on the end keeps it in place, and there you go, you've got a sexy little fox tail.\"\n\nMalena sighed and nodded, \"Alright, I'll try it. Is it going to hurt?\"\n\n\"Something this small? Maybe like a tiny bit when you first push it in, and after it'll feel weird for a bit, but you've gotten plenty worse on the rugby pitch.\" It was true, at least the part about the rugby pitch. Alanna still had a slightly green bruise on her thigh from where she had been kicked during their last game, and Ricki had a couple of scars on her left leg where she had caught the bottom of a girl's cleats fairly deep in the past. I hadn't noticed any old battle wounds on Malena, but I was sure she had them.\n\n\"How should I... y'know... put it in?\"\n\n\"Honestly? You can bend over and I can just put it in, or you could sit on the couch, get your legs up behind your ears and put it in yourself.\"\n\n\"I'll do it myself,\" Malena said, holding out her hand for the tail.\n\n\"Your choice,\" Alanna shrugged.\n\nMalena sat on the couch and took a few calming breaths, then looked around the room. \"No one ever tells a word of this to anyone ever, right?\"\n\nWe all agreed and Beth laughed, \"Fuck, I'd have to admit to letting Josh put his balls on my forehead. No one ever finds out about this.\"\n\n\"Alright,\" Malena said. \"Here goes.\" She slouched down on the couch and pulled back her legs, spreading herself completely in front of us until her legs were hooked behind her elbows and her feet were near her head. She was practically folded in half, her pussy and ass completely open to us. There were a million things I wanted to do just then, but instead I watched quietly as she put the tip of the small butplug up against her tightly wound asshole. She hissed in a breath, \"It's cold.\"\n\n\"I could get the 'tingling sensations' lube if you really want,\" Alanna joked.\n\nMalena bit her lip and ran the tip of the buttplug around her hole, spreading herself open a little bit and pressing it further in. Her tits, pushed together by the position of her arms and legs, wobbled and I noticed her nipples were super hard and standing at attention.\n\n\"Just push it in, you don't have that much more to go,\" Alanna cooed softly, encouraging her.\n\nMalena did, pushing on the buttplug more firmly. She gulped in a breath of air and her eyes widened when she got to the widest part, but then her hole closed around the plastic and the flat part nestled right up to her skin. She lowered her legs and took a few deep breaths, the tail sticking out from below her.\n\n\"How's it feel?\" asked Ricki.\n\n\"Weird. It didn't really hurt going in so much as I was worried it was going to. I dunno, it's... different. We'll see if I like it I guess.\" She stood up slowly and turned around, brushing out the tail behind her. It stood out from her firm little ass beautifully, the cheeks pressing around it and keeping it slightly erect as opposed to lying flat down her butt.\n\n\"Sexy as hell,\" I said, and Alanna agreed.\n\n\"Boobs, ass, tail. How's a girl supposed to compete?\" Beth joked, making Alanna and Ricki snicker.\n\nWe sat back down in our circle, Malena making a surprised, 'oh!' as she readjusted herself. \"Gotta be careful how I sit with this thing.\" She sat back down carefully, looking expectantly to our faithful dealer. The tail snaked out from her ass behind her and I wished I could have a picture of just that, it was so tantalizing.\n\nCards. I had a pair of sixes with a king high, so I discarded my other two and ended up with a pair of kings, putting me at two pair.\n\nAs we revealed I realized no one was groaning - there were no dud hands.\n\n\"Well, Josh, Beth and Ricki lose,\" I said.\n\n\"What? No, I've got a pair,\" Josh said.\n\n\"Same,\" Ricki and Beth both exclaimed.\n\n\"Yeah, but Malena, Alanna and I all have better than that, so you guys lose.\"\n\n\"Fuck,\" Josh said.\n\n\"Fine,\" Beth grunted, and Ricki just shrugged.\n\n\"Well, as the winner I'll give the first dare, and Austin and Malena can figure out the other two,\" Alanna said. Still clad in her bra and daisy duke jean shorts, she was the only one of us with a stitch of clothing. \"Beth, I dare you to let each of us find out what it's like to play with pierced boobies for thirty seconds.\"\n\n\"Alright,\" she said with a sarcastic grin, \"Who's first?\"\n\n\"Me, of course,\" Alanna grinned, patting her lap. \"Come here, Piercings.\"\n\nAlanna had Beth straddle her waist as she sat with her legs in front of her, pulling the smaller girl in tight by the butt so that they were chest to chest. \"Ok, someone time this,\" Alanna said, then immediately her hands were squeezing Beth's smaller tits. Fingers explored, then Alanna bent her head down and took one of the other girl's nipples into her mouth and Beth moaned in surprise. Alanna had just started on the other tit when Ricki called time.\n\nBeth stood and hesitated for a moment, getting her balance, then moved over to me. \"Uh,\" she said, \"Do you want your dick in front or behind me?\"\n\n\"Your choice?\" I said, and she sat down on my legs, sliding up until my dick was trapped between our bodies. This had the added effect of her pussy pressing against the base, warm and slightly slick. \"Ready?\" I asked her.\n\nShe nodded, so I immediately bent and took the nipple Alanna hadn't had a chance to work over in my mouth. The piercing could shift a little bit and I tongued at it along with the nipple itself, prodding the little barbell to twist lightly. \"Mmm, fuck,\" she groaned, my other hand playing with the boob I wasn't sucking on. I let go of her with my mouth and caught her now free breast with my other hand, tilting my head up and kissing her lightly on the lips. Beth was grinding her crotch lightly against mine and started kissing me back, her tongue stud cold and odd in my mouth.\n\n\"Time,\" called Ricki.\n\nI let go of Beth and she stood up. I looked to Alanna first, who had a smoldering hunger in her eyes. Clearly she was ok with what just happened. Then I looked to Malena - I had gone pretty far there and might have just ruined what we had started earlier, but she wasn't even looking at me. She had assumed the position with her legs out and was looking up at Beth as the other girl sat down, inching up Malena's naked legs until they were almost nose to nose.\n\n\"Hey,\" Beth said.\n\n\"Hey,\" Malena responded, scrunching up her nose as she smiled. Tentatively, Malena brought up her hands and felt at Beth's nipples, pinching and twisting lightly, exploring what the piercings were like. After a few moments she dipped her head and licked one of them, eyes trained on Beth's face.\n\n\"Mmm,\" Beth hummed pleasantly.\n\nMalena continued licking lightly, playing her tongue over the piercings until her time was up. Ricki's time went fairly similarly, the girls willing to play along and experiment, getting turned on by the physical contact but not as into it as Alanna or I had been.\n\nWhile Beth was straddling Ricki, Malena leaned back and sighed. She was bracing herself with her hands behind her on the floor and her legs splayed out in front of her and I couldn't help running my eyes down her body from her collarbone to her toes. When my eyes came back up she was looking at me with a small smile but didn't say anything.\n\nBeth, finished with Ricki, stood up and looked to Josh, who quickly reorganized himself so that she could sit in his lap. She slowly lowered herself down and squeezed in close, taking the same approach she had with me so that his dick was caught between the two of them. As Josh started feeling up her tits I noticed Beth's hips rotating slowly, her ass clenching slightly as she rubbed herself against his hard shaft. She bent her head and kissed him tentatively and he responded,\n\nI had always wondered if Josh and Beth had hooked up before, maybe as a first-year fling or something. It wasn't that they acted weird around each other or anything - I would have noticed at some point in the two and a half years we had been making music together - but they were together a lot and seemed completely comfortable. Maybe not Alanna and I levels of friendly comfort, but still the question had been there.\n\nWatching them now, I'm fairly certain they hadn't hooked up before but the thoughts had been there. Josh was being a little bit tender with his touches and Beth was clearly hoping for more, but as time ran out they separated slightly and lingered for a longer moment before Beth dismounted and slipped into her spot next to Josh.",
        "\"Phew,\" she said, face and chest flushed. \"That was- wow.\" She was sitting on her butt, her legs both bent in front of her, leaving her flushed pink vagina on display and clearly more than just simply aroused. \n\nJosh had a silly grin on his face, which dropped slightly when Malena said, \"I think I know what Ricki and Josh should do.\" She turned to me as if asking permission to give both the dares, since Alanna had passed them to us. I shrugged and she winked at me. \"I think Josh should lie down on the floor and Ricki needs to take a moustache ride.\"\n\n\"You mean I have to sit on his face?\"\n\n\"Mhmm,\" Malena said, \"For two minutes.\"\n\nRicki shrugged and put a hand to her pussy, \"Hey, I'm fine with getting eaten out.\"\n\nJosh licked his lips and wiggled his eyebrows at Ricki goofily, then got down on the floor on his back. \"Hop on.\"\n\nRicki shuffled forward on her knees until she was straddling his head, then looked down at him. His eyes were trained on her pussy, but he looked up past her tits to nod his readiness. Ricki slowly eased her backside down until Josh's head nearly disappeared below her, her ass popped up slightly as she arched her back with the first sign of pleasure.\n\n\"Oooh, fuck. He's already licking me,\" she moaned, then shuddered and giggled under her breath. \"His moustache is tickling me though. It's not rough like I thought it would be, thank god. Mmm, he's got his tongue up inside me now.\" Josh's hands were up and awkwardly holding her thighs, brushing back and forth on her skin, and she placed her hands on his hairy chest as she shuddered again. \"Mmm, fuck Josh, you aren't too bad at this. Oh, he's kissing my lips down there now like he's french kissing me and his chin is rubbing all over my- fuck. Fuck. Mmm, fuck.\"\n\nRicki was clearly enjoying herself, slowly lowering her body over top of his as Josh continued working, hands sliding down his chest and abdomen to his legs on either side of his dick, which was standing up like a flagpole.\n\n\"Fuuugh,\" Ricki groaned, eyes closed and clearly getting into her dare. \"Uuungh, just like- yeah, do that again and again. Mmm, I could-\"\n\n\"Time,\" Malena called in a sing-song voice.\n\n\"What?\" Ricki groaned, unmoving.\n\n\"Time. Get off of him,\" Malena said sternly, and Ricki did with a heavy groan. Once she was off of Josh we found him grinning widely, his lower face covered in wetness from Ricki and his own spit.\n\n\"Get up and deal, Josh,\" Alanna said, and he did.\n\nI wasn't sure if I wanted to win at this point. The physical heat in the room felt like it had picked up and we all had a light sheen about us, the sexual energy heavy along with the smell of excitement. As I revealed my pair of queens it became apparent I wasn't a loser though.\n\nMalena, Josh and Beth didn't groan as they lost, instead looking to Ricki who had a grin on her face as the winner. \"Alright,\" she said, \"I think at least some people need a chance at release here. The three of you all go sit on the couch, Josh in the middle, and you're going to jerk each other off for three minutes. We'll see if any of you have a hair trigger.\"\n\nThe three of them lined up on the couch with Josh in the middle. After a bit of figuring, Josh ended up with a hand in either girl's lap and each of them had an arm over top of his, both ready to get to work on him. Malena's tail was curled out and to the side, sticking out around her hip.\n\n\"Ready?\" Ricki asked, \"Go, three minutes.\"\n\nBoth girls took ahold of Josh's dick and started fumbling, trying to find a rhythm to their madness. Josh, splitting his attention between the two, slid both of his hands lower and started by petting at them, fingers exploring between their spread legs. Watching from where I sat I felt a tinge of jealousy as Malena moaned and shifted a little lower in her seat as Josh did something correct in his ministrations. I didn't have a right to feel that, not really at least and especially not after I kissed Beth during her dare.\n\nI felt Alanna brush my arm and turned to her. She was giving me a concerned look, one that spoke volumes to me. Are you ok with this?\n\nWas I? This was... well, it was insane. Strip poker while we were all a little tipsy was crazy enough, but these dares were starting to get wild. Two weeks ago I had been a virgin, and while Alanna and I had done our best to make up for the years we should have been together, she was still my one and only. \n\nAs the three on the couch started moaning a bit more, I checked and they all had their eyes closed as Ricki raptly watched them from her position across the blanket, I closed the distance between Alanna and I and whispered to her. \"I don't know. Are you?\"\n\n\"I think so,\" she whispered back, looking at the lewd mutual masturbation scene before us and licking her lips lightly. \"The way the others are looking at you and Josh is pretty hot, and I'm ok with whatever is going on between you and Malena. She looks fucking sexy.\"\n\n\"I know, right?\" I said quietly. \"I just don't know if I like...\"\n\n\"Sharing,\" she finished my sentence for me.\n\n\"Yeah.\"\n\n\"I'm sharing you,\" she pointed out, though without any sort of negativity.\n\n\"I know, and that's why I'm ok with this,\" I whispered.\n\nShe kissed me on the cheek and moved back a bit. \"Time,\" she called.\n\n\"What!? Noo,\" Beth yelled, trying to force Josh's hand to stay where it was.\n\n\"Augh,\" Josh groaned, looking down at his dick. He was clearly close to finishing, the head glistening with precum the girls had been rubbing into his skin.\n\nMalena just sort of oozed off the couch, moving over to her place in the circle on her hands and knees, tail waving behind her. She sat down and took a long, slow breath, then opened her eyes as the tip of her tongue played along her bottom lip lightly. \"Deal the cards,\" she said breathily.\n\nJosh picked them up on his way to his seat, Beth muttering in frustration as she completed the circle.\n\nWhen I saw my hand, with nothing good, I made the decision that I was ok with losing this round. I had been hard for almost an hour now, the sights and sounds of our game teasing me to the limit. No discards or redraws, I happily revealed my cards as a losing hand, hoping Malena would as well.\n\nShe had two pairs, just barely beaten out by Alanna's three of a kind. \"This is getting ridiculous,\" Josh said, revealing his single pair. \"I don't know how she's doing it but I swear Alanna has to be cheating.\"\n\nI laughed and shook my head, but Alanna piped up, \"I'll make you a deal, next time I lose I'll take off everything.\"\n\n\"Done,\" said Josh.\n\nNo one was thinking about the game coming to an end.\n\n\"For now though, I think Austin, Ricki and Beth have a dare to complete. Hmmm, what to do,\" Alanna mused, tapping a finger on her chin. She turned her eyes to me and I caught a teasing glance before she made a face like she had come up with an idea. \"I know. I think Austin's been left out too much, so Beth and Ricki are going to both give him a blowjob. You can play with yourselves while you do it.\"\n\nIf I hadn't been hard already, I would have been in moments. As it was, I felt my hardon go from 'like a rock' to 'hard as steel.' Ricki and Beth were both grinning, Beth already rubbing at her crotch, a finger clearly dipping between her inner labia. \"Come on stud,\" Ricki said, motioning me over, \"Stand right here.\"\n\nI followed her directions and soon I was standing with Ricki and Beth kneeling in front of me, my dick between them as they turned their eyes up to my face. Beth's were a greenish blue while Ricki's were a darker brown, both wide as they got ready to suck me off. Just the thought of that got me light headed.\n\n\"Well, whenever you're ready,\" Alanna laughed.\n\n\"Fuck, I was ready like four hands ago,\" Ricki laughed, then leaned forward and took the head of my dick in her mouth, her tongue quickly pressing and rubbing against the underside as my knees buckled momentarily. She had wonderfully full lips which sealed around me as her eyes didn't break from mine.\n\nShe pulled back and released my dick with a pop, then repeated the movement all over again. She started sucking me a bit deeper into her mouth and her eyes dropped to where she was working, Beth sitting on her knees next to Ricki staring intently at the other girl's lips working around my shaft while she openly fingered her pussy. \"Fuuuck,\" I groaned, and Ricki released me again, bringing up a hand and stroking her spit down my shaft before pointing it towards Beth.\n\nThe smaller girl licked the side of my shaft with just the very tip of her tongue, running up to the head before turning her eyes upwards. Our eyes locked for a long moment and I wondered at how exotic she looked despite the fact that she was a white kid from a suburb town. Her dark hair cut short, the piercings in her nose and eyebrow, she looked like some foreign punk princess instead of a girl who probably went to ballet lessons when she was six and played the flute in her high school band.\n\nBeth swallowed me down and I shuddered, the feeling of her tongue stud a completely new experience for me; the cool, smooth nub of metal teasing down my shaft and rubbing over the ridges of the head. She hummed her appreciation as one of my hands reached out and brushed her face before my fingers ran through her short hair.\n\n\"How long?\" Ricki asked, turning back to Alanna briefly, her hand still around the base of my cock.\n\n\"Until he goes off,\" Alanna grinned. \"The way he's constantly jerking off in his room, I assume he'll be ready for more pretty quickly.\"\n\n\"What?\" I said, \"You can hear me?\"\n\n\"You thought I couldn't?\" Alanna asked with a chuckle.\n\nBeth released my dick, \"Fuck, Austin. I can hear you sometimes and you live on a different floor than me.\"\n\nI was blushing, but considering the act she was performing on me, and that they had never brought it up before, I wasn't about to push the issue. Beth started kissing along the side of my shaft while Ricki took back possession of my head, swirling her tongue around it with an open mouth.\n\n\"Unngh,\" I groaned, my balls boiling. \"I don't know how much longer I'm going to last.\"\n\n\"You better last long enough for me to get off,\" Beth groaned. Both of her hands were working in her crotch now and there was a slight squishing sound. She lowered her face and licked at my balls while Ricki helped make room by shuffling a bit closer to me, tilting my dick up to her face. Her large breasts were pressed into my leg now and I could feel her arm brushing lower as she fingered herself as well.\n\n\"How long?\" I moaned.\n\n\"Not. Long,\" Beth panted, her hot breath caressing my crotch and Ricki started swallowing me deeper, working her mouth quickly as she jerked my base with her hand.\n\nI glanced to my side and saw Alanna grinning at me, one hand trailing a finger over her bare stomach. Malena, still in her spot, was pressing her lips together as if she were trying to keep something in, her legs firmly together and rubbing back and forth as she watched Ricki and Beth.\n\n\"Fuck,\" Beth whispered, and then louder, \"Fuck.\" She sat back from me on the balls of her feet, one hand behind her keeping her balance while the other one thrust two fingers into her cunt, legs spread wide and her small tits bouncing rapidly with her efforts. She was completely on display and if I had had the presence of mind I could have counted the small freckles on her body. As it was, my eyes roved over her jiggling tits and the fingers she had slamming into herself, but landed on her face as the tension in her body built - her mouth was open in a feral grin that almost looked like she was in pain, eyes screwed shut as she concentrated her entire being on the building orgasm.\n\nRicki took me nearly to the base, gagging slightly on my dick as she sucked me like a vacuum, before releasing me completely and pointing my dick at Beth. She started jerking me firmly, her hand flying with the lubrication of her spit. \"Come all over her,\" Ricki said.\n\nMy body seized up as I started coming - I would have been shouting to the rafters if it weren't for the fact that my lungs and throat were constricted from the effort. Don't get me wrong, I really like fucking Alanna, but there was something so different about Ricki jerking me off - not to mention the view of Beth - that it was definitely something extra.\n\n\"Hnnngha-\" Beth moaned, her body rocking back and forth as she started her own orgasm while Ricki jerked my load out, my cum splattering across Beth's tits, abdomen and the hand she had furiously working at her pussy. She collapsed back onto her ass, breathing deeply, as Ricki stopped jerking me and slow stroked me a couple of times, then brought me back to her mouth and suckled on my head for a long moment, milking the last of my cum from the source.\n\n\"Ho, fuck,\" I groaned, and Ricki grinned proudly as she released my dick.\n\nBeth was moving, using my leg to pull herself back into a sitting position. \"Fuck, I needed that,\" she chuckled breathily.\n\n\"I still need it,\" Ricki half groaned as she sat back as well.\n\n\"Guess I, ah, better start shuffling then,\" Josh said. I staggered over to my spot next to Alanna and Malena, Ricki and Beth returning to their respective seats as well. Alanna flashed me a smirk and wiggled her eyebrows at me, while Malena gave me an odd look and openly glanced down to my dick which was now at half-chub.\n\nThe hand went quick and I somehow managed to cobble together a pair, leaving me in the middle of the road with Ricki the winner of the hand. Beth just sort of wheezed a chuckle as she turned over her dud of a hand, Malena looking a little more excited that she was going to get a dare this time.\n\n\"Hmm,\" Ricki pondered, \"What to do, what to do.\"\n\n\"Want to pull something from the toybag?\" Alanna asked helpfully.\n\n\"No, I know what they have to do,\" Ricki smirked with a naughty glint in her eyes. \"Beth, you need to lie down on the floor and Malena has to lick all of Austin's cum off of you.\"\n\n\"What?\" Malena balked.\n\nAlanna started laughing, slapping her thigh, \"That's fantastic.\"\n\n\"Do I really have to lick it off her?\" Malena complained.\n\n\"Yup, no hands allowed,\" Ricki grinned.\n\nMalena rolled her eyes, but got onto her hands and knees and crawled to where Beth was already laying herself out in the center of the circle, giggling lightly. From my position I couldn't see a whole lot of Malena's face as she licked my cum from Beth's body, though at one point she lifted her head and looked back at me to say, \"It's really not that bad, though a little cold now.\" I was much more interested in the view I had of her ass pointed back at me, the fox tail jutting out and up and resting on her lower back. She had her legs together but with her back arched as she bent to lick Beth her pussy was pressed out like a delicious, fleshy clam, lips glistening slightly with arousal. As she shifted her weight with her movement the tail would slip one way or the other almost as if she were wagging it sinuously. \n\n\"Mmm,\" Alanna moaned lightly and I nodded in response.\n\nHer dare completed, Malena returned to her seat as Beth rolled over, crawling over to her spot. Her nipples were hard and points on her body were glistening where Malena had been licking; she bit her lip and ran a hand through her short hair, eyes intent and obviously ready to progress with the game.\n\nJosh dealt and I had two pair after discards.\n\n\"Well fuck,\" Alanna laughed. Everyone turned over their cards, and Alanna and Malena were the losers. \"Guess I gotta hold to that deal.\"\n\nAlanna stood up and reached behind her, undoing her bra. \"You all ready to see the goods?\" she asked jokingly.\n\n\"Been waiting all afternoon,\" Josh laughed.\n\n\"I think Austin's been waiting his entire life,\" Rikki said with an eyeroll.\n\n\"Oh, come on,\" I said.\n\n\"Whatever, meet the ladies,\" Alanna said, peeling her red bra away from her chest and showing off her large, perky breasts. They were big, round and firm, her nipples a dull pink and pointing out proudly. On anyone else I would have guessed she had had a boob job they were so perky and globular, but I'd known her my entire life and had watched those puppies grow. Her light body hair trailed down her chest and diminished on her tits, her slightly tanned skin puckered with goosebumps. Alanna quickly undid her jean shorts, pushing them down and then spinning in place to show off her matching red lacy thong, full ass beautifully framed.\n\n\"Oh yeah, and you were all saying I have nice assets,\" Malena joked. \"Then there's Alanna with her fucking gravity-defying tits and ass for days.\"\n\nAlanna laughed and tugged on her waistband. \"Should I stop?\"\n\n\"No,\" Josh and I both said at the same time, setting the girls to laughing.\n\nAlanna turned around and bent at the waist as she had instructed Malena to do earlier, showing off her thick, athletic ass. She slowly slid the thong down, letting it drop to her ankles, and then flexed each cheek a couple of times. For the last six or seven years Alanna had been dealing with her body issues - the fact that she had a naturally thicker frame than girls like Malena - by working out and training for rugby. That had been after we had a scare in high school when she nearly developed an eating disorder before I performed a one-man intervention for my best friend. Now, those years of training had left her with a fantastic ass, sexy thighs and a toned tummy.\n\n\"Guuurl,\" Ricki said, \"Dat aaaass.\"\n\nAlanna laughed, then looked over her shoulder with a dirty expression and reached back, spreading her cheeks and giving us a clear look at her crinkled asshole and flushed pink pussy. I was now intimately aware with both of those sweet spots, having dedicated several hours over the last weeks with her learning every nook and cranny of them, but that didn't stop me from hanging my mouth open and breathing deeply.\n\nLetting go of her cheeks, Alanna turned around and cupped her tits, tweaking both of her nipples lightly. \"That enough of a show?\"\n\n\"No,\" Josh said.\n\n\"Too bad, Malena has a dare to do,\" she responded with a grin.\n\n\"I think I know exactly what Malena has to do,\" Ricki said, taking charge as the winner of the hand again. \"I think you should welcome Alanna to the game properly and go find out what she tastes like.\"\n\n\"Mmm,\" Alanna grinned, spreading her legs and crooking a finger at Malena before joking in a fake hillbilly accent, \"You got a purdy mouth.\"\n\nMalena laughed with the rest of us but hesitated for a moment before shrugging and crawling over to Alanna, ending up between the blonde's legs as Alanna leaned back on her elbows. I felt myself reaching max hardness potential again as I watched Malena look up Alanna's body to her face, their eyes meeting before Malena slowly moved forward and planted a small kiss on the pussy in front of her.\n\nShe looked down at her subject, her hands coming forward and delicately prodding at Alanna's thick outer labia before spreading her open and dipping her head back down, tongue out and seeking until it found skin, sliding up Alanna's pussy and causing her to shudder with pleasure. Malena repeated the action, then dipped her head lower and closer, tonguing Alanna more broadly in long, slow strokes.\n\n\"Mmm yeah,\" Alanna moaned lightly. \"Is this your first time?\"\n\n\"Mmhmm,\" Malena hummed.\n\n\"Just think of what you like someone to do to you,\" Alanna sighed.\n\nMalena's face, which had been more serious as she tried eating pussy for the first time, broke into a small, shy smile and she turned her head, kissing Alanna's muscled thigh lightly, then the other side. She lowered down to her task again, her mouth opening as she tried driving her tongue deeper in Alanna, lapping at her while she looked up to her face. Her eyes shifted over to me for a split second, watching from beside Alanna, and she blushed but didn't stop her tongue actions. She finally withdrew, planting another light kiss on Alanna's pussy as the other girl groaned her disappointment at being left wanting.",
        "\"Well,\" Ricki asked, \"How'd she taste?\"\n\n\"Sort of sweet and salty. Not bad but not like, 'oh my god I need more of that,'\" Malena shrugged, wiping her lower face with her forearm.\n\n\"Well that's a pretty mediocre grade,\" Alanna smirked sarcastically, sitting back up.\n\n\"Well what can I say, it pretty much tasted like I do,\" Malena shrugged.\n\n\"You've tasted yourself?\" Josh perked up.\n\nMalena blushed again, \"Well yeah, if I lick my fingers while I'm masturbating or something.\"\n\n\"Josh,\" I said, \"We can talk about this, or you can deal the cards.\"\n\nHe dealt.\n\n\"There goes my winning streak,\" Ricki laughed.\n\n\"And it looks like I'm starting on a losing one,\" Alanna sighed half-heartedly.\n\n\"Alright, what are we doing Austin?\" Ricki asked, turning to me and my winning hand of a straight.\n\n\"I dunno,\" I hummed and hawed, \"I mean, I'm not going to just copy your dare from last round, and I'm pretty sure you're both feeling extra frisky by now... hmm...\" I reached over to Alanna's toybag and pretended to browse through it even though I knew exactly what I was looking for. \"Aha,\" I said, \"I know what you two are doing.\"\n\nI pulled out a long, purple double-headed dildo from the bag.\n\n\"Oooh, fun,\" Alanna grinned.\n\n\"For real?\" Ricki asked, \"That thing, y'know, works how I think it does right?\"\n\n\"If you think one end goes in me and one end goes in you, then yes,\" Alanna said, taking it from me and walking on her knees over to Ricki.\n\n\"Um, fuck it. Let's do this,\" the brunette girl said. \"How do we-?\"\n\n\"Well, we can do it the amateur way and go butt-to-butt, or we can do it the good way and both fuck our brains out.\"\n\n\"The second one?\" Ricki said, and Alanna grinned.\n\nShe had Ricki move to the center of the group, mostly so we could all 'watch and learn.' Ricki was lying on her back, partially on her side with her one leg held up near Alanna's shoulder as Alanna straddled the other. \"First thing's first, gotta lube this baby up and bit,\" Alanna said, then spit on the end of the purple dildo before palming the head and spreading it around. She did the same to the other end, then put it up against Ricki's pussy, spreading the other girl's thick lips as she maneuvered the purple dildo back and forth.\n\n\"You ready to get your world rocked?\" Alanna asked her.\n\nRicki smiled and raised an eyebrow. \"We'll see if you can compete with the real thing,\" she challenged.\n\nAlanna pushed the dildo into Ricki, who sucked in a breath and closed her eyes as she was penetrated. Alanna was quick to pull it out most of the way before pushing deeper, using one hand to lightly rub a thumb over Ricki's clit. After a few more in-and-outs the dildo was over a third of the way in and Alanna stopped moving it.\n\n\"Alright, now for the tricky part,\" she said, \"I need you to hold it in.\"\n\n\"I'll do it,\" Beth surprised everyone, reaching across Ricki and grabbing the dildo where it was spreading Ricki open.\n\n\"Ok, now I just-\" Alanna grunted under her breath, raising up as high as she could on her knees and bringing the free end to her crotch. She had to crane her neck to look past her own tits so she could see what she was doing, but very quickly she had the dildo lodged in her and was slowly feeding it in and out, sliding down it's length. \"Mmkay,\" she groaned pleasurably, \"You ready for more?\"\n\n\"More?\" Ricki asked.\n\n\"It's a 14\" dildo, so seven for each of us,\" Alanna said, shifting her body and pushing another couple of inches past Beth's fingers, who pulled away, and into Ricki before taking more herself.\n\n\"Oh, fuck that's deep,\" Ricki moaned, one hand stopping Alanna's movements by putting a palm to her abdomen. The other one was holding onto one of her own tits tightly.\n\n\"Almost there,\" Alanna assured her. \"One more little push and-\" She did it and the dildo disappeared completely between the two, their pussies pushed right together, labia to labia. Malena and I moved around so we could see better, the view of Alanna's vagina mashing against Ricki's fat lips etching into my brain.\n\n\"Now what?\" Ricki half-panted.\n\n\"Now I rock your world,\" Alanna smirked. She rotated her hips, grinding their pussies together but also shifting the dildo inside them, and she gave a girlish grunt. Her hands were holding onto Ricki's leg, keeping it tight to her chest, and it looked like she was using it for leverage as she rotated her hips again and again in the grinding, thrusting motion.\n\n\"Humma- wow, ok, wow,\" Ricki groaned, her eyes fluttering as she got fucked. After a moment she got into Alanna's rhythm, thrusting her hips off the ground and back at the blonde riding her. Ricki used her arms to brace herself on the floor, leaving her big tits to bounce enticingly as the two girls humped at each other.\n\n\"Boobs,\" Josh said under his breath, \"Boobs everywhere.\" Malena and I broke out in nervous, horny giggles as we watched the scene before us.\n\n\"Huungggh,\" Ricki was moaning, eyes closed and head back, and Alanna picked up her pace. Ricki's toes were spread wide and Alanna pulled the foot that was dangling in the air to her lips and sucked on the big toe before biting it lightly. \"Umagah- Umagah- Oh my gooood,\" Ricki groaned, her movements stopping as she tensed up, an orgasm rippling through her.\n\nAlanna didn't stop her grinding until Ricki's muscles went loose and she lay back on the floor, chest heaving as she tried to catch her breath. The two rugby players were still for a long moment until Alanna started moving away, slowly disengaging from the dildo and then easing it out of Ricki. She tossed the purple toy aside and swept her long blonde hair away from her face before bending down and taking one long, broad-tongued taste of Ricki.\n\n\"Mmm,\" Alanna grinned. \"Not bad at all.\"\n\nRicki shuddered at the stimulation and snorted a light laugh, \"High praise from the Queen of Vaginas.\"\n\n\"Alright, enough languishing,\" Alanna said, slapping Ricki's thigh lightly. \"Let's play another hand.\"\n\nWe all got back to our spots and Josh dealt the cards.\n\nAfter watching the last dare I was raring to go, but with a natural flush in hand I felt like it would be cheating for me to discard it away. I kept it, expecting to win and wondering who I was going to get to dare, but was quickly shot down when Malena turned over her own cards with a huge smile. \"Royal flush,\" she crowed, sticking out her tongue at me teasingly.\n\n\"What do we have to do?\" Josh asked, obviously excited to have lost along with Beth.\n\n\"I think there's been a bit too much girl-on-girl fun going on, so Beth is going to get on the floor and Josh, you're going to put your dick in her.\" The look on Josh's face was like he'd just won the lottery. \"But you only get ten strokes,\" Malena finished with a wicked smirk.\n\n\"What? That's not enough...\" Beth complained.\n\n\"Enough for what?\" Alanna asked, voice full of false innocence.\n\n\"Stuff,\" muttered Beth.\n\nJosh looked torn now, \"Is that really all?\"\n\n\"Yeup,\" Malena grinned. \"Here's hoping you aren't a ten-pump chump.\"\n\nBeth started moving to the center of the circle but Ricki got up, holding out a hand. \"Hold on one sec,\" she said. \"Penis plus vagina equals condom.\"\n\nShe darted into her room, which happened to lead off from the main hallway outside the living room, and came back quickly with a box of condoms.\n\n\"Now why do you need a whole box of those?\" Malena laughed.\n\nRicki blushed and tossed one of the silver wrapped packets to Josh. \"You never know, and I stole them from my RA last year.\" Ricki and Malena were both second years, while the rest of us were third, and so had been forced to live in the dormitories the year before.\n\nJosh was quick to tear open the condom wrapper and cover himself. Beth had apparently decided she wanted to take Josh doggy style, and was on her hands and knees in front of him, biting her lip and slowly wiggling her butt back and forth.\n\n\"Just one more thing,\" Ricki said, then leaned down and engulfed Josh's dick in her mouth, sucking for a long moment before releasing, a little trail of spit connecting her mouth to him for a moment before she wiped it away. \"Don't want anyone dry dogging it.\"\n\nJosh took a deep breath, mentally readying himself, then knelt down behind Beth. He ran the tip of his dick over her mound for a moment and she looked back over her shoulder at him. \"You only get ten, so you better make them fucking good.\"\n\nHe slow stroked her for the first one, taking more than enough time to let her adjust to him on the fly until he stopped, most of the way in. \"One,\" the rest of us counted out loud.\n\n\"Really?\" He asked, looking around at us.\n\n\"Yeah, it's happening,\" Alanna said.\n\nHe pulled out a little less slowly, then speared into Beth again, this time a little faster than the last. \"Two.\" Beth had her eyes closed and her head down, but I could see her mouth was hanging open as she tried to enjoy every moment. \"Three.\" The slow thrusts continued until they got to seven, when Josh changed it up into a hard, fast stroke that lingered while he was buried inside her. The last one went back to slow, almost excruciatingly so for us as we watched.\n\nJosh pulled out and Beth groaned in annoyance, banging on the floor with her fist for a moment before glaring at Malena. \"Really? I mean, really?\"\n\nMalena smiled sweetly, \"Want to play another hand?\"\n\n\"Fuck yes,\" Beth grunted, getting up. She turned and kissed Josh lightly for a moment before going to her seat. \"Thanks, that was really nice.\"\n\n\"Nice,\" Josh sighed. \"That's all I had time to get to.\" He grinned lopsidedly and shook his head, gathering up the cards before moving to his seat.\n\nRevenge is swift apparently, and I was extremely excited about it. I lost. Malena lost. Beth won.\n\nI was feeling like the Man of Steel, sitting in the post-reveal moment when everyone paused to see who was going to exhibit themselves next. Beth cackled and clapped her hands and Malena glanced at me, that look in her eyes again that mirrored the hungry one in Alanna's.\n\n\"Oh, you think you're going to fuck?\" Beth asked. \"Yeah, no.\"\n\nWhat? Noooo! I thought in my head.\n\n\"Alanna, can I see your bag please?\" Alanna passed the bag over to Beth, who dug around inside it for a moment before pulling out a red buttplug. It wasn't some massive thing like they used in porn, but it was clearly larger than the little one that was keeping the cute fox tail attached to Malena. \"The other one comes out and this one goes in,\" Beth grinned with a glint in her eyes. \"And if you need help, Austin has to do it. With his mouth.\"\n\nI raised my eyebrows and Malena looked from me to Beth and the new buttplug and back again. \"Uh,\" she said, \"That's a lot bigger.\"\n\nBeth just raised her eyebrow, her piercings accenting the move and making it scary-sexy. \"Ten strokes,\" she said dryly.\n\n\"I'm ok with helping,\" I offered Malena.\n\n\"You're ok with... y'know?\" she asked.\n\n\"Eating your ass?\" I offered, and she gave a small nod. \"I'm pretty sure I'm good with it.\" In fact, I was more than ok with it - while Alanna and I hadn't had full on anal sex yet, I'd spent plenty of time with my face pressed between her thick, athletic butt cheeks. It might not have been quite as tasty as her other hole, but she was studious about keeping herself clean and from the clear view I had gotten when Malena had first put in the tail, so did she.\n\n\"Okay,\" Malena said, slowly standing. \"I guess first thing's first, I need to get this out.\" She reached around behind herself and dug her fingers under the flat rim of the plug currently in her butt. Her position let me trail my eyes up and down her body, taking in everything from her upturned tits as they jiggled with her movements to her small camel toe, just showing moistness from her arousal. Despite her fantastic body, I still thought it was her face that was the sexiest - her usual smile was gone as her lip curled up a bit and she wrinkled her nose and brow while she worked on pulling out the tail. Malena hissed in a breath and then her body relaxed and she was holding the smaller plug.\n\nI took the red plug from Beth and held it up next to the one in Malena's hand. \"See, not that much bigger,\" I assured her.\n\n\"Still bigger,\" she said, shooting a glare at Beth, who just shrugged and smiled. \"How are we gonna-\"\n\n\"Face down, ass up,\" Alanna chanted. \"That'll be easiest.\"\n\n\"You know way too much,\" Ricki laughed.\n\nMalena got down on her knees, looked at me with a slightly worried but mostly horny expression, took a deep breath and then lowered her head. Her flexibility was astounding, her back arching dramatically so that most of her upper body was flat against the floor but she was still somehow folded in half at the waist, exposing herself entirely.\n\n\"God damn that's hot,\" I said, then moved in beside her. I didn't wait for anyone to say go, or check if she was ready. Instead I kissed one of her ass cheeks, my lips lingering as they brushed against her firm flesh, then again slightly lower. My eyes raised and looked across Malena's spread ass at Alanna, who was sitting on her knees with her hands holding her thighs. She mouthed the words, 'So jealous,' and I knew she meant that I got to do this and not her. We were ok.\n\nI kissed Malena's other butt cheek, then took the opportunity to cover her pussy with my mouth and tongue her. She jumped under me, not expecting it, but quickly moaned her appreciation. It might not have been part of the dare, but she was right there and I wasn't about to let the opportunity pass. I played my tongue along her lips for a long moment before driving it as far into her as I could, flicking it in and out and tasting her. She was different than Alanna but still similar, like the difference between two types of plums - both sweet and juicy but not exactly the same. I withdrew my tongue and wrapped my lips around Melena's prominent clit hood, sucking lightly a few times and feeling her shudder beneath by hands, which were on her ass now keeping it spread apart. I pulled my head back and looked at her pussy for a moment, the small dark hole where her lower lips were spread beckoning me to tease her more, to enjoy her. But I had a dare to follow.\n\nI shuffled a little closer so that I was more overtop of her upturned ass and felt my dick brush against her folded over abdomen from between her legs. I had one hand on either ass cheek and squeezed, feeling her muscles underneath the perfectly formed globes. Her asshole was staring back at me, slightly more tan than her pale skin and not-quite knotted closed, as if it was remembering the form it had held for the last while with the other plug inside it.\n\nBending my head down I lightly licked her perineum, the skin between groin and ass, doing so again and again as I moved closer to her backdoor. I hesitated for just a moment, then took a broad lick of her, feeling her quiver on my tongue as it slowly trailed right across her asshole. There was a tang of sweat and a hint of the sweetness of her pussy where some of her excretions must have trickled down, but mostly I was taken with the sensation of her skin on my tongue. It was the same as when I went down on Alanna, I became focused on how intimate a touch it was and enjoyed feeling her move around me.\n\nI took my time, licking again and again, before I used the tip of my tongue to run along her tight little ring. I closed my lips over it, sucking lightly, before doing so again, eventually probing into the center as the skin became slick with my spit and the knot loosened. I wormed my tongue, pressing harder until I could feel her pinching lightly around my tongue as it danced inside of her. The entire time she was taking stuttered, shallow breaths, her legs quivering minutely under my hands.\n\nLetting go of one of her cheeks, I replaced my tongue with the tip of my finger, her ring clamping down on it. I let a drop of spit go from my mouth and it oozed around my finger and the dimple of her asshole, and I licked at her pussy again while I pressed down with the finger. It took some time but I was eventually able to carefully slide my finger in and out of Malena's ass. I glanced at the red plug, judging it's size compared to my knuckle and decided I should probably progress to a second finger. I also realized the others were sort of just standing around us, watching intently and quietly, which put this strange feeling in me.\n\nWhen I eased the tip of my second finger in, pushing past her ring, Malena took in a sharp intake of breath through her nose and froze. More spit, a slower approach, and she started breathing again. I was lapping at her pussy now while I kept one eye on my fingers in her ass, occasionally raising up to apply more spit, and then she moaned as I pushed both fingers deeper. Fishing blindly for the buttplug with my free hand, I found it and took my mouth off of her but kept my fingers working. I quickly took the plug and wrapped my lips around it, spreading spit on it as well, and then for good measure ran the tip of it through the center crease of her weeping pussy, picking up her juices.\n\nI started lightly suckling on her clit as I withdrew my fingers entirely and replaced them with the tip of the plug, about the bottom half of it easily filling the space I had prepared before it met much resistance. I started pumping it in and out while I sucked, fractions of an inch at a time.\n\nMalena started a low keening, \"Hhhuuuuuunnnnn.\" I felt one of her hands grab my knee, the other one folded behind her back, fist clenched.\n\nSuckle - pump - ease off - repeat. It was almost in but her rectum had clamped down just shy of the widest part of the plug. Using my tongue to push back her clit hood as much as I could, I sucked harder and she moaned raggedly in her throat, though that turned into a squeal of surprise as I pushed the plug the rest of the way in, stretching her and then giving her release as it quickly tapered to a smaller width, though bigger than what she had been using before.\n\nI pressed lightly on the flat top, or bottom, of the plug, and the dimple around her hole pushed in and she moaned. Patting her ass, I kissed one cheek again and said, \"All done.\"\n\n\"Fuuuuuck,\" she groaned, slowly raising to her hands and knees and looking around at all of us. \"How long was that?\"\n\n\"Austin ate you out for like fifteen minutes,\" Ricki said. \"It was so fucking hot.\"\n\nThe three other girls were standing, their nipples rock hard and their chests rising and falling as they breathed deeply. Josh was standing next to Beth and had one hand on her shoulder, and I suspected she'd probably been fondling him while they watched.\n\n\"What's next?\" I asked as Malena turned around and cautiously sat down.\n\n\"Another hand,\" Alanna said, quickly moving back to her seat, the rest of us following suit.\n\nCards. Discard. New cards. If revenge came quickly for Beth, karma was swinging both ways.\n\n\"Oh crap,\" Beth said when Malena turned over her full house. The dark haired girl had lost, along with Josh and I.\n\n\"Yeah, that's right,\" Malena grinned. \"Tell me, Beth. How many guys have you had sex with at once?\"\n\n\"Um, one,\" Beth said.\n\n\"Well that number's about to change. Josh and Austin are going to pick you up between them and you're gonna get fucked in both holes.\"\n\n\"What?!\" Beth exclaimed. \"That's not fair, I've never done that-\"\n\n\"Piercings, come on,\" Alanna interrupted her. \"Malena's never taken anything in her butt before, and I'm pretty sure Ricki's never gotten some lesbo loving before either.\"\n\n\"Yeah, but...\" she trailed off.\n\n\"You can always quit,\" Ricki offered with a smirk.\n\nBeth frowned and shook her head. \"I just... right now?\"\n\n\"Yeah right now,\" Malena retorted.\n\nJosh and I looked at each other and shrugged. Neither of us had probably ever planned to be part of double-teaming a chick, particularly together, but would we shoot down the chance? No. Ricki tossed us both condoms and I slipped it on with some minimal figuring; Alanna and I had been fucking bareback for the past two weeks, which was probably stupid since there was still a failure chance even though she was on the pill, and before that I'd never needed to use one since I'd been a virgin."
    ],
    "authorname": "BreakTheBar",
    "tags": [
        "strip poker",
        "roommates",
        "bisexual",
        "orgy",
        "mff",
        "blonde",
        "mmf",
        "threesome",
        "party",
        "strap on"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pushing-boundaries-8"
}