{
    "title": "Satyr Play",
    "pages": [
        "Author's Notes:\n\n'Satyr Play' is my attempt to dabble in the realm of magic. It's not a genre I typically work in so I'm NOT going to play by the rules. If I break any preconceived notions or 'established guidelines', too bad. ;)\n\nThat said, I hope you enjoy it.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older. Most aren't even human... or real. Or are they? Dun dun DAH!\n\n********\n\nSatyr Play\n\n********\n\nChapter 1\n\nStanley Garin was a serious young man. He wasn't a big man or a powerful man or even a particularly handsome man but he was intelligent and passionate.\n\nWhat was he passionate about? Not sports. His 5' 7\" slimly built body and lack of athletic abilities made him despise team sports as he'd always been excluded. Politics? Boring! Women? While he yearned for female companionship, he did so in silence as his tongue betrayed him around women he found attractive.\n\nNo, what Stanley loved most was computers. He loved programming them. He loved building them. He loved connecting them together. He just... understood them! He knew what to expect from them and for him, they behaved in rational, expected ways. That wasn't to say he'd never encountered a faulty piece of equipment but he had an innate ability to quickly identify the flaky bit, replace it, and restore order to his life once more. Simple! Much simpler than relationships with people.\n\nHaving such a serious nature, he'd struggled with the social aspects of school from the junior to the senior grades. He was labeled a 'weird nerd' by the other kids. This was an even more shunned subclass of the belittled 'nerd' social strata in the school's ecosystem. He was smart, quiet, and easy to teach so the teachers were grateful for one less challenge in their days.\n\nOnce he'd reached college though, he came into his own and excelled in every technical course he took. From network administration, database administration, programming, information security, he'd excelled in anything he could enroll in that involved his beloved computers. He'd just graduated at the top of his class. He knew he had prospects out the wazoo... if he'd allowed himself to use silly terms like 'wazoo'. He was destined to work at a Fortune 500 company.\n\nSo what the hell was he doing in the server room of this small, obscure financial investment house in lower Manhattan? He gazed around at the equipment in despair. Older generation switches with flickering amber trouble lights. Old style 4U servers in the server racks droning with the unmistakable sound of wobbly and failing power supply fans. The power protection was a joke and their backup system? What backup system?\n\nHe turned his face to the stern looking woman who was giving him this tour. She'd said her name was Olive. She was maybe an inch taller than he was but four times his width. Greying brown hair, no style clothing and a grim look in her eyes. She was probably only in her fifties but she had jowls! He had no trouble speaking with her. There was no attraction at all.\n\nThis was his very first job interview since graduating and he was only doing it as a favor to one of his professors who'd sent him the recommendation. It had been going along fine until she led him into the labyrinth in the basement.\n\nThat was another thing! They kept their servers in the basement! IN MANHATTAN! They were below sea level!\n\n\"Can you work with this?\" Olive asked him with a gravelly voice.\n\n\"No.\"\n\nHer thick eyebrows went up. \"No? But you came highly recommended. They said you were top of your class! They called you a savant with technology!\"\n\n\"Really? Somebody called me a savant?\" Stanley said in surprise, secretly pleased.\n\nShe scowled at him and his hint of a smile disappeared. \"You're saying you can't maintain this system?\" she growled.\n\n\"No, I'm saying your company can't afford to maintain this system. It's about to fall over. You need to replace it- soon! Now! And you need to move it up like, three floors at least.\" Stanley was past the point of worrying about getting this job, not that he'd expected to actually accept it. He could feel the tech down in this pit crying out for a quick and merciful death. It was time for some ugly truth.\n\n\"Listen, I don't know what trolls built this system,\" she glanced at him sharply, \"but they did you no favors. Your company is in serious danger of losing its most valuable asset, its information! If you don't take immediate steps to relocate your server room, replace this stuff with more current and stable technology and get some emergency power protection and a proper backup system your company could die! It hurts me to see this. You need to address this before you hire anyone to maintain it.\" Seeing the scale of the network he knew they needed to hire a team to replace it. He looked around rubbing his suddenly stiff neck muscles and sighed. The plaintive whine of the power supply fans was getting under his skin.\n\nWhen he turned back to his interviewer he froze in surprise. Standing behind her was a tall, raven haired beauty in a very expensive suit. The woman oozed authority and wealth and Stanley's mouth immediately went dry.\n\n\"It's refreshing to hear such honesty in a job interview,\" the woman said with a voice like silk wrapped steel. Stanley could only stare. Her Spanish heritage was evident in her lovely accent.\n\n\"Ms. Villamor! To what do I owe the honor of a visit from our CEO today?\" the plump woman gushed, her dour expression banished in her employer's presence. Olive was practically simpering.\n\n\"Normally I wouldn't come down here at all except my people can't get their work done when their access to the Internet disappears every five minutes,\" the tall woman said calmly but there was definitely a threat beneath her tone. Stanley was mesmerized by the woman's voice.\n\nHe picked up a little tremble as the subway went by and heard a corresponding odd vibration noise coming from the server racks. His entire being vibrated in sympathy with the distressed hardware. He turned his wide eyes to Olive.\n\n\"The racks are bolted down to the concrete floors with no vibration dampening? The building's over a subway! I'm surprised the servers haven't shaken themselves apart!\" he gasped then quickly leaned away from Olive when the woman turned to snarl at him. For just the briefest second he could have sworn her eyes were glowing green!\n\n\"OIive! Leave us!\" Ms. Villamor barked and Stanley flinched. Olive bowed her head and rushed from the room.\n\nStanley was mortified. This job interview was going from bad to worse. Now he was face to face with the raven haired executive and he felt his tongue die in his mouth as he looked up into her dark eyes. Were they brown... or dark gold? Either way they held him fast.\n\nShe was much taller than he was, maybe 6' in her two-inch heels, and stunningly beautiful! Her eyes were her best feature but it was a close contest as the rest of her was pretty spectacular as well. The expensive business suit emphasized her lush curves and it was all he could do to keep his eyes from roaming them.\n\nHer head tilted ever so slowly as she gazed at him. The tip of a pink tongue slipped out briefly to wet her sensual lips.\n\n\"Do you know how to save us from these technological dangers?\" she asked as she slowly raised one exquisitely shaped eyebrow.\n\n\"Y-y-you hire a network d-duh-design firm to come in and analyse your c-c-c-... your system as it is n-n-now and tell them what your p-puh-perceived needs will be for five to tuh-ten years from now. Then give them the m-money they'll need to build it,\" Stanley stuttered and gasped his way to the answer. He was sweating profusely before this smartly dressed business woman and his face felt like it was on fire.\n\n\"But could you do it?\"\n\nStanley froze. \"Me?\" he squeaked.\n\n\"Yes, if we supplied a large team of workers to follow your explicit instructions, could you design a replacement system and have it up and running within... let's say a month. The team would work around the clock on your orders.\"\n\n\"W-wouldn't you rather hire a c-company with p-puh-previous experience?\" he exclaimed.\n\n\"You didn't answer my question. Could. You. Do. It.\"\n\nHe stared into her eyes but his mind was already rapidly assembling a list of required components. He found himself nodding. He froze at his own unexpected audacity.\n\n\"Do you think you could take a look at what might be causing the Internet outages?\" she asked.\n\nHe blinked then turned to walk down the row of server cases, looking for any visible sign of where the public lines entered the system. At the end of the row behind the last rack he finally found a router mounted to a sheet of wood improperly bolted to a wall. His eyes widened in shock when he saw the crappy little consumer level router which had only the most rudimentary security features. As he watched, another subway train went by and the sheet of wood swayed. The length of network cable between the router and rack was a little short and pulled tight with each sway. This was tugging at the connector. He turned and jumped as Ms. Villamor was standing very close behind him. He looked up into her curious eyes.\n\n\"This one duh-doesn't take a genius to f-figure out.\" He turned to face the hardware so he could pretend to be talking to it. Much better. He could feel himself relax. \"Replace this cable with a longer one and the problem with your connection to the Internet should be resolved, temporarily at least. Someone should secure this panel to the wall properly as well. More importantly the router needs replacing with something that can be used to give the company a truly secure connection!\"\n\nShe turned and left for a moment, returning with a bin of network cables. He looked at her in surprise.\n\n\"We need to s-suh-schedule a downtime window to...\" he stopped when he saw her annoyed look.\n\n\"I did mention everyone was already experiencing downtime every five minutes. I believe we can dispense with the formalities this time,\" she insisted. He nodded.\n\nLooking in the crate he selected the appropriate cable and quickly swapped out the existing one, running the excess up along the cable channel hanging from the ceiling. He turned back to her and nodded.\n\n\"That's it?\" she gasped.\n\n\"Yes.\"\n\n\"Did I hear you mentioning the server room shouldn't be in the basement?\" she asked calmly, the hint of a smile on her lovely lips.\n\nHe nodded once more.\n\n\"Follow me,\" she said and spun on her high heels, dropping the bin of cables under a table on her way by. Stanley found himself following her out of the labyrinth to the elevator bank. He struggled to keep his eyes off of her lushly curved ass. Her perfume was light and almost imperceptible but it was making him feel... just a little tipsy and more than a little stimulated.\n\nShe stepped into the elevator which opened as she approached it and Stanley stepped in beside her. She tapped her access card against a sensor and the elevator chimed recognition. She pressed the button for the top level. They rode in silence and Stanley struggled to calm his mind and his erection.\n\nThe elevator stopped and they stepped off into a lobby. The woman nodded to the two large men in dark suits standing on either side of double doors. They nodded and opened the doors for her. Stanley looked at them with wide eyes as they trained their eyes on him the entire time he walked past. He got the impression they were watching for just the slightest hint that he was a threat and they'd take him down. Hard.\n\nMs. Villamor led him down a long hallway and stopped before an opaque glass door with another sensor. Once she tapped her access card to it the liquid crystal in the glass cleared and he could see a large board room table and many chairs around it. The room was empty otherwise. She opened the door and walked in. Stanley followed. When the door closed there was a sudden hush as the room was soundproofed.\n\n\"We are on the top floor. This room is in the center of the floor away from all the windows. It's used once a month. Otherwise it remains empty. If we were to build the new network room here we could build a new boardroom in the basement,\" she suggested.\n\nHe looked at the room and took in the twelve foot ceilings. The carpet would have to go. They could take it back to the cement floor and add a raised floor. He could see the racks of servers, the air conditioning vents and exhaust, the power panels, the cable guides- He walked over to the far wall and put his hand against it, trying to envision where the cables would run to the lower floors and where the room's heat could be dumped.\n\nHe was nodding to himself as the picture came together in his mind.\n\n\"Would this room suffice?\" she asked.\n\n\"Do we have roof access? Permission to install a diesel backup generator there? Extra air conditioning units?\" Stanley was lost in a world of design and forgot to be nervous as he answered automatically.\n\nShe was tapping something into her phone. \"I will find out. We own the building so permission is only dependent on city building codes.\" She looked at him. \"Do we have a deal?\"\n\nThe question snapped Stanley out of his beautiful daydream and slapped him in the face with reality. He was only recently out of college and this would be his first job! He wasn't qualified to do what she was asking. He opened his mouth and nothing came out. He closed it and cleared his throat. He faced the wall.\n\n\"I really think you would be better off hiring a company that does this kind of work. I'm hardly qualified and the task is huge! They'll have access to a large group of installers to do the cable runs and the server builds. I'm just talking about the hardware here. I still have no idea about all the software that you currently use and what upgrades you'll need to move to.\"\n\n\"I can get you a team of thirty workers. Absolutely dedicated, hard-working and dependable,\" she insisted.\n\nHe turned to stare at the woman who was putting the future of her company in his hands. He was overwhelmed.\n\n\"Why?\"\n\nShe tilted her head again. \"Why what?\"\n\n\"Why are you p-p-putting this much f-fuh-faith in my ab-abilities? You d-duh-don't even know me!\" he gasped.\n\n\"Olive wasn't the only one who read your transcript from the college. They were quite impressed with your abilities. Savant was the word they used. I know Professor Stagg. He doesn't give praise like that unless it's deserved.\"\n\nHe felt completely off balance. The old man had been a thorn in his side all the way through his five years at the college. Stanley got excellent grades in the old man's classes but he had to fight for every point. To hear he had such a high opinion of him now... he didn't know what to think.\n\n\"Besides, I knew a Garin... a long time ago. He was... a most extraordinary man,\" she smiled gently to herself as she remembered. When she returned from her memories she pinned Stanley once more with her dark eyes. \"Do we have a deal?\"\n\nStanley's inner voices were screaming at him. The cautious, timid one wanted him to tell her he was flattered but he'd pass. The louder voice told him he needed to accept this challenge as it was a once in a lifetime deal.\n\n\"Ok.\"\n\n\"Ok?\" she said with a raised eyebrow.\n\n\"S-sorry. Yes, we have a d-deal,\" he said, his voice quavering.\n\n\"Good. Follow me.\" She spun once more and Stanley rushed to catch up.\n\nShe walked a little further down the hall and came to another glass door but this one was clear and he could see it led to a small waiting room with an executive assistant's desk. A beautiful young woman sat behind the desk and looked up with a smile at them as they entered. Her eyes widened when she looked at him.\n\nStanley felt his tongue go numb once more as the woman was a younger version of Ms. Villamor. Same long raven hair except hers was pulled back into a ponytail. Same large, dark eyes, high cheekbones, and a slim nose above full sensual lips. The only thing she was missing was the impression of power and dominance. Instead she seemed to exude a warm and happy friendliness.\n\n\"Good morning mother.\"\n\n\"Ah!\" Stanley thought.\n\n\"Paloma, you know you're supposed to address me as Ms. Villamor at the office,\" the older woman sighed as her daughter's face slipped into a contrite expression. Her eyes slid over to Stanley and her smile was back.\n\n\"Hello!\"\n\n\"Hi!\" Stanley managed.\n\n\"This is Stanley Garin. Stanley, this is Paloma Villamor, your executive assistant.\"\n\n\"What?!?\" Stanley gasped as Paloma's smile brightened.\n\n\"You've found a replacement for Mr. Hokensev?\" the young woman chirped happily.\n\n\"Yes, just now.\"\n\nStanley was looking between the two women and his knees were beginning to wobble. The mother saw his trembling and gently took his arm and guided him into his new office to sit in one of the chairs before the large desk. Stanley's eyes took in the heavy and dark stained wooden furniture filling the room.\n\n\"This furniture belonged to the previous occupant of this office. You may change it to suit your taste.\" She turned to the doorway where Paloma was hovering. \"Dear, contact the head of HR, Ms. Gunderan, and have her bring up a full executive contract.\" She looked back at Stanley. \"You can start today, yes?\"\n\nStanley was taking slow, deep breaths to calm himself and just nodded.\n\n\"Is he alright?\" Paloma asked.\n\n\"Yes, dear. Ms. Gunderan please,\" the mother said and Stanley picked up the steel in her tone. Paloma disappeared from the doorway instantly.\n\n\"I- I'm s-sorry for being a b-bother,\" Stanley gasped as he struggled to get his brain back to functioning. It was all happening so quickly. When the day started he'd hoped he would end up in his own cubicle in a pod farm surrounded by other techs, maybe in charge of ordering and installing network adapters in workstations. Here he was sitting in his top floor office with an executive assistant, a gorgeous one at that, responsible for the company's entire IT infrastructure! It wasn't supposed to happen this way.\n\nPaloma reappeared in the doorway. \"She's on her way.\"\n\n\"Thank you, dear. Have all of Mr. Hokensev's personal items been removed from the room?\"\n\n\"Yes.\"\n\nMs. Villamor caught Stanley's eyes once more and he felt locked in place. \"Do you like this furniture or would you like to change it.\"\n\nHe used the excuse to look away from her amazing eyes. \"It's kind of... heavy and the room is... dark? Are those blackout curtains over the windows?\" he asked in puzzlement. The woman nodded with a frown as if they offended her too. \"I'd like to remove those.\" He looked at the furniture. \"Could I get something modern? Glass and steel?\"\n\nWhen she looked around the room he did as well. \"I like the desk lamp and the floor lamp though.\" They were the only two items he did like. The rest made him feel uneasy. He glanced at the woman standing in the doorway.\n\nPaloma was smiling widely and quietly clapping her hands. Her mother snorted quietly.\n\n\"Yes, you can have this.\" She turned to her daughter. \"Dear, I believe you will find Mr. Garin here far more agreeable to work for than Mr. Hokensev.\" Paloma's smile just got wider. \"Summon the workers,\" the mother said and her daughter disappeared once more.\n\nThe doorway was suddenly filled with a broad-shouldered woman with intensely blue eyes. She had to be 6' 4\" in her low heeled black boots, surpassing her boss in height as well as width. Fair skinned and blond, the head of Human Resources was a powerfully built woman who gave him the impression that she could probably take both of the men he'd met in the elevator lobby in a fight, at the same time.\n\n\"Ms. Gunderan, may I present the newest member of our executive team, Stanley Garin,\" the CEO said.\n\nStanley stood up to shake the hand of the tall blond. He saw her long hair was pulled back in an intricately woven braid and the bottom was clasped with a shiny gold cylinder which he spotted as it swung like a pendulum when she moved. She was also in a business suit but with a skirt which showed off her muscular but shapely legs.",
        "\"Welcome aboard, Mr. Garin,\" the woman said with a smile and she gave the CEO a questioning glance. Villamor shook her head almost imperceptibly but Stanley caught it and Gunderan's raised eyebrow response. He wasn't sure what that was about but he was in a bit of a daze. The woman's voice was surprisingly feminine. He had been expecting a much deeper octave that comes from body building and possibly taking enhancers. On closer examination though there was nothing masculine about Gunderan. She was lovely, just big!\n\n\"Th-thank you,\" he stumbled and she grinned at him.\n\n\"I'm not scaring you, am I?\" she asked sweetly, ignoring the scowl from her boss.\n\n\"N-no, I get like this around puh-pretty women,\" he forced out then froze, wide eyed at what he'd just said. To the head of HR none-the-less. AND the CEO! He closed his eyes and put his face in his hands.\n\n\"Oh, I like this one!\" Gunderan chuckled happily.\n\n\"Sigrid!\" her boss snapped.\n\n\"Fine but I can't help it if he's so cute,\" she chuckled at Villamor's growl. She turned to Stanley who was looking at her once more. \"This is a standard executive contract for our firm. Please read it before signing it. I can answer any questions you have as you go through it.\"\n\nA group of men showed up in the doorway. Stanley looked over at them and immediately felt a little uneasy as they were all so strikingly similar. They all were roughly the same height, had the same hair color, and generally the same facial features. They could be twins, if that happened in groups of... eight?\n\n\"Ah, we're in the way, aren't we? Let's move to my office,\" the CEO said.\n\n\"Is this furniture going to storage?\" Sigrid asked.\n\n\"Do you want it?\" Villamor asked.\n\nThe tall blond moved to sit behind the desk and ran her hands over the surface. Then she gave it a heavy thump with her fist. The heavy desk took it in stride. She grinned. \"Yes please!\" She looked over to the men in the doorway. \"Please strip it back to the natural wood then give it a light oiling and a sealant before delivering it to my office.\"\n\nThe closest man in the doorway nodded then the rest picked up the nod. Again, the hairs on the back of Stanley's neck stood up.\n\nMs. Villamor stood up and gestured for Stanley to follow her. Gunderan followed him. They made their way down the hall into another waiting room. Sitting at a desk to the right of the inner door was a beautiful, dark haired man who must have been the CEO's executive assistant. Beyond the inner door was a corner office. He sighed when he saw the view from the expansive windows. Her desk, situated in the apex of the two bands of windows was exactly the kind of furniture he liked. A wide glass surface on a steel tubing frame. On closer examination though the glass surface was a blending of different kinds and colors of glass. It looked something like a Kaleidoscope. Very pretty.\n\nThe CEO gestured for them to sit on the couch to read through the contract while she returned to her desk to get some work done.\n\nIt took Stanley some time to get through the document as he'd never read one before. There were a lot of clauses regarding confidentiality and some rather strict and ominous sounding penalties for breaching them. Sigrid was very helpful in clarifying some of the legalese and by the end he felt comfortable about signing the document. There was still the matter of filling out the fields for his compensation.\n\nMs. Villamor gestured for them to join her so they stood and sat in the chairs before her desk. She leaned back in her chair as she held Stanley's eyes with hers. \"I'm going to start you off with an annual salary of $320,000 with profit sharing, and full benefits. We will review your performance after six months and make an assessment at that time if additional compensation is warranted. Is this acceptable?\"\n\nStanley rarely laughed but he couldn't stop himself from bursting into laughter now, thinking the woman was kidding. He looked around for the hidden cameras and saw only the two women watching him with puzzled expressions. When they didn't join in his laughter quickly choked off. \"I- I thought you were juh-joking and this was all an elaborate puh-prank.\"\n\nMs. Villamor just held his eyes with hers.\n\n\"It- it is highly acceptable,\" he squeaked. Ms. Gunderan nodded and wrote in the figures. She slid the document over to him on the desk to sign. He took the pen and added his signature to the document.\n\n\"As a final authorization, we do require a tiny drop of blood in this box at the bottom of the form,\" the head of HR said and he stared at her in surprise. She reached over and gently took his hand. She pricked his finger with a pin she suddenly had in her hand and gently squeezed the finger until a single droplet of blood fell to the paper.\n\nBefore it touched the paper the droplet vaporized with a tiny puff.\n\nThe women went absolutely still and looked at Stanley closely. The young man in question was looking closely at the paper in puzzlement. He leaned forward to look closer as a second drop fell to the paper. It too disappeared with a slight hiss and pop.\n\n\"How is that happening?\" he said slowly with wide eyes.\n\nHe missed the exchange between the executives. The head of HR was staring at the CEO with an intense expression and the brunette just gave her head one brief, sharp shake to shut down the unspoken question.\n\n\"We can dispense with that formality for now Sigrid. Thank you. That will be all.\"\n\nThe tall blond gathered up the contract and with a final glance at her boss left the office. Stanley put his finger in his mouth but it had already stopped bleeding.\n\n\"Your predecessor, Mr. Hokensev, may have kept notes on the existing equipment. You should work with Paloma to review all of his documentation. I believe you will find her to be highly motivated and she will prove to be indispensable.\"\n\nHe nodded to her.\n\n\"You can find your way back to your office, yes?\" He nodded. She held out her hand which he shook. \"Welcome to VRL Investments,\" she said with a smile. \"Now, go save us from disaster!\"\n\nSeeing he was being dismissed he stood up. \"Th-thank you for this op-op- chance!\"\n\nShe smiled and made a shooing motion with her hand as she turned back to her work.\n\nHe made his way to the door and as his hand touched the handle she called to him once more.\n\n\"I've received reports that our Internet connection is remaining stable. That's an excellent start! Keep it up!\"\n\nHe smiled back at her and nodded.\n\nHe walked back to his office and stopped in surprise when he saw there was already a silver plaque with his name printed on it on the wall next to the door. It also said 'CIO'. He had to take a moment to absorb that.\n\nWhen he stepped inside he saw Ms. Gunderan speaking in hushed tones with Paloma who burst into a smile when she saw him.\n\n\"Welcome to VRL, Mr. Garin!\" she said cheerfully. The way she said the company name made it sound like she was saying 'virile'.\n\nHe smiled at her and nodded to the head of HR who returned the nod as she headed out.\n\nThen Stanley was alone with the beautiful young woman with the bright smile.\n\n\"P-please call me Stanley.\"\n\n\"Oh! I couldn't do that Mr. Garin! It's disrespectful,\" she exclaimed with wide eyes.\n\n\"Wuh-we're the same age!\" he blurted, starting to feel a little dizzy in her presence.\n\n\"Please, I'm an Executive Assistant. You, you're a Chief Information Officer!\" she gushed and leaned forward over her desk towards him.\n\nSuddenly Stanley's eyes were trapped in her deep... deep cleavage. He pulled his eyes away and saw she was looking at him expectantly. \"Uh, what was I doing?\"\n\n\"What would you like to do first?\" she asked.\n\n\"Oh! Right, Ms. Villamor said you c-c-could get me all of Muh-Mr. Hokensev's documentation on the existing n-n-network inventory,\" he said. He gritted his teeth as he was becoming frustrated with his stuttering.\n\nShe nodded and walked out from behind her desk to enter his office. He followed and was stunned to see the blackout curtains were already gone, he had a pretty nice view, and the desk had been replaced with a modern glass and steel model. He noticed the lack of a computer on the desk but assumed they would let him pick his own. After all, he was in charge of that now.\n\nHe saw Paloma lean over one of the black filing cabinets against the wall and open a drawer. Was she intentionally wiggling her ass at him? No, it couldn't be. He pulled his mind back from where it was trying to go.\n\n\"Oh NO!\" Paloma gasped.\n\n\"What is it?\"\n\n\"His files! They've been destroyed!\" she exclaimed.\n\nHe walked over to stand beside her and saw the drawer was full of ashes. \"Someone burned them?\"\n\nPaloma had a stern look on her face. \"It was probably Mr. Hokensev himself. He became rather... hostile in his last week with us.\"\n\nStanley was a little worried about what that might mean when he did his visual inspection and inventory of the network and systems equipment which he would have to rely on without the documentation.\n\nHe turned to look into her lovely dark eyes as she pushed the drawer closed. \"Can you get me an org chart? I n-need to know the size of the c-c-company and how many wuh-workstations I can expect we'll be su-supporting.\" He looked away with a scowl.\n\nHe felt a hand on his arm and looked back in surprise.\n\n\"You don't have to be nervous around me. I'm here for you one hundred percent,\" she said gently, her compassion showing in her eyes.\n\nHe did feel himself calming a little and smiled at her gratefully.\n\nShe bit her plump lip and pulled her hand back from his arm reluctantly. \"What do we do now?\"\n\nHe cleared his throat and nodded, feeling his nerves settle down. Now he was in his comfort zone. \"We do an inventory manually. We start at the bottom and work our way up!\" She smiled at his enthusiasm and her eyes sparkled at his lack of stuttering. She gave him a firm nod.\n\nHe led the way back out to her desk where she sent a quick request to HR to get a new org chart sent to them and to get her tablet.\n\n\"I'll keep notes of your findings,\" she said and he smiled in return.\n\nThey made their way back down to the basement and Paloma showed him the code to manually access the server room until he had an access card. Once inside they got to work.\n\nIt took them hours to record every piece of equipment in the room but they made an excellent team. Paloma's enthusiasm never waned and Stanley was in his element. He truly felt relaxed around this beauty and that was a first. He kept his thoughts professional as while he longed for a girlfriend he knew he would be working closely with her and had to keep this relationship professional.\n\nOnce they were done he had a much firmer grasp on the scope of the company's current equipment and the scope of just how much danger it was in. He began to have doubts in his ability to achieve his goal. He felt Paloma's hand on his arm once more.\n\n\"Don't let the size of this task intimidate you. I know you can do it! I can see you understanding everything you found in here and that's amazing to me! You know what needs to be done! That's far ahead of what most people could achieve so quickly.\n\nHe felt his confidence returning.\n\n\"Can we do a quick inventory of the equipment in use on each floor on our way upstairs?\" he asked and she gave him a happy smile.\n\nPaloma led him to the main floor. \"Reception and Security are the only departments with terminals. It's my understanding that the two reception terminals have minimal access. Let me introduce you to Mr. Duncan, our head of security.\" She opened a locked door and led him down an access hallway to the security offices. He'd noted the cameras in the lobby and the camera in the hallway as well. When they reached the door to the security office they had to buzz to be admitted.\n\nOnce inside Stanley quickly made note of the terminals they had and the vast number of screens they had to review. Most seemed to be picking up feeds from external cameras but a surprising amount were internal.\n\nThey had a small array of servers in a corner of the office and he squatted down to take in their make and model.\n\n\"Ms. Villamor! What are you doing bringing a stranger into the Security Office!\" growled a thick Scottish accent.\n\nStanley stood and turned to face the source of the voice and had to crane his neck back to see the eyes of the speaker. He was as tall and intimidating as the two men guarding the top floor elevator lobby. Flaming red hair and a red beard dominated his features but he had pale blue eyes and freckles over a nose that looked many times broken and reset poorly. He was wearing a black suit but looked like he'd be far more comfortable in combat gear.\n\n\"Mr. Duncan, this is Stanley Garin. VRL's new CIO.\"\n\nBushy red eyebrows rose up then his eyes hardened as he closely examined the small man standing before him.\n\n\"Aye, Ms. Gunderan sent me an update on a new employee. Your mum also sent me a note,\" the man said, not taking his eyes from him.\n\nStanley held out his hand. \"Nice to meet you, sir.\"\n\nThe security chief gripped his hand hard and pumped it a few times then released it with a smile on his face. \"It's nice to meet you as well. Are you going to fix the mess that bastard Hokensev left us in?\"\n\n\"Uh, yes sir. That's the plan. Your servers are going to be on the list of replacements. They're much too slow to keep up with the load you're putting them under. I'm only seeing regular cameras. Are you intending to add some with thermal imaging capabilities?\" He got a nod and raised eyebrows from the man. \"These servers won't do it.\" Stanley said looking back at the machines in the corner. \"The power backup is a joke and that wall of monitors, they're old school CRT's aren't they. Everything has to be replaced.\" His expression showed his frustration. How had these systems been left to rot for so long?\n\nMr. Duncan smiled at Paloma who grinned back at him. \"Mr. Garin, come with me and I'll get you your security access set up.\n\nThey went to the man's office and soon Stanley was set up with his own access card to the building. The card gave him access everywhere including the elevators up to the executive level but did not open the other executive offices and the Security Office door.\n\nStanley looked at Paloma. \"Am I going to find antiquated hardware on every floor?\"\n\n\"Not in the Accounting Department,\" the Security Chief growled.\n\nPaloma glanced at Stanley and nodded.\n\nThey moved on, going floor to floor until they reached the second to top floor where each workstation was relatively new and each monitor was a wide aspect 27 inch LCD flat panel. They'd reached the Accounting Department. Stanley looked around in surprise. This was the technology every floor should have been using.\n\nThey were approached by a slim, older man who had to be at least 6' 2\". Stanley wondered if there was an unspoken HR prerequisite for being tall he had somehow bypassed. He picked up Paloma's unease and looked a little closer at the approaching gentleman.\n\n\"Ah Ms. Villamor, is this the new CIO I've been hearing about?\" the tall man said with an odd hiss behind his words.\n\nPaloma nodded and unconsciously moved slightly behind Stanley as she turned to address the CFO. \"Mr. Pfister, may I introduce Stanley Garin.\"\n\nThe man eagerly held his long fingered hand out to shake. Stanley noted he wore a variety of rings on each finger, some being quite ornate. Just as the young man slid his hand into the larger grip a static spark shot to Mr. Pfister's hand striking three of the rings causing the old man to yelp and yank his hand back.\n\n\"Wow! That was quite the static shock! Are you alright?\" Stanley asked as the older man didn't look well at all. He was looking at Stanley in dread. Then he looked at his rings.\n\nSeeing the older man was unsettled Stanley saw an opportunity to go on the offensive. \"I noticed that all of the workstations on this floor are current where all of the lower floors are struggling with ancient equipment. Can you explain that?\" he asked.\n\nThe man wasn't really paying attention to him as he fussed with his rings. \"Their workstations are perfectly functional. There was no need to upgrade them.\"\n\nStanley looked at the man in surprise. \"That decision falls under the purview of the CIO.\"\n\nMr. Pfister was beginning to look a little desperate to get the rings off but they looked stuck. He was also beginning to look a little... green. \"Yes, but the PO's are approved by me so nothing is purchased without my say so. So, I decide.\"\n\nPaloma took Stanley's arm and quickly pulled him away as she could see he was starting to get angry.\n\nShe got him into the elevator and they rode it up to the top floor. \"We need to speak with your mother,\" Stanley grumbled to Paloma. She nodded and they made their way down the hall. When they got there her executive assistant, Felix, asked them to take a seat.\n\nThey must have been there for ten minutes when Mr. Duncan entered the waiting room and was directed to go straight in to see the CEO. Stanley's eyes were wide with shock as he took in the ripped state of the Security Officer's suit and a splash of what looked like blood on the man's arm and cheek. Paloma placed her hand on Stanley's arm to keep him seated and it calmed him down. Another ten minutes passed then Mr. Duncan emerged with a smile on his face. He nodded and winked to Stanley and left.\n\n\"You may go in now,\" Felix said.\n\nThey rose and entered the office. Ms. Villamor gestured for them to take the seats across from her desk.\n\nThey sat and Stanley immediately slid forward on his chair. When the woman turned her dark eyes on him he felt it like a physical shock through his body. She was just so lovely!\n\n\"Muh-Ms. Villamor, I d-d-don't...\" Paloma put her hand on Stanley's arm and he felt himself calm. He kept his eyes on the surface of the CEO's desk. \"...believe I'll be able to resolve this company's technical crisis without an immediate adjustment in policy. The CIO must be the one who decides on what purchases are made for the company's IT requirements, not the CFO.\" He looked back gratefully at Paloma and she smiled at him.\n\n\"I don't believe that will be an issue for us any longer. Mr. Pfister is no longer working for VRL. I believe you will find his replacement to be much more reasonable,\" the woman said with a wide smile.\n\n\"But- but I was just speaking with him-\" he said in shock.\n\n\"And you left him in a very talkative mood. When Mr. Duncan spoke with him after you left he confessed to embezzling from the company with Mr. Hokensev's assistance. This gave us grounds to... fire him for breach of contract. He was... escorted from the building. We won't be seeing him again.\"\n\nSeeing the stunned look on Stanley's face she glanced at the clock and smiled. \"You've had a very busy first day. It's well past eight so why don't you head home and we'll see you bright and early tomorrow morning.\"\n\n\"Uh, thank you Ms. Villamor. Good night,\" Stanley said as he got to his feet. He admitted to himself he was tired. He was eager to move forward with this project but he needed to sleep. He also had a long commute ahead of him.\n\nPaloma followed him out of the office and down the hall to the entrance of his office.\n\n\"I guess I'll head home and I'll see you in the morning,\" Stanley said, fidgeting.\n\n\"See you in the morning. I'm so glad you're part of the team,\" Paloma said with a smile.\n\nStanley's head spun a little and he nodded with a grin of his own. \"Thanks! Good night!\"\n\nHe made his way to the elevator lobby and was surprised when the two security agents nodded to him as he waited for the car to arrive. He nodded to them in return and took the elevator to the lobby. Mr. Duncan was there and nodded to him as he left. The man was wearing a new black suit and there was no sign of the blood he'd seen earlier.",
        "Stepping outside Stanley felt an incredible rush of joy shoot through his body. He had a job, a challenging one at that, doing something he loved and was being paid quite handsomely for it! He wouldn't be just working on one small component of the company's tech but would get to work on all of it! Not only that, he had a beautiful woman assisting him. A woman he could actually talk to without swallowing his tongue! He hoped this would help him be able to speak with other women and maybe even meet someone he could date! He walked north towards the subway station his mind lost in his memories of Paloma's smile.\n\nHe was passing an alley a short distance from VRL when a hand reached out and yanked him off his feet, tossing him deeper into the dimly lit alley. Other hands took a grip on his arms and dragged him further in then yanked him up to his feet. He was being held between two very strong people he couldn't see.\n\nSuddenly a bright light was shining in his eyes and he blinked away the tears. He looked to see who was holding him and... he still couldn't see them. They were still shadows. His mind shied away from that as he squinted against the glare to look towards the headlights. Someone was standing between them, backlit.\n\nStanley couldn't see his features but he was tall and wearing a tailored suit. Broad shoulders and a slim waist. Maybe he was a swimmer? Stanley had heard that swimmers had this kind of physique.\n\n\"Mr.... Garin, is it? Stanley Garin?\" The voice was deep, rich, and cultured. He couldn't place the accent.\n\n\"Y-Yes? Who are you?\"\n\n\"Well, that doesn't really matter right now does it? Now that I know who you are I have what I need,\" the voice said with amusement.\n\n\"I- I don't understand. What do you want with me? Why are you doing this?\" Stanley was starting to get scared. Today was turning out to be really, really weird.\n\n\"Give it to me!\" the voice barked as he faced sideways towards someone out of view. Stanley saw his profile and the man had the perfect features of one of those Michelangelo statues.\n\nAn arm reached in towards the man holding a 4\" metallic cube. The man took it and walked towards Stanley until he was just two feet away. Stanley's eyes widened in surprise. The man was beautiful in an unearthly way. He was smiling at his prisoner, enjoying the look of awe, basking in it.\n\n\"Stanley, you are going to do me a favor. Not because you want to but because you won't really have any other choice.\" He gave Stanley a smile as if he found himself rather clever. \"You see, in this quantum paradox trap is a demon. A truly nasty one but it's my demon. It's under a binding to me so when I let it out of the trap it's going to enter your body and become you. Then you'll go home, get a good night's sleep and start your workday tomorrow as my personal minion inside VRL.\"\n\n\"No thank you please,\" Stanley said, his voice wobbling in fear. This guy was insane. Demons? Who knows what was really in that little box.\n\nSurprise flickered across the man's perfect features and he barked out a laugh. \"Oh my, that was precious! So polite! Sorry, I'm still going to do it. Nice try though.\" The man nodded to the people holding Stanley and they reached across to rip his shirt open to expose the skin of his hairless chest.\n\nStanley cried out in fear then felt the cold metal of the cube pressed against his sternum and looked down to see it. It was difficult to look at as the ornate patterns on the sides of the cube seemed to be moving in multiple directions at once. He glanced up to see the man smiling with his brilliant white teeth exposed.\n\nThen he heard a click.\n\nAn explosion of light and electricity blew the smiling man backwards, tossing him bodily up and over the car. The headlights blew out and the alley fell into shadow and after images of the lightning.\n\nThe shadowy men holding Stanley's arms weren't so lucky. They were tossed sideways to impact the brickwork of the buildings, like bugs on a high speed windshield.\n\nStanley was the epicenter of the explosion and didn't emerge unscathed. The rebounding shockwave returning from the brick walls on either side of him slapped him down to the ground where he lay dazed. His eyes were rolling but when they became accustomed to the low light in the alley he saw dark figures bundling the tall man into the back of the car. Then it screeched backward out of the alley and accelerated away. Stanley felt eyes watching him and someone stepped out of the shadows and stood before him.\n\nHe had to be hallucinating from whatever explosive had been in that box. The being standing before him was red, covered in blood, and naked. Very naked. He looked up to the face and yellow eyes glowed as they pinned Stanley in place.\n\n\"I should thank you for freeing me but... that's not what I do.\"\n\nStanley gagged on the odor of its breath. The stench of diseased rot and death dripped from the being and Stanley tried to move but his limbs weren't responding.\n\n\"You're small but you'll be an adequate snack.\" Sharp teeth flashed in its wide grin.\n\n\"PERHAPS I'D MAKE A MORE SUITABLE MEAL, FOUL DEMON!\" boomed a voice from the entrance of the alley.\n\nStanley turned his eyes over to see a large woman running towards them. The naked figure hissed in anger and spun, looking for an exit but the alley was closed at this end. It turned to face its attacker and leathery wings ripped from its back. It leaped into the air desperately flapping to get altitude. Shadows were filling the alley, cast there by its wide wings.\n\nThe woman running towards them gave a thunderous battle cry and leapt upwards. Huge wings of white burst from her back, their light driving back the shadows. The demon hissed louder and threw something dark at the woman.\n\nA shield of light appeared on her arm and deflected the black spear then she was upon the demon, driving the point of her own spear deep into its chest with a wet popping sound. It screamed and she heaved upwards on the shaft of the spear, ripping the razor-sharp tip up through the demon's corrupt flesh until it split the skull in two. Gore rained down onto the lane.\n\nStanley was lying on his back watching this scene from a fantasy movie play out in the air above him when his view was obscured by a wonderful and welcome sight. Paloma's beautiful face was looking down at him. Her lovely features were marred by an expression of fearful worry but the fact that she was worried about him made him smile. Her lips caught his smile and timidly returned it as his mind began to slide into oblivion.\n\nBefore he slipped away he saw the Valkyrie descending towards him, vast white feathered wings effortlessly slowing her descent, and he thought how similar she looked to Ms. Gunderan... if the woman had been into cosplay.\n\nChapter 2\n\nStanley needed to get home. The need pulled at him, droned in his ear and poked him with sharp sticks. Finally, his abused mind could take no more and pushed him into the conscious world.\n\nBefore his vision returned he heard voices. Arguing. Something familiar about the voices. Ah, that was Ms. Gunderan and the other softer voice belonged to... Paloma!\n\nHOME!\n\nHis eyes popped open as he gasped and Paloma squeaked in surprise.\n\n\"Mr. Garin is awake!\" her large blond companion said unnecessarily.\n\nHis eyes were still having some trouble tracking but he eventually found the sources of the voices and saw a stern and worried expression on the face of the Head of HR. Paloma's was lit up with a smile.\n\n\"How are you feeling Stanley?\" she asked.\n\n\"I have to go home,\" he blurted, looking around at the unfamiliar room.\n\n\"Until we know your place is safe it's probably better if you stayed here with me,\" Paloma answered with a worried look.\n\n\"Sure. I need to go home. Now.\" Stanley said and tried to get up. That's when he noticed he was tied to the bed. He looked at his wrists and saw silk ties securely binding him to the bed.\n\n\"Uh... what- what's going on?\" he asked cautiously.\n\n\"It's for your own safety.\" Ms. Gunderan said but she looked uncomfortable about his bindings as well.\n\n\"I have to go! Now! Untie me!\" Stanley was beginning to feel desperate. The need to get home was ringing like a bell through every cell of his body.\n\nPaloma sat on the edge of the bed and tried to calm him but suddenly his eyes rolled back and he arched his back in a huge gasp.\n\nAs he retreated into the peace of oblivion he heard a gentle but ancient voice in his mind whispering 'Too late...' and he was gone.\n\nSigrid stared at the unconscious young man on the bed with wide eyes. Nothing was what it seemed with him! She'd felt something when she first met him but Camila had given her a warning look to back off so she did. Then when his blood refused to be recorded? Camila intervened again.\n\nWhen she got the panicked call from Paloma saying someone was attempting to abduct her new boss Sigrid had come running. Why Paloma had been secretly following the young man she didn't know but she'd arrived just as a massive explosion released a demon from its containment trap. The energy needed to destroy the trap AND the demon's binding would have been considerable.\n\nShe hadn't had the pleasure of dispatching one of the infernal beings for a very long time so she'd enjoyed herself with this one.\n\nStanley hadn't appeared injured from being at the center of the blast but maybe he did appear dazed. He'd been unconscious when she landed at his feet. Paloma insisted she carry him to the young woman's condo as it was closest. Sigrid had wanted to drop him off at his place so he could wake and think it was all a crazy dream. Paloma insisted it was safer to take him to hers as the abductors might try again. The girl hadn't really explained why she'd thought it was necessary to tie him to her bed, aside from saying it was for his safety, but it looked like it had been a good precaution after all.\n\nThere was a quiet ticking noise coming from the bed which was rapidly speeding up. Paloma began to lean over Stanley's body to discover the source of the noise. Instinct made Sigrid grab her and jump back from the bed. She held the struggling girl against her chest then both froze as light begin to bend around Stanley. There was an odd twisting and folding which they had to look away from. With a sharp crack reality reset itself over Paloma's bed. Stanley was gone. In his place was something neither had ever seen before. At least not in person.\n\nA head full of long, thick, dark brown hair with broad, bone white ridged horns curling and twisting out of the hair near his temples. Dark brown furred and pointed ears stuck straight out from his head and dipped downwards slightly.\n\nIts face had Stanley's features but they were just a little longer. Still youthful in appearance but definitely no longer slim and slight. He now had a broad, muscular chest and powerful arms with three thick fingers and a thumb on each big hand. His clothing could not contain his new configuration and lay on him in torn shreds. Most dramatic of his changes was his lower half from his waist down. Densely furred and powerful, his legs had become those of some kind of goat right down to his large cloven hooved feet.\n\n\"What- what is he?\" Paloma gasped.\n\n\"I think he's a Satyr but his horns are bigger than I was expecting. I've never seen one before. They- they're supposed to be extinct!\" Sigrid said quietly. \"He, or I think more likely someone else, went to a great deal of effort to keep him disguised. I've never seen that kind of glamor before. It wasn't overlaying his true self with a false image. It was actually altering reality around him so he could... be... a Human. That's magic at a level I've never seen. Magic that alters reality... that's Master Level.\"\n\nShe thought back to her interactions with him and she could see no guile in his behavior at all. \"I'm not sure if Stanley was aware of this. He may not know what he really is.\" She spotted the silk ties that once bound him to the bed. They were loose on the surface of the mattress. \"Paloma, you need to secure him to the bed, tight this time, he looks much stronger than he did before.\"\n\nThe girl nodded and rushed forward to secure his arms and legs to the bed. She was a little too good at this activity for Sigrid's comfort. Once she saw he was tightly bound Sigrid walked out to get her coat, Paloma following.\n\nShe pulled it on as she looked into the wide eyes of the young woman. \"Listen, I'm going to go get your mother and bring her here. If he wakes keep him calm and secured until we get back.\" Pausing, she walked back into the bedroom. She pulled out her cell and took a quick picture as convincing Camila would be so much easier with it.\n\n\"Lock up behind me and don't let anyone else in!\" Sigrid said as Paloma followed her to the door.\n\nWith a final stern look in the young woman's eyes she was off.\n\nPaloma closed and locked the door. She touched the rune next to it to set the ward. If something Magic tried to enter they were in for a nasty surprise. She rushed back to the bedroom and stopped at the foot of the bed.\n\nShivers ran up and down her spine. A Satyr! She'd known Stanley was special the moment she saw him! It was her gift to sense potential. While her mother had a touch of it and at times used it in her business dealings, Paloma hid how strong her gift truly was from everyone, even her mother. It was one of the skills of being a Seer and she didn't want to become a tool for her mother's business dealings.\n\nWhen Stanley had first entered her waiting room she'd seen an aura of wild energies around him like she'd never seen before. He was completely unaware of it. She'd picked up pretty quickly that on the surface Stanley was what he appeared to be. A young man, awkward around women, more comfortable around technology, but at his core a decent person. She smiled as she recalled how he'd calmed at her touch.\n\nThere was one more thing about Stanley that she found almost irresistible. He was a virgin! Combined with this genuine innocence it had taken all her willpower to resist the urge to tear off his clothes and feast on his essence. Of course, her mother would have demoted her to working in the cafeteria with the hags if she'd failed the most basic lesson her kind was taught the moment they reached sexual maturity.\n\nWith their risk of being exposed increasing every year due to the Human's ever more clever surveillance technology, the Hidden Races had to remain vigilant and take every precaution.\n\nShe wanted so much to relax and allow her own glamor to dissipate but she knew Stanley was going to have a hard-enough time accepting his own change. One thing at a time.\n\nPaloma stood watching him sleep and admired his new body. He still had a sweet innocent look on his face but his torso and arms were giving her not so innocent ideas. The buttons that hadn't torn free in the alley had all popped due to his expanding proportions and the seams were torn so she reached over and spread the two sides apart to get a good look at his bare chest. For all the hair, well... fur really, on his lower half, his torso was remarkably free of hair. Even his thick arms were bare of hair. His face was baby smooth under her fingertips.\n\nThe long hair on his head was also silky smooth and so wonderfully luxurious as she ran her fingers through it. Tingles ran up and down her body and she moaned. Biting her lip she forced herself to take a few steps back from the bed.\n\nHer breath was coming in gulps and her body ached for release. Danger signals! What was taking Sigrid so long to bring her mother?\n\nSigrid was trying to get past Felix to Camila but her assistant insisted his boss could not be disturbed while she was on this call to Japan. So here she sat stewing in the waiting room.\n\n\"How long do these calls normally take?\" she finally sighed with exasperation.\n\nFelix shrugged and looked over at her. \"It varies.\"\n\n\"And there is no way you can get a message to her?\" Sigrid pushed.\n\n\"I was given strictest instructions not to disturb her in any way. The Japanese official she is speaking to is very sensitive to the slightest sign of disrespect. Her cell phone is off and her office line is muted. Her entire attention is on this man.\" Felix explained.\n\nSigrid growled and sunk into the sofa a little deeper. She hoped Paloma wasn't having any trouble with Stanley.\n\n\"WHAT- WHAT'S HAPPENED TO ME!?!\" Stanley bellowed as he looked down at his body in shock.\n\n\"Stanley, please just relax! Everything is ok.\" Paloma said in a calming tone and rested her palm on his chest. She could feel his heart beating strongly and rapidly under his dense muscles. More tingles shot through her body and she bit her lip.\n\n\"OK?!? IT'S NOT OK! MY BODY ISN'T MY BODY ANYMORE! AND I'M STILL TIED DOWN!\" he yelled as he pulled at his bindings.\n\n\"They're for your safety! Please calm down! Take some deep breaths!\" she pleaded as she placed both of her hands on the thick slabs of his chest muscles. Her self-control was beginning to crack.\n\nStanley tried to do as she said but he was sure he'd lost his mind. He looked to the right and saw his right arm, thick with muscle and his hand- THREE FINGERS?!? He pulled once more at the silk ties but they were too well knotted to slip free. He lifted his head which felt strangely heavy. He saw Paloma's lovely hands resting on his chest. It didn't look like his chest but he could feel her hands on him, could feel her kneading the muscles. Looking further down just increased his distress. What happened to his legs? Why were they covered in fur?\n\n\"Oh my god! I've mutated? Did that guy in the alley inject me with some weird experimental drug?\" he moaned.\n\n\"Stanley, you didn't mutate! This is just your real shape, you were wearing a disguise, a glamor over your true self before. It wore off or was damaged in the explosion in the alley,\" she tried to explain.\n\nHis eyes snapped to hers. \"You were there? Did you see what happened? Why were you there?\"\n\n\"I- I followed you from work. I saw something in your potentials, your possible futures, that concerned me so I followed you. I saw them abduct you. I called for help then I watched them try to possess you with the demon.\" Paloma was running her hands over his torso, enjoying the feeling of the hard muscles of his stomach.\n\n\"Demon...\" Stanley gasped as her touch was confusing his mind and making him feel... really good.\n\n\"Yes, a demon. I heard the man say he wanted to use you as a spy inside my mother's company. Perhaps Mother knows who he is.\" She gently pinched his nipples and Stanley gasped once more and writhed on the bed.\n\n\"What- what are you doing? Paloma!\" he asked trying to get her attention. She looked up at him and he saw her licking her lips.\n\n\"Oh Stanley, I'm sorry to spring this on you but the world is filled with creatures like you and me. Magical, wonderful beings who stay hidden from Humans for our and their safety.\"\n\n\"I'm human!\" he asserted.\n\nPaloma slid her hands out along his strong arms and sighed as she brought her face down closer to his. \"No Stanley. Your disguise was Human but your true self is this. I've never seen a glamor so complete that even the wearer is unaware of what they are.\" Her body was burning with need and he was so delicious! Her control was gone. She brushed her lips across his and pulled back teasingly.\n\nStanley thought he heard an odd emphasis when Paloma said 'human'. It didn't quite sound the way he said it.\n\n\"Wait! Wait! You said- you said creatures like you and me but you're obviously human!\" he asserted.\n\n\"But I'm not! You're only seeing my disguise. I was going to take it slow but you've got me too excited,\" she cooed.\n\nDropping your glamor was something that was never done in public or any place that wasn't considered to be secure. But here in her bedroom... in her own private sanctuary, here she could relax her guard and allow her glamor to dissipate. She looked down at Stanley's true form. Since he was no longer hidden she could allow herself to be who, and what, she was.",
        "Concentrating she felt the enchantment slip into its paused state. Like a falling curtain of glitter the overlay she wore to hide her true self from the world dissolved. Beneath it her skin shimmered iridescently between deep blue and black. Her hair was still the color of obsidian but it was thicker and fell to her mid-back. Horns, much smaller than Stanley's, slimmer and shorter rose from her temples and curled back. Her facial features were much the same as her glamor showed, though her eyes were a little larger and her lips were fuller and black, making her white teeth gleam. Her ears had pointed tips which aimed up and back.\n\nAs his wide eyes moved down her body he froze. She was naked! Her tits were... big! Bigger than he'd seen when she showed him some cleavage. Her curves were all more exaggerated than before but he couldn't see more as she was crawling up his body. Then she rubbed herself over his torso. God! That felt so good! He was responding to her quickly.\n\nShe pressed her amazing tits against his chest and looked down into his eyes. The gold in her eyes was much more prominent now. He swore they were beginning to sparkle.\n\n\"What are you?\" he breathed, mesmerized by her beauty. Why he wasn't terrified by her sudden transformation and her alien appearance was lost in his desire and need for her.\n\n\"I'm a Succubus,\" she purred but he didn't seem to understand what that meant.\n\nShe saw the awe glowing in his eyes and her need for him exploded. Then she felt something hot pressing insistently against her thigh. Something big!\n\nPaloma slid to the side to look downwards. Stanley lifted his head to look down as well.\n\n\"WHAT THE FUCK IS THAT?!?\" he cried in shock.\n\nRising up from between his densely furred thighs and through the tattered remains of his pants was something that had no business being attached to him. He knew how small he was down there and he'd finally come to terms with it. Stanley the human was endowed with a member on the small side of average. Ok, well on the small side. What was boldly standing at attention between his legs was frighteningly thick and impractically long... in his opinion. There was such a thing as too much of a good thing! This wouldn't fit in the places he wanted... one day to... put... it in. Worse than that, it didn't even look like it belonged to a human!\n\nStanley's eyes once more took in his blatantly non-human lower half. The region this new development grew from. \"oh god,\" he whimpered quietly.\n\n\"Mmmm, Stanley! It's magnificent!\" Paloma cooed and reached down to wrap her fingers around it. She thrilled over the fact that her fingers couldn't close around it. When he moaned with need at her touch, shivers ran through her body. Her need was getting out of control and she had to feed, soon! Gripping it up near the tip she pulled down and the skin rolled back to expose a deep purple head.\n\n\"It's got spikes,\" he groaned in dismay.\n\nShe admired the thick head which capped the heavy shaft and indeed there were small pointed projections along the ridge of it. She ran her thumb along them and discovered they were stiff but soft.\n\n\"OH! OH FUCK!\" he cried out from the sensation, arching his back.\n\nShe couldn't wait any longer and slipped down the bed to press her tongue against his hot flesh. He tasted so good! Her long candy pink tongue slipped out to wrap around his shaft three times and squeezed.\n\n\"OMIGOD! Oh geezus! What- what are you doing?\" he asked.\n\nShe chuckled sexily, unable to talk with her tongue stroking his cock up and down like a wet fist. When she reached the head she uncoiled her tongue and licked at the spikes and purred at their silky smooth texture.\n\n\"OH! AHHH! FuckFuckFuckFuckFuckFuck,\" Stanley was mumbling as his body experienced this bliss for the first time. It was quickly becoming too much for him. He felt something happening in his body. A pressure and a need.\n\nShe stretched her mouth wide and forced his thick cock deep inside until it hit the back of her throat. The points rubbed against her palate and she squirmed at the tingling sensation. God she wanted him! She wanted all of him! Taking a deep breath Paloma drove forward pushing the thick flesh deep into her throat.\n\n\"GAH!!!\" Stanley bellowed as his orgasm suddenly struck blasting ropes of cum deep into Paloma's throat.\n\nShe squealed at the sudden flood but her eyes rolled back as the pure essence from his cum flowed through her being. This was virgin cum at its finest quality but above this was a strange energy, something wild, primal, and natural that soaked into every cell of her body, feeding her like she'd never experienced before.\n\nHer throat automatically squeezed and milked his thick cock as she swallowed his seed until he was finally spent. Completely satiated from the large meal she'd taken from him, she slowly pulled him from her throat, the ridges on the head stroking and tickling her all the way out.\n\nStanley was panting and his eyes were rolling from his first experience. It had been so quick! Was it always so fast? He hadn't imagined his first time would be like this. The absurdity of that thought struck him. How could he have imagined this? He tugged at the ties. He didn't want to be used like this anymore.\n\n\"Untie me,\" he gasped quietly.\n\nPaloma was resting on his chest, barely remaining conscious as her body tried to drag her down into sleep to absorb the glut of energy she'd consumed. She wasn't able to think straight. She felt so comfortable and content lying on his chest.\n\n\"Untie me,\" he whispered again.\n\nShe surfaced once more and extended her claws. The nails of her fingers and toes rapidly grew into three inch curved blades. She stretched out over his body, dragging the claws outwards along his arms and legs, gently scratching him until she reached the silk ties. She stopped as a thought flitted through her groggy brain but she couldn't catch it. Something she needed to do or not do... it didn't matter. She began to slip away once more.\n\n\"Untie me,\" he breathed.\n\nHer claws snagged and tore through the silk as if it were tissue paper and he was free. As she relaxed once more the claws shrank back to become her regular nails again.\n\nHe waited until her breathing became deep and even, signalling she was in a deep sleep. Then he slowly eased her from his body until he was able to slip out from under her. He slid off the bed and stood. He expected to wobble or teeter on these new legs but they just felt like... legs. He knew they bent in directions he wasn't used to but as he carefully made his way out of the room he felt completely stable. If anything, they felt more stable than his original legs.\n\nClosing the bedroom door, he took off his shredded pants. His wallet, subway pass, house keys, phone, and the new access card were all still in the pockets. He took them out and placed them on the coffee table in the living room. Then he went looking for a mirror.\n\nHe wandered around the lovely condo until he found mirrored closet doors by the front door. He froze. His hands went up to the large ram horns curling out of his skull. He touched his furry ears and watched them flick and bob as he'd tickled them.\n\nAnd what happened to his hair! He always got a sensible short cut once a month like clockwork so he could tame the little waves that would appear. Now his head looked like a mop! So much wavy, messy hair!\n\nHe looked back up and his face was his... almost. It was stretched top to bottom a little. He ran his hands over his face then stared at his hands. He realized he wouldn't be able to type with fingers this thick. The precision work of assembling servers and PC's would be impossible too.\n\nHe shook his head violently and stared back at himself. Who was he kidding? He couldn't go back to his life looking like this! He couldn't even go outside! He was... what the HELL WAS HE?\n\nHe glanced back at the bedroom door. What had Paloma called herself again? A Succubus? That sounded familiar but he couldn't place it. He'd certainly never seen anything like her before. His erection throbbed with need as he thought of her. He scowled down at it. It was like it had a mind of its own! Thinking about the beauty in the other room was charging his need for her again and he caught himself with his hand on the door handle.\n\nShaken, he took a step back and walked back into the living room.\n\nWhat was he going to do? His new life with his awesome new job was... wait a minute! Paloma looked human when she was at the office! Maybe she could show him how to do that too! He was in the bedroom standing beside the bed before the thought had finished forming in his mind. He stopped to admire her lush curves and he felt a warmth rush over his body. His cock grew harder as he picked up her scent. He inhaled deeply and his need grew.\n\nHe was in trouble.\n\nFelix looked at Sigrid the moment the light switched off on Camila's phone. \"Now.\"\n\nShe nodded gratefully and rushed to the door. She gave a firm knock and stepped in almost before she heard her boss acknowledge it. She quickly closed it behind her.\n\nCamila looked up in surprise as Sigrid rushed across the room. \"What's wrong?\"\n\n\"Someone tried to snatch our new CIO tonight. Paloma was following him and called me when it happened. I got there just as they tried to use him as a host for a Demon-on-a-Leash.\"\n\nCamila gasped and stood up but the tall blond just raised her palms to calm the woman. \"The protection on him that blocked his blood from being recorded kept the demon from entering but the explosive backlash tossed his attackers back, broke the demon trap and its binding.\"\n\nCamila's eyes widened but once more Sigrid held her palms up. \"I dispatched the demon, that felt good, but Stanley was knocked unconscious. Paloma argued that his place wouldn't be safe until we knew who tried to trap him. We took him to her condo.\"\n\nThe CEO's face drew into an angry scowl. \"She's a Succubus! A young one. He's a virgin! She's going to feed from him!\" She began to move out around her desk.\n\n\"There's more.\" Sigrid said grimly.\n\n\"What?\"\n\n\"Whatever his protection was must have been drained by the explosion. It ran out when we had him tied to her bed. He's not Human.\"\n\n\"WHAT?!?\"\n\nSigrid fished her phone out and brought the picture up and showed it to Camila.\n\n\"A SATYR?!? Oh my god! You left a young Succubus and a young Satyr alone together?!?\" Camila gasped and raced for the door. \"Felix! Have my car waiting downstairs! Have Mr. Duncan meet me there! Sigrid, let's go!\"\n\nPaloma was so hot! Her skin tingled with need. As she was dragged from the depths of her rest her eyes cracked open and she felt eyes on her. She felt their caress on her body and she began to squirm as the tingle began to be concentrated on the sensitive flesh between her legs. She felt herself growing wet and she began to pant. She wanted him, this watcher. She felt his hunger radiating from him in waves. His hunger was raw and untamed. Unconsciously she drew her knees together and lifted her ass up from the mattress whimpering with her own need for him to touch her, taste her, and take her.\n\nShe jumped when large hands gripped her hips and yanked her closer to the end of the bed. She cried out in joy when his tongue roughly stroked across her dripping pussy lips and sucked in her breath when his tongue thrust deeply into her wet channel. She moaned in disappointment when his tongue pulled away but screamed silently when his thick cock replaced it and drove deep into her body. It stretched her wide and filled her completely and then some. Her voice had failed her though she continued to scream as he fucked her roughly with his desperate hunger.\n\nShe was losing her mind. It was so good! It was too good! She'd never had someone take her so passionately. She'd had a few men get rough with her, play the dominance game or just been cruel. These were weak games compared to what she was experiencing now. There were no cruel intentions here, just hunger and intense need. Her body was responding automatically, rushing up on her release yet he showed no signs of weakening or even slowing. She- oh fuck- she wasn't going to- FUCK! last!\n\nA Succubus' body was the perfect receptacle for a Satyr's lust as it adjusted to fit his size and took the driving impacts without damage.\n\nThat said, there were limits to how much pleasure Paloma could absorb. Stanley still showed no signs of slowing or reaching his own release as she crashed through a jaw clenching, full body earth tremor orgasm which rolled on and on until she was spent.\n\nStanley pulled free from her body and she looked back weakly at the heavy appendage bobbing and swaying before his body. He flipped her onto her back and tossed her further up the bed as she squeaked. He leapt on the bed kneeling between her legs and guided himself into her wet opening, driving himself deep once more. She was stunned to feel herself respond.\n\nHe captured her mouth with his and kissed her. She took his face in her hands and guided the kiss, slowing him down and his hips slowed down as well. Soon they were moving together, languidly, enjoying the sensations as they arrived and passed. Paloma heard Stanley moan and knew he was finally getting close to his release. She was grateful as she was exhausted and was about to hit her second peak as well.\n\nShe heard him gasp and then he drove himself deep one last time, grinding himself against her once he reached bottom. Her pleasure was sharp and intense and she cried out as she clung to him, riding her pleasure higher. Stanley came explosively, roaring his bliss as his hips twitched and rolled, surge after surge of cum firing deep inside her.\n\nPaloma once more felt the wildfire energies sweeping through her body but there was nowhere for it to go, her cells were already saturated. She cried out as more and more poured into her and her body began to change in reaction to the overflow. Her blue-black skin started to lighten, the energies bleaching her pigment. Once the pigment was replaced it looked for other places to go.\n\nThe sound of running feet came from outside the bedroom and Mr. Duncan burst into the room. He jumped to the bed and pulled Stanley off of Paloma, wrapping his arms under Stanley's and behind his head, pinning him.\n\nMs. Villamor and Ms. Gunderan rushed in after the Security Chief and took in the scene. Seeing her daughter's skin becoming a pearly white she turned on Stanley and saw his erection was still surging. Surprising everyone she dropped to her knees and took his cock deep into her throat.\n\nStanley cried out and his body spasmed as the halted orgasm suddenly continued. He jolted three more times as the rest of his cum was swallowed by the woman.\n\nShe squeezed the remaining cum from his relaxing cock as she pulled it free from her mouth. She rose back to her feet as Stanley slumped in Mr. Duncan's grip.\n\n\"Sit him in the chair.\" Camila said pointing to the corner as she used the tip of her finger to scoop a little spilled essence into her mouth.\n\nSigrid was red faced with shock and embarrassment as she handed her a tissue. \"What the hell did you do that for?\" she growled.\n\nCamila's eyes flashed a warning at the tall woman. \"Paloma has taken an overdose. I had to know if his energy is toxic. The small sample I took was safe enough for me and now I know she's not in any danger.\"\n\nIn truth, the 'small sample' she'd taken was currently flooding her body with waves of bliss she was struggling to hide. She blinked as she looked at her daughter's shimmering skin. She reached out to touch the young woman's thigh with her fingertip and Paloma gasped and sighed in her sleep. Camila's head snapped back as a wave of wild energy surged up her arm, the overflow bleeding off of her daughter. She blinked herself back to self-awareness in the arms of Sigrid.\n\n\"My god! She's saturated!\"\n\n\"What does that mean?\" Sigrid asked as she held the woman carefully until she was able to stand on her own.\n\n\"I- I don't know. I've never seen anyone absorb that much energy. She's going to need to burn it off. She can't contain any more.\"\n\n\"What about this one?\" Mr. Duncan drew their attention back to the corner where Stanley sat on the chair with his elbows on his knees and his head in his hands. His cock had finally relaxed but remained a... sizable distraction for Camila while her body was still buzzing happily. She turned to Sigrid.\n\n\"Could you find something for him to wear in the closet?\" she asked the tall blond. Camila approached Stanley who looked up when he saw her feet.\n\n\"Are you alright Stanley?\" she asked gently.\n\nHe made a stifled snorting sound and looked at her incredulously. \"I don't think so! What do you think?\"\n\nShe frowned. Sigrid returned with a robe. A very large robe. Camila looked back at her daughter and sighed. She took it and handed it to Stanley. \"Please put this on and we'll talk out in the living room.\"\n\nHe took the robe and stood. He put it on and tied it tight around himself. It was big, even on his new body and reached the ground. He saw it had a hood as well and wondered what kind a dressing gown this was. With a troubled glance over at Paloma, he followed Camila and Sigrid out into the living room.\n\nThe two women sat on the couch and Stanley took a chair beside it. Mr. Duncan sat on a stool near the door. Guarding the exit.\n\n\"Was this your first time?\" Camila asked.\n\nStanley reeled back at the personal question. This woman was his boss, not someone he wanted to discuss losing his virginity with!\n\nCamila closed her eyes and shook her head. \"The first time you changed.\"\n\n\"Oh!\" Stanley's face flushed. \"Yes. I don't understand. What the hell am I? How did I... change? Can you tell me how I can change back?\" he gasped. \"And... what the hell is a Succubus?\"\n\n\"Have you never read any books on fantasy, folklore, myths and magical beings?\" Camila asked.\n\nHe frowned and shook his head. \"That's all nonsense and a waste of time. Superstitions are a weakness of the mind. There are far better things to occupy a mind with like Science. Real information to absorb and understand,\" he said firmly.\n\nCamila shared a look with Sigrid and caught the Security Chief's wide amused grin.\n\n\"Stanley, you're a Satyr. A creature out of the myths you are denying as nonsense,\" she said gently.\n\nHe looked at her as if she'd just taken his candy, poisoned his puppy, told him Santa Claus was real after all and the lunar landings were faked on a sound stage in Hollywood.\n\n\"A Succubus is another creature from those myths.\" She looked down at her clasped hands to arrange her thoughts. \"Let me put it this way. Your perception of reality has just been expanded to include a new field of study. The Hidden Races. That's what we are and that includes you as well. Satyr's are... ancient. There hasn't been a recorded sighting of one in... millennia. It was thought they were extinct yet here you are!\" She looked at Sigrid. \"You said his glamor wasn't an overlay.\"\n\n\"That's right. His disguised state was truly Human. Reality itself bent around him to hide his true nature. When it... powered down reality unfolded and here he was,\" Sigrid explained.\n\nStanley realized he was hearing it again. The odd emphasis on 'human'. He couldn't explain it but he could hear it. First Paloma, now Ms. Gunderan was doing it. He pushed that aside as his mind latched onto another possibility.\n\n\"Wait! Wait! What if... what if my human self is the real me and THIS is the disguise!\" Stanley gasped desperately. He looked at the others and saw discomfort in the women's eyes and outright pity in Mr. Duncan's eyes. He looked back at Sigrid. \"You said reality was folded so why couldn't that reality be as valid as this one?\"\n\nSigrid thought about that and finally nodded. \"I cannot deny the 'realness' of the reality you held before you changed as it was as valid as this one. However, it begs the question, why hide true Human nature with that of a member of an extinct race when every member of the Hidden Races is forced to use a glamor to hide themselves as Human just to survive?\"",
        "Stanley's initial excitement at the woman's acceptance of his idea faded as her subsequent argument sounded entirely too logical and reasonable.\n\n\"Let's set that aside for now. The question is, how do we help Stanley get his disguise- or alternate reality, back in place?\" Camila said to calm the young man.\n\n\"Are you wearing an item the spell is anchored to? An enchanted ring, bracelet, or pendant? Even an earring would do,\" the big Security Chief suggested but Stanley just shook his head.\n\nSigrid sat forward. \"There was a strange ticking just before the conversion. The ticking sped up then... you changed.\"\n\n\"Where was the ticking coming from?\" Camila asked.\n\nThe blond shook her head. \"We couldn't tell. It seemed to be coming from somewhere on his body but I wasn't close enough. Paloma was closer. I barely had time to pull her away before it happened.\"\n\n\"Paloma won't be in any condition to answer questions for a while,\" Camila said with a frown.\n\n\"I- I didn't hurt her, did I?\" Stanley said hesitantly.\n\n\"No, our Mr. Duncan got to you just in time. You should know something about Succubi. We feed by draining energy from the men we have sex with. That can be energy directly from their life force which is the most filling but is dangerous to the man or it can be from his bodily fluids, preferably his sperm. Satyr's are beings of intense sexual appetites and your,\" she saw Stanley was getting embarrassed so she toned it down, \"ejaculate contains a tremendous quantity of purest energy. I've never felt anything like it. A palmful is likely enough to sustain an adult Succubus for two to three days, maybe longer.\" She glanced back at the door. \"She received more than a small amount, didn't she?\"\n\nHe couldn't speak so he just nodded.\n\n\"She's having trouble containing the energy. It will eventually dissipate and she'll have to burn the excess off but she won't need to feed for some time. Her color change is concerning. We'll have to wait and see. It shouldn't affect her ability to activate her glamor enchantment.\"\n\n\"What is magic? Is it energy?\" Stanley asked, trying to get his science based belief system to accept this new reality.\n\n\"Yes, exactly. Some of the Hidden Races can tap into this energy and directly manipulate it. Make it do things that affect the tangible world around us. They're wielders. For others, like Satyrs, Succubi, and Valkyries, our abilities are fed by this energy. We're more of a... conduit for the energy.\"\n\n\"But where does the energy come from?\" Stanley asked.\n\nCamila looked at Sigrid as this was quickly going beyond her knowledge.\n\nSigrid picked up the conversation. \"Think of here and now as a single layer. Everything we see and feel is our reality. There are overlaying layers, alternate realities which are as real as ours but are vastly different in their energy levels. Some of these layers interact and bleed their energy into our layer. Some beings adapted to use this energy and were shaped by it.\"\n\nStanley nodded as his brain got a handle on the information. He suddenly jolted. \"What time is it?\"\n\nCamila checked her watch. \"It's almost midnight.\"\n\n\"SHIT! I have to get home!\" Stanley leapt up then stopped to look down at his feet... hooves. His face fell. \"How am I going to be able to go home when I look like this! How can I face my Baba looking like... like a goat man! She'll have a heart attack!\"\n\n\"Your Baba?\" Sigrid asked.\n\n\"I live in a room in my Grandmother's attic.\" He frowned once more at his cloven hooves. \"I was so looking forward to having a job where I could afford my own place! Now that's all messed up!\"\n\n\"Stanley, this isn't going to affect your job. We'll get your disguise back.\" Camila insisted and she saw he took a little comfort in her assurance.\n\n\"Can't you just call her?\" Sigrid asked.\n\n\"She doesn't have a telephone. She... doesn't like technology. She's very old school,\" he admitted. \"While I'm living under her roof I have to be home by no later than 10PM every night. I'm in so much trouble!\"\n\nThe others smiled at him and he realized how silly that must have sounded. He grinned self-deprecatingly. \"She's really sweet but she's also really strict.\"\n\n\"Are you related by blood?\"\n\nStanley blinked at the odd question. \"Of course, I am. She's my Baba!\"\n\n\"Then it shouldn't be a problem bringing you home in this condition. Call it woman's intuition but I believe it's highly likely that she knows. If you like I can approach her and test the waters before you face her.\"\n\nThe more Stanley thought about going home, the more he felt like he had to. There was almost a compulsion to get there. He nodded.\n\nThey all stood and Camila helped him raise the hood and he was pretty much covered. If it hadn't been for the hooves that showed with each step he might have been able to pass for completely human with an oddly wide hood. He loaded the robe's one cavernous pocket with his stuff from the coffee table.\n\n\"I'm going to check on Paloma one more time then we'll go.\" Camila said and Sigrid followed her into the bedroom leaving Stanley alone with Mr. Duncan.\n\nHe looked over at the big man. \"Are you human?\"\n\nThe Security man stared at him expressionless for an uncomfortable period of time then shook his head with a wide smile. \"Lycanthrope.\"\n\nStanley shook his head to indicate he didn't know what that meant.\n\n\"Werewolf.\"\n\nStanley's eyes widened. He knew that word. The man's smile just got wider. He did have a lot of sharp looking teeth.\n\n\"You're a newbie so I'll let it go but a word to the wise. Never ask anyone questions like that,\" the big man growled quietly. A chill ran down Stanley's back.\n\nCamila and Sigrid rejoined them and they let themselves out of the condo and locked it up. Stanley walked closely behind the two women with Mr. Duncan directly behind him. He kept his head down and his hood hiding as much as it could. They took the elevator down to the lobby and walked out the front door. They moved out of the range of the building's cameras where Camila's limo picked them up.\n\nSigrid pressed the intercom and gave Stanley's address. The limo got underway as Stanley stared at the big blond nervously.\n\n\"What?\" she asked.\n\n\"Did- did you read my mind for my address?\" he said, his mouth going dry.\n\n\"Stanley. I work in Human Resources. You gave me your address when you gave us your resume,\" she said gently.\n\nHe sagged back in the chair. \"I'm sorry. Everything is upside down and I- I don't know which end is up anymore. It's like... It's like I've discovered that all the stuff I thought was a frivolous waste of time is now on the final exam and I didn't study any of the material!\"\n\nThat drew chuckles from the ladies and a smile from Mr. Duncan. They rode on in silence until they finally reached the outskirts of the city.\n\n\"That's a long commute!\" Camila said looking at her new employee.\n\n\"Another reason to get an apartment closer to the office. That and avoiding the 10PM curfew,\" he said with a small smile.\n\nThey pulled onto a side road which dipped downwards and found themselves driving into a dense fog. Camila shared a look with Sigrid then her Security Chief. Stanley caught her nervousness.\n\n\"There's a bog on either side of the road here so it often gets foggy,\" he assured them.\n\n\"Any other houses on this road?\" Mr. Duncan asked.\n\n\"Uh, no. Just Baba's.\"\n\nThey reached a gate so the limo stopped.\n\n\"Maybe I'd better come with you. She can hear my voice...\" He paused. \"Well, it's deeper but I think she'll know it's me. She's not fond of strangers.\" Camila nodded and they got out.\n\nStanley in the lead, they went through the gate and got three steps in when Camila, Sigrid and Mr. Duncan just stopped. Stanley made it two more steps before he realized he was alone. He turned around and saw them looking past him with fear in their eyes. He turned and saw Baba standing on the front steps.\n\nThe woman was old, deeply wrinkled, her body bent and weathered with age but she had a strength in her eyes that was fearful to look upon. Her peasants dress was worn and faded. She slowly stepped down the stairs as she kept her eyes on the group.\n\n\"I'm sorry I'm late Baba but I've had... quite a difficult night.\" Stanley confessed.\n\n\"Lift the hood. Let me see you boy,\" the old woman said slowly.\n\nSighing, he lifted the hood and pushed it back. He watched the old woman's face but she showed no fright or surprise, just regret and annoyance.\n\n\"You knew, Baba?\" he whispered.\n\n\"Yes, boy. I knew. You... you weren't supposed to know. Not for a long time yet.\" She looked in annoyance at the three standing behind him. \"What to do with these meddlesome creatures. Show yourselves!\" she barked sharply.\n\nTheir disguises ripped away.\n\nCamila's skin was deepest ruby red and black and shimmered even in the dim light of the courtyard. Stunningly beautiful with voluptuous curves, her sensuality pulled at Stanley's body but the fear in her eyes as she watched the crone on the steps dampened his lust.\n\nSigrid hadn't changed but he could see her wings were pinned to her back and glowed dimly. She definitely looked uncomfortable.\n\nThe change for Mr. Duncan was the most dramatic. Standing upright on wide paws with obsidian claws, his hugely muscled body was covered with blood red fur. His head was that of a huge wolf complete with a muzzle full of deadly teeth. His tongue was lolling in fear and his teeth gleamed.\n\n\"Baba?\" Stanley turned back to his grandma.\n\n\"What is it boy?\" she said with a frustrated tone.\n\n\"Please, these are my friends. They saved me tonight!\" he said.\n\nHer eyes snapped to his and he felt the impact of her stare. She was looking for truth. He'd suffered this from her before so he relaxed. He knew he was speaking the truth.\n\n\"Ms. Villamor gave me a most wonderful job at her company. Doing what I love! Earlier tonight a man, a strangely handsome man, attacked me and tried to put a... a demon inside me. There was an explosion instead. Ms. Gunderan arrived to fight and kill the demon. She saved me. I was unconscious and they took me someplace safe but I changed into... this.\"\n\n\"What about this beast? What value could he have to you?\" the old woman clearly looking for someone to punish, growled while pointing a crooked finger at the werewolf. It began to whine.\n\n\"Mr. Duncan... he saved me from hurting someone... someone I like very much. Please Baba, I don't understand what's happening but do they have to fear you? Do I need to fear you?\" he said quietly.\n\nOld eyes held his and she growled. She swatted his cheek but he recognized the hit as her way of telling him he'd won the point. The others suddenly sagged and gasped for breath.\n\n\"You know who it was that attacked the boy?\" Baba asked Camila.\n\nThe woman nodded. \"I- I believe I may know. An old business and ex-life partner. Most likely attempting to get inside information from my company.\"\n\n\"BAH! Such bothersome trivia. A plan long enacted has taken an unexpected turn. There is nothing for it but to allow it to follow its new course.\" She looked at Stanley contemplatively. \"Your true destiny may yet come to pass.\"\n\nThe ancient woman turned and made for the stairs. She stopped on the second one up and turned back to Stanley. \"You begin a new life today. This is goodbye. You will not return. I will offer you just one favor.\"\n\n\"Goodbye? But... you're my only family-\" he gasped, stepping closer to her.\n\n\"One. Favor,\" the crone growled.\n\nStanley swallowed and nodded. \"Could- could you make me human again?\"\n\nHer eyes trapped his again and he fought back the tears that threatened to get free.\n\n\"Know that this is your true self. I can give you back the false reality you believed was who you were but it cannot be permanent. Each day you must revert to this form for an extended period of time. While you lived with me I ensured you did this while you slept.\"\n\nHe nodded as what else could he do. She gestured for him to get closer and once he did she ran her thumbs over his eyelids then lifted his right hand. He could suddenly see he was wearing a ring made of some kind of black stone on his ring finger. He jerked in surprise seeing it there for the first time. She swatted his cheek to get his attention. He looked into her eyes again.\n\nShe spoke quietly so the others could not hear nor could they see what they were doing. \"Don't play with this ring. Turn it only for the purpose of changing. Turn it completely around in one continuous motion then reverse it all the way back, again in one motion. This will initiate the change.\" She looked into his eyes until he nodded to acknowledge the instructions. She stopped whispering as she continued. \"Remember, you must return to your true self for an extended period of hours. This allows it to recharge. More importantly if you don't then your body will forget its original shape and you will not survive the switch when the ring discharges. This is all I can give you,\" she said gruffly.\n\n\"Thank you, Baba. For everything,\" he said.\n\n\"Go,\" she snapped.\n\nHe nodded and pulled the hood back up. Not to hide his horns but his tears.\n\nThe group made their way back to the limo, slipping behind their glamor disguises once more. Once inside the vehicle, the driver got them moving back to the city. Stanley leaned against the door, turning his face away from the others.\n\nSitting next to the young man, Mr. Duncan leaned forward to whisper to Camila. \"Baba Yaga?!? Seriously?\" He spoke softly but his tone was incredulous and fearful.\n\nShe glanced over at Stanley but he made no indication that he'd heard. She looked back at her security officer and saw his hands were shaking, badly. Then she noticed hers were too. She looked at Sigrid but the woman was watching Stanley intently.\n\nThe large blond woman gestured for the security chief to swap places with her and she moved to sit next to Stanley. She touched the young man's shoulder and when he turned to face her she pulled him into a hug. He froze for just a moment then he was hugging her in return and the tears started to flow. He cried silently against her shoulder as she held him, his body shaking with the intensity of his grief.\n\nThe others watched with guilty looks. They'd forgotten what it meant to Stanley to lose his only family. For him, he'd known her only as Baba, the grandmother who raised him. He had no knowledge of her position as one of the most powerful and terrifying witches of the old ones.\n\nAnd now he was homeless, without even the clothes on his back.\n\nWhen his tears finally ran dry he pulled back from the woman and she smiled in his face. \"For tonight, you will sleep on my couch. Tomorrow we will find you a place of your own.\"\n\nHe nodded then looked into her eyes. \"Thank you.\" She nodded.\n\nCamila spoke with the driver and the limo eventually stopped before a brownstone on a quiet street.\n\n\"We'll see you in the morning, alright?\" Camila said as Stanley prepared to follow Sigrid from the car. He looked at her, nodded then exited the vehicle. He stood on the street and watched the long car drive away.\n\n\"Stanley, come inside. You've had a long day.\" Sigrid said gently and he carefully lifted the hem on his robe to climb the steps up to the door. They went inside and she locked up behind them. She guided them into her living room and came to a halt so suddenly he bumped into her back.\n\n\"What-\"\n\n\"Quiet. Someone's been in my home,\" she growled quietly.\n\nStanley peered around her and saw two cardboard boxes on the coffee table. On top of one of the boxes was a painted stone. His breath caught in his throat. He stepped around the woman.\n\n\"Stanley, no!\"\n\nHe looked back with a sad smile. \"It was Baba. These are my things. I don't know how but she left me my things.\" A tear rolled down his cheek as he picked up the heavy fist sized stone. It was a meteorite actually. He'd found it on one of his walks in the forest with Baba when he was very young. He used it to keep his bedroom door open in the summer to get a breeze in his room. She'd insisted he paint it with a thick coat of black paint so it wouldn't get rust on her floor. He smiled at the memory.\n\nHe set the chunk of cold iron down on the table and opened the first box. His books were inside and the charging cable for his phone. Baba's home had no electricity so he charged the phone when he was in his classes at school. He pulled it out now to charge the phone overnight. He took the phone from his pocket and plugged it in by the couch.\n\nThe second box contained his clothes. He sighed as they were just jammed into the box. He began pulling the items out and refolded them as he went. He found his toiletry kit at the bottom of the box and sighed with relief. He stacked the clothes neatly back in the box once he was done.\n\nSigrid arrived with bedsheets for the couch and made up a bed for him.\n\n\"Would you like something to eat?\" she asked but he just shook his head. \"Try to get some sleep and I'll see you for breakfast. There's a washroom in the hallway.\"\n\n\"Good night and thank you, Ms. Gunderan.\"\n\n\"Sigrid, please,\" she said with a smile.\n\nHe returned the smile. \"Thank you, Sigrid.\"\n\nShe nodded and left the room to climb up the stairs to her bedroom on the second story.\n\nCarrying his toiletry kit, he found the washroom and brushed his teeth, scowling at the stranger in the mirror.\n\nThen he went back to the living room and turned the lights off. He took off his robe and slipped under the sheet on the couch. It was pretty comfortable but the events of the day were stirring his mind up.\n\nFirst major event, he had a really great job! He was so looking forward to getting back to it!\n\nHis Executive Assistant was beautiful and she'd had sex with him! Granted she was a Succubus... and having sex was how they ate... so... that diminished his special moment somewhat.\n\nHe'd discovered mythical creatures exist and that he himself was one. He thought about that revelation and it didn't feel too positive to him. He would have preferred to remain in the dark about that.\n\nBut the worst thing to happen today was the loss of his Baba. He knew that one day he would have moved out and only seen her on visits and he was mentally preparing himself for that day but it had come too soon and she was clear that he wasn't allowed to visit. She was out of his life and there was a terrible void in it now. He felt the tears welling up once more.\n\nHe yawned hugely and suddenly found himself slipping under.\n\n\"Good night Baba,\" he whispered automatically to the empty room.\n\nHis gentle exhalations began as his day finally ended.\n\n\"Good night boy,\" the room whispered back.\n\nChapter 3\n\nStanley sat behind his desk in his new office looking out the window. Morning sunlight streamed in and warmed his body. His human body! He saw his reflection in the glass smiling back at him.\n\nTrue to her word, the moment he woke up this morning when he spun the black ring on his finger as Baba instructed he felt the briefest moment of dizziness and found himself in his original human body. He'd never felt so relieved in his life! The ring had even magically resized to fit his much smaller human finger! To think he'd always had the ring there but just hadn't been able to see it. That confused him so he pushed the thought from his mind.\n\nHe'd also discovered that he'd want to be naked each time he changed as the folding of reality had a nasty effect on any clothing he wore. The huge robe he'd had on when the change began showed rips and tears in it when he was human again. That sucked and needing two distinct and very different sets of clothing sucked too.\n\nHe'd have to buy himself a hooded robe for home. Speaking of home, Sigrid was going to meet him at lunch to take him over to a building which had a condo 'he needed to look at'. The building apparently catered to the 'Hidden Races'. He sighed. That was something else he was going to have to get used to.",
        "He heard noises coming from his waiting room and leapt to his feet. He'd been disappointed to see Paloma wasn't at her desk when he'd arrived. He needed to talk with her, make sure she was ok. He rushed out of his office.\n\n\"Paloma!\"\n\n\"EEP!\" squeaked a petite blonde woman as she spun to look at him with wide eyes. Lovely, soft brown eyes.\n\n\"Oh! I'm sorry! I thought you were Paloma,\" he gasped in embarrassment.\n\n\"Do you give her a heart attack every morning too!\" the woman scolded him and he froze when he heard her lovely Irish accent.\n\n\"Actually, this is only my second day. I've barely begun to make all the mistakes I'm going to make working here,\" he said with a blush.\n\nHer scowl became a small smile as she saw his apologetic expression. She tilted her head. \"I don't know what you were doing in Mr. Garin's office but you'd better be off before he arrives or he might sick Mr. Duncan on you.\" She made a shooing motion to direct him out of the waiting room.\n\nStanley blinked at her.\n\n\"Am I not being clear? This is the office of the CIO. I'm not sure which floor you should be on but you'd better find your way back to it quickly. If you want you can leave me your name and if the younger Ms. Villamor calls in I'll tell her that her paramour stopped by to say hello.\"\n\nStanley was soaking in her accent and could have stood there listening to her speak all day but he had things to do. \"Sure, Stanley. Stanley Garin.\"\n\nThe woman's eyes flashed to his as she looked confused. \"Are you... Mr. Garin's son?\"\n\n\"I never met my dad but I'm pretty sure I had one so I'm going to say yes.\" He was beginning to enjoy this.\n\n\"You. You're Mr. Garin aren't you,\" she peeped in embarrassment.\n\nHe grinned. \"Yes, I am.\"\n\n\"I'm terribly sorry sir! It's just... you're so young for a CIO!\" she blurted as her face became a lovely shade of warm pink.\n\n\"Yeah, I agree but that's the job they gave me,\" he acknowledged.\n\nHer phone began to ring. She rushed over to it to answer. \"Mr. Garin's office. Yes, he's right here. I'll let him know.\"\n\nAfter she hung up she turned back to him and collected herself. \"That was Ms. Villamor, our CEO. She would like you to join her in her office. Once again, I apologize.\"\n\n\"Really, it's not a problem. Your name?\" Stanley said as he moved towards the door.\n\n\"Siobhan Whelan.\"\n\n\"That's lovely! Like your accent.\"\n\n\"What accent?\" she said and smiled teasingly as he looked back in surprise. He smiled in return and stepped out into the hall.\n\nIt wasn't until he'd almost reached the CEO's office that the realization struck. He had to put a hand out to brace himself against the wall as his surprise was so profound. He was so dazed he glanced at his hand to ensure he hadn't switched back to his Satyr form. Four fingers and a thumb. Still human.\n\nHe'd just had a conversation with a pretty blond woman who he found very attractive and not once did he stutter. The stutter was gone! It was such a relief! He wondered what cured him but he wasn't going to look too closely in case that caused it to return.\n\nStanley walked into Ms. Villamor's waiting room and smiled at Felix. The man returned his smile and gestured for him to go right in. The door was open so he looked inside as he stepped through the doorway.\n\n\"Ah, good morning Stanley. Close the door behind you please.\"\n\nHe closed it and walked over to the chair she gestured to. \"Good morning, Ms. Villamor.\"\n\n\"When it's just us, please call me Camila,\" the woman said with a smile and he flashed back to the night before when she'd dropped to her knees at his feet and- He pulled his mind away from that moment but his face flushed with embarrassment.\n\n\"Thank you, Camila. How is Paloma? I noticed she isn't in today. She's OK, isn't she?\" he asked with concern.\n\n\"Yes, I believe she'll be fine. It's just going to take some time for her to burn off all that energy she absorbed. I'll check in on her a few times today.\"\n\nStanley just nodded and Camila handed him a tablet. \"She told me to give you the notes she took yesterday.\"\n\n\"Ah! Perfect!\" he exclaimed as he saw the hardware listing he and Paloma made the day before. \"Uh, I need to get started on preparing the new server room. Did you by any chance hear back about our access to the roof for adding in a diesel generator and an air conditioning unit?\"\n\n\"Yes, we have permission to install units up to a specific size. I've just sent you the restriction list and you can tell me if it is sufficient.\"\n\n\"I don't actually have a computer of my own yet. I'll be getting on that immediately. Did you CC my assistant?\" he explained.\n\n\"Yes.\"\n\n\"Great, I'll check with her. Now about the interior work in the existing boardroom?\"\n\n\"Who did they send you as a temp for Paloma?\"\n\n\"Siobhan Whelan.\"\n\n\"Good. Have her summon the workers. You can tell them what you need them to do and they will get started.\"\n\nStanley felt a chill run up his spine. \"Is there anything... strange about those guys? They give me the creeps.\"\n\nCamila looked him in the eye. \"Mr. Duncan informed me that he spoke with you about asking questions regarding the Humanity of beings you meet.\"\n\n\"Yeah, he said don't.\"\n\nShe nodded. \"Rule number one is you don't talk about the Hidden Races. This is critically important. The only time it's safe to do so is when you are in a sanctuary with the appropriate runes activated. My office, when the door is closed, is a sanctuary. Your office is not. You need to be trained to be eternally vigilant so we won't be protecting your office. There will be wards but they will just blare painfully loud should you slip and say something forbidden.\"\n\nStanley frowned but he acknowledged it was probably a good idea.\n\nShe paused to choose her words so he would understand. \"The workers we use for menial labor are artificial men. Tools powered by magic. They pass for Human but they're just a simulacrum. Ultimately loyal and trustworthy but you need to give them explicit instructions and the more complex the task the more specific you need to be.\"\n\nHe stared at her. \"Is everyone at VRL a member of the Hidden Races?\"\n\n\"No. That's actually what I called you in here to discuss. Last night you discovered you are one of us but because you grew up as a Human you haven't had any of the training required for hiding your true self.\"\n\n\"The spell hides my other self,\" he clarified.\n\nCamila caught his evasion and frowned. \"Stanley, you need to find the strength to accept the truth of what you are. For your safety and the safety of those around you. If you can't say it...\"\n\nStanley scowled and looked away. He knew what she was saying was true but he'd been given no choice. He sighed. He'd never been able to stay mad. It just felt so unfair. He sighed again. Shit.\n\n\"I know. I'm not human. I'm a Satyr. One of the Hidden Races. Is there a handbook or manual to learn all this?\"\n\nCamila smiled. \"No Stanley. That would be a little too dangerous to leave lying around.\"\n\n\"What about those Myths and Legends books? Couldn't I read up on all the different kinds of beings in those?\" he asked curiously.\n\n\"Unfortunately, what you'll find in them is mostly misinformation. Far simpler and safer to create a wide variety of fanciful lies to muddy the waters than try to disprove the truth. The Greeks called your people Satyrs and the Romans changed the name to Fauns but neither really understood,\" Camila said with a sad smile.\n\n\"So... how will I learn how to behave around others?\" he said in frustration.\n\n\"You already know how. Act like a Human. That's how we all survive,\" she explained.\n\n\"Oh!\" he said in surprise.\n\n\"I understand Sigrid is going to be taking you over to a condo building at lunch to check out an available unit. All of the units on specific floors in that building are sold to people like us. This is done in every building we share with Humans as a precautionary measure. The buildings have a mix but the floors are not intermixed. Even numbered floors are for Humans. Building management in these buildings is always run by someone from the Hidden Races and they ensure this division is maintained. There are many buildings in the city like this. If this one doesn't appeal we can try to find another. I'd like to exhaust those options before risking you staying in a non-controlled building.\"\n\n\"I lived in the attic of an old cottage in a swamp. I think anything with actual working electrical outlets will be fine,\" he said with a small smile. \"I can't begin to tell you how grateful I am for your support and guidance. I'm completely out of my element.\"\n\n\"Outside of ensuring you switch back to your true self at night to recharge and let your body remember its real shape, nothing in your life really has to change. Your job is still the same. I need you to rescue us from the technical nightmare we've found ourselves in. That's just technology. You like technology.\" Stanley grinned and nodded. \"Act like you usually do-\" she paused as she suddenly realized something. A smile spread across her face. \"You don't seem to be having trouble speaking with me now. Is that because of what we did last night?\" she asked with an impish smile.\n\nStanley's face turned quite red but he shook his head.\n\n\"No, no. I- uh, just seem to have gotten over my stutter. Last night... well probably everything that happened last night had something to do with it,\" he reluctantly agreed.\n\n\"That's good,\" she smiled. \"Thanks to you I won't have to feed for a few more days.\"\n\nStanley stared at her as she recalled the moment and gave herself a little shake.\n\n\"I guess I'd better get started,\" he said as he squirmed. She noted his discomfort.\n\n\"I'm sorry if I've upset you Stanley. I'll do my best to keep our relationship purely professional from now on,\" she said contritely.\n\n\"Thank you,\" he said with a grateful smile and stood.\n\nShe nodded to him and he went back to his office carrying the tablet. Siobhan looked up and smiled at him. \"Siobhan, I need you to call the workers who will be preparing the new server room. Have them meet me in the board room, please.\"\n\n\"Right away, Mr. Garin,\" she responded.\n\n\"Stanley, please,\" he said as he turned to head down the hall.\n\n\"Yes, Mr. Garin.\"\n\nHe looked back in surprise and saw she was on the phone but there was just the hint of a smirk on her lips. Cheeky girl.\n\nStanley shook his head and went to the board room. He took it all in once more and the plan began to form in his head.\n\nThe funky glass wall on the hallway side with the liquid crystal privacy membrane could stay as it added exceptional sound proofing.\n\nThe carpet and underlay would need to be pulled up and the concrete under it would need to be free of any dirt and dust. He would order the server room raised flooring system.\n\nThere was a noise behind him and he turned to see a group of men enter the boardroom. There had to be at least twenty of them and they were all wearing the same outfits. Grey slacks, white dress shirt with a black tie and black shoes.\n\nHe took a deep breath to settle his nerves and addressed the one in the center as he'd seen Camila do.\n\n\"I need this table disassembled and put into storage with all of these chairs. I need the projection system including its screen disconnected and put into storage as well. When all of this is done let me know and I'll give you the next set of instructions. Understood?\"\n\nThe center worker nodded and the nodding rippled outwards through the rest of them. Stanley's skin crawled. He made his way back to his office and saw Siobhan was off the phone.\n\n\"I need a tape measure. A big one.\"\n\n\"Yes, Mr. Garin,\" she responded with a cheeky smile and picked up her phone. Stanley sighed and looked to the doorway to see the workers passing by, each carrying a chair. He went to his office and realized he still didn't have a computer. He needed something now. Something powerful but portable as he expected to be taking his work home with him on occasion. He went back out to tell Siobhan that he was heading out for a bit. He'd stop by the accounting department to see if they had a company credit card he could use.\n\nAt her desk a worker was delivering a large reel type tape measure. \"Thank you,\" Stanley said and took the device from its hands. The worker nodded and joined the others in the hall and Stanley saw the table was going by in sections. He thought he might as well get the measurements now so he made his way back down the hall to the new server room. He enlisted the aid of one of the workers and they took measurements of the room while the others took the last of the furniture out.\n\nAnother worker arrived with a ladder followed by another with a tool box. They set up under the projector and began disconnecting it from the cables while some others worked on taking down the screen.\n\nStanley entered the dimensions of the room into his phone then handed the wound up tape measure to the worker assisting him. \"This can go back to where it came from,\" he said and the worker left with a nod. Stanley watched him leave and realized he could work with these guys... as long as he didn't think of them as anything other than guys. Another shudder went through him.\n\nThe room had been quickly emptied and the workers came back for further instructions. Once more he addressed the one in the center.\n\n\"Ok, now we need the carpet and underlay removed. I don't know if you will reuse the carpet so maybe you can just roll it up and put it in storage? Once you have the floor back to concrete the whole room needs to be cleaned. This means washing the walls and floor with damp rags to ensure they are clean and as clear of dust as possible. Understood?\"\n\nThe worker nodded and the acknowledgement rippled outwards. Stanley didn't think he'd ever get used to that. With a nod of his own he made his way back to his office.\n\n\"Siobhan, I'll be out for thirty minutes or so.\"\n\n\"Yes, sir. Where shall I say you are?\"\n\n\"I'm picking up a new computer for myself. Back soon,\" he said with a smile and she returned it.\n\nHe took the elevator to the next floor down and went looking for the new CFO. He spotted some workers replacing a large section of drywall and tried not to think of how it might have been damaged. He found the corner office and was greeted with a huge smile from the executive secretary at the desk just outside the door.\n\n\"Good morning Mr. Garin! I'm Anna, Ms. Summerly's assistant. How may I help you today?\" the middle-aged woman asked. She was very smartly dressed and had one of those auras of total competency that led one to suspect she could run the department if the need arose.\n\n\"Good morning Anna! Ms. Summerly is the new CFO?\" At her nod he continued. \"I was wondering if she had a moment to speak with me.\"\n\n\"One moment.\" She spoke quietly into her phone then gestured to the closed door with a smile. He nodded his thanks and knocked before entering.\n\nA woman stood up from behind her desk and came around to shake his hand. Stanley's smile froze a little as he realized Ms. Summerly was identical to the woman sitting at the desk outside the door. Including the clothing she was wearing.\n\n\"Anna is my twin,\" the woman said with a smile as she read his surprise. \"My name is Eve.\"\n\n\"Stanley. Pardon me for asking but doesn't working with your twin present some difficulties with mistaken identity?\" he asked.\n\n\"Not so far but this is only our first day in the new job so we'll just have to see!\" she replied with a friendly smile. \"I understand it was partially due to your intervention with the former inhabitant of this office that I was able to get this promotion.\"\n\n\"What? No, I couldn't have had anything to do with that. I'd only met the man once and it was a very strange and rude conversation at that. My first and only impression of the man wasn't very good,\" Stanley admitted.\n\nEve gave him a smile for his modesty then gestured for him to sit as she returned to her chair behind the desk. \"What can I do for you this morning?\"\n\n\"I just wanted to touch based to let you know I'm going to need to make some rather expensive purchases in very short order. The deadline for replacing all of the faulty and outdated equipment is extremely short. I need to know if this is going to present any issues for your department,\" he explained.\n\n\"Ms. Villamor spoke to me this morning to fill me in on the project. I have been authorized to support any and all purchase orders you submit to the department... as long as it pertains to technology and software for VRL,\" she finished with a coy grin.\n\nHe smiled in return. \"I guess I'd better cancel that beer fridge and foosball table order. I do have a more immediate requirement though. I have no computer of my own and I need to pick one up this morning. Is there a company credit card I can use for that?\"\n\n\"Ah, yes. I can take care of that immediately.\" She placed her thumb against a desk drawer and there was an audible beep and click. She pulled the drawer open and looked inside to pull out a black and gold credit card. She turned to her terminal and tapped out something on the keys. \"Ok, it's activated. There is no credit limit on this so again, only purchases for VRL. We watch the bills very closely. Don't even add a pack of gum to the invoice. Alright?\"\n\n\"Understood! Thank you!\" Stanley said and accepted the card from her hand and added it to his wallet. When he looked back at her she was still smiling at him. \"Congratulations on your promotion and thanks again.\"\n\n\"Anna and I are looking forward to working with you Stanley!\" she said standing up to shake his hand once more.\n\n\"Same here,\" Stanley said and made his way out of the office. He nodded to Anna and made his way to the elevators and down. He stepped out and headed left as his favorite tech shop was only a few blocks away. He kept his eyes open and left himself space when he crossed alley ways. He had no intentions of being grabbed again.\n\nIt didn't take him long to select a machine that would meet his needs and soon he was heading back to the office with his purchases. He felt eyes on him as he walked along the street and glanced over his shoulder a few times but it could have just been paranoia due to carrying the expensive equipment along the street in bags that advertised where he'd just shopped.\n\nAs he stepped up to VRL's glass doors he saw the distinctive shape of the car from last night's abduction attempt reflected in the glass. He spun to see its tail lights move off down the street. He went inside and headed directly to the security office. They buzzed him in.\n\n\"Is Mr. Duncan in?\" he asked a man watching the bank of monitors. The man simply pointed towards his office.\n\nThe door was open so Stanley knocked on the door jamb. The Security Chief looked up and smiled.\n\n\"Mr. Garin! How are you this morning?\"\n\n\"I'm good! Better. Do you have a second?\" Stanley asked.\n\n\"Sure. Close the door and pull up a chair,\" the large man said gesturing to the seat in front of his desk.\n\nOnce he was seated he suddenly felt silly for wasting the Chief's time. \"It's probably nothing... but on the way back from the store I think I was followed by the same car that was used in the attempted abduction last night.\"\n\nMr. Duncan looked at him until he began to squirm. \"You think or you know,\" the big man asked.\n\n\"You're right, I'm just being paranoid,\" Stanley apologized and began to rise.\n\n\"I didn't say that. Did you see the car this morning or not?\"\n\n\"I did.\"\n\n\"Where?\"\n\n\"Driving slowly past the front of the building.\"\n\n\"When?\"\n\n\"Just a few minutes ago.\"\n\nMr. Duncan turned to his computer and selected the camera feed on the street in front of the building. Stanley winced at the low-res quality of the image. Mr. Duncan nodded his agreement with a growl. He rolled the time back on the camera until Stanley could be seen holding the bags. He slowed the reverse until the back end of the car could be seen. He froze it there. There was no way they could read the rear plate."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "non-human",
        "magic",
        "satyr",
        "succubus",
        "romance",
        "oral",
        "lesbian"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/satyr-play"
}