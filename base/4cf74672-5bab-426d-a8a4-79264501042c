{
    "title": "Cross Your Legs For Me",
    "pages": [
        "Ladies and gentlemen: the story you are about to hear is mostly true. Only the names, and a few other details, have been changed to protect the not-so-innocent.\n\nMy lover is a red hot MILF named Marisol. I met her late in my life, after I was sufficiently experienced to fully appreciate what she has to offer. I won't tell you how I met her -- you'd never believe it. But I'll tell you about Marisol.\n\nShe hails from south of the border, and she is petite and very serious. She is of a dark and brooding disposition -- but when she is sexually aroused, she burns like an acetylene torch.\n\nShe possesses a talent which, I am told, is not unique. Truth be told, she possesses many delicious talents, any one of which might deserve a story in its own right. But for today, Valentine's Day, the special day for lovers, I will confine myself to a description of her delightful ability to masturbate, undetectably, in public.\n\nWhen I first learned that such a thing were possible, I could not help but feel envious. We men seem to require some motion to please our meat, the sort of vigorous activity which could not escape the observant eye. But a woman, one who is blessed with this particular gift, need only cross her legs and squeeze with just the right amount of pressure, while thinking the right sort of licentious thoughts. The arousal and the orgasms which ensue, I am told, are truly wonderful. In the story to follow, we will examine this topic in greater detail.\n\n<CENTER>***</CENTER>\n\nMarisol is a brilliant woman who excels in her professional field. She is also a very naughty girl. She and I have difficulty meshing our busy schedules, but when we see each other, we always explore new sexual possibilities. Soon I will tell you my Valentine's Day story. But first, allow me, dear reader, to present you with a little vignette to illustrate the character of our adventures together.\n\nIt was a balmy afternoon in Central Park. Birds were engaged in a lazy conversation. The sun was bright overhead, and the green of the trees and shrubbery had a translucent quality that made the foliage seem to glow with some sort of internal illumination. We walked toward one of the more remote areas of the park as we exchanged sotto voce confessions about wanton things that we hoped to do together. The din of the city had diminished to a muttering in the background as we penetrated further into the woods.\n\nWalking along the main path, Marisol described to me for the first time how she could make herself cum without moving. I was astonished; I had never heard of such a thing. But she insisted that it could be done, and she regaled me with example after example of how she had done it. I found her stories quite arousing. At her request, I had gone without underwear for our walk in the park, and her stories had made my cock very hard. It was straining against the cotton of my trousers, which rubbed it and stimulated it in a maddening way with each stride I took. I pointed this out to her. She smiled approvingly, gave it a sly squeeze, and observed that soon we would be arriving at the trail we had selected for our walk.\n\nMarisol and I had selected our special trail carefully. We wanted some privacy, but not too much privacy. We rounded a corner in the middle of a grove of Norway Maples, and there it was, the junction where our chosen path diverged from the main one. We walked up a small hill until we were out of the line of sight from the main trail below. Then we stopped and smiled at each other. There was a conspiratorial gleam in Marisol's dark eyes, and the sunlight washed over her olive complexion, glittering in her sleek black hair.\n\nI stepped toward her, and she stepped toward me, opening her mouth to meet mine. Her tongue felt so wicked as it teased and caressed my own. Her buoyant bosom grazed my chest provocatively. I could hear her ragged breath as she widened her stance and parted her thighs expectantly.\n\nI reached down, coaxing the hem of her dress upward, and I let my hand glide along her thigh. I found it slick with her juices, and when I groaned in appreciation, Marisol pulled me close and thrust her tongue deeper into my mouth. Her tongue felt lithe and muscular and sinful.\n\nI ran my fingertips now along the soaked crotch of her panties. She pressed her pelvis forward impatiently, so I slid my hand inside her panties and began to investigate the swollen contours of her pussy, as our kiss grew more heated.\n\nSuddenly I heard the rapid footsteps of a jogger approaching us along the trail from above. I reluctantly withdrew my hand from her panties and stepped away as he passed. He was a middle-aged man with a handlebar mustache, wearing shorts and a T-Shirt emblazoned with a band logo, \"The Who\". It must have been thoroughly obvious to him what we were doing, although his face betrayed no reaction. We didn't make eye contact or otherwise respond to his presence. The instant that he had disappeared down the hill, we stepped back together, giggling, and immediately resumed what we had been doing.\n\nI placed my hand once again on her pussy, and the slick, supple feel of it against my fingers made me want to cum right then and there. I shoved two, then three fingers up inside her, and began to tease her G-spot. And as I did so, I ardently demanded of Marisol:\n\n\"Tell me again what you did in high school.\"\n\nIn response, Marisol grinned, shoved her cunt against my hand, and began to speak. It must have been an effort for her to do so because her breathing was heavy, but she was clearly excited at the prospect of telling me her story, and she forged urgently ahead.\n\n\"In high school... I liked my calculus teacher. He was tall and muscular... and I sat at my desk... and I crossed my legs... and I squeezed my clit between my thighs, thinking about what it would be like to have his cock in my mouth. I had never... tasted anyone's cock before... but I wanted it! Yes, I did... and thinking about it made me cum, right there... in the classroom... I came twice in ten minutes!\" \n\nMarisol then kissed me passionately, humping my hand as she did so. We heard the sound of a bicycle approaching, and we simultaneously opened our eyes and smiled at each other, reaching an unspoken consensus not to interrupt what we were doing. We heard the whoosh of the bike as it passed, but we didn't look at the rider.\n\nMy hand was completely coated in her juices now. I pulled my fingers out and brought them to my mouth, then offered them to her. She sucked them eagerly. Then I pulled her panties down to her knees and placed my hand back on her cunt, stroking her clit salaciously.\n\n\"Marisol... tell me about college.\"\n\nMy three fingers went up inside her again, and went back to work as she told me more:\n\n\"When I was in college... I had a crush on the teaching assistant in my statistics class. Every day during his lectures I would cross my legs and make myself cum! I wonder... if he knew? I'm sure it showed on my face... One day... I just kept cumming over and over, for a whole hour... it was so good... oh god, I'm gonna cum now...\" \n\nI felt her body tense up as the spasms rocked her. Then, breathlessly, she continued:\n\n\"I liked to imagine him on the floor, lying on his back... and I would rub my cunt on his face... and I would just think about that when I crossed my legs... and I would cum so good! Oh god... I think I'm gonna cum again... OH GOD!\"\n\nHer juices were everywhere now, on my hand, on her legs. I fell to my knees to taste them right at the source, and I kept licking and sucking until she came again. Another cyclist passed us and was ignored, as she put her hands on my head and forced my face hard against her crotch. I felt her body grow rigid, as she made a low, growling sound. Finally she pulled up her panties and we hurried back down the trail, eager to get back to our hotel room for more.\n\n<CENTER>***</CENTER>\n\nI'm a political consultant. I help people win campaigns for public office, or pass legislation. My job takes me on the road a lot, and when I am out there I pine away for Marisol. At those times I communicate with her using Google Chat. She sits in her grandly appointed office at the headquarters of a high-powered corporation, gazing out the window to her right at a panoramic view of Lake Michigan. Her laptop computer sits atop a mahogany desk from which she wields her executive power, and we exchange raw and feverish text messages at the most surprising and inappropriate times. \n\nI am thinking now of a particular afternoon, on a crisp autumn day last year in Virginia. I was wooing local elected officials whom I wanted to endorse my client who was a candidate for statewide office. I had never seen such a bunch of prima donnas, and talk about dumb! These folks were as dumb as the proverbial bag full of hammers. I found myself comparing each one most unfavorably to Marisol, with her quicksilver intellect. And her other marvelous attributes.\n\nAfter 6 hours of meetings I had run out of patience, and shuffled off the rest of my appointments to the following day. Now I was sitting on the bed in my hotel room, naked. My laptop was connected to the hotel Wi-Fi, and I saw the tell-tale green dot next to Marisol's name, informing me that she was on-line. It was a simple matter to launch a text through the aether and get her attention:\n\nHi, are you online?\n\nYes I am, Andre, how are you?\n\nI'm good. Do you have a little time to play?\n\nYes...\n\nDon't close the door to your office.\n\nDon't close it? OK\n\nImagine I am standing in your doorway. I'm stripping for you, slowly\n\nI love it\n\nOff comes my shirt\n\nMore, please\n\nShoes and socks -- should I take off my pants?\n\nPlease\n\nWhat do you know, my cock is hard. Do you want me to touch it?\n\nPlease, touch it for me\n\nOn one condition\n\n?\n\nCross your legs for me. Squeeze your thighs.\n\nMy thighs are squeezing closed, as are my cunt muscles, as I imagine watching you touch yourself - please stroke your shaft, dearest - don't neglect the ridge around the head and if there's any precum, I want to lick it around before I suck the tip dry.\n\nWhew! Go ahead, lover, my cock is all yours. May I imagine you are naked? And on your hands and knees on the desk, looking out through your open door at your employees?\n\nyes, dearest; offering you my cunt - because right now, it is most definitely sopping wet\n\nI should mention that by this point, I was most definitely touching my cock. I brushed the edge of my index finger along the underside of my cock head, then allowed the palms of my hands to glide along the sides of my shaft. I was teasing myself, building up to the main event. Meanwhile, Marisol was back in her office, fully clothed, but her mind and her thighs were mine. I continued,\n\n I glide my hands over your back, under your belly...\n\nyes\n\nI crouch behind your ass and slowly slide my tongue into your cunt...\n\noh god!\n\nI love the way your cunt tastes! It arouses me so!\n\nso wet -- I can feel it seeping\n\nAll over my face, dearest. It is making me so, so hard. May I fuck you from behind?\n\nplease do; I love to be impaled on your cock!\n\nIs anyone looking at you right now?\n\nMaybe... yes, I think so\n\nSqueeze your thighs together for me. I'm sliding my cock slowly inside you, rubbing your g spot, banging your cervix...\n\nyes oh god yes! love to squeeze you and feel you so deep in me; my cunt is vibrating with you inside it\n\nAre people watching you?\n\nyes\n\nTry to make eye contact\n\nOK -- o god I wonder if they can guess what I'm doing, so hot\n\nMy hands on your hips, grabbing you hard as I shove my cock into your luscious cunt\n\nOH\n\nI'll fuck you deeper, harder, but just a little slower - please cum on my cock\n\nyes dearest, I am cumming - I'm just spasming thinking of your cock\n\nthat's good, Marisol! -- did anyone see?\n\nI think so -- I came so hard! I groaned, tried to make it sound like a sneeze -- please, keep going I want more\n\nMy angel! Is your cunt completely wet and sloppy and delicious?\n\ngod yes; will you suck my cum from me? clean me out? I'd love it so much!\n\nMy hand was wrapped around my cock now, and pumping with abandon. But I had to pause to type --\n\nThat's what I want! You are so beautiful. Rub it on my face tell me how it feels - please! But you can turn around and I will cum in your mouth\n\nyes, I've turned - I can't wait to swallow your cock, eat it, suck it deep as you suck my cunt so hard so hard. It feels like you are devouring me, so ravenous!\n\nI had a vivid mental image of Marisol looking distinguished and authoritative at her desk, within her imposing office, gazing out at her minions, and trying not to tremble too visibly in the wake of her orgasm, while eagerly building toward another one. The image was just too arousing. I fired off another text:\n\nYou're going to make me cum -- can you cum again?\n\noh yes, suck me dearest, fill my mouth with your cum YES\n\nMarisol's words never failed to have the most compelling effect on me. I was in a state of agitation, alternating between typing and stroking my cock, but at this point the typing fell by the wayside as I abandoned myself to the excitement of thinking about Marisol's hungry mouth, desperate for my cum. My entire body tensed up as stroked myself hard and fast, until I began to spurt all over my chest and belly. I was stunned for a moment, then I felt the pools of sticky semen beginning to drip down my flanks. I grabbed for a wet washcloth that I had positioned nearby for just such an eventuality, and managed to catch some of the more serious drips, before looking back to the screen to see what else Marisol might have typed.\n\nI came again is what she had sent to my screen.\n\nI responded, I have cum all over me\n\nLet me clean you -- please?\n\nDo you like the taste?\n\nI can't get enough of it, dearest. I could put my cunt on your mouth again -- do you want it?\n\nYes! I do!\n\nShall I grind my crotch on your face?\n\nplease\n\nyour cum tastes so good, o god suck my clit\n\nI love to suck it!\n\nHarder please\n\nsucking with all my might\n\noh I'm going to cum again\n\ncum for me Marisol\n\nI did!\n\nThree times. My cock was once again fully erect. But then --\n\nDearest, I've got to go. There are three attorneys here to meet with me.\n\nWell, that was certainly kinky. I signed off with Marisol, savoring the image of my wet, flushed, trembling lover conferring with her legal staff. With that image looming in my mind, I spent a bit of quality time with myself there in my hotel room.\n\n<CENTER>***</CENTER>\n\nValentine's day was approaching. I had been doing a lot of traveling and I hadn't seen Marisol in well over a month, but she and I had arranged to meet and celebrate it together in her little cabin in Michigan's Upper Peninsula. She would have her daughter with her, but the daughter was scheduled to attend an Environmental Science Camp, leaving us alone to celebrate the holiday together.\n\nMy plane landed at Gerald Ford airport on the morning of February 14, just as the blizzard of the century began. As the plane taxied to the terminal, I could look out the window and see the big flakes floating lazily down, like wet tufts of goose down. By the time we had disembarked a thick layer was already forming on the ground, and the wind had started up, the kind of malicious wind that is bound to produce stubborn drifts and clog automobile traffic. When I went to the car rental counter, they helpfully advised me that driving to the U.P. was out of the question. Dejected, I got a hotel room near the airport and called Marisol.\n\n\"Hello, Andre.\" She didn't sound pleased.\n\n\"Hi, Marisol. They're telling me not to drive up there.\"\n\n\"The snow is already deep here in the U.P. -- we can't go out of the house. Cristina's science camp is canceled.\" She spat out a series of Spanish words which I didn't recognize, but they sounded suspiciously like cursing.\n\n\"We'll get another chance soon enough, dearest.\"\n\n\"I don't know, Andre.\" Her voice was taking on a familiar muted quality, a monotone that I recognized as a sign that the dark clouds were descending upon her heart. \"We've been seeing so little of each other... I think you will lose interest in me.\"\n\n\"Marisol, we knew to expect these problems. We both have careers. If either one of us gave up a career so that we could spend more time together, the other one would feel guilty and it would spoil everything.\"\n\n\"But if we don't see each other, that will spoil everything too.\"\n\n\"I'm not losing interest in you -- I find you very, very interesting.\" I tried to say it with a hint of naughtiness, enough to cheer her up without being inappropriate in the middle of a somber discussion. Marisol didn't sound particularly cheered:\n\n\"It just seems like we are between the devil and a hard place.\" Every now and then she said something that reminded me that English was her second language.\n\n\"Dearest, it's going go be all right, I promise. Now, listen -- I haven't had anything to eat, the damn airlines are so stingy with food nowadays. I need to go downstairs and find a restaurant. May I call you back?\"\n\n\"I don't want to talk to you a lot around Cristina. She's taking a nap right now, but she'll be down soon. She still misses her dad.\"\n\nThat seemed just a little unfair. But I knew better than to challenge Marisol when she was feeling melancholy.\n\nI replied, \"Dearest, we'll figure out something. Let's touch base later today.\" \n\nI thought about wishing her a happy Valentine's Day, but thought better of it. Marisol murmured something and hung up.\n\nI wandered downstairs and bought myself a roast beef sandwich in the hotel eatery. I was starting to feel morose myself. I had been looking forward to seeing Marisol in the flesh, and I do mean in the flesh. I had a whole catalog of scenarios in mind for ways in which we could to get to know each other just a little better. Now I would miss the opportunity, and if that weren't enough of a disappointment, it seemed that we were having a tiff of some sort.\n\nI finished my meal and returned to my room. Looking out the window, I saw vast galaxies of giddy snowflakes, whirling hypnotically as they descended from the uncertain gray sky. I stared at them, transfixed, for five or ten minutes, until I felt the melancholy once again begin to intrude on my consciousness. It was at this point that I went to my suitcase and extracted a small bottle of Wild Turkey. I filled one of the plastic hotel room glasses about half-way up, sat down on my bed, and began to drink.\n\nI had been seeing Marisol going on two years. But \"seeing\" is largely a figure of speech. We lived in separate cities, we traveled, it was very hard to connect face to face. This was hard on both of us. Sometimes the ache of missing her was too much; it would put me in a funk for days. I would crawl laboriously out of my sadness by finding some way to connect with Marisol's mind, since her body was beyond my reach.\n\nAs a result, our relationship had a decidedly intellectual cast to it. We talked literature and philosophy. Marisol delighted in needling me about my politics. I considered myself a mainstream Democrat, whereas Marisol, coming from a developing country, had what I might consider a more radical outlook. She mocked my interest in \"green\" causes and \"identity politics,\" branding me a Limousine Liberal. For her, it was all about economics, infrastructure, development, and justice for the developing nations. But I thoroughly enjoyed our political battles -- and somehow she became all the more desirable to me when we had been wrangling over some controversial topic.\n\nWe kept in touch using the internet, and had developed cybersex into something of an art form. My body was so attuned to it that sometimes just the sight of her avatar, an image of a beckoning hand, would make me hard when it emerged in the chat box. Hearing the \"ding\" of the webcam starting up would set my pulse to racing.",
        "Our in-person encounters were even better, of course; rare, but intense. I have described for you, dear reader, our adventure in Central Park. I could tell you other stories like that one, but today is Valentine's Day, and I must return to the story at hand.\n\nI had worked my way about halfway down through the cup of Wild Turkey, and I was thinking once more of the scenarios that had been germinating in my mind for weeks, in preparation for seeing Marisol at her cabin. It seemed a shame to allow those enticing visions to fall by the wayside. I took another substantial swig from my cup, and opened my laptop. I entered the password for the hotel Wi-Fi, and opened Gmail. There was a green dot next to Marisol's name.\n\nHello there, Marisol.\n\nHello, dearest. I'm sorry that I was crabby this morning.\n\nYou weren't crabby, just disappointed.\n\nWhatever...what are you up to?\n\nSitting and drinking.\n\nMe too. I bought some Wild Turkey for your visit. She included a sad-faced emoticon with this one.\n\nLOL. So did I. Good, let's share a drink.\n\nOK\n\nThere was a pause, and then Marisol typed some more.\n\nI'm going to Mexico in the third week of April. Want to come?\n\nAbsolutely! Do you think it will snow?\n\nNope. There was a happy-face emoticon with this one. We were making progress.\n\nGreat!... Marisol, may I imagine you naked?\n\nThere was a pause.\n\nDarling, Cristina is sitting with me here on the couch. She's doing something on her own computer.\n\nOK. So -- what's the downside?\n\nIf we get naughty, I think she'll know.\n\nHow would she know?\n\nShe might know if I cross my legs.\n\nWhat, you never cross your legs, normally?\n\nIf I do it a certain way I think she'll know.\n\nHow would she know?\n\nBecause I think she does it, too.\n\nI was bewildered.\n\nHow would you know if she does it?\n\nThere's a certain facial expression that she gets. It's hard to explain. And she makes a kind of grunting sound. I can see that her legs are crossed when she does it, the same way I cross mine. It must feel good to her.\n\nI found this intriguing, but my whiskey glass was empty, so I took a moment to refill it. Then I typed:\n\nSorry, had to refill my Wild Turkey.\n\nMe too, one sec\n\nI waited a moment, then typed:\n\nWhat if you were helpless?\n\nHelpless?\n\nSuppose you were sitting in a chair.\n\nIn a chair?\n\nAnd your ankles are tied to the front chair legs.\n\nOh! And...?\n\nYour arms are at your sides, and your wrists are tied to the sides of the back chair legs.\n\nOK...\n\nAnd there is a pillow between the back of the chair and your ass, so that it pushes your pelvis forward.\n\nGo on...\n\nYou are naked, except for your thigh-highs and heels.\n\noh my -- that's naughty, isn't it\n\nAre the ropes tight? This is important\n\nyes, I'm pulling against them - yes they are\n\nTrust me dear, just relax. I'm tipping the chair back, so that your back will be on the floor, and your hips and legs in the air.\n\nah -- that feels quite vulnerable, wanton and lascivious\n\nAnd your exposed cunt is pointing skywards, all spread and gaping.\n\nI feel rather exposed and a little self-conscious\n\nDon't worry, dearest. I'll take good care of you. Will you cross your legs?\n\nThey have been crossed for a while now. She followed this with a smiling emoticon, and I knew that I was on the right track.\n\nMarisol sent another text: Are you still dressed?\n\nYes -- but I'm thinking about taking off my pants. This was true in real life as well -- they were beginning to feel uncomfortably tight.\n\nI'd love to see your cock!\n\nAll in good time, my dear.\n\nmmmm\n\nI'm kneeling on the floor in front of the elevated part of the chair, and rubbing my cheeks along tops of your thigh-highs.\n\no god\n\nYou smell very hot, Marisol\n\nHope Cristina doesn't notice -- And a winking emoticon completed that text.\n\nI'm taking off my pants And I was.\n\nplease -- I'm squeezing my thighs, the pressure on my clit is heavenly, hotter and hotter darling\n\nstill want to see my cock?\n\nPLEASE\n\nI'm squatting above your face -- I'll show you how I like to stroke myself. That stroking was happening in the real world, too. It was too bad that her daughter was with her -- the webcam was a tempting thought.\n\nWill you bring it a little closer?\n\nYes, I will. The rest of my clothes were coming off now.\n\nI would love to be able to touch it. With my lips.\n\nNot yet. I'm running the fingertips of both hands along my cock, very close to your face but just out of reach.\n\nI'm so hungry for it, dearest.\n\nI'll stroke it for you, love. I could make myself cum so easily now...\n\nYes -- I need to taste it!\n\nNot yet. I want to see whether your cunt is wet.\n\nIt is so wet, dearest!\n\nI'm turning around to have a very, very close look.\n\nmmm\n\nI'm running my fingers along the outside of your labia.\n\nOh, more, please\n\nNow I'm dragging my second finger lightly between them -- o lord, you're wet, Marisol \n\ngetting wetter by the second \n\nI'm anointing your clit with cunt juice, petting it just a little -- my god, lover, how can I not taste it?\n\nPlease, please suck it!\n\nI'm lowering my mouth to your clit... \n\n darling\n\nIt tastes so good, lover, I could suck it forever! \n\no god -- I'm moving my hips, rubbing against your face, can't move anything else\n\nsliding two fingers into your cunt \n\noh oh oh\n\nI'm scraping my fingertips against your G-spot as I suck your clit \n\nYou'll make me cum \n\nDo you want to cum, Marisol \n\nI so want to cum! \n\nNow it's three fingers -- \n\nSo close!\n\nSwirling my tongue around your clit\n\nyes\n\nI have to suck it a little harder, can't help it\n\n//////////////\n\nI wasn't quite sure what to make of that, but moments later, she typed:\n\nOh god, I came so good. A pause. I had to bite my lip or I would have cried out. Cristina has her ear buds on, thank god. I don't think she noticed. I had to fight with my body, not to writhe around!\n\nThe image of my lover sitting rigidly, hiding the eruption inside, was too much for me. I managed to type:\n\nCumming too\n\n...and then my hand was a blur, pumping my cock as I arched my back, moaned Marisol's name, and spurted semen all the way to my collarbone. I lay back for a moment, suffused in bliss. Then I thought to check my computer screen.\n\nAndre? \n\nYes, my love? \n\nLook out your window. \n\nOK \n\nWhat do you see? \n\nAn infinity of dancing snowflakes. \n\nI see them, too. It feels like we're together.\n\nAt that moment, I felt so in love with Marisol. I responded:\n\nYes, it does.  As an afterthought, I added the little vibrating heart emoticon and added, Happy Valentine's Day. In a moment, Marisol sent one back to me, and then there was a pause where neither of us felt the need to say anything. Then, another message from Marisol:\n\nCristina wanted to know what I am doing. I told her I was meeting with my political consultant. \n\nDid she ask why you need one? \n\nNo. But I know the answer. \n\n<CENTER>The End</CENTER>\n\n<HR>\n\nDear reader: this is a contest entry. If you enjoyed my story, would you be so kind as to give me a generous vote?"
    ],
    "authorname": "AlwaysHungry",
    "tags": [
        "outdoors sex",
        "masturbation",
        "cybersex",
        "cunnilingus",
        "bondage",
        "bdsm",
        "online sex",
        "cum swallowing",
        "cum drinking",
        "public sex"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/cross-your-legs-for-me"
}