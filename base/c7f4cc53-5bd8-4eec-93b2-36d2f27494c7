{
    "title": "Walking Lessons",
    "pages": [
        "Edited by SexyGirlWhore. Thanks!\n\n*****\n\nIt all began with a simple request for help from a fellow teacher. I teach philosophy at a junior college and late last evening, just as I was about to leave, my drama colleague popped into my office and asked for a simple favour. One of her students was having trouble with her role in the upcoming play, and needed extra time to rehearse, ideally alone in the studio. All I would have to do is remain in my office, which happens to be next to the studio, all evening long. \n\nShe herself couldn't stay, but college policy dictated that students couldn't remain alone in the building past 8 o'clock. \"No problem.\" I said, thinking that it wouldn't be much of a hassle as I had a lot of grading to do anyway. I didn't even bother asking who the student was. Late in the afternoon, I saw Carol coming in to my office to thank me for my time. I said \"No problem!\" again and watched her leave. Watched her. Not her ass. Damn! I watched her ass! I laughed, alone in my office, wondering how sometimes luck made strange things happen. \n\nI've been teaching here for about ten years, surrounded by many beautiful and sexy students, and I'm proud to say that nothing untoward ever happened. But from time to time some students really caught my eye. Carol was one of them. She was pretty enough, quite tall, and very slim with smallish breasts and very long brown hair. But what really grabbed my attention was her ass. As soon as I saw it, two things became clear. First, I was going to obsess over it for two years (her time here), and second, I was convinced that she didn't like how it looked. \n\nShe had the ass of a goddess: very, very generous, with copious curves from any angle. Sometimes girls had nice asses when seen from the side, or from behind. Carol had a stunning ass from any angle. Seen from behind it was amazing enough: fully developed, bloomed to perfection, each of her plentiful buttocks lifting with each of her steps. \n\nBut from the side, it was somehow even more remarkable. We sometimes say that girls have bubble butts, but Carol really had one. It was really rounded. Not just curved nicely, but fully round. From the side it looked like a full breast. It burst outwards from her otherwise lean frame like hills of flesh rising from a flat valley, then curved outwards generously before curving back towards her legs. Exactly like a big firm breast. \n\nI was in awe of that ass, it was as simple as that. Many times I had found or invented excuses to follow her around the college or even went to the water fountain close to her locker more often than I really needed to. Twice, I had even filmed her ass with my iPhone! Damn it was amazing! \n\nI was still in my office at around 8, and Carol and I were most likely the only people in the building. I hadn't heard from her since this afternoon. She was probably already in the studio, practising for her role. At 9, very curious, I walked to the studio and opened the door slightly. From the corridor I could only see the first room that led to the studio itself. I walked in and went to the second door to peek inside. Carol was there, and at first I thought she was simply walking back and forth, trying to remember her lines. But soon it became obvious that she was walking because she was trying to learn a particular way of walking. \n\nSilently, I got out and went to what the students called the \"actors' room\" and found the document for the play. A few minutes later I found out that Carol was going to play a model and that she had to do a long catwalk scene. I was grinning: the girl with the most amazing ass and legs had to practice walking like a model! And, I learned in the text, a model that was trying to seduce one of the guests. Damn! What more could I ask for? \n\nComing back to the door, I looked in again. Carol was now sitting down, clearly frustrated. Carol and I had never really talked personally, but given that she had taken one of my classes last semester she was friendly with me. I didn't know much about her, but it seemed obvious to me that she was a shy girl. Why she had chosen to play a model was beyond me. \n\nMaybe it was her teacher, trying to push her out of her comfort zone? In any case I could guess, and now see, that it was quite a challenge for her. I was tempted to enter and offer my help, but I didn't want her to see me as a lecherous teacher. I wasn't that old, but I was a lot older than she was, and I was afraid that she had already detected that I was ogling her, or following her. So I walked away and left her alone. \n\nAbout an hour later she came to my office and said that she was done for the night. She wasn't crying, and I couldn't detect traces of tears on her face, but it was obvious that it hadn't gone well. I opened the door and invited her to talk to me about it. She hesitated, then sighed as she sat down in the chair next to my desk. She confirmed what I had already guessed about her role, and told me how hard it was for her. \n\nShe hated it when people looked at her too long, and she didn't know how to seduce. She was visibly shy about revealing this, but I guessed that I was just at the right place at the right time for her. She didn't break down, but it came very close, and we spent a long minute in silence as she gathered herself. \n\n\"I'm sorry,\" she said, \"I don't want to trouble you with this... I'm already keeping you here for hours...\" she said, getting up to leave. \n\n\"Carol, wait. Please sit back down.\" I replied, using a deeper voice I sometimes used in class. It worked. \"I'm guessing that Nath chose the roles for you, that you didn't choose it yourself?\"\n\n\"Of course I didn't! I don't belong on a catwalk, strutting my stuff and trying to seduce a man!\" She was laughing as she finished, but I could still hear the edge of despair in her voice.\n\n\"Now, now... I'm sure there are lots of guys in your classes that would disagree with you.\" As I was saying the words, I knew I was taking a risk. This wasn't your typical teacher-student conversation. But Carol didn't seem to mind. \n\n\"Ha! I'd really like to know where they're hiding! I'm not a beauty queen and I'm too tall for most of them in any case.\" She replied, letting herself fall back, sprawling on the chair. \n\nFrom my vantage point, I could see the delicious curves of her thighs and hips, pressed together as they were. I blinked, then shook my head. Her head against the back of the chair, looking at the ceiling, she sighed. \"Thank you for trying to help, but I know I have to abandon this role and force Nath to put me in another role.\"\n\n\"What? A week from the premier? You know that won't happen...\"\n\n\"Then I'll flunk the class. Shit!\" She was still looking at the ceiling, and I saw that her eyes were tearing up.\n\n\"Look at me Carol. Take a deep breath and look at me. Ok. Now sit straight. Modelling and seducing are confidence games. It has little to do with how you look or, in your case, how you think you look. It's all about confidence.\" She was looking at me, curious but not convinced. \"Tell you what. Why don't you come again tomorrow night and we'll try something else?\"\n\n\"What?\"\n\n\"Just come tomorrow.\"\n\nShe stared at me a long while, then closed her eyes and said \"Ok. Thank you.\"\n\nI spent the entire next day trying to figure out exactly what I was going to say. I was sure she had it in her, if only for a play, but I wasn't sure how to get it out. When 8 o'clock finally arrived, Carol poked her head in my office, with a small smile on her face. She didn't look any more confident than last night. \n\nAs I followed her to the studio, I couldn't help but look at her. She had on a pair of very tight-fitting jeans and a long, flowing shirt. I couldn't see her ass at all, and that was probably for the best. Inside, I saw the huge mirror that Carol must be using to see herself move around. I sat on chair and asked her to walk the catwalk. Seeing her reaction, I realized that it was too fast. \"Wait a second... Sorry, that was too fast. Tell me what Nath told you to practice.'' \n\nWhen she was done, I didn't really know what to add. But then an idea hit me. \"Carol, I'm going to suggest something that sounds crazy. I'll explain, then leave you alone to try it. Deal?\"\n\n\"Ok...\" she replied, skeptical. \n\n\"Loosen up! Really hard! Imagine that you're a rag doll being bounced around in a storm. Just move around wildly, bending down and jumping up. Anything to move in crazy ways. After that, do your walk like Goofy would do.\"\n\n\"Goofy? That's how I always feel on my imaginary catwalk!\" She replied, laughing.\n\n\"I'm sure that's not true. But this time, exaggerate your movements, go all Goofy. After that, take a five minute pause and try to be the seductive model.\"\n\nHer expression was comical. She must have thought that I was crazy. Before she could say something, I nodded to her and left the studio. Despite closing the door behind me, I remained right next to it and listened. She sighed twice, very loudly, and I feared that she was ready to abandon again. But then I heard her make crazy sounds and guessed that she was moving around like a rag doll, then I heard her make a decent imitation of Goofy's laugh. After a few minutes of that, she stopped and there was a long silence. \n\n\u2028Finally, I heard her clean and rhythmic steps on the wooden floor, walking back and forth. I fled to my office and waited. Twenty minutes later she burst in, grinning from ear to ear. \n\n\"It worked! I have no idea why, but it worked!\"\n\n\"Good! Now go be Goofy again!\" She was laughing as she hugged me briefly before going back to the studio. A delicious hug, it was . \n\nI was still thinking about that hug when she came back, about an hour later. She was still smiling, but it had lost some of its earlier intensity. \"It's a lot better, but now I'm not sure how to improve. Would you mind coming in and helping me out?\" Carol was clearly hesitant, bashful even. I replied that I didn't mind at all. \n\nInside, I started by removing the mirror. I then said \"Forget about looking at yourself. Just do your best and let me look at you.\" Shit! I hope it didn't come out too pervy! She didn't say anything to my comment and just began walking. After watching her do a few passes, I said \"Carol, you're doing really good. But...\" I paused.\n\n\"What? Say it! I know I'm not a model... just say it...\" She didn't have to complete her sentence; it was clear in her face that she thought I didn't like her performance.\n\n\"No, no... Carol, you were pretty good. If I'm hesitating, it's because I'm in the midst of an ethical dilemma.\"\n\nCarol was clearly taken by surprise. \"What?\" She asked, smiling. She had taken my ethics class, but she couldn't figure out how I could be in an ethical dilemma. \"A dilemma? What could be the problem?\"\n\nI smiled, remembering that she was only nineteen years old. I took a deep breath and said \"Well, the most important part of a woman's body on the catwalk is her hips. And now I can't, really... er...\"\n\nLooking down at herself, she realized that her long ample shirt prevented me from seeing her hips properly. \"Oh...\" she said, smiling. \"So you were afraid to ask me to... But why? Oh! Because I'm a student?\" I could only nod, smiling at her. \"That's all?\" \n\n\"Well, it's plenty! No one ever tell you what happened to mister Kesler?\"\n\n\"Yes, but why... Are you serious? You think you could get in trouble because of me?\" Carol seemed really unsettled about the situation. \n\n\"Think about it from a journalist's standpoint.\" I said. \"Imagine the headline: A teacher asks a student to tie her shirt below her breasts so that he could look at her hips and ass as she walked around!\"\n\nCarol laughed at my fake headline. Then she said \"Oh come on... Kesler abused that girl. You're just trying to help me out.\"\n\n\"Yeah... Can you imagine how well this defence would go? I was just trying to help her out!\"\n\nCarol laughed again. \n\nAs she did, though, she began tying her shirt just below her breasts. I was smiling, my smile froze as she revealed her flat stomach and gave me an unobstructed view of her hips and ass. I felt my heart skipping a beat. She was absolutely gorgeous! Why didn't the guys in her classes swarm her, I would never know. Maybe they all liked shorter, smaller-hipped teenagers? It was their loss. With her shirt tied way higher than her belly button, Carol smiled at me and walked around again. \n\nI was flabbergasted. She was absolutely gorgeous, and had an ass I'd kill to eat. I wanted to eat her up, bury my face between her asscheeks and devour that glorious feast. With my fingers I asked her to walk up and down a few more times, trying my best to regain enough composure. \"Very nice... Very, very nice Carol.\" She thanked me, smiling, but judging from her unguarded expression, I could guess that she wasn't sure if I was being polite or not. \n\nIt was so frustrating. I wanted to tell her how hot and stunning she was, but I couldn't. Damn it! All she needed was a little extra confidence! Later, as she was untying her shirt, I took a risk and said \"Carol, as a teacher I cannot say much in such a situation, but I have to admit that I don't know why the guys in your class are not swarming all over you...\"\n\nCarol's beaming grin told me that it had been the right thing to say, and I felt a warmth growing inside me as I saw her walking towards me for another hug. \"Tomorrow night?\" She asked. Of course I was going to be here. It was a Friday, but I didn't care. Still grinning, she winked at me before walking out of the studio. \n\nWhen I heard her footsteps fading away, I sat down in the chair and took a few minutes to examine what I was doing. This was dangerous. And irresistible. Instead of thinking about it too long, I just got up and left, already looking forward to tomorrow night. I spent the entire day grinning like a fool, trying and failing to control my imagination. I didn't know what was going to happen, but I knew the images of her undressing completely were nothing but wild, lust-filled conjectures. Nevertheless, even if the coming evening would bring nothing more than a third hug, I knew it would be worthwhile. \n\nAt 8, I walked towards the studio and heard her waking on the boards already. Once inside I stopped, leaned against the wall and simply stared at her. She was wearing the black lycra pants and shirt the students wore when working backstage. If she had been body-painted black from head to toe, it would have looked exactly the same. She looked insanely hot. Adding to the effect, she was now wearing a pair of fine leather high heeled boots. It was changing her gait and I could see that she was having trouble walking with them. \n\nI remained there, silently watching her for a good ten minutes before she finally spotted me. She grinned and said \"Oh! There you are! I was wondering if you were going to show up!\"\n\n\"Of course. \" I said, softly. \n\n\"Been there long, mister ogler?\" Carol asked, still smiling. \n\nI closed my eyes and shook my head, smiling. \"Guilty as charged...\" I replied, but kept talking to change the subject. \"So, how are you doing?\"\n\n\"Well, these heels make it a lot harder. It's strange because I'm used to them.\"\n\n\"Walk!\" I said. \n\nAnd she did. No hesitation, no shyness. Carol simply stood straighter and walked directly towards me. She stopped less than a foot from me, staring into my eyes. With her heels she was as tall as I was, and we stared at each other for a long moment. Then she turned around and walked away slowly. \n\nThrowing caution to the wind, I crouched down, bringing my eyes to the level of her ass. And I stared. Hard and shamelessly. She was amazing, had an amazing ass. It was all I could do not to get up and jump her right there. When she reached the end of the stage she turned around. If she was surprised to see me crouching she didn't show it. She walked back and stopped, again, about a foot away from me. \n\nBut now that I was crouching, the effect was different. Looking up at her, smiles all around, I had a sudden intuition that if I were to stand up right now, we would kiss. I knew that was crazy, but as awkward as it was to be crouching right in front of her, I remained there. I said \"Again!\", intending for it to be louder, but it came out as a whisper. Carol walked away again, her swaying ass burning my mind. \n\nWe spent most of the evening there, and I have to admit that I thoroughly enjoyed myself. And not just because of her stunning legs, hips and ass. We genuinely had a good time, half of it talking about her walk and her role, the other half just sitting around, drinking a few beers and talking. We were both surprised by the time when I decided to check. It was twenty minutes past midnight. \n\nThose four hours had gone by extremely quickly. She hugged me again before we left, slightly longer than the last one, and I was once again grinning like a fool as I was driving home. While the image of her ass walking away and her thighs and hips walking towards me were overwhelming my mind, her smiling face kept popping up as well. In my bed, before falling asleep, I wondered if I was not falling for this very young girl. Nah... That was just lust talking. \n\nOn the following Monday, Carol and I crossed paths in the corridors a few times, and I was gifted with bright smiles on each occasion. Just after lunch, as we crossed each other again, she simply said \"Tonight?\" I nodded, grinning. And so after dinner I came back to my office, wondering what surprises this night would hold. Suddenly I heard the sound of a few voices from the corridor. Carol was there, but so were two of her friends from drama class. They all stopped in front of my door and Carol said \"They insisted on helping me before the dress rehearsal on Wednesday. Looks like I won't be alone tonight!\" She finished, adding a wink before disappearing with her friends. \n\nTwo hours later, I hear those two friends leaving the studio and walking away in complete silence. Odd. I got up and walked to the studio, which was also perfectly silent. When I cracked the inner door opened, I saw Carol sitting on the stage, her long legs folded, her knees pulled against her chest and her forehead on her knees. And she was crying. \n\nA surge of anger filled me as I thought about her two friends and I barely managed to restrain myself. But I took a few deep breaths and pushed my anger aside. More in control I walked on the stage and felt a stab of sadness as I saw Carol jump in fearful surprise. I knelt behind her and took her in my arms until she managed to take a few deep breaths and control her tears. \n\nI waited for her to talk, and when she did, my anger returned. Apparently, the two girls who had come to help her had in fact been jealous of Carol's role. Gradually they had made her feel like she wasn't the right girl for the role, that either of them would have been better. I was mentally swearing: these bitches had undone all the work Carol and I had done. Fuck them! Carol relaxed gradually as we spoke and I tried to comfort her. About twenty minutes later we were sitting on the couch, drinking a beer. While Carol wasn't in crisis anymore, it was clear to me that she had decided not to do the play at the end of the week. \n\nAt first, I didn't try to make her say it. I changed the subject, and she happily let me do it. We talked about a lot of things, and I was pleasantly surprised to see that she remembered many things from my class. She really had been paying attention. At around 10, we were both a lot more comfortable, and well underway to becoming drunk. The elephant in the room, the play, was nevertheless still quietly hiding. After a brief silence, Carol took a deep breath and said \"I'm not going to do it.\"\n\nI didn't reply immediately. I stared at her for a while, before asking \"Why not?\"\n\n\"They're right, I'm\u2014\"",
        "\"No they're not. They're jealous. That's not the same at all. The very fact that they came here to tell you all that only proves my point.\"\n\nShe paused, looking into my eyes. She started to say something, then stopped. After a short pause, she said \"Why would they be jealous?\" She was still staring deep into my eyes, and I wondered if she really wanted me to say what I thought she wanted.\n\n\"Because you're a remarkably beautiful young woman.\" When I saw her expression changing as she heard \"young woman\", I knew I had made a mistake. She was now looking away form me, and I knew why: I had sounded like a nice man giving a hollow compliment. \"Fuck...\" I said. \n\nShe turned around to look at me again, slightly puzzled by my last comment. \"What?\"\n\n\"I'm sorry... I just can't say what I wanna say.\"\n\n\"Why? Because you're a teacher and I'm a student?\" I simply nodded. \"Well, I'm nineteen you know... It's not like we're in high school.\"\n\nI took a deep breath, and took the biggest risk of my life as a teacher. \"Ok. Let me start by promising that I'm not going to do anything about what I'm going to say, nor will I try to influence you or touch you in any way.\" I paused, tried to gauge her reaction, but couldn't. \"But I have to tell you that I've noticed you since the first time I saw you in my class last semester. You're remarkably beautiful, you have a winning smile, beautiful long hair... And... And a body I'd kill to be able to touch and hold. I've always loved tall and lean girls and women, and you fit that bill perfectly. I've watched you walk many, many times before, staring at your legs, your thighs, you hips... and your amazing ass. I'm almost ashamed to tell you that I've sometimes followed you in corridors just to stare at your ass. I wasn't lying when I said: I have no idea why the guys in your class aren't falling all over you. You're beautiful, lust pours out of you like water from a well, you stir so many things inside me... For the first time in my life I'm sad not to be twenty anymore.\"\n\nI stopped there, still unable to decipher her expression. She clearly wasn't shocked or afraid or insulted, but I had no idea how she was going to react. I had amplified a few of the feelings I had for her in my little speech, but not by much. When I saw her opening her mouth very slightly and then grinning, I was relieved. \"Thank you.\" She said in the silence. \n\nShe took a deep breath, then stood up before stretching her arms above her head. She was still wearing her black lycra clothing, and I could see everything. I decided that I had no valid reason not to say what I had been holding back for a while now. \"Dear God... You're gorgeous.\" Carol didn't look at me but still smiled, and she kept smiling as she turned around slowly, twisting and crossing her legs, emphasizing the marvellous curves of her hips and ass. At one point, her back to me, she bent forward at the waist, offering me an unparalleled view of her ass. With her legs crossed like this... Shit! I whispered \"What I wouldn't do to\u2014\" and stopped myself. \n\nStill bent, Carol asked \"Why don't you finish that thought, Mr. Teacher?\"\n\n\"What I wouldn't do to bury my face between those cheeks!\" I said, panting. I couldn't believe I had said that, which was quite a step beyond the already unbelievable things I had said a minute ago. \n\n\"Really?\" She said, finally straightening and looking at me. \n\n\"Hmmm. Yep.\"\n\nShe walked to the fridge in the most stunning and seductive manner yet, and bent forward once more to grab two beers. When she brought mine after giving me another demonstration of her walk, she surprised me by sitting in the chair opposite to the couch I was on. Her legs were wide opened, and she leaned forward, her elbows on her knees. She was now looking at me intently. \"Was that real? All of it?\" She asked, still suspicious. \n\n\"As real as your ass is mind-boggling.\" I replied. \n\n\"Hmmm. Interesting.\"\n\nStrangely, the silence stretched after that, but neither of us felt awkward. We spent a good deal of that silence staring at each other, but we had nothing to add. At one point Carol got up to put some music on, but sat back on her chair instead of coming next to me. I was puzzled by that, and realized that even near forty, I could still be mystified by girls. About ten minutes of uncanny but delightful silence later, Carol got up and said \"I'll be thinking of you, Friday night, as I walk on stage.\"\n\n\"Good.\" I said, grinning. \"I'll be there, watching you.\"\n\n\"Yes, and watching my ass.\"\n\n\"Of course...\"\n\nCarol laughed, confirming that she was drunk. As drunk as I was, actually. I called us both a cab, and ten minutes later I was laughing like a madman in the back of mine. The driver must have thought that I was a nut job, but I didn't care. I fell in my bed like a rock and slept very late the next morning. On Thursdays I only had classes during the afternoon, so it wasn't a problem. \n\nAs I was teaching, I knew the drama class was having their full dress rehearsal, and hoped that Carol was as confident as she had been last night. At 5 o'clock, I was a bit surprised to get a text message from her. I had no idea she had my cell number, but didn't think too much of it. She said that she would really like one last rehearsal tonight. I wondered if the afternoon had gone badly. \"Meet me at 9?\" She asked. \n\nAs I walked to the studio at 9, I was both excited, nervous and a bit worried. Had something bad happened during rehearsal? Had those two bitches done something awful again? When I opened the door and saw Carol walking on stage, I knew that they hadn't. Or, if they had, it hadn't had any effect. \n\nCarol, her long hair all tied up in a neat bun, still wet from a shower, was wearing the dress she would wear at the play tomorrow, a long ballgown of blood red satin. It was absolutely stunning. On a very tall girl like her, especially since she was wearing her high heeled boots, the effect was mesmerizing. The chorus from \"Lady in Red\" popped in my head, and I grinned when I realized that Carol had probably never heard that song. Damn it! I was twice her age!\n\nBut right then it didn't matter. When Carol saw me, she turned and walked towards me, hugging me before either us us could say a word. A nice hug. A nice long hug. Very long. I could feel her breasts against my chest, her arms around my back and her tummy, as smooth as it was, pressed against mine. The smile she gave me when she gently pulled away spoke volumes. \n\nAs I was looking for words, Carol turned around and walked away, then back to me, grinning in silence. She was stunning. The dress had obviously been adjusted for her, and rather than hide the curves of her hips and ass, it enhanced them. For some reason I didn't want to speak. The room was perfectly silent, except for her footsteps, and it set a peculiar but pleasant mood. \n\nCarol seemed to pick this up as well, and so neither of us spoke. Lifting a finger up in the air, she then pointed at my eyes, then at her hips. I grinned, but wasn't sure what she meant. When she turned around again, she walked away, emphasizing a movement of her hips, then another. She finally lifted both her hands in the air, clearly curious about which one I preferred. I indicated that she should walk again, and then I tried to tell her, using awkward signs, what I liked and didn't like. She was trying, and failing, to decipher my signs. \n\nThen, with a smile, she grabbed both my hands and placed them on her hips. Looking right into my eyes, she started walking and I could guide her movements while walking backwards. When we ran out of stage, she quickly turned around and I felt my hands sliding from her hips to her thighs and quickly on her ass, before coming back to her hips. \n\nI felt my heart beating quite a lot faster. This was pretty much a dream come true. When she started walking again, Carol whispered, \"Don't worry about your promise form last night... In fact, please break it.\" When I asked her to repeat, she just shushed me. When I understood what she meant, about my promise not to touch her, part of my mind froze in surprise, but my hands grabbed her hips in a more forceful way. I was now grabbing her hips, not just touching them. The renewed silence was very different now. When I shifted my grip on her hips, Carol took a sharp intake of breath. \n\nAs crazy as it would have seemed to me just a few days ago, it seemed like Carol and I were on the final steps of a path that would lead us to sex. I was breathing harder, like she was, and while I was still guiding her hips as she walked to the other end of the stage, it was now very, very different. When she stopped, a couple of feet in front of the wall, I didn't let go of her hips. When she tried to turn, I stopped her. Instead, I pushed her a few more steps until her hands pressed against the wall. \"You sure?\" I asked, whispering in the silence. \n\n\"Gods yes!\" She replied. \n\nOne more step put me right up against her and I pulled her ass against my already hardening cock. Two long, soft moans. Mine and hers. I really wanted to guide my hands lower and especially around her buttocks to grab them firmly. But I had waited about a year, never even believing that it could really happen until last night, so I slid my hands upwards. \n\nSoon my fingertips were touching the underside of her breasts through the thin material. I bent my head forward, kissing her exposed neck. I moved my hands even more around her, caressing the smooth line under her breasts until my thumbs touched their sides. As soon as I moved my hands to fully cup her breasts, I bit into her shoulder. \n\nShe moaned and cried out, then pushed me back. I was a bit surprised, and then even more when she grabbed me and pushed my back into the wall. She came closer, hear head about as high as mine, and placed her cheek against mine. A moment later she was kissing the line below my jaw, moving deeper and deeper. I felt her bite my earlobe, then release it only to lick her way around the helix of my ear. \n\nAfter a brief kiss against the sensitive skin right in front of the ear, she whispered \"Do you know how long I've been dreaming of this?\" I was taken by surprise. Completely. I had always seen myself as the creepy teacher lusting over a sexy student. I had been wrong. \"Ever since that first ethics class, I've been wanting to do this, but I never dared!\" As she was speaking, one of her hands was moving on my stomach, caressing or grasping my flesh. \"You seemed distant, not interested at all by us girls. As girls, I mean. I thought that if I ever dared to approach you, you would give me a gentle smile and explain that it would be impossible... So many months lost. Let's make up for them...\"\n\nWhen she stopped talking, she grabbed my belt with surprising strength. As she kissed her way from one ear to the other, carefully avoiding my lips, I felt her hands unbuckling my belt, then unbuttoning my jeans before pushing my pants and boxers down. \n\nFor one brief moment, a reflex, I wondered if this wasn't all an elaborate setup to put me in deep trouble. If she were to take a picture of me with my pants down and cock fully erect in the studio, I would face very serious accusations. Then my cock sprang free of its restraints and Carol looked down at it. The expression on her face made it pretty clear that she wasn't doing this to get me in trouble. As I moved my legs around to free myself from my pants, she pulled my t-shirt above my head. \n\nCarol then stepped back and looked at me up and down in a manner I had never experienced. In her eyes I could see a mix of lust and deep hunger. I realized then that Carol wasn't going to let me take the lead passively. With a wolfish smile on her lips, she reached behind herself and unzipped the dress. While other girls could have turned this into a teasing striptease, Carol simply pushed the shoulder straps off and let the dress fall down. She was, as I had guessed, completely naked. And a sight to behold. \n\nShe didn't fit the typical cannons of beauty. She wasn't a tall and thin model-like beauty; too much hips and ass. Nor was she a more voluptuous type of vixen; too tall and slim. In fact, I realized that while a description of her body would produce a strange whole, everything somehow fit for her. She had long slim legs which flared dramatically to very generous hips and a magnificent, plentiful ass. \n\nGiven that she still faced me, I hadn't seen it directly, but most of her thin, stretching pants had revealed everything. She kept her bush mostly full, but trimmed it down on the sides. She had a flat stomach leading up to smallish breasts, a decent 34B cup was my guess, and delicate shoulders. Her long, very long hair, now free from the tight bun, flowed down to her waist. She should have looked disproportionate, but she didn't. In fact, she looked mouth-wateringly delicious. \n\nAlthough it was clear that she liked to take initiative, I was not going to let her take all of it. I walked to her, grabbed her in my arms and kissed her. Long. And hard. I was surprised by the near instant intensity of that kiss, then briefly remembered that she had been hoping for this as long as I had. One of my hands was behind her head, guiding our kiss, and the other couldn't wait any longer and dove down to her ass. When I finally grabbed her naked ass, feeling it's curvaceous, well rounded but firm flesh in my hand, I moaned into our kiss. I felt her lips moving into a partially formed smile as we kept on kissing. \n\nSo focused I was on that delightful ass, that I barely registered the underside of my cock being pressed against her bush. Barely registered until she slipped her hand between our bodies and grabbed me. Moving my body away very slightly, I allowed her a better grip. Kissing her, kneading her ass now with my two hands, I felt her hand expertly caressing my cock. I was in heaven. Or not quite. Breaking the kiss, I leaned against her head and said \"You know I want your ass.\"\n\n\"It's yours. All yours, whatever you want to do with it.\" She replied breathlessly.\n\n\"Good!\" I replied simply, surprised by the implications of her explicit comment. \"I want it now.\"\n\nWe broke our embrace and I moved to the couch. I sat on it, my ass on the edge of the seat with my knees opened, then motioned her to come and stand in the small space between them. She did, smiling and glowing. When she arrived, I grabbed her hips and leaned in to kiss her bush. After darting my tongue a bit lower, I pulled back and said \"Soon...\" But we both knew what I wanted, and I turned her around. \n\nSo, I was now finally face to ass with this glory, this heavenly ass I've been ogling for the better part of a year. And it was as remarkable as I imagined it. Full in the truest sense of the word. I had already used that word in the past to describe the asses or breasts of my previous girlfriends. As nice as they all had been in their own rights, Carol's ass made it clear that none of them had really been deserving of that word. \n\nI had both my hands on her hips, my thumbs squeezing and releasing her flesh, and I was staring, unable to do anything else. I just stared as her flesh responded to my pressure, mesmerized. When I slid my hands to grab as much of her cheeks as I could, and squeezed hard, my eyes opened wide. I could barely believe my eyes and I was floored by the tactile sensations as well. \n\nPart of me wanted to discover those delights slowly, and part of me wanted to dive in. The latter part won. \"Close your legs and bend forward.\" I said, and she complied. I knew that asking her to close her legs would limit my access, but I wanted to stretch my pleasure just a bit. I reached her ass and bit one of her perfect cheeks before licking it all over. \n\nI was going to enjoy this like a drunkard enjoys a long denied drink. I felt a twinge in my lower belly as I licked from one cheek to the other, then proceeded to devour them as well. But what I really wanted was somewhat deeper. Closing both my hands on her ass, I squeezed hard and pulled Carol's cheeks slightly apart. And, finally, dove in. \n\nWhen I felt her supple yet firm flesh against my face, and my mouth in that long coveted cleft, I shuddered all over. When I opened my mouth and pushed my tongue out to taste her most intimate flesh, I knew I was not going to be able to resist. \"Open your legs, slowly. \" When she did, I suddenly had better access and my tongue finally touched her anus. The way she shook and laughed when I did only confirmed the amount of sheer pleasure I would have with her. \n\nMost of my previous girlfriends only \"let me\" play with their assholes. Carol seemed to actually like it. When I released my hard hold on her buttocks, I felt them bounce back against my cheeks, and I knew I was living the fantasy. I had fantasized so many times about this moment, and now I was deep in it. \n\nAfter that I pulled her cheeks against mine and felt myself disappearing in her ass. When I pushed my tongue lower until I felt and tasted her pussy, she moaned again. I pulled back and looked down. She was mostly bent over forward, her hands on her ankles just above the high heeled boots. Our eyes met in this awkward position and we smiled. \"Do you like to be eaten? Not only licked or tasted or teased. Do you like to be devoured?\"\n\n\"Like you couldn't imagine!\"\n\nI dove in again, my mouth wide open on her pussy as I gave her all I had. When I pressed my tongue up against her clit she began moaning and pretty much never stopped until she climaxed a few minutes later. All I was doing was giving in to my fantasy, and it seemed to work. I was all over her large ass, from her pussy to her ass, from one buttock to another, from the small of her back to her pussy and pushing my tongue inside both her holes. Her ass was all mine, finally all mine!\n\nAt one point, as I was grinding my lower lip on her clit with my tongue inside her, she began shaking and her moans changed. Taking my cue, I stopped changing positions and just held on as I felt her climax cresting. I had to hold on and ended up falling down, sitting on the floor as she buckled upon my face. I was being clobbered by her ass and pussy, and I loved every minute of it. \n\nWhen she began pulling away I grabbed her hips and pushed my face as deep as I could between her big cheeks. She laughed, then cried, then moaned and finally she pushed me back. Standing right above me, tall and powerful and glorious, her inner thighs and pussy glistening with her juices and my saliva, she asked me to sit on the sofa. As soon as I did, she climbed over me and looked at my cock. With a finger in her mouth, she said \"One day I'm going to return that amazing oral favour, but right now I want you inside me.'' \n\nAs she squatted over me, I realized incongruously that it had been years since I'd had a nineteen year old pussy around my cock. Many years. With her pussy right above my cock, Carol whipped her hair to the left and to the right, sending her thick mane behind her back. She had no idea just how much I loved long hair... One day I hoped that she was going to tease me with it . But right now, as I felt her hand on my cock, guiding me towards her entrance, I forgot about her hair. In a matter of seconds I was touching her teenage pussy lips, felt it part around my head and slip all the way down. \"Fuck that's good!\" She shouted. And it was. Damn! Carol didn't remain there long. Instead, she began riding me like an unbroken horse, driving me hard into the sofa, in full control of what was happening. \n\nEvery time she drove down I felt her fucking ass slamming against my thighs and couldn't believe that she was actually riding me. I was fucking Carol! It was impossible, and impossibly good. She was once more staring right into my eyes, and in her expression I could see both a challenge, a furious sexual energy, as well as pure pleasure, the raw joy of good sex. Her eyes were closed slightly, the challenge right there, while her lips were smiling, brightly smiling. ",
        "Arching her back and raising herself up slightly, she was offering me her breasts. I instantly grabbed one of her nipples in my mouth, feeling its firmness and its enticing length. I could also smell her, fresh from a shower but already coated in a fine sheet of sweat, and it was delicious. I had forgotten how delicious girls were, how good they smelled. She smelled like youth, like health, like spring. No perfume, just her. Her all over me, in my face, against my body, around my cock. \n\nPushing my head back, Carol switched position. She had been kneeling until that point, her long legs on either side of me. One leg at a time, she was now squatting above me, giving herself even better control, even longer penetrations. And, something which she was fully conscious of, a much better position to slap her ass on my thighs. \"You like my ass? Liked my ass on your face? Like it when I slap you down like a silly girl?\" Damn this girl was fire! She was grinning, yet her eyes still held a challenge. They seemed to be asking \"Can you handle me?\" \n\nSliding down a bit on the sofa, I surprised and unbalanced her for a moment. During that moment I grabbed her ass with my both hands and began taking some control back. While I couldn't do much while I was sitting straight, things were different now that I was more stretched out. Carol had been driving us both at a decent pace, but she'd had to move her entire body with each stroke, limiting her speed. \n\nBefore she could fully regain control, I began pounding into her as I was holding her relatively motionless above my cock. Whipping my abs into a frenzy, I was driving my pelvis up and down fast. Really fast. She was drenched and hot, more than lubricated enough. Her hands tightened on my shoulders when I began, and she threw her head backwards to cry out. \n\nSoon I was pulling her down to my my rising cock with each stroke, giving her all I had, once again. I felt as if we were fighting, pushing ourselves as hard as we could to please the other. Soon she slipped one of her hands down to her pussy and cried \"Don't stop... Don't you dare stop! Damn! Fuuuuuck!\" And she was climaxing again, pushing hard on me, forcing me to slow down until we found a much slower and deeper rhythm to ride her climax out. \n\nAnd man did she stretch it! I had never seen a girl or woman climax this long. I was happy for the slower pace: when you're living your fantasy and being ridden hard by a nineteen year old nymph, you can't hold off for long! In a matter of seconds her entire body was drenched with sweat. I could see it run down her nose, her nipples and felt it on her hips and thighs as she kept screaming her pleasure. \n\nShe finally crumbled in my arms, shaking, a few occasional spasms still giving her body a few more pulses of pleasure. \"You crazy old man!\" She whispered in my ear. \"Shit that was good!\" She added, biting my shoulder sharply. \"And you're still hard... That's good. That's very good. And it warrants a gift... Your tongue told me something earlier.\" She paused to take a few deep breaths. \"So you like to explore both holes, do you?\" Carol pulled back, looking at me with a wicked grin on her face. \n\nAfter pullingmy cock out of her pussy she stood up, turned around and said \"I'm so glad. \" With that, I felt her lowering herself until my head touched her anus. As inch after inch of my cock slowly penetrated her ass, moving up and down a few times in the process to spread the lube, I was afraid of going crazy. Anal had always been one of my fetishes, and anal with Carol had been just about my main fantasy since meeting her. \n\nI never got to enjoy that particular pleasure very often, so usually when I did, I tried to enjoy each and every little sensation. The fact that it's similar yet distinctly different from a pussy, the fact that it's tight when going in then becomes more relaxed as you get deeper, the fragility of that part, etc. Now, all my mind could register was that I was inside Carol's ass. \n\nSoon she had adjusted to my cock inside her and had bottomed out, squashing her ass against my thighs and belly. Very slowly she rose up again, leaving only the tip of my cock inside her. When she started going down again, she made her hips rotate slightly from left to right. It was as if she was dancing on my cock as her ass devoured it, adding to the already insane sensations. At first she was too high to place her hands on my thighs and the movements were wide and sensuous. When she was low enough to brace herself, the sweet rotation turned into a slow but more controlled corkscrew motion, which drove me even crazier. \n\nEventually she was fucking me again, but with her ass this time. Not as hard, not as deep, but damn it was good. I was holding her by the waist, guiding but not forcing her movements. I was thrilled to see that she seemed to enjoy it. Maybe not as much as I was, given that I was flabbergasted, but when she looked back at me she was still smiling, her eyes closed. As time went on, I knew I was not going to last long, especially when she began to twist around more. Instead of just moving up and down, Carol was still rotating her hips. When I whispered \"Shit!\" And dropped my head back on the couch, she slowed, then stopped before asking: \"Want to see me drop against your cock again?\"\n\nOh God. As much as the feeling of slipping out of her ass was bad, it was more than compensated for by the sight of her perfect ass as she stood and turned a few times, pushing her ass close to my face. As I was staring at her magnificent ass again, seeing it's fully ripened roundness get closer and closer to my cock, Carol started lowering herself. \n\nWhen she felt my cock against her opened anus, she twisted her head to look at me, a naughty smile on her lips. Suddenly, I was popping her sphincter and penetrating a few inches much quicker. Teasingly slowly, she lowered herself even more and I watch, transfixed, as her ass devoured every inch of my cock for the second time. I felt my cock pushing against her, very slowly disappearing in the cleft of her heart-shaped ass. Carol barely flinched. I was going to learn, quite later, that this wasn't, by a long shot, her first anal experience. \n\nEventually, after my inches disappeared inside her ass, I felt her generous buttocks and thighs moulding themselves against my own thighs and abdomen. My hands on her hips again, I pulled her back, which not only got me deeper, but also squashed even more of her lithe and shapely flesh against my own. Squatting between my opened legs, Carol then began fucking me again, going as deep as I would go before rising up until nothing but the head of my cock remained inside her. My mouth was now gaping open as I stared at the impossible scene in front and around me. \n\nSuddenly, a barely heard whisper \"Pull me harder, \" and my heart began pounding harder. Soon, so was Carol's ass. I grabbed her hips in a much firmer grip and began pulling her down harder. Then harder again. If I had been floored by the sight of her ass smoothly taking my cock, I was now flabbergasted. I was fucking her ass as hard as I had been fucking her pussy. That, for me was a first time. Eventually I even began helping her on her upward motions, controlling her body like a sex doll upon my cock. I was entranced by the sight of her ass slapping against me, and the soft waves that coursed over her flesh with every slap. \n\nI couldn't say how long I lasted, staring at this perfection of an ass as it was voraciously eating my cock. I was assfucking the most amazing ass I had ever seen in my life with more intensity than I had even been allowed to before . I wanted to climax into the biggest orgasm of my life, and at the same time I wanted to remain this way until time ended, or die right now. Luckily for me, the climax won. \n\nDespite everything and because I was so focused on the glorious sight of my cock entering her anus, I was taken by surprise by the suddenness and power of my climax. I barely had time to say, absurdly, \"This is going to hurt!\" Before it hit. I felt my body contorting with and around a huge shock of pleasure, and I shook as I emptied myself inside her. I barely noticed that she was laughing, encouraging me to cum and cum even more. \n\nFinally, inevitably, the sensations became too intense and I had to grab her hips and stop her. Gently, very gently, she moved up and away from my cock and sat down beside me, then against me ,on the couch, as I was regaining a minimum amount of control over myself. As I did, she said, \"This was an amazing first time, lover. \"\n\n\"Damn!\" Was all I could say, but I knew she could see my grin.\n\n\"Once I have properly broken you in, it's going to be even more fun. \" Carol, twenty years younger than me, said.\n\nI laughed, then turned to her. \"You're serious? Do you think I've been doing nothing but the missionary position for the last twenty five years?\" She was grinning. \"You've got something coming, little girl. I do like the idea that we're going to discover, and teach apparently, each other for a long while though.\" Carol grinned even brighter and nestled her face in the crook of my neck. \n\nAbout half an hour later, after a mutual shower in the changing room, we were naked again on the sofa. We spent the rest of the night there together, talking, fucking and thoroughly enjoying each other. It turned out that it was Carol who suggested my name to Nath for the role of responsible adult while she worked on her walk. But it wasn't all a sweet setup. She did have problems with her role, and the two girls really were mean to her. It had all been a very real excuse to get me alone with her. \n\nThe following evening, as I watched her positively shine on the stage in front of a large crowd, I was smiling. I spent the entire evening smiling. Not only was Carol's performance great, but I knew she was thinking about me as she pretended to seduce that poor guy. He was visibly moved by the very confident tall beauty as she talked unctuously to him. But beyond that, I also knew that after the play, as soon as we would be able to leave the party without being too obvious about it, I would spend another night with her. Shifting my legs in the crowded studio, I smiled as realized that my cock was already hardening."
    ],
    "authorname": "MrIllusion",
    "tags": [
        "ass",
        "long legs",
        "long hair",
        "small breasts",
        "model",
        "anal",
        "young girl",
        "stage",
        "school",
        "shy girl"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/walking-lessons"
}