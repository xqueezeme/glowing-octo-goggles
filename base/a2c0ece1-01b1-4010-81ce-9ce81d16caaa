{
    "title": "The Most Valuable Gift",
    "pages": [
        "Author's Notes:\n\n'The Most Valuable Gift' is an unplanned sequel to 'One Who Understands'. \n\nSome minimal effort is made here to bring readers up to speed on the backstory but if you like this story feel free to read the original tale.\n\nThe trilogy follows this order:\n\n\u2022One Who Understands\n\n\u2022The Most Valuable Gift\n\n\u2022To Walk a Mile\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nThe Most Valuable Gift\n\n********\n\nPrologue:\n\nEdward Walters wasn't gifted with great intelligence. He wasn't strikingly handsome nor was he fabulously wealthy. He was, more often than not, tongue tied around women so couldn't claim to have a silver tongue. He didn't have a six figure job, drive a fast sports car, or own a villa in the south of France.\n\nBut he was happy. Deeply, completely happy.\n\nHe had the love of the woman he'd been in love with since he was just a boy of six years. He'd lost his mother to a tragic accident and had no father so he'd been taken in by his mother's cousin Shirley Wilson. While she'd been a less than ideal replacement, her ten year old daughter Grace saved him from a life of misery and loneliness. His love for Grace just grew over the years as he did.\n\nAnd grow he did. Now that he was almost in his twenties he was a big man, standing 6' 2\" and 240 lbs of hard muscle. His genes and years of playing football in school had given him a strong body. He wasn't aggressive by any stretch of the imagination. Grace called him an innocent. He relied tremendously on her because he often found himself confused and troubled by people's behavior. He didn't recognize when he was being lied to nor did he understand why people did it. This often led to him being hurt or taken advantage of. He knew that wasn't normal but Grace never made him feel stupid or ashamed for his inability to understand. She was patient and explained things to him. She understood him better than anyone and he loved her with every fibre of his being.\n\nThe truly incredible fact was that she loved him the same way.\n\nThey'd lived with her mother until Grace caught her sexually and emotionally abusing Ed. After the confrontation, Shirley spitefully sold her house to move in with her boyfriend making them essentially homeless. While they were both adults at the time they would have been on the streets had it not been for another woman in Ed's life.\n\nRachel Thompson was the mother of one of Ed's football teammates. Initially she seemed to be just attracted to his physical attributes but she confessed that she had fallen for his innocence and his sweet, gentle nature.\n\nShe'd later said that she never expected their relationship to advance beyond their mutual and powerful physical attraction and she'd resigned herself to that. She lived alone in a large mansion since her ex-husband and his son had unsuccessfully tried to kill her to collect the insurance money. She was lonely living alone in the big home and it was beginning to weigh heavily on her. When she heard that Ed and Grace were going to be out on the street she leapt at the chance to come to their rescue and ease her loneliness. Grace and Ed were stunned by her generosity and willingness to take them in.\n\nWhen Ed discovered he was in love with Rachel as well as Grace, it was Grace who announced it to Rachel. Knowing him as intimately as she did, Grace was aware of his true feelings for Rachel almost before he was. She wasn't threatened. She knew he loved her without reservation. She was also aware that Rachel wasn't the only woman that he'd been intimate with. They, like Rachel, had begun their relationships with him for the pure physical thrill of having sex with the big man but they'd all become attached to him... as he was to them.\n\nEd had been with Rachel's best friend Angie Spencer, a widower, and their mutual friend Zoe Sandoval who was separated from her husband as he was serving a life sentence in prison. He'd also been with two other women in Rachel's neighborhood, also her friends, Stephanie Mathews and Carolyn Patterson, both of whom were going through divorce proceedings. All continued to see Ed with Grace's blessings as long as they never abused Ed's good nature or took advantage of his innocence. If she ever discovered they had manipulated him as Shirley had done then their relationship with him was over.\n\nAside from being very busy at home, Ed had his dream job working for Drakos Heating and Cooling. The owner had paid for Ed to get his certification and nurtured his favorite employee as Ed's work was second to none. While his unique mental state may have given him some socially challenging issues they also allowed him to focus on his task with an almost laser like precision. It was almost a savant state. He wasn't really clear on what all that meant but he knew he loved his job and for the first time in his life he was really good at something.\n\nSo he was happy. With the leaves gone and snow threatening to fall any day now, his very favorite time of year was rapidly approaching! Christmas! Now that he had so many more people to share it with Ed knew he had more reasons to be very merry indeed!\n\nChapter 1\n\nEd pulled his old, beat up pickup into the garage of the beautiful mansion up on Silverton Heights. His truck was as out of place in this upscale neighborhood as he often felt but it was perfectly suitable for him and he'd refused Rachel's generous offer to replace it with a newer model.\n\nGetting out of the cab he stretched his tired muscles. He'd worked out this morning with the gym equipment in the basement. If he'd known how strenuous work was going to be he might have chosen to skip the workout. The four story shopping complex in the downtown boutique shopping district the team was working on these days involved a lot of heavy lifting and cramped working conditions but he was putting in extra time to get the job done quickly. If they could meet the deadline for the spring opening there was a generous bonus involved.\n\nMr. Drakos was very delighted with the progress they were making, especially Ed's. They were reaching a phase where the other contractors would be taking over the building to complete their work and they would have a couple of months of respite before they'd need to return to finish up. If the other teams didn't encounter any complications then they would definitely hit the deadline. As it was they'd be early, largely due to Ed's peculiar gestalt perception of systems and patterns.\n\nHe had poured over the building's blue prints to ensure he understood where their installations would run and noticed some errors in the construction of the building's layout. Two important walls had been poured in the wrong location and there wouldn't be enough room in the central utilities shaft to house all of the required conduits. He'd brought this to the attention of the new site foreman who confirmed Ed was right and contacted the project managers, the Klein Group, with the setback. Ed provided an alternate suggestion for the location of the electrical conduits which actually cut some of the cost so the foreman was able to take steps to keep the project moving.\n\nBut today Ed was tired. It was late. Getting home at 9PM every night this week was draining but he was done for the weekend. No Saturday shift tomorrow.\n\nHe entered the house and heard voices coming from the kitchen and the wonderful aroma of cooking. He followed this until he was standing in the doorway looking at the two women he shared the home with.\n\nRachel noticed him first as she was facing his direction. Her smile dazzled him as it always did. Lovely blue eyes twinkled with delight as he stood enraptured by her beauty. Lush red hair cascaded over her shoulders and partially obscured her abundant cleavage. His eyes were trapped there for a moment as she subtly arched her back to tease him just a little.\n\nGrace turned with a smile and he looked into her loving dark eyes. She was not as tall or svelte as Rachel but she absolutely glowed with love for him and quickly crossed the room to pull him into a tight hug. Ed kissed her and felt himself floating away to heaven as her soft lips against his were absolute bliss.\n\n\"Welcome home,\" she purred when she pulled back. He loved the feel of her body against his but he was just too pooped to respond that way.\n\n\"It's good to be home!\" he sighed happily.\n\nGrace released him and he made his way over to Rachel. He pulled her into a hug and kissed her. She slipped him a little tongue which sent a spark to his groin but he pulled back and shook his finger at her. \"I'm not risking falling asleep while making love. Tonight I sleep. Tomorrow...\" he bounced his eyebrows at the two ladies who chuckled at him.\n\nRachel patted his thick bicep, feeling a tantalizing little tingle shoot through herself and turned to get his dinner.\n\n\"I made a chicken casserole from that recipe you gave me.\" Rachel said as she pulled the dish from the oven. Ed's mouth began to water immediately. She served up three plates, giving Ed a large portion. They carried their plates to the table. \"Careful everyone, it's hot!\"\n\nGrace brought tall glasses of cold water to the table and they sat together.\n\n\"You two don't have to wait for me to get home to have dinner!\" Ed exclaimed.\n\n\"Nonsense! We love eating together!\" Rachel insisted and Grace just smiled at him. She knew he was secretly delighted they were sharing this mealtime with him.\n\nEd blew on a forkful of the steaming noodles and chicken then popped it into his mouth. His eyes closed in happiness as the flavors melted across his tongue. \"Oh, that's so good, Rachel!\"\n\nShe gave him a very pleased smile and enjoyed her own meal.\n\n\"How was school today?\" Ed asked Grace. She was attending college studying accounting as she wanted to be a forensic accountant.\n\nGrace's sudden smile warmed his heart. He was so glad she was finally on the path she was destined for and he was so glad he was able to make it happen for her.\n\n\"It was really good! The prof is taking us through an actual case history of a company involved with money laundering!\" she gushed.\n\nRachel smiled at the other woman's obvious delight.\n\nEd turned to her and she dabbed her mouth as she swallowed. \"Well, I had lunch with a bunch of very wealthy ladies with too much time on their hands,\" she quipped.\n\nEd looked at her curiously and she realized he hadn't caught her self-effacing tone. Grace raised an eyebrow at her and she nodded apologetically.\n\n\"With our neighbor from the top of the hill no longer available to attend these social events, the Empanada League invited me to their luncheon. Most wouldn't even look at me as I hadn't inherited my fortune but one of the ladies was friendly so the lunch wasn't a complete loss. They were discussing some big charity gala event tomorrow night. I think it's a five thousand dollar a plate dinner with a silent auction and celebrities attending.\"\n\n\"Five thousand dollars a plate! That's crazy! But I'd pay $2000 for another plate of this casserole.\" Ed exclaimed.\n\nRachel snorted and got up to get him some more. On the way back to the table the phone rang. She put the plate in front of him and ran her fingers through his hair as she walked past to get the phone. Ed and Grace got to hear one side of the conversation.\n\n\"Hello? Oh, hi Tristan. Tickets? No, I didn't buy any. Tomorrow night? Yes, I know. What?! No, that's- that's too generous... I- I suppose I could. A date?\"\n\nRachel looked desperately at Ed who just blinked back at her. She looked to Grace who grinned, pointed at Ed and nodded.\n\n\"Yes, I have a date. What? Yes... he is pretty special. Are you sure? OK, I'll see you there. Seven PM at the Esplanade. Thank you!\"\n\nRachel looked back at their curious faces. Her mouth was working but she couldn't speak.\n\nGrace grinned at her excitement. Ed just continued to eat as he watched her.\n\n\"That was the nice woman I met at the luncheon, Tristan Grant. She's invited me and my date to the charity dinner tomorrow night.\n\n\"Who are you taking?\" Ed asked.\n\nRachel smiled at him and Grace snorted.\n\n\"Me? At a fancy charity dinner? Should I wear my fancy jeans?\" he grinned.\n\n\"I guess we're going shopping tomorrow!\" Rachel cheered.\n\nEd grinned and hung his head to the sound of Grace's giggles.\n\nChapter 2\n\nThe Esplanade Convention Center was buzzing with activity. The paparazzo were out in force trying to capture images of the rich and famous, participants of the annual charity dinner. The men were mostly dressed in classic black tie but the ladies wore a stunning array of styles and colors. Classic to avant garde was on parade and the onlookers were eating it up. They were also appreciative of the beauty being flaunted. Along with the beautiful dresses and glittering jewellery many of those attending were very pretty indeed, both the men and women. Most of the idle rich spent their time with trainers and in salons maintaining their physiques. Others went the other way because, fuck you, if great food and wine is meant to be enjoyed why not enjoy it to excess!\n\nAs their limo pulled up to the red carpet in the underground entrance of the Esplanade Rachel was trembling with excitement. She'd always wanted to walk the red carpet. Ed was looking a little stunned but he was doing his best to hide it.\n\nJust like he was doing his best to hide his very large and visible erection against the damn tight pants Rachel and Grace had insisted he get with the tuxedo. He hadn't been able to keep his eyes off Rachel as she looked incredible in the deep shimmering purple dress which left her shoulders exposed and had an expanse of lace over her chest that did little to hide her impressive assets. Ed swore the lace accentuated her round, firm- He moaned quietly as he throbbed once more.\n\nRachel's luxurious red hair was artfully teased up onto her head exposing the soft skin of her long neck. Ed struggled to keep from kissing her neck and to keep his fingers out of her red locks.\n\nThe car came to a stop and Ed stepped out. He walked around to Rachel's door and tried to ignore the flashes popping in his vision. He opened the door and offered her his hand. Her soft fingers settled in his and she stepped from the car and smiled demurely at him.\n\nThey began their walk.\n\nEd was taken aback at the thunderous yelling and the almost violent lightshow coming from the paparazzo. He felt a gentle tug from Rachel's hand on his arm and they stopped briefly to face the cameras. If anything the noise got louder.\n\nThen they continued on their way. Once they were out of range the noise dropped considerably.\n\nRachel leaned close to Ed and he felt her trembling. \"Oh my god Ed! That was almost worth paying the price for dinner tonight,\" she said quietly just for him. Between them she brushed her fingers lightly across his bulge and her shiver intensified. \"Ohhh, if there was a way to take care of this right now I would!\"\n\nHe discreetly adjusted himself and they approached the door. A few couples were waiting their turn before them. At the door was a slim man with thin hair who was holding a printed list of names. He was gracious and professional as he greeted the couples. As the man identified each guest he would smile, hand the ladies a ticket and gesture for them to enter. Ed wondered what the ticket was for. There was so much new and strange going on here he was trying his best to fit in so Rachel would continue to enjoy the experience.\n\nThen it was their turn and the man was giving them the once over. Ed remained silent and stood slightly to the side as Rachel approached. The man lifted his nose to look at Rachel.\n\n\"Rachel Thompson and Edward Walters, guests of Tristan and Dale Grant,\" she said with a smile.\n\nEd noticed the man's nostrils flaring and his eyes narrowing slightly as he turned to look at the list. Ed's eyes snapped to the papers and the name Dale jumped out immediately. Just below that was Rachel's and his name.\n\n\"Hmmm, I don't see your names-\" the man began with an odd tone in his voice as he pursed his lips like he'd tasted something foul. Ed saw Rachel begin to stiffen. Doubt slipped into her eyes.\n\n\"Actually, our names are on line fourteen of the page you're holding just below 'Dale and Tristan Grant'. Maybe you didn't see it because the names are in reverse order on the paper,\" Ed said in a friendly way as he leaned his large body in towards the man to point at the paper.\n\nThe doorkeeper leaned away from Ed who continued to smile and point to the names. Rachel's expression quickly passed from doubt, to surprise, then anger and finally to satisfaction as the little man begrudgingly acknowledged their names were on the list after all, clearly intimidated by Ed.\n\nHe gestured for them to enter and they started but Ed turned back and held out his hand. The man looked at Ed nervously.\n\n\"Rachel's ticket,\" Ed said with a smile.\n\n\"Ah! Y-yes- ah, let me get that,\" he said in a rush and handed Ed the ticket. Ed raised it and smiled at the man. He missed seeing the man flinch but Rachel saw it and enjoyed it. They moved further down the hall.\n\n\"I don't know what the ticket is for but all the ladies were getting one so you should hold onto it,\" Ed said, oblivious to the man's foiled effort to embarrass them.\n\nThe ticket went into her clutch purse and she hooked her arm through as they made their way into a large open area. The theme was Winter Festivities so the huge hall was decorated in white and silver. Artfully positioned spot lights made the crystals sparkle and glitter. Ed was mesmerized and grinned in childlike wonder. Rachel enjoyed his excitement.\n\nThey made their way further into the room nodding and smiling to the guests who looked their way. There was a bar along one wall and people were milling about in small groups, talking, drinking, laughing, and generally people watching.\n\n\"Edward, could you get me a glass of white wine?\" Rachel asked.\n\n\"Certainly. Don't leave without me!\" he said with a smile and she shook her head.\n\nWhen he returned with two glasses of white wine Rachel was standing beside a very tall, slim and lovely strawberry blonde woman who could have been a little younger than Rachel. She was holding the arm of an equally tall and slim man with greying blond hair. He appeared to be much older than his companion. Rachel was smiling broadly so Ed smiled at the newcomers and handed Rachel her wine.\n\n\"Thank you Edward! I'd like to introduce you to the very generous and gracious couple who invited us to the event. Dale and Tristan Grant.\"\n\n\"So this is the man Rachel talked about all through lunch yesterday!\" Tristan said with a big teasing grin, her strong southern accent jumping out at him. Rachel blushed and Ed shook the woman's hand.\n\n\"It's very nice to meet you,\" Ed said with a blush of his own.\n\n\"Oh my goodness! I'm just teasing Edward but now I want to know all the secrets!\" the woman gushed with a huge smile.\n\nDale rolled his eyes at his wife's antics and held out his hand to Ed.\n\nEd was a little surprised by the strength of the man's grip but he equalized the pressure and something in the man's eyes changed. He looked at Ed's hands and noticed they showed some small scars.\n\n\"You a wine drinker Ed?\" Dale's voice was deep and gravelly, the roughness a little like what Angie's voice had.\n\n\"Not really. I rarely drink but it seems to be the social thing to do. I didn't know what else to order,\" Ed confessed.\n\n\"I'm dry so let's head over to the bar and get you a good drink,\" he suggested and Rachel nodded so he let the man lead him away.\n\nOnce they were alone Tristan looked at Rachel with a twinkle in her eye. \"He's delightful!\"\n\n\"Yes, he's pretty amazing.\" Rachel agreed glancing back in the direction Ed had gone.",
        "Tristan heard the love in Rachel's voice and got a little worried. She'd seen other women in the group fall in love with their young lovers only to be emotionally destroyed when these young men moved on. In the short time she'd spent with Rachel at the luncheon she'd immediately clicked with her. Tristan listened to her inner voice believing to her core that there was wisdom in instinct. Rachel was good people. She and Dale had met so few when they moved here from Texas. They'd left behind their social connections and had made efforts here to connect with the 'right people'. Peers from their tier of society but there was always something lacking. Some were dull as plain crackers, others had no depth, and many had a weakness of moral values. She picked up immediately from Rachel that she was more right than any of the 'right people'. Now she may be setting herself up for heartache.\n\nHer concern must have shown on her face as Rachel reached over and touched her hand. \"You don't need to worry about me. It's good.\"\n\nTristan began to apologize but Rachel just shook her head with a grin. \"Get to know Edward and you'll understand.\"\n\nThe blond looked curiously in the direction her husband had taken the young man.\n\nEd and Dale were standing at the bar where the older gentleman was schooling the bartender on what a good scotch was. Finally two tumblers were presented to them to his satisfaction. He handed one to Ed.\n\n\"Some toss this drink back and swallow it quickly but I personally feel that's an insult to the craftsmanship. This is your first exposure to scotch?\" Dale asked Ed who nodded wide eyed. \"Then take the scent first. Careful, even that can have a kick. Then take a sip, roll it on the tongue then swallow.\"\n\nEd placed his nose over the tumbler and sniffed cautiously. The scent was like nothing he'd smelled before. Spicy, hot, rich... he took a good sip and ran it over his tongue allowing it to slide back to be swallowed. The heat moved down his chest and his eyes watered a little as he hadn't been expecting that. The flavors in his mouth just continued to get better. He looked into the tumbler with a pleased look. He LIKED scotch! He looked to the man standing next to him and saw that odd expression again. Grace wasn't here to interpret them for him and Ed felt like he was being graded, like he was back in school. He looked the man in the eye.\n\n\"Have I done something wrong? You keep looking at me like my high school teachers used to. Well, most looked at me in disappointment. If you could tell me how I've offended you maybe I can do something about it.\"\n\nThe older man looked ashamed. \"I'm sorry. I didn't mean to make you feel uncomfortable. You aren't what I was expecting. In the past I've seen young men with some of the ladies here tonight and these men have always been soft, egotistical, self-centred sponges. Your hands have seen work like mine. You weren't threatened by my handshake and didn't try to show me up by overpowering my grip. You haven't tried to bullshit me by pretending to be worldlier than your age would typically allow. I'm sorry if I've offended you.\"\n\nEd nodded and looked back to his drink. He sipped some more, following Dale's instructions once more. After he enjoyed the warmth he looked back at the man.\n\n\"I don't know any of these other young men. I don't know why they would behave that way. It makes no sense to me but I don't get a lot of people's behavior. I guess I'm slow that way.\" He felt the warmth of the scotch slide along his limbs and he felt a little more relaxed. He took the last sip and smiled as he set the glass on the counter. \"That is a very good drink!\"\n\nDale liked this young man. He was refreshingly honest and amazingly centered. He hadn't flared with righteous indignation or false bravado. And he understood scotch! He grinned at Ed and Ed grinned back. He ordered Ed another drink then they made their way back to the ladies. Just before he arrived he looked over at Ed.\n\n\"You may want to nurse that one. Scotch is a strong drink that will catch you off guard if you aren't careful with it.\"\n\nEd looked at him and nodded seriously.\n\n\"Dale! You're not corrupting this delightful young man with that wicked drink are you?\" Tristan chastised her husband with false outrage.\n\n\"No, I'm grateful he's introduced me to it. It's quite good! He's also told me to be careful with it.\" Ed exclaimed in defense of the older man who was grinning back at him.\n\nRachel smiled at Ed and took his arm to lean against him. He leaned towards her as well, enjoying the feel of her body. He returned the look of love and Tristan's eyes widened as she watched. She nodded to Rachel.\n\n\"Did you want to take a look at the items they are auctioning off?\" Dale asked.\n\nThey made their way around the room looking at the prizes and the older man explained to Ed how a silent auction worked. He was pleased to see that Ed wasn't particularly awed by the hugely expensive prizes. They passed the bidding sheet for a fierce looking red sports car and Ed didn't even blink in its direction. Curious.\n\n\"Ed, if you don't mind me asking, what do you drive?\" Dale asked.\n\n\"A 1980 Ford F150 pickup.\" Ed said absently as he looked at the next item up for auction. He wondered what anyone needed with a yacht that big. Maybe for a large family outing? He didn't notice the older man's delighted smile.\n\n\"You're happy with your truck?\"\n\nEd looked at him. \"Yes. It's been very dependable and I've used it at work for hauling heavy equipment to the hazardous waste center.\"\n\n\"Oh! What do you do for a living?\" Dale asked.\n\n\"I work for Drakos Heating and Cooling. I've got my Universal Certification so I can work on any level of system we install or maintain.\"\n\n\"Do you enjoy it?\"\n\nEd's face burst into a wide smile. \"Yes! It's a great job!\" He realized he should be polite and ask Dale a question as well. \"What do you do for a living?\"\n\nThe man took in Ed's open expression and saw he was just curious. \"I'm retired now. I created a few businesses and ran them until they could run themselves then moved on to the next. Eventually I met this beautiful lady and running businesses just didn't appeal to me anymore.\"\n\nTristan smiled at her husband and Ed could see the love shining in their eyes. He hugged Rachel just a little bit tighter.\n\nThere was a chime and people began to move towards the far doors which led to the dining room. They were sharing a table with two other couples who didn't appear to be happy about it. Ed just did his best to be polite but his requests to a heavyset man to pass the water jug was ignored repeatedly. He resorted to waving to the man but after an annoyed glance he turned his face away from Ed.\n\nEd sat back in his chair in surprise. He knew the man saw him. The tables were fairly close together so getting up to walk around the table to get to the water was going to be difficult as well. He pondered what to do.\n\nTristan and Dale shared a look and the older man was about to say something when Ed stretched his arm out to reach across the table for the jug. He almost had it but suddenly it tipped over away from him. The water splashed across the table and doused the rude man and his equally unpleasant wife.\n\nEd jumped to his feet and tried to move to help the sputtering couple but they just shrieked at him. Dale was immediately at Ed's elbow and his presence seemed to take the venom out of the words the couple were venting at Ed. They turned and left with what little dignity they retained. The other couple got up and moved to a table across the room which had two open seats. Staff quickly appeared and dealt with the mess and removed the place settings leaving just the four of them at the table.\n\nDale and Ed sat back in their chairs and Ed's face was burning with shame.\n\n\"I'm so sorry for making such a scene! I'm such a klutz!\" Ed apologized.\n\n\"Nonsense! If that fool hadn't been so busy being a prick and ignoring you he would have stayed dry.\" Dale said with a grin.\n\n\"Besides, now we have the table to ourselves!\" Tristan smiled kindly at him.\n\nEd felt better and Rachel leaned over and gave him a kiss which certainly lightened his mood. He blushed again but this time it was for Rachel.\n\nTristan smiled at her husband who took her hand in his.\n\nDinner was served and it was delicious. Ed was surprised at first by the small portions on the plates considering the cost but it soon made sense to him as course after course was brought out. Dale, Tristan, and Rachel turned some away when they were brought out though she kept a few just to transfer the food to Ed's plate.\n\nOnce they finished their dessert Dale and Ed visited the bar once more to bring back scotch for themselves and wine for the ladies. They talked and laughed, enjoying each other's company. Rachel told them all about their group of friends and she saw the look of longing in Tristan's eyes. She insisted they come over for dinner and sample some of Ed's famous steak seasoning and meet the group.\n\nDale's eyes lit up with the mention of barbequed steaks and Tristan was thrilled and nodded. The group toasted to celebrate their new friendship.\n\nSeveral celebrities made speeches extolling the virtues of the charity and everyone clapped politely.\n\nThen the charity organizers made their speeches and announced the winners of the silent auction. The yacht went to the couple who'd moved to another table. The red sports car went to a fellow who looked too big to fit inside. The cottage went to another older couple. There were several smaller items and Ed noticed that no one really looked happy about the items they'd bought. He thought that was really strange.\n\nThen the organizers mentioned the door prizes. Third prize was a romantic get-away for two at a luxury all-inclusive couples resort in Barbados for one week. Second prize was a very cute little Italian car. Great for getting around the city in. The grand prize was a villa in Italy worth over a million dollars.\n\nEd wondered how the charity made money considering the value of the prizes. He nudged Rachel to get the ticket out of her purse and Tristan was grinning at his excitement. Both she and Dale were holding tickets.\n\n\"Didn't you get a ticket Ed?\" the older gentleman asked.\n\n\"No, I guess he forgot,\" Ed said and shrugged. Dale shared a look with his wife and Rachel.\n\nThe organizers began calling out the numbers on the ticket for third prize and Rachel's smile began to disappear as each number called lined up with the numbers on her ticket. She sat frozen as the last number was called and it was her ticket! Ed cheered then blushed at his outburst but Dale and Tristan were right there with him. They pushed Rachel to get up and walk up to the stage to collect her reward.\n\nRachel's head was swimming and her skin was tingling madly. She'd never won anything before in her life! She gave her name and telephone number and handed over her ticket. She was giddy with elation and accepted the envelope from the woman standing at the podium after her ticket was confirmed to be the winner. The woman's smile was stiff and didn't reach her eyes but Rachel never noticed as she turned back to her table and held up the envelope.\n\nOnce more Ed cheered for the beautiful woman dancing back to their table. She looked so happy.\n\nRachel sat down and pulled the voucher from the envelope. She read it and her face dropped. \"It's for next weekend!\" she cried.\n\n\"So?\" Ed asked.\n\n\"It's a couples resort!\"\n\nEd pulled his phone out of his pocket and looked at his calendar app. He saw that Mr. Drakos had posted the updated schedule for the shopping complex. It was November 28<sup>th</sup>. He could finish his inspections this week and they were not working on the building the following two weeks so the other trades could work in piece exclusively.\n\n\"I'll be available,\" he said.\n\n\"You should take the tickets and go with Grace!\" Rachel said.\n\n\"No! You won, you should get to go! Besides she has classes.\"\n\n\"Who is Grace again?\" Tristan asked curiously.\n\n\"Edward's... girlfriend?\" Rachel said as she looked at Ed for clarity on what he considered Grace to be.\n\nTristan's eyes went wide. \"Girlfriend?!?\"\n\nRachel chuckled and patted her friend's hand. \"It's a long story which requires more privacy.\"\n\nThe organizers were ready to announce the ticket number for second prize. The numbers were read out steadily and Tristan pouted after the third number. When the number was complete people were looking around but no one moved.\n\nDale showed his ticket to Tristan who clapped her hands. He gestured towards Ed and she nodded.\n\n\"Ed, why don't you take my ticket since they didn't give you one.\"\n\n\"But you could win that Italian villa!\" he exclaimed.\n\n\"I already have one,\" the man said dismissively.\n\n\"Are you sure?\" Ed asked.\n\n\"Yes!\"\n\nEd took the ticket from the man's fingers then his eyes picked up the number on it. He locked eyes with Dale. \"This is the winning ticket for second prize!\"\n\n\"Yes and if you don't go claim the prize immediately they will pick someone else's number. Someone undeserving.\"\n\nEd stood and held the ticket up.\n\n\"We have a winner!\" he heard the organizer say. He made his way up to the stage and faced the woman who seemed to be a little flustered as she cracked a smile at him. She validated his ticket, took his name and telephone number then presented him with an envelope. He immediately looked inside and found a voucher from a dealership for the sporty little car. He blinked at the woman. He'd never won anything before and didn't really know what to do next.\n\nShe softened as she saw his lost expression. \"You take this to the dealership listed and show them your identification. They'll give you the car. It's all paid for though they may try to get you to buy an extended warranty or something like that.\"\n\n\"Thank you so much!\" Ed exclaimed.\n\nThe woman gave him a genuine smile at last and he made his way back to the table. He gaped at the couple.\n\n\"Why did you just give me a car?\"\n\nDale chuckled. \"Ed, it cost us nothing and we have no need for another car, especially one neither of us would fit into. We're too tall! You may be a little too wide in the shoulders,\" Dale said giving Ed's shoulder width an assessing look.\n\n\"Do you think Grace might like to replace hers? I think she'd love the little car.\" Rachel said. \"For Christmas?\"\n\nEd's face lit up as he thought of how excited she'd be. He swept forward and kissed Rachel until she was panting. When he pulled back both of their faces were flushed and he was seriously tenting his pants. Rachel glanced down then back up into his eyes. Her look promised a night of passion.\n\nTheir companions were looking at them in interest and more than a little confusion.\n\nThe numbers were read out for the grand prize Italian villa and a cheer went up at a table across the large dining room.\n\nAs the woman claimed her prize Ed noticed people were heading for the exit. He wondered if the event was over.\n\nDale leaned over to catch their attention. \"There's a very nice nightclub at the top of the hotel attached to the convention center. We were planning on going up for a drink and maybe do a little dancing. Could we convince you two to join us?\"\n\nRachel gave Ed a hopeful look and he just smiled and nodded.\n\n\"I'm not a very good dancer,\" he confessed.\n\nRachel patted his hand and he caught her fingers and brought them up to his lips. She gasped quietly as he caressed her knuckles softly. She turned to Tristan.\n\n\"Maybe for a short while,\" she breathed. Tristan giggled.\n\nEd ensured his prize envelope was secure inside his jacket pocket and Rachel checked her clutch once more to ensure her envelope was there. They followed their friends out of the convention center into the adjoining hotel and took the elevator up to the nightclub.\n\nThe doorman nodded to Dale and a hostess led them to a lovely table by the windows. They had privacy but could see the dancefloor and hear the music. It wasn't fast and loud as Ed was expecting. Instead it lent itself to dancing close and swaying slowly. He thought he could do that and was actually looking forward to holding Rachel against his body.\n\n\"Is this enough privacy to get an explanation of who Grace is? I don't mean to pry but I'm confused.\" Tristan asked Rachel and Ed. Her husband was watching attentively as well.\n\nRachel looked at Ed who gave her a questioning look in return. \"Would you mind if I explained our relationship with our new friends?\" she finally asked.\n\nEd shook his head. He trusted her so he just smiled.\n\nRachel looked over at Tristan. \"Ed was orphaned when he was six and went to live with his mother's cousin. She had a daughter of her own named Grace. Ed grew up in their home and fell in love with Grace. She fell in love with him in return but neither confessed their love to the other.\"\n\nShe took Ed's hand in hers and smiled at him. \"I met Ed when he was graduating from school and months later we began a relationship that was initially purely physical. But I found myself falling for him. He's a much better man than my ex-husband ever was. Grace and Edward came to live with me through circumstances beyond their control. They finally expressed their love for each other and Grace was the one who told me that Edward had also fallen in love with me.\"\n\nEd blushed and fidgeted as he rubbed his thumb across the back of Rachel's hand enjoying its softness.\n\n\"So Grace is your... second cousin?\" Tristan asked and Ed nodded. \"You're in a relationship with two women?\" Tristan asked Ed.\n\nEd looked at Rachel who nodded to indicate it was ok. \"Six,\" he replied.\n\nRachel's expression changed to surprise and Tristan and Dale jolted. \"Are you in love with the others?\" Rachel asked him quietly.\n\nHe glanced over at Tristan who was almost glaring at him. The intensity of her gaze was a little intimidating. \"I- I don't know. I'm kind of confused about some, especially Zoe, but I can't deny I have feelings for them. With you and Grace I know it's love. If I have feelings for someone, even if I'm not sure it's love, shouldn't I say I'm in a relationship with them?\" Ed asked, looking at the three listeners.\n\nDale cleared his throat and shifted in his chair. He was a little out of his element with such questions. He looked at Tristan hoping she might have an answer but she'd gone silent, watching the young man... and trembling.\n\nRachel smiled fondly at Ed. \"Yes, I think it's the responsible thing to do. You should be as upfront and honest about your feelings as you can be so no one gets hurt.\"\n\nEd nodded as that matched his own reasoning. \"Could we dance now?\" he asked hopefully. He wanted to get away from Tristan whose gaze was really unnerving him.\n\nRachel stood up and they made their way down to the dance floor. She showed him how to hold her and he followed her steps until they were moving smoothly across the floor with the other dancers.\n\n\"I don't think Tristan likes me,\" Ed whispered.\n\n\"What makes you say that?\" she exclaimed.\n\n\"I don't know. She was staring at me really hard and she seemed... angry?\" Ed was floundering as he really wasn't good at reading people. If it hadn't been for the intensity of her reaction he might have not noticed. He closed his eyes and just enjoyed the feeling of Rachel in his arms. Soon he calmed down. They danced through another song then they headed back to the table. As they approached they saw Tristan and Dale had their heads together in deep conversation. Rachel looked at Ed who seemed genuinely worried. He stepped up to the table to address the woman.\n\n\"I've offended you somehow. I don't know what I did but I'm sorry I made you unhappy,\" he said to her. To Rachel Tristan seemed shaken by his apology.\n\n\"I told you. The man isn't playing a game. He's a straight shooter,\" Dale said to his wife. She still looked upset so he continued. \"You trust your gut. Are you saying I shouldn't trust mine?\"",
        "Rachel and Ed sat down and she leaned towards the other woman. \"Is your gut telling you Ed is being dishonest?\"\n\n\"No. My instincts are telling me to trust my husband's estimation of Edward but... six women! I've seen too many friends taken in by a pretty face only to be crushed emotionally.\"\n\nRachel dropped her eyes to the surface of the table and took a deep breath as she gathered her thoughts. When she looked into the anguished eyes of the woman across the table. \"Listen, five of those women pursued an innocent young man and by any means we could devise lured him into our beds because we were lonely or bored or looking for a way to feel alive again. We never expected to connect emotionally to him or to find someone capable of so much compassion. Edward doesn't lie. It isn't in his nature but you have to be willing to see it. I'm truly sorry you aren't. Let's go Edward.\"\n\nEd looked at Tristan and saw she was trying to say something but Rachel was already moving away. He nodded to the two. \"It was very nice to meet you both. Thank you for a lovely evening,\" he murmured and hustled after Rachel.\n\nHe caught up to her and followed her out of the nightclub. They entered the elevator and she pressed the button for the 15<sup>th</sup> floor. They went down three stories, the door opened and she stepped out. Ed followed with a puzzled expression. She pulled a room key card from her clutch purse and opened the door of room 1510. She looked back and took Ed's hand, pulling him gently into the room.\n\nWhen the door closed behind them she touched a wall switch and a gentle light came up in the room down a small hallway. In the dim light in the hall Ed saw Rachel looking up at his face. \"I'm sorry Tristan treated you like that.\"\n\nHe just shook his head and his eyes watched her lips. \"I want to kiss you.\"\n\nShe smiled and he stepped forward to press himself against her body. All night he'd been wanting to do this. She tilted her head up and his lips gently pressed against hers. He sighed at how soft her mouth was against his. He stroked his bottom lip across hers and felt her breath catch. He stroked her mouth with his once more and Rachel moaned at his sensual touch. He lifted his hands and stroked the sides of her exposed neck. A shiver went through her body and she gasped. Then her tongue was in his mouth and Ed felt his body become lighter as his skin prickled with electricity. He moved his hands to her back and allowed them to slide down the silky fabric towards the curves of her ass.\n\nRachel's arms tightened their grip on him as she felt his hands descend. When he squeezed her ass she moaned into his mouth and kissed him almost feverishly. She missed his hands sliding up to undo the zipper on her dress until it began to slide down her body. She caught it before it fell off and pulled back from his lips with a grin.\n\n\"Cheeky fellow!\" she grinned then gasped as he moved his mouth to her neck.\n\nHe felt her pulse racing under his lips as he kissed his way down the soft skin.\n\nMoaning she let her dress fall as she moved her hands to the buttons of his shirt.\n\nEd pulled back to gaze in wonder at her bounty being supported by a demi cup bra. The cups barely contained her. He placed his hands under her tits and lifted them reverently. Her nipples appeared over the edges of the cups. He immediately sucked one into his mouth and Rachel cried out in bliss from the intense sensations. He gently squeezed and tugged on the second nipple as he stroked the first roughly with his tongue.\n\nRachel clutched at his head and pulled him tighter against her tit, threatening to suffocate him in her soft flesh.\n\nEd was tenting his pants painfully so he moved his hands down to undo his pants. She pushed his jacket back over his shoulders and tugged his bow tie loose. Then off went his shirt as he dropped his pants.\n\nShe needed him, now! She grabbed his hand and moved them out of the hallway into the bedroom proper. They tugged the rest of their clothes off, dropping them at their feet, and she pulled the comforter from the bed. Ed dragged her onto the bed and worshipped her tits with his mouth and hands until she was squirming with desire.\n\nThen he moved lower. The heat coming from her pussy was intense and he dipped his tongue into her juices as she cried out, holding his head against her.\n\n\"Edward! Please! I need you inside me! Please!\" she gasped as she pushed his head away from her sex.\n\nEd climbed up her body, his eyes filled with raw need. She saw his cock bobbing between his legs. He looked enormous! He still had issues with his size. The damage done by his peers when he was young, being called a freak and a monster, scarred his mind, leaving him terribly self-conscious of his size. When fully erect he was at least ten inches in length and dauntingly thick!\n\nHe was running that heavy and hot flesh across the opening of her pussy, making himself wet and slick with her juices. She moaned and closed her eyes in bliss. Her eyes shot open when the thick head pressed into the opening and he drove himself three inches into her heat. Fuck! He was spreading her wide!\n\nRachel cried out and pulled at his body as she desperately wanted more. He knew better and slowly increased the pace of his thrusting until he was driving himself into her depths. She was almost frantic by that point and he thought she might finish too soon so he held himself still, his cock deep inside her and she calmed.\n\nHe kissed her hard, his tongue caressing hers, and felt her tension melting in his arms. When he began to move again she fell into a natural rhythm with him until they were both feeling the oncoming wave of ecstasy approach.\n\n\"I love you Rachel,\" he whispered, looking down into her beautiful eyes.\n\n\"Oh Edward, I love you so much!\" she gasped in return as they began to lose control over their pace. Their need for release overwhelmed them. Their bodies ground together and shook as each reached their limit.\n\nEd's muscles tightened as he felt surge after surge of cum jet from his cock into Rachel. He felt lightheaded from the sudden release and little bursts of light seemed to be flashing behind his eyes.\n\nRachel's body felt like it was going to shake itself apart. Sparks rushed outwards from her pussy and she clung to the large man who drove bolt after bolt of lightning into her. She cried out and wrapped her legs around his ass and held him tight to regain some control over herself. Gradually her mind settled back inside her body and she lay spent under the weight of his large body.\n\nSensing Rachel was finished, Ed slipped his softening cock from her and moved to lie beside her. She gasped gently at his withdrawal and settled herself against his side, kissing his shoulder fondly. He smiled at her and sighed with happiness.\n\nThey lay there together, each coming down from the incredible rush.\n\nEd gradually became aware of some details of the room. It was very nicely appointed with comfortable looking chairs, a desk to work at, a large cabinet with big doors and drawers underneath. Then he noticed the small suitcases.\n\n\"Whose suitcases are those?\" Ed asked.\n\n\"Ours. While we were out shopping for our outfits for the party I asked Angie to pack a few items for us for tomorrow morning. She also got us the room and put the key in my clutch purse.\" Rachel said with a grin.\n\n\"It's nice to have such good friends!\" Ed sighed and Rachel giggled. She slipped from the bed to use the washroom then settled back in next to him.\n\nWith mutual deep sighs of happiness they slipped into a deep, satisfied sleep.\n\nChapter 3\n\nRachel and Ed slept in then made love slowly until they were both deeply satisfied. Afterwards they had a lovely Sunday brunch at the hotel before heading home. Ed wanted to tell Grace right away about her new car but Rachel convinced him to meet her at the dealership the following day. Grace had classes but her college was close to where they would pick up the car. He could meet her there on his lunch hour.\n\nMonday morning Ed went to speak with Mr. Drakos and arranged to have the following week off. He had vacation time coming and promised to complete all of his inspections by Thursday. His boss agreed and told him to speak with his daughter to update the company calendar.\n\nLunch time finally arrived and Ed was standing outside a restaurant next to the dealership when Grace rushed up to hug him. He hugged her back and when she turned to enter the restaurant he stopped her.\n\n\"I just want to show you something before we eat,\" he said with a smile. Grace blinked then followed him across the lot and inside the dealership. He took her immediately over to a little sports car which looked like the one on the voucher.\n\n\"Oh! It's so cute!\" Grace smiled.\n\nEd opened the door and she slipped inside with a grin. He watched her delight as she touched the controls and got a feel for the interior.\n\n\"May I help you?\"\n\nEd turned to see a man in a well-tailored suit standing behind him. Grace looked up sheepishly from inside the car.\n\n\"Yes, my name is Ed Walters and I'm here to pick up my prize,\" he said as he pulled the voucher from the pocket of his work coverall. He pulled out his driver's license as Rachel explained he should do that and the man took both.\n\nGrace's eyes were bugging out as she stared up at Ed.\n\n\"Very good sir. If you would be so kind as to follow me to my desk we will make the final arrangements,\" the salesman said and Grace's jaw dropped. Ed opened the door of the car and helped her out. He had to put his arm around her to guide her numb body over to the salesman's office and into a chair.\n\n\"Ed. What's going on?\" Grace said with a trembling voice.\n\n\"Remember the charity dinner I attended with Rachel on Saturday? I won a door prize,\" he said with a grin.\n\n\"A car?!? You won a car?\" she squeaked and the salesman grinned at her.\n\n\"I won a car, for you,\" Ed corrected her.\n\nGrace burst into tears and leapt over to hug Ed who grinned at the salesman whose own smile threatened to split his face. As Grace cried onto Ed's shoulder he handed the man his insurance papers. Grace settled down but she wouldn't let go of Ed's left hand.\n\n\"Now, which color would the young lady prefer?\" the man said as he handed Grace a tissue for her eyes. He slid the brochure across his desk showing the paint options.\n\nGrace was trembling as she looked over her choices. Ed was pretty sure he knew which one she'd pick. There was a gleaming black color-\n\n\"Red!\" Grace exclaimed, pointing to a fiery red one.\n\nEd glanced at her in surprise and smiled. Red it was.\n\nThe salesman put the order in the system and handed them the invoice. Luckily Ed could sign it with his right hand as Grace still hadn't released his left. The salesman left for a bit and returned with Ed's copy of the invoice.\n\n\"It will take one to two weeks to get the car to the dealership. We will give you a call when it comes in. It was delightful doing business with you Mr. Walters. Congratulations again!\" He shook their hands and Ed led Grace from the building.\n\n\"You are too wonderful!\" Grace gushed as she hugged him again.\n\n\"Do you have time to eat?\" he asked and she pouted as she looked at the time.\n\n\"I have to get back to class though it's going to be difficult concentrating this afternoon,\" she said with a dazzling smile.\n\nEd leaned down and kissed her, tasting her mouth and feeling her wonderfully soft lips against his.\n\nFinally she patted his chest and gently pushed him back. \"ED! I'm never going to get back to school at this rate! So much for concentrating!\" She gave him a quick peck and rushed away to return to her classes.\n\nFeeling deeply satisfied Ed headed back to work. He had inspections to do. It was going to be a busy day but it was already a good one!\n\nChapter 4\n\nDecember 1st at last! As he woke up and stretched, Ed's body was humming with excitement as he knew the holidays were almost here! He loved Christmas! In the past he'd only been able to share the joy with Grace and her mother Shirley, though the latter was more of a Grinch.\n\nNow Ed was surrounded by people he loved and there were kids too! He couldn't wait to share the excitement with them! He'd spoken with Carolyn and Stephanie and both were happy to let him participate by putting up their lights. What they didn't know was that he intended on showing up in a full Santa Claus suit complete with a well-padded tummy. Grace said she'd help him dress up after work. He'd be going to Carolyn's tonight.\n\nHe was alone in his own bed this morning as he'd gotten home at 1AM last night. His inspection turned up a problem that would have jeopardized his joining Rachel the following week and would have put the project back at least two weeks. He'd just fixed the problem himself and reran his inspections. It checked out the second time but it was well past midnight at that point.\n\nEd grabbed a quick shower, got dressed for work and headed downstairs to the kitchen. Grace leapt from her chair and jumped into his arms. Her body felt so good against his and her mouth on his was... Heaven! Her big tits were mashed against his chest and he began to show his appreciation for all the wonderful sensations. He glanced at the clock and realized he'd slept in. He moaned as he had to head to work immediately. He set Grace down on her feet and pulled back from her.\n\n\"It's my turn to say I have to go!\" he chuckled. Grace's eyes twinkled.\n\nHe marched over to Rachel and kissed her tenderly and she gave him a dreamy smile as he headed out.\n\nTraffic was light and he immediately went to speak with Mr. Drakos about his findings the previous night.\n\n\"Ed! I understand you were on the jobsite a little late last night. The foreman said he saw your truck there at 8PM.\" Drakos said with a grin. He was so proud of his youngest employee! The best investment he'd ever made.\n\n\"Actually I didn't leave until 12:30 this morning. I found a problem.\"\n\nDrakos' face fell.\n\n\"It would have set us back two weeks but I found a work around.\"\n\nHis boss looked expectantly at Ed.\n\n\"I worked on it and ran the inspections again. It passed,\" Ed informed him.\n\nA huge smile spread across the older man's face. \"How much longer will you need?\"\n\n\"I should finish the physical inspections Wednesday night. Then it's just paperwork which will take me until Friday to complete,\" he explained.\n\n\"Excellent! Thank you Ed!\" the man gushed.\n\nEd just nodded and left to get back to work.\n\nThe day passed quickly and he skipped lunch so he could ensure he was able to leave at 5PM. He quickly drove home and found Grace waiting for him.\n\n\"Make me Santa!\" he grinned causing her to giggle.\n\nIt took about thirty minutes to get the suit on with the makeup. Grace was brilliant at applying it to make him look older with rosy cheeks and nose. The belly padding wasn't so bad if a little warm. Soon he looked like Saint Nick and he pranced around the kitchen dancing between Grace and Rachel who were both in stitches. He called Carolyn who said he could come over any time.\n\nEd drove over to Carolyn's and drove up her driveway with his lights off to sneak up on the house. He slipped out of the car and made his way to the front door. He rang the bell and soon heard the kids racing to the front door. The door opened and there was Carolyn standing behind her two kids, Gregory and Amelia. Ed thought she looked so pretty tonight and the glow of the candles on the table next to the door lit up the blond highlights in her light brown hair she was wearing down over her shoulders. Tonight her serious professor glasses were pushed up into her hair so he had an unobstructed view of her lovely hazel eyes. Her wide lips were smiling at him but there was surprise in her eyes.\n\n\"HO! HO! HO!\" Ed said with his best Santa voice.\n\n\"Hi Mr. Walters.\" Gregory said.\n\n\"Why are you dressed in a Santa suit?\" Amelia asked.\n\n\"Ho- Uh, I don't know what you mean! I'm Santa Claus!\" Ed tried again.\n\n\"No, you're Mr. Walters,\" Gregory began.\n\n\"-wearing a Santa suit.\" Amelia finished.\n\nCarolyn watched Ed's enthusiasm deflate completely. She felt so bad. If she'd known he was going to do the Santa bit she would have warned him. \"I think you are a delightful Santa Claus. Please come in.\"\n\nThe kids headed back into the playroom as Ed followed Carolyn into the kitchen. They took seats and Ed looked at the woman before him, his disappointment plain on his painted face.\n\n\"I don't understand. They're young kids! Shouldn't they be excited about Santa and Christmas?\" he asked.\n\n\"I'm afraid you're in a house of anthropologists. Studying human cultural artifacts is what we do. Rick and I decided when the kids were born that we would be open and honest with them and this included explaining things like the Easter Bunny, the Tooth Fairy, even Santa Claus as what they really were.\"\n\nEd blinked at her. \"You explained away the magic?\"\n\nCarolyn tilted her head at Ed and frowned at how unhappy he was. \"Are you going to be OK?\"\n\n\"Sure.\" Ed sagged a little more. \"Does this mean you don't put up a Christmas tree? Decorations?\"\n\n\"We don't have a tree or give presents. We take a food donation over to the shelter on Christmas Eve. We do put lights up on the house as that makes the neighborhood look so pretty. Could you help us with that?\"\n\n\"Yeah, where are they?\" he said, perking up a little.\n\n\"In the garage. There's a ladder in there too. The lights are simple. They just clip onto the eves. The plug is on the side of the house.\" Carolyn said as she led him into the garage. He carried the box outside then went back for the ladder. It was cold out so Carolyn scooted back inside.\n\nEd realized she was right. Putting up the lights was simple. It took all of fifteen minutes even with the width of the house. He put the ladder away and Carolyn met him in the kitchen again.\n\n\"Listen, if you're still up for some Christmas cheer, I was just speaking with Stephanie. She's home with her kids and they were going to put up their decorations this weekend. You might be able to convince her to do it early if you head over there now. Her kids are big Christmas fans too,\" she said with a grin.\n\nEd nodded and smiled at Carolyn. As kids were nowhere in sight he scooped her into his arms and kissed her until she was trembling.\n\n\"I saw Mommy kissing Santa Claus!\" Amelia sang loudly from the kitchen door.\n\n\"It's still Mr. Walters!\" Gregory growled.\n\nEd set Carolyn back on her feet and she smiled at her kids and shooed them away. \"Well... that was lovely!\" she purred. \"But you'd better get moving. Stephanie's kids will be heading off to bed soon.\"\n\nHe smiled at her and headed out the front door.\n\nIt took only a couple of minutes for Ed to be standing before Stephanie's door. He rang the doorbell and heard a stampede of feet rushing to the door. It pulled open.\n\n\"HO! HO! HO!\"\n\n\"SANTA!!!\" four kids squealed in unison.\n\n\"I was in the neighborhood and I noticed you don't have your decorations up! I have a little time to spare before my big night so I thought I'd help! If that's ok with you and your Mom!\" he chuckled merrily.\n\nThe kids were in a frenzy. Of course they wanted to put the decorations up, right now!\n\nEd was loving this. He looked over at Stephanie and was more than a little dazzled by her smile. She favored dark lipsticks and nail polishes which contrasted strongly with her pale skin and the brilliance of her white teeth. Her jet black tousled pixie haircut and the black lashes framing her intensely blue eyes made her skin seem even paler but the cute upturn on her slim nose and her high cheekbones made Ed think of an elf queen. Not that she was small in stature. Both she and Carolyn were around 5' 8\" with slim toned physiques from diligent trips to the gym but Carolyn seemed a little softer and had slightly larger breasts.",
        "He tore his eyes away and rushed after the rampaging kids missing how she bit her lip as she watched him.\n\nThey spent the next two hours digging the boxes out of the basement, assembling the tree, hanging the ornaments and each of the kids wanted Santa to lift them to hang ornaments up near the top. Once they'd finished decorating the inside of the house they settled down as Santa read them a story then it was off to bed. Each gave him a kiss on the cheek and a hug before they went. Ed was glowing with Christmas cheer as he sat with Stephanie in her kitchen.\n\n\"That was fun!\" Ed said quietly to Stephanie. \"Do you have lights for outside? I could put them up too.\"\n\n\"There's a box in the garage. The ladder's in there too.\"\n\nEd found the box and realized the lights were the same as Carolyn's. Fifteen minutes later the lights were up and he put the ladder back in the garage.\n\n\"Ed?\"\n\n He looked over towards Stephanie's red SUV. She was in the back. The rear seats were folded down and she was lying in the back wrapped in a blanket. Ed blinked in confusion. What was she doing in the back of her car in her garage?\n\nStephanie was feeling a little foolish. She'd watched her favorite movie the previous night and the scene where the brash young artist made love to the woman in the back of a car parked in the ship got her so hot. All she could think of was what it would be like to make love to Ed in a car. When Carolyn called to say Ed was coming over the scene returned to her mind. Now that he was standing right there in a Santa suit looking at her in confusion she felt silly.\n\nHe approached and saw she was naked under the blanket. Naked in the back seat of a car. Something clicked in his memory. There was a movie he'd watched with Grace years ago about lovers on a large ship having sex in a car. He remembered how awkward he'd felt with Grace as he got excited.\n\nHe reached up and pulled his hat, wig, and Santa beard off. Stephanie's eyes lit up as she saw his confusion give way to a hunger. He slowly ripped open the jacket, the Velcro seam parting noisily, and pulled the belly suit up and over his head. He'd gotten a little sweaty under the padding.\n\nStephanie watched him exposing his shining, rippling muscles as he lifted the padding up and off and she bit her lip. Then she crooked her finger at him.\n\nEd kicked is boots off and tugged the pants off until he was standing next to the car in just his underwear. Stephanie moved back as he crawled into the back of the car with her, pulling the door closed behind himself.\n\nThey were so close in the back but he was just a little chilly. She touched his chest, not at all turned off by the light layer of sweat there. She found it highly erotic.\n\nHe slid his hand around her head and pulled her mouth to his. She gasped as he gently sucked on her lower lip then she was exploring his mouth with her tongue. Her hand slipped down his chest to reach under the waistband of his underwear. Her slim fingers wrapped around the hard shaft of his erection. They both moaned as her fingers stroked the length of his heavy member.\n\nIt was a little awkward moving around in the back of her car but Ed managed to free up his hand to move it down her naked curves until he gripped her taut ass. Stephanie gasped in his mouth as he squeezed the muscles and slipped his fingers down between her legs. He found her hot and wet as his fingers dipped inside.\n\n\"Oh FUCK!\" she cried out and stroked him harder.\n\nEd pushed his fingers in deeper and her body seemed to be sucking them in further. He gathered the slick fluids on his fingers then pulled them out. He rubbed the head of his throbbing cock with the slickness and pushed Stephanie's hand away as his hand went down the shaft.\n\n\"Fuck yes! Fuck me Ed!\" she said, trembling with need.\n\n\"Are you nervous?\" he said, recalling a line from the movie.\n\nStephanie's eyes flashed to his and a smile spread across her lips. \"No. Put your hands on me... Ed.\"\n\nHe kissed her hard as he rolled her onto her back. She had no time to prepare as his cock lined up with her opening and pushed just inside. Her cries were muffled by their kiss but as he slowly stroked in and out, going deeper with each drive forward her voice got louder.\n\nEd was no longer chilly. The car was heating up from their bodies and the effort needed to make love without crushing the woman in the small space was intense. She felt so incredibly good it was all Ed could do to slow down and stretch out the experience for her.\n\nHe gave up on the kiss as Stephanie was too far gone from the intense sensations. He was almost fully inside and each stroke made her cry out. As he released her lips she was finally able to verbalize her joy.\n\n\"SO FUCKING BIG! OH GOD, ED! THAT'S SO GOOD!\"\n\nHe smirked. He was pretty sure that wasn't a line from the movie.\n\nHis need was becoming too demanding and his hips began to twitch on their own with each thrust. Their bodies began to slap together and Stephanie's eyes and jaw opened wide though she made no sound. While Ed was still making long strokes each ended with their bodies crashing together. The impact on her clit was obliterating her ability to think. She could no longer speak. Everything was sensation and it was too good. She was very close. She looked to the window and saw they were steamed up just like in the movie. The two perceptions suddenly overlapped and her eyes rolled back as she reached out to touch the cool glass. Her hand was moving on its own as she crashed through her release.\n\nEd felt her clamping down on his cock and that pushed him over the top. His orgasm rocked through his body as he held her. When he finally came back to his senses his body shook one more time.\n\n\"You're trembling,\" she panted quietly as she touched his cheek.\n\nHe smiled as he caught his breath. \"Don't worry. I'll be alright.\" He moved to lie beside her, relieving the pressure on her body.\n\nStephanie rolled onto her side facing him. She put her arm over his body and snuggled up close as she felt a glow wash through her body. He was so in tune with her it took her breath away.\n\nThey lay together for a while longer then Ed felt himself begin to nod off. That was the signal to get moving.\n\n\"I'm falling asleep,\" he murmured.\n\n\"Mmmm... would that be so bad?\" she sighed in return.\n\n\"Depends if you're ok with your kids finding us here tomorrow morning,\" Ed said with a sleepy grin.\n\nStephanie moaned unhappily then squeaked as Ed's lips found hers in the dim light of the garage. The squeak became a purr as he nibbled his way across her lips.\n\n\"God! You're going to get me going again and you're right, it's late.\" Stephanie said after pulling away from his kiss.\n\nThe inside of the car was positively steamy and it smelled like sex. Ed looked at Stephanie. \"Do you have an air freshener for the car? You drive the kids to school in the morning, right?\"\n\nShe noticed what he was talking about and realized she should have thought about that. They wouldn't recognize the smell but they would notice it. Damn! She'd just have to deal with it tomorrow. Maybe it was time to get the car detailed.\n\nThey stepped out into the garage and quickly dressed. Ed gave her another sizzling kiss and she pushed him out the door with a big grin on her face. She leaned back against the door as her body trembled and her heart soared.\n\nChapter 5\n\nThe next two days were a blur to Ed as work became frantically busy. He finished the physical inspections early and started in on the documentation but was pulled aside for other work. As he knew Ed would be unavailable for the entirety of the following week Mr. Drakos had his schedule fully loaded. He was interfacing directly now with the developers of the shopping complex and they had a number of items they needed his help on. He tried to explain that he was really only certified for heating and cooling but blue prints and schematics were being passed by him to review. When he spotted the address of a different build site printed on one of the pages he called them on it and Mr. Drakos got involved. He wasn't too hard on them as he wanted to maintain a good relationship with the group but he made it clear Ed was a resource not to be taken advantage of. And he wanted first dibs on the contract for the new development project they were having Ed review.\n\nAll this extra work meant Ed was working past dinner hour for the two days and was pretty tired when he got home. Tonight Rachel told him she was going to give his boss a piece of her mind for running him ragged before his vacation but Ed managed to convince her to let it slide and she headed out to Angie's place.\n\nHe was crashed on the couch watching TV with Grace who was resting against his side when the telephone rang. He moved to get it but Grace patted his leg and went for the phone.\n\n\"Hello? Hi Stephanie! Yes, he's right here. Is everything ok?\" Ed looked over at Grace who was frowning as she listened. \"What assholes! Hang on.\" Grace handed the phone to Ed.\n\n\"Hi Stephanie, what's up?\"\n\n\"Ed, I'm so sorry to call so late but I need your help.\"\n\n\"Sure, what do you need?\"\n\n\"I just got my new furniture for the master bedroom. They were really late in arriving, took the old furniture away but they just dumped all the new stuff in the center of the room and left. The bed needs assembly.\"\n\n\"Do you have tools?\" he asked.\n\n\"I think so,\" she said but Ed heard the doubt.\n\n\"I'll be right over.\"\n\n\"Thank you so much!\" she gushed.\n\nEd got up and kissed Grace sweetly. \"It may be a late one.\"\n\n\"I have an early class so I probably won't see you until tomorrow night,\" she pouted.\n\n\"Since I'm going to be away for a week we're going out to dinner tomorrow night, just the two of us. We can go to that restaurant with all the cheesecakes. This time we skip the appetizer so we can actually try a dessert!\"\n\nGrace's face lit up with a smile and she kissed him again.\n\nHe picked up his tool box on the way to his truck and drove over to Stephanie's. She let him in and immediately she saw how tired he was.\n\n\"Oh Ed. I'm so sorry to drag you out on a work night. I can see you're tired. Let's just forget it. I can sleep on the couch,\" she said with a troubled expression.\n\n\"Don't be silly. It won't take me long and I'll be away all next week. It's tonight or a week from now.\" He leaned forward and kissed her forehead and she instantly felt comforted. He set off for the master bedroom carrying his tools with her following.\n\nThe new furniture was indeed sitting in the middle of the floor in the large room with the exception of the mattress and box spring which rested against one wall and a very large flat screen TV box resting against another.\n\n\"I vacuumed the carpet after they pulled all the old furniture out then they just piled all the stuff here and left.\" Stephanie complained.\n\n\"Not very good service. You should let the store know.\"\n\n\"Oh, I intend to do exactly that tomorrow morning!\" she said with a fierce look.\n\nEd chuckled. \"Go get 'em tiger!\" That drew a satisfied smile from her.\n\n\"We're going to need to make some room so let's move this stuff out into the hall, except for the bed,\" he suggested.\n\nThe two of them were able to get the pieces out of the bedroom and he had her begin removing the plastic wrap on all of those items while he assembled the bed. He really liked the new furniture. It was sleek and contemporary but still solidly built. He read the instructions and realized it was a four poster bed with a canopy. A very romantic look. Compared to the heavy dark furniture the room previously had this was a complete change!\n\nHe had Stephanie hold some pieces in place while he bolted them together and it didn't take him long to get the frame built. It would be up to her to put the fabric canopy over the frame. They unwrapped the box spring and mattress and put both in place.\n\nThen they carried the unwrapped furniture pieces back into the room and positioned them where she thought they looked best.\n\nFinally it was time for the TV. There was a wall mount rack in another box so he realized that needed installing. He pulled out his stud finder from the tool box.\n\n\"What's that?\" she asked.\n\n\"It's a stud finder.\"\n\nShe practically leapt over to him and snatched it from his fingers with a giggle. She glanced at it, pushed the button and held it against his chest. Nothing happened and she pouted dramatically. \"It's not working... Stud!\" She couldn't hold the pout and began to giggle again. He reached for the device and she slid it away down his chest. It wailed as it passed his zipper.\n\nStephanie's eyes flew wide and laughter burst from her as Ed rolled his eyes. He plucked the device from her fingers as she gasped for breath from laughing so hard.\n\n\"Is that exactly where the bed is going?\" he asked. \"Once the TV is up that's where it stays.\"\n\nStill chuckling she walked around the bed and confirmed its location. She nodded at him with a mischievous smile as she bit her lip. He just grinned and shook his head.\n\nHe located the studs and mounted the rail on the wall. They unpacked the TV and he installed the two brackets on the back of the TV. He turned to Stephanie.\n\n\"Do you want to run the cables through the wall?\" he asked.\n\n\"Would that mean I wouldn't see any dangling wires?\"\n\n\"Yes.\"\n\n\"Then yes, I'd like to do that. Is it hard to do?\" she asked.\n\n\"No, but I don't have all the parts to finish the job. I can make the holes and run the cables through for now but I'll need to come back and add the boxes and wall plates later. To make it look neat.\"\n\nShe nodded with a smile and he took some more measurements. Then he use a small knife to cut two holes in the drywall both next to a stud but one behind the TV and one a foot off the floor behind the low dresser. He tucked all the cables through the top hole and pulled them out the bottom hole. Then he got Stephanie to help him lift the TV in place. Once it was up he connected all the cables. They moved the dresser back in place and he put the cable box and a digital media player on top of that and made their connections.\n\nHe stood back and looked at his handy work. He was pleased with the final appearance. The TV seemed to be floating over the dresser. He looked back and Stephanie was finishing up putting sheets on the bed. She looked at the TV and her eyes lit up.\n\n\"That looks incredible! Thanks!\"\n\nEd pressed the power button on the universal remote and the cable box, TV and digital player all came on. He bumped the play button accidentally and suddenly the large screen filled with the image of a naked woman riding an equally naked man. It was artfully done but the look on the woman's face left no doubt that she was enjoying the aggressive sex.\n\nStephanie squeaked and leapt at Ed to snatch the remote from his hand. She hit the power switch and the screen went black. \"Yup! The TV works!\"\n\n\"A little research?\" he asked with a coy smile.\n\nHer embarrassment quickly turned to a wicked smile and a nod. She really was an imp, Ed thought fondly.\n\nHe looked around the room and realized he was all done. Suddenly a huge yawn caught him by surprise. A heavy fatigue descended over him and he moved to put his tools away. Once he was all packed up he set down the box and yawned once more. His eyes were really bleary.\n\n\"Ed, I don't think you should drive home. You look exhausted. You could... stay here with me tonight. I have this brand new king sized bed. Fresh sheets?\"\n\nHe looked out in the hall and realized he hadn't heard or seen the kids all night. He looked back at Stephanie.\n\n\"Sleep over at Carolyn's,\" she said understanding his unspoken question. \"Besides I don't mind them knowing you're my... boyfriend,\" she said the last word nervously.\n\nEd saw her watching for his reaction. She thought he'd reject her?\n\nHe reached over and pulled her against his chest and felt her relax in his arms. \"Yes to both things.\" He leaned back a little and took her face between his hands. He gazed into her happy blue eyes. God! She had so much love in those beautiful eyes. He felt his own heart responding in kind. He knew now. It was love! She was so energetic, adventurous, and full of mischievous glee he found her completely addictive.\n\nAnother yawn threatened to shatter the tender moment and she snorted as he struggled to supress it.\n\n\"Get undressed before you fall asleep on your feet!\" she grinned. He stripped down to his boxers then looked at her delighted expression. While he had undressed she'd put on a nightie.\n\n\"Do you have an extra toothbrush?\" he asked.\n\nShe nodded and dragged him into the bathroom. He opened the package and they brushed their teeth together. Then they went back to the bed and crawled in.\n\n\"I promise tonight will just be for sleeping. I can see you're exhausted. It's just really nice to be able to sleep next to someone after so long,\" she said with a tremulous smile.\n\n\"Now that we're officially girlfriend and boyfriend it's ok for me to tell you I love you, right?\" he said quietly.\n\nStephanie gasped and her eyes filled with tears. She leaned over and kissed him tenderly. When she pulled back tears of joy were on her cheeks. \"Yes, Ed! That's perfectly fine to say! It's wonderful! I- I love you too!\"\n\n\"I was talking with Rachel about my relationships with the six women in my life. I'm still trying to figure it all out. I have strong feelings for all of you but aside from Grace and Rachel I wasn't sure if it was love. You're all so different and my feelings get all jumbled up sometimes. I- I can be kinda slow when it comes to people stuff. It takes me time to understand feelings. I'm sorry about that,\" Ed apologized looking her straight in the eyes then another yawn overtook him.\n\nHer smile was brilliant. \"Go to sleep big man. We can talk in the morning.\"\n\nHe nodded and closed his eyes.\n\nHe felt her snuggle in and sigh contentedly then he was gone.\n\nChapter 6\n\nThe restaurant was just as busy as it had been on their first 'date'. That was before they'd confessed their love for each other. It had been a pretend date but it was a special memory for both of them.\n\nTonight Grace was wearing the earrings he'd bought for her that night and she looked ravishing. She'd been losing weight slowly but steadily as she watched her diet and kept her idle hands busy with her classwork. She had little time to snack as she was completely absorbed with her classes. Rachel had taken her out shopping and found some lovely clothes that fit her less abundant form. She would never be as svelte as Rachel was as it just wasn't in her genes but Ed loved her as she was and she gained an enormous amount of satisfaction from that fact.\n\nOnce more they were almost undone by the variety on the menu. Ed ordered the burrito once more and Grace tried something new. They sipped at their waters as they waited.\n\n\"Are you all packed?\" she asked.\n\n\"Yes, Rachel did that for me.\"\n\n\"Is your passport up to date?\"\n\n\"I still have almost nine years to go on it. Mr. Drakos insisted I get it but I'm not sure why. I have no stamps in it yet.\"\n\n\"Well your first one will be Barbados!\" Grace smiled.\n\n\"I wish you were coming with us,\" Ed said sadly.\n\n\"You know I can't take the time now. Rachel promised me she'd take good care of you.\" Grace said taking his hand.\n\nHe smiled and nodded then lifted her hand to his lips. Her face got a little flushed at the feel of his soft caress.\n\nTheir orders arrived and talk took a back seat to eating the delicious food. Grace did tell him about her classes, her teachers, and some of the other students.\n\nEd told her that Mr. Drakos told him that he'd realized he'd been pushing Ed too hard all week so Ed got to stick around the office today just finishing up his paperwork. He'd only had to work an extra thirty minutes.\n\nThen he told her about the work he'd done at Stephanie's the night before. He told her that he'd determined that he loved Stephanie and did his best to explain it. She watched him struggle, trying to put into words something that could only be felt. She gripped his hand once more and smiled at him.",
        "\"It's ok Ed. I get it. I know what you're trying to say.\"\n\nThe relief on his face was enormous. He stuttered from the anxiety of trying to express something he barely understood.\n\n\"I- I love you Grace. I don't know where I'd be without you!\" he said as he leaned forward to hold her palm against his cheek. He kissed the inside of her wrist sending tingles through her body.\n\nShe pulled her hand back reluctantly. If she hadn't she might have jumped him there in the restaurant.\n\nThey were too full for dessert so they missed out once more. Feeling pleasantly stuffed they headed home.\n\nWhen they went upstairs Grace pulled him into a hug in the hall. \"You should head off to bed right now. You have an early start in the morning.\"\n\n\"Could you sleep with me?\" Ed asked.\n\nShe smiled up at him and nodded. \"Just let me get ready for bed.\"\n\nRachel had left them a note indicating that she had gone to bed early as well so Ed retired to his bedroom and undressed. He pulled on some boxers to sleep in, brushed his teeth and got into bed.\n\nHe was beginning to doze off when his bedroom door opened and closed as Grace entered. He felt the mattress shift then her wonderful softness was pressing up against his side.\n\n\"Mmmmm!\" he rumbled deep in his chest as he rolled onto his side to wrap his arm around her.\n\n\"God Ed! You make me feel so safe and loved when you hold me!\" she purred against his chest.\n\nHe rolled back onto his back and suddenly she was lying on his chest. He enjoyed the feel of her breasts pressing against him and moved his hands down to her ass.\n\n\"Ohhhh!\" she moaned as he kneaded her flesh there. He pulled her up his body until he could kiss her and wasted no time in doing so. Her lips were still the softest he'd ever kissed and his head spun every time he did. He couldn't believe she was in his arms kissing him in return. His kiss turned demanding and she whimpered with need as she returned his passion.\n\nHis hands went under her silky pj bottoms and he relished the feel of her skin. He dipped a hand between the full orbs and slid his fingers along the softest skin causing Grace to pull back from the kiss and gasp.\n\n\"Oh Ed! Oh my god!\"\n\nThen he slipped his fingers inside.\n\nShe clung to his shoulders and tucked her head into his neck as she sucked in her breath. She suddenly pushed back from Ed causing him to extract his fingers. She crawled backwards down his body until her face was above his waist. She pulled down his boxers and his thick cock slapped up against his stomach.\n\nGrace moaned as she looked at the beast. She leaned down and ran her tongue along it from the base to the sensitive tip and this time it was Ed who sucked in his breath. He was so hard and hot under her tongue. She lifted it up and pressed her lips to the tip enjoying how Ed twitched and shook under her control. She loved giving him pleasure and loved his reaction to it. She knew she could take him deeper than the others so she opened her mouth and guided his cock between her lips. She bobbed over the head, dragging her lips over the sensitive ridge and she felt his cock swell even more. Before he could prepare she pushed forward taking him deep into her mouth until the head bumped into the back of her throat. A gentle push and it continued down her throat.\n\n\"Oh fuck! Grace! Geezus!\" Ed gasped gripping the sheets\n\nShe slowly pumped him in her throat until she had to pull back to catch a breath. She looked up at him with hungry eyes and saw the fire in his.\n\nEd reached down and pulled her up onto his chest once more and tugged her pj bottoms off. Instead of kissing her he rolled over on top of her pressing her to the bed. She cried out feeling the heat of his cock against her pussy. He reached down and positioned himself at her wet opening. Pushing forward the first three inches drove inside. She cried out and clung to him. He was so fucking thick!\n\nHe pulled back and drove forward again, his passion taking control. Grace bit down on her cries as there was some pain involved but there was so much pleasure she'd endure this. He seemed to come to his senses then Grace kissed his neck and he pulled back and drove forward again. He was almost fully inside and Grace's eyes began to roll back from the flood of sensations rushing through her body. He began to pump in earnest and soon the sound of their bodies slapping together filled the room.\n\nGrace was in heaven. The pain faded to a background ache as wave after wave of bliss crashed against her mind. He was a force of nature, undeniable, untiring, wild and passionate. She clawed at his back and his thrusting became more aggressive until he was pounding her into the mattress. Grace lost track of the number of orgasms she'd had as it seemed like one continuous rollercoaster ride through endless peaks.\n\nEd ground his teeth together as his body clenched and shuddered through a colossal release. He clung to Grace and kissed her neck, his cock buried to its base feeling the ripple of her inner walls massaging him. He held himself above her body, not resting his entire weight on her but enjoying the touch of their skin on skin. Finally he softened inside her and he pulled back and rested next to her.\n\n\"Oh my god, Ed! That was intense and wonderful!\" she exclaimed softly. They relaxed for a bit then Grace made a brief visit to his washroom before snuggling back into bed with him. Any thought of continuing the conversation was lost as she heard Ed's gentle snoring. Grace smiled and settled in for a few hours of sleep until he had to get up.\n\nChapter 7\n\nEd breathed in deeply and stared in wonder at the lush forest the shuttle bus drove them past. Rachel held his hand as she enjoyed his excitement. He was in a different country! It smelled different! It looked different! The air felt different! The accents were different! Most of all it was HOT!\n\nEd looked over at Rachel and once more admired the sundress she was wearing. She'd changed in the airport washroom while he waited and when she returned it was all he could do to keep from staring. She looked gorgeous and the cleavage on display made him think fondly of summer back home.\n\nHe was still over dressed in his jeans and long sleeve shirt which he'd rolled up at least.\n\nThe drive to their resort wasn't long and soon they were pulling up the tree lined drive to a large low rise building surrounded by tropical flowers and large trees.\n\nEd followed Rachel into the lobby while the driver handed over the bags to the hotel staff. Rachel walked up to the reception desk.\n\n\"Hello. Rachel Thompson and Edward Walters checking in.\"\n\nThe young woman smiled at Rachel and looked up her name on the computer. \"Ah! Yes, welcome! We have you in one of our Prestige Suites.\" Rachel grinned and signed where she needed to sign. They took a credit card imprint for purchases made. The clerk held up a pretty pink band and indicated Rachel should hold out her arm. The woman wrapped the band around her wrist and when the two ends were beside each other they clicked together tightly.\n\n\"This is your room key and identity bracelet for the entire resort. If you wish to purchase anything you simply need to touch the bracelet to the payment machine.\" Ed stepped forward and she wrapped a larger black band around his wrist. \"It's completely water proof and it won't accidentally come off.\"\n\nEd admired the bracelet. \"You will need to return that once your stay is over no matter how pretty you think it looks on you,\" the young woman teased and both Rachel and Ed chuckled.\n\nShe then waved over a young man. \"Lionel will guide you to your room. Please enjoy your stay and if you have any questions please feel free to ask any of the staff.\"\n\nRachel and Ed followed Lionel who was pushing their luggage in a trolley through the grounds. He pointed out the locations of the pools, the bars, the restaurants, the gym, the beach access and the watersport activity center where they could book everything from kayaks to jet skis.\n\nThey stopped at the end of the low rise building and climbed the stairs to the fourth (top) floor and Lionel showed Rachel how to use her bracelet to unlock her door. The room was large and nicely decorated with a large four poster bed but it was the view from the large balcony that made it special. The beach and the ocean beyond could clearly be seen and the sound of the surf could easily be heard. Each balcony was private with walls between each and there was room for two lounge chairs and two regular chairs on either side of a small table. Lionel brought up their bags and left them with a smile.\n\nThere was a sheet of paper on the desk which indicated there would be a manager's rum punch reception this evening. As it was midafternoon they still had hours until that.\n\n\"Let's go for a walk on the beach!\" Rachel suggested and Ed smiled. That sounded awesome! He'd never been to the beach before.\n\nThey got changed and once more Ed was stunned by Rachel's beauty. She had on her glittery bikini with a colorful wrap around her waist. This time he was unable to stop his jaw from dropping. He'd put on his grey board shorts with the black, white, and deep grey lines. He liked how they looked on him and was getting used to wearing tighter pants though he was still self-conscious when he got excited. Like he was becoming now. He looked up into her blue eyes and he saw the happiness and satisfaction there.\n\nEd picked up the white, short sleeved shirt Rachel had picked up for him for the trip.\n\n\"Let me put some lotion on you before you wear that.\" Rachel suggested. He nodded.\n\nShe squirted some lotion on his hands and he did his front while she quickly rubbed lotion on his back. He returned the favor for her then they headed outside. As they were at the quiet end of the building, getting to the beach was just a matter of a few seconds walk. Then they were out in the sand.\n\nThe breeze coming off the sea was carrying scents Ed had never smelled before. He was enthralled. They made their way down to the water's edge and they both took off their sandals and carried them as they walked in the warm waters.\n\n\"What do you think Edward?\" she smiled up at him.\n\n\"It's magical!\" he said with a grin. \"Thank you for bringing me here!\" He struggled to keep his eyes on her face. \"Sorry, but you look incredible!\"\n\nShe smiled as a warmth spread through her body that had nothing to do with the tropical sun. He was so good for her!\n\nThey walked hand in hand along the water's edge for a while then turned back, facing the sun. The feel of it warming their skin while the breeze cooled them was so shocking after the freezing temperatures at home. He couldn't stop grinning. It was crazy! Just hours ago he had to be bundled up to be outside. Now he was just in his shorts and an open shirt that left his chest completely exposed in the breeze.\n\nHe stole glances at Rachel but she caught him and he blushed. His shorts were becoming tight and she stopped them to get a kiss. He tasted her mouth and succulent lips as she ground her body against his, feeling his hard cock straining to be free. She moaned with desire and pulled back from his mouth.\n\n\"If there was a way to do it without being arrested I'd take this in my mouth right now!\" she growled sexily at him as she discretely rubbed his cock. She felt him throb strongly in response. Fuck, she wanted him. \"Let's go back to the room!\"\n\nHe nodded, not trusting himself to talk. They started walking once more but now there was a purpose to their step. They rinsed the sand off their feet and slipped their sandals on before they headed back along the path towards the building... coming face to face with Dale and Tristan. He was in one of those loud flowery shirts and black board shorts and Tristan was wearing a white bikini with a gossamer black wrap around her waist.\n\n\"What-\" Rachel began in surprise.\n\n\"Hello Rachel, Edward,\" the man said, the Texan twang in his deep voice giving away his nervousness.\n\n\"Hello Rachel. Hello Edward.\" Tristan looked a little desperate.\n\n\"Did you two win a trip down here too?\" Ed asked with a smile.\n\nDale smiled and shook his head. \"No, we paid full price and then some.\"\n\n\"Why?\" Rachel asked, her hackles coming up. This was starting to feel like an ambush and it was supposed to be a relaxing, fun getaway dammit!\n\n\"I needed to apologize. I was so incredibly rude and closed minded. We struck it off so well and then I went and destroyed that trust with my stupid pig headedness. Can you forgive me?\" Tristan pleaded.\n\nRachel looked at Tristan with wide eyes. \"You flew all the way down here to apologize? You had a week! You could have just picked up the phone!\"\n\n\"Believe me I was miserable for that week but I was also out of town dealing with a family matter. When I got back I knew you'd be heading down here so it would be at least another week. I didn't know that Dale made arrangements for us to fly down here so I could apologize face to face. I can't believe how incredibly judgmental I've been especially considering what he and I have to go through.\"\n\n\"You may have noticed we aren't exactly the same age or even close for that matter.\" Dale said with a wry grin.\n\nRachel was feeling a little better but they'd really derailed her.\n\n\"Why does that matter?\" Ed asked. \"You're married. You love each other.\"\n\nThe older gentleman smiled gently and Tristan's eyes began to fill with tears. She stepped closer to Ed.\n\n\"Can you forgive me for judging you?\"\n\n\"There's nothing to forgive,\" he said with a smile.\n\nTristan was suddenly hugging Ed and crying on his shoulder. He was still very stiff from Rachel's attentions so he tried to move his hips back. She became aware of something hot and hard pressing against her.\n\n\"Oh!\" she exclaimed and pushed back, automatically looking down. \"OH!!! Oh gosh! I'm sorry! We were interrupting something I think!\"\n\nRachel smiled at Tristan's blush and nodded to the woman. Tristan gave her a quick hug then pulled her husband by the hand towards the beach. Dale wore a confused and exasperated expression.\n\nEd turned to Rachel who took his hand and led him back to their room. She pulled him to the bed and knelt down before him. She pulled his shorts down and his thick cock bounced out. She pushed him to a seating position on the bed with his legs wide and her between them.\n\n\"God, I've been thinking about taking you in my mouth since we kissed on the beach,\" she moaned and wasted no more time. She gripped his shaft and took his cock as deep in her mouth as she could manage. She pressed him firmly against the back of her throat until her gag reflex told her enough! She eased off and began to pump her mouth up and down on his cock as one hand stroked the remaining part of his cock and her other hand rubbed his balls.\n\n\"Oh Rachel! Oh my god that feels so good!\" Ed moaned and ran his fingers through her soft and brilliant red hair.\n\nShe hummed happily as she kept up the motions, reveling in the heat and solidity of him in her mouth. She began to go faster and pump more aggressively.\n\n\"Rachel... Rachel... I'm going to... Rachel... you have to stop...I- I'm cumming!\" he cried.\n\nShe pumped his cock with her hands as he fired his cum into her mouth. She continued until he was finished. She leaned back and showed him what she'd collected in her mouth. Then she swallowed the mouthful.\n\nEd picked her up and pulled her onto the bed. He pulled the ties on her bikini and uncovered her large tits. Her nipples were stiff with excitement. He immediately sucked one into his mouth and caressed the bud with his tongue. Rachel cried out and he moved to her other tit. Rachel's cries escalated and he didn't let her recover before he pushed her legs up and stroked her wet pussy with his tongue. He used more force than he normally would as he knew she wasn't as sensitive and needed the extra pressure.\n\n\"EDWARD! YES! LIKE THAT! OH GOD!\"\n\nHe slurped at her pussy, sucking at the lips and strongly flicking her clit.\n\n\"FUCK! Oh god... SHIT! FUCK! YES!\" Rachel was shaking with need as he used his mouth on her.\n\nHe sat up and positioned his cock over her slick opening and lowered the head down into her.\n\n\"Oh YYYYYYYEEEEEESSSSSS!\" she moaned as he pushed himself deeper and deeper until his pelvis touched hers. He looked down in surprise. He'd never been this deep in Rachel before. Maybe it was the position? Whatever it was it felt incredible!\n\nHe began to drive his cock into her like a piledriver, slapping her body with his.\n\nRachel was going out of her mind. He had her legs pushed back and he was filling her up with his cock. More than she'd ever felt before. She was overwhelmed. It was too much but she never wanted it to stop. Her mouth opened but she couldn't speak. Her body began to shake as the impacts against her clit rocketed her towards a delicious release.\n\n\"harder,\" she managed to whisper and Ed took her at her word. He started to pound her pussy with quick shallow strokes which forced his cock deep inside.\n\n\"UUUHHH! FFFUUUUU!\" was all she managed as her body clamped down on him and her eyes shut tightly.\n\nEd was only able to drive himself deep two more times before his own orgasm struck. He rocked his hips, grinding against Rachel and she squeaked. She gripped his arms digging her nails into his biceps almost painfully as she whimpered and shook.\n\nSlowly the pleasure ebbed and Ed's cock softened within her. He allowed her legs to return to the bed and withdrew himself from her body. Rachel was breathing hard and was covered with a sheen of perspiration. He rested on his side with his head braced on his hand so he could keep an eye on her face. She wasn't coming down from this one as quickly as she normally did and he was concerned.\n\n\"Oh... my god... Ed,\" she finally managed to pant.\n\n\"Are you ok?\" he asked gently.\n\nHer eyes tracked over to him and she seemed to be struggling to remain awake. \"Yes... it just took... more out of me... than I expected. So... powerful!\" she whispered.\n\n\"Maybe you should take a nap?\" he suggested.\n\n\"Yes, that would be good. Wake me an hour before the manager's party,\" she said looking up at him in wonder.\n\n\"What?\" he asked, puzzled by her expression.\n\n\"I'm just marveling at how lucky I am to have a second chance at love.\" A tear beaded up on her eyelash.\n\n\"Hey! No crying after sex!\" he said with a smile and her face broke into a grin as she chuckled.\n\n\"I love you, beautiful lady! I love making love with you! I love being with you! Get some rest and I'll wake you when it's time to get ready for the party. I'm going to get cleaned up and look for a snack. I'm hungry all of a sudden,\" he said with a smile. He leaned over and kissed her lips tenderly and she closed her eyes. She was asleep before he'd left the bed.\n\nHe took a quick shower, put his clothes back on and wandered down to the lobby. They directed him to the beach restaurant which served snacks. He walked across the grounds breathing in the warm moist air and feeling the sun on his face. He found a table overlooking the beach and placed an order for a burger and fries.\n\nHe was just enjoying the scenery when he heard someone clearing their throat. He looked away from the beach and saw Tristan was standing next to the table. He stood up and asked if she'd like to join him. She smiled and took the offered chair. Ed sat down across from her.\n\n\"It was very gracious of you to forgive my earlier behavior Ed,\" she said humbly.\n\nHe just shook his head but she continued on.\n\n\"When I married Dale five years ago I was twenty-five and he was fifty-five. Initially all we had in common was we were both tall... and lonely. I fell for him hard but my family didn't understand. My friends didn't understand either. It was a really hard time for me. I love him with every ounce of my being. We click. We're soul mates. I can talk with him about anything. But back then I lost all of my support group. I was basically shunned. They said some really nasty stuff. Dale almost called it off as he couldn't stand to see me suffer but I convinced him I'd suffer far worse if I lost his love. We moved away and met new people. People who weren't so quick to judge or who also have relationships outside the norm. It was good for a while though I saw a lot of pain when these new girlfriends were used and abandoned by the young men in their lives. When Dale retired some of those people no longer wanted to be our friends. I guess they weren't really friends to begin with. We moved again and met new people. These ones are worse than the last group.\" Her face showed her sadness but brightened when she looked across the table at Ed. \"Then I met Rachel. I clicked with her. She's good people!\"",
        "Ed smiled at that. It was true. She is.\n\n\"I- I reacted badly when I saw you with her. I judged you harshly.\" The sad look was back.\n\n\"I'd like us to get past this. What can I do to make you believe that I forgive you?\" Ed asked.\n\nShe snorted with a grin and looked at the table's surface. The waitress brought Ed's food and asked Tristan if she wanted anything. She just ordered a glass of water.\n\nOnce they were alone again Tristan looked at Ed with a mischievous smile. \"You could give me some french fries. Then I'd know you've truly forgiven me.\"\n\n\"MY FRENCH FRIES!?! YOU ASK TOO MUCH!\" Ed gasped in mock outrage.\n\nTristan burst into giggles and Ed pushed his plate towards her.\n\nShe took some and hummed happily as she ate the crispy fries. The waitress returned immediately with her water and Tristan thanked her.\n\nEd dug into the burger and smiled as his taste buds came alive. He made quick work of the burger and Tristan watched in awe.\n\n\"You must have really worked up an appetite-\" she froze as she suddenly recalled what he and Rachel had been doing. \"So where is Rachel?\" she said then bit her traitorous tongue.\n\nEd blushed and looked at the woman across from him. \"Taking a nap. Where is Dale?\"\n\n\"Taking a nap- not because we had sex- I mean, he likes to take a nap in the afternoon. He says it helps him to be sharp at dinner.\" Tristan was beet red and had twisted the paper napkin into shreds.\n\n\"Not awkward. At all,\" Ed smiled.\n\nTristan burst into giggles once more and relaxed. \"I'm really looking forward to meeting the rest of Rachel's friends. Can you tell me about them?\"\n\n\"Sure! I think Angie is Rachel's best friend though she also hangs out with Zoe. The three of them can be pretty wild together I'm told. Angie's husband used to be a rock star but he got sick and died. She's a lovely woman. She has a daughter named Isabelle who was going to University but isn't right now. Zoe also has a daughter but she's in prison right now for kidnapping and assault &amp; battery.\"\n\n\"Oh my god! Who did she kidnap?\" Tristan gasped.\n\n\"Me.\"\n\n\"What?!?\"\n\n\"It was for a sorority house or... something like that? She drugged me and put me in restraints so she could use me to frighten the new pledges. The drugs were really rough on me and I was off work for a week. I understand her father was a bad influence on her. He's serving a life sentence for murder I think. But Zoe isn't like that at all. She's... she's...\" Ed's heart and mind were doing flips when he thought about Zoe. \"I'm having trouble describing her but you'll like her. I hope I haven't frightened you off. Zoe's good people too!\"\n\nTristan was staring at Ed in shock. He'd been tortured by the woman's daughter and he was still having a relationship with her. Her curiosity was going through the roof!\n\n\"Stephanie and Carolyn are best friends that live in the neighborhood and hang out with us. Stephanie has four wonderful kids but her husband cheated on her multiple times so she's divorced now. She's so full of life and fun! She really likes movies.\" Ed suddenly blushed as he thought he might have said too much. Tristan watched this with interest.\n\n\"Carolyn was an anthropologist and lived in the jungle with tribes when she was younger. She has an awesome tattoo on her back which is the only written record of a lost tribe's language. She writes books now. She has two kids and her husband recently died. He was badly beaten by the friends of the lady boys he was having sex with in Thailand. He died of his injuries. That means Carolyn is a widow. She's really smart and very nice because she never makes me feel dumb!\"\n\nEd frowned in thought for a second then looked at Tristan once more. \"Sometimes another neighbor hangs out with us. She owns the first home on the street. Mishka Shyamalan. She's a surgeon at the hospital. She told me she's the best one there. She's dating Grace's best friend Heather. They're a really cute couple!\"\n\n\"Oh Ed, now I really want to meet them! They sound wonderful!\" Tristan gushed with a big smile.\n\n\"There was another neighbor whose name is Victoria. I thought we'd be adding her to our group but her husband was a very bad man. He was a judge but he'd killed a man! He was apparently not very nice to her either. He was going to kill me as he thought I was having an affair with her. In the end Victoria shot him dead and now I think she's in prison too.\"\n\n\"You weren't in a relationship with her?\" Tristan asked.\n\n\"No! She was married and had two daughters! I'd never break up a marriage.\" Ed said vehemently.\n\nTristan saw Ed had a strong moral compass even if it didn't always conform to societies rules. She snatched another fry from his plate and he fake scowled at her menacingly. She winked at him and thought about how he brightened up talking about the kids.\n\n\"Do you want kids of your own?\" she asked.\n\n\"Yeah, one day. If Grace wants one,\" he answered.\n\n\"I think you'd make a great dad,\" she said honestly watching him accept the compliment with a shy nod and smile.\n\n\"What about you?\" he asked.\n\nTristan winced and Ed immediately felt horrible for opening his mouth. \"I'm sorry, I shouldn't have asked that.\"\n\n\"No, fair's fair. I asked you the same question,\" she said. \"We tried a few years ago but... it didn't work.\"\n\nHe nodded and they both looked out at the beach.\n\n\"I've never been to a beach before today.\" Ed said quietly. He was thinking of Grace and wishing she was here to join them. He would have to bring her on a tropical vacation one day.\n\n\"Never?\"\n\nHe shook his head. \"We never had any money to travel and there are no beaches where I live. I've never flown anywhere. I've never been on an island before. This is the first time I've been away from home.\" Suddenly a wave of homesickness washed over him and he gasped as he gripped the edge of the table.\n\nTristan recognized what he was experiencing as she'd gone through the same thing when she and Dale first moved away from her friends and family. A sense of displacement. She reached across the table and took his hand. \"It's OK, Ed. This feeling goes away. Home is still there and you will go back to it soon. You're just feeling a little disconnected. It happens. I've felt that way too. Listen to my voice. Concentrate on what I'm saying to you.\"\n\nEd's pale blue eyes fastened on hers and she suddenly felt his full attention locking on her. It was almost tangible. She needed him to come back to the now.\n\n\"Feel the breeze on your face. Feel the heat. The table feels smooth under your hand-\"\n\n\"Your hand is strong but very soft. Your rings are hard and smooth. Your eyes are blue but flecked with gold...\" he seemed to relax then he looked around like he was waking up. He glanced at his hand in hers and pulled his hand back with a blush. He looked at the time. \"I think I'd better go wake up Rachel so she can get ready for the party. Are you and Dale going to be there?\"\n\nShe smiled at him. \"Yes, we'll be there. Don't let him trick you into drinking the hard stuff!\" she teased.\n\nHe grinned. \"I read they're serving punch. I should be safe with that.\"\n\n\"Oh boy,\" she thought.\n\n They got up and went their own ways. Tristan walked slowly back to her room to give herself time to think. She really had been completely wrong about Ed. He was as innocent and genuine as Rachel said. She couldn't pin down what it was about him that made her immediately want to protect him. It was a ludicrous concept considering his size. That thought brought her back to that moment when she first hugged him by the beach. He was a large man in more than one way. Dale was also a large man so she knew what she was feeling. No doubt Rachel enjoyed his attentions. The old pang surfaced as she thought about Ed's question about children. While she kept it from her husband she really did want a child of her own. To feel it grow inside her. To bring it into the world.\n\nShe savagely pushed that thought aside. It wasn't meant to be.\n\n-=-\n\nThe manager's rum punch party wasn't what Ed expected at all and the punch was strong! He'd had two already and his head felt funny.\n\nHe saw Dale and Tristan coming down the path and he smiled and waved, spilling some of his drink. They grinned back at him.\n\n\"I see he's found the rum punch.\" Tristan smiled at Rachel who was absolutely glowing tonight.\n\n\"Yes and he's stopping at two,\" she stated in her no-argument voice with a hint of a smile.\n\nEd bowed his head in fake shame. \"They said it was punch!\"\n\nTristan giggled and Rachel relaxed. Something had passed between her and Ed. The hesitation, the holding back was gone. She was open to Ed now and Rachel was able to relax. Dale was also relaxed and looked splendid in his black linen shirt and white linen pants. Very dapper for a manager's party. Ed was also very sharply dressed in his tan explorer's shirt and khaki pants. Rachel had on her gold cocktail dress which drew Ed's gaze frequently as well as other nearby eyes. Tristan looked splendid in her red cocktail dress as it showed off her shapely, long legs.\n\nThe new arrivals were handed their rum punches and Ed gracefully refused a replacement for his empty glass.\n\n\"What do people do at a Manager's Rum Punch Party?\" Ed asked looking around at the other guests milling about. \"Is this it?\"\n\n\"It's a chance to mingle and meet new people. I believe the Manager actually makes an appearance and greets the guests.\" Dale replied.\n\nEd asked a passing waitress for a glass of water. She returned with one in moments and he thanked her.\n\nRachel gave him a smile and he winked back.\n\nThe Manager took that moment to arrive and he did give a short speech welcoming everyone to the resort and ran through a list of activities they would be offering. Ed perked up when they mentioned going on a cruise. There was a party boat and a catamaran cruise. Either appealed to Ed. He just liked the idea of going for a ride on a boat. Once the manager was done they decided to head over to the dining room. They got a table for four overlooking one of the pools. Very few people were in the pool at this hour. They looked over the menu and placed their orders. Ed decided to try some fish and Dale recommended the grouper.\n\nOnce the group was alone again Ed looked around the table. \"Anyone interested in those cruises they offered?\"\n\nRachel nodded as did Tristan. Rachel said the catamaran as Tristan said the party boat. They chuckled.\n\n\"OK, it's settled. We do both.\" Dale grinned and Ed's eyes lit up.\n\n\"Tomorrow we were thinking of renting a car and driving around to see some of the sights on the island. You're welcome to join us.\" Dale offered.\n\nRachel looked at Ed who nodded. \"We'd be delighted,\" she said.\n\n\"I'd also like to poke around Bridgetown to do some shopping sometime this week.\" Tristan said.\n\n\"Ooo! Count me in!\" Rachel grinned and Ed rolled his eyes.\n\nDale chuckled as he felt exactly how Ed did about that. He had a thought. \"Maybe the ladies could go shopping and the men could try our hand at deep sea fishing.\"\n\n\"I've never fished before,\" Ed said.\n\nDale put on a tragic expression and looked at the ladies. \"Now we have to go fishing!\"\n\nIt was Tristen's turn to roll her eyes.\n\nDinner was delicious and Ed thanked Dale for the suggestion. He really enjoyed the grouper!\n\nThey went to the bar and ordered drinks. As it was almost time to turn in for the night Ed could have another drink. They did a little dancing and Rachel told Ed she was done after two. He went back out on the floor with Tristen as Dale wanted to sit out this one as well.\n\n\"Everything ok?\" he asked when they were alone.\n\nShe glanced at his perceptive eyes and smiled. \"Yes, we were just a little too enthusiastic this afternoon and I'm feeling it now.\"\n\nHe nodded with a sympathetic smile. Her eyebrows went up. \"Oh! Not today but there have been times. They have more energy.\"\n\n\"Like kids.\" Rachel said absently.\n\n\"Do you have children?\" he asked.\n\n\"No, I discovered early on that I wouldn't be able to have them. I think that's one of the reasons my ex married me. He didn't want any more kids. He had the one son. That was enough for him. I've always wanted one.\" Rachel said sadly.\n\n\"So does Tristan.\"\n\nRachel looked at his sad expression. \"But...\"\n\n\"I'm the same as you. Not able,\" he said looking away. \"She says she is ok with it but I've seen the pain in her eyes when she thinks I'm not watching and someone walks by with a baby.\"\n\nThe song ended and the dancers returned to the table. Dale wiped his sad expression away and gave his wife a smile. \"I'm pooped,\" she announced.\n\n\"Time to hit the hay?\" he asked and she nodded.\n\n\"Well, we'll see you at breakfast. 8:30AM?\" Dale asked and received nods.\n\n-=-\n\nAfter breakfast the following day the four sat in the lobby waiting for a man to bring them the rental car. They'd discussed what sites they'd visit and settled on a tour of the outer perimeter of the island and stopping along the way. The Animal Flower Cave was at the most northern tip of the island. The rock formations at Bathsheba were on the east coast. Harrison's cave was almost smack dab in the middle of the island so would require a diversion inwards. They just wanted to see the island and a drive through the country seemed to be the best way to do it.\n\nA slim older man approached them with a clipboard and car keys and sat with them to fill out the paperwork. When they discovered the car was a right hand drive vehicle Dale was a little nervous so Ed offered to drive. They switched to Ed's license and Rachel's for the second day of the rental as she'd drive Tristan into Bridgetown tomorrow for their shopping day. Dale had already booked the fishing expedition the following day. The paperwork taken care of, they made their way out to see the small car they'd rented.\n\n\"It's cute.\" Tristan said and Dale looked at it with concern.\n\n\"I don't think I've ever been in a car this small,\" he grumbled.\n\nThere was a lot of glass so they'd certainly have an unobstructed view as they drove. They piled in, ladies taking the back seat to chat, and headed out. They'd agreed to avoid the larger highways as they wanted to take a slower pace and see the island more intimately.\n\nDriving on the left felt a little weird at first but Ed was concentrating hard and it clicked into place. They used roundabouts instead of four way stops so that also took a little getting used to but once again Ed saw the pattern and slipped into it.\n\nDale was a nervous passenger but Ed's natural calm and lack of aggression put him at ease. Ed was a safe driver seemingly lacking the recklessness of youth. Soon Dale was able to ignore the driving entirely and just enjoy the view though he was chief navigator with a crappy map.\n\nThe resort was on the southern end of the island and they'd decided to travel clockwise so their first challenge was navigating through Bridgetown. The capital was large and busy but they made their way through it with only a few wrong turns. Ed never lost his cool when the directions he was given pointed him the wrong way and he got them back on the route smoothly each time. Everyone relaxed and there was a lot of giggling going on in the back seat.\n\nFinally they exited out the northern side of the city and were on their way. The waters on the western side of the island were flat and calm contrasting to the waves they had on the southern edge. It looked so serene. Ed preferred the waves.\n\nThey reached the point where they had to move onto smaller side roads to make their way further north. Eventually they pulled into a large gravel parking lot. They saw the sign for the Animal Flower Cave. Getting out of the car they heard the crash of the surf against the rocks and they made their way forward to see the rough seas. Dale pointed out that heading north from here you'd only find the open waters of the Atlantic until you reached the east coast of Canada. That was a very large expanse of water. Heading straight east you wouldn't see land until you reached Africa. Barbados stood alone, well east of the curving arc of Caribbean islands.\n\nThey paid their admission and followed the guide down the steps into a cave which was open to the northern exposure. Ed helped Rachel and Dale helped his wife move around in the cave. Trish had a small camera and their guide took pictures of the group for them.\n\nOnce back up at the car they looked at the map again and worked out a way to reach Bathsheba through the smaller byways. The east coast of the island bore the brunt of the wind and waves and its rugged beauty brought smiles to their faces. They stopped along the way so Tristan could take pictures.\n\nBathsheba was lovely. They parked and walked along the beach and took pictures of the huge rock rising out of the surf. Everyone was feeling a little hungry by this point so it was back to the car to map out their next target. They decided to aim for Crane Beach as there was a resort nearby where they could buy lunch.\n\nThe drive was scenic and the beach was lovely but Ed's stomach was impatient for lunch. They found the restaurant and once more ordered some amazing seafood. Ed was wondering if he'd be able to make meals like this at home.\n\nDale and Tristan were feeling very good about the day so far. Rachel and Ed were excellent travel companions. Easy going, fun, with enough intelligence and wit to make conversations interesting. They also seemed to hold the same values as them. They were hopeful that they'd found the beginnings of a new social circle.\n\nHarrison's Caves was going to take some serious navigating from Crane beach so they got out the map while they ate ice cream for dessert and went over possible routes. Rachel dripped ice cream on the map and Dale and Ed shrieked in mock outrage at the difficulty of reading their impossibly poor map now that it had ice cream stains on it. Much giggling ensued from the ladies. Once they settled on a few possible routes, knowing they'd get lost a few times, they headed out.\n\nThey were right. They did get lost but that only added an additional thirty minutes to the trip. They eventually found the tourist spot and parked the car. There was a fair amount of other tourists on the tour which was amazing as the caves were cool and beautifully lit. They rode in a trolley from level to level on a smooth road underground. Water dripped on them from the ceiling adding to the ambiance.\n\nOnce they were back on the surface they decided to head back to the resort. Now it was ok to take the faster highway to return but they had a drive through the scenic countryside first to reach it. It didn't take long to get back once they were on the highway and bypassing the city.\n\nEd parked the car and handed the keys to Rachel as she'd be the next driver. She was feeling more confident now that they'd driven through Bridgetown and she'd seen where the public parking was located.\n\nThey agreed to meet for dinner and went their separate ways. Ed told Rachel he'd meet her at the room as he wanted to check out the gym first. He gave her a kiss then made his way over to the building where the equipment was located. They had a good number of machines and he tried some of them out. Thirty minutes later he felt a little better having gotten in a workout. He was sweaty but he'd take a shower when he got to the room. He pulled off his shirt as it was clinging uncomfortably to him and walked across the property. He saw Tristan walking towards him.\n\n\"What happened to you? You're... wet? Did you go swimming?\" she asked taking in his red face and wet muscles.\n\n\"I just did a little working out in the gym,\" he said, pointing back over his shoulder.\n\nShe saw how pumped his muscles looked and smiled. \"Driving all over the island wasn't enough of a workout?\"\n\nHe snorted. \"Hardly! I'm going to go take a shower. See you at dinner?\"",
        "She nodded and watched him jog away. Damn!\n\nRachel was just stepping out of the shower when he arrived so she stepped back in to wash his back, his sides, and, oh what the hell, his cock. She stroked him skillfully as they kissed deeply until he sprayed his cum all over her stomach. He smiled at her as he panted and she rinsed off. She indicated she was good and left the shower to dry off and do her hair. Ed finished up in the shower and got dressed for dinner.\n\nRachel was wearing her red sun dress which accentuated her breasts and Ed froze when she came out of the washroom. She grinned. \"Seriously Edward, you'd think you've never seen breasts before.\"\n\n\"It's- when you- the dresses you wear. They're so lovely and do such... amazing things with your...\" Ed stuttered and she felt that familiar zing go through her. She prowled over to him, watching him twitch, mesmerized by the motions under the smooth fabric. She pressed her body against his and he moaned.\n\n\"We're going to be late for dinner. Let's go,\" she said with a grin. He whimpered just a little and she walked away with an extra spring in her step.\n\nTheir friends were already seated at the table when they entered the restaurant. Ed was walking behind Rachel and her smile was lighting up the room. Ed's face was looking a little pink and his eyes were having difficulty staying off of Rachel's ass.\n\nTristan smiled knowingly.\n\nDale had his suspicions as well but kept his off his face. \"Good evening Rachel. You look very fetching in red,\" he said. She nodded her head towards him with a smile.\n\nTaking his cue from Dale, Ed smiled at Tristan and saw she was wearing a daring and glittery silver dress that dipped way down in the front. She smiled at him as he swallowed. \"Good- good evening Tristan! That dress looks incredible on you!\" he blurted. His face went deep red from embarrassment. Not gifted with a silver tongue at all!\n\nTristan's surprised smile was priceless. Her cheeks bloomed red as she saw his admiring gaze and his embarrassment. Dale chuckled at her.\n\n\"If you are going to wear something which flatters you so much, you should expect to be admired!\" he teased.\n\nShe gently swatted his arm and glanced at Ed who was struggling to sit with his pants being so tight. She looked over at Rachel who just smiled back and shrugged.\n\nThey decided to order a bottle of wine with dinner and this time Ed went with penne pasta with a bolognaise sauce. He was getting a little too much seafood and needed a change. Rachel switched her order to the pasta as well as it sounded so good.\n\nThe wine arrived and they toasted their successful day.\n\nEd really wasn't a wine drinker and spotted a couple a few tables over drinking tall, frosty white drinks with little umbrellas in them. He asked the waitress to bring him one of those and Dale shared a smile with Tristan.\n\nWhen the drink arrived Ed took a sip. \"Mmmm! This is really good! I can taste rum in it but it's also sweet and I taste coconut. It's like a slushy so I'll have to avoid brain freeze.\"\n\n\"It's a Pi\u00f1a Colada. Depending on how much rum they use it can be deceptively strong,\" Dale suggested with a smile. Ed nodded and smiled as he slurped up the sweet drink.\n\nDinner arrived and they talked about the sites they'd seen on their drive. Dale mentioned that he'd taken the liberty of booking them on the catamaran cruise on Tuesday, the day after tomorrow and the Party boat on Thursday which would give them Friday to recover from the party boat. That got the ladies giggling once more. Wednesday was open. Rachel immediately called it a beach day and everyone nodded.\n\nThey finished up their dinner and ordered little bowls of ice cream for dessert. Ed ordered another Pi\u00f1a Colada as well.\n\n\"What time do I meet you in the morning tomorrow for the fishing? It's a crack of dawn thing, right?\"\n\n\"They don't do 'crack of dawn' down here.\" Dale smiled. \"We'll get picked up in the lobby after breakfast. They drive us to the boat and we go out on the ocean with our guide. I think there are two other people signed up to go fishing with us on this charter.\"\n\nEd nodded and sipped at his drink. Damn it was good! \"AAAugh! Brain freeze!\" he hissed.\n\n-=-\n\nThe following morning Dale and Ed waited in the lobby for their ride. The ladies had decided to sleep in and have a late breakfast so it had just been the two men. Earlier Ed had gotten up to go to the gym to work his muscles. When he was done he'd spotted Dale coming back from his run on the beach. They'd waved at each other and went to their rooms to get ready. Rachel insisted Ed bring along the bottle of suntan lotion as his fair skin burned easily. She got out of bed and rubbed some on his back for him, got a kiss, then she went back under the covers.\n\nSo now they waited. Ten minutes past 9AM a man walked into the lobby, spotted them and gestured for them to follow him. They walked out to the front and saw a van waiting. The side door was open and two ladies were sitting on the middle bench. Ed squeezed himself past them into the back seat and Dale followed. The driver closed the door and immediately got them on their way, making up for the lost time.\n\n\"Good morning! You the people going fishing with us?\" Dale asked.\n\n\"That's right,\" the older of the two drawled.\n\nEd blinked at her thick accent. She seemed to stretch her vowels out. It was fascinating!\n\n\"I'm Dale and this is my friend Ed. Should be pretty easy to remember those.\"\n\n\"I'm Sydney and this is my daughter Chloe,\" the woman said.\n\n\"Daughter?!?\" Ed blurted as he'd badly underestimated the woman's age. She dressed like her daughter. He'd noticed she had a tightly toned body like her daughter's. Both had long jet black hair. They even looked alike though Chloe had larger boobs in her bright yellow bikini top. Sydney was wearing a hot pink bikini.\n\n\"Ooo this one's flirty like me! I think I'm gonna like him!\" Sydney grinned wickedly over her seat at Ed.\n\nDale saw Ed's blush and realized he wasn't flirting. He thought he'd better change the subject quick.\n\n\"Have either of you done deep sea fishing before?\" he asked.\n\nChloe just shook her head but Sydney tore her eyes away from Ed to answer. \"No, we're virgins to the sport,\" she said with a grin. Chloe rolled her eyes at her mother's innuendo.\n\n\"That makes four of us then,\" Dale said. The driver swung around a corner and both Dale and Ed grabbed the seat to brace themselves. Sydney caught the wedding band on Dale's finger and nothing on Ed's so she tucked that information away.\n\nThe van ground into the gravel parking lot by the dock. The driver shut off the van and hurried around to the side door and opened it. He helped the two ladies out with a big smile and walked with them over to another man, big and barrel chested, tanned and bearded, obviously waiting for them. Dale and Ed pulled themselves free of the van and joined them.\n\n\"Hello! I'm Captain Dan and out there is my lovely ship 'The Silly Fanny'. Named after my late wife, may Poseidon keep her soul,\" the captain said in a loud booming voice. The ladies were eating it up and Ed had a grin on his face as well.\n\n\"Come aboard. We have an hour's journey to get to our spot, an hour to fish and an hour's journey to get back!\" He froze dramatically and looked each in the eye. \"That's right, a three hour tour. A three hour tour,\" he said with a dramatic tone. Right back to a bubbly voice. \"I was kidding about the three hours. We'll be out there all day. You can call me Skipper.\" He pointed at Ed. \"You look like a Gilligan! Come on Little Buddy! All aboard!\"\n\nWith that he stormed away to his boat and they all followed. He gestured to his first mate standing by the bow of the ship as they approached and the man untied them from the dock.\n\nOnce they were settled in the captain introduced his first mate as 'the Professor' and wasted no more time to get them going. Soon the boat was up to full speed, bouncing over the waves. The noise of the motor made talking difficult but not impossible. At least they were sheltered from the wind inside the cabin.\n\nThere was a small table inside the cabin with a wrap-around bench. Sydney and Chloe were sitting facing the back of the boat, Dale had slid in next with his back to the side windows and Ed was next to him.\n\nIt suddenly occurred to Dale to ask Ed if he ever got seasick but it was too late now. He watched the young man who was just taking it all in. No sign of problems yet. Dale had been on a number of boats in his life and no longer had trouble. The ladies seemed alright as well.\n\nThe Professor offered everyone a drink and Ed took a bottle of water. He promptly spilled it all over his chest when the ship bounced over a rogue wave. He pulled the shirt up and over his head to wring out the water and failed to notice the big eyes and giggling from their fishing companions.\n\nEd realized he was more comfortable with the shirt off so he folded it and tucked it into the small bag he had with him for carrying his suntan lotion. He smiled at Dale and nodded to the ladies who hadn't taken their eyes off of him.\n\n\"So what brings you down to Barbados?\" Sydney asked Ed.\n\n\"Rachel won a week's stay at a resort here,\" he said something out the window dragging his attention away for a second.\n\n\"Rachel?\"\n\n\"Oh! Sorry, my girlfriend,\" he clarified.\n\nMother looked at daughter. \"She doesn't like fishing?\" Sydney continued.\n\n\"Rachel and Tristan, Dale's wife, are shopping in Bridgetown today.\"\n\nSydney smiled wickedly. \"So while the girls shop the boys play.\"\n\nDale thought he might have heard an innuendo in there but he opted not to say anything. They still had a long day ahead of them. No sense in making an issue so early on.\n\nSydney caught the eye of the Professor and got a beer for herself and her daughter. Dale accepted one too. With a glance at Dale Ed took one.\n\n\"Do you drink beer, Ed?\" the older man asked.\n\nEd recalled a football party after winning the State Championships. He drank too much beer and was tricked into being exposed before some of his team mates and their girlfriends... and Rachel. It wasn't a completely bad memory he supposed. \"I've had it in the past. It's ok.\"\n\nSydney raised an eyebrow hearing the exchange. It made her curious about the big man.\n\n\"Not a big drinker Ed?\"\n\n\"Not really. I'm being exposed to new things on this trip though. Dale showed me good scotch which I really like. I love Pi\u00f1a Coladas. I don't like wine. I love grouper! I like walking on the beach.\"\n\n\"You've never been to a beach before?\" Chloe said incredulously as her first words to them.\n\nEd looked at her. \"No, this is the first time I've ever travelled anywhere.\"\n\n\"Well here's to traveling and meeting new friends!\" Sydney raised a toast.\n\nEd lifted his beer with the others. He recalled the last time he drank beer there was a lot of toasting going on too. They drank and Ed was surprised by the taste. His eyebrows went up and he looked at Dale. \"This is good!\"\n\nThe older man smiled. \"Yes, it's good beer. Likely much better than the beer you had at home.\"\n\nEd took another sip and savored the rich flavors.\n\nSydney and Chloe were smiling at him across the table. He smiled back. \"So what brings you two to Barbados?\" he asked.\n\n\"Fishing.\" Sydney said with a crooked smile looking at Ed's chest. Chloe shook her head.\n\n\"We're just taking a mother daughter vacation. I work in the travel industry so I get discount rates on flights and hotel accommodations. Home was getting- we needed to get away so we came here.\" Chloe sent her mother a warning glance but Sydney just waved her off and took another drink of her beer. She then began to adjust the cups of her bikini and noticed Ed's eyes catching the motion. She smiled slyly.\n\nDale could see the mother was going to be trouble but he wasn't going to intervene unless it looked like Ed needed assistance.\n\nChloe watched her mother fuss with her bikini top and saw Ed's attention. She smiled in challenge to her mother then leaned back on the bench to stretch her arms above her head. This put a considerable amount of strain on her own bikini top. Her heavier tits pressed against the fabric and her nipples stood out in relief against the taut fabric, the nipple piercings especially evident.\n\nDale wore a subtle smile on his lips seeing the battle waged between the two women. Mothers and daughters competing was as natural as fathers and sons he supposed. Ed was squirming as he took in the show, no longer able to tear his eyes away.\n\nEd couldn't bear the pressure in his shorts. They were new and had very little give. He should have worn the Lycra jammer suit though that was also just a little too revealing. He had to stand up to relieve the pressure.\n\n\"I- I'm just going to get a little air.\" Ed said and slid out of the bench. He braced himself and stood clinging to the wall of the boat. He needed a hand on the wall and one on the roof to hold on as the boat bounced.\n\nAnd there it was.\n\nPressing hard against the tight fabric of his shorts was a very large, very long, and very rigid bulge. Sydney and Chloe froze and their jaws dropped. Syndey recovered first.\n\n\"Did you bring your own fishing pole or is that bait?\" she growled sexily.\n\nEd blushed furiously and made his way to the door. He went through and they could see his back as he braced himself on the back deck.\n\nDale felt bad for the young man. He could sympathize somewhat with Ed though he wasn't quite in his league length wise. It was obvious that Ed was very shy and uncomfortable about his... endowment. Maybe he could convince the ladies to go easy on him.\n\n\"I think the young man is a little shy about... that,\" he said gently.\n\n\"Shit! He should be shouting its dimensions off the rooftops! Fuck! He's huge!\" Sydney gasped.\n\nChloe looked troubled.\n\n\"That said, he does have a girlfriend.\"\n\n\"Are they serious? Because I'd let him do things to me with that which would give a Las Vegas whore a heart attack.\"\n\nDale froze in surprise. When he'd regained his equilibrium he leaned forward. \"They're very serious.\"\n\n\"It's not real.\"\n\nSydney looked at her daughter who was still staring at Ed's back. \"What?\"\n\n\"It can't be real. It can't be. It's a prosthetic!\" Chloe's voice was getting stronger and she was becoming irrationally angry for some reason.\n\n\"No, that's silly. Ed wouldn't do that.\" Dale said, then the bizarre nature of their conversation sandbagged him. What the hell was he doing talking about this? \"Listen. Let's just agree to forget about all this and just enjoy our fishing trip. Ok?\"\n\nSydney looked at him in disappointment but nodded.\n\nChloe nodded absently but she still hadn't taken her eyes off of Ed.\n\nDale gave her a worried look but there wasn't much else he could do. He looked out the window and tried to regain the peace he'd felt earlier.\n\n-=-\n\nEd was reliving the humiliation of the football party. The looks on the faces of the two women inside were exactly how his 'friends' had reacted to his being completely exposed. Shock and horror. He knew Grace, Rachel, and the others said they had no issues but they loved him and cared about his feelings. They wouldn't do anything to hurt him. Like say that he was some kind of deformed monster. He suddenly wished he'd gone shopping today.\n\n-=-\n\nEventually the boat began to slow and the Professor started preparing their gear to do some fishing. He ran through the basics with them. Dale, Sydney and Chloe had experience with fishing so they caught on pretty well. There wasn't a lot of room at the back so Ed said he'd give it a try after the others had. Dale watched him with concern but he smiled and stepped back.\n\nThere was a special belt harness they wore with a cup to rest the end of the fishing pole in.\n\nEd watched with interest as they dropped their lures in the water. Then it got dull. Ed saw this was a game of patience. He drank a cold beer. Then another. Chloe and Sydney outpaced him on the beer drinking three to one. Twenty minutes later Ed was ready to call it when Dale's pole took a sudden dip. Everyone took notice and the Professor was right there with Dale offering him advice but keeping out of his way. Sydney and Chloe reeled in their lures and stowed their rods to give Dale the space he needed. After ten minutes of fighting everyone was reaching the conclusion that Dale had something big. The man was perspiring and carefully working the reel to bring the fish to the surface without putting too much strain on the line. Ten more minutes passed and Ed sucked back another cold brew in his excitement. The ladies were cheering Dale whose concentration was completely on the rod and the line. The rod straightened out and the fish shot out of the water into the air fifty feet behind the boat. It was a blue marlin and a decent sized one! Ed was standing at the back of the boat and saw the sunlight glittering off the sides of the fish as it twisted and shook in the air. He was in awe.\n\nEd didn't see the two drunken conspiring women sneaking up behind him until he felt his shorts tugged down to his ankles. He spun around in shock and struck Chloe across the cheek with his flaccid cock as she was still holding his shorts down. She rocked back and fell on her ass as she stared at what had just clubbed her across the face.\n\n\"HOLY FUCK! Now THAT'S what I call a COCK!\" Sydney called out drunkenly and licked her lips.\n\nChloe was speechless as she held her hand to her cheek. The stinging was just beginning to sink into her drunken mind. She stared at the meat hanging between Ed's legs and it just wouldn't register. It wasn't even hard but she couldn't accept what she was seeing. Again she became angry but she didn't know why.\n\nThe Professor and Dale managed to pull the Marlin onto the boat as Ed pulled his shorts up. Dale finally noticed what was happening behind him. \"WHAT THE FUCK HAPPENED HERE?\" he bellowed seeing Ed's red face of shame and Chloe's equally red face of anger.\n\nCaptain Dan slid down the ladder with a grim look on his face. He could see Ed was really upset. \"I'm sorry Mr. Walters. I didn't know what they were up to.\" He looked over at Dale and pointed at the women. \"They pantsed him.\"\n\nDale's eyes filled with rage. He looked over at the Professor. \"Toss it back in. Captain, take us back to shore please. We're done.\" The captain nodded to his first mate and turned to climb back up the ladder. He stopped at the bottom and turned back to Ed. \"Mr. Walters, please join me up top. The view is really nice.\" Ed nodded and followed him up.\n\nThe first mate stowed the rods and let the captain know they were good to go. He ushered the women and Dale into the cabin then the boat began to pick up speed as it headed back to the island.\n\nSydney looked upset. \"We didn't get to fish for very long.\"\n\nDale knew she was drunk so he didn't bother arguing with her. There was no point.\n\nChloe was still rubbing her cheek and her angry look hadn't gone away. \"He's a freak,\" she growled.\n\nDale just couldn't let that go. His temper popped. He slammed his palm down on the table surface and both women leaned away frightened.\n\n\"That young man is a far better human being than you'll ever be. All you see is the outer shell and that's how you judge him. Pathetic!\"\n\n\"Hey! We were just having a little fun! He's an adult! There's no need to be a dick about this!\" Sydney barked back.\n\n\"If a strange man were to rip away your clothes in public you would be fully justified in crying rape and that man would face criminal charges. If Ed chooses to do so, I'll fully support his filing rape charges against the two of you. It's the same action and it should have the same punishment.\"\n\n\"It was a prank,\" she mumbled.\n\n\"Not to the victim it wasn't. Something your dim, drunk mind seems to be having trouble understanding. Now shut your mouth and think about how you are going to deal with being charged with rape.\" He turned his face to look out the window. He saw the worried expressions suddenly appear on their faces before he looked away."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "harem",
        "mature",
        "romance",
        "threesome",
        "non-consensual",
        "drama",
        "love story",
        "love triangle"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-most-valuable-gift"
}