{
    "title": "The Coming of Dawn",
    "pages": [
        "This morning at dawn I came for him, outdoors, my quiet whimpers mingling with the sound of birdsong. It had started as a simple desire to experience the glories of dawn with him and turned into something even more beautiful as I touched myself to orgasm, cumming with the rising sun, thinking of him, feeling his presence, while I sat alone outside on the bottom step of my porch stairs.\n\nI usually present the persona of a shy, overly self-conscious woman who follows society's rules, so perhaps I should be startled at how I let my guard down. But instead I feel elated and awash in the beauty of what flowed out of the depths of my desire.\n\nI've experienced an ongoing sexual awakening in the past year that has brought softness and a blossoming openness to my inner being, and apparently my inhibitions have dropped lower than I realized. Because, fuck, I can't express fully how turned on I felt masturbating outside this morning thinking of him.\n\nWho is he, you ask? Well, he's someone I met online. We hardly know each other, and we may never know each other more fully, but when he writes me, his words speak directly to my heart, and my body responds in ways that make me feel intensely alive. He's a gentle, passionate soul, sensitive and tender, more sensual than almost any man I know.\n\nWhen he started writing me of his love for waking early to enjoy the beauty of the arrival of a new day, a hunger grew in my soul to experience the glory of dawn as he saw it, to hear birdsong pierce the deep morning silence, singing so happy and free it makes one's heart ache. And, somehow, though we live far apart in different times zones and will never actually meet, I wanted to experience it with him.\n\nI have always thought of dawn with wistful appreciation, yet I'm more of a sunset type of woman. I'm a night owl, and getting up early has its challenges for me due to my schedule. But this morning when I woke up early to an email from him, the time felt right. My heart-and my body, filled to the brim with electric, sensual energy-compelled me to get up. I knew today I'd experience the joy of dawn, and excitedly anticipated sharing it with him.\n\nI quickly slipped out of bed and wrapped my naked body in a soft, red robe. I walked with gentle, light steps, keeping as quiet as possible so as not to wake any of the five other family members slumbering in their nearby bedrooms.\n\nI softly padded into the kitchen in my bare feet and put the kettle on the stove to boil water for tea. I stood expectantly in front of it, waiting for the water to boil, wanting to make sure the kettle didn't begin to whistle and cause anyone to come check to see what was up.\n\nAs soon as I heard the water begin to bubble, I quickly picked up the kettle and poured hot water into my favorite mug and brewed a cup of chamomile tea. Then, with my cup of tea in hand, I, as quietly as possible, unlocked and slowly opened our creaky front door and stepped outside on the porch.\n\nThe fresh, cool air washed over me, and I breathed in deeply. I heard the birds already singing-I was too late after all to catch the beginning of the chorus! But its beauty spoke to my soul nonetheless. It was still fairly dark outside, with a touch of brightness in the sky. I continued across the porch and down the stairs. It got darker with each step as I traveled farther away from the porch lights.\n\nI live in the city, but our house sits on a huge multiple-acre yard on a hill, with beautiful trees and bushes surrounding it, all left wild. I started walking down a path that took me further away from the house and into deeper darkness, but I stopped when I heard movement in the bushes on either side of me. Probably just raccoons, maybe rabbits or birds, but I didn't have my contact lenses in, and I can hardly see without them. Feeling vulnerable, I went back to the bottom step of the stairs and sat down on the cool cement.\n\nI spread my legs wide, to feel the air on my pussy. I could hear the rush of the wind in the tall trees, rustling the branches high above on the right and traveling through the trees on down to the left.\n\nI let my robe fall open slightly at the top, partly exposing a breast. The warmth of arousal flowed through my body. I sipped my tea and closed my eyes, breathing slowly, drinking deeply of the sensations around me. I felt the breeze against my bare skin, the rough ground against my feet. The sounds of the dawn chorus enveloped me, filling me with happiness. The sky grew brighter.\n\nI heard the roar of a motorcycle on the street below. I listened to the whooshing of the wind high in the Douglas fir trees and heard a wind chime in the distance.\n\nAs I cradled the mug in my hands, I felt its warmth radiate through my cool fingers and the hardness of its ceramic brim press against my soft lips. I savored the warm tea washing over my tongue so sensually, and swallowing.\n\nI impulsively touched my exposed nipple and squeezed it and rolled it back and forth between my fingers. I felt it grow hard and erect beneath my touch. Intensely aroused and full of longing, I wondered if I dared do more, outside, exposed.\n\nI reached down inside my robe and touched my smooth pussy. Oh, I was so wet that moisture dripped from my labia. I rubbed my pussy lips and rubbed my clit, then put my finger in my mouth and delightedly licked my warm, sweet juices off my finger.\n\nI set my tea on the ground and grabbed my right nipple between my fingers with one hand and reached down to my clit with the other. I masturbated with abandon, pinching my nipple and rubbing my clit vigorously and fast, imagining him near me, watching me, touching me.\n\nI felt incredibly aroused being outside with the air hitting my skin, my legs apart, my breast exposed, touching myself in my private places. My desire overcame me, and I felt elated, so fucking high. I wanted to cum... wanted to cum for him.\n\nMy orgasm built up very quickly, and I whimpered, leaning back on the stairs, lifting my hips to the sky. A wave of deep pleasure washed over me, my body pulsed, and I came... pulsing, pulsing, pulsing... outside with the air hitting my skin, thinking of him... wanting him.\n\nI laid briefly on the stairs feeling blissful and relaxed after my intense orgasm. Then my shyness crept up, and I quickly gathered my things and went inside, like a ghost, gliding up the stairs to my bedroom.\n\nLying back down in bed, I thought ecstatically over my beautiful experience of orgasming outside, in the semi-darkness with the birds singing around me, the air hitting my breasts and pussy, exposed, vulnerable, happy, free. I wrote about it, to share with him. But while thinking about my experience I became aroused again, and I came a second time, my pussy gushing with joy and fulfilled release.\n\nI can't believe how quickly I came when I was outside! It felt good and satisfying pleasuring myself, imagining him with me outside at dawn with the birds singing, so happy and free. And then to come a second time!\n\nWill I ever experience the excitement of dawn that way with him again, I wonder, building to climax as the birds sing and the sun rises? Oh, god, I hope so. I must. My heart hungers for such happiness and fulfillment. The beauty, freedom, and hope dawn brings will forevermore be intensified for me, my awakening sexual passion now interwoven with the awakening of a new day.\n\n*****\n\nThank you so much to darrenr for his editing assistance."
    ],
    "authorname": "swiftlytilting",
    "tags": [
        "exhibitionism",
        "orgasm",
        "sexual awakening",
        "cumming",
        "masturbation",
        "outdoors",
        "lust",
        "joyful",
        "female masturbation",
        "watch me"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-coming-of-dawn-1"
}