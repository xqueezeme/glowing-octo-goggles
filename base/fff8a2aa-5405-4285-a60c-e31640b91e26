{
    "title": "Mine...Yours Pt. 03",
    "pages": [
        "Author's Note: I want to say thank you to End of Story for your patience at my terrible humor and tons of questions both applicable to the situation and inane. Also for helping me to better use punctuation marks. A thank you to patientlee who will probably never read this but helped me become more fragile. To lovecraft68, for making me look at different mindsets. Also to somebody who you all don't know and will never meet, though I wish you could. Thank you from the bottom of my heart for just being you., I wish I was more like you.\n\nChapter 9: Mother\n\nThat rough voice in that perfect face, those eyes and sharp teeth! I know there is a little Red Riding Hood joke somewhere if I could only...\n\n\"Gahk!\" I gurgled as an arm shoved through the window screen and grabbed me by the throat! Sure way to stop an idle train of thought, go for the throat! I braced my feet against the window ledge grabbing Lucretia's arm at the same time. I used every single ounce of strength in my body and yanked as hard as I could. I figured with myself braced and being substantially heavier than her I could yank her through the window into my house, and closer to my weapons. Well weapon...a wood axe. Seems like a puny weapon to use on a creature like this; a porch railing worked out pretty good for me before though. Then a thought occurred to me. I am still pulling, and I am not going anywhere! In fact there was just enough play in her grip for me to twist a little and look out the front window.\n\nOh shit biscuits and mustard gravy! I am so boned!\n\nThe hand around my neck grew tight enough for a second so I could feel the pinpricks of manicured nails turn to claws. I had just enough time to see that beautiful pink skin begin to turn dark grey and those funny little sparkles start to show when I became airborne! \n\n\"Paybacks a bitch, GREG!\" I heard as I sailed over my front walk way and nearly hit the large trunk of the locust tree in the middle of my lawn! I hit, and tumbled for a few paces and used the momentum to roll back to my feet. Then I got a good look to see how she had changed. Oh the basic characteristics were still there. She had the same color, horns, too long arms, claws, and cheekbones sharp enough to slice artisan bread. Before she looked kind of thin and anemic. She filled out, I could see muscle flexing underneath her skin, and actually get a good look at her since this time it wasn't dark out.\n\nHer skin was dark gray, looked as cool as a rock in a creek bed, same color too. It looked like it would be cold to the touch, thinking back on it, her fingers were cold around my neck. The rest of her, well, before she was all skin and bones and wiry muscle. Now she must have replaced at least another thirty pounds spread all over her frame. Oh, and still taller than me. I had maybe, what 40 pounds on her weight wise...and she threw me this far? Now you know why I said I was boned. Couldn't let her know that though. Nope, definitely not made. She was formed. The lines of her body, the contours, she was a big girl yes but beautiful If only we weren't about to mix it up.\n\nThere is something I have learned about fights...you never know who is going to win. You can't ever look at a match and say, \"Oh yeah! For sure this guy is going to win!\" There are always pro's and con's things for or against each opponent. One person could slip, fall on their back and the fight goes the other way. Though in fighting Lucretia that would be a bad idea, getting her on her back. From what I can see five of her six ends are pointy when she's on the ground. Be like getting caught in an upside down lawnmower at full throttle! Her wings, damage those and she can't fly, but who knows what other tricks, she's got! I remember her saying she traded in spells, so she's got magic, and I have no idea what kind of stuff she can do in that area. \n\nThe pros and cons were being tallied and it looked like I was definitely boxing out of my weight class. \n\nJust as Lucretia started forward a small white hand landed on her shoulder, rooting her to the front steps.\n\n\"Wait...I would speak with him. Remember why we are here.\" The speaker stepped into view and I saw an almost snow white woman, who seemed to have the same super power that Jemima had. I couldn't tell if she was a 20 year old or a 60 year old. How do women do that? Lucretia bowed her head. \n\n\"Yes Mother.\" She said through clenched teeth.\n\nMother? I am so beyond boned! I am now in the land of BOHICA! For those of you who don't know, that is an acronym for Bend Over Here It Comes Again. This is so miserably unfair! I go to a party, get into a fight not of my own making, now little wuss grey girl comes back as the Grey Hulk to rip me a new one. Hey, I am next door to the Gatewatch! Shouldn't alarms be going off in their house and they all mobilize to their cool car in skintight leather outfits like a supernatural Charlie's Angels? I mean I am next door for Pete's sake.\n\n\"Your thought's are very confusing young one.\" That soft voice said. I did a double take at that. \"It has been a long time since I walked this Plane, but I swear I only understand one word in four of your mind. It's like...a sandstorm with the grains flying every which way, but still moving in one specific direction. You are very...strange.\"\n\nI blinked, \"I'm strange? Really? You come to my house, ring my doorbell, and have your; I guess daughter rip me through my window and throw me on the lawn? Lady, you got your definitions really screwed uhHUUUF!\" Yeah, Lucretia hit me. Right in the solar plexus, you know, the part of the body that lets the lungs work? I kept trying to breathe air back in, but she hit me hard. I choked for a second, only being able to breathe out before my muscles got over the shock and I took in a deep lungful of air. I glared at her; she only lifted an eyebrow and smirked. \n\n\"Show some respect! I don't have a weak body this time, Chjorzit!\" Her mother gave her a look and she subsided, looking down and away in chagrin. Who were these people and what do they want...and what the hell did she just call me?\n\n\"To answer your questions before you come up with anymore, I brought Lucretia here. There was no ritual calling, or sundering of the veil. Therefore, the Gatewatch as they are called in this century have no reason to appear, in tight leather clothing. Is that how they garb themselves now? The picture's in your mind were not focused...your imagination? It must be.\" She smiled quietly.\n\n\"It has been so long, but still a shapely calf can turn the eyes of men!\" She had a throaty laugh that was; well it wasn't really a sexual sounding laugh, just alien. Like someone tells a joke in a different language, and they all laugh, but you didn't get it at all. It was like that except I got the statement, it made sense...but her laugh was still, creepy.\n\nLucretia was still standing aside, and seemed to be staying put for the moment that gave me the chance to look over this, Mother creature. She had moved closer to me, so she was standing in the shade of my locust tree, and now...wow. She really is white. White skin like whole milk, hair the same color, even pearlescent white eyes! Heck, her hair and skin matched in color so much it was hard to tell where her scalp started and her hair began. Then I did something stupid, I turned on my Sight to View her. \n\nYou ever looked directly at the sun before? I have, you see spots for a long time after, and your eyes hate you for being an idiot. The sun is like 93 million miles away, and it still can wreak havoc on the optical nerve. Now imagine it was about 6 feet in front of you. \n\nOuch!\n\nIt hurt more than my last beating, than all the beatings I ever had together! I couldn't tear my eyes away from her, no that's not a her. That's a cosmic force! I couldn't tear my eyes away fast enough. I could feel tears leaking from the corners as the tear ducts tried to lubricate them again. It felt like I had dry sponges in my sockets!\n\nI heard the being called Mother talking and soothing hands tried to touch me but I spun away, barely missing the tree trunk, \"Hands off\"! Then I felt large, clawed fingers grip my shoulders, holding me fast. \"Go ahead Mother, I have him.\" That did it. Couldn't see, couldn't get away, utter strangers...no, enemies holding me so I could not get away, and I had no idea what the other one was going to do. Oh, and I am in pain. I heard the whispering voice in the back of my head, and though my door didn't open, I could feel warmth around the cracks. I felt the cold heat in the pit of my stomach, and a strength I remembered from just a couple nights ago. It pushed out from my body and Lucretia's hands lifted from on top of me. I could still feel the coolness of her body, but she was no longer touching, not making contact with me.\n\n\"What the...\" she began, but I shut her up by twisting my hips and throwing a reverse elbow with my left arm to her chin! Her head tilted back, and I turned to give her three strong punches to what I estimated was her gut. Naturally a person will bend a little forward with this move, and I snapped my forehead into where I judged her head to be. I misjudged though. I practiced this move for humans, and remembered her horns too late to stop. We clacked together and she woozily stepped back but didn't fall. I didn't feel anything, at least, not pain from the contact. I felt the pressure on my forehead from her two horns, but it felt almost as if I had been wearing a helmet of sorts. Try it sometime. Put on a helmet and bop it with your fist. You will feel the pressure of the blow, and hear the noise, but no pain. It was something like that. I was so thunderstruck by this I didn't follow up the attack. \n\n\"Hold, both of you!\" Mother said firmly. From her voice she was somewhere off to my left and behind me. \"Maybe I should have let you fight earlier to answer my questions! Now hold still mage, while I heal your eyes. If I had known you had the gift of Vision, I would have warned you of Looking to closely at one such as I.\" I felt Mother's hands, both delicate and strong; move over my cheeks and nose and then my eyelids. The pain and burning began to dissipate and I opened them to see the white pearl-like eyes of the being, creature, whatever regarding me closely. I felt that power inside me shift and begin to swell.\n\n\"Enough of that now.\" Mother spoke, and it sank back into me, dormant. I probably looked like a fool with my mouth open like that and staring. \n\n\"How did you do that?\" I stammered.\n\n\"I am Queen.\"\n\nWait...Queen? Does that mean...\n\n\"Yes, young one. I am female. A she. Not a woman, though in form I am similar. Similarities are where the line is drawn, for I am not human. It is a bit much to think of me as a Cosmic Force, still...I thank you for the compliment.\"\n\nI guess I can call her, her then. \"What of Lucretia then? She is...\" \n\n\"She is Succubae, though of a different kind than the stories told among you. We were not always seducers that prey on the seed of men. We once drew power similar to the ways of the Leech, what you now call Vampyre. We draw energy, they feed on the liquid of the heart.\"\n\nI had always called Lucretia her, but had been undecided for a while if they actually were women, or not. I guess it was just easier to call them her, she or whatever than to call them it, seemed so disrespectful. I can already hear what you are thinking. Why worry about being disrespectful to something trying to kill you? Sorry, way I was raised. Being respectful costs nothing, and who knows...might help you out sometimes. Wait, one of those words sounded weird...\n\n\"Uh, do you mean vampire?\"\n\n\"As I said, vampyre.\"\n\nHmm. Probably a case of calling something tomatoes /tomato. Wonder if Will knows something about that? Not the tomato thing, the Vampyre/Vampire thing. Maybe its like an' Ye' olde' English type of talking? No, doubt that. This lady used some strange annunciation that had a different feel to it. Huh...definitely something to think about later, when I am not worried about my life!\n\n\"My daughter reported a failed contract in killing the Gatewatch, she told me how a human bested her in combat, threw off her charm, and damaged her form. I was curious how this was possible, so I journeyed here to you bringing her along since she knew the way.\" Her white eyes roamed me. \"Now I have my answer. You are not whole. A broken thing cannot be made to work correctly until it has been repaired. Whole pieces of who you are have been removed, and placed...\" Her voice trailed off, and her hand came close to my chest. I stepped back.\n\n\"Please don't...\" I began.\n\n\"Hold still.\" Mother finished. I was held still. If I thought William or Hilda or anyone else was strong, it was nothing compared to how well her words held me in place. It was like being buried in wet sand up to my neck! She placed her hand on me and I felt...nothing. No seriously, I had been braced for just about everything from a tickle attack to a Temple of Doom heart removal! I waited for about thirty seconds and then cleared my throat. I waited for about ten more seconds and cleared it more loudly. \n\n\"Excuse me, uhm...Mother?\" I said gently. Her eyes snapped open, and with a light frown on her lips I felt an unseen hand slap my face hard!\n\n\"I am not your Mother!\" She said with a sharp tone. She looked about to launch into something scathing about my genetic history and jungle animals so I tried to head of the lecture and asked quickly.\n\n\"I don't know what to call you, what name should I use?\" She seemed to think this over.\n\n\"Call me nothing then, I cannot think of what I should have you call me. You will probably be dead soon anyway. So it is of little import.\" I felt a cold sweat break out over my neck and face, and could see Lucretia grinning from ear to ear a little way beyond my captor.\n\nFinally Mother took her hand from me, I still couldn't move though. \"I have a thought on what we should do to remedy this situation that we find ourselves in, young one.\" She placed her fingers on her lips, tilting her head to the side, almost like a robin scoping out a worm in the grass before eating it. Eating... Something about eating...my toast! \n\n\"What is so important about...toast?\" Mother asked.\n\n\"You interrupted me before I could have breakfast...\" I replied. Then a thought hit me, might just buy me some time. \"You all hungry?\" I asked.\n\nLucretia's eyes widened in surprise, and Mother had a small grin that almost showed teeth. Then it hit me, yeah, ask a couple of succubae if they're hungry! If Lucretia's reaction to me when we first met was a good indicator I am like a three course meal with a nice cream sorbet dessert. \n\n\"I can whip you all up something to eat. Do you like hash browns?\" Nice, do they even eat people food? I guess they are people, after a fashion. Mother considered this and finally nodded. \"As I said before, it has been long since I have been here. I would like to try these...hash browns?\" She saw me nod that she got the word right, and then I was released. I walked behind Mother as we went to my front door.\n\n\"I'm watching you Greg.\" Lucretia hissed as she fell into step beside me. She used her couple of inches of height on me to glare down her nose.\n\n\"Tell me something I don't know.\" I retorted.\n\n\"You will die before the sun sets!\" She snapped.\n\n\"Like I said, tell me something I don't know...Lucy!\" I chuckled. Oh, that got her hackles up! The fact that she wasn't getting a rise out of me, or that I shortenized her name, either way if she was a cartoon character steam would have been coming out of her ears! \n\nBy the way, yes...shortenized is not a real word. I made it up since it seemed applicable to the situation. No you may not use it, it's mine.\n\nI thought I caught a hint of a smile from her mother as she walked through my door. As I passed through a thought occurred to me. \"My doorbell doesn't ring, how did you use it?\" I tried it and it rang a merry four-tone chime!\n\n\"I wanted it to work.\" Mother said simply. Right...hmmm. \"What about my window, can you...want it to be fixed?\" She looked at me with another simple smile, \"I think I want it there as a reminder of how things are.\"\n\nGulp!\n\nI lead them into the kitchen. My toast was burnt, but the coffee was still good. I poured them each a mug; Lucretia got the one that was chipped on three sides. Mother got one that was camouflage patterned and said, \"Be all that you can be!\" Got it for ten cents at Goodwill. She glanced at the coffee and then at her daughter. Lucretia was still frowning at me. \"Drink, daughter! He has shown hospitality.\" It was so strange to see this diminutive looking person handing out orders and such to someone who was at least twice as big as her.\n\nLucretia glowered and took a sip. Then another. She blinked in surprise staring at the dark liquid. Then drained the mug! Yep, Starbucks now has a new member. I felt a little like a drug dealer. Mother looked down and took a sip, then crinkled her nose. I said, \"I'd give you cream and sugar but I don't have any. I...sorry.\" Mother seemed to mouth the words to herself as if testing them. \"I want cream and sugar for my, what is this called?\" \n\n\"Coffee.\" I supplied. The words were hardly out of my mouth before both a little pour pot of cream and a small bowl of sugar with what looked to be a small ceramic teaspoon appeared in front of her. I was astounded, but then my own mother's training kicked in and I picked up the sugar bowl and spoon. \"May I serve you?\" She blinked at me, and it was hard to gauge her expression. Solid white eyes will do that. Wonder how good she would be at poker? \n\n\"You may.\" I put in one scoop and looked to her, she nodded for another. I gently stirred the coffee, and began to pour in the cream, watching again for her nod out of the corner of my eye. Finished, I stood back, waiting for her to take a sip. She never looked at the mug, but kept staring at me.\n\n\"Please, drink your coffee. I will start on the meal.\" \n\nI was, and yet wasn't surprised on how calm I felt. When I was first put in jail, all you feel is fear, and all those other negative emotions. The human body and mind cannot keep that up forever. Eventually you become accustomed to it. This situation was no different. Well, it was, but follow my logic here. Eventually, Mother is going to either turn Lucretia loose on me, or do me in herself. At least that is how I understand the situation. In the meantime, she can't be doing all the ordering my death or killing herself if she is eating and waiting for a meal. I heard wings rustling behind me; I glanced over and saw Lucretia shifting in her seat. Being six feet tall, 200 pounds and with an impressive wingspan of at least twenty feet she looked miserable trying to comfortably sit in a kitchen chair I got from work.\n\nOh yeah, my kitchen table is a folding table that I got where? In a dumpster. This may or may not surprise you, but do you have ANY idea of the stuff that people throw away? I got stories that would surprise you, but that will be for another time.\n\n\"Hey, Lucy. If you change to your other Barbie doll form you can sit more easily.\" I said, while pulling out some potatoes and ham. \n\n\"What form?\" She asked.\n\n\"You know, the funny looking one I saw you in outside my house, and at the Halloween party.\" I replied.\n\n\"Funny looking? It is not funny looking!\" It is a mix of all things I see men look at. When I walk among people here I get stared at a lot, I feel their lust.\"\n\nSigh, clueless! I started peeling the potatoes and talked with glances back at the table. \n\n\"Of course they're gonna stare at you, you do look gorgeous, but that's the problem isn't it? You're too gorgeous! No one wants to talk to you or get to know you, they're just going to want to stick something in something wet. Not to mention, no real women looks like that. You stand out, and some people will pick up on that. I sure as heck did.\" ",
        "I heard silence from them as I got some butter and put it in my broad skillet. I glanced back and saw Lucretia was in her Barbie doll form and hefting her breasts in her hands while looking down at them considering. Instant erection...Activate! She seemed to be puzzled and her mother had en elbow on the table watching between the two of us. \n\n\"Gimme a sec' to get the hash browns cooking and I'll explain, kind of busy here.\" I said. I got the food in the pan, and threw some ham on the toast and restarted the toaster oven. I walked over to the table with the pot of coffee and refilled both mugs, then looked down at Lucretia. She looked so different this way. Warm eyes, and soft pink skin. Hard to tell there was a monster of epic proportions under that fa\u00e7ade. \n\n\"Stand up a second.\" I asked. She did and my mouth went dry. Naked woman, even all fake like this it had been a long, long ass time since I had seen one. The orgy didn't count, this was different. This was a naked woman standing here looking at me in my kitchen. I was making food for her, and we were going to eat together...and...and... I could feel my eyes begin to moisten and an ache began in my chest for a dream that would never ever come true for me.\n\nI once dreamed of having a wife, and family. To be newlywed and explore my wife's body and ask of her thoughts, to wake up late on a Saturday morning and have breakfast at the kitchen table not even bothering with clothes! I had wanted to have someone who I could share my life with, who I could love without reservation and who I could hold in my arms and hear her say that she loved me and really mean it. To not be so damn alone, and scared and...\n\n\"What would you change?\" I heard Mother ask. I blinked and saw Lucretia waiting in front of me, still naked, and with an odd expression on her face. I cleared my throat and rubbed my hands over my face to wash the thoughts and feelings away.\n\n\"Well first off, what age are you going for? Late twenties or something like that?\" I asked.\n\n\"What would you suggest?\" Mother returned.\n\n\"Let's work on the hands first.\" Lucretia held up her hands to inspect them. Perfectly manicured with a nice white half circle at the base of the nail bed and so forth. Trust me, they were perfect. I took her hands in mine, and I could not suppress a shudder of...I don't know, I wanted to say revulsion, but I really don't know. Now I was the one confused!\n\n\"Most people, I mean humans type of people are not perfect. They have little flaws and little habits that make them individuals. Make them unique.\" I turned her hands over, inspecting the palms. \n\n\"You have no scars.\" I stated.\n\n\"No, I heal very quickly, and my body doesn't carry scars.\" I showed her my hands. \"See this, on the pinky knuckle of my hand. I was punching squished apples from a cider press and I opened my skin when I hit the edge of the wood.\" I turned my hand to show her the side of my ring finger. \"Grafting knife, sliced it down to the bone when my Dad was teaching me how to graft trees. Humans, no matter who they are have little inconsistencies to their bodies.\" \n\n\"How do I choose? What do I change?\" She asked. I glanced at Mother who was just sitting there, watching with no discernable expression.\n\n\"Well, what times were you injured that didn't involve a fight?\" I asked. Lucretia pondered this for a moment biting her lower lip on the corner. \"I once was sleeping with my sisters when I came home from the desert, we were all piled in a corner, when Seneca had a bad dream and she kicked out in her sleep and struck my knee. She is not like me, no claws like I have, but her toe nails are still sharp and she cut me open.\" She glanced at my face again.\n\n\"There was no scar though, I healed from that in moments then went back to sleep! Unlike you, I don't carry my scars for the rest of my short life.\" She said with a condescending smirk.\n\nI ignored the jibe. \"That's fine we can work with that. Put the scar there on your knees.\" I said.\n\n\"You don't give me orders! I will tear your head off and spit down your neck before I...!\" \n\n\"Do it.\" Mother said.\n\nImmediately Lucretia looked down at her left knee and a small scar, more of a divot really, appeared under the patella of her knee.\n\n\"Good start. What else have you got?\" I said quietly.\n\nBetween quick trips to check on the food we got a lot done. Soon her skin had changed to a more robust creamy rose complexion, and her hair no longer looked like an organic herbal essence advertisement. Her eyes were a little off centered since humans almost never have perfectly spaced eyes. Now she had a little scar at the corner of her right eye, and a slightly longer one on her left elbow. She got those in a fall she had while flying. It really pissed her off to show those scars since she never had to wear them.\n\n\"Most women don't like showing off their scars either, they think it detracts from their beauty. To have you carry them and act that way, naturally, to hide them. That will help you blend in by acting more like a human does.\" I got caught up in looking at her, just these little changes sure made a huge difference. She truly was striking, and now... I couldn't help it but to reach out and trace my finger on her shoulder. I wish...forget it! I got cooking to finish. As I turned I caught Mother and daughter sharing a look as I served up hash browns and open-faced ham sandwiches. I had cut up an apple into slices to serve on the side. I stood to eat since I only had two chairs and they were occupied. \n\nMother ate with her silverware, as Lucretia devoured her food with her fingers. I winced seeing this, and Mother noticed. She looked me in the eyes and darted her eyes at her daughter. I shrugged. Her lips firmed and she motioned at her daughter again with her eyes. I shook my head emphatically at her. She grimaced and made a claw motion with her hand. I felt fingertips digging into my chest, hard. I stared right into her blank white eyes and softly said. \"Kill me now or kill me later. You will not order me about. I may not be much, but I will not be told what to do. Try asking me!\" That last sentence was said kind of sharply. Her eyes widened again.\n\n\"I ask that you show her how to use utensils.\" Lucretia's head came up from where she was gorging herself, ketchup dripping from her chin, and a crust of hash brown on her cheek. She looked horrified! I almost started to smile, then thought better of it. I will not go into the details of what happened. I can give you some of the vocal highlights though. At least of what she said.\n\n\"Why do I have to hold it, hands work better to feed me!?\"\n\n\"Knives are for killing things, not cutting food! My teeth work perfectly fine.\"\n\n\"Give me back that meat or I will flay you with my wings!\" \n\n\"Forks are stupid, just one more thing between my mouth and food.\"\n\nSMACK!\n\n\"Thank you for the meal Greg. Sorry Mother\"\n\nI sat back with a sigh on the kitchen counter, washing my hands and soaking a rag so Lucretia could wipe herself down. I waved to Mother, motioning to move aside with me. Surprisingly she did, maybe she could see the perplexed look on my face. We left a naked and messy Lucretia playing with the taps on the sink.\n\n\"What is going on? Why did you want me to show her how to eat with a spoon and stuff?\" I asked quietly. She grinned and showed her teeth for the first time. They were a dazzling white, and every one of them serrated and sharp looking as a razor! Just seeing those teeth made me shiver with fright! How did she not bite her tongue, like, all the time? \n\n\"I love, very...very few things in existence. She is one of the few. I also have lived for a long time. So long in fact you may very well have a hard time comprehending it. How long is the most long lived being you know of?\" She asked.\n\nI shrugged, \"There's Methuselah, but for someone I know...I have a vampire friend who I think is over 700 years old.\" She blinked. \"You are friends with William Abernathy? You must mean him. There is no one closer to this area of the same age.\" She seemed to think a moment, then let the thought pass.\n\n\"My daughter is different than others of our kind. She sought to learn the use of magic, and fighting more than the ways of the seducer. Many of her sisters have been used in contracts and have gained great power by the energy they have gained.\" She paused, as if unsure what to tell me. \"When the wizard hired Lucretia and used the sacrifice of the elk and wolf for her form here; he thought it would be sufficient for her to use her charms as succubae to drain the Gatewatch of their life. He did not know my daughter has no skill in this. There is much pride in her soul and a desire to prove herself, so she never told him her skills and let him assume as he would. Of course she is able to sense emotion and cause emotion in others. We all do that from when we are born. Her plan had been to wear out everyone at the gathering, and drain them all with a kiss each.\"\n\nShe smirked at this, \"People tend to think that you must lay with one of our kind to be taken from, not so. We can also take with a simple kiss if we wish!\" She smiled at me. \"Think on that the next time your lips touch another's, it might be one of my children in disguise!\" I shuddered again, though it was thinking more at what that bear trap of hers would do if she playfully bit my lips! Ouch!\n\n\"I digress, \"she continued. \"With a weak sacrifice, though strong for most succubae, Lucretia could not use her other skills and assets and had to use trickery and guile to get the needed result. She is not, talented, at this. Her assets are strength, speed, endurance, and magic. Which is where we now come to you, dear Gregory Bastion Brooks...\" I started at her use of my middle name. When a mother uses your middle name, well, it can't be good. And this is a Mother to be sure. Also, HOW did she know my middle name? Oh yeah...reads minds.\n\n\"You are a telekinetic.\" She stated. \"Geshundeit.\" I replied. She arced her eyebrows at me. \"I don't understand why you bid me good health, and in another language.\" I rolled my eyes, and then remembered whom I was rolling my eyes at. \"I was trying to make a joke. I am not a telekinetic, that's a person who, what? Move things with their mind? Pssh. I have never done that.\" \n\nI pondered this for a moment.\n\n\"Are you trying to tell me that, really, I have some long lost magical ability that is rare and special?\" I gasped in false shock, \"Oh my gosh! I must have been a lost child taken in by a loving family and I don't know that I am adopted! Now, with your help I am actually a magical lost prince who is actually a mage of some sort and I will go on amazing adventures! I will make friends and bed beautiful women and then fight a climactic battle over my kingdom where I will reign for a long time since I found out how to be immortal and live happily ever after!\" My feigned happy face disappeared. \"I'm tired, I only just woke up a few hours ago, and I'm tired. You threatened my life; Lucy over in the kitchen threatened my life. I am trying to figure out how to keep it. Then you throw this at me? Just get to the damn point! I am at the mercy of a shark-toothed Queen and a stuck up princess and you want to play games with me?\" One side of me felt good getting that off my chest, the other...have I COMPLETELY LOST MY MIND?\n\nMother began to giggle, and then it turned into a deep belly laugh that echoed and reverberated around my living room causing Lucretia to poke her head around the doorway and walk closer to join us.\n\n\"What is going on Mother?\" she asked. Said person continued to snicker, and somehow her eyes looked warmer, almost like the smile she was wearing was finally reaching the rest of her face.\n\n\"It is good you are here daughter. I would like you to meet the new negotiator for your contract!\" \n\nChapter 10: Negotiations.\n\nYou could have heard a pin drop. Well, I have plywood floors so it would have been easy to hear anyway.\n\n\"WHAT?\" Lucretia shrieked, snapping the word out. I have to admit that I was...\"GAHK!\" I was against the wall her hand around my throat.\n\n\"What game are you trying to pull here human?\" She snarled. \"You think to control me? ME!\" She shook me like I was a dirty dust mop. Being shaken by the neck, just to let everyone know...hurts. Quite simply put you only got vertebrate and tendons that are of any real substance in there. It being squeezed and jerked around like that had me thinking wishful thoughts for an onsite chiropractor. It also woke up that power of mine, it pushed and her hand opened from around my neck an inch or so. I yanked my head back and it hit the drywall, I could hear it crack. Yet I didn't feel pain from it.\n\n\"That's it, I'm done. Little miss wings here has just passed my patience and left it far in the dust!\" I looked over at Mother who still seemed to be trying not to laugh. \n\n\"You started this, so finish what you were going to say. Oh, and tell evil Tinkerbelle to stop grabbing my throat before I rip off her tail and use it as a necktie!\" I said. For the first time, Lucretia looked worried about trying to grab, hurt, hurl, or manhandle me. I wanted her to. She didn't look as scary now, compared to when she had all those claws and horns. \n\nMother spoke, \"Lucretia, long have you not understood the lives of those on this plane. You do not know their habits, their practices, their mannerisms. I cannot teach you for I am...out of practice. You refuse to follow the path of your sisters, so I have another option in mind.\" She turned now to look at me.\n\n\"You, Gregory Bastion Brook. You wish to live...\" her eyes hooded for a moment as she considered, \"...at least for the moment. I propose to bind you two together. My desire is for you to teach her how to live here in your world, to teach her to pose as a woman of your species. Show her what men want so that she may be a true succubae.\" \n\nI began to laugh, I have not laughed, or cried for that matter, as much as I have in the past few days in years. \n\n\"Wait! Wait!\" I choked out. \"You want me, a sex offender, to teach a succubus...what? How to seduce men? Lady you're crazy!\" I heard Lucretia begin to snarl and rounded on her. \"Really? Come on you! You have got to admit this is a bad idea! She may be your mother, and your queen. She may also be able to kill me, or you if she wanted. But this idea is ludicrous!\" I turned back to Mother as she asked me a question. \n\n\"You say you're a sex offender...what is this? Did you offend someone with sex? I do not know this phrase.\" Mother asked. I put my face in my hands again. How do I explain this? Just keep it simple, don't get angry...just say it like it is.\n\n\"I had a girlfriend who was mentally unbalanced who told the local law enforcement that I raped her. They took me to trial and found me guilty of a lesser charge. It still made me a sex offender.\" \n\nMother seemed surprised. \"What strange...do they not have eyes? To call a rock a rose is just foolish since a rock is not a rose just as a rose is not a rock. It matters not. I know you will be a good Master for my daughter.\" I blanched at that. Master. I hated that title, except if used by craftsmen. Then it's a title that tells of skill rather than one of ownership. \n\nI said, \"No.\" I heard an emphatic echo from next to me. I turned at the same time that Lucretia did, and our eyes met. \n\nWe both looked for a moment at each other, and I saw that for once, we were in accord. We turned back at Mother who seemed as pleased as a cat who had caught a rare and endangered bird between her paws. \"Why...\" she began to ask and we both answered at the same time talking over each other.\n\n\"Mother how DARE you do this to me? I thought...\"\n\n\"I am no one's Master, and I will not put up with...\"\n\n\"He will use me Mother! He'll make me...\"\n\n\"I know what it's like, and she is not one to...\"\n\n\"I don't need his knowledge I can find out other...\"\n\n\"Have her go to the library, got a great self-help section...\"\n\nWe both trailed off, as her laughter grew louder, it almost sounded human. \"You two are perfect for each other! It's settled then, you will teach her what she needs to know. What do you wish in payment?\"\n\nI shook my head. \"You don't get it. I am not entering into any agreement with you, or her.\" \n\n\"Then I will kill you, right here, right now. Your life will end, all possible tomorrows will be forever closed to you, and your spirit and soul will go on to the afterlife to its final destination. I will kill you for harming my daughter, and because it will please me to do so. I haven't killed a mortal in ages and being back here I suddenly find a desire to do this.\" She told me all this with a simple smile on her lips. I kept on forgetting that this is a Queen, you don't just refuse royalty!\n\nI felt the cold again, oh not the emotionless peace that I get. The cold of knowing that whatever I said next I had to be very careful, like stepping on a landmine and you don't know if you armed it, or not. I rubbed my left hand through my short bristle of hair on my head.\n\n\"What are you offering?\" I asked. \"What are you offering for compensation?\"\n\n\"What do you wish?\" She made a gesture and I felt different. I was, well...what the heck?\n\nI looked down and my stomach was gone. In its place was tight and hard washboard abs; with those little hip indents that look like a V down on the inside. I always hated those since usually posers got them in a gym. I could work anyone of those namby- pamby weightlifters into the ground, but it-looked kind of good. I felt something else and turned a little out of their line of sight to check out the goods. There it was, it was, ahem, longer I think is the correct word. I glanced at Mother.\n\n\"That part wasn't necessary. I was always a grower not a shower.\" I said.\n\nShe just grinned. \"It still is.\"\n\nWell...that's impressive!\n\nI sighed and thought about it. I had always liked my body; I worked hard enough on it. Sure I was on the shorter side, but I liked that. I liked being as wide and stocky as I was. I liked that I could pick up and move over 600 pounds if I got a good hold on something. Heck, I liked my cock! I didn't need any extras in that area. What I had was more than sufficient for when I actually had sex. Not like I needed to worry about that anymore anyway. \n\n\"Please turn me back.\" I asked politely. \"This isn't what I want.\" Mother nodded and then I was myself again. A quick check in the shorts in case she altered my...nope, still good. Interesting, so she can change my body on a whim, just like that. My mother would sure like that. Having been a diabetic since she was a little girl she... Oh, no way. Is it even possible?\n\n\"You can change peoples bodies right?\" I asked, Mother nodded.\n\n\"Can you alter a body's genetic makeup?\" Mother thought a moment then nodded.\n\nI gulped and rubbed my hands together nervously. \"Can you heal a genetic disease?\" I hopefully asked. Mother appeared to peer at my head, whatever she saw there made her eyebrows raise in surprise. \n\n\"That is the price you wish paid?\" She asked incredulously.\n\n\"Half of it anyway.\" I replied. She appeared to consider then nodded once. \"It is done.\"\n\nI ran to my bedroom right up the stairs and passed a confused looking Lucretia along the way. I ran to where my cell phone was left by the bed and quickly hit speed dial #1. The phone rang twice before I heard my Mom's voice. \n\n\"Hello, Gregory?\"\n\n\"Yes Mom, it's me. Can you do me a favor?\"\n\n\"You didn't just call to talk?\" \n\nSigh. Bad son.\n\n\"No, I really need you to do something for me though.\"\n\n\"Alright, if I can Gregory. I wouldn't mind if you came over more often. Your Father and I miss you.\"\n\nSigh! Really bad son!\n\n\"Can you take a blood test for me Mom, and tell me where you're at?\"\n\n\"Why? I just took a test a few minutes ago and I am about ready to take my shot of insulin. What's wrong sweetie?",
        "\"Mom, please do not take that shot! Just take your blood test again and tell me what it says.\"\n\n\"Why, what's going on Gregory?\"\n\n\"Please just do it.\"\n\n\"You are acting very strange son, but...\"\n\n\"Mom if you do it I will come out and spend the day with you and Dad and I will bring pizza and wash and wax your van!\"\n\nThere was silence over the phone. \"Are you alright Gregory? You're worrying me.\"\n\n\"Please mom, just take your blood test.\"\n\nI heard over the phone the \"Ouch\" of Mom pricking her finger, just like she has to do two to three times a day to check her blood glucose level. That coupled with having to take shots of insulin so she doesn't die makes things, difficult for her most times. My Mom has diabetes, had it ever since she was twelve years old. It's been hard for her, but she is still one of the happiest people I know. I don't know how she does it, but she does. The disease has started to affect her nerves, causing horrible cramps in her legs that wake her up crying and yelling as her muscles spasm. If this works...if this works...please!\n\nI heard a gasp over the phone. \"Mom!\" There was silence. \n\n\"Something is wrong with the machine.\" I heard Mom say, but her voice was tremulous. \"I checked myself earlier and the test read 190. The doctors told me, that normal for me is between 80-120. This says I am 113. It must be a false reading I need to test again.\" \n\nI heard another ouch, but Mom was panting a little, I could hear the excitement in her voice. Then I heard a beep of her tester. \"It says 113... Greg, it says 113!\" I heard her laugh, and then she stopped. \"I need to set you down Gregory!\" I heard the phone land with a hollow \"thunk\" then the sounds of stuff being moved around. \n\n\"Mom? MOM!\" I called. I heard the phone get picked back up. \"I have some of the old color changing strips left. While I am still bleeding I am going to try one of those. Third times the charm right son? Also, the machine tester could be broken, these don't lie.\" She sounded so excited, and then quiet. I heard a sob. \n\n\"Mom? Mom, talk to me!\" I heard her crying and I grit my teeth. \"It's the same!\" I heard her say between gasps.\n\n\"They are all the same Greg! I don't understand. Am I better? Is this permanent, or is this going to just last today, was it something I ate? What's going on?\" She continued crying.\n\nI tried to calm down, but I was so...excited seems like such a shallow word for how I felt! \"Mom, first thing is when Dad gets home from work you set up an appointment with him to go to the clinic and get some blood work done. I think...I really think you're cured. You are no longer a diabetic Mom.\" I heard the crying intensify and I wished I was there right then so I could hug her. Even if they were happy tears, I never liked seeing my Mom cry.\n\nA little later she settled down, and she still was sniffling. \"Greg, are you still there?\" \n\n\"Yes Mom. I'm here.\"\n\n\"Did you make this happen? Did you cure me? I know I say I don't want you to hang around those gobliny friends of yours...did they do this for me?\"\n\nHow do I answer that, (Yes Mom, I made a deal with the Queen of the Succubae, and half of the payment was you being cured of diabetes!) I shook my head. \"They did it for me Mom. Just wait until Dad comes home, tell him what happened, show him the test strips and go to the clinic. Okay?\"\n\nI heard her inhale a breath then let it out slowly. \"Alright son, I'll do it. I love you.\" \n\n\"I love you to Mom...bye.\"\n\n\"Bye, oh wait! Tell whoever did this I will bake them an apple crisp! I want to thank them myself.\"\n\n\"I'll tell them, bye Mom.\"\n\nI hung up the phone, and felt my eyes watering again. I walked back down stairs and saw Mother drinking some more coffee, and Lucretia nervously pacing the floor. Mother looked slightly up at me as I drew closer. She looked confused as I took the cup out of her hands and placed it onto the table. Her mouth full of serrated teeth dropped open as I drew her into my arms and gently hugged her close to me. She spoke first after a gasp of surprise.\n\n\"I saw you thought to do this to me when you came downstairs, I didn't believe you would!\" she said softly.\n\nI didn't say anything, but held her closer, my tears falling in her white hair. I took a breath to speak, but it caught in my throat and after my voice squeaked once I gave up and just held her.\n\n\"You don't need to speak Gregory Brooks. When you can speak clearly though, I would like you to tell me what this apple crisp thing is.\"\n\nI chuckled and then let her go. Man what an emotional roller coaster today was being. I get attacked, threatened with death, make breakfast for royalty, and Mom gets healed of a lifelong degenerative disease. I glance at the clock. It's still not even 5pm yet! \n\n\"There was something else you wanted as your price?\" Mother asked. I nodded. I went to the small cabinet just inside the back door where I came in every night from work. On it, was an empty plastic gallon milk jug. Every time I came in I would set my wallet, keys, can of chew and other items that find their way into my pockets while I am out. The coins all went into the milk jug, and they have been adding up over the years. The jug was about three quarters the way full and so heavy I was afraid to pick it up by just the handle. \n\nI handed it to her, \"See this jug?\" Silly question, of course she saw it! \"What I need is this. To take care of Lucy...\" The owner of said names snarl interrupted me. \"My name is Lucretia! Use it or lose your tongue!\" I considered, I wasn't afraid of losing my tongue. I knew now I could defend myself against her, even if it was only sporadically. But I never liked people making up names for me either. She had a fair point. \"Fine, Lucretia.\" Strangely, saying her name while looking at her, in her eyes I felt that weird tremor again. Just like in the kitchen when I was feeding the pair breakfast. I wanted...longed... I pushed the thought away for another time. Glancing back at the succubus I saw she must have been feeling something as well. What it was I didn't know, but her face was now pensive, agitated.\n\n\"I am going to need more financial help if she is going to be staying with me. I need the value of this milk jug in gold once a month.\" I figured there to be anywhere between 300-500 dollars in there. Mother unscrewed the cap and dumped some of the coins in her hand. She carefully examined each one. \n\n\"Anything else?\" she asked, examining a penny closely. I shook my head. \"What about revenge?\" I blinked.\n\n\"I could give you your revenge, wouldn't you rather have that?\" she clarified. I gulped. Send Mother after Dawn? She could make anything, ANYTHING happen to the woman who wronged me! My hands would be clean, I would have the perfect alibi I...\n\n\"No thanks. I appreciate the offer though.\" Lucretia snorted. Mother glared at her daughter. \n\n\"I hope you learn the lesson he just taught you right here daughter. It would do you well to remember it!\" she snapped.\n\nI was confused at what the lesson was myself and said so. Mother rolled her eyes at me, where did she learn to do that?\n\n\"From you.\" She said.\n\n\"Excuse me?\" I asked, startled out of my thoughts.\n\n\"Rolling my eyes as an expression of frustration or exasperation. I learned that from you earlier.\"\n\nDarn mind readers! Keeping me on my toes and surprising me!\n\nMother smiled...I shuddered.\n\n\"Done, I accept your terms and conditions as so thought, stated, and interpreted.\" Mother declared and clapped her hands sharply, once.\n\n\"Mother, I will not do this!\" Lucretia stated firmly.\n\nMother ignored her and continued looking at me and went on as if she had not heard her speak. The words seemed to be more for Lucretia than me.\n\n\"We succubae have used this plane as our hunting grounds for eons. In all that time you humans, and vampyres, and lycans have remained alien. We do not understand you, and you do not understand us. I care not whether you understand our kind. I do care about understanding you.\" Her white eyes slowly shifted down my form and back up to my face. I had the hideous impression she was seeing much more of me than I wanted her too, all over again.\n\n\"This is why I want my daughter bound to you for as long as you wish to teach her. That way in turn she can teach others of our kind. That is why she will do this, and she still has an out. If you do not bind her strongly enough, she will find a loophole as you call it. Then she will kill you.\" She chuckled at that.\n\nI shrugged. \"She's been threatening to kill me since I met her. It's been kind of losing its force with how often both you and her say it. I have probably been threatened with death by you both twenty times, from when she swore by the Empty Throne to kill me, until now!\" \n\nLucretia shrank back from her mother and looked like she was going to run. Mother kept staring at me, and I swear I could see something invisible shimmer next to her before it became still. \"Is that what she said, her exact wording was to kill you?\"\n\nI swallowed, \"Umm, I believe it was, \"I swear by the Empty Throne to hunt you down and feast on every bit of energy you possess!\" it was something like that.\" \n\n\"Did you swear this by something that was not yours to swear by, Lucretia?\" she asked, her voice soft and dangerous.\n\n\"Y...Yes, Mother.\" Came the quiet reply. The Queen sighed and lowered her head.\n\n\"This changes nothing, wheels have been set in motion that are impossible if not foolish to stop. We will begin the binding, remember to keep firmly in mind what freedoms she will have and how she is to obey you.\"\n\nI shook my head to clear out the cobwebs, still thinking of wheels and plans. \"Wait isn't this a contractual negotiation? Aren't I supposed to sign something?\"\n\n\"We could, I prefer the older method myself, much more concrete that a piece of paper.\"\n\n\"Then how...Whoa!\" An invisible force lifted me and plunked me down in a chair at the kitchen table. It did the same thing to the still naked Lucretia, and I got a great view of her body as she sailed through the air and landed in the chair across from me. \n\nI stared across at my soon to be student, who looked just as pole-axed as I did. \"You ever done this before?\" I asked.\n\n\"Once.\" She replied.\n\n\"How did it go?\"\n\n\"I found a loophole and beat him so hard that he couldn't fly for a long time!\" she growled.\n\nWhat wings? I thought only humans did this contractual binding type thing. Suddenly Mother was standing next to us, and she had one of our hands in each of hers. Lucretia changed into her grey skinned form and glared at me with solid black eyes. Mother pierced Lucretia's palm with one sharp fingernail and did the same thing to mine. Then she slapped our hands together and our fingers locked into a tight hold on each other. I tried to let go, but my fingers wouldn't unclench! Mother smiled down at us, and I glanced over at her.\n\n\"So...what do we do now?\" I asked,\n\n\"Now, you begin.\" She stated.\n\nChapter 11: Bound\n\n\"Begin what?\" I hope my voice wasn't as high as it sounded. It was strange, the sensations were all incredible, and weird. I would try to explain it but unless you have shaken a succubus' bloody hand with your own, you don't really have a frame of reference. The contrast of my wide thick fingered hand and her long slender fingers with sharp claws was very disconcerting. I could feel the silk of her skin, with a touch of roughness from those little shiny black sparkles. They felt like glass of all things.\n\n\"We covered payments, and compensation for services rendered...\" Mother began, and then Lucretia finished, \"...now we cover how much control you have over my actions!\" \n\nOkay, now I see how loopholes could be formed. I could say she had to obey me, but if she just followed the letter of the law, obeying exactly my words, I could be found in breach of contract and she would try to kill me. In fact, pretty much everything could have a loophole in it! I don't have a genius IQ; I am not some super-smart Einstein in jeans and a t-shirt. I don't know what to say! I don't...\n\nActually, I got an idea. William had told me that it was the wordiness of the contracts that tripped humans up into deals that screwed them. Well, I am not very wordy, at least verbally. My head is like a dozen playful kittens and a crate of yarn. I can ramble on and on about the craziest stuff and miss whole conversation and important events.\n\nLike binding myself to a succubae, got it. \n\nFocus Greg. Keep it simple. What is the shortest and bestest (I know it's not a real word but it SHOULD be!) way to keep this binding safe for me? I could feel her blood mixing with mine, each beat of my heart pushing more of the red fluid out and into the mix forming in our hands, and dripping on the table. I could see little splatters of the liquid on the off white plastic surface. Kind of reminded me of oil and water, you can put the fluids in the same glass but they will still be separate. Her black blood pooling but still separate in color, as if it was too good to mix with my own My own...my...I got it!\n\nI looked up from where our hands were joined, and gently rubbed my thumb on the back of her hand. She blinked and looked down at the caress. Then I spoke. \"Mine.\"\n\nBoth Mother, and Lucretia looked at me, waiting for more, or at least an explanation. I shook my head, closing my eyes. I could feel pressure building in me, like when I activate my sight, but bigger. Much bigger. I opened my eyes to see their expectant expressions. Waiting for me to speak.\n\n\"Mine.\" I said again.\n\nLucretia looked up anxiously at Mother. \"What does that mean?\" Mother just stared at me, though her white eyes seemed a little extra shiny.\n\n\"Do you know what you are doing Gregory?\" Mother asked.\n\n\"Mine.\"\n\n\"You are taking everything.\"\n\n\"Mine.\" \n\n\"You must give what you take.\" I could hear the warning in her voice. I smiled at her and for a moment I thought I saw a ghost of a smile pass her lips. She turned to her daughter.\n\n\"Your answer?\" she asked.\n\n\"NO!\" Lucretia snarled and tried to pull her hand away. I clasped tighter. If I let go, I just knew my mom would be a diabetic again. I would also be hunted and slaughtered by this beautiful creature in front of me. Yes I know. I said beautiful and I meant beautiful! She may be forty-three different kinds of obnoxious and not even remotely human except in having two arms and two legs but she was beautiful and I can admit it. Even though the fact that I am sitting at my kitchen table with two succubae and have a trio of monsters as neighbors means I probably need a shrink, I am still in the middle of this and will see it out to the end!\n\nThe pressure was more intense and I could see those annoying sparkles at the corner of my vision. I could feel heat coming off my body, and Lucretia's face twisted in surprise as I stared at her. \"What the fuck?! What the...?\"\n\nI blacked out. \n\nI felt cold steel against my cheek and I was sitting on something cold and hard. I heard clicking footsteps and then my leg was nudged with something very sharp, and poky. I snapped my eyes open and kicked out in the direction of what I felt and saw something jump back away from me.\n\n\"Lucretia?\" I asked. It looked like her, sort of. She was smaller, and, well. I don't know. She looked more peanut shaped I guess. She was a touch shorter than me, and a little fuller. What the heck was going on?\n\n\"What is this place Greg?! How did we get here? What the FUCK did you do to me?\" she said gesturing to herself. I shook my head and heard a little voice behind me.\n\n\"Oh! She said a bad word!\" Another voice responded.\n\n\"I know kid, keep your ears covered until I tell you otherwise.\"\n\n\"No, I want to hear, and see her. I think she's beautiful!\"\n\n\"I guess she is, if you get past the tail and the wings.\"\n\nI knew those voices, but how did...?\n\n\"You must give what you take.\" Mother's voice said in my head. Huh. Makes sense, it's a binding, and I called her Mine. By me keeping the contract short and covering all the loopholes, I made it impossible not to expose myself to her. I looked over at her again, and she was fuming. \"I guess this is what you look like on the other side, back home?\"\n\nShe growled at me. I guess I was right. I turned to the cold metal vault Door behind me. Somehow both of the view slots were open and a heavy blue light was pulsing out through every crack it could find. \n\n\"Things have been getting really exciting in here Greg!\" My Justice told me. \"Me and the kid don't feel so trapped anymore.\"\n\n\"Greg! What the fuck is going on!\" Lucretia shouted. The little boy behind the door covered his ears and stuck his tongue out at the now smaller succubus. \n\n\"She only has the one volume setting doesn't she?\" Justice drawled as he took a drag off of one of his ever-present cigarettes.\n\nI waved at the succubus. \"Come on over, I'd like you to meet, uh, me.\" She looked as confused as I felt weird using those words. Just the fact that I had to say that phrase out loud meant I probably needed to have my head examined. Which, all things considered, probably was not a bad idea!\n\n\"I want to get out of here! Where are we?\" She said again, but for some reason moderated her tone better. Huh, maybe my other aspects that I had cut off from myself had a positive influence? I don't know. \n\n\"Remember how Mother said I was broken?\" \n\n\"Sort of, not really paying attention.\"\n\n\"Well these are my missing pieces.\" I said, gesturing to the two faces peering out from the view ports. Lucretia's mouth dropped open.\n\n\"Humans can do that? Isn't that like trying to cut off your own tail?\" I heard Justice guffaw behind me and my Trust snicker. I didn't look back at them. Usually I would feel overwhelming sadness being here, along with a few laughs...what was going on?\n\nLucretia came closer and I caught my breath. Yep, peanut shaped. Her bust was larger, not obscene. Solid 34 B cup, a pleasant handful, her hips were wider, and looked perfect for my hand to cup and draw her in if she was standing next to me. Her skin was still grey and sparkly, and I wanted to touch it again. She turned to look at me, her eyes still wide in surprise at this new revelation in my personality. It was funny, maybe it was the lighting, or maybe I was looking at her with new eyes since I was close to my missing parts, but she didn't look so scary anymore. She looked...\n\n\"Why the hell would you split yourself apart like that? That is foolish, our kind couldn't live like that. Are all humans so blind?\" She snarled.\n\nJust like that...the magic was gone.\n\n\"I'll explain later. Right now we are in the middle of a binding, and now that we have a moment it seems, we need to get some things straight.\" I said.\n\nShe tried to come at me, but light flared around the door and she backed off. I looked back at, well, my selves I guess. \"Which one of you did that?\" They looked at each other and shrugged. \"I think it was you, could be the other guy but he is still all wrapped up.\"\n\nThat was worrying, but I would deal with that later. I still had a wound up and off-balance succubus to deal with. Not that I was feeling all that balanced myself, but that's been the story of my life so far. If I ever find the Fate who puts me in these kind of crap situations... Let's just say I got a hefty slap in my pocket with its name on it!\n\nI started to walk in the direction she had moved towards and found the spiral staircase that I used to leave. I could see her standing at the base of the steps, looking up. Her wings were trembling so much they made sounds like a towel flapping in a breeze. I finally got a good look at her tail and saw that it wasn't the typical affair that you see in so many pictures. The thing actually looked like prehensile monkey's tail, but smooth, without the hair. She kept her back to me, her arms hunched.",
        "\"I had been told by m...my sisters, what it was like to be bound. This is NOTHING like what th...they said it would b...be!\" she said. I didn't know what to say, so I probably did something smart. I said nothing, and waited. She sniffed, and rubbed a clawed finger under her nose and cleared her throat. To see such human like gestures done by something that was clearly not human was startling. I moved up to stand on her right about three feet of space between us. She glanced my way then looked down at her birdlike feet. Her talons and claws were clacking the concrete floor nervously.\n\n\"They told me how much fun it was to be their Master's little slave, always knowing in the back of their mind they could find the loophole. Sometimes they would find it quickly, other times not. Usually if they found it, they would play along with their prey until the perfect time to attack, and they would humiliate and torture their Masters before draining them.\" She ran a clawed hand along her throat.\n\n\"The first time I was bound it was to one of our neighboring planes. A Lord. He was like me, a hunter. My sisters are good at using what they have to entice men. I always preferred the direct approach, it just seemed more...honest.\" Her throat caught. \"My Master liked to hurt me, not in the good way either. Through words, a gesture, placement with the others, awards...all that He would show that I, the daughter of a Queen, was as nothing to him.\"\n\nI stepped closer to her; I wanted to see her face as she spoke. She shifted a little but didn't move away. \n\n\"I only had the strength he allowed me through our bond. I couldn't use my magic, and I did not have the physical assets to be what he wanted me to be, so, I was relegated to doing tasks that were...were... Uncomfortable. I found the loophole he left, it was so glaringly obvious I was surprised I didn't see it sooner!\" She grit her teeth and then looked at me with fists clenched. \"I won't tell you what it was either!\" \n\n\"That's fine...\" I said almost in a whisper. I was afraid if I spoke to loudly she would be quiet and I wanted to hear what she had to say. I got the feeling she normally didn't open up like this herself, and I preferred this to a shouting match, or a fight. Was she being this open because of where we were? Was it some sort of spell-like aspect of this binding ritual? Maybe it was none of these. Maybe, she just didn't talk to many people and now...\n\n\"I broke free of the contract and attacked him, right there in court I called up a storm of sand and stone, something they had never seen in that Plane and I struck him again and again until he did not rise, and could not fly. Then I went home. I spent my time in the desert wastes, collecting, thinking...planning on what to do with my time. I would go home and sleep huddled with my other sisters.\" She smiled then, and I saw her teeth were very similar to a human's teeth. Just a few on the corners of her jaw were pointed. She actually had a very nice smile. I wonder what succubae collect? Stamps? Trading cards? \n\n\"My sister's are beautiful! True Succubae. Seneca, the eldest has long blue black hair almost to her feet, even in her other form she is beautiful!\" Her smile faltered. \"I am never summoned even though my name is known to many. You want someone killed contact me, you want someone to bed, call Seneca, Rulli, or Astar.\" Her claw wiped under her inky black eyes, and I saw it was wet. I reached in my pockets and I found nothing. Wait, this is my head, I make the rules! I handed her an old faded bandanna of mine, first thing I thought of. Yes, it was at least clean.\n\n\"What's this for?\" She asked.\n\n\"Umm...wiping your eyes?\" I asked, surprised.\n\n\"Oh.\" She bunched it and wiped the excess tears away.\n\n\"I finally got a summons from a wizard, not really powerful, or well known. The Gatewatch had killed his father who had summoned many of our kind before. I was to be his revenge. I took the contract, hoping to prove myself.\" She sighed, and started to hand back the bandanna, but I stopped her. \"Go ahead and keep it, Lucretia.\"\n\nWhen I said her name she looked up at me again and I saw a small shy smile. \"I was invited into the party, that way I could bypass the wards and protections in place. After a few hours of slowly raising everyone's lust, and pushing out my pheromones everyone was copulating. I was able to feed by slowly draining that energy, and keep the cycle going. After a few more hours I was going to kiss everyone there to make sure there would be no witnesses. I couldn't have held much more energy than that, and it would have looked really good to come back home with such a prize in my possession!\" Her smile faltered and then she turned to look at me.\n\n\"Then I saw you, a human in the middle of all this. One of the weakest of the sentient beings on this Plane! You stopped me, hurt me, and banished me back home! I see now you have a little of the gift about you, but you should not be able...not...who ARE you?\" She shouted. She sounded desperate, confused. \n\n\"My name is Gregory Bastion Brooks.\" I said quietly. I felt a calm come over me and I wished I could remember what I did to do it.\n\n\"That's your name, it doesn't tell me who you are.\" She said, voice beginning to crack.\n\n\"Then why don't you get to know who I am?\" I replied and held out my hand to her.\n\nShe looked at my fingers like each one was going to bite her!\n\n\"You know that I am just going to try to look for a loophole and try to kill you. It's what I do, it's in my nature!\" She said quietly, head bowed.\n\nI nodded in agreement, \"I choose to trust you.\" \n\nI saw out of the corner of my eye, a grubby headed boy appear. Lucretia looked at him as if wondering where he came from, then looked at the Door, then back at me, as my trust stepped into me and I felt...wow, no words to describe that one. Let's just say I felt, better! \n\n\"What was...no, just No!\" She said taking a step back. She gulped and continued speaking.\n\n\"I won't be controlled, a Master always limits us. I won't have my powers held captive like that again!\" Her eyes were wide as she said this; I saw a flash of nictating membrane moisten them instead of blinking using her eyelids.\n\nStill holding out my hand I said gently, \"I once had a cat. His name was M&M. A bit rough around the edges, but cuddly and loyal. My neighbor at the time had her cat de-clawed, that way her rascal wouldn't scratch the furniture, or her on accident. One day, her cat was attacked by a dog. If her animal had claws it could have defended itself or climbed a tree to get away. That's why I never had my cat de-clawed. What would be the point of it? If I wouldn't do that to a pet, why would I do that to a thinking and reasoning being?\"\n\nI stepped closer to her, my hand still outstretched, \"I would not limit you, I only ask that you listen to me and obey me because I am trying to teach you...to help you. I would never bind your power, it wouldn't be just.\" \n\nShe glanced to my side, I didn't bother to look. I could smell the scent of a cigarette as Justice put his hand on my shoulder. With a murmur of, \"It's good to be back.\" He slid into me as well and for the first time in a long while I felt whole, almost complete. I guess the missing piece is still behind that damn Door. I'll look into it later. Right now I got a confused and worried succubus that looks to be close to a breakdown of some kind.\n\nShe thrust her hand into mine, grasping it tightly. Her other hand came up to wrap around them both. She stared right into my face, her black orbs glistening in the blue light.\n\n\"Are...are you...\" she stopped to swallow and to firm up her shaky voice. When she finished her sentence though, it just about broke my heart. \n\n\"Are you going to be another thing I have to survive?\" I shuddered, and slowly pulled her closer to me. I felt her horns, surprisingly warm for how cool her skin was, pressing on the side of my jaw as her cool nose and mouth pressed into the side of my neck.\n\n\"Lucretia, I've been kinda thinking the same thing about you since we ever met.\" I said quietly. Her own arms came around me and she held me tight.\n\n\"Lucretia?\" I asked after a moment or three had passed. She kind of mumbled a reply. \"Lucretia, we have to finish this.\"\n\nI felt her sigh, her breath cold on my chest, \"I know.\"\n\nI stepped back holding her hand and the world fell away.\n\nStill grasping hands across the table from each other I saw Lucretia looking at me as if she had never seen me before. Mother was smiling so wide every single scary tooth in her face was on display. I looked down at the blood on the table, it was all one color. Both the black of hers, and the deep red of mine had mixed. I stared at the teary eyed grey woman in front of me, and spoke the words of a new start.\n\n\"Mine?\"\n\n\"...Yours.\"\n\nTo be continued."
    ],
    "authorname": "payenbrant",
    "tags": [
        "succubus",
        "lonely",
        "neighbor",
        "sex offender"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/mine-yours-pt-03"
}