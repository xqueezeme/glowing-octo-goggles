{
    "title": "Oil of Roses Ch. 30",
    "pages": [
        "\"Hi honey... no... I'm fine... really I am... Randy... Randy, don't cry... you know you can't come here... no, it doesn't make any difference that I'm the boss now... I know, I want you here too... I knew you were out of town and I didn't want you flying back when there was nothing you could do so I waited till you got home... yes you can kick my ass for it later... no baby; to be truthful I was never so scared before in my life. Then Margo showed up and they whisked me into the OR and I was out of it before I knew what was happening. Next thing I remember was waking up in here... yes, they're taking very good care of me... bored out of my gourd, yes... well, a little, I sent Izzy to buy me something to read... yeah, the new Roy & Sandra Wells thriller, \"Date With A Dark Angel\"- it's pretty good, I just don't feel like reading all that much, got too many things I need to be doing... I should be able to come home in a couple of days... yes, I promise I'll take it easy... what do you want her number for? Oh, you think you're going to call her and have her put me back in here if I don't take it easy? Have I told you how much I love you? Well, I love you more than the stars love the sky, more than the clouds love the wind; I need you more than the fish need the sea, more than the trees need the ground; I want you more than Madonna wants another hit, more than you and I want to kill Paris Hilton... God it's good to hear you laughing... sure, I don't mind, you know I've got no problem if you never want to work again... yeah, I know, you'll have the whole damn place rearranged by the time I get out of here... I'll see you in a few days... I love you... bye babe.\"\n\n                              *  *  *  *  *\n\nIn his room Nick Philouma lay in his bed and tried not to worry. He was reasonably sure he had talked his father out of doing anything rash but a good size cemetery could be filled with people who had died as a result of assumptions like that concerning members of his family. Randy was finally back in town and had been told. To take his mind off his senseless anxiety, he studied the walls of his room. \n\nAs the 'hospital' had to remain secret for as long as possible, there were no windows for anyone to see in through or use laser microphones on. To fight the sense of claustrophobia this might produce, the walls were painted in soothing shades, all decorations chosen for their calming effects upon people. \n\nIt was the most boring place he'd ever been in his life. \n\nAs the door opened he almost looked forward to some form of painful poking and prodding to relieve his ennui.\n\nHe was most pleasantly surprised to see his sister Paula slip in. \n\n\"Hey bro, what the hell happened to ya?\"\n\n\"You really don't know or are you just making conversation?\"\n\n\"Well of course I know already, silly. I went to see the old man before comin' here or else I never woulda known where to find ya. Ya know, ya oughta stop takin' so many risks, the old man ain't gettin' any younger or any healthier and somethin' like this coulda been just the thing to croak him right off. Come to think of it, I'm kinda surprised it didn't, considerin' you're all he has left now, then again, he's always been stronger than any of us thought he was.\"\n\nThe changes the years, and other factors, had wrought in his sister were nothing short of miraculous. While she still had all the physical features she'd grown to maturity with, it was if the slight problems in their placement had been resolved to beautiful effect... as if all that was less than lovely in her appearance had stepped slightly to one side, allowing her inner beauty to take its place front and center. Gone was the clumsiness of her youth, replaced with movements at once graceful, powerful and sensual. The body which had once been chubby, to put it politely, had become magnificently full-figured, a body that demanded attention and delighted the eye, no matter what the viewer's opinions on personal beauty.\n\nHer scent washed over him as she bent down to kiss him and even to him, the mixture of natural scents coming from her was intoxicating. He moaned appreciatively as her cool lips pressed his cheek.\n\nBut even after being born and raised in the South with its slow speech and melodic drawling, she spoke like the stereotypical Yankee... far too quickly and far too raucously.\n\n\"So anyway the old man tells me you did Philip. Never would've thought he'd'a lasted this long, dumb as he was. I mean, even the blind squirrel finds the occasional nut but muthafucka, that squirrel was blind, deaf, dumb, and crippled from goddamn birth. Wish I coulda made the funeral but you know... not happenin'. L sends her love, by the way, says you bein' gay is still a waste o' some o' the prettiest man she ever laid eye on, but that's just her yankin' Tommie's chain a little cause you ain't THAT pretty, not that I wouldn't do ya if I wasn't related an' all, but fuck, I know what your farts smell like. Besides, speakin' o' the funeral, not much good could come o' me seein' Rosie, remindin' her o' things she don't wanna be reminded of. So how is the 'normal one'? She and that shlub she married doin' okay? I swear to you, he ever lays a hand on her, 'normal' or not I'm gonna rip his head off, shit down his neck, pop out his eyeballs and use that fuckin' melon o' his for a fuckin' bowlin' ball, go pitch me a few frames, you know what I mean?\"\n\nThe laughter she brought with her hurt his body, but Nick found his spirit lightening with every second as he and his sister caught up on each other's news.\n\n                              *  *  *  *  * \n\n\"Sweetie, it's funny as hell to watch, but close your mouth already, I'm afraid you might catch a fly or something,\" Margo said, caressing her sister-in-law's face.\n\n\"But... how... I never... what...\"\n\n\"Nicki, my wife Carol is so damned intuitive I'm probably going to start referring to her as our 'hoodoo woman'. She reads people frighteningly well and after the evening you and she and Kelly spent together, certain things slid together in her head. She came to me and we talked about it. She was certain enough of her 'read' on the situation to be willing to bet all her worldly fortune on it, which was more than convincing enough for me... I believed her quite easily right off the bat.\"\n\n\"Oh God... look Margo, I'm sorry, I shouldn't have... I'm sorry. Can we just forget this whole conversation ever occurred?\"\n\nMargo took the frightened and embarrassed woman in her arms and hugged her tightly to her chest.\n\n\"No, Nicki, no we can't. That box has already been opened, Ms. Pandora, and we have to deal with it. Now, when we're through talking, if you decide you never want Harry to know of this conversation, that's how it will be. How you feel about him is your business and I don't think any of us would have a problem helping you keep that a secret. But we are going to have to talk about it.\"\n\n\"Oh God... I'm sorry, it all seemed so much easier and so much sexier when it was me and my imagination planning this conversation and the way things would play out. Now everything's just jumbled up and confused.\"\n\n\"Don't worry, sis,\" Margo replied, releasing Nicki to recline on the bed and stroking her hair, \"some night, over a BIG OL' bowl of dope, I'll tell you about the night Carol seduced me and what an absolute basket case I was. If that story doesn't make you feel better about tonight you can feel free to have me do something terrible... like bathe you with my tongue.\"\n\n\"So that would be terrible would it?\"\n\nMargo lowered her head and ran the tip of her tongue up the line from her sister-in-law's belly button, between her breasts to the tip of her chin.\n\n\"Horrible beyond my ability to express,\" she purred before kissing Nicki deeply. \n\nBefore things got too interesting, Margo broke the kiss and lay back. \"But first, talk.\"\n\n\"What do you want me to talk about?\"\n\n\"First off, try to convince me why I should let my husband sleep with you, regardless of the fact he's your brother,\" Margo said, smiling encouragingly. \"Maybe that'll help you get things straight in your own mind. Then, if we get past that hurdle, we can worry about the whole incest thing.\"\n\n\"And after that?\"\n\n\"Well, assuming there is an 'after that'... we figure out if Harry will be able to handle the situation.\"\n\n                              *  *  *  *  *\n\n\"Mama... Mama, stop crying... Mama... I know this wasn't what you had in mind when you raised me to think for myself, to find out what I wanted, to go for it and make it my own. But it's what happened. You raised me to be strong and to do what's right for me... that's what I'm doing.\"\n\nKelly's hand fiddled with the necklace, her fingers running up and down the platinum and diamonds until she notice it and forced her hand to her lap. \"Mama, you know how I never really fit in anywhere? Well here I fit in... yes ma'am, I thought about that when I started to realize how I was feeling about these people and that was exactly how it felt.\"\n\nShe put her hand over the mouthpiece of the phone. \"She's not too happy that's she's having to eat her own words... she told me that when what was right for me came along, there'd be no doubt in my mind, that the only thing that could stop me and what was right for me from recognizing each other was me. \n\n\"Yes Mama, I'm still here... was just filling in Carol on some background... yes she's here with me, no way I could face this conversation alone... no ma'am, you're right, and no reason I should have to... Mama they're all that way, whatever I decide, they support me... Mama, I'd love for all of you to meet, but Daddy... \n\n\"I'll believe that when I see it... I love you too... yes, like I said before, here with them, I'm 'home'.\n\n\"I will... I love you and thank you, Mama... okay, bye-bye.\"\n\nKelly closed her phone and put it on the table by the hide-a-bed.\n\n\"Now, that wasn't so hard, was it?\" Carol said, the tone of her voice a dead giveaway that she was joking. \n\nKelly looked at her, shock and wonder mixing with the tears in her eyes. \"I cannot believe I managed to live through that phone call,\" she said. \"Thank you, my love, thank you so much for being here for me.\" Her voice broke as she continued, \"She understands, I think she really understands. And if she does, she'll find a way to explain it to Dad.\"\n\nCarol slid down into the bed and pulled her wife down with her. \"I think my lovely wife needs cuddling,\" she said, \"and I know I need to cuddle her.\"\n\nThe sounds of softly murmured endearments, sniffles and the gradually fading sobs filled the sitting room.\n\n                              *  *  *  *  *\n\nIn the suite's bedroom, Margo held her sister-in-law while Nicki tried to put her thoughts in order.\n\n\"So I guess in the end, it's that once I had time away and had matured I gained enough detachment from those years together to see Harry as a 'man who happens to be my brother', not just 'my brother'. And if I remove the 'who happens to be my brother' as irrelevant, then I see Harry as a man... and I shouldn't have to explain to any of the three of you why I'd find him attractive. \n\n\"But deeper than that, he was, in retrospect, the man who kept it all together for me, made sure I was safe and taken care of while I was still in high school, made sure there was a home for me, even if it was a home with some pretty sad memories. And on the rare occasions when something came up that Harry couldn't take care of, well, he'd put me in the car and we'd go talk with Eddy. \n\n\"Honestly Margo, by the time I got out of high school I had two really big cases of hero-worship going for Eddy and Harry. I mean, I knew about their 'warts', so to speak, but there didn't seem to be anything that the three of us couldn't handle together. \n\n\"I remember when I was having major problems deciding what university I wanted to go to... God, I was obsessing over that and the more I fixated on the question, the less idea I had as to where I really wanted to go. \n\n\"So Harry set up a get-together at this very nice steakhouse that unfortunately is no longer with us, Dunagan's. He got us reservations for early in the afternoon on a Thursday, made sure we got a large table, told the maitre de that we weren't to be disturbed and he, Eddy and I sat down, had a marvelous meal, and then spread out all my brochures and catalogues and started going over pro's and con's of the various schools I was looking at. The two of them were treating me as if they were my college advisors, or my fathers, but really they were like gardeners... they just kept trimming away my confusion until I looked up and said 'Well, I looks like I go to the University of Houston.\n\n\"That was Thursday afternoon... Friday night I ran across them at a mutual friend's party and they were both baked out of their gourds.\"\n\nMargo's laughter echoed through the bedroom.\n\n\"I don't mean 'high', I mean so far beyond 'high' as to be in low earth orbit. I think it's a good thing breathing is an autonomic function or they'd have been too stoned to remember to do it. \n\n\"But that was Harry... when I needed him, when anyone needed him, he was there, one-hundred-percent... and when he wasn't actively 'needed' anymore, he was living his life the way he wanted to.\"\n\n\"Oh God,\" Margo said, wiping the tears of laughter from her face, \"I know what you mean. I forget what the occasion was... no, I remember now, it was one of Cindy Green's Christmas parties... she used to invite all of the class she could get in touch with every year, sort of a mini-reunion. \n\n\"Eddy hadn't shown up that year, he didn't show up very often, but Harry had and was trashed... not to the point of being a gibbering idiot or being sick, but it was real evident that Harry was three sheets to the wind and sailing to win the Americas Cup. \n\n\"He and Cathy Breeden weren't seeing each other all that much anymore, although they were still getting together to fuck like maniacs from time to time. I can say now that I hated her for that because I was so goddamned envious. But anyway, she comes squealing up to Cindy's house, looking for him. She'd been home, visiting the folks and her dad had gone off on a tear, started hitting her mom, she'd gotten in the middle of it and he'd proceeded to beat her all around the living room like she was a pi\u00f1ata. \n\n\"All of a sudden,\" Margo continued, \"Harry's 'There'... I mean, he was still physically inebriated, no way to shake that off, but I'd swear to you in court with my medical license on the line that he was mentally sober. Sat down with her on Cindy's front lawn and they talked about what Cathy wanted to do. He ended up going to the police with her, sat where she could see him while they took her statement, took photos of her injuries, finished up everything they needed from her. Then the sergeant asked him to drive her to the hospital, have her checked out in the ER and Harry told him he couldn't, he was too drunk to drive. Cop wouldn't believe him until they Breath-alyzed him.\"\n\n\"Yeah, that's the man who happens to be my brother, Margo. As to why you should let me sleep with your husband... you shouldn't. If I was the one married to him I wouldn't share him with anyone else but I'm real selfish and real insecure that way.\"\n\n\"You think I'm not?\" Margo asked, eyebrows raised. \"In a way, Sis, Harry ending up in the hospital has helped me realize a lot of things about our relationship that have eased my mind considerably. Before the accident, I 'knew' in my mind that we were all cross-connected but in my heart, so to speak, it still felt like Harry was the lynchpin to the entire marriage and that terrified me. If that was the case, well, Carol and Kelly are so much younger than me and prettier than me-\"\n\n\"I'm not sure I'd agree with that one hundred percent.\"\n\n\"-flatterer... but I worried that they'd take him away from me. I know it's silly, I knew it at the time, but especially after the disaster of my first marriage, I carry a lot of insecurity around with me, all the time. With him in the hospital I've seen that no one of us is the lynchpin, paradoxically we all are. We're a unit and should something happen to one or more of us, I think the rest of us would go on together, but outside of something catastrophic, I can't see any of us leaving of our own free will. \n\n\"But Sis, through the first parts of my relationship with Harry and Carol, I lived on top of a barely controlled volcano of insecurity and I didn't feel I could say anything about it because I imagined if I did, he and Carol would laugh at me and I wouldn't be worthy of their love anymore and they'd send me away. Even after the evening Angie showed up and I came back, there were nights I spent hours lying awake, shaking with fear that in the morning they'd roll over and one of them would say 'Why are you still here? Get out.' and all of a sudden I'd be alone again.\n\n\"I still have a night like that, from time to time, but not nearly as often and I know now that if I need to, I can wake one of them and they'll be glad to talk me through it... and that knowledge alone is enough to help soothe out the really rough spots and make waking them up unnecessary.\"\n\nNicki threw her leg up and over Margo's curvy hips. \"Goddamn, that asshole really did a number on you, didn't he?\" she said as she brushed a few wisps of hair from Margo's face.\n\n\"Oh, not just Benjamin... my parents started the process long before... I'm sure that's part of how I ended up married to the late Dr. Sapperstein. But that's just the cards I got dealt and there's no changing them. How I play them, on the other hand, that can be changed, and that's what living with my new family is helping me do.\n\n\"Nicki, please don't ever get the feeling that any of us 'have it together' or are 'whole'... we're all damaged in our own ways. Harry carries a lot of scarring from Angie, and even more damage from the night she came back... plus there are other wounds there that I've never seen, I've just watched the blood that flow from them, so to speak. Carol... I've lay in bed and watched the nightmares race across her face like clouds across the sky before a storm. Of us all, I think she's the one who hides her pain the best. Kelly is just now becoming comfortable enough with being a part of us to let Carol and I see the side of her that hurts and is uncertain. That's been the side she's shared with Harry pretty much from the beginning and has been the surest sign of the depth of their relationship.\"\n\n\"Well Margo, seems to me we've strayed somewhat from the original question... why should you allow me to make love with your husband?\n\n\"Because I love him very much and I want the chance to express that love completely, in a physical manner.\" Nicki's hand moved down and gently grasped a handful of Margo's ass. \"Sorry to get distracted but God, I love your curves, woman! You, hell, all three of you, are just divinely shaped.\"\n\n\"Well, get you out of that high-stress nightmare you've been living in, who knows? Maybe we can put some curves on you as well.\"\n\n\"Umm, you think so? I've never been that comfortable with the whole 'you must be stick thin to be beautiful' concept.\"\n\n\"Oh, I'm sure of it, especially if you let Karen and Patricia feed you somewhat regularly. My God, Patricia got that beautiful ass of hers the old-fashioned way... she earned it in the kitchen.\n\n\"But back to the question... your answer is satisfying enough for me, Nicki. It's an answer we would accept from any lover of ours that was also interested in our husband, not that we plan on there being any more... you got in on a family pass, so to speak. I think this relationship's about as open as we can let it be.\" Margo smiled. \"Not that any of us regret for an instant you ending up in our arms... we don't, not for an instant.\"\n\n\"So,\" Nicki said, brushing her lips across Margo's nipple, \"do we move on to the next question, or do we take a short break?\"",
        "*  *  *  *  *\n\nOut of all of the children, although so many of them only qualified as 'children' by age, the most helpful Tattie had found was the one called 'Vashti'. They were sitting down together in the break room, her with a cup of tea, him with a coke, trying to ward off the exhaustion for just a little while longer so that they could get everyone seen to and settled in before Tattie left. She felt sure that within minutes of her leaving, Vashti would be face down, unconscious, on the bed he'd been assigned.\n\n\"(So, what's the story of the little boy who doesn't talk, 'Yuri' I think you called him?\" she asked.\n\n\"(He was Dmitri's pet...a position he saved me from, for which I shall be eternally grateful.)\"\n\n\"(Why doesn't he talk?)\"\n\n\"(Did you see the scars on his throat, Tattie? Dmitri said he whined too much so he took him to the doctor and had his vocal cords removed. He will never speak again.)\"\n\n\"(Do you remember this doctor's name by any chance?)\"\n\n\"(Certainly, he was the only doctor we ever saw, a repulsive pig of a man named Albrecht.)\"\n\n\"(So what happened to you, Vashti, after you were no longer Dmitri's pet?)\"\n\n\"(I became his... personnel manager, I guess you'd say. Kept the children quiet, kept an eye on their health, saw to their training...)\"\n\nThe look of horror and shock on Tatiana's face registered on the teenager.\n\n\"(Ms. Turov, before you go passing any judgment on me,)\" he said, standing up, \"(take into account my circumstances.)\" The skinny boy dropped the cotton pants he was wearing and shucked off his shirt.\n\nTatiana's gasp echoed through the break room as she took in the mass of crisscrossing scars covering all of his back, his buttocks, and the backs of his legs down almost to the ankles.\n\n\"(This is what resisting Dmitri cost me and what Yuri saved me from more of... although how much more I really can't say.)\" He pulled up his pants and turned, pulling his shirt back on. \"(The bastard almost broke me and when he told me what I was to do or else I would suffer the whip again...if I did as he asked, I could help these children. And I did!)\" He looked at her with fierce pride shining through his unnoticed tears. \"(There are children here tonight who are alive because of what I taught them, how I helped them!)\" He sat back down and pulled a pack of cigarettes out, and daring Tatiana to say anything about them pulled one out and lit it. \"(Save your judgment and your pity for those who deserve the one and need the other, Ms. Turov.)\"\n\nTattie looked at him with a new understanding. \"(No Vashti, you're right... I am sorry I offended you, I am sorry I misjudged you. I apologize.)\"\n\n\"(It is alright... I would judge me if I were in your shoes... it is easy to judge if you have never been a slave.)\" He drew a lungful of smoke and held it a long time, eventually releasing it through his nostrils. \"(God, these weak American cigarettes! Even after I tear the filters off it is like smoking air. That may be the only thing I will miss about Dmitri and his men... they always had plenty of good, strong Russian cigarettes. They would make these pathetically wimpy American smokers turn green and vomit their guts out.)\"\n\nTattie grinned at the boy. \"(Remind me not to recommend you for a job in advertising, Vashti...back to Yuri; do you think anything can be done for him? He shies away from anyone who tries to get close, even you children.)\"\n\n\"(No... Dmitri almost broke me. He did break Yuri, broke him into a million pieces. He is not a person anymore; he is an animal, like a dog. I do not think there is anyone left in there to help. It would be kinder if these gangsters were to take him and shoot him. Either that or find someone who likes sex with little boys and doesn't mind one that is little better than a dog.)\"\n\n\"(Vashti, sometimes your sense of compassion just overwhelms me.)\"\n\n\"(Ms. Turov, compassion is a good thing so long as there is hope. For Yuri, there is no hope.)\"\n\n\"(Is that the opinion of Vashti, the world-renowned psychologist and medical doctor?)\"\n\nThe boy got up, crushing the hot coal of his cigarette on the tabletop with the ball of his thumb. \n\n\"(No, Ms. Turov, that is the opinion of Vashti, who has been a slave, sucking men's dicks...and doing other things... to stay alive since he was four years old. In this matter, I would trust my opinion over a doctor's or psychologist's.)\"\n\n                              *  *  *  *  *\n\nA few minutes later, Tattie was in Nick's room.\n\n\"Nick, do you know of a doctor named Albrecht?\"\n\n\"Uh, yeah... lost his license, works out of a shabby little apartment on the south side. Why?\"\n\nTattie sat down in the chair by the bed. \n\n\"Nick, I'm tired and I'm sick at heart... these children... God bless you for getting them out of there, but this Albrecht... at Dmitri's request he removed a boy's vocal cords because he 'whined too much'. I... I'd take it as a personal favor if...\"\n\n\"If he stopped breathing sometime soon?\" Nick asked, his voice sad. \n\n\"Yes... yes... but only after he's endured much pain.\"\n\n\"Consider it done... and thank you for all your help, Aunt Tattie. I don't know how we would've gotten through this without you. Anything you need, anything you want, you just ask.\"\n\n\"I will... now to go look in on the last few of my little darlin's and then I'm going to have one of your boy's drive me home... I'm afraid I'm a little too pooped to trust myself on the road.\"\n\n\"Good night then.\"\n\nTattie shuffled out of the room, weariness hanging on her body like chains.\n\n\"When did she get so old?\" came Paula's voice from the shadows.\n\n\"She's not, normally... but with what she's been dealing with, I think maybe even you would show some age.\"\n\n\"Not fuckin' likely, bro.\"\n\n                              *  *  *  *  *\n\nMargo and Nicki lay in each others arms, coated in a light sheen of sweat.\n\n\"That was some short break,\" Margo exclaimed, a shiver running down her body as the air conditioning cooled her.\n\n\"Damn straight,\" Nicki said. \"Christ... I just did a 'Harry' impersonation again, didn't I?\"\n\n\"Yeah, yeah you did... down to tone of voice and cadence.\"\n\n\"So, now do we move on to the second question?\"\n\n\"Ah yeah, the big one,\" Margo replied. \"Incest, the hulking monster of a societal taboo... look, if the two of you were thinking of procreating, I might have some qualms. Although the chances aren't as high as some medical horror stories make them out, you would be running an increased risk of reinforcing any bad genetic traits you might have in your family line. But Harry's had a vasectomy-\"\n\n\"Since when?\"\n\n\"Since Angie-\"\n\n\"Scabrous slut.\"\n\n\"Yes indeed, and so the offspring issue is not in question. Therefore, as far as I can see, you're two adults, well past the age of consent in your state of residence, who wish to engage in sexual relations with each other. The biological basis for the incest taboos not applying and the sociological reasons for them not applying, as you are adults and neither of you are coercing the other, so go forth and make love.\"\n\n\"But you've raised the whole 'two consenting adults' issue... what if Harry can't handle the idea, or worse yet simply isn't interested?\"\n\n\"Let me tell you a story about what happened when he heard about you and Carol while Kelly was made to watch...\"\n\n                              *  *  *  *  *\n\n\"...so from that the 'hoodoo woman' gathers he is interested?\"\n\n\"Yeah, that's what it looks like. Now I have no doubt he'd never initiate it on his own, for a multitude of reasons, but he's interested if she says he is. \n\n\"As to the issue of him handling the whole thing... well, you let the girls and me work on that.\"\n\nNicki slid her arms around her sister-in-law's body. \"Margo, why are you doing this? Why are all of you doing this? Are you planning to arrange for every woman who wants to make love with Harry to have their shot?\"\n\n\"No, silly woman, we're very damn selective about who makes love with our man! As I said, you're family, and as we've wasted very little time taking you as our lover, why should we keep you from being the lover of our fourth partner? That would just be wrong... criminally so, as tasty as you are, and as loveable in the non-sexual sense as well.\"\n\n                              *  *  *  *  *\n\nAs there was no longer any threat, everyone moved out of the hotel and back to their respective homes. Margo, Carol and Kelly were back and forth to the hospital on a daily basis, but the commute was worth the chance to sleep in their own bed... even with the joys of the renovations going on in their house and yard.\n\nNicki settled in and looked for a job, unfortunately without much luck, putting the majority of her possessions in storage when they arrived from Atlanta and making regular trips to the hospital as well.\n\nEddy and Tamara went home and such was her faith in him, that they would find a home of their own, that she began packing up the apartment before they'd even fully unpacked from their stay at the hotel.\n\nOnce back from their sojourn at the hotel, Karen found that Patricia packing for a move was not quite the Patricia she was used to. Quite often Patricia-packing-for-a-move wanted nothing more than a quick supper, several screaming orgasms and a soft bed. As Karen saw the rapid progress of the packing, she had no problems with that at all.\n\nTattie moved back into her large, empty house... but she was planning on it not remaining empty for long.\n\n                              *  *  *  *  *\n\n\"Nick, I want a favor,\" Tatiana Turov said, striding into his room as a woman on a mission.\n\n\"Aunt Tattie, you know you have but to name it and it will be yours,\" Nick said, putting down his book.\n\n\"I want Yuri and Vashti.\"\n\nNick looked at her, his eyes trying to pierce her own and discern whether she had the slightest idea what she was asking for.\n\n\"Right now or do you have time for me to have them gift-wrapped,\" he quipped, buying himself time to figure out a way to talk her out of it.\n\n\"Niccolo Philouma, don't you get flippant with me! And don't be thinking, my dear boy,\" she said, softening, \"that I don't know the handfuls of trouble I'm signing up for.\"\n\n\"Aunt Tattie, think... how will you get work done, how will you run your business when you have these two to take care of? And they're both going to need a lot of your attention, or you might as well not take them.\"\n\n\"I've been meaning to take on an apprentice for years, Nick... never did so because to me... to me I guess that would mean acknowledging I wasn't eternal... that I was going to end someday.\n\n\"This last week here... has been hard, harder on me than I dreamed possible. And it brought home to me that I'm not eternal... I'm not just going to die someday, off in the future. I'm going to die much sooner than I'd like to think. It's time I stopped evadin' that, denyin' it, and started livin' like I don't have all the time in the world.\" She pulled a chair up and sat beside him. \"An apprentice... will carry on my name... my work... my style. These two boys... Nick, they're each so broken. If I can help heal them... give them lives... then they'll both be the bigger and better part of my legacy... the children I never had... my family name going on...\" Her composure broke completely. \"Nick,\" she sobbed, \"please give me this chance... you know me... you know I'll do whatever it takes... give me a chance at my legacy.\"\n\n\"Tattie, it will happen,\" he said, stroking her hair as her head lay on the bed next to him. \"You'll get your boys. Anything else you ever need, you know who to call.\"\n\n\"Thank you,\" she cried, holding on to his arm with both hands. \"Thank you so much.\"\n\n\"Have you thought about getting help for raising them as well?\"\n\n\"Y-y-yes... there's a teacher Margo knows... she's barely making it on what we pay educators in this state. I think I can make her an offer she can't refuse.\"\n\n\"Cute Tattie, real cute.\"\n\n                              *  *  *  *  *\n\nHarry was admiring the... interesting... floral arrangements he'd received from Antoinette and Mr. Antiquity. Both of them used the same alternative florist and the bouquets made of vinyl and leather, pvc, rubber, and chromed steel never failed to elicit comment from visitors. He thought back on the inherent sadness of Antoinette's card as she explained that she didn't go out much or she certainly would come by to give him some 'proper nursing'. He understood, intellectually at least, why she wouldn't go out in 'normal' society all that often.\n\n\"Harry? You mind if I come in?\"\n\n\"Jessica? Of course not, it's good to see you! How are you doing?\"\n\n\"Better than you apparently... heard what happened. I've kinda been waiting until you were, you know, really out of the woods before I came to see you.\"\n\nHarry was looking at a person who seemed so different than the one he'd met at the Omni Hotel just a month or so earlier. She didn't come across as the overweight, insecure girl who'd nervously been fascinated by their antics at the hotel... she was a large young woman, more confident in her manner and bearing, poised and calm. \n\nOf course it probably helped that she was in a hospital, not the middle of an orgy.\n\nMuch to Harry's surprise, she pulled a chair over and sat right by the bed, taking his hand in hers. \n\n\"I have to admit Harry... I've been a bit of a coward. Waited until I was pretty sure Kelly wouldn't be in here every hour of the day.\"\n\nHe smiled at her. \"Still not easy, is it?\"\n\nShe smiled back, a sad smile. \"No... no it isn't. How's she doing?\"\n\nHarry looked hard at the young woman. \"You really want the answer to that or do you want polite lies?\"\n\nJessica appeared lost in thought for a moment, then heaved a sigh and said, \"The truth, Harry, always the truth.\"\n\n\"She's okay... she misses you, we all do, but definitely not as much as she does,\" he smiled, \"for understandable reasons. The girls decided to ask her to marry us.\" \n\nHe waited with trepidation for the storm of pain he was sure would come.\n\nBut although there was pain aplenty in Jessica's eyes for a moment, her face lit up in happiness. \"I hope she wasn't stupid enough to say 'no'?\"\n\n\"No, she very happily agreed... of course, you know me, last one to realize that's what she wanted... I actually took her protestations at face value.\"\n\n\"That's because you're a silly man, Harry. That Kelly was in love with all of you... a blind man could've seen it... anyone could see it, except you. Margo might have seen it... I'm still not sure if Carol saw all of it, but I know she knew about Kelly's feelings for you... and I'm pretty sure she knew how Kelly felt about her.\n\n\"After Margo and my little talk, I got to thinking that probably the only thing that was between Kelly and the happiness of sinking completely into your family was me... and that I really needed to be someone's 'one and only'. That maybe someday, when I'm older and I've spent some time healing some wounds inside by being the most important person in someone's life... if I'm lucky I might find a group of people like you again... have a second chance at that kind of happiness. But for now I need to be selfish and egotistical.\"\n\n\"It isn't being selfish or egotistical, sweetheart; it's just where you are and what you are right now. At least you're smart enough to have recognized where you're at and what you need... lots of people wander through life clueless. \n\n\"So how are you doing otherwise?\"\n\n\"Oh, real good... Quan and I get along so well as roommates we decided to get a bigger place so there was a real couch in the living room instead of what used to be a couch but was really my bed. That lasted all of a week and a half... one of the girls we met at a club one night needed a place to stay, her parents had kicked her out. She works at a theater in the Parks, doesn't make a lot of money but pays her share of the rent and we get to see a lot of free movies. Well, anyway, Wendy, Quan and I are sitting around one weeknight, a couple of days ago, all of us off work, swiggin' down a big ol' bottle of cheap Sangria and watching \"10 Things I Hate About You\", and Wendy starts giving Quan a backrub, and then a little later Quan's giving Wendy a backrub, and then Wendy's giving me a backrub and I'm feeling something real odd in the crack of my ass while she's sitting on my hips.\"\n\n\"Oh no, you're kidding, she's a...\"\n\n\"Oh yeah... seems 'Wendy' is really Wendell.\" She laughed. \"She's not gay, well, 'she' is, but he's not... he just doesn't like facing the world as a guy... Quan knew it the first night we met her, she and Wendy both were shocked as hell I hadn't caught on. Hell, I just though she was a real skinny girl who always wore a bra!\"\n\nHarry was holding his side in laughter. \"So... uh... after you... uh... figured it out... did you do anything... with... uh... the telltale boner?\"\n\n\"No... not at first... seems Wendy finds me real attractive and had kind of elicited Quan's help in setting that evening up... she hadn't planned on her cock putting in an appearance, but evidently the binding process she uses had slipped in all the moving around and straddling of people and Wendy's erection had popped out and said 'howdy'.\"\n\n\"Oh... oh my... so... 'not at first', you said... so... something later?\"\n\n\"We're working on it, we've had a few 'encounters', done some pretty heavy petting, I guess you'd call it... she was afraid, having heard some of my recent history, that I was a lesbian, or at least a strongly-leaning-that-way bisexual and was hoping that maybe if she kept appearing to be a girl I'd forget she wasn't one... not realizing that I didn't know she wasn't one to begin with! Oh, let me tell you, it was a comedy of errors that night... almost Shakespearean! She was crying, Quan was giggling at me, I was confused as hell... but anyway, things are working out. She's a sweet girl; we're looking at getting her a job with tech support at a local computer company... I mean, she's smart as they come, she just needs a work environ that doesn't mind certain... irregularities... about her and this place has a rep as being 'freak friendly'.\"\n\n\"Sounds like a nice girl... after things calm down some more, please bring her and Quan by the house some time. I know everyone would love to meet them. So you're really doin' okay? You don't need anything?\"\n\nJessica looked at him and smiled. \"Yeah Harry, I'm doing fine... I don't need anything and the only thing I want is something I can't have. But believe me; I'm so pleased that all of you are together. It'll just be a little while before I can stand to see Kelly that euphorically happy.\"\n\nAfter they chatted a bit longer Jessica gave him a careful hug and a kiss to pass on to everyone, left their new address and phone number and said her good-byes.\n\nShe went to the parking garage and spent an hour sitting in her car crying.\n\n                              *  *  *  *  *\n\nWhen at last Margo deemed it safe for Nick to go home, his first impression upon entering his suite was that every balloon in the entire city had been bought and crammed into his rooms.\n\nOnce his eyes refocused and he adapted to the riot of colors, he realized that it wasn't every balloon; apparently it was only every balloon that bore some version of the sentiment \"Welcome Home\".\n\nAnd as his eyes continued to make out order in the riotous chaos, he made out his beloved Randy, naked, with bright silver Mylar balloons tied to his cock and balls, sprawled across the sofa.\n\n\"Get the message, Nick?\"\n\nHe laughed until it hurt, not a long stretch, then laughed some more as Randy led him to the bedroom, the two of them wading through the balloons as through a fog.\n\n\"You rearranged the place.\"",
        "\"You knew I would.\"\n\n\"Looks good... what I can see of it,\" Nick said, \"Would you be horribly offended if I didn't take you up on the implied offer just this moment?\"\n\n\"You mean these old things,\" Randy replied, caressing his balloon-adorned genitalia, \"oh, no rush my love, they'll be around for a long time.\"\n\n\"Thank God they will,\" Nick said, kissing his partner briefly before sinking down on the bed. \n\n\"You want to lie down for awhile?\" Randy asked.\n\n\"I think so.\"\n\n\"My gods-and-little-fishies, it must be serious- Nick Philouma is getting off his feet instead of rushing right back into business... I may faint!\"\n\n\"Don't faint... I'd really prefer a cuddle.\"\n\n\"Fuck fainting!\" Randy said, taking off the balloons and beginning to undress his lover. \"Fainting I can do any old time... having you home again to cuddle... well, there's something that happens far too rarely.\"\n\nThirty minutes later Randy was watching his partner sleep. He murmured to himself \"Happens far too rarely... and something tells me it's going to happen more rarely still.\"\n\n                              *  *  *  *  *\n\nAs they planned to go house-hunting the next day, Eddy and Tamara had gone to bed early after a massage that turned into love-making and a shower.\n\nTamara had gotten very adept at feeling when her lover's dreams tripped over into nightmares and it saddened her to realize that her adeptness was the by-product of almost nightly practice. \n\nShe climbed atop him, as she often did, and cleared his hair from his face, settling down listening to what he murmured in the throes of his dream, waiting to see if he would relax. Often the feeling of her lying on him helped to soothe his mind and he would calm down into normal dreams. \n\nAfter awhile it was evident it was not going to be one of those nights.\n\nShe could hear in his voice and the occasional intelligible word all she needed to know. He was once again haunted by the failures in his life, a mind-set exacerbated by the recent attack on Harry. He could succeed ninety-nine times out of a hundred and it would still be the one failure his mind would focus on.\n\nSliding off of him she raised the sheet on his left side and as predictably as the morning sunrise he rolled on to his back, taking the sheet with him to close off the draft.\n\n\"So far so good,\" she thought to herself as she slid beneath the sheet. While waking Edward up normally was always an option, she'd had success with an alternative method. \n\nClimbing atop him and taking his cock into her mouth she began to suck on the end of it like it was a large nipple, her tongue caressing the underside as she slowly and very gently ran her nails up and down his sides. As his cock grew more erect she slid more of it down her throat, until at last he was fully erect and she had managed to take almost all of him in. \n\nAlready her ministrations were having an effect on his sleep as the tone of his mumblings changed. Perhaps with some such a method would backfire and their nightmares could adapt and incorporate pleasure... not her Edward. For him, it seemed, there was nothing but pain, loss and fear in his darker dreams. If something was feeling good, he couldn't stay in the nightmare.\n\nShe bobbed her head down on him, taking him in fully, the extra penetration causing her to gag slightly, which made more than enough saliva to make the rest of the blow job much easier. Like clockwork his hand came down to rest on her head, but her hands were already wrapped around the base of his cock, preventing him from driving her to her gag point again in his sleep as slowly he began to fuck her face.\n\nFor Tamara it was if she was sucking off the Earth itself as it heaved and rumbled and breathed beneath her and no matter how much it might seem to someone else like an earthquake, to her it was as if the Earth was responding to her love, loving her in return.\n\nAs Edward shifted and moved beneath her, she lay atop him completely, not touching the bed at all, the warmth of his body and the warmth of her own mixing, her nipples softly scratched by the hair on his legs. She knew at some point he was going to wake up and the thought of what would happen then had her cunt tingling and singing with a throbbing desire she'd never felt with any other man before this. As her lips moistened, she felt the faltering of his rhythm, the sure and certain sign of consciousness returning to him and then his hand drifted down, checking that hers were in place to prevent him gagging her. Her comfort assured, he continued to fuck her face, his other hand coming down to rest on the other side of her head, the two of them stroking her hair and her cheeks with the awesome and terrifying gentleness that so few would have conceived Edward being capable of.\n\n\"You ready, little Theresa?\"\n\nShe nodded, never taking her mouth off of him and he sat up, reached down and wrapped his giant hands around her waist, lifting her up and then carefully setting her back down on his cock. He began to fuck her as he bent over and their lips met.\n\nAfter the kiss, his lips went to her ear and whispered \"Let's make us a baby\", as had become their tradition any time they made love. And as had become tradition, most gloriously so, her first orgasm hammered its way through her tiny body upon hearing those words.\n\nAs she, with hitches and haltings, rode the climax out she asked \"Sir, may I... may I get a little...\"\n\n\"Rough?\"\n\n\"Yes Edward.\"\n\n\"Not a problem, little one.\"\n\nHe lay back, secure in his ability to withstand anything she was likely to do to him in the throes of her passion as she wrapped her fingers in his chest hair and used that grip to power her violent grindings, back and forth, on his cock, alternated with fierce pounding, pelvic-bone jarring bounces. She buried her face in the hair on his belly, biting and sucking on the skin beneath, tears running down her face, moaning and screaming in a low voice as her feet scraped up and down his flanks, toenails scratching at his sides.\n\nDeep inside she reveled in her divine agony as she let out the aggression and anger which she could show nowhere else. Not anger for or aggression towards Edward, but toward so many of the men before him, men that she had served, some more willingly than others, but that had all treated her more poorly than even she felt she deserved. The agony of it all was that while letting these emotions out excited her, indeed, could take her to the very edge of truly mind-scrambling orgasms... they could take her no further. She could, and had, raged for an hour atop Edward, teetering on the brink of climax, unable to go beyond. That he was willing to indulge her in this, even to wearing a cock-ring for part of it to keep himself hard throughout the experience, was another entry on the long list of reasons he'd never understand that made him so special. \n\nEven in her own unique act of release, her own form of venting, she needed her master to give her permission to complete the act. After she had ridden him for an eternity that the bedside clock revealed to be a half hour or so, from his belly she whimpered, \"May I?\"\n\n\"You may come, Theresa.\"\n\nAs she lost control of her body he held her in his arms and slowly slid his cock in and out, enduring the spastic pulsings of her cunt, one hand brushing away the tears from her cheeks, until quietly, almost anti-climactically he joined her in orgasm, his powerful hips driving her shuddering form up and down effortlessly.\n\nAfter they lay still awhile, relaxing, he pulled her up to him and with a tender kiss, indulged in the next tradition.\n\n\"Think we did it?\"\n\n\"Hope so, sir.\"\n\n\"What's your feelin' on names tonight?\"\n\n\"Hmm,\" she responded, her smile of peace and contentment a contrast to the tear tracks on her cheeks, \"tonight I'm thinking 'Edward Stephen Carl' for a boy, in honor of Carol, and 'Rachel Kelly Gabriella' for a girl, in honor of Kelly.\"\n\n\"Why not 'Carol' for a girl as well?\"\n\n\"Because then you'd have two 'Carol's running around and it could get confusing...\"\n\n\"But now we'll have two Kelly's.\"\n\n\"I'm thinking we'll call her 'Gabriella'... or 'Gabby'.\"\n\n\"Uh uh, no daughter o' mine's gettin' called 'Gabby'. And what about Margo?\"\n\nThe conversation continued on long into the night.\n\n                              *  *  *  *  *\n\nLess than a week later, they were out to visit Rachel.\n\n\"Why you got pictu'es unda you a'm, Tama'a? You b'ing me new pictu'es, Eddy?\"\n\nEddy Janak leaned down and kissed his sister's cheek as she lay in her bed, ready for her nap. \n\n\"Yes, Rachel Ratbottom Schnicklefritz, Tamara brought new pictures because we have a new story to tell you.\"\n\n\"Eddy,\" the woman in the bed said, patiently but smiling all the while, \"the'e no 'atbottom or S'nicklef'itz in my name... but if you b'ingin' new pictu'es... it okay that you fo'got.\"\n\n\"It is, is it?\" he laughed. \"Well, you cuddle up with Mister Toby and Chi-Chi and with the help of my lovely assistant, I'll tell you the new story.\"\n\nThe woman in the bed sat up, arranging her pillows behind her, and then cuddled the little black velveteen dog and the crocheted monkey in her arms.\n\n\"'Eady!\"\n\n\"You're not gonna lie down and get comfortable?\"\n\n\"No... new sto'y... somethin' specia'... wanna make su'e I stay awake!\"\n\nAs Tamara held up a picture of the city's skyline at night, Eddy said, \"In a city not too far away-\"\n\nTamara held up a picture of herself and Eddy, \"-there lived the luckiest man in the world and his beautiful girlfriend-\"\n\n\"Named Eddy an' Tama'a!\" crowed Rachel.\n\n\"-yes, named Eddy and Tamara. And one of the reasons he was the luckiest man in the world was because-\" Tamara went to the next picture, a Photo-shopped image of Rachel transformed into an angel. \"-He had the most beautiful angel in all of Heaven for a sister, an angel named Rachel Ratbottom Schnicklefritz Guggenheimer Patawotammie Janak.\"\n\n\"Eddy,\" Rachel said, her face a mask of mock seriousness, \"the angel's name was just 'Achel Janak... none o' those othe' names.\"\n\n\"Well, maybe you're right, but who's tellin' this story, me or you?\"\n\n\"You ah... but you got to tell it 'ight!\"\n\n\"Alright, I'll try to do better. But the luckiest man in the world and his girlfriend were sad-\" Tamara switched to a picture of the two of them in the middle of a great, overly dramatic crying fit.\n\n\"Who make you sad, Eddy? You send 'em heah... I get Hectah an' Miss Janelle, they whup 'em!\"\n\nEddy grinned. \"Well, they were sad because the place they lived-\" The picture was changed to one of their apartment's living room. \n\n\"-Was just too small to let them do something they really, really, really wanted to do. So they went looking for a new place to live-\" The new picture showed Eddy and Tamara stalking down a street in pith helmets and khakis with butterfly nets and canteens. \n\n\"-And they looked...\" Another picture of them creeping through a row of hedges between two yards. \n\n\"And they looked...\" Then a picture of the two of them hanging upside down from tree limbs, magnifying glasses held to their eyes. \n\nRachel's laughter ran around the walls of the room on tiny feet that rang like bells.\n\n\"And finally they found someplace, very close to where some of their dearest friends live.\" The picture showed a house on a corner lot, large with a fenced in back yard and a ramp leading up to the front porch. \n\n\"And it had lots of room inside...\" The picture showed a huge living room and den combination. \n\n\"A big kitchen where the two of them could cook lots of good things to eat...\" The picture of the kitchen showed a central island with cabinets on two sides, the other two walls with windows onto the back yard and a set of French doors that led into a conservatory and breakfast room. \n\n\"And it had five bedrooms...\" A series of pictures followed, showing a large master bedroom, two good-sized bedrooms and two smaller bedrooms. \n\n\"And it had a swimming pool and a little pool with hot water and jet nozzles to help ease tense muscles...\" The new photo showed the pool and attached hot tub, shaded by maple trees. \n\n\"But best of all, it was big enough to let the luckiest man in the world and his beautiful girlfriend do what they had wanted to do.\" The latest picture showed the two of them, jumping up in the air in glee.\n\n\"What they need so much 'oom foah?\"\n\n\"They needed a lot of room so they could make doorways extra wide, and at least one bathroom extra big, kinda like they are here. And as proof that he was the luckiest man in the world, God smiled on him and his girlfriend and the people who built the house had already built it that way.\"\n\nAs Tamara put down the pictures and went to sit beside Rachel on one side of the bed, Eddy went and sat beside her on the other.\n\n\"What you doin'? Sto'y ovah?\" the woman asked suspiciously.\n\n\"No, angel, the story's not over,\" Tamara said. \"The people who built the house had a son who'd been in an accident that left him somewhat like you... he needed a wheelchair because he couldn't move anything below his arms, and he needed an extra-large bathroom to make it easy for him to use and the doors had to be wide enough for him to get his chair through, with ramps so he could get in and out of the house.\"\n\nRachel's eyes were full of tears, the excess spilling down her cheeks. \"Poo' boy... nobody should be hu't like that... he okay now?\" she asked hopefully.\n\n\"No sweetie, he's still in his chair but he's doing well, he and his family just moved to another city,\" Tamara said. \"But they sold us this house and it's already all set for you to come and visit us for the weekend once a month or so.\"\n\n\"WHAT?\" she screamed.\n\n\"That's what we wanted a big house for,\" Eddy said, \"so we could make it a place for you to come visit us... because we love you so much and we want to spend time with you.\"\n\n\"But... but... Eddy... it okay with Miss Janelle?\" Rachel asked, fearful tears in her voice.\n\n\"Tamara's already talked to her about it and she thinks it's a wonderful idea.\"\n\nRachel, still hugging her stuffed animals, looked back and forth at the two of them in confusion, trying to decide who to hug. Eventually she reached over and threw her arms around Tamara. \n\n\"T'ank you, t'ank you so much,\" she cried.\n\nTamara hugged her back, stroking the angel's hair. \"You're so welcome, Rachel, we love you so much,\" she said, her own tears flowing down her cheeks.\n\nEddy, manfully hiding his own urge to bawl like a baby, said, \"Hey, don't I get no thanks?\"\n\nRachel let go of Tamara and turned to look at him, all seriousness and solemnity. \"You din'dint get a'ound to t'is until she come along... you can wait you' tu'n.\"\n\nThe three of them laughed together as Rachel went back to hugging her future sister-in-law.\n\n                              *  *  *  *  *\n\n\"Alright Carol, now we've talked about how this will go,\" J. Noble Daggett said, taking a last look at the papers that had been prepared, petitioning for a name change. \"The judge is basically going to ask you why you're changing your name, and ask if you're doing it to evade any outstanding warrants or legally-incurred debts, then provided you haven't gone crazy and given him some completely weird answers, he grants the name change, signs the papers, we go file them with the County Clerk, and it's done.\"\n\n\"Yes sir, I remember.\"\n\n\"Alright then, it's time, let's go do this. You nervous?\"\n\n\"Just a little, sir.\"\n\n\"Don't be, nothing in the world easier than this.\"\n\nTwenty minutes later they walked out of the judge's office, on their way to the County Clerk's Office. The judge had no problem with her taking a middle name 'to honor her godfather' and only small reservations about the last name 'of a man she had loved dearly but lost'. Of course, both explanations were bullshit, but in the end it didn't matter. \n\nCarol Antonia Grimes walked out of the County Clerk's Office, tears of happiness wetting her cheeks.\n\n                              *  *  *  *  *\n\nEarl Culberson's first reaction had been to get in his car, drive down, grab his daughter, and bring her back immediately and to hell with what she thought she wanted.\n\nHis wife Margaret, known to her friends as 'Kissie', had anticipated his reaction and hidden all the car keys. Her blindness had not hindered her at all.\n\nHis second reaction was to book a flight, call a cab, fly down, grab his daughter and bring her back immediately and to hell with what she thought she wanted.\n\nKissie had anticipated that reaction as well and secreted away all their credit cards.\n\nHe was about to stomp out of the house in search of someone to borrow the money from, as the checkbooks had mysteriously vanished as well, when his wife said, \"Earl, can we please sit down and talk about this?\"\n\n\"There isn't anything to talk about; the girl has clearly lost her mind. I'm going to go see about borrowing some money from Gene.\"\n\nMargaret Culberson had had enough. She leveled the big guns and fired off a broadside.\n\n\"Earl Mason Culberson! If you walk out that door before we talk about this, you will be walking back in that door to a petition for divorce. Do I make myself clear?\"\n\nKissie was renowned among her friends, her few enemies, her associates and her students for never making threats. Kissie laid out consequences.\n\nAnd Earl knew it.\n\nTwo nights of sleeping on the couch later, two days of the cold (and Kissie could make it very, very cold) shoulder later, Earl was ready to talk.\n\nThree days and many tears later, on both their parts, as well as after some incredible makeup sex, for people of any age, Earl Mason Culberson was ready to give his daughter's fianc\u00e9es a fair hearing.\n\n                              *  *  *  *  *\n\nTheir trip down to Texas from Ohio started out pleasantly enough, but with every mile passing beneath their plane's wings, Earl felt the tension growing and after thirty years of marriage, he couldn't hide it from his wife, no matter how hard he tried.\n\nFinally he was driven to break the silence or crawl out of his skin.\n\n\"Honey, it's not that they're not nice people, I'm sure they are. We raised Kelly right and unless she's fallen under the spell of some cult leader...\"\n\n\"Don't you even think it, Earl.\"\n\n\"...alright... or had her brains surgically removed, they're going to be nice people. Their being nice people isn't the problem.\"\n\n\"Then is it a color problem, Earl?\" she asked pleasantly, resigned to having the same discussion again and again, possibly until one of them passed away, hopefully many, many years in the future.\n\n\"You know better than that... well... yes, it is, partly. But not that way... what did she say these people did again?\"\n\n\"Harry is co-owner of an advertising company, Margo is a doctor and Carol is a homemaker.\"\n\n\"Alright, so it's not going to be another poor black trash and poor white trash marriage that'll end up on Jerry Springer someday. But it's never going to be easy for mixed couples, much less for mixed... what... 'fourples'?\n\n\"And this man, Harry, setting himself up a harem, I just don't like that at all, one man, three wives. It's not Chri-\"\n\n\"No, but it is biblical and you know it. Besides, you know the honey don't all flow that way.\"\n\n\"Yes I do, and that's another thing-\"\n\n\"Earl, you like women, don't you?\"\n\n\"Well, yes...\"\n\n\"Please accept that your daughter might find them likable for the very same reasons.\"\n\n                              *  *  *  *  *\n\nTheir first night in town was reserved for a quiet dinner with just Kelly. It went about as well as could be expected. They barely avoided being thrown out of the hotel restaurant.\n\nKelly stormed into the house. \"Give me dope, give me booze and somebody please-\" her voice began to break, \"-for God's sake give me a hug!\"\n\nIn seconds she was in the arms of her wives, wrapped in a cocoon of love as they nestled in a pile of pillows.",
        "\"I gather it didn't go well, my love?\" Margo said, holding Kelly on her left.\n\nHer lover's sobs were all the answer she needed.\n\n\"Are we still meeting for supper tomorrow evening?\" Carol asked.\n\nKelly's head bobbed up and down.\n\nNicki wandered in from upstairs. \"How'd it... oh, stupid question.\"\n\n\"Yes, unfortunately it is... be a love and make Kelly one of those divine liqueur spritzers of yours, peach I think is her favorite?\" Margo said.\n\nA nod.\n\n\"Yes, peach... and then go grab the hookah, load the pipe and come on in... this is going to take awhile.\"\n\n                              *  *  *  *  *\n\n\"Oh, I'm sure he'll be on his best behavior tomorrow night,\" Kelly said, much calmer than when she'd come in, \"but he saw tonight as his chance to deprogram me while I was away from y'all. I thought Mother was going to start stabbing him with her fork.\"\n\n\"You mean seriously stab him, say, in the arm?\" Nicki asked.\n\n\"No, I mean seriously stab him, say, in the chest, digging for his heart. She apologized several times for not having calmed him down as much as she'd promised to. One of the reasons I'm sure he'll be on his best behavior tomorrow night was Mother explaining to him exactly what would happen if he wasn't.\"\n\n\"And that was?\" Carol asked.\n\n\"An unequivocal moratorium on sex until she felt he'd paid his penance...and a divorce should he go looking elsewhere.\"\n\n\"I gather it's never a wise thing to cross a Culberson woman,\" Margo said with a smile.\n\n\"And not too much brighter to cross a Culberson man,\" Kelly replied, \"unless you happen to be a Culberson woman... Goddamn it... I wish Harry could be there tomorrow night.\"\n\nShe missed the looks Margo and Carol gave each other.\n\n                              *  *  *  *  *\n\nAfter finding out that her parents were basic 'meat and taters' types, Margo called to reserve them a room at \"Muldoon's\", the steakhouse Nick had taken them to. She was rather taken aback by the level of service she received.\n\n\"Yes ma'am, Dr. Wohler, a room is ready for you anytime you request it, compliments of the management.\"\n\n\"That's very kind-\"\n\n\"Would you like us to prepare anything special in advance? I happen to know the chef has a lovely prime rib that we could start roasting in preparation for your arrival tomorrow. And might any of you or your guests be interested in lobster? If so, I assure you it is no trouble at all to put in an order for some to be delivered fresh tomorrow, just for your party.\"\n\n\"Uh, I wasn't quite prepared for this warm a welcome... may I call you back in a few minutes with a more firm idea on what we and our guests might be interested in?\"\n\n\"Certainly madam, but I warn you it would need to be in the next hour and a half if we're to order lobster for you.\"\n\n\"I'm sure it won't be more than fifteen or twenty minutes.\"\n\n\"I look forward to speaking with you again, madam.\"\n\nAs soon as she hung up, \"Goddamn his charming Italian hide!\"\n\n\"What?\" asked Kelly. \n\n\"Nick has smoothed our way at Muldoon's... smoothed it so much that if I asked for the chef's mother, served on rice, I'm pretty sure we'd end up eatin' Mama!\"\n\nFifteen minutes later, almost to the second, she was back on the phone with the maitres d'restaurant of Muldoon's, giving their order for the next evening.\n\n                              *  *  *  *  *\n\nKelly picked up her mother and father in Margo's car, while Margo and Carol went ahead to the restaurant.\n\n\"Earl, you will behave tonight, or you will be a very lonely man.\"\n\n\"Kissie, I already told you I will.\"\n\n\"Well, you've told me you were going to apologize to our daughter and I haven't heard you do that yet.\"\n\n\"Well... you have me there... Kelly, darling... I apologize for last night. I was out of line and I know it.\"\n\n\"Daddy, it's alright,\" Kelly said from the front seat. \"A daughter getting married is stressful no matter what. This arrangement must seem like I've gone out of my way to make it as stressful as I possibly can.\"\n\n\"Well, now that you mention it- OW! I was just agreeing with her!\"\n\n\"And I was just voicing my opinion on the matter,\" Kissie said, regaining her composure after elbowing her husband in the ribs.\n\nAfter they arrived and introductions had been made, the table for six in the private room was unnaturally quiet as everyone sat, uncomfortable in the silence but unwilling to break it. Finally the beeping of Margo's cell phone provided some relief. \n\n\"Excuse me, I'll step outside and take this.\"\n\nShe was only gone a few moments and when she returned she was pushing their husband in a wheelchair. Out from under the cover of hospital bedsheets, his right leg was a Frankensteinian nightmare of pins sticking out through the skin and through open patches in the cast that ran from just below the hip to just above the ankle. The knee and the wounds on that knee from the surgeries were also exposed to the air. His right shoulder and arm were in casts and in too many places his flesh bore the signs of the knife wounds.\n\nBut he was as clean as could be managed, the pajamas he wore where clothes were possible were fresh and pressed, and his hair was washed, cut and brushed into place. \n\n\"Good evening all, sorry I'm late but tunneling out of the Stalag was a bit of a problem and it's so hard to find a cab that can handle me and the chair.\"\n\n\"HARRY!\" Kelly shrieked. She was out of her chair and hugging him before anyone knew she had moved at all.\n\n\"Easy darling, easy...\" he said. \"This dinner is important to us all and I wanted... I needed to be here. I needed to be here for you.\" He looked up at the strong-featured black man who had stood when Kelly had leapt from the table. \"You, sir, must be Mr. Culberson,\" he extended his left hand, \"I'm very pleased to meet you, I'm Harry Grimes.\" \n\nEarl Culberson walked around the table and gingerly took Harry's left hand. \"A pleasure,\" he said, releasing it and going back to his seat.\n\n\"And you, madam, you could only be Mrs. Culberson. There's no doubt where Kelly got her beauty.\"\n\n\"You are a flatterer, Mr. Grimes,\" she responded. \"Call me Margaret, please.\"\n\n\"Then you must call me Harry and ma'am, your eyes may not be able to see your beauty anymore, but mine are working quite well and I'm not flattering anyone, just speaking the truth.\" Margo wheeled him closer and he took Mrs. Culberson's hand. \"It is indeed a pleasure to meet both of you, for many reasons.\"\n\n\"Oh really Mr. Grimes... such as?\" asked Mr. Culberson in a voice only slightly above a growl.\n\n\"Kelly told us about you and your wife's attitude towards her education. I wish my parents had been half as wise. Not that they were without wisdom... but I essentially wasted four years getting a degree that is of absolutely no use to me. Don't get me wrong, it was great fun to get, I do enjoy modern literature, but there were so many other things I would have enjoyed looking into as well.\"\n\n\"Margo, why didn't you tell me he was going to do something this stupid?\" Kelly spluttered.\n\n\"That's exactly the reason, dear,\" Carol answered. \"Because you would have fussed and fought him every step of the way and both of us agreed he needed to be here.\"\n\n\"So you're not above going around behind my daughter's back for what you perceive to be her own good?\" Margaret asked.\n\n\"No Mama, they not... although, to be fair, none of us have a problem going behind any of our backs if we agree it's for their own good.\"\n\n\"I certainly can't judge you for that,\" Margaret replied, \"it's how I've handled your father for thirty years.\" \n\nA small laugh erupted from everyone but Earl.\n\n\"That's all fine and good, but what are all of your plans for Kelly's education now?\" Mr. Culberson asked.\n\n\"EARL! They're marrying her, not adopting her!\"\n\n\"No ma'am, he's perfectly within his rights to ask, and while we're not adopting her, families do look after their member's best interests,\" Margo said, picking up the ball. \"Kelly's very intelligent, we're as aware of that as you are... often she's too smart for her own good. Between Harry and I alone, we make enough money, with all the side benefits such as health care coverage, that neither Carol nor Kelly would ever need to work. In Carol's case, she already has the full time job of keeping a household of five adults-\"\n\n\"Five?\" Earl inquired.\n\n\"-the fifth being Harry's sister Nicki, who is our roommate for the time being. As I was saying, she's very busy keeping a household of five adults running efficiently. With our divergent schedules and the many demands on our time during the week, she has her hands full. \n\n\"Kelly... Kelly has gotten it into her head that she needs to be contributing to the household's funds now. We couldn't disagree more. The three of us mean to see that she continues her schooling in the same manner as before.\" Margo smiled. \"She's a very stubborn woman, but we're all pretty stubborn too, so I think we'll win merely by strength of numbers.\"\n\nKelly and her mother began to snicker while even Mr. Culberson smiled very slightly. The looks of confusion on the other three's faces had Kelly laughing outright. \n\n\"Earl, go ahead and tell them,\" her mother commanded.\n\n\"I was working as a correctional officer when Kelly was a baby. One of my fellow guards was ex-military and I was telling stories about what a handful she was when she was little when he told me of... I think it was a unit motto or slogan... that fit her perfectly. He found it on a baby's t-shirt for her, and until he died when she was thirteen, he always made sure she had a tee in her size that bore that motto.\"\n\n\"I'm afraid to ask,\" Harry said, fascinated.\n\n\"Outnumbered, always. Outmaneuvered, often. Outfought, never.\"\n\nCarol, Margo and Harry burst into laughter. \"Oh sir...\" Carol wheezed, \"seems some things don't change.\"\n\n\"I still have the last one I got from him, Daddy,\" Kelly said. \"It's worn, but I retired it when he passed away, kept it with me.\"\n\nEarl Culberson felt his resistance to his daughter's 'marriage' to these people begin to relax, ever so slightly, as they all laughed together.\n\nThe waiter came and took their drink orders, Harry calmly ordering a shot of Tullamore Dew despite the disapproving look of his wives. When the drink arrived he proceeded to sip it very gingerly throughout the rest of the evening. \n\nAnd when the question arose of how they all met and ended up together, Kelly was surprised to find that Harry, Carol and Margo's brief narrative flowed smoothly, complete as to the emotional realities, but very vague on the physical aspects, as well as leaving out any hint of any unusual sexual proclivities. \n\nBy the conclusion their appetizers had arrived and Margaret said, \"Kelly, help me to the restroom please.\"\n\nOnce inside the otherwise empty facility, Kelly made use of one stall after guiding her mother to another.\n\n\"I suspect there was quite a bit left out of that story for your father's and my benefit,\" her mother said, her voice softly echoing around and about the metal walls.\n\n\"Oh God yes, Mama... the last thing I think any of us need to see is Daddy hearing some of the reality of the four of us and our situation.\"\n\n\"In particular, I sensed more than a little whiff of... bullshit... about the first evening all of you met.\"\n\n\n\"Mother!\" Kelly exclaimed. \"But yes, you're right, that was heavily edited for family viewing.\"\n\n\"I thought so... I've watched, long ago, and listened to enough old romantic movies, both good and bad, not to recognize the 'go to soft lens focus, and then show shots of waves crashing into the rocky shore' trick... glad your father didn't notice it.\"\n\n\"So am I.\"\n\nOutside at the table, the conversation was considerably different.\n\n\"So Mr. Grimes... what would I find if I searched your house?\" Mr. Culberson asked.\n\nHarry looked him squarely in the eye. \"A good many things, sir, some of which would undoubtedly offend you... but the largest thing you'd find, in fact, there would be no avoiding it, would be an egregious violation of our Fourth Amendment judicially-inferred rights to privacy. What would I find if I searched your house?\"\n\nThe two men stared at each other, neither budging an inch.\n\n\"I have by God had enough,\" Margo proclaimed. \"Mr. Culberson, this is going to be short and sweet. We love your daughter, each and every one of us, every bit as much as any of us love each other. We're complete with her as a part of us, complete in a way we weren't before, and she's found her completion with us as well. My husband-to-be's first thought when regaining consciousness, earlier than he should have by the way, was to call his lawyer and then to wait, sans pain relief, until his lawyer could arrive so as to amend his will to include all of us, Kelly too. At that point, Mr. Culberson, the jury was still out on whether or not he was going to live, although the early ballots looked favorable... but he didn't know that. And regardless of what you might believe, had he died, the three of us would have continued as a family because that's what we are... a family. \n\n\"I hate sounding like this, but I've had enough of you acting as if your approval is needed. Your daughter is above the age of consent, all too possessed of a will of her own and has made her decision. We'd love to have your blessing, freely given, but trust me, it's not required. \n\n\"I'm so lucky to love and be loved by the three finest people I've ever met. I'd appreciate the hell out of it if you stopped treating them, treating all of us, like we're criminals or freaks.\"\n\nEarl Culberson sat back in his chair and looked at Margo, studying her. \"Interesting definition of 'short and sweet', Dr. Wohler.\"\n\nMargo was still blushing when Kelly and her mother returned from the restroom.\n\nOnce she had her mother resituated at the table, Kelly sat down and looked at Margo, then at her father. \"So,\" she said, \"I gather from your expressions that Daddy has talked himself out of sex for awhile.\"\n\n\"Kelly! Margaret, did you...\"\n\n\n\"Yes Earl, I most certainly did tell her, and she no doubt told them. It's what husbands and wives do, Earl, they communicate. Surely you remember that?\"\n\n\"You might want to take it a little easy on him, Margaret,\" Carol said. \"He's only trying to protect his child the way we'll try to protect ours someday.\"\n\n\"Children?\" Mr. Culberson blurted. \"You're considering children? And all springing from your loins I suppose, Mr. Grimes.\"\n\n\"SIX MONTHS, EARL!\" Margaret announced.\n\nThe waitstaff delivering their food turned a little pale.\n\n\"What?\"\n\n\"Six months without sex... keep going, jackass, and make it nine.\"\n\n\"Margaret!\"\n\n\"Daddy, your outnumbered, you're outmaneuvered and you're damn close to being outfought... you might want to watch it,\" Kelly snapped.\n\nHe shut his mouth and stewed in his silence.\n\n\"Actually, no Mr. Culberson... in fact, at present I have the slight issue of a vasectomy I'd have to have reversed. But that aside, I know that Margo would like to have a child by my oldest and dearest friend, a man who's been her friend nearly as long.\"\n\n\"Carol told you about that?\" Margo asked, calmly.\n\n\"Yes, and believe me, I have no problem with it... she also told me she at some point wouldn't mind bearing the child of another family friend, a gay man. I suspect that insemination will occur artificially in that case. I imagine Margo's will be done the old-fashioned way, should Eddy's wife agree. I think she will. As for Kelly, well, it's not something we've had the time to discuss.\n\n\"And I'm fine with all of that. Families originally evolved for the protection of children and the management of assets. I foresee us eventually having a houseful of children. And it doesn't matter who the father is, what will matter is who the 'Daddy' is... and that will be me, along with many very close 'uncles'.\"\n\n\"Mr. Grimes,\" Margaret asked, her voice soft and soothing, \"do any of the rest of you have any parents still living?\"\n\n\"Both Harry's and my parents are dead,\" Margo answered, \"as far as Carol...\"\n\n\"Mine might as well be, as far as I'm concerned,\" Carol replied.\n\nThe smile on Margaret's face was almost transcendental. \"Earl, I think you'd better get used to the idea of grandchildren.\"\n\n\"But they're not ours unless they're Kelly's and she hasn't even said-\"\n\n\"Whether they're of my body or not,\" Kelly replied, \"they'll be mine\"\n\n\"And therefore ours,\" Margaret said, her smile never fading. \"Get ready to be a grandfather, Earl.\"\n\nAs the meal passed, mostly in silence except for the sounds of people enjoying superb food, Earl Culberson did some hard thinking. It was obvious that his wife was happy about the situation, or at least was not unhappy, and he knew the promise of grandchildren at some point in the future had her on the edge of euphoria. \n\nAs the last roar of a dying lion, he threw out a final question. \"As I realize only one of your marriages will be legally recognized, I don't imagine there will be pre-nuptial agreements for the four of you.\"\n\n\"No, of course not-\" Margo began.\n\n\"Actually there will,\" Carol said, smiling. \"Harry had me talk to Mr. Daggett about it while we were arranging the name change. I've discussed the name issue with Kelly, just not the financial arrangements.\" She turned to Mr. Culberson. \"Sir, I've already had my last name changed to Grimes. I have no fondness at all for my family name. As I understand it, Margo will do the same when she becomes the bride of record, for much the same reason. While I should let Kelly tell you her decision about her name... well, I just can't... she'll be keeping your family name and taking ours as well, going by the last name of 'Culberson-Grimes'. You and your wife mean that much to her.\n\n\"But while I was arranging to have my name changed, Harry had our lawyer draw up our... well, our contracts. The reason we didn't tell you, Margo, is you would've argued with me about what I've chosen to do. Each partner is assured one quarter of all assets no matter how they leave the partnership. That includes my assets as well, of course.\"\n\n\"You don't have any assets from what I understood,\" Mr. Culberson said.\n\n\"Actually you're quite incorrect, I have an inheritance of approximately two hundred and fifty thousand dollars. Would you like to see it?\"\n\n\"SEE IT?\"\n\n\"Yes, at present it's still sitting in cash in a very secure room at the house. Nevertheless, that's the contractual arrangement we'll be entering into.\"\n\n\"Earl, are Margo and Carol beautiful?\" asked Margaret.\n\nHe looked puzzled. \"Yes, both of them are quite lovely, each in their own way. Why?\"\n\n\"May I touch the two of your faces, please?\"\n\nMargo and Carol both sat for her as Kissie softly, delicately, examined their faces, primarily with her fingertips although not exclusively so as she also used her palms and the backs of her hands as well. Both of them felt the tenderness in her touch and realized that they'd been very lucky where their in-laws were concerned.\n\n\"Earl, they are lovely. Accept that they're not after Kelly for her looks alone, and you know they're not after her for her money... each of the three of them is worth more than our estate is ever likely to be... admit that it must be love, sit down and shut the hell up. They love her, she loves them, it's marriage. It's what happens when people feel that way. They want to spend the rest of their lives together and we're going to let them do it. They're a family.\"\n\nHis final resistance beaten down, Earl Culberson admitted defeat. \"Will there be some sort of ceremony for the four of you?\"\n\n\"Oh yes sir, Mr. Culberson, we're planning a doozy,\" Harry said, grinning.\n\n\"Call me Earl... and is there any chance you might deign to invite an old asshole and his wife, who is always right and should never let him forget it?\"\n\nCarol got up and went to him, throwing her arms around him and hugging him, kissing his cheek. \"Yes sir, Earl, the two of you were going to get an invitation no matter how this ended... we weren't going to give up hope, for Kelly's sake, that any burnt bridges could be rebuilt.\"",
        "\"Earl, are you blushing?\" Margaret asked.\n\n\"Yes he is, Margaret,\" Margo answered, \"but how could you tell?\"\n\n\"You mean you can't feel the heat from where you are? And by the way, since we're family now, call me 'Kissie'.\"\n\n                              *  *  *  *  *\n\nThe rest of the evening passed delightfully as Earl and Kissie got to know their son-and-daughters-in-law. \n\nFinally Margo said, \"I hate to do this, but I have to get our escaped patient on his way back.\"\n\nAfter a careful handshake from Earl and a surprisingly warm kiss on the cheek from Kissie, as well as hugs and kisses from his three wives, Harry was wheeled out to a waiting Handi-cab with everyone in attendance.\n\n\"When you get back, tell Mike 'thank you' for me again,\" Margo said. \n\n\"From all of us, my love,\" Harry answered, \"but most especially from me.\"\n\n\"Why?\"\n\n\"Tonight I dined on prime rib and lobster, perfectly prepared, a salad that was fresh and crisp, divinely seasoned with hand-made dressing of the finest ingredients, and a baked potato superb enough to make an Irishman weeps tears of joy. It will have to sustain me through the rest of my exile to the Gulag of Atrocious Cooking that is that hospital.\"\n\nAs everyone laughed, Harry said, \"I understand that you'll be dining tomorrow night with the rest of our extended family. I won't be able to be there... it was hard enough getting my doctor to let me out for tonight. I look forward to visiting with you both under more comfortable circumstances.\"\n\n\"You won't be there tomorrow night?\" Earl said. \"Well then, since you can't be in attendance at what would seem to be a mini-engagement party, let me say this. Your engagement has our blessing, without reservations, as will your marriage when it occurs.\"\n\n\"As will your children, no matter the parentage, when they arrive,\" added Kissie, her smile undiminished.\n\nAs everyone's eyes misted over, and the women hugged Earl and Kissie, Harry looked at the man who had bent so far in accepting his daughter's situation. \"Thank you so much Earl, not only for what it means to all of us which is more than you can imagine, but most importantly for what it means to your daughter.\"\n\n\"Oh don't get too mushy, Harry,\" Kelly said, drying her eyes. \"He's just giving us his blessing in hopes of getting laid sometime this century.\"\n\nEveryone broke up when Earl said, \"You're not entirely incorrect, Kelly my dear.\"\n\n                              *  *  *  *  *\n\nAfter the Handi-cab had pulled away and everyone had returned inside for coffee and dessert, Margo waved over their invisible, but ever-ready, waiter. \n\n\"We'll probably want the check in another twenty, thirty minutes.\"\n\n\"I'm afraid I don't understand... the check?\"\n\n\"Yes, the check, the bill, the tab, the list detailing expected remuneration for goods and services rendered?\"\n\n\"Well, yes ma'am, not to put too fine a point on it, but I am familiar with the concept. I thought you understood. Tonight's repast is compliments of the management.\"\n\n\"It is, is it? Please get me the manager.\"\n\n\n\"Yes ma'am.\"\n\nA few moments later she was having no better luck with her. \n\n\"I'm sorry Doctor Wohler, but my orders from higher up were very specific. Whenever you or any member of your family comes in, your charges are to be billed to the owner's account.\"\n\n\"I'm going to kick his ass.\"\n\n\"Well ma'am, you might have that privilege, I certainly don't. I simply do as I'm told. Now, is there anything else I can help you with to make your evening a pleasant one?\"\n\n\"Yes please... a round of B&B's and if you could find me some Aleve I'd be most grateful. I suddenly have a splitting headache, thanks to the owner's largesse.\"\n\n\"Yes ma'am, he does have that effect upon people.\"\n\n\"Am I allowed to know what my bill would have been so I can calculate an appropriate tip for the excellent service?\"\n\n\"No ma'am, he has a forty percent tip added in already on your charges.\"\n\n\"I'm not going to kick his ass; I'm going to kill him.\"\n\n                              *  *  *  *  *\n\n\"No Margo, this is really too much, you're going to at least let us pay our part of the ticket,\" Earl said, waving his wallet at her.\n\n\"No Earl, I'm not but if it makes you feel any better, we're not picking up the check either.\"\n\n\"Huh?\"\n\n\"One of the owners is a patient of mine... the ratfuck cocksucker- I'm very sorry... I apologize sincerely for my language... he's set it up so that we never pay here... I just found out... and I'm going to kill him.\"\n\nKissie laughed. \"Oh, never mind the language... I've been married to Earl for thirty years; I've heard worse... said worse myself from time to time. But that does bring up a question. When we were talking after dinner, I noticed that you and Harry don't speak like professionals when you're relaxed, you speak a very... slang-filled and almost stereotypically Texan dialect of English.\"\n\n\"I blame my exposure to Harry, his partner Karen, and his best friend Eddy, both of whom you'll meet tomorrow evening. They're all very much 'fighting conformity' in their own ways and one of the common methods seems to be a refusal to speak proper English if not required to do so. Since this is the pack I run with, I've fallen prey to their bad habits.\"\n\n\"Makes sense to me,\" Kissie said, smiling, \"better to rebel with language than by expressing your nonconformity through unusual group marriages and... oh wait, you do that too.\"\n\n\"Mother...\"\n\n\"She's teasing, Kelly, don't worry... yes Kissie, better through language. It would make for fewer tense evenings like earlier tonight.\"\n\n                              *  *  *  *  *\n\n\"Kissie... I know I don't deserve it... but would you relent on the six months? I'm feeling... awfully lonely... right now... losing our little girl.... not so little anymore... and I'd like to curl up in your arms... and you know as well as I do where that would lead.\"\n\nKissie sat in the bathtub of their hotel room, listening to her husband through the door. She heard his pain... she heard his loneliness... she knew how much he'd had to fight himself to accept Kelly's situation... she knew what he'd swallowed to ask her what he had... and to be truthful, she needed him as well.\n\n\"Earl, bring me my phone... if the four of them agree I should let you off the hook, then you're off the hook.\"\n\n                              *  *  *  *  *\n\nTwo hours later, after holding had turned to petting, and petting to loving, and loving to crying, and crying to holding, the two of them lay together, Kissie curled up in Earl's arms, head against his chest.\n\n\"Earl?\"\n\n\"Yes my love?\"\n\n\"There's a school in town for physically challenged students, including the blind. We're leaving our resumes with them before we go back home.\"\n\n\"What? Why?\"\n\n\"Earl, it isn't going to happen tomorrow, or next week, probably not even next year, but there will be babies and I damn well intend us to be close enough to be proper grandparents... best to start preparing now.\"\n\n\"Yes dear.\"\n\n                              *  *  *  *  *\n\nThe next night they were at Chez Bubba's in the room that looked like a converted mobile home. Kelly and Earl were both hoarse from describing the restaurant's oddities to Kissie and the evening had so far been an unqualified success. \n\nKissie had loved the rest of the family from the start, although Karen had made Earl a little nervous at first. But after a couple of beers and a few stories, he felt right at home with them all.\n\n\"...so here's Harry, not the world's most mechanically apt individual,\" Karen said, \"trying to change the tire because that's what guys do, they change their tires when they go flat. It's 3:30 in the morning, we're tired as hell, still got another hundred or so miles of road to cover on our way back from our meeting in Bossier City and we've both got to be at the office by 8:30 for another meeting.\n\n\"So me not being in any better shape than him, I'm groggy as all get-out, it's raining, we're both miserable... it's not registering that the shoulder we're parked on is on an incline... a rather steep incline... and we're parked facing up it... it was raining, but I'm not picking up what that could mean as far as traction. I'm just standing there, watching him try to keep enough of his head focused on the job to get it done without falling asleep right where he sat... and the car is slowly starting to slide back down the hill... but the jack isn't sliding with it.\"\n\n\"Oh God, you're kidding me?\" Margo said.\n\n\"Nope... and there's Harry, head under the wheel well, working on the tire and I'm trying to find in my sleep-deprived brain the words to tell him what's going on and pretty much everything I say comes out gibberish and he keeps responding with 'we all right' so I grab onto the jack stand and I'm pulling back on it as hard as I can... and I ain't doing shit because my feet can't get any traction on the slick shoulder. The car is still creeping down the incline and about to fling the jack forward, come crashing down on Harry's little punkin' head so I put my feet on the foot of the jack, throwing my full weight backwards, using everything up to and including sheer force of will and stunning good looks to pull the damn car back up the hill and firmly onto the jack, still babbling incoherently at Harry, still getting 'we all right, we all right' back from him.\"\n\n\"So... how'd you keep... Harry from breaking... his silly fool skull?\" Earl gasped through his laughter.\n\n\"Oh, as the jack was about to go, I pulled out my drill instructor voice, barked 'Grimes, get the fuck away from that tire!', hopped to one side and watched the jack shoot forward about twenty feet and the car crash down. Harry's sitting on the roadway about four feet from the tire, looking at me like I just came off a flying saucer and said 'Let me eat your sponge cake'. Says to me 'Why didn't you tell me the jack was slipping?' I thought I was going to tear off his nut sack and shoot me a game of marbles.\"\n\n                              *  *  *  *  *\n\n\"...so there's Kelly, maybe ten months old, already toddling around and getting into everything. We were living in Lawrence, Kansas and it was a good neighborhood so everybody was watching out for everybody else and I start having neighbors knocking on the front door, returning my daughter to me,\" Kissie said. \"And not just returning her, but returning her naked. So Earl and I searched the back yard from one end to the other, high and low, trying to find how in the world she was getting out. We already knew we couldn't keep clothes on her... and your silence tells me that might not have changed.\"\n\nAmidst the group's laughter, Eddy said, \"Oh no ma'am, Kissie, that ain't changed at all. I sometimes look forward to goin' out to eat with the crew just to see Kelly when she IS wearin' clothes.\"\n\n\"Well,\" Kissie replied with a laugh, \"I had gathered that your family's dress code might be a bit casual,\" she touched her husband's face and felt his ease and good humor, \"but as I was saying, we couldn't find any way out. One Saturday morning I'm in the kitchen, I look out, there's my baby, naked as a jaybird, playing in the sand, eating-\"\n\n\"Do not go there, Mama!\" Kelly said.\n\n\"-pillbugs by the handful, normal for her.\" She paused until the laughter died down. \"And then when I looked back a few minutes later, she was gone. So I went out the back door, looked all over the yard, no sign of Kelly. I picked up the little tin pail she collected those pillbugs in, held it up and said 'Kelly, got some more pillbugs for you, baby!' and out through what we thought was a solid mass of bushes came Kelly, just a-crawling to beat the band, all covered in spider webs and dead leaves. I put her in her room, went back out, ignoring the screams of my pillbug-deprived child, looked behind the bushes and found out there was a loose board back there that let her in under the house. She'd been crawling under the house, leaving through an access door in front and wandering the neighborhood.\"\n\n\"At ten months? Good lord girl, we're gonna have to put any children of yours behind locked doors,\" Carol said.\n\n\"I'd watch 'em twenty-four-seven, even then,\" Earl commented. \"Kelly never had an ounce of fear... and a lot of times, I used to swear she didn't have an ounce of common sense either.\" He reached over and stroked Kelly's hair. \"But I think she's gotten over that 'common sense' deficiency.\"\n\n\"She ate freakin' pillbugs?\" Karen asked. \"You mean the little rolly-polly's, doodlebugs, those things?\"\n\n\"Oh yeah,\" Kissie said. \"By the bucket full... area around the house was kind of sandy and we had thousands of them, seemed like all the time. When I saw what she was doing, the first time, I got on her about it, took away her bucket, but she kept doing it again, no matter what I said, no matter how many spankings she got... what broke the camel's back for me was when I went out, took away her bucketful one day, went back into the kitchen and turned around just in time to see her calmly take out another bucketful she'd stashed under the stairs. At that point I figured if eating them hadn't hurt her yet, it wasn't going to and I knew when I was beat.\"\n\n\"Mama, really, thank you from the bottom of my heart for telling that story,\" Kelly said, staring into her coffee, blushing.\n\n\"That's okay Kelly; you want we should tell them some of the stories we have about you?\" Eddy asked, grinning.\n\n\"Don't you dare you misanthropic, evolutionary throwback! I will beat you within an inch of your life and feed you to the coyotes!\"\n\n\"What about Tamara?\" Eddy asked innocently.\n\n\"Oh, don't worry,\" Karen said, \"one family or the other will take her in, we promise.\"\n\n                              *  *  *  *  *\n\nThat night in bed, Earl stroked his wife's belly as he spooned with her from behind. \n\n\"They're good people, aren't they?\" he asked, his voice revealing it wasn't a question at all.\n\n\"Yes they are, Earl, they certainly are. Our little girl is going to be just fine,\" Kissie replied, moving his stroking hand a little lower down her front.\n\n                              *  *  *  *  *\n\nDays later...\n\n\"So he not only left you his collection of vinyl, and the quarter of a million and change... he left you his notes on a lifetime of live performances?\" Nicki asked, paging through the sheaf of paper Carol had handed her.\n\n\"Yeah... and the more I've looked through them, the more I've realized that not only did he see all the greats, he was a pretty decent writer as well. I don't know... Tony poured so much of his life into those pages, his real life, not his mob activities, but music, his obsession with it, the way it gave his life meaning.\"\n\n\"Yeah Carol, but on the flip side, this is also the story of his days in the mob... where he was, who he was working for, what he was doing... I mean, he leaves out a lot of last names, sometimes uses just initials, but I'm not even that familiar with mob history and I can decipher some of this with no problem.\n\n\"Carol, these notes... they're the story of the two sides of a man's soul... have you thought about having them published?\"\n\n\"Yeah... but Nicki, I don't have any idea how to even start... I just know that I can't see letting these molder somewhere, never see the light of day... he deserves better than that.\"\n\n\"Carol... would you like some help? I mean, I'm a journalist, not an author, but I'm not without contacts and I'd be more than willing to do whatever I can.\"\n\n\"Nicki... I'd appreciate it more than I can say.\" She threw her arms around her sister-in-law. \"There's just one more piece we'd need to have fall into place...\"\n\n                              *  *  *  *  *\n\n\"Based on what you told me on the phone,\" Nick said, sitting at his desk with some discomfort, \"I asked my father to be here today.\"\n\nAs the old man was wheeled in, Carol nudged Nicki. \"Our day may have just gotten a lot worse,\" she muttered.\n\n\"Little Carol Grimes now, is it?\" the old man said. \"And you must be Harry's sister... it's a pleasure,\" he said, taking Nicki's hand and bringing it briefly to his lips. \"I've got to tell you,\" he added as he was wheeled back to Nick's side, \"your... partner... Margo, she's something else. Balls bigger than most of the men I've known. There's one thing I have to know though... before we go any further...\" He sat for a moment, breathing. \"Tell me about the look on her face when she opened that 'black banana'.\"\n\nThe nervous tension Carol had been feeling was released and she busted out laughing. \"Oh Vic... I thought she was going to come hunt you down and make you eat it... until, you know, those rocks did their hypnotic routine... on all three of us. Then she just called you everything but a white Protestant child of God.\"\n\nThe old man laughed, every breath a strain on his system. \"Well, even if she had called me that, she'd'a only been right about one o' the three.\"\n\n\"And even though she probably never will, I want to thank you for her and for Kelly and me as well. We all look lovely in them.\"\n\n\"Hard for you not to... necklace like that on any lovely lady... can't help but accentuate her charms, and charms the three of you got plenty of.\n\n\"But enough feeding an old man's ego... I believe you had some business with Don Philouma.\"\n\nBoth Nick and his father listened attentively as Carol laid out their plan, unable to hide her passion for bringing Tony Juliana's observations on and love of music to the world, unable to hide her love and respect for Tony either.\n\nAnd when her presentation was done, Nick looked to his father. \"Father, Tony retired in the early nineties, didn't he?\"\n\n\"'92... May of '92.\"\n\n\"So almost none of his observations would be about anyone still active, not with what he was doing, not with the way the Family has changed.\"\n\n\"Nick... there's still the Code.\"\n\n\"Omerta? Come on, Father, that's a leaky sieve of a boat these days. We have made men turning state's evidence, writing books for Christ's sake! Everybody in the whole goddamn world knows our business but they all only know it from the side of the law, doing their job by painting us as evil incarnate, or from traitors and rats, squealing anything to get them a better deal or sell more books.\n\n\"Maybe this is our chance to just let some of our story speak for itself.\"\n\n\"Your words are not without wisdom, Don Philouma. I know that if it were my decision, there would be no Family business mentioned in the book and if the ladies weren't prepared to hand over the notes to have those portions excised, we'd take them and they'd have nothing... possibly not even their lives.\n\n\"But it isn't my decision... and it isn't my time.\"\n\n\"What I propose is this,\" Nick said, templing his fingers together in front of his face, \"you go back and put the right names in, wherever you can. If you need help, talk to me and we'll see what we can do. I get to look at the manuscript before anyone other than your family and evaluate it for potential damage to our Family interests, not just here, but anywhere. If I see such potential, the manuscript is abbreviated back to initials only in those sections... possibly to no names or initials at all in severe cases. When you publish it, after such scrutiny, I will make it known among our associates here and abroad that you do so with my blessing, and under my protection.\"\n\n\"And w-what would you w-want in return, Don Philouma?\" Nicki asked, realizing for the first time just how deep the bear pit she found herself in was.\n\n\"That purely on the basis of a handshake deal between the three of us, ten percent of any royalties go into a fund aiding and promoting music education in the public schools of our city.\"\n\n\"No,\" Carol said, flat and hard. \"Not ten percent. Twenty-five percent.\"\n\nNick looked across his desk at her, and then stood up, wincing slightly from the pain. He extended his hand across the desk towards them. \"Fine, then we have a deal.\"",
        "\"Yes we do,\" Carol agreed, shaking on it.\n\n\"Uh huh,\" was all Nicki managed to get out as she shook the Don's hand.\n\nAs they were leaving, Nick observed, \"Interesting middle name you chose, Carol.\"\n\n\"Yes... certainly is,\" echoed his father.\n\nShe smiled at them. \"I loved him... I still do.\"\n\n                              *  *  *  *  *\n\n\"What the fuck happened to you there at the end,\" Carol asked as they drove away, \"you were damn near monosyllabic?\"\n\nNicki looked at her and as Carol gazed back into her eyes she snapped. \"Holy shit, it got real for you, didn't it?\"\n\nNicki nodded numbly. \"I've been an investigative journalist for years, Carol... I've seen violence... but Victor was discussing erasing us like you or I would discuss washing our cars.\"\n\n\"Yeah, I know.\"\n\n\"And that doesn't bother you?\"\n\n\"Nicki, I was around them enough to realize that each and every one of us wakes up every morning with the reality that we're probably going to die that day. If we're still breathing when that day ends, then it's been a real good day, it's a gift beyond measure. Kiss someone, love someone, fuck like a ferret and go to sleep, safe in the knowledge that you've had a great day.\"\n\n\"Interesting philosophy.\"\n\n\"It does help deal with people like Victor Philouma.\"\n\n                              *  *  *  *  *\n\nHarry's physical therapy went into its intensely active stage and Harry's attitude towards slow and gradual improvement was that he didn't have time for that shit... he had a family to get back to and he wanted out of the hospital yesterday. Helen McReady, his physical therapist, found that the problem wasn't motivating him to start, or keeping him at it. The problem was getting him to stop before he hurt himself.\n\n\"Mr. Grimes-\"\n\n\"I've asked you to call me Harry.\"\n\n\"Alright, Harry, that's enough for today,\" she said as he continued his series of leg presses.\n\n\"No Helen, it's not,\" he said, then continued the humming which never stopped, except while he was speaking, during his rehab.\n\nThe tears mixed with the sweat on his face and his lips were pale, pressed together like the teeth of a vise grip.\n\n\"Yes it damn well is,\" she said, locking the machine in place as he prepared for another push. \"If you damage yourself you won't be going home quicker you'll just be staying longer. Do I come into your office and tell you how to do your job?\"\n\n\"No,\" he sighed.\n\n\"Then stop telling me how to do mine. I went to school for this and everything.\"\n\nHe smiled through the sweat and tears, humming away.\n\n\"Harry, why do you hum whatever that song is whenever you're in therapy?\"\n\n\"'Whatever that song is'? Save me, I'm in the land o' the heathen,\" he gasped. \"That song, young lady, is Franz Schubert's 'Ave Maria', one of the purest transcriptions of the voice of God anywhere in history.\"\n\n\"Alright, but why the constant humming?\"\n\n\"Helps keep me calm... focused... takes my mind off how much I hurt, how tired I am. Takes me to a much happier place in my mind.\"\n\n\"And that happier place would be?\"\n\nHe looked at his physical therapist; probably twenty-five, built on the same lines as Karen, black hair, pretty oval face with a pale complexion, definitely a woman and definitely a woman he didn't want angry with him.\n\n\"Do you really want to know?\"\n\n\"Sure.\"\n\n\"You asked for it... it was what my wife was humming the first time she gave me a blowjob.\"\n\n\"Sounds like it would be a good tune for it... not to fast, lots of low tones, get some good vibrato going... so that's your happier place?\"\n\n\"Yep, sure is.\"\n\n\"So that explains the erections.\"\n\n\"Yep, sure does.\"\n\nShe got him into his chair and began to wheel him back to his room.\n\n\"So what about you, what do you hum?\" he asked, his voice full of mischief.\n\n\"Oh, generally, if giving a hummer, something by the Sisters of Mercy, slowed down a lot, or some Black Tape For A Blue Girl, Morphine... something by one of them.\"\n\n\"You realize I have very little idea who you were just talking about.\"\n\n\"That's fine, Harry, you do realize you aren't supposed to?\"\n\n                              *  *  *  *  *\n\nDr. Mike Lowry had never had a patient like Harry Grimes before, that much was certain. \n\nHe'd watched Harry in physical therapy, struggling to rehabilitate his knee, heard about what he used to manage the pain and fatigue.\n\nMike understood his motivation, if not exactly the relationships behind it. Harry had three beautiful women waiting for him... any one of which, to be truthful, would be motivation as strong, if he were Harry, as his own motivation would be to get home to his wife and children.\n\nAnd then there were incidents like the hand job that had resulted in the showdown between Margo and Nurse Ratch... Nurse Fletcher.\n\nAnd then there was what the private nurse, Adelaide Corken, had motioned him over to see as he passed Harry's room one day. Through a gap in the door held open, he noticed, by Adelaide's shoe\n\nThe three women were dressed in the kind of nurses' outfits advertised in Fredericks of Hollywood's. They had lowered his bed down and made it totally flat. Kelly was bent over at the waist, resting on her arms, using her body as bridge over his cast-encased arm and shoulder, thankfully Harry's elbow was un-cast, while Carol did somewhat the same along his side below the hip so that their backs provided a place for Margo to rest the left side of her body while she made love to him.\n\nAnd from their positions, it was clear none of them were wearing anything but the costumes. His colleague Margo's breasts were hanging free, brushing across Harry's chest as she very carefully moved up and down on his cock, her lips locked in a kiss with his.\n\n\"When the hell'd this start?\" he asked Nurse Corken in a whisper.\n\n\"Awhile back... I think we're close to the finale... and I think it'll be 'grand',\" she replied. \"They walked in, told me to watch the door for awhile and knowing what I know, I couldn't bear not watching.\"\n\n\"Knowing what you know?\"\n\n\"Yes... Mr. Grimes... Harry and I... well, he's proud of his family and after some initial dancing around to see if I'd be judgmental or negative about their situation... well... we got to talking. I suppose my 'special situation' helped open him up even further, once we traded secrets, so to speak.\"\n\nDr. Lowry looked at the cute, rather short, very full-figured and slightly overweight woman next to him. \"So that came up, did it?\"\n\n\"Yes... and once he knew about Tom, Chris and I... well, we've had some wonderful conversations.\"\n\n\"It is part of why I recommended you for this job...\n\n\"Oh, I think we're about ready... yes, there he goes!\"\n\nMike watched as Harry rode out his orgasm, Margo getting off of him, sliding over to his left side and stroking his cock, allowing the other two to stand up and stretch.\n\n\"Here it comes!\" Adelaide murmured.\n\n\"Here what comes? I thought it was over?\"\n\nAs his cock stopped spasming, Margo said, \"Yes, I think this kept the patient occupied just long enough for the thermometer to take a reading.\" She lifted up his left leg and gently worked the vibrating plug out of his ass.\n\n\"Nurse... Grimes... I don't... think I could stand... having you take... my temp that way... every day... I think I'd... go crazy...\"\n\n\"Not to worry, Patient Harry, your temperature is normal and I think you're going to be just fine. Wave at the nice people who've been watching, everyone. Why don't y'all come on in?\"\n\nAs Harry blushed to a shade of red Mike didn't think possible and Carol and Kelly waved while tucking themselves back in, he and Adelaide walked in. \n\n\"Hello Mike, Nurse Corken,\" Margo said, buttoning the costume back over her breasts. \"Hope you enjoyed the show... not sure when our next production is but I can put you on the newsletter list,\" she said, smiling to take the sting from her words.\n\nAfter a brief chat, Dr. Lowry and Nurse Corken left the lovers to clean up and change back into their street clothes. \n\n\"Have you talked to Rochelle yet about my proposition, Mike?\" Adelaide asked.\n\n\"Not yet... she's still a little touchy on the subject. But I promise you dear, I'm not stalling... I will speak with her about it as soon as the proper moment presents itself.\"\n\n                              *  *  *  *  *\n\n\"I'm not even out of the hospital yet and you want to plan these parties!\"\n\n\"Yes Harry, we do, and we're going to. If we want to have them before there's any real chance of inclement weather then it would be good to get the invitations out so people can put us on their schedules... not everyone lives the free and easy, unscheduled lives we do.\"\n\n                              *  *  *  *  *\n\nHowdy Neighbor!\n\nDue to some personal problems, I haven't been the good neighbor I ought to be for a long time. But now things are finally coming together so I and my fianc\u00e9 Margo, and our roommates, Carol and Kelly and our newest roommate, my sister Nicki, would like to invite you over for a barbeque and pool party on the evening of Saturday, September 16th, 2006, from 4:00 PM to 9:00 PM.\n\nWe'll have hamburgers and hot dogs, chips and salad, plenty of sodas for the kids and beer for those that want it. Anything else you might want you'll probably need to bring yourself. Oh, and don't forget your swimsuits!\n\nI'm really looking forward to this chance to get in touch with all of you, some of you for the first time, as my fellow residents in this lovely neighborhood we live in. Please come and let me make amends for my un-neighborly attitude for the past nine months.\n\nWe all look forward to seeing you there. R.S.V.P. at...\n\n                              *  *  *  *  *\n\nThere had been a lot of talk in the neighborhood about the renovations to Harry's house. In particular the twelve-foot privacy fence had raised more than a few eyebrows and those few that had views into his backyard had fed the information on what was being done out through the grapevine.\n\nAnd while most of the unusual occurrences at the house had gone unnoticed by the neighborhood, there was one they couldn't ignore and that had raised the level of tension and fear quite a bit... the attack in the park. Neighborhoods like theirs, full of middle and upper middle class family and homes lived in a fragile bubble of illusion... far enough away from the 'bad parts of town' that they could pretend they were safe, but not so far away that they could ever forget they were there. There'd been talk of setting up a neighborhood watch in the wake of the attack, but no action had been taken. \n\nWord circulated that maybe this party would be just the opportunity they'd been waiting for to try to get such a project off the ground.\n\nThe responses to the invitation up and down the neighboring blocks of Garwood, Harry's street and Hudgins to the east, Trousdale to the west, were very positive and the acceptances came in by phone and email in a stream.\n\n                              *  *  *  *  *\n\nMy friends and co-workers...\n\nIt's only when the Universe tests you then you find out just who your true friends are and how many people care about you. My recent stay in the hospital was such a test, although I'm pretty sure the staff was tested more than me. All of you were there for me and my family in a thousand different ways, all of them appreciated beyond our ability to express.\n\nAt least allow us to try. Margo, Carol, Kelly, Nicki and I invite you to a barbeque and pool party on the evening of Saturday, September 23rd, 2006, from 4:00 PM to 11:00PM. Renowned Central Texas Barbeque Master Albertino 'Boots' Carsidona will be catering the party so bring your appetite for brisket, ribs, sausage, chicken and even fresh barbequed vegetables for those of you who are vegetarian. There'll be sodas and beer aplenty, salad, barbeque beans, potato salad and Boots' famous grill-baked beer bread as well to help sop it all up with. Anything more that you might want you'll need to bring yourself. Don't forget your swimsuits!\n\nPlease allow all of us this opportunity to try to show you just how much we appreciate all your many kindnesses.\n\nWe all look forward to seeing you there. R.S.V.P. at...\n\n                              *  *  *  *  *\n\nThe mood in the office had lightened every day as Harry's release from the hospital and return to the office grew nearer. \n\nAnd then the employees had received their invitations to the barbeque. There was no doubt everyone and their families would be in attendance. The big question, quietly discussed and cogitated upon around the office was if the pool party was going to be in place of or in addition to the company picnic.\n\nSince the company's inception, the company picnic, instead of the boring trial that many such company functions were elsewhere, had been, in true G & P style, one of the highlights of the year, with 'door prizes' and bonuses and contests and games and most importantly of all, a real reiteration and reaffirmation of Harry and Karen's assertion that without their employees they were nothing, that their co-workers were the most important part of G&P.\n\nIn the early years of the company, the prizes hadn't been much, and bonuses were as often as not to the tune of $20... sometimes less, but the books had always been open for any employee to see and from the very beginning, no one had failed to notice that until the company was truly in the black, Harry and Karen's paychecks were often pitifully low, while no employee's check ever bounced and no employee ever was asked to take less than their normal salary. And no matter how thin the year, the picnic was the time for the company to celebrate its successes, ignore its losses and look forward to a new year where, together, they would do better than they had the last.\n\nFinally the employees nominated Rhonda, the receptionist, to talk to Karen about it.\n\n\"Boss?\"\n\n\"Yes Rhonda?\"\n\n\"Uh... we, I mean, the employees... well the rest of the staff... and me too... we were wondering... uh, is there still going to be... a company picnic this year... or is that sort of getting combined into the barbeque at Harry's house?\"\n\n\"Get everybody in the breakroom.\"\n\nA few minutes later, Karen addressed the staff. \"Alright, knowing you little barbarians' love of the picnic, I should have seen this coming and dealt with it earlier. \n\n\"The picnic will go on as planned, although we probably need to get firm and set a date for it, barring bad weather. I want a committee of four chosen by the end of the day to meet with me first thing in the morning, we'll start looking at sites and dates.\n\n\"The barbeque is all Harry's thing, and I know he's looking forward to seeing all of us there.\"\n\nAll of G&P's employees, as well as Anna Pessino and her family, had left messages by email and phone that they would attend within two days of the invitations being received. It was a clean sweep of the invitees.\n\n                              *  *  *  *  *\n\nTo our friends and fellow social deviates, in the 'Community' and elsewhere,\n\nPlease join us in celebration of Harry's release from the hospital, as well as the end of a long period of renovations to the house. Husband Harry, Wife Margo, Wife Carol, Wife Kelly and Sister/Roommate Nicki invite you to a clothing-very-optional pool party on the evening of Saturday, September 30th, 2006, from 7:00PM until we decide to send you all home, definitely sometime after 2:00AM. Catering will be by Suburban Submissives and we've selected a menu suited for widely divergent tastes, from carnivore to Vegan. There will be ample beverages of all types provided, as well as herb, but we would ask that our guests respect our wishes and leave anything more chemically potent at home.\n\nAs this is being held in a residential neighborhood, the outside portion of the party will be kept relatively low-key as far as noise levels , and as parking might be an issue, as well as driving home in an intoxicated state, we urge you to take a taxi to and from the party. We have an account set up with Texas Cabs for that evening and the next morning so that your cab fare is taken care of. We love you all and want to see you safe. Just tell the cab driver that your fare is to be billed to 'Baby Girl', and don't forget to sign for an appropriate tip.\n\nPlease come and share our happiness and our home with us. We look forward to seeing you there. R.S.V.P. at...\n\n                              *  *  *  *  *\n\nMadame Cornelius sat on her balcony, stroking a naked Li Kuan's hair and smiling as she read the invitation. This little soiree of the Grimes clan was going to piss off all the right people by virtue of the fact that no matter how much scorn they might heap upon the party, they weren't on the invitation list... and Madame Cornelius was relatively certain that the stories that would spread from the party would make them secretly wish they had been. She wouldn't miss it for the world, no matter what the guest list... she liked these people. But the ruckus it would cause did add spice.\n\nShe had Hans send their acceptance, four in attendance.\n\n                              *  *  *  *  *\n\nAntoinette sat by a translucent toilet, watching the young man who sat upon it trying to hold in the contents of the large enema bag she had slowly filled him with.\n\n\"Just a little longer, my sweet.\"\n\n\"Thank you... Mistress Antoinette... it hurts.\"\n\n\"I know it does, sugar, but you'll be so clean inside when we're through.\"\n\n\"Why won't... you use a plug... to help me... hold it in?\"\n\n\"Because then you would be weak. This way you'll learn to hold it like a man... and release it on command.\"\n\n\"And then... may I see your breasts... and relieve myself?\"\n\nShe looked the erection that was bending, painfully she imagined, against the interior rim of the commode and sighed.\n\n\"Yes, then I'll let you purge your testicles as well.\"\n\nClarice brought her an envelope. \"It arrived with the daily mail, Antoinette.\"\n\nShe opened it and read the invitation. While she wanted so badly to attend... to be seen by people who were... 'normal'... who wouldn't understand... she couldn't... she just couldn't.\n\nAnd then another slip of paper fell from the envelope to the floor. As she reached down to pick it up she almost absentmindedly said, \"You may relax, Terry.\" To the sound of his voiding, she read the handwritten note.\n\n\"Antoinette,\n\nI will be heartbroken if you don't attend. The rest of my family has so wanted to meet you; they will be destitute as well. Please say you'll come.\n\nHarry Grimes\"\n\nShe handed Clarice the invitation, blinking her eyes to eliminate any sign of tears. \n\n\"Clarice, send them our grateful acceptance of their kind invitation. Am I right in remembering that Liz won't be back from her European tour until late October? Yes? Then tell them just the seven of us will be attending.\"\n\n                              *  *  *  *  *\n\nMr. Antiquity lay back on his leather and horn couch, his spindly legs wrapped around the head of four hundred and thirty pounds of authentic Japanese sumo wrestler as Himura, his guest and sometimes lover, caressed Mr. Antiquity's balls with his tongue.\n\n\"Himura, pardner, anyway you could stretch your visit out till the end o' September?\"\n\nThe large man's nodding combined with a grunt that sounded somewhat like a 'yes' to signal undeniable assent as his flesh goose-pimpled in waves across his naked body in the frigid air.\n\n\"Good, got me an invitation in the mail this morning, invitation to a party I'd like you to come along to. Wladislaw! Come and get this here invite! You email 'em, tell 'em there'll be five of us a-comin'... and one of us is a big ol' boy.\"\n\n                              *  *  *  *  *\n\nBizoumet soaked in a large claw-footed bathtub full of bubbles as she read her invitation. While it was scheduled for one of her work nights, she couldn't see a reason in the world to miss this party. She reached for her cell phone, first calling Pansy to tell him to find a replacement for the evening of the 30th of September, then to her stylists setting up appointments to have a full makeover done that day, and lastly to the phone number listed to accept the invitation."
    ],
    "authorname": "Fillmore",
    "tags": [],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/oil-of-roses-ch-30"
}