{
    "title": "The Book of David Ch. 14",
    "pages": [
        "***\n\nCHAPTER 14: Resolution\n\n***\n\nSPRING (May 2006)\n\n\"What the hell are YOU looking at?\"\n\nMy eyebrows furrowed and I felt a massive headache coming on. I took a deep breath and then exhaled slowly, the seconds ticking by as the air whistled out between my lips. Sensing that her joking greeting had not gone over as planned, Amber fidgeted and bit her lower lip.\n\nBut even when I was done exhaling, I didn't answer. I didn't know what to say. I WAS, however, looking the hell at her. Three years had been very kind to Amber. She'd grown in maturity and poise without losing any of her youthful beauty. Her blue eyes were bright and sharp with intelligence. Her fine blonde hair was perfectly coiffed. She stood before me wearing a long-sleeved, ribbed V-neck sweater and tight designer jeans over black heels. The sleeves highlighted her long, slender arms. The V-neck showed off her wonderfully enticing cleavage. And then hem of the sweater was short enough to reveal a wide expanse of creamy skin, with a toned belly that would be the envy of any teenager. I saw the hint of a thong peeking above the waist of her jeans, stirring up old memories. I let my eyes drop down and truly take her in, and for a moment, she posed prettily for my viewing pleasure.\n\nAmber was gorgeous. Three years without seeing her had altered my memories until I'd transformed her physical appearance into that of an angel descended from the heavens. The reality of her actual beauty was no disappointment. I wanted to reach out, press my lips to hers, and never let go until we had ravished each other into exhaustion.\n\nAnd yet, I wasn't her boyfriend anymore. We'd broken up, and we'd moved on. And I was so shocked at seeing her again that I couldn't move.\n\nWe kind of looked at each in the awkward silence, and when Amber realized I wasn't going to say anything she cleared her throat and looked at me nervously. \"Uh, how are you?\"\n\nI shrugged silently.\n\nShe seemed pained to know that I wasn't talking to her just yet, but at least I wasn't completely ignoring her. With her eyebrows canted to the sides in a pleading expression, she asked, \"Can I come in?\"\n\nI glanced back inside the house to the bedroom where Cherys and Danielle were undoubtedly in the middle of a very intense conversation. Looking back at Amber I slowly shook my head in the negative.\n\nHer face fell and she half-turned away in rejection. But I interrupted her by saying, \"Let's go for a walk.\"\n\nStunned, Amber simply waited in silence as I retrieved my keys and shoes to go out. A minute later, I locked up and then started walking down the sidewalk, not even waiting for her.\n\nAt the curb was a big black Mercedes S-class, not Amber's style. She'd probably borrowed the car from her parents. It was a subtle reminder that she didn't live here anymore. She'd left me to pursue her dream.\n\nI walked forward at a slow enough pace that Amber quickly caught up to me. It was all I could do to not turn and embrace her in the strongest, tightest hug I could possibly manage. Three years ago she'd gone off to Stanford and medical school. Three years she'd made love to me in OUR home, then immediately flown away and never looked back.\n\nFor three years, I never got a single phone call, email, text message, or even a personal message passed along from a friend. Nothing. Zero. Zilch. I should have hated her for it.\n\nInstead, all I wanted to do was throw her onto the grass and kiss her like we'd been separated for only two days and I'd been missing my girlfriend. But I was still angry with her. Amber had abandoned me. Who was she to think that she could leave me when convenient and then just show up on my doorstep as if nothing had ever happened between us? Did she really think she could ignore my phone calls and emails and letters for three years, and then just return and have me back?\n\nI think I actually felt my brain *pinch*.\n\nShe could. She could have me back. I loved her. I still loved her. Amber could have shown up at my wedding to Cherys and I would have left it all behind for her.\n\nFor Amber...\n\nI missed her so much...\n\nIf I just looked at her, saw her beautiful face again, I would forgive her everything and fall into her arms if SHE would only take ME back.\n\nSo I couldn't look at her.\n\nIt would be too easy. I would be giving up too much of myself. My brain tried to tell me that I deserved better than that. And besides, I was still too fractured emotionally after being put through the ringer by Danielle and Cherys. I was vulnerable and irrational. If I was still in a relationship with Cherys and Danielle right now, how would I have reacted at seeing Amber again?\n\nI guess now I would never know. All I had was how I felt in this moment, which was a painful mix of two urges: one, to madly embrace her in a rush of passion; and two, to shut her away and never speak with her again. I couldn't decide which I wanted more.\n\nAmber made my decision for me by slipping her hand into mine. Her touch was warm, reassuring. And when her fingers squeezed down, I turned and looked into her sky blue eyes, so luminous and liquid. I could see her own longing in her eyes, and before I could even blink I'd brought my face to hers and pressed our lips together, holding her head in my hands and kissing her like the world was about to end.\n\nAn ecstatic cry of happiness welled up in Amber's throat as our lips lashed one another and our tongues intertwined. But a moment later, I tore myself away and turned around, sagging to the ground on one knee and pressing my palms to my own temples in an attempt to crush my own head and end my misery.\n\nI couldn't take it. My mind was scrambling in a dozen different directions at once. Yes-Amber, No-Amber, Cherys, Danielle, pregnancy, single-life, and on and on and on. I'd pushed myself to the brink of insanity too many times in the past hour and finally I was about to crack. My eyes were wide in terror and I screamed, unable to make sense of it anymore.\n\nAnd then Amber's arms were around me as she urgently exclaimed, \"David? David?\" in a frightened tone.\n\nAll I could do was scream again as loud as I possibly could, the sound tearing out of my throat like a banshee out of hell. I couldn't take it anymore.\n\nAmber didn't know what was going on, and yet she held me tightly and rocked me like a baby, her lips to the back of my head and her hands stroking everywhere.\n\nThe next thing I knew, I was standing before my front door, my arm draped around Amber's shoulders while she alternately rang the doorbell and dug through my pockets to try and fish out my keys.\n\nAfter three attempts on the doorbell and two attempts with the wrong key, the door swung open. Both Cherys and Danielle were standing there, Cherys with one hand over her mouth in surprise and Danielle glancing back and forth between me and Amber.\n\n\"Amber?\" Danielle said in surprise. \"David?\"\n\nMy world was a grey haze. I couldn't focus and I really didn't care. At this moment, all I really wanted was to be asleep and make the rest of the world go away.\n\nCherys was asking, \"David? Are you okay?\"\n\nAmber by now had shifted her balance to better support me. \"He's in shock. Can we get him inside?\"\n\nA minute later I was laying flat on the couch and a blanket was thrown over me. Someone slid a pillow beneath my legs. This was better. Much more comfortable and I was feeling warmer.\n\n\"He's catatonic,\" Cherys asked in grave concern, passing her hand over my eyes slowly. My gaze was straight up and I didn't really look around. \"Do you think he can hear us?\"\n\nAmber sighed. \"I'm pretty sure he can hear and see us. He's just not responding.\"\n\nI felt a warmth near my face and then Cherys was kissing my cheek. \"I love you, David.\"\n\nDanielle's hands were on my arm. \"His skin is clammy. And his pulse is weak.\"\n\nAmber replied, \"Normal signs of shock. Just give it time, he'll come around as long as we keep him warm.\" Amber's voice quivered at the end of that, and then I heard her quietly begin to cry as the immediate medical emergency faded and her emotions settled in.\n\n\"Amber? Are you okay?\" Danielle asked.\n\nAmber let out a shivering sigh and then said, \"Yeah, I'll be fine. I knew he'd be surprised to see me, just not THIS surprised.\"\n\nDanielle said quietly, \"It's been kind of an intense morning. Your arrival was probably just the final blow.\" She exhaled loudly and then looked up. \"What ARE you doing here?\"\n\nThere was a quiet pause as Amber gathered herself. \"I had to come home. I had to see him. I never planned for THIS to happen to him.\"\n\n\"What happened out there?\" Danielle asked, accusing anger creeping into her voice.\n\n\"We went for a walk. One minute we were trying to figure out what to say to each other and the next he was kissing me.\" Amber paused to take a breath. \"The next moment he was holding his head and screaming without restraint. Then he went into shock.\"\n\nEveryone went quiet for a few seconds, and then Cherys piped up, \"Remind me never to kiss you.\"\n\nDanielle snorted, and the mood in the room lightened up considerably.\n\nI felt a hand settle onto my forehead and another go to my throat. Amber sounded relieved as she said, \"His pulse is slowing down and he's breathing easier.\"\n\nDanielle commented, \"His color is coming back.\"\n\nCherys sighed happily. \"He's going to be alright.\" I felt a new hand on my arm, stroking me lovingly. When it was gone, I heard Cherys ask, \"So when did you get back in town?\"\n\n\"Late last night,\" Amber replied. \"I could barely wait until a decent hour to come here this morning.\"\n\nDanielle's voice came softly and yet had a strong undercurrent of protectiveness in it. \"And what are your intentions towards my little brother?\"\n\nI heard Cherys inhale sharply and Amber hesitated before answering. But after a while, she said simply, \"I want him back. I know it's terribly selfish of me, but I want him back. I transferred to the University here. I want to be with him.\"\n\nDanielle's voice came back confused. \"But you only had one year of school left at Stanford!\"\n\n\"Yeah,\" Amber sighed. \"But I want to be with him.\"\n\nCherys sighed. \"That may be complicated. A lot has changed since you left.\"\n\n\"I can see that. You, for one thing. When are you due?\"\n\n\"Early August.\"\n\n\"Did you two go to a sperm bank or...?\"\n\n\"You didn't know?\" Cherys asked in confusion.\n\n\"We... we haven't really kept in touch. And E-Beth won't talk to me about anything having to do with David. It's complicated.\"\n\n\"David's the father,\" Cherys said plainly.\n\nAmber gasped. It was right about then that I started to blink. But the girls were occupied enough that they didn't notice.\n\n\"I see,\" Amber's voice fell, realizing the extent of my relationship with Cherys. \"Well, I guess I'll be going then,\" she said dejectedly as I heard her gathering her things. From the tone in her voice, Amber sounded practically suicidal.\n\n\"No, it's not like that,\" Cherys interrupted. \"Well, not anymore.\"\n\nBy now I turned my head just in time to see Cherys slide her hand into Danielle's and stare at her lovingly. \"The baby is mine and Danielle's. David was just... well, he's special.\"\n\n\"Does he have a girlfriend?\" Amber asked with barely-concealed hope in her voice.\n\n\"No one but us,\" Cherys said in a possessive tone, but Danielle coughed conspicuously and Cherys' voice softened. \"He's a free man. We don't have any hold over him.\"\n\nI croaked, \"Yes, you do.\"\n\n\"David!\" All three girls managed to exclaim at pretty much the same time. Cherys was instantly by my side, stroking my cheek while Danielle helped me to sit up. Amber hung back, her arms twitching forward in desire to help me but she held herself back. She didn't consider it her place anymore.\n\nInstead, Amber darted out and came back a few minutes later with a glass of water. \"How much of that did you hear?\" she asked tentatively.\n\nI took a long swallow and then looked up at her. \"Everything, I think.\"\n\n\"David, I-\"\n\nI held up my hand to stop her, and then took a few deep breaths as I sat up straight and gathered my focus. Barely an hour ago I'd been making love with Cherys, dreaming of building a family with her. Now, those dreams had been dashed and an old dream had made an unexpected return. I didn't know how to deal with that.\n\nI wanted Amber back. I REALLY wanted her back. But I didn't yet know what that would do to me. The last time she left I was just an empty shell going through the motions with Brianna. My flailing heart had tried to latch onto Claudine, and then E-Beth. And even as close as I became with Cherys and Danielle, the love we shared was never meant to last. Even then, I'd nearly pushed Danielle aside to sate my own desire for permanence and companionship.\n\nAmber had loved me and then left me to pursue her dream. Even though she was back now, she would always have other forces pulling her in another direction. Even if Amber had returned, how long would she stay this time?\n\nAnd if she didn't stay, how much would it destroy me? I couldn't handle losing her again.\n\nMy head hung low while I kept my hand up, preventing anyone from speaking just yet. At last, I looked up and stared at the beautiful blonde across from me, as lovely as my dreams of her had ever been. \"You really gave up Stanford? You really came back here for me?\"\n\n\"Only for you,\" she answered.\n\nI breathed slowly. \"I thought WE weren't ready for that kind of commitment. I wouldn't have wanted you to give up your dream.\"\n\n\"I know. But my dream now is you. I can't go back to Stanford, but I can still become a doctor. I'd rather be a doctor and with you than be a Stanford-graduate without you. Don't you see, David? I came back only for you, that's how much I'm committing to this. Three years ago I wasn't ready. I am now.\"\n\nI groaned. \"I'm not sure what to do with that right now. It's all just too much to take.\" My head hurt and I frowned. \"I think I need more time.\"\n\nShe reached forward to take my hands into hers. I remembered how I always held a woman's hands whenever I wanted to reassure her of my intentions. But as she approached, I pulled away from her. And Amber's face fell in worry. But still she said, \"I will wait.\"\n\nAmber sat up straight and nodded her head. \"I will wait.\"\n\nWith that, she got her things and left.\n\nAnd once the door closed, I lay my head back against the couch and closed my eyes. I needed to do some heavy thinking... later.\n\nRight now, I just wished I could turn off my brain.\n\n***\n\n\"I'm going to miss sleeping beside you,\" Danielle ran her hand along the sheets as I finished tucking them into the mattress.\n\n\"Well, it IS your fault,\" I teased.\n\n\"Is not!\" Danielle retorted. \"You're the one who insisted on moving back to your room.\"\n\n\"I know, I know,\" I conceded, holding my arms up placatingly. \"I just think this will be good for us. Reestablish some ground rules. That room is yours and Cherys'.\"\n\n\"You're still welcome to sleep with us whenever you want,\" my sister said seriously.\n\n\"Yeah,\" Cherys pouted from the doorway. \"The next time I need a cock, I'm going to fuck you until you pass out in our bed.\"\n\nI smiled and slid on a clean pillowcase before reaching for the comforter. We were reestablishing that Cherys and Danielle were the ones in a relationship, but all three of us loved each other (and lusted for each other) too much to completely sever our ties. It would be awkward, but we were family. We would figure it out. \"Maybe... but not tonight.\"\n\nDanielle nodded and walked to the door, wrapping her arm around Cherys' waist on her way out. But before she left, she turned her head back to me. \"I left you a fresh box of tissues. Promise me you'll enjoy listening to us.\"\n\nI nodded and waved the girls out of my bedroom. \"Good night ladies.\"\n\nAnd then I was alone, just me and my thoughts.\n\n***\n\n\"Dude, that's fucked up.\"\n\nI sighed and waved my hands helplessly. I'd just finished explaining the 'Stealing Cherys' story to Kevin and Jen and I leaned back heavily.\n\n\"Go ahead,\" I waved to Jen. \"You can say it.\"\n\nShe cocked her head. \"I told you so?\"\n\n\"Yeah, that's the one.\"\n\n\"I'm sorry, David.\" Jen reached out an patted my knee. \"I wish I hadn't been right.\"\n\n\"No... it's okay. You were right. My dad was right.\"\n\nKevin chimed in. \"So what's going to happen now? You need to crash here for a bit?\"\n\n\"No. I think we'll be okay. It's not like Cherys and I are breaking up per se. Officially, we were never together. We're just confirming that she and Danielle are together and I'm just the roommate.\"\n\n\"Does that mean you and Cherys are going to stop fucking?\" Kevin asked in a serious voice.\n\nA sly smile slid across my lips as I mumbled, \"Well...\"\n\n\"Man-slut!\" Kevin spat good-naturedly.\n\nBut just as soon as I started to feel happy, the other serious issue came crashing down around me.\n\nAs my shoulders sagged, Jen was instantly on alert. \"What?\"\n\nI sighed and said, \"Amber's back.\"\n\n***\n\n\"Hi gorgeous... Hi Dani...\" I said as I came through the door. It had been a week since I moved back into my own room. I won't say that it was the worst week of my life or anything, but being separated off from my roommates after months of wonderful togetherness wasn't exactly pleasant.\n\nPlus, the lethargy that had been dogging me the last five workdays still weighed heavily on my shoulders. One of my projects had gotten off-track and everyone was working overtime to catch up. And even when I had a free moment, my thoughts inevitably drifted back to Amber and I would throw myself back into my work to distract myself.\n\nUnfortunately, for all their psychological insight, Kevin and Jen didn't have any workable solutions for me and Amber. They cautioned me to be careful and make sure I had my emotions under control before I seriously considered how to approach any new relationship. And they offered a sounding board for me to vent my frustrations over the situation. But that kind of help only went so far.\n\nAs a result, I'd been wound up tighter than anything for the past week and my brain was seriously hurting.\n\nAs I came through the door and said hello to the girls, Cherys and Danielle said their greetings in return from their spot on the couch. The two beautiful young women cuddled together in front of the TV while my sister rubbed her girlfriend's belly. Danielle called out, \"There's a plate for you in the fridge.\" She started to move off the couch.\n\n\"Don't get up. I can handle it,\" I told her.\n\nOnce nuked, I brought my plate to an armchair and watched TV with the girls. Every now and again, my gaze would flicker over to them, scantily clad in comfortable pajamas. The garments were designed to be comfortable, not titillating. And yet, there was no hiding the fact that neither wore a bra beneath the thin cotton. And with the recent warm weather, both outfits were suitably brief.\n\nAfter screwing both girls almost at whim for the past few months, going an entire week without getting laid had felt like a prison sentence. But internally, I quashed my feelings. It wasn't my place to initiate. The girls had their trust issues to work out with each other. They had to firmly establish themselves as a solid couple without me once again before their relationship could handle outside influences.\n\nBesides, as the resident fuck-buddy, I was at their beck and call, not the other way around.\n\nAt the end of the night, I said my goodnights and stepped into the shower. The hot water was a wonder at soothing my aching muscles, but even that only went so far. And so when I went to bed early, I found myself staring at the ceiling, lost in the abyss of my own melancholy.\n\nI heard Cherys and Danielle puttering around outside, the toilet flushing and the shower running as they went about their nightly rituals together. They still had each other. But I was on the outside again.",
        "I was all alone in the world now.\n\nAll alone...\n\nThere came a knock at my door and a moment later it began to swing open. My eyes swiveled away from the ceiling to see Danielle poke her head in, her hair darkened by wetness and slicked back. She saw that I was awake and then came in, closing the door softly behind her. She was wearing nothing but a white fluffy towel. \"Hey squirt...\"\n\n\"Dani?\" I queried, reaching over and turning on my bedside lamp.\n\nShe came next to the bed, standing loosely beside me and then reached to the tuck in her towel. With one flick of the wrist, the terrycloth came loose and then dropped to the floor.\n\nIn the pale yellow light, her skin glowed with heat fresh from the shower. And yet her nipples were rock hard and I could see the pink folds of her pussy already peeking out between her legs.\n\n\"Dani?\" I asked a little more urgently.\n\nShe didn't answer except to bend and press her lips softly to mine. I lay my head back and just enjoyed the wonderful feelings of her mouth on mine, our tongues darting out and intertwining together.\n\nWhen she began to pull away, I followed with her, not wanting to break our liplock, but she pressed down on my chest until I was flat on my back again. Then, she pulled my blankets off to the side and deftly reached her hand into my boxers to pull my half-hard cock through the flap.\n\n\"Dani?\" I asked one more time. \"What are you-?\"\n\nShe silenced me with a finger to my lips. \"We both need this.\" And then she engulfed my dick in the warmth of her mouth.\n\nFor a long time the only sounds were the wet popping of her lips around my shaft and the occasional slurp of saliva as my sister bobbed up and down on my prick. I let my right hand drift over her body, first rubbing her shoulder and neck before gliding down her back. I made no further sexual moves, instead reveling in the softness of her naked skin.\n\nDanielle blew me to the brink of orgasm, but when my balls started twitching, she backed off. Then slowly, she took her time tugging my boxers down my legs and then off, leaving us both completely naked.\n\nFinally, she mounted the bed and then moved to straddle me, her knees beside my hips as she reached down and guided my rocket into her body.\n\nFrom the moment our hips met, we never stopped moving. Physically, it felt so good to be inside a tight pussy that I couldn't possibly slow myself down from enjoying the sensations too much. Emotionally, I felt a cathartic relief at joining together with my sister who I loved so much, only now daring to believe that our love would survive this latest roadblock.\n\nDanielle seemed to be of like mind. Her legs flexed constantly as she pistoned herself up and down and around and around my pole, whimpering in delight as we pleasured each other.\n\nAt first, she simply threw her head back and ran her fingers over her own face and through her hair, pure delight in her eyes as she felt me filling her up over and again. This caused her chest to thrust forward, her firm, round tits so enticing as they bounced before my eyes.\n\nWhen I sat up to take a nipple into my mouth, she cradled my head to her chest. And with my arm wrapped around her waist, we continued pumping our bodies against each other over and again.\n\n\"Oh David...\" she moaned. And then she wasn't able to say anything more as I crushed my lips to hers and we fucked each other with our tongues as much as we were with our loins.\n\nFor a few moments, we were as one. When our orgasms came, they came powerfully and they came simultaneously. Danielle was whimpering into my mouth as the feelings raced through her body, and I was groaning into our kiss as my cock erupted blast after blast of white lava into her spasming pussy.\n\nShe was still shuddering when I ejected out the last few loads into her, and as I finally pulled my mouth away from hers, she exhaled loudly before moaning, \"I love to feel your spunk swimming around inside me.\"\n\nI chuckled at that and let my forehead sag into her cleavage while she circled her arms around my head. Amazingly, those aches in my back and shoulders were gone.\n\nI panted for breath for a few minutes, and then squeezed her tightly in a hug and said, \"Thank you.\"\n\nIt was a few moments before she answered. \"You don't hate me?\" she asked softly.\n\n\"How could I ever?\"\n\n\"For pushing you out. This... this whole thing with Cherys just got out of control.\"\n\nI leaned up and pecked Danielle on her nose. \"I know. I'm sorry. I never meant for things to get so far.\"\n\nShe nodded and kissed me again. \"I know. You're a good man, David. I know you would never do anything intentionally to hurt me.\"\n\n\"Never.\"\n\n\"I love you, David.\"\n\n\"I love you, too, Dani.\"\n\n\"No hard feelings?\"\n\n\"None at all.\"\n\n***\n\nOnce Danielle and I got our mutual issues resolved and out of the way, Cherys was delighted and enticed us into a torrid threesome the very next morning. She made good on her promise: the girls wore me out so much that I passed out on the bed and slept until two in the afternoon.\n\nThe next time we went out, Danielle and Cherys were the ones holding hands and lovingly rubbing Cherys' belly while I watched approvingly from across the table.\n\nThey got a few more awkward stares and a few less well-wishers than Cherys and I would have, but there was still a lot of love surrounding the happy couple.\n\nThat left only one major issue still unresolved for me.\n\nAmber.\n\n***\n\nSUMMER (June 2006)\n\nIt was another long Friday, but at least the week was over. I was just shutting down my system when a familiar voice said my name behind me. It was Stan, the Executive Vice President who'd been shadowing me for my entire career.\n\n\"David! You're still here. We're not working you too hard, are we?\"\n\n\"No, sir.\"\n\n\"Stan, remember?\"\n\n\"Yes, Stan.\"\n\n\"Can you swing by my office for a minute?\"\n\n\"Uh, sure.\" I hurriedly gathered my things and then followed after. When we got to his office, there was another gentlemen in a wing chair, sleeves rolled up and an open snifter of brandy between them.\n\nStan gestured to the gentlemen, who was just now turning around. \"I believe you already know Robert.\"\n\nIt was Amber's father. I stood up straight in shock but quickly recovered and held out my hand. \"Good to see you again... Robert.\"\n\nHe shook it and gestured to the available wing chair. I nervously took my seat. \n\n\"Anyways,\" Stan began, \"Robert here and I were going out for golf tomorrow afternoon. As it is, we need a fourth. I was just asking Robert if he had any ideas for someone to round out our group and he mentioned you. He said the two of you have played before.\"\n\nMy jaw half-dropped. I'd played golf exactly once in my life, back when I was dating Robert's daughter.\n\n\"So, are you available?\" My Executive VP asked.\n\n\"Uh, certainly... Stan. I'd love to join.\" I turned and nodded my head to Robert. \"Although, I haven't played in some time.\"\n\n\"No worries,\" Robert waved me off. \"Just like riding a bike.\" He stood, placing his empty brandy tumbler on the desk. \"So, tomorrow at noon? See you then.\" He reached out to shake my hand.\n\n\"Goodbye Robert.\" I stood as well, shouldering my bag and nodding to Stan. \"See you tomorrow.\"\n\n***\n\nIt was 11:45am when I walked into the clubhouse. I picked up a rental set of clubs and then went out to find Stan and Robert. Along the way, I saw a row of golf carts parked in preparation for the groups to go out. One of them read 12:00pm and had Robert's last name and mine printed beneath our start time.\n\nI was just belting my clubs into the rack when I heard a startled gasp behind me. I turned around and my heart dropped into my stomach. \"Amber?\"\n\nShe was standing not ten feet away from me, dressed to the nines in a powder blue ensemble, complete with visor and white golfing shoes. It was clear she wasn't here just to hang out.\n\nShe seemed even more surprised to see me than I was her, and for a while, the two of us just stared back and forth at each other. Last time, her arrival had completely overwhelmed me with surprise. This time, while still surprised, I was recovering quickly and really just looked at her longingly.\n\nGood lord she was beautiful. Sometimes I forgot how stunningly pretty she was. And as Amber looked at me pensively, all I could do was stare in disbelief at seeing her again. Since our last encounter, I had been waiting, preparing myself for our next meeting, steeling my emotions so that I could see her again while rational and in control.\n\nI realized now that I might have waited forever out of fear. I would have never seen her again if I waited until I was \"ready\". But she was here now; and I desperately wanted to talk to her. More than that, I wanted to walk up and hold her, never to let her go. From the way she was leaning forward on the balls of her feet, she looked ready to jump me as well.\n\nBut just before one of us could make a move, another golf cart drove up from the direction of the driving range: Stan and Robert. \"Ah, there you are dear. All set?\"\n\nAmber managed to take her eyes off me long enough to answer, \"Yes, daddy.\" And with that, she hoisted her bag and brought it over to the cart, where she began strapping it in.\n\nIt was then that I realized that we were about to be paired together. With eighteen holes, that meant three hours at a minimum that I would be sharing a cart with her. I was really more shocked than nervous.\n\nAmber muttered under her breath, \"This is SUCH a setup.\"\n\nI thought back to the little stunt her father and my EVP had pulled last night. \"Seems like...\"\n\nAmber leaned towards me. \"Is this OK? I promised I would wait until you felt ready. And if you don't want to be here, you can leave. Or I'll leave.\"\n\nAutomatically, I put my hand on her shoulder, patting softly. \"No. It's OK.\"\n\nOnly then did I realize what my hand was doing, and feeling like I'd just laid my hands on some expensive artwork I wasn't supposed to be touching, I yanked my hand back and blushed.\n\nAmber glanced at her now empty shoulder and her lower lip quivered. \"Now you can't even touch me?\" She looked ready to cry.\n\n\"No, no, it's not that. It's just...\" I sighed. \"What did you expect?\"\n\n\"I'm not sure what I expected. I knew what I hoped.\"\n\n\"And what did you hope?\"\n\n\"That things could go back the way they used to be. That we could be in love the way I remembered it.\"\n\n\"Life doesn't work like that.\"\n\n\"I know. But a girl can dream, can't she?\"\n\nI didn't answer. Her dream sounded wonderful, but it was still dangerous. And for a moment I wished I could be a stupid teenager again, throwing caution to the wind and damn the consequences.\n\nRobert called out. \"All set?\"\n\nI glanced around, seeing the two gentlemen waiting patiently. We hadn't moved in the past two minutes and they pretended not to notice. I just nodded and then we both hopped into the cart, Amber in the driver's seat.\n\nOur two carts rolled along towards the first tee. The group before us was still on, and the older men stopped to wait. Amber parked our cart a good twenty feet behind theirs. For a second, her jaw clenched. \"My parents both know I came back here for you. But they don't know that I went to your house that first Saturday. I've spent the last few weeks running around getting set up: looking for an apartment, unpacking, getting a car for myself. My dad asked two days ago if I'd seen you yet. I told him not yet, that I was waiting for the right time.\" She growled. \"I guess he couldn't leave well enough alone.\"\n\nI reached out and laid my hand on top of hers, which was gripping the steering wheel. \"I'm glad he did.\"\n\nShe looked at me. \"Really?\"\n\n\"Yeah.\" I sighed and looked forward. \"Amber, if we work out, and I hope we do, you'll have your father to thank for getting us back together.\"\n\nShe looked at me with wide eyes. \"Are we getting back together?\"\n\nI moved my hand to her face, softly drawing my knuckles across her cheek. \"I want to. Very much.\"\n\nWith a happy smile, Amber leaned forward, ready to kiss me. But I frowned and held my hand up between us. \"I still hate you...\" My voice was cold.\n\nHer face went white as she backed away. \"What?\"\n\nI sighed. \"Amber, I'm still in love with you. But I hate you for leaving me. I can't help it. I know why you left and my head knows it's almost as much my fault for not going with you. But there's a part of me that really resents you for abandoning me.\"\n\n\"You knew I had to follow my dream.\"\n\n\"But you didn't have to cut off all contact with me. You could have written. You could have called.\"\n\nAmber looked down at her feet. \"It hurt... just thinking about you...\"\n\n\"I know. But it hurt worse knowing you wouldn't answer my calls.\" I found that I was balling my hands into fists, trembling with repressed anger and pain. Slowly, I exhaled, calming myself. \"We need to talk. There are a lot of conversations we've missed in the last three years.\"\n\nJust then, the other group moved off and the two older men got out of their cart to pull out their drivers. Amber sighed and nodded. \"Looks like we'll have some time together.\"\n\n***\n\n\"So did you fuck her?\"\n\n\"What?\"\n\n\"After the golfing. Dude, did you tap that? Amber is a major babe.\"\n\n\"Kevin!\" Jen slapped him. \"You are such a pervert.\"\n\n\"Hey, he's your fianc\u00e9,\" I waved. \"And the answer is no. We just talked.\"\n\nHe shrugged. \"Why not? It's not like you haven't done it before.\"\n\nI sighed. \"It's complicated.\"\n\n\"Dude, you've been saying that since she got back into town. What's complicated? She wants you. You want her. Why the hell are you sitting in my fucking living room instead of fucking her in her living room?\"\n\n\"Kevin, it's just co-\"\n\n\"Complicated,\" he interrupted. \"Riiight. You always think too much, you know that?\"\n\nHe tossed back his coke and then looked at me. \"What score did you shoot?\"\n\n\"Well, we weren't really...\"\n\n\"Dude! You overcomplicated everything! What. Score. Did. You. Shoot?\"\n\n\"106,\" I blushed.\n\n\"There! Was that so hard?\" He leaned forward on the couch. \"Now... Do. You. Want. Her?\"\n\nI gulped. \"Yes.\"\n\n\"Then go back over there.\"\n\n\"But what if she breaks my heart again?\"\n\n\"Duuude. What if you get hit by a bus tomorrow?\"\n\nI threw up my hands in exasperation. Life wasn't this simple, was it? \"Jen, what do you think?\"\n\n\"I think you need to fuck her,\" she nodded.\n\n\"What? What happened to making sure I had all my emotions under control?\"\n\nShe shrugged. \"You're a strange guy, David. Thank goodness I'm not stuck with you. But after everything you've said about the conversation you had with Amber, all the things you've got between you, and the fact that you were able to get comfortable with her in that short amount of time, I say yeah... go over there and fuck her.\"\n\n\"That doesn't make logical sense at all!\"\n\n\"David,\" Jen said thoughtfully with her hand on my knee. \"Right now your mind is jello. You haven't been able to maintain a coherent train of thought for more than ten minutes since Cherys 'broke up' with you and Amber came back into town. And it's been weeks already.\"\n\nThen, Jen started smiling in a victorious way that made me a little nervous. \"But last week, you came over to visit with that self-satisfied freshly-fucked face of yours.\"\n\n\"I don't have a 'face'!\" I protested.\n\n\"Dude. You had 'the face',\" Kevin drawled.\n\n\"Anyways,\" Jen continued. \"You got laid, and all of a sudden your Cherys and Danielle issues were gone. Now I don't pretend that they all went away completely, but you stopped bitching to us about them. So with Amber, yeah, I say go over there, clear out your pipes, and then come back here. You'll be able to think more clearly and then we'll deal with the consequences.\"\n\nI sighed and tried to work my head around her logic. \"You always recommend this kind of therapy to your patients?\"\n\nShe shrugged. \"Just the sex addicts.\"\n\n\"Thanks.\" Even I'm not sure whether I was being sarcastic or sincere.\n\n***\n\nNervously, I fidgeted on the doorstep. I hadn't done this in years. I barely remembered what to do. A part of me figured it didn't matter. There was no need to impress. Amber knew me and we both knew what we wanted. I'd met her parents. But still, for appearances sake, here I was, standing in front of Amber's door with roses in my hands.\n\nThe door swung open and Robert smiled. \"David! It's been a long time,\" he joked. It had probably been about four hours max since we finished our golf round. \"Come in. Come in.\"\n\nI shook his hand in greeting and walked into the foyer. Amber's mother came in. \"Ah, David! Good to see you...\" She walked up and hugged me, leaving air kisses beside each cheek. Then she stepped back and looked me up and down like a predatory cougar. \"You've grown up into a fine young man.\" There was a little leer in her voice which I chose to ignore.\n\n\"Please to see you again, Julie,\" I sketched a short head bow.\n\n\"Ah, flowers,\" Amber's mom preened. \"I don't remember the last time someone brought ME flowers.\"\n\nRobert looked suitably abashed. \"Hmm? Well, I'll have to rectify that. Julie, I'll pick you up the most beautiful bouquet on the way to our dinner appointment.\" He reached his hand out to his wife.\n\n\"Dinner appointment?\" Julie looked confused.\n\n\"Yes...\" Robert said with a masked imperative in his voice. \"Don't you remember? Our dinner appointment?\"\n\nJulie got it just then. \"Ah yes. THAT dinner appointment. Well, we'd love to stay and chat David, but we really must be going. I believe you'll find Amber in her bedroom.\n\n\"Thank you, Julie. Thank you, Robert.\" I nodded to the both of them as they headed off, a little smile on my face.\n\nOnce they were gone, I took a deep breath and then headed up the stairs. Amber's room was the third on the left. I knocked and waited.\n\n\"Come in!\" she called.\n\nI opened the door. Amber was dressed in comfortable lounging clothes, cotton pajama pants and a tank top without a bra. She was lying on her stomach across the bed, propped up by her elbows as she flipped through a photo album with a lost expression on her face.\n\nAs I entered, she turned to face me, and then her eyes went wide in surprise. \"David!\"\n\n\"Hi Amber.\"\n\n\"How'd you get in here?\"\n\n\"Your parents answered the door. Then, they invented some dinner appointment so they could leave the house to us.\"\n\n\"Really... And why would they do that?\" I shrugged and held out the flowers. \"I wanted to ask you out on a date tonight.\"\n\nShe took the roses gleefully and then inhaled their sweet scent. Then she fixed me with a sardonic grin and asked, \"Doesn't the guy usually call ahead for the date before just showing up?\"\n\nI shrugged my shoulders. \"I dunno. I haven't done the whole asking-out-on-a- date thing since... well... maybe High School.\"\n\nShe giggled, her voice a musical lilt. I willed myself not to think of all the ramifications of what we were doing, all the niggling worries in the back of my head. I looked only at Amber, my old friend, my old love, and a woman who I was still in love with. My relationship with Brianna crumbled because Amber always had a piece of my heart, and as she lay there, smiling at me, I dared to hope for the best.\n\n\"So what do you want to do tonight?\" she asked, sitting upright on her bed with her legs crossed beneath her.\n\n\"Well, I was thinking dinner, maybe a walk in the park.\"\n\n\"Not hungry,\" her eyebrows went up in an aw shucks manner. \"What about the walk? What did you want to do? Talk?\"\n\nI nodded.\n\n\"You talk too much David. Besides, we did a lot of talking today on the golf course. I thought we were through all that.\"\n\n\"We're not through. I still hate you.\"\n\n\"I can fix that. But not by going to dinner and talking more.\"\n\n\"Then how? What do you think we should do?\"\n\n\"Fuck.\" She said it with a sweet smile and so matter-of-factly that it took my brain a few seconds to catch up.\n\n\"Huh?\"",
        "\"Come on. Don't tell me you weren't thinking this 'date' might end up in the bedroom.\"\n\n\"Well... I might have thought... I mean-\"\n\n\"David,\" she interrupted. \"This is me. And this is you. Fucking is what we do best.\" She leaned her torso forward, causing the neckline to droop and give me a wonderful view of her fabulous cleavage.\n\nThis couldn't be that simple. Could it? \"And then what?\" I asked, my mouth suddenly dry.\n\n\"And then we get back together.\"\n\n\"That easy? You think I'm that easy?\"\n\n\"Yes,\" Amber giggled. \"We're soulmates David. We belong together.\"\n\n\"Do we? It's been three years Amber. People change. I've changed. What if the people we are today aren't compatible anymore?\"\n\n\"Climb into this bed and we'll find out,\" she husked saucily.\n\n\"I'm serious!\"\n\n\"I am too.\" She was rubbing her own cheek and grinding her thighs together. \"David... please. I need you. I haven't had sex in a year and I NEED you.\"\n\nShe beckoned me to her and I walked closer to the bed. \"What if we don't work out?\" I asked.\n\n\"We will. I know it. Do you think I would have picked up my entire life and career and come back here if I didn't know we belonged together?\" She had a conviction in her voice.\n\n\"Did you have a plan? Did you really think you could just show up and win me back?\"\n\n\"Well, I had some confidence in my skills at persuasion,\" Amber turned and let the strap of her tank top slide off her shoulder as she batted her eyelashes at me, then reached a hand out towards me. \"Come on David, turn off your brain and come to bed.\"\n\nI let her take my hand and pull me beside her. Amber was a beautiful siren and I wondered if she was drawing me in to my doom. My body screamed at me to join her. But still my head held me back.\n\nLove is supposed to be fun. Love is supposed to be easy. And if you find that you're working too hard to try and force it to happen, then it probably shouldn't be happening. For whatever reason, I still wasn't comfortable. And that was all that mattered.\n\n\"Amber, we can't go back to the way we were.\" I took her hands and pulled them off my body, leaning away.\n\n\"We broke up. That life is over. We can't go back. I'm sorry.\"\n\nWith that, I slid off the bed and walked to the door.\n\n\"David!\" Amber pleaded, tears already forming in her eyes.\n\nI stopped and turned. We looked at each other for a very long minute, not saying anything but communicating all the heartache in our eyes.\n\nAt last, she whispered. \"I love you.\"\n\nMy voice cracked as I answered, \"I love you, too.\"\n\nAnd then I left.\n\n***\n\n\"So did you fuck her?\"\n\n\"No.\" I clomped through the room and sat heavily on the couch.\n\n\"Dude! Why-\"\n\n\"Kevin. Shut the FUCK up and throw me a beer.\"\n\n\"Okay, okay dude. Don't blow a gasket.\"\n\nJen came out of the bedroom, hearing the ruckus. \"David? It's early. Weren't you going over to Amber's place?\"\n\nKevin handed me the beer and then warned his fianc\u00e9e, \"He didn't fuck her.\"\n\nJen pursed her lips and sat down beside me. \"Do you want to talk about it?\"\n\n\"No,\" I growled.\n\n\"Okay. How about a movie?\"\n\n\"Sure.\" I sulked and chugged the rest of my beer. I waggled the empty bottle at Kevin. \"Another one.\"\n\n***\n\nI awoke in the darkness and bolted upright. Where the hell was I? This wasn't my bed. This wasn't Cherys and Danielle's bed. And FUCK my head hurt...\n\nPinching my temples, I realized I'd been sleeping on a couch, fully dressed, with a blanket now slipping off my legs. Wincing at the throbbing pain in my head, I turned left and right, scanning the room before I realized I was still at Kevin and Jen's place.\n\nAfter a brief search, I found the clock and saw that it was just a little before 5 AM. Gingerly, I sat up, rubbing my head and yawning.\n\nPerhaps five minutes later, I managed to stand. And then grabbing my keys off the coffee table, I let myself out and headed to my car.\n\nTen minutes after that, I walked into my bedroom, stripped off my shirt, and collapsed into my bed. If I never woke up again it would be too soon.\n\n***\n\nSUMMER (July 2006)\n\n\"Oh, David! Fuck! Fuck me! Fuck!!!\"\n\nCherys trembled and came, washing my prick in a flow of honey while her inner muscles celebrated happily. I only thrust a few more times before emptying myself in her, splashing her already saturated pussy with several volleys of hot jism from behind.\n\nWe were laying on our sides, spooned together. One of my hands was on her swollen tit, now massively round. One of her hands was on her belly, subconsciously protective. And as we panted in post-coital aftermath, Cherys started giggling.\n\n\"I want to be pregnant forever. I can't believe how sensitive I am! I must have cum five or six times in that one!\"\n\nBut while she was giggling, I started sniffling and then pinched my eyebrows together as I buried my forehead into her back and tried to quench my sobbing.\n\n\"Oh, David. Not again...\" Cherys started to turn, with some effort. She was carrying around a few dozen extra pounds after all. Eventually, she managed to flip around so that she was lying on her side, face-to-face with me.\n\n\"You know. It's such a killjoy when you start crying after amazing sex.\" She rubbed my cheek and pulled my head to her cleavage, always a happy place for me to be.\n\nI shuddered and managed to stop the whimpering. Then taking several long breaths, I got myself under control while Cherys stroked my hair and rubbed her tits into my face.\n\n\"Are you thinking about her again?\" Cherys asked sweetly.\n\nI sniffled and nodded, inadvertently rubbing my nose along her right breast.\n\nShe sighed and said, \"Why don't you just go over there and tell her you want to get back together. You KNOW she wants you back. And *I* know she wants you back. Did I tell you we ran into each other last week?\"\n\nI peeked my head up to look at Cherys. \"I can't. She's... she's Amber. She's not just another pretty girl. She's a girl I have history with.\"\n\n\"You have history with E-Beth. That never bothered you before.\"\n\n\"E-Beth never hurt me like this. I just... I can't. She's Amber.\"\n\nCherys sighed again and went back to stroking my head.\n\n***\n\nI was slightly zoned out, staring off into nothingness for minutes at a time. Fortunately, flipping burgers isn't rocket science and my lapses in attention had no major adverse effects.\n\n\"Dude? Where are the fireworks?\"\n\nI rolled my eyes. \"They're illegal, Kevin.\"\n\n\"So?\"\n\n\"Kev,\" Jen sighed. \"Grow up.\"\n\n\"All I'm saying is that it's not a Fourth of July barbecue without fireworks.\"\n\nJen snorted. \"This from the guy who set himself on fire when he was fifteen.\"\n\nKevin chuckled, I zoned out, and Jen smacked me on the shoulder. \"Come on! Not even a smile?\" Jen whined. \"Really, David, even for you, this is pretty depressed.\"\n\n\"I'm fine.\"\n\nDanielle walked by. \"Well, you don't look fine. And you'd better pick up your attitude. The guests are starting to arrive.\"\n\nI looked around. Sure enough, various acquaintances were starting to come out to the backyard, drinks in hand. Several coworkers from Danielle and Cherys' respective workplaces, Dan and Marshall from my Engineering firm, and a few old college friends were also coming in. All in all, we expected 20-25 people to barbecue with us and hang out.\n\nCherys was cruising by, cell phone in hand. Kevin waved, \"Dude, don't you know cell phone radiation is bad for the baby?\" I think he was starting to get buzzed already.\n\nCherys smirked and waved him off. Then she clapped the phone shut. \"Kevin, can you take over the barbecue? David, I've got a little surprise for you inside the house.\" Her voice dropped to a husk and she winked at me.\n\nFor a second, my jaw dropped. I knew Cherys' hormones were out of control now that she was in the last couple of months before giving birth, but a quickie while all these guests were around?\n\nCherys caught my look and started laughing. \"No, not that. A real surprise. Come on.\"\n\nI followed her into the house and over by the front door. Then without another word, she spun and stopped.\n\nI looked at her kind of funny for a few seconds of awkward silence before finally asking, \"What?\"\n\nJust then, the doorbell rang, and a wide smile spread across Cherys' face. She indicated with her head and tentatively, I went to open the door.\n\nThere were two young women outside, and as soon as I came into view, E-Beth squealed and jumped at me. \"David!\"\n\n\"E-Beth!\" I laughed happily and wrapped my arms around her, wrapping us together in a hug as we spun around. Like always, seeing my dear friend after so much time apart did wonders for lifting my spirits.\n\nShe laughed with me until I finally set her down. \"Surprise!\"\n\n\"What are you doing here?\"\n\nShe punched my chest. \"Visiting YOU, dork!\"\n\nI looked back and forth between her and Cherys. \"Are you going to do this to me EVERY time?\" I asked E-Beth. \"Just once, I'd like you to call ME to tell me you're coming instead of calling Danielle or Cherys.\"\n\n\"Nah. It's more fun this way.\"\n\nIt was then that I noticed the other girl fidgeting slightly behind E-Beth. When my gaze went over, E-Beth giggled and said, \"Oops. I'm sorry. David, Cherys, this is my friend Alicia. Alicia... David and Cherys. I'm sure Danielle's running around somewhere making sure the party is going smoothly.\"\n\nAlicia was a tall redhead, and as my eyes quickly dropped down her body I was amazed I hadn't paid closer attention before. She was built like a Barbie doll and had good cheekbones, although I thought her makeup was a tad too severe. I couldn't see the rest of her face as she still wore big, black Chanel sunglasses and her red hair hung short and straight to frame her face. Beyond that, her outfit was suitably skimpy for the warm weather, and I felt a stirring in my cock just looking at her and the creamy naked skin being revealed before me.\n\nShe stepped forward and held a hand stiffly to me in greeting. I shook it and she said, \"Pleased to meet you,\" in a slightly scratchy voice that was somehow familiar.\n\nI held her hand for just a second longer, staring at the cheekbones. \"Have we met before?\"\n\nAlicia cocked her head to the side, I assume studying my features since I couldn't see her eyes. \"Perhaps,\" she said. Her chin dipped just a bit as she evaluated me up and down, and I noticed her hip drifting slightly to the side as she shifted her balance, causing her pose to become rather sexier as she also put one hand on a hip.\n\nI smiled. Getting attention from a beautiful girl was always nice, but I had a party to help run. I turned my attention back to E-Beth. \"So, are you ladies hungry?\"\n\n\"Sure! As long as YOU weren't the cook.\"\n\n\"Hey!\" I protested as we all headed back out to the backyard.\n\n***\n\nAfter retrieving our calorie-laden meals, I spent some time relaxing with E-Beth and Alicia. We found a few patio chairs and wound up sitting in a semi-circle with me in the middle. In the beginning, I sort of ignored Alicia in favor of catching up with E-Beth, finding out all the little things going on in her life since last we saw each other.\n\nBut E-Beth kept Alicia involved, constantly side-stepping my conversation to include her friend. For her part, Alicia kept leaning towards me in her chair, more than once putting her weight onto the armrest, which caused her to lean over and show some very nice cleavage to me.\n\nI smelled a setup, and did my best not to openly gawk at Alicia's hot body. Every time I looked over, my eyes were drawn to her well-rounded chest and I would quickly orient my conversation towards E-Beth. I'm certain Alicia noticed where I kept glancing, but she made no mention of it and instead just leaned over further give me a better look.\n\nA few minutes later, the setup was made obvious when E-Beth excused herself to get another drink, even though her glass was still half-full. That left me alone with nothing to do but talk to Alicia, and for the first time, I stopped to really look at her.\n\nI'd already felt a very, very strong physical attraction to her. I couldn't really explain it, but in a way, she embodied everything I loved in a woman's body. Her legs were long and lithe, flexing nicely as she sat with one leg crossed over the other. Her skirt, already short to begin with, had hiked up further while she was sitting and showed a long expanse of firm, creamy thigh. With a nice tight waist, her belly was toned and led up to a perfect pair of tits, high, round, and somewhat out of proportion for her otherwise model's figure.\n\nI already had a tent in my shorts that I was trying to hide with my plate, and somewhere in the back of my head I already decided that if this girl was really coming on to me, I wasn't going to push her out of my bed.\n\nWe continued our conversation, exchanging flirty remarks left and right. Her speech was a little stilted, almost as if English wasn't her first language. But I detected no accent. On the whole, the little hesitations in her speech were actually a little endearing.\n\nMy gaze went along her graceful neck, and perhaps for the first time I let myself linger on her very pretty face. Wonderful bone structure, pleasantly puckered lips without being too big, and a dainty nose. She looked so beautiful, and so familiar. I knew I had seen this face somewhere before.\n\nAnd then it hit me. I stopped mid-sentence. My back stiffened, my breathing quickened, and my eyes went wide. I reached up and took off my shades, trying to get a better look. And in a shaky voice, I stated, \"Take off your sunglasses.\"\n\nHer breath caught in her throat, and then in an all-too-familiar voice she asked, \"Why?\"\n\n\"Please.\"\n\nShe sighed, looking down and reaching up with both hands to grab each side of the frame. And when she pulled the black Chanel plastic out of the way, she blinked against the sunlight and her pretty face was revealed to me, even more beautiful than I had thought. The girl before me had sparklingly eyes made more alluring by heavy eyeshadow, clearly green in color. \n\nAnd yet, despite the red hair and green eyes, I felt who she was deep in my gut. And so I asked, \"Amber, why?\"\n\n\"I'm sorry. I don't know who you're talking about. My name is Alicia.\"\n\nI gave her The Look. She returned my gaze oddly, as if I was crazy. Her mouth twisted in confusion. I kept glaring at her and from the way she held my gaze, I was actually starting to think that I was going crazy, that I was projecting Amber onto another pretty girl who looked similar to her. After all, I'd only seen her twice since her return, and I'd been projecting Amber's face onto a lot of women for three years.\n\nBut no. It was her. I knew it was her. The body, the height, the nose, the cheekbones, the whole picture coalesced for me. She'd cut and dyed her hair, maybe even put in color contacts, but it WAS Amber before me, I was sure of it. \n\nAnd so with a totally relaxed demeanor, I leaned in and said, \"Well then, Alicia, would you like me to give you a tour of the house?\"\n\nShe leaned forward, nodding agreeably.\n\n\"Good. Because I'd love to throw you onto my bed and shove my cock up your ass.\"\n\nIf she really wasn't Amber, if she really was a girl I'd never met before named Alicia, then a comment like the one I'd just made should have earned me a wicked slap to the face. No matter how much a girl is flirting with you, no matter how much interest she might actually have, being lewd and crude like that this early would always be a sure ticket to getting shut down.\n\nBut no such slap came. Instead, she smiled saucily and asked, \"With lube or do you want to go in dry?\"\n\nIt was Amber. I knew it.\n\nBut hey, if she wanted to play this game. \"Come on in and find out.\"\n\nI stood and proffered her my left arm. She looped hers through mine and together we waltzed into the house. We passed E-Beth on the way in and she gave us a delightful grin. Amber held onto me the whole way as I led her to my bedroom, not saying another word until I closed the door and we had some privacy.\n\nImmediately, she spun me against the door and slammed my back into the wood, grabbing my head in her hands and shoving her tongue down my throat. I felt a wave of pleasure shooting through me, both from the kiss and from that deep place in my heart that always loved Amber.\n\nBut just like before, my conscience and my pain welled up as well. With a moan, I pushed her off me. \"Amber, what the hell is going on?\"\n\nShe grinned. \"It's Alicia, remember?\" she retorted in that deep 'well-duh' tone while rolling her eyes.\n\nShe kissed me for a second before pulling away. \"Ohhh, I get it. Amber's the ex- girlfriend that Elizabeth told me about. She said I looked a lot like her. That's why we met. Elizabeth stopped me on the street and thought I was her.\" And then Alicia went back to shoving her tongue into my mouth while fiddling her hands at my zipper.\n\nCould it be possible? Just like Danielle had a facial twin in Brianna, could there really be someone else out there who looked like a redheaded, green-eyed version of Amber?\n\nNo! It HAD to be Amber, right? There was no way I could mistake that. The jig was up. I knew who she really was. So why was she continuing to play this game? She couldn't ACTUALLY not be Amber, right?\n\nWhile my mind was whirling in confusion, Alicia managed to strip me half-naked and settle to her knees. Then with a wet slurp, she sucked my hard erection into her mouth, moaning deliriously with joy as she began to bob on my cock.\n\nI looked down at her, blue eyes staring back at me amidst a halo of red hair. It HAD to be Amber. \"Why are you doing this?\" I croaked.\n\n\"Mmm... I LOVE cock. Elizabeth dragged me along with her for this vacation and I haven't gotten laid in forever.\" She bent to lick me again from base to crown. \"I thought this barbecue thing would be a waste of time. But she told me she had this friend David who was just INCREDIBLE in bed.\"\n\nShe sucked some more and then popped off long enough to say, \"That would be you.\"\n\nMy brain couldn't keep up. Amber? Not Amber? So good with her tongue! Was E-Beth deliberately messing with my head by bringing her here? Pleasure! \"Oh, FUCK,\" I groaned, and then after only a few minutes of her expert blowjob, I felt myself about to cum.\n\nShe deep-throated me once, massaging my entire shaft with her throat muscles, and that was it. She pulled back just in time to catch the first burst in her mouth, and then she was jacking me with both hands to extract every last squirt.\n\n\"Oh... oh, gawd...\" I moaned pitifully as I kept firing away, emptying out all the tension inside me.\n\nWhen I finished, she tilted her head back and gaped her mouth open wide, showing me the creamy pool she'd collected there. And then with her head skyward and her mouth still open, she swallowed it all in a single big gulp.\n\n\"Mmm... yummy...\" She dabbed at her own lips with her fingers and popped them into her mouth to suck. \"You have very tasty cum.\"\n\nAnd with that, she stood up and sauntered over to my bed. From behind, seeing her straight red hair fan out, I started to believe this might actually be a girl named Alicia. With a pixie twirl, she spun and sat back on the mattress, spreading her legs wide and showing me the pale green thong she wore beneath her skirt. Then hopping her butt up, she reached down and began dragging it off, eventually pulling the thong past her feet and tossing it aside.\n\nThis time, when she spread her legs and sat back, I could see all the way to the red bush between her legs.\n\nI gasped. I'd been expecting to see a neatly trimmed blonde landing strip the way Amber always kept herself, maybe even a completely shaved pussy to hide the natural blonde hair. I certainly was NOT expecting a full red beaver.\n\n\"Holy shit...\" I exclaimed.\n\nShe smiled and said, \"Now, I believe you said something about shoving your cock up my ass?\"\n\nI felt a new twitch in my dick and my breathing became much more shallow. I felt the blood running out of my head at the realization that yes, this really was a girl named Alicia. Everything about her screamed Amber to me, face, body, lips. But it wasn't. I'd had Amber on the brain for so long that I was seeing her in other women.",
        "And now, with Alicia's obvious desire, all my little hang-ups and gamesmanship over Amber vanished into nothingness. Here was a hot babe that wanted to fuck. I was still confused about the whole Amber/Alicia resemblance, but fucking I could handle.\n\nAnd I had to admit, fucking Amber vicariously through her doppelganger would feel really, really good.\n\nAlicia grinned at my lustful gaze, pausing to slink out of her spaghetti-strap top and toss it away before reaching to her front-clasp bra. When she popped it the cups swung out wide under pressure, baring some big, beautiful tits to my view.\n\nEven her breasts reminded me of Amber. She gave them a little jiggle for me, and at that point, I simply turned my brain off.\n\nWith an animalistic growl, I darted forward and tackled Alicia onto the bed. She laughed in delight, again a familiar sound, as I kissed her and rolled us around for a bit before sliding down until my head was over her crotch as I flipped her skirt up and out of the way.\n\nI blew across her bush for a bit, watching the red hairs flutter slightly before I bent lower to her pretty pink pussy. My eyes rolled back in my head as I gave in to the sex act of tasting her.\n\nAlicia moaned, wrapping her legs around my head and practically suffocating me as I began to eat her out. Her taste was heavenly, and I simply couldn't get enough of it, drinking and slurping and nibbling to my heart's content. She came at least once. I wasn't really paying attention, too lost to my own lust as I shoved my tongue in as far as I could go.\n\nBut once my jaw started to get sore, I got up to my knees. Reaching down and grabbing her hips, I flipped her over and positioned her on all fours. Alicia practically meowed at me as she wiggled her butt in my direction. I stopped to remove my shirt and then bent to her skirt, now the only piece of clothing either of us was wearing along with her strappy high heels. I lifted the hem up and onto her back, tucking it into her waistband before letting my hands rove back over her asscheeks.\n\n\"You gonna fuck my ass dry now?\" She husked at me.\n\n\"We'll see,\" I said as I nudged the head of my erection at her brown star. \"We'll see later.\" I lowered my aim and then slammed forward, burrowing my rod through her tight pussy and pushing until I was balls deep inside of her.\n\n\"Aaaahhhh!\" she wailed as I took her. And before her first scream died out, I was thrusting again and forcing a new scream out of her throat. I took her roughly, pounding my crotch against her ass while she screamed at me to fuck her harder.\n\nI lay my chest down against her spine, reaching my arms around and getting two meaty handholds on her tits. Squeezing them roughly, I yanked back on her as I rammed my hips forward, skewering her cunt on my iron hard dick.\n\n\"Fu- fu- fu-\" she chanted, never finishing the word before I thrust again and caused her to loose her breath. At such a high speed, neither of us lasted very long.\n\nMy fingers turned into claws as I squeezed her breasts so hard I'm sure I bruised them. Alicia just barely beat me to climax, her hips suddenly jerking to the side as she threw her head back, red locks flailing in the air while I slammed myself in as deep as I would go and began spunking out my cum into her trembling body.\n\nHer legs were wobbly when we finished, and her arms trembled from the exertion of holding herself up. I finally let go of her breasts, letting her fall face down on the mattress in a limp heap of flesh. Her red hair haloed in a wide circle around her and I watched her naked back rising and falling as she gasped for air.\n\nBut I wasn't done. My cock was still hard and would be going soft soon. But I didn't intend to wait for that to happen. As Alicia dropped, I slipped out of her. But no sooner did she land on the bed than I was spreading her asscheeks in my hands and forcing my mushroom head into her anus.\n\nShe was relaxed in the aftermath of her orgasm, but she tensed up at the sudden pressure against her sphincter. Too late, I'd already punched in to the crown.\n\nPost-orgasm, my cock was terribly sensitive. Every millimeter of forcing my prick through her ass felt like coarse sandpaper against the delicate skin of my penis. I didn't care. I gritted my teeth against the pain and shoved deeper.\n\n\"Ugh...\" she groaned, breathing shallowly as I continued my descent. Her pussy juice still on my cock was some lubricant, but not much, and progress was slow. She was incredibly tight. Even if this wasn't her first time, she hadn't had anything back here for a long while.\n\nBy the time I was fully embedded in her ass, the sensitivity had passed and her tight anal muscles had revived my hardness. So reaching down and gripping her shoulders, I began to fuck her up the ass.\n\n\"Ugh...\" she groaned again as I began thrusting. I surveyed the naked skin beneath me, from her arms limp to the sides to the smooth curves of her back. I delighted in seeing her snow white ass being split in half by the angry purple of my cock shaft as I drilled in and out. And with that terrible grip on her shoulders, I closed my eyes and concentrated on fucking her.\n\nI was fucking Amber. Really I was fucking Alicia, but in my heart I was fucking Amber. I was having sex with Amber, making love to her, and hurting her as hard as I could all at the same time. I wanted to be with Amber. But I resented her for leaving me and I wanted to punish her. And I was taking it out on Alicia's poor body.\n\nHarder, I thrust down. Slowly, I pulled back only to begin the cycle again. It had to hurt. She wasn't lubed, and I was being anything but gentle. And yet, she moaned with each thrust, an aria of pleasure at being taken, even through the pain. And when I pushed down, she bucked her ass up to meet me.\n\nIt felt good.\n\nIN... out... IN... out... DOWN... up... THRUST... retreat.\n\n\"Fuck me...\" she whimpered.\n\n\"Fuck you...\" I answered.\n\n\"Fuck me...\" she cried.\n\n\"Fuck you...\" I growled.\n\n\"FUCK ME...\" she pleaded.\n\n\"Fuck YOU!\" I yelled at her angrily. \"Fuck YOU!\"\n\nI remembered the lingering sadness at Amber leaving me. I'd tried to drown it out in kinky sex with Brianna, but I never forgot how much I missed Amber. After a couple of years that sadness turned to resentment, and now that resentment was welling up inside me.\n\n\"FUCK YOU!\" I yelled, feeling the hot splash of a tear on my cheek.\n\n\"FUCK YOU!\" I cried, thrusting faster.\n\n\"FUCK YOU! FUCK YOU! FUCK YOU!\" I was sobbing as I was pistoning in and out of her poor, abused asshole. She wasn't even saying anything anymore, simply crying and drooling and lost to my assault.\n\nIn the end, I blasted out whatever was left in my balls. My cum splashed into her bowels, each successive thrust pushing more and more into the dark recesses of her ass. I poured out my soul into that orgasm.\n\nWhen I was done, I collapsed heavily across her back. Somewhere along that fuck, I'd met and then crossed my physical threshold, pushing beyond my limits, and now my body was shutting down.\n\nI felt the extreme exhaustion and dizziness taking over as my head lolled on the bed beside her, my cock still embedded in her rectum. And as my lips came to rest beside her ear, I mumbled, \"Amber... I love you...\"\n\nAnd then all faded to black.\n\n***\n\nI awoke alone in my bed. In the past few hours, someone had cleaned me up and tucked me into the covers. All was dark outside. For a while, I wondered how I got here.\n\nAnd then I remembered.\n\nI remembered the sex. I remembered the pain. I remembered the final orgasm and how mind-blowing it had felt. And that was it.\n\nNo jumble of emotions.\n\nNo riot of images in my mind.\n\nJust the peaceful clarity of a wonderful orgasm.\n\nI breathed in deeply, feeling the wonderful cool breeze of oxygen filling my lungs. And then with a relaxed smile, I went back to sleep.\n\n***\n\n\"Good morning, ladies.\"\n\nThe three of them turned to look at me from around from the dining table. Danielle smiled warmly. Cherys had a naughty grin on her face. And E-Beth smirked, \"How'd you sleep?\"\n\n\"Very well.\"\n\n\"And how was she?\" E-Beth continued.\n\nI chuckled. \"No comment.\"\n\nCherys remarked, \"None is needed. We could all hear you two.\"\n\nMy face paled. \"What, it carried that far?\"\n\nDanielle nodded. \"The whole house, and into the backyard. So yeah... everyone at the party heard you two.\"\n\nI was now blushing as red as Alicia's hair had been. \"Ahem... well, uh... where is she?\"\n\nJust then, the toilet flushed from the hallway bathroom. I turned to look and then the door opened. \"Good lord, do you have any idea how much it hurts just to take a dump?\" the new figure bitched as she walked out into the room. And then she saw me and stood up straight. \"Hi David.\"\n\nThe flirty vamp from last night was gone. The severe makeup with the hard lines and overdone black mascara was gone, leaving nothing but her pretty face, clearly recognizable. Her hair was pulled back into a familiar ponytail, looking more strawberry-blonde than red in the morning light. She was wearing a casual set of pajamas that I recognized. And the clincher was the wire-rimmed glasses that she always wore in the mornings or when she was studying, perched right over her sky blue eyes.\n\nI sighed. \"Good morning, Amber.\"\n\nFor a long thirty seconds, we both just looked at each other. Then, Danielle was the first to announce, \"I think we're done with breakfast, don't you?\"\n\nCherys was quick to say, \"Yeah. Uh, E-Beth, do you think you can give us a hand outside? There's still a lot of cleanup we need to do in the backyard.\"\n\n\"Right with you.\"\n\nHurriedly, the three girls scurried away, leaving Amber and I alone.\n\n\"Why?\" I mimed around her head to the hair.\n\n\"It worked, didn't it?\"\n\nI nodded and started for the sofa, sinking down on one side while Amber sat down at the other end while facing me. \"I knew it was you,\" I said quietly.\n\n\"Sometimes...\" She had an enigmatic look. \"I think there were three or four times you were certain, but by the time you started fucking me you weren't so sure.\"\n\nI shrugged. \"It was your bush. When did you grow it out?\"\n\n\"This past year. I haven't had a boyfriend in a while so there really wasn't a need to keep it shaved down.\"\n\n\"You dyed that red, too?\"\n\nShe nodded. \"E-Beth's idea. She figured that no matter how good the makeup or contacts or dye-job was, a blonde bush would give everything away.\"\n\n\"Red is... I mean I like red... but...\"\n\n\"I like the blonde better too,\" she managed a smile.\n\nI sighed and we sat there in awkward silence for another minute. \"Why, Amber? Why go to all these lengths to try and trick me?\"\n\n\"I had to be with you, David. One way or another. You know I talked to Danielle and Cherys, Kevin and Jen, and E-Beth and they all agreed on one thing.\"\n\n\"What's that?\"\n\n\"We needed to fuck. You wouldn't be able to clear your head until we did. And we couldn't fuck until you cleared your head. So we either get stuck in a chicken or egg cycle, or I dye my hair red and try to seduce you.\"\n\n\"That doesn't make any sense.\"\n\n\"Is your head clearer now?\"\n\n\"Yes,\" I admitted.\n\n\"Then stop trying to make sense of WHY. Just accept that it worked.\"\n\n\"To what end?\"\n\n\"The only end I ever wanted. To get us back together.\"\n\n\"I still don't understand why you want that so badly.\"\n\nAmber sighed heavily. \"I tried telling you on the golf course.\"\n\nI looked down in resigned apology. \"I don't think I was clear-headed enough to properly listen. Besides, every time we started understanding each other, it was time to hit another shot.\"\n\nAmber chuckled. \"I know. I don't think I've golfed that badly since I was fourteen.\" She exhaled and canted her head to the sides. \"I was never happier than when I was with you. There are no clich\u00e9s, David. Yeah, you're smart, handsome, and funny. But beyond that, when I'm with you I feel complete. When I'm with you I feel like I can just be me and you'll always accept me for it. So I'm a condescending snob sometimes. So I'm a bit of a slut sometimes. So I want to watch you plowing your cock up Maria's ass. So I want to get pounded by E- Beth's little brother. You accept it all. You love me for me. And on top of that, David, you will forever be the hero that rescued me... twice.\"\n\nShe hung her head. \"That's why I never said goodbye. I knew I had to go to school. I knew I wanted to go to Stanford. I thought I could handle the separation. I would leave you with Brianna, who was the kind of girl you'd have fun with but I knew you'd always pick me over her in the end. We would take our break, sow our wild oats, grow up a bit, and then I would come home to you.\"\n\nI winced, some of the old pain still coming back. \"Great plan, but you never called me. You never told me you would be coming home to me if I just waited.\"\n\n\"I couldn't make promises. I didn't have the conviction to be sure I would come back to you. And once we were apart, it just hurt too much to even think about you. I... I had other boyfriends. I tried to lose myself in them. But I could never be happy with them... they just didn't measure up to you.\"\n\n\"I know the feeling...\"\n\nShe managed a wan smile. \"I'd like to think you never found anyone who would measure up to me...\"\n\nI sighed. \"Amber, you did come really close to losing me.\"\n\n\"To who?\"\n\nI shrugged. \"Cherys and Danielle.\"\n\n\"Should I be jealous of them?\"\n\n\"Cherys is carrying my baby. They both will always be a part of my life.\"\n\n\"I can handle that. As long as I get to have you.\"\n\n\"Who says you get to have me?\"\n\nAmber's eyes looked pleading. \"Don't you want me?\"\n\nI waited to feel the anger boil up inside me, the resentment.\n\nBut it wasn't there. I wasn't angry at her anymore. Maybe Jen was right; I'd needed to unclog my pipes and clarity would return. Somehow, last night had purged it from me. And all that was left was how much I always loved Amber. \n\nAmber had hurt me but cutting herself off from me. She'd come back and asked my forgiveness. She wanted to love me, to be with me, and the fact was that I wanted her as well. I could choose to resent her and be miserable, or I could forgive her and be happy. It was an easy choice. So with one last sigh, I nodded. \"Yes, I want you. I love you, Amber.\"\n\n\"I love you too.\" Amber began to cry and I leaned forward, taking her head into my hands and I kissed her.\n\nIt was a slow, lingering kiss. It was a kiss charged with a low electric current that buzzed through our bodies. It was a kiss where our souls reunited, the kind they make romance movies out of. \n\nWhen we finally broke for air, Amber smiled happily up at me, both our eyes watery with happiness. Just then, her eyebrows screwed up. \"Uh, before we really 'get together' get together, I have some confessions to make. I did some pretty crazy things over the past three years.\"\n\n\"Did you kill somebody?\"\n\n\"Uh, no.\"\n\n\"Have a husband waiting for you in California?\"\n\n\"No,\" she giggled.\n\n\"Then I don't care about the rest. Whatever happened to you over the last three years don't matter. I love you Amber. Always have. Always will.\"\n\nShe was beaming as I swept her into my arms and kissed her again. And when I pulled away, I looked deep into her blue eyes and said, \"Now let's get to my bedroom. I want to make love with 'Amber' this time.\"\n\n\"Be gentle. I think my bruises have bruises right now.\"\n\n***\n\nSUMMER (August 2006)\n\n\"So everyone raise your glasses and please join me in toasting Kevin and Jen... Cheers dude!\"\n\n\"Cheers!\" *clink*\n\nI sipped at my glass and then went over to hug the blushing bride and groom. \n\nKevin pounded my back. \"Thanks for not embarrassing me TOO much...\"\n\n\"No problem. Just ignore the blinking webcam I have pointed at your bed.\"\n\n\"What?\" Jen shrieked.\n\n\"Just kidding... dude...\" I ribbed Kevin.\n\n\"Do I really say it that much?\"\n\n\"Dude, like, you think? Dude?\" I spread my arms and leaned back in a 'who me?' gesture. And then I stood up straight, reaching out my glass to Kevin's. \"For real, congratulations.\"\n\n*clink*. \"Thanks\"\n\n\"DAVID!!!\" came a shriek from across the room. Danielle was waving at me from a nearby round table. Next to her, Cherys was standing up, her violet dress looking so much like a tent around her hugely distended belly. And between her feet on the floor was a wet puddle. She was a little early.\n\nWide-eyed, I glanced at Amber, who was sitting beside me. \"Time to go.\"\n\nWith apologies to Kevin and Jen, who just waved me onward, I collected the girls and then we were racing to the hospital.\n\n***\n\n\"Oh, she's soooo adorable,\" Amber cooed over the baby, hesitantly reaching out to run her finger over the little leg. \"Aww... she has her mother's eyes...\"\n\nCherys was resting but awake, her bed angled up as she held her baby girl in her arms. I looked up at her and our eyes met, a twinkle of joy on both our faces as we gazed upon our little creation.\n\nSitting on the side of the bed, Danielle stroked her lover's hand and at the same time reached out to touch the baby's cheek. \"Hello little Ellie. Your parents are here.\"\n\n***\n\nFALL (September 2006)\n\nCherys and I stopped at our familiar spot. I was pushing the stroller, and Cherys went around to scoop the baby up and kneel beside the headstone.\n\n\"Hi Ellie. I want you to meet your namesake. I'm sure she'll grow up to be just as beautiful as you were.\" Cherys held up the baby's hand and waved it towards the headstone.\n\nLittle Ellie herself just looked around with brilliantly iridescent eyes and drooled a bit.\n\nCherys then smirked at me. \"Of course, if you grow up to be that pretty, we might have to keep your dad away from you.\"\n\n***\n\nFALL (October 2006)\n\n\"Hello?\"\n\n\"David! You'd better get the FUCK over here within the next TEN FUCKING MINUTES!\"\n\n\"Cherys? What?\"\n\n\"NOW!\"\n\n\"What?\"\n\n\"I just got back from the doctor's! She said I can start having sex again!\"\n\n\"Oh...\"\n\nCherys was panting with obvious arousal, even over the phone. \"Can Amber come too?\"\n\nI sighed, \"No. She's at the hospital tonight.\"\n\n\"Aww... but she's sooo good with her tongue...\" Cherys whined.\n\n\"I'll make do with what I've got,\" I promised.\n\n\"You'd better,\" she growled. \"You. Here. Fucking. *NOW*.\"\n\n***\n\nWINTER (December 2006)\n\nCherys and I stood together, watching the sun coming down over the horizon. In the warm tropical weather, a light breeze felt cooling and ruffled through our pure white linen attire. My shirt had the top two buttons undone and the pants stopped above my bare ankles. I liked the way the sand squished between my toes.\n\nCherys looked absolutely divine, with white flowers in her dark hair to go with the flowing white linen dress. The neckline was cut rather low, showing off her abundant cleavage. And whenever the light silhouetted her, I could make out every curve of her body. She held the bouquet tightly to her once-again flattened belly and smiled at me. \"I can't believe we're actually here. I can't believe this is really happening.\"\n\n\"Believe it,\" I said encouragingly.\n\n\"Thank you, David.\" Cherys waved her hands at the whole setup. \"This is perfect.\"\n\n\"You're welcome. But it's not just for you.\"\n\nShe nodded, and then we were ready. I tilted my head to the officiant standing beneath the white archway, and Pachebel's Canon began to play. Cherys and I both turned and looked up the white runner while our smattering of guests and family stood at attention.\n\nSide-by-side, Amber and Danielle started their way down the aisle, dressed in their own white linen dresses. All three outfits were different and uniquely flattering to each lovely young woman. Hairstyles, bouquets, and jewelry all were different and all were beautiful. I was embarrassed with trying to look at all three of them at once.\n\nMy parents were openly crying; it's not often you see both of your children getting married on the same day. Well, Cherys and Danielle's was technically a civil union, but the bonds in their hearts would be the same nonetheless.",
        "Julie and Robert, Amber's parents, looked on proudly. I was just happy that they approved of me. And Cherys' parents, while not 100% thrilled with their daughter marrying another woman, at least seemed happy for us all. Besides, they were the grandparents currently holding the baby.\n\nAfter Amber and I kissed, and Cherys and Danielle kissed, we all shared a look between ourselves. More kisses could wait until we were in private.\n\n***\n\nI'd heard that consummating a marriage on one's wedding day is often far from mind-blowing. You're exhausted from the ceremonies and pictures and once the reception ends your energy level just falls off a cliff.\n\nI had to admit, I was just like most men in that I was dead tired by the time I got Amber into our hotel suite. To be honest, like most men, sex seemed like a chore that I simply HAD to complete, if for nothing else but my ego. And so like most men, I resigned myself to straining myself to get an erection, laying down a few dozen thrusts, and getting it over with as soon as possible.\n\nBut then, most men hadn't just married a woman like Amber. And most men don't have a wife who could suck cock like Amber. Thirty seconds after we hit the bed, she had me harder than an iron bar. And still wearing her wedding dress, she straddled me on the bed and impaled herself upon me.\n\n\"Oh, David! I love you,\" she gasped as she rode me.\n\n\"I love you too, Amber,\" I said weakly. \"Forever and always.\"\n\n\"Cum for me, David. Cum and put a baby in me.\"\n\nMy eyes went wide and a surge of adrenaline shot through me as I thought about that. We'd timed things so that Amber would be off the pill and fertile during our honeymoon. And as I thought about my sperm wriggling their way into her womb, I gripped Amber's hips and started thrusting upwards powerfully.\n\nShe smiled and bent over to kiss me. I felt a little weird, but somehow it was appropriate that I was still in my shirt and she was still in her dress. Amber's tongue was in my mouth when she got herself off, moaning into our kiss as she came. And then with renewed focus she squeezed me internally, caressing and stroking until I blew into her wet pussy, sending my swimmers on their way.\n\nWe grinned and kissed happily, now fully joined together as man and wife. And at last, we finally stripped and then took a shower together, returning to bed clean and refreshed.\n\nMost men can't do it twice on their wedding night. I suppose I'm not most men.\n\n***\n\n\"Ohhh...\" Amber moaned as she came awake.\n\nThe sound woke me up also. Well, that and the warm wetness surrounding my dick. I looked down to see a raven-haired head bobbing in my lap. Then I turned to the side to see Amber's eyes fluttering as she pressed Danielle's face deeper into her crotch.\n\nCherys popped off my cock long enough to smile and say, \"Good morning!\"\n\nAmber giggled and exclaimed, \"With everything going on last night, I forgot about this part of the plan!\"\n\n\"Plan?\" I groaned as Cherys went back to sucking me.\n\nAmber turned her head to me and smiled. \"Last night was for each couple. This morning is for all four of us.\"\n\nDanielle lifted her head, licking her lips. \"Sorry we slept in a bit. We've only got a couple of hours before we're supposed to meet the family for brunch.\" She grinned and then looked to Amber. \"I'm so happy I have a new sister with such a great tasting pussy.\" And then she dove right back in.\n\nFor a while I just lay there and enjoyed Cherys' mouthwork. Just hours into my marriage and already all three girls were making plans without me? Then again... three girls... one dick. I suppose I couldn't complain. I trusted all three women to make my life wonderful.\n\nAt that point, I decided to take a more active role in our foursome. I reached down and lifted Cherys off my cock, flipping us over so that she was flat on her back as I started stripping away her brief bedclothes. When she was naked and panting, she reached all four limbs out to me. \"Come to mama...\"\n\nI was quickly between her legs, kissing my way up her belly and to her breasts, eventually wending my way to her lips so that our tongues could intertwine. And as she moaned happily, I nudged my erection into her wet snatch.\n\nNext to us on the king bed, Amber had already spun Danielle around so they could sixty-nine, their hands and lips roaming each other's bodies in a way that I always tried to match but could never quite accomplish. Girls just know how to do it a little differently.\n\nWith her hands clutching my shoulderblades and her legs wrapped around my ass, Cherys clutched her body to me, humping her hips urgently until she peaked and came, squealing happily before letting her limbs fall limply to the sides.\n\nDanielle looked over to her new wife, panting from her own recent orgasm. \"Switch?\"\n\nCherys nodded and I rolled off of her, my wet cock jutting out stiffly in the morning air. Danielle paused and bent down to suck me into her mouth, humming happily. \"I can taste you on him,\" she husked to Cherys, who just flashed a brilliant white smile.\n\nCherys settled herself on top of my wife, face-to-face and chest-to-chest. I watched as Cherys spread her legs, lowering her crotch down to she could rub her pelvic bone against Amber's, and with a shiver of delight the two gorgeous women came together for a happily exploratory kiss.\n\nIt wasn't the first time I'd seen them together. But the sight of my fantasy woman and my beautiful wife making out was still a thrill almost beyond my imagination. I smiled happily and then turned my attention to my loving sister, now lying on her back in Cherys' former place.\n\n\"Love me, little brother.\"\n\n\"Gladly.\" I settled over her and we both sighed happily as my shaft descended into her welcoming body.\n\nDanielle looked up at me with open emerald eyes that glittered in the morning light. She ran her hands around my face slowly as I pumped in a steady rhythm. We didn't speak for the next few minutes. I simply lowered my forehead to hers and we listened to each other breathing heavily as I focused on feeling my cock sliding in and out of her tight pussy.\n\n\"So good,\" she moaned after we'd been going for several minutes. I panted out my agreement, unable to speak now that I was getting really close to cumming. Cherys' wonderful snatch had already worn me down, and Danielle began whimpering softly as I started pumping her faster towards climax.\n\n\"Cum inside me, David. Fill your sister with your spunk,\" Danielle groaned. \"And then you can watch your wife eating it out of me.\"\n\nThat was all it took as I groaned and released, firing away with both barrels into Danielle's spasming pussy. Her whole body shuddered as she came from feeling my spunk entering into her body, laughing almost crazily as I bucked over and again, splattering shot after shot against her inner walls.\n\nWhen we were done, we cuddled and kissed for a long few minutes, my dick deflating slowly inside of her. And eventually, when we both caught our breath, I pulled out and flopped onto my back.\n\nCherys came over, ducking her head to my limp noodle for a mingled taste of both her favorite flavors. And Amber made good on Danielle's promise, cramming her tongue into Danielle's messy snatch and then raising up to show me my own creamy jism on her tongue.\n\n\"Naughty boy,\" Cherys admonished me as she leaned over me, still caressing my prick with her hand. \"Did you just cum in my wife?\"\n\nI grinned sheepishly. \"I guess you could say I did.\"\n\n\"Well, you must make it up to me.\" Cherys then moved to sit on my belly, her wet pussy oozing love juices across my stomach. \"You must pleasure my tits.\"\n\nShe hefted the round melons in her hands, the big globes never having shrunk all the way back to pre-baby size. I groaned in mock disappointment, \"Aww...\"\n\n\"No complaints. Suck!\" She lowered a swollen nipple to my mouth. I wrapped both hands around and began slurping away. And when the floodgates opened and my mouth began to fill with melon juice, I started sucking harder and happily.\n\n\"Mmm... save some for Ellie,\" Cherys sighed happily. Her breasts were still sensitive and she was happily aroused by the sensations. \"That little girl is an orgasm-inducing machine.\"\n\n\"Lemme taste,\" Amber said as she came over and latched onto the other one. Together, as man and wife, Amber and I suckled at Cherys' teats for a few minutes.\n\nAt that point, Danielle had recovered and sat up. \"Hmm... three chicks and one cock, and that one out of commission. Whatever shall we do?\"\n\nDanielle was a bad actress. But Cherys played along in the same forced voice. \"Hmm... oh, I know!\" She then slipped off the bed, running naked out of the room. We'd gotten adjoining suites at the hotel, a private connecting door making for easy access that should have alerted me that our two couples would be uniting a few times during the shared honeymoon. When Cherys returned, she was sporting a new harness around her waist, a double-sided strap-on dildo with the smaller end already embedded in her own cunt.\n\n\"David, Amber, meet Fred the Second.\"\n\nAmber just started giggling as Cherys clambered onto the bed, showing off the realistic looking head and veiny shaft. Cherys continued, \"We picked one out based on David's cock.\" And then she looked at me with her trademark grin, \"Only bigger, of course.\"\n\nAnd without further ado, Cherys mounted Danielle and pushed her way inside. The new couple wrapped their arms around each other happily and began pumping away at each other like it was second nature.\n\n\"Aww, that looks like fun,\" Amber complained.\n\nI motioned to my limp cock. \"Wish I could help you.\"\n\n\"Not fair. Both of them already got to fuck you this morning.\"\n\nI leaned in and kissed my wife. \"That's because I saved the best for last. But I WILL need your help.\"\n\nAmber grinned. \"That's what I'm here for.\" With that, Amber slid down the bed and took me into her mouth. Have I mentioned how much I love my wife? Have I mentioned how good she is at this? In no time flat, Amber had me ready to go.\n\nWe settled into a comfortable missionary position, and for the third time this morning, I felt myself penetrating into a tight, wet pussy.\n\n\"Oh, Cherys! Cherys! FUCK!\" Danielle came crashing over into a new climax beside us. And from the way Cherys was panting, the other end inside her own snatch was doing a good job on her as well.\n\nAs they relaxed for a moment, Danielle kissed her wife and said, \"My turn.\" The two women then got up and went through the process of unbuckling and re- buckling their toy. Amber and I watched them get back into position, this time with Danielle on top. And then the room was filled with the arias of passion as both couples resumed their fucking motions.\n\n\"Oh... oh... oh...\" Amber chanted each time I thrust into her. And with her hands clawing at my back, I drove us both up the proverbial wall of ecstasy and Amber bit down on my neck as she came, marking me and simultaneously giving me enough pain to shock me away from the edge of my own orgasm.\n\nI felt a surge of adrenaline shooting through me and I bodyslammed Amber back into the mattress, dislodging her teeth from my neck while I fucked her hard through her climax. \n\nI was growling loudly as I pounded her. Amber was shrieking deliriously as the feelings swept through her body. And Danielle and Cherys weren't far behind, both of them announcing their pleasure with fresh howls of their own. I could only imagine how things must have sounded outside in the hotel hallway.\n\nAfterwards, Danielle pulled out of Cherys and flopped onto her back. \"Man, thrusting is hard work!\" she complained. Cherys was just giggling in her post- orgasmic afterglow.\n\nMeanwhile, Amber sighed and stopped my thrusting as she glanced over at the glistening phallus strapped to Danielle's crotch. \"Can I try it?\"\n\nMy eyes went wide in alarm and instantly my dick started to go soft. \"On me?\"\n\nAmber laughed, \"No! I want to ride it.\"\n\nI chuckled and then slid out of her. \"Have at it.\"\n\nAmber got onto all fours and crawled over to Danielle. My sister panted in exhaustion, but held the cock upright while cautioning, \"You're going to have to do all the work.\"\n\n\"I can handle it.\" And with that, Danielle straddled the fake cock before slowly guiding her wet folds down and around it. Once she got herself settled all the way to the base, she rotated her hips experimentally and then turned to face me. \"It IS bigger, but I definitely like the real thing better. Your dick is so much hotter.\"\n\n\"Hey!\" Danielle mock protested. \"It's not the size. It's how you use it!\" And with that, my sister began to buck her hips upwards while simultaneously reaching up to caress Amber's round tits.\n\n\"Mmm, your dick feels good Danielle. But not quite like David.\" Amber grinned and then yelped as Danielle pinched a nipple, sending Amber into another giggle fit. \"I will admit though, you're very good with your hands.\"\n\n\"I know,\" Cherys cut in, directing Danielle to lay her head down. This forced Danielle to drop her hands away from Amber's tits, a fact that Cherys apologized for. \"Sorry, but I need those hands on me right now.\"\n\nWith that, Cherys faced back towards Amber, then straddled Danielle's head and lowered herself into position. Danielle got the hint quickly, reaching up to guide Cherys' thighs. Danielle's tongue first went to Cherys' asshole while her fingers embedded into her wife's snatch.\n\nAmber was still grinding herself on Fred the Second, and she looked back at me forlornly. \"Aww, now my tits are lonely. Do you think you can pick up where your sister left off?\"\n\nI was about to leap into action, but Cherys interrupted. \"I'm on it. After all, it was my wife who left you high and dry and my fault I took her away.\"\n\nAmber tossed a wicked glance back at me before leaning forward and kissing Cherys. For her part, the raven-haired beauty brought her hands up and began pawing at Amber's breasts.\n\nSo there they were, three beautiful women in a sexual triangle, Amber and Cherys riding Danielle while caressing each other. They even had their replacement cock, and for a few seconds I whimpered pitifully. I wasn't needed, and with Amber stopping us just before I could cum, my cock was twitching rather unhappily.\n\nCherys started smiling with her eyes closed even as she was kissing Amber. She turned Amber's head to the side, prompting my wife to start raining kisses down Cherys' cheek and down her neckline. And when Cherys opened her eyes to look at me, there was a feral gleam in her luminous gaze.\n\nShe began whispering something into Amber's ear, and for her part, the gorgeous blonde just shuddered in an apparent orgasm around Danielle's fake cock in her pussy. Once she recovered, Amber pecked Cherys on the lips and then started kissing her way down Cherys' torso, pausing for a time at the Cherys' swollen breasts to get a fresh taste of baby-milk. But eventually, she moved further down until she was practically laying flat and forwards, her head beside Cherys' hips.\n\nOnce Amber was in place, Cherys leaned over my wife's prostrate body and put her hands on Amber's ass. Cherys looked up at me and husked, \"Now David, you've been so patient. Come get your reward.\" And with that, Cherys gripped Amber's asscheeks and spread them wide.\n\nThe positions could not have been comfortable. Danielle was supporting almost all of both Cherys' and Amber's weight on top of her, and the two other women were folded over like so much of a naked pile of flesh.\n\nAnd I was about to start fucking into it.\n\nI retrieved the Astroglide from the honeymoon bag, and Amber was already moaning in anticipation. Danielle was grinding her hips, stirring the fake cock in Amber's honeypot while Cherys held open her anal gateway. With a relieved smile, I got into position, lubed up myself and my wife, and then began pushing my cock forward into my wife's ass.\n\n\"Oh, FUCK!\" Amber groaned as she started to feel the double penetration. Cherys held her cheeks open all the way until I was balls deep in Amber's buttery asshole, and then she let go to wrap her hands around my head and pull me to her for a hot kiss.\n\nWhen we broke for air, Cherys shivered in pleasure at the total eroticism of the moment, as well as Danielle's talented tongue, and then she began a running commentary to the other girls.\n\n\"Oh, I wish you could see this Dani! His cock looks so big and dark and hard as it stretches open Amber's little asshole. He's pulling back, and back.\"\n\n\"Fuck, Amber! I can't believe you can fit that entire thing up your ass while Danielle's got Fred Two in your cunt! And... oooh... lick that spot again Dani! Yes...\"\n\n\"Oh, Dani, he's grabbing Amber's hips, lifting her up, and then pushing her back down. His cock is up Amber's asshole and he's fucking you with her! He's actually fucking her body on top of your dildo! Oh, FUCK! I love being a woman but sometimes I really wish I had a dick so I could feel what a tight pussy is like around my cock!\"\n\nAmber let out a guttural groan, and then next time I pumped my cock into her chute, she started cumming, moaning \"Ohhhhhh!\"\n\n\"Dani! Amber's cumming. She's cumming on your cock! David's pumping her ass and she's cumming! Can you feel her honey dripping down onto your crotch? As soon as she gets off, I'm going to lick all of her cum off your cock and then I'm going to lick all her cum from your pussy. Would you like that?\"\n\n\"Ohhh... you DO like that idea. Oh, Dani! Shove another finger up my ass! Another! Yes, three, dammit! Fuck my ass with your whole fucking hand! Oh, sweetie, I love your tongue Dani!\"\n\n\"Ohhhhhh!\"\n\n\"Holy shit! Amber's cumming again! She just came a minute ago and now she's cumming again! Wow, you really like this DP stuff, don't you Amber?\"\n\n\"Ohhhhhh!\"\n\nCherys began moaning to join Amber's latest orgasm. \"Oh, gawd. I'm cumming! I'm cumming!\" I reached up and pulled Cherys down, pressing her chest against Amber's back so that all three women were quite literally stacked one on top of the other. And while Cherys' hips bucked on top of Danielle's head, I rubbed at all the flesh in front of me, letting my hands drop all the way to Danielle, then to Amber, and to Cherys. I fucked into the middle of the three of them, gleefully splitting Amber's ass wide open while I got my hands on all three beautiful women. And finally, I hit my pleasure limit.\n\nCherys meanwhile, had recovered somewhat and she picked up her commentary. \"David's grunting! He's grunting like he does before he cums! Get ready Amber! He's gonna fill your ass with his spunk! And I'm going to slurp it out of you! Here it cums!\"\n\nRight on schedule, I bucked forward and began filling my wife's ass with all my hot, creamy jism. Involuntarily, my hips twitched and fired another load. And another.\n\nAnd another.\n\nAmber was moaning her \"ohhhs\" constantly and Cherys was babbling something incoherently but very excitedly. And somewhere below, even Danielle was moaning despite no one actively stroking her.\n\nI was gasping for air when I finished, and with my legs wobbly, I pulled out of Amber's ass and collapsed onto the bed. And like an unstable jenga tower with the critical block removed, the three girls toppled to the bed as soon as my cock exited.\n\nCherys fell backwards, banging her shoulders into the headboard. Amber was half-passed out after the double-penetration, rolling over onto her side. And Danielle was literally soaked in sweat, exhausted from supporting all the weight on top of her and half-suffocated. But there was no mistaking the silly grin on her face.\n\nTrue to her word, Cherys started by deepthroating Fred the Second, making sure she got every drop of Amber's honey before unbuckling the harness and then shoving her tongue into Danielle's crotch.\n\nMy sister was so primed that Cherys had her cumming in less than a minute, and afterwards Cherys quickly bounded to a twitching Amber, rolling her onto her stomach and then planting her nose into Amber's asscrack while she began to hoover my cum directly from my wife's ass.",
        "And it was just the start of my honeymoon with all three gorgeous babes.\n\nI had such a fucking great life.\n\nAmber was laying nearby, her chest heaving for oxygen, which did wonders for her twin peaks wobbling up and down like there was an earthquake. I reached out and held her hand. \"Wow... I don't know if we can top that,\" I gasped.\n\nAmber started laughing, and then turned her head to look at me. \"Well, I promised E-Beth she could join us tonight.\"\n\nI changed my mind. I had a fucking INCREDIBLE life.\n\n***\n\nI had to slap my own cheek to verify that I was awake and this was real. It couldn't be. I had to be dreaming.\n\nAmber, Danielle, Cherys, and E-Beth were all lined up, standing on the floor with their chests flat on the king-sized bed. Four naked asses, glistening in the light. Amber promised me each asshole was already lubed.\n\n\"No pressure, David,\" Amber warned. \"But we're not bringing any dildos to help you out. It's all on you to pleasure us.\"\n\nEight holes for me to play with, lined up in a double row.\n\nAssuming I survived this, I had a fucking UNBELIEVABLE life.\n\n***\n\nWINTER (January 2007)\n\n\"Hi honey! I'm home!\"\n\n\"Up here!\" Amber hollered from up the stairs. I paused for a second to orient myself, trying to remember the layout. I still couldn't believe Amber's parents had bought us a house as a wedding gift. But I suppose marrying into a fabulously wealthy family has its perks. And more importantly, the house was just a block away from Danielle, Cherys, and little Ellie. \"I'm in the bedroom!\"\n\n\"Just where I like you, honey!\" I called as I started up the stairs, loosening my collar in preparation for a good shagging.\n\nThe only thing was, Amber was fully dressed and sitting upright on the bed. I'd sort of been expecting her in lingerie, leaning back with her own fingers rubbing her pussy when I arrived. Still, even if she hadn't been planning on immediate sex, there was no mistaking the big smile on her face.\n\nShe held her hand out to me, an off-white stick of plastic in her hands. She rotated it over until I saw the two parallel pink lines. My eyes went wide as a new smile began tugging at my cheeks.\n\n\"That's right. I'm pregnant.\"\n\n***\n\nSPRING (March 2007)\n\n\"Cum inside me, David! Cum! Fill me with my little brother's spunk! Fill me with your incestuous sperm!\"\n\nMy hands squeezed at Danielle's tits from behind, pulling her almost upright as I held my hips tight against her ass, my cock spewing load after load into her sopping wet pussy.\n\nWhen I was done shooting, I slowly lowered her back until her she could support herself on the couch cushions, rubbing her breasts happily in my pleasant post- orgasmic mellowness. Eventually, I let go of her and backed away, my cock exiting her with a wet plop.\n\nDanielle louvered herself up and onto the couch, massaging her knees against the rug burn.\n\n\"Who wants it?\" I asked.\n\n\"Mmm, I do...\" Amber giggled and got out of her chair at the dining table. At three months pregnant, she automatically covered her baby bump for protection as she walked around to the other side of the couch. Cherys faked getting angry while my wife settled between Danielle's knees and bent her head to begin slurping our mingled fluids out of my sister's twat. But just then Ellie started giggling and Cherys leaned down to fuss over her baby.\n\nDanielle moaned, \"It's SOOO not fair. David got both of you pregnant and I'm left to live a childless life.\"\n\nCherys snorted. \"You're just like a guy. You get all the fun of playing with a baby and none of the damn backache.\"\n\nDanielle shrugged, and then gasped as Amber hit a particularly sensitive spot.\n\n\"Besides,\" Cherys continued. \"I know you. You don't really want a baby. It just turns you on to think about David's sperm swimming inside you.\"\n\nDanielle's focus drifted as she sighed happily. \"Yeah...\"\n\n***\n\nSPRING (May 2007)\n\n\"Mmph,\" Amber moaned, her voice muffled by my cock filling her mouth. She was flat on her back, her head almost off the side of our bed while I stood and fed her my meat. She gobbled me up further, using her hands to tug my ass closer and shove every last inch into her mouth, and once she had me completely deep-throated, her eyes popped open as she came.\n\nE-Beth picked her head up from between Amber's legs, her own mouth responsible for Amber's latest climax. And once Amber stopped shaking, E-Beth crawled over and stared her best friend in the face. \"Okay, you got your orgasm. Now PLEASE will you let him fuck me?\"\n\nAmber let me out of her throat, coughing slightly before nodding. E-Beth quickly got onto all fours right beside my wife, and Amber fed my rock hard erection into the waving wet pussy just a few inches from her face. Once I got the head in, E- Beth started moaning and I rammed the last few inches in one thrust. Amber slid her head over beneath our joining, letting her tongue to wrap around E-Beth's clit while I was pumping the pretty woman, and quickly E-Beth was moaning up a storm.\n\nAmber kept licking but she tapped my leg to get my attention and then indicated with her eyes to my bedside table.\n\nI grinned and mouthed an 'I love you' to her before reaching out with my left hand and sliding open the drawer.\n\nE-Beth had no warning before suddenly Amber was holding her asscheeks to the sides and I was squirting the lube into E-Beth's rectum. She had just stopped her own thrusting and was craning her head around to see what the hell was going on when I smoothly popped out of her pussy and slammed my cock up her ass. Instantly she whipped her head back forward and shrieked.\n\n\"Oh, I'm going to get you for that!\" she screamed at both of us.\n\nAmber was just laughing into E-Beth' crotch and I started pounding away. E-Beth didn't bother to try and get revenge, instead throwing her hips back against my invading cock before clenching up all her muscles and cumming, causing my own eruption into her asshole.\n\nLater that evening, we both kissed E-Beth goodbye. \"Cum again soon,\" Amber teased.\n\n***\n\nhttp://messaging.myspace.com/\n\n---\n\nFrom: Claudine\n\nDate: May 13, 2007 8:10 AM\n\nSubject: RE: Two years...\n\nBody: I KNOW. I can't believe so much has happened in the last two years. Your daughter, getting married, and now another baby on the way! I think I have a lot of growing up to do before I even think about those things. If what has happened to you is normal, my next ten years should be quite an adventure. You promise I can always ask you for advice about growing up, yes?\n\nSchool is good right now, but it's more work than I thought. Are American Universities any easier? Maybe I should try to transfer close to you! Do you think Papa will let me move? Probably not, but I can hope! ;-)\n\nTake care, write back soon, now get off the computer and go make love to your wife!\n\nThank you always my miracle,\n\nClaudine\n\n---\n\nI closed my laptop and turned back to the bed. With a little smile, I raised the covers and slid myself in beside the warm body of a beautiful woman.\n\nAmber stirred awake as my lips ran softly across her cheek and lips.\n\n\"Mmm, morning, babe,\" she murmured with her eyes closed.\n\nI stopped with the butterfly kisses and pressed more firmly against Amber's lips, stroking her cheek with my fingers and kissing her with urgency.\n\n\"Mmm!\" she giggled and returned my fervor while my hands ran down over her breasts. \"You're frisky this morning.\"\n\n\"Claudine ordered me to get off the computer and make love to you.\" My lips latched onto the side of her neck as my hands began to tug her pajama pants downwards.\n\nAmber giggled again. \"I always knew I liked that girl. Someday I hope I'll meet her.\"\n\n\"Someday,\" I mused. \"But right now, all I can think about is you.\"\n\n***\n\nSUMMER (June 2007)\n\nShe was gorgeous. Her black hair was straight and smooth and hung like a silk curtain over her shoulders. Her face was a work of art, with high cheekbones and luminous eyes. Her light skin was soft and unblemished.\n\nShe was twenty-eight, with all the regal bearing of a confident young woman sure of her place in the world. Her tits were so big, even bigger after the baby. They still were so round and so indescribably magnetic. And as I thrust my hard cock into her clenching pussy, her irises flickered in the light, each hue more beautiful than the last.\n\nAs she floated on Cloud 9 in ecstasy, she intertwined her hands with mine and looked deeply into my eyes. \"Will you give me another baby, David?\"\n\nI smiled and thrust again. \"Let's get this one out of Amber, first.\"\n\n\"But you will?\"\n\nI nodded.\n\n\"Promise?\"\n\nI smiled and nodded again. And just like that, Cherys' eyes fluttered as her body trembled in orgasm. I wasn't far behind.\n\n***\n\nSUMMER (July 2007)\n\n\"I love you, David.\"\n\n\"I love you, Amber. Forever and always.\" I reached up and squeezed her breasts, already big to begin with, but she'd had to switch to double-D's by this stage in her pregnancy.\n\nAmber rose and fell slowly, her big belly hanging out as she carefully controlled her thrusting on top of me. \"Do you mean that?\"\n\n\"You're my soulmate Amber. You know I mean it.\"\n\n\"I just like to hear you say it.\"\n\n\"I love you, Amber. I love you. Forever and always. I love you,\" I said in a low, quiet, but sincere voice.\n\nShe rose and fell on me, closing her eyes to hear my chant.\n\n\"I love you.\" Another stroke. \"I love you... I love you... I love you...\"\n\nA few minutes later our love was shown physically, my eruption exploding inside her body and meeting a crashing wave of our own. We would be together forever. And even if my life had not gone exactly the way I might have thought, I could not argue with the results.\n\n***\n\nSUMMER (August 2007)\n\n\"Can you believe it?\" Danielle touched my arm, pulling my attention but not my gaze away from the hospital bed.\n\nAmber was resting but awake, her bed angled up as she held her baby boy in her arms. One of my hands was on my son and the other on my wife's arm.\n\n\"Believe what?\" I asked absently.\n\nCherys hoisted Ellie in her arms and leaned over. \"You do know what today is, don't you?\"\n\nI looked over and my brow scrunched up as I was seized by d\u00e9ja vu. \"You mean?\"\n\nAmber beat me to it. \"Today is little Ellie's birthday, too.\"\n\nDanielle smirked. \"Your son was born EXACTLY a year after your daughter.\"\n\nI reached my left arm around Cherys and held Amber's hand with my right. Danielle snuggled into Cherys' other side, playing with little Ellie's leg. \"Well, I guess it's fitting. We'll all be celebrating birthdays together as a family for a long, long time.\"\n\n***\n\nTHE END"
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "sister",
        "threesome",
        "mff",
        "group",
        "orgy",
        "anal"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-book-of-david-ch-14"
}