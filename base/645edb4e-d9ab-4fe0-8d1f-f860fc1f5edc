{
    "title": "Camp Natural",
    "pages": [
        "Hello, here is my entry into the Nude Day contest. Any feedback and votes will be greatly appreciated. Thank you.*\n\nSpecial Thanks to ThisNameIsntTakenYet for editing this story for me.\n\n*\n\nGrowing up, Cameron had always wanted to spend the summer at camp, but his parents could never afford it. Cameron had worked a full-time job during his junior and senior years of high school to help his parents out with the bills. Any money that he didn't give to help his parents went towards his college savings. Cameron had gotten nearly a full-ride scholarship thanks to his excellent grades and still finding some time for a few extracurricular activities. Now that he had some extra money, Cameron decided he would finally indulge in his boyhood dream of going off to camp before he had to go out on his own into the world.\n\nCameron spent nearly a month deciding between several different camps that he wanted to attend. The deadline was approaching for camp registration as the school year wrapped up. Cameron had found a website that linked multiple camp registrations all in one place, so that all he had to do was fill out the info form once, and then it would send it out to any of the camps that he had an interest in. It made comparing the price points and the different things available from each camp easier. There was even a questionnaire where it matched you up with camps that you might be interested in based on your answers.\n\nA couple of days later, Cameron was working on his computer when he got an email about a new possible match. Cameron opened the email, and the first part of it was an email from someone who was the head of camper affairs at Camp Natural. He was reluctant to open the email, but it had been sent by someone who had an official college email from the school in the Mideast U.S. that he was going to be attending next Fall. The body of the email read:\n\n\"Hello Cameron. We are an exclusive camp, and we just had a place open up for the upcoming session and were wondering if you are interested in attending. We are affiliated with Northwestern University, who contacted us about you. We offer college credits to returning campers who become camp counselors, so if you were to attend our camp this year and find it to your liking, then you could return the following summer as a camp counselor. Attached, you will find more information about what we offer at camp and what you can expect once you attend. If you have any questions after you read through the information, feel free to contact me about anything you would like to know.\n\nAttached were a couple of PDFs about the camp. Cameron was still a little wary about clicking on the PDF, so he opened the university's class catalog and entered in the class code that had been mentioned in the email. There was a match, and when Cameron opened it up, it confirmed there was a summer working internship at Camp Natural. Now that he was a little more confident that this wasn't some scam meant to infect computers with viruses, Cameron opened the first PDF and was shocked. It looked just like all the other camp brochures, showing the grounds of the camp and listing all their events. The only difference was, where the other brochures featured fully clothed campers; this one showed the campers doing activities such as archery and canoeing all in the nude. Everyone shown in the pictures were eighteen or slightly older college-age students. As Cameron read on, taking longer since he was distracted by the naked bodies, he learned that Camp Natural was a nudist camp where campers were encouraged to learn what it was like to live a nudist life. Clothing was allowed for the most part in clothing-optional areas and events, but a good amount of the experiences would be no clothing allowed. After Cameron read through the brochure, he clicked on the second attachment, and it was a detailed itinerary of all the classes and events that they would be having during camp. The list of activities was easily twice as big as any of the other camps that Cameron was thinking about attending.\n\nCameron sat in his chair, staring at the brochure. There was a blonde in the middle of diving for a volleyball. Cameron's eyes kept on being drawn to her. Cameron was too busy and socially awkward to have had a girlfriend yet. The fact that he was eighteen and hadn't even had his first kiss yet was a constant source of shame. Cameron was used to seeing naked girls from when he watched porn on his computer, but there was just something so natural about the girls in the images that drew him in, and it wasn't just the fact that they were all attractive, even with their varying body types. The guys featured in the pictures seemed to be having fun too, and even though Cameron wasn't into guys, he felt a little reassured by their presence in the brochure. If it had been nothing but drop-dead gorgeous models, then Cameron would have suspected that they were just trying to prey on his urge to see beautiful girls naked. Cameron closed the email for now and did his best to focus on his schoolwork. His thoughts kept on returning to what he was just presented with. He wanted to attend, but he was also nervous. Cameron had never been naked in front of anyone else before, let alone a whole camp of people. He was going to have to think about it. He still had a week before the registration process closed.\n\nCameron tried going about his day to day activities as usual, but with each day that passed, he felt more anxious. The thought of others seeing him nude made him nervous, but the idea of seeing others naked was enticing.\n\nCameron decided to try and experience the natural life in the comfort of his own home. His parents usually didn't get home till close to six pm, so he would have about three hours to be nude when he got back from school. It felt weird walking around his house and doing everyday things in the nude. Even with all the blinds being drawn tight so that no one could see him, Cameron felt vulnerable. He constantly checked the time, and even though he knew he would have the house to himself for hours, he was worried that at any moment, one of his parents might come bursting through the door. Cameron kept his clothes, a pair of loose basketball shorts and a shirt nearby so that he could throw them on quickly. He kept on looking out the window every time a car drove by to make sure it wasn't his parents. That first day Cameron made sure to be fully dressed well before his parents came home. After how he felt that first day of practicing being nude, Cameron couldn't see himself going to the camp and looked at the couple of camps he had been contemplating to attend before he had received the email from Camp Natural.\n\nThe next day after school Cameron got nude again as he did his usual after school activities of making a snack, taking care of his chores, doing his homework, playing video games, and watching T.V. Cameron still felt a little uncomfortable that day, but not as bad as the day before. By the end of the week, he was feeling more comfortable being nude in his home. Cameron knew that he still had a long way to go before he would be bold enough to do this in front of other people, but the thought no longer filled him with crippling dread.\n\nOn the last his day before the deadline, Cameron made sure to shut himself up in his room and lock the door, before his parents got home, but he stayed naked. He clicked on the link in the email that had led to the secured website of Camp Natural and finished filling out the application and financial pages. Cameron's heart was thumping as he submitted his application. He then messaged the camp director and informed him that he had just signed up. Cameron felt some anxiety about going to the camp, but he was also excited to do something that seemed so wild. Cameron had spent his whole life making his decisions based on what was safe; him stepping this far out of his comfort zone was a real accomplishment for him.\n\nCameron had a month before school ended. Along with studying to maintain his grades, Cameron also spent that time becoming increasingly comfortable being nude. It got to the point where Cameron was looking forward to it every day, and he would rush home to try and get as much natural time in as possible. During his second week of practicing, Cameron decided to step up his experimenting by hanging out in his backyard for a bit while in the nude. He waited for an overcast day since he didn't want to get a full-body sunburn under the harsh Arizona sun, and when the day finally arrived, he stripped and then stepped out into his backyard. Cameron felt that same thrill and anxiety that he might be seen. Their backyard was fenced in, and since none of the houses nearby were two stories, the only way one of his neighbors could see him was if they walked up and peeked through the small gaps in the fence. Cameron set a beach towel down on their swinging porch chair, and he idly rocked back and forth with his foot as he read. Cameron used to love sitting out here and doing this as a kid, but he had stopped doing a lot of the things he enjoyed so that he could focus on his goals and what was expected of him. Every cool breeze felt terrific on him. Cameron had planned only to spend a small amount of his natural time outside, but he was so comfortable out there that he ended up losing track of time. When he heard his mother's car pulling into the driveway, he had to make a nude sprint back up to his room so that he wouldn't get caught. Cameron thought about what it would be like to be in the lush cool woods of Camp Natural, and he found himself looking forward to it more and more.\n\nThe school year ended, and Cameron found himself on a plane going halfway across the country to go to a nudist camp. In the weeks leading up to his trip and absence for a month, Cameron was prepared to deflect questions about where he was going and had even looked up camps near Camp Natural so that he could say he was attending one of those, but no one pressed Cameron on his summer plans. His friends and parents seemed kind of confused about why he would want to go to a summer camp when he was eighteen. Cameron didn't blame them for thinking it was a little weird, but when he mentioned how it was also affiliated with the university he was going to be attending, it made it seem more acceptable to his parents. Cameron had always been the least wild of his two siblings, two older sisters, so his parents didn't seem to worry about Cameron's decisions as much. His parents had liked to joke for years how Cameron was a little adult as he was growing up and wasn't like most other kids. When Cameron had first heard them say that he had been mad, but looking back on it, he realized that did sum him up pretty well.\n\nCameron arrived at his destination around five pm in the city the university was in. Cameron had arrived two days before the bus was scheduled to come and take the campers to Camp Natural. Cameron had arrived early so that he would have time to get used to the new time zone and could explore the city that he was going to be living in next Fall.\n\nCameron was so tired from his flight that even though he wanted to go out, once he got checked into the hotel room, all he was up to was ordering room service and watching T.V. Cameron spent this time in the nude. Now he didn't feel like he was forcing himself to experiment with the nudist lifestyle, and he was starting to enjoy it more and more.\n\nThe next day Cameron woke up feeling refreshed and took a lyft over to the university so that he could tour the campus and the surrounding area. Cameron had spent his whole life living in the desert, being in a place that was so green with trees made him breathe easier for the first time in his life. Cameron had never been one of those people who were desperate to escape their home city, but he could easily see himself living here if the first impressions held steady. Cameron bought some supplies that he couldn't fly with and picked up a few odds and ends that caught his eye or that he couldn't go without, and then returned to the hotel for one lazy last night in a big bed.\n\n***\n\nCameron woke up at seven am and started to get ready. He wished that he could sleep in more, but to be fully prepared, both mentally and physically, he knew that he was going to need this time. Cameron checked out of the hotel and waited downstairs for the bus. About twenty people were milling about in the lobby; half of them looked to be around the same age as Cameron, so he wondered if they would be going too. Cameron wanted to know if they were going as well, but it wasn't as if he could just walk up and say, 'hey, are you going to the nudist camp too?'\n\nCameron couldn't stand waiting idly, so he opened a book on his phone. While he was reading, Cameron noticed a cute redhead sitting on the couch across from him that was facing away. All Cameron had seen of her was the side of her face and back of her head as she sat down. Cameron wished he had seen her face better before he sat down. The idea of seeing naked girls his age had been one of the main perks of going to Camp Natural, but now that he was surrounded by cute girls, He started to get nervous again.\n\nA handful more people sat down in the hotel lobby, and then the bus arrived, right on time. Cameron looked up from his book for the redheaded girl, but she was gone. There was no way she already made it to the bus. Cameron's heart dropped; she must have been checking in to the hotel. With a sigh, Cameron gathered up his stuff and started to slowly walk towards the bus. His anxiety was kicking in, so he made sure he would be the last person in line to get on the bus, the last thing he needed right now was to end up trying to get on the wrong bus with a line of people behind him. The driver was standing beside the door of the bus, checking everyone's tickets to make sure that they were getting on the right bus. Cameron imagined how much of a surprise someone might get if they got on the wrong bus and ended up in the land of the nudists.\n\nThe bus driver looked over Cameron's ticket, pointed him to one of the storage bins that skirted the bottom side of the bus, and then welcomed him aboard. There must have been another stop or two before this because the bus was nearly full and was slightly abuzz with sleepy but excited conversations. Almost all the seats were taken, and Cameron didn't want to sit next to someone he didn't know if he could help it. He wasn't the best at making small talk at the best of times, and with their destination so heavily on his mind, Cameron didn't feel up to socializing. Cameron was halfway down the aisle when he finally spotted an open seat. Cameron sat down with a sigh of relief. He stared out the window that was on the opposite side of where the hotel was.\n\nCameron was buried in his thoughts when he was pulled out of them by a soft voice. \"Excuse me, do you mind if I sit here?\" Cameron looked up and saw the redhaired girl looking at him. Seeing her up close made his heart skip a beat and a half. She had long red hair, light green eyes, and a small number of freckles across her cheeks, and on the bridge of her cute little nose, he hadn't thought a nose could be cute, but hers was the pinnacle of nose cuteness. She smiled down at him but started to look a little uncertain. Cameron realized that he hadn't said anything for a few seconds as he stared at her.\n\n\"Oh yeah,\" Cameron said, and then he realized that he had just said that he did mind if she sat there and quickly tried to correct himself. \"I mean, it's ok if you sit with me. Sorry, I'm still waking up.\"\n\nThe redhaired girl laughed and sat down. \"Yeah, me too. I left my laptop charger up in my room and had to run up to go get it. I almost missed the bus because I had to have them let me back in.\"\n\nThat explains why she was suddenly gone, Cameron thought. \"Well, I am glad you made it in time. I'm Cameron.\"\n\n\"I'm Haley, nice to meet you.\" They were interrupted as the bus driver stepped onto the bus and announced that they were departing. It all seemed so normal to Cameron as if they weren't about to go to a place where everyone was going to be naked 24/7. They started driving. This is it, Cameron thought. There was no turning back.\n\n\"So, are you nervous?\" Haley asked.\n\nCameron nervously laughed. \"Yeah, I have never done anything like this before. I almost backed out multiple times,\" he said honestly.\n\n\"Yeah, me too,\" Haley said. \"So, where are you from?\"\n\n\"I'm from Tempe, Arizona. What about you?\"\n\n\"I am from Portland, Oregon,\" she said.\n\nThey made small talk during the one and a half hour bus ride to Camp Natural. Talking to Haley came naturally to Cameron, she was so warm and friendly that she was able to pull even an introvert like Cameron out of his shell. Talking to her helped Cameron calm down his nerves a little bit. If everyone at Camp Natural was even half as nice as Haley, then he knew that he had nothing to worry about. Cameron learned how next semester she was going to the college to get a biology degree. Cameron imagined her in a lab coat and smiled at the cute image. Haley did most of the talking, but she never focused on herself too much and would keep asking Cameron questions so that the conversation never felt one-sided.\n\nWhen they turned a bend in the forest, and Cameron saw that they were approaching Camp Natural, he got a little sad; he had been enjoying his conversation with Haley. His phone had stayed tucked between his thigh and the side of the bus for the entire trip. The driver announced that they were there as the bus came to a stop.\n\nThe campers stood and shuffled off the bus. When it was close to Cameron and Haley's turn to get up, she smiled at him. \"Ready?\" she asked.\n\n\"Yeah,\" Cameron said, and they got up and walked down the aisle together. They split up to retrieve their luggage, and Cameron lost sight of the petite girl in the press of all the other campers. A couple of workers from the camp were helping people find their luggage, and another was telling people to follow the dirt path towards the large wooden building. He glanced around but couldn't see Haley. Cameron didn't want to instantly cling to the first girl who talked to him, so he took a moment to get his bags together and was about to start walking down the path when Haley appeared next to him. Cameron let out a sigh of relief that she had been the one to reconnect with him.\n\nThey entered the large building. The main part of the building seemed to be a cafeteria slash auditorium that reminded Cameron of his elementary school's lunchroom. The tables were folded up against the back wall, and chairs were lined up facing towards a small raised stand. They were told to put their luggage along the walls and take a seat. Cameron and Haley found a seat in the back row.\n\nStanding in front of the stand were seven people. A couple of them looked just a few years older than Cameron, while the rest seemed to be in their thirties, except for a beautifully tanned tall woman who was in the middle of the group who looked to be in her mid-forties but looked amazing. When everyone was seated, the woman spoke.\n\n\"Greetings campers, and welcome to Camp Natural!\" She had a strong voice so that it carried even to the back row with ease. The campers clapped and let out some hoots. \"I am the head of the camp, Miss Evens, but you can call me Alison. While there is a lot to do here, we all know what this camp is about: getting a taste of the nudist lifestyle. I know some of you might have more experience than others when being in a nudist community, but I expect everyone to be understanding of each other's comfort level. Today is a day for you to get to know the camp and not yourself yet, so please keep your clothing on this first day. After today we expect each of you to remain nude as often as possible. Of course, if it rains, you should cover up to protect from the elements, and no one will force you to disrobe. If you have any questions or need help in any way with this or any other aspect of your stay here, please feel free to ask me or any of the camp staff for advice and assistance. The spirit of this place is to get used to living a nude lifestyle, so there will be many events where clothing is not allowed.\"",
        "\"Consent is the most important rule here. We have had some before who think just because everyone is walking around naked, that means that you can just go touching whoever you want and that this whole place will be one big orgy. Don't get me wrong; sex is permitted anywhere at any time, and no one will break up two or more willing partners, but everyone must respect one another. Use your best discretion everyone.\" Cameron was glad that she had said this, he did have his reservations about coming here because he had been worried that this place would be exactly that. Yeah, Cameron would love to lose his virginity, but he didn't think it would be best for his first time to be in a mass of writhing bodies. Plus, he had trouble even peeing in a urinal next to someone else, so he was sure he would have difficulty performing with a crowd gathered around him.\n\n\"Well, sorry to make it so serious for a moment. Now let me introduce the heads of the camp who will quickly describe their role here and the fun camp activities and classes that they oversee.\" It all reminded Cameron of the beginning grand hall scene in the Harry Potter movies, where the staff all sat at the head table, and Dumbledore made the start of year announcements.\n\nThe head of the camp store mentioned that while most of the products had a price attached to them, there were several items deemed necessities that the camp gave out free of charge. Condoms and sunscreen were the first two items that they mentioned. Cameron hadn't thought to pack either, but he had a feeling the only one that he would be making use of was the latter.\n\nAfter the introductions and a little more information, Alison said she would be in her cabin, which was next to this building, and was also where her office was. She told them to feel free to drop in anytime or set an appointment if they needed to talk to her.\n\nThe head of camp activities, a busty Hispanic girl named Lyn, told all the new campers to follow her so that she could give the new group a tour of the grounds. There were about 50 campers in their group, with another three groups scheduled to come in later during the day. Most of what Lyn showed them Cameron had already seen in the digital tour when he had browsed their website. The beauty of the camp been another one of the things that had drawn Cameron to Camp Natural. The pictures were nothing compared to the real thing. The buildings were old but well cared for, and the forest was breathtaking. Cameron had never seen so much green in his life. He was used to how back home the landscape and buildings were constant muted browns and tans. The camp had a private strip of land along a sparkling lake, and there were hiking trails that wound their way through the valleys and hills that the camp was situated in. Haley was awed by the beauty of the camp too. Cameron paid more attention to the innocent look of joy on her face then his surroundings. The tour took almost an hour, and then they were back at the main building and were given the rest of the day to explore on their own and get situated.\n\n\"So, what do you want to do first?\" Haley asked Cameron. Once again, Cameron was pleasantly surprised that she had once again seemed to latch onto him and wanted to continue spending time together. Cameron told himself to stop questioning when a good thing was happening and just to enjoy the fact that a girl like her would give him the time of day.\n\n\"Some of those hiking trails looked kind of nice,\" Cameron said.\n\n\"Ok, let's go,\" Haley said with a smile and started to lead the way. Cameron had only gone hiking a few times on the trails around his home city. It was nice to have the shade of large trees and their fresh green smell in the air, which is good, because with the brisk pace Haley set and the fact that he wasn't used to the elevation, Cameron spent a good amount of their hike trying to silently catch his breath as he got winded. Almost the whole walk Haley talked, telling Cameron about this or that species of plant or the occasional animal that they would spot. Once again, Haley seemed to take an interest in Cameron's life outside of the camp, and she asked him plenty of questions. Cameron was ecstatic that she was taking such an interest in him, but he only wished that she would focus on talking about herself or the trees around them a little bit more so that he didn't have to try and gasp answers to her open questions.\n\nAfter an hour of walking up a steep incline, they came upon a split from the main trail and took it. The path wasn't traveled on as much as the other ones, so the footing was more difficult. Cameron's legs and lungs must have been pyromaniac enemies because they seemed to be fighting fire with fire as they competed to see which one could burn with exertion more. Haley was a few steps ahead of Cameron, and she suddenly stopped. Cameron caught up to her, and his breath was taken away too. They were on the far side of the lake now, with the camp across from. The sun was setting to their left, its dark reds and purples from the skyline reflected on the water. The lights from the camp could be seen through the shadows of the trees, but the main building's lights were seen since it was in a clearing.\n\n\"It's beautiful,\" Haley said.\n\n\"It is,\" Cameron agreed.\n\nThere was a large rock beside the trail that overlooked the view. Haley walked over and sat down. Cameron followed her example. They didn't say anything else as they sat side by side, so close that their hands were almost touching. As the sun sank behind the trees, the stars and the full moon shone overhead. Cameron couldn't get enough of how clear the sky was and that he could see the stars. Back home, because of the light pollution, regular pollution, and all the dust in the air, only the brightest of stars could be seen. Haley noticed Cameron looking up.\n\n\"Do you know any of the constellations?\" Haley asked.\n\n\"No,\" Cameron said.\n\n\"I know a few of them. Over there is the big dipper and the little dipper, and right there is Orion's belt,\" Haley said as she pointed them out.\n\nCameron followed the path of her finger and was able to see the dippers, but he couldn't see the last constellation. \"Where is Orion's belt?\" He asked.\n\nShe scooted closer, grabbed his hand, and guided him along to where all the stars were that made up the constellation. \"You start here, and follow these stars, here, to here, and finally right there.\" Cameron couldn't believe that she was holding his hand, it was such a small thing, but it gave him goosebumps and made him hyperaware of how close she was to him. He prayed that his hand wouldn't get too clammy for her. It took Cameron a moment longer until finally, he was able to see the pattern in the stars. It did kind of look like the image Haley was describing, but it also reminded him of those Rorschach inkblots. Haley pointed out a few more constellations for Cameron, but he had equal, if not more, difficulty seeing the patterns, so she had to keep on pointing out the stars for him. Haley seemed to get closer as she kept on helping him see the constellations, but the closer she got, the more help he needed because he became so aware of her. The way her scent of mint and flowers combined with the earthy smell of the pine trees around them, how soft her skin was, and how warm her touch was, how the heat from her body conducted through his until his whole body seemed to tingle with the energy from her.\n\nWhile he still thought the constellations were mostly stretching the shapes that they were being described as Cameron was able to at least start to see when the stars were making some sort of pattern even if he couldn't make out their images right away. Cameron saw a few constellations without Haley having to point them out to him. Cameron started to give them his own names based on what he saw. Haley laughed and said she could kind of see those things but then gave him the correct names for them.\n\n\"I think I like my names better,\" Cameron said. He pointed to another cluster of stars and asked Haley what that one was.\n\n\"I don't know,\" Haley said.\n\n\"Well, if you don't know the name for it, and I don't know the name for it, why can't we name it?\" Cameron asked.\n\n\"Ok,\" Haley agreed.\n\n\"What does it look like?\" Cameron asked. They both stared up at it, trying to figure it out.\n\n\"I see a flower,\"\n\n\"Ok, so it's our flower constellation,\" Cameron said.\n\n\"I like the sound of that.\" Haley was still holding Cameron's hand after pointing out the last constellation for him. Cameron was intensely aware of this, and he froze up, afraid that if he moved, he would break the spell of this perfect moment.\n\n\"Ready to head back?\" Haley asked.\n\n\"What happens if I say no?\" Cameron joked.\n\nHaley gently let go of Cameron's hand, stood up, and started to slowly walk away. \"Then, you're going to be sitting out here alone because I am starving, and I don't want to miss dinner.\"\n\n\"Ok, I'm coming,\" Cameron said. His body protested as he stood, and he did his best to ignore his aching muscles.\n\nGetting back to camp took them a little longer because of how dark it was when they were under the canopy of the trees. Cameron had a moment of fear that they might get lost out in the woods. Even if it was with Haley, that was something that he did not want to happen. Luckily, most of the time, they were able to see the lights from the camp and use those to guide them. Haley pointed out the north star to him and how they could use that to navigate when they couldn't see the camp, and the trail became hard to view, even with the moonlight. They made it back to camp towards the end of the first dinner. The dining hall was packed with all of the campers who showed up after their group.\n\nCameron was embarrassed as some campers and counselors noticed how they arrived so late together to dinner, but most seemed not to notice or care. Cameron wondered if they had missed any essential announcements while they were out in the woods. They walked down the buffet-like spread, grabbed their food, and managed to find seats together. Even being a little older and the last pickings of the night, the food was still delicious.\n\nThey had just finished eating when the camp head Allison announced that there were campfire rings set up outside of the cabin for those who wished to use them, and she wished them good night and that she would see them tomorrow. Cameron and Haley were some of the last campers to leave the hall since they started eating late. A few of the camp counselors were cleaning up and putting the chairs and tables back along the walls. Haley walked up to one of the counselors and asked if they needed help since there were so many tables and chairs to put away. The counselor thanked her but halfheartedly said they could manage. Haley nicely insisted, and the counselor gave in and let her help. While they worked, Haley chatted with the female counselor, and after a few minutes, they were talking and laughing as if they were old friends.\n\nCameron thought it was kind of Haley to volunteer to help, even if he now had to help her help them. They finished up in fifteen minutes, and the counselors asked them for their names and introduced themselves. The chairs and tables were not heavy, but after the hike and now lifting so many times, Cameron knew that he was going to be sore tomorrow.\n\nThe counselors invited them to hang out with them at the fire that they were going to set up. They agreed and followed the counselors over. Cameron felt a little out of place when Haley and he took a seat because they were the only campers there. They were introduced, and Cameron tried his best to remember everyone's names. He wondered if it would be harder to remember them tomorrow once he saw these people without their clothes on, and then he wondered if meeting someone when they were naked would somehow help with remembering names. Cameron made a mental note to see if there was such a study when he had the opportunity to look up such a random fact.\n\nHaley seemed to fit right in with the camp counselors. Cameron couldn't believe how fast she made friends, but she was a beautiful person who seemed to radiate with her good nature. Cameron had to realize too that he had only just met her that morning, yet they already spent an entire day hanging out together and getting to know one another. Cameron looked around at the guys around him, thinking that they were all better looking than him. If Haley could make friends so fast, she probably wouldn't let Cameron stay latched onto her, and perhaps by the end of the camp session, they would be walking past one another without even saying a word.\n\nEven though Haley was doing most of the talking, she made sure to keep including Cameron in the conversation. She would also occasionally bump her knee against his in a friendly way.\n\nAs Cameron was drawing within himself, Haley bumped her knee into his again and smiled at him. Haley looked stunning in the warm glow of the campfire. Her red hair and freckles were more pronounced on her pale skin that also had some shadows on it. With the help from that warm smile, Cameron pulled himself out of these self-deprecating thoughts. He couldn't allow himself to get possessive of Haley's friendship. It was thinking like this that often pushed girls he liked away from him and lead to Cameron alienating himself and then, in a self-fulfilling destructive prophecy, would cause his fears to become a reality.\n\nCameron started to make more of an effort to talk to the camp counselors, he realized just how nice and cool they were. He enjoyed their company more now that he wasn't looking at them as competition for Haley's attention. It wasn't like Haley was viewing the other girls around the campfire as rivals to her and Cameron. The thought of Haley being jealous of these other girls seemed absurd to Cameron, so he didn't see a reason he should be jealous either.\n\nAs it got later, the camp counselors started to turn in for the night as they had to get enough rest for whatever jobs they oversaw in the morning. Eventually, it was just Cameron, Haley, and the first camp counselor that Haley had talked to, Elena. Elena's counselor cabin was next to Haley's, so when they all decided it was time to call it a night, they put out the fire, and Cameron walked them to their cabins. They made it to Elena's cabin first and said their goodbyes and how they will see each other tomorrow. When they then made it to Haley's cabin, they seemed unable to say goodbye and kept on talking.\n\n\"So, will I see you tomorrow?\" Haley asked. This was the first time that she had sounded not her usual confident self.\n\n\"Yeah, I will see you tomorrow,\" Cameron said. Cameron couldn't think of any reason why he wouldn't see her tomorrow. Haley said she would meet him at his cabin, and to his surprise, Haley gave him a quick hug and a kiss on the cheek. Cameron stood rooted to the ground after Haley turned and left. Yes, it was just on his cheek, but he still couldn't believe that she kissed him. It was a moment that barely lasted a second, yet it was something that he knew was going to be on his mind all night. As Cameron walked back to his cabin, he realized that he had overlooked a significant fact about tomorrow; it was the first day that they were supposed to be naked. Cameron had been so focused on Haley, that he hadn't thought about what tomorrow was going to bring. He was so tired, sore, and overjoyed by the fact that Haley wanted to see him again and had kissed him on the cheek that he forgot.\n\nLuckily for Cameron, his room was the closest of the six small rooms to the front door. Cameron struggled to wrap his head around the fact that tomorrow everyone in the camp was supposed to walk around naked. He had a moment of panic and thought about how hard it would be to just leave tomorrow. Cameron might have left until he thought again about Haley. She seemed to like him and wanted to see him tomorrow. If Cameron woke up early and left the camp, then he would be leaving Haley, and she would be looking for him. Cameron didn't want to do anything to make her worry.\n\nThinking about Haley helped Cameron work his way through his nerves. Now that Cameron's panic died down, he was able to continue to think about all of the positive things if he stayed. He would get to see all of the girls in the camp naked, including Haley. Cameron would be seeing a girl he liked naked tomorrow, on the second day that he knew her. Cameron started to get hard as he imagined what Haley would look like naked. He began to stroke himself, combining his fantasies of Haley with his memory of how it had felt to have her pressed against him in a hug and the softness of her lips on his cheek. Cameron quickly reached his climax, calling out Haley's name as he came. He came so quickly that he hadn't been able to hold back his cum to make it easier to clean up. Cameron's cum shot up and landed on his chest. He slipped out of his boxers and used them to wipe the cum off his chest. Once he was somewhat cleaned up, Cameron drifted off to sleep in the nude.\n\n************************\n\nThe next morning Cameron heard knocking at the cabin door, and Haley called out for him. It seemed Cameron was the only non-early bird in his cabin because when he woke, he was the only one still in the cabin. Cameron had been up late last night talking to Haley by the campfire, so he cut himself a little slack on sleeping in. This was supposed to be a vacation, after all.\n\n\"I will be right out,\" Cameron shouted groggily. It seemed just about every muscle in his body was on fire as he struggled to get out of bed. Cameron realized he was naked and started to walk towards his luggage to grab clothes. As Cameron began to pull clothes out, he remembered where he was and laughed at himself. He put the clothing away except for a pair of socks. Once he had his shoes on, Cameron walked out of his room into the small common area. It was easier for Cameron to step out into the common room since he knew that the five other guys who stayed in the cabin were not there. Cameron was excited about seeing girls naked, but not so much about seeing other guys.\n\nCameron walked to the door and stood there for a moment to compose himself. With a sigh, he thought, I can do this. Cameron opened the door. Haley smiled at him. \"Good morning,\" she said. Cameron couldn't believe how beautiful Haley's body was. Her tits were small and perky, with reddish-pink nipples. Her body was pale with occasional patches of freckles. Cameron instinctively covered himself up, even though Haley was standing confidently in the nude. Haley held eye contact with Cameron and said, \"It's about time you are awake, we are late for breakfast now, too.\"\n\n\"Good morning, and sorry, I had trouble sleeping last night,\" Cameron said.\n\nHaley seemed to come more alive somehow once she was no longer wearing clothes. She stood up taller and with more confidence, which made a noticeable difference since she was so petite. It seemed the less clothing she had on, the more comfortable she got.\n\nCameron couldn't stop covering himself up around her. Her body was so beautiful and perfect. The occasional freckle on her pale skin served as focal points that drew his eyes along her body. She had a light tuft of reddish-brown pubic hair that was well-kempt. Cameron could just make out the cleft of her womanhood. From behind, her ass was well-toned, and she had a thigh gap that allowed him to see a hint of the pink flesh of her lips. Cameron made sure not to stare, but even with just glancing at her body, he got an erection. Everywhere he looked were other girls with varying body types who were also nude, so unless Cameron closed his eyes, then there was always some sort of stimulus to keep him hard. Cameron was so embarrassed, and he wanted to run back into his cabin, grab his stuff, and beg the bus driver to take him back to where things made more sense.",
        "\"It's ok, I'm nervous too,\" Haley said and held out her hand.\n\n\"You are?\" Cameron said, not believing her.\n\n\"Yes. No one has seen me like this before,\" Haley said.\n\n\"Same,\" Cameron confessed. \"So how could you walk from your cabin to mine without any clothing on?\"\n\n\"I'm so used to people not seeing me for who I am back home, I can be myself, and I don't have to hide here. I am free.\" The leaves rustled around them as the wind blew through the trees. \"Maybe a little cold too, but also free,\" Haley said with a slight shiver.\n\nCameron thought about it for a moment. He could try and leave, but how often would he look back on this moment and think about how he had let fear keep him back from experiencing life yet again? There had been several times where he like a girl and felt that she might like him back, but he never acted on it for fear of being rejected, and eventually, she would move on. Cameron didn't want to keep on having those thoughts of what could have been worm their way into his mind. With the hand that hadn't been cupping his erection, Cameron reached out and took her hand. Haley smiled at him, and hand in hand, they walked towards the main building.\n\nAs they passed other campers or counselors, Cameron thought that they might see his erection and point it out, saying how much of a pervert he was for walking around like that. Cameron did notice a few lingering gazes on his erection from some of the girls who they passed, but instead of getting upset, they seemed to get an odd look for a moment and then smiled warmly at him. Most of the people that they passed by just smiled and said hi to them, as if they were just walking around on some typical day and happened to see someone that they recognized.\n\nWhen they walked into the hall, Cameron was overwhelmed by the amount of nudity inside the building. Most people were seated and eating, covering up some of them, but campers and counselors were also walking back and forth from the food to the tables. Cameron felt so embarrassed walking into the room naked. If he did this out in the real world, it would have resulted in having the cops called on him, but here no one batted an eye at his nudity because they were nude too.\n\nHaley started to lead him towards the far side of the room where the food was set up. If he was leading the way, Cameron would have walked along the perimeter of the tables, but Haley confidently lead him right down one of the gaps in between tables. Cameron tried not to stare at all of the bare tits around him, not wanting to come off as a creep when the girls were just trying to have breakfast. Of course, Cameron still looked, just quickly. He was overwhelmed by the amount and variety of exposed breasts around him. There were some petite girls with tits smaller than Haley's who were almost flat-chested, others with modest breast sizes, and then there were girls with large tits. There were naked tall girls, short girls, thin, overweight, light-skinned, dark-skinned. Cameron couldn't believe how many different sets of tits he was being exposed to, and he hadn't even had his morning coffee yet. Cameron's erection instantly sprang up again. He felt awkward walking by people who were eating. Some girls noticed his raging erection, and their eyes went wide. Cameron thought that they were going to scream at him; instead, they looked his body up and down. One of them even winked at him. Cameron blushed.\n\nCameron quickly piled his plate with breakfast food and wanted to sit down so that he could take a break from being so exposed. When they finished grabbing their food, Cameron heard Elena calling out to him and Haley. There were a couple of seats open next to her at her table. Cameron was glad. There didn't seem to be many open seats, especially not next to each other.\n\nThey sat down at the table and started to eat. Haley talked a lot with Elena and the other counselors. As Cameron woke up, he began to contribute more to the conversation. Cameron alternated between staring down at his food as he ate and doing his best to make eye contact whenever he had to talk to anyone at the table. The whole meal, he had an erection. The other girls at the table were attractive, but other than Haley, the one who caught his eye the most was Elena. Cameron was nearly half Hispanic, but he had spent most of his life around the white side of his family, and he passed as being white. Cameron loved hearing her talk, listening aptly to her slight Hispanic accent. He was drawn to Elena's milk chocolate skin. She was petite like Haley but was a little taller and had more curves. Her tits were about a C cup and were topped with dark, pointy nipples.\n\nWhile Cameron was checking out Elena, who was sitting next to Haley, he was able to take in the sight of her topless too. Looking at both of them was getting to be too much for Cameron. If he got any harder, then he might end up knocking on the underside of the table. Cameron was glad he didn't know Morse code because he was afraid of the things his dick might say.\n\nCameron imagined what it would be like to suck on both girls' nipples. Elena turned to ask Haley a question and caught Cameron staring. Cameron quickly looked down at his food and spent the rest of the meal on his best behavior.\n\nOnce again, the other camp counselors slowly left as they had to get to work, leaving just Elena with them. \"So, have you two decided on what activities you want to do yet?\" Elena asked.\n\n\"I'm not sure yet, there kind of is too much to do,\" Haley said.\n\n\"I'm still waking up and getting used to the natural part of Camp Natural, so, not yet,\" Cameron said.\n\n\"I am leading a nature hike in a little bit if you guys are interested,\" Elena said.\n\n\"Sounds great,\" Haley said and then turned to Cameron, \"Can we?\"\n\nBoth girls looked at him, waiting for an answer. \"Yeah,\" Cameron said, confused that she had asked them if they could do it. His body was still protesting from yesterday's hike, but he wasn't about to say no and disappoint them.\n\n\"Great. I have to get some things done before it, so I will meet you in front of the big house in an hour,\" Elena said, and then she scooted back her chair and stood up. Cameron saw that her pubic hair was trimmed down to a neat triangle that pointed right to her pussy. Cameron got a flash of her pussy, it was little darker than Haley's, but he saw a hint of the pink of her inner lips before she turned around, showing off her plump ass, and then walked away. Haley and Cameron watched Elena leave. When Cameron didn't look away, she nudged him with her shoulder and coughed.\n\n\"Sorry, I am trying not to stare at anyone, but it is really hard,\" Cameron confessed.\n\n\"I know it is. I'm going to go get ready, meet you here in an hour,\" Haley said and then stood up. She was so close to Cameron that he mostly could see her hips and ass, but he also was able to briefly see her trimmed red pubic hair. She took a moment to gather her trash onto her tray, allowing Cameron to get a better look at it, and then she turned and walked away. Cameron couldn't take his eyes off of her as she walked away. Her ass was smaller and tighter than Elena's, and she only had a slight curve in her hips. She walked with such grace and swayed her hips in such a way that Cameron couldn't take his eyes off of her until she was finally out of sight.\n\nDue to his erection, Cameron had to take a few minutes before he could get up out of his seat. Once his erection had mostly died down, Cameron headed back to his room and grabbed a towel and his bag of shower and grooming supplies. His cabin had a small bathroom in it, but the showers were in a building near the main one. Most campers had already showered, so when Cameron got in, it was nearly empty. There were about twenty showers along the wall. Each shower was in an alcove with a curtain in place for privacy. When Cameron stepped in, two others were showering. One had the curtains drawn, and in the other shower was a cute African American girl lathering up her body. Cameron's cock twitched, but he forced himself to look away and not ogle her. Cameron set his supplies on the ledges in the shower wall and turned the water on. He let out a small cry of shock when the icy water hit him. The girl who was lathering up her body turned around and looked at Cameron.\n\n\"Sorry, I wasn't expecting the water to be that cold,\" Cameron said.\n\n\"It takes a minute to warm up,\" she said. The girl was still lathering up her body as she said this, she had reached her large tits and was spreading the soap across them and lifted them to get their underside. She looked Cameron up and down, checking him out. Cameron felt exposed under her gaze, but he also kind of felt a thrill at her seeing him naked.\n\n\"Thank you,\" Cameron said.\n\n\"You're welcome,\" she said and turned back to her shower. Cameron felt awkward standing there as the shower heated up, but after a minute, the water was warm enough for him to be able to hop in. Cameron thought about closing the shower curtain. They were there for a reason, after all, and someone else was using one. Cameron almost closed it, but if he was going to get used to being naked in front of others, then he couldn't keep on trying to hide. If it got too much, then he could always go back to his room for a bit, but if he was out and about, then he knew he should try and embrace what this camp was about, otherwise, why did he come out here? Plus, if he left the shower curtain open, it would allow him to see the beauty across from him. She did leave the curtains open, after all.\n\nCameron finished up his shower and getting ready for his hike with Elena, Haley, and whoever else was going to be coming along. When Cameron checked the time on his watch, he saw that he still had another twenty minutes left until it was time for the group to head out for the hike. Cameron found a porch swing nearby and sat down.\n\nAs he waited, Cameron wondered what was taking Haley so long to get ready. It should be easier since she wasn't going to wear any clothes, right? Cameron sat for a few minutes, taking in the scenery. This was a well-traveled spot, so campers and counselors kept on walking back and forth in front of him. Some said hi, and he said hi back to them; it seemed like such a regular thing. Cameron couldn't help it, and his cock started to harden at the sight of the girls walking back and forth in front of him.\n\nElena made it back before Haley did. Cameron tried not to stare as she walked up to him, but he did make use of his periphery vision. Cameron still couldn't get over how amazing her body looked, and he thought it was cute how all she had on was hiking boots, the bright orange scarf marking her as a camp counselor, a knapsack slung over her back, and also a bulging fanny pack. Elena looked good enough that he was afraid he might end up with developing a fanny pack fetish if he looked at her for too long.\n\nElena plopped down into the seat next to him. \"So, where is your girlfriend?\" Elena asked.\n\nCameron blushed and started to stutter his answer. \"What? She isn't-.\"\n\n\"Relax, I was just joking,\" Elena said and laughed. \"You two already looked so inseparable. You seem tense.\"\n\n\"Do I?\"\n\n\"Yeah. I know it can be a little hard getting use to all of this, but the important thing is to make sure to have fun. If you are doing things you enjoy, then you don't have as much time to think about how you are naked and or how turned on you are by all of the naked people around you.\" Cameron went to cover up his erection even more.\n\n\"It's ok, really. I guess you haven't noticed, but just about all of the other guys walking around here are constantly hard,\" Elena said. Cameron had been doing his best to not look at the naked guys around him, but with so much nudity, he couldn't help but see some of them.\n\n\"Now that you mention it, I noticed no one was reacting to them,\" Cameron said.\n\n\"Exactly. It is a lot harder to notice, but most of the girls here are walking around just as turned on as the guys, it's just harder to see how wet they are.\"\n\n\"They are?\" Cameron asked. The thought of the girls being driven crazy by all of the nudity around them hadn't even entered Cameron's mind.\n\n\"Let me just say from experience that they are.\" Elena had been sitting with her back to the arm railing and was facing Cameron. She had her legs crossed so that Cameron could see the black triangle of her pubic hair, but her pussy was hidden until she lowered her legs a little and spread them out. Her slow, purposeful movements drew Cameron's attention. Her pussy slightly parted, and he saw the moisture gathering along her lips. She smiled at him. Cameron didn't know what to say. Luckily and unluckily, he didn't have to say anything because Haley walked up to them.\n\n\"Hey guys,\" Haley said. Cameron jumped at her suddenly appearing at such a compromising moment.\n\nElena didn't cover herself up yet. \"Hey, we were wondering when you would show up.\"\n\n\"Sorry, it took me a little longer to get ready,\" Haley said.\n\nHaley was wearing a little bit more makeup than Cameron remembered her wearing yesterday, but she didn't overdo it. She had on red lipstick, dark eyeliner, and mascara that contrasted with her pale skin.\n\n\"You look amazing!\" Elena said genuinely. Haley blushed at the compliment and said thank you but modestly said she didn't do much. \"Cameron, doesn't she look good?\"\n\nCameron made eye contact with Haley and said, \"You look beautiful.\" She blushed even more at his compliment.\n\n\"Thank you,\" she said and smiled. Seeing her smile and knowing that he had put it, there made Cameron feel warm and caused that feeling of butterflies in his stomach again. Cameron broke off their eye contact and looked down more as he was about to get off of the chair that he had been swinging on. His lowered gaze allowed Cameron to notice the next thing that Haley must have done. It took Cameron a moment to notice what else she had done differently, mainly because he was trying too hard to not be staring at the girls around him. Haley had trimmed her bush so that her pubic hair was a lot shorter and neater. Cameron had a moment to wonder what it would be like to run his hands through and down it, and then slide his fingers even lower.\n\n\"Here, have a seat while we wait a few more minutes to see if anyone else is going to come along with us,\" Elena said. She scooted over towards Cameron to make room, and Haley sat down. The chair was just big enough for all three of them, but for some reason, Elena seemed extra close to Cameron. Their legs pressed together as the three of them killed time and talked. Cameron did his best to hold up his end of the discussion, but most of his brain's processing power was being occupied with the fact that he had two beautiful naked girls sitting next to him, and how one of them kept on touching him. His whole body felt warm, and his erection was standing up and rigid. Cameron desperately wanted to cover it up, but he couldn't do that without drawing more attention to his predicament.\n\nSix more people showed up for the nature hike. The first of the six to join them was a girl and a guy who seemed to be a couple because they were all over each other, kissing and lightly running their hands across each other's bodies. The guy made no effort to hide the result from all of that petting and kissing. What they were doing wasn't overtly sexual, but the fact that they were naked meant that every touch was direct to the body.\n\n\"I will be right back,\" Elena said and got up to go and greet them. Cameron wanted to stare at her ass as she walked away, but he was present enough to remember that Haley was sitting right next to him.\n\nHaley seemed uncharacteristically quiet. \"You really do look great,\" Cameron said, saying the first thing that came to mind to try and break the silence.\n\n\"Thank you. It was a little bit weird getting ready for the day knowing that I was going to just walk right out the door naked,\" Haley said.\n\n\"Same. When I got dried off and did my morning routine minus putting on clothes and started to walk out the door my brain seemed to be screaming at me, 'what are you doing, go back and put on clothes, you don't want to be arrested!'\" Cameron said.\n\nHaley laughed. \"It does take some rewiring to be able to walk outside naked.\"\n\n\"So, what do you want to do when we are done with the hike?\" Cameron asked.\n\n\"I'm not sure, we can look at the list together when we get back,\" Haley said. After that, she seemed to be her old self again and was just as warm to Cameron. A pair of girls walked up, and Elena went and started talking to them. The moment she left the couple, they went right back at it, almost as if they were making up for lost time. As Elena was talking to the girls, two athletic-looking guys showed up and started talking with them. Cameron didn't want to be judgmental, but they looked like the type who would try and bully him back home. The sound of their boisterous voices and laughing only seemed to reaffirm Cameron's initial impression of them. Cameron knew that part of his animosity towards them was because he saw them as competition to being with Haley. Cameron still didn't know why Haley was spending so much time with him. She was such a beautiful, nice, and cool girl that she could probably get with any guy she wanted. Cameron had to shake off those thoughts the best he could. He couldn't go getting possessive of a girl that he had just met a day ago.\n\nIt was time to go, and no one else seemed to be showing up, so Elena motioned for Haley and Cameron to join the group. \"Ok, we are going to get going now. The hike is going to take about an hour each way. It is one of the easier trails and is well maintained, but I see that you are all wearing shoes, which is a good idea. Being naked is all good and fine until you end up with a thorn embedded in your foot. Did everyone put on sunscreen already?\" Haley was the only one who raised her hand. Elena opened her knapsack and pulled out four small camp bottles of spray-on sunscreen, and gave them to each pair. \"You are going to be spending a lot of time out in the sun, so unless you want sunburns where the sun normally doesn't shine, make sure you are wearing sunscreen.\"\n\nThe couple started to apply sunscreen to one another, rubbing it in a lot more than was necessary. The two guys stood far apart as they handed the can back and forth to each other. The two girls who had walked up helped each other apply it to their backs. They seemed comfortable with each other and were tickling one another as they did it. The two jock guys couldn't take their eyes off the two girls. Cameron judged them for it but then realized that he was doing the same thing, so he respectfully looked away. Cameron finished up applying the sunscreen when Haley reached for the can. \"I can get your back for you,\" Haley said.\n\n\"Ok,\" Cameron said and handed over the bottle. Haley sprayed it onto his shoulder blades and started to work it into his skin. Her touch felt terrific, along with the thrill of both of them being naked and her touching him. Her touch also did wonders to ease the kinks in his back from both the stress and yesterday's hike. He only wished he could ask her to do his legs too.\n\nCameron had his eyes closed, and Haley was finishing up on his back when he heard Elena ask Haley if anyone had gotten her back yet. Haley said no, and Elena took the can from her. Cameron stepped back and saw Elena spray Haley's back and start to work the sunblock in. Haley closed her eyes as Elena worked in the sunscreen from her shoulders down to her lower back. Cameron heard her let out a little gasp and bite her lip. Cameron's erection strained at the sight of the two girls together. They were both beautiful. Cameron imagined what it would be like to be with both of them, to have in bed at the same time Haley's pale petite body, and Elena's darker and more curvaceous one. Cameron had always had threesome fantasies, but to him those had always been an extra level of fantasy than just being with one girl because he had always thought the odds of one girl wanting to be with him were slim. The thought of two girls being with him at the same time was extra fantastical.",
        "\"All done,\" Elena said and walked away from Haley. Haley stood there for a few seconds with her eyes closed. Cameron wanted to ask her if she was ok, but he didn't want to intrude on whatever moment she was having. When she opened her eyes, Cameron saw a look in them that he hadn't seen before. \"Let's get going,\" Elena called out and started to walk down the path.\n\nAs they walked, Elena told them about the various plants they passed, what kind of animals could be seen out here, and some more about the camp's history. Cameron and Haley were walking directly behind Elena, with the two girls and two guys in the middle, and the couple who seemed unable to detach from one another bringing up the rear. Cameron hung on every word that Elena said. He loved hearing her talk and how knowledgeable she was. He loved to see her walk too, the way her toned legs flexed, and how her ample ass bounced with each step. Cameron did his best to make sure that Haley didn't catch him checking Elena out. He wondered if she would care if she did notice him. They barely knew each other, so it wasn't like they were dating. Cameron remembered how quiet she had been earlier when she had first walked up to him, and Elena talking and decided it would be best to be cautious.\n\nThe couple in the back was in their own world, and once the two guys noticed that Elena was cold to their advances, they had started to try and flirt with the pair of girls, so Elena seemed to be only talking to Haley and Cameron. Haley would ask Elena questions occasionally about the animals and woods, and Elena would answer her. They started to get into discussions about different wildlife, and Cameron felt a little left out, the more advanced their conversations got. Still, it was nice seeing the two of them talk so animatedly about something that they cared about.\n\nIt seemed that Haley must have picked one of the most challenging hiking trails yesterday because this trail was wide and only had a slight incline to it. Cameron's legs started to protest when they were about halfway done, but by this point, he was beginning to get used to the pain, and if he didn't overdo it, he would be able to ignore it. Cameron jinxed himself because the last half of the trail started to slope downward. Each step jarred his knees, and Cameron cursed himself for being so out of shape. His metabolism had always kept him slim, but maybe he should try and pick up a weight now and then. He had seen that his college of choice had a state-of-the-art gym that was open to all students. At the time, he had thought he would never use it, but now he promised he would take advantage of it.\n\nElena turned them from the main path to a side one. The trail started to get smaller as the trees and overgrowth cluttered onto it, giving them shade but also obscuring their view. Cameron was beginning to feel claustrophobic as they continued to press in around him. From down in the direction of the path, Cameron started to hear flowing water. The sound grew louder with each step. They had to crouch as the tree's branches grew over the path. They came to a point where the trail was completely covered up with overhanging branches. Elena led the way and went first and then held a branch up for Haley to follow. Haley went under and then held it up for Cameron. Cameron stayed back to keep the branch to the side so that the others could pass under more easily. The others thanked him as they moved under. Cameron had to pass under a few more branches to catch up. Cameron ducked under one final one, and then suddenly, he found himself in the middle of a wide-open clearing with a swimming hole in the middle. To his right, the swimming hole was fed by a small waterfall that cascaded into the pool of water. Some of it escaped down into a narrow stream, but more water entered then what left. Since the water was continually flowing, it was nearly crystal clear.\n\nCameron took his place next to Haley as they all admired the beauty of this hidden place.\n\n\"The water is fed by the melting runoff from the mountains to the north that takes months to fully melt, so this pool is constantly being filled year-round. I hope you all brought your bathing suits,\" Elena joked.\n\nThey broke into the same groups that they had been walking in. Each group found their own side of the pool. The pool was around the size of a swimming pool, so they had enough room for each group to mostly be on its own. The pair of guys climbed up onto the edge where the waterfall was, which was about 15 feet up, and then they jumped. When they emerged, they were sputtering and cursing about how cold the water was. Everyone laughed.\n\n\"I told you guys that the water is snowmelt from the mountains, of course, it is cold,\" Elena said. While the guys swam in the pool, the pair of girls decided to suntan on the lush grass. The girl from the couple went to dip her toe into the water, and she squealed at how cold it was, her boyfriend saw his opportunity and went to push her in. She sensed what he was about to do a second before it happened. She didn't have enough time to avoid the shove, but she was able to grab onto her boyfriend and drag him in with her. The two emerged from the water and cried out about how cold the water was.\n\nHaley saw Cameron watching what had just happened, and then how he looked at her. \"Don't even think about it,\" she said.\n\nElena held out her hands for Haley and Cameron, \"Lets jump in together?\" They each took one of Elena's hands. \"On three, we go,\" Elena said. They stood five feet away from the pool and counted. On three, they ran forward and jumped into the pool. Cameron had closed his eyes right before they hit the water, but the cold of it shocked them back open. Elena and Haley sunk into the water beside him, bubbles floating up with their bodies as the stretched upward and started to swim to the surface. Cameron wished that the icy water was cold enough to freeze time itself so that he could continue to take in the images of their nude bodies swimming up, and the sunlight shining down through the water on top of them. Cameron would have never been able to experience anything as surreal as this moment if he had stayed home, or if he had left earlier.\n\nHaley and Elena made it up to the surface ahead of Cameron. He admired their legs kicking back and forth and the brief flashes of their pussies or asses as they turned in the water, and then he shot up to the surface too, exclaiming just like all the others about how cold the water was.\n\nOnce Cameron started to get used to the chilly water, he found that it was doing wonders to soothe the aching in his muscles. At first, everyone stayed in their little groups. Cameron had fun splashing around and horse playing with Elena and Haley. They got into water fights and took turns shoving each other under the water. At first, Cameron felt awkward touching them, but he started to relax the more they grabbed at him. Haley and Elena ended up making a secret alliance and worked together to dunk Cameron as often as possible. Cameron protested faintly as the two girls wrestled with him, their soft breasts and stiff nipples pressing against him.\n\nCameron was glad for how cold the water was, for a while his mind was still thinking sexual thoughts, the chill of the water stifled the growth of his erection, but there was a couple of times where he found himself getting hard, and it would press against the girls, so he had to break away from them to cool down. Of course, they didn't let him retreat and seemed to jump on him even more.\n\nAfter about thirty minutes, the two girls that were sunbathing hopped into the water, and Elena managed to get everyone together to play some pool games. Cameron ended up being it first in a game of Marco Polo. Even though he promised not to peak, Elena still insisted on tying her camp counselor scarf over his face to blindfold him. Cameron couldn't remember the last time that he played this game. He did his best to tag someone, but every time he felt like he was closing in on someone, they would manage to get away from him. Cameron did his best to listen around him for splashing, but the constant dripping from the waterfall made it difficult at first, but the longer he was blindfolded, the better he was able to tune out the sound of the waterfall and listen around him for the splashes.\n\nCameron kept on coming up just a little short every time he went after someone. Ready to finally be free of being it, the next time Cameron heard a splash in the water, Cameron swam furiously and reached out. Knowing that some of them kept on ducking under the water and kicking off the sides to get past him, Cameron reached down under the water and finally touch someone. Cameron was ecstatic that he caught someone, but as they swam past him, he realized that he had fully groped someone. Cameron was mortified.\n\nCameron heard someone break onto the surface of the water, and then Elena said, \"Well, looks like you finally got me.\" Her voice didn't sound upset at all. Cameron heard hear swim up to him, and then she started to untie his blindfold. When Cameron could finally see again, he saw just how close Elena was to him, a whole lot closer than what was needed to untie it. Elena smiled at him and then turned around. She looked over her shoulder at him. \"Can you blindfold me?\" Elena asked.\n\nCameron took the blindfold from Elena and started to tie it around her eyes. Elena drifted back against him, pressing her ass against his *semi-erection. Cameron fumbled with tying the knot. Elena pressed harder against him.\n\n\"Having trouble?\" she asked in a husky voice. Cameron finished tying the knot, and then they resumed playing the game. They played Marco Polo for a bit and then switched over to sharks in the water, allowing Cameron to get a good look at the different girl's asses as they stood at the edge of the water facing away. Cameron couldn't remember the last time he had this much fun doing something as simple yet pleasurable as playing pool games with others.\n\nAfter an hour of swimming, they all lay in the grass to dry. The warmth of the sun after the cold of the water relaxed Cameron and nearly caused him to doze off as he lay with Elena and Haley, talking about their lives back in the world with clothing and what they planned on doing after summer ended. Cameron found himself talking more and more, becoming almost as comfortable with Elena as he was with Haley. On the walk back to camp, everyone seemed closer, talking to each other and joking about how the games had gone in the pool. Cameron felt bad for being so judgmental about the two jocks. The more time he spent near them, he realized that yeah, they were a bit loud, but they were not that bad. They made it back to camp a little after two pm. Elena asked if Haley and Cameron wanted to go and get lunch with her in the mess hall. Haley answered yes for both of them.\n\nLunch was burgers, hot dogs, and fries, and it was delicious. After all of the swimming and hiking, Cameron was famished, and he heaped his plate full of food twice. When Haley gave him a look at his second helping Cameron shrugged. \"What? I'm hungry,\" he said. As Cameron ate, the girls mostly talked to one another, occasionally whispering. Sometimes Cameron would catch one or both of them staring, and then they would quickly avert their eyes. Under their gaze, Cameron felt even more exposed than when he first walked out of his cabin in the nude.\n\nAs Cameron ate, he realized how comfortable he was becoming with being naked in front of others like this. He hadn't even had any anxiety when he had gone to get his second plate of food. Normally in class, it would have taken him minutes to work up the courage to walk across the room to sharpen his pencil or throw away some trash, yet here he was able to walk across a full mess hall while being naked without half of the anxiety. Cameron hadn't expected to get into the nudist lifestyle, he had just been curious, but now he could see the appeal to it.\n\nCameron was glad that the first thing they did after their hike and all that swimming with Elena was to attend a bracelet making class. Cameron wasn't super interested in making bracelets, but he was just happy to be doing something that let him sit down for once. The camp counselor showed the group several different ways to make the knots and how to weave the string, making it look straightforward, but once they picked out their colored strings and started to try it out, Cameron had trouble even getting it started. Haley scooted closer to him and showed him how to do it, her fingers moving deftly. After a couple more poor starts that lead to the whole thing coming unraveled, Cameron was finally able to get his bracelet started. If he could get over the frustration of his hands not being able to do the movements correctly, he could see the appeal in doing crafts like this. It did allow him to calm his mind as he focused on the threads. Haley finished her bracelet in almost half the time that it took Cameron to get his done. Cameron compared his bracelet to Haley's. Hers was perfectly made, while he had numerous irregular patches where he hadn't tightened the string down correctly.\n\n\"Let's trade,\" Haley said.\n\n\"What, why?\" Cameron asked.\n\n\"I think it would be kind of nice, you know if we made them for each other. Plus, I tried to warn you that you weren't making your bracelet big enough. I doubt it could fit on your wrist,\" Haley said. To prove her wrong, Cameron tied it around his wrist. It was painful and dug into his skin.\n\n\"I was able to get it to fit,\" Cameron said and held his wrist in front of her face.\n\n\"Are you really going to risk losing circulation to your hand and having your hand amputated just to prove me wrong?\"\n\n\"Maybe,\" Cameron said, but even though he had just put the bracelet on a few seconds ago, he could already feel his fingers tingling. With Haley's help, he was able to remove his bracelet. Haley tied hers around his wrist. It was a perfect fit, and Cameron tied his around her wrist. Cameron doubted that the bracelet would survive until the end of camp.\n\n************************\n\nOver the next week, Cameron fell into a nice routine at Camp Natural with Haley and Elena. From the moment they woke up, they would get ready, go to breakfast, and then do different camp activities together. They did numerous activities that Elena oversaw and hung out with her during meals and her downtime. Every day Cameron became increasingly comfortable with being nude and being around the two girls. Cameron knew that he was crushing hard on Haley; every day he spent with her, he found himself liking her more and more, but he was feeling conflicted. Cameron found himself being increasingly drawn to Elena too. He loved her fiery attitude and how confident she was. She seemed to be flirting with Cameron increasingly, but it was hard for him to tell if it was genuine or was just how her personality was. She loved to tease him and see him squirm.\n\nSometimes when Haley joined in, Cameron felt like he had the world's most attractive bullies. He thought that maybe one or both girls liked him, but he had misread signs before. Cameron didn't want to try and make a move, only to realize that he was misreading things and end up making things awkward between them. Cameron was enjoying Haley's company so much that he didn't want to do anything to cause him to lose his camp buddy. Cameron still worried about what he was going to do but decided to try and not dwell on it like he usually would and to just try and enjoy his time with the girls.\n\nFriday, he went on a late-night hike with Haley again. Haley and Cameron had spent every day together. With how much time they had spent together and all that they had talked about, Cameron felt like he was closer with Haley then any of his friends back home. He had never been able to talk about his problems with anyone else before.\n\nThe hike seemed easier this time after a week full of physical activity. Cameron's body was still sore and repairing itself from all of the activities that he was doing with Haley, but it also felt stronger now. Cameron could work through the pain better, and he breathed the woody mountain air easier.\n\nThey made it to their secret overlook spot above the lake and camp. They had thought ahead this time, and Cameron had a backpack full of supplies. They laid a blanket down on the broad flat rock where they had sat together on their first night. Cameron had also packed them dinner and some drinks since they had planned on missing dinner tonight. They ate together. Cameron felt the tension between them. Haley had been acting weird all day, frequently looking lost in thought and distracted. She seemed nervous around Cameron, which was odd since she had always seemed so confident around him. Cameron wondered if it was something he did and hoped that if it was his fault, he could fix it and make sure that this night between them went smoothly.\n\nThey ate their dinner and then stared up at the stars. Cameron had been reading online about astronomy. Now Cameron knew a good amount more of the names of the constellation and their star configurations, but that knowledge didn't translate too well yet to spotting them in the sky. Haley seemed impressed with the small amount that he had learned since they were last up there.\n\nThere was a cold breeze, and Haley shivered. Cameron scooted close to Haley and wrapped his arm around her and pulled her closer. Haley rested her head on Cameron's shoulder and then reached over to hold Cameron's hand. Their hands were clasped on her thigh. They sat in silence, enjoying the stars and moonlight, and the way that they reflected on the lake below. Cameron started to feel nervous. He had been waiting for the perfect time to make his move on Haley. Cameron had several other opportunities where it seemed perfect to tell her how he was starting to feel about her and how he wanted her. At every one of those past opportunities, he had kept his mouth shut.\n\nCameron was scared to do something to push away Haley because he valued her friendship too much. He always told himself that there would be plenty of time to try and make his move later. If they got to know each other better, it would hopefully increase her chances of liking him even more. Cameron knew this was true, but he also knew that he was just using that as an excuse to wait for the perfect time. He knew that there was no such thing, it was now, or he would procrastinate the rest of their time at the camp.\n\nCameron looked down at Haley's moonlit face. \"Haley, I...\"\n\n\"Look,\" Haley said and pointed up. Above them was a meteor shower streaking through the beautiful sky. \"Wow, it's so beautiful,\" Haley said.\n\nCameron looked down from the stars at Haley. Now, Cameron thought. \"Not as beautiful as you,\" Cameron said.\n\nHaley looked at him with surprise. Cameron put a finger under her chin and gently guided her to arch her mouth up, and then he lowered slowly for a kiss. Haley quickly closed the distance. It felt amazing but was a little awkward at first for both of them. When the topic of dating had come up before, Haley had confessed that she had never dated anyone before. Cameron had confessed the same thing, but not that he had never been kissed before. Their first kiss was sweet and tender, and they continued to hold hands during it. Haley parted her lips a little, and their kiss deepened. When Haley broke off the kiss, they were both panting. Haley had that smoldering look in her eyes. Cameron had seen that look a couple of times when they had been in contact a lot, or when Elena teased them with her body.\n\nCameron was about to say something, but when he opened his mouth, she kissed him again. They sat there under the stars making out for a lost amount of time. Cameron had a raging erection the whole time, and he wanted to relieve himself desperately. The urge to try and explore Haley's body was overwhelming, but Cameron forced himself to be content with these first kisses. They still had weeks left together, and Cameron wanted to make sure he enjoyed every moment with Haley. When they were done kissing, Haley let out a contented sigh, and they cuddled for a bit longer on the rock, looking up at the stars. Cameron wished that they could stay all night at their spot, and after the fact, he realized that they could have done exactly that. All Cameron had to do was get one of the tents loaned out from the camp supplies. Next time, Cameron told himself, we are going to stay here all night.",
        "*********************\n\nThe next morning Cameron walked into the showers to get ready. He had managed to wake up earlier for once and wanted to surprise Haley by being the one who woke her up. To his surprise, Elena was already in the changing room. \"Oh, hey,\" Cameron said awkwardly.\n\n\"Hey,\" Elena said with a smile.\n\nCameron was silent for a moment as he figured out what to say. \"So, you are going to take a shower?\" Cameron asked. Excellent observational skills there, Cameron thought as he scolded himself.\n\n\"Yep,\" Elena said. She gathered up her assortment of bottles. Cameron hadn't moved away from the doorway where he had first seen her. \"Are you going to be taking one?\" Elena asked as she stood in the doorway that led to the showers. Steam was curling out from a few others already in there.\n\n\"Uh, yeah, be right there,\" Cameron said. Elena turned, showing off her ass that he still couldn't get enough of looking at. Cameron set his towel down and followed Elena into the shower. Elena was at one of the shower cubbies in the corner. She was standing under the water, rinsing off. Cameron had seen Elena naked for the last week, and then also wet when they swam in the water hole, but there was just something so erotic in the sight of her in the shower. He had seen others in the showers, but not a girl that was always coming into contact with him and teasing him.\n\nCameron wanted to be close to her, so he went into the shower that was next to her but on the opposite wall. Cameron couldn't stop looking at Elena as she ran her hands up and down his body as she soaped it. Since she had stepped back to avoid the water as she soaped up, she was perfectly in view. Elena looked over and caught him looking. Cameron blushed and looked away, but not before he saw Elena wink at him. She left the curtain open.\n\nAfter being caught watching her shower, Cameron tried his best to focus his eyes on the wall and started to wash his hair and body so that he could get himself out of this situation. Cameron looked down at the bracelet Haley had given him. Cameron felt guilty about the attention Elena seemed to be giving him and being in this compromising situation with her. Cameron was interrupted from his inspection of the wall.\n\n\"Hey, Cameron?\" Elena called to him. She sounded like she was up to something. By that point, the others who were taking a shower had left.\n\n\"Yeah?\"\n\n\"Can you come over here?\"\n\n\"Sure,\" Cameron said. Cameron did his best to think about Haley and put his guard up as he walked over to Elena. The moment her body came into view again, his willpower started to crumble.\n\n\"I can't get my back, can you wash it for me?\" Elena asked. She looked over her shoulder at him and smiled.\n\nCameron looked at his bracelet again for strength and then started to say how he wasn't sure if he could do it when Elena turned around, showing him her glistening tits and her pussy. Cameron didn't even realize what he was doing until he saw that his hands were held out, and Elena handed him her bottle of body wash and loofa. \"Thanks,\" Elena said.\n\nCameron started to scrub her back for her with the loofa, admiring how tight her body was. Almost immediately, Cameron became hard. As he washed her back, Elena pressed back against him. Cameron went as rigid as his erection when it came into contact with her ass.\n\n\"Is everything ok?\" Elena said.\n\n\"Yeah, I was just... distracted for a moment,\" Cameron said. When he was in the middle of talking, Elena pressed back a little more against him and twisted side to side to rub against his dick. With a gulp, Cameron kept on washing her. With his free hand to massage the soap into her skin. Cameron worked his way down her back. Cameron scrubbed along what he imagined her panty line to be, while where he guessed it would be since he had never seen Elena in just her panties. Cameron washed the middle of her lower back and then rubbed with each hand outward until he was holding her hips. Elena pressed back against him again, nestling his dick in between her ass cheeks.\n\nCameron wanted to stay loyal to Haley, but he let his smaller head do the thinking. He and Haley kissed the night before, but he knew that didn't immediately mean that they were dating now. Cameron might end up regretting doing this with Elena, but he decided to live in the moment. Cameron held on to her hips and slowly pushed forward, sliding his dick further along her cheeks. Elena let out a moan of surprise. Cameron did it again, and this time Elena pushed back against him, causing both of them to moan at the increased contact.\n\nElena took a couple of steps forward, and for a moment, Cameron thought that he had overstepped their friendship and Elena's teasing, and he had done something that she didn't like, but then she leaned forward and braced herself against the wall. Despite Cameron's horrible track record of misreading girls, even he couldn't misread this blatant invitation. Cameron stepped forward and pushed his erection down in between her ass cheeks and started to slowly rock forward. The spray of water was on Elena's lower back and Cameron's stomach. Cameron wasn't sure what to do at first, so he just took it slow as he rocked back and forth. He started to find a rhythm and steadily increased the speed and pressure. The water and soap lubricated his dick, so he was able to slide along her tight ass easily. Elena started to rock her hips again. At first, she matched his pace, but then she began to move faster, so Cameron had to keep up with her. It felt amazing. Cameron didn't know how much longer he could last if they kept up the pace.\n\nElena shifted a little and placed both arms directly in front of her, but then lowered one down. Cameron was confused for a moment, but when he heard her let out a moan, he realized that she was touching herself now. Elena would jerk every now and then, either through Cameron's actions or her own. The sudden movement would cause her to push back roughly against him. Cameron decided if they had done this much, maybe he could push things a little further. With one hand still on her hip, Cameron leaned forward and grabbed at Elena's tit. He couldn't believe that this was really happening. Cameron loved how soft her breast was, the way it filled his hand, and how her erect nipple pressed into his hand. He loved the way her nipple was somehow hard and soft at the same time as he played with it. Elena moaned loudly and started to hump back against him even harder as he played with her breasts with more pressure and pulled harder on her nipples. Cameron was getting close to cumming and did his best to hold back. He wanted this moment to last for as long as possible.\n\nElena let out the loudest moan yet and started to spasm and rock back against him. She gasped and moved randomly against Cameron's shaft. Cameron realized that Elena was cumming, so he gave in and stopped holding back. Cameron started to cum on the inside of her thighs. Her movements then caused him to slide back and outside of her cheeky embrace. Cameron shot another load onto the small of her back, and one last one onto her ass. Elena braced herself against the wall as she recovered. Cameron looked down at the sight of Elena's ass covered in his cum and imagined what it would look like to cum on her tits, on her face, and how it would feel to be inside of her when he came. The water washed away the mess from both of them.\n\nElena straightened up and turned towards him. She wrapped her arms around Cameron's neck, pressed her body into him, and then her lips. Her full soft lips felt so amazing, Cameron was stunned from what they just did and the fact that Elena was pressing against him as she kissed him, so it took him a moment to start to kiss her back. Elena pulled back from the kiss but still held onto him. Cameron had his arms around her too. They looked into each other's eyes. \"I have been waiting days for you to try and make a move, so I decided to try and speed things along,\" she said.\n\n\"What if this didn't work?\"\n\n\"Then I would have thought you were beyond hope,\" Elena said. She laughed and gave him a quick peck on the lips.\n\n\"Well, I am glad I finally did something.\" They broke apart. Cameron thought that they were going to go back to their separate showers, but Elena grabbed his hand and held him back.\n\n\"Stay with me,\" Elena said. Cameron did as she said, but he made sure to close the curtain behind them. As he pulled the curtain closed, he scolded himself for not doing so earlier. The last thing he wanted was for Haley or someone else to walk in and catch him in the shower with Elena. Cameron ended up using Elena's shower supplies because he said he would stay with her, and he wasn't in a hurry to leave such a beautiful sight in front of him. They washed each other off and stepped out of the shower together.\n\nElena started to put on lotion when they were back out in the changing room. She offered her lotion to Cameron, which he accepted. Elena noticed Cameron was now more withdrawn as they walked out of the shower. \"Are you upset we did that?\" Elena asked, partially guessing correct at why he was quiet.\n\n\"No, I really enjoyed it, I enjoy being with you, It's just that-\"\n\n\"You feel bad because of Haley?\" Elena asked.\n\n\"Yeah,\" Cameron said.\n\n\"Look, I'm going to be honest, I really like Haley, and I like you too. I know you like each other, but you guys aren't dating, right?\" Elena asked.\n\n\"We aren't,\" Cameron confessed.\n\n\"Exactly, so why don't you relax. You guys aren't exclusive, you have only known each other for a few days. If you guys do become exclusive, let me know, and I don't mind backing off, or do you want me to just stop now?\" Elena said.\n\nCameron thought about it for a moment, all he had to say was yes, and he could have Elena stop teasing him and leave him and Haley alone. It might make things easier, but Cameron wasn't sure if that was what he wanted. Camron liked Haley, but he also liked Elena, and if he had to choose between him, he didn't know how he could choose one or the other. Cameron knew that they might all be able to stay friends, but eventually he would have to choose one of them. Elena was looking up expectantly at him, he wasn't used to her being so serious for so long. Cameron knew he might be making a mistake, but he had to try and see what things would be like if he gave Elena a chance. To answer her, Cameron leaned forward and kissed her.\n\nAfter the kiss, Elena smiled. \"I will see you later on,\" Elena said. Cameron walked back to his cabin. He felt overwhelming levels of the butterflies in his stomach, but they were being swatted down by the feelings of guilt that he was betraying Haley, and dread at what was going to happen if this ended up blowing up in Cameron's face and hurting all of them. Cameron was used to having no girl problems, and now he was having problems with having two girls. Cameron was not used to these problems, to say the least.\n\n************************\n\nLater, when Cameron saw Haley and Elena during breakfast, he was quiet. Cameron liked Haley, but he also had some feelings for Elena. Usually, Cameron would take months working out his feelings when he liked a girl, nothing would ever come from him over dwelling on his feelings, but at least by that point, he would have some familiar ruts so that his feelings were well laid out. With only knowing Haley and Elena for a week, it was too soon for him to try and be with either one of them, let alone juggle both of them. Cameron had seen enough sitcoms to know that this had to blow up in his face sooner or later, and knowing his luck, Cameron assumed that it would probably be sooner. Cameron told himself to take a day or two to think things through, and then after that, he would ask one of them to be his girlfriend. Or camp girlfriend, however this would work, and however long it would last, Cameron knew that he had to try.\n\nCameron was withdrawn the whole time they ate breakfast, not reacting as much to Elena's teasing or Haley when she talked to them. Both girls noticed Cameron being withdrawn and thought that their recent intimate moments with him might be the cause for him going back to his quiet self. Elena and Haley tried to pull Cameron out of his slump, but this made Cameron even more conflicted and guilty for what he had done with both girls without the other one knowing.\n\nAfter breakfast, Elena had to go back to work. She asked them if they wanted to go to the movie night with her tonight. Haley said yes, but Cameron didn't hear Elena's question, and she had to repeat herself. \"What, oh yeah, sure,\" Cameron said when he finally heard more of what she had said.\n\nCameron gathered up their plates and took them to the bin next to the trash can.\n\n\"Does something seem wrong with Cameron?\" Haley asked Elena once it was just them at the table.\n\n\"Yeah, he seemed off,\" Elena said.\n\n\"Do you know what is wrong with him?\" Haley asked.\n\n\"I don't know. Maybe he is just in some kind of slump today,\" Elena said.\n\n\"Yeah, maybe,\" Haley said.\n\n\"Just keep an eye on him. Maybe between the both of us, we can cheer him up,\" Elena said.\n\n\"Ok,\" Haley said. They planned to meet up later to get ready before the movie. The girls hugged, it lingered, and then they broke apart as Cameron walked up. Elena noticed that Cameron seemed to perk up a little when he saw the girls with their arms wrapped around each other.\n\nCameron and Haley spent the day together. Several times it seemed like Cameron was getting back to his usual self. Before, Haley had always wanted to touch him, but she was nervous about coming off as too affectionate with someone she had just met. After their first kiss last night, Haley thought that maybe she could stop holding back with Cameron and start to let her affection for him show more. At first, Cameron seemed to respond well to it, so Haley kept on with the light touches, but then out of nowhere, Cameron started to get quiet again. It was close to when Haley needed to go and get ready for the movie that night, and Haley still hadn't gotten Cameron out of his mood. Haley wondered if what they did last night was the reason why he was so upset. That didn't make sense to Haley. Last night had seemed so magical, and she thought that he liked her as much as she liked him.\n\n\"I am going to go and get ready with Elena, are you still going to meet us at her cabin?\" Haley asked.\n\n\"Yeah,\" Cameron said.\n\nHaley hugged Cameron. Cameron loved the comfort that she was giving him with the hug, but they held each other too tightly, and he could feel her breasts pressed against his chest. Cameron started to get hard from the contact. His erection began to press against Haley's thigh. Cameron waited for Haley to freak out, but she didn't say anything.\n\nHaley felt warm and safe in Cameron's arms. When she felt his erection start to press into her thigh, she was surprised, but she had to admit that she liked that just a hug between them could turn Cameron on so much. She had started to think that maybe he wasn't interested in her anymore. She hadn't planned on it, especially not out in the open, but she felt that warmth inside of her that she had felt last night, and she leaned up to kiss Cameron. At first, Cameron didn't kiss her back, and Haley almost pulled away, but then he started to kiss her back. For a moment, everything felt like it was going to be ok, but then Cameron broke off the kiss. Haley held back tears. Cameron saw that he hurt her.\n\n\"I'm sorry Haley, I just am feeling a little conflicted right now. I just need a little time, ok?\" Cameron held her hand and planted a kiss on her forehead.\n\nHaley squeezed Cameron's hand. \"Ok Cameron, I will see you later.\"\n\nCameron went to his cabin to grab his shower supplies and go take a quick shower. Cameron would have enjoyed today with Haley if he wasn't feeling so guilty. Haley seemed genuinely interested in him now, but every look and caress that he had been longing for now filled him with dread. Cameron felt guilty about what he and Elena did that morning and cursed the timing of it all. If he and Elena had fooled around a few days before that, it wouldn't have left him feeling so scummy, or if he and Haley had started moving further along in their potential relationship, he would have been more willing to resist Elena's advances. At least that was what he told himself.\n\nCameron wanted nothing more than to be able to return Haley's intimacy, but he felt wrong doing it after having his shower with Elena just that morning. All these events by themselves would have left Cameron feeling ecstatic, but having them happening at the same time was too much of an overload. Cameron told himself that he would do his best to get through the night with Elena and Haley, and after he slept on it, he would come clean about what happened and hope that he wouldn't cause a rift between all of them. He thought about keeping both of his relationships a secret from the other girl, but Elena said she would back off if he and Haley started seeing each other. If she found out about his and Haley's kiss the night before, would she consider them together and spill out the truth to Haley to try and protect her from Cameron? In the last week, it had seemed like Cameron had done a great job at being able to escape from his habit of overthinking and analyzing things, but with all of these new things happening, Cameron seemed to have slipped back into his old habits. Cameron got ready for the movie night like a man on death row the hour before his appointment with the electric chair.\n\n****************************\n\nBeing a camp counselor allowed Elena a slightly bigger room in her cabin. Haley was sprawled out on Elena's bed, waiting for Elena to get back from work so that they could hit the showers and start to get ready. Elena had seemed to trust Haley almost immediately and had given her a spare key to her cabin and room a couple of days ago. Back home, Haley didn't really have any friends. Her dating life was even more lacking then her social life. Most of the guys passed her over, and the ones who did show interest in her usually did so with horrible pick-up lines, or even the more than occasional picture of them with their shirt off or of their dick, and sometimes of them with their shirt off and their dick out. Gross. Not like her overprotective and religious parents would have let her date anyone if she wanted to anyways.\n\nHaley had been hesitant to go to this camp. She had spent so long as the quiet girl in school that it like it was going to be how she was the rest of her life. While she yearned for when she could get out from under her parents' control and be out on her own, it also scared her, she had no idea how she was going to make it on her own.\n\nAs a small child, Haley was always taking off her clothes and running around naked. Her parents would yell at her to cover up and about how sinful it was to do that. It took years for her parents to break her out of the habit. Haley's mom picked out all of her clothes for her, clothes that were often too baggy and looked horrible. On Haley's first day of middle school, she was made fun of by the other girls in her school for her outfit, some of the girls had been her friend the year before. When Haley made it home, she had thrown herself on her bed crying. When she looked down with her tear-blurred eyes and saw what she was wearing, she quickly stripped out of the clothing and threw it across the room. Once down to just her training bra and panties, Haley started to calm down. Haley started to remember how much she had loved going nude before her parents scared her out of it. Stripping out of the clothing was a way for Haley to take back some control.\n\nThis started a new routine for her. Every day when Haley would get home from school, she would strip down to her bra and panties for the couple of hours alone she had before her parents got home. Doing this started to make Haley feel like she was finally in control of something in her life, and this helped her be able to better withstand her overbearing parents. Haley started stripping down also at night in her room before she went to sleep. It was always risky; her parents didn't believe in Haley having privacy and would often knock just once before they swung the door open. Haley was afraid of being caught, but she also enjoyed the thrill of it. After a couple of months of this, Haley decided to take things further, and when she got home and stripped down, she got the urge to take off even more. With that same thrill that she had felt before, Haley stepped out of her bra and panties. She felt happier than she had in months, her problems with school and her parents seemed to just fade away with her clothing. After that, whenever Haley was alone in the house, she would walk around in the nude.",
        "During high school, when things would get to be too much, Haley would look up different nudist communities and fantasize about what it would be like to live like that all the time, just being completely free. It was during one of these searches in the middle of senior year that Haley discovered Camp Natural. Her parents were hounding her again about her body and what she wanted to go to school for. They wanted her to go to the same religious college that they had met at. Haley's mom always pointed out how she needed to meet a good Christian man, and going to that college would lead to that. Haley had gotten a scholarship to the college near Camp Natural, it had a fantastic science department. When Haley said that she was going to be going to that college, her parents wouldn't stop yelling. If Haley didn't go to the college that they wanted, then they wouldn't help her at all to pay for school. Haley said, 'fine then' and stormed up to her room and slammed her door. Haley went to her computer and did her usual searches and fantasies, and this time she found Camp Natural. Haley couldn't imagine staying the entire summer at home if this was how it was going to be. She signed up for Camp Natural and then cried herself to sleep. When Haley woke up, she saw that she had been accepted.\n\n\"Hello, Earth to Haley,\" Elena said as she jumped onto the bed.\n\nHaley stirred from her thoughts. \"Yeah, sorry, I was just lost in my thoughts,\" Haley said.\n\n\"Geeze, I guess that is going around,\" Elena joked.\n\nHaley smiled at Elena. Haley was loving her time at Camp Natural, but especially since she had met Cameron and Elena. Haley gazed at Elena's body. \"What?\" Elena asked.\n\n\"Nothing. Come on, let's get ready.\"\n\nThey sat side by side on the bench in front of Elena's vanity mirror as they got ready. It was a tight squeeze, but they were able to make it work since Haley was left-handed, and Elena was a righty.\n\nHaley got that warm feeling in her lower stomach that she always got when she was around Cameron and Elena. Haley would have to be blind to not find Elena attractive, her skin was flawless, and she loved her light brown skin. Back home, there weren't a lot of Hispanic people, and Haley loved her exotic look and the way she had a slight accent. Haley was jealous of Elena's curves. It seemed like Haley spent so much time waiting on the puberty fairy to give her a bigger set of tits, but it never happened. Haley even loved the way Elena smelled. Then Haley remembered how Cameron had smelled different earlier when she had hugged him.\n\n\"Elena, Can I ask you a question?\" Haley asked.\n\n\"You just did,\" Elena said smugly as she curled up her eyelashes.\n\n\"Real mature,\" Haley said. \"I noticed earlier that Cameron smelled different.\"\n\n\"Different how?\" Elena asked.\n\n\"He smelled like you,\" Haley said. Haley felt guilty about saying the words, but also weird. She didn't want to ask her if anything happened between them, or to accuse Elena of something. As much as she liked Cameron, they had just had their first kiss the night before.\n\nElena tensed up. She thought about lying for a moment but realized she had nothing to lie about. \"This morning, I happened to go and take a shower at the same time as Cameron, and I asked him if he could wash my back, one thing lead to another and we ended up fooling around in there. We didn't do much, but after, he stayed and took a shower with me, and I wouldn't let him leave me to go grab his shower stuff, and I just let him use mine,\" Elena said.\n\n\"Oh,\" Haley said and then got quiet.\n\nElena knew that Haley was upset. \"Look, I like him, I know you guys might have some kind of will-they-or-won't-they thing building up. After it happened, he got quiet, I think he feels bad about it. I told him that if the two of you end up being together, then I don't mind stepping back from trying to be with him. I love spending time with the both of you,\" Elena said. She put her hand over Haley's balled up one that she had been resting on her thigh. \"I think I might be the reason why he is so upset, so I wanted us to try and cheer him up tonight.\"\n\n\"Last night, Cameron and I went to the place out on the hiking trail that we went to our first night here, and it was so perfect. We were looking up at the constellations, and then there was a meteor shower overhead. He said I was beautiful, and he kissed me,\" Haley said.\n\n\"That sounds perfect,\" Elena said, wishing that she had been in Haley's place, or maybe even in Cameron's.\n\n\"Yeah. But I guess it wasn't enough for him. He was upset today, and I thought it was from last night, maybe he regretted kissing me or something. And then I found out he did 'stuff' with you this morning, I guess now he is regretting it when he could be with you instead,\" Haley said with tears in her eyes.\n\n\"What do you mean by that?\" Elena asked.\n\n\"Elena, you are so beautiful and perfect, any guy would die to be with you. You have seen how often Cameron checks you out, even after a week of constantly seeing your naked body, he still can't get enough of you. Why would he want to be with a flat-chested pale girl like me, when he could be with you?\"\n\n\"Haley, the boy likes you a lot. I wish that he would look at me with the same look in his eyes that he looks at you with. And you have spent more time with him then I have, and I still catch him checking you out because you are beautiful,\" Elena said.\n\n\"I'm not, I am awkward looking, and no one would want-\"\n\nElena interrupted Haley with a kiss. It was a quick one, and then Elena pulled back.\n\n\"Why, why did you do that,\" Haley said barely above a whisper.\n\n\"Because you are beautiful, and I have wanted to do that since we met,\" Elena confessed.\n\n\"You have?\" Haley asked.\n\n\"Of course I have. My teasing wasn't just towards Cameron,\" Elena said.\n\n\"I thought you just liked to flaunt your body a little bit more than others,\" Haley said.\n\n\"I do, but only for the people who I like,\" Elena said.\n\n\"So, are you bisexual?\" Haley asked.\n\n\"I kind of don't like labels, but I do find both some women and some men attractive, so yeah, if you had to, you could say that,\" Elena said.\n\n\"Last night with Cameron, that was my first kiss,\" Haley confessed.\n\nElena was surprised by this. She would have thought that such a cute girl like Haley would have had at least a few boyfriends. \"Wait, so this was your first time kissing a girl?\" Elena asked.\n\n\"Yeah, back home, my parents are kind of super religious, and they never let me date, so the thought of being with a girl was even more out of the picture,\" Haley said.\n\n\"But you like girls too,\" Elena asked.\n\n\"I wasn't sure. I would notice when a girl was cute or dressed in a revealing way, and I was curious, but I never got to experiment,\" Haley said.\n\n\"Did kissing Cameron feel good?\" Elena asked.\n\n\"Yeah,\"\n\n\"Did kissing me feel good?\"\n\n\"Yeah,\" Haley said.\n\nElena squeezed her hand, \"See, as long as it feels good and you are comfortable with it, then you shouldn't be afraid to explore your sexuality. Your parents aren't going to always be around you, so you should start trying to figure out who you are,\" Elena said. \"I had doubts about my sexuality, so I experimented to see what I liked rather than suppressing my feelings.\"\n\n\"But,\" Haley said.\n\n\"But what? Elena asked.\n\n\"Cameron and I kissed a lot last night, and our kiss was short, so it is kind of hard for me to compare them,\" Haley said coolly.\n\n\"Ok, so how do we make it even so that you can compare them better?\" Elena asked.\n\n\"We could kiss some more,\" Haley suggested.\n\n\"I'm game,\" Elena said. Haley slowly leaned forward for the kiss. At the last moment, Elena leaned back, forcing Haley to chase for the kiss. As Haley leaned forward, Elena decided to stop being mean and pressed her lips to Haley's. At first, the kiss was a little awkward, but Haley got such a thrill out of it. Haley couldn't believe that she was kissing another girl, especially one that was so beautiful and amazing. Their kiss deepened, allowing Haley to feel even more of Elena's warm, soft lips.\n\nHaley moaned into their kiss as the warmth from her arousal spread from their kiss down to her pussy. The heat then seemed to radiate throughout her body, causing her whole body to hum with pleasure. They wrapped their arms around each other as the kiss continued to intensify. Elena bit at Haley's lower lip and then sucked on it, causing her to moan again. Haley tried to do it back, but she was much too gentle about it. Elena did it again, this time sucking harder on her lip. Haley was a fast learner, and she got the hint. The next time Haley sucked on Elena's lip, she did it harder, just like how Elena liked it. Elena broke the kiss, and the two sat with their heads tilted and were resting their foreheads against each other. They were both breathing heavily as they gazed into each other's arousal-glazed eyes.\n\n\"So, what did you think?\" Elena asked.\n\n\"It felt good in different ways. Your lips are a lot softer than Cameron's are, and you were gentler,\" Haley said.\n\n\"For now,\" Elena said. Elena stood up from the bench. Haley's eyes widened; Elena's pussy was right in front of her face. Haley could see the slight parting of her cleft and her light brown outer lips. She could see some moisture coating her lips. For a second, Haley was both thrilled and scared that Elena planned on thrusting forward so that Haley could kiss Elena's other set of lips for the first time. Haley could smell the intoxicating scent of Elena's sex. She imagined what it would be like to have her mouth pressed against Elena's womanhood, how would it feel and taste to kiss and lick along Elena's tight pussy. Haley wanted to see how accurate her imagination was, and she started to slowly lean forward. Elena must not have seen Haley's subtle movement, because Elena lead Haley to her bed instead. Haley was both relieved and saddened that she hadn't been able to do what she had been building up the courage to do. Maybe that might be too much too soon, Haley thought, but she still wanted it.\n\nThey fell into the bed beside each other; Elena was already kissing Haley before they could settle onto the bed from their bouncing onto it. They held each other tightly as they continued to make out. Elena started to run her hands up and down Haley's body. Elena left quakes of pleasure in the wake of her touch. Haley started to do the same thing as she hesitantly explored another girl's body for the first time. Elena trailed a hand up the back of Haley's thighs, causing Haley to tremble with anticipation. When Elena finally grabbed Haley's ass, Haley let out a loud moan into their kiss. With Haley's mouth parted, Elena pressed her tongue into Haley's mouth. Haley clumsily tried to meet Elena's tongue with her own, but she couldn't focus with how much was going on.\n\nHaley had a hand pressed on Elena's hip, and she slowly inched it upward. Elena decided to speed things along and grabbed Haley's hand, guiding it up and pressing Haley's hand against her tit. Haley lightly probed Elena's tit. Elena pressed Haley's hand more firmly against her, but Haley didn't get the hint.\n\n\"You can touch me harder, I won't break,\" Elena said. Haley tried, but it was still too gentle for how turned on Elena was. Elena decided to show Haley how to do it on her. While Elena cupped Haley's tit, Elena started to touch Haley's tits too but was cupping them more confidently, and she started to roll Haley's nipple between her fingers and then pull on it. Haley moaned and pressed her body against Elena. Haley started to play with Elena's tits with more force and confidence.\n\nElena positioned her thigh so that it was against Haley's pussy, and then she started to rub against it. Haley let out a moan and shuddered in pleasure at the contact. Haley shifted her thigh and then started to press it against Elena's pussy. Elena let out a moan, this time Haley pushed her tongue into Elena's mouth. Elena pressed again against Haley, and her thigh pressed right up against Haley's clit. Haley cried out at the sudden bolt of pleasure.\n\nHaley's whole body felt like a raging fire as she was turned on from so many points of pleasure at once. Haley reached the point of no return, each sensation brought her closer to her orgasm. Elena was panting heavily too. With a loud gasp, Haley's orgasm hit her, causing her whole body to stiffen. Elena started to grind even harder against Haley.\n\n\"Oh fuck,\" Elena called out as she rapidly humped Haley's thigh. Haley's body relaxed, and she lay sprawled out on the bed. Elena tried to continue to ride Haley's thigh as her orgasm hit, but it became too much, and Elena collapsed into the bed beside Haley. Haley was looking up at the wall as she enjoyed the euphoric release of her orgasm. Haley couldn't believe it, she just had her first sexual encounter, and it was with a girl. Haley knew thinking of it as a sexual encounter was weird, but that was the best way she could think of it at the time.\n\nElena rested her hand on Haley's stomach and gently traced a finger along her chest and breasts. Haley turned towards Elena and wrapped her arms around her waist so that there was still some space between them.\n\nElena grabbed one of Haley's hands and brought it up to her mouth for a kiss. \"So, how was it?\" Elena asked as she trailed light kisses along Haley's fingers.\n\n\"It felt amazing. You felt amazing,\" Haley said. Elena was about to say something to tease Haley about how she seduced her, but Haley interrupted her by kissing her. The kiss was earnest and sensual, and while it was missing the sexual charge from before, Elena was surprised by how passionately Haley was kissing her. It was Elena who was left breathless by their kiss this time. Haley smiled. \"Come on, we have to finish getting ready to meet up with Cameron,\" Haley said as she got out of bed.\n\n\"Yeah, you're right,\" Elena said. As Haley moved back to the bench, Elena couldn't take her eyes off of the petite girl. Elena had always thought that Haley was beautiful, but she looked even more alluring now that her hair was messy, she was a little sweaty, and her skin had a lovely flush to it. Elena liked both guys and girls, but there was just something more enticing to her about being around a girl who she had just been intimate with. Elena climbed out of bed and took her spot beside Haley on the bench. They took a little longer to get ready because they kept on caressing and kissing each other.\n\n****************************\n\nCameron went to Elena's cabin as the sun was setting. He still felt conflicted about his two possible relationships, but at the same time, he told himself he should be happy to have this problem. Cameron did briefly think about trying to get with both girls at the same time, but he knew how dumb that would be to try. Cameron knocked on the door and repeated the mantra that had been playing on repeat the entire walk from his cabin to Elena's. Give it another day or so, get to know both of them a little better, make a choice, and try to keep them all friends after. When broken down into steps like this, it made Cameron feel a bit better about his situation. All I am going to have to do is pick one of them, Cameron thought.\n\nThe door opened, and Elena and Haley stood in the doorway. Cameron's jaw dropped, Elena and Haley both looked amazing with their hair done and makeup. Cameron always thought of Haley as cute and beautiful, but now with how she looked, the words hot and sexy popped into his head. Haley never wore much makeup before this around Cameron, so he wasn't expecting this. Elena looked even more sexy than usual. Cameron was worried; he already had a hard enough time before when being around her.\n\n\"So, what do you think?\" Haley asked. Cameron fumbled for words.\n\n\"I think that means he likes your makeover,\" Elena said,\n\nCameron told himself to hurry up and say something. \"You look great,\" he said to Haley. A smile lit up Haley's face. Cameron turned to Elena. \"Both of you look beautiful.\" Elena smiled at his compliment. Cameron felt a thrill at making both of them smile.\n\nHaley hugged Cameron. Cameron felt that same sexual thrill and comfort when he was pressed against her. Cameron wished that he could ask Haley for more hugs to help calm him down more. Elena handed Cameron the rolled blankets to carry while she carried the small basket of snacks for the movie. They walked down the path towards the large grass clearing that was used for outdoor gatherings. There was a big tarp set up at the end of the clearing. There were about twenty minutes until the movie started. They found a spot to sit in the back of the clearing. They set up their area and sat down to wait. Cameron sat down, and the girls sat down on either side of him. Being stuck in the middle of them as they talked, and Elena teased both of them felt normal to Cameron, and he found his stress melting away again. Seeing how close the three of them had become, Cameron started to lose his fear that if he started dating one of them, it would cause a rift in their friendship if he was honest and upfront about his feelings.\n\nCameron didn't think it was the best time to say this, but he didn't think that there would ever be a perfect time for saying something like this. Cameron scooted back a little so he could see both of them better. \"Hey guys,\" Cameron said to them to get their attention. Both girls turned to look at Cameron.\n\n\"I don't know the best way to say this, so I'm just going to try my best. I like both of you, I enjoy the time we spend together. I know we haven't known each other for a long time, but I am more comfortable with you two than with anyone back home. The last thing I would want to do is something that would hurt you and break up our friendship,\" Cameron said.\n\n\"We know that,\" Haley said and reassuringly held onto Cameron's hand.\n\n\"While I think I did do exactly that. Elena, last night Haley and I had our first kiss, and Haley, this morning, Elena and I ended up in the shower together, and some things happened between us. I really like both of you, but I feel terrible about doing something with both of you. It isn't fair if I'm intimate one moment with one of you, and then, later, I'm with the other one,\" Cameron said.\n\n\"None of us are dating,\" Elena said.\n\n\"I know, but what if I want to date one of you if you would date me? I don't want to be in the habit of doing things behind your back if I am trying to work up to being in a relationship,\" Cameron said.\n\n\"Who would you want to go out with?\" Haley asked.\n\n\"I like both of you a lot, so I honestly don't know right now, I was going to give myself a couple of days to think about it, but I didn't want to keep on trying to keep this secret inside of me, it was tearing me apart,\" Cameron said.\n\n\"We knew about it,\" Haley said.\n\n\"Know about what?\" Cameron asked.\n\n\"The kiss,\" Elena said.\n\n\"About what happened in the shower,\" Haley said.\n\n\"Oh,\" Cameron said.\n\n\"You know how close Haley and I are. We talk, and sometimes we talk about you, and we already talked to each other about it,\" Elena said.\n\nCameron's mind snagged on that point for a moment, they talk about him? \"So, you aren't mad?\" Cameron asked.\n\n\"I was at first,\" Haley said, \"but I had to remember that we are not dating, and we never talked about being exclusive. While I was a bit jealous, I can see how you could have fallen to Elena's charms, she is hard to resist.\" A smile passed between them. \"Better her than with some random girl from the camp.\"\n\n\"Can you give us a few minutes alone so that we can talk?\" Elena asked Cameron.\n\n\"Sure,\" Cameron said and got up. Cameron realized that he had to use the restroom, so he walked deep into the woods to take a piss. Cameron didn't need to go as deep into the woods as he did, but he liked the extra bit of privacy and needed the extra time to think. Him confessing had gone a lot better than he had expected, Cameron thought that he would have been pelted with hits or at the very least some harsh words from one or both of them. They had both known about Cameron having an intimate moment with the other girl, yet they had been trying to cheer him up all day. Cameron felt a bit selfish that he had been wallowing in his guilt and self-pity and that he had let that get in the way of him having a good day with his friends. Haley was the one that Cameron was the most worried about hurting. While she seemed confident in her nudist lifestyle, she seemed vulnerable when it came to dating. Elena seemed strong all around, but sometimes Cameron wondered if that was just an act.",
        "Cameron made it back as the sun was dipping below the tree line. The girls were sitting close together and were still talking. When they saw Cameron walking up, they scooted apart from one another and patted for him to sit in between them. Cameron sat down and waited for them to say something, but neither girl did. Cameron worried for a moment if they had gotten him to sit in between them just so it would be easier for them to attack him for getting involved with both of them \"So?\" Cameron asked.\n\n\"So, what?\" Elena asked with a smile.\n\nCameron sighed. \"So, what did you two talk about?\" Cameron asked.\n\n\"Shush, the movie is starting,\" Haley said as the digital projector kicked on. Cameron was going to say more, but then Haley snuggled up on one side of him and Elena on the other. Cameron was overwhelmed with having their smooth, warm bodies pressed against him, and he decided to wait to ask them until after the movie. This was a good sign; it wasn't like they would snuggle up to him now, and then castrate him later. Hopefully.\n\nThe first movie was an old summer blockbuster full of explosions. Cameron hadn't seen the movie since it came out in his childhood. Cameron had enjoyed seeing it as a child, and while some of the lines were a little cheesy, he was glad that, for the most part, the movie was still entertaining watching it again as an adult. Having two beautiful naked girls pressed against him only further enhanced his viewing experience.\n\nThat night was unexpectedly chilly, and the wind moving across the water made it even colder. Cameron was glad that they had brought an extra blanket in case it got cold or that they needed a little extra cushioning. As the cool wind blew across them, the girls pressed even tighter together. From the moment they first lay together under the blanket, Cameron got an erection. He had it the entire time that they were watching the movie. The more the girls pressed against him, the harder he got. To Cameron, his erection making a tent in the blanket was blatantly obvious, but neither one of the girls responded to it. Cameron was slightly embarrassed by it, but he had been turned on so much around them without them making a big deal about it that he was starting to not worry about them getting upset at him for it.\n\nAfter twenty minutes of his cock straining, Cameron wished that he could sneak away and take care of it so that he could get some peace from his horniness, if only for a few hours. Cameron felt a hand rest gently on his lower thigh, and he jumped. Cameron knew it was Elena, but when he looked over at her, she was focused on the movie and was doing her best to look innocent. Elena left her hand there for a few minutes, so Cameron thought that maybe the touch was innocent, but as Cameron started to calm down from Elena's touch, she began to rub his thigh. Cameron let out a sigh at her touch. It still wasn't in a sexual place, but her touch felt so good in itself. Elena started to slowly inch her hand up, sometimes not moving for minutes, and other times just slightly sliding up. Cameron tried to focus on the movie, but the closer that Elena got to his erection, the more he was distracted. Elena was just a few inches away from touching Cameron's dick when she stopped. One minute became five minutes, and five minutes became ten. Cameron couldn't stand the teasing anymore, all he wanted was to feel Elena's touch there. She was so close to it, so why did she stop? Cameron was getting so sexually frustrated that he thought about jerking off right there in between them, but he hadn't done anything that sexual with Haley yet, and he wasn't sure if she would be comfortable with it.\n\nThere was a sex scene that Cameron had forgotten about. Once it came on, Cameron could feel his erection pressing up against the blanket even more. Cameron had gotten used to being naked most of the time, so the feeling of the blanket against his erection made him extra uncomfortable. During the sex scene, Elena finally slid her hand up and brushed her fingertips against his balls. Cameron jumped again and let out an exhale of breath. Cameron looked over at Haley to see if she knew what was going on, but she seemed focused on the movie.\n\nElena started to massage Cameron's balls, causing Cameron's whole body to get warm and tingle with pleasure. Cameron had mostly ignored his balls when he masturbated, so he had no idea that someone could give him so much pleasure by touching him there. The sex scene was a little cheesy, but there was just something about nudity in older movies that Cameron always liked more than in current ones. Elena inched her hand upward and gently caressed her fingers up Cameron's shaft. When Elena made it to the tip of Cameron's erection, she started to gently rub his head, working in the precum that had gathered at the tip. Elena started to slowly jerk Cameron off, not enough to get him off, just to keep him hard and wanting more. The sex scene was brief, but Elena kept on jerking him off after it was done.\n\nCameron could tell that Elena was holding back, but her touch still felt amazing. Cameron started to get nervous. Haley was lying against him with her hand on his chest. Cameron wondered if she knew what was going on. When he looked down at her, she was still focused on the movie. After ten minutes of a slow handjob, Elena let go of Cameron's erection. Cameron thought for a moment that Elena was done jerking him off and was going to leave him wanting more. That would be like her, but a moment later, he felt Elena's hand beside Haley's on his chest. Elena wrapped her hand around Haley's. Cameron thought that it was sweet that they were holding hands, but then Elena started to guide Haley's hand down. Cameron's breath caught in anticipation as he realized what Elena was doing. When their hands brushed through his pubic hair, Cameron let out a sigh. Haley's hand finally reached Cameron's erection. Haley started to gently touch along Cameron's cock and balls as she explored a penis for the first time. Her touches were less confident then Elena's, but Cameron got a thrill out of his being the first penis that she was getting to practice with. After a few minutes of letting Haley explore Cameron's cock, Elena wrapped her hand around Haley's again and positioned her hand at the tip of Cameron's cock. Elena guided Haley's hand up and down, getting her used to jerking him off. Cameron couldn't believe that he was getting a handjob by two girls at once.\n\nElena guided Haley's hand for a couple of minutes until Haley finally got the rhythm of it; Elena then slid her hand down Cameron's shaft and started to play with his balls again. After all of the teasing and being hard for about the last hour, Cameron was ready for a release, but he was nervous at what they were doing. When he looked around at a few of the other couples around him, he noticed they were all either suspiciously close to one another under the blankets, or that they were full-on making out.\n\nCameron was getting close to cumming when Elena started to kiss along his neck. This pushed Cameron even closer to the edge. Haley followed Elena's lead and started to kiss her way up his neck as well. Haley made it up to Cameron's lips first and kissed him. Cameron was brought back to their kiss under the stars the night before. It felt right to be kissing her. They were both still a little awkward in their kissing, but they made up for it with eagerness. Elena kissed her way along Cameron's jawline and then pulled him towards her for a kiss. Haley went back to kissing Cameron's neck as Elena took control of their kiss quickly and turned it into a sensual open-mouthed kiss. Elena and Haley switched so that Haley started to play with his balls, and Elena jerked him off. With Elena's skilled hand, Cameron knew that he wouldn't be able to last much longer.\n\nCameron was on the verge of cumming, and it got harder for him to focus on trying to meet Elena's lips. Haley pulled Cameron back towards her and started to kiss him again. Elena sucked on Cameron's neck and then began to nibble on his earlobe. \"I want you to cum for us, cum all over our hands.\" Elena's sensual voice and the warmth of her breath was too much for Cameron, and then she added, \"Your dick is so big and hard, I can't wait to have it inside of me.\" The thought of being inside of Elena's tight pussy was too much for Cameron, and he started to cum. The girls continued to jerk him off and play with his balls as he shot his load up onto the blanket. Some of his cum fell back down onto their hands and lubed them up so that their hands slid up and down Cameron's faltering erection. It felt too good as Cameron became extra sensitive after having his orgasm. Elena slowly stopped jerking Cameron off as his body stopped being so tensed up and he loosely laid back down onto the blanket. Elena had some napkins that they used to clean up Cameron and their hands. Afterward, they lay back down and pressed their bodies against Cameron. The three of them went back to watching the movie as if nothing had happened.\n\nThey watched the rest of the movie cuddled up against the cold night's air, Cameron still in shock over what just happened, Haley surprised with herself for doing such a thing, and Elena proud that she had seduced Cameron further and had gotten Haley in on it this time. There was a ten-minute intermission between movies. The girls walked off to the restroom together and left Cameron to guard their spot. Cameron couldn't take his eyes off them as they walked away. Cameron laced his hands behind his head and looked up at the stars as he waited for them. Cameron felt fully content at the moment. His worries from the day fading away.\n\nElena and Haley made it back just as the next movie was starting. Cameron lifted his arms, and they nestled up against him again. The second movie of the night was a horror movie that came out last year. Cameron usually didn't watch scary movies, so he hoped that he wouldn't jump too much from it and be embarrassed in front of the girls. The movie ended up being just as scary as all those reviews had said it would be. Cameron had expected Haley to be the one who got the most scared, but to Cameron's surprise, it was Elena. As the music would build up to a scary moment, Elena would cling tightly to Cameron, digging her nails into his hand, and then when the scare would happen, she would jump, squeeze tightly, and bury her head into Cameron's shoulder so that she didn't have to watch. Cameron thought it was adorable that someone so fierce and confident could be affected so strongly by a horror movie. Cameron was scared too, but he was able to better control his fear since he had two beautiful naked girls pressed against him to distract him.\n\nThe movie ended close to midnight. The projector turned off, and the only lights around were the weak ones coming from the nearby camp buildings. They packed up their stuff and started walking back down the path towards their cabins. Cameron asked them what they thought of the scary movie. Haley said she liked it, but it could have been scarier. Elena agreed with Haley and tried to say how boring the movie was when a branch snapped nearby. Elena cried out and clung back onto Cameron's arm. Cameron and Haley teased Elena, who wouldn't let go of Cameron's arm for the rest of the walk. Cameron made a mental note to try and show Elena more scary movies. Haley must have been jealous she wasn't getting attention because she took Cameron's free hand into her own, so they walked the rest of the way like that.\n\nThey reached Elena's cabin first, and Haley and Cameron started to say their goodbyes so that they could continue walking.\n\n\"Wait,\" Elena said. \"Would you like to spend the night?\"\n\n\"You only want Haley to spend the night because you are still scared,\" Cameron said.\n\n\"Maybe, but I wasn't just talking to Haley,\" Elena said and smiled at him.\n\nCameron lost the smug smile he had from making fun of Elena. After they jerked him off under the blanket, things had seemed to go back to normal between the three of them as they watched the scary movie and talked like usual on their way back from the clearing. Elena could be asking them to spend the night as friends, but after what was happening between the three of them, the potential sexual implications of Elena inviting both of them to spend the night were not lost on Cameron.\n\nHaley seemed to be having similar thoughts as Cameron, but she said that she would like to spend the night.\n\n\"Yeah, me too,\" Cameron said. He wasn't about to say no to this opportunity.\n\n\"Great,\" Elena said and grabbed both of their hands and lead them up the porch stairs. She put a finger to her lips to tell them to be quiet as she snuck them into her room. Cameron had never been in Elena's room before, and he was surprised at how much bigger it was compared to his. Cameron guessed that a bigger room was one of the perks of being a camp counselor. Elena had Cameron put the blankets into a hamper she had in the corner. Elena pulled her iPhone out and turned on a mini boombox on her dresser and started playing some modern R&amp;B. Elena turned down the music and dimmed her bedside lamp so that it wasn't too bright. Haley had already sat down on the bed while Cameron was still standing close to the doorway. Elena jumped onto the bed. She patted the space that she had left between her and Haley. Cameron sat down, but there wasn't much room, and his legs were pressed against Elena's and Haley's.\n\n\"So, Haley and I were glad that you talked to us about how you were feeling and how you didn't want to be leading us both on. We appreciate you respecting us enough to be honest with us. We both like you too, obviously,\" Elena said.\n\n\"Is that why you tease me so much?\" Cameron asked.\n\n\"That, and you are cute when you get all flustered and can't speak. We are all adults, and Haley and I had an idea that might be a little unconventional,\" Elena said.\n\n\"What idea is that?\" Cameron asked.\n\n\"Well, Elena and I were talking, and if you were up to it, we would be open to trying out a relationship between the three of us,\" Haley said.\n\n\"What?\" Cameron asked, \"What do you mean between the three of us?\" Cameron heard her, but he couldn't believe what they were getting at. Cameron knew about open relationships, (or was this a poly relationship?) but only in an academic setting. He knew about them as much as he did a regular relationship, nothing.\n\n\"While you and I would be dating,\" Elena said.\n\n\"We would also be dating,\" Haley said.\n\n\"And Haley and I will also be dating,\" Elena said.\n\nOnce again, Cameron heard what they were saying, but it was too much to process at once. \"Wait, so I would be dating both of you, and what was that about you two dating too?\"\n\nElena sighed at how slow Cameron was on the uptake. \"Let's show him,\" Elena said. She leaned across Cameron, placing one hand on Cameron's thigh. Haley mirrored Elena's movement and put her hand on Cameron's other thigh. The two girls locked lips, passionately kissing each other. Cameron couldn't believe that they were making out right in front of him. Elena had been teasing Haley almost as much as him, but he never thought that Elena meant anything by it. Cameron's cock started to rise at the display of sapphic love, he was unable to look away. They pressed down on his thighs and continued to kiss for several minutes, their kiss continuing to deepen as time went on. Cameron thought that they may be so lost in their kiss that they forgot about him for a moment, but he didn't mind if he got to watch.\n\nElena finally pulled away from the kiss, both girls were left panting. Elena smiled at the dumbfounded look on Cameron's face. \"I forgot to mention that Haley and I had a moment together earlier just like you, and I did.\" Cameron looked over at Haley. She seemed a little embarrassed, but she nodded her head, yes. \"So, what do you think, both of you?\"\n\nHaley leaned forward again and planted a quick peck on Elena's lips. Elena wasn't satisfied with just that, and she playfully sucked on Haley's lip as she pulled back. Haley laughed. \"Yes. So, my first relationship is going to be with two people at once?\"\n\n\"Yep,\" Elena said and gave her another kiss back.\n\nCameron was still stunned by what he was being offered as both girls looked at him expectedly. Cameron scolded himself; just that day, he had been debating which one of them he wanted to be with, and now he was being given a chance to be with both of them at the same time, and he was hesitating to say yes. It must have just been because he was being offered too much of a good thing all at once. \"I really like both of you, you are two of the most beautiful and coolest girls I have ever met, and if you are willing to give this a try, of course I'm going to say yes.\"\n\nHaley jumped into Cameron, hugging him, and Elena followed her lead. The force from both girls knocked Cameron back onto the bed. They landed on top of him. Haley kissed him, and Cameron was transported back to that warm feeling in his stomach that he had the night before when he and Haley shared their first kiss. Haley seemed more confident in kissing him, and Cameron wondered if he fell behind in kissing experience since something had happened between Haley and Elena. Haley took the lead and turned the kiss deeper. Cameron felt her nipples harden as she pressed her body against him. When Haley finally broke off the kiss, Cameron took a breath, and then Elena took Haley's place and started to kiss Cameron. Haley had already worked up Cameron, so he was a little prepared for how fierce Elena kissed him, and he matched her passion with his own. Cameron wasn't prepared for when Elena slid her tongue into Cameron's mouth. Cameron did his best to try and French kiss her back, but with how good her tongue felt and the fact that Cameron had both of them pressing their bodies against him, Cameron was having a hard time focusing on the kiss. When Haley started to kiss and suck on his neck, it got even harder for Cameron to focus, and when a hand began to gently fondle his cock and balls, Cameron started to enter into sensory overload.\n\nElena broke off the kiss, and Haley started to kiss him again. Cameron began to roam a hand across each girls' body, cupping their asses and then sliding his hands back up to cup their breasts. Cameron loved the differences and similarities in the way their bodies felt. Since Cameron was busy kissing, he couldn't watch where his hands roamed; this made him more focused on his sense of touch as he explored their bodies. Cameron had looked at their bodies so much over the last week, that even though touching their bodies was a new sensation, it also felt familiar. Cameron had seen their nude bodies so much, and while he wasn't desensitized to their beauty, it felt refreshing to be experiencing their bodies with his sense of touch. Cameron felt another hand start to touch his erection.\n\nHaley stopped kissing him, and she sat up as Elena kissed her again. While still jerking Cameron off, Elena reached up and started to play with Haley's breasts. With her free hand, Haley began to do the same to Elena. They kissed deeply, their lips locking and their tongue's flicking against one another's. Cameron loved watching them kiss and touch. As he watched, Cameron noticed that since they were busy jerking him off that the girls only had one hand to touch each other. Cameron was still trying to figure out the timing of all of this, so he decided to reach up and start to play with each of their tits. Elena let out a little squeal of pleasure and Haley a small moan.\n\nCameron compared the girls' breasts as he felt them up. He loved how Elena's breasts were fuller, and how he had to try to fit them entirely in his hand, how when he pushed them up and let them drop they would fall back down with a bounce, and he also loved her puffy dark nipples and the way they were both soft and a little bumpy. Cameron loved how perky Haley's small tits were, how when he played with them and let them drop like he did with Elena's they would fall right back into position, and how her areolas were small and petite like her, and how firm yet soft Haley's larger nipples were. Cameron had been looking at their tits for so long, now that he finally got a chance to touch them, he wasn't going to miss his chance to make the most out of it.",
        "The girls stopped kissing, and Elena leaned down and took one of Haley's nipples into her mouth. Haley instantly let out a loud moan as Elena sucked onto her tit and pulled back until she let go of it with an audible pop. Elena then moved over to Haley's other nipple, the one that Cameron was still playing with. Elena flicked her tongue across Haley's nipple and Cameron's fingertip. Elena licked Cameron's finger and then started to suck onto it. Elena held eye contact with Cameron as she took in more of his finger into her mouth and began to bob her head up and down on it. The visual of Elena sucking on his finger made Cameron's cock twitch as its stand-in was sucked on. Cameron didn't know that a girl sucking on his finger would feel so good. Elena took his entire finger into her mouth and sucked deeply on it. When she pulled his finger back so that just the tip was resting on her lips, she took in a second finger and then started to suck on two of his fingers at once.\n\nWhen Elena stopped sucking on Cameron's fingers, he went back to playing with Haley's tit. Haley seemed to enjoy it more now that Cameron's touch was lubricated. Elena leaned down and kissed Cameron, pressing her body against him. She started to kiss down Cameron's neck and then body. Cameron tried to watch her progress as she made it lower, but Haley blocked his view by leaning over him. Haley's tits were right in front of him, so Cameron leaned up and took one of her nipples into his mouth. Haley let out a moan at the contact. Cameron gently sucked on and flicked his tongue across her nipple. \"You can go a little harder,\" Haley said with a sigh. Cameron sucked onto her nipple again, this time sucking hard and taking nearly all of her tit into his mouth. Haley let out a louder moan this time. Cameron swirled his tongue along Haley's nipple when he felt Elena lick up his shaft. Cameron let out a moan and let go of Haley's nipple for a moment and then took it back into his mouth. Elena wrapped her soft lips around the tip of Cameron's penis and slowly started to take it into her mouth. She took in his entire head and sucked deeply on it. As she sucked, she swirled her tongue around his head. She pulled back with a popping sound again.\n\n\"Haley, come down here,\" Elena said.\n\nHaley scooted down so that she was now down on the opposite side of Elena with Cameron's erection in between them. They were holding hands around the base. \"Go ahead and tell Cameron what you told me,\" Elena said.\n\n\"I don't know,\" Haley said. Cameron couldn't tell if she was really being shy or was playing coy. Cameron thought that it was most likely both.\n\n\"Come on, I bet Cameron would love to hear it,\" Elena said. \"Wouldn't you, Cameron?\" Elena squeezed Cameron's erection.\n\n\"Yes,\" Cameron said.\n\n\"See?\" Elena said.\n\n\"Ok, I will tell him.\" She took a breath. \"Ever since the first time I saw your erection, I wanted to touch it.\" Haley did so, lovingly caressing it.\n\n\"And what else have you wanted to do?\" Elena asked.\n\nHaley lowered herself so that her mouth was level with Cameron's erection but a little back so that it was between her and Cameron. \"Ever since I saw it, I have wanted to touch it, and I have wondered what it would be like to suck on it.\" Cameron didn't blink as Haley leaned forward until she was just an inch away from it. Cameron could feel her breathing on it, and it gave him goosebumps. \"What do I do?\" Haley asked Elena.\n\n\"You can lick it,\" Elena demonstrated by swirling her tongue around it, \"and you can kiss and suck on it.\" Elena demonstrated these things as well.\n\n\"Ok,\" Haley said. She stuck her tongue out and leaned forward. When Haley's tongue connected with Cameron's erection, he felt a jolt of pleasure arc through his body. Haley licked up and down for a moment with just the tip of her tongue, but as she got more comfortable, she started to lick harder. Haley licked at the base of Cameron's cock, and then licked up to its tip. Cameron moaned. \"Like that?\" Haley asked.\n\n\"From his reaction, yeah like that. Just pay attention to how he reacts to what you do. Listen to when he moans or exhales. Pay attention to when her jerks or tenses up.\"\n\n\"Ok,\" Haley said and then went back to licking Cameron's cock head. Haley swirled her tongue around Cameron's cock like Elena did. She then pressed her lips forward and started to gently kiss the tip of Cameron's erection. Her first kisses to his dick were like the first kisses they had shared over the last couple of days. At first she just gently kissed Cameron's dick, her lips were only just barely parted, and she didn't press down very hard, but as she got more comfortable with it, she started to press down more and opened up her mouth more to wrap her lips around the head of Cameron's cock. As she deeply kissed Cameron's cock, she then started to lick again.\n\nElena leaned forward and started to kiss the other side of Cameron's cock head. The two moved slowly towards each other and then started to open mouth and French kiss with Cameron's cock between their lips. The sight of them kissing each other and his cock at the same time, along with the way it felt, was almost too much for Cameron. If he hadn't already cum so much so recently, that he would have cum by now and blew his load all over lips and tongue. The image of this happening popped into his head, and Cameron got a little closer to cumming.\n\nThe girls made out with each other and Cameron's cock for countless glorious minutes. By the time Haley pulled back, Cameron's cock head was slick with their saliva. \"What next?\" Haley asked.\n\n\"This next part is a little harder but will feel the best. You wrap lips around the tip,\" Elena did this, \"and then you slowly slide your mouth down, taking in as much as you are comfortable doing,\" the vibrations of Elena's words reverberated around Cameron's cock and vibrated it. Elena wrapped her lips around Cameron's member. She paused for a moment and then started to slowly lower her mouth down around it. Elena took about half of Cameron's seven inches into her mouth and held there. Cameron couldn't believe how good it felt to be inside of Elena's mouth, the feeling of the warm moistness, and how tight her mouth was almost too much for him. Cameron knew how much guys were supposed to always be so obsessed with getting them. Elena sucked in, and then pulled her mouth back up, dragging her lips along his shaft as she pulled up. \"Like that,\" Elena said.\n\n\"Ok,\" Haley said and started to lean down. She wrapped her lips around his head and lowered her mouth down slowly. She took almost as much as Elena took in one gulp. Haley tried to hold it there, but she had to pull back up.\n\n\"That was good for your first try, now just copy what I do and try some things on your own, just be careful about your teeth,\" Elena said. Elena leaned down and took Cameron's erection back into her mouth and started to bob her head up and down. Haley watched almost as intently as Cameron did as Elena began to show off her blow job skills. When Elena finally pulled back, Haley was quick to take back over. She slowly moved her mouth up and down, at first only going a little past the head, and then working to the point that she had reached before. Haley was hesitant at first, but she started to build confidence quickly. Cameron knew that this was Haley's first time giving a guy a blow job, but he almost couldn't believe it. Elena was the better one from having more practice, but Haley felt terrific with how she was hesitant at first, but now how eager she was to try and please Cameron.\n\nAt first, they would take turns blowing Cameron, but as Haley got more comfortable doing it, her and Elena started to suck on it at the same time. One would take Cameron into their mouth while the other would lick and suck along the shaft and balls. Cameron stared down at them, unable to believe the beautiful sight before him. He wished it could go on all night, but no matter how hard he fought his building orgasm, he couldn't hold it back forever. Haley was sucking on Cameron's balls, and Elena was skillfully bobbing her head up and down Cameron's shaft when Cameron felt his orgasm approaching. \"I'm about to cum,\" Cameron warned them. Elena opened her mouth and pulled away from Cameron's erection without touching it, stopping just before Cameron could cum.\n\nHaley stopped sucking on Cameron's balls and moved up so that once again, there was one girl on either side of his erection. \"Say what you told me earlier,\" Elena said.\n\nHaley got a little shy again, but in the heat of the moment, she was willing to repeat herself to Cameron. \"I told Elena how I was curious what your cum would taste like, and how badly I wanted you to cum in my mouth.\" While Elena cussed like a sailor with Tourette's, Cameron wasn't used to Haley talking dirty, so when she did, it turned him on even more. Cameron's cock twitched. He was so close to cumming, and all he wanted was to finally feel a release. Haley leaned forward and wrapped her lips around Cameron's shaft and started to bob up and down again. Elena leaned down and took one of Cameron's testicles in her mouth, sucking so hard on it that it was almost painful. Cameron couldn't hold back any longer, and after just a few seconds, they got him to start to cum.\n\nAfter already cumming twice that day, Cameron's load wasn't the biggest, but it was too much for Haley to take at once. The first load shot right into her throat, making her gag a little, and she let go of for a second and backed up so that Cameron's erection was out of her mouth. The second load shot up, some coating her lips, and the rest fell onto Elena's cheek. Haley wrapped her lips back around the tip of Cameron's erection and gently jerked him off to milk the last of Cameron's cum. Haley visibly swallowed the last of the load. Elena licked up any of the cum that Haley missed. Elena licked up along Cameron's shaft as she cleaned it off, and then when she made it to his tip, she transitioned from that into a deep French kiss with Haley. The girls swirled their cum-coated tongues together. Elena licked at the cum on Haley's chin, and then Haley licked up the cum on Elena's cheek, and then they kissed again. Cameron had collapsed onto the bed when he had his orgasm, so he had to struggle to keep his head up and continue watching the show in front of him.\n\n\"What did you think?\" Elena asked Cameron and Haley.\n\n\"That felt amazing,\" Cameron said as he sighed contentedly.\n\n\"I liked doing it, I just wasn't expecting his cum to taste so strong,\" Haley said.\n\n\"You get used to it, Cameron tastes great compared to some of the guys I have been with,\" Elena said.\n\n\"Maybe it is because he is such a sweet guy,\" Haley said and climbed up to hug Cameron. She snuggled up against him, pressing her body firmly to his. Cameron was surprised to feel how warm and slick Haley's pussy felt as she pressed it against his thigh. Haley nuzzled her head into the hollow of his neck. She kissed up along his lower jawline, but then hesitated when she got one kiss away from his lips. Cameron wondered why she hesitated, and then he had the intuition that it was because he had just cum in her mouth, and she might think he wouldn't want to kiss her after doing that. Cameron didn't want to taste his cum, but after what she and Elena just did for him, he knew that it might break the intimacy a little if he refused her that one show of affection. He knew if he didn't want to, then she wouldn't fault him for it. Cameron found himself wanting to kiss her. After having such an amazing orgasm, all Cameron wanted to do was cuddle up with his girlfriends, be cute, and kiss them. Cameron decided that his desire for them outweighed his distaste at the thought of maybe tasting his cum, and when Haley started to pull her lips away, Cameron leaned forward quickly and kissed her.\n\nElena climbed up to Cameron and pressed herself on Cameron's other side. She gently pulled Cameron away from Haley's kiss, and she started to French kiss Cameron. As she did this, she began to grind her pussy against his thigh. Elena was incredibly wet as she slid her pussy along Cameron's thigh.\n\nCameron had an arm around Haley, and he slowly rubbed his hand down her back, had hand rising over the slight curve of her ass, and then along the bottom of it. Cameron rubbed Haley's ass as she humped against his thigh like Elena was doing. Cameron ended up rubbing too far down at the same time Haley humped, and his hand ended up sliding down lower, and he felt the warmth of Haley's pussy as his fingers slipped just a little inside of her. Haley tensed up, and then she continued to hump against Cameron's thigh, only now her movements caused his fingertip to work in and out of her. Cameron rubbed around her outer lips and slid his finger in and out of her. He couldn't believe how tight, moist, and warm her pussy felt, it was like when Elena sucked on his finger, but even better.\n\nCameron's other arm was trapped between the bed and Elena. Elena must have seen what Cameron was doing to Haley and decided she wanted some too because she grabbed his hand and dragged it over to her waiting pussy. Elena pressed Cameron's hand against her sex, and she started to grind against it, causing her lips to part slightly and slide along Cameron's hand. Cameron rubbed his finger around her hairless slit and then slid a finger inside of her. Elena moaned and started to ride him harder.\n\nCameron did his best to concentrate as he fingered a girl for the first and second time of his life simultaneously. He listened to their responses as he fingered them. Haley seemed to like it better when he rubbed along her lips and pressed just on the inside of her pussy, while Elena liked it better when he slid two fingers in and out of her. Cameron fingered both of them for almost ten minutes. They seemed to be enjoying themselves as they humped against him harder, and their breathing and moaning got louder, but Cameron wondered if he was doing something wrong since they hadn't cum yet.\n\nElena kissed Cameron and then kissed Haley. Elena then grabbed Haley's hand and guided her over to the head of the bed, scooted to the side, and positioned Haley in the middle of the bed. Elena patted the other side of the bed for Cameron to follow them, so he did.\n\nThe girls started to make out and play with each other's tits. They seemed so focused on each other that Cameron was content to enjoy the show since he was still recovering. As they made out, they started to press their bodies against each other, and Elena ended up on top of Haley. They began to hump harder, and when Haley let out a loud moan, Cameron realized that they were rubbing their pussies together. Elena leaned down and started to suck on one of Haley's tits. Cameron's cock started to stir, and he saw a place where he could hop back into things. Cameron took Haley's other nipple into his mouth and began to suck on it. Haley moaned and writhed under the combined effort of Elena and Cameron. Elena started to kiss her way down Haley' body, she climbed down between Haley's legs and spread them. Cameron and Haley watched as Elena kissed down the inside of Haley's thigh. Elena licked deeply along Haley's outer lips. Haley shivered at the contact.\n\nElena usually would take things slower, but she was too turned on to do so. Elena slipped her tongue inside of Haley's pussy, loving the way that her pussy tasted. Haley responded so well to it that Elena had to keep on going faster. She pressed her tongue as deep into Haley's virgin hole as she could, tasting her warm juices from the source. Haley started to hump against Elena's tongue. Haley's breathing started to get increasingly ragged. Elena pulled her tongue out and licked from the bottom of Haley's pussy up to her clit and flicked her tongue across it. Haley arched her body, which pressed her tit against Cameron's mouth and let out a loud moan. Elena continued to lick Haley's clit, driving her crazy with each lick.\n\nHaley grabbed at Cameron and pulled him up for a deep kiss. She shoved her tongue into his mouth. Elena wrapped her lips around Haley's clit and started to suck on it. Haley moaned into Cameron's mouth, and she started to rapidly hump against Elena's mouth as her orgasm rocked her body. Haley collapsed into the bed when her orgasm ended. Elena sat up and smiled at Cameron, her face glistening with Haley's cum. Elena kissed Haley. Haley was surprised at how much she enjoyed the taste of herself. Cameron didn't think that he could ever get used to watching the two beautiful girls kiss in front of him. Elena caught Cameron watching her and Haley make out. Elena ended the kiss and leaned over Haley's body to kiss Cameron, giving him a second-hand taste of Haley's pussy. Even diluted Cameron loved it, it was sweet and a little earthy too, he didn't know that girls' pussies actually had a taste, his only experience was porn so purely audio and video. Elena swirled her tongue around in Cameron's mouth. Cameron sucked onto her tongue, getting a stronger taste of Haley.\n\n\"Do you like the way Haley tastes?\" Elena said. Cameron nodded. Elena spread her legs, draping one leg across Haley. \"Why don't you tell us which one tastes better?\" Just in case Elena's invitation wasn't already obvious, she started to pull Cameron down towards her open legs. Cameron gently climbed over Haley and got into position. Cameron looked at Elena's pussy, it was so beautiful that he was too stunned to know what to do. The way her pussy was slightly parted, her moist pink lips looked so beautiful. Cameron felt like he finally understood Georgia O'Keeffe's artwork.\n\n\"I don't know what to do,\" Cameron said.\n\nElena reached down and parted her outer lips, showing Cameron all her inner glory. Elena traced along her lips, \"Lick along here, everywhere, including the skin around my pussy is sensitive, so don't think that all you only have to shove your tongue inside of me, although that feels good too. And this at the top,\" Elena parted the skin around the top of her pussy, revealing the little bump at the top of it, \"this is my clit, and it's really sensitive.\"\n\n\"Ok,\" Cameron said. He took a moment to take in what she just said and the sight of her pussy, he wished that his sex-ed class had done a better job of covering these things. Cameron leaned forward, inhaling the intoxicating scent of her pussy. Cameron stuck his tongue out and tentatively licked along Elena's lips. Since Cameron had only tasted Haley's pussy second hand, he was surprised at how strong the taste was. Elena tasted similar to Haley but also different in a way that made him eager to taste Haley more so that he could better compare them. Cameron's next lick was a little more confident, and he parted her lips more. Cameron loved the way that as he licked the into her pussy, not only did the taste, scent, and heat intensify, but also how her inner lips seemed to feel softer than her outer ones.\n\nElena moaned as Cameron started to slowly fuck her with his tongue. Cameron started to speed up the pace, every now and then licking along the sides and top of her pussy. He Elena grabbed at his head and pressed him forward, driving Cameron's tongue deeper inside of her. Cameron's jaw started to lock up after five minutes, he hadn't realized how much work it was eating a girl out. Cameron was surprised at how wet her pussy became as he ate her out. He knew some of it was from his saliva, but most of the wetness was from Elena's arousal.\n\nCameron decided that he should try and lick her clit since his jaw was locking up, and he wanted to give his tongue a slight rest. Cameron pulled back and positioned his mouth in front of her clit. Cameron gently lapped at her love button, and Elena moaned and tensed up as if she had just had a bolt of electricity shoot through her. Now that Cameron saw how much of an effect that had on Elena, he licked it again, this time pressing harder against it. Elena let out a sharp sigh of pleasure, tightened her hold on his hair, and started to hump against his mouth. Cameron kept on licking her clit, loving how much each lick drove her crazy. Elena pressed Cameron's head into her pussy and hump roughly against her face. \"Fuck babe, that feels great,\" Elena said in response when Cameron twirled her tongue. Cameron looked up at Elena as he ate her out, she was pawing at her tits with her free hand. Elena's humping started to become jerkier. Cameron hoped she was getting close; he didn't know how much longer he could keep this up. Cameron sucked onto her clit and slid a finger inside of her. Elena moaned and started to rapidly hump Cameron's tongue and finger. Elena let out one last moan and clenched her thighs around Cameron's face. Cameron could barely breathe but continued to lick her pussy as her thigh muscles clenched around his head, and her vaginal walls clenched around his fingers. With one last squeeze and moan, Elena's body went limp.",
        "Now that he was free, Cameron took a deep breath. His face was coated in Elena's juices. Haley had scooted over, so Cameron climbed up Elena's body as she lay panting and kissed her. Elena licked at his face and sucked on his lip. Cameron then lay on his back in the space in between the two girls. Elena turned the music off on her phone, turned off the lamp, and then wrapped her body around him. Haley stirred from her sleep and did the same thing on Cameron's other side. Elena nudged Cameron by the chin to look at her, and then she sensually kissed him. \"Good night, lover,\" Elena said. Cameron was turned on again after eating Elena out, but he felt too tired to want to take care of himself. Plus, he didn't want to disturb the two beautiful girls who were starting to drift off into sleep next to him. Cameron felt so comfortable being in between them that he decided to try and calm down. The warmth of the two girls pressed against him lured him into a slumber. All three of them had smiles on their faces as they slept.\n\n****************************************\n\nThey woke up early the next morning, and all went to take a shower together. It was a tight fit in the shower, but they managed to just barely be able to fit into the extra space of a corner shower. The rest of the day passed like the previous ones; Elena did her job, sometimes Cameron and Haley helped her, and sometimes they were off together doing camp activities or just hanging out. What was different is that now Cameron found himself often walking hand and hand with one or both of his beautiful girlfriends at the same time. They would often kiss in front of others too. Cameron thought that him being with two girls at once would be scandalous, but no one seemed to care. It seemed like just about everyone around him had found summer love. The three of them spent every night together, staying up late making love. They didn't go all the way so that technically Haley and Cameron were still virgins, but they made up for lost time and experience with all of the nights and hidden moments during the day that they spent together. Every time they were together, Cameron had the desire to finally have sex with Elena and Haley. Cameron knew that Elena wanted the same, she had straight up told him that any time he wanted that they could have sex, but Haley was reserved from doing it, even though at times it seemed like she wanted to. Cameron wanted to take Elena up on her offer. Haley wouldn't get mad since they had worked out most of those kinks during the first week of their relationship, but Cameron wanted to wait for Haley to want it too. They had shared so much at camp; he wanted their first time to be another thing that they shared. Cameron hated himself for doing it, but he felt like it was the right thing to do.\n\nThe rest of the month flew by. Cameron hadn't expected their threeway relationship to work, but it had, for the most part. They got to know each other a lot better in the three weeks that they were dating. As the last days of camp approached, Cameron had a thought pop into his head as he lay cuddled up with his girls. What happens after camp was over? Cameron knew how close they were now, but was this arrangement just for the summer? Would he have to choose one of them to be with, would they try and make this work past camp, or worse yet, what if this was only a summer romance and once camp ended, so did they? Before, Cameron would have been up all night worrying about it, but now he realized that he couldn't worry about it and let it ruin potentially the last of his time with them.\n\nIt was the last night of camp, and Cameron still didn't have any answers about if their relationships were going to extend outside of camp and how they would make it work. Cameron tried to bring it up a couple of times, but he would always back out right before he could open his mouth. The last thing he wanted was to bring a cloud over their final days. They were eating breakfast, and Haley had just gotten up to refill her coffee. Once she was out of earshot, Elena leaned over and asked Cameron, \"How long has it been since you and Haley went up to the spot where you first kissed?\"\n\n\"Not since the end of the first week, why?\" Cameron asked.\n\n\"Well, I know that Haley would love to go up there one last time, maybe you should take her up there tonight,\" Elena suggested.\n\n\"Yeah that sounds like a good idea, what time would you be ready to go with us?\" Cameron asked.\n\n\"No, I think Haley would want it to be just you two,\" Elena said, her voice dripping with a hint that Cameron was just now picking up.\n\n\"Oh, ok, you don't mind?\" Cameron asked, wondering what they were up to.\n\n\"I would love to spend more time together, but I think it might be better if it was just the two of you,\" Elena said.\n\nCameron was about to ask her why she thought that when Haley returned from getting her coffee. \"Hey Haley.\"\n\n\"Yeah?\"\n\n\"Would you like to blow off some of tonight's event and go up to our spot tonight?\" Cameron asked.\n\n\"Yeah, I would love to,\" Haley said and hugged Cameron tightly. The hug lingered like they always did between them. Cameron felt as though there was some sort of communication going on between the girls. When Haley let go, Cameron looked at Elena, and she did her best to look innocent. They finished breakfast, and they did their daily routine one last time. They spent most of the day with Elena, helping her with her tasks so that they could steal her away from her job as often as possible. Cameron had an idea of what the girls seemed to be planning, but he didn't want to try to put words to his thoughts in fear that he was getting his hopes up about what tonight would mean for them.\n\nAbout an hour before sunset, Elena got them set up for their hike, and with a kiss and a slap on the ass to Haley and Cameron, Elena sent them on their way. \"Have fun you too, don't do anything I wouldn't do,\" she shouted after them as they walked down the path.\n\n\"Like there is anything you wouldn't do,\" Haley teased back. Haley must have won that exchange because Elena didn't shout anything else at them.\n\nCameron fell into the familiar rhythm of walking beside Haley as they went down the familiar path. Cameron had been so amazed at how Haley had known so much of the plant life on the first day, but now as they walked, he no longer just saw trees and bushes, but instead knew most of them by name. They reminisced as they walked, talking about their favorite moments at camp and what they were going to miss the most. Cameron kept on thinking that this would be the perfect moment to say something, but he would always find a convenient reason not to.\n\nThey made it to their spot with plenty of time before sunset. Cameron was amazed at how much better he handled the hike this time. After all of the camp activities and the nighttime ones he spent working up a sweat with Haley and Elena, Cameron was in the best shape of his life, and his stamina was incredible now. They cleared themselves a spot on the ground, and then set down their sleeping bags. They ate their dinner and watched as the sun dipped down below the horizon, Cameron felt as though so much time had passed since they had last been up here, but, it had only been three weeks. It seemed as though they had spent a lifetime together. Maybe it was because of the way time seemed to move differently because it was their last summer break before going off to college.\n\nThey watched the sunset holding hands. Cameron decided that it was now or never. \"Haley?\"\n\n\"Yeah?\".\n\n\"I have really enjoyed our time together and our relationship between the three of us,\" Cameron said.\n\n\"Me too. It was a bit odd that this was my first relationship ever, but I think we made it work out good,\" Elena said and squeezed his hand.\n\n\"What about after camp is over?\" Cameron asked.\n\n\"What do you mean after camp is over?\" Haley asked.\n\n\"I mean, what is going to happen to us?\" Cameron asked.\n\n\"What do you want to happen to us?\" Haley asked.\n\nCameron sighed at her question. \"I want us to keep dating, all three of us if we could continue to make things work outside of camp. Before we started dating, I was trying to make up my mind on which one of you I wanted to ask out, but I couldn't choose then. After getting to know both of you even better and having my crush develop into stronger feelings, I can't see having to choose one of you, or even worse, have this whole thing just be a summer fling,\" Cameron said.\n\n\"Cameron, after all that we have done, do you really think we would just all go our separate ways?\"\n\n\"But you never talked about it,\" Cameron said.\n\n\"It's because we didn't think there was anything to talk about. Elena and I figured you knew how much we liked you and each other. We were willing to try and make the relationship work after camp if you were,\" Haley said.\n\n\"Oh. What if I didn't want to?\" Cameron asked jokingly. It seemed like his girlfriends were always conspiring behind his back.\n\n\"There was never any doubt in my mind,\" Haley said.\n\n\"Not even one?\" Cameron asked.\n\nHaley laughed and kissed him, \"Ok, maybe one.\"\n\n\"What was that?\" Cameron asked.\n\n\"Nothing, never mind,\" Haley said.\n\n\"Come on, tell me,\" Cameron said and tickled her.\n\n\"Fine, it was that you would want to only keep on dating Elena after camp was over,\" Haley said. She said it mostly as a joke, but when she got quiet, and her smile faltered, he knew that there was some truth in what she said.\n\n\"Why would you think that?\" Cameron said.\n\n\"Because, why would you want to try and put up with someone who is so plain like me, when you could be with someone who was so outgoing and beautiful as Elena,\" Haley confessed.\n\n\"I like Elena a lot, but I also like you too. I had a crush on you ever since I first saw you waiting in the hotel lobby,\" Cameron said.\n\n\"You did?\" Haley asked.\n\n\"Yeah, I got a glimpse of you sitting there reading, and I had to force myself to keep from staring at you, but I would sneak glances. I wondered if you were going to be going to this camp too, but then the next time I looked up, you were gone, and I felt an odd sense of loss that made no sense at having a girl I didn't even know disappear out of my life. When you took a seat next to me on the bus, I was so surprised I couldn't even talk, remember?\"\n\n\"Yeah,\" Haley said, smiling at the memory.\n\n\"Haley, if it wasn't for your support, I would have left on the second day of camp. You are a beautiful girl who I love talking to and hanging out with. We have spent every day together, and I still want to see you more. Don't be so focused on comparing yourself to other girls that you end up selling yourself short.\"\n\n\"Thank you, it is good to hear that sometimes,\" Haley said.\n\n\"Then I will make sure to say it more often. You are beautiful.\" Haley smiled and kissed Cameron. The kiss continued and deepened as one moment it went from them being playful with each other to their suddenly being a strong sexual charge between them. Haley laid down on the sleeping bag, pulling Cameron down on top of her. Haley bit at Cameron's lower lip and pulled gently at it. Cameron anticipated it correctly when next she started to slip her tongue into his mouth. Cameron met her tongue with his own, and their tongues twirled around each other. Gone was the hesitation in their kisses and touches, they had had weeks to practice and get to know each other intimately. Haley wrapped her hand around Cameron's erection and started to gently stroke him as they made out. Cameron fondled her breasts and played with her stiff nipples. Haley moaned when Cameron started to roll them between his thumb and forefinger and pulled on them.\n\nHaley started to jerk him off a little faster. Cameron slid his hand down her body, still in awe that he could touch such a work of natural art. Haley let out a sigh as his hand grazed past her waistline and through her trimmed pubic hair. Cameron's fingers brushed against her clit, and she let out the breath that she had been holding in a loud exhale. Cameron rubbed along her outer lips, teasing her for a moment, and then he slipped a finger inside of her tight pussy. Haley moaned, and her grip around his erection faltered. Haley recovered and started to jerk him off again. They took their time as they kissed and touched each other, they were not in a hurry to get each other off, and they were slowly building each other up. Cameron continued to match Haley's sensual pace, but once his finger was coated fully in her juices, Cameron slipped in a second finger. A \"mmmmummmph,\" escaped Haley's lips, and she squeezed Cameron's dick.\n\nCameron sucked onto Haley's lower lip, and then kissed down Haley's neck, stopping every few kisses to suckle on her sensitive spots. Cameron kissed down her chest and took one of her nipples into his mouth. Haley hummed with pleasure again as first Cameron swirled his tongue around her nipple, and then he sucked hard, taking almost all of her breast into his mouth. Cameron sucked on her other nipple and then continued kissing down her stomach. Cameron leaned across Haley's body, so he approached her body from an angle. Haley parted her legs as Cameron kissed through her pubic hair. She squirmed the closer Cameron got to her pussy. Cameron had initially planned on passing over her pussy and kissing down her thighs to tease her, but as he moved, he looked at her pussy, and it just looked too good, so Cameron changed his plans and leaned down and licked the top of her pussy. Haley moaned and shivered at the contact. Cameron loved the scent of Haley and the way her pussy tasted. While Cameron loved the way Elena's pussy tasted, but Haley's pussy seemed to be sweeter, almost having a hint of a nectar taste to it.\n\nCameron licked along her folds and teased her clit for a few minutes when Haley started to push at him to lay down, so he did; they lay with their heads on opposite sides. Once Cameron was on his back, Haley straddled him and started to scoot her body lower. Haley positioned her pussy over Cameron's waiting mouth, and then she lowered her pussy down. Cameron slid his tongue inside of her. He loved how much more access he had to her pussy with her on top of him. Cameron felt Haley's hand wrap around the base of his cock, and then a moment later, the warmth and softness as she wrapped her lips around his cock head. Haley bobbed her head up and down on his cock, quickly working nearly the entire length into her mouth. Cameron realized that he had been so focused on the feeling of Haley blowing him that he realized he wasn't moving his tongue around as much, and he started to eat her out again.\n\nWhen Cameron licked her clit, she moaned, the sound vibrating his cock. As they pleased each other orally, the slow pace that they had started with suddenly started to accelerate. Cameron's dick was throbbing with how hard he was, and he started to lick even harder as the urge to cum started to grow. Haley gyrated her hips, so get the most out of Cameron's licking. Cameron was building up to his erection when Haley suddenly got off him. Haley sat up and repositioned her body so that she was no longer in the sixty-nine position. She straddled her lower body over his. Cameron let out a moan when Haley pinned his erection down by pressing her pussy down on top of it. Haley leaned down and kissed Cameron deeply, cleaning up Cameron's face and mouth of her juices. Haley continued to hump against Cameron, her pussy lips wrapped around the side of his shaft. Haley broke the kiss and leaned over to Cameron's ear, causing her pussy to slide up and stop just before her pussy reached his cock head. \"I love you,\" Haley said into his ear. Haley grabbed Cameron's dick and pushed up so that the head of it contacted her outer lips.\n\nCameron kissed Haley's earlobe and said the only response that he could ever imagine himself saying back to her, \"I love you too.\" Haley pressed Cameron's erection a little more inside of her lips, and Cameron raised his hips to push it in further. They both let a moan at the same time as they shared this new experience. Haley looked down at Cameron and smiled at him. He smiled back, and she started to lower herself down slowly, taking in a couple more inches before stopping. Cameron had thought that the sensations from getting a blow job were amazing, but being inside of Haley felt like ambrosia, but for his sense of touch. Haley pulled up, and then lowered her pussy back down again slowly, her tight slick vaginal walls clinging to Cameron's dick as she worked it in and out of her. Cameron tried to gently hump up in time with her movements, but while they were familiar with each other as lovers, this was new territory for them, and they had that sense of eager nervousness again.\n\nAs Haley got used to the feeling of Cameron's thick cock inside of her, she started to ride him faster. Haley braced her hands on Cameron's chest, pulled her pussy back so that just the head of Cameron's dick was inside of her. Haley slowly took Cameron inside of her, having to stop every couple of inches to get used to the feeling of being stretched out by him. It felt so good, and she just wanted to hurry up and take him fully inside of her, but there was some pain mixed with the pleasure, so she had to pace herself. When Haley finally took him fully inside of her, they moaned together. Haley held still for a moment, still amazed that she finally was losing her virginity. Cameron's thoughts mirrored hers. Haley looked up at the sky, the constellations were fully visible on this clear night. Cameron looked up too, looking at them with Haley just like he had on that first night, only now Haley was above him just like the constellations. Haley looked down at Cameron and smiled.\n\nHaley pulled up off Cameron's dick again and slammed back down, taking it all in. Cameron grabbed at Haley's hips as she started to bounce up and down on Cameron's dick. Haley picked up the pace, and Cameron started to time his thrusts so that he drove his dick as deep inside of her as he could. Her little tits bounced with each movement. Haley started to ride him even faster. Cameron wanted to hold back, but Haley's pussy felt too good after all that they did. \"I'm getting close,\" Cameron said.\n\n\"Me too, just a little more,\" Haley said. Cameron lasted for a few more thrusts, but it became too much for Cameron.\n\n\"I'm about to cum,\" Cameron said and started to lift Haley off of him. Haley grabbed at his hands and guided them up at her tits instead. She then slammed her pussy down one last time and started to grind her pussy against Cameron's pelvis. With a grunt, Cameron started to cum, shooting his load deep inside of her.\n\n\"Your cum feels so good inside of me,\" Haley said as she continued to ride him. She pulled up off his dick and slammed down one last time, and then her orgasm hit. Haley let out the loudest moan Cameron had ever heard from her as her orgasm rocked her body. She shook a little on top of him as she moaned. Haley's face was scrunched up with pleasure and was fully flushed with her arousal. When her orgasm passed, she went limp and fell forward, Cameron held her up by his grip on her tits.\n\nHaley lay beside Cameron and wrapped her arms around him. \"I love you,\" she said, her voice already heavily laced with sleep.\n\n\"I love you too,\" Cameron said and kissed her on the head. They had planned on returning that night, but Cameron didn't have the energy to walk back to the camp tonight. He pulled the sleeping bag over him and Haley and held her. Cameron smiled; he couldn't believe what just happened between them.\n\nAs Cameron drifted off to sleep, he started to do the planning in his head at how early they would have to wake up to make it back to camp and give Elena a proper goodbye before the bus showed up in the morning to take them back to the land of the clothes. Cameron drifted off to a well-earned deep sleep."
    ],
    "authorname": "storyteller19",
    "tags": [
        "latina",
        "lesbian",
        "nature",
        "nudist",
        "petite",
        "red head",
        "summer camp",
        "teen",
        "threesome"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/camp-natural"
}