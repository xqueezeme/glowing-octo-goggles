{
    "title": "Exquisite Perspective Ch. 02",
    "pages": [
        "A lesbian romance set in a seaside town. This is a continuation of Exquisite Perspective Ch.01 and won't make much sense if you haven't read the preceding chapter. \n\nA gracious thank you to WaxPhilosophic for fantastic suggestions and advice. You are awesome!\n\n******\n\nAmelia sat back down in her chair after hugging Morgan, taking a bite of her chicken and smiling somewhat demurely at her. She was giddy from the afterglow of their impromptu door lust and still reeling from the news Morgan brought. She couldn't believe she was sitting across from the realtor sharing lunch with her. Since the last moment they saw one another, the only thing she wanted was to be in Morgan's embrace again. \n\nDuring their first weekend together, she had grown fond of Morgan, but it didn't hit her how much they had in common until she was working on her manuscript. They discussed her writing most conversations, but found themselves increasingly deviating from that topic, delving into their interests. From their favorite movies to their coincidental love for the ocean, their shared interests were varied and numerous. \"How long are you staying?\" she asked. \n\n\"Probably just tonight. I called to check if the hotel Allison and I stayed in had any vacancies, and they do if you -,\" Morgan began, her eyebrows raised in question, but Amelia cut her off. \n\n\"Don't be silly. You are more than welcome to spend the night with me and I would be offended if you didn't. I'd have you longer if you could stay,\" Amelia admitted with a blush. \n\nMorgan smiled at her, reaching across to take her free hand. \"I really wish I could, and to be honest, I'd stay all week if that were the case. But, I've got a client selling their house and we're going to be looking at the offers tomorrow afternoon before he makes a decision. So my stay has to be short.\" \n\nAmelia was disappointed for it to be such a rushed visit, but she wasn't going to allow her feelings to muddle their time together. There was a brief pause before she spoke. \"It's Tuesday,\" Amelia stated with a grin, her fingertips caressing Morgan's knuckles. \n\nMorgan quirked a dark eyebrow, chewing her pasta thoughtfully. \"Yes, it is,\" she agreed, unsure where this was going. \n\nAmelia sipped her water and wiped her face on a napkin with her free hand. \"The Mummers will be on the boardwalk tonight.\" \n\n\"The who?\" \n\nAmelia's grin widened. \"The Mummers!\" \n\nMorgan chuckled. \"The same people who dress up in feathers and crap and strut down the streets of Philly on New Year's Day? They do that more than just once a year?\" \n\nAmelia nodded. \"Yes, every Tuesday in July and we're going. Their outfits aren't as crazy as they are on New Year's but it's still great music,\" she squeezed Morgan's hand before letting go to clear off the table. Morgan followed her with the rest of the take-out trash, easing her way into the small space. \n\nAmelia watched Morgan throw the items she carried into the garbage can before she turned and captured Amelia's arms. She pulled Amelia close, kissing her on the lips. \"I don't care what we do, as long as I go to bed with you tonight.\" \n\n\"I wouldn't have it any other way. Now, I'm going to get the heck out of these clothes and find something appropriate for public and then we'll go,\" Amelia concluded. \n\nMorgan's eyes trailed up and down her body and Amelia couldn't help the blush that rose to her cheeks. \"I think you look fantastic in what you have on,\" Morgan's hands ran up and down Amelia's arms, biting her own lip as she stared at Amelia ardently. \n\nThey gazed at each other for a few silent moments until Amelia swallowed her desire. As much as she wanted to stay in and surrender to her libido, it was Amelia's turn to feed the stray cats under the boardwalk. \"We're going to miss the music,\" she muttered before pulling away to make herself more presentable. \n\n**** \n\nThe music echoed through the streets as they walked toward the boardwalk, cheers blending with the Mardi Gras styled tunes the band played. The descending sun was obscured by fog and a thick humidity hung in the air, coating the railing on the staircase with a layer of dew. \n\nMorgan shot Amelia a dubious look and Amelia smiled before taking her hand. Despite Morgan's protests that she looked good in glasses, Amelia had replaced them with her contacts. She also changed into a blue strapless sundress that hugged her hips and Morgan could barely keep her eyes off her lover. She narrowly avoided missing the first step as they began up the staircase and Amelia giggled at her near miss. \n\nAs they scaled the twelve steps up to the boardwalk, their view met a sea of brightly dressed dancers through the crowd of people. Groups were clapping and children were dancing on the outskirts of the space made for the Mummers. Amelia tugged Morgan's hand, pulling her toward the edge so they could see the glamorous musicians. \n\nFive people were strumming tiny ukuleles dressed in purple and orange feathered jackets. Another couple were wearing clown costumes and playing accordions. A few of the Mummers were waving elaborately decorated umbrellas while blowing on kazoos. Morgan laughed aloud when Amelia grinned up at her, grey eyes mesmerizing in the setting sun. Morgan wrapped an arm around her so they were hip to hip, breathing in her flowery scent. It was boisterous and loud, the joyful atmosphere seeping into everyone gathered around. \n\nA little while later, Amelia and Morgan headed to the flower shop, Amelia telling her to stay in the front while she went into the back room. Guiltily, Morgan couldn't stop herself from watching Amelia sashay her hips through the threshold of the door to the back. She came out with a small tote bag and beckoned Morgan to follow her. \n\n\"Where are you taking me?\" Morgan asked suspiciously as Amelia led her down the stairs toward the beach side of the boardwalk. With the beach long deserted and the sky a pinkish purple hue, Morgan had to take pause to soak in the ambience. The music from the Mummers thrummed upon the boardwalk and the sound mixed with the crashing of the waves on the shore, a shrill cry of a seagull only adding to the symphony. The balanced harmony was hypnotic and mellifluous to Morgan's senses. \n\nShe glanced down at her lover, the rising moon casting a haunting violet glow to Amelia's grey eyes that sent a shiver through Morgan. She's so beautiful. \n\nMorgan sighed as Amelia's hand ran up her back in a tender caress before both of them gazed out at the ocean. The dune grass rippled atop the sand covered hills on either side of them, the soft scents of fried food mingling with the sea. She turned to her lover. \"It's beautiful,\" Morgan observed. With a nod, Amelia let her hand drop and she headed to the staircase they'd walked down. \"Where are you going?\" \n\nThe skirt of Amelia's dress fluttered in the light breeze coming from the ocean and Morgan bit back her longing. \"Just follow me. I have to do something before I forget,\" Amelia said as she disappeared behind the wooden staircase, hidden in the shadows beneath the boardwalk. The song above died down, The Mummers evidently taking a break from their performance. \n\nMorgan's eyes adjusted to the darkness and she could make out Amelia's figure kneeling beside a shadow with reflective eyes. Amelia's head turned to Morgan and she put a finger to her lips before dumping something from the small tote into a bowl in the sand beside what Morgan realized was a cat. A quick survey of the area deemed it wasn't the only cat there. Morgan counted at least five cats in varying colors and a handful of cat cubbies scattered about. \n\n\"Cats?\" she whispered. \n\nAmelia laughed as she stood, two of the five cats running. \"Yes. That's Mac,\" she pointed to a black cat sporting a white spot on his face, \"and that over there is Lindsay,\" an orange cat the size of a small dog cleaning itself, \"and Gollum,\" she pointed to a tabby watching Morgan precariously from the cover of a piece of wood. \"We, the other shop owners and I, feed them. They've all been spayed and neutered, but a lot of us can't take on any pets in where we live. So, they live here.\" \n\nMorgan beamed at her as she stepped closer to Amelia, careful not to disrupt the cat with its head in the food bowl by her feet. \"You're adorable,\" she said before kissing her. \n\nAmelia took Morgan's hand and tugged her away from the mini cat sanctuary, climbing over a small hill of sand to a deserted portion of the undercarriage of the boardwalk. \n\nThe sun had set, darkness draping the space. Footfalls above them coalesced with laughter and the whirling of machinery from the amusement park. \"Don't you find it a little creepy down here?\" Morgan mused. \n\nAmelia laughed and began humming Under the Boardwalk by The Drifters. Morgan laughed when she recognized the tune. \"Are you serious? You know that song is about having sex under the boardwalk, right?\" \n\nAmelia bobbed her head without silencing her humming. \"Is it really?\" she tilted her head ruefully at Morgan. \"Huh. I guess I never thought about the lyrics. I think the last time I heard it was when I was walking up to the venue when I went to my high school prom,\" she chuckled, stepping up to one of the many pillars holding the boardwalk in place and leaning her back against it. \n\n\"That's an interesting choice for a bunch of horny teens in skimpy dresses,\" Morgan noted as she moved closer to her. \n\n\"Oh, I agree now that I think about it. But, I didn't take much notice back then. I do remember it was down at the convention center in Wildwood and the tickets were ridiculous.\" \n\n\"Who was lucky enough to be your date?\" \n\n\"I actually went stag with my best friend, Liz. However, the entire night I watched my crush waltz around the dance floor with her girlfriend. God, I was so smitten with her and had been all four years of high school. I never got the courage to talk to her until we graduated,\" Amelia admitted with a smirk. \n\nMorgan raised her eyebrows, surprised by her sudden jealousy. \"Oh, yeah? Did anything ever come of that?\" \n\n\"Yeah. We dated on and off for a few months, but I realized the attraction was mostly physical. She and I had next to nothing in common.\" \n\n\"Do we have anything in common?\" Morgan asked, curiosity prompting her question. \n\nAmelia smirked again, edging closer to Morgan and wrapping her arms around her neck. \"We have loads in common,\" she claimed. \n\n\"Yeah? Like what?\" Morgan pressed, her face hovering inches from Amelia's. A robust yearning to delve between Amelia's legs and to taste her almost took over Morgan's reason. She wanted to kiss her, to slip the cute little dress down her body, to caress her pale silky skin until her face relaxed in bliss. Instead, she ran her nails over the naked expanse of Amelia's upper arms, their bodies nearly touching. \n\n\"We both like to read.\" \n\n\"Mhm,\" Morgan granted herself a chaste kiss on Amelia's lips before allowing her to continue. \n\n\"We both like fudge,\" Amelia added with a tilt of her head, causing her hair to fall slightly into her face. \n\n\"Who doesn't like chocolate?\" Morgan's hand came up to Amelia's cheek and she pushed back an errant strand of hair, letting her fingers tickle the nape of Amelia's neck. The action elicited a shudder from Amelia, her eyes closing briefly before opening again and continuing her list. \n\n\"We both like pasta,\" Amelia countered, and Morgan kissed her again, letting her lips linger a moment longer that time. \n\nShe truly wanted Amelia to explain what they had in common, however, her desire to consume the other woman was quickly overpowering her active listening skills. Heat radiated from Amelia's body and Morgan arched her back to capture the warmth of her. She chuckled. \"Again, who doesn't like empty carbs? That's on the same level as chocolate! What else?\" \n\n\"We both love the ocean and cult classics.\" \n\n\"That's true,\" Morgan admitted, remembering their recent phone discussion regarding the movie Donnie Darko. Morgan had been surprised the writer had even seen it let alone have strong opinions about the confusing plot. She kissed her again, her tongue sweeping Amelia's lower lip as her fingers ran through her hair. \n\nAmelia appeared to remain undeterred, although her voice was strained. \"We both enjoy classical music,\" she murmured when Morgan's kiss relented. \n\n\"True,\" Morgan answered, her free hand trailing over the curve of Amelia's hip, her lover nearly squirming when she reached her breasts. \"Do continue,\" she could feel the distinct hardening of Amelia's nipple even through her bra. \n\n\"We both find each other unbelievably attractive,\" Amelia managed as Morgan's thumb and forefinger softly pinched her nipple through the barriers. \n\n\"'Unbelievably?' Is that so?\" Morgan inquired teasingly, the hand in her hair finding Amelia's earlobe, fingers tenderly tracing the outline. She was right to assume it was an erogenous spot for her, Amelia taking a sharp breath and pulling Morgan closer yet from the combination of stimuli. \n\n\"Oh, yeah. I find you gorgeous,\" Amelia whispered with candor, her eyes closed, and lips parted. Her arms were still snug around Morgan's neck, simply basking in the attention from her. \n\nMorgan's hand moved to Amelia's neglected breast, the nipple already stiff and she brought her head close to Amelia's ear. \"I don't think you have a clue how beautiful you are,\" Morgan's breath was hot over the sensitive skin of Amelia's neck with each syllable. Amelia's erratic respirations were leading Morgan to believe she was gaining the desired effect on her. She pressed her lips against the taut muscles of Amelia's neck and Morgan felt Amelia's arms drop to surround her waist. Her tongue darted, drawing a circle with tantalizing precision over the area. \n\n\"You're really intuitive, for a shoobie,\" Amelia hissed. Morgan dropped her right hand to Amelia's waist while the other secured a grip in her hair, gently tilting Amelia's head to the side as her tongue continued its mission. Morgan felt a sense of accomplishment as Amelia cooed softly, her body beginning to writhe against her own. A nip of Morgan's teeth caused a throaty moan to escape Amelia. \n\nA loud pair of footsteps trudged above their heads, causing Amelia to pull back and stare at Morgan. Her blue eyes were shimmering in the low light, pupils wide and Morgan could feel Amelia's rapidly beating heart against her breasts. \n\nAmelia blinked, pursing her lips before she spoke in a husky tone, and Morgan's desire unfurled. \"We...we both kiss really well,\" she stammered. \n\nThe fingers in Amelia's hair urged her forward, Morgan determined to prove Amelia's words true. Her tongue skirted Amelia's lips before they parted and met its consort. Her hips pressed into Amelia, her unoccupied hand gathering the fabric of Amelia's dress to allow her fingertips access to the bare skin of her thighs. \n\nTheir lips met, Morgan tangling her tongue with Amelia's. Amelia's soft moaning quickly transformed into desperate whimpering from Morgan's caress of her legs and the previous provocation. Morgan pulled back from the kiss, her hand dropping from Amelia's neck. \n\nShe grinned mischievously at her lover before kneeling in the cool sand. \"What are you doing?\" Amelia whispered as Morgan lifted her dress and draped it over her head, kissing Amelia's thighs. \"Morgan, what if...oh,\" Amelia's words were stifled by Morgan's expert hands grazing the skin of her belly, \"What if someone comes down here?\" \n\nIt was dark, but Morgan's hands found Amelia's panties and she shimmied them down to her ankles. She sprinkled wet kisses up Amelia's thighs as her fingers parted the glistening flesh. \n\nAmelia let out a low moan when Morgan's kisses moved upward to the newly exposed area and Morgan presumed Amelia either forgot about where they were or didn't care anymore. She nuzzled the dampened lips, her tongue swiping the entire expanse of Amelia's need. The festive music above heightened again, the Mummers back from their short intermission, and the song filled the space through the boards. \n\nMorgan felt Amelia's hands grasp her shoulders as she delved deeper with her tongue, gently sampling her sweetness. She couldn't satisfy her hunger, Amelia's taste far too delicate and intoxicating to quench her longing. She moved to Amelia's clit, circling the tender flesh before she gave it a nibble. Amelia's hands tightened on her shoulders, her thumbnails nearly piercing Morgan's skin. \n\nSlipping two fingers inside the origin of Amelia's nectar earned Morgan a hoarse groan from above. Morgan wanted to steal a glance at Amelia's face but couldn't see anything through the fabric of the dress over her head. Her tongue circled countless times causing her lover to whimper and her breathing to become sporadic. \n\nShe relished in the feel of Amelia's burning desire, swollen and wet with her yearning. Muscles hugged Morgan's digits and she curled them as she thrusted into Amelia. Capturing the bundle of nerves in her mouth again, Morgan heard Amelia draw a breath before she let out a sharp cry, her thumbs no doubt leaving marks in Morgan's shoulders that time. \"Oh God, Morgan!\" \n\nLuckily, Amelia's cry was drowned in the cacophonous eruption of applause as the Mummers music came to a crescendo. She hadn't anticipated such a swift release from her, but she greedily lapped at the results of her efforts. \"Get up here,\" Amelia breathed, rubbing where her hands had sat. Morgan slipped Amelia's panties back up before obeying the request. \n\nShe rose, her lips curled in a cocky smirk and Amelia wrapped her arms around her. \"No fair. At this rate, I'm never going to be able to reciprocate, you turd,\" she murmured and Morgan laughed at the honesty in her tone. \n\n\"Did you really just call me a turd? You're so cute,\" she kissed Amelia, the other woman moaning when her tongue dipped into her mouth. Morgan found it endearing that her lover didn't use curse words. She hadn't heard her say any in the time they'd been together. \n\nWere they together? This thought crossed Morgan's mind as she wrapped her arms around the beautiful brunette and held her close, their lips meshing together in a heated exchange of lust. Their quick make up that afternoon hadn't resulted in an explicit conversation about their relationship and what status it took on. Morgan knew she wanted to be with Amelia, exclusively, but the thought of such a discussion was a little nerve wracking. \n\nIt occurred to her that she hadn't asked Amelia her thoughts on monogamy nor had she asked how she felt about being in a committed relationship. Monogamy had only recently become the norm for Morgan, as she'd finally matured enough to appreciate the depth of commitment. \n\nThough, it still scared the shit out of her. \n\nPrior to her dropping the news about the flower shop's building, they had discussed continuing their liaison but with a slower approach. That steered her opinion away from believing Amelia would want something strictly causal. However, she couldn't stifle the slight consternation at the thought of the possibility. \n\nMorgan hadn't been the most caring lover in the past and she worried karma would claim her when she found someone she liked a great deal. She wondered if it would be a good time to bring such a conversation up but decided against it. The talk could wait while she reveled in the affection of the woman in her arms. \n\nMuch later that evening, Morgan watched the steady rise and fall of Amelia's chest, fatigued from their love making but her mind too awake to rest. The subject of the nature of their relationship hadn't come up organically and Morgan had yet to gather the courage to bring it up herself. They shared a lovely dinner at Manco & Manco pizza as they walked down the boardwalk after the music died down. Amelia had been so happy, her eyes bright and cheeks flushed when she smiled at Morgan, which she did most of the night. They'd gone back to her condo and Morgan spent a great deal of time pleasing her until she allowed Amelia her own chance. ",
        "Morgan then read her manuscript. If she thought Amelia had talent before, now she believed her to be a literary genius. The prose was beautifully scripted, the plot rich and engaging. When she came to the end, she was pleasantly surprised with the joy brought by the closure provided. Although she was biased due to sleeping with the author, it felt like perfection in written form. \n\nAmelia cooed in her sleep, stretching a leg out, causing the blanket to slide down her body. Her arms were above her pillow, cradling her head, her long brown hair draped over the edge of the bed. Morgan smiled to herself, letting her hand cup Amelia's face softly, taking in her lover's beauty while she slept. The blankets had fallen back, revealing Amelia's naked hip and she drew a deep breath before rolling onto her stomach, clearly still asleep. She was completely uncovered at that point, her bare bottom and legs on full display for Morgan's viewing pleasure. \n\nMorgan traced a finger down her spine, barely grazing her skin until she opened her palm on Amelia's right cheek. A handful of freckles clustered on said cheek and Morgan ran her thumb over the discolored skin, smiling to herself. This woman is going to be my undoing, she concluded. God help her if Amelia didn't want exclusivity. \n\n****\n\n\"So, you're really taking off this weekend? How convenient that it's just in time for me to be back in town,\" Liz's tone was incredulous as she waited for Amelia to reply. The morning was beautiful, the sun not yet baking the area in the dense July heat, offering the city a short respite before it hit. Amelia hadn't seen Liz O'Neil in almost ten months and was glad she was able to see her best friend. \n\nThey had known each other since they were in middle school, immediately becoming friends regardless of their mismatched upbringings. The two couldn't be more different from one another, Liz coming from a stable family living in an affluent neighborhood in northern Ocean City and Amelia from humble beginnings with her mother post-divorce in a quaint one bedroom condo. \n\nAmelia smiled sheepishly. \"You're not allowed to guilt trip me. I had no idea you were going to be back so soon and I already made plans with Morgan,\" she retorted. Her plans for the weekend were set before Morgan left the morning before and she couldn't wait to see her again. She was going up to Philadelphia Friday afternoon and had no intention of coming back until Monday morning. \"Besides, it's not like you're leaving right away. You're staying for a bit this time, right?\" \n\nAfter college, Liz had taken over her father's hobby of a traveling art gallery, allowing her the luxury of seeing the world whilst meeting eccentric individuals. However, it was not by Liz's choice, but from the pressure put on her by her parents. The two friends talked as frequently as possible but with Liz's last destination, they hadn't kept in touch. \n\nLiz nodded and leaned back in the chair. \"Yep. I'll be here for at least a month or two while the gallery is in Atlantic City and then it's off to New York,\" she took a sip of her lemonade and regarded Amelia. \"So, Morgan, huh? What's with this chick; is it serious?\" Liz asked skeptically. Amelia had confided in her friend when Morgan had warned her of the upcoming closure of the flower shop and this led Liz to hold a skewed perspective toward the realtor. \n\n\"I'm not sure. It hasn't come up in conversation yet but, I want it to be serious. I guess you could say I'm being cautiously optimistic,\" Amelia acquiesced, finally admitting out loud that she wanted something more with Morgan. \n\nAmelia met Liz's puzzled emerald eyes, her blond brows drawn together. \"Maybe you should talk to her about that. To be honest, I'm just glad you aren't with Becca anymore. God, I hated that bitch,\" Liz remarked, tossing her curls over her shoulder before taking a bite of the salad in front of her. The woman she referred to had been Amelia's last girlfriend and she had been distraught after the end of their relationship. \n\nAfter allowing herself a chuckle, Amelia digressed. \"So, how is the gallery going?\" \n\nLiz grinned. \"It's been better lately. You should've seen the work I was able to display in Portland. Some of those artists are, well, interesting. In particular, we showcased a beautiful collection of photographs consisting of flowers. Except, in each angle, the flower looked distinctively like a pussy. When I pointed it out to the photographer, she told me I was an idiot and that was the whole point of the collection.\" \n\nAmelia and Liz stared at each other for a brief moment before they were both overtaken by a giggling fit. She was ecstatic that Liz found humor and happiness in her work as of late. Her friend was seldom satisfied with the professional aspects of her life, usually being apathetic toward her achievements. \n\nAmelia assumed it was due to her father's push to take over his gallery instead of finishing her degree in art history. Liz had always wanted to be a museum curator rather than a gallery owner. Not to mention her guarded heart put a damper on the rest of her relations. \n\n\"The photographer was drop dead gorgeous. Too bad she was a pretentious shit,\" Liz sighed, fixing her gaze on Amelia. \"But, enough about me. Tell me more about this girl. How is it she almost shuts down your mom's shop and you still find yourself swooning?\" \n\nAmelia feigned offense. \"I am not swooning!\" \n\n\"You're totally swooning. I don't care, but I don't want to clean up the mess if she dumps you.\"\n\nAmelia rolled her eyes at the remark. \"Oh, please. I'm a grown woman and left those post break up moping sessions in my teen years where they belong.\" \n\nLiz laughed. \"Yeah, now you just board yourself up in a room and write for ten days straight. Because that's healthy,\" she paused when Amelia threw her a faux scowl. \"Hey, I'm not judging,\" her boisterous voice lowered by a few octaves, and her face had taken on a sullen expression as she met Amelia's eyes, \"Your way of dealing with heartbreak is far better than my own.\" \n\nThe alluding, albeit lighthearted, of Liz's last breakup was enough to strip the mood down to an awkward silence among the friends. Liz found her lover of three years in a bout of skilled cunnilingus with one of the artists during a showing in Montreal the spring before. It was just a few weeks after their monumental and enthusiastic engagement. Amelia wasn't sure how to rebound after Liz brought it up. Although it had been well over a year, the betrayal and pain were still clear in her best friend's demeanor. \n\nShe had halted the gallery showing and flew back home, bursting through Amelia's Cape May condo with a bottle of whiskey. Unfortunately, after a great deal of bawling and the same amount of drinking, the two friends ended up in an embrace on the floor when Becca came over for a spontaneous date with Amelia. \n\nLiz had been heartbroken and morose, and Amelia couldn't let her friend drink away her sorrows. She'd grabbed hold of Liz and let her sob against her, coaxing the usually dispassionate woman to let her pain out. It was a simple gesture of comfort that made Becca livid. It hadn't led to their inevitable break up, but Amelia couldn't say it helped any. \n\n\"You know I was kidding, right?\" Liz began. \n\n\"About what?\" \n\nLiz's green eyes were sincere. \"I will totally be there for you if you get your heart broken again.\" \n\n\"Liz, I know that. You were there for me when Becca left, even if it was just to tell me that I stunk and to force me to take a break from my pathetic wallowing long enough to shower. That's what best friends are for.\" \n\nLiz nodded in agreement before she spoke with humor, lifting her glass of lemonade in salutation. \"Here's to praying this one is more understanding when it comes to the 'artistic process.'\" \n\nAmelia clinked her glass to Liz's and they both laughed. \n\n** \n\nThe drive to Philadelphia a few days later was much quicker than expected and Amelia's excitement was building. Along with that excitement was a slight trepidation she'd held since Liz's comment. \n\nAmelia's last relationship had been somewhat serious and the resulting downfall at her fault. She'd been in one of her impulsive creative streaks and her ex, Becca, couldn't understand her process. It had sprung upon her unannounced during a weekend trip to New York City, following her home when they left the Big Apple. \n\nIt hadn't been a surprise to Amelia but what did catch her off guard was that it lasted well over a month. She allowed it to consume her world, thankful for the flexibility of her freelance employment as she rode the wave of creativity. Patiently, she constructed one of her best written works and she was still basking in the high royalties. \n\nHowever, Becca, wasn't too fond of Amelia's sleepless nights, weeks of nonstop writing and editing, and her refusal to leave her bedroom. The combination of these resulted in a swift disconnect. In Amelia's defense, she had tried to incorporate her in the process, but Becca declined the opportunity. \n\nThere was also the hanging jealousy of her friendship with Liz. The two friends shared their preference for women but had never taken to each other romantically. Their relationship was akin to a sisterhood and neither wanted to delve into anything further. This didn't stop Becca from becoming uncomfortable with their strong bond. \n\nAfter Becca and Amelia broke up, Amelia went on another writing binge and would have stayed in the same spot had it not been for Liz dragging Amelia from her laptop and forcing her to eat. It lasted a short ten days and Amelia returned to her normal routine, sans girlfriend. She had fallen into a relationship rut and was fine with that until her mother passed. And then along came Morgan. \n\nBy the time Amelia reached the Ben Franklin bridge, the sun was reaching the horizon on the backdrop of Philadelphia. She'd planned on leaving earlier in the day, but an order had gotten misplaced and she had to work out the details of reordering the products before she could leave. Kathy offered to take over for the weekend, but Amelia hadn't wanted to leave the mess for her to fix on a Friday. \n\nAt a stop light after the bridge, she stole a quick glance at the address she had pulled up on the maps app on her phone to Morgan's place. She wasn't familiar with the area but did find the location with ease ten minutes later. The building looked rather upscale and Amelia felt an insecurity of her own home, although Morgan never passed judgement upon her. \n\nShe parked her car in the garage and rode the elevator to Morgan's floor, finding her door and knocking. Morgan let her in, shutting the door behind her. Amelia couldn't help but notice how amazing Morgan looked in a tight black tee shirt and blue jeans. \n\n\"Wow. Those are beautiful,\" Amelia marveled at the framed art as she followed Morgan through a short hall into a living room, taking in the space. Magnificent paintings hung on the walls, each one abstract in some form, some vibrantly hued, others holding a faint pastel shade. \n\nMorgan smiled, pulling her close. \"Thank you. Now, what were you thinking for dinner?\" \n\n\"Hmm, you?\" \n\nMorgan chuckled heartedly. \"That's dessert. How do you feel about going out? I know it's late so we could order in.\" \n\n\"I think that's a good idea,\" Amelia mused, kissing Morgan's neck tenderly. \n\nAfter a healthy dose of Chinese take-out, Morgan told Amelia to turn on music of her choice. She connected her phone to the small portable speaker Morgan handed her and opened her music app. With a grin, she chose Closer by Tegan and Sara. \"Who's this?\" Morgan asked sincerely when the song began to play. \n\nAmelia whipped her head around to stare at Morgan as the twins chanted through the speaker about coming closer. \"Uh, Tegan and Sara,\" she raised an eyebrow. \n\n\"I've never heard of them,\" Morgan replied, and Amelia gaped, shaking her head in mock disappointment. Then, she noticed Morgan wasn't joking. \n\n\"Oh, my God, you're serious. In that case, let me introduce you to their music,\" after turning up the volume, Amelia moved her hips to the rhythm, smirking at Morgan and humming to the music. Stepping toward Morgan, she looked up at her and batted her eyelashes, attempting a wistful glance but feeling like an idiot. \n\nShe continued her little cavort while the song belted on about getting underneath someone and Morgan secured a grip of both Amelia's hips, pulling her back to her chest. Evidently, she was taking to the music. \n\nMorgan's breasts pressed into Amelia's back and the sensation was enchanting. \"How in the world have you never heard of them?\" she ranted to the living room, Morgan's chuckles rumbling her back. \"They're a super cool indie band from Canada who happen to be queer and twin sisters. It's like a lesbian right of passage to fight over which is hotter!\" \n\nAmelia was still rocking to the music against her as Morgan laughed again and kissed the top of her head from behind. \"You are so goddamn cute when you get all serious about something,\" Morgan remarked, a hand sliding from her hips to brush her fingers over Amelia's stomach. \n\nHer other hand tentatively pulled Amelia's hair from where it lay around her neck. When Morgan's warm lips made contact with her skin, Amelia couldn't halt her long moan. \"Oooh,\" she whimpered as Morgan's kisses trailed her neck, Morgan tugging at the collar of her shirt to expose more skin. \n\nHow did she know how to ignite the fire within Amelia so quickly? It was as if the woman could read Amelia's body in stark detail, guided only by the physical reactions elicited by her touch. She was correct when she assumed Morgan to be intuitive as she felt the woman behind her kiss up her neck and her tongue lash at an earlobe. \"Morgan,\" she hissed, her backside pressed to Morgan's pelvis. Morgan's hand on her stomach skirted the edge of Amelia's jeans, taunting the skin below her navel with a light caress, her teeth catching Amelia's earlobe. \n\nAmelia jerked away from her, needing to kiss those tantalizing lips. She faced her lover, meeting her hungry gaze and Morgan's eyes were dark as she peered down at her. \"I want you so bad,\" Amelia admitted. Morgan's hand came back up to cup her cheek before they met in a ravenous kiss. Amelia placed her hands on Morgan's back, yanking her closer, causing Morgan's thigh to meet her dampening core. \n\nMorgan's dark eyebrow lifted as her lips quirked into a smile. \"If you keep that up, we're going to have to take this to my bedroom.\" \n\n\"That's hardly a threat,\" Amelia quipped and the thought of devouring her lover was quickly clouding her consciousness. Morgan captured her lips again fiercely, her hands on Amelia's lower back, her thigh pressing even harder against her apex. Amelia melted into Morgan's embrace, her need making itself known as she was overcome with an unrelenting blaze. \n\nMorgan left her lips and Amelia opened her eyes to find her watching her with unshielded amusement. \"If they're twins, how can one be more attractive than the other?\" \n\n\"Hmm? What?\" Amelia asked, confused as to why Morgan's hands and strong thigh had ceased their combined activity. \n\n\"How can one be more attractive than the other if they're twins?\" \n\nAmelia shook her head and giggled. \"Because I said so. We'll discuss that more later. Right now, I'm pretty sure we have more important things that need attention. Where's your bedroom?\" Amelia didn't wait for an answer from Morgan as she snatched the portable speaker and her phone. \n\nMorgan laced her fingers in Amelia's free hand and led her down the long hall to the master suite, music still pouring from the speaker. When she opened the door, Morgan turned to her, kissing her hand. \"I hope you don't mind, but I might have gotten something for us, if you want to try,\" Morgan said cryptically. \n\nAmelia looked at her with caution. \"You might have? What would that something be?\" Aw, she bought something for  us?She's so sweet! \n\nMorgan ignored her question and moved toward an open door. Amelia seized the opportunity take a peek around the room. It was large, probably larger than half of Amelia's condo, with the dark hardwood from the rest of the unit spread to the master. \n\nThe doorway Morgan had gone through appeared to be a walk-in closet and beside it a door to the master bathroom. Amelia could see a massive tub inside along with a shower stall and a long marble counter. Wow, this place is huge, she thought. She knew from the sight of the rest of the place that it was nice but hadn't realized it until she saw the bedroom. \n\nShe placed the portable speaker on a dresser along with her phone, taking in the rest of the space. The bed was huge. Amelia guessed it was king size and it was covered with a dark comforter and the pillows were neatly arranged at the head of the bed. \n\nMorgan stepped out of the closet with a small bag in her hand. The corner of her mouth lifted in a crooked smile. \"What's that?\" Amelia inquired, trying to guess what the package in her hand was. Package. She bought us a strap-on?Her brows lifted in understanding and she grinned at her lover when Morgan removed the item from its bag. \n\n\"I thought maybe we could...,\" Morgan's voice trailed off in hesitation as Amelia pulled her shirt off over her head, determined to make her speechless. She found Morgan's sudden shyness caused by the strap on in her hand endearing. \n\nWhen her shirt was off and she was in her black bra and jeans, she took Morgan's widened eyes and slack jaw as a success. \"Uh, I'll take that as a yes?\" Morgan questioned as Amelia slid her jeans down, dropping them to the floor before crawling into Morgan's bed. She stayed on her hands and knees, turning her head to stare at Morgan who was still clothed, standing where she had been. Morgan's eyes appeared obsidian, her lush lips parted as she took a step forward. \n\nAmelia's hair was draped over her back and shoulders, the brown strands spilling on to the bed. She hoped she looked as sexy as she felt and she lifted an eyebrow suggestively, smiling when she heard the opening melody of Stop Desire playing. \"Oh, this song couldn't be more perfect,\" she admitted. \n\nMorgan grinned and shook her head. \"Really? How?\" \n\nAmelia plopped on her back, the blanket cool on her naked skin. She nuzzled her head into the pile of intricate pillows at the head of the bed, raising her arms above her as waited for Morgan to join her. \n\n\"Wait for it,\" she paused while Morgan hastily removed her own tee shirt over her head and tossed it with Amelia's. \n\nAmelia visually drank in Morgan's beauty. Her short black hair was ruffled from taking her shirt off and cheeks tinged copper. The pale 'nude' fabric of Morgan's bra contrasted against her gorgeous bronze skin and the swell of her breasts was delectably inviting. The curve of her hip bones disappearing beneath her jeans was noticeable and Amelia wanted to run her tongue down the prominences. \n\nShe grinned when Morgan swayed her head to the music, the smirk on her face leading Amelia to believe Morgan was noting the words being sung. Amelia blushed before speaking in the most commanding voice she could muster, \"Take your pants off.\" \n\nMorgan obliged, unbuttoning her jeans and kicking them off. Amelia felt bashful as Morgan clambered up the bed, sliding her hands over her naked stomach and planting a strategic kiss directly above her bra. Her body hovered over Amelia's, her legs on either side Amelia's left thigh. \n\nWhen Morgan looked down at her, Amelia's giggle caught in her throat. \"You have no idea how sexy you are,\" Morgan murmured, her breath hot on Amelia's skin. \n\n\"I know how sexy you make me feel,\" Amelia replied candidly. Morgan kissed her as if she had been starved of affection. Her tongue dipped into her mouth, her hands raking up her body to slide the straps of her bra down her shoulders. ",
        "Amelia pressed her body up to Morgan's, moaning into her mouth as their mounds touched, wanting, no, needing to remove the last barriers. \"Hold on,\" she breathed, fingers tugging Morgan's boy shorts down. When she was satisfied they were out of the way, she struggled to remove her own panties, Morgan's deft hands assisting her the rest of the way and removing her bra shortly after. \n\nShe felt Morgan's warmth against her own, a jolt of pleasure coursing through her body at the contact. \"How do you feel this good?\" Morgan whispered before claiming her lips again, hips pressing her closer to Amelia. Wet warmth met her mound and she moaned into Morgan's mouth. Amelia's hips rose, meeting her lover's pressure and groaning her approval. Tongues lashed at each other, fighting for dominance. \n\nAmelia halted the kiss, staring Morgan in the eyes. \"Where's your little friend?\" Amelia breathed and Morgan chuckled, sitting back and grabbing the harness and dildo from the end of the bed. Amelia couldn't stop the laugh that erupted from her as she saw the toy close up. It was a normal dildo, aside from the colorful design it displayed in vibrant pink, blue, and purple. \"Well, that's an interesting color palate,\" she remarked. \"You should put it on.\" \n\nMorgan regarded her with a smirk. \"As you wish,\" she slid off the bed and hastily obeyed, pulling the harness up over her hips. She tore off her bra and then got back into bed. She shimmied her way up between Amelia's thighs and brushed her lips over her chest. Amelia moaned when Morgan took a nipple into her mouth, the bud hardening swiftly. Fingertips traced circles over Amelia's hips, her core dampening from the combined sensations. \n\nMorgan reached up, her fingers caressing the erogenous spot beneath Amelia's ear and hairline. Damn, this woman knew her body far too well and Amelia cooed her approval, her hips lifting on their own accord. Morgan left her breasts, lips trailing upward toward Amelia's neck. \"Do you want me to use some lube or...,\" Morgan began. \n\nAmelia was overcome with fervor by Morgan's tone. \"We don't need any. Now, fuck me,\" she breathed, surprising herself with the use of profanity. It was the only thing that came to mind to relay her staunch urgency. Morgan didn't miss the word choice, kissing Amelia deeply before drawing a finger to her sex. \n\nAmelia moaned loudly as Morgan slipped a digit inside of her, drawing her nectar forth. She guided the dildo to Amelia's swollen lips, running the tip from Amelia's clit to her glistening entrance. Amelia watched her with anticipation, her achy impatience making itself known with each twitch of her hips. \n\nMorgan's eyes lifted to Amelia's, her desire causing her gaze to appear obsidian and depthless. The hunger and passion exuding from her visual inspection overwhelmed Amelia with ardor. The toy pressed into Amelia and she sighed as it filled her. Morgan's progress was gentle and steady, her movements tender. \"Mmm,\" Amelia sighed, her eyes closed and head back. Amelia felt herself lifting to each thrust, urging Morgan nonverbally to go deeper, harder, faster. \"You don't have to be gentle,\" Amelia finally murmured, her eyes opening. \n\nMorgan lifted an eyebrow as she looked down at Amelia. \"You like it a little rough, don't you, baby?\" she noticed, her tone husky and quiet, only furthering Amelia's lust. \n\nAmelia recalled herself practically begging Morgan to be rougher when they'd had sex by her front door. Oh yeah, she did. She would've giggled if she hadn't been so flooded with hunger. Instead, she nodded and whispered, \"Yes.\" \n\nMorgan shifted her pelvis forward, pushing the dildo into the hilt, causing Amelia to cry out in satisfaction from being filled and the harness pressing against her clit. \"Like that?\" Morgan pulled back before thrusting inside of her once more. She held herself up by her elbows on either side of Amelia's body, lips brushing Amelia's neck. \n\n\"Yes, oh, yes!\" Amelia moaned, her arms coming up around Morgan's shoulders as her lover evened the tempo inside her. Her legs wrapped around Morgan's back side and she rose to meet each of her thrusts with vigor. Her ache became a swirling fire, shimmering behind her closed eyelids as the pleasure consumed her. The base of the harness hit her clit with each movement of Morgan's hips and Amelia found herself approaching her peak. Her body quivered, her nails dragging across Morgan's back as she continued her surge. \n\nThe fire engulfed her, muscles clenching and body trembling with the quake that overtook her. \"Oh, oh, Morgan!\" Amelia called out before biting Morgan's shoulder, causing her lover to groan, and she rode her climax to the fullest. \n\nFinally, her breathing slowed as did Morgan's progression. Amelia's eyes were closed when Morgan kissed her tenderly and eased up the bed, loosening the harness and tossing it to the floor with a soft thud. Amelia felt Morgan wrap an arm around her and she smiled, opening her eyes to gaze at her lover. \"You're amazing.\" \n\n****\n\nAfter a brief respite, Amelia caught a second wind. Morgan watched her lover climb on top of her, her cerulean eyed goddess watching her with a predatory evaluation. Amelia kissed her, teeth capturing her lower lip and tugging. This was a new side to Amelia that Morgan had yet to experience. She was beautiful, peering down at Morgan's body with such affection and unmasked arousal, Morgan was sure once she touched her, she would come unhinged. Amelia leaned forward and Morgan closed her eyes, but instead of receiving the kiss she anticipated, Amelia's lips were on her neck. \"I want to make you feel as good as you made me feel,\" she whispered beside Morgan's ear. Her hands rested on Morgan's thighs, her nails lightly caressing. \n\nMorgan grinned as Amelia's lips kissed down her neck and quickly approached her hardening nipples. She felt Amelia's tongue slide beneath her breast, coming full circle but missing her stiff nub. Amelia's mouth moved to the next, repeating her action around that breast as well, ignoring her nipple. Morgan opened her eyes and found Amelia staring at her, her mouth still poised above her chest. \"Tell me what you want,\" Amelia requested. \n\nHer cheeks were flushed and her parted lips lush, her chestnut hair laying over Morgan's abdomen. Morgan wanted her to do so many things, but she figured she could start with one simple request. \"Lick them, baby,\" she murmured. Amelia's tongue flickered over the closest nipple and Morgan's eyes shut, her head falling back at the sensation and she groaned. Fingers secured a hold on the opposite nipple as Amelia sucked the other into her mouth. Morgan's hips bucked at her lover's ministrations. And then Amelia stopped. \n\nShe placed featherlight kisses down Morgan's tight stomach, pausing at her navel to trace her tongue around it. The strange pleasure elicited from the action caught Morgan off guard and she moaned, her fingers grabbing handfuls of blanket. She swore she heard Amelia giggle but couldn't be certain as the brunette's lips descended further. Wet streaks over her hip bones caused more unexpected bliss before she moved further. \n\nShe kissed Morgan's mound, her chin tickling her dark curls. Rather than licking where she needed it most, Amelia ran her tongue over to Morgan's thigh and then planted kisses all the way down to her knee. Morgan huffed, craving attention on her pulsing clit as Amelia lavished her other thigh with the same affection. \n\nJust as she was about to beg, Morgan felt Amelia's finger tentatively graze her lower lips, a delicate touch coming up to her mound and over her hip. Morgan moaned, expecting more but it ceased. \"Baby,\" she mumbled, her need robbing her of proper words as she glanced down at her lover. \n\nLifting her head from where she had rested it against Morgan's thigh, she quirked an eyebrow at Morgan. \"What is it?\" she asked innocently but her lips were curled in a smirk. \n\nMorgan had to admit that the brunette was seductive between her legs and this further complicated Morgan's quest to convey her necessities. \"Please touch me, baby,\" she whispered. \n\nAmelia stared at her briefly before inching upward. \"Impatient, aren't we?\" she didn't wait for a retort. She flattened her tongue over Morgan's sex, Morgan throwing her head back and moaning at the sudden contact. Amelia burrowed her tongue between Morgan's swollen lips, before roaming over its entirety tantalizingly slow. \n\nMorgan's hips bucked when Amelia slipped her tongue over the hooded bundle of nerves and then again when she mirrored the movement. Her tongue dashed back and forth, up and down, Morgan swiftly reaching her apex. Two fingers slipped into her core, Morgan groaning, toes curling as she surrendered to the onslaught of beatitude. \n\nAmelia's fingers curled upward with each thrust and Morgan promptly became galvanized, every muscle in her body contracting as she was overcome with a rich crescendo. \"Amelia!\" she moaned, her hands finding purchase in her lover's hair, fingers tangling in the brown locks as she pressed her to her bucking hips. The orgasm smashed through her body, every muscle quivering in the paralyzing pinnacle. \n\nWhen her trembling subsided, Amelia crawled up beside her, wrapping her leg and arm over her. Morgan embraced her, kissing her forehead. \"Let's get under the blankets,\" she mused. They pulled the covers back and slide under the heavy comforter, resuming their comfortable position. Skin on hot skin caused Morgan to feel completely at ease, surrounded by the heat of her love. \n\nAmelia's eyes closed again and seemingly fell asleep. Morgan's fingers ran through her hair, her thumb tenderly caressing Amelia's cheek. Her breathing was soft and even, her face lax and brown tresses cascading across the pillow. Without a doubt, Morgan knew she was falling in love with Amelia. \n\nMorgan would do anything to make Amelia smile, to hear her laugh, to embrace her. She kissed the top of her head and sighed. \"How can it be this easy to love you?\" Morgan whispered against Amelia's hair. Amelia smiled unconsciously, her cute little dimple making an appearance on her cheek. Morgan kissed her forehead before snuggling up to her slumbering lover and falling asleep. \n\n** \n\nAmelia hummed softly to herself as she gathered a bundle of roses reserved for a customer and brought it to the front of the store, handing them to Kathy. Kathy Meek was a small woman, only a few years older than Amelia's mother and had been in Amelia's life since she was four. \n\nHer blond hair was sprinkled with white and grey strands and she wore it in a tight bun on the back of her head. Kathy and Amelia's Mother Martha worked together before she started the small business. When Martha's father passed, he left her a small deal of money, which was enough for her to quit her job in the floral department of the grocery store and start fresh. She was able to buy the small condo and begin the process of being a business owner, Kathy becoming her first employee. \n\nHer face broke out in tiny wrinkles when she beamed at Amelia as she took the flower. \"I haven't seen you this happy since you got your first book published. You must really be fond of that woman. She seems very kind and isn't half bad looking,\" she mused, dropping the roses into a small metal vase in the display case. She turned back to face Amelia, wiping her hands on the forest green apron she wore. \n\nMorgan had come by that morning, explaining that she had a house showing on the southern tip of the island and would be back later that evening. Kathy couldn't have been more welcoming to Morgan and it warmed Amelia's heart. She sighed, pushing back a stray hair behind her ear and feeling like a teenager again in Kathy's presence. \"I really enjoy her company and I can't thank you enough for helping out around here so much,\" Amelia expressed. \n\nKathy shooed away her appreciation. \"Oh, honey, you're like a niece to me and I love this place. Your mother and I put a lot of years into keeping it afloat and she would be so proud of you. And, above all, you deserve happiness,\" Kathy's eyes shimmered with tears and she wiped her face before giving Amelia a bear hug. She really was like an aunt to Amelia and she cherished their kinship. Kathy cleared her throat as she stepped back. \"Now, I've got a make a quick phone call but once I'm through, you go find your girl and have a lovely evening.\" \n\nAmelia cleared the counter of flower debris, dropping the loose leaves and trimmed stems into the trash. She couldn't wait to escape the flower shop and spend another evening with Morgan. Their weekend in Philadelphia had felt far too short and Amelia kept replaying the words she heard Morgan say to her when she thought Amelia was asleep. How can it be this easy to love you? The thought of that statement made her heart race and her lips curl into a dopey smile. The light jingle of the bell above the door caused her to lift her gaze with elation, expecting to see Morgan. Her stomach dropped and her heart beat wildly in her chest when she met icy grey eyes she hadn't seen since she was a child. \n\n\"Martha?\" her father stepped into the shop, the door closing behind her. He looked a lot different compared to her memory and old photographs. His brown hair was greying heavily, and his skin had taken on a slight yellow pallor. \n\nShe suddenly felt very small, her palms becoming sweaty and she dropped them from the counter so her father wouldn't see them tremble. \"No,\" she replied with confusion. \n\nHis eyes widened and he hesitantly took another step toward the counter. \"Amy? My God, you're all grown up,\" he remarked. She nodded slowly, unsure what to say to the man she had feared most of her childhood. \"Where's your mother?\" he asked, peering over her shoulder toward the open back door, as if her mother was expected to walk through the threshold at any moment. \n\nAmelia desperately wished for that very thing to happen. She couldn't help but scoff at his question. \"She passed away,\" she managed, chewing the inside of her lip. \"What are you doing here?\" she was determined not to let her voice falter and she stood tall despite her apprehension. \n\nHe wore a crisp suit and shining black loafers, however the tailored suit did nothing to conceal his weight loss and distended stomach she noted from the last time she saw him. She had only been ten years old when she and her mother fled from his abuse. \"I can't believe it,\" he sighed before he continued, \"I stopped drinking. It's been five years,\" he looked down at the floor as he shuffled his feet. \"I didn't know about your mother. I'm sorry,\" he met her eyes again and Amelia's jaw clenched. \n\nShe took a quiet deep breath before she spoke. \"I'm glad for you. But, why are you here?\" \n\nHe took a step forward, his brows drawn together and his eyes sad. \"I wanted to apologize to you. I wanted to apologize to your mother, but I guess I lost my chance. I'm sorry, Amy, for everything.\" \n\nShe closed her eyes, the use of her nickname yet again nearly causing her to shed the tears welling up behind her eyes. No one called her Amy except for her mother and surely not her estranged father. Martha had been granted sole custody of Amelia during the divorce, but not due to her father's unrelenting alcoholism or his domestic abuse, but because he didn't want rights to her. He had moved a few states away to continue law and she hadn't seen him since. \n\n\"I have cirrhosis. The doctor gave me two months,\" he stated. Amelia opened her eyes and watched him carefully. He chuckled lightly and shook his head. \"I don't know what I expected. I finally kick the booze and it came back to bite me in the ass. I'm so sorry. I wanted to tell you that, before it's too late. I'm trying to make amends.\" \n\nThe sound of someone clearing their throat lifted Amelia's attention to the doorway to the back of the shop. Kathy stood with her arms across her chest, brows furrowing as she scowled at Amelia's father. \"You aren't welcome here, Kyle. Never have and never will. Now, get out,\" she commanded, her pose threatening even for her small stature. With one last glance at Amelia, her father walked out the door. \n\nKathy put a comforting arm around Amelia. \"I'm going to grab my stuff. Can you send Morgan back if she comes by before I'm back?\" Amelia offered. When Kathy nodded, Amelia excused herself to the back before the tears came down in a torrent. \n\n** \n\nIt was dark, way past her bedtime, but Amy sat at the top of the stairs, woken by the shouts from her parents. A boisterous curse word echoed through the house, sending her into another shivering fit and she tightened the blanket around her shoulders. Her feet dangled, bare toes brushing the beige carpeted step beneath her as she tried to gather the courage to tell her father to stop screaming at Mom. \n\nIt was no use, she knew, because it never worked before. It only made the yelling worse. Amy had tried previously to get help from her teachers at school, but that never seemed to do any good, either. She'd heard her Mom's friend, Kathy tell her mom that he was a 'calculated drunk,' whatever that meant, and he would never get in trouble. \n\nA loud crash caused Amy to stand with a gasp, her trembling fingers grasping the ornate railing. Her heart was rattling in her chest, tears springing to her eyes as she heard her mother tell her father to stop. She feared it would never stop, the yelling, the banging, the screamed curse words. That wasn't the worst of it either, she remembered. Mom usually stopped him before he would hurt Amy, but she couldn't every time. \n\nThe front door slammed heavily, and everything was shrouded in silence. She deduced a long time ago that quiet could be worse than yelling. One step at a time, Amy crept down the staircase, her teeth clamped on her lower lip to keep from audibly sobbing. When she reached the bottom of the stairs, the faint sound of her mother's sniffling was heard. \n\nShe followed the sound, finding her mom sitting at the kitchen table, head bent over a mug with a tissue in her hand. The white paper was red, and she looked up to meet Amy's eyes, her cheek marred with an already darkening bruise. \"Oh, honey. I'm sorry,\" she managed, wiping impatiently at her face and standing. A cut above her eyebrow dribbled blood, the skin swollen and bruised. \n\nAmy stepped forward and the tile of the kitchen floor felt freezing on the soles of her feet. \"Mom, he hurt you again,\" she whispered, her hand raising to point at the red splotches beside the bruising skin and the bleeding cut. \n\nHer mother nodded slowly, taking her smalls hands into her own, urging her forward before sitting again. \"Sweet heart, would you be sad if we had to leave our big, beautiful house? I promise we can make a wonderful home somewhere else, just you and me.\" \n\nAmy's brows knitted together and she shook her head. \"I just want daddy to stop hurting us. I don't want to stay in our big house if we have to be scared all the time,\" her lip was trembling again and she let her tears fall freely. \n\nHer mother's face crinkled with evident pain and she cried along with Amy. \"You are wise beyond your years, Amy.\"\n\n\"Amelia?\" Morgan's voice saved her from the painful reverie and she looked up from the desk, wiping tears from her cheeks. Morgan's face was full of concern and rightfully so. Amelia presumed she looked awful after sobbing in the back office for at least five minutes, her cheeks taking on a crimson hue. \"Are you okay? What's wrong?\" \n\nAmelia cleared her throat before shaking her head. \"Ready to go?\" She digressed, standing and slinging her bag over her shoulder. She tried to feign normalcy, but her fingers trembled on the strap of her bag. \n\nMorgan appraised her skeptically. \"Yes. Are you okay?\" \n\nAmelia nodded and laced her fingers in Morgan's. \"I'm fine,\" she insisted. Morgan's expression was precarious, and Amelia feared she wouldn't get off that easily. It wasn't as if she didn't trust Morgan enough to divulge in her traumatic childhood events; she wasn't sure she could speak it aloud after seeing her father. ",
        "Morgan sighed, her fingertips grazing Amelia's cheek. Amelia had to hold in the fresh tears that were threatening to break free. \"Okay. If you say so,\" Morgan concluded, but Amelia knew it wouldn't be the end of that conversation. \n\n** \n\nMorgan wanted to press Amelia further, but she fought the impulse. One would assume her crying could've been brought on by a distant memory of her late mother, yet something told Morgan that wasn't the case. Amelia held things guarded from her and as much as she wanted to know everything about the writer, Morgan didn't want to corner her, nor did she want to do anything that could cause her discomfort. The last thing she needed was to push her away before she could even establish that they were a legitimate couple. \n\nAs for that matter, Morgan had planned on finally bringing up the conversation. Well, in so many ways. Amelia squeezed her hand and led them out of the shop. \"You lead the way,\" Amelia cheered, any remnants of what triggered her tearful episode gone from her tone. \n\nGillian's Wonderland Pier was toward the northern end of the boardwalk and heavily crowded with families and their small children. Morgan and Amelia walked through the archway of the faux castle structure and headed to a ticket booth. \"How about the Ferris wheel?\" Morgan mused after purchasing a short stack of tickets. Amelia smiled and nodded. \n\nThe ride in question was quite tall and could be seen coming into the city from the 9th street bridge. When the two women approached the line, the wheel's lights twinkled in the semi dark sky as twilight took over. They were seated rather quickly and the ride began, lifting them up into the darkening night sky. \n\nThe clamorous voices of the amusement park visitors and music were all muffled as they rode to toward the top, replaced with the soft crashing of waves. A gentle breeze tugged at Amelia's hair, whipping into Morgan's face. \"Oh, I'm sorry,\" she tied her hair with a band and smiled sheepishly at Morgan. \"I wonder if they keep track of how long people ride. Do they mentally time each car's ride? Like, 'car five has two more rounds,' or something like that,\" Amelia mused. \n\nMorgan chuckled. \"I think that would be kind of hard to keep track of.\" \n\nAmelia turned to her, determination in her tone. \"I should ask when we get off. Now I have to know,\" she grinned. \n\nMorgan slipped her hand into Amelia's, her eyes searching her face. \"Amelia, how would you feel about meeting my family?\" There. She finally gained the figurative balls to ask. Morgan's heart thrummed against her chest but kept her face relaxed. She figured it was the easiest way to gauge the depth of their relationship. If Amelia wasn't interested in furthering it, she had the opportunity to say so. Or maybe Morgan's plan was idiotic. \n\n\"Your family?\" Amelia inquired neutrally. \n\nMorgan nodded. \"Yeah. My parents are having a barbecue next Saturday. It'll only be them, Allison and her fianc\u00e9. I figured we've been dating for long enough that maybe you'd want to...,\" Morgan trailed off, unsure of what she was trying to convey. \n\n\"I'd love to,\" Amelia began, \"but that means you have to meet my best friend.\" \n\n****\n\nAmelia was apprehensive as she led Morgan up the three flights of stairs to her best friend's loft but then quickly chided herself. She'd explained to Morgan that her best friend traveled a great deal and she wanted them to meet before Liz was off to her next location. \n\nIf Morgan was going to introduce her to her family, it was time to introduce her to Liz. What perfect timing that she was back in town? She'd sent her a text and Liz was more than ecstatic to invite the couple over. Aside from Kathy, whom Morgan already met, Liz was the only family Amelia had left. With her mother and maternal grandparents gone, her paternal grandparents having nothing to do with her, and her hoping she'd never have to be in the same room with her father, Liz and Kathy were all she had. \n\nNo, that wasn't right. She also had Morgan. She couldn't deny the feelings she'd developed for the realtor over the course of the last few months and wanted nothing more than to continue with their blossoming romance. All the more reason to rip off the band-aid and let Liz finally meet the woman who was quickly possessing her heart. How can it be this easy to love you? \n\nAs she raised her fist to knock on the door, she only hoped Liz would be gentle and not a total asshole. \n\n\"Well, this is Morgan?\" Liz blurted as way of greeting when she opened the door. Her eyes sized up Morgan and Amelia felt incredibly annoyed by her best friend's blatant scrutiny of her lover. \n\n\"Yep. Morgan, this is Liz,\" Amelia gestured to her best friend. Liz moved out of the way so the two women could pass. The remodeled loft was heavily modernized and held an industrial atmosphere. Concrete floors with chrome tinted countertops and cabinets, the large space wide open through out. Everything was dark or shining. \"Come and sit. I'll grab us some beers.\" \n\nAmelia and Morgan sat on the stiff couch and watched Liz step behind the tall island in the open kitchen. Morgan's face held a mild hint of unease as Liz placed two beers on the coffee table in front of them and sat in a black Barcelona chair across from them. Amelia sensed her lover's disquietude. Doubt crept into her mind as she wondered if the meeting was a mistake. \n\nWith that thought, Amelia snaked her hand to Morgan's, fingers grazing her knuckles. Liz cleared her throat and Amelia glanced at her friend. Her blonde eyebrow lifted and Amelia could see her eyes canvassing Morgan again. \"So, who'd you have to sleep with in order to keep Martha's flowers from being kicked out of the building they've been in forever?\" Liz questioned. \n\nAmelia should've known the uncouth inquiry was coming. Oh, God. Can I just disappear now? As if on cue, her phone started to ring. \n\n\"Hello?\" \n\n\"Amelia, honey, I'm sorry but we have an issue. The sink in the back just won't stop running. It overflowed and I had to call an after hours plumber. Problem is, they can't fix it without your approval because you own the business,\" Kathy lamented over the phone. Amelia bit her lip. I wasn't serious, universe! \n\n\"Don't worry about it. I'll be right there,\" she reassured Kathy before ending the call. She pinched the bridge of her nose and met Morgan's concerned inspection. \"I have to run back to the shop. Apparently the sink is overflowing and the plumber won't do anything until I'm there,\" she explained and Morgan gave her hand a light squeeze. Amelia looked to Liz. \"Sorry. We'll have to come by another time.\" \n\nLiz smirked. \"What? It shouldn't take you that long. Morgan can sit right with me while you run over there. I'm sure we'll find something to talk about,\" Liz announced with a devious smile. \n\nAmelia regarded Morgan, searching her face for any unease. \"What do you want to do?\" \n\nMorgan shrugged with nonchalance and smiled warmly. \"I can stay here. I don't care either way,\" she reassured her with a kiss to her cheek, which did nothing to soothe Amelia's worriment. \n\nAmelia nodded despite her apprehension of leaving Morgan with Liz. She did that want her best friend berating her new girlfriend. \"Okay, I'll be as quick as possible,\" she said as she stood. She gave Liz a skeptical glance before leaving the loft. \n\n** \n\nKathy was standing next to a woman who appeared to be around her age, a wrench in one hand and a tool Amelia wasn't familiar with in the other. They were laughing, the sink apparently fixed. Towels were strewn over the floor, sodden with what Amelia assumed must've been a cascading flow of water from the now fixed sink. \"Oh, here she is,\" Kathy said to the plumber, indicating to Amelia. \n\nThe plumber wore a ballcap on her head and smiled kindly when she approached Amelia. \"Sorry to make you come out here. I just need a signature from you. It was a simple fix and luckily I had the part in my truck. Here you go,\" she handed Amelia a clipboard with a sheet of paper on it before turning back to Kathy and continuing their conversation. \n\nThe cost was much less than Amelia anticipated and she signed it before handing it back. \"Thank you for coming out so late. I hope it wasn't a far drive.\" \n\nThe plumber brushed off her concern as she took the clipboard. Amelia began to gather the soaked towels from the floor, dumping them in a bin toward the back exit of the building. When she came back, the plumber had left and Kathy was finishing what Amelia started. \"I'm sorry to interrupt your night, honey. Where's Morgan?\" \n\nAmelia chuckled, taking the last of the towels from Kathy. \"She's over at Liz's place. I hope Liz isn't being too much of a butt to her. I told Liz about the new owners nearly kicking us out for good and now I don't think she trusts Morgan,\" Amelia conceded and Kathy laughed loudly. \n\nKathy wrapped a comforting arm around her shoulder. \"What happened with your father this afternoon?\" \n\nAmelia gulped. She knew Kathy was going to ask and also knew she had a right to. Kathy had been there for Amelia's mother through the roughest time of her life and her support helped her mother escape her predicament. \"He's dying and wanted to apologize to us for what he put us through. A little late for that,\" Amelia sighed. Kathy hugged her tighter, the gesture almost bringing Amelia to tears. \"Thank you for being there for Mom and I,\" she whispered. \n\nKathy let her go. \"Oh, honey, of course. I loved your mother, more than you know. It makes me happy to be able to help you now that she can't be here herself. Now, you go on and finish your evening,\" she gave her arm a squeeze before heading to the front of the shop. \n\nShe thought about Kathy's word choice as she drove the short distance to Liz's loft. It kept her mind from the concern of what transpired while she was gone. Hopefully Morgan was still there and hadn't gone walking back to Amelia's condo. It wasn't as if Liz was a mean person; she was simply too blunt and forthright. \n\nA soft rap at the door granted her Liz's voice shouting to come in. She opened the door to find Morgan where she'd left her, two empty beer bottles on the table in front of her and one in her hand. Liz was still in her chair, legs tucked beneath her and three empty beer bottles on her side of the table. Both were laughing vivaciously, Morgan raising a knuckle to her eye to brush back a tear. Amelia smiled at the lighthearted atmosphere and sat beside her lover. \"What are you guys laughing about, or do I even want to know?\" she inquired. \n\nThey were both still laughing, Liz sobering first. \"I was telling her when you professed your love to Ms. Phelps in eighth grade,\" she choked before laughing again. Amelia giggled, rolling her eyes at the memory of her adolescent mind thinking it was okay to be in love with her extremely well-toned gym teacher. \"She was hot, I'll give you that!\" Liz added, clearing her throat in a weak attempt at stifling her laughter. \"I've got to pee,\" Liz announced as she stood and started down the hall. \n\nAmelia glanced over at Morgan who was sipping her beer. \"I like your friend,\" she said to Amelia, who gently pushed the beer aside to claim her lips. \n\n** \n\nAmelia's steady deep breath transformed into a nervous sputter as Morgan headed up the driveway. Morgan squeezed her hand, unaware of the depth of her lover's plight. Amelia was terrified to meet Morgan's family. The thirty-five-minute drive from South Philly to Yardley was a short distance, but to Amelia, it felt as if the trip was twice as long. Coming from a broken family as she had, she was worried about Morgan's passing judgement upon her. Amelia's mother may have owned her own business, but they lived their lives frugally after her parent's divorce. Morgan's sister, Allison was pleasant enough from what Amelia had seen of her, but the implications of her impression on the rest of the family terrified Amelia. What if they didn't like her? Would Morgan cut it off? \n\nThe car stopped, and Amelia looked out the window to see the grandiose home. It was a huge lot lined with colorful bricks and a long, winding walkway lain with cobbled stones leading to the driveway. Two vehicles were parked in front of the three-car garage, a red Convertible and Allison's Prius, which they were parked behind. \"Come on,\" Morgan coaxed as she got out of the car. Amelia hesitantly followed. \n\nAs she stood and really took in the house, she noticed the flash of water below. The house sat on a small cliff side. The seemingly one-story home truly contained three-stories as the landscape fell closer to the lake. \"Is, is that a lake?\" Amelia asked incredulously. \n\n\"Yeah. It's Silver Lake,\" she answered as she gathered a few bags from the back seat. A mahogany colored deck wrapped around the left side of the house where the ground dropped off, a huge finished backyard with an inground pool sat in the middle of the space. Allison with her fianc\u00e9 and an older woman Amelia didn't recognize, who she assumed was Morgan's mother, was seated on lounge chairs around the pool. \n\nMorgan led Amelia into the house, which the inside was just as magnificent as the outside. Dark hardwood floors spread throughout the house, the living room held a massive television and furniture upholstered with real leather and surrounded an intricate fireplace. \"Wow,\" Amelia gaped. \n\nMorgan turned to her with a smile, her dark eyes soft. \"They're going to love you,\" she said, as if she knew exactly what was going through Amelia's head. She returned the smile, still unsure but comforted by her lover's words. They dropped the dessert in the kitchen, which was also majestic with dark stained cabinets and granite countertops, before they headed down the stairs to the wide French doors leading to the backyard. \n\nAllison was at the grill, turning over long skewers filled with various vegetables and meat. She threw Amelia and Morgan an enthusiastic wave with her free hand. \"Hey, guys!\" \n\nMrs. Burke stood from her lounge chair and smiled at the two women. Amelia could immediately see the family resemblance between Mrs. Burke and her daughters. She held a similar skin tone as Allison and was quite petite but her eyes were the same brown as Morgan's and they shared the same facial structure. \"Morgan,\" she exclaimed, embracing her daughter before stepping back and taking in Amelia. \"And you must be Amelia,\" she wrapped her arms around Amelia and hugged her tightly. \n\nShe ushered Morgan and Amelia to the chairs scattered next to the pool, the scents of burning charcoal and chlorine filling the area. A few moments later, a tall man emerged from what Amelia assumed to be the pool house. \"Hey, Morgan,\" he bounded over to the cluster of chairs and grabbed Morgan in a bear hug. He was tall and lean, more so on the scrawny side, Amelia noted when he turned to regard her. \"And Amelia, I take it?\" She nodded and he hugged her with just as much gusto as his stepdaughter before taking a seat next to his wife. \n\nThey talked for quite some time, about the flower shop, beach erosion, politics, religion, the Phillies. Every topic usually off the table during a first meeting was brought up. Amelia was dumbfounded how kind and welcoming Morgan's family was, not as though she expected any different from her love. \n\nMorgan was kind, loving, and selfless. She expected all of the above from the people who brought her into this world. But, it was uncanny how well they all meshed together in harmony. There was no tension to speak of, no resentment or cold remarks. Amelia couldn't help the sudden longing she felt to become part of their family and it startled her. \n\nAfter a long goodbye in which Mrs. Burke nearly convinced the women to stay the night, Morgan and Amelia were finally headed back to Philadelphia. It was quiet for some time while Amelia fiddled with her hands in her lap, unsure how to convey her happiness in meeting her lover's family. She sighed, catching Morgan glance at her while stopped at a red light. \"Thank you,\" she started, her voice barely above a whisper. \n\n\"For what?\" \n\n\"For introducing me to your wonderful family,\" Amelia chewed her lower lip before she continued. \"They're so loving. I wish you could've met my mom.\" \n\nMorgan pulled forward when the light changed, her eyes back on the road. She reached her hand over and took Amelia's, giving her a light squeeze. \"Is that why you were crying in your office?\" \n\nAmelia laced her fingers with Morgan's and looked forward. \"No. It was because I saw my father.\" \n\nThe statement hung between them. \"Your father?\" \n\n\"Yeah. My parents got divorced when I was ten,\" she started, hoping she wasn't making a mistake by divulging in the depth of her familial issues. She didn't want Morgan thinking of her differently after sharing her past.\n\nMorgan's fingers were warm and comforting in her hand. \"It got ugly but not for the normal reasons, like fighting over custody. It was bad because he was an abusive, alcoholic lawyer and didn't want them to the separate. She tried so hard to get us away from him, but he had all the right connections and knew all the right people to make things, like police reports, disappear. My mom didn't make enough working at the grocery store to support us and she felt so stuck,\" Amelia cleared her throat for fear of her admission dissolving into tears. \n\nMorgan's hold on her hand tightened slightly and Amelia peeked at her. The other hand gripped the steering wheel, her muscles straining from the pressure. She was staring at the road, her jaw tight and brows drawn together, waiting patiently for Amelia to continue. \n\nAmelia looked ahead again. \"It was when he started targeting me that she finally realized she had to do something. I remember being so scared all the time, worried he would snap at the drop of a hat. His temper was just awful,\" Amelia heard what sounded like a growl come from Morgan and it made her feel oddly cherished, the weight of Morgan's hand in her own giving her to courage to continue. \n\n\"My grandpa let us move in with him and threatened to kill my father if he came near us again. Part of me wonders if the only reason my father didn't want the divorce was because he didn't want to pay alimony or child support. Bastard.\" \n\nAmelia bit her lip as the first few tears slipped down her cheeks. \"When you were down last weekend, he showed up to the flower shop looking for my mom. He didn't know she died. God, he looked so bad. He told me he wanted to apologize to us for what he'd done,\" she chuckled crudely, \"But, I'm pretty sure the only reason was because he's dying of liver failure.\" \n\nAmelia hadn't noticed when Morgan pulled into a desolate grocery store lot and put the car in park until her lover turned to her. \"Oh, Amelia. No one should ever have to deal with what you went through,\" she whispered before her arms were around Amelia. Sobs racked through Amelia's body as Morgan's embrace engulfed her with warmth and ardor. \n\nHer tears slowed and she couldn't help but worry that she made a mess of her lover's shirt. Strong arms held Amelia, Morgan's gentle hand caressing her back while she whispered sweet words to her. They sat holding one another for a while until Amelia's sobs lessened to a quiet weeping. \n\nAmelia pulled back, wiping her face with the sleeve of her sweater. Morgan was watching her with concern, her hazel eyes filled with tears of her own. \"I'm sorry. You probably think I'm silly,\" Amelia said. She worried Morgan would think less of her after hearing of her childhood. \"It's just, your family is so wonderful and together and mine...mine isn't.\" \n\nMorgan smiled and the sight as well as the words she spoke caused Amelia's heart to feel as if it were going to burst. Her arms were snuggled around her before she spoke. \"I'm sure talking about that isn't something you do easily. It hurts me that you suffered through such crap as a kid, but you coming from a broken family doesn't make me love you less,\" she paused with contemplation, easing back to gaze into Amelia's eyes. \"Amelia, I love you so much.\" ",
        "Fresh tears trickled down Amelia's face as she spoke. \"I love you too, Morgan.\" \n\n****\n\nEleven months later\n\nThe reception was lively and people flitted on and off the make shift dance floor over top the sand on the hotel's private beach. It had been a perfect ceremony, and Morgan's sister wasn't the bridezilla she had cautioned Amelia about. Allison was dancing with her new husband, smiling wildly as he twirled her around, her blue dress rippling with her movements. \n\nMorgan's back was propped up by an overturned lifeguard row boat, Amelia between her legs with her back against Morgan's chest. They sat in the sand far from the activity and close to the surf. The sun had set an hour before and the full moon was slowly ascending into the sky, it's reflection bouncing off the surface of the sea. A chilly breeze flowed off the water, Morgan thankful they thought enough to bring along a beach blanket for them to cuddle under. She pulled the blanket up to Amelia's shoulders, fearful the cute little black dress she wore was going to cause her to shiver in the cool air. Her lover sighed contently, running her hands up and down Morgan's shins over the trousers she wore for the wedding. \"Have I told you how much I love your family?\" she asked, turning her head to look up at Morgan. \n\n\"Have I told you how much they love you?\" Morgan chuckled, kissing the top of her head. She was smitten with the woman in her arms, the feeling almost overwhelming. \n\n\"Yes and so have they,\" Amelia giggled and set her sight back at the dance floor. \n\nThere was a long pause as they watched the partygoers dance, children zigzagging through the boisterous adults with cookies and tiny cakes. Morgan's stepfather had stolen his new son-in-law from his daughter for a dance and Morgan chuckled at the goofy men she called family. \"Have you ever thought about marriage?\" Morgan probed as nonchalantly as possible. \n\n\"Is that the shoobie version of a marriage proposal?\" she giggled again, and Morgan squeezed her, cherishing the sound. \n\nMorgan nuzzled her face to Amelia's neck causing her to tilt her head, stifling the giggles instantly. \"You can't call me shoobie anymore now that I live here,\" Morgan reminded her, lips brushing her neck. The fingers on Morgan's legs clenched as she kissed the now accessible softness of Amelia's neck. \n\nAmelia sighed, relaxing into Morgan's hold. \"I guess you're right,\" Amelia murmured, her head leaning back against Morgan's chest. Morgan drew lazy circles over her lover's neck with her tongue, soaking in the soft cooing and squirming from Amelia. She brought her hand up Amelia's stomach beneath the blanket, her hand dragging over the sensitive skin. \"Morgan, we're in public,\" she chided her, and Morgan chuckled as she furthered her advance to an already peaked nipple. Amelia attempted to quiet the moan that her touch invoked. \n\nMorgan kissed under an ear, her breath disrupting the tiny hairs and Amelia whimpered. \"Nobody is paying us any attention,\" she began but quickly retreated her hand as her lover's best friend came awkwardly trekking toward them through the sand. \"Oops, never mind. Here comes Liz.\" \n\nLiz plopped down beside the lovebirds, halting their lascivious activity beneath the beach blanket. \"Hey, ladies,\" she tossed her sandals in the sand and kicked her bare feet out. \n\nAmelia feigned her calm, but Morgan could see the telltale signs of her lust. Her cheeks were tinged crimson, her eyes wide and back pressed hard to Morgan's chest. Her hands were still grasping Morgan's ankles in an iron grip when she smiled at her best friend. \"Hey, Liz. I'm so glad you could make it. I hope the flight wasn't too crappy. How was New Orleans?\" \n\nAmelia's best friend chuckled and shook her head. \"It was New Orleans. What else can I say?\" she said, clearly amused by the question before she turned to Morgan. \"How's your new office doing down here?\" \n\nMorgan grinned. \"It's great. You were right when you said there's quite a market down here in itself,\" she answered proudly. She'd made the move four months prior and couldn't believe her luck in landing in the client dense area. With so many summer homes, apartments, and businesses, she was wondering why she hadn't thought of branching out before. She would've moved anyway to be with Amelia, commute or not.\n\nLiz patted Amelia's foot over the blanket. \"How's the remodeled shop looking? I wanted to come see it after the construction was done but the gallery is keeping me on such a tight time schedule these days.\"\n\n\"It's okay, I know you're busy. It's great, though. The new owner was understanding with our needs for the space and I really can't believe our luck. The rent increase is absolutely worth it,\" Amelia explained. The shop looked brand new and Morgan was ecstatic that she was able to help her love keep her mother's business where it had been for so long. She was also glad it hadn't taken much coaxing of the owner on Morgan's part.\n\nTruthfully, she would do anything for the woman she loved. Her arms tightened around Amelia's torso, causing her to groan quietly. Not quietly enough. \n\n\"That's awesome! You'll have to show me later,\" Liz snorted and looked away when she noticed Amelia's embarrassment. \"You guys are fucking adorable.\" \n\nMorgan wanted nothing more than to take Amelia home and finish what they started and had full intention of doing such until Liz gasped. \"Oh my God, it's her!\" she snapped. \n\nAmelia perked up, looking around the venue, Morgan assumed for whomever Liz was talking about. \"Who?\" \n\n\"It's that pompous ass of a photographer,\" Liz expressed. Amelia lifted a brow and Liz continued, \"You know, the Portland vagina flower-power girl?\" the offered explanation did nothing to help Morgan understand what they were talking about. \n\nAmelia erupted into raucous laughter while Liz glowered at her. Morgan watched the two friends in confusion. \"What about flowers and vaginas?\" \n\nLiz rolled her eyes and then fixed them on Morgan. \"I offered this bitch a spot in my gallery last year during my run in Portland and she was such a snotty shit to me,\" Liz concluded, folding her arms over her chest as Amelia finally settled down from her laughing. Morgan watched Liz turn her glare back to Amelia. \"You could've warned me she was the photographer for your sister's wedding before you guys invited me to tag along.\" \n\nAmelia raised her hands in mock surrender. \"We didn't know! How were we supposed to know she was the same one all the way from Portland? It's not like Jersey and Oregon are neighbors. Anyway, she seems nice,\" Amelia added. Morgan realized they were talking about the tall, lanky photographer who had them pose countless times before and after the ceremony. \n\nAt that moment, she was still lifting her camera to innocent bystanders in the middle of the action. She had been nice to Morgan and Amelia, taking separate photos of them together and even giving her a card with a discount for the prints. Plus, she was obviously queer. \"Yeah, she was cool to us and the photographs I've seen so far are gorgeous,\" Morgan noted. The woman had shown her the photos of her and Amelia and she couldn't wait to have them up in their newly redecorated condo. \n\nMorgan saw Amelia's lips curl into a deviant smile. \"You like her, don't you?\" she inquired causing Liz to whip her head around with a near snarl. \n\n\"I do not like her. She's a conceited little rich girl who thinks that she's the next fucking Jerry Uelsmann. Oh, great, here she comes,\" Liz huffed, tucking her feet beneath her and flattening out her skirt. \n\nAlthough her heart was occupied by Amelia, Morgan couldn't deny that the woman in question was attractive. Her black hair was styled in a feminine pixie cut, flawless make-up accentuating her high cheekbones. She wore a tailored cream-colored suit, showcasing her long legs and lean torso and it contrasted heavily against her cinnamon complexion. Her feet were bare, no doubt from having to bound through the sand to capture candid photographs of partygoers. \"Hi, Liz O'Neil, right?\" the woman said, reaching her hand out to Liz who took it with reluctance. \"I was wondering if I may have a word with you,\" the woman crooned with a smile. \n\nLiz grumbled something inaudible but let the woman help her to stand. \"Okay, sure. I'll be right back, guys,\" she called over her shoulder to Morgan and Amelia. She followed close behind the tall woman toward the rest of the party. \n\nWhen Liz was out of earshot, Amelia laughed loudly. \"She won't be back anytime soon,\" she decided, tossing the blanket from their laps and standing. \n\nMorgan followed suit, brushing the sand off her trousers. \"Why do you say that?\" she inquired as Amelia tucked the blanket into her large purse and slipped on her flats. \n\n\"Oh, she has a thing for that one, I can tell. Plus, I'm pretty sure you and I have some unfinished business to attend to. Let's say goodbye to the bride and groom and go home. I think our bed is calling us,\" Amelia said, taking Morgan's hand in her own. Morgan obliged, letting Amelia lead her to the rest of the party. She didn't care where they went, as long as she could fall asleep holding her love.\n\n***"
    ],
    "authorname": "JodiHutchins",
    "tags": [
        "cunnilingus",
        "fingering",
        "lesbian",
        "lesbian novella",
        "lesbian romance",
        "lesbian sex",
        "love",
        "oral",
        "strapon"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/exquisite-perspective-ch-02"
}