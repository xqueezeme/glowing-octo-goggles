{
    "title": "Ryan Ch. 11",
    "pages": [
        "It wasn't until their flight was called that Dani found out where they were going. They were spending their honeymoon at the Mauna Lani Bay Hotel in Hawaii; fourteen glorious days of fun in the sun. She always had the dream of someday going to Hawaii, but now it seemed like a dream within a dream. \n\nThe Mauna Lani had every imaginable luxury amenity, but she wondered if she'd be able to take advantage of any of them. She smiled to herself thinking she'd be lucky to get out of the room, but she didn't see that as a cause to complain. \n\nDani suddenly felt tired and placed her head on Ryan's shoulder. Although she was having a relatively easy pregnancy, she sometimes felt drained. With a twelve hour flight ahead she decided to get some rest. She grunted as she tried to find a comfortable position. \n\n\"You ok, babe?\" Ryan asked.\n\n\"Yes, I'm fine. I'm just going to try to sleep.\" \n\n\"All right,\" Ryan said placing his arm around her shoulders. \n\n* \n\nThere was one stop over in California before they landed at Honolulu International Airport. It was almost twelve noon when they checked into their room and were able to truly relax. As beautiful as the room was, Dani was too tired to appreciate it. Sleeping on a plane wasn't like sleeping in her own cozy bed and she'd awaken a few times during the flight. \n\nRyan wasn't a novice when it came to long flights, but they weren't the norm and he wasn't use to being in a confined space. He was a bit weary, not as tired as Dani, but he figure they both could benefit from a nap. With that in mind, the first thing the newly married couple did on their honeymoon was undress, snuggle under the covers and fall asleep. Waking up hours later, Dani found herself half draped over Ryan. He was still asleep, almost purring like a big cat. She liked hearing him breath, it was very comforting, especially now that she was pregnant. She didn't think she could feel closer to him, but the baby had deepened their bond.\n\nShe kissed his neck, right over his Adam's apple; small little teasing kisses. Running her hand over his chest and down his hip, she marveled at how hard and strong he was. She wished he would turn over to his side so that she could caress his perfectly taut buttocks. The man had an ass that could make a grown woman cry. Still, what she could touch was making her tingle with desire. He looked so peaceful that she loathed waking him up. Then she felt the stirring of his penis and knew he was already awake.\n\n\"Hello, husband,\" she said with a smile in her voice.\n\n\"Hi, wife,\" he returned, his hand stroking the luscious mounds of her awesome butt. \n\n\"I haven't had a wedding night,\" Dani said, \"we spent it on a plane. Not exactly romantic, but I think you can make up for it. What do you say?\"\n\n\"I say, let's get started,\" Ryan growled flipping her over onto her back. \n\n\"First, I need to say hello to somebody else.\"\n\nSliding down the bed and between her legs, he held his weight on his forearms while he kissed her belly.\n\n\"Hi, son,\" he said laying the side of his face against her.\n\n\"I just wanted to let you know how much I love you. I'm going to be the best Dad a kid could have. We'll play ball of course, all kinds of ball. I'll teach you how to fish too. Oh, and I'll teach you all about women. They can be contrary, you know.\"\n\nThe last part was said with a chuckle.\n\n\"Oh, no you don't,\" Dani protested. \n\nLooking up at her, Ryan responded, \"I'm just looking out for him. Some woman might try to snare him like you did me. He needs to watch out for stuff like that.\" \n\n\"I snared you?!\" Dani gaped as her jaw dropped. \n\n\"You need to get yourself to a doctor ASAP Ryan; you seem to be suffering from memory loss. I hope there's a cure and that it's not hereditary,\" she quipped. \n\n\"I don't need a cure, baby. I have everything that I need right here, you and our baby,\" He averred then kissed her belly again. \"Now that I've had my talk with my son, it's time to take care of his mommy.\" \n\nHe sat up against the headboard and urged Dani to straddle his lap, his cock rock hard.\n\nHis big hand reached under her hair at the nape to gently coax her toward him for a long, sweet kiss. He groaned against her lips and eased his tongue between the soft seam. Dani stroked his chest as she gave entrance into the warm moist recesses of her mouth and rocked her mons against his erection. \n\nRyan's hand slid up the side of her body to caress her breasts as he urged her tongue into a duel with his. Dani's breath quickened; and while his other hand slid down to cup the round firmness of her buttocks, she stroked his long hefty cock. \n\nRyan grunted as his arousal grew, his pulse raced. \n\nHer excitement was stirring the core of her being, sending sharp tentacles of heat through her sensitive vaginal walls. The rocking of her hips brought her pussy in contract with Ryan's ball sac, stroking it as she moved, her juices providing sweet delicious lubrication. \n\nTheir mouths devoured each other for long, aching minutes. He was desperate for release, but didn't want to stop the pleasure of his oral assault. Dani was just as conflicted. She could feel the stinging press for completion, her desire for release pushing forward. Dragging her lips away from his, he moaned at the loss. \n\nShe gulped for breath, trying to reign in her spiraling emotions. Ryan wasn't even in her yet. She didn't want their first time as husband and wife to end so quickly, but she knew that she couldn't hold off her orgasm much longer. \n\nRyan needed release, he needed to pour out the essence of his love into his wife, his forever woman, but there was something he wanted to tell her first. Easing Dani onto her back, he knelt between her thighs stroking them as he sought to calm her for a little while longer. Looking down at her, he smiled. \n\n\"I wasn't a virgin when we met,\" Ryan said, \"but despite that fact, I can't help feeling this enormous pleasure knowing that I was your first. It's not something I expected or that would have mattered, but I am grateful for this wonderful gift you've given me. The fact that no other man has had this with you humbles me. You will always be mine and I will always be yours.\"\n\nDani opened her mouth to say something, but when Ryan caressed the inside of her thigh close to her woman's pleasure, her body shuddered. She was so close that she was unable to form a coherent thought, let alone words. She closed her eyes against the stinging desire as he stroked upward finding the source of her heat, then sliding a finger into the welcoming center of her body.\n\nGently he coaxed groans and sighs from her sweet lips, his thick finger thrusting in and out as his own desire quickened. He added another finger as he stimulated the hard nub that was her clitoris, drawing circles with his thumb. \n\nDani was nearing climax, her fingers pulling and squeezing her sensitive nipples as her body bowed and she whimpered under the scorching fire of Ryan's sensual touch. Just when she felt the flames taking hold, Ryan removed his fingers, gripped the base of his magnificent cock and slid slowly into her arching body, straight to the balls. Then he set up a pace of long, smooth strokes.\n\nSeconds later, Dani screamed as her climax ripped through the walls of her pussy and spread to her entire body. She didn't know how long, she just screamed as the pleasure consumed her sending her into a frenzy of jerking movements. Over and over she cried out as she tripped into the dazzling white light of glorious surrender.\n\nRyan felt her pussy spasm around his expanding cock facilitating his own climb to orgasm. Seeking release, his long strokes became choppy and rapid, ramming into the hot furnace of her womanhood in rapid fire agitation, his balls drawing up until with a long drawn out grunt of rutting pleasure, he held her hips and spewed spurt after spurt of thick white cream into her churning pussy. \n\nAfter a very long while, he came back down to earth, more peaceful than he had ever been at any other time in his life. Dani hummed, the remnants of her climax still fogging her brain. Careful not to crush her, Ryan rolled over onto his back taking her with him. \n\nHe stroked her back as she hummed in pleasure, gradually shifting his hand to her firm buttocks. With that move, Dani's hum turned to a sigh. As far as she was concerned his hands held magical powers, powers to which she has been the sole beneficiary from the moment they met. \n\nAfter she lost the blush of afterglow, she became aware of how tired she was becoming again. She knew that it was likely the pregnancy, but this time there was the added stress of having been on a long fight. Unable to keep her eyes open, she drifted off to sleep again. \n\n* \n\nIt was a couple of hours before Ryan woke Dani for a late dinner. While she slept, he'd stayed awake, holding her and thinking about the changes that would come as a result of having a child. Good changes. \n\nEarlier, not wanting to wake her, he'd eased from under her to unpack their bags. They would be there two weeks, so there was no sense in living out of suitcases. When he got to Dani's bag, he found something that got his attention. That something brought a smile to his face and his body tensed at the memory. He decided that he might as well give her a surprise when she woke up. \n\nBefore calling down to the restaurant to order dinner, Ryan showered and dressed. Thirty minutes later, dinner was delivered and he rousted Dani. Rolling her over from her side to her back, he shook her shoulder and said, \"Man down on Aisle fifteen. Man down on aisle fifteen.\" \n\nDani slowly came awake to the sight of Ryan in his military fatigues. He looked just the same as he had the day she met him. Obviously he'd unpacked and found what was supposed to be her surprise for him. \n\nGrinning, he said, \"Dinner first, then you can have your wicked way with me.\" \n\nKicking the covers off she replied, \"Yeah, that's what I intended. I need to eat to make sure I have sufficient energy, but right now I need to go to the bathroom and take a quick shower.\" \n\nRyan helped her up and stayed in the bathroom with her while she showered. \n\nWhen they returned to the living room, Dani sniffed the air and said, \"Something smells very good. What did you get for me?\" \n\n\"Stuffed pork chop,\" Ryan replied, \"is that ok?\n\n\"Wonderful, you know I think pork rules.\" \n\n\"I know you do, but you never know with pregnant women. I thought you might have some weird food craving by now.\" \n\n\"My taste in food hasn't changed. My Mom loved cottage cheese and peanut butter mixed together when she was carrying James.\" \n\nLooking at Ryan's horrified face, she laughed. \"I know gross, huh?\"\n\n\"That would not be on my list of appetizing combinations,\" he declared as he shook his head. \n\nWhile they enjoyed their dinner, they talked about the baby. It would be a while before they actually started on the nursery, but Dani already knew what she wanted. The walls of the nursery would be painted a fresh cheery green with a Warner Brothers cartoon themed mural on one wall. The furniture would be white with bedding and curtains in a combination of periwinkle blue, yellow, white and green. The floor was a beautiful dark walnut, but a large colorful area rug would provide a comfortable play area for their child.\n\nAt three months, Dani was beginning to show some signs of her pregnancy. She could still fit into all of her clothes, but didn't think that would be the case for much longer. There was a slight curve to her belly. It wasn't enough for anyone else except Ryan to notice and he loved the small evidence of their growing baby. \n\nDani was glad that they'd been able to have the wedding before she began showing. Another month and she was sure that everyone would have been able to tell that she was pregnant. Their immediate family and closest friends already knew, but her concern had been that if she were further along, everyone's focus would have been on her abdomen, rather than the beautiful ceremony. \n\nNow that the wedding was over, she so wanted to have a big belly. It obviously excited Ryan and frankly, she wanted the world to know that this beautiful man had gotten her pregnant. There was going to be a lot of changes to her body in the coming months, but she could barely wait to meet their little miracle. \n\nAfter dinner Dani nestled against Ryan on the sofa. She was getting aroused by the thought of making love to him in his military garb. She remembered his swagger and awesome butt as she watched him head to the checkout counter. Who knew that one chance meeting would result in marriage and a baby. Even now the thought of meeting this wonderful man in a home improvement store seemed like a fairytale.\n\n\"Damn, but he looked so hot in his military clothes that day,\" she thought. \n\nDani knew that it wasn't the clothes that excited her as much as the man in the clothes. He always got her anxious and achy. Her husband was big and sexy and right now she wanted to jump his bone. \n\nShe stroked his thigh and declared boldly, \"I want you down on aisle fifteen.\"\n\nRyan gave her a lecherous grin, but before he could say anything she got up and pulled him to his feet. He let her, it was her show and his anticipation had been simmering since he unpacked his fatigues. Letting her take control might have been her fantasy in the beginning, but now it was his too. \n\nDani reached up and pulled his face down and gave him a lingering kiss. Slowly, his arms crept around her waist and he held her as she deepened it. He picked her up and she wound her arms around his neck and her legs around his hips.\n\n\"I thought I was going to need a ladder,\" she teased.\n\n\"Smart ass,\" he groused, \"you know we always fit.\"\n\nHe slid one of his hands over her rear and swatted it firmly. Just that one smack made her jump and groan with desire. Dani grabbed his arms, indicating she wanted down and he set her back on her feet. \n\nShe immediately started unbuttoning his pants then quickly unzipped them. Underneath Ryan had on a pair of silky gray briefs which did absolutely nothing to hide his hardening cock. If anything, they emphasized it.\n\nSliding down to her knees, she pulled his pants and briefs down to the floor. Stopping there, she looked up at Ryan and winked, which drew a growl from him. Taking his cock in her small hands she stroked it, the ridge of the big vein on the underside becoming more pronounced. \n\nShe held his erection down from his belly and kissed the head, smiling as a groan escaped from his sexy lips. Opening her mouth, she slid the big head partially in and just held it there while her tongue teased the long slit, tasting his arousal. \n\nAs Dani played she felt a spurt of pre-cum, which she swallowed enjoying the tangy flavor. Opening her mouth wider, she took in the entire mushroom top, sucking as her fingers caressed up and down the shaft. Ryan threw his head back and grasped her head, his hands tightening in her hair as he pushed his aching pole farther into her mouth. He grunted as the head met the back of her throat, filling the opening as she swallowed and then pulled back to breathe in deeply. \n\nDani started a slow bobbing motion as she held her lips in a tight ring around his cock, massaging it while her tongue licked and stroked. Ryan aided her efforts with a slow backward and forward thrust of his hips, setting the rhythm.\n\nThen she turned the tables on him by picking up the pace and quickly taking him to the back of throat again and again before pulling off until only the head remain inside her mouth. Thoroughly she worked his cock, nursing it like a hungry baby on a teat. His breaths were rasping as his climax approached and he tried to regain control.\n\nJust as his body stiffened, Dani slowed her strokes to a crawl; he growled and pulled at her hair, his need urgent. The sharp sting to her scalp showed more eloquently than words just how close he was to release. \n\nAcquiescing to his will, Dani relinquished control once more as he stroked his cock into her warm orifice over and over. Racing toward orgasm, he thrust his cock into her mouth faster and faster, losing his restraint as his pleasure shot into the stratosphere.\n\nRyan groaned loudly as his back stiffened and he felt the familiar tightening of his balls. Within seconds his cum shot thorough his pulsing shaft and squirted out of the long slit in warm jets as Dani struggled to take it all in.\n\nAllowing her to pull back, he continued to shoot cum into her mouth as she swallowed frantically. Wanting more of his essence, she sucked in her cheeks and move her firm lips back and forth on his penis, stroking the first few inches. Ryan, in the throes of his orgasm, heaved and growled his pleasure at the delicious glide of her beautiful mouth. \n\nWhen the spurting stop, Dani sucked and licked his cock one last time. After his breathing slowed, he helped her back onto her feet and kissed her soundly, tasting the remnants of his ejaculate. \n\n\"Ummm,\" Dani groaned.\n\nChuckling, he said, \"I think that would have gotten us banned from Lowes for life.\"\n\n\"Yes,\" She murmured, \"but it might have been worth it. \n\n\"Now, let's see about getting you naked.\"\n\n\"What about you,\" Ryan asked as he stepped out of his pants.\n\n\"I've only got on a wrapper,\" Dani asserted.\n\n\"Still isn't naked,\" Ryan pointed out.\n\n\"Later,\" She promised helping him take off his clothing. \n\n\"Right now, I want to just lay in bed and play with all your uh, toys. You aren't all the way down on aisle fifteen yet, but you soon will be.\"\n\n\"I hope you'll be gentle with me,\" Ryan teased. \n\n\"Not a chance,\" Dani vowed with a saucy wink and led him to the bedroom. \n\n*\n\nThe rest of their Honeymoon was spent in a sensual haze. They never got tired of the many ways they could please each other, but Ryan was careful to make sure Dani got enough rest. Towards the end of their honeymoon, she took a nap every afternoon. She was sensible enough to know that she needed it. \n\nThey got down to the beach a couple of times. The weather was perfect, around 85 degrees, the water the prettiest shades of blue Dani had ever seen. This place was paradise to many people, but she and Ryan knew that the only thing they needed for paradise was to be together. \n\nThey did get a chance to spend time on the beach and to enjoy a couple of the local sites. On one of the rare evenings that they had dinner in the hotel's restaurant, they met another couple who were also on their honeymoon. Jeffrey and Lisa Sloane were from Chicago and already had a two year old son. The couple was happy to share with them the perils and joys of being new parents. \n\nA couple of days later it was time to pack up and head home. The trip back seemed a lot faster to Dani since she slept more than she had on the trip out. Touching down at Tampa International Airport, she realized she was glad to be home. She was happy anywhere she was with Ryan, but home was definitely her favorite place. \n\n* \n\nWith Dani on leave from work, the days rolled by until Ryan's birthday was right around the corner. He told the family and Dani that he didn't want a party. Things had been hectic the past few months and he just wanted to relax at home and have dinner with just the immediate family and significant others. Everyone was in agreement and the dinner was set for the night of Ryan's birthday, March thirty first. \n\nIn the meantime, he went with Dani to her gynecology apportionment. When they got there, he took a seat while she signed in. After doing so, she sat next to him and surveyed the room. There were five other ladies there in various stages of pregnancy, some with little ones and what she assumed were their partners. Dani smiled thinking of the prospect of having a few little ones of her own.\n\nTen minutes later her name was called and she was led to the examination room with Ryan in tow. They were going to get to see the baby today. She wasn't sure if she wanted to know the sex. She was conflicted because she wanted to know everything about their child.",
        "After helping Dani onto the examining table, Ryan took a seat in a nearby chair, more anxious than he wanted to admit. He'd prayed that there wouldn't be any complications and so far things were going well, but they had a long way to go. \n\nDr. Grant, who had delivered Haley's son, pushed Dani's blouse up and assisted her with lowering her slacks, revealing her gently rounded belly. She explained the procedure to both of them before applying the ultrasound gel. Afterward, she placed the transducer on Dani's lower abdomen and moved it around. The doctor explained to them how the transducer worked by allowing sound waves to travel through the body and bounce off the fetus thereby creating a picture.\n\nDani was smiling at Ryan when the doctor said, \"Oh, my!\"\n\n\"What?!\" she and Ryan exclaimed in unison.\n\nPointing to the screen around, the doctor said, \"See this...... and..... this?\"\n\nThey both nodded.\n\n\"Twins. Congratulations,\" she said looking at the stunned couple.\n\nDani felt the prick of tears and knew any moment now she would be a weeping mess, but she didn't care. Ryan got up and put his arm around her as they watched the screen.\n\nThen Ryan said, \"Oh, my God, baby. We're going to have twins. Twins!\"\n\nDani was crying softly with joy. She didn't know that she could be happier, but having two babies was much, much more than she would have ever expected. She tried valiantly to get a grip on her emotions knowing that there were questions she needed answered. \n\nFinally, sniffling she said, \"I had an ultrasound when I was in the hospital at six weeks; they didn't say anything about twins.\"\n\n\"I read your records from the hospital,\" Dr. Grant revealed.\n\n\"They did all the proper tests, but only saw one baby via the ultrasound, which is understandable that early in a pregnancy. I've had patients who weren't showing twins at 7 weeks, but suddenly at 12 weeks they were. It's all perfectly normal,\" she assured them.\n\n\"Can you tell the babies' sex?\" Ryan asked. \n\n\"I can't tell right now, they're not in the right position. But, as the pregnancy progresses, their positions will change. We may be able to tell a few weeks from now. Are you sure you want to know the sex?\" she asked.\n\nDani was the first to answer. \"I don't know,\" she said.\n\n\"I think I would like it to be a surprise then on the other hand I want to know now,\" She laughed through her lingering tears. \n\nChuckling, Ryan said, \"Don't worry doc, that's normal for her.\"\n\nThe doctor laughed, fully understanding the emotional nature of women and expectant mothers in particular. She completed the exam in short order and afterward assured them that the babies were healthy and growing at the expected pace. \n\nCongratulating them again, the doctor left Ryan and Dani alone to absorb the news. \n\n\"Twins,\" Dani whispered as Ryan helped her sit up. \n\nThen she realized she'd forgotten to ask Ryan what he wanted. \n\n\"Would you like to know the sex of the babies as soon as we can?\n\n\"I'm perfectly willing to wait until they're born, if that's what you want,\" he said, \"I'm just happy knowing they're healthy. \n\n\"Me too.\" \n\nBy the way,\" Dani said, \"Do you have any twins in your family? I don't have any on my side of the family; at least I've never heard that we did. I'll ask Mom to be sure.\" \n\n\"As a matter of fact,\" Ryan said, \"my paternal great-grandfather was a twin. I don't know of any others.''\n\nSo this is on you,\" she charged, grinning as he helped her off of the examining table.\n\n\"You're welcome, baby,\" Ryan said returning her grin. \n\n* \n\nThat night Dani called to tell Crystal her news.\n\n\"Damn, Dani, when you do something, you really do it up right,\" she exclaimed.\n\n\"You do know that Mom and Dad are going to lose their minds. Don't be surprised if they want to move back to Tampa to be near the grand kids.\"\n\n\"Oh, no!\" Dani screeched.\n\n\"I love them, you know I do, but they would drive me crazy. They'd be here everyday and Mom would say that everything I'm doing is wrong.\"\n\n\"Yep,\" Crystal agreed. \n\n\"They've wanted grand kids for a long time, now they'll have two of them to spoil rotten.\"\n\nThinking that over, Dani said, \"It might not be a bad idea to have them here for a while. I'll need a lot of help in the beginning, but I don't want anyone taking over. I'll just have to find a way to let Mom know that without her being offended. I really don't think she'll move back here, though. She and dad are having a great time in Jacksonville.\"\n\n\"You can say that again,\" Crystal interjected. \"Their social life is busier than mine.\"\n\n\"Exactly,\" Dani said.\n\n\"There would be the same issue of them missing their friends that they had when they lived in Tampa before. Besides, the drive isn't long and they could see the twins any time. Yep, that's it. I've convinced myself that they won't move back here,\" she laughed.\n\n\"I see your logic on that,\" Crystal declared, \"but I put nothing past our parents.\" \n\n\"I wouldn't either,\" Dani agreed. \n\n\"Oh, by the way, Crystal said, \"I was going to call you anyway with some news of my own. I was so stunned by your good news, I almost forgot about mine.\"\n\n\"What, what?!\" Dani urged.\n\n\"Isaac and I are getting married!\" Crystal squealed. Dani marveled that her take it as it comes sister actually squealed. \n\n\"Oh my God, Crystal, how could you forget that? I'm so happy for you. When, where? How do Isaac's girls feel about it?\" Have you told Mom and Dad?\" Dani rambled without giving her sister a chance to answer. \n\n\"Hold it! Hold it!\" Crystal laughed. \n\n\"First of all, Isaac's girls think it's great. As for Mom and Dad, I haven't told them yet. He just asked me last night and frankly I wanted time to think about it before I said yes. I went over to his place this morning and said, yes, yes, yessssssss.\"\n\n\"Gee, Sis, I don't need to know about the yessssssss!\" Dani said with an exaggerated groan.\n\n\"Well, it was...well... hell, never mind,\" Crystal said sheepishly. \n\n\"Anyway, we haven't decided on a date, but I'd say probably some time next year. I want to be sure, Dani. I love Isaac and all, but I want us to have time to adjust to the eventuality of sharing our lives. There still are a lot of things we need to talk about. I don't want to be married more than once.\"\n\n\"I understand Crystal. You need to do what's best for you. Still, I'm happy that you've found someone to love too. My life would have been just the same old, same old without Ryan. I might have been happy not knowing the difference, but now that I know the difference, I wouldn't have it any other way. We're doubly blessed with the twins.\" \n\n\"Tell you what,\" Crystal said, \"why don't you call and tell Mom and Dad about the twins and I'll tell them about the engagement in a few days. It'll give them time to let your news sink in and give me time to let the thought of being Mrs. Isaac Washington sink in.\"\n\n\"Ok, Crystal, that sounds like a plan.\"\n\n\"I'll call them tonight. Oh, by the way, we're having a dinner for Ryan's birthday on the thirty first of this month, you're invited. No presents. Ryan insisted, but I've got something for him, the painting I've been working on the past few months. I finally got to finish it.\"\n\n\"Great! I can't wait to see it,\" Crystal said, \"and of course I'll be there for the dinner. Is Isaac invited too? \"\n\n\"Yes, of course,\" Dani confirmed. \n\n\"Ok, Crystal. I have a couple of things to do before I call the parents. I'll talk to you later.\"\n\n\"All right, later,\" Crystal said. \n\n* The day before the birthday dinner, Zane came by the house to give Ryan and Dani some additional information on Keith Hall's case. \n\nSitting outside they listened to the latest news.\n\n\"Hall's sentencing hearing will be coming up in three weeks, but you won't be required to attend Dani,\" he said. \n\n\"With the charge of aggravated battery on a pregnant woman he could get up to fifteen years in prison with additional time for felony fleeing. He'll probably get a break on the felony fleeing charge because he turned himself in. However, there is something else I need to talk to you about.\"\n\nRyan felt Dani's body stiffen beside him and asked, \n\n\"Are you all right? Zane and I can discuss this alone if you'd rather not hear it.\"\n\n\"No. I'm fine,\" she assured him. \"Go on, Zane.\"\n\nZane glanced at Ryan before addressing Dani.\n\n\"Hall wants to see you Dani, to apologize.\"\n\nAlmost before the last words were out of his mouth, Ryan exclaimed sharply, \"Hell no! He isn't getting anywhere near Dani, ever!\"\n\n\"It's ok Ryan,\" Dani said caressing his arm.\" \n\nTo Zane she said, \"Tell him that I don't want to see him. I understand what drove him, but that doesn't mean I'm ready to forgive him. I could have died and along with me our babies. Life is short and I can't and won't spend it hating him, but I'm ready to put this behind me. Tell him I appreciate the decisions he's made that will allow me to do that, but there isn't anything that we need to say to each other.\"\n\nNodding, Zane said, \"He didn't think you would agree to see him, but he thought it was worth a try. I've delivered the message and I'm done. Do either of you have any questions?\"\n\n\"No, I'm just glad it's over.\" Dani said and Ryan echoed the sentiment. \n\n\"Ok,\" Zane said coming to his feet, \"I need to get going.\"\n\nWhen Ryan and Dani stood, Zane said, \"Congratulations again on the twins,\" then quickly glanced at his watch.\n\n\"Another date?\" Ryan asked curiously.\n\n\"Yeah,\" Zane said anxious to leave before Ryan asked any more questions.\n\n\"I gather it's the same woman,\" Ryan said, amused at Zane's discomfort.\n\n\"Yeah,\" Zane said unwilling to elaborate.\n\nShaking his head, Ryan declared, \"I sure would like to meet the woman who's made you nearly speechless, but I don't see that happening any time soon. I knew you were closed mouth, but you're almost mute now.\"\n\n\"Ryan, don't kid him,\" Dani admonished. \"He's obviously smitten with this woman. Let's give him some breathing room.\" \n\n\"Ok, ok, spoilsport,\" he growled at her. \n\n\"Ok, you love birds, I have to go. See you later,\" Zane said, not sure that he liked the term smitten. \n\nAs he headed to the door, Dani and Ryan followed. They wished him luck with his lady friend as they saw him out.\n\nAfter setting the alarm, Ryan led Dani back to the living room to enjoy a leisurely night at home. * As it turned out, there would be two less guests for Ryan's birthday dinner. Isaac's father had taken ill with a bout of pneumonia and was hospitalized. He and Crystal headed to Atlanta immediately after getting the news, which was a couple of days before the dinner. \n\nCrystal kept in touch with Dani and informed her that Isaac's dad was recovering and would be out of the hospital in a few days. She and Isaac were going to stay long enough to get him situated with home nursing care then they would be returning to Tampa.\n\n* \n\nThe night of the dinner, Dani was on pins and needles anxious to see how Ryan responded to his gift. She hoped he loved the painting as much as she did. \n\nDani virtually had nothing to do to prepare for the dinner since Ryan made arrangements through his usual catering service. He didn't want her slaving over a hot stove, especially in her condition. She'd tried to assure him that she was more than capable of managing dinner, but he wasn't hearing it. She gave in knowing that once he got his mind set, especially when it came to taking care of her, there was nothing to do but let him have his way. \n\nSince they returned from their Honeymoon she had little to do in the way of cooking or cleaning. Ryan hired a housekeeper to come in once a week and he either cooked himself or had meals delivered. A few times he'd brought home food that was already on the menu at The Big Bang. The food was actually as good as homemade. \n\nAt four months pregnant Dani felt good, but Ryan wasn't above riding railroad on her to make sure she got enough rest. Except for mild morning sickness which really tended to occur any time of the day, she was fine. In the end she resigned herself to being pampered, not that it was hard having a gorgeous man tend to her every need. \n\n* \n\nRyan was helping Dani put on her dress when the door bell rang. \n\nAfter zipping her up and kissing the back of her neck, he said, \"I'll be right back.\" \n\nChecking his watch he noticed with a smile that his family was as punctual as ever. It was six thirty on the dot. He opened the front door and was greeted to a chorus of happy birthday. Grinning, he ushered them into the living room amid hugs and kisses.\n\nMicah gave him a hearty slap on the back and said, \"Happy Birthday old man you're now thirty four years old. Good thing you're producing kids two at a time. Maybe you'll have them all before you're too old to play with them.\" \n\n\"Yeah, Yeah,\" Ryan groused. \"Let's not forget that you're only five years younger.\"\n\n\"Yeah, but that's five long years, Brother,\" Micah came back. \n\n\"Remember Micah, you're not even engaged yet or is there something you want to tell Mom and Dad,\" Ryan retorted with a sly grin.\n\n\"Don't start, Ry, they'll be on me next.\" Then exclaimed, \"Damn, I am next.\" \n\nRyan looked at his youngest brother who had gone over to stand by the fireplace. \n\n\"What's wrong with Caleb,\" he asked Micah. \n\n\"No clue, except it has something to do with Amber. He was quiet when he picked me up. He said Amber wasn't coming, but when I asked if anything was wrong, he said he didn't want to talk about it.\"\n\nRyan saw the look of concerned on his parents' faces, but didn't want to embarrass Caleb by questioning him in front of them. He'd let it ride for the time being, but he was going to have a talk with him soon.\n\nRyan excused himself and went back to check on Dani.\n\nWhen he got to the bedroom, Dani was nowhere in sight. He walked to the en suite bath and she wasn't there either or in the walk-in closet. Frowning, he wondered where she could be. \n\nAs he came out of the bedroom he heard her studio door open. Dani exited the room holding what he assumed by its shape was a picture wrapped in brown paper. As she started down the hall, she looked up and saw him. \n\nSmiling she said, \"This is for you.\"\n\nWhen his mouth opened to protest, she said, \"I didn't buy it, I painted it. I've been working on it off and on for a few months. I hope you like it.\"\n\nTaking the picture from her he said, \"I'm sure I'll love it.\" \n\nReaching up to him, she pulled his face down for a long kiss. \n\n\"I love you, Ryan,\" she whispered against his lips. \n\n\"I love you too, baby,\" he said, loving the softness of her body as he held her close with one arm around her waist. \n\nAfter they separated he sighed wishing they were alone. But with a deep breath he took her hand and led her to the living room. He was now eager to uncover his gift.\n\n\"What's that?\" Haley inquired, indicating the package in Ryan's hand. \n\nDani sat next to Ryan's mother; Ryan sat on her left and put the picture down in front of them on the table. \n\nAddressing the family he said, \"This is a picture my lovely wife painted for me. She's been working on it for a few months and I get to see it now. I have no clue what it is since I don't go into her studio without permission,\" he said with a grin.\n\n\"Now?\" he asked Dani.\n\nShe nodded and he started ripping off the paper like a kid at Christmas. He stared stunned as he heard oohs and ahhs from the family. \n\nIt was a picture of him, just as he looked the first time Dani saw him. Military fatigues, complete with his work boots and aviator glass hooked into his tee shirt. It was a full length painting. His wife was an incredible artist. No one could mistake the portrait for anyone else.\n\n\"Damn,\" Micah said, \"it looks just like you, Ryan.\"\n\n\"Wow,\" came from Haley. \"I didn't know you could do that with watercolor.\"\n\n\"It's the method that makes the difference,\" Dani said. \n\n\"The background is loose, which most people think of as traditional watercolor. But the actual figure of Ryan is tighter. The background was done mostly wet into wet, while the image itself was wet into dry. The pigment is deeper because there is less water to dilute it and it was applied to dry paper which gave it a crisper look. It took me a while to get the hang of using watercolor, but I did better than I thought I would.\"\n\n\"That's fantastic,\" Daniel said, with Helen nodding her agreement, \"a really superb painting.\"\n\n\"It truly is beautiful. The painting, not you Ryan,\" Caleb smirked.\n\nRyan chuckled. \n\nHe was glad that Caleb had put aside whatever was bothering him, at least for the moment. He still wanted to know what was happening with his brother and Amber. Whatever it was, he surmised that it occurred tonight. While they weren't expecting Amanda because she was working on a presentation for tomorrow, there was no clue that Amber wouldn't be coming. \n\nTurning his attention back to the picture, Ryan asked Dani, \"Where do you want to hang it?\" \n\nBlushing slightly she said, \"I was thinking, maybe, the bedroom.\"\n\n\"Oh, really,\" he said with a knowing smile.\n\n\"Uh, huh,\" was all she replied avoiding Ryan's heated gaze by looking down at her hands folded in her lap. The last thing she wanted was for her new in-laws to learn about her fetish.\n\n\"Anything you two want to share with us or is that look between the two of you a secret?\" Dan asked with a grin and a raised eyebrow so reminiscent of Ryan. \n\n\"No,\" Ryan said in a stern voice, \"there's nothing to tell,\" then ruined it when he grinned.\n\n\"I guess we're not going to be let in on the secret,\" Dan concluded shaking his head, \"so let's eat.\" \n\nThe dinner was a boisterous affair, as was usual when the Sinclairs got together. Ryan's family was not staid or lackluster; they enjoyed being around each other and went at everything full bore. \n\nDan teased Ryan about having his hands full when the twins arrived and losing the parental battle when they learned how to divide and conquer or the first time one of them puddles up with tears because daddy said no. \n\nThe women gave Dani advice on making a schedule and learning to sleep when the babies slept. They pretty much agreed that she was going to be tired, especially until she got her routine down. \n\nAll the teasing was taken as it was meant, in good humor, and the advice on rearing the babies was welcomed. Dani knew that she'd be overwhelmed, but she had a good support system. She certainly intended to take advantage of every helping hand that she could get.\n\nIt was getting on in the evening when Ryan asked Caleb if he could speak to him in private. Nodding, Caleb got up and followed Ryan to the backyard. Everyone was curious, but no one said anything. \n\nThe men were the first to restart the conversation. Dan and Micah got into a discussion about sports. Dan was still smarting over the fact that the Miami Heat beat the San Antonio Spurs and Micah was still gloating. They also talked about next season's prospects and possible coaching changes in the NBA. \n\nThe women continued talking babies. \n\nDr. Grant told Dani that with twins she could go into labor early or she might need bed rest in the later months. However it went, she knew one thing for sure, she was going to be huge in a couple of months. She'd seen plenty of pictures of women carrying twins. That was a lot to carry around, but she would endure anything for their babies.\n\nRyan made no secret of the fact that he loved her roundness. He kissed her belly and talked to the babies every morning and said goodnight to them. Dani sighed contentedly as the women's voices drone on. \n\n* \n\nOnce they were in bed Dani asked Ryan about his talk with Caleb. \n\n\"Is everything all right with Caleb?\"\n\n\"Not really,\" Ryan said with a sigh. \"He and Amber broke up.\"\n\nOh, no!\" Dani exclaimed. \"What happened?\"\n\n\"Amber's job has always required a lot of time in foreign countries and even more so since she got a promotion last year. Caleb thought it would slow down at some point, but it hasn't. It's been two years and he just didn't see the end of it. He could write anywhere, but even if he went with her, they'd have little time to spend together. When he got to her place tonight, she informed him of another business trip coming up. They got into an argument and that was it.\"",
        "Pulling Dani closer, he rubbed her arm and continued.\n\n\"He's still in love with her, but he's known for a while that things weren't going to work out. Even when she's home, she's on the phone a lot. Caleb wants a family, maybe not right now, but in a year or two he wanted to at least be married.\"\n\nRyan took a deep breath and ran a hand through his hair in frustration. \n\n\"She claims to love him as well, but she doesn't seem willing to make any concessions for the relationship and Caleb isn't going to make demands. He said she'd just be resentful later. So, he broke it off with her and told her why.\"\n\n\"That's so sad. Caleb is such a great guy,\" Dani said.\n\n\"Yeah, but sometimes even the good guys lose. I hate to see him hurting like that, but he had to make a tough decision. Family is important to him. Their relationship might have been different if she wasn't in this high powered job, but I don't think it would have been. She is who she is. She made her choice.\"\n\n\"I have no doubt that he'll find the woman that's right for him, but that's not doing him any good right now,\" Ryan said.\n\n\"I guess the rest of the family doesn't know. At least they didn't give any indication that they did,\" Dani observed.\n\n\"No, they don't. Let's leave it to Caleb to tell them when he's ready,\" Ryan said. \n\n\"I agree,\" Dani said. \"I wouldn't dream of saying anything to anyone, not even Crystal.\"\n\n\"He's going to start working on a new book soon; maybe that will take his mind off of Amber. He's known to be very focus when he's researching and writing a novel. I'll still make sure to check in with him regularly. It wouldn't be good for him to lock himself away from people,\" Ryan said. \n\n\"No, it wouldn't,\" Dani concurred with a yawn.\n\n\"Sleepy?\" Ryan asked.\n\n\"I think I'm more tired than sleepy. I don't seem to be able to handle late nights anymore. But the babies have been very good,\" she said as she rubbed her belly. \n\n\"I've felt a little whispery flutter a couple of times, but the doctor said it will be a while before they actually kick. I bet that will be weird.\" \n\n\"Yeah, that and seeing the babies reposition themselves in your womb,\" Ryan said. \n\n\"Going to the Lamaze classes with you has helped me understand a lot about what happens during birth and what the woman is feeling. I knew the basics, obviously, but I want to be able to help you any way that I can to make it easier. Not freaking when I see the head coming out would be a start, I think.\" \n\n\"You'll do fine.\" \n\n\"We'll do fine,\" Ryan said."
    ],
    "authorname": "MissPrimrose222",
    "tags": [
        "interracial romance",
        "white man",
        "black woman",
        "birthday",
        "uniform",
        "wm/bf",
        "honeymoon"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/ryan-ch-11"
}