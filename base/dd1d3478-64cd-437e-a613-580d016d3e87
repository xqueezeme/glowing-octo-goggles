{
    "title": "Is She Smiling at Me? Pt. 06",
    "pages": [
        "This story is the sixth installment of the \"Is She Smiling at Me?\" series. As dearly as I wish I could say any part of the following is based on actual events it is, in its entirety, a work of fiction. Any resemblance to real people is purely coincidental. I love hearing feedback from my readers; please feel free to leave comments or contact me with your thoughts or suggestions.\n\nOnce again, special thanks to my editor, SissyKaty. Katy has been an inspiration and this story wouldn't be what it is without her patient and diligent help.\n\n*****\n\nI gazed out the large, industrial windows of our loft apartment, staring at the city skyline off in the distance. Visibility was poor, enshrouded as the skyscape was in a veil of precipitation and roiling mist. The towering concrete and glass behemoths of downtown proper appearing almost as silhouettes against the dark, charcoal grey sky. Raindrops collided against the glass, their individual report collectively amounting to a low, dull din as rivulets cascaded down the window, further obstructing my view.\n\nWatching the rain outside, I sipped my coffee and sighed, recalling the words of one of my favorite authors; \"This is the kind of day when you want to be belly-to-belly with a good woman, in a warm bed under a tin roof with the rain beating down and a bottle of good whiskey right next to the bed.\" It was too early for whiskey, and the roof was certainly not tin; however, I smiled, knowing that upstairs in my warm bed I had not one, but two good women I could be belly-to-belly with.\n\nI walked over to the desk in the corner and opened my laptop to check the news while I drank my coffee. The screen powered up, flashing to life and burning my bleary eyes as it bathed the room in dull, blue light. Trying to blink away the flares in my vision, I sipped my coffee and waited for my eyes to adjust. Scanning the headlines, I felt irritation creep into the fringes of my mind. I wondered why I ever bothered to check the news when nothing good ever seemed noteworthy to those that wrote it. Finally, I closed my computer, turning back to the window to watch the rain stream down the glass. The calming effect of the steady trickling sound playing across the cold glass had an immediate, positive, effect on my souring mood. When I drained my cup, I resolved to take Dr. Thompson's advice and go join my beautiful girls back in bed.\n\nLiz was curled up in the fetal position, facing away from Alex with the thin, white sheet pulled up to her shoulders. She looked so serene and adorable in the low light of the grey and rainy morning. I bent to kiss her on the cheek, and she cutely wiggled her nose. I smiled at her and went around to the other side of the bed where there was more room for me. Alex was lying flat on her back, head turned away, with the sheet draped loosely over half of her perfect body; a long, slender leg and a small, pert breast lay exposed to the open air. Regarding her pale flesh in the dim light, I could have been convinced she was chiseled by angels from a solid slab of alabaster, if not for the slow, steady rise and fall of her chest.\n\nI stripped out of my pajamas and t-shirt before crawling into bed next to Alex, trying not to disturb the girls. Just as I reached for the sheet to pull it over us, Liz stretched and rolled onto her stomach, pulling the cover off Alex a little more. The movement exposed her beautiful, flaccid cock laying sleepily against her hip, her delectable crown of foreskin coming to a pucker at the tip of her glans. Seeing her presented thus, I was powerless to resist the impulse to reach out and touch her. I softly caressed her smooth thigh, grazed my fingertips over her scrotum, and finally tickled gently along the length of her shaft. Giving in to one temptation quickly led to another, and my own cock swelled at the sudden urge to take her in my mouth.\n\n'What the hell. Why not?' I thought, after a moment of consideration.\n\nSmiling, I crawled gingerly between Alex's legs, being careful not to wake her prematurely as I laid my head on her thigh. With her cock just inches from my face my arousal grew considerably, and I felt my heart rate accelerate. Kissing her lightly, I felt the softness of her foreskin against my lips while I inhaled her scent, my desire increasing with each passing second. I opened my mouth and took her between my lips, gently swirling my tongue around the ridged edges of her sheath. As my arousal piqued, I found myself fully erect and throbbing between my abdomen and the mattress.\n\nAlex flaccid was nearly as big as Liz fully erect, and she filled my mouth as I took her deeper, delighting in the soft smoothness of her member against my tongue. I held still for some time, reveling in her taste and smell as I gently suckled on her, enjoying the experience to the fullest. After a few minutes her cock began to swell, stretching my lips wider as she grew, the feeling of softness giving way to a sense of density. She elongated until her head pressed firmly against my tonsils and I had to back off lest I gag. Very soon she was fully erect; warm and heavy in my mouth.\n\nI took Alex's cock in my hand and lifted my mouth off her, taking a moment to admire her gorgeous member before sliding her foreskin down gently, giving me access to kiss and lick around her glans. Alex had the most beautiful cock I'd ever laid eyes on and I was hopelessly enamored with it; her long, pale shaft, the delicate perfection of the folds of her foreskin, her pink, exquisitely shaped head... She was absolutely a work of art. Wondering how long it would take her to wake up, I sucked her back into my mouth, worshipping her at a leisurely pace. A few minutes later, Alex stirred, a soft gasp escaping her lips.\n\n\"Mmm.\" Alex hummed quietly, \"Morning, baby.\"\n\nShe stretched sleepily before resting a hand on the back of my head.\n\n\"Morning, beautiful.\" I whispered back, smiling up at her.\n\nAlex smiled warmly at me and laid her head back on the pillow, petting me as I went back to making love to her with my mouth. Soon, I tasted the sweet ambrosia of her precum as it oozed out of her against my tongue, saturating my mouth with its flavor and overwhelming me with arousal. Driven by lust, I moaned quietly and pushed myself down on Alex's cock until I felt my throat stretch over her as my nose pushed into her ginger pubes. Alex gasped in response while I slid back up the length of her cock.\n\nI pulled myself off her warm, thick shaft, stroking her sensually while I buried my face in her scrotum. I felt her warmth and smoothness pressed against me while I kissed and licked her balls, sucking them into my mouth and tugging gently. She smelled of sleep; sweet and musky, reaching a deep and primal part of my subconscious, driving me wild in my desire for her. Alex sighed contentedly as I showered her with my affection, nuzzling into her and purring quietly.\n\nJust as I took Alex's throbbing member back into my mouth, Liz rolled over onto her back, making a smacking sound with her lips. I paused, listening for a sign as to whether or not Liz had actually awoken, but all I heard with the soft, rhythmic breathing of deep sleep. Alex and I both knew if Liz woke up and discovered us, it would be a different ball game, and no one would be getting back to sleep. Which would be fine, but this was a nice moment between the two of us and so we tried to be quiet.\n\nAlex giggled softly, putting her hand back on my head and pulling me down on her, urging me to resume pleasuring her. I was happy to oblige, smiling internally at her insistence that I continue. I sucked her lovingly, sliding my tongue around the underside of her cock, flicking back and forth over the frenulum, and using my lips to eagerly tug on her foreskin. I was rewarded for my efforts with another flavorful release of precum, encouraging me all the more.\n\nA few minutes later, Liz snorted adorably and rolled again, facing towards us now and cuddling up to Alex's side. The younger girl had thrown an arm over Alex's chest and nuzzled into her shoulder, still fast asleep. I could sense Alex holding back another giggle, in turn causing me to have to suppress a laugh, but I refocused my efforts on pouring my love into worshipping Alex's rigid cock, kissing and sucking her sensually.\n\nI could tell Alex was getting close to the edge as her breathing grew shallow and the muscles in her thighs tightened. She slid her feet up on the bed, knees bent and pointing to the ceiling, cradling my head in her crotch. Her fingers tensed and relaxed against the back of my head with increasing urgency while I slid up and down on her, excited that she would soon fill my mouth with her cum. The taste of her precum flowing freely against my tongue was both overwhelming and addictive; I was in heaven, but still I wanted more.\n\nFinally, Alex let out a gasp, pulling me down on her hard cock while she bucked her hips, forcing her entire length down my throat just as I felt a mighty twitch. She stifled her moan quickly, biting off the sound as it escaped her lips, but she could do nothing to stop the throaty whimper of ecstasy as she unloaded into my throat. I pulled back on her cock, taking the base of her shaft in my hand and stroking her while I worked her head with my mouth, just in time for the second jet of cum to splash against my tongue.\n\nMy head swam at the richness of her flavor. She filled my mouth with pulse after pulse of warm, salty semen until it threatened to spill past my lips. Alex's load was impressive as always; she seemed to cum for an impossibly long time, still depositing her divine essence into me even after I swallowed the first mouthful. I felt intense pride and love as she held the back of my head, her hips bucking as she fucked my mouth, muffled moans and whimpers expressing her pleasure. When her orgasm had passed, she let out a wavering sigh, her hand falling from the back of my head as her muscles relaxed.\n\nI relinquished Alex's twitching cock slowly, holding the last of her cum in my mouth and savoring her while my tongue rolled the thick load around a few times before I finally swallowed. I kissed and licked her, feeling the throbbing of her heartbeat from within her organ as I cleaned it thoroughly. Remaining between her legs, I expressed my love for her and her glorious cock, until she was soft in my mouth once more. Finally releasing her, I crawled up next to her on the mattress. Alex flashed me an adoring smile, a loving twinkle in her eyes as she watched me cuddle up to her. We kissed softly but intensely, a muted moan of appreciation vibrating between her mouths.\n\n\"Wow, baby.\" Alex sighed when our lips parted, reaching for my own throbbing cock pressed against her hip.\n\n\"It's okay, beautiful.\" I stopped her, taking her hand in mine and squeezing tenderly.\n\n\"Go back to sleep.\"\n\n\"Mmm.\" She hummed quietly, nuzzling her face against mine, her eyes closing once more as she mumbled, \"I love you.\"\n\n\"I love you, baby.\" I smiled, kissing her forehead gently.\n\nAlex fell back sleep almost immediately, a satisfied smile still pulling at the corners of her mouth. Having had coffee already, sleep would not come for me, but that was fine. I reached over Alex and pulled the sheet over us before putting an arm around Liz, wrapping the three of us together in a warm, loving embrace. I watched the girls slumber, waiting for my erection to subside. My heart filled with contentment as I listened to the steady rhythms of their breathing and the soft pitter-patter of raindrops against the windows.\n\n******\n\n\"...And that's why you can't trust any of the dumb fuckers. Most of them aren't fit to manage a petting zoo, let alone a nation.\"\n\nSpurred on by whichever headline had annoyed me most earlier that morning, I found myself leaning against the kitchen counter with a coffee mug in hand, delivering a spirited, if not vitriolic soliloquy on the ineptitude of government. Alex came through the front door with a bag of groceries, saving Liz from enduring the rest of my rant. She had been humoring me, her big brown eyes twinkling atop an amused smirk as she sipped her coffee.\n\nThe girls had grown accustomed to my occasional diatribes, and they accepted that I was simply going to rant about the subject now and again. My distaste for government wasn't a partisan issue; I didn't care who was in power, the notion that any entity should determine the terms on which the rest of us live our lives was simply repugnant to me. Particularly considering the non-stop clown parade of elected officials who made those decisions.\n\n\"Is Matt sticking it to the man again?\" Alex asked, setting the groceries down on the counter before bending to kiss Liz.\n\n\"It was a pretty good one this time.\" Liz replied, smiling brightly.\n\n\"I just hate the bastards so damn much...\" I muttered, stepping down from my soapbox as Alex came around to my side of the island, leaning in to kiss me.\n\n\"I know you do, baby.\" Alex teased, affecting a pouty look and a mockingly patronizing tone.\n\nWith a smile, I playfully smacked her on the butt when she turned to put away the groceries. Reaching into the cupboard for a fresh mug, I fixed Alex a cup of coffee; milk and an unreasonable amount of sugar, just how she liked it. She smiled warmly as she accepted the mug and took a seat beside Liz across the counter from me. Liz and I were still in our pajamas, having spent most of the morning goofing off and playing video games. As a counterpoint, Alex was looking immaculate as always in sexy, professional attire. She had spent the morning at the office, before stopping by the store on her way home.\n\nThe rain had stopped a few hours ago and the sun had emerged, cutting through the clouds and turning the weather into a pretty decent fall day. We hung out in the kitchen for a while, drinking our coffee and chatting away in the bright, late morning sun while I put a brunch together.\n\n\"Are you ready for tonight, baby?\" Liz asked Alex as I put their plates down in front of them.\n\n\"Ready as I'll ever be. Something will go horribly wrong though. Then they'll need me there to fix it when it does.\" Alex replied glumly, poking at her eggs with a fork.\n\n\"Well, they couldn't be in more capable hands.\" Liz said sweetly.\n\n\"Thanks, sweetheart.\" Alex smiled, leaning over to give Liz a quick kiss.\n\nAlex's company had been working on a campaign for some marketing firm for several weeks now, and today was to be the big launch. She'd popped in for the morning, but her bosses wanted all hands on deck later in the afternoon, leaving Liz and I to our own devices for the evening. I'd planned a date night for us, nothing crazy, but today was a special day for me and I wanted to commemorate it somehow. We spent the rest of the afternoon together until it was time for Alex to go back to work. For Liz and I though, it was time to get ready for our night out.\n\nAlready dressed in a pair of chinos and a nice, button-down shirt, I waited on the couch for Liz to finish primping and preening. When I finally heard her heels at the top to the stairs, I turned to see my angelic beauty descending the spiral staircase. Her brunette hair came down to her shoulders, straight and styled in a charming, messy-by-design look that suited her perfectly. Even from across the room, the diamond tennis necklace I had gotten her as a birthday present caught the light and reflected it back to me, a shimmering strand around her neck, just above her elegant collarbone.\n\nLiz wore the grey and black striped sweater dress that she had been wearing the night we first met, a personal favorite of mine. The dress fit her petite form snugly, translating her subtle curves through the medium of the tight material and accentuating her ample breasts. The hem ended about mid-thigh, showing off a tasteful yet alluring portion of her smooth, slender legs. I let out a long, low whistle and stood from the couch as she descended the staircase, grinning at me as she wound her way down. There was no way she could have known how appropriate the outfit was for today, and I smiled at the synchronicity.\n\n\"You look gorgeous.\" I ginned, bending to kiss her soft lips.\n\n\"You're not so bad yourself.\" Liz smiled happily, her big eyes beaming with pleasure.\n\n\"Shall we?\"\n\n\"You still haven't told me where we're going.\"\n\n\"You'll see.\"\n\n*****\n\n\"Ugh, Matt, what are we doing here?\" Liz groaned.\n\nWe were standing outside an upscale bar a few blocks from the girls' old apartment. It was definitely not the kind of place either of us would normally elect to go for a night out, with its clientele of suits and fancy haircuts, but it held a special meaning for both of us. It was here that, despite all odds, either by the random whimsies of the universe or a force more purposeful and divine, I first laid eyes on Liz. She had been smiling at me from across the bar and I remembered thinking she was the cutest girl I had ever seen. The shock that somehow, I had caught her interest, still felt as fresh and intense as it did that day when I found myself reminiscing about that moment.\n\n\"Do you know what today is?\" I smiled at her.\n\n\"Saturday?\" She quipped, grinning back at me.\n\n\"Smart-ass.\" I replied, poking her in the ribs and delighting in her giggle.\n\n\"Today is six months to the day that you came around that bar in there and asked if you could sit with me.\"\n\n\"No!\" A look of surprise and realization fell across her face, and her illuminating smile burst from her mouth.\n\n\"I can't believe you kept track!\"\n\n\"Of the most important day of my life?\" I pulled her close and kissed her on the forehead.\n\n\"Now, we can go anywhere else, but I thought this was a nice idea.\"\n\n\"No.\" Liz beamed up at me, stretching up for a quick, passionate kiss as she pressed herself into me.\n\n\"Let's do it.\"\n\nLiz's hand slipped into mine as we walked to the door. The hostess led us to a booth near the corner, handing us a pair of menus before she departed. I took Liz's hand once again and smiled at her; I was feeling amorous and romantic, and there was more I wanted to say, more than I would ever be able to find the words for, but I gave it my best shot.\n\n\"Liz, baby, you and Alex are far and away the best thing that's ever happened to me. I am so happy, and so proud that I get to share my life with you. I owe all of that, and so much more, to you. If you hadn't smiled at me from across the bar, right there-\" I pointed to the far side of oak countertop where I first saw her, \"I don't know where I would be right now, but I wouldn't be here with you, and that hurts to even think about. So, thank you beautiful.\"\n\n\"Aww! Matt!\" Liz gushed.\n\n\"I love you so much.\" She looked as if she could cry, her big doe eyes clouding with tears as she squeezed my hand.\n\n\"I love you too, baby.\" I replied, smiling warmly at her.\n\nThe waiter arrived to take our drink orders, interrupting the moment. Just as well, as I was getting a little misty-eyed myself. I ordered a Guinness and Liz a pink martini, exactly what we had been drinking when we first met, and just like that first night, we talked, laughed, and flirted our way through dinner. When we finished eating, I called for the bill and moved around to Liz's side of the booth, putting an arm around her as I slid in beside her. I told Liz that I had only planned on eating here, and we could go somewhere a little more our speed. She agreed whole-heartedly, and we left after I paid up.\n\n\"Wait...\" Liz said a few blocks later as we walked down the darkening city streets, hand-in-hand. \"Are we going where I think we're going?\"\n\n\"Mmm-hmm,\" I answered, \"First stop; the place I met you. Next up; the place I knew I had serious feelings for you.\"\n\n\"Aww!\" Liz cooed.\n\nI was taking her to the bar that she, Alex, and I had gone dancing at on our second night together. We were forced to leave early that night when some punk tried to get aggressive with Liz and I reacted harshly, laying him out on the floor of the bar. It was not my proudest moment, but in the aftermath of that encounter I realized how strongly I felt about the girls. We hadn't been back since, and I hoped I wouldn't be recognized. It had been half a year, so I figured the odds were in my favor.",
        "When we got there, my heart sank just a little bit when I saw the same bartender who had been working that night. Now I was banking on being just another face in an endless stream of faces. I pulled out a stool for Liz at the bar and sat next to her, feeling a little trepidatious, but when the man came over to take our order, I saw no flash of recognition on his face. Putting an arm around Liz, I relaxed as she leaned into me, chatting away until our drinks arrived.\n\nWe sat with our drinks for a while, flirting and enjoying each other while the band played in the corner, until Liz pulled me from my seat to go dance. Liz was alive with exuberant energy, smiling and giggling happily as she grinded against me suggestively, her light and love single-handedly warming the dance floor. If it were possible, she seemed even more affectionate than usual, pulling into me when the band settled into a slow song. Her arms wrapped around my shoulders as she stared up at me, beaming fondly.\n\nFor a long time, we just danced. Every so often we took the occasional break to head to the bar and order another drink before Liz would drag me back for more, flashing giddy looks over her shoulder as she led me by the hand. Eventually, she grew tired of the grinding, swaying, and gyrating, so we took a seat at a small table in the corner, away from the constant bump and throb of the music. My beautiful lover was absolutely glowing, radiating light and joy like an invisible aura of warmth. I felt so happy and whole to be with her, sharing this night together.\n\n\"Why didn't you tell me and Alex it was our sixth month anniversary?\" Liz wanted to know.\n\n\"Heh, I mean it's not that big of a deal. I just thought since we were going out anyway, we would give it a nod, you know?\"\n\n\"You're not being honest with me, Matt.\" Liz accused, wagging a finger at me.\n\n\"How's that?\" I chuckled.\n\n\"It is a big deal to you. That's why you remembered, and that's why we're here right now.\" Her big brown eyes twinkled warmly at me.\n\n\"Busted.\" I replied with a grin.\n\n\"Alright, it is kind of a big deal to me. But I didn't want to be a dork about it. I knew Alex had her work thing, and it's not like it's a year anniversary or anything.\"\n\nLiz just stared at me for a moment, a look of adoration on her face as she gazed into my eyes. I wasn't sure what she was thinking, but I could see the wheels turning inside her head.\n\n\"I want to tell you something.\" She reached across the table and took my hand in hers.\n\nA slight smile pulled at her lips, though she seemed vaguely apprehensive.\n\n\"What is it, beautiful?\" I asked, wondering what could possibly have shaken her confidence.\n\nLiz hesitated, drawing from some inner pool of strength, trying to summon up the courage to say whatever it was that was on her mind. I tried to be patient, but her nervousness gave rise to my own apprehension. A part of me worried that for her to be struggling with this, it would have to be something big. Waiting with bated breath, I smiled at her, hoping to convey reassurance.\n\n\"I'd like to fuck you tonight.\" She finally said softly, the coy look on her face elevating her already overwhelming natural cuteness.\n\nQuickly, she added, \"If you'd want me to.\"\n\nMy heart skipped a beat as I took in the information. Of course, I'd always hoped Liz would want to fuck me one day. I'd even dropped the occasional hint here and there to let her know I was receptive if the mood ever struck her, but I had never pushed for it. I didn't want her to feel pressured, like it was something I expected of her. Liz gave so much and so completely that it felt tawdry to even think about asking her to step outside her comfort zone, and so the idea had always remained just a fantasy in the back of my mind. But now, here it was in front of me, thrilling me to my core.\n\n\"Baby! Of course, I would want you to. Why would you be nervous about that?\" I exclaimed, cracking a wide smile, and squeezing her hand affectionately.\n\n\"Well...\" She hesitated again, but she was smiling brightly now, \"You know, Alex leaves a pretty big hole to fill in that department-\"\n\n\"Boom.\" I cut her off with a grin, raising my hand for a fist bump.\n\n\"Anyway,\" Liz continued with a giggle, tapping my knuckles, \"I can't compete with her. I've been thinking about it a lot, but I don't want to disappoint you.\"\n\n\"You could never disappoint me, baby. Besides, Alex is a lot bigger than me; do you like me fucking you any less than her?\"\n\n\"Maybe like two inches less?\" Liz answered with a grin, her tone jesting.\n\n\"Jerk.\" I laughed, punching her playfully on the arm.\n\n\"No, you're right. I guess I never thought of it that way.\" Liz smiled thoughtfully, a dreamy look on her face as her mind clearly wandered to thoughts of Alex and I fucking her.\n\n\"Right. It wouldn't be disappointing because it's not her, it would be amazing because it's you.\"\n\nLiz grinned at that, biting her lower lip and nodding while her big eyes sparkled merrily. I lifted her hand to my face, kissing it softly and smiling back at her. With the matter settled, we were both eager to get home. We left the bar, stepping out into the cool, fall night, and walked for a while, holding hands while Liz leaned into me affectionately. Our apartment was a little bit beyond what could be considered a reasonable walking distance, so we hopped on a city bus after a few blocks and rode it most of the way home with my arm around Liz as she snuggled into my shoulder.\n\nThe last leg of our trip home was a ten-minute walk to our building. It should have been five, but it had segued into a flirtatious, halting journey rife with kissing, petting, and teasing. Liz smacked me lightly on the butt and giggled adorably; in fact, she was paying more attention to my ass than usual. I was used to that kind of attention from Alex, who typically telegraphed when she was in the mood to do the fucking but coming from Liz it was new and exciting. My need for her swelled into an overwhelming sense of longing and desire.\n\nBy the time we finally made it back to the apartment, we couldn't keep our hands off each other. We stumbled through the door, kissing, and petting heavily as we stripped off our jackets, tossing them on the kitchen table. Liz pressed herself into me firmly, holding me tight by the hips while our tongues danced and rolled together in our mouths. Eventually, she stepped back, taking my hand in hers as she flashed me an adorably sultry look, pulling me up the spiral staircase that led to our bedroom. Upstairs, Liz turned to me and slowly unbuttoned my shirt, her big, brown eyes broadcasting adoration as she stared into mine.\n\nLiz kissed and nibbled my neck, sliding a hand down the back of my pants and slipping two fingers between my cheeks, slowly teasing her way down towards my hole. A flutter of butterflies took off in my stomach as her soft, flirting fingertip pressed into my knot. Of course, Liz had played with my ass countless times before now but knowing where it was headed this time thrilled and aroused me like never before. My excitement escaped from my lips in a soft gasp, Liz giggling cutely in response.\n\nAs we made out, I tugged at Liz's dress, inching the garment up little by little until my hands discovered her bare ass. The thin strip of her thong was wedged in her crack splitting the perfect halves. I squeezed a pert cheek in each hand, pulling her into me firmly, and feeling her bulge press into my thigh. Liz returned my enthusiasm, wiggling her finger as she pushed it into me harder, causing me to gasp once again as my hunger expressed itself.\n\n\"Mmmm.\" I moaned my approval when Liz removed her hand from my pants and pulled her dress the rest of the way up and over her head.\n\nStanding before me in a tiny black thong and matching bra, with her excitement straining mightily against her underwear, and a look of total arousal on her face, Liz looked so damn alluring that I felt an ache deep in my soul. Unbuckling my belt, I pushed my pants down and off as I took a seat on the edge of the bed, reaching for her dainty hand and pulling her forward. Liz giggled at the urgency of my desire for her, and then sighed when I nuzzled my face into her bulge, feeling her warmth and density against my face as I kissed her through the thin material.\n\nWhen I looked up at Liz, I saw her staring back at me, biting her lower lip seductively while I kissed up and down the length of her shaft. She smiled as we made eye contact, my fingers finding the edges of the thong at her hips and rolling them down, peeling the material away until her rigid member sprung free and lightly smacked my cheek. With my eyes locked on hers, I found the head of her cock with my lips and slid down tantalizingly slowly, swallowing her entire length until she was buried in my throat and my nose was pressed against her silky-smooth pubis.\n\n\"Oh, God...\" Liz moaned, taking my head in her hands, and gently bucking her hips.\n\nMoving with deep strokes, I bobbed up and down on her hard cock, delighting in the pleasure I was causing her. My hands slid up her thighs, over her ass, and up her lower back, caressing her smooth flesh and holding her close to me while I worshipped her. Muffled moans crept past my lips and played against her skin as I expressed me desire for her body.\n\nLiz stepped out of her thong, withdrawing from my mouth with a wet slurping sound, her throbbing member standing straight out at me, and reached around her back to unhook her bra. Smiling down at me alluringly, she slowly slipped the garment over her shoulders, making a show of exposing herself until finally the bra fell away, her bountiful breasts naked and free in the open air. Watching me watching her, Liz giggled, biting her finger seductively as she stepped back into me, crawling onto my lap to straddle me, pushing her chest into my face.\n\nPulling Liz close by the hips, I kissed around her elegant neck, gently nibbling the tender flesh above her collarbone, feeling her tits on my chest and her cock on my stomach. She gasped and sighed as I showered her with my affection, a shiver of delight running through her petite body when I licked a long, wet trail from the base of her neck up to her earlobe. Kissing my way back down, I lifted her by her ass, bringing her breasts up to meet my mouth as I worked my way down her chest.\n\nA soft gasp met my ears as I took her nipple between my lips, moaning hungrily as my tongue flicked across its surface. Liz's hand found the back of my head, holding me close as I kissed and suckled at the perky little nub of flesh while she humped gently against my chest, pressing her erection between our bodies. When I shifted my attention to the other breast, I looked up at her; eyes closed and mouth slightly open, gasping softly as I gently nibbled on her.\n\nAfter a couple minutes, Liz pulled away, sitting back down on my lap and kissing me passionately. She moaned and giggled as she writhed against me, her tongue darting past my lips to play with my own. I felt her take my rigid cock in her hand, squeezing it against her and jerking us together while we made out. Soon, her impressive flow of precum had coated us both in a film of natural lubrication and her soft hand slid easily over our members, waves of pleasure radiating through me with each stroke.\n\nOur passion and desire for each other mounted as we kissed and explored each other's bodies, grunting and moaning with the shared sensation of Liz sensually rubbing our cocks together until finally she released us, backing off and sliding off my lap. She reached for the nightstand drawer, producing a bottle of lube as she raised her eyebrows at me adorably, biting her lower lip before smiling brightly at me. I repositioned, shifting into the middle of the bed and watched as she crawled down between my legs.\n\nLiz bent down low and kissed the base of my cock, nuzzling her face into me as her lips and tongue worked their way down and around my balls. She licked and sucked at my scrotum, pulling at the smooth, loose skin, tugging it gently between her lips while she looked up at me, her big eyes bright and sparkling with delight. Taking her time teasing me, Liz moaned and giggled as she bathed me with her tongue, wetting every last inch of me while my cock throbbed, demanding attention.\n\nSensing my need, Liz licked a long, slow trail up between my balls, flattening her tongue against the base of my cock and continuing her journey up my shaft. She finally wrapped her lips around my head engulfing it in one, smooth motion before taking me fully into her throat. I moaned at the sensation of her tonsils stretching over me as she came to rest with her nose flattening into my trimmed pubes. She held still, my throbbing member buried completely in her mouth, while I felt her tongue slide around on me; a warm, moist wave of pleasure undulating against the sensitive underside of my shaft.\n\nWhile Liz massaged me with her tongue and throat, I heard the cap on the bottle of lube pop open with a dry snap. Reflexively, I lifted a leg to give her better access and a short moment later I felt the cool, wet sensation of the slippery fluid being spread against my ass. I gasped as her finger entered me, sliding easily into my welcoming hole. Liz gave her digit a wiggle, grazing my prostate and sending a bolt of warm energy radiating through my pelvis. She slipped a second finger inside me, stretching me a little more, and curled her fingers up towards my belly button, making me moan at the sensation of pressure against the little gland in my ass.\n\nLiz hadn't moved her mouth an inch since she first swallowed me, her tongue continually sliding against my cock as she fingered me. Now though, she slid up and off, a string of spit connecting her lip as she smiled up at me joyfully. She was clearly enjoying my reactions to her ministrations, and she positioned herself upright on her knees, stroking her own throbbing cock with one hand while she tickled my prostate with the other as I moaned and pushed back against her.\n\n\"Baby...\" I pleaded between shudders of ecstasy, \"I need your cock so bad. Don't make me wait any longer.\"\n\nWith a happy giggle, Liz reached for the lube, pouring a dollop of the thick, glistening fluid over her member. I reached down to take her in my hand, stroking her as I spread it against her, watching her mouth open in quiet moan. An overwhelming wave of delicious anticipation came over me; I was an empty vessel waiting to be filled, a need so deep and absolute it ached. Liz looked down at me, her own hunger obvious on her face, and I realized in that moment that she had been waiting a long time for this, so apparent was her desire.\n\nSlipping her fingers out of me, Liz pushed my leg forwards by the back of my knee, opening me up for her while she positioned herself, lining her cock up with her free hand. Feeling her press against me, the slightest sensation of pressure built until my sphincter gave way, yielding to her slow, determined push into my body as she penetrated me. I watched her eyes go wide and her mouth fall open at the sensation of my ass swallowing her head, and I was overcome with a sense of love and fulfillment. Liz was going slow; far slower than she needed to, so I grabbed hold of her ass and pulled her the rest of the way, both of us gasping at the sudden thrust into me.\n\nLiz fit into my body like she was made for me. There was no sense of anything even approaching pain or discomfort, just pure, warm pleasure as she filled my ass with her cock. She fell forward, leaning over me, her big brown eyes staring into mine as we smiled lovingly at each other. Liz swallowed and let out a gasp, taking a moment to collect herself while she rested motionless inside me.\n\n\"God, you feel so good.\" Liz said with a soft exhalation.\n\n\"Mmm, baby, so do you.\" I moaned, wiggling myself back against her pelvis.\n\nSliding one hand up her back, I pulled Liz into me, kissing her desperately. I was overjoyed that my beautiful, adorable Liz was inside me, and I tried to express my passion and elation through our kiss. She moaned into my mouth as she withdrew slightly, hesitating before pushing into me once more. The pace increased slowly as we made out until she was thrusting into me vigorously, sending pulsating waves of pleasure through me each time she bottomed out.\n\nLiz surprised me with her energy and enthusiasm, pounding into me at a feverish pace, stunning me with her ferocity. A long, wavering moan escaped my lips when we broke the kiss, her forehead touching mine as my body processed the force of her rapid thrusts and expressed it as overwhelming ecstasy. Liz slowed down, giggling and smiling brilliantly, leaning back so she was upright on her knees, pushing her pelvis firmly into my ass. I was struck by her beauty in that moment, her cute features expressing the depth of her pleasure and joy as she fucked me with long, slow strokes.\n\n\"You are so fucking gorgeous.\" I told her, looking up at her and smiling between moans.\n\nLiz giggled again, almost blushing while she slid in and out of me. She began to accelerate again and soon she was pistoning into me at a manic pace, making me cry out in pleasure and surprise. That she was capable of such a speed was incredible to me; she was like a bunny rabbit, nearly vibrating inside me as she used me for our mutual pleasure. Her glorious tits bounced enticingly to the cadence of her thrusts, and I reached up to kneed a pert breast in my hand, feeling her smooth thigh with the other as I whimpered at the high-speed assault on my prostate.\n\nBack and forth Liz would alternate, pounding away for a while before slowing down and lengthening her thrusts until she glistened with a sheen of perspiration and my cock was leaking thin, greyish-white prostate fluid into the fine hairs on my abdomen. Liz took note and wrapped her hand around my throbbing member, squeezing me tight and pulling from the base up to the head, coaxing more of the watery liquid out of me and collecting it on her thumb. Looking into my eyes, she moaned as she tasted me, sucking her thumb clean while she pumped herself through my colon.\n\nI felt I could explode at any second; so great was my arousal, so turgid my cock, so intense the pleasure spreading through my pelvis like a raging fire. She must have read the signs, because she was off again, fucking me at such a high RPM that my ensuing moan vibrated out of my mouth. She spat into her hand and seized my cock, stroking me at a pace matching her own feverish thrusts. My body writhed involuntarily, and my voice caught in my throat as a seizure of unabated bliss came over me.\n\nI came within seconds, wincing with the unbearable magnitude of my orgasm as I contracted forcefully on Liz's cock. Barely conscious of the sensation of my cum raining down across my stomach and chest, reaching as high up as my neck, I cried out as the tidal-wave of climactic rapture thundered over me, nearly occluding all other senses as it consumed me. At the same time, I was vaguely aware that mine was not the only cry filling the apartment; Liz had let go at the same instant I did and was whimpering loudly as her own orgasm expressed itself and she pushed deep inside me, her cock twitching as she emptied herself into my body.\n\nAs my climax tapered and dropped off, I felt of rush of love and elation so intense that my eyes clouded over, and I choked back a joyous sob. The flood of emotions that accompanied Liz cumming inside me for the very first time was as close to heaven as I would ever get here on this earth, and I was eternally grateful to her for giving that to me as my heart swelled with pride and joy.\n\nLiz gasped and collapsed against me, her breasts squishing against my chest as I held her tight, wrapping my legs around her hips and feeling her back heave with the labor of her breath. I kissed her neck, tasting her delicious, salty sweat onto my tongue and delighting in her flavor. She giggled into my collarbone in response, a joyous, almost manic sound that vibrated against my skin and tickled me pleasantly. When she lifted her head, her big, wide eyes twinkled with adoration and glee as they gazed lovingly into mine.",
        "\"How was I?\" She asked, panting as her breath slowly returned.\n\n\"Oh my God, baby!\" I answered with a happy laugh, my own breath coming in heavy spurts, \"I don't know why you ever doubted yourself, that was fucking incredible!\"\n\nLiz squealed happily, the sound cut off and muffled as her lips slammed into mine, kissing me intensely. Our tongues danced and entwined in a passionate embrace until she pulled away, kissing down my neck and chest. She kept her cock buried inside me while she cleaned droplets of my cum from me, pulling at the hairs on my chest with her lips as she collected my semen, moaning lightly as she went. When she kissed me again, I was thrilled by the taste of myself on her mouth.\n\nWe laid together, kissing, caressing, and staring at each other lovingly until Liz softened and slipped out of my ass. She giggled again as she crawled off me and snuggled up to my side, hugging me around the chest as she rested her head on my shoulder. For a long, perfect while we cuddled together, basking in afterglow, the quiet only broken by the occasional contended sigh or the wet smack of lips meeting.\n\n\"I love you so damn much.\" I said softly, lighting touching her cheek while I kissed the top of her head.\n\n\"I love you so much, baby.\" Liz looked up at me with a warm smile.\n\nEventually we got up and showered, cleaning each other affectionately in the warmth of the cascading water and our love. When we were finished, we dried off and dressed in our pajamas, going downstairs to watch a movie and cuddle on the couch, waiting for Alex to get home. We talked about doing something nice for the missing member of our trio when she got back, grinning at each other as we reached the agreement that we should greet her with a glass of wine and a long, relaxing blowjob from the two of us."
    ],
    "authorname": "loveinbriefs",
    "tags": [
        "blow job",
        "oral sex",
        "transexual",
        "redhead",
        "cum",
        "bareback",
        "love",
        "date",
        "swallow",
        "romantic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/is-she-smiling-at-me-pt-06"
}