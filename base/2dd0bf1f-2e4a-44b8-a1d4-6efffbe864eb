{
    "title": "The Gift She Gives Ch. 15",
    "pages": [
        "The end of July brought the arrival of Saerwen, Faeron and Shi's baby daughter. She was like her father in overall appearance, but had her mother's black hair. Her big brown eyes took in everything around her, and she was, in general, a very content little baby. Shi had taken right to being a mother and although she was tired, she basked in the loving contentment that she'd found with her newly made family. Their apartment renovations had been completed before the arrival of the baby, and it was almost always where Vesper could find her friend if she wanted to visit with her and her daughter.\n\nElarinya had become Vesper's almost constant companion while her mother slowly worked through the torment of what had happened to her during her captivity. Mr. Hughes had not first understood why she was still in so much pain, nor had her brother, but Vesper had reminded them that she was only able to truly heal physical pain. Mental anguish could be soothed, but not truly put out by her gift. Natasha would need to come to terms with what happened to her in her own time. \n\nNatasha had been able to slowly emerge from her protective shell in some ways during the time she'd spent at the spa. She would seek out Vesper for companionship, and the two women and the little girl would take walks around the property. They would talk about their lives, past, present, and future, and Vesper found that she could be completely honest with her new friend and not worry about being judged or told that her relationship with the fallen angel was a lost cause. Natasha had fallen in love with a unicorn, she would chuckle, stranger things have happened.\n\nElarinya was gaining confidence, as well. She had begun to feel more at ease around the other employees, though she was kept strictly away from all of the business transactions at the spa. Her time was spent either in Shi's apartment, the third floor rooms of either Vesper or her mother, or wherever the two women took her on the property. The little girl was intelligent and eager to learn, a trait her mother said that she'd had since birth. Vesper taught her about the plants that grew in the woods and she told the little girl about her climb up the mountains to see the satyrs. Elarinya had wanted to meet the large beasts, and Vesper had promised that she would one day, and hoped they might have something to cover their usually quite naked bodies with so that the little girl wasn't exposed to anything she ought not to see. Natasha had said that elves were quite modest most of the time, as her father's people had been, as well.\n\nThe little dark haired elf hybrid was still seeking Vesper out at night sometimes, usually starting off with her mother and then crossing the hall to climb into bed with either Vesper or Mr. Hughes when her mother began to have nightmares. The first morning that Vesper had woken and found Mr. Hughes staring down at the sleeping face of the child, his hand smoothing over her dark hair as she rested comfortably by his side had pulled quite a few strings in her heart. The angel might not have the equipment to make a child, but he certainly had the capacity to love and care for one.\n\nAugust arrived and brought with it many humid, high temperature days. Vesper was pleased with the progress that had been made on her little house, and nearing the end of the month, the frame was up and the walls were in place. In a few days, she knew that the cedar siding was going to start being installed and the inside walls were already taking shape, as well. It was exciting to think that this would be her home soon. She was already starting to think about the things that she wanted to use to decorate it. Vesper had told Mr. Hughes that she wanted to go into Toronto to look at furniture and bedding and he had been very against the idea, worried that she would be outed as a nonhuman by the people there. \n\nVesper had tried to reassure him that she could hide her wings, as she had done all through her life before coming to the spa, and that her ears could be hidden within her hair, but he had refused to listen to reason and would not take her into town. She was furious that he didn't trust her to take care of herself, and she'd spent the next hour sulking as she sat in the meadow on a blanket with Elarinya.\n\n\"What are you two doing?\" A smiling Samir walked up from behind her and Vesper craned her neck up a little to see him.\n\n\"Elarinya is teaching me to play a game.\" Vesper told him and patted at the blanket next to her.\n\nSamir sat down without preamble and smiled at the shy little girl who was looking at him with her big brown eyes.\n\n\"It's so hot out here, I'm surprised you wouldn't rather be inside with the air conditioning.\" He arched a brow at her as he picked up one of the many stones that Elarinya had collected to use as part of her game.\n\n\"I think it's nice to feel warm once in a while, it's cold for such a long part of the year up here.\" Vesper shrugged, picking up a rock and moving it across the line of sticks that Elarinya had carefully placed in patterns on the blanket. The little girl's giggle made her smile warmly, she was quite fond of the child.\n\n\"Your house is gonna be done in no time. You'll have to start borrowing Shi's catalogs.\" Samir looked over at the structure, they could hear the hammers and saws from where they sat, the sounds echoed throughout the meadow.\n\n\"Yes, I suppose. I would have liked to actually go and pick a few things out, but Arc thinks someone will spot me.\" She frowned softly, looking in the same direction as the giant.\n\n\"He forgets that you lived your whole life among humans.\"\n\n\"He does.\"\n\n\"If you need a ride, I actually do own a truck and I could take you. We could go to a furniture store and order some stuff.\" He offered and she looked at him with a smile.\n\n\"You would take me to town?\" Vesper asked, if Mr. Hughes didn't want to take her, it wouldn't really hurt for Samir to do it.\n\n\"Sure, I've got the morning off. As long as we were back a little after lunch, it should be okay.\" He stood back up and then helped her to her feet.\n\n\"Elarinya, I'm going to take you back to your mother. We can play again this afternoon.\" Vesper assured the little girl and the three of them walked back to the house.\n\n~*~*~*~\n\nMr. Hughes was standing on the front porch when they returned shortly before two in the afternoon. His hands were folded together behind his back, and he had a sour look on his face as Vesper stepped out of the truck that Samir had pulled to the front of the house. They'd made several purchases on their trip and he was going to pull around later and store them in one of the sheds until her house was ready. She walked over to Mr. Hughes with Samir slightly behind her and smiled up at the surly looking angel.\n\n\"Where the hell have you been, Vesper? I texted you.\" He was angry, and she frowned, he really couldn't possibly believe that he could boss her into staying at the spa.\n\n\"I went shopping with Samir. We were careful and no one saw my wings. I'm quite used to walking among people in public.\" Vesper reminded him as she tightened her grip on the small clutch that she'd taken with her.\n\n\"And your phone?\"\n\n\"I left it in my room, I think. I didn't mean to. I wasn't trying to scare you.\" She told him.\n\n\"You should have told me that you were going. I would have given you funds.\" She bit the inside of her cheek, this was him trying to be understanding despite the fact that she knew he disapproved of what she had done, it was something, \"Come, there are people here that would like to meet you.\"\n\n\"People? Who?\" Vesper asked as he turned and opened the door.\n\n\"One of Natasha's brothers has come,\" Mr. Hughes frowned at Samir who had instantly turned pale, \"he has come to take her home.\"\n\n\"What?\" Vesper gasped as she walked into the foyer, she hadn't considered the idea of Natasha leaving any time soon.\n\n\"So he can force her into a life she doesn't want, most likely.\" Samir grumbled and followed them inside.\n\n\"Samir, if you cannot behave yourself among the wood elves, you will need to stay away.\"\n\n\"This is my home, I'll go where I damned well want to.\" Samir said gruffly to his boss and followed them down the hall to a sitting room on the eastern side of the spa.\n\n\"Vesper.\" Natasha said softly, her voice a little strained, as they entered the room. The young elf female walked over to her friend and clutched her by both hands.\n\n'Do not let him know you can hear me. My powers would only make him want me under his control more.' Vesper frowned as she listened to Natasha's thoughts as her eyes went to the tall, thin, dark haired elf that was standing near the windows, his eyes on them.\n\n\"Is Elarinya napping?\" Vesper smiled and nodded at her friend.\n\n\"Yes.\" 'He wants me to go home with him, but he doesn't want me to bring my daughter.'\n\nVesper's gut tightened, 'why not?'\n\n'She is light, like me, and he doesn't know much about unicorns, he is worried about her.' Natasha was walking Vesper over towards the elf in the room who was watching them still with interest.\n\n\"Thorontur, this is my friend, Vesper. She is the one that saved me.\" Natasha said out loud to her brother and Vesper held out a hand for him to shake, only pulling it back when Natasha told her to.\n\n'He can enter your memories that way, remember?'\n\n\"Vesper,\" The older elf smiled sweetly, he hadn't missed how she'd rescinded the offer of a handshake, though he didn't comment on it, \"I must thank you for what you've done for my family. We'dd had Ennostiel brought here thinking perhaps the people who had saved the vampire girl could do the same for my young sister. Your presence was...more than agreeable.\"\n\n'He doesn't seem too happy that you lived.' Vesper flickered her eyes over to Natasha's face.\n\n'He isn't. Now he feels like he still has a problem to solve. What to do with me.'\n\n\"Natasha has become a good friend, I am happy that I could help her.\" Vesper told the male elf and then looked around them. Mr. Hughes was standing inside and to the left of the door, and Samir was standing near the fireplace. The giant looked angry, like his body was only in its human form because changing at the moment would smash the room. His history with this particular elf was quite tragic. It was a wonder he bothered trying to control himself at all.\n\n\"Yes, well, now that she's healed, it is time for her to come home with me. I appreciate all that you and Mr. Hughes have done for her. It was a kindness. But she belongs with her people.\"\n\n\"Oh? I was under the impression that Natasha's home had been with her father's people. I'm surprised she hasn't asked to return there. Surely she has friends among them that can help her as she continues to heal from her captivity, and through the loss of her mate.\" Vesper spoke evenly, knowing by the way Natasha squeezed her hand that the girl hadn't expected her to stick up for her quite so forcefully.\n\n\"Yes, well, she has responsibilities to her mother's people, as well. It is time for her to come to Farwathain and take her place among her mother's people.\"\n\n'He means for me to get married and breed more wood elves.' Natasha's voice was a scoff in her thoughts.\n\n\"She is still healing, Thorontur, surely she can have some more time here.\" Vesper looked back at Mr. Hughes to see him frowning, he obviously thought she shouldn't be putting herself in the middle of this.\n\n\"We have people who can care for her. Our sisters will be with her.\" Thorontur nodded, rubbing his hands together in front of him as if he considered the matter closed.\n\nVesper felt her body heat up and felt Natasha tighten the hold she had on her hand for a moment.\n\n'He's not saying it, but he has found Domino's vampire lover. He wishes to use it to gain more access to Mr. Hughes' spa contacts.' Vesper couldn't help the way her eyes widened.\n\n'That's terrible!' Vesper frowned as she looked back at Mr. Hughes, 'Can you somehow tell Mr. Hughes that. He should know.'\n\n'Consider it done.'\n\nVesper kept her eyes on the angel, who shifted uncomfortably for a moment as his eyes became centered on the two of them, and his frown deepened and his brows furrowed.\n\n\"Natasha, do you wish to go home with your brother?\" Mr. Hughes asked.\n\nNatasha shook her head, \"I would rather stay here. Elarinya is comfortable here, and she is near her uncle.\"\n\n\"Faeron is not the eldest-.\" Thorontur frowned when Mr. Hughes waved his hands in the elf's direction.\n\n\"I will not have you bully anyone on my property, Thorontur. I know how you elves work, and I know that Natasha should bow to your wishes. But you wanted to learn how I run my spa so that you can bring your own spa out of a darkly shadowed past. This is how I do it, I allow my employees and friends to make their own decisions about their lives.\" Mr. Hughes said sternly, \"If Natasha does not wish to go, then I will not force her, neither will you.\"\n\n\"You should not interfere in this, Mr. Hughes. It is a family matter.\"\n\n\"And what of Elarinya? I know how wood elves feel about hybrid nonhumans, and she is only one fourth wood elf.\" Vesper's eyes widened as Mr. Hughes spoke again, would the little girl be in danger if she lived with the wood elves?\n\n'Vesper, they would treat her like an outcast. My daughter must stay here.' Natasha sounded devastated, but knew that she was right, her daughter could not go, even if she had to.\n\n\"The child is not my concern. It is time Ennostiel spent time with her mother's people.\" Thorontur sighed, \"Even if it was just a temporary stay, maybe she will see that we are not as evil as her father has made us out to be. She should learn about who her mother's people are now, and not just what she knows of our past.\"\n\n\"I would need a show of good faith to even consider allowing her to go with you.\" Mr. Hughes demanded in a calm voice, Vesper bit her lip, he and Natasha had to be communicating, he would never make statements like that without talking to the person involved.\n\n\"My brother is here, is that not enough to show you that we are indeed changing our future?\" Thorontur sounded irritated.\n\n\"Faeron is here and has remained in my good graces because he is imprinted on one of my employees and has shown himself to be reliable and trustworthy. That does not hold true for you.\"\n\n\"I should think not.\" Samir muttered angrily and Vesper threw him a worried glance.\n\n\"I should not have to prove myself in order to gain custody of my sister.\"\n\nVesper gasped, custody? Of a grown woman? Was the man mad?\n\n\"I think you should.\" Samir's voice was practically a hiss as he spoke.\n\n\"This has nothing to do with you, noroth, you should leave here.\" Thorontur growled back and Mr. Hughes took a step forward.\n\n\"You speaking to one of my employees in this manner proves that you are not someone I can trust, Thorontur.\"\n\n\"You must not run a very good business if your employees are allowed to treat guests of your home in this manner.\" Thorontur waved a hand in front of his chest, palm down towards the ground.\n\n\"You are more than welcome to leave, Thorontur. Without Natasha.\" \n\n\"Ennostiel, you are a peredhil, you should know your mother's people. Surely you could come and see them, speak to your sisters, for a short time.\" Thorontur sighed, his aggravation clear.\n\n\"I will come for one month, but you must give Mr. Hughes something that he desires and you are keeping from him.\" Natasha said, taking a step towards her brother and letting go of Vesper's hand. 'Elarinya will stay with you, Vesper, I will not have her come with me.'\n\n\"I am not keeping anything from the angel.\" Thorontur frowned at his young sister.\n\n\"You are. You have located Alexandru, the naith medion that is being held captive. If you give Mr. Hughes that information, I will go with you, for one month.\" Natasha knew her brother was furious with her, he was also confused, as he didn't understand how she could have known about the information some of the wood elves of his clan had found.\n\n\"Man cerig? Nin gwerianneg!\" Thorontur hissed at his sister and stepped closer to her, reaching out to grab her but stopping when Samir stepped forward and pulled the girl behind him.\n\n\"You touching her right now would be a mistake.\" The young looking giant's voice was deadly as he looked at the angry wood elf before him.\n\n\"If you know where Alexandru is, that would be enough for me to trust you to take care of your sister for a month, Thorontur. This can end here.\" Mr. Hughes' voice was still calm, and Vesper looked over at him with worry filled eyes. Was he really willing to trade Natasha's safety for the information about the vampire? Was his life more important than a mother's?\n\n'If he agrees to a month, he would hold to his promise, it is an unbreakable rule among his people,' Natasha's voice sounded in her head, 'I will be in no real danger from him, other than being pressured to be more like an elf. It is worth this.'\n\n'But Elarinya?'\n\n'She will be fine, she will be with you. I will come back, Vesper.'\n\n\"You have much to explain, Ennostiel.\" Thorontur frowned at his sister.\n\n\"I owe you no explanation. But if you give Mr. Hughes the information he needs to save the naith medion, and give me your gwaedh that I will be allowed to leave Farwathain and return to Vorhees in one month's time, I will agree to go with you, hanar.\" Vesper knew that Natasha was speaking in her brother's elvish language to try to ingratiate him a little to what she was suggesting. She didn't like the idea of Natasha leaving, but Vesper knew she wasn't the one in charge here, it was most definitely the young, half wood elf who was calling the shots.\n\nThorontur breathed deeply and sighed, his eyes never leaving those of his young sister, and finally, he nodded slowly. \"I give you my gwaedh.\" \n\nHis right hand began to shine a little, as if a light had stirred inside and was slowly gaining warmth. He raised it and placed it on Natasha's left cheek as she stepped out from behind Samir and approached him. Her hand had done the same thing and she reached up and touched her brother's cheek for a moment before they stepped back from each other.\n\n\"Elarinya stays here with us.\" Mr. Hughes said quietly, he was watching everyone in the room with caution. This had been handled quite a bit differently than he had expected, she was sure.\n\n\"The girl can come with her mother.\" Thorontur frowned.\n\n\"Elarinya is not your concern, hanar. She will stay with Vesper. I will know she is looked after.\" Natasha walked back over to her friend and clutched a hand in hers.\n\n\"I will take good care of Elarinya, Natasha.\" Vesper nodded, she wasn't sure if she trusted Thorontur to do as he had said, but she had faith in Natasha to make the best decision for herself.\n\n\"Where is Alex?\" Mr. Hughes asked.\n\n\"I had men searching for him, as you had requested. They have found him in Belarus, outside of Hrodna. I will write down the exact coordinates for you in your office as we wait for Natasha to prepare to leave. I will allow her some time this afternoon with her daughter before we depart. Is that acceptable?\" Thorontur asked.\n\nMr. Hughes nodded, waving at Vesper and Natasha, letting them know it was a good time for them to leave.\n\nWhen they were close to the door, Vesper heard Samir chuckle low in his throat.\n\n\"Didn't go the way you wanted, did it?\" The giant couldn't help but smirk at the wood elf who he hated.\n\n\"I am getting time with my sister, just as I wanted. Just as I got the time I wanted from your wife.\" Thorontur's response fell hard on the giant, and Vesper gasped and watched as Samir began to shake as he tried to control the way his body wanted to shift forms. \n\nHe was on the wood elf before anyone in the room could react and his hands were around the tall, thin man's throat as he slammed him into and partially through one of the walls of the room. As wood and plaster shattered and dust flew through the air, Vesper and Natasha backed out of the room and into the hallway and Mr. Hughes stepped forward, attempting to pull the giant off of the elf who had angered him.",
        "\"Let him go, Samir.\" They heard Mr. Hughes say as they turned and started walking farther down the hall and away from the situation.\n\nVesper looked at Natasha with wide eyes, \"I don't think your brother should have said that.\"\n\nNatasha lifted the sides of her mouth in a very small grin, \"If he kills my brother, then it solves the problem of my having to go to my mother's people.\"\n\n~*~*~*~\n\nThe next few hours had proved difficult for Natasha. She had spent that time with her daughter, the two of them together in the meadow chasing butterflies and building a little wooden fort of sorts with some of the scrap lumber from the construction pile. Vesper had kept her distance, enjoying the sight of the mother and daughter spending their time together before they were separated, once again, by circumstances beyond their control. Elarinya had spent time among the wood elves in the past, and Vesper was pretty sure the little girl hadn't been treated well. Her response to her mother stating that she was going to Farwathain had been very negative, and she had clung to her mother. The child had only calmed when she they told her that she would be staying with Vesper.\n\nAs the two had played, Vesper had gotten an idea and had run it by the foreman for the construction crew. There was plenty of land, and she knew it wouldn't take long, so she asked them if they could build a child sized playhouse at some point, something that Elarinya would always know belonged to her. The man had enthusiastically agreed to the project and had drawn out a rough sketch of an idea that Vesper had quickly approved. They would have it done in three weeks, when the house was finished. Vesper couldn't believe that everything was so close to being done. She would have been overwhelmed with the excitement of it if she hadn't been so torn to pieces that Natasha was being forced to leave.\n\nVesper had stayed outside in the meadow on the blanket even after Faeron had come out to speak with Natasha and say goodbye. Her brother had put his arm around her as he led her into the spa. He hadn't been happy about her going, either, but he seemed to understand why she had chosen to do so. She had known that she would be helping Mr. Hughes do something for his friend, and it also kept her oldest brother from holding Alexandru's location over their heads for more information from them.\n\n\"Why so glum?\" A deep voice sounded from beside her and Vesper shook herself out of her thoughts and looked up to see Samir standing beside her. \n\nHe sat down almost shoulder to shoulder with her and pulled a blade of grass from the ground and rolled it in his fingers.\n\n\"Did you hit him as hard as you wanted?\" Vesper asked and watched a smile spread across his face.\n\n\"Harder.\"\n\n\"Mr. Hughes was not happy with you, I am sure.\"\n\n\"He told me that I had disobeyed his rules for the last time. He said I should leave for a while and decide whether or not I was actually capable of working here.\"\n\n\"He's making you leave?\" Vesper gasped, looking at her friend. She didn't want both of her friends to leave at the same time! That didn't seem fair.\n\n\"Yes. But he's angry. Thorontur threatened not to give him the exact location of Alexandru. They worked it out, though. But Mr. Hughes is very unhappy with me.\"\n\n\"So you're leaving?\" Vesper frowned as he put an arm around her shoulders.\n\n\"For a while, at least. He'll calm down. He said that he needs time to plan a rescue, and that if he felt like he needed my help, he would let me know.\"\n\n\"Is he going to tell Domino?\"\n\n\"No,\" Samir frowned as he looked at her, \"He's terrified to get her hopes up. They are good friends and he doesn't want to see her hurt again.\"\n\n\"He should tell her.\" Vesper frowned.\n\n\"He won't.\"\n\n\"Then you go to her, and you tell her.\"\n\nSamir looked at her thoughtfully.\n\n\"He's already mad at you, who cares if he gets a little more mad. I would want to know. She should know.\" Vesper said softly, she knew the story of Domino and Alexandru, she thought it was extremely romantic.\n\n\"Maybe I'll go down that way. See how she's doing.\"\n\n\"You should. I know you were friends.\"\n\n\"I am always the friend.\" He sighed, but then looked again at her with a smile before standing up.\n\n\"Samir.\" She frowned, she knew he was lonely, but there was very little she could do to help him with that particular problem.\n\n\"Let's go inside and find Ela and go raid the kitchen. I think there's a peach cobbler in there that the cooks are trying to save for something.\" He reached down and grabbed her hands and pulled her easily to her feet.\n\n\"Race ya?\" Vesper cocked her head to the side as she let her wings extend out behind her.\n\nSamir smiled, \"You gonna fly?\"\n\nVesper grinned and lifted herself into the air. \"Don't I always?\"\n\n~*~*~*~\n\nWhen the vampire was brought to the spa, Vesper had wanted to go and see him, and meet his fianc\u00e9 immediately. Mr. Hughes had been completely against it. She knew it was because they were still trying to work through what they wanted, what they could handle with each other, and he was afraid of the influence he felt that Domino would have over the situation. The fact that he cared what his friend thought about her was something that Vesper understood. The many weeks that Natasha had been gone had proven difficult for them. Vesper was taking sole care of Elarinya and seeing her with the girl had been hard for Mr. Hughes to handle. He loved her, he needed her, but he was terrified of all that he was taking from her. So he had been very nervous about her meeting the woman he had considered his best friend for a long time, scared that Domino might actually tell him to let Vesper go. \n\nVesper knew it was also because he didn't want her healing Alexandru. Despite the fact that her touch could help improve his condition, he wanted Vesper to have nothing to do with his recovery. The thought of what touching the vampire could do to her was too much for the fallen angel. He was certain that not only would her eyes turn red and she would grow fangs, but she would get an overwhelming desire to fuck again, and he just could not take that chance. So he had told her to stay away. He had promised that Alexandru would improve on his own with time, and that the large vampire would prefer it that way.\n\nWhen Domino was at the spa, right after the starved vampire was taken inside, Vesper had watched the beautiful young woman from afar. Elarinya was almost always hiding behind her back, scared of these new, dark beings that had come to the spa. She had been introduced to Brunhild and the male vampire that worked there, but the two were only up at night, and Elarinya was usually asleep or at Vesper's home at that point. Samir had returned, though, and the little girl had been happy to have him back. \n\nThey were careful not to be spotted, and Vesper tried to follow the rules that Mr. Hughes set forth about where she could go while he had these new guests, though Domino had left quite quickly after arriving with her wounded fianc\u00e9. It was easier to not be seen now that her house was finished. She had moved in a week after Alexandru had arrived. The house was one level, with a large living area just inside the front door, and a dining room and kitchen off to the left. A hallway to the right led into the three bedrooms and a bathroom. The master bedroom also had a bathroom, and a large closet that was slowly filling with items that Vesper had purchased and had had Shi help her alter to work around her wings. \n\nShe had chosen a sky blue, daffodil yellow, and white color for her bedroom. It had made her feel like springtime and she had taken loving care in decorating it and the rest of her home. And it did feel like home. When Vesper had first entered the house after it was finished and her furniture had been moved into place, she had actually had to sit down and cry for a minute. Mr. Hughes had frowned and used Elarinya and Shi outside so that she could have a moment to herself. He had worried that she was unhappy about something, but she had assured him that she was the exact opposite. Vesper was happier than she'd ever been in her life at that very moment. She was in her own home. She was loved, she had friends. She was overflowing with happiness.\n\nMr. Hughes, of course, was there as much as he could be. Her bedroom held a king sized bed, but he was unable to sleep at her side. There was a couch against the wall against the hallway that he would sleep on instead, always facing her, and never complaining that he was uncomfortable. Elarinya had taken to sleeping in the guest room that was beside her larger room. Vesper had decorated it with the little girl in mind, of course, and had stuck to pastel greens, yellows and pinks. The little girl was truly starting to flourish, though it was evident that she missed her mother a great deal. They had started working through some school books and Elarinya was proving to be very adept. They spent time every day exploring the meadow and the woods, as well. \n\nVesper was starting to worry that everything that she and Mr. Hughes were doing to try to save their relationship was not going to work. She had gotten a taste of what her life could be like, and it only made her yearn for more. She wanted a husband, she wanted that closeness not just emotionally, but physically, and she hadn't been able to get that from him yet. She wanted someone who was content with just her, who didn't make it a part of his job to stimulate the sexual desires of others. She knew that was selfish, and was probably something that she could work through, but it bothered her anyway. \n\nVesper wanted children. Desperately. He couldn't give that to her, and she knew it was the one thing that might really be what ripped them apart for good. She had bonded closely with Elarinya and the child had made her ache for one of her own. Vesper had considered her age, she might look young, but would she even be able to have children at this point? She wasn't sure. But she knew that he couldn't. It's what kept her up at night, it was also the one subject that they had both been very careful not to tread into. Both were too scared of what it would mean for them.\n\nThe weeks turned into a month, and then Natasha had returned, no worse for wear. She was very quiet about her time with the elves, but she had come back hyper focused on the needs of her daughter, whom she had missed a great deal. They had been apart for such a long time in the past year that she had not welcomed the intrusion of Thorontur for that reason, specifically. The two were noticeably calmer in each other's presence, and Vesper had begun to feel a nagging bit of jealousy that once Natasha returned, Elarinya did not seek her out as much.\n\nNatasha had seen it, too, and had been good about including her in some of their outings. When it snowed, the three of them had been joined by Samir, and eventually Mr. Hughes, in the building of a snowman and snow forts, and they had had quite the epic snow ball fight. It was all very idyllic and familial, and Vesper felt as if her womb was going to literally burn right out of her body with the need she felt to fill it. She knew that Mr. Hughes knew that, she had seen it on his face as they were playing outside, when she was laughing and swinging Elarinya around. She had seen the sad way that he had looked at her, and it had practically crushed her.\n\nAlexandru left just before mid-December, and Vesper was happy that things seemed to get a little easier with him gone. There was no having to avoid places on the off chance that the vampire would be there, and she was able to go to the spa during the day to have lunch in the kitchen with the staff or Mr. Hughes. \n\nVesper took another trip into Toronto with Samir and came home with bags and bags of Christmas decorations and a huge Douglas Fur tree to set up in front of the bay window in her living room. She was down on the rug, sorting through a bundle of shimmery plastic fern leaves to add to the decorations that she had already placed on the tree when she heard her front door open and figured it might be Natasha and Elarinya back from a visit with Shi and her family. Without looking up, she ran a hand through her hair and spoke in an excited voice.\n\n\"I know I've gotten most everything up, but would you like to help put the last bits on?\" She asked and then looked up into the doorway of the room with a wide smile on her face.\n\nMr. Hughes stood before her, dressed in a very fetching suit, his hair forever shaved and that stubble on his jaw that made him look sinister. His gray eyes were slightly stormy as he frowned and looked down at her, hands fisted at his sides as he took in the scene of her decorating for the holiday.\n\n\"I'm sure you'll forgive me if I don't feel very festive about this particular season, Vesper.\" He said darkly and stepped farther into the room.\n\n\"Well, you're not going to make me feel bad for wanting to celebrate my faith the way I see fit.\" She frowned, religion was something that they didn't see eye to eye on either, but she had only a smidgen of the understanding of what Mr. Hughes had been through, and he was still very unwilling to talk at length about it.\n\n\"I have nothing against Jesus. I just...can't.\" He muttered under his breath as he looked around at the room that she had decorated, his left eyebrow arched up a little when he saw the stockings hanging over the fireplace.\n\n\"I made one for you.\" She said softly as she saw the direction of his gaze, her hands were pulling Barnum off an ornament that the cat had decided was a chew toy. His brother was sitting under the tree looking up, seemingly mesmerized by the twinkling lights she had connected to it earlier.\n\n\"What exactly do you fill a cat's stocking with?\" He asked, shaking his head as he looked back down at he.\n\n\"Oh, lots of things.\" Vesper stood up with a twinkle in her eye, \"catnip mice and treats, those little hollow balls that Barnum likes to chase after, maybe some of your old socks for them to chew on.\"\n\nHe shook his head and sighed, Barnum had proven to be particularly destructive to his wardrobe.\n\n\"You spoil them.\"\n\n\"I do.\" \n\n\"I don't even think they care about any of the stuff you buy them. They still just want to climb in boxes and pretend they're ferocious man-eating beasts.\" \n\n\"They probably don't,\" Vesper concurred, looking at the two cats that she loved dearly, cats that he had given her to make her happy, \"but I do it anyway.\"\n\n\"I'm just like them.\" He said, his voice sounding sad and she looked over at him confused.\n\n\"What do you mean?\"\n\n\"You give me all sorts of things, your love, honesty, you obey me, you don't push too hard, you allow me to do things that I know upset you. I give you nothing in return. Yet you keep doing it.\"\n\n\"That's not true. You love me, Arc. I know you love me very much.\"\n\n\"But that's not what you need. You need more than I can give you.\"\n\nShe shook her head forcefully, \"That's not true, Arc. I need you. I can't imagine not being with you. Nothing else matters.\" Did she believe that? He didn't.\n\n\"That's a lie.\"\n\nShe closed her eyes and took a deep breath, it would always come down to this and she wasn't sure how much more strength she had left to fight it. Opening her eyes, she let her violet gaze settle on his handsome face, that strong jaw and wide, firm mouth. His shoulders were tense and his body rigid as he stood there, knowing that an argument was brewing, wondering, just like she wondered, if it would be the argument, the one that pulled them apart.\n\n\"I think I'm ready.\"\n\n\"For what?\"\n\n\"To touch you.\"\n\nMr. Hughes paled by several shades and took a step back. \"Vesper, no. It could be a mistake.\"\n\n\"It's not a mistake. It's what I need.\"\n\n\"I don't want to hurt you.\"\n\n\"I am already hurting, Arc, can't you see? This, this whole thing hurts and I want it to end. I am going to touch you.\"\n\n\"No.\" Mr. Hughes shook his head and went to take another step away from her when she put her hand up and took control of his body.\n\n\"This is my choice, Arc. No matter what happens, this is my choice. I do not want you to feel guilty over this.\"\n\n\"Please, Vesper,\" Tears had filled his eyes as she slowly walked towards him, \"Please, don't do this. I can't lose you. Please.\"\n\n\"That's what you don't understand. You're losing me anyway.\"\n\n\"Vesper, please. I love you.\"\n\n\"I love you to.\" Vesper licked her lower lip and took another step forward, this one brought her just up to that edge of pain that she had felt every time they were close.\n\nAs she held him in place, she thought about how to do this. Should she just move forward slowly, put her hand on his hand, or face, or neck? Would any of those places hurt more or less than any other? She was so busy deciding that she hadn't noticed the front door open and she hadn't seen Natasha walk in with Elarinya, Samir, and Zheng at her side. She was so busy deciding, that she didn't hear the gasp that came from her friend when she suddenly shrugged her shoulders, opened her arms towards Mr. Hughes, and used whatever the power was that was inside of her to take hold of his body and forcefully pull him into her arms, making the first place they connected, the first time her skin met his was in their first kiss.\n\nAnd then everything went black.\n\n*****\n\nAuthor's Note:\n\nI meant to put an elvish translation section at the end of the last chapter, I apologize. They are internet searchable, however.\n\nLeithio nin! - release me\n\nDaro! Ego! - stop, go\n\nGwanno ereb nin! - leave me alone\n\nneth - sister\n\nhanar - brother\n\nnoroth - giant\n\nperedhil - half elf\n\nMan cerig? - what are you doing\n\nNin gwerianneg! - you betrayed me\n\nnaith medion - blood eater ~vampire\n\ngwaedh - oath"
    ],
    "authorname": "sinagainChris12",
    "tags": [
        "comet moth",
        "moon fairy",
        "wings",
        "angel",
        "wood elf",
        "unicorn",
        "giant",
        "vampire"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-gift-she-gives-ch-15"
}