{
    "title": "Unexpected Anal Office Tryst Ch. 06",
    "pages": [
        "The following morning, I ate breakfast alone. Whether she was exhausted from last night's festivities, or if she just didn't want to talk about it, I can't say for sure. Kathryn arrived at the hotel lobby in time to grab a scone and coffee and consume it on our five-minute walk to the convention center. The few words we exchanged that morning were focused on sales strategies, and once we hit the floor, we didn't see each other until the end of the day.\n\nIt wasn't until we were back at the hotel bar, nursing the obligatory celebratory cocktail, that we were able to discuss what had happened.\n\n\"Do you want to talk about it?\" I asked.\n\n\"I suppose it's best that we do.\"\n\n\"I had a good time. Did you?\"\n\n\"Well, yeah...in one respect,\" she said, hinting at something deeper.\n\n\"Go on...\"\n\n\"Well, I mean, physically I undeniably enjoyed myself. It was super intense, and I'm not going to deny a sense of accomplishment for having done it...especially the finale.\"\n\n\"Yeah, that was unexpected. At least, it was for me. I'm not sure how much you two had planned before I got there.\"\n\n\"No, it was a surprise for me, too. If she had told me beforehand, I probably would have insisted that she give up the idea. But that's not the issue. As great as the action was, I was overcome with melancholy after you left. There were so many times when Amber and I were younger that I passed on opportunities like that, and now I wonder whether I should have had more fun when given the chance.\"\n\nI nodded in understanding.\n\n\"You know, I often find myself wondering whether I should have done things differently. And I always ask myself whether I would risk trading what I have now for whatever would have transpired had I walked a different path in life. And the answer is always no. I would bet the same is true for you. You have a great job, make a ton of money, just got married to a good guy...\" I paused there. It felt fucked up for me to include him in this.\n\n\"I know, and you're right. But I think I probably could have had one or two flings and still be in the same position I am today.\"\n\n\"Not for nothing, Kathryn, but I'd posit that you're living the most extreme version of having your cake and eating it too. What we're doing is so risky, and so fun, and yet we've been able to maintain our married lives as well.\"\n\nShe smiled even as she sipped her martini. \"Yeah, you're right again. I suppose I should just allow myself to enjoy the now and not worry about what could have been. Anyway, do you want me to leave before Jenny arrives?\"\n\n\"I was wondering that myself. It would probably be the cleanest way to prevent any uncomfortable circumstances. But it wouldn't be weird for two coworkers to be sharing a cocktail after a long day. I don't think she'll suspect anything.\"\n\n\"I was thinking the same thing. Good. Because I didn't want to have to chug this heavy pour the bartender served me.\"\n\nWe chatted for a few more minutes, before I saw Jenny enter the bar. She looked stunning, adorned in a little black dress that stopped just above her knees, and a relatively low cut that showed off several inches of cleavage. Her blond hair cascaded over her left should and down towards her breasts, ending near a pendant necklace I had purchased for her on our tenth anniversary. Black three-inch heels completed the look. \n\nShe found me through the crowd and smiled broadly, clearly excited to see me. As she moved serpentine through the tables, it seemed like every guy in the bar followed her with their eyes. Kathryn noticed I was staring past her, and turned to see Jenny making her way to us. I felt Kathryn slink as she saw Jenny approach. You know how sexy I think Kathryn is, but in her pant suit, she was no match for Jenny's coquettish appearance. \n\nJenny skipped past Kathryn like she wasn't even there and kissed me flush on the lips.\n\n\"Hi babe!\" she giddily greeted me.\n\n\"Hi, honey!\" I tried to match her enthusiasm. I took her hand and turned her back towards Kathryn.\n\n\"Honey, this is my friend and coworker, Kathryn. We've been kicking ass the last couple days.\"\n\n\"Hi Kathryn, it's so nice to meet you! I hope I'm not disrupting your work routine by being here.\"\n\n\"It's nice to meet you, too, Jenny. I've heard a lot about you. And no, you're not interrupting anything. Would you like a drink?\"\n\n\"Actually, I'm famished. Do you think we could grab a table, babe?\" Jenny replied, shifting her attention from Kathryn to me. \n\n\"Uh, yeah, if there's a free one in here. Looks like half the convention came here to put a load on. Or, we could go somewhere else?\"\n\nJenny scanned the room and found a two-top near the corner. \"Got one,\" she said. \"Kathryn, it was so nice to meet you. I promise, he's all yours tomorrow.\"\n\nKathryn bid Jenny goodbye with a wave and a smile, and Jenny took my hand and led me to the only free table in the room.\n\n\"She seems nice!\" Jenny said. \"I don't remember you mentioning a Kathryn at work.\"\n\n\"Truth is, we almost never work together. We just happened to get randomly assigned to the same work trip. But it's been nice getting to know her. She just got married last month,\" I offered, intending to allay any suspicion.\n\n\"That's no surprise. She's absolutely adorable.\"\n\n\"Yeah,\" I said, noticing a well-dressed man occupy the seat I had just abandoned. \n\n\"Looks like you're not the only one who thinks so.\"\n\nJenny turned over her shoulder to understand what I meant. The guy was trying to chat up Kathryn, but she wasn't reciprocating. \n\n\"I'm sure she gets a lot of attention,\" Jenny said.\n\n\"Well, not nearly as much as you. Especially in that dress, babe. Are you kidding? Could you feel the heat as every man stared lasers at you as you crossed the room? You make me feel like the luckiest guy in here!\"\n\n\"Aww, you're sweet. It's been a while since I was able to dress like this. You know I did it mostly for you, even if I must admit that it did feel good to receive that attention.\"\n\nThe waiter took our order. Jenny had a salad and ordered a boulevardier. I ordered steak frites and a Lagavulin neat. As we ate, I attempted to pry some information out of Jenny.\n\n\"So what did you have in mind for tonight?\"\n\n\"Oh, I didn't have anything specific in mind. Just thought it would be nice to have a night alone. No chance of the kids interfering. No need to drive home. Have a couple cocktails, get a little wild...\"\n\n\"I mean, you know that sounds great to me. It's the 'get a little wild' that I was most curious about.\"\n\n\"Like I said: no specific ideas. Get a little tipsy, let's see what happens.\"\n\n\"OK, I can be down for that.\"\n\nAs Jenny lowered her head for another bite of Caesar, my eyes drifted beyond her to Kathryn. The guy who had occupied my seat was still there, unable to take a hint. Jenny caught my stare and for a minute I thought I was in trouble. She turned to see what I was looking at, and noticed Kathryn was dealing with a slightly inebriated suitor. \n\n\"Do you want to go over there and shoo that guy away?\" Jenny asked me.\n\nYes.\n\n\"No, Kathryn can take care of herself.\"\n\n\"That guy looks awfully persistent. She's clearly annoyed. Maybe I should go over and rescue her.\"\n\nAbsolutely not!\n\n\"Yeah, that might be a good idea. If you're comfortable doing so.\"\n\nJenny, always one to make sure everyone was happy, immediately rose and made her way to Kathryn. Kathryn hadn't seen her coming, and startled a bit when Jenny tapped her on the shoulder. When Kathryn turned, Jenny gave her a big hug, as if they were old friends. They guy who had been hitting on Kathryn was disappointed to lose her attention, but his pain was softened as he caught a healthy glimpse of Jenny's cleavage. \n\nI saw Jenny encouraging Kathryn away from her stool. No. What was she doing? Kathryn seemed unsure, too, and was as hesitant to go with Jenny as she was to talk to the obnoxious patron from whom she was being rescued. Then, to my horror, I saw Jenny grab Kathryn's hand and lead her back to our table. With Jenny ahead of her, Kathryn looked at me with wide eyes and a shrug, indicating that she was basically being dragged here.\n\nJenny pulled a chair from a neighboring table and squeezed Kathryn between us at the table built for two. Her ample cleavage jiggled a bit as she plopped back down in her chair.\n\n\"That guy was the worst!\" she said. \n\n\"Thanks for the save, Jenny. But really, I didn't need rescuing. I don't want to intrude on your night. Henry said he was really looking forward to a night away from the kids.\"\n\nJenny looked at me with wide, almost tear eyes. \"Really, he said that?\"\n\nNo, I didn't.\n\n\"Yes, I did. Sorry, I hope you don't mind that I mentioned it to Kathryn.\"\n\n\"It was probably all my yapping about being a newlywed, Jenny.\"\n\n\"Of course I don't mind! It's not like it's some secret why a wife would be spending a night with her husband away from their kids.\"\n\nJenny took a first sip of her second boulevardier, and waited for the waiter to leave before continuing.\n\n\"Besides,\" she said, \"I hope he is excited. I said we might get a little bit wild tonight.\"\n\nI, mid-sip, nearly sneezed my Scotch through my nose. Kathryn, though, seemed to appreciate Jenny's loose tongue.\n\n\"Oh really?\" she pried. \"Care to elaborate?\"\n\nJenny chuckled, then turned to me. \"I like her,\" she said.\n\nMe, too.\n\nJenny had the flush cheeks that always arrive after her second quick drink. \"You're falling behind,\" she said to both of us.\n\nI flagged the waiter and ordered a third round of drinks. As we waited for him to return, the conversation hit a bit of a lull, with Jenny and Kathryn discussing their jobs. What the fuck was happening? How did we get here?\n\nA part of me was glad they were hitting it off. If our affair ever came to light, maybe Jenny would understand why I might have been enamored with her. No, that's fucking stupid. Doesn't matter how charming she is, Jenny would be fucking pissed. If Kathryn and I had planned to eat with Jenny, we could have game-planned and been on the same page. Now, I didn't know what she was thinking. For all she knew, I encouraged Jenny to have Kathryn sit with us.\n\nChrist, now they were giggling like they'd known each other for years. Jenny even put her hand on Kathryn's wrist, and Kathryn seemed totally at ease with it.\n\nThe waiter returned with our drinks. Jenny's licked her lips as her third boulevardier was placed before her. Kathryn took her third martini from the waiter's hand and sipped it before setting it on the table. I, needing to slow down a bit, opted for a gin and tonic. \n\nThe ladies seemed to be feeling better than I was. After starting in on their drinks, Kathryn lowered her voice to make sure other tables couldn't hear us.\n\n\"So, seriously, Jen...what do you mean by 'wild?'\"\n\nJenny blushed. \"Seriously, you and my husband! We can't just let things happen and see where we end up?\"\n\nShe hiccupped, a historic indicator that she was starting to feel a little loopy.\n\n\"Sorry, I didn't mean to pry. I just thought that maybe you had an idea that I could take home to the hubby.\"\n\nJenny shrugged her shoulders. \"No, it's not a problem. I don't have anything specific planned. I just thought I could come down here, get a little loopy, and get uninhibited with my husband. Who knows? Maybe we end up trying something we've never done before.\"\n\nThere was a pregnant pause, begging for someone to say something. The conversation could have gone in any direction at that point. Kathryn could have bowed out and excused herself. Any one of us could have cracked a joke and changed the subject. I could have forced a change of subject by pointing out how uncomfortable this was making me. \n\nBut Kathryn took things in a different direction.\n\n\"You mean, like...anal?\"\n\nIt was a record scratch moment. The music switched between songs. Every other conversation in the entire room hit a pause at the exact same time. It felt like all eyes were on our table, including mine. I couldn't bring myself to stare up from my plate.\n\nAfter a few seconds, the next song started playing, and Jenny and Kathryn erupted in laughter. \n\nI noticed the men at the tables nearest to us lean their ears closer as Jenny responded.\n\n\"Well, no, not specifically. But also not...necessarily...not...?\"\n\nKathryn gasped in mock shock. \"Jenny!\"\n\nNow, no doubt, all the men within earshot were fantasizing about bending my wife over the table, flipping her skirt up and fucking her ass.\n\n\"Wait!\" Kathryn nearly yelled, clearly feeling the effects of all that gin. She grabbed \n\nJenny's wrist, which was perched on the table, then lowered her voice to continue. \n\n\"Is that why you invited me over here?\"\n\nJenny laughed again, but I felt like I was visibly shaking. My worlds were colliding, and Kathryn was encouraging it. What happened to rule number one? Was she doing this because she thought it was my idea? Was she just completely blitzed and not thinking clearly?\n\n\"Kathryn, you're too much!\" There was another brief pause as they both laughed. \n\n\"Besides,\" Jenny continued, \"I was hoping to do something I've never done before.\"\n\nKathryn gasped again. \"Ohh. Emm. Gee! Jenny, you?\"\n\nJesus Christ, this was spinning out of control.\n\n\"I mean, I went to college after all. Didn't we all experiment a little in college?\"\n\nThis was not a revelation to me. I was aware that Jenny had hooked up with a couple girls in college, including once in front of a bunch of randy frat bros. But to my knowledge, this was the first time she'd talked about it since then.\n\n\"Well, Jenny, I have to be honest. Every time you open your mouth I learn another reason why Henry loves you so much.\"\n\nShe looked over to me and winked, then returned her attention to Jenny.\n\n\"You know, I've barely worked with your husband at all, but I've gotten to know him pretty well on this trip. And to be honest, I was thinking that he must be married to a very lucky woman. But now, it's clear that he's the lucky one.\"\n\nJenny looked over to me and smiled. \"I think we both feel pretty lucky.\"\n\n\"As it should be,\" I answered.\n\nJenny maintained our eye lock as she moved her hand on top of Kathryn's.\n\n\"I suppose,\" she paused, \"that this would classify as 'pretty wild.'\"\n\nKathryn remained mute, seeming to want to hear my opinion before responding.\n\n\"Whoa,\" I said. \"Don't get me wrong: that's every guy's dream. But I don't think that's a good idea.\"\n\n\"Why not?\" Jenny asked. \"I think she's beautiful. Don't you agree?\"\n\nKathryn flipped her hair over her right shoulder and turned to her left to face me. Her eyebrows were raised as if to say, \"well, don't you?\"\n\n\"I...yes...of course I do. But we work together. You're not worried about us seeing each other all the time after this?\"\n\nJenny shrugged. \"Not really. You both said that you barely ever see each other at work. And besides, I trust you.\"\n\nI looked over to Kathryn, pleading with her to back out. This was going too far. But perhaps my intoxicated pleading looked like hope, because Kathryn was squarely on Jenny's side.\n\n\"I'm down. I don't know what my husband would think, but I'll trust you both to keep this between us.\"\n\nFuck me.\n\nThe expression in Jenny's eyes was one of hope. I believe that she didn't come here with a plan, but three potent cocktails in, this seems to be exactly what she needed. \n\nAn experience that reminded her of her youth, of a simpler time before kids when we were more free-spirited. A time before I was checking my phone every five minutes, and when we could just up and drive three states away if we wanted to. \n\n\"Tell you what,\" I said. \"I feel like I'm negotiating against myself here. I'm going to take myself out of the equation. I'll go pay the bill, then head up to my room. You stay for another round, and decide if this is really something you want to do. If you both come to my door in half an hour, I'll consider that consent from all parties. Deal?\"\n\nKathryn gave a salute. \"Aye aye, captain!\" she said, mocking the severity of my speech. Jenny yelped at her response. She reacted as if it was the funniest thing she'd ever heard. She clenched Kathryn's hand tighter as they both laughed. \n\nSeriously. What the fuck?\n\nI told the waiter to bill my room, then headed towards the elevators. I was a little dizzy from the three drinks, and the reflective walls did little for my balance. But I managed to make it to my room in one piece. I cracked the window as far as it would go, hoping the fresh air would bring me back to the present. Then I countered that by pouring myself a bit more Scotch. I removed my jacket and tie and tossed them on the desk.\n\nSitting in the lounge chair by the bed, I reflected on where I was. I decided that I had actually made a pretty good call, leaving it up to the two of them to determine next steps. If Jenny came back to the room, I'd fuck her senseless before she even took her dress off, and I'd be more than happy with that. If they both came back, it was their choice to do so. The only issue there was if Kathryn and I showed a bit too much compatibility. But at this point, I'm not sure Jenny would even recognize it. She was three sheets to the wind.\n\nAs with last night, I heard Kathryn's door open and close, but there was no knock on my door. This confused me further. Did they both go into her room? If so, why? Did they decide not to do it? Did Kathryn come up ahead of Jenny while Jenny finished her drink? I was tempted to repeat last night's spy method, but my glass was still half full of Lagavulin, and you don't waste good Scotch. If they were both next door, they were being awfully silent.\n\nA few minutes later, the door opened again, and that was followed by a knocking on my door. I took a deep breath, finished off the dram, and opened the door. Jenny was standing there alone, with an urgent look on her face.\n\n\"Honey, something's wrong!\"\n\n\"What is it?\" I said, suddenly in a panic.\n\n\"The babysitter abandoned the kids. They just called to say that she left and they're home alone!\"\n\nOf all the possible scenarios.\n\n\"Wait a minute. I thought your sister was watching them tonight?\"\n\n\"She was going to, but had to back out last minute. I found a girl on Craigslist who lived in the neighborhood and had a lot of recommendations. I'm so sorry. I really didn't want to miss out on tonight.\"\n\n\"Well,\" I said, calming down a bit. \"I suppose they'll be OK by themselves for a couple hours. Are you going to catch the next train home.\"\n\n\"No,\" Jenny said, her demeanor shifting. \"I actually tracked down the sitter.\"\n\n\"Oh, well where is she?\"\n\nJenny reached to the left beyond the doorframe. \n\n\"She's right here,\" she said, pulling Kathryn into view.\n\n\"Wha-?\" I said as confusion reigned. Then, it hit me like a ton of bricks. Roleplaying. I couldn't believe Jenny would resort to pretending our kids were in peril in order to make it seem so real. Kathryn was wearing a tight pair of jean shorts and a spaghetti strap tank top that revealed a bit of her abdomen. I guess this is what they were doing next door, trying to make her look like a babysitter.\n\nI stepped backwards, suggesting that whatever happened next probably shouldn't happen in the hall. They both entered, and Kathryn put her hand on my chest.\n\n\"I'm really sorry,\" she said in a pouty voice, trying to sound like a ditzy teenager. \"But I saw that picture in the living room of you and your wife at the beach, and I really needed to know if you had a trunk beneath your trunks.\"\n\nJenny cackled, clearly enjoying the charade. \n\nAt this point, what was I supposed to do? Kathryn was into it. My wife wanted me to enjoy it. They had been allowed plenty of opportunities to back out or change their mind. And yet here they were: my wife encouraging Kathryn to fuck me. I allowed myself to join in.\n\n\"There's only one way to find out,\" I said, removing my belt.",
        "Kathryn gave me her patented grin and lowered herself to her knees. We were still just inside the door, my back up against the wall, with Jenny standing behind Kathryn in the doorframe to the restroom. Kathryn easily slid my slacks and boxers to the ground, freeing my semi-firm cock.\n\n\"Holy shit,\" she continued in her ditzy teenage voice, pretending that this was the first time she'd seen it. \"This is way bigger than the boys at school.\"\n\nAt that, she wrapped her fingers around the base and took the head into her mouth. Now Jenny approached started kissing me hard. She was standing off to the side to allow Kathryn her space, and her breasts nearly spilled out of the top of her dress as they mashed against my ribs. \n\n\"Is this what you want?\" I asked as quietly as possible.\n\nJenny bit her lip and nodded excitedly. \"Are you OK?\"\n\n\"I'm more than OK, so long as you're comfortable.\"\n\n\"I'm more than comfortable. I didn't have anything planned, but this is beyond my wildest dreams.\"\n\nAt that, Kathryn grabbed her hand and tugged insistently, encouraging Jenny to kneel next to her. Jenny raised her eyes at me as she lowered herself, as if to say, \n\n\"Here goes!\"\n\nKathryn popped my cock out of her mouth and steered it towards Jenny. I suppose now would be a good time to mention that Jenny almost never goes down on me anymore. After the birth of each of our kids, she was exhausted all the time, and it felt awfully selfish of me to ask for head. Even after we found our stride as parents, it felt weird to expect her to blow me after a long day of dealing with the kids. Let's just say, it's been a while.\n\nBut it had also been a while since Jenny had consumed four cocktails in one night, and she was showing signs of complete inhibition. With Kathryn's hand at the base of my cock, pointing it directly at Jenny's face, Jenny opened her mouth and took the head inside without hesitation. I'd forgotten how good her mouth felt. Her soft tongue was plump against the underside, and her cavernous mouth felt almost unnaturally wet. Perhaps it was the head start Kathryn had provided. \n\nGiven that we'd gone this far, I allowed myself to get into the roleplaying aspect.\n\n\"You're both going to have to suck a lot harder than that if you expect my forgiveness. What kind of mother trusts her kids to a Craigslist babysitter? And what kind of babysitter abandons her charge?\"\n\nThey both groaned, enjoying the fact that I was getting more into it. Kathryn lowered herself to my scrotum and sucked the left testicle into her mouth. I put a hand on each head and pulled them in tighter. They, as though it had been coordinated, each wrapped an arm around my leg, pressing themselves closer as we formed an entanglement of human mass. \n\nJenny was now more than halfway down my cock, which to my recollection hadn't happened since our honeymoon. I was at the back of her mouth, but wasn't yet prepared to try to force myself into her throat. I was still uncertain of what lines I could cross tonight. \n\nKathryn had her neck craned so that she could suckle my balls and still look me in the eyes. When I met her gaze, she winked at me. Even with her mouth full of scrotum, I could see the hints of a smile. God, she was amazing. \n\nJenny had worked me to full staff, and removed her heard to catch her breath. I pulled Kathryn away as well, and admired the sight of both of them kneeling in front of me. Their lips were glistening with saliva and sweat. Their cleavage sparkled with perspiration. Their chests heaved as they refilled their lungs. \n\n\"Get undressed. Both of you,\" I said as I started unbuttoning my shirt. \"And decide between yourselves who is going to get punished first.\"\n\nI kicked off my shoes and stepped out of my slacks, then walked over to the bed to watch them obey. It was still shocking to me how quickly they had taken to each other. Of course, the fact that Jenny had no idea that Kathryn and I had been fucking for the last two months had something to do with it. But even still, they'd only met an hour ago, and now Jenny was holding up her hair so that Kathryn could lower the zipper on her dress. \n\nOnce it was down, Jenny seductively lowered the straps of her dress and let it fall to the ground. She was wearing a lacy, black bra-and-panty set; one that I'd told her repeatedly was my favorite. She looked sexy as hell, but it was still a relatively modest look compared to what I'd seen from Kathryn recently.\n\nJenny and I both watched as Kathryn raised her tight top over her head and dropped it next to her. She, as I'm sure Jenny already knew given that they pre-gamed next door, was not wearing a bra. Somehow in the rapid fire onslaught of surprises I'd missed this fact. Kathryn then turned away from us to peel her tight jean shorts off, exposing a thong that seemed to match the lingerie she was wearing last night. \n\nNeither of them moved to remove any more clothing, and I wasn't going to push it yet. I sat back on the bed, slowly attending to my erection with my left hand. \n\n\"Who's first?\" I asked.\n\nKathryn turned to Jenny and said, \"I should go first. It's my fault we're both here. I shouldn't have left the kids.\"\n\n\"How do you want to be punished?\" Jenny asked, unable to mask her excitement, or her curiosity. I still had trouble believing how genuinely into this she was.\n\n\"I think it's only fitting that daddy gets to fuck my ass.\" \n\nHere, Jenny turned to me, her mouth agape. \"I don't think daddy has ever done that!\" she said after a few seconds. Little did she know.\n\nI stared back at Kathryn. \"Assume the position.\"\n\nShe strode over to the bed in a style that was both confident and demure. I rose to make space for her, and she climbed up on it, positioning herself on all fours facing away from me. Jenny, continuing to surprise me, followed her to the bed and stood next to me. As Kathryn waited, Jenny kissed me aggressively, her tongue delving deeper than I could ever recall. As we kissed, she put her hand on Kathryn's lower back.\n\n\"Spread your legs for daddy,\" she said while staring penetratingly into my eyes.\n\nKathryn moaned and spread her knees further apart. Here, Jenny grabbed the waistline of Kathryn's thong and started pulling it down. With Kathryn's thighs spread wide, the material stretched until it lodged a few inches above the knees.\n\nJenny whispered to me. \"Enjoying yourself?\"\n\nIt wasn't a question. She knew I was. She just wanted affirmation. \n\nI nodded.\n\nJenny turned back to Kathryn and spanked her left cheek hard enough to leave an imprint for a second. Kathryn yelped in surprise, but immediately returned to her prostrate position. \n\n\"Ask daddy for your punishment, you little slut!\" she barked.\n\nKathryn groaned again, clearly into it. She wiggled her ass at us and said, \"Daddy, please punish me. I've been so bad. Please punish be by fucking my ass.\"\n\nJenny looked at me again with an eye gesture that said, 'what are you waiting for.'\n\nI gripped my cock and aimed it at Kathryn's tight hole. As much as I'd fucked it recently, this experience was entirely new. It was like I was experiencing it for the first time again; though I knew I'd fit a little bit easier after all the exercise her hole had received recently.\n\nWith a grunt, I pushed the head through her sphincter, which stretched to accommodate me with relative ease. Kathryn and Jenny both gasped: Kathryn at the sensation, Jenny at the sight. Stepping a bit closer, I eased another couple inches in, and both women purred. Not wanting to ignore my wife in all this, I wrapped my left arm around her and turned to kiss her as I kept delving deeper. \n\nJenny was ravenous. She ran her hands over my body so furiously that she almost pulled me out of Kathryn. And Kathryn was trying to make me cum in record time with her dirty talk.\n\n\"Yeah...YEAH...fuck my ass, daddy....I've been such a bad girl...give me that cock, daddy...\"\n\nI'd never been one to enjoy being called 'daddy' in the bedroom, but Kathryn's tone was perfect for it. It felt like my cock managed to get even stiffer inside her, encouraged by her roleplay. \n\nAfter a minute or so, I realized that I wasn't giving Kathryn the proper fucking she deserved. It was impossible with Jenny twisting my body towards her. So I broke off the kiss and grabbed Kathryn's waist with both hands. I motioned for Jenny to go around the other side of the bed.\n\n\"You're doing a fine job apologizing to me, but what about to my wife? You abandoned her kids, too.\"\n\nJenny stared at me in shock, her mouth somewhere between smiling and agape. But I could tell she was into it. She climbed up on a pillow, her panty-clad pussy just a few inches from Kathryn's face. \n\n\"Yes...I'm...sorry, miss... Let me...make it right,\" Kathryn squeaked out between by thrusts. \n\nJenny, for once this evening, was at a loss for words. I could see her thinking of a way to put it dirtily, but she couldn't bring herself to say it. She simply slid forward and pulled her panties to the side, granting Kathryn access. As if we had choreographed it, I used this opportunity to bottom out in Kathryn's ass, rocking her forward into my wife's juicing pussy.\n\nKathryn's body felt as incredible as ever. Her ass cheeks pressed tightly against my lower abdomen, her anal tunnel clasping tightly to my pulsing cock, my balls nuzzled humidly against her dripping cunt. Her calves, clenching against the outsides of my legs, were trembling in a way that I'd come to learn meant that she was cumming. \n\nAs her lips made first contact with Jenny's pussy, Jenny's eyes rolled into the back of her head. It was a reaction more animalistic than she'd ever had with me. At first, I took it personally, but quickly rationalized it was the four cocktails and the incredibly naughty nature of what we were doing that caused her to react that way. \n\nConvinced now that all three of us were one hundred percent on board, comfortable and turned on by what was happening, I fully gave myself to the experience. I spanked Kathryn's ass and criticized her for being such a bad babysitter, an action that elicited a deep moan that was muffled by my wife's cunt. Those vibrations seemed to work wonders for her, as Jenny let out a squeal and grabbed the back of Kathryn's head, holding her tighter. \n\nFor several minutes, it went on like this. I got more aggressive with my thrusting, but Kathryn never stopped licking my wife. If anything, she licked faster and plunged deeper. Jenny was writhing on the pillow, clearly on the verge of climax. She humped her hips up towards Kathryn's mouth as we used her like a sex doll.\n\nI could make out Jenny's labia parting around Kathryn's lips as she explored her depths. As far as I knew, this was Kathryn's first time eating out a woman, but she sure wasn't being shy about it. She seemed intoxicated not just from the gin, but from the scent of Jenny's womanhood. Her nostrils were flush with pubes, but he still inhaled deeply to take it all in.\n\nThe room was filled with the sounds of sex. My thighs slapping against Kathryn's, her ass getting spanked, the wet, sloppy sound of cunnilingus, and impassioned moans and whines from all three of us. But before any of us came, Kathryn backed away from Jenny.\n\n\"Daddy, you said you were going to punish both of us. I think your wife is getting off easy.\"\n\nI came to rest with my cock at full hilt inside her ass and looked at Jenny with an eyebrow raised.\n\n\"Well, honey? She's not wrong.\"\n\nJenny was flustered from being so close to cumming. Red in the face and hair plastered to her forehead, she said, \"I...I don't have a specific punishment in mind.\"\n\n\"I think he should fuck your ass, too, babe. We're equally to blame here,\" Kathryn said.\n\nJenny looked like she was actually considering it, but objected at first.\n\n\"Oh...I...I...don't think I could do...that...\" It sounded like she was actually worried about offending Kathryn for having just taken it up the ass, and it was ironically adorable that she was thinking of her.\n\n\"Daddy,\" Kathryn started, \"Give me that Scotch, please. Jenny, roll over onto your stomach real quick.\"\n\nHaving no idea what she had in mind, I reluctantly backed out and retrieved the remnants of my drink. A few dwindling ice cubes rattled as I brought her the glass. \n\nBy the time I returned, the women had rearranged. Kathryn had move back to allow Jenny more space, and Jenny had turned onto her stomach, her ass directly in Kathryn's vicinity. \n\n\"I've never tried this before, so let me know if it's uncomfortable. Might be a little bit weird at first, OK?\"\n\nJenny nodded in response. \n\nKathryn then gently opened Jenny's ass and started tonguing her asshole. Jenny had appeared tense until that moment, probably thinking that Kathryn was going to start with a finger. But the tongue eased her concerns and she gave into it immediately. I stood off to the side and watched them in awe. I couldn't believe that it had come to this, and that everyone was so willing; that, if anything, it was all Jenny's idea! \n\nJenny was moaning as if she was getting a massage. Occasionally, her legs would spasm when Kathryn flicked one particular spot or another, but undeniable pleasure had appeared on her face. \n\nIt was at this point that Kathryn picked things up a bit. She removed an ice cube from the Scotch and, positioning it at her finger tips, brought it to Jenny's sphincter. Jenny gasped at the unexpectedly firm, cold intrusion, which contrasted so starkly from Jenny's tongue. But once she realized it was ice, she settled back down.\n\nKathryn rubbed the ice around the perimeter of Jenny's tight hole, teasing it open and numbing it. She alternated between that technique and using her tongue, lapping at the peaty smokiness that enhanced Jenny's musk. \n\n\"She's super wet, daddy. And not just from the ice cube,\" Kathryn said as she turned to wink at me. I was stroking my cock to keep it primed, not that the scene alone wasn't stimulating enough.\n\n\"Is that true, baby? You like what she's doing to your ass?\"\n\nJenny couldn't verbalize a response, but nodded eagerly as she pushed her ass back towards the sensations. Believing her to be ready, Kathryn then slipped the rest of the ice cube inside Jenny's ass. By that point, it had melted to about half the width of my pinky, so it slipped in easily. Jenny barely reacted.\n\nKathryn grabbed a second cube and repeated the process. The room smelled of Scotch, or maybe that was just from my hyper concentration on the scene in front of me. Jenny had her head resting on her forearms, as if she was completely at ease with this entry-level penetration. \n\nThis time, when Jenny worked the second cube inside her, she followed it with her forefinger, pushing it several inches deeper. Here, too, Jenny didn't react too much. The ice had numbed her to the point that she was ready for something bigger. And I was happy to oblige.\n\nKathryn stood up and moved to the other side of the bed, standing in front of Jenny. I disturbed Jenny's peacefulness by pulled her back so that her ass was closer to the edge of the bed. As I eyed my new target, Kathryn climbed in front of her and spread her legs.\n\n\"Come on, baby. Time to return the favor.\"\n\nWithout awaiting affirmation, Kathryn slid forward and planted her pussy on Jenny's lips. At the same time, I started easing my cock into my wife's ass. Not once, in our entire dating or married history, had I ever asked for this. She had never offered, either. We were completely content with vaginal intercourse. But now that I was on the cusp, there was nothing I wanted more.\n\nAs my head snuck past her sphincter, I experienced a completely new sensation. The melted ice had pooled just beneath the surface, and as my cock plunged into it, the water displaced and enrobed my cock. It was frigid but stimulating. It took me a few seconds to realize that Jenny hadn't even reacted to the penetration. She was devouring Kathryn's pussy like she hadn't eaten in weeks and was sustaining only on her sweet nectar. It wasn't until I was a few inches deep that I felt any resistance from her ass.\n\nKathryn repeated Jenny's gesture for earlier, cupping the back of her head and holding her flush. She and I exchanged a glance, and she smiled with a shrug, as if to say \"I didn't plan this, but I sure am enjoying it!\" I shrugged back, still stunned at how the evening was turning out. \n\nWhen I bottomed out in Jenny, I felt the familiar sucking sensation, and it caused me to lurch forward. I planted my hands on either side of her, propping myself up on the mattress as I continued to pump in and out. Jenny was making muted meows as she broke two sexual barriers at once. At least, to my knowledge she'd never gone so far to give oral to any of those sorority gals. At this point, I was starting to wonder.\n\n\"Fuck, I'm gonna cum,\" I grunted, unable to hold out any longer. You'd think I'd have built up more stamina over the last couple days, but each ensuing day resulted in a more erotically charged scenario. Never in a million years would I have imagined fucking my wife's ass while she ate out my side lover, with all parties not only consenting but eagerly encouraging each other.\n\n\"I'm coming, too!\" Kathryn yelled. Her chest was heaving rapidly Jenny brought her to orgasm. \n\nNot wanting my wife to be left out, I worked my left hand beneath her and started frigging her clit. Stiff and slathered in her own juices, it responded immediately, bringing Jenny over the edge.\n\nWithin 15 seconds of Kathryn's cum, Jenny and I followed suit. I emptied myself deep inside her, relishing the feeling of her tight tunnel squeezing out every last drop. Reluctantly, I backed out and lay on my back. Jenny, too, turned onto her back and scooched between Kathryn and me. Unprompted, Jenny started giggling uncontrollably. It proved to be contagious, as Kathryn matched her. I chuckled a few times, too, but quickly nodded off to sleep. The alcohol, exertion and mental strain had proved too much for my feeble brain.\n\n.....\n\nI awoke to the incredible sensation of a wet mouth slathering my cock. It had been ages since Jenny had woken me up this way. It was surprising not because it's always surprising, but because she was doing it the morning after my cock had been in her ass. And to the best of my memory, I hadn't washed yet.\n\n\"Hey there, sleepy head,\" she said as she continued to stroke my cock with her hand. \"I have to head out in half an hour, but I wanted to milk this for all its worth.\n\nShe kissed the tip of my head, then added, \"No pun intended.\"\n\nI groaned and gently rocked my hips up to meet her mouth. Excited to have turned me on, she went deeper and deeper. It turned out to be the best blow job she'd ever given me, and I finished shortly after waking.\n\nJenny crawled up and laid her head on my chest. \"Are you OK?\" she asked.\n\n\"I mean, I'm still processing, but yeah, I think I'm OK. No question last night was incredible. Did you have fun?\"\n\n\"We went a lot farther than I had anticipated, but yes. I absolutely loved it. Honestly, it was just what I needed.\"\n\n\"Well, if you're OK, than I'm definitely OK.\"\n\n\"Are you concerned about going back to worth with Kathryn? I know you don't see each other that much, but it's inevitable that you would run into each other at some point.\"\n\n\"No, I don't think so. After all, she's married, too. She's not going to tell anyone. And as much as I'd love to shout it from the rooftops, neither am I.\" This was the same logic Kathryn had offered that first night in the conference room. \n\nJenny kissed my chest. \"OK, I should get dressed and to the train station.\"\n\n\"I'm going to jump in the shower. See you tonight?\"\n\n\"I can't wait.\"\n\n.....\n\nAs with yesterday morning, Jenny was late to breakfast, and ended up eating a scone on the walk to the convention center. The final day of the show ended at 1pm, but we had both already exceeded sales expectations, so we weren't likely to stay that long. It was more obligatory that we show up for a few hours to schmooze. It wasn't until we were on the train home that we had a moment to talk.",
        "Unlike the train to Philly, our New York train was off peak hours, so there was plenty of space. Three or four empty rows were between us and anyone else.\n\n\"So, do we need to talk about what happened last night?\" I asked.\n\n\"I'm thinking we probably should.\"\n\nI paused, not knowing how to start.\n\n\"I suppose,\" she began, \"More than anything else, I want you to know I didn't plan for any of that.\"\n\nI smirked. \"I know. Jenny told me it was all her. Or, at least, that your sarcastic mention of it made her want it. But I know you didn't plan it.\"\n\n\"But I also fucking loved it. It was so intense!\"\n\n\"Yeah,\" I said. \"It went over the top super quick. You calling me daddy was a twist I wasn't expecting, but it really turned me on.\"\n\n\"I don't know what came over me. I just went for it and you both seemed on board.\"\n\n\"My only hesitation was over how Jenny would react. I didn't want to make her curious about our chemistry or anything. But when I saw how turned on she was, I felt better about the whole thing.\"\n\nKathryn let out a heavy sigh, and I could tell she was trying to figure out the best way to put whatever she was going to say next.\n\n\"Let me guess,\" I said. \"You think we should put an end to this.\"\n\nShe nodded. \"I mean, I don't want to. But think about everything we've done and gotten away with at this point. To me, it's a matter of karma. Eventually it will all come crashing down if we keep pursuing it. Let's just live with the incredible memories we've created and quit while we're still ahead.\"\n\n\"One again, Kathryn, we're in synch. I can't even imagine how we could make things any more exciting or risky than we did the last two nights. Anything else would just pale in comparison.\"\n\n\"That's what I'm saying. We had our fun. We have our memories, and we have our secrets. No one can take that from us. But it's time to recommit to our spouses. And Jeremy and I are going to start trying for kids, even if late thirties is a bit late to be having one.\" \n\n\"OK, so...what the hell are we going to talk about for the next half hour?\" I joked.\n\nKathryn laughed out loud, then rested her head on my shoulder. \"You're a good man. I'm glad we did this.\"\n\nAnd instead of needing something to talk about, we enjoyed thirty minutes of silence.\n\nAt the train station, we called separate Ubers. On the ride home, I got an incognito message.\n\n\"Just to help myself resist temptation, I'm deleting this app. Just wanted to be transparent about it.\"\n\n\"Me too,\" I replied, and deleted the app.\n\nAnd at that, we agreed not to see each other anymore.\n\nOf course, that's what we said after the first time.\n\n \n"
    ],
    "authorname": "abob1",
    "tags": [
        "anal",
        "fmf",
        "threesome",
        "hotel sex",
        "coworker",
        "double blowjob",
        "pussy eating",
        "cunnilingus",
        "drunk sex",
        "married couple"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/unexpected-anal-office-tryst-ch-06"
}