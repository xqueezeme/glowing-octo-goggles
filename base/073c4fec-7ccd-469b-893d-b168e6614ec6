{
    "title": "The Twelve Tables Ch. 26",
    "pages": [
        "Authors Note: Thank you to everyone left comments or sent me feedback about previous chapters of this story. Thank you again to Margaret who proofread for me. ~ellie\n\n*****\n\n\"We probably should go in now that I have asked for an early dinner,\" Peri said quietly breaking the silence that had grown between her and Dante as they gazed at the stars.\n\n\"Indeed,\" he agreed draining his glass and placing it on the table as he got carefully to his feet and took his crutch from where he had left it leaning against the rail. He didn't really need it anymore but until his wound was healed properly, he wasn't taking any chances. He hated being an invalid and Pete had warned him of the side effects of putting too much pressure on the damaged calf muscle. He was healing well, and he wanted it to stay that way.\n\nThe romantic dining setting had been arranged on the upper deck, it was open to the night air but had an awning to protect them from the elements. Zita had organised a beautiful evening for them, and Peri smiled delightedly, as they were shown to their seats and Dante held her chair for her as she sat down.\n\n\"Would you like me to pour the wine?\" the steward asked formally.\n\n\"Please,\" Dante nodded. \"Then I would like to see the Captain before you serve the entree.\"\n\nThe steward poured a small amount for Dante to taste, before filling up their glasses after a single nod from him. Peri watched him carefully, his demeanour changing as he spoke to someone who worked for him. This was how he was with the staff at home, while not quite dismissive of them, he left them no doubt as to who was in charge. They made small talk about the beautiful, romantic setting and the wine until the Captain appeared and Dante stood to shake his hand.\n\n\"Dante Donati,\" he introduced himself.\n\n\"Ned Campbell,\" the Captain reciprocated. \n\n\"Can I assume that you and the crew work for Vincenzo?\" Dante asked. \"In short, have you signed the family loyalty contracts?\" He added.\n\n\"Yes Sir,\" Ned responded differentially. \"The crew will not disturb you unnecessarily, and the steward is very experienced at servicing romantic trysts of an unusual nature,\" he said diplomatically. \"Full non-disclosure orders are in place for all of the crew, and we are handsomely rewarded for the unobtrusive service we provide.\"\n\n\"Thank you. You understand, I had to ask,\" Dante said formally. \n\n\"Yes, Sir,\" Ned said equally formally. \"I hope you enjoy your evening. The Mistress was quite specific about the arrangements for your night. You will find the salon which leads from the rear deck has a vast range of music and a well-equipped bar, that can be used for the dessert course if your wish. You will find it is equipped with many delights for a romantic evening,\" he said, his lip curling with a suppressed smile. \"The Mistress asked me to mention it should we speak.\"\n\n\"Did she indeed?\" Dante grinned. \"My thanks, Captain, I will not keep you from your duties.\"\n\n\"Enjoy your evening Sir. Ma'am,\" he nodded at Peri before turning and leaving the room.\n\n\"You may serve the first course,\" Dante instructed the steward and resumed his seat. He took her hand in his. \"You understood what I was asking?\" he cocked his head to the side as he asked the question.\n\n\"Yes,\" she said quietly. \n\n\"The crew are essentially, blind and deaf to anything we may or may not do during our time here together. I want you to be comfortable with that, because I am enjoying the smell and sight of the ocean and I am in no hurry to disappear below decks again, despite my need to enjoy you.\" He said his voice becoming deeper and husky his eyes filling with the heat of his words.\n\n\"I will try to remember that,\" Peri swallowed the small lump that had formed in her throat as his gaze ignited her arousal. It was like the heat in his eyes had transferred into the hand that held hers and travelled directly to erogenous zones.\n\nShe blushed slightly as the steward interrupted to place the food on the table before them and Dante withdrew his hand to make room. Without a word he refilled their glasses and faded away again. The plate looked beautiful, as it held a bed of lettuce, on which nestled bug tails and oysters artistically arranged.\n\n\"This looks good,\" he chuckled. \"Not that I think we need the mystical aphrodisiac powers of oysters tonight, do you?\" He asked.\n\n\"I don't think we do, either\" she laughed at his waggling eyebrows as he said it.\n\n\"Does the age gap between us bother you?\" he asked making small talk and startling her.\n\n\"Honestly, I've never even considered it,\" she said looking at him with wide eyes. \"You don't seem much older than Josh, but I guess you have to be because there are four others between two of you.\"\n\n\"Forget I mentioned it then,\" he chuckled. \"Josh and I have become as close as if we were born twins. I'd be quite happy for you to believe I was his age, rather than the distinguished older man, preying on the beautiful young woman.\"\n\n\"You're hardly preying on me,\" she laughed.\n\n\"Ah, but the night is only just beginning young lady,\" he leered at her making her laugh even more. \"And you are wearing a very potent symbol of submission to me and my wicked ways.\" He reached over and stroked a finger over the necklace he had put on her when they arrived. Rather than sitting opposite each other, they sat on either side of one corner of the table, so that she was within easy reach of him. His hand drifted to the back of her neck as it followed the necklace's curve around her throat. Once there, he deftly undid the clasp of her halter neck with nimble fingers and pulled one side down revealing her breast to him in the soft lighting of the deck.\n\nPeri drew in a breath looking around quickly as his fingers took hold of her nipple.\n\n\"Look at me,\" he instructed, \"The steward will see nothing but the food and wine, I want your eyes on me and only me this evening.\" He pinched the nipple as if to make his point and she whimpered softly nodding. \"I will never tire of playing with your breasts or what they can hold,\" he lamented pulling his hand away, satisfied with her nod to acknowledge his words. The material still hung from her other shoulder, and he did nothing to dislodge it, enjoying the sight of her stiffening nipple pressing against the soft fabric of the deep blue dress, as the other stood out toward him, as if begging for attention.\n\nDante took a sip of his wine gazing at her as she blushed slightly. She followed suit taking a large gulp of the wine. Dante resumed eating, and again she followed suit, feeling awkward in her half-dressed state as their small talk resumed. She kept her posture willing the end of the halter strap not to fall from her still covered shoulder.\n\n\"Dante,\" she said during a lull in their conversation as they finished eating. \"What was it like growing up with both Papa and Christo? Josh is too young to remember but now that you have pointed out that you are older, I realise you would have been aware of the relationship they had with your mother. Was it strange to have two father figures?\"\n\n\"It was normal for us. We had two fathers and never really questioned it when we younger,\" he shrugged. \"We were home-schooled until we were ten years old, and part of that was learning about who we were and that we were bound by love and duty to the family. That sense of honour and secrecy about family dynamics and business was drummed into us at an early age.\" He smiled. \"I think it was phrased in terms of tradition. The men were expected to be good providers and look after the women in their family. The girls were expected to be pretty princesses, who would grow up to be queens of their own families and produce many babies.\"\n\n\"That was the norm for your parent's generation though and didn't answer my question,\" Peri leaned back slightly in her chair. \"I wanted to know how it felt for you, if you were torn between one or the other,\" she asked tentatively.\n\n\"It was normal for them both to be there,\" he said again. \"If one was busy the other was available, and on good days they both came out to play soccer or ride with us. I guess the five of us were pretty lucky to have that for as long as we did.\" He seemed to think about the question. \"It was great if I am honest, but we didn't get away with anything, and when we got into trouble, it seemed to be Papa who was the disciplinarian, while Christo pulled the whole, I'm so disappointed in you act, which seemed to hurt twice as much as a spanking.\"\n\n\"The five of you?\" Peri asked. \n\n\"Izabella was doted on by everyone, she never wanted to ride or play in the creek,\" he chuckled. \"She was and still is a true Donati princess. When the Valentine twins came along, they were very insular, content with their own company. Lucia could have been good value, but by the time she was old enough to roam around the farm, we had all moved onto to boarding school. She was a tomboy. She hated being fussed over and the frilly dresses Mama used to buy for her.\"\n\n\"So just you and your older brothers really knew Christo?\" Peri asked, again still trying to make sense of it in her mind.\n\n\"I never felt anything but love for and from both Papa and Christo. They each loved us, as if we belonged to them alone. There was never a distinction, and I promise you, Peri, none of your children will ever feel that from me,\" he reached out to take her hand. \"Blaze, Cruze, and Eden are already mine and they will never know any different. At least not from me,\" he reassured her seeing where her questioning was going.\"\n\nPeri remained quiet for a few moments before leaning in to kiss him. It didn't seem fair that her future children might be fathered by Dante, and yet they would call Josh, Papa. It didn't seem fair to either man she realised, as she thought about it and she wondered how they were able to accept it so easily.\n\n\"We've been indoctrinated our whole lives on tradition, honour and duty to family. I realise it is hard for you to understand, but I know Josh feels the same as I do. Your children will be ours, not his and mine.\" His hand stroked down over her cheek and neck to her bare breast. He smiled as he fondled it gently. \"I can't wait to have more children with you and fill our home to overflowing with love and laughter.\"\n\n\"The ones we have are only four months old,\" she exclaimed wide-eyed.\n\n\"Okay so another month or two of practice before making the perfect baby,\" he grinned. \"Practice does make perfect,\" he laughed at her expression. \"Or so they say.\"\n\n\"You think we need practise?\" she teased. \"I thought we sort of had the baby making side of things under control.\"\n\n\"Maybe Josh isn't the only perfectionist,\" he murmured kissing her softly. As they came apart once more, the steward appeared clearing their plates and ignoring Peri's half-dressed state turned his full attention on Dante as he tilted his head.\n\n\"You may serve the next course,\" Dante said with a half-smile watching Peri's reaction to the intrusion on their solitude. The steward faded out of sight again leaving them to their conversation.\n\n\"Now that you have stopped breastfeeding will you be coming back to work?\" Dante asked.\n\n\"Part-time,\" Peri smiled. \"I guess we need to discuss it as a family with Josh. The commute is certainly easier from the penthouse but I think Josh would like the House to be our main home, and I think I agree. I'm not sure I want to have to make the babies travel between their homes twice a week, but I don't want to be so far from them either.\" She voiced her conflicted feelings about returning to work.\n\n\"The representatives from the other families want to deal with you personally, not your team,\" Dante told her. \"Once you'd had the babies they went off to continue their research with their families. Most of the information comes in the form of emails and phone calls, now. You could come in one day a week and do the rest from home to start with, if you wanted.\" He gave her the best option, because even though he wanted her back at the auction house with him, he had already handed over much of the running of the business to his trusted advisors and managers and knew he would not be there every day himself.\n\n\"Maybe the team could come out to stay with us for a few days, to formulate a plan of action,\" her mind began ticking over in regards to changes she would need to make and how she might go about it, in light of what Dante had said.\n\n\"Come back to me,\" Dante murmured, reaching out to tweak her nipple, holding it pressed between his fingers. \"It was a simple question requiring a simple answer. There is no need to start planning anything,\" he saw her refocus on him, and her eyes grow wide as the discomfort in her nipple turned to pain. \"You're right, this is a discussion for all of us, as a family.\" He released the pressure of his fingers and stroked his hand over it gently moving it down to cup her breast and rub the nipple with his thumb.\n\n\"I'm sorry,\" she said breathlessly.\n\n\"You will be,\" he murmured and dropped his hand to hers pulling it onto his lap. \"You have no idea what knowing that you are finally mine does to me every minute of every day.\" He guided her hand over the loose shorts he wore to his erection.\n\n\"Again?\" she teased. \"I thought we took care of that when we came on board.\"\n\n\"Always,\" he said huskily feeling her fingers curl around his cock through the soft fabric of his shorts. He hadn't bothered with underwear knowing he wouldn't need it here with her. He lowered the other shoulder of her dress, that she had hitched up more than once during their conversation and watched the soft globes of flesh sway before his eyes.\n\nPeri smiled and caressed his cock stroking it as best she could through the soft material. She kept eye contact with him and was surprised when he pushed her hand against his groin and whispered, \"Don't move.\"\n\nIt was only then that she realised the silent steward stood behind her with hot plates and food on a tray. He placed them carefully on the table and from his wide satchel like belt he pulled a fresh bottle of wine and opened it. Dante went through the act of tasting it as Peri remained with her back to the man and her hand curled around Dante's cock. Though she doubted he cared to look and was not shocked by their behaviour from the earlier conversation with the Captain, she still blushed deeply, as he poured the wine into fresh glasses and silently left them to their meal.\n\nThroughout the meal, they spoke of the family expectation that women would stay home and be the perfect mothers and while they were all taught similar traditions of duty and honour they were also taught that their place was behind or under their man supporting him rather than being side by side with him. Even Mama who had more power than most women never flaunted the fact that she was anything other than a wife and mother. \n\nDante confided that he had once walked in on his parents in the middle of a bondage session. \"It was the first time I realised that the Donati Princesses could be just as submissive as the Kept. That I could have a wife who would have all the beauty, poise, and grace of a lady and still be a wanton slut in the bedroom,\" he chuckled shaking his head. \"It took me a long time and Lio's counselling to get over the initial shock and come to that conclusion, though.\"\n\n\"Was Cherise submissive?\" Peri asked in a whisper wanting to know but not sure if mentioning the woman who broke his heart would spoil the atmosphere of the evening. \n\n\"She was willing to try most things, but it didn't come to her naturally,\" Dante admitted. \"I thought she submitted because she loved me, but she loved the money and prestige of the Donati's, not me. In the end, she said she would have done anything, slept with anyone, endured whatever I wanted, but she would never sign a prenup or agree to be put on what she called the budget of a pauper for a year before we could marry. Papa had read her well and shown me what I could not see myself. She'd fallen pregnant to trap me. It was not breaking up with her that broke my heart, but the loss of the baby that could have been.\"\n\n\"He never mentioned money or a prenup to me,\" she admitted thinking about it. \"I guess he needed to know that his power and influence over his family would extend to me. That my love for Josh would mean that I would obey the family laws and traditions even if I didn't like or agree with them.\" She mused considering the encounter.\n\n\"So no prenup then,\" Dante turned a confused look on her. He had assumed she had been through the same ordeal as Cherise and didn't care about the money.\n\n\"Josh never asked what occurred, and I never offered the information, because I didn't know how he would react. He was so happy to have his father's blessing, anything that came before that, didn't seem to matter,\" She said softly. \n\n\"I need to know,\" Dante said in a strange tone. \"I won't force the information onto Josh, but I need to know.\"\n\n\"He talked to me a lot about the family, particularly the Kept and their necessary role. I think he was gauging whether we were in love or lust. He was testing me on a few things, not just the sex side of things, but I imagine it was obvious that it was a big part of our relationship, that I was submissive to Josh. So to test me and whether that obedience to Josh extended beyond him to the family and into the trial I would have to endure,\" she swallowed and looked up at him before going on. \"He had me kneel at his feet and worship his cock. I gave him a blowjob. He was as aggressive as Josh during it, but I did it without balking, because I love Josh that much. I consented to the original trial that both Joseph and Antonia were going to oversee, because I loved Josh that much. I boarded the plane that took me to the Battaglia instead because I love Josh that much.\" She knew this was not what he wanted to hear, but she said it anyway as if that justified everything she had done, to become part of this family.\n\n\"I am glad you loved him that much and I hope in time you can love me with the same passion and commitment,\" Dante said measuring his words. He felt the bite of jealousy which hadn't plagued him for months but he didn't resent his brother, how could he? He had barely known Peri at the time, and if they hadn't shared such a great love, he wouldn't be here with her now. He found himself wanting to know more about their relationship, the how and the why she had submitted to Josh in the first place. She was an intelligent woman and while not a great beauty in the eyes of mainstream society, to him and obviously Josh, she was beautiful and infinitely desirable. She didn't seem the type to submit easily he thought.\n\n\"I do love you that much, silly,\" she laughed lightly. \"Do you think I would let just anyone into what I have with Josh, so completely, if I didn't feel the same way?\" She took in his stunned expression. \"I would have accepted you as the Oracle and welcomed you warmly when the table asked that I love you as a second husband, so to speak. But we had history and a gentle love born of true friendship and family, long before they asked. I knew then that if Josh allowed it, I could love you as a woman loves a husband. I would never have acted on my feelings if he had any reservations because, \" she smiled as Dante cut her off.\n\n\"Because you love him that much,\" he finished for her.\n\n\"I do,\" she admitted. \"I love you now too and I would have that same interview with Joseph for you and submit to the same trial if that was what was asked of me by the table, but it wasn't. The challenge for me has been how to show you that I love you that much. That I love you as I love Josh but for all our history we had it at arm's length, and our present includes Josh. We didn't have that time of growing together into our relationship. We have in some ways, but our courtship, if you could call it that, has been so different. I feel like we have loved each other for much longer than the reality of our relationship.\"",
        "\"That's probably because I have loved you from afar for a very long time,\" his mouth curled into a soft smile. \"Were you always submissive or was that something you discovered with Josh?\" he asked curiously.\n\nPeri looked at Dante thoughtfully, as she chewed a mouthful of Pasta slowly. She asked the same question of herself now and then, but had no real answer. \n\n\"I guess it was always there in me. I certainly liked rough sex before I met Josh,\" she said taking a sip of her wine. \"I didn't understand the term submissive or what it entailed before I started working for Josh, though,\" she laughed softly. Dante cocked his head still curious as she took another mouthful of the pasta.\n\nThey ate slowly as she talked about the time Josh had brought her up from the research dungeon to be his personal researcher and the type of books he gave her to research. They had laughed and joked about his ulterior motives and how by the time he had spilled the pasta on her and taken her on their first date, he had already been indoctrinating her on his chosen lifestyle, as well as the traditions of his family.\n\nShe talked openly about her experiences with Josh and the weekend at the chalet when she submitted completely to him, as well as her experiences after that and how she had embraced it as she had. \n\n\"I understand now what you meant when you said we didn't have that period of growing together. Josh changed you in a very profound way, and we can all see how you have changed him over time and highlighted the best parts of him,\" Dante nodded. \"What you don't seem to see is the profound changes in me since I fell for you. Not for the first time recently, I find myself wishing Lio was here to explain to you how you have changed my life.\"\n\n\"It must be difficult not to have him here to see what you are becoming within the family,\" Peri reached out and stroked his cheek.\n\n\"I think we knew we would separate eventually. Lio wanted to be overseas with Con. He spoke three languages and had been preparing for the time when he might have to leave,\" Dante admitted. \"I guess that's why he encouraged me to play second fiddle to Ben here in the city. I think he always knew what my role would be and assumed Ben would take the chair when the time came.\"\n\n\"No one thought Josh would be chair?\" She asked curiously.\n\n\"He's the baby brother. We always thought of him as too young, too volatile, too independent, I guess,\" Dante said honestly. \"We were quite obviously wrong.\" He chuckled. \"Now I can't think of anyone better for the job, and I guess I have you to thank for that. You are the reason I turned to Josh when Lio died. I wanted to be with you, and somehow I found Josh. Not the Josh we all knew but the real Josh who is stronger, smarter and more loving than I would have given him credit for before that day. He suffered being Nik's twin and constantly having to defend her and build bridges for her to come back to the family. I think it stopped us from seeing the man he had become.\"\n\n\"She hated me right from the very first day, when I met you all. I'm still not sure why. I would never have stopped Josh from doing anything for or with his family,\" she shook her head as if even now protesting her innocence.\n\n\"It wasn't you,\" Dante said softly. \"Josh had stopped being her advocate for some time before that. Most of us were barely talking to her that day, and he had been too preoccupied to fix her mess for her. She might have blamed you but trust me, Josh had come to the end of his patience with her demands. He'd been supporting her dreams of the fashion boutique for long enough, and he had told her that if she was going to leave the family to make her move or else toe the family line and start to entertain some realistic suitors.\"\n\n\"He did?\" Peri looked stunned. \n\n\"I think he blamed himself for what happened to you and her because of that,\" Dante nodded. \"We've had many long nights confiding our dark secrets over a bottle of Sambuca or two,\" he grinned.\n\n\"I've noticed that,\" she laughed. \"It's almost as if you and Josh came from completely different families. I wouldn't have thought the age gap would have made such a difference to you both.\"\n\nTheir talk turned once again to Dante's early life and his time at boarding school and university. It shouldn't have surprised her to find that he was an art history major like herself. He lamented that he didn't have the gift for languages that Emilio did so he had concentrated his art history degree on the anthropological sciences. He spoke candidly about his girlfriends or lack thereof and the difficulty he felt in holding back his preference for dominating the women in his life.\n\nPeri opened up about her formative years growing up with a cougar for a mother, who had acted more like a teenager than she ever did. It was painful to admit that she was an ugly duckling and that her mother had continually tried to make her over. She physically cringed admitting that her boyfriends had ultimately ended up sleeping with Andie instead of her. She smiled as she remembered Josh turning Andie down flat and the conversation she had overheard. \n\n\"He was the first man I had ever met that had resisted her advances. It was shortly after that, that she became the mother of the year,\" she mused. Dante knew now what Josh had done in telling Charles about Andie, but he remained quiet rather than bring it up.\n\n\"I can't imagine any man in his right mind turning down your obvious charms for those of your mother,\" Dante murmured leaning close to kiss her, his hand moving to her breast and caressing it gently to reinforce his words. \"Just sitting here with you makes me hard,\" he murmured into the kiss and dropped his hand from her breast to draw her hand back to his cock. He groaned as her fingers curled around the hard shaft. Throughout the meal, they had been touching and kissing. Peri found herself as aroused as he so obviously was.\n\n\"I think I can help you with that,\" she purred in a husky voice sliding from her chair to the deck. Being careful of his injured leg she slid under the table and squirmed between his legs as he shifted his chair slightly backward and loosened his shorts. His hand stroked her hair as she moved up to kiss the tip of his now exposed cock.\n\nDante sighed loudly in pleasure, at the first tentative kiss of her lips and leaned back in his chair enjoying the sight of this amazing woman on her knees at his feet. She looked up at him through her thick eyelashes, and he felt his cock jump in her hand at the undisguised hunger in those eyes. He locked eyes with her as she continued to look up at him while she swirled her tongue around the swollen head of his cock and sucked it between her lips. He groaned deeply and felt the nails of her left-hand rake down his thigh and slide under his balls to cup them.\n\nEncouraged by the deep groan he made, she broke eye contact with him and took more of his cock into her mouth, bobbing her head gently as she felt him push at her tonsils. She swallowed against the gag reflex as she continued to suck him, her head moving in a slow bobbing action, as she took her time to take him all into the warm cavern of her mouth. She moaned as she felt his hand stop petting her hair and his fingers thread into it grabbing a handful and quickening her pace with not so gentle tugs.\n\nDante felt the pure pleasure of her mouth working on his cock flow through his body as his hand tightened in her hair and he began to control her movements. Her gurgling moans spurred on his need. His deep groans counterpoint to her higher vibrating murmurs of painful pleasure. He had planned to stop and fuck her, but he couldn't bring himself to stop the absolute pleasure of having her on her knees before him with his cock in the warm wet cavern of her mouth. \n\n\"Fuck!\" he growled loudly as he came explosively his body bucking his hips up as he held her head in place. From the moment they had arrived, he had been hyper-aroused, and his head spun from the second climax he had managed to reach already that evening. \n\nPeri finally sat back on her heels, crouched over as she remained under the table gasping for breath. She felt rather than saw his hands reaching for her and dragging her up onto his lap. Taking a napkin from the table, he wiped the drool and spittle from her chin and breasts before kissing her deeply and running his lips and tongue down her throat to her breasts as he leaned her back in his arms. His lips locked to her nipple, and he sucked it between his teeth, drawing his head back slightly watching the soft flesh stretch and hearing her whimper, before loosening his hold on it and letting the nipple scrape out over his teeth. He repeated the same action on the other breast before bringing her back up to his chest and kissing her deeply. \n\n\"Would you like dessert before I get too carried away?\" he murmured.\n\nPeri looked at him with a dazed expression. She was breathless and beyond aroused now, and she couldn't quite make sense of what he was saying at first as the blood pumped in her ears. \"Dessert?\" she asked making him chuckle.\n\n\"Yes, dessert,\" he wrapped his arms around her and held her to him. \n\n\"Thank you, you can serve dessert now,\" Dante said over her shoulder making her stiffen and remember that they were not alone.\n\n\"May I suggest that Sir and Madam have dessert in the salon on the main deck. I am sure you will find the atmosphere quite conducive to your needs this evening,\" he said in a quiet, respectful voice.\n\n\"Thank you, I believe that would be a good idea,\" Dante said helping Peri to her feet as the steward turned and left them to make their way down to the lower deck. Dante stood and took up his crutch before pulling her into his arms and kissing her again. \"I love you,\" he murmured softly holding her close.\n\n*****\n\n\"What the hell is wrong with you,\" Joseph grumbled as Josh slammed his phone down on the table. \n\n\"I can't get hold of Peri, and she knows better than not to have her phone on her,\" he said, his anxiety and anger mixing to colour his voice darkly.\n\n\"She is perfectly fine, Dante is with her,\" Joseph said easily. \"Put your phone away and enjoy the evening.\" Joseph looked around at the exclusive men's club owned by the Martino family. He had taken Josh on a good-will trip, to a rival family within the twelve, thinking that this club would distract him from the family he had left at home.\n\n\"Neither are answering their phones,\" he said abruptly. \"Nor are the security team I assigned to her.\"\n\n\"Perhaps they are enjoying a night out together. I don't imagine they've had the opportunity since before the holidays, when we travelled to Canberra,\" Joseph reasoned watching his son carefully.\n\n\"You think that is an excuse not to answer my calls?\" he snapped.\n\n\"Joshua, remember where we are and who you are talking to,\" Joseph said in a deceptively quiet tone. \"They probably have no reception where they are.\"\n\n\"They would have asked or at least told me before making plans to go anywhere,\" Josh kept his voice steady as he spoke after his father's rebuke.\n\n\"I asked her not to tell you. Just as she hasn't told Dante that she has made plans to spend the weekend alone with you while he is otherwise occupied,\" Joseph explained. \"She is on Vincenzo's yacht with Dante and the security detail you need not worry; she is safe I assure you.\"\n\n\"What about the children?\" Josh was angry now and despite his best attempts to keep his voice reasonable, it had an edge to it.\n\n\"Your mother is looking after all the children this weekend,\" Joseph said. \"I will join her tomorrow when we return while you go to meet your wife.\"\n\n\"That's right. She's my wife, not Dante's. They should ask me before making plans that don't include me. Taking off together is unacceptable,\" he was fuming, and he felt as if they had purposefully slighted him by leaving him out of their plans.\n\n\"Firstly, Dante knew nothing of the plans for this weekend. Secondly, Peri is only doing as I insisted. If you want to be mad and brutish in your need to control the people who love you the most, then be mad at me, if you dare,\" Joseph challenged him. \"They will end up resenting you and the great love she has for you, even over your brother will wane, and she will turn to him for comfort and support, rather than you.\" He gave Joshua a steady stare as he frowned at his youngest son, surprised by his reaction to the surprise plans.\n\n\"Get your head out of your ass and realise you cannot put yourself above your brother, but must rule with him, side by side, both personally and professionally. You will lose her love and his respect if you continue this stupidity.\" Joseph raised his voice slightly having not seen his sons temper for some time and remembering his childhood tantrums.\n\n\"She's mine. She's always been mine. Nik tried to take her away, the Battaglia, even you. I had to fight for a long time to make her see that she belonged to me. I managed to keep her and make her mine for forever, not you or Nik or anyone can take that away from me,\" he declared. \"I have welcomed Dante into our home and our bed, but it's me she promised to love, honour and obey. She is mine,\" Josh asserted. \"She planned this night with him and never said a word to me. She will learn that it was a mistake,\" Josh said darkly.\n\n\"She was doing as I asked. That is never a mistake as you should know. Should I ask you to keep something between us, I would expect the same loyalty that she has shown me,\" Joseph was becoming angry now. The future leader of his family was acting like a petulant child. \"Perhaps you are not the man I believe you to be. Your potential is huge, but this side of you is abhorrent. Your belief that your wife is a possession, is so far removed from reality, that I worry about your sanity. You are her husband and hold her love because she allows it, not because you won it like a prize to be held tightly in your fist.\"\n\n\"She loves me completely,\" Josh stated and stared at his father as if he had slapped him.\n\n\"Then what are you worried about?\" Joseph spread his hands. \"She has planned a weekend to show you that love, you claim to possess and you are angry that she spends one night with your brother?\"\n\n\"She could spend every night with him. He could fuck her into the middle of next year for all I care. What I am angry about is that she kept it hidden from me. Her honesty and lack of guile have always been her most attractive qualities. She knows I expect complete honesty from her at all times and that I must be able to contact her at all times,\" Josh spoke with a hard voice. His anger had mellowed slightly, but he was not giving in to his father's words completely. \"After what Nik did she knows!\"\n\n\"Is it not enough that she wears a tracking ring, and you have security shadow her every move? The girl can't fart without a ten-page report being written about it,\" Joseph exaggerated to make his point.\n\n\"You don't understand,\" Josh snapped again.\n\n\"I understand more than you know. I understand that you are a domineering man who can't bear that she didn't ask your permission to spend a romantic evening with one of the men she loves. I also understand that if you don't get over it pretty damn quick, you're going to lose that love you are crowing about owning, like a two-dollar prize you won at the fair.\" Joseph had lost all patience with his petulant son. \"You are better than this Joshua and if you punish her for obeying me, there will be consequences.\"\n\n\"Will you ground me like a naughty child?\" Josh said with a sneer of derision. \"Those days have long since passed Papa.\"\n\n\"If you continue to act like a petulant child, I might keep you grounded here in Sydney for the weekend, but the consequences I spoke of won't come from me. If you punish her for obeying the leader of this family, the consequences will come from Peri, and you will see it in her eyes, and her actions each time she looks at you after that.\" Joseph's voice was deadly serious. \"Trust me, Joshua, she is safe and secure, I would never endanger her.\"\n\n\"You said that about the Battaglia,\" Josh growled, and he watched as his father lost all pretence of holding his anger in check.\n\n\"I didn't send two security men to dog her every step there. She has them both with her tonight, as well as your brother, who would die rather than see harm come to her,\" Joseph argued the point through gritted teeth. This whole conversation has surprised him, and he worried about Joshua's obsession. \"Keep going my boy, accuse everyone who loves you of misdeeds and see what consequences will ensue. I will apologise that I didn't realise you were so obsessive about controlling her life that you would react this way. I should have stepped in and separated you sooner. You are far worse than I ever was, and I almost lost everything!\"\n\nJosh was taken aback by his father's admission, and it showed on his face as he stared at his father in disbelief.\n\n\"Driven by resentment, spite, and jealousy I made some disastrous decisions in my early days as leader. Without Christo and Antonia's love and support, I could never have survived it and become the family man I am. I didn't have my father to take me in hand but so help me, Joshua, grounding is least of what I will do to you if you don't stop this!\" Joseph hissed through gritted teeth his fury with his son obvious to anyone close enough to see them in the dimly lit club.\n\n\"The only time I hadn't spoken to her before she slept was when she refused to see me during her recovery and the trial. I need to hear her voice to reassure me, that she is there and mine,\" Josh finally admitted. \"I need her to answer her phone. I need to hear her voice.\"\n\nJoseph considered his son's admission. He wondered if he had it wrong about Josh holding the leash around Peri's throat too tightly and if it was a small delicate hand that held his son's heart in a mighty grip making him irrational when he couldn't reach her. Either way, this was a lesson Josh had to learn. He shared her love now, and it was the way it had to be by tradition and family law. Joshua needed to give them space now and then to enjoy each other without intrusion.\n\n\"Have you left messages in anger that you will regret tomorrow when you see her?\" Joseph asked carefully his anger dissipating along with Josh's.\n\n\"Probably,\" Josh conceded. \"I'll call CJ,\" Josh said in a resigned tone realising there was no way to contact her now and that he had to trust his father's explanation of having no reception where they were. He felt reassured that she was safe, but he was still angry that she had not confided her plans to him despite her promise to his father.\n\n*****\n\nAs they had descended to the main deck, Peri had excused herself to go to the bathroom and left Dante to speak with the steward who was setting up a small table for the dessert course of the dinner.\n\nDante was pleased to find that much like the hidden fixtures he had installed in various rooms in the penthouse, the main salon that opened onto the back deck of the yacht was littered with interesting nooks and crannies that held fixtures to enable practitioners of bondage to enjoy the room to its fullest.\n\nPeri had gone down to the master suite to use the bathroom and check her phone. She hadn't wanted to take it upstairs to intrude on her time with Dante, but she knew that once Josh realised he couldn't contact her, he would be furious. She looked at her phone and worried further seeing that there was no reception. She hoped Joseph would explain to him about her absence so he didn't worry and would call him as soon as they returned to the dock.\n\nReturning her phone to the front pocket of her bag, she spied the boxes on the bed and wondered if she should take them up with her to rejoin Dante. She was enjoying getting to know Dante, talking so much with him as they flirted and fondled each other that she worried it would all stop once a scene began. She left the boxes where they were and hurried back upstairs feeling the awkwardness of her breasts as they bounced unfettered with each step. She pulled the dress up as she walked holding it against her chest as she padded up the stairs in bare feet and let it drop a moment before entering the beautifully appointed salon. ",
        "\"It's about that time in a meal where you ask for this,\" Dante walked toward her with a glass of chilled water. \n\n\"You know me so well,\" she smiled and took the glass drinking deeply. \n\n\"Too much wine can impair the judgement,\" he said huskily tilting her face up to his, \"and I want you to enjoy and remember every moment of tonight.\" He bent his head kissing her deeply. \n\n\"I am enjoying tonight,\" she whispered as their kiss broke. \"I have loved every moment of knowing more about you.\" She accepted another deep kiss from him enjoying the closeness she felt to him at that moment, and she tried to push her worries about Josh's reaction to her phones lack of reception and her absence from her mind.\n\n\"What is it?\" Dante asked looking at her critically sensing her thoughtful expression to be more than just her happiness at getting to know him more in depth.\n\n\"It's nothing, I'm sorry, I'm here with you, and it's wonderful,\" she smiled and tightened her arms around his waist.\n\n\"I thought you said you wouldn't lie to me,\" Dante pulled her away from him and looked into her face with a concerned expression.\n\n\"Josh calls me every night when he is away, and I had planned to call him quickly when I went downstairs, just to reassure him that I was safe and happy with you. He didn't know we would be here. My phone has no reception out here, though, and I'm worried about how he is feeling. He hates not knowing where I am since, well I think he's always been a little like that, but it got worse after I was in Canberra,\" she tried to explain.\n\nAfter all, they had spoken about he knew this would be a big issue for Josh, and it would weigh on her mind for the rest of the night, instead of letting her be here in the moment with him. Without a word he took her hand and led her to the stairs before stopping and redoing the halter neck on her dress. Seeing them climb the stairs the steward stepped forward to intercept them. \n\n\"Is there a problem?\" he asked quietly seeing the lady redressed. \n\n\"Can you take us to the bridge I need to see the Captain?\" Dante asked, but his tone made it more of a command.\n\n\"Certainly, this way Sir,\" the steward walked briskly toward a short flight of stairs and knocked on the door. He spoke quietly with the Captain before stepping back and allowing Dante and Peri to enter.\n\nAfter a brief conversation that Peri didn't understand much of, the Captain radioed another ship and within minutes she heard the ringing of a phone come loudly through the radio's receiver. She recognised Josh's voice as he picked up and barked his name into the phone.\n\n\"Josh,\" Peri said softly not one hundred percent sure it was him.\n\n\"Peri?\" His voice sounded strained.\n\n\"Josh, I'm so sorry I had no idea I would have no reception out here, and I couldn't call you earlier to explain where I was so you wouldn't worry,\" Peri blurted the words out in a rush.\n\n\"Papa explained why I couldn't reach you, or Dante, or your guards,\" he said as if weighing his words but letting her know he had tried a myriad of ways to reach her.\n\n\"Oh, Josh I'm so sorry. I would never make you worry needlessly if I could help it, I just hadn't realised there would be no reception,\" she apologised again. \n\n\"I know,\" he seemed to relax his voice becoming less stiff and formal. \"You should have told me. I think this time alone with each of us is a good idea. You didn't have to hide it, despite what Papa said.\"\n\n\"I'm sorry, I told him you wouldn't like this kind of surprise. Don't be mad at me please Josh,\" she said. \"I was just trying to do the right thing for everyone, and I would have called you earlier if I could have.\"\n\n\"I'm not mad,\" Josh sighed as if letting go of his anger. \"I was worried. You have no idea what was going through my mind when I couldn't contact any of you. I was about to call the police when Papa stopped me,\" he admitted.\n\n\"It won't happen again, I promise,\" she said softly, \"Never, ever.\"\n\n\"I love you forever and always,\" he said. \"Now go and be good to the hero, I will see you tomorrow.\"\n\n\"Forever and always,\" Peri said, and she heard the line go dead. She turned to the Captain. \"Thank you it meant a lot to us that I could talk to him tonight.\"\n\n\"You're most welcome Mrs. Donati,\" Ned bowed his head differentially. \n\nPeri left the bridge with Dante, and they walked slowly down the stairs to the salon.\n\n\"So dessert,\" Dante suggested and steered her towards the small table that had been set in one corner of the spacious room. Peri smiled as she saw a platter of fresh berries and cheeses for them to share, it took her moment to recognise the chocolate fondue pots behind it and the pressured tins she assumed held whipped cream. \"The only thing missing is sprinkles,\" Dante chuckled picking up a strawberry and biting into it. Peri lifted the lid on one of two sugar bowls discovering the missing sprinkles making them both laugh. \n\n\"Thank you, Dante, it means the world to me that you would do that, let me call Josh, in the middle of our night together,\" she said softly feeling bad that she may have ruined the atmosphere and her promise of being totally alone with him.\n\n\"I love you,\" he said simply. \"There isn't much I wouldn't do for you. It probably helps that you have relaxed now and can focus all of your attention back on me again,\" he grinned.\n\n\"I'm sorry, I just knew he would be worried and get angry. I know you all think I don't know his temper, but I do,\" she admitted. \"Now that I don't have to worry about it, I am all yours for the rest of our time here.\"\n\n\"Good because I remembered why I like being at sea so much,\" he grinned and reached around her neck to undo the halter top of her dress once more.\n\n\"Oh why is that?\" she asked curiously.\n\n\"There is always a lot of rope around to practice tying knots,\" he grinned weighing her breasts in his hands. \"I imagine these look even more beautiful bound.\"\n\nPeri said nothing but shivered in anticipation of what the night might hold. Dante noticed the shiver and felt his cock stir and begin to come to life again. He knew it would take time after the incredible blow job she had given during dinner upstairs, but he was in no hurry. He intended to take his time and savour every moment of this night.\n\n\"First dessert, if you still have room for it,\" he said, and he pulled her into a strong embrace his hands moving around her waist to undo the skirt portion of her dress. \"We won't be interrupted again tonight, you have nothing to be concerned about,\" he said softly as he let the dress float to the floor at her feet and grabbed her ass with both hands pulling her against him and kissing her deeply. \n\n\"Come and sit with me,\" he took a chair at the small table holding their dessert and guided her to the one adjacent. As much as he hated to admit it, his leg was beginning to cause him some real discomfort. He had taken painkillers before coming up from the master suite, but he knew he would need more before long. He pulled off his shirt and felt in the deep pockets of his shorts for the sleeve of medication he had brought up with him and drew it out placing it on the table.\n\n\"Are you in pain?\" Peri asked the concern clear in her expression.\n\n\"No, nothing I can't handle, but I would rather take it now than later,\" he said checking his watch. \"It's been some time since the last dose,\" he reassured her. \"Try some dessert,\" he encouraged picking up a raspberry and popping it into her mouth. He took the medication after pouring more chilled water for them both knowing how important staying hydrated would be to both of them throughout the rest of the night.\n\n\"Don't move,\" he instructed pulling his chair closer to hers after they had eaten a little and relaxed into the steady stream of small talk again. \n\n\"Can I move my arms because I may need to put this glass down at some time?\" she teased. \n\n\"You can move your arms but stay seated just where you are,\" he said and picked up a length of soft nylon rope from a hidden compartment within a small side table. Peri watched as he measured out the length of rope doubling it over on itself and tying a large loop at the half way bend. She trusted him, but she widened her eyes nervously as he slipped the loop over her head and adjusted it brushing her hair out of the way. She was surprised at how soft the rope felt against her skin.\n\nDropping the rope to hang down between her breasts he took both of her hands in his and leaned forward to kiss her. She relaxed into the kiss and felt him lift her hands to her neck, understanding she laced her fingers behind her head. Dante broke the kiss looking into her eyes to be sure she was comfortable and was pleased by the heat he saw there. \n\nSplitting the two ropes, he pulled them in opposite directions around her body twice, crossing them carefully at the back and smoothing the lengths as he pulled them tightly around her chest above her breasts. He then measured carefully down between her breasts and tied another knot before repeating the process below her breasts, tying the rope off with a small amount left loose to hang down between her legs. He sat back and considered her for a few moments.\n\nHe reached forward and pinched her nipples between his thumb and forefinger, lifting her breasts and pulling them to the side, as she whimpered softly and tried to breathe deeply into the discomfort of the ropes. His hand flashed out, and he slapped the soft flesh, first one and then the other making her gasp and bite her lip in an effort not to cry out. Enjoying the colour that appeared immediately he slapped them again, watching them bounce and settle as she whined, her eyes wide and glassy as she gazed at him.\n\n\"Stand and turn around,\" he commanded. He watched every movement of her breasts as she stood and turned her back to him. He took her hands from her sides and bent them up behind her, not uncomfortably but enough to reach the bottom circles of rope and wedge her thumbs beneath them. \"Don't move,\" he instructed. Then he released her hands and reached around her for the remaining rope that hung down from the centre of her breasts. Parting the two strands he pulled the rope back, freed her thumbs and bound her hands securing them to the rope at her back.\n\nSatisfied that she was secure, he lowered his hands to caress her ass, revelling in her submission to him. He began to spank her leaving red handprints covering her ample cheeks. Once satisfied with the colour and knowing it would cause her discomfort he told her to sit and face him again. He was overjoyed when she turned to face him sitting in the chair opposite with teary eyes. \n\nPeri blinked a small tear onto her cheek, and her lips parted softly as she whimpered and panted in her heated, painful pleasure. His eyes continued down her body slowly, pleased with the effect tying her hands high on her back had on her breasts. They were lifted and offered out to him to do with as he wished and his hands lashed out to slap them again making sure they remained coloured brightly. 'What I wouldn't give to drink from them now,' he mused and leaned forward taking one nipple in his mouth and sucking on it hard his teeth grazing over the hard pink bud that topped the milky white softness of the rest of her breast.\n\nHis mouth moved to the other breast, and his fingers took up the torment on the nipple his mouth had left glistening and slippery with saliva. He sat back again his fingers pinching and twisting the hard nubs of her nipples as he gazed into her face. He knew that the binding would make her uncomfortable but it wasn't overly constricting, and he could leave her in these ropes for most of the night if he wished. He let go of her nipples and saw the instant relief on her face.\n\n\"Now for dessert,\" he grinned, and she looked at him with widening eyes, her heat and need evident in the small whine of complaint she gave. Taking up a small spoon he painted her nipples with chocolate from the fondue, the warm thick liquid clinging to her flesh as he turned her nipples from pink to chocolate brown. He grinned as she squirmed while he added sprinkles and whipped cream which began to melt almost as soon as it touched her flesh. \n\n\"That's the most delicious dessert I have ever seen,\" he chuckled, and once again his mouth devoured her nipples cleaning them of the dessert, \"Or eaten,\" he murmured moving from one to the other.\n\nPeri was beside herself. The rope bindings and spankings had heated her arousal to a fever pitch and then he had slowed again being almost gentle as he sucked the sticky sweet dessert from her nipples. She squirmed in need as he sat back and looked at her again for a long moment before his hands flashed out again, ensuring the pain and heat of her breasts remained high. She dropped her head as she gasped holding back her cry by biting her lip and turning it into a long whine.\n\nShe had believed that his obsession with her breasts had always stemmed from his enjoyment of her breast milk, but she could see now that it went beyond that. Like Josh he got real pleasure from torturing her breasts, playing with them and even just watching them as they bounced unfettered by a bra on his chest. His hands ran from her breasts down her sides and around to curl under her ass as she sat. He pulled her forward until she sat on the very edge of the chair.\n\nDante murmured appreciatively and helped her to lean back until her shoulder blades rested against the back of the chair and kissed her deeply. He continued to assist her making sure her position was stable as he pushed her thighs apart forcing her to plant her feet on either side of the chair. His hands stroked down over her body with a feather light touch making her head swim as he once again changed the tempo and feel of his touch. \n\nHer breasts cinched between the ropes, stood out and on offer to him as she panted, making them rise and fall with each breath. In this position, her hips jutted forward lifting her open and obviously very wet cunt to him, and he trailed his fingers over it lightly, enjoying the way her lips had spread to expose her inner folds and swollen clit. He lifted one hand and smacked her lightly, directly over her clit several times in rapid succession, enjoying the way her hips rocked, as if unsure if she needed to pull away or beg for more. Turning his wrist, he cupped her sex and pushed a thick finger into her and was rewarded by the rocking of her hips up, as if wanting more as she moaned. \n\n\"So fucking hot,\" Dante growled and rose up over her to kiss her as he added a second finger and began pumping them in and out of her. He swallowed her whimpers, and his free hand came up to grab her left breast, mauling it roughly, squeezing and raking his fingers over the skin. He felt her thighs begin to tremble with her impending climax and he stepped away pulling his hand from her leaving her a heaving mess on the edge of climax.\n\n\"Please,\" Peri begged. \"Please I need more, I want more. Please, don't stop.\" She babbled begging him for release. Dante said nothing as he removed his shorts revealing his reinvigorated cock.\n\n\"Tell me what you need more of,\" he growled and took a nipple between his fingers twisting it cruelly. \"This?\" he asked watching the pain register on her face a moment before she nodded a small cry escaped her lips as she forgot about the other people on the yacht, her senses overwhelming her. \"This?\" The other hand lashed out slapping the flesh of her other breast hard leaving a dark red handprint and was rewarded with another cry as she arched her back slightly her rocking hips. \"Tell me,\" he growled.\n\n\"Yes!\" she cried out. \"I need your hands and mouth and cock. I need everything you can give me. I need to come, Please Dante,\" she begged.\n\n\"Even this?\" he spanked her cunt hard, harder than he intended to, but she seemed to embrace it as she cried out.\n\n\"Yes!\" she cried out loudly all semblance of remaining quiet because of the security men was gone. \n\nDante thrust two fingers into her and placed his thumb on her clit. He fucked her like that, his hand moving fast as he drove his fingers into her, curling them forward and scraping his thumb over her clit, buffeting it with her rapid movements. He felt her thighs tremble almost immediately and built until her whole body shook. He watched her magnificent breasts heave as she gasped and mewled in a high pitched whine. He was so hard, his cock ached for its release. She was everything he'd ever wanted in a woman, and he pushed her harder slapping at her heaving breasts and watching her arch her back even more and stiffen her mouth and eyes going wide as her climax crashed over her. He didn't relent making it last as he could see the waves roll into her body with each spasm, and she cried out again and again.\n\n\"Dante,\" Peri cried out after what seemed like an eternity. \"Please, Dante, please,\" she begged for respite her whole body shaking and wracked by spasms as he continued his assault on her. She began to float on a high so complete that she felt herself drifting away then suddenly she was being dragged to the floor, and his arms were around her. He kissed her deeply bringing her back to focus on him as she breathed raggedly her body tingling from head to toe.\n\nHe pushed her up from his body where he held her tightly kissing her and bringing her back from the orgasm that saw her eyes roll in her head. He helped her to straddle his hips, then sink onto his cock effortlessly. Rolling her hips, she moaned deeply, her voice hoarse from screaming out her orgasms until she had almost passed out. He slapped her ass encouraging her to move, and she began a slow sensual dance above him as she began to fuck him. He became mesmerised by the bounce and sway of her breasts his hands reaching out to slap and maul them as she moved. He wished he had a set of nipple clamps within reach at that moment.\n\nThe slow pace kept him from reaching his climax too rapidly and had the effect of keeping her on edge while bringing her back to reality. Once he was sure she had returned to him he sat up beneath her and pulled her still bound form to him, reaching behind her to release her hands. He knew the cinching ropes were not tight enough to cause any real discomfort, and she could endure them for some time yet, so he left them in place and massaged her wrists as she sat on his cock rolling her hips.\n\n\"Up,\" he commanded slapping her ass again. \"I think we're done with dessert don't you?\" he grinned. He laughed at her confused expression. \"I meant the fondue.\" \n\nThey got to their feet, and Peri stumbled slightly feeling still unsteady in her heated state. Wrapping an arm around her waist for support Dante wished his leg was strong enough to be sure of it so he could carry her downstairs but instead he limped beside her down to the master suite.\n\n\"Now let's see what toys you brought me to play with,\" he grinned.\n\n*****\n\n\"She'd been trying to call me so I wouldn't worry,\" Josh admitted putting his phone down and taking in his father's stare. \"Go on say it. I'm an asshole.\"\n\n\"Okay, you're an asshole,\" Joseph shrugged taking little joy in his son's contrition. \"It's good that you don't take her love for granted and that you're prepared to fight for it. Just remember Dante is not your enemy. He would have worked out how to make that call for her, despite the opportunity to ignore your presence in their relationship tonight. Would you do the same for him?\"\n\n\"I don't know, if she needed me to, perhaps,\" Josh considered the question out loud, and he knew that he would more than likely have left it to the following day. It was different, though, he and Peri had history, he was her husband. Even to his own ears, his arguments seemed hollow.\n\n\"It's time to consider how much Dante supports you and what you give in return,\" Joseph counselled. \"You are inheriting a vast and influential family with power and wealth only dreamed of by most men. Yes, there is the table, and each man there will hold part of that power with you, but only you will hold it all. It is holding it with the other men that matters, particularly Dante. It is this sharing and delegation of power, influence, and wealth that has ensured that the Donatis have remained the most powerful and influential of the twelve families.\"",
        "Josh raised an eyebrow. He had wondered how his father had become the chair of the twelve without much argument.\n\n\"The Martino's who host us this evening will be arguing over who will come and entertain us tonight. They are descended from the Savoy's originally, but the direct descending line has been called into question more than once. There is very little cohesion between the Savoy and Martino factions, and that weakens them. While we acknowledge the Medici's influence in our family lineage, we are first and foremost Donatis,\" Joseph explained.\n\nJosh had never considered that the second of the two great families in his ancestry deserved more recognition, but then they weren't born to a royal house, and he could see why that would make a difference to some. Especially after hearing Carmen's story from Peri. \n\n\"The Vitali suffer similarly in that they can trace a variety of ancestors back to several royal houses in Europe. None directly from an uninterrupted patriarchal line. Both families have a sense of their own importance and their right to be respected as the natural leaders of the twelve. Other families struggle to push the blemishes in their lines back into the closet and hide them too much,\" Joseph continued.\n\nJosh knew of the Sergi family links to Costa Nostra and the modern day Mafia. There was even talk of the Papillo family having similar skeletons in their family closet. It would be interesting to see what Peri's work on the histories shows up in time. It occurred to him why the families were so keen to have a properly researched family history done by an independent family, proof of greatness or innocence would be a boon for them particularly if ratified by the current family of the chair. He would need to look into that further when life returned to normal after all the turmoil of the holidays.\n\n\"There is nothing like that to hamper us. Nothing to be held against us, even Nik who is possibly the biggest villain of our age will not be held against our reputation. History will show that her evil deeds occurred because was she was brainwashed and then murdered by the Suebi. She will be viewed as a weak creature to be pitied. We are fortunate she was a woman had it been one of my sons our loyalty may have been called into question.\"\n\n\"I see,\" Josh said. \"So she won't be written out of the family history?\"\n\n\"No, her story will be told as a warning to others. We have never shied away from the things others tend to. We learn from our mistakes rather than deny them. I made many in my first years as chair of our family, but then I didn't have my father there to tell me when I was an ass, as I will do for you. This is one of those times,\" he paused and looked at Josh with a serious expression. \"You have to share her Josh, she is no longer just your wife, she is the Mother. You will share her not only with Dante but with each of your brothers in different ways. Ben will need her comfort and reassurance for some time yet, just as Charles needed your mother when his wife left us.\"\n\nJosh considered Peri in terms of what he knew about his mother. He could see how his Uncles, Aunts, and cousins all had a special relationship with her over any other relatives. He'd grown up in a busy, noisy, overcrowded environment in his early years and he smiled as he realised that Antonia had made it all possible, while still being available for every one of her children. She had a way of making everyone feel special to her, and he knew that is why Peri was so loved by the family already. She had that way of making everyone she spoke to feel special. He kept telling her that she shouldn't keep trying to be superwoman but maybe he was wrong; maybe she could be.\n\n\"I expect Romey and Carlo will need her counsel soon as well,\" Josh nodded as he considered his brothers and the men of the table.\n\n\"Ah yes, Louisa. He seems quite smitten. He tells me he is moving into the cottage on your property to be closer to Manuel, and I suspect Louisa,\" Joseph chuckled. \"It will be nice to see all of my sons settled with families of their own. I expect Peri will help Louisa to accept our traditions and laws,\" he said with a nod. It was more of a command than a question Josh realised.\n\n\"I'm sure she will, they are already good friends,\" Josh smiled.\n\nJoseph noted that Josh's whole demeanour had changed after his phone call from Peri. He accepted Josh's words that it wasn't the sharing, it was the knowing where she was and that she was safe that drove him to fits of rage. As long as Peri managed to make sure she made time for their private relationship he knew Josh would be able to put aside his jealousy. Or at least he hoped that would be the case.\n\nThey were interrupted by a pretty young man who led a young woman on a leash toward them. The exclusive club was a voyeur's delight as dominants paraded their submissives and slaves in various costumes. Sexual acts seemed to occur randomly and at will in small purpose built alcoves. The young man who came to sit with them introduced himself as Alfonzo Martino, assuming they would know that he was the heir apparent. \n\nJosh quickly hid his dislike of the foppish young man and the way he treated the girl on the leash. He smiled at the introduction inviting him to sit with them. He knew this was the time for him to step up and start making those connections with the other future leaders of the twelve.\n\n*****\n\nPeri lay in the centre of the oversized bed bound and at Dante's mercy completely. Her hands had been bound to the headboard above her head slightly wider than her shoulders. He placed several pillows under her lower back before locating hidden nooks in the ceiling and pulling her legs wide and up by a rope that seemed to be lowered on some sort of pulley system hidden in the ceiling.\n\n\"So fucking beautiful,\" Dante growled his breath ragged as the flogger he had been using to colour her body hung limply from his hand. He crawled over her and licked a tear from her cheek before kissing her deeply. \"You are my every fantasy come true,\" he murmured rubbing his hard cock against her wet cunt without penetrating her. \n\nHe kissed down her neck and over her breasts his teeth tugging at the clamps that held her nipples in a tight grip. He dragged the chain that ran between them as he kissed down her body and over her abdomen. He shifted then kneeling up between her legs to kiss down her legs from ankle to inner thigh teasing at her clit with a light flutter of his tongue that had her lifting her hips and letting out pleading words to interrupt the passionate whimpering and sobs he so enjoyed. He moved to the other ankle and kissed down her leg to once again tease the swollen little pleasure nub that made her beg him to fuck her.\n\nThis time, he took his time revelling in the taste of her along with the ecstatic cries that her pleading words became. He pushed a finger into her feeling the added tightness and unusual feel of the anal beads he had spent time forcing into her ass. He knew when he finally gave in and fucked her it was going to feel even more amazing, and he groaned taking her clit between his teeth and tongue whipping it as he added another finger to her sopping wet cut and fucked her with them.\n\nHer legs shook in their tightly restrained position rattling the pulleys in the ceiling above, and he felt the stiffening of her body as it arched in climax again. Unable to deny the now painful ache in his cock any longer, he crawled up over her, ramming his cock into her velvety wetness and groaning deeply as he came up onto his knees, pulling the clamps from her nipples at the same time in one fluid motion. He saw her eyes roll in her head but he reached forward to grab her throat forcing her to come back to him with a dazed expression, as her body seemed to jerk and spasm with each thrust now and she keened in a high pitched wail. \n\n\"Fuck!\" he roared unable to hold himself in check any longer, and he pulled from her, spraying jets of come along her body to splash on her face and into her wide open and panting mouth. He released his grip on her then and collapsed onto the bed below her legs listening to her soft whimpering continue to ebb and flow as he slowly pulled the beads from her ass, entranced as her anal muscle opened and closed around each one.\n\nPeri floated in some unknown place. She was blind and deaf as she floated. All she had was the painful pleasure of the sensations that wracked her body. She felt him slip away from her as she floated higher and higher into the scorching heat of the inferno that gripped her. She was floating so high she thought she could touch the stars, then she was falling slowly into blackness, it was comforting and cool, and her body quivered in pure pleasure before the darkness finally enveloped her.\n\n*****\n\nPeri woke and stretched. She rolled over to find Dante watching her. \"Good morning,\" she smiled.\n\n\"How are you feeling?\" He asked nervously.\n\n\"Wonderful,\" she smiled and reached up to touch his cheek. \"Last night was amazing on so many levels.\"\n\n\"I thought I might have overdone it when you didn't wake as I cleaned you and put you to bed,\" Dante said the relief obvious in his features.\n\n\"You took every last bit of energy I had,\" she laughed. \"I couldn't have opened my eyes if I tried.\"\n\nHe looked sheepish but chuckled lightly with her. \"You are absolutely the most amazing woman, my love.\" He leaned down to kiss her. \"Now I'm torn about whether to have breakfast before or after I fuck your brains out again.\"\n\n\"What you did to me last night gives new meaning to that phrase,\" she grinned. \"I hope you're not planning to send me off in a comatose state when your brothers arrive for the fishing trip.\"\n\n\"I hadn't but the more I look at you, the more appealing that idea becomes,\" he kissed her again deepening the kiss and moving against her so she could feel his instant arousal at the thought.\n\n\"I might need breakfast first to give me some energy then,\" she said breathlessly as the kiss broke. \"But I could maybe relieve some of that pressure you have building there,\" she murmured softly into his neck and began kissing her way down his body hoping he was not serious about another session like last night before she left today.\n\nDante rolled to his back and groaned as he felt her lips against his cock. She was insatiable, and he was in heaven. He craved her attention like he never had with anyone else. He hadn't slept last night thinking about everything they had done and talked about the night before. The more he knew her, the more he wanted her. He didn't care that he had to share her affections with Josh because it was enough that she loved him the way she did, and there would be many more nights like last night in their future.\n\nHis hand twined into her hair as he propped himself up on pillows to watch her suck and ultimately swallow his cock feeling nothing but the pure pleasure of possessing this incredible woman.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "bondage",
        "spanking",
        "submissive",
        "yacht",
        "ropes"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-tables-ch-26"
}