{
    "title": "The Fall Ch. 02",
    "pages": [
        "The trips to hospital sucked the life out of Cyril. No matter how chipper he was in the morning, the drive into Toowoomba, the waiting around, and the young, fit, busy doctors drained him.\n\nToday the oncologist had made the fatal mistake of telling Lydia she should quit smoking. It was dangerous for her health, and Cyril's.\n\n'You should mind your own business,' she'd snapped. 'Not doing so will be dangerous to your health.'\n\nCyril had laughed. He didn't like the doctors. He didn't like many people who were on the government payroll, as a matter of fact, but he really didn't like the doctors. They infantilised him. Rebuked him for not eating better, and for drinking too much alcohol. Cyril often asked them why he should quit smoking, why he should drink less. The answer 'to extend your life' was met with disgust. What good was a long and boring life?\n\nThey stopped in to see Dylan on the way back home. Cyril sent her in. He said he was going to wait in the car.\n\n'I'll be back in five,' she said.\n\n'Take your time.'\n\nShe left him parked in her Hyundai and went up to the front counter. The man at the counter peered past her, at her car, and asked if she was here to have her brakes looked at.\n\n'I'm actually here to see Dylan. He does some work, outside hours, for my Uncle. I need to pay him.'\n\nThe man looked out at her car again. 'It's up to you, but I'd be getting those brakes looked at. Sounds like you've pretty much worn through the pads.'\n\n'I probably have.'\n\n'You realise you won't be able to stop...?'\n\nShe shrugged. 'Gotta die somehow.'\n\nHe gave her a look of horror, but went to find Dylan. Lydia flicked through her emails on her phone while she waited. There was more work waiting. A request that an article she submitted be condensed by two hundred words. Artwork for a journal that had gone to print the week prior. No promises of payment. Shit. She was getting broke.\n\n'What are you doing here?' Dylan asked in surprise as he wiped his hands on an old rag.\n\nLydia stuffed her phone back into her bag. 'Cyril wanted to drop by and pay you.'\n\n'Really? I told him to fix me up next week.'\n\n'Old people. What can you say?'\n\nThey stared at each other, not knowing what to say not only to old people, but to each other.\n\n'You know, Michael was saying your brakes aren't sounding too good,' Dylan said eventually. 'I have to agree, they sounded pretty bad the other week. You want me to have a look while you're here?'\n\n'Don't bother. I don't have the money to fix them.'\n\n'Okay, well how about you come around tomorrow morning and I'll have a look at them at my place?'\n\n'Doesn't change the fact I can't afford it.'\n\nHe sighed. 'Consider it a goodwill gesture, hey? If you die, then your Uncle will bail me up to do even more work for him.'\n\n'Sure,' she agreed. 'Have a look. But I'll pay you back for anything you do, as soon as I get some money in.'\n\n'I'll see you tomorrow. Ten?'\n\n'Ten's good.'\n\nShe went back outside to her car. Cyril was sleeping. She didn't wake him, she just got in and drove back home.\n\nThere was mail in the mailbox for her. They only had mail delivery three times a week here, and the service was slow at best. Today she received a cheque for eight hundred and twenty dollars and an eighth of hydro. All in all, not bad.\n\n'Who's sending you mail?' Cyril asked, waking from his slumber.\n\n'Clients.'\n\n'They paying you?'\n\n'One did. Don't worry, I've paid the rent on my flat.'\n\n'The bank was ringing this morning. I expect it's about your credit card bill.'\n\n'Probably,' she agreed. 'I've made the payment. Don't stress, it's always like this. Isn't it a cycle of ups and downs with cattle farming, too?'\n\n'Yes, but I always had money from driving. I worry about you, Lydia. It's too hard for a young woman on her own these days. Property prices are ridiculous.'\n\nShe agreed with him. Property prices, paying off undergraduate and master's degrees, her drinking... it added up. She really needed to sit down and sort out her finances but truthfully, she was too scared to see how bad things really were.\n\nThey went home, and Cyril went to lie down. Lydia checked the cattle were still cantankerous arseholes, showered, dressed, and headed back to Oakey. She didn't want to run into anybody tonight. She just wanted to have a few drinks in peace.\n\n~~~~~~~\n\nA lot of people disliked drinking alone at pubs, but Lydia preferred it. She wasn't there for conversation, she was there to drink. She didn't want anyone to buy her a drink or talk to her. She sat either at the bar, talking to the bartender, or outside, so she could have a cigarette and people watch.\n\nFriday night was busy. People came here with their families and friends and ordered from the bistro. She caught a glimpse of Dylan at the servery with two men who by physical characteristics were probably relatives of his, and for a second she worried that he might have seen her. But he turned away as abruptly as she saw him, and she returned to drinking.\n\nShe finished her drink, and before she could order another one, the bartender placed a lime and soda in front of her. She sipped it in disgust.\n\n'I'm not that drunk, am I?' she asked him.\n\nHe leaned in close. 'You're working your way there, and there's a copper sitting at the table behind you who's keeping a close eye on you. If you drove here, you might want to think about an alternative route home.'\n\nThe back panel of the bar was mirrored. Lydia glanced in it as discreetly as she could. She didn't recognise the man the bartender was referring to. She wouldn't have picked him as a cop and hell, he may only be interested in her safety, but that wasn't a risk she was going to take.\n\nFuck.\n\n'Thanks,' she said to the bartender, sliding off her stool. 'I might go and get something to eat.'\n\nThe bistro was crowded but not quite full. The average age of the patrons was again somewhere around fifty. What was it with all the old folks in these country towns?\n\nShe spotted Dylan and his relatives and went over.\n\nAll three men looked at her with surprise as she pulled up a chair.\n\n'Dylan, I'm really sorry,' she apologised. 'But I've been drinking in the bar and there's a cop watching me. I think if I get in my car he's going to breath test me.'\n\n'He'll probably write you a ticket for driving an unroadworthy car, too,' Dylan pointed out. 'Do you want a lift home?'\n\n'Do you mind?'\n\n'Not a problem. You had dinner?' he pushed his plate over.\n\nLydia glanced down at the mountain of chips. Her ex-husband would have polished them off by now. She remembered what her Uncle had said about him losing a lot of weight.\n\n'No, but I'm fine. I'll wait in the bar,' she said. 'I don't want to mess with your evening.'\n\n'Stay here,' Dylan argued. 'This is Rob, this is Brett. They're my brothers. They're both married with kids, so they'll be heading off as soon as they've eaten.'\n\nNeither Rob nor Brett seemed very impressed with her. She supposed that was reasonable. It wasn't a good look to rock up to a man and tell him you'd been planning on driving home drunk, but you'd attracted the attention of a police officer and had decided to err on the side of caution.\n\nThey made small talk about children and cattle and Cyril. Lydia sipped at her drink and glanced at Dylan when he spoke. He looked clean and tidy for the first time, and it made a big difference. He wasn't so bad looking when his facial hair was tidied up, he'd brushed the hair on his head, and he was in clean, unstained clothes. He smelt nice, too, certainly better than he had at lunchtime today.\n\nThe brothers said their good-byes and left. They looked at her suspiciously, warningly, as they went. She wondered if they thought she was a prostitute or addict.\n\n'Do you want another drink?' Dylan asked her.\n\nLydia glanced at the bar. It was getting crowded. 'No. I didn't realise it would be this busy. You?'\n\n'I'll take you home.'\n\n'Okay. Just let me get some stuff out of my car, okay? The boot doesn't actually lock properly.'\n\nThey went out to her car. She got in on the passenger side, as it was closest to the driveway, and dug out a couple of joints from the centre console. She stuffed them in her cigarette pack, locked the car, and put the keys in her handbag. Out of the corner of her eye she could see the policeman watching her. She owed both the bartender and Dylan, big time.\n\n'Time to go, huh?' she said to Dylan. 'Where's your ute?'\n\n'I bought the Charger, not my ute. It's over here.'\n\nThe car was obviously a half-finished project car. The panels were different shades of gray, the back end was dented, and there were towels over the front seats to protect the driver and passenger from the blistered vinyl.\n\n'And you think my car's unroadworthy,' she joked as they climbed in.\n\n'Mine starts and stops.' He turned the key in the ignition. 'See?'\n\n'You've only proven that it starts.'\n\nHe laughed. 'I promise you it will stop, okay?'\n\nThey drove back out to the Warrego Highway. The night was warm and dark. Lydia, in her jeans and strapless top, was sweating. The pub had been deceptively cool.\n\n'Do you mind if I smoke?' she asked.\n\n'Not at all.'\n\nShe lit a cigarette. Lent her head against the panel. Looked over at Dylan. 'You scrub up well.'\n\nThe compliment embarrassed him, and he was lost for words. She didn't mind. It was kind of endearing the way he reacted, as if he didn't actually believe what she was saying were true. In an odd, hick, kind of way, he was growing on her.\n\n'Were you expecting to see a woman tonight?' she asked, curious to see if he had his sights set on someone.\n\n'No, just my brothers. We try and catch up every few weeks for dinner. It can be hard, though, because they're all married.'\n\n'Do you belong to one of those families where everyone is married and settled down by their mid-twenties?' she asked.\n\nHe nodded. 'Yep. I broke the mould by marrying a lesbian and then getting divorced.'\n\n'She's a dyke? Ouch. How was the sex?'\n\nHe flushed red. 'Nearly non-existent.'\n\n'That must have done wonders for your self esteem.' She remarked. 'I hope you enjoyed your bucks night. I hope you saw more titties and pussy than you could have thought possible.'\n\n'I didn't have one.'\n\n'Why not?'\n\n'She - Michelle - asked me not to.'\n\n'Christ. That's a bit rude, isn't it? Did you know she was a lesbian? Or did she tell you she was bi?'\n\n'I thought she was straight. She only came out after we split up.'\n\n'How long were you together?'\n\n'We were together seven years in total, married for five.' He shrugged uneasily. 'What about you?'\n\nLydia had met Pete when she was twenty-four and married him at twenty-six. They were separated within a year. Pete wanted someone more calmer, more stable. Someone 'motherly'. In short, he wanted commitment and babies, but not with Lydia, so despite being married, he went out and found that someone else.\n\n'Did it have anything to do with your drinking?' Dylan asked.\n\n'I didn't drink then. I even quit smoking for a while.'\n\n'So it was just an excuse? He fell in love with someone else and needed to have an excuse for it?'\n\n'I suppose so. It was a very soul-destroying experience. I found out I was pregnant the day I found out he was cheating. I ended up having an abortion. He guilted me into it. It was complete shit. I should have kept the baby.'\n\nHe looked over at her not with horror, which she'd expected, but sympathy. 'I understand that. I stayed in a bad marriage for years because I didn't know any better. No one understood why I left Chelle. Her family think she's turned to women because I let her down. They don't say it directly, but the insinuation is there, you know?'\n\n'So why did you end up leaving her?'\n\n'We had an argument over something stupid and it bothered me. I'd had enough.'\n\nShe asked what the argument was over. She was flabbergasted when he told her it was masturbation. He turned an interesting shade of scarlet, but didn't comment.\n\nThey veered off onto a side road. There were no street lights, and they were guided only by the high beam of the headlights, but Dylan seemed to know the way. They were travelling at speed, God knows how fast, but it was fast. Very fast. And as much as she tried to make out the road in front of her, Lydia could barely see a thing. She was too scared to smoke, and too scared to talk. What the hell was he doing? Trying to get them killed?\n\nAll of a sudden, he slammed on the brakes. There was a screeching of tyres that seemed to last an eternity, and when the car finally stopped, the smell of burning rubber filled the air. Lydia's heart was racing.\n\nThey sat in silence for a minute.\n\n'I guess I've just proven that my car stops, too,' he teased.\n\nThat fucking bastard.\n\n'You arsehole.' She replied, laughing weakly. 'You fucking asshole. I nearly shat myself.'\n\nDylan had the good grace to look apologetic. 'Sorry. I didn't mean to scare you.'\n\n'I thought you were trying to commit suicide with me on board.'\n\nHe laughed. 'Nah, I wouldn't do that.'\n\nShe buried her face in her hands and shook her head. She wanted to cry with both delayed fear, and amused laughter, but managed to hold back the emotion. Instead, she reached into her bag, for her pack of smokes. 'Oh well. It's a nice night. Want to pull over and have a smoke with me?'\n\nHe parked the Charger on the side of the road. With the lights off, the sky was magical. You could see a million stars shining in the night sky. It was beautiful out here. Lonely, maybe, and it had a way of forcing her to stop and reflect on her life, but beautiful.\n\nThey shared the first joint, passing it between them in the front of the car. She wondered when he was going to make a move on her. She wasn't going to stop him when he did.\n\n'There really aren't any women in your life?' she asked.\n\n'Nope. Any men in yours?'\n\nShe laughed out loud at the idea. 'No. I keep thinking about romance novels about the country. It's supposed to be easy to find a partner.'\n\n'You want a partner?'\n\n'I want sex.'\n\nHe choked on the joint, though whether from the grass or her comment she wasn't quite sure. When he'd regained his composure, he stubbed it out.\n\n'So how many women have you slept with since you separated?' she asked.\n\n'None.'\n\n'None?'\n\n'None. Do I ask you these questions?' He asked, sounding annoyed.\n\n'You could if you wanted.'\n\nHe snorted.\n\n'Really,' she said. God, he was slow. Really, really fucking slow. What was he waiting for? Her to strip them both off and climb on his cock?\n\nDylan sighed impatiently. 'Okay, how many men have you slept with since you split with your ex?'\n\n'None.'\n\nHe muttered 'for fucks sake' under his breath and started the car. He didn't believe her, and the prodding was bothering him. Embarrassment, probably, and a sledge to his male pride. He'd told her he'd been married to a lesbian. That he wanted children with her. He was probably hurting.\n\nThey drove back onto the highway. Lydia smoked a cigarette and waited for him to say something. Perhaps she should speak first. Apologise. She hadn't meant to upset him.\n\nAll of sudden, Dylan spoke. 'I don't like discussing sex because firstly, you're hot, and secondly, I haven't had a lot of sex,' he said. 'I've slept with two women. One, I spent an hour with. The second one made me beg and plead for it. It's not a nice feeling. It's not actually something I look at and think 'I really enjoyed it'. I cum too quickly. It's all over in a few minutes. I've never had a blow job. Never given oral sex.'\n\nThey drove the rest of the way home in silence. He pulled up beside Cyril's house and waited for her to get out.\n\n'Are you circumcised?' she asked.\n\n'What? No. Is there anything you won't ask?'\n\n'Have a good shower tomorrow. Clean underneath your foreskin. I have no idea who started this anti-circumcision trend, but I'm guessing it wasn't a woman.' She picked up her handbag. 'Pick me up at ten tomorrow. I'll fix up that 'never had a blowjob' problem. That's just fucking sad.'\n\n~~~~~~~~~~\n\nDylan pulled up outside Cyril's house at five minutes to ten. He didn't believe for a second she was interested in sex, especially now she was sober, but he'd washed thoroughly anyway.\n\nHe didn't know what to make of Lydia. She was blunt. She drank too much. She asked personal questions. On the other hand, she was attractive, and on reflection, she didn't ask questions with the intention of belittling him. He was too defensive. The walls were up. He wanted sex and intimacy, but had a fear of exposing himself, of getting too involved.\n\nHe needed to settle down. She didn't want a relationship, but she might actually be interested in a bit of fun. Maybe it would be nice, for a change. Something strings free, without any expectations.\n\nCyril was awake and when he saw Dylan, he mentioned he was going to be repairing some fencing. He wanted to know if Dylan could pick up the old fencing posts and wires and take them off for landfill.\n\n'You sure you don't want a hand?' Dylan asked.\n\n'I would, but Lydia's mentioned you need to pick up her car. I'll have a go at it myself.'\n\nCyril's skin was pale and clammy, and his hair was thinning. He was ageing before Dylan's eyes. Growing weaker. Soon, he wouldn't even be able to suggest doing these jobs himself.\n\n'I'm happy to help,' Dylan repeated. 'How much needs repairing?'\n\n'Only a small section, about ten metres.'\n\nIt was closer to twenty metres, but Dylan was prepared to cut the old man some slack. He was trying. God knows Dylan knew that was like. Michelle had come around this morning and wanted to talk about the property division. She was getting impatient. She wanted him to sign over the property. She was prepared to let him keep the cattle and farming equipment. He'd very nearly agreed.\n\nWhat was the fucking point, really? He was living in a goddamn shed, being torn in every which way and never having anything to himself. He wanted peace. Quiet. He could start again. What was it about that particular piece of land that was so important to him?\n\nHe showed Lydia how to fence. She was a quick learner, and not afraid to get dirty. She did as he asked, when he asked, under Cyril's watchful gaze.\n\nWhen the fence was finished, they went back to the house. Cyril made Dylan a coffee, which he didn't particularly want, while Lydia had a quick shower.\n\n'What do you think of her?' Cyril asked.\n\n'Nice girl.'\n\n'She looks after me well. Never complains.' Cyril looked him straight in the eye. 'Are you sleeping with her?'\n\n'No.'\n\nIt wasn't a lie. Yet. Maybe it would never be a lie.\n\n'I wouldn't mind if you were. As a matter of fact, it might actually be better if you did. A lot of men look at her. Talk about her. It's not safe, her being as drunk as she gets. It's only a matter of time before someone takes advantage of it. They wouldn't dare touch her if they knew she was with you.'\n\nDylan could swing a punch, and it took a lot to take him down. They weren't skills he'd intentionally gone out of his way to foster, but having four brothers and having grown up as the fat kid, he'd had to learn to defend himself. There had been a few stupid men who hadn't realised this, and had taken a swing at him.\n\nLydia emerged from the shower wearing a pair of black shorts and a translucent white shirt. The outline of her bra was visible underneath the thin material. So were several tattoos. Cyril gave Dylan a pointed look. Dylan ignored it.\n\n'Ready to go?' she asked him.\n\n'Ready to go.'\n\nHe'd taken his ute, having correctly guessed that the visit to Cyril's place would come with some sort of request to work. Unlike Lydia, who'd had a shower, he was hot and sweaty and his hands were filthy. He sprayed a liberal amount of deodorant under his arms before he got in the car.\n\nBen moved to the middle of the seat, and Lydia slid in beside him. The dog squirmed into a comfortable position and laid his head on Lydia's leg. Ben liked her. Dylan liked her, too, and it was kind of a pity he couldn't just casually rest his head two inches from her crotch.",
        "'I'm sorry about last night,' Lydia apologised. 'I didn't mean to make you uncomfortable.'\n\n'No worries. I just wasn't expecting that level of questioning.'\n\n'I'm a nosey person.'\n\n'It doesn't matter.'\n\nShe patted Ben's head. 'Can I ask you something?'\n\n'Why not? You've already asked the worst.'\n\nShe grinned. 'It's actually a follow on from last night. Have you really not had a blow job?'\n\n'Oh fuck.' He shook his head in disbelief. 'Is it really that hard to believe?'\n\n'Yeah, it is. Didn't you ever nudge her down? You know, during foreplay?'\n\n'Nope.'\n\n'Why not?'\n\n'Because we stopped with the foreplay when she told me if I was going to have sex with her, I had to make it quick. She clearly wasn't interested in me. I tried to hurry things along as best I could.'\n\n'You said you had sex with a pick-up. Did you enjoy sex with her?'\n\n'No. I was really nervous. And it was hard to penetrate her. It actually really hurt the next day.'\n\n'Did you orgasm?'\n\n'Yeah, eventually. We'd been drinking, and between that and the condom, it took a while.'\n\nDylan tried to respond to the questioning as impassively as he could. He asked her a few questions. Do you actually orgasm? Do women genuinely like sex? Does penis size matter? She replied yes, yes, and not unless you're exceptionally big or small. The answers surprised him.\n\nHe asked her why she got implants.\n\n'Because I was trying to please a boyfriend,' she said. 'I had small boobs and he made me feel bad.'\n\n'Why do you end up with men who make you feel bad about yourself?'\n\n'Probably the same reason you ended up with a woman who made you feel bad about yourself. Loneliness. Not having a comparison point. Not realising how unhappy I was, or rather, not wanting to accept how unhappy I was. I wanted a dream. I wanted to be a famous author and have a brood of kids.' She reached for her cigarettes. 'I suppose that's the problem when you treat men like a backdrop. You want them to be part of your picture. You don't ever stop to wonder what future they might be picturing, and how you'd fit into it.'\n\nHe understood.\n\nThey drove into Oakey. It was lunchtime and she asked if he wanted to eat. He did, she did, so they both did. They went to a cafe that also served as a takeaway and ordered. She paid for his lunch, which was a novel experience.\n\n'I've never had a woman buy me lunch before,' he commented, as they waited for their meals.\n\n'Really? It's probably the least I can do, given the trouble I'm putting you too.'\n\n'You're not any trouble.'\n\nThat was a definite lie. She was definitely going to create trouble, but she was dressed in an attractive package, and she was good company, so he figured she was worth it.\n\n'Well, I bet you wish you'd ordered the extra bacon on your burger,' she grinned.\n\nHe always regretted not ordering the extra bacon, but it had more to do with being conscious of his weight than his budget. He'd always been fat, but marriage had made him balloon. In hindsight, he'd been trying to eat the unhappiness away.\n\nLydia was a surprisingly healthy eater. He would have picked her for the girl that would eat a greasy burger and chips, but she'd ordered a chicken salad.\n\n'So how does the running and the salads fit in with the drinking and smoking?' he asked curiously.\n\n'I run because it reminds me not to drink too much. I eat salad because I like it, and the same goes for drinking and smoking.' She smiled at him. The crooked teeth were becoming beguiling. 'Don't worry, I'm stereotypical enough to both eat my salad and then start eating your chips.'\n\nShe held true to her promise.\n\n'Can I ask you something personal about your divorce?' he asked, as he pushed his plate into the middle of the table so she could better attack his fries.\n\n'Sure. What do you want to know?'\n\n'How did your financial settlement go? Did you argue? Did you give up something you wanted to make it all go through?'\n\nLydia dipped her chip into the container of sauce. 'We actually didn't have a hell of a lot of assets. We'd bought a house a little over a year before we separated, and we ended up selling it for five thousand less than we'd paid for it. We probably could have held onto it longer to see if we could get a better price, but he was keen to move in with his girlfriend, so we took the first offer we got. Once we'd paid the real estate agent, and finalised the loan repayment, there wasn't a lot left of our deposit.'\n\n'Do you still speak to your ex?'\n\n'Hell no. The last time we spoke was when the divorce was finalised. He made some smarmy comment about wishing me the best, and I told him to blow a goat.' She popped the chip in her mouth. 'Why do you ask? You having troubles with your ex?'\n\n'We can't agree on percentage splits and who buys who out.'\n\n'What does your lawyer say?'\n\n'He sees me coming and I swear he starts deciding which new Mercedes to buy.'\n\n'Ok, then tell me, what is it you want, and why is it so important to you to get it?'\n\nDylan tried to explain it as best he could. He wanted the land because he'd owned it before they were married. He liked it. He'd buried his old dog by an elderly gum tree, and there was a creek running through it that was cool and clear and perfect for swimming. The irrigation license was in his name. The cattle were in his name. He was the one that had done all the hard work.\n\n'It sounds to me like she wants to hurt you,' Lydia said. 'Have you asked her why?'\n\nHe'd always assumed the same thing and he had asked Michelle the question, but his tone had been aggressive and Michelle had shut the door in his face. Lydia's was more curious, more probing. If Lydia was asking the question of Michelle, it was probably because she wanted to the genuine answer, not because she was fed up and angry.\n\n'I have, but probably not in the best way,' Dylan conceded.\n\n'Maybe you should try writing to her. Offer a better pay out in exchange for being the one who gets to stay.'\n\n'It would never work.'\n\n'I could help you, if you want. I'm pretty good at writing stuff.'\n\n'No. I'm not letting you near this.'\n\nShe shrugged. Pushed the plate away. 'It's up to you. You want to show me this property? It's bloody hot. We could go for a swim.'\n\n~~~~~~~~~\n\nThe property was amazing. She understood why he wanted to keep it. There were fields of forage crops, two herds of cattle, and an amazing wooded around that surrounded the shed. It was different to Cyril's place, more shaded and better fenced. He'd obviously put in a lot of work.\n\nWhen he'd said 'I live in a shed', she'd mentally envisaged a small, residential shed, but what he lived in was a massive barn, a third of which had been converted to living quarters. There was a bathroom, kitchen and living room downstairs, and she assumed that the steel ladder leading to the second story also led to the bedroom. The other two thirds were sectioned off, and a quick peek showed a tractor, a lot of car parts, fertilisers and sprays, cattle feed and other miscellaneous bits and bobs.\n\n'You want a drink?' he asked.\n\n'A drink or a drink?'\n\n'A beer or a Coke?' he clarified.\n\nShe drank neither.\n\n'I'll have a glass of water.'\n\nHe poured her a glass of water from the tap. It was cool and had the same taste as the water she'd drunk from his esky on the first day they'd met. It was definitely tank water.\n\nLydia sat on his couch, her feet curled up underneath her. The place smelt like grease and hay, but it was clean. He had a massive television. She wondered if sat here at night and watched porn, jerking himself off, or if he went to his bedroom to do it. She remembered his embarrassment at admitting it was an argument over masturbation that had finally killed his marriage. No wonder he'd left her. He hated being humiliated. Most men did.\n\n'I'll let your car cool down a bit and have a look at it,' he said, sitting beside her with a beer in his hand.\n\n'Thank-you. I appreciate it.'\n\nShe shifted so she was facing him. He was staring straight ahead, fiddling uneasily with the tab on his beer. He didn't know what to do with her. No wonder he'd only slept with two women. A more confident man would have had her in the bedroom by now.\n\nThere was nothing about him that was sexually aggressive. Maybe he was insecure. Actually, that was probably it. A few bad sexual experiences coupled with an overall lack of experience would have left her pretty anxious. She'd have to make a move on him if anything was going to happen.\n\nLydia put her water on the floor. She plucked the can of beer from Dylan's hand and put it next to her drink. She straddled him, and ran her hands through his hair. Her ex had been losing his, and spent a lot of money trying to get it back. Dylan certainly didn't have that problem.\n\n'You don't need to do this,' he said awkwardly.\n\nShe kissed him. 'I want to. Do you?'\n\nHe nodded slightly as he reached out to embrace her. 'Of course.'\n\nHe was a surprisingly good kisser. Her crotch tingled and a feeling of longing spread through her. She wriggled out of her shirt, and directed his hands to her breasts. He took the hint, and fumbled with her bra, eventually managing to pull it off.\n\nThe surgeon had earned his money with her tits, and Dylan definitely appreciated it. He put one hand on her lower back to hold her close, and used the other to fondle her nipples as he kissed her, his tongue probing inside her mouth.\n\nLydia tugged his shirt up and over his head. All of her previous partners had been thin, bordering on skinny. Pretty boys, with hair-free skin and tatts, who knew they looked good. Dylan was very different; broad, strong, overweight and free of tattoos. There was hair on his chest and stomach, and he didn't like her taking too much of a look at him. He kissed her in a move to distract her.\n\n'Lying down or standing up?' she asked.\n\nHe was confused. 'What do you mean?'\n\nShe sucked gently on the skin on his neck. 'What position do you want to be in?'\n\n'Oh, that.' He leant back to give her better access to his neck. His hands moved back to her chest. 'Not yet. This is nice.'\n\nLydia had a horrible thought. She stopped kissing his neck. 'Do you have problems getting hard?'\n\nThe look he gave her was incredibly curt. It was the same look he'd given her when she told him she hadn't slept with anyone since her separation. It was disbelief, annoyance and dismissal all rolled into one, and it was enough to make her realise why he was having problems with his ex.\n\n'No,' he said irritably, grabbing her hand and pressing it against his erection. 'I just like kissing you.'\n\nThey locked gazes. He shrugged, as if he'd said all that needed to be said. Lydia wondered if he actually liked her. He seemed to, most of the time, but that look on his face...\n\nBen licked her foot. She jumped, and pulled her foot away. Ben barked excitedly and jumped onto the couch.\n\n'Three's company,' she told the dog.\n\n'Come to my bedroom,' Dylan said. 'He can't get up the ladder.'\n\nThey climbed up to his bed. She'd been dubious about the stability, but the platform was free from any wobbles. His bed was unmade and it smelt of him. There was a tablet and a box of tissues on the bedside table. This was where he got himself off, not downstairs.\n\nShe wriggled out of her shorts and underwear, and lay on the bed. He did the same. He leaned over her and kissed her, his cock pressing against her hip. He was neither too big or too small and he was, as he'd said, uncircumcised.\n\nNo one had ever touched her the way he did. He took his time exploring her body with his mouth and his hands, as if he'd never been given this much free reign before, and didn't expect to again.\n\n'What turns you on?' he whispered.\n\n'This.'\n\n'Really?'\n\nShe moved his hand between her legs, and parted the dark curls of her pubic hair to give him access to her cunt. It was the one area he'd been too timid to touch. His hands were rough but clean, and she moved them over her clit in a slow, rhythmic pattern.\n\n'If I kept doing this, would you orgasm?' he asked.\n\nShe nodded.\n\n'Good,' he said.\n\nDylan was a good student. He paid attention to what she was showing him. Experimented with rhythm and pattern, while watching closely for her reaction. Kissed her when she indicated she wanted to be kissed, and gently sucked on her nipples when she pressed his head down to her chest.\n\nIt took her a while to orgasm. It always took a while with a new partner. Sometimes it took too long, and they'd give up trying, but Dylan was patient. He obviously saw making her cum as some sort of personal achievement, because when she did climax, he looked thoroughly pleased with himself.\n\n'Thanks for that,' she grinned, kissing him.\n\n'That was amazing. Can I do it again?'\n\n'Not now.' She pushed him onto his back, moved his legs apart, and sat in between them. 'Show me how you jerk off.'\n\nHe reached down and wrapped her hand around his cock. He placed his hand over hers and began to slide it up and down. He was rough with himself. There was a lot of pressure and a lot of fast movement.\n\n'Okay, got it,' she said, moving his and her hands away. 'Lie still.'\n\nLydia had doubted his claims that he'd never had a blow job, but there was something about the way he reacted to her mouth sliding over the head of his erection that made her suspect he may have been telling the truth. He squirmed and waved his hands around uselessly, not sure what to do with them, until she swatted them away. She wasn't going to give him any ideas that it might be okay to hold her down. She hated that.\n\n'You need to stop,' he ordered, his hands returning to her shoulders. 'Lydia, please. Stop.'\n\n'Am I hurting you?'\n\n'No, but I'm going to....' he trailed off.\n\nOrgasm. He was going to cum. She'd figured that. He'd been making the right sort of noises and movements.\n\n'That's the idea,' she argued.\n\nShe bent her head down and took him in her mouth. He didn't stop her this time. She stroked his balls with her free hand, and that was enough to finish him off.\n\n'Oh Jesus, Lydia, Lydia, Lydia,' he groaned, arching his back. 'Oh fuck. Fuck. Fuck.'\n\nHe was trying to stay as still as he could, which she appreciated, but it must have been a pretty good orgasm, because it was a struggle for him.\n\nShe waited until his body calmed, then reached discreetly for the tissues, and cleaned her mouth and his genitals. She had no idea how women swallowed. Jizz always set off her gag reflex and it was a struggle to keep sucking while they came.\n\nOften it wasn't worth it, but for him it was. She liked him. He was a bit of an oaf, and that look he'd given her downstairs and last night - so angry and defensive - still bothered her, but he was a good lover. She knew he must feel somewhat fondly towards her, too.\n\nShe lay curled up in his arms, her body slick with sweat. She yawned. She was tired. Cyril had been struggling late last night with the pain, and she'd stayed up with him, talking him through it.\n\n'Can I ask you another question?' he asked.\n\n'Sure, but I'm letting you know now I don't do anal and I don't let men jizz on my face. Tits, sure, but not on my face.'\n\n'Lydia!' He exclaimed. He started to laugh. 'I wasn't going to ask for anal. I was going to say that I like you. I want to keep seeing you. Is that okay?'\n\n'Absolutely. I'd love to. But don't tell Cyril, right? I told him I wasn't interested in you. If he finds out I've changed my mind, he'll rub my face in it.'\n\n'It can be our secret.'\n\nShe kissed his chest. 'Good. That'd be good.'\n\n~~~~~~~~~~\n\nDylan was the closest he'd ever come to giving her an orgasm. If she'd reached down between her legs and stroked her swollen clit she'd probably come in seconds.\n\nMichelle was standing just inside the doorway of his shed listening him do unspeakable things to a mystery woman. At first she'd thought she was overhearing porn. He'd always liked porn, watched it, masturbated to it.\n\nShe'd hated it. Hated the thought of him touching his cock. Hated overhearing the muffled sounds of fake orgasms filtering into the living room from his bedroom. But he sounds the woman was making weren't fake. They weren't loud enough, or enthusiastic enough for that. The noises were more innate, more primitive. There was a sense of urgency and desire in her voice. She wanted him to keep doing whatever it was he was doing to her.\n\nMichelle had never wanted Dylan to do anything except hurry up and finish, so that she could go back to her imaginary life, the one where she had no husband and no need to have sex with a man. She'd avoided intimacy as much as she could, but every so often he'd whine and carry on so much she'd relent. She set rules; no foreplay, no kissing, and for the love of all things good and holy, don't try and go down on me. The thought of his hairy face between her legs made her shudder.\n\nThe woman climaxed. Michelle's underwear got wetter. How had she not realised she was a lesbian?\n\nShe heard Dylan and the woman laugh softly together. It was an inherently pleasant thing to bring your partner to orgasm, and she would have felt happy for him if she didn't despise him so much. When they'd dated, and during the engagement period, she'd felt ambivalent towards him. During marriage, this had turned to dislike. Separation and their upcoming divorce, and all of the shit he decided to pull to get revenge, meant mutual loathing flourished.\n\nMichelle considered knocking, or calling out. While she was hesitating, the mystery woman started giving her ex-husband sexual attention. She could hear Dylan moaning, but not a sound out of the woman, so she could only surmise he was in the process of receiving a blow job. Her stomach turned at the thought of it. The funny thing was, she could suck on her girlfriend's strap on and enjoy the experience, but the idea of putting her mouth near a man's penis was repulsive.\n\nIt didn't take long for Dylan to orgasm. It never had. But he'd been quieter with her than he was now. With her, sex only ever resulted in a muffled groan and him trying to cuddle up with her afterwards. She used to kick him out of bed. She hated his hot, hairy, sweaty body. She hated the way his semen leaked from her pussy onto her thighs.\n\nHe'd wanted to have a baby with her. It was shortly after his twenty-seventh birthday that he'd floated the idea. He became more persistent over time. He wanted to be a father. He wanted two or three kids, boys or girls or boys and girls, he didn't mind either way. The never-ending requests for sex had become more frequent. He bred cattle. He understood the concept of ovulation. She knew he was watching her cycle, checking for when she was fertile.\n\nShe wondered if he'd want children with his new girlfriend. He probably would. The girlfriend might even want kids, too. She might be happy giving him blow jobs, letting him sleep with her whenever he wanted, and having babies. They might get married.\n\nWhat a thought. What a horrible, horrible, thought.\n\nOn second thoughts, maybe not. Now that Dylan was seeing someone else, he might be more agreeable to the financial settlement she was seeking. She'd spoken to him this morning and he'd actually hesitated for a second. Maybe he was seeing sense. Maybe he was already in deep with the new woman, and was ready to start a life with her.\n\n'Dylan,' she called out. 'Are you there?'\n\nThere was a split second of hesitation before he replied in the affirmative and asked her what she wanted.\n\nMichelle walked into the shed. Dylan's shirt, and the woman's shirt and bra were on the couch. She ignored all items of clothing.\n\n'I wanted to speak to you about the divorce,' she said.\n\n'Maybe later, okay?'\n\n'Too busy entertaining yourself with a selection of porn? What is it today? Eighteen year old girls getting their vaginas destroyed?'",
        "That got him into action. He was dressed and down in the living area within a minute, his eyes filled with rage. She cocked her eyebrows in the direction of the bra and gave him a withering look. She knew he couldn't say anything. He was still at the stage where he needed to impress the girl. He couldn't let her see him losing his temper.\n\nHe gestured for her to go outside. She went, Dylan followed. Ben watched them go. The girl, still upstairs, remained silent. Michelle wondered she realised her car was outside, and her bra was on the couch and, most tellingly, that Michelle had just overheard their little romp.\n\n'What the fuck are you playing at?' he hissed.\n\n'I came to speak to you about the property settlement. We've decided to offer you another ten thousand. The offer expires at midnight.'\n\n'We?'\n\n'Jessica and I.'\n\nDylan looked around the property. Michelle did, too. It was an amazing piece of land. Flat, great soil, a good combination of paddocks, cultivated fields and wooded areas. The area by the creek was incredible. Dylan had once taken her swimming with him there. It was one of the few moments she'd felt happy to be with him.\n\nNow, he'd no doubt want to take the new woman there, for the same reasons she wanted to take Jessica there. At the moment, Michelle couldn't take Jessica there. The agreement had been that she stay off this parcel of land unless it was to speak to him.\n\n'Do you have any inkling how much work went into clearing this place? Fencing it? Getting the irrigation set up? Planting crops, spraying them, harvesting them?' he demanded.\n\n'We're offering you well above market value.'\n\n'That doesn't change a fucking thing, does it? You didn't buy it, you didn't do the work on it, but now you feel entitled to it because you and your fucking dyke bitch of a girlfriend think you're fucking farmers.'\n\nThere was a strong correlation between Dylan's use of the word 'fuck' and how angry he was. He was steaming.\n\nMichelle grew indignant. 'Maybe I look at it as compensation for being with you. I stuck by you. I even had sex with you even thought it was practically rape, the way you wouldn't let up unless I gave in.'\n\n'Practically rape? Are you kidding me? Jesus, Michelle, it never would have fucking happened if I didn't ask for it. Heaven forbid I wanted to get laid. I couldn't have sex with my wife, couldn't wank, couldn't go out with my mates, couldn't fucking do anything, could I? And it's still not enough for you, is it? You have to keep going and going and going until you've completely fucked me over.'\n\n'You're the one who left.'\n\n'Oh, fuck you, Chelle.' He spat on the ground in disgust. 'Get out of here. I'm not signing it over. I don't care what you're offering.'\n\n'I'll speak to you when you're being reasonable,' she sneered. 'Go back to trying to satisfy whatever cheap slut you've managed to drag home. I'm sure she enjoys being satisfied by your tiny little dick.'\n\nFinally, she scored a blow. She saw the uncertainty cross his face. He was wondering about the accuracy of her comment. Sexual ability had always been a sensitive point for Dylan and like most men, he worried about size. Frankly, Michelle had no idea whether he had a small penis or not. The only dick she'd seen was his.\n\n'Or maybe she won't have the chance to be disappointed. Maybe it'll all be over in minutes. You're consistent with that,' she added, twisting the knife.\n\n'Get the fuck out of here.'\n\nShe turned away, flipping him the bird as she went. 'This will be mine one day, dickhead. We've already chosen a house plan.'\n\n~~~~~~~~~\n\nCyril looked at his niece, looked at the Charger, and looked at his niece again.\n\nIt was late Saturday afternoon and Lydia had just driven home in it. She said Dylan had refused to let her drive her car. The brakes were non-existent, the steering column and front bushes needed urgent replacing, and she was leaking transmission fluid.\n\n'There were a few more things, but I stopped listening,' she finished. 'He told me to use your ute, but I told him it was manual transmission, and I only have an automatic license, so he let me borrow the Charger. It's an auto.'\n\n'I asked him if he was sleeping with you, and he said he wasn't.'\n\n'He's not. And it's pretty insulting to suggest he'd only lend me his car if I was.'\n\nIt had been a long time since Cyril had had a good laugh. God bless Lydia. Despite being a divorcee, she was still bloody naive. If she wanted to announce to the world that she as knocking boots with Dylan McGarvey, driving around town in his car was a bloody good way to do it. Then again, this was Lydia. She probably thought the car was a bomb.\n\n'You can stop with the laughing,' she said, her face bright red, as she walked inside.\n\nHe had no idea why she was lying to him. Why would he care if she was hooking up with Dylan? He'd be dead and gone in the next few months and she'd move back to her flat. In the meantime, why not enjoy what country life had to offer? Personally, he thought they were a good couple. They were well matched. She was wild enough to show him a good time, and he was stable enough not to let it get too out of hand.\n\nCyril went inside and apologised. 'I'm sorry love.'\n\n'It's okay.' She was pouring a glass of water from the tap. 'You'll be pleased to know I've promised him I won't drive and drive. I've also promised to take it to him to be looked over if it makes any funny noises, drives differently, or just plain looks sad and lonely and in need of a hug.'\n\n'You should be flattered. That car's his baby.'\n\n'Why are you so sympathetic to him over the car?' she asked. 'It's an automatic, you know. You always turn your nose up at autos.'\n\n'That one's a classic.'\n\n'That one's a heap of shit,' she corrected. 'I can't believe he thinks my Hyundai is bad.'\n\nCyril tried to reply, but was wracked with pain. His body was riddled with cancer. The drugs helped most of the time, but sometimes it was too much. Besides, he hated the morphine. It made him feel sick, which meant taking more drugs to stop the nausea. He limited himself to no more than was absolutely necessary.\n\nHe made his way outside and took a seat on the veranda. Time was closing in on him. He was going to die and leave this world forever. No more routines. No more marking off days with a frightening, increasing frequency. No more wheat to sow, no more calves to see born, no more taking a B Double over the range. He was adding to the 'lasts' with every month, week and day.\n\nCyril was preparing for death. The funeral had been planned and paid for. His will had been updated. There was nothing left to do now but to wait.\n\nLydia came out to check on him. He was glad she was here, helping him out. She had a very no-fuss way about assisting him, which was appreciated after the martyrish ways of his sister.\n\n'I'm fine. Just enjoying the sunset,' he lied.\n\nShe took a chair and sat down. They watched the sun sink over the horizon.\n\n'How bad are you hurting?' she repeated.\n\n'It's not good. Can you roll me a cigarette?'\n\nShe went back inside for a few minutes. She returned with a handful of rolled cigarettes, her own smokes, and a gin and tonic. He'd never been able to establish where she'd acquired an appreciation for Bombay Sapphire, but he was nonetheless impressed.\n\n'These aren't normal cigarettes, are they?' he asked suspiciously as he lit up.\n\n'No.'\n\n'Where are you getting it?'\n\n'The internet.'\n\n'The internet?' he was bemused. 'You really can buy anything there, can't you?'\n\nLydia lit one of his special cigarettes. 'Indeed.'\n\nThey smoked in contemplative silence. The sky darkened and the air cooled, and Lydia got up to light a citronella candle. She was always complaining about the mosquitoes. Cyril had no idea what she was talking about. He never got bitten.\n\nIt was funny how things worked out. Lydia had always been his favourite niece, and as for his nephews, well, not one of them rated a mention. He'd always liked Lydia and was chuffed to find out she actually liked him.\n\nIf you'd asked him twenty years ago if he'd sit here getting baked with here while waiting to die, he wouldn't have believed it. But here it was, and he was glad.\n\nLydia knew where his will specified his money was going, and she didn't give two shits about it. When they'd organised for here to come out here, he'd offered her a wage. She only wanted a quarter of what he offered, which he felt was unfair on his part, given she spent the better part of the stipend each week on petrol. Her fuel bill was going to skyrocket now she was driving the Charger.\n\n'How long have you got Dylan's car for?' Cyril asked.\n\n'A few weeks, I think.'\n\n'Do you have the money to pay him?'\n\n'I should, by the time he's finished.'\n\nCyril shook his head. 'I'll pay him.'\n\n'No.' She was resolute. 'I'll take care of it. My car was a wreck before I moved out here. It's not your fault.'\n\nHe lit another of the cigarettes she'd rolled. It was doing the trick and then some. He went inside and put a couple of meat pies in the oven. He didn't want to have to put Lydia to the trouble of cooking tonight.\n\nCyril made them each a drink and went outside again. There was music playing. He listened carefully, enjoying the sound. The combination of marijuana, morphine and alcohol was doing the trick. He was happy.\n\n'I did end up sleeping with him,' Lydia confessed. 'Are you disappointed?'\n\n'Why would I be disappointed? Feminism gave women the right to act like men. Enjoy it.'\n\nShe smiled softly but didn't argue. He liked to give her a bit of stick about women's rights. Frankly, he was all for them.\n\n'I kind of met his ex-wife,' she confessed. 'I didn't really meet her, but I heard them arguing.'\n\n'I don't reckon they get on too well anymore.'\n\n'They're fighting over the financial settlement.'\n\n'Over a piece of land,' Cyril agreed. 'But I suppose you've seen it, haven't you? So you know why there's so much angst.'\n\n'Who do you think should get it?'\n\n'He should. He bought it before they were married. '\n\nShe sipped her drink. Lit a cigarette. 'I agree. But the argument was vicious, Cyril. They hate each other. If this lady sees me, she's going to knife me in the back. I know it.'\n\n'She will if she finds out you have the Charger.'\n\n'Is it that much of a statement?'\n\nCyril laughed. 'Yes.'\n\nChapter Twelve"
    ],
    "authorname": "ausfet",
    "tags": [
        "australian",
        "blow job",
        "chook lit"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-fall-ch-02-3"
}