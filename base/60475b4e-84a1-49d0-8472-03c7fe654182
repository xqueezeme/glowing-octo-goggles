{
    "title": "Bittersweet Irish Cream Ch. 07",
    "pages": [
        "Since his liver transport two years ago, Daniel Riley had been slowing down on the drinking. Not stopping completely though, but Charlotte, his wife didn't know that. No one knew that every Friday night he would escape to his basement den, lock the door, pour a glass of brandy and listen to music. It was his way of letting go of the stressors of the week.\n\nThis Friday was no different; he came in, locked the door behind him and went downstairs. The basement was cold, someone left the little window open. Probably the cable guy that was here two days ago. Danny went to close it, then sat at his desk and turned on the dim desk lamp. He poured himself a glass, used the radio remote to turn on the music, leaned back and closed his eyes. The voice came out of the dimness of the room, so soft he thought he imagined it.\n\n\"Hello, Daniel.\"\n\nDanny slowly opened his eyes and stupidly thought, why is the cable guy here? Did something happen? But as Jack stood there in the center of the room, hands in the pockets of his black hoodie, wearing black jeans and black Reebok sneakers, he knew this was no cable issue. He slowly reached for the gun he kept under his center desk drawer and said, \"Since you know who I am, I assume you've come here to die tonight, boy.\"\n\n\"My name is Jack.\"\n\n\"Is that supposed to mean something to me, Jack?\" he said but thought, what the fuck happened to his accent? He's American, not Irish. This is not good at all. Danny searched with his hand and realized his gun wasn't there. No matter, he had another one in the bookshelf behind him.\n\n\"No. I'm a nobody to you. Just collateral damage of the great Daniel Riley, who would not be refused. Who gets what he wants, no matter the costs.\"\n\nDanny stood up slowly. \"I cannot argue with that. I do get what I want, no matter the costs. But what do you want, lad? Because a wee thing like you didn't come to kill a great man like if me.\" He moved slowly to the left as he spoke.\n\nJack had not moved. \"I did. I came to avenge my family. Family over everything, isn't it? That's what Rab Riley used to say.\"\n\nDanny froze. His eyes narrowed. \"Who are you?\"\n\nJack continued, \"But you didn't live by that code did you? It was Danny over everything, even family. Even if it tore the family apart.\"\n\nDanny held his glaze but slowly moved his hand across the bookshelf to the China bowl. \"Aye. I've made mistakes, but I'm not a regretful man. I am however an unforgiving one.\" His hand found the China bowl but it was empty.\n\nJack still has not moved. \"Do you know I go to Mass every Sunday? Confession every week. I have asked for forgiveness in advance of this night every day for the last 14 years. For the Father to have mercy on me for doing what I have to do. That Mother Mary and St. Jude would protect me. I'm quick to forgive others for their sins, in repentance for this great sin that I knew I would commit. My nature is to be regretful and forgiving. But not for you, Danny. There will be no forgiveness for you. And there will be no regret later.\"\n\nDanny laughed. \"Who the fuck are you!?\"\n\nJack said again, \"My name is Jack.\"\n\nDanny said sarcastically, \"Well best be on with it, Jack! Let's see what you're made of, wee thing like you,\" Jack still didn't move. He wanted Danny to feel trapped and afraid. Danny scoffed, then moved toward Jack, when he heard a woman's voice behind him.\n\n\"Don't you take another step toward my brother.\" A gun cocked.\n\nJune came from the corner pointing her gun at him as Danny turned around. He laughed a little, saying \"You're even smaller than him.\" He stood between them and looked back and forth. \"Did you think this through wee ones?\" he asked, condescendingly.\n\n\"Yes,\" Jack said. \"Every day for the last 18 years I've thought it through.\"\n\n\"18 years! You've been holding a grudge for 18 years, lad? Are you my long lost son?\" Danny joked.\n\n\"No. But you wish I was. You wished we were were your kids with Betsy instead of Jamie. You wish you had his wife, his kids, his home, his life. That's really why you took his life from him.\"\n\nDanny's face fell and heart started beating outside his chest at the sound of Jamie's name. This was the first time since Jack started talking that he felt afraid. Jack continued. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\"You wished you could be him in every way. And because you couldn't be him, you started taking everything from him. First you took his wife, tried to break her mind, body and spirit, tried to break him down mentally and emotionally. Then you took his best friend away, forcing Nate to choose between his best friend and his family. Then you tried to turn the Family against him. And when you realized that would never happen, you tortured and killed him and his wife. A fucking shame you never found his children.\"\n\nDanny was trying to figure out how to get out of this one. He said, \"Aye. A fucking shame indeed. So what is it you want, Jackie and Junie, because I feel like if you wanted to kill me it would have been done already.\"\n\nJune answered before Jack could. \"We want you to die the same way our father died. Screaming.\" Danny was looking at Jack as June spoke, looking for his weapon.\n\n\"With my wife and daughters upstairs? I don't think Jamie would approve of his children doing such a thing. There's a code we live by.\"\n\nJune answered again, \"And where was the code when you raped my mother in front of me, her two year old daughter?\"\n\nDanny turned to June in surprise. \"Someone's been talking! Was it Drew's stupid arse? He never had the stomach for it anyway. What'd ya do with him?\"\n\n\"We gave him mercy,\" Jack said. \"And now he's dead.\"\n\nDanny turned back to Jack slowly. \"You killed my baby brother?\"\n\n\"And Barney. It's just you left. You.\"\n\nDanny didn't believe it. Yet he hadn't heard from Drew in over three weeks. And Barney he didn't speak to often anyway. Still. Danny pulled out his cell phone slowly from his pocket. Neither June or Jack moved as he tried to make a call, because they knew it would not go through. He looked at his phone and he had no signal. He looked at Jack who still had not moved nor shown a weapon, and June's weapon was small. He could take them, he thought. He was terrified, armless and defenseless, but he refused to show it.\n\nHe yelled, \"Come and get it over with then! I won't die on my knees begging like your pathetic father! He was a useless cunt, a pussy of a man who used his charms to win people over. But not me. I saw him for what he really was. I did you a favor. You wouldn't want a dickless father like that.\"\n\nJack didn't react. He knew he was trying to bait him so he would make a mistake and Danny could over power him. Danny yelled again. \"C'mon! Enough suspense! You came here to kill me innit? Do it already!\"\n\nHe looked back and forth between Jack and June. Neither of them moved, June with her gun raised between her hands directed at Danny, Jack standing with his hands in his sweatshirt.\n\nDanny scoffed again moving toward her first and said, \"Just like I thought, dickless just like your-\"\n\nBut Jack swiftly pulled out his gun with the silencer attached from his center pocket of his sweatshirt and shot Danny in the abdomen. It took Danny a moment to realize he had been shot. He touched his stomach as blood poured out, not watching Jack at all. Jack had raised his pants leg and pulled the 16 inch pipe tucked in his shoe against his leg. He swung it high and brought it down over Danny's head with all of his might. Danny's head burst open with blood, the same scar across his forehead that Nate gave him 18 years earlier.\n\nDanny fell backwards against his desk, but didn't get a chance to recover, as Jack swung again from right to left across Danny's face, channeling David Ortiz, aka Big Papi, best Red Sox player in his lifetime. He could tell he broke Danny's jaw, he felt the crunch vibrate throughout the pipe. Danny hit the floor hard, with so much blood in his eyes and hands. Jack swung down five more times as Danny started howling, breaking his shoulder, his hand and his arm. He stepped back panting.\n\nJune moved forward and wrapped an extension cord around both of Danny's feet tight, then pulled his legs backwards and wrapped the same cord around his wrists. Danny was officially hog tied. He was yelling incoherently and spitting out blood. But June and Jack both knew that his wife Charlotte went to bed early on vicodin like she does on Fridays, his oldest daughter was out bar hopping with some new blonde American girls she met, and the youngest daughter was in her room with her headphones on listening to music and smoking pot. No one will hear him.\n\nJune tied another extension cord around his neck and tied that to the leg of his desk so that every time Danny would move he would choke himself. She then took off his socks, folded them together and put them in his mouth as Jack pulled down his pajama pants. Danny started shaking his head, eyes wide in fear. He tried to brace himself for impact, but it did not help. He screamed muffled screams as Jack showed no mercy, rammed the pipe up his asshole as far up as it would go.\n\nJack felt nothing. Neither satisfaction nor remorse. It was a job, like emptying out the trash bins and moving on to the next set. Danny kept choking himself as he moved around from the pain. He coughed up blood and started choking on it as well but with the sock in his mouth it had no where to go. Jack and June watched him turn purple for about 10 seconds before she pulled the bloody sock from his mouth. He threw up blood as he laid sideways trying to catch his breath.\n\nThen Jack said, \"You were supposed to apologize to him, you son of a bitch.\"\n\nDanny laughed through his broken jaw. He said, \"The thing is, after I had my way with your mum, I realized she wasn't that special to begin with. It was nothing for me to watch Barney slit her throat from behind her. But watching Jamie cry over it...well it was all worth it in the end.\" He laughed and coughed up blood. Jack looked at June who had hate all over her face. She looked at him with cold eyes and handed him her gun.\n\nJack knelt down and put June's gun to Danny's head and said, \"Thank you for that. It makes this so much easier.\"\n\nHe reached down with his one hand and pushed the pipe further up impaling Danny's rectum until he started screaming, then he pulled the trigger once, cutting the screams short. He stood up and looked at June again. She had no tears in her eyes.\n\nShe took her gloved hand into his, and they walked to the small window. He hoisted her up first, then slipped his slim frame through the window. On the outside, he closed the window, and June handed him the hand held electric drill she had, and he nailed the window shut. With any luck, it will be days before they find him, and by then they will be long gone.\n\n~~~~~~\n\nInspector Gregory Galis came into the police station that Monday after viewing the horrific scene of Daniel Riley's murder. Danny had so many enemies who knew which one finally did him in. And frankly, he didn't give a shit. Most officers here didn't give a shit either, there were more than enough unsolved murders they have worked on with his fingerprints all over it and they couldn't catch him. But he will do his job, sort of, investigate the homicide, kind of, and maybe solve the case. But not likely. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nThe clerk stopped him. \"Galis, someone dropped this off for you yesterday. Said his name was Jamier Edmin.\"\n\nGalis was skeptical, he had a memory like lab rat and he had no idea who that was. Fake name for sure. He took the card and read the front of the envelope. JamieR EdmiN is how he spelled it. Nutty. Galis's natural curiosity took over. He opened it and it was a simple card of an apple tree on the front. On the inside was a typed message, \"Thank you for saving our lives. J&amp;J.\" Now Galis was really confused.\n\nHe went to his desk to mull over the card. The picture, the weird way he signed his name. J&amp;J. He said our, who is the other J? JJ? Two people or one?\n\nHe was still contemplating it when Maggie the secretary came in. \"Crime scene photos. I've never seen anything like it. They didn't even know he was down there for two days.\"\n\nGalis didn't respond as he opened up the folder. But as he viewed the photos even he had to admit it was gruesome. Danny was hog tied to a desk, beaten badly, sodomized, shot in the stomach and in the head. Again, Galis didn't really give a fuck, Danny deserved it for any number of crimes he committed over the years. But still, it was horrific. Staged intentionally, he was sure of that, to send a message. But what? He hadn't seen anything this bad since....\n\nGalis's body went numb as his mind was going a mile a minute. He just remembered the last time he seen something this gruesome. This similar. He looked at the card again on his desk. JamieREdminN. Just to be sure turned on his desktop. Were they uploading crime photos in the database from 20 years ago? He sure as shit hoped so. The search bar came up and he paused. Then slowly typed Jamie R, pressed send. Crime photos of Jamie Redmond and his wife Elizabeth's murder popped up automatically.\n\nHe played close attention to Jamie's photos. Jamie was hog tied, neck tied to the bedpost, legs behind his back connected to his wrists, all with an extension cord. He laid on his side, facing his wife, shot in the stomach and in his head with two different bullets. It was nearly identical, close enough. But pipe was left in Danny. The interesting part was that the pipe used to sodomize Jamie was left in him, but that wasn't common knowledge. An officer on the scene removed it for the photos, for his dignity, the officer said. So in the picture the pipe was next to Jamie but Galis remembered that fact like he knew it was Monday.\n\nThe Redmonds were found because the front door was left wide open and a neighbor called it in. She kept frantically asking, \"Where are the children?\" A search party went out and combed the woods behind the house. Galis and two officers found them first. The boy (Jake? Jack?) was in pajama pants and a superman t-shirt. The girl (Judy? No, Jane?) was almost 3, in a full onsie with soiled diapers, eating crisps. The boy had the good sense to grab some crisps and juice boxes and hide in the woods with his sister, like his mum told him to. That she would find him afterwards.\n\nThe boy said in a clear voice, \"Danny killed my mum and dad. That's what's my dad said. He called him Danny. Said he's going to pay for what he's done.\"\n\nGalis ordered the two officers to keep their mouth shut about finding the kids and to pretend to keep looking like everyone else. He took the kids out through the other side of the woods, jumped in a taxi and took them to the shelter where his wife worked, told her to feed them and keep an eye on them, and that he would be back in 24 hours. Because Galis knew there was only one \"Danny\" the boy could be talking about, especially since Nate Riley was already at the scene, stone faced.\n\nHe went back to the house and arrested Nate, and for the next few hours he questioned him. Nate gave him nothing, but in the end before he lawyered up, he said, \"If you find my godchildren, get them out of Ireland. Betsy has an older brother in the States, Boston I think. I'll get the number from my wife. Get them out, quickly and silently. And don't trust Mi6.\" Then he said nothing more. Two hours after leaving the station a woman left a message on Galis's phone, \"Rockville, Rhode Island\" and a phone number, but did not even leave her name.\n\nHe called the number and spoke to a Henry Frazier giving him the devastating news. He explained what happened and that he needed his help to get the kids out of the country. Henry owned a successful orchard farm so he had the means, but he needed help too, so he called the FBI. Galis picked up the kids from the shelter and drove straight to the Belfast International Airport, all while on the phone with the FBI to tell them that Mi6 was infiltrated, their witness was dead, and they needed to get the kids out of the country, now.\n\nAn FBI agent met them at the airport and took the kids to Heathrow airport in London. Galis did not go but heard that their uncle met them there. They got special visas to enter the US and went to live with their uncle, all under 48 hours after their parents' murders. Meanwhile, Galis promoted the two officers to Garda for their discretion and put the word out that the children were still missing, feared dead.\n\nMi6 found their mole and tried to persuade their uncle to let Jack testify since he seen and heard the whole thing. He could be the key that brought down the Riley Family empire. But Henry said absolutely not, that they were going to live normal, happy lives and never set foot in Ireland again. Galis agreed, the children had been through enough. They would find another way to bring down Danny and he has spent his entire career trying to.\n\nThe memories came flooding back like someone opened up a dam in his mind. He took the card and went downstairs to the main desk and asked the clerk, \"Harley, did you happened to get a good look at who left it?\"\n\nHarley said, \"Honestly no. We were pretty busy yesterday.\"\n\n\"Mind if I check the tapes?\" Galis went behind the desk and pulled out yesterday's tapes and moved to a nearby computer to watch the CCTV from yesterday morning.\n\nAt 8am, a man came in wearing a black hoodie, face turned away from the camera. He handed something to the clerk and left. Galis switched camera views to the front entrance. The man stopped at the double doors and faced a woman who was wearing an identical hoodie. They exchanged some words, then together took off their hoods and looked up at the camera, a full five seconds, then he put his arm around her and they left.\n\nGalis rewinded the tape and looked at their faces again. They could have been living replicas of the files he just viewed. Galis rewinded it once more, then pressed the record button right before they removed his hoods. For the next ten seconds the tape accidentally recorded the current view of the front entrance. He watched it back to make sure of the accident, then went back to his desk. The Redmond files and pictures were still up. It was a closed case since people confessed to it, but just to sure, he accidentally deleted the photos of Jamie's death.\n\nHe read the card again. \"Thank you for saving our lives.\" He leaned back in his chair and a slow smile crept up on his face. Then he grabbed his coat. He was going to take a quick trip to Belfast to see Nate Riley.\n\n~~~~~\n\nThe four of them split up at the airport, and didn't sit next to each other on the plane back, which was fine by each of them, as they either slept or got lost in their own thoughts. They didn't go near each other again until they were on the same shuttle train headed back into the city.\n\nJune said to Jack, \"So now what?\" and smiled. She knew that was Ethan's famous line to him.\n\nHe smiled and shook his head. \"You go back to school, right now. You too Mina. You both are only a few weeks into the semester, you should be able to keep your classes and graduate on time.\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nHenrietta said, \"No, first we all go home to mom and dad, and go see Father O'Donnell and do confession. Then June, you say a quick hello to Liam and have him drive your ass back to NYU. Mina you head to Providence, Jack's right about your classes and clinicals. And Jack, you go straight to the Inn and make it right with Ethan.\"\n\nJack shook his head. \"Ethan will never forgive me. It's over between us.\"\n\n\"No, it's not over,\" June said. \"You just have to talk to him.\"\n\n\"Nothing that I can say will convince him to take me back. I hurt him. I left him. It's too big a betrayal for him to get over. The most I can hope for is his friendship again.\"\n\n\"No you just have to go bigger,\" said Mina. \"The biggest gesture you can think of to show him how sorry you are and that you won't leave him again.\"",
        "\"Ask him to marry you,\" Henrietta said definitively.\n\nJack laughed. \"Were you not there on Thanksgiving? Ethan is not getting married again.\"\n\n\"But if he did, would you? If he asked you to marry him, would you marry him?\" she asked him.\n\nJack said automatically, \"Yes.\"\n\n\"Then ask him first,\" Henrietta said. \"Let him know how serious you are and that you vow to spend the rest of your life making it up to him. Making it right.\"\n\n\"I'm going to do that whether he marries me or not. I owe it to him to make it right.\"\n\nHenrietta said, \"Good. Then ask him.\" Jack shook his head but didn't respond. They were quiet, then she said, \"I'm going to marry Brayden. Like today if possible. Find us a courthouse and just do it.\"\n\n\"Mr. Traditional will never go for that,\" Mina sang.\n\nHenrietta shrugged. \"Either way, I'm going to marry him and have as many babies as he wants.\" She smiled to herself.\n\n\"I'm going to marry Liam,\" June said. She looked at Jack who looked back at her.\n\nEven though she said did not ask for it, he gave it to her anyway. \"Liam's been my best friend since I was 15 years old. He's already a brother to me. I'm good with him becoming my actual brother.\" He smiled at her. She beamed and hugged his midsection.\n\nMina said, \"I'm going to end up in a polyamorous relationship, sharing wives and husbands.\" She giggled to herself.\n\nJack said, \"You know, I can see that.\" They all laughed.\n\nMina then said, \"Seriously Jack. Go big or go home. And if he doesn't take you back, well I always knew he was an idiot.\"\n\nJack looked at the three women around him. \"The best thing to come from this tragedy is gaining two more sisters. I love all three of you so much. Thank you.\" They formed a bear hug around their brother.\n\n~~~~~\n\nEthan was coming down the east wing when he heard her voice. She walked right past him, eyes only for one person in the vestibule. He couldn't take his eyes off her as his own heart began to pound.\n\n\"Liam,\" she said softly.\n\nLiam lifted his head from the desk and his heart skipped a beat at the sight of her. \"June,\" he barely whispered. He came around the desk, touched her face, then pulled her into his chest, and held her tight. He pulled back, kissed her gently on the lips, then hugged her again tightly.\n\nStacy said softly, \"Liam, if you want to take your break now, you can.\" He turned to her without letting go of June.\n\n\"What room is open?\" he asked.\n\nStacy checked system. \"Room 8,\" she said, and handed him the key. They went toward the west wing without another word until June finally noticed Ethan, frozen, watching her, waiting.\n\n\"Wait,\" she told Liam and let him go. She walked over and gave Ethan a tight hug and he hugged her back. She said, \"He's coming, Ethan. He's with Father O'Donnell now, but he's coming.\" She gave him a knowing look.\n\nEthan couldn't find words at first, but then said, \"It's good to see you, June. I'm glad you're back home, safe and sound.\" She smiled at him and turned back to her love. June and Liam went upstairs to the west wing.\n\nEthan stayed frozen in place. Stacy watched him for a bit, then said softly, \"You might want to change.\" He gave her a sharp look and she adverted her eyes upward. But then he looked down at his dusty jeans and went downstairs to change.\n\nEthan felt nervous, excited, horny, upset, relieved, all at the same time. He spent the last three weeks confident of his decision, especially since EJ asked about Jack every single day since he left. He told EJ that Jack went on a long trip and EJ accepted that until the next day when he asked again. It broke his heart daily. So no, he would not let Jack back waltz back into his life. Nope. Jack left him. Left EJ. He made his choice and now they all must live with it.\n\nBut now he wasn't so sure, with Jack being so close to him, in the same town, breathing the same air as him again. The thought of seeing Jack again was enough to melt him. He had no idea what he was going to do or say. He also had no idea how long he stood there after he changed to a clean set of jeans and a white long sleeved t-shirt when his phone rang.\n\nMrs. Rieger from the daycare was calling. \"I'm sorry to bother you, but I thought you should know, Jack Frazier came to pick up Ethan Junior about five minutes ago. I know he is on the list, but we haven't seen him in a while and I wanted to make sure it was OK. It's what Mrs. Robbins should have done before she just let him go with Jack.\"\n\nMrs. Robbins in the background said, \"Oh for God's sake, it's Jack! We know Jack.\"\n\nMrs. Rieger did a poor job of covering the mouth of the phone as she scolded Mrs. Robbins. \"It doesn't matter, there is protocol!\" She turned back to the phone. \"We just wanted to...make sure that Jack still does have permission to pick up Ethan Junior.\"\n\n\"Jack always has permission,\" Ethan said. \"Always. But I appreciate the call.\"\n\nHe hung up and thought, So the relationship deserter is going to use EJ to bait him huh? That little shit. Well he won't allow it. He went upstairs and stood outside with his arms crossed to wait for them. Ironically where Trish stood almost a year ago to the date, as their one year anniversary was in two days. It was less than a ten minute walk so he knew they would be coming around the corner any minute now. And he was right.\n\nJack walked slow, holding onto EJ's hand. The sight of him made his stomach do a butterfly flip and almost stopped Ethan's heart. He wore a dark green hooded zippered sweatshirt, black jeans, black Reebok running sneakers, which was unlike him, Jack is a Nike guy. EJ had a bag, probably of toys, and a lollipop in his mouth. The closer he got, the louder he heard his heart beating, but he refused to let his face betray what he what he was really feeling. He kept his arms crossed and his face stern.\n\nJack on the other hand walked like it was a normal Monday and he was picking EJ up from daycare. Although his heart was beating equally as fast and pumping so hard it felt like it was going to come out of his chest, he kept as calm as he could and his eye contact with Ethan.\n\nWhen he was about six feet away, Ethan spoke first. \"You know they called me. Mrs. Rieger thought you were trying to kidnap my son.\"\n\nJack smiled that sideways smile. Those damn dimples. Ethan's stomach did a butterfly flip again. Jack stopped walking when he was about two feet away from Ethan's face. \"Guess I didn't follow protocol.\" He smiled again.\n\nEthan took a deep breath and exhaled all through his nose. He looked down at his son and said, \"Come on EJ, let's go inside.\"\n\nHe reached for him but EJ clung to Jack's leg and said, \"Jack!\" Jack stifled a laugh.\n\nEthan said to EJ, \"You're such a Benedict Arnold.\"\n\nEJ laughed his infectious laugh, having no idea what that meant making them both smile. Jack reached down and picked him up, then handed him over to Ethan. He made sure to get inches from his face, touched his arms as he passed EJ between them, then stepped back, but only a little.\n\n\"So it's done?\" Ethan asked. Jack nodded once. \"Well. I'm glad your safe.\"\n\nThen he turned to walk away until Jack called out, \"Ethan!\" Ethan rounded to face him.\n\nJack inhaled and exhaled. Then said, \"Ethan, I am so incredibly sorry for leaving the way I did, for hurting you. And while I don't regret having to go and all that transpired, I have tremendous regret for not trusting you with all of me, my past and any future plans that did not involve you. Especially since we talked so much about our own future. Our family. And I know I'm about to sound incredibly selfish and inconsiderate again, but I want it all back. All of it. I want that future again of us, me, you and EJ. I want my family back.\"\n\nEthan snapped, \"And what makes you think I want it back? Do you know how hurt EJ was? He asked about you every day. Every damn day. You broke his heart.\"\n\n\"Don't hide behind EJ,\" Jack said. \"He's fine and I know this because we talked. We are OK. Now tell me how you really feel.\"\n\n\"Pissed off,\" Ethan growled through his teeth.\n\n\"Okay,\" Jack said. \"Keep talking.\"\n\nEthan snapped again, \"No I don't want to talk! I wanted to talk for the last six months and you shut me out every time. I said what I needed to say that last time and I meant it. I won't let you walk back in and out of our lives like that, ever again.\"\n\nJack said amusingly, \"Do you think I have some other earth shattering family secret that would compel me to leave again? Because I'm pretty sure most families only get one of those.\"\n\nEthan was not amused. \"I don't know, Jack. All I know is that I don't trust you. Not with my family. Not with my heart. And I don't know if there is anything you could say or do to make up for that.\" He turned toward the Inn again and walked away.\n\nJack took a deep breath and said loudly, \"I know that, Ethan. And believe me when I say I am prepared to spend the rest of my life making it up to you. Making it right between us. If you will have me for the rest of yours.\"\n\nEthan stopped at the door. Somehow he knew what Jack was going to do before he turned around. And when he did, Jack was sure enough down on one knee in the middle of the sidewalk in broad daylight. His mouth formed a small o. 50% of him was embarrassed, as people were watching, Stacy from the window, Mrs. Mullens from across the street, other people who just happened to be walking by. The other 50% was completely touched that Jack would do this to show how serious he was about him.\n\n\"Ethan Thomas Starling. I love you with every fiber of my being. You're the best thing that has ever happened to me. And I would be an idiot to fuck it up again. I want nothing more than to spend the rest of my life with you and EJ. Will you please, please marry me, Ethan?\" He opened his fist and produced a gold wedding band.\n\nAll of Ethan's walls came down and his heart exploded with love for Jack. No one has ever confessed their love for him like this, embarrassed him like this, all for him. But again, he refused to let his face betray his feelings, just yet.\n\nHe put EJ down and walked over to Jack, said stone faced, \"Jack, get off the sidewalk.\"\n\nJack said, \"Not until you say yes.\"\n\nEJ walked over took the ring from his palm and hugged Jack. Jack laughed. \"I think EJ wants this to happen.\"\n\n\"Christ, get up Jack!\"\n\n\"Will you marry me?\"\n\n\"No Jack, I'm not going to marry you!\"\n\nJack looked up at Ethan but didn't say anything. Ethan sighed, turned around and walked over to the door of the Inn, and EJ followed him. He opened the door and EJ walked through. Ethan turned back to Jack still looking at him from the same spot where he left him.\n\nEthan held the door open wide. \"Jack, what the fuck are you still doing down there? Get your ass inside! Embarrassing me and shit.\"\n\nHe tried to keep his face neutral but Jack's wide grin was too much. He found his smile tugging hard at each corner of his face as well. Jack got up quickly and walked to the door.\n\nAs he passed, Ethan looked right into his emeralds and said, \"Jesus, Jackie Bear, I missed the shit out of you.\" Jack smiled widely at him again.\n\nWhen they entered Stacy had EJ in her arms. \"You guys can go talk. I got EJ and Liam's around here somewhere. I'll stay as long as you need me here.\"\n\n\"Thanks Stacy,\" Ethan said.\n\nHe reminded himself to give her a raise and probably upgrade her title again as he walked to the door of the basement apartment. Jack followed and they went downstairs with Ethan leading. Ethan walked to the other side of the foyer and leaned on the wall outside the kitchen. Jack closed the door and leaned on it. They looked at each other.\n\nJack started walking toward Ethan, saying, \"I want to tell you everything. From the beginning, what I remembered about that night, what I had discovered at age 10, what I had decided again at age 15, and why, and everything that happened these last three and a half weeks. And I want you to ask all the questions you want because I'm going to tell you everything you want to know. I want you to trust me again and love me deeper than you've loved me before because now you know all of me, the real me.\n\n\"And I want to hear how you feel about everything, tell me if I'm scaring you with what I've done, or surprising you with what I'm capable of. I want to talk and I want you to talk to me.\" Jack stopped walking when he reached the center of the room.\n\n\"But I don't want all my talking to be for nothing. So I need to know. Will you give me the chance to talk to you? Will you talk to me? Can we just hold hands and...talk?\"\n\nEthan did not overthink it. \"Yes,\" he said. \"But not right now.\"\n\nHe crossed the room in two strides and kissed Jack fervently, grabbed the back of his neck and kissed him again. Jack got over the surprise of Ethan's initial kisses quickly, reached up and took Ethan's head in two hands and returned the urgent kisses. They parted for a second, looked into each other's eyes and kissed again, just as passionately. Ethan reached down and grabbed Jack by his waist, turned his body toward the hallway and walked him backwards to their bedroom, not breaking their lips apart. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nOnce there he zipped down Jack's sweater, then started unbuttoning Jack's shirt but after three buttons he pulled it over his head, buttons popping off in the process. He pulled off Jack's tank top as well and kissed and licked his neck, then started biting him, hard. He bit him on the neck, the collar bone, his shoulders, bit his nipples, and kissed him in between the bites. Jack let out little yelps every time Ethan bit him but he did not tell him to stop. It hurt and excited him and made his dick swell.\n\nEthan pushed him down on the bed and unbuckled Jack's jeans, pulled them all the way off, then his underwear and socks. He put his face in Jack's crotch, and breathed deep, missing the smell of his musk. He ignored Jack's erection at first, and bit the inside of Jack's thighs leaving little red marks. Jack yelped again, then moaned loudly \"haaaaaaa!\" as Ethan covered his dick with his whole mouth down to his groin, sucking so hard it was the line between pleasure and pain.\n\nEthan lifted up both of Jack's legs and stuck his tongue right through the opening of his anus and licked around. Jack moaned \"hhhooooo!\" and Ethan almost cried with how much he missed hearing Jack's moan again. No one moans like his Jackie Bear.\n\nAfter a couple of minutes of tongue kissing Jack's hairy hole, he licked two fingers and put them inside of Jack, found that sweet spot that brings Jack to ecstasy and got him there pretty quickly. Jack \"hooooo'ed\" out his first orgasm, leaked fluid from his front end. Then Ethan leaned back up and deep throated Jack again. Then he used one hand to finger him while the other held the base of his penis firmly stroking upward, and circle Jack's head with his tongue.\n\nJack got louder and louder, hands digging in and yanking Ethan's hair, the pressure and intensity too much as his second orgasm shut down his mind, his body convulsing and in ways he didn't know he could shake. Tears rolling down his eyes as he erupted moments later, thick milky cum like an Irish cream pastry bursted in Ethan's mouth and kept oozing out, sending shock waves through his body. It was probably the longest Jack had ever climaxed in one sitting, and he had been meaning to ask Ethan to teach him how he holds his orgasm longer while withholding ejaculation.\n\nEthan didn't let one drop of Jack get away, he swallowed what was in his mouth and sucked the rest up, gently, softly, like Irish cream was what he had been craving for his whole life. Jack continued to moan and moan with his eyes closed; he barely noticed when Ethan stopped. He opened his teary eyes to see Ethan watching him. Ethan then stood up and started taking off his clothes.\n\nWhen done, he silently crawled on top of Jack, kissing him softly along the way, starting with his feet, his legs, his thighs, passed his semi erect penis again, kissed his abs and the side of his body, his chest, his arms, his neck, his ears, ran his hands through Jack's hair, kissed his cheek and forehead, all this making a fresh set of tears fall from Jack's eyes for a different reason than the first time. Jack held onto Ethan and closed his eyes as Ethan continued to kiss his body over and over again, love on him, touch him everywhere his hands could go. Ethan made his way back down to his chest and put his head on Jack's beating heart and just laid there as Jack continued to silently sob, body shaking slightly, running his hands through Ethan's hair. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nWhen Jack's sobbing subsided, Ethan leaned over to the nightstand and pulled out the lube. Jack sat up and held out his hand for the lube, sniffling. Ethan gave it to him and wiped Jack's tears away as Jack poured the lube on his hands and started stroking Ethan's very hard, thick and veiny dick. They sat there in facing each other, legs over each other as Jack stroked him and Ethan provided more lube. Ethan hadn't made a sound since he last spoke but Jack's stroking Ethan was making it harder to stay quiet. Then Jack let go and laid back down. He knew what Ethan needed and needed it too.\n\nEthan lubed up Jack's pucker, got on his knees and opened Jack's legs as far apart as they would go. He found the entrance with the tip of his penis and looked at Jack whose quickened breath and eyes pleaded to be fucked mercilessly. Ethan grabbed both of Jack's cheeks and pushed all the way inside head to base, making his first sexual moan \"uuuuuuuuugh!\" to Jack's \"hoooooooooo!\" Ethan's dick hurt and healed him at the same time. Jack lifted his legs all the way up and crossed them behind Ethan's back, then wrapped his hands around Ethan's back as well, pulling Ethan closer to him. His message was clear: I'll never let you go again.\n\nEthan moving slowly at first, long deep strokes, moaning in Jack's ear, then with the pace of a steady jog. They moved together but Ethan was definitely leading this dance, as he changed up speeds and strokes and Jack let go completely and let him, finally feeling safe again. Their bodies grew hot and sweaty together as Jack held on, as one flesh, moaning liberally and loudly. Then Ethan started talking. \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\n\"Jack...don't you...ever...leave me...ever....ever again...\"\n\nJack moaned out his answer, \"I wooooont ...I woooooont... I woooooont...everrrrrr...leave yoooooou...leave yoooooou...I woooooon't...neveeeer....neveeeeer...Ethaaaan...neveeeeer....\"\n\nJack moaning in Ethan's ear was the emotional push he needed. He came hard, poured his cream, his heart, his mind, his body, his soul into Jack filling him up and Jack felt all of it. Ethan's moan came out like a sigh, like he had been holding his breath until this very moment as Jack came between them. Jack continued to hold on as Ethan slowed down and stopped moving. They created something right then and there, an unbreakable bond that would last a lifetime, and they both knew it.\n\nJack did not let go right away. They held each other a little longer, then slowly Jack released his legs first, giving Ethan a chance to remove himself from Jack and stretch his legs. Then Jack unclasped his hands from around Ethan's back and rubbed his back a bit until Ethan lifted himself up off him. He rolled over to his back and looked up at the ceiling. Jack looked over and smiled. His left hand found Ethan's right hand and held it. They laid together, holding hands, looking at each other for a while.\n\nThen Ethan said, \"Tell me everything.\" And Jack did.\n\n<p align=\"center\">~~~Epilogue~~~</p>\n\nJack used the master key to open up the front door of the twin home across the street from the Inn. Jack turned around and looked at the new sign. They named it together: Inn Love at the B&amp;B. He smiled. He was still surprised that Ethan agreed to buy it, although they had to do something, their family had grown tremendously. But still, right next door to Mrs. Mullens?",
        "His logic was amusing but sound: \"She's always in our business anyway, now she gets to hear all of it since our bedroom wall is also her bedroom wall.\"\n\nJackie Chris, who they called JC, their first adopted daughter, ran past them first, red hair flying, mouth going a mile a minute screaming, \"I know which room is mine!\"\n\nSuzanne, their second adopted daughter from South Korea was right on her heels. \"You mean our room! Dad said I could have the bed under the window. Papa, stop her!\" she demanded as she ran by as well.\n\nHe shook his head. Two girls both at age six was a handful, but he enjoyed how close they were, closer than he and June. Irish twins they called themselves although neither of them were Irish. They adopted Jacqueline Christina as a newborn. Jack named her, and gave her the last name Frazier since Jack had such a close relationship with her birth mother. Su En, who they renamed Suzanne Elizabeth, was adopted at three years old, seven months before JC turned four.\n\nSue was as surprise: In the middle of AJ's adopting a six year old little girl from South Korea, Mai Lin, they found out that she had a younger sister, Su En. It would have taken them years to finish the process with Mai Lin (Now Marilyn) and start again with Su En so Jack had the great idea to start an international adoption process for Su En so the sisters could be adopted into the same family around the same time and remain close. They gave her the last name Starling so that the girls would have the same last name. They now talk weekly and alternate spending time between Rhode Island and California.\n\nJack walked into the empty living room. The downstairs furniture would not come until tomorrow, but the beds were in, so they could officially sleep there tonight. They definitely needed the space, as the 1000 square foot apartment was growing small for a family of six. They had been living that way for the last three years, but they were such a close knit family they didn't mind at all. But a three bedroom home with a finished basement was just what they needed, and at the right time.\n\nEthan came into the house holding almost 11 month old Jamison Nathaniel Frazier, the last of their growing family. He said, \"EJ is refusing to leave the basement. I haven't told him the plan yet, mostly because I still think it sucks, but that's your kid so I figured you would want to.\" He handed Jamie to his other dad, gave a kiss and went upstairs to stop the girls from fighting.\n\nJack went back across the street with his youngest son to the Inn and went downstairs to the basement apartment to talk to his oldest son. EJ was sitting on the couch looking sullen. Jack put Jamie on the floor and sat next to him.\n\n\"What's up?\"\n\nEJ mumbled, \"Nothing.\"\n\nJack said, \"Okay.\" He waited.\n\nEJ knew he wasn't going to go anywhere, they'll be sitting here until tomorrow unless he spoke. His Papa had the patience of a snail. \"It's just that....why'd you have to get more kids? Why couldn't it just be you and me and Dad like it was? I want my life back. I want my room back. I want to stay here,\" he whined.\n\nJack let a few moments pass. Then he said, \"When I was a kid, about four years old, my birth dad, not my Uncle Henry who adopted me but my first one, he said something to me I will never forget. When I complained about having a kid sister and things changing, he said of your aunt Junie, 'You don't have to like her, but you will love and protect her. Because she's part of the family now.' He also told me that family is more than blood, it's who you let into your life and your circle. 'But once they become family, it's family over everything.'\n\n\"I don't have any blood relation to any of you. And yet here I am, leading this family with your dad. We keep growing and changing because if we don't we just get stuck someplace and eventually realize we don't want to be there, but by then it's too late. Each one of us, you, me, your dad, JC, Susie, even Jamie, we were all stuck someplace at one point or another. And we would have been lost without one another. You brought me into this family. I bought JC and Sue in. Your dad bought Jamie in. And every time we gained another family member, we got better for it.\n\n\"Change is good. Letting go of the past and looking toward the future, it's a good thing, it's how it's supposed to be. We can't stop change from happening, but if we resist it, we stop growing. So you can choose to embrace the changes in your ever growing family, or you can stay stagnated, wither up and never grow. You're choice.\"\n\nEJ rolled his eyes. \"That's a lot of words for 'suck it up EJ, this is your family now, deal with it.' \"\n\nJack smiled and kissed his son's head. \"See, you got it. You're already growing up. And you'll be a whole teenager in four months.\"\n\nEJ groaned again, \"Right, a teenager stuck in a room with a one year old half brother. Because I know that's where you are going to stick him. All because my stupid mom couldn't take care of him.\" \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nTrish showed up at the Inn nine months pregnant scared shitless about having to be a parent again. She gave birth, told the nurses to put the baby in Ethan's arms and left the hospital. She even put Ethan's name on the birth certificate, knowing full well that he wasn't the father, but so that the baby could go home with him, he figured out later. They haven't seen her since. Ethan could have given the baby to her parents, but decided she trusted him enough to leave her son with him and not with them, so he was going to raise him as his own.\n\nJack tread carefully, his mother was a sore spot for EJ. \"So do you blame Jamie for being born the reason why we had to move?\" He asked.\n\n\"No I blame Patrica for being a shitty mom. Again.\" Jack ignored his cursing, something Ethan would never do. Instead he said, \"Then is it OK that Jamie is of our Starling-Frazier clan, free of blame for something he had no control over?\"\n\nEJ rolled his eyes again. \"You're really loving these psychology classes you're taking aren't you, Dr. Phil?\"\n\nJack laughed. When did this kid become so quick with the comebacks? Jack was finishing up his Masters Program at Providence and will soon begin his doctorate to become a full fledged psychologist. In the meantime, his web therapy business his brother in law Liam helped him set up is doing well and giving his therapeutic skills some much needed practice.\n\nEJ said, \"It's fine that he's here, better with us than with anyone else. And he is my brother so.... I just want to feel like my opinion matters too. That you listen to me like you listen to the others.\" Jack knew EJ relished being the big brother but sometimes felt lost in it all.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\n\nJack had to tell him. \"Well your dad and I have been listening to you and we agreed that the basement apartment in the new house will be your bedroom. No strings attached.\"\n\nEJ's eyes got wide. \"Seriously!??\" He exclaimed.\n\n\"Yes. You'll be a teen soon and you'll need your own space. And we trust you not to abuse the liberty we are giving you-\"\n\nJack had more to say but EJ was strangling him with a hug. \"Thank you thank you Papa! I promise I won't abuse it!\"\n\nJack hugged him back. \"Go see your room.\"\n\n\"Okay!\" EJ said excitedly. He started for the door, but then turned around and said, \"But seriously Pop, no more kids. You got me, the red head, the asian, and whatever race this one is,\" He said pointing at Jamie, whose racial mix up was still a mystery with his tanned skin, curly brown hair and hazel eyes. Jack is leaning toward Hispanic, Ethan says African American. They'll find out at some point.\n\nEJ continued, \"It's starting to look like the United Nations in here!\" Then he ran up the stairs colliding with Ethan, yelling \"Thanks Dad!\" on his way across the street.\n\nEthan took a seat next to Jack and took his hand. After a few moments, Jack said, \"Don't ask me what now.\"\n\nEthan laughed. \"I know what's next. Art studio down here for me. Finishing up your Masters program, then a PhD for you. Raising four troublesome kids for the two of us.\"\n\n\"You forgot a lifetime of happiness.\" Jack said.\n\n\"I'm already living that part,\" said Ethan. They kissed, held hands and watched Jamie play with EJ's old blocks.\n\n~~~~~~~\n\nAUTHOR'S NOTE:\n\nI edited the epilogue to be consistent with future chapters. Although I put an epilogue here, the next couple of chapters is a continuation of their story that starts three months after Jack comes home, and I will continue to add a couple of chapters from time to time, because I love Jack and Ethan like they are old friends of mine. Their relationship continues to get tested over the years but their love is strong and their bond is unbreakable.\n\nThank you to all of you who took this ride with me and ends up loving them as much as I do.\n\n--Eskay\n\nPS: This story and all of the characters are copyrighted. All rights reserved. :)"
    ],
    "authorname": "Kabba118",
    "tags": [
        "anal",
        "anal orgasm",
        "drama",
        "family",
        "gay love",
        "gay sex",
        "mlm",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/bittersweet-irish-cream-ch-07"
}