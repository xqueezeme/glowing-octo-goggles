{
    "title": "There and Back Again Ch. 010",
    "pages": [
        "Chapter Ten: New Arrivals \n\nI found Theron and Tomas, both stripped to the waist, sparring with sticks instead of swords. I could see that Tomas was clearly the better swordsman, despite Theron's relative youth and impressive physique, but he was holding himself back to avoid humiliating Theron outright. I sat down nearby to watch, and Tomas took the opportunity to use it as a teaching moment. Both men backed off in intensity, and Tomas took the time to announce what they were doing, pointing out footwork, sword strokes, and parries. I found the half-naked thing distracting, but persevered through it to pay attention to what mattered. I realised I should have done some training with them before I took my bath in the stream, but now clean and dry, I just couldn't bring myself to get sweaty again. I finally drowsed, sitting in the bright sun, not waking until Theron ran by and pushed me over to land on my side on the ground. He took off towards the stream, howling in laughter as I cursed. \n\nTomas sat across from me, having thrown his shirt on, sweat still running down his brow and staining the cloth. He looked amused, and as I picked myself up off the ground I realised that, not only was my hair still a mess but I probably now had dirt and leaves on my face. I sighed and brushed myself off, returning to trying to comb out the knots in my hair. Several curses and a couple of small bald spots later, Tomas grabbed my hand, stopping me from attacking the next tangle. \n\n\"I had a sister, once. Before...\" He sighed, and I nodded understanding. Before he ended up on the street, before he was recruited. She was most likely dead. \"She had curly hair. She and my mother used to fight over combing out her hair all the time. She'd end up bawling, half bald, every time she washed her hair. Until I realised I could help.\" He prodded me until I turned and sat with my back to him, and he knelt behind me. I closed my eyes, humming in pleasure as he used his deft fingers to pick out the snarls, smoothing my waves. There was something so intimate, so familiar in that touch, I found myself longing for...something. A family perhaps? I wasn't sure, but I wasn't going to complain. \n\nWe were both still sitting like that when Aedan and Alistair returned. Tomas stopped right away, and the absence left me feeling lonely. I've lived alone for ten years, and suddenly now I feel lonely in the middle of a group? Ridiculous. I immediately noticed that Leliana and Sten weren't with them. I worried about that, wondered what would happen if we failed to recruit the important party members from the game. Not for the first time, I wondered if Duncan and Cailan surviving would have far more unintended consequences than I imagined, wondered if I would regret whatever it was that saved them in the end. Too late now, and anyway I wouldn't have been able to live with myself had I not tried. I looked at Alistair's peaceful smile when his gaze focused on Tomas, and knew I'd do it all over again to avoid seeing his face haunted like it was in the game. \n\nI stood, walking over to see Aedan while Alistair spoke to Tomas quietly. \n\n\"Where's Leliana?\" \n\n\"Getting Sten. She tried, but the Revered Mother wouldn't let him go. She decided to sneak over there herself after dark and bring him out, but they'll have to go around the outside of town to get him here safely. Alistair and I went to the army camp and made a scene to provide a distraction.\" \n\n\"Did you dress him up pretty and make him dance the Remigold?\" \n\n\"I heard that! Stop stealing my lines.\" Aedan and I both giggled ourselves breathless while Alistair gave me a dirty look and everyone else watched, puzzled. Apparently they'd had that conversation in Ostagar, just like I had in the game. Surreal. But funny. \n\n\"Alright, what did you do instead?\" \n\n\"Actually we just introduced ourselves. Bryland's a good man, and so are his lieutenants. When he learned who we were, who I am, he made a big fuss and paraded us around the army camp. He gave us most of the supplies we were looking for, for free. I made a speech about not allowing Loghain to get away with his betrayal and ending the Blight, and everyone came to watch. Even the templars.\" \n\nTomas walked up. \"You advertised your presence?\" \n\n\"Yeah, well...we needed a distraction. And I knew we'd be safe with Bryland's men. Though I think we might want to move camp once Leliana gets here with the big guy. The reward for any Grey Warden, alive or dead, is at ten sovereigns.\" \n\nI was actually relieved to see Aedan taking control, even standing up to Tomas. I could see Tomas was taken slightly aback at the matter-of-fact attitude. I smiled at Aedan and nodded when I knew no one else was looking. He winked back. \n\n\"Perhaps we should leave now. I will stay behind and lead our new companions to the campsite once they arrive?\" Did he just ask Aedan for permission? Whoa. Aedan shook his head. \n\n\"Good idea, but I'll be the one to stay behind. Prince can find you for me, or warn you if I get caught. And of the two of us, I'm the far more expendable, Tomas.\" I saw an expression flit across Tomas' face, one of regret and worry that belied his usually calm demeanor. I knew that if something happened to either of the younger Grey Wardens, he'd never forgive himself. Still, he eventually nodded in agreement. \n\nAll of us packed our supplies into the packs we had obtained. I changed into some simple peasant garb that they had acquired, impressed with Leliana's eye - it fit me almost perfectly. At least it's pants and shirt, not a dress. I tucked my Earth clothes into the top of my pack, with the other assorted oddities I had brought over, and then added a peasant dress that apparently Leliana had also found. Spoke too soon. \n\nTomas snuffed the fire, covering it with dirt to hide it at least a little, scattering the remains of the burnt wood into the undergrowth. We left Aedan, who faded into the woods with the mabari, and Alistair lead the way, aiming to swing wide around Lothering and head north. Tomas came last, trying to obscure our trail. I watched him at first, having never spent much time in the woods. He made a few obvious false trails, doubling back to the group, and tried to ensure that any broken branches, boot prints and the like blended in. I recalled that a group of Lothering refugees at some point had ambushed our group for the bounty, and suddenly his efforts seemed far more important. \n\nAfter a few minutes, however, my pack started feeling heavier. I had never been a hiker and even this body didn't have the strength and stamina of the rest. I struggled on with it, unwilling to admit weakness to these new yet familiar companions. Shortly, Alistair stopped for a minute, allowing us to rest. He walked over to me, without a word, took my pack, slung it on one shoulder and his own on the other, shot Tomas an incredulous, slightly dirty look, and took off walking again. I was grateful - and mortified - all at once. \n\nAfter an hour of walking, and a quick consultation with Tomas, Alistair chose a campsite. I volunteered to light a small fire with my Zippo, and Theron and Alistair wandered off to gather wood. Morrigan, as usual, was nowhere to be seen. Tomas sat near me, looking lost in thought. Once I had a blaze going, I joined him. \n\n\"Thank you, Tomas.\" \n\n\"For what, my lady?\" \n\n\"For allowing Aedan to take the lead, a little. For not over-riding his authority.\" \n\n\"He is a clever lad. He knows what he's doing, and he's handling everything better than the rest of us put together. I may be senior here, but I can recognise competence when I see it. I'm not about to get in the way of that.\" We shared a smile. \n\n\"I worried he'd defer to you, that he wouldn't take charge and stand on his own feet the way I think he was meant to.\" \n\n\"I don't think Aedan is particularly good at deferring to anyone, actually. It's one of the reasons I wanted to recruit him. Grey Wardens aren't army soldiers. They need to think for themselves. I'm more worried about Alistair, actually.\" \n\n\"He will be fine, I think. He needs to believe that he's meant to follow for now, although he actually does make a good leader once he's got a bit more confidence. Aedan will lean on him, and show him respect, and he'll get it figured out.\" \n\n\"You do love him, don't you.\" It wasn't really a question. \n\nI blushed scarlet, thankful that dusk had come to hide the beacon that was my face, at least from a distance. \"How could I? We've barely just met.\" \n\n\"He's just met you. I don't think that's really the case for you.\" \n\n\"I...I can't be in love, Tomas. It's not right. I don't know who I am, or why I'm here. I don't know if I'll be able to even stay here. I could get pulled back tomorrow and never return. I can't defend myself, I'd be a liability. I'm not a Grey Warden, I can't share that with him, and then when he gets his Calling... This isn't even what I really look like! I don't know where this body came from, but it isn't mine. I can't allow myself...it wouldn't be fair to him...\" I trailed off, swallowing the lump in my throat, trying to suppress the tears I could feel gathering. I've cried more in the last few days than the last ten years. I hate tears. \n\nTomas took my hand. \"Perhaps he should have a say in what's fair to him, don't you think?\" Squeezing my hand, he rose and started working on a tent. Stuffing my feelings back into the box I always kept them in, I joined him. Theron and Alistair wandered back, arms full of wood. Alistair quickly assembled a tent of his own, but Theron stared at the poles and canvas like they would bite him. From watching Tomas, I had a fair idea how they worked, so I joined him. \n\n\"It's not rocket science, you know. Here. Let me show you.\" \n\n\"What's rocket science?\" \n\n\"Uh. Hard to explain. But what I meant is that it isn't too complicated. The tent, I mean. I'll help.\" Together we managed to get the thing upright, laughing together at the slightly saggy roof and crooked overall result. \"I think it will stand, though. I guess practice makes perfect.\" Alistair shot us a strange look, standing so close together and clearly enjoying ourselves. I flushed and excused myself, returning to Tomas' side. \n\nTomas had assembled a couple more tents while Theron and I had struggled with his. He pointed to the one closest to the centre of camp, telling me that one was mine. I must have had an odd facial expression at that, because he immediately stopped what he was doing to take me by the shoulders. I felt at the verge of tears again. \n\n\"What is it?\" \n\n\"I...I'm afraid to sleep alone. What if I disappear? What if I don't wake up? What if we get attacked in the night?\" \n\n\"I can make a bigger tent for you to share with Morrigan or Leliana if you'd prefer.\" \n\n\"Morrigan would never agree to that. And Leliana doesn't trust me.\" \n\n\"What are you suggesting?\" \n\n\"Can...can I sleep in your tent?\" I felt like a small child. I'd never had parents I could crawl in bed with after a nightmare, but I'd certainly had younger foster-siblings end up in mine. I refused to make eye contact, waiting for the rejection. \"It's probably not appropriate. I'm sorry. I will manage on my own. Sorry.\" I went to grab my pack and crawl into my small tent when the roof fell in. I glanced at Tomas in surprise, and he smiled at me. \n\n\"I need the tent pole if I'm going to make a bigger one.\" Once complete, we both stowed our gear in the centre, bedrolls on opposite sides. \"Tomorrow we work on your ability to defend yourself, again.\" I nodded, grateful. \n\nAlistair volunteered to cook with some of the rations they'd obtained. I rushed over to 'help', knowing his cooking was supposed to be dismal. We managed to agree on a soup to go with the dried rations, and Tomas volunteered to go try to catch some wild critter to add to the soup. I hoped he'd find more pheasant. I still didn't think I could bring myself to try rabbit. As I was fishing through the supplies, I was delighted to find a few spices. Some I recognised - oregano, rosemary - but there were several I couldn't place. I resolved to ask Leliana to teach me how to cook with them later, and made a mental note to bring some dried spices next time I ended up at home. Apparently they were expensive here. \n\nTomas returned with a couple of pheasants and I breathed another sigh of relief. He plucked them and I roasted them before shredding the meat into the soup. The soup was bubbling and smelled delicious by the time Aedan showed up with Sten and Leliana in tow. Aedan stepped up behind me, sniffing appreciatively. \n\n\"Ah, good - Alistair's legendary cooking skills must be well known. I'm glad you didn't let him poison us again, Sierra.\" Alistair groused at that and the two settled into a familiar routine of bickering and name calling. Sten and Leliana stood somewhat awkwardly, and I mentally cursed Aedan as I stood and performed the introductions between Sten and the rest of the group. He looked at me sharply when I announced his name/title without having to ask first. \n\n\"Sten, meet everyone. I'm Sierra. Theron, there, is a warrior. Aedan, Alistair, and Tomas are Grey Wardens. I can't see Morrigan, but she's around somewhere. She's a mage. And you've met Leliana; she's a... uh... sister. In the Chantry.\" \n\nSten shot another sharp look at Leliana, standing there now in leather armour, carrying a bow on her back and two wicked looking daggers in her belt. Leliana gave him her own stare, and shrugged, slowly, and he let the subject drop. I walked up to Leliana, grabbing her hand and drawing her closer to the fire, ostensibly to help me check the soup. \n\n\"I'm so glad you decided to come. And thanks for rescuing Sten. I want to help against the Blight, but worry I've messed things up by changing events. Thank you.\" I gave her a warm smile, and she gave me a strange one. \n\n\"You're sure about Sten? He's kind of...intimidating, no?\" \n\n\"I'm sure. He won't betray us. And he has honour, even if it is different than what we understand.\" \n\n\"Do they have Qunari where you come from?\" \n\n\"Oh, no. Definitely not. No elves or dwarves, either. And no darkspawn. The only monsters where I'm from are people.\" \n\nAlistair sat down, holding his bowl out hopefully. \"Is that better? Or worse?\" \n\n\"I'm inclined to think worse. At least when you see a hurlock, you know what to expect.\" We all chuckled, and I started serving soup. I gave the three Wardens and Sten all very large portions, and got a funny look from Leliana and Theron. I mouthed \"just wait\", and soon enough all of the non-wardens were watching the four men shoveling down their food as fast as they could swallow. Leliana levelled a look at me and wiggled her fingers in a gesture I took to mean 'explain'. \n\n\"Sten's been in a cage for three weeks without food, and look at the size of him. He's bound to have a bigger appetite than us! As for the others, well...Grey Wardens get hungry. What can I say?\" The soup and some of the dry bread was finished off, to Leliana's surprise. Afterwards I went to wash dishes a bit away from camp, and was quickly joined by Theron and Tomas. I giggled inside at the two of them jockeying for position beside me. When we headed back to camp, Aedan rolled his eyes in their direction and I just about burst out laughing. At least he seemed to treat me like a person instead of a very fragile woman. It was refreshing. \n\nFinally, all of us settled in a circle around the fire, Alistair asked the question I'd been waiting for since we'd met up with them. \n\n\"So, we have all these treaties - mages, elves, dwarves. And then there's Arl Eamon, and our anonymous guest. Where do we go first?\" \n\nAll eyes turned to me - I gulped, suddenly confronted with six very serious faces except Sten's, and he glanced around, confused. \n\n\"You are expecting this tiny woman to tell you all what to do? She tells me she cannot even defend herself. Why do you follow her?\" I think everyone forgot Sten wasn't in on my secret. \n\n\"I don't lead, Sten. I suggest, and the Wardens decide. And the reason is...call me a seer. I'm not saarebas,\" Sten gave me a shocked look at using Qunari terms, \"but I have some limited ability to know the future. They're asking me to figure out their best course of action based on the future. \n\n\"I can't tell you where to go first. I can tell you what to expect at each place, but like I said, I don't know the timing of all these events. I don't know if some of the problems I anticipate can be avoided by doing things in a different order. So all I can do is tell you what might happen, and you will have to decide.\" They all nodded, somewhat disappointed. \n\n\"So here's the basic scoop. In Redcliffe, Eamon is ill. He's been poisoned by an agent of Loghain's. Connor, it turns out, is a mage, and Isolde knew and kept it from everyone including Eamon. Connor made a deal with a demon to keep his father alive, and is now an abomination.\" \n\nI could feel Alistair radiating panic from beside me and I touched his knee gently. \"Connor can be saved, and so can Eamon. Don't lose hope. \n\n\"The demon has killed many of the castle inhabitants and is animating the dead to attack the town of Redcliffe. Bann Teagan has holed up in the Chantry with much of the town's population. So to get to Eamon, we have to battle the undead to save the town, sneak into Redcliffe Castle, kill a bunch more undead, confront Connor, and sedate him. Then a group of mages and a bunch of Lyrium from the Circle Tower can allow one mage to enter the Fade, kill the demon possessing Connor, and release the boy. \n\n\"To save Eamon, we need the Urn of Sacred Ashes. It resides in a Tevinter ruin near a town named Haven, in the Frostback Mountains somewhere. To find Haven, we need to go to Denerim and go to a scholar's house to get a map. Once we find Haven, we have to fight a whole bunch of crazy cultists who think Andraste has been reborn as a high dragon. Once they're all dead, we may have to fight the high dragon, and then there's a gauntlet of tests to pass, and then you get the Ashes. \n\n\"I know, Sten, that you're going to say it doesn't make sense to save this one man when we are facing a Blight, but we need Eamon to call a Landsmeet and get Loghain off the throne in order to rally the human forces to face the horde, never mind preventing a civil war. If it helps any, I know where your Asala is, and we can get it along the way.\" Sten jumped and stared, as though I was a ghost. I almost had to laugh. \n\n\"So that's Redcliffe. If we want to save Connor, we need the Circle of Magi. Sadly, one of the mages, manipulated by Loghain, tried to stage a coup of sorts and when it didn't go his way, he and a few friends turned to blood magic. There are now abominations running rampant in the tower, and Uldred is turning more and more of the surviving mages. The templars sealed everyone in the tower and have requested permission to kill every living thing inside. If that happens, there's no way to save Connor without using blood magic and someone dying, and the mages won't be able to help us against the darkspawn. So we have to go in there, kill a bunch of demons and abominations, and save the First Enchanter and whichever other mages can be spared. One of them, a healer, will join us. Oh, and we will end up in the Fade, battling a sloth demon. \n\n\"The Dalish have a werewolf problem that will have to be resolved before they can aid us. Orzammar recently lost their King and are without a clear successor. To get their aid, we'll have to make an expedition into the Deep Roads to find someone who can break the deadlock, and you'll be left with the choice of who to make King. One of the dwarves will stay with us also. \n\n\"Along the way we'll be ambushed by an Antivan Crow who was hired by Loghain, and if we do it right he can be turned to help us. And there's a golem named Shale who can be convinced to aid us in a town named Honnleath, though first there's a traveling merchant somewhere holding her control rod. Oh, and Levi Dryden is around as well and will want us to go to Soldier's Peak, which is currently overrun with demons, and houses a 200 year-old Grey Warden mage who's been...experimenting with the Taint. He's worth a chat for sure. ",
        "\"Also, I'm not sure what can be done about it, but Loghain named Rendon Howe the Arl of Denerim, and he's currently torturing noblemen and templars alike, and will eventually get his hands on a Grey Warden named Riordan to torture as well. Oh, and Loghain is selling the elves from the Denerim Alienage into slavery to the Tevinters. Civil war is brewing because of his abuses and the rumours about him leaving the battle at Ostagar. And that's only going to be worse with more survivors and more rumours. \n\n\"So...what do you guys want to do first?\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-10"
}