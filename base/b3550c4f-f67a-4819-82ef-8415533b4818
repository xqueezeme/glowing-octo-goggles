{
    "title": "Dead and Horny Ch. 10",
    "pages": [
        "Hi all! Here it is, Chapter 10 of Dead and Horny!\n\nThis chapter is the shortest one in the book because it's the calm before the storm, so buckle up. There are only two chapters after this one!\n\nI want to thank everyone for your kind words and feedback over the last several months. This started as an attempt to give you some sparkling fresh content during Covid, but it's also given me some breathing room in regards to writing my main HFHM storyline.\n\nSome final revelations coming up! I hope you enjoy this chapter, and thank you for being awesome!\n\nThe After-Party\n\nLily's mind flitted about like a bird in a cage, unable to focus long enough to reform her body. The darkness of her mind transformed into smoky clouds that curled around her like snakes as she plummeted through the Dreamscape toward destinations unknown. Occasionally she would see her own hands, or even her legs, but her non-existent insides felt like they were on fire.\n\nThe smoke parted and she slammed into the cold marble tile of the Black Palace hard enough that the floor shattered like glass, sending her through the floor and into the level below. This floor was identical to the one above, but the world became black and white, as if her landing had knocked the color clean out of it.\n\nWhen she stumbled to her feet, she saw Tristan coming down the stairs toward her in a silken robe, his crocodile grin revealing all of its teeth. She growled and held her hands out in front of her, her fingertips wavering in and out of existence as she tried to concentrate. Had she already reassembled herself? She was disoriented, and everything felt wrong, somehow.\n\n\"You tried to have me killed,\" he said, only the voice wasn't his, but Aladdin's. When Tristan's foot touched the floor, a golden wave of light blossomed outward and gave color to the interior of the Black Palace, which then warped and became a different castle from another lifetime ago. His skin peeled away as her present triggered the past, and he completed his metamorphosis, Aladdin now standing over a younger version of herself. It was another memory, and she growled in frustration when she realized that she was stuck once again in a bad dream.\n\n\"I did,\" said Lily of the past, who was crumpled on the floor. Her wings had been torn up, and she was held to the floor by a golden chain that connected to a collar around her neck.\n\n\"Not this one,\" Lily shrieked, suddenly realizing where they were. It was bad enough that she had to relive all of her worst moments, but Mike's soul was the one that was actually chained to the floor right now, and she suddenly couldn't catch her breath, knowing the pain that was about to be inflicted.\n\n\"But why, my beautiful flower?\" He knelt down in front of her and lifted her chin so that their eyes met. \"Haven't I been nothing but good to you?\"\n\n\"No, you haven't.\" Lily spat in his face. \"My only regret was that my plan didn't work.\"\n\nAladdin let go of her chin and stood, then swung his boot up and into her jaw.\n\n\"I gave you immortality,\" he told her. \"I gave you the power to be any man's desire, to hold someone's attention with a look, to seduce with a glance. Each of these gifts, by itself, should be enough for your fealty.\"\n\n\"Fuck off,\" she spat at him, then tried to stand. He pointed at her with two fingers and then swung his hand down, and the chain shortened into the ground, preventing her from standing the rest of the way.\n\n\"Oh, I'm afraid you and I shall never see eye to eye again. But you have my curiosity.\" He sat on a silver throne so that he could look down on her. \"All these years, you have done my bidding without question, so why now? Why whisper my location into the ears of my enemies? Why the sudden desperation to, as you told them, end my pathetic existence?\"\n\nLily knelt down by her former self, knowing that Mike could hear her. \"It'll be okay,\" she told him, then turned her gaze on Aladdin. She knew exactly why her mind had gone to this memory, and it was because of what had happened in the Black Palace. Tristan was just a weak copy of Aladdin from so many years ago, back in a time when he probably could have been stopped.\n\nLily of the past shivered, struggling to avoid the answer, but then hung her head. \"It's because you humiliated me,\" she muttered, then tilted her eyes toward him. \"Back when I fucked up that attempt on the pope. Pious bastard, if Meridiana hadn't succeeded with one of his predecessors, he wouldn't have been expecting it.\"\n\n\"Oh? I do find this interesting.\" He leaned forward in his seat. \"I've humiliated you so many times before, so what makes that time any different?\"\n\n\"You know why!\" She spat at him.\n\n\"Indeed. Such a simple thing to get so upset over, but then again, I've never understood the whims of a woman. Perhaps I should indulge myself in it again?\"\n\nLily shook her head. \"Please, no, anything but that.\"\n\nAladdin laughed. \"Why bother begging? You have to obey me.\" His face became serious, and his fingers curled into the ends of his armrests, gouging out the metal with his elongated fingernails. \"So obey.\"\n\nWeeping, Lily tugged at the fabric of her boots, sliding them away from her body. Thick, tangled fur appeared about halfway down her calf, and the boots came off completely, revealing that her feet were little more than elongated hooves. She stood defiant, her lower lip trembling as Aladdin stared at the one part of her body that couldn't be changed, only hidden.\n\n\"Every bit of you is perfection,\" he told her, then stood. \"Except for one.\"\n\nShe looked away, her eyes shimmering. \"You made me take them off for an entire day, then whored me out to a village. They all saw my demonic legs, and knew me for the monster I am. That's why I wanted them to kill you.\"\n\nHe clucked his tongue. \"Interesting. You don't like the sight of your own feet?\"\n\n\"I don't like that they remind me of what you did to me. It's the one part I can never change.\"\n\n\"I granted you immortality.\" His voice was dangerous now, but Lily didn't care. \"There's always a price.\"\n\n\"My soul was the price,\" she whispered. \"No matter who I become, I will always be a product of your spite.\"\n\n\"Hmm.\" Aladdin stroked his beard, which he had grown in the last decade in order to hide his appearance. He walked around her as if appraising a statue, pausing only long enough to pinch her or run his finger along her body. \"You are my servant. It troubles me that you can even consider such a betrayal.\"\n\n\"I may be your servant, but only because you are the owner of my heart.\" She sneered at him now that he was in front of her once more. \"Whoever holds my heart is my master, which means that there will be a day that someone else owns me. And if I get the chance, I will ask them to let me rip your face off.\"\n\nThis drew a laugh from Aladdin. \"Do you truly think you could hurt me? After all, we were in love once.\"\n\n\"I don't feel love for you. Not anymore.\" She shivered in the cool air of the palace, her cloven feet clicking against the marble floor.\n\n\"And you would be free of me?\"\n\n\"I would.\" She glared at him, her eyes glowing like hot coals. \"Free of you forever.\"\n\n\"Then let us play a game.\" He sat back down on his throne. \"Since you are feeling so...empowered. I don't like that you have the freedom to encourage others to do me harm, and I worry that any set of commands I give you may eventually have a loophole for you to exploit. I also don't like it that you seem to think I am beneath you, just a temporary stop on an immortal journey. You and I are forever, my dear Lily, and nothing will ever change that.\n\n\"Let's make a deal. In your current...hideous state, I think it would be impossible for you to get me off. If you can make me come before daybreak, then you are free to take my soul just as you would any of your victims. Once you have taken my soul, then you can have your freedom.\"\n\nLily lifted her head. \"You're aware that such a deal would allow me to break my pact with you, right? Putting your soul on the line is the strongest kind of magic, and will supersede any prior agreement. Being my master won't protect you, and I will keep you for all eternity in my asshole, and make you clean it with your tongue.\"\n\n\"Such foul language. Of course, I'm aware. Souls may be plentiful, but they are a powerful currency to a demon like you. It's the most valuable thing I can offer, after all.\"\n\nLily narrowed her eyes. \"And what happens if you win?\"\n\nAladdin narrowed his eyes. \"You will never again make any attempt to subvert me. You will be an obedient and loyal slave in all regards, and you will certainly keep a civil tongue. Is that understood?\"\n\nHer eyes were now ablaze with fire, and she let out a maniacal laugh. \"Despite my deformity, you've always been quick to finish. All that lust for power, yet you never spent much time learning how to be a marathon runner.\"\n\nHe chuckled. \"Why don't you use that dirty mouth of yours on my dick?\" With that, he shifted his robes aside to reveal a massive, magically enhanced member. Dark energy crackled along it, and he waved it around. With his free hand, he snapped his fingers, causing the golden chain to snap.\n\nWhen Lily walked across the floor, her cloven hooves clicked on the cool tile. Her wings had disappeared, but her tail was coiled around her waist like a belt. The air around her shimmered as a result of the heat along her skin, and when she reached Aladdin, she knelt down and opened her mouth wide to reveal a pair of fangs and a forked tongue.\n\n\"Since you seem to enjoy my demonic side, why not take it up a notch?\" When she inhaled him into her mouth, Aladdin grinned, and his eyes turned a dark purple color.\n\n\"It was a bullshit bet,\" Lily explained for Mike, walking around the scene that was unfolding. Just because he was stuck in the dream didn't mean he shouldn't know what was going on. After all, it wouldn't just be the events that he would experience, but her thoughts and feelings, and she didn't want him to live with false hope. \"What I didn't know at the time was that Aladdin no longer had a soul to claim. This was the moment where I fell to my lowest. This first time, he only lasts twenty minutes, and when he came, I tried to pull his soul from his body, only to discover that I couldn't find it. Hours will pass, and I use every part of my body to get him off while he laughs at me, knowing that I don't understand why I can't take his soul.\"\n\nWhen she reached her hand out to touch her past self, it actually connected. She stroked her own cheek and shook her head in sadness. Mike's soul was about to see this first hand, to experience the degradation of being forced to service Aladdin all night. He would call her names, make fun of her, and treat her like shit until the rays of the dawning sun would scatter through the nearby window, illuminating them both.\n\n\"He didn't have a soul.\" She now stood next to Aladdin. \"After this bet, I found out that he exchanged his soul for immortality. And do you know how? There are only a couple of rules if you join his society of evil assholes. One is that all knowledge must be shared. True, everyone is still entitled to their secrets, but spells and rituals are meant to be exchanged when discovered. But the other big rule is that you don't fuck with the ancient ones, those beings who live outside of time and space. Anyone with knowledge of them knows that this is common sense, but there's more to it than that.\n\n\"He found a way to communicate with one of them. They don't have names, not in the sense that words can properly communicate. It's a specific feeling, almost like trying to describe the color red to a blind person. You can dance around it all you want, yet never make any headway. So, this asshole opened a door to the other side and handed over his soul to one of these beings for safe keeping. It was a trick on his part, because now his soul is stretched across time and space, kept safe from crossing over. Maybe it's a chew toy for an elder god, or its fucking teddy bear, but the agreement was that as long as this being has his soul, he cannot be destroyed. That's why he doesn't want to others talking with them, because he's afraid that they will learn his secret and maybe even surpass him.\"\n\nDown below, she could now hear the sounds of her past gagging on a massive cock. When she looked back at Aladdin, his eyes had rolled back in ecstasy.\n\n\"What he didn't know was that making this bet freed me, in a sense. You see, because he bet something he couldn't hand over, I was allowed to continue being my loveable self, to try and stymie him at every turn. He stuffed me back in my ruby and allowed the others to use me as they saw fit. I was a toy that no longer interested him, that couldn't keep his attention. But the one thing he did know was that I would try to betray him the first chance I got. When you bet your soul against me, it broke his ownership, and now he knows that I'm out there, waiting to fuck up his day.\"\n\nShe stood for a minute to watch the scene before her, her breath suddenly caught in her throat. Without thinking twice, she knelt down and unzipped her boots, then stepped out of them. The fur of her legs was darker than before, and smelled of a burning campfire.\n\n\"I can't stop this from happening again,\" she explained. \"But I'll be damned if I have to watch you go through the same things that he made me do.\"\n\nShe touched her former self again, and then gave her a hard shove. Mike's soul fell onto the hard tile as Lily scooted sideways to take his place, to relive the humiliations that Aladdin had brought down on her a second time. It wasn't even a hard choice, and as she took Aladdin's cock in her hands, she looked over at Mike.\n\n\"I...this isn't going to be pleasant.\" The dream had frozen, but she could feel it struggling to resume. \"You can leave, or go for a walk, this will be awhile.\"\n\n\"No.\" Mike moved over to her and took her by the hand. \"If you have to struggle through this again, I'll stay.\"\n\n\"Mike, I...\" she closed her eyes against the intense pressure of the flashback. She didn't know how to tell him that she didn't want him to see her humiliation, but she desperately wanted him to be there for her after. Her inner turmoil was causing the dream itself to strain, and then suddenly it snapped back into place.\n\n\"That's right, use that tongue,\" Aladdin commanded. \"Let's see what you've learned from centuries of being a slut.\"\n\n\"I am so tired of this guy.\" Mike stood and contemplated Aladdin with his hands on his hips. \"I am so tired of watching you suffer. And I am very tired of looking at his smug fucking face.\" He balled up his fists and took a swing at Aladdin, and Lily was surprised when his fist connected.\n\nAladdin was knocked backward onto the floor, letting out a grunt of pain. He put a hand to his face and pulled it away to reveal that blood was now running down his nose.\n\n\"Mike! How are you doing this?\"\n\n\"Does it matter?\" Mike walked up to Aladdin and gave him a kick, sending him back down onto the ground. \"Why bother questioning the logic of a dream? These memories belong to you, not the other way around. You shouldn't have to relive them unless you choose to.\"\n\n\"Mike Radley.\" Aladdin stood and his features rippled, transforming him into a middle eastern man in a business suit. \"I see that\u2014\"\n\n\"Not interested.\" Mike kicked him again, knocking him to the ground. \"You aren't really him, you're just a shit memory trying to reassert yourself. Besides, I figured out that you and Amir are the same person forever ago, so none of this dramatic reveal nonsense.\"\n\nLily gasped when Mike knelt over Amir and strangled him. It was true that Aladdin had long ago given up his given name in an attempt to hide the controversy around all of the world's major djinn vanishing at once, as well as give him a fresh start.\n\nMike balled Amir up like a piece of paper, his body squishing down as if made of foam. Once Amir was crumpled up into a small sphere, Mike popped him into his mouth and bit down, chewing noisily while blood ran down his lips.\n\n\"Tastes like an asshole, too,\" he mumbled around the edges of his mouth, then swallowed.\n\n\"You...just ate him?\"\n\n\"I did.\" Mike came over to Lily and smiled at her, then held out his hand to help her up. She took it, and was now face to face with him, his eyes only inches from her own.\n\n\"This isn't like you,\" she told him, her arms around his waist.\n\n\"And being the damsel in distress isn't like you, but here we are.\" He pulled her in for a kiss, and she felt the heat of hellfire flow from his mouth into her own, warming her up from the inside. The Dreamscape shivered around them and became a blank slate, and she closed her eyes to bask in the moment. It could have been minutes, hours, or even days for all she knew, for time was so hard to track.\n\nWhen the kiss broke, he touched her cheek and then caught her chin between his thumb and forefinger. \"All these human emotions that you're feeling can be overwhelming, but there will be plenty of time to explore them later. Right now, I need you to do something.\"\n\n\"Anything.\" She searched his eyes, curious what his request would be. He leaned in until his mouth was right next to her ear, his breath tickling the hairs of her neck.\n\n\"I need you to go back to the Black Palace,\" he told her. \"Find Dana, make sure she's safe. Then go back inside that building and fuck up that little dragon man. Teach him that you're nobody's bitch. Let out all that rage. Be the demon I know you can be.\" \n\n\"Mike.\" She whispered his name like a prayer.\n\n\"And once you're done,\" he told her, his voice barely a murmur. \"I want you to bring that pretty little ass of yours home.\"\n\nHe gave her a pinch on the butt for emphasis, and the dream popped like a bubble.\n\n<center>\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f</center>\n\nCyrus watched Dana carefully, wondering what she was about to tell him. He could tell she was choosing her words carefully, and imagined that he would only be getting partial truths at best. Still, he was alive, which meant whatever she had planned, he may still have a chance to prevent it.\n\n\"It's a long story, and I don't have all the answers.\" She turned her eyes out onto the water, and Cyrus relaxed a little. Dana had a predatory gaze that unnerved him, and it was a relief to be away from it. \"I was killed by a necromancer. He used his magic to lock my soul to my body, so I can't die, and my soul can't move on.\"\n\n\"A necromancer?\" Cyrus was now very concerned. The Order actually had a couple of necromancers who worked for them, but they were heavily monitored. Their main purpose was research, whether it meant reviving a corpse to ask questions or assembling a meat puppet to train knights and mages in hand-to-hand combat. \"Where is he now?\"\n\n\"Dead.\"\n\nCyrus grimaced. \"You can't be sure of that. A necromancer has any number of tricks, and\u2014\"\n\n\"Oh, we're a thousand percent sure. Lily killed him, she fed him to a mimic to make sure he stayed dead.\"\n\n\"A what?!?\" He stared up at the piece of furniture holding him in place and a cold sweat broke over his body. Mimics had been around for centuries, and the Order had disposed of quite a few. They were little more than beings that existed to eat absolutely anything that came within reach. Mimics were considered to be the same threat level as a succubus because they could hide anywhere for years without needing to take a single bite.\n\n\"I wouldn't worry about Tick Tock. He's only here to help me. You've already met, by the way. He was the engine in my motorcycle.\"\n\n\"Who are you?\" he asked, his voice now high-pitched. \"You claim that you were killed by a necromancer, yet you own a succubus and have tamed a mimic.\"\n\n\"I don't own anybody. Lily and Tick Tock are my friends, and they came with me to help.\" She flicked a small stone off the rocks where it landed in the water. \"I was actually just an innocent bystander who got caught up in a much bigger world. That asshole up there has a magical artifact that may help bring me back to life, but we didn't expect him to be so dragon-like when we got here.\"",
        "On that account, Cyrus had to agree. But now another realization had sunk in, and he had to know.\n\n\"If you're dead, then what are you?\" he asked. \"Or, rather, what sustains you?\"\n\nDana frowned. \"Technically, I'm supposed to eat the flesh of the living. But we found a way around it. I don't want to be a killer.\"\n\n\"Dana, are you a...a zombie?\"\n\nHer silence was deafening, and when she nodded, he felt his stomach drop. She was a category of being that required immediate extermination, and if his hands were free, he would have already done so.\n\n\"You don't need to worry about it,\" she told him. \"I'm not going to eat you. In fact, I haven't eaten anybody yet.\"\n\n\"But you will,\" he warned her. He had never heard of a zombie with retained intelligence. No matter how strong her mind was, he knew that once her instincts kicked in, she would become nothing more than a feral being who consumed all within her reach.\n\n\"And that's why we need that stupid necklace,\" she told him, then shifted on the rocks so that she was closer to him. \"I'm not a normal zombie, if such a thing exists. If I die, my soul is stuck here, in whatever is left of my corpse. Trust me, if a bullet to the head would have done the trick, I would have done it and moved on already. In fact, one of your guys did put a bullet in my head. I have a pretty good appreciation now of what insanity feels like, all your thoughts flitting around like a swarm of angry bees.\" She shuddered.\n\nHe didn't know what to think at this news, but Dana was perhaps a bigger danger than what he had encountered in the Black Palace.\n\n\"He eats virgins,\" she said, out of the blue, then pointed up. \"Tristan. That's how he became a dragon so fast.\"\n\n\"Makes sense.\" Cyrus had no idea what he was going to do with that bit of information, but a bunch of pieces of the puzzle clicked into place for him. \"Dragons covet wealth. In a way, purity is considered equally as valuable as gold. It's why dragons of old would request virgins, it's the symbolism. Out of curiosity, did he try to control you?\"\n\nNow Dana looked puzzled. \"I don't think so. He told me to do something, and when I ignored him, he had me offed.\"\n\nCyrus nodded. \"Dragons are like any other creature. Magic or not, there's always change over time, a type of evolution. Dragons can make huge evolutionary leaps from one generation to the next, and being able to command a woman who is about to be your next meal was a survival mechanism. It's how we were taken out, actually. He commanded the women in my team to attack the men, and our strongest fighter happens to be female.\"\n\n\"Why would dragons be afraid of women?\"\n\n\"Not regular women. Witches, warriors, anyone who could fight. It's how we, the Order, used to take them out once upon a time. Send in a qualified wizard or knight as the virgin sacrifice and then kill them when they got close. Dragons have the ability to use magic, so the few malicious ones that had command of magic quickly adapted and passed it onto their young.\"\n\n\"Makes sense. Yeah, his magic didn't work on me, and it really didn't work on Lily. He actually breathed fire on her, and she disappeared. I'm kind of worried.\"\n\n\"Your succubus will be fine. Dragon fire may be hot, but hellfire is hotter still.\" His problems were currently magnified, but he now saw opportunity. If Dana was immune to Tristan's magic, maybe he could work out a temporary arrangement. \"I assume she'll be back when her body puts itself together. Demons are fallen angels, after all. But now I wonder if maybe we can't help each other.\"\n\nShe looked at him and frowned. \"It sounds good in theory. I think we both want to get the necklace away from that asshole, but we're never going to agree on what to do with it. I'm also aware that you are carrying weapons on you, I can smell the magic coming out of your pockets.\"\n\n\"It's true, I am armed. And yes, you're right in that I expect the necklace to come with me when we're done.\" He grunted in frustration. She wasn't wrong in the fact that he would take a shot at getting rid of her as soon as things were over. He couldn't allow her to continue living as she had, but he definitely couldn't go into the house, rescue Tasia, and take down Tristan on his own. \"What if...So I know a spell I can cast, a binding spell. It would keep us from harming each other until sundown tomorrow. That way, you know I won't stab you in the back, and once we've taken down Tristan, we can argue over the necklace with plenty of time before the spell ends.\"\n\nDana turned her head toward the water, as if in contemplation. He hoped it wouldn't occur to her that any spell he cast wouldn't apply to Tasia herself, who would be happy to finish the job for him. He turned his gaze toward the building above, suddenly worried about his subordinate. She was easily one of the strongest knights the Order had produced in a generation, and he really hoped she would be able to come out of this ordeal intact.\n\n\"Let's wait for Lily, but then you've got a deal.\" She stood on the rocks and limped toward a crevice that was invisible in the shadows, then wedged her leg in it.\n\n\"Oh, please tell you aren't going to\u2014\" he winced when she twisted around and let out a loud grunt, then pulled herself across the rocks. There was a scraping noise, followed by a loud pop, and Dana let out a moan and pulled her leg free.\n\n\"That's disgusting,\" he muttered in horror.\n\n\"Oh, shit, I'm sorry. I didn't know my dislocated leg made you so uncomfortable.\" She was walking around now, then did a couple of stretches. \"Before Lily gets back, do you have any plans for how to get back in and take him down?\"\n\nCyrus grimaced, then looked up at the home above them. He had more than a couple of ideas, but all of them hinged on being able to separate Tasia from Tristan. \"It'll have to be before morning. He's leaving to check something out, and I'm hoping his militia's guard will be down.\"\n\n\"That all depends on Lily. I'm not going back up there without her.\"\n\nHe nodded. Truth be told, he felt exactly the same way. His main concern was that the succubus wouldn't be so forgiving in his presence, and the thought of having his soul eternally damned truly frightened him. He had seen so many things in his life, saved so many lives, that he felt that he deserved at least the illusion of a peaceful afterlife, not whatever hellscape awaited those that the demon consumed.\n\nHis attention fell back on Amida, and he fought back the sadness that threatened to overwhelm him. So much potential, gone in the blink of an eye. His entire team had been wiped out by a creature that would have challenged a hardened team.\n\nHe felt a bulk of their loss directly on his shoulders. There were plenty of reasons that he couldn't have foreseen just how far Tristan's metamorphosis had carried him, but he also saw plenty of room for improvement. His interactions each time with the succubus had been the same way, all of them ending in failure as well. As he lay on the hard rocks, pinned in place by a mimic, it occurred to him that maybe he had lost his touch.\n\nIt had been a long time since a mission had gone sideways like this. The last one he remembered was back in the seventies, a hunt that had ended in the death of his partner, the knight Jeffrey. While still considered a success, he had learned an overabundance of caution from the experience. His future missions were even more meticulous, and he had quickly climbed the ranks inside the Order as a result.\n\nBut now? He felt as though he had stepped completely out of his depth. It had been years since he had run into such difficulties, and now he wondered if, perhaps, this should be his last mission. After losing an entire squadron of young mages and knights to a bloodthirsty dragon that commanded his own armed militia, nobody would blame him. He would still be held in high regard for his many years of service and allowed to retire to the location of his choice with a pension that would provide for the rest of his life.\n\nA sigh escaped his lips, and he closed his eyes. He had known plenty of others just like him, working well past their prime until one final mission claimed their lives. He was clearly on the precipice of such an event, and he wondered if he would have the strength to survive and actually get to choose whether or not he was done.\n\nDana shifted on the rocks next to him, and he opened his eyes and watched her. It was dark enough that he couldn't see much of her face, but he noticed that she kept looking over her shoulder at Amida.\n\n\"Everything okay?\" he asked.\n\n\"Just hungry.\" She pulled her knees up against her chest. \"When I heal from injuries, I need to eat.\"\n\nHis heart skipped a beat, and he looked over at Amida's corpse. On the one hand, he didn't want to encourage her to partake of human flesh. On the other hand, he knew that whatever life remained in Amida's cells was fleeting compared to the hot blood that ran through his own veins.\n\n\"What happens if you don't eat?\" he asked.\n\n\"I think you know.\" She shifted again, and he thought he heard her stomach growling over the waves. \"I just need Lily to come back, she has a way to help me.\"\n\n\"How does she manage that?\"\n\n\"Don't feel like saying. Now shut up for a bit. I can smell your breath, it's like ballpark hotdogs on a summer day.\" Her lips smacked together when she spoke, so Cyrus switched to breathing through his nose.\n\nAn hour passed, and Dana moved away from Cyrus and down toward the water. In the dim light, he watched her stare morosely at the water, her fingers tightly gripping the nearby rocks. The waves slapped against the rocks, and he wondered if perhaps it was still too late for a mermaid rescue.\n\nOver the smell of salt and mist, a sulfurous stink manifested. A thick purple cloud of smoke appeared above them and slammed into the rocks, then swirled upward like a tornado, eventually twisting into the shape of a woman with large, thick horns on her head and magnificent wings spread wide behind her. Her tail whipped about as if tasting the air, and she inhaled deeply through her nose.\n\n\"Oh, that smells so good,\" Lily said. \"The ocean air really helps to cleanse the\u2014\" she lowered her gaze and looked directly at Cyrus, her red and yellow eyes smoldering. \"What the fuck is he doing here?\"\n\n\"He's fine for now, can I talk to you for a second? Alone?\" Dana was practically scrambling over the rocks, and Cyrus was surprised when she grabbed the succubus by the horns, dragged her to the edge of the water, and then pulled her into the ocean.\n\n<center>\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f</center>\n\nBeneath the lapping waves, Dana pulled the succubus against her body, her lips searching for Lily's. When they met, she sensed a moment of hesitation before they opened, and their tongues curled around each other. It was there that she accepted the sweet delivery of Mike's semen in her mouth, and her entire body was now ablaze with energy as her twisted limbs sought to fix themselves.\n\nShe had downplayed her injuries to Cyrus. When her body had been tossed from the Black Palace balcony to the sharks below, she had belly flopped into the water and gotten caught up in a tumbling current. It was like being stuck in a washing machine as she was repeatedly dragged over sharp rocks. The nearby sharks had fled, knowing that her meat was poison, and it wasn't until Tick Tock had yanked her free of the churning tide that she had a chance to rest and assess the damage done to her body.\n\nHow long would it have been before she had decided to eat Amida in front of Cyrus? Or worse, what if Amida hadn't hit the spot, and she had turned her hunger on the mage instead? These were both questions that she had been afraid to discover the answers to, and was grateful that Lily had reappeared when she did.\n\nThe magical heat flowing through her gut sped up the healing process throughout her body, leaving behind a fiery trail of lust that permeated her very being. It was dark beneath the water, and when the two of them bounced off the bottom, all she could see was the dark shape of the body on top of hers.\n\nDown in the murk, the only sounds that could be heard were the lapping of the waves against the rocks and the distant hum of boat engines as the cargo ships carried off into the night. Her sense of smell was finally dulled out, and the only sense she had that was properly functioning was her sense of touch. The sand was coarse against the skin of her back, and made a scraping sound when she shifted her head against it.\n\nLily's eyes glowed like a pair of molten glow sticks above her. Dana had no idea what expression the succubus wore, and frankly, didn't care. At the moment she was in a hurry to get off and return to the surface to discuss the next steps in recovering the Dragon's Seed.\n\nDelicate fingers pushed Dana's bikini top up, and a hot mouth kissed around her chilled areola, Lily's tongue suddenly rough like sandpaper. Dana moaned, letting the remaining pocket of air out of her lungs, and then inhaled seawater. Her body now felt heavy, and she bit her lip when a pair of hands pinned her wrists to the ocean floor.\n\nThe glowsticks winked at her, then vanished, leaving Dana in the dark. Her ears popped, and she wondered how deep down they were. Something was now tracing shapes along her inner thigh, and she spread her legs wide, hoping to fill the void that had opened up inside of her.\n\nLily must have sensed Dana's urgency, because she was suddenly flipped over onto her stomach, her ass raised in the air. When Lily's tail penetrated her from behind, she screamed soundlessly into the waves as her face was pressed into the sand. The current was still strong enough here that the two of them were rocked back and forth as Lily fucked her from behind, and she accidentally found a cluster of rocks with her outstretched hands, and held onto them for support.\n\nHands caressed her breasts and played with her exposed nipples, pinching and tugging them as she was filled from behind by an ever-thickening tail. With her other senses dulled, all she could concentrate on was the heat and pressure of the tail buried so deep inside her snatch that she could have sworn it was pressing out against the skin of her belly.\n\nThe pressure inside her built to a crescendo, and just as the first wave of an orgasm radiated outward through her pelvis, she felt a pair of hands grip her ass and a tongue pressed against the rim of her asshole.\n\nPleasure ripped through her body, and she opened her mouth to moan and accidentally got a mouthful of sand. Lily's tongue swirled around the sensitive skin of Dana's anus and then pushed inside of her, expanding like a balloon until she felt like she was overflowing. Her body couldn't decide which sensation to focus on, and the world felt like it was spinning.\n\nThis is who I am now, she thought to herself. Her mind felt detached from her body and the world moved in slow motion around her as the water leached away what little body heat she had remained. Getting fucked like an animal on the ocean floor. Typical dead girl things.\n\nShe thought back to everything that had happened since she left the Radley home, all of the people she had met and the things she had experienced. The arachne, time travel, even the times she should have died. It occurred to her now that through this entire adventure, she had been desperately clinging to the idea of trying to reclaim the person she was, to be the woman who Alex had fallen in love with. But once she was alive again, would she ever feel that way again? Was there any hope of going back to the person she had once been?\n\nIf she had been breathing air, she would have screamed for Lily to keep going. Her whole body was a raw nerve, desperate to be touched, and until she came, she was a slave to its desires. Dana felt like she was on the edge of some giant revelation, but she was also on the edge of a massive orgasm. In the brief moments of clarity, she tried to recapture her train of thought, but the fire inside of her finally blossomed, sending a supernatural heat through all of her limbs.\n\nBeneath her fingertips, the rocks she had been holding onto crumbled, and the two of them were caught in the swirling tide, drifting further out into the darkness. Dana let the water carry her, wondering how far out to sea she could go before finding the willpower to swim toward the surface.\n\nLuckily, Lily had kept her head, and was pulling them both up to the surface now. Dana was the very definition of dead weight, but started kicking her feet to help their ascent. When their heads finally popped above the surface of the water, Dana retched several times, successfully evacuating the water from her lungs and stomach. By the dim light, she could see Lily watching her with an arched brow.\n\n\"So that was different,\" commented the succubus. \"Want me to tell you how I love it when you're rough?\"\n\n\"Shut up, it's been a shit night,\" Dana replied, her voice rasping.\n\n\"So, about your new pet? We absolutely cannot keep him, and probably should have him euthanized.\"\n\n\"Hold up.\" Dana coughed violently and felt her throat properly clear. \"We need him. Tristan is too strong for the two of us, and Cyrus said he would cast a spell to keep us from betraying each other.\"\n\n\"Hmm. Must be a linking spell. Do unto others as you would do unto yourself. I'm sure there's a catch, though.\"\n\n\"He's just as screwed as we are. The bitch with the sword, remember her? Apparently, she's being mind-controlled, and the rest of his people were killed.\"\n\n\"Boo-fucking-hoo.\" Lily grabbed Dana by the wrists and started kicking her feet again, towing them back to the outcropping of rocks where they had left Cyrus. \"So you're saying I shouldn't kill him?\"\n\n\"Not yet. He may be a threat to us, but that asshole Tristan is a threat to everybody. And if we move now, I'm all juiced up, so will be able to hold my own a bit better.\" Fresh from a feeding, it felt like she had lightning in her veins now.\n\n\"Hmm. Just so you know, that was the last of Mike's most recent batch. I lost some of it when I got smoked, so try not to get too fucked up, or you'll be snacking on whoever survives this part of our adventure.\" Lily went quiet for the rest of the swim, and a few minutes later, they pulled themselves back up onto the rocks. Cyrus was still splayed out with Tick Tock hovering above him, locking him in place.\n\n\"I don't know, I kind of like him like this,\" Lily said, then knelt down next to Cyrus. \"He's like a bug pinned to a board. We could dissect him, or\u2014\"\n\n\"I'd like to see you try,\" Cyrus grumbled, but the look on his face made it obvious that he knew he wouldn't be able to fight back.\n\n\"Boss girl says you get to live. For now.\" Lily slapped his cheeks condescendingly. \"Lucky little boy.\"\n\nCyrus' face turned red, but he remained quiet.\n\n\"Let him up, Tick Tock.\" Dana crawled along the rocks and watched as the mimic's limbs folded back into its body, then it laid down next to her like a giant, nonsensical spider. Cyrus sat up and moved slowly while rubbing his wrists.\n\n\"What do we do with this?\" asked Lily, and Dana looked over to see that she was crouched down over Amida.\n\n\"Leave him,\" Cyrus said. \"He's carrying some magic we can use, but I would prefer he remain unmolested.\"\n\nLily snorted, but Dana ignored her. \"I'm thinking that Lily can fly us back up to the Black Palace, but then what? Should we try and land on his balcony and attack him while he's sleeping, or maybe we should try to find a different way in?\" There were plenty of options available to them, but she wasn't sure which ones would be best.\n\nCyrus' forehead furrowed, and he moved toward Amida's corpse. He knelt over his dead friend and appeared to be saying a prayer of some kind. Lily made a face like she was going to blow a raspberry, but Dana got her attention and shook her head to let her know that now was not the time.",
        "Once finished, Cyrus stared out at the water for several minutes. When he spoke, his voice was barely audible over the waves. \"I doubt he is sleeping in his room,\" he said, then turned around. \"This is a big assumption, but if he can breathe fire, it means that his draconic heritage is likely tied to the ground, like an earth-based dragon. Dragons feel more comfortable in their element, and it wouldn't surprise me to discover that he is holed up in a basement level room, surrounded by piles of cash.\"\n\n\"Seriously?\" Dana almost laughed at the idea of Tristan sleeping on a cash pile.\n\nCyrus nodded. \"Dragons may be powerful, but they are predictable. He is far along his dragon evolution, which means he probably hasn't found a good balance between his new instincts and his logic.\"\n\n\"Pardon me for interrupting, but I haven't seen a lot of evidence that you are any good at predicting anything.\" Lily crossed her arms over her chest. \"You and yours have been pretty easy to fool.\"\n\nCyrus grimaced, then nodded. \"It has been a long time since I have faced a challenge such as this, or you two, to be honest. I can admit with full candor that my hubris has been my undoing. I have no problem telling you what I know, but maybe you should view my words through the lens of an old man who has been doing this for too long.\"\n\n\"Good. As long as we all agree that you're incompetent, I'm happy.\" Lily sat back on her tail. \"So, sleeping in the basement. Go on.\"\n\n\"If he is in the basement, he will have his people watching the doors and concentrated in the lower hallways. When he took control of our women, only one was left standing, and Tasia is a force unto herself. It's likely she will be a trump card, and I have no idea how he intends to use her.\"\n\n\"She isn't a virgin, is she?\" Dana wondered if Tristan had already made a snack of her.\n\nCyrus smirked. \"We are hardly celibate. Had to do away with that centuries ago when it caused too many problems.\" This statement got a chuckle from Lily. \"I've never asked, but I've heard rumors, and wouldn't expect her to be chaste.\"\n\n\"Hmm.\" Lily was now deep in thought. \"So maybe go in through the bedroom? He may have a militia, but I doubt they are trained to watch the skies for flyers. They will be concentrated on the ground level, and will undoubtedly be gathered around wherever he is sleeping. We will have to take them out quietly.\"\n\n\"But any noise we make will alert him that we're coming.\" Dana closed her eyes and pictured the interior of the building.\n\n\"I have a spell that will muffle sound,\" Cyrus added. \"But we could also cast it on his men. Even their weapons would be significantly muted, which should keep Tristan from hearing what is going on. When we fight him, we can't be dodging gunfire at the same time, this will already be difficult.\"\n\n\"So what about your friend?\" Lily asked. \"Kill her?\"\n\n\"No.\" He shook his head. \"Unless it's impossible to avoid. Maybe you could use your tail to knock her out, but I would ask that you leave her intact, otherwise.\"\n\n\"Fine.\" Lily's tone conveyed that it was anything but fine. \"And after we take down dragon boy?\"\n\n\"We negotiate. We both want the necklace, so we try to reach a middle ground.\"\n\nLily looked like she was going to say something, but Dana held up a hand to stop her. \"I think that's the best we can do for now,\" she said, with absolutely no intent to follow through. There was not going to be a middle ground, and she knew that they would be at odds once Tristan was down. Strangely, she had absolutely no qualms about doing what was necessary to ensure the Dragon Seed remained with her.\n\n\"Dana says you have a spell to keep us from going after each other. I suggest you cast it now, so we can move forward with preparations.\" Lily looked impatient now, like she was itching for a fight. \"And no sudden movements, or I'll make you regret pissing me off.\"\n\nCyrus held up his hands to reveal that they were empty, then started digging through Amida's pockets. It was almost comical watching him pull out small objects and wands from the shorts that Amida was wearing. The tidy pile next to the dead mage was large enough that Dana wondered why the Order didn't simply make billions of dollars making magical pockets for women's clothing.\n\nOnce Amida was sufficiently looted, Cyrus found a flat place in the rocks and drew a circle in the air with what looked like a piece of chalk. He made a series of loops in the air in a triangular pattern, then shoved his hands up through a pair of loops, which tightened around his wrists.\n\n\"You both need to do the same,\" he instructed them. There were four more loops, and both Dana and Lily followed along, but not before Lily placed the tip of her tail against Cyrus' throat.\n\n\"This checks out so far,\" she warned. \"But I would love nothing more than a reason.\"\n\n\"I believe you,\" he said, then began a low chant. The hovering circle glowed faintly, and Cyrus spoke quickly in a language that Dana assumed was Latin.\n\n\"It's a typical binding spell,\" Lily told her. \"If you hurt him, it also hurts you. I'm not sure how that would work in your current condition, to be honest, because you're already dead, but it would be bad. Even I would get messed up by such a spell.\"\n\n\"Like you were when you tried to mind meld with the creature in the Pit?\" When Dana asked her question, she noticed that Cyrus paused for a moment in his incantations, and she could smell the cold sweat that broke out on his forehead.\n\n\"Nothing that bad, but it would disable me. You too, probably, which means he would have a chance to take the seed and run.\" When Cyrus stopped chanting, the glowing ring shrunk down and glowed briefly on their wrists. \"It's like a temporary friendship bracelet,\" Lily noted, looking at her wrist.\n\n\"Until sunset,\" Cyrus said. \"Plenty of time, should we succeed.\"\n\n\"Then let's get started.\" Lily extended her wings. \"Get the clock to shrink down so I can carry you both. I'll take Dana up first, then come back for you.\"\n\n\"Why not take me first?\" Cyrus asked.\n\n\"Because you still need to pick up all this shit,\" Lily replied, indicating the magical treasures scattered about. \"As much fun as it would be to watch you play pocket clown car, I want to strike while the iron is hot.\"\n\n\"Fair enough,\" he replied.\n\n\"Need you to look away for a moment,\" Dana told him. \"Tick Tock can only change when nobody is looking.\"\n\n\"Fascinating,\" Cyrus muttered, then turned away from the mimic. \"We've never had a chance to confirm how a mimic works, but quantum locking is a leading hypothesis.\"\n\nDana rolled her eyes. She hadn't really thought much about the mechanism by which Tick Tock functioned, but always found it annoying when people attached the word quantum to anything. When she closed her eyes, Tick Tock shifted about, and she opened them to see that the mimic was now a backpack. She slid the mimic onto her shoulders and gave a thumbs up to Lily.\n\n\"Ready to go,\" she said, and Lily wrapped her arms around Dana's waist and took her into the sky. They moved out to sea, and once they were about a mile out, Lily began a slow climb into the sky. Dana looked down into the inky black below, and wondered if the sharks were still about.\n\nWhen they began their approach, she worried that Tristan's militia might be monitoring the skies with night vision, and that a sniper's round would find its way into her head. Or perhaps they would have drones on patrol, and their entry would be spotted right away. Multiple possibilities went through her mind, and it wasn't until they touched down by Tristan's pool that she realized that there was nobody nearby. Upon touchdown, the two of them crouch-walked up until they were hidden by one of the pillars.\n\n\"Looks like Cyrus was right,\" Lily said. \"I don't see that asshole in his bed.\"\n\n\"Are you doing okay?\" It felt like an odd question to ask the succubus, but she was getting a strange vibe from Lily.\n\n\"I'm eager to dish out a little retribution is all,\" Lily said, her dimly lit features serious. \"Now wait here until I get back with numb-nuts, and we can go slay ourselves a dragon.\"\n\nDana nodded, and watched as Lily scurried over to the wall and tossed herself over the side. She didn't even hear the splash over the sound of the waves and wind, and wondered if anybody had spotted the succubus on the way down.\n\nIt had taken them maybe fifteen or twenty minutes to get up here, which meant she had a little bit of time to kill. She was tempted to go snoop around Tristan's bedroom, but thought better of it. There was too much at stake to risk being discovered over a stupid decision.\n\nShe caught the scent of roses and freshly ground red pepper and frowned. The scent was dim, yet growing stronger, and when she peered around the column she hid behind, she was disheartened to see that Tasia walked into the room. The knight was covered in soot and blood, and her eyes were intensely focused on the balcony.\n\n\"I know you're out there,\" she said, her words barely audible through the glass. She drew her sword and flipped it out to reveal the razor-sharp edge that previously removed Dana's arm. \"I set wards.\"\n\n\"Oh, fuck me,\" Dana whispered. She heard one of the zippers rustle behind her and stuck her hand behind her back to the now open pocket of her backpack. When she reached her hand inside, she felt an intense cold followed by the sensation of a metallic handle being pressed into her palm.\n\nTasia stepped out onto the balcony, and Dana moved further away into the shadows, keeping her own sword in its smaller form. If she could remain hidden, maybe she could stay hidden until Lily came back with Cyrus and the three of them could take Tasia down together.\n\nThe knight gritted her teeth, and her cold eyes glowed as if lit from within. She swept her gaze over toward where Dana was hiding and readied her weapon.\n\n\"There you are.\" Tasia swung her sword casually, then took a step toward Dana. \"This time, I'm going to cut you into so many pieces that no amount of witchcraft will bring you back.\"\n\n<center>\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f</center>\n\nI really hope you enjoyed that chapter, and I hope you are getting excited for what promises to be the team-up of a lifetime! It's a deal with the devil, and things are about to get hot and messy in the Black Palace!\n\nI want to thank you again for reading my stories. I spent a lot of time on them and trying to weave major narrative threads through multiple chapters, and I definitely appreciate all the kind words and excitement they generate. I try to read all the comments, but with so many chapters out, I miss a bunch from older posts. If you absolutely need me to see something, send me a feedback form! I read them all (eventually) and will do my best to keep giving you fun stories in my monster-verse!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "succubus",
        "zombie",
        "the truth comes out",
        "under the sea",
        "that sinking feeling",
        "ass in the water",
        "face in the sand",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/dead-and-horny-ch-10"
}