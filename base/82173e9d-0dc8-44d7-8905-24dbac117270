{
    "title": "There and Back Again Ch. 125-126",
    "pages": [
        "Chapter One Hundred Twenty-Five: *Unexpected Recruits\n\n\"If you two don't mind, could we talk?\"\n\nSeranni nodded, but Velanna sniffed derisively. \"We need to speak with the Warden Commanders, as I understand it, Shemlen. We don't have time for idle chatter.\"\n\nI stiffened, annoyed at her continuing rudeness. Not that it's surprising, but...seriously?\n\nSeranni barked something at her in Elvish, and Velanna blanched, softening her tone. \"My sister sickens. These delays cannot be healthy. Please.\"\n\nI nodded. \"I have my husband and brother's leave to speak for them about your...situation. No more delays, I promise. Please, follow me.\"\n\nI turned and headed towards the small sitting room, trying to look confident, hoping the two would actually follow me. I heard a flurry of elvish from Seranni, obviously chastising her sister once again, and then breathed a sigh of relief as several sets of footsteps followed me out of the main hall.\n\nI motioned to chairs inside the sitting room, seating myself on one after the two sat down; Wulf lingered behind me, foregoing a chair and leaning against the wall imposingly.\n\nVelanna eyed me suspiciously. \"Why are you the one we must talk to?\"\n\n\"Didn't jump back quickly enough when they asked for volunteers?\" I joked. Velanna's expression grew even more annoyed, and I sighed. \"We thought it might be easier for you. Two large human men can be...intimidating. We were hoping this would be less uncomfortable.\"\n\n\"So a flat-ear and a shem noblewoman were supposed to make us feel at home? I am not intimidated by two men.\"\n\n\"Of course you aren't,\" I muttered, trying to avoid rolling my eyes. \"I am not your typical noblewoman, and Wulf's upbringing was...unique, but he isn't from any Alienage. If you give us a chance, we may surprise you.\"\n\nSeranni and Velanna held a brief, acrimonious conversation in elvish; Velanna flushed, Seranni just looked frustrated, but eventually both nodded their agreement.\n\nI took a deep breath.\n\n\"What I am going to tell you, you must promise to keep to yourselves. No one outside of the Grey Wardens knows, and the order is known for keeping their secrets. Those in Weisshaupt, the home of the original Grey Warden order, would not hesitate to have you killed for this knowledge. The Wardens here have separated themselves from Weisshaupt, but the risk remains. However,\" I held up a hand to forestall Velanna's obvious question, \"we believe you deserve to know before you make your decisions.\"\n\n\"What decision?\" Velanna demanded. Seranni rolled her eyes at her sister, but the mage continued, \"Just cure her. We do not desire any knowledge of your precious Wardens.\"\n\n\"I know. But it isn't that easy, unfortunately.\"\n\nSeranni squeezed Velanna's arm in warning. \"We will hear you out.\"\n\n\"I need your word that you will not tell anyone the secrets you hear today. Not your friends or family, not your clan or Keeper.\"\n\nThey nodded, Seranni looking curious, Velanna suspicious. \"We give you our word.\" Velanna said it out loud, for which I was grateful. Seranni's agreement was apparent.\n\nI sighed. \"There is no cure for the darkspawn taint. No one who is infected will survive it.\"\n\nVelanna sputtered indignantly, while Seranni slumped, looking defeated.\n\nI held up my hand again. \"However, there is a way to slow down the progression.\" Velanna lapsed into silence, while Seranni just stared at me with tear-filled eyes. \"Normally an infected person would turn into a ghoul within a few days; there is a way to stretch that time out to years. Thirty, possibly even fifty years. Enough time to live a mostly normal life, assuming you are infected as an adult. However, there is a cost.\"\n\nI had both of their attention, and they stared at me as though transfixed. Neither even made a move to interrupt, which was so out of character for Velanna I nearly laughed.\n\n\"Grey Wardens have purposefully exposed themselves to the taint, in a special ritual that is responsible for the delay. That ritual makes a person into a Grey Warden, and it is the only way to slow the progression.\n\n\"It is not without risk. It is very unpleasant. Some who undergo the ritual will not survive -- exposing yourself to the taint is not for the weak. And those who survive are...changed. They are stronger, more dexterous, have greater stamina, and can sense the darkspawn; darkspawn can also sense them. They see the darkspawn in their dreams. But they also must dedicate their lives to fighting darkspawn.\n\n\"If you stay, you may visit your clan, but you will never truly be one of them again. They will not understand the sacrifices you make to save them. You wouldn't fit in, even if you tried. Even those who try to run away...they are still Grey Wardens. The taint is in their blood. One day, they will still become ghouls, unless they die first.\n\n\"So that is your choice, Seranni. Die now of the taint -- either as a ghoul or during the Joining -- or live a life very different from what you had planned, and die from the taint later.\"\n\n\"I'm not much of a fighter.\" Seranni worried at her lower lip with her teeth. \"You said I'd have to fight darkspawn?\"\n\n\"You'll learn, if you choose to stay. We have many talented fighters in the Order. I couldn't fight either, when I first met the Wardens. They'll assess your skills and help you train in whatever style seems to fit. And I understand you're skilled with plants and herbs? We could use that. You'll be able to contribute.\"\n\n\"What about my sister?\" the blonde asked.\n\n\"We understand that Velanna has been exiled from your clan. It is possible that returning with a treaty of mutual aid negotiated with the Arl of Amaranthine would ameliorate that, and she could return home...but we would also be willing to offer the Joining to her.\"\n\n\"Since Seranni is not an experienced fighter, I suppose this is your way of forcing me to become a Warden?\" Velanna snapped. I could see hurt, resentment, but also fear in her eyes. She thinks we'll let Seranni die if she refuses.\n\nI sighed again. \"It's an offer, not a demand. Your skills would be useful, but you have the option to leave. We thought you might want to stay together. Arl Nathaniel,\" I refused to call him Arl Howe, \"would like the opportunity to make a treaty with your clan, with any nearby clans. Non-aggression, trade deals, that sort of thing. So you could go back to your clan. I'm sure they'd take you when you could guarantee them safe ground in Ferelden.\"\n\n\"Why would you do that?\" Velanna asked, looking unexpectedly vulnerable. \"I...\"\n\n\"We aren't monsters, Velanna. I know you've had bad experiences. I've seen others with worse, believe me.\" I felt Wulf twitch at my back, and I knew he understood I was thinking about Kallian. \"Elves are treated worse than slaves, and the Dalish are treated like vermin to be exterminated. I don't agree with it. I wasn't raised to think like that. The King, the Arl...they're trying to change it.\n\n\"But among the Wardens, everyone is equal. No one cares if you're human, elf, or dwarf, male or female. All that matters is that you fight darkspawn. A lot of Wardens were outcasts of some sort -- some were criminals, some just didn't fit in, some acquired the taint and couldn't survive any other way. No one asks, and no one cares. The Wardens are a family -- dysfunctional, probably, but always there for each other. And if you wish to remain with your sister as a Warden, we would not say no. However, even if only one of you survives, we expect the other to remain with us, and that may be difficult to accept.\"\n\nI turned to Wulf. \"Anything you'd like to add?\"\n\nHe shook his head, unkempt mane of hair flying. \"Just that what Sierra says is true. The Wardens treat me no differently than any of the humans or dwarves. I hadn't expected that. It's hard work, but it's fulfilling, too.\"\n\nI turned back to the two women. \"I'll leave you to talk. Ask for me or Wulf if you have questions. But if you choose to stay, we should do the Joining no later than tomorrow morning.\" I gestured at the black veins creeping up Seranni's arms. \"Wait too long, and the chances of success go down.\"\n\nI left them there with Wulf, and went in search of my husband. I found him with Aedan and Sigrun; the dwarf was smiling and nodding, and I gathered she'd agreed to become a Warden. They were telling her she would still be a member of the Legion of the Dead, and she assured them she would gladly give her loyalty to another group who fought darkspawn in any way they could, like the Legion.\n\nShe grinned at me, and I welcomed her warmly, but briefly, before excusing myself.\n\n\"I'm going to go take a nap,\" I explained, pulling out of Alistair's arms.\n\n\"It's been a rough few days,\" Aedan agreed. \"Get some rest; we will see you at dinner.\" He gestured to the door. \"Why don't you show me just how good you are with those daggers, Sigrun?\" They left together, discussing weapons and sparring.\n\n\"Can I join you?\" my husband asked, cupping my cheek with one big hand.\n\nI looked up at him, his ridiculously handsome face bearing a slight smirk, eyes twinkling, and I shivered slightly at the promise I saw there. I nodded, and without a word, he took my hand and led me up the stairs.\n\nAlistair's lips were on mine the moment our door closed, his hands weaving into my curly hair, and I grabbed a handful of his tunic to hang on as I opened my mouth for him. His chest was hard and warm under my fingers, and his tongue stroked mine until I moaned, breathless.\n\n\"I thought we were going to be napping?\" I panted.\n\n\"Oh, we will.\" He stepped away, pulling his shirt up and over his head, revealing his perfect sculpted abs and shoulders. \"After,\" he continued, turning back and stalking towards me.\n\nI squealed as he scooped me up into his arms and practically threw me at the bed; I scrambled backwards towards the headboard as he prowled after me, crawling onto the bed with a predatory grin. He reached out and grabbed my ankle, my dress riding up my thighs as he pulled me towards him, and I giggled as his head burrowed down underneath the voluminous fabric of my skirts.\n\nI stopped giggling when his fingers slipped my smalls aside and his tongue lapped into my folds, grazing my pearl before delving deeper to press into my entrance; he nudged my legs over his shoulders as he thrust into me, and I gasped and writhed under his ministrations. He'd taken me from drowsy and stressed to almost-orgasmic inferno in mere moments, and I fisted the blankets under me as he began plunging his tongue into me for real. He brought me to my peak quickly, fingers teasing my pearl, tongue inside me, and I screamed as I came, vision greying out around the edges.\n\nAlistair licked me gently, prolonging my orgasm and carrying me through several aftershocks, finally pulling away to push up onto his knees, my legs still propped on his shoulders. He licked his lips in exaggerated fashion before pressing a kiss to one bony ankle.\n\n\"You taste so good,\" he murmured, and I blushed -- not that anyone would be able to tell with how flushed I was. My dress was puddled at my hips, and he grinned at me, suddenly almost shy. \"I suppose now would be a good time to take this off?\"\n\nI laughed out loud, swinging my legs down to stand beside the bed, fingers going to the buttons down the front of my gown. Alistair helped me, and after much giggling and tickling, I finally stepped out of my now-wrinkled dress, tossing it into the hamper with a sigh. Alistair pulled me to him, and my breasts pressed up against his bare chest, his erection tenting his trousers between us.\n\nI slipped off my smalls, then reached down to run my hands over the bulge, making him gasp. \"Now, let's see what we can do about this, shall we?\"\n\nI unlaced his trousers as he watched, eyes dark; snaking one hand inside as soon as they were loose, I grasped him gently, enjoying the velvet-over-steel feel of his impressive length in my palm. Growling slightly, he stepped off the bed to shuck his trousers completely before gently lifting me, bridal style, and climbing back on to the bed with me in his arms. He set me down softly, his bulky form leaning over top of me, and I spread my legs to allow him to settle against me, skin to skin. I sighed, enjoying the heaviness and pressure of him over me, and the feel of his hardness nestled against my slick folds.\n\nHe spent an eternity there, not moving, alternately kissing me deeply and nuzzling my neck, as we whispered words of love to each other; finally he rested his forehead against mine, staring deeply into my eyes as he entered me slowly. He shuddered at the heat and damp as I took him in, and I wrapped my legs around his waist, pulling him deeper.\n\n\"So big,\" I groaned, squeezing his length with my pelvic muscles. \"So good. Please, Alistair.\"\n\nAnd then he was moving, slowly sliding in and out of me as I raised my hips, meeting him thrust for thrust. His piercing gaze never left mine, and I struggled to keep eye contact as he filled me so deliciously again and again. Still sensitive from my orgasm, I shuddered as he ground himself against me, stimulating my over-wrought nerves.\n\nI could feel him trembling, trying to hold back; I used my legs to urge him on until he was almost pounding into me, and he groaned loudly.\n\n\"Come for me, Sierra. My love, my wife, please...\"\n\nThe huskiness of his voice, the desperation, combined with the pressure building in my core, and I came apart in his arms, head thrown back and eyes closed against the onslaught of sensation. He collapsed against me, and I could feel the scalding heat as he released inside me. We lay there, boneless and tangled together, until we caught our breath and reluctantly disengaged.\n\nHe flopped onto his back, pulling me against him to rest my head on his shoulder, one of my legs thrown carelessly over his. I trailed my fingers mindlessly through his sparse chest hair, and he kissed my forehead softly.\n\n\"You're incredible,\" he murmured. \"So beautiful.\"\n\nI flushed, embarrassed but secretly pleased. \"That's just the afterglow talking.\"\n\n\"Don't make me prove it to you. You said you wanted a nap, not another round.\" He squeezed me, and I giggled. \"I'll do it.\"\n\nHe moved as though to roll towards me, and I hurried to push against his chest, holding him down. \"Okay, take it easy. Whatever you say, husband.\" He snorted and settled back, and I snuggled back into his embrace. \"Sleep, love.\"\n\nTaking my own advice, I drifted off into a dreamless sleep.\n\nI was woken a while later by a noise; I was alone on the bed, and Alistair, wearing nothing but his loose sleeping trousers, was peeking out the door, talking to someone. He closed the door softly, turning around and smiling when he saw I was awake.\n\n\"Aedan,\" he told me, \"has asked to meet with us before supper. We're doing the Joining tonight.\"\n\n\"For how many?\" I held my breath, not sure if I was hoping for one, two, or three.\n\n\"Two, tonight. Seranni and Sigrun. Velanna has asked permission to return to her clan -- once she's confirmed Seranni survives -- and negotiate a peace treaty of sorts, and then she may Join later.\"\n\n\"And we can't afford to wait for her, with Seranni.\" He nodded. \"I wonder if Velanna will come back after. She can be so unpleasant, though I know she's a good person underneath all that. I don't even know which I hope for.\" I slipped out of the bed. \"How long do we have?\"\n\nHis eyes darkened as they raked down my naked form. \"Long enough,\" he replied, untying the string on his trousers. I gulped and backed up, and he smirked at me. \"Now, about the proof you seemed to require...\"\n\n****\n\nAn hour later, after a hasty shower and shoving my wet hair into a pony tail, Alistair and I joined Aedan and the rest of the Wardens in the small sitting room. Zevran shot us knowing looks, and while I blushed, Alistair just grinned, squeezed my hand, and joined Aedan at the front of the crowd. I looked around, and noted Rolan standing alone, with Oghren and Bel between him and the rest of the Wardens; everyone was ignoring him, and I wondered what he'd done to earn himself their anger. Knowing what I did about him, it wasn't hard to guess it was something to do with the mages. Probably accused Alim of blood magic again or something. I ignored it, hoping that Alistair and Aedan would be successful at dealing with him. I did know that they were strictly monitoring his access to Lyrium, and wondered if that was making him cranky.\n\nWhen Seranni and Sigrun arrived, Aedan sent the other Wardens all out to go get dinner, except Alim and Rolan, the two most junior Wardens. The two stood as far apart as it was possible to be within the small room, making me chuckle. He sent a scowling Velanna away as well, which I thought was for the best -- knowing your sister might die in the next hour was bad, but watching it would certainly be worse. Anders had made up the Joining potion with blood taken from one of the darkspawn in the basement, and I saw the chalice sitting on a table to Aedan's left.\n\nSeranni stepped up to me nervously, and I nodded encouragingly at her. She had to be afraid, and I felt the urge to hug her, but resisted. Even though she was much more pleasant than her sister, I wasn't sure she'd welcome physical affection from a shemlen. \"I'm glad you're here,\" I whispered. And I was; she might not survive the Joining, but dying of the taint or ending up a ghoul wasn't a better outcome. And just maybe she'd survive.\n\nSigrun smiled at me, and I grinned in response.\n\n\"Welcome, Seranni and Sigrun,\" Aedan began. \"Tonight...\"\n\nI didn't catch what he tried to say next, because Rolan interrupted him. \"Commander, should we really be discussing this in front of a civilian?\"\n\nIt took an embarrassingly long moment for me to realise he meant me. While I was technically a Grey Warden, very few people knew, due to my strange response to the taint -- something we assumed was due to whatever the Architect had done to me as a baby. So Rolan had no way of knowing I was a Warden, but it still surprised me that he objected, given who my husband and brother were, and the fact I'd been present at his own Joining. I raised my eyebrows and turned back to Aedan and Alistair, waiting to see how they'd respond.\n\n\"Your concern is noted, Rolan. However, this civilian knows as much about the Order as you or I, and has been to multiple Joinings. She will be our host and landlord once the darkspawn threat here has been dealt with, and she is somewhat responsible for the recruitment of both of our new Sisters. I also feel it is appropriate for a woman to be present at a Joining when all the recruits are female, and all the Wardens male. She stays.\"\n\n\"But-\" the former templar objected.\n\n\"Thank you, Rolan. If I may continue?\"\n\nRolan finally nodded, refusing to look directly at me. I rolled my eyes and looked back at my brother again.\n\n\"Tonight, we will be adding two names to the ranks of the Grey Wardens of Ferelden. I know you must both be nervous, but we welcome you with open arms.\" He talked through a spiel similar to Duncan's -- the one I remembered from the game, and from more recent Joinings, about the formation of the Order and its aims. It ended with the Grey Warden motto: \"In War, Victory. In Peace, Vigilance. In Death, Sacrifice. Here in Ferelden, having seen the unfortunate side to some of the politics involved, we have separated ourselves from Weisshaupt, with the hope that we can remain true to our goal -- eradicating darkspawn and guarding against the next Blight. Our goals are the same, despite the schism.\n\n\"We speak only a few words before the Joining. Rolan, Alim, if you would?\"\n\nThe two men, despite their differences, spoke in unison, the words heavy and evocative as always.\n\n\"Join us, sisters. Join us in the shadows where we stand vigilant. Join us as we carry the duty that cannot be forsworn. And should you perish, know that your sacrifice will not be forgotten, and that one day, we shall join you.\"",
        "Aedan lifted the chalice, disturbing the murky contents, and the smell of darkspawn blood, so familiar to me after a year of fighting them, wafted across the room. Sigrun's eyes widened as she seemed to realise what was expected of her; Seranni just nodded to herself resignedly.\n\n\"Sigrun, you are called upon to submit yourself to the taint.\"\n\nThe dwarf glanced at me, expression slightly panicked.\n\n\"It's going to be fine,\" I whispered reassuringly. \"Go on.\"\n\nAedan handed her the chalice. She frowned, shrugged, and then lifted it to her lips. I remembered the burn of that disgusting drink, and I winced sympathetically as she gagged at the taste. Aedan snatched the chalice back quickly as Rolan stepped forward smoothly. Sigrun coughed, grabbed her throat, and then screamed; her eyes rolled back in her head and she slumped into Rolan's arms.\n\nI stepped forward, feeling her breath on my fingers at the same time I sensed the taint flowing through her veins -- hers reminded me of the sensation of hugging a furry teddy bear. \"She's fine.\"\n\nRolan settled her on the little couch, as Aedan turned to Seranni.\n\n\"Seranni, step forward. For the greater good,\" he added, as she took the chalice.\n\nShe seemed almost eager, and I could see why; she'd lost some more hair, and the blackened veins were up past her elbow. Her skin was coated in a fine sheen of sweat, her complexion sallow, and her lips pale. It was clear to me she didn't have long, and I wondered if she felt worse than she looked. The elf grimaced at the thick, smelly fluid, and took a breath. With one last look around, she smiled softly and drank.\n\nI held my breath as she handed the cup back to Aedan; she went through the same set of actions as Sigrun: grabbing her throat, screaming; but as she fell, something different happened. Instead of going limp, she jerked against Alim, who cursed as he almost dropped her. Alistair jumped forward and the two men stabilised her and lowered her to the floor. She was flopping like a fish, mouth open in a silent scream, twitching; her back arched off the floor, her head rolling from side to side, her arms and legs thrashing, her breathing ragged and wet. Her head snapped back and made sickening contact with the floor; one arm knocked against a table leg. I'd never seen anything like it.\n\nAedan and Alistair traded startled looks that weren't so much shocked as worried. Aedan grabbed a pillow off a nearby settee, propping the seizing woman's head on it to keep her from banging it again. Alistair moved the nearby table. Their actions spoke of experience, like they'd done that before. Alim just stared at the seizing girl, as did Rolan from near Sigrun, unconscious on the couch.\n\n\"What?\" I asked. \"What is it? Why's she doing that?\"\n\nAedan looked over at me, a mask of careful neutrality coming over his features. \"How many Wardens can you sense in this room, Alim?\" he asked, never taking his eyes off me. It was clear the question wasn't meant only for the mage. I shifted my attention to my senses and counted.\n\nI could feel Alistair, my personal sunshine; Aedan and his crushing duty; Alim, agitated and angry; Rolan, suspicious and insecure; and Sigrun's new fuzzy taint signature. From down the hall I could sense more, muted by distance, but in the room with me, I counted five.\n\nI gasped. Aedan nodded. Alistair reached out for my hand, almost unconsciously pulling me close, just as Alim's puzzled voice replied, \"Four. Aedan, Alistair, Rolan, and Sigrun. With me that's five. Only...only five. I can't sense her.\"\n\nChapter One Hundred Twenty-Six: Warden Weirdness\n\n\"I can't sense Seranni.\" Alim's voice sounded confused.\n\nRolan was shaking his head, clearly in agreement with the inability to sense the elf. I restrained myself from making the same movement; Rolan and Alim weren't supposed to know I could sense the taint at all. I was guessing by the slightly ill-looking expressions on my husband's and brother's faces that they couldn't feel her either.\n\nThe blond elf continued to flop around, her seizure ongoing. A loud thump from her booted foot hitting the floor brought us all back, leaping into action.\n\n\"Alim, do what you can to heal Seranni. Rolan, take Sigrun up to an empty room to rest. Do not speak to anyone -- not one person, you hear? -- and stay with Sigrun until we send for you.\" My brother started barking orders, and we all leapt to obey. \"Sierra, can you get Anders? Quietly. And send a servant to Sigrun's room with some food -- she'll need it when she wakes.\"\n\nI nodded and bolted out of the room, Rolan right behind me with the unconscious dwarf in his arms. I peeled off to the right to get Anders from the dining room while the former templar headed up the nearest stairs.\n\nI found one of the Vigil's servants laying out food in the dining room, and asked her to arrange to send up two Warden-sized meals, a pint of ale, and a skin of fresh water to Sigrun's room, before weaving my way through the mass of Wardens and Legionnaires looking for Anders. Trevian caught my eye as I passed; I gave him a nod, and he smiled, confirming what I'd guessed -- he knew not everyone survived becoming a Warden, and he had been worried. Given the mutual respect between Wardens and the Legion, it made sense he'd know, but still I was surprised.\n\nI managed to avoid Velanna, who I spotted only for a moment, standing awkwardly in a corner brooding; I had no idea what to tell her, so I was glad to be able to put it off. I ran into Zevran, who'd been flirting outrageously with one of the Legionnaires, enjoying his blushing embarrassment; with a quick promise to tell him everything later, I asked the Antivan to go watch over Rolan and make sure no one else spoke to the former templar.\n\nFinally I found Anders. He was in the middle of some story about a cat -- probably the one possessed by a demon back at Kinloch, if the appreciative giggles were anything to go by -- and I interrupted him, telling him I needed his help for something personal. Solona and Leli, standing nearby, giggled and raised their eyebrows at me; I returned their smiles automatically, but knew there was no chance I'd fooled Leliana, at least. Not explaining this later is going to be just a thrill.\n\nThe mage followed me out of the dining room, bemused smile on his face, until he got to the room where Alim was pouring magic into Seranni, while Aedan and Alistair watched helplessly. Her flopping had stopped while I was gone, and now she just looked pale -- pale as death, her breaths shallow and rasping.\n\nAnders dropped to his knees beside Alim without a word and began one of his glowy diagnostic scans.\n\nAlim gasped and let his healing stop, panting. \"I've no idea if anything I did helped.\" He and the healer held a brief, whispered conversation I couldn't follow, something to do with life force and energy, and then Anders was the one healing the elf.\n\n\"So this is what I looked like?\" I whispered, tucking myself between Alistair and Aedan.\n\nMy husband wrapped his arm around my shoulder while Aedan gripped my hand hard, eyes wide. \"Worse,\" Alistair replied; I felt Aedan shudder. \"You seized for longer, and when you were done, you were barely breathing at all.\"\n\n\"So she should just wake up, and everything will be fine.\"\n\n\"Except she's not a Warden -- not really. How do we even begin to explain this to the others? To her sister? What if you were just lucky, and she doesn't wake up? A death we could explain to Velanna. She knew the risk. But this...is something else.\" Aedan looked beyond freaked out. I squeezed his hand.\n\n\"I don't understand. It made sense -- sort of -- for you, with the whole magic resistance, being from somewhere else thing. But this...\" Alistair rubbed the bridge of his nose with his free hand.\n\nI thought about it. What made Seranni different from anyone else? I couldn't remember much about her from the game, other than that, as a ghoul, she actually kept her mind; I recalled thinking that was unusual for a ghoul, and blaming the Architect -- after all, hadn't he done something similar to Genevieve and her brother Bregan in 'The Calling'?\n\nThe germ of an idea formed.\n\n\"What if...\" I hesitated, thinking frantically. \"I mean, the darkspawn don't normally kidnap people, right? Unless they're looking to make a new broodmother, which supposedly the Architect isn't. It seemed strange he would keep her with him. Utha, it made sense -- he could use her blood for research. Seranni wasn't a Grey Warden -- what would he need a random ghoul for? But, what if...what if there was something about her that was different? Maybe...the Architect targeted her for some reason? We know he can manipulate the taint...Perhaps she has some trait that makes her resist the taint? Maybe we both do? Maybe that's why he wanted her, and that's why no one can sense me. Maybe that's why he sent me away.\"\n\nAedan and Alistair were both staring at me, fear and horror written clearly across their faces as I talked my way through the random pieces of information that were slotting themselves into place in my mind. As I waited for a response, I suddenly realised it was much too quiet, and I could no longer feel Anders' healing magic. I looked up to see the two mages staring at me, mouths agape. And of course, they heard that. Nicely done, Sierra. I could feel my face flushing under their scrutiny.\n\n\"You...you're a Warden?\" Anders was the first to recover, expression curious but guarded.\n\nI sighed. \"Yes. Sort of. I'm like her -- I took the Joining, but no one can sense me.\"\n\nHe stood, glancing critically between me and the elf, who now appeared to be resting easily. \"But you have Warden abilities?\" I hesitated, and he continued. \"Of course you do. That's why you can stand watch. It's why you were on the list of those who could slay the Archdemon. And why you eat like the rest of us. I never put it all together, but it's obvious, in retrospect. When did you Join? Why didn't you tell us?\"\n\n\"I'll explain everything later, I promise. But first -- is she okay?\" I gestured at the elf laying at his feet.\n\n\"I've no idea,\" he replied, shrugging. \"I'll assume it's a good thing the seizures stopped. I can't find anything wrong to explain what's happening, and healing made no difference. I think we're just going to have to wait and see.\"\n\nAedan sighed, tugging at his usually impeccable brown hair, which was becoming wilder by the minute. \"What do we do next? The last thing we need is Weisshaupt learning we have Wardens who aren't normal Wardens. Honestly, after our last meeting, they'll say they have all the justification they need for kidnapping one of you. Both of you! And then they get two things they want -- people to experiment on, and something to use as leverage to bring us back into the fold.\"\n\nAlim joined the conversation. \"That's why you didn't tell anyone. You were afraid Weisshaupt would want you, to experiment on you.\"\n\nI nodded, glancing back and forth between Alim and Anders, suddenly afraid for my new, tenuous friendships. \"You have to understand, it wasn't that we didn't trust you. We didn't know we'd be separating from Weisshaupt. We had Riordan, Loghain, and Dougal to think about. We couldn't know who would accidentally let things slip, and we didn't want other people to have to lie for me.\n\n\"I didn't want to spend the rest of my life as a lab rat in Weisshaupt like Fiona.\" At their puzzled glances, I huffed in frustration. \"Never mind. I just...\"\n\nAlistair interrupted me. \"Fiona! Andraste's flaming butt cheeks!\" He slapped himself in the forehead dramatically.\n\n\"What?\"\n\n\"I was just thinking...if there were two people who aren't 'normal' Wardens, why aren't there more? And then you said Fiona...\"\n\nI gasped. \"Fiona's taint is 'gone'. What if it's not? What if we've got it backward -- he didn't target us, he did something to us? We know he did something to Fiona that strangely accelerated her taint, leaving it 'gone' when it was over, and he did something to me too. It was his darkspawn that attacked Seranni.\"\n\nAedan cleared his throat, looking at me and then pointedly at Alim. \"We can speculate later -- or better, catch the bastard and question him -- but none of this helps us. What do we do with her? And there are a few too many people in on this secret for comfort now, not to mention too many who saw Seranni and know she was tainted.\"\n\n\"I won't tell anyone.\" Anders smirked. \"Who'd believe me anyway? And I have no desire to be 'questioned' by Weisshaupt. It's Rolan you've got to worry about.\"\n\n\"Fake her death?\" Alim suggested. \"Rolan isn't here, and we can keep quiet -- though I admit I have some questions.\" He raised his eyebrow at me expectantly, and I sighed and nodded. \"Send her off with her sister. I don't know where; she can't go back to her clan. But send her somewhere, and tell Rolan she didn't make it.\"\n\nI looked at the elf anew in appreciation. \"You're crafty.\" I looked back at Aedan. \"We'd need to make a pyre, find a body to burn, and maybe fake Velanna having a fit and leaving. We could send her to Soldier's Peak for now -- I'm sure Avernus would be more than happy to meet someone else like me -- and then send her on from there.\"\n\n\"To where, though? She can't stay at the Keep; we're all going to relocate there eventually.\" Alistair rubbed the back of his neck in frustration. \"Too many people might recognise her. Maybe Lanaya? She owes us a favour.\"\n\n\"I may have another idea for you,\" came a voice I wasn't expecting to hear. When I glanced down, Seranni's eyes were open, and she had raised a shaky arm over her head to block out the light. \"Oh, ugh. That was awful.\"\n\nI dropped to my knees beside the elf, taking her hand and leaning over to cast a shadow over her no-doubt-tender eyes. \"How are you feeling?\"\n\n\"Terrible, I'm not going to lie. But given I couldn't be sure I'd survive -- and you all weren't sure I'd ever wake -- I'll take it.\"\n\nI laughed. It was a sheer relief to see her awake and believe she would eventually recover. Holding her hand still, I pulled her to a sitting position; someone handed me a water skin, and she took it from me gratefully, chugging half the contents in one go.\n\n\"So you heard all that, then?\" Aedan asked.\n\nShe nodded, still swishing the water through her mouth -- trying to rinse out the taste, I guessed. I remember that foul flavour. \"Think so. You guys can't sense me, though you should be able to. She,\" the elf gestured at me, \"is the same, there might be a third, and something called the Architect is to blame? Weisshaupt will have a fit if they find out. Also, something something about another world, though I've no idea what that means.\"\n\nI laughed and pushed myself to my feet, and Aedan helped me pull Seranni to hers, allowing her to settle on the nearby couch.\n\n\"Don't worry about it.\" I sighed and ran my hand through my tangled, curly hair. \"And the Architect is the first talking darkspawn -- he created the others by perverting the Joining ritual and making darkspawn drink Grey Warden blood. So you said you had an idea?\"\n\nShe nodded. \"The problem, as I see it, is that Weisshaupt will want to examine anyone who's 'different'. Right?\" She waited for all of us to nod our confirmation. \"So let them. I can't go home, I can't stay here -- why shouldn't I go to Weisshaupt?\"\n\nAedan, Alistair, Alim, and Anders all reacted to that loudly, taking over each other, declaring reasons why she shouldn't go; I just watched her, eyes wide with shock.\n\nSeranni held up her hand. \"I don't have to tell them I'm not the only one. I won't even mention this Fiona. I don't think they'll kill me, will they?\"\n\nEveryone looked at me. I shrugged helplessly. \"They didn't kill Fiona. She's an elf, a Warden who the Architect did something to and somehow, her taint went away. That's not to say they couldn't -- but I don't know why they would. They learn more if you're alive. But you don't have to do this. Not for me.\"\n\nShe smiled at me shyly. \"You all saved me -- from the darkspawn, then from the taint. I am a Grey Warden now, right? So I might as well be of use. Here, I'm a danger to you. I can't go home. So I might as well go and see if I can help in some other way. You just have to promise to look after my sister.\"\n\nA lot more discussion on the subject ensued, but nothing anyone said could dissuade the elf from her self-appointed path. I couldn't decide whether to be frightened for her, impressed by her, or worried about the implications for myself and the Grey Wardens in general. What if they tried to keep her against her will? What if they decided that vivisection would provide more information than a live body? What if they went after Fiona, or she accidentally revealed my existence? I finally had to excuse myself, stepping outside and hyperventilating in the hallway.\n\nOnly to look up and see Velanna standing in the hallway, scowling; her face paled when she noted a few stray tears streaking down mine.\n\n\"No, Velanna -- she's fine. She survived,\" I gasped.\n\nThe elf's stiff posture relaxed the slightest bit, and her frown eased. \"What is wrong, then?\"\n\nI hesitated, finally deciding we might as well get it over with. I wiped the tears away and gestured to Velanna to follow me. I could hear the group inside still talking before I opened the door, and banged loudly as I did to ensure they got the hint.\n\n\"Guys? Velanna is here.\"\n\nI stepped aside, and Velanna entered, immediately pulling Seranni into an embrace. They whispered to each other in elven for a few moments, before Velanna turned to face us.\n\n\"You have saved my sister. I know I have been less than pleasant, but despite that, you helped her. I thank you.\" Aedan grimaced and Alistair looked down, avoiding eye contact; Seranni shifted at her side, and Velanna turned to me. \"What are you not telling me?\"\n\n\"May I have a moment with my sister? Please?\" Seranni interrupted any response I could have given. We all agreed, reluctantly, nodding respectfully to our new sister as we left.\n\nOut in the hall, Aedan pulled Alim and Anders aside. \"Not a word about Sierra, either of you. Understand?\"\n\nBoth mages nodded. \"I promise.\" Anders squeezed my hand. \"I'm quite pleased to have another sister, and I wouldn't jeopardise that.\"\n\nAlim smiled at me. \"I've kept bigger secrets for you when I was still living at the Circle.\"\n\nI chuckled. Alim and Anders took their leave, heading back to the main hall for food. Alistair pulled me into a tight hug.\n\n\"You okay?\"\n\nI sniffed, pressing my nose into the crease of his neck, enjoying the comfort he offered. \"Too many 'what if's' for my liking.\"\n\nAedan grunted in agreement. \"Can't do anything about it now. Seranni going to Weisshaupt will hopefully keep them occupied for a while. I had better go deal with Rolan, and then we need to explain to the rest of our Wardens what is happening. If she's going to Weisshaupt, then at least everyone else can find out what happened.\"\n\nAedan headed up to Sigrun's room, and Alistair and I found an unoccupied nook inside a random nearby room to sit and cuddle for a bit until my emotions settled. Finally we joined the rest in the dining room; once everyone had eaten, Aedan ushered the Legion out, and brought in Seranni and Sigrun.\n\nThe Wardens cheered, welcoming the two new members; I watched faces to see who noticed the lack of taint palpable in Seranni. At first, no one seemed to, but then I noticed Conrad wrinkling his brow in confusion. Then I saw Wulf looking around, scratching one long, pointed ear absentmindedly. Before too many others caught on, Aedan cleared his throat and asked for everyone's attention.\n\nHe explained to the baffled crowd that, for some reason we couldn't explain -- but were blaming on the Architect -- something strange had happened at Seranni's Joining, and that while we believed she was still a Grey Warden, we wouldn't be able to feel her taint.",
        "Then he told them she'd be leaving to head to Weisshaupt. The entire group started buzzing, talking amongst themselves in shock, until Aedan silenced them again. To my surprise, he announced she wouldn't be leaving immediately, or alone.\n\n\"Until her sister has negotiated a deal to allow the Dalish safe ground and has Joined as well, she will remain and train with us. I want any of you with combat training in different techniques to work with Seranni and evaluate what style works best. I'll not send someone on a journey that far unless they can protect themselves. Also, anyone who wishes to accompany Seranni and Velanna to Weisshaupt, please come talk to me.\"\n\nI gaped. It hadn't occurred to me, but sending a single female elf across multiple countries probably wasn't the safest thing. I wondered who, of our companions, might be leaving as well. I wonder if Weisshaupt will ever let them go, once they arrive.\n\nAfter a brief celebration, involving yet more food and some ale, I headed to bed early. Alistair followed me, a concerned look on his handsome face.\n\n\"Sierra?\" He sat on the sofa in front of the hearth, pulling me into his lap. \"What's wrong, sweetheart?\"\n\nI sighed. \"Ripples. Ripples I can't predict. I don't know what's going to happen, and it's driving me crazy. Will Seranni be alright? If some of our Wardens go with her, will they release them? Will they figure out why you and Aedan were hiding me? Will they ever let Fiona go if they think there's more to learn? She supposed to go back to the Circle and lead a vote to separate from the Chantry, like seven years from now. Not that I think it was a really smart plan, but what happens if she doesn't? I've changed so much, and I don't regret it, but...I know enough of what's coming to be afraid, and yet I can't predict it anymore.\"\n\n\"Now you know how the rest of us feel.\" He smiled at me to soften the comment.\n\n\"Yeah, but you haven't seen what I have. The Chantry in Kirkwall blown up, the Grand Cleric dead and Meredith becoming Lyrium in the Gallows...The Templars ending the Nevarran Accord, the mages fighting for their lives at Andoral's Reach. The next ten years are going to be terrifying, and now I know I've changed some of it, just enough to make it even scarier.\" I shuddered.\n\nHe held me tighter and kissed the crown of my head. \"Come. Let me make you forget, at least for a while.\"\n\nHe carried me to bed and proceeded to make good on his promise.\n\nIn the morning, nothing was resolved, but unsurprisingly, I still felt better. Aedan and Alistair left to go for a ride out around the Vigil, and I was back to my training. I sparred with Seranni -- guiltily pleased that she was as bad with daggers as I had been when I started -- and then managed to get on my horse without getting more than a couple new bruises. Riding was another matter, and I bumped along, feeling my ass turn blue as Samuel urged the beast to do something horrible called trotting; by the end of the lesson, I'd at least learned that I was supposed to push up on the stirrups to keep from jarring myself, and though I didn't have the rhythm down, I understood the concept.\n\nVarel was too busy for protocol lessons, but I ran into Leliana at lunch, and wheedled her into eating with me, correcting my formal table manners -- something she was more than capable of, and mistakes were punished by sharp pokes with her fork, to my dismay -- but it also gave me the opportunity to corner her about a few matters.\n\n\"So...how're things with you and Nate?\"\n\nShe smiled brilliantly, and then her face fell and she avoided eye contact, studiously staring at her soup.\n\n\"You love him, don't you?\"\n\nThe agony on her face when she finally looked up and nodded was heart wrenching. \"I do. I never planned this, but I do. And yet...I cannot stay here.\"\n\n\"Why not, Leli?\"\n\n\"You know why. I have responsibilities. And what would I even do if I stayed? I'm Orlesian, Sierra, or close enough for the Fereldan nobility to hate me regardless. Nathaniel's got enough of a battle on his hands to recover his family name after his father...But with an Orlesian lover? Or worse, wife?\"\n\nI raised an eyebrow at her, fighting an ironic smile. \"Do you remember what you said to me when I told you Alistair deserved more?\"\n\nLeli sniffled, shaking her head.\n\n\"You told me that what he deserved should be his choice. If Nate wants to fight the nobility for you, shouldn't that be his choice? He's hardly unaware of the issue, I'm sure. If Cailan can make a bastard and an off-worlder a prince and princess, Nate can marry an Orlesian. He obviously thinks you're worth it, if he's talking marriage.\"\n\n\"And what sort of wife would I be? I'm a bard, not some pampered noble. What would I even do with myself?\"\n\n\"You don't think Amaranthine will need all the help it can get to recover from Nate's father, Bann Esmerelle, and a darkspawn invasion? You would be an enormous help to him, not to mention you could work with the Chantry, open a school...just be a wife, be loved, maybe even be a mother. Would that be so terrible?\"\n\nA few more stray tears trickled down her cheek. \"No, not terrible. It would be wonderful, no? But I still have responsibilities.\"\n\n\"Do you really think Jus...I mean, Dorothea wouldn't understand?\"\n\n\"I've been told to report to Val Royeaux, and then I'm being sent to Haven with a bunch of Chantry scholars.\"\n\nI wracked my brain for a long-forgotten epilogue slide. \"And nothing will be there. The temple will be inaccessible, and no one will know why -- some sort of ancient magic, an act of the Maker, or something more nefarious? But more to the point -- have you told her? Maybe for once you could be happy! If you tell her...I'm sure she'd let you go.\"\n\nI wasn't sure if that was more reassuring, or less; her face crumpled, and scrubbing tears off her face angrily, she fled from the dining room.\n\nThe next few days continued along the same lines. Alistair and Aedan rode to Amaranthine for most of one day, returning late; they reported a good start on the walls of the city, and housing for the few elves remaining in Amaranthine -- most of them had been sold to slavers, unsurprisingly -- had begun construction; Nate arrested Esmerelle and installed Delilah as at least temporary Bann; they confirmed the tunnels under the city were still sealed, the entrances guarded, the smugglers out of business. To my chagrin, both men had no difficulty riding horses, and neither fell off nor bruised their butts from their travels. Show offs.\n\nVoldrik, along with some of the Orzammar stone masons, had begun work on the Vigil's walls; Cailan had ordered stone shipped from the quarries near Denerim, after the Alienage was finished, so we didn't have to find a source of local granite after all.\n\nI spent some time reconnecting with my friends -- Zevran, Conrad, Anders, Solona, Wulf, Bel...even Oghren. I had barely seen them in Denerim, if at all, and things had been too busy since we'd arrived at the Vigil for much more than brief chats in the hallway. I got to know Sigrun and Seranni a bit better, and started learning some elvish swearwords surreptitiously from listening to Seranni and Velanna talk.\n\nI ordered a set of non-descript leather armour from a grumbling Wade; he reluctantly admitted that the armour given to me in Orzammar was flawless, but I needed something less noticeable for if I was travelling. The whiny armourer cheered up considerably when he learned that he'd probably be making Archdemon hide armour for Aedan and a new set of Archdemon dragon bone plate for Alistair. Herren rolled his eyes, mostly tolerantly, and only sniped at me sarcastically a little bit.\n\nI'd finally gotten to the point where I'd stopped needing healing after riding lessons when the schedule I'd gotten used to was suddenly completely disrupted. I was sitting in the dining room eating breakfast with Aedan, Zevran, and Alistair, half-listening as they discussed sending out patrols to keep an eye on the darkspawn activity along the Pilgrim's Path and the Knotwood Hills, to check in on Kal'Hirol, and to scout the Dragon Bone Wastes for signs of the Mother's army, when we were interrupted by a messenger.\n\nIt wasn't Maverlies; the young man was clearly a new recruit in Cailan's army, and by the shortness of breath, had ridden hard all the way from Denerim and hadn't stopped running since he'd gotten off his horse. It immediately made me nervous when he was so intent on blurting out his message that he didn't even stop to stumble over what titles to call Alistair or me, and didn't awkwardly genuflect like almost every other commoner we'd met since the Landsmeet.\n\n\"Commanders, my Lords, my Lady... I have urgent news from His Majesty in Denerim. He wishes you to depart for the capital immediately.\" He offered Aedan a thick envelope breathlessly.\n\nAedan gestured for the man to have a drink and take a moment to collect himself. \"Take a breath, man. Now, what in Andraste's name has happened?\"\n\nThe messenger opened his mouth, and the next words out of it would send me reeling.\n\n\"The ship carrying Her Maj- er, I mean, Lady Anora, to Nevarra was scuttled. There were some survivors, but Lady Anora wasn't among them.\"\n\n*************\n\nA/N:\n\nNow this site is officially caught up with what is publiched elsewhere. From here on, for the next little while anyway, you'll probably get one chapter per week, or maybe every two weeks, depending. I am trying to pick up my writing speed to publish faster, but real life intervenes, unfortunately.\n\nAnd by the way, for the grammar nerd (Hooray for grammar nerds!) who wrote me to inform me that 'alright' isn't a word, I regret to inform you that in Canada, in informal writing (especially dialogue) alright is indeed a word, with a different, though related, meaning to 'all right'. All right means that, literally, all is right. \"Are those tax figures all right?\" \"Why yes, all of them are right.\" Alright means acceptable or 'okay' or sufficient. Like when someone trips and falls down. They are not all right -- at best, their ego is bruised, and maybe their butt, not to mention other possible injuries -- but they may be alright, as in 'in acceptable physical condition and capable of continuing with the hike.' See? :)"
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-125-126"
}