{
    "title": "My Little Ventrue Pt. 07 Ch. 11",
    "pages": [
        "~~Beatrice~~\n\n\"It this... everyone?\"\n\nSighing, Jack nodded, crouched low on the roof of Robina's. \"Clara's not here yet, but yeah this is everyone. If any of the hunters escape into a nightmare, Azamel will send Fiona to help us on that end. You know, assuming she can find us.\"\n\nBeatrice started counting. Six vampires, one werewolf, and one monster; potentially two monsters, if they had to fight in the nightmare. That was not nearly as many people as Triss was hoping for. And, for some reason, a human was there, too.\n\n\"The fuck? Isn't this Azamel's problem? Why isn't she coming?\"\n\nThe kid shrugged as he stared over the edge of the building, and to the small, distant bridge beneath them. No movement. \"Azamel's old as dirt. So unless the fight comes to her, and in the nightmare, she can't do much. Mark is her bodyguard, more or less. And Fiona's just a young girl.\"\n\n\"You're just a young vampire.\"\n\nJack chuckled quietly, smiling. It sounded forced. \"Damien said it best. Fiona can't survive a bullet, but her Horror can. Better if we don't throw her life away if we don't have to, right? And Athalia's here because... well, obvious reasons.\"\n\nEvery witch looked at Athalia, and frowned, a quartet of annoyance with the woman. They all knew who she was, and that this was partly her fault.\n\n\"I don't give a fuck if you all hate me,\" she said. \"It's my daughter.\"\n\nGrowling, Triss slowly crouched down next to Jack. The cool night air and the clouds above held little noise, and Triss did her best to listen for any potential danger. All she could hear was the distant sound of traffic, and Athalia's breathing.\n\n\"What about Jessy?\" she said. \"Figured she'd help, and maybe her boy toy Eric too.\"\n\n\"Can't reach them. I tried to get Natasha too, but she's MIA.\"\n\nIf Natasha was missing, along with Jessy and Eric, there was a decent chance they were off doing something werewolfy. Natasha and Jessy wouldn't just shut off their phones; disable the ring and buzz, sure, but not turn off. They were indisposed somehow, unreachable, probably by either doing something super sneaky, or being in the Shadow realm. Three werewolves and one very curious little vampire meant research opportunities, Triss figured.\n\n\"Ok, I can wrap my mind around that,\" she said, \"but who the fuck is this guy?\" Some kine, a black dude with short curly hair, was staring at her and her teeth like he'd never seen a Nosferatu before. Well, he wasn't freaking out and screaming or anything, so he must have seen similar at some point.\n\n\"A hunter,\" Jack said.\n\n\"I'm sorry, I think I misheard you. Say that again?\"\n\nRolling his eyes, Jack motioned for them to get low. Apparently they'd all started standing up as the conversation took a definite turn toward argument. Damien and Triss were keeping everyone wrapped in the Cloak of Night, but it still paid to be cautious.\n\n\"Um, hey, yeah, I'm Harcourt. I came to see the vampires here in Dolareido, because honestly, we need help getting rid of Angela and Jeremiah. I want my friends to survive, and you know, Angela and Jeremiah are going to get them all killed. It's pretty crazy. I was hoping\u2014\"\n\nAthalia backhanded the still-standing man in the stomach, sending him down onto his knees, gasping. \"Shut up.\"\n\nBeatrice stared at the man, and flexed her fingers tight, until the joints hurt. \"This is a hunter? One of the fuckers working for the psychopaths?\"\n\n\"He is,\" Jack said. \"I tested his mind myself. He's legit. Wants to help, and knows where Elen's set up the portal tonight. The issue now, is we need to get it open.\"\n\nOh sweet mother of fucking god, they were all going to die.\n\n\"Ok,\" she said, \"so, setting aside the insanity that our entire plan relies on the word \u2014 even checked \u2014 of a hunter, why can't this fucker just walk up to the portal and open it?\"\n\n\"Few reasons,\" Harcourt said. \"Only Elen can open the portal, and Elen has ways to tell if someone's mind has been tampered with. I dunno if she'd open it for me. And we don't just come and go randomly anyway. We leave, set up meetings and rendezvous by phone later, and\u2014\"\n\nBeatrice threw up her hands. \"Then how about, we sit on this fucker, and make him arrange a rendezvous with his buddies? Instead of jumping into the mouth of Hell, we'd have time to set up a proper ambush. You could easily turn him into a puppet, and\u2014\"\n\nJack shook his head, and started rubbing his buzzed hair as he stared down at the building roof. \"I thought about that. There's nothing I could make this guy say or do, that would trick the hunters into making the opening he's provided for us tonight. I could use him to capture a few more hunters maybe once, and then the jig would be up. It's not like Jeremiah and Angela would come to rescue this guy, and you know it.\"\n\n\"I... yeah, you're right. Fuck me, we have to do this now, don't we? Ugh. Ugh!\" This was not a good way to do this, and Jack definitely noticed the similarity with this and his previous attacks on the hunters: done last minute and without planning. But he was right that, if they wanted to kill Jeremiah and Angela, this was probably their best chance.\n\nAnd she wanted to kill them. Fuck, it was an itch inside her that she couldn't get rid of, an itch that turned into a boiling heat that scalded her every time she thought about it. She had to get it out, get it to stop burning her insides, and the only way to do that would be over their dead bodies.\n\n\"Hey, don't forget your promise!\" Harcourt said, loud enough that Athalia, again, hit him, this time with a smack to the back of his head. She was no human, and a hard slap was enough to send the man to the roof on his stomach. Any harder and she'd have injured him.\n\n\"Promise?\" Aaron said.\n\nGroaning, Jack nodded, but kept his eyes on the distant bridge that showed no signs of movement or life. \"Yeah, I promised him we'd spare any hunters that didn't get in our way.\"\n\nBeatrice pointed a claw at the human, currently coughing and rubbing the back of his head. \"You're shitting me. These fuckers\u2014\"\n\n\"Are being tricked by Jeremiah and Angela. They didn't know about what Angela did to my family.\"\n\n\"And? They still killed Julias.\"\n\n\"Trust me,\" Harcourt managed to say, whispering this time, \"no one came here to fight the vampires. Our eyes are on Azamel. You heard about the crazy shit she's done? She enslaved whole towns!\"\n\n\"You only heard one side of the story,\" Jack said to the hunter, \"and from a couple of nutjobs at that; the king of nutjobs, given what I've seen of Jeremiah. Not that I'm excusing Azamel's behavior, but lots of Begotten do their best to not be the monster you think they are.\" When he said it, he glanced to Beatrice, and the inner conflict in his eyes was obvious. Yeah, they'd been up to some pretty monstery shit lately, sacrificing kine and speaking to otherworldly gods that were most certainly not benevolent.\n\nShe shrugged at him. She was willing to do a lot more than that to make sure she got to feel Angela's blood on her hands.\n\n\"And... I know I can't ask this,\" Athalia said, \"but I'm asking anyway. If we can capture my daughter, instead of killing her, I'd appreciate it.\"\n\nBeatrice laughed, and gave the woman the finger. \"Fuck that.\"\n\nThe stupid bitch got in Beatrice's face, but of course Beatrice didn't flinch. If Athalia wanted to fight, here and now, over whether her psychopath, murdering daughter deserved to live, Triss was perfectly willing to rip the woman's throat out to prove her point. Or maybe bite it out.\n\n\"She's my daughter.\"\n\n\"She's a corpse, she just doesn't know it yet.\"\n\n\"Ladies,\" Jack said, and motioned for them to crouch. They did, glaring and frowning at each other all the way. \"If the opportunity presents itself, sure, we can capture Angela.\"\n\n\"What!?\"\n\n\"The chances of that happening are unlikely, Triss. Unless she's down and out with broken legs and broken fingers, consider her a kill target.\" Shaking his head, Jack made a vague gesture back toward South Side. \"And if we capture her, we keep her locked up with a chain around her neck for the rest of her life. We're not just going to hand her over to Athalia.\"\n\n\"Fuck. Fine.\" Beatrice crawled over to the edge of the roof, and looked out to the small bridge. Just a tiny thing, some wood and concrete, maybe thirty feet long with a small valley or crevice underneath it, with some rocks, dirt, and no water. It'd totally be filled with kids hanging out if it was closer to the Carthian half of South Side, or even Devil's corner. The hunters chose a place no one would give a shit about.\n\nAs the silence dragged on, everyone looked to Jack.\n\n\"We're waiting for\u2014\"\n\n\"For me.\"\n\nThey all turned as a woman hopped up onto the roof to join them. Clara Moreno, average height with an athlete's build, tan skin, with box-braids in her hair. Beatrice had had almost zero interaction with the woman, but even she knew the werewolf had a strange relationship with Jessy, and news spread about the werewolf's involvement with the vampire's ghouls. And everyone knew she liked Jack, so, there was a whole mess of drama there Triss had no intent of touching with a ten-foot pole.\n\nLike the witches, she was wearing some jeans and a shirt, nothing special, no weapons. She would transform once the fight started, and Triss was looking forward to seeing that chaos again. Rip and tear. Queue heavy metal music.\n\n\"Not much of a group,\" Clara said. \"I'd ask some of the pack to join, but Avery would have their hides.\"\n\n\"But not yours?\" Othello said, smiling as he stepped in closer. Right, it was the man's first time really interacting with Clara, and it was obvious the dude liked what he saw.\n\nJennifer grinned too, probably enjoying the idea of watching Othello fuck Clara in a place where she could watch. So Triss smacked her in the shoulder, gently, but hard enough to remind her now was not the time. Besides, it didn't look like Clara was taking the bait, offering Othello only an eye-roll and a quiet grunt.\n\n\"I'm second in command for my pack. Avery will get into an argument with me, sure, but after the results of tonight, she'll let it go.\"\n\n\"Right,\" Triss said, \"because we'll either succeed, or we'll be dead and it won't matter.\" Everyone but Damien and Aaron groaned as they looked at her, and she returned their groans with a shrug. \"Don't give me that shit. You're all thinking it.\"\n\nMaybe she shouldn't have said that. While she was willing to put her life on the line to make this happen, the others \u2014 besides Jack \u2014 weren't so committed. They had no reason to be. Hell, Athalia probably wanted them to fail, so her daughter would have a chance to live. Then again, tonight might be the woman's only chance to save her daughter's life.\n\n\"Alright,\" Aaron said, \"I'm guessing Jack is leading this?\"\n\nThey all looked to the kid, again.\n\n\"... I guess I am.\" Jack sighed, rubbed his head several times, and stared out at the small bridge. Poor guy, having to come up with plans in such fucked up circumstances. Plus, you know, the whole being a kid thing. Everyone there was much older than him, and yet they were looking to him to make the decisions.\n\nWell, he was a Ventrue. This was the stuff Ventrue did, give orders and shit. Triss could see Jennifer was itching to say something, provide her take on the situation as any Ventrue would, or maybe complain about her position, but she defaulted to the stronger Ventrue.\n\nNah, it wasn't the Ventrue thing for the kid. Jack was taking charge because he was good at it. He was taking charge because this plan was his. And he was taking charge because they all knew the kid had been fucked up with some curse, and that it was going to do something insane once the blood started flying. Triss was banking on it.\n\n\"Alright, plan. Damien, go scout the bridge now. I don't want any trouble hitting us while Triss does her thing. Triss is going to open the portal. I'm going in first, along with my reinforcements. Jennifer stays outside, in case shit happens out here; it'll be up to her on what to do if something happens, coming in to get us or handling it herself. The rest of you, follow behind me.\" Jack took a deep breath, checked his pockets and chest for what Triss guessed were weapons, and gestured to Damien. \"Go.\"\n\nAnd Damien was gone. Christ, he was a fast fucker. The idiot hunter on his knees let out a small squeak as Damien bolted, Celerity and Cloak of Night turning him into a blur. Being that close would have startled anyone who wasn't ready for it.\n\n\"And that's why we like to stay at a distance,\" Harcourt said. \"Or, you know, hide behind a lot of fire. And\u2014wait, you said reinforcements, Jack? Then you told the rest of these dudes to follow behind you. Um, aren't they your reinforcements?\"\n\nBeatrice expected Jack to smile, smirk, grin, anything to tease the incoming carnage the kid would summon. But a glance showed the kid's face was pained, conflicted, and frustrated. He didn't want to summon the curse. \n\nWell, it was a curse. It was a bad thing, and it was probably doing all sorts of nasty shit to Jack's mind. If he summoned it, let it loose, would it be as simple as returning to normal once all this was done? Or would it change him, and turn him into another Viktor. You didn't need some ancient curse for a vampire to become a fucking sack of shit like Viktor, but that didn't mean it wasn't involved. Poor kid probably spent every night worried about that.\n\nHe was going to do it though. He needed to, and she needed him to. Both of them had to do this, and the consequences be fucking damned.\n\nDamien came back a moment later, silent as a shadow. \"No one.\"\n\n\"Right,\" the hunter said. \"If we had a lookout, we might give away the position of the portal the night we're using it.\"\n\n\"Risky,\" Aaron said.\n\nThe human shrugged. \"Everything we do is risky. Gotta take risks to win.\"\n\nThat earned a small snort from Jack. Vampires didn't think that way, normally. To a vampire, a risk was how you ended what would otherwise be an endless life of indulgence. If smart planning and paranoia allowed a vampire to live in decadence for centuries, why wouldn't a vampire do it?\n\nBecause of shit like this. Because of revenge and vengeance. Because some people deserved to die.\n\n\"Like I said earlier,\" the hunter said, \"you're expecting probably a dozen of my friends. There's another dozen out in the city, doing shit. Far as I know, Jeremiah, Angela, and Elen are in the chamber tonight, still helping with Angela's injuries. You guys fucked her up pretty bad last time.\"\n\nAaron raised a hand. \"And Elen. She's been putting the hunters back together?\"\n\n\"Yeah, sorta. She can do some impressive shit for my friends, but for Jeremiah and Angela, it's like she's rebuilding them from scratch. Something to do with the special tattoos they got; lot more on them than on any of us.\"\n\n\"She manage to revive that hunter I shot in the head?\" Jack said.\n\n\"No... almost, but no.\" The hunter shuddered. Must have seen a real life Frankenstein moment, from the look on his face, and it wasn't sitting well with him.\n\nThis hunter was far too nice to be a hunter. He was cute though, fit like all the hunters, a bit tall, nicely built, and she was digging the short, almost-afro he was sporting. The smile was contagious too, or it would have been, if the sight of him didn't make her want to rip him in half for being part of the reason her lover was dead. Shame.\n\nJack pushed himself up to his feet, and took one of those long, slow breaths he seemed rather attached to. \"Alright, let's do this. Stay behind me, and... don't freak out. I'll be doing this as Triss opens the portal, so I need people to stay calm. Just stay out of my way, and try and remain... yeah, calm. Don't, uh, be surprised, if I'm different, ok? \"\n\n\"Different?\" Harcourt looked around, eyebrow raised, confusion blatant. \"Uhh... don't forget about our promise, right?\"\n\n\"And my daughter, Jack,\" Athalia said. \"You said you'd spare her life, if the opportunity presented itself.\"\n\n\"I will.\" He twitched when he said it, and ground his teeth. \"Yes, I will, if I can.\"\n\nThat twitch was strange. Triss glanced to Damien, but the Mekhet's face was stone; which said a lot. The twitch wasn't all that subtle, and more than Triss noticed it. If Damien refused to react to it, then it was something he'd seen before, and either knew what it was, or didn't and was ignoring it anyway.\n\n\"Alright, so, we doing this?\" Triss said.\n\n\"Yeah, we're doing this.\" With another heavy sigh, Jack pulled out his phone, and sent a text.\n\nOh, right. He was sending a text to his mother, and his lover. If he died tonight, those two would be broken. The guilt that must have been eating at him, with how much he loved those two. Fuck. The only people Triss had were right here with her. If things went sour, they'd all be dead; except Jennifer hopefully. But the kid, he was doing this knowing full well if he died doing it, he'd be leaving an amazing woman alone, and an already heartbroken mother probably suicidal.\n\nShe was tempted to tell him to not do this. They didn't need to do this. Revenge could wait, vampires were good at that. They'd bide their time, look for a better opportunity, play safe and keep everyone on their toes. That's what every elder would say, to not gamble lives on a risky play. Take advantage of immortality, plan, manipulate, deceive, and concoct the perfect scheme to get these fuckers.\n\nAnd in the meantime, other Kindred would die, Kindred who didn't have the resources to build themselves underground fortresses. Hell, more than them, the monsters would die too, and more kine that didn't deserve it. Much as Beatrice had bathed herself in murder, she still kept those kills to the worst Dolareido had to offer. Jeremiah and Angela didn't.\n\nAll of that almost felt like background noise though, or a poor excuse. Deep down, she wanted to do this now with every fucking fiber of her being, because if she didn't get this burning ache out of her chest soon, it was going to kill her. And the only thing that'd do it was Angela's head on a stick.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nDamien wrapped them in the Cloak of Night, and the group of them approached. What a fucked up looking bunch. One human, six vampires, a werewolf, and a bona fide monster. Eight paranormals and one pile of baggage to drag around. Well, if Harcourt proved useful, then he proved useful. If he turned on them at the last moment, the fucker would quickly realize how easily and happily Triss would turn him into a corpse, or a meal.\n\nThe group of them stood underneath the small bridge, and everyone scanned the surroundings, convinced someone was watching them. It was dark, and it was quiet, the only noise coming from a cool night breeze that cut down into the tiny ravine. The sounds of cars and taxis blaring their horns were a mile off, nothing more than whispers all the way out here. It was the sort of place a traveler might sleep, where no thugs would rob her or disturb her.\n\nUnderneath the bridge, where it connected to the earth, was a concrete wall, each side. A small drain was at its base, a place that collected rain could flow. The expanse of wood above was only wide enough for two lanes, so it wasn't exactly a well hidden fortress, to hide here. But that was what made it such a good place for one of these portals, that no one would think to look here, in a giant city with millions of people.\n\nBut there it was, the symbol, etched onto the wall in black. Jack had said these were created with blood. Maybe this one had been, and the blood burned away? It did smell burned.\n\nShe looked behind her, and checked the faces of people waiting for her to do her thing. The witches looked confident. Damien didn't, and neither did Athalia. Clara was in wait mode. Harcourt just looked confused as all hell. Well, they were about to see a thing or two.",
        "\"Ok, you begin, Triss,\" Jack said, \"and... so will I. Just... yeah... stay out of my way, everybody.\"\n\nPoor kid. Poor fucking kid. She'd asked him to do this, to be ready to jump into this insanity in order to get revenge, and he'd agreed. She'd asked him to be ready to use his curse for this, and he'd agreed. He'd helped her butcher kine, and speak with ancient, evil gods. And now he was going to make good on his word.\n\nChrist, if this broke him, if something happened to him, Julias would... Julias was dead. His childe was on his own now, and more than smart enough to make his own choices. Don't feel guilty for this, Triss. You want this, and he wants it. He\u2014\n\n\"The fuck!?\" Harcourt jumped back as Jack took a bite out of his wrist. Clara and Athalia both did as well, without noise. The vampires didn't budge. They all knew Ventrue could do this, use blood to summon animals to their aid; Gangrels could do it, too. When Gangrels did it, it was like watching a monster summoning his brood. When Ventrue did it, it was like watching a lord summon their army.\n\nWhile Jack did his thing, Beatrice got to work. She touched the crow skull on her chest, and traced a claw along the drawn lines of the ritual symbol Elen or one of her flunkies had made. It was almost invisible, in the dark, charcoal-colored lines on concrete at night. During the day, it'd have looked like silly graffiti to anyone who noticed, and in the shadows underneath the bridge, out here between North and South Side, no one was going to notice.\n\nSo close though, she could feel the power emanating from it, subtle, but distinct. It felt like the flesh chamber Natasha and her had found the night Julias died, so she was sure Harcourt was telling the truth. Whatever madness Elen performed to create things from flesh, and to divine information from haruspex, Triss had no idea, but she couldn't deny that it felt familiar. Maybe it was the blood and murder, maybe it was how it was founded on death and darkness, but there was something similar between Cr\u00faac and whatever it was Elen was doing. Cr\u00faac reached across the ether, tapped into something hellish and twisted, and used vitae to fuel that effort. Elen, on the other hand, found a way to do it with the flesh and blood of the living. Vitae was what the vampire curse created when given the blood of the living.\n\nMight as well have been neighbors, 665 and 667 getting buddy buddy with the handsome dude next door.\n\nElectricity danced along her fingertips, and she shivered as the power of it practically burned her fingers. Yes, this was the power the Crone had exposed her to, introduced her to, and scarred into her mind. She'd never forget this pain now, this sensation, the way this portal worked, the way it opened and closed. It'd take her months, maybe years, to figure out how to open it with a sacrifice, but she was a vampire, she had vitae to fuel her efforts, unlike Elen.\n\nSkittering sounds drew her gaze, tiny movements that ran along the corners of her eyes. Everyone else in the group started looking around as well, even Harcourt, once the noise grew noticeable to human ears. When he noticed, he started spinning around and around, breath quickening as it became obvious the noises were coming from all directions.\n\nTriss was supposed to be focusing on opening the portal, but for a moment, she let herself stare in awe at the sight unfolding around her. Rat eyes. There were rats eyes everywhere. Tiny orbs that caught glimmers of nearby streetlights, and what little moonlight slipped through the clouds. They glinted and moved, dozens of them at first, each flowing along the pavement, and then down to join them in the dark and rocks. Dozens more, and then hundreds, flowed along the bridge above them, tails and claws rubbing against wood and concrete in such number, it sounded almost like churning water.\n\nThe shadow may as well have been a flowing, black creek around them, with how it moved, and rose. It started to trickle down over the edges of the small ravine, and then flowed, and then poured like rapids, a bubbling mass of black fur, claws and tails and eyes, that filled every crevice. And as the rats came to join them, the skies above darkened.\n\n\"The longer we take,\" Jack said, eyes on Triss, \"the more likely they'll be prepared. There's no way they don't have some method to peek outside of their portals, or they'd never use them. So open it up, and let's get to killing.\"\n\nTime had come to a standstill, and Beatrice found herself unable to move. That was Jack? His voice had changed. There was a bounce to it, almost a chuckle, a sound she was used to on Jacob, but not on the kid. And the grin, the Joker grin, looked freaky as fuck on him.\n\nIt was more than rats; there were plenty of those, but Jack seemed intent on bringing Armageddon. Two crows, without a caw or croon, glided down under the bridge and perched upon the boy's shoulders. He reached up, stroked the back of each bird's head, and grinned up at each, a knowing grin. It was then that the dark clouds above began to descend. \n\nThe shadows around them, churning over each other, were the rats of Jack's army. The black sky falling upon them, was his crows.\n\n\"Oh god oh god oh god.\" Harcourt had backed up to the other side of the pit, and he was quickly becoming a panting mess. Wide eyes snapped left and right, up and down, each trying to take in the madness collapsing on him. \"Sweet fuck, oh mother fucking god. Merciful Christ protect me, mother fucking g\u2014\"\n\nAthalia smacked him, again. That caused Clara to chuckle, but it didn't sound natural; of course it didn't, considering the fear Triss could see on her face. They were all frightened by the display, and Triss had to force herself to hold still as she felt rats begin to climb over her combat boots. Jennifer and Aaron were in awe, jaws dropped in what must have been envy over the display of Animalism even Michael McDonald couldn't have done. Othello had a new grin on his face, one Triss wasn't used to seeing, something that mixed excitement, surprise, and fear. Athalia had backed away from Jack, and it looked like the monster was struggling to hide her trembling, rubbing her fingers together and lowering her gaze down from the boy. She didn't want to look at him. And Damien looked like he was watching his best friend march into the valley of death.\n\nAnother glance at Clara showed she truly was scared, but not of the animals, or even scared of Jack. She looked scared for Jack, and that drove a knife into Triss's gut she didn't need right then.\n\nTriss recollected herself, and looked back to the portal. Ignore the scurrying, the tiny squeaks, ignore the thousands of moving bodies swarming around you. Ignore the strange look in Jack's eyes. Jack was the trump card, the big move no one was expecting. Ignore anything strange, ignore that voice in your head telling you to stop this before the kid loses something, and commit to the fucking goal.\n\nThe choir of rats and crows, fur and feathers, claws and talons and beaks, were the music to her ritual. The beady eyes were the lighting. The flapping wings and chattering chirps were the rustling of her audience. They all grew silent, and almost completely still, as they stared at Triss, waiting.\n\nTime to get this show on the road.\n\nShe lifted her t-shirt with her left hand hand, up to the neck, and set the claw of her right hand high up against her sternum. The portal was a concoction of flesh, woven together using some intangible energy that permeated the world, and she could feel it. As she sank the claw into her skin, she closed her eyes, set the hand that lifted the shirt against the concrete, felt the symbol beneath it, and searched for the connection. She had to find it, the same way she could find another's mind if she wanted to bestow a nightmare upon them, as all Nosferatu could. Instead of another person's mind, she was connecting to something magical, something mysterious, something royally fucked up and twisted. She was connecting to unnatural flesh that could split apart and close itself, guarding another world.\n\nHer chest cavity would serve as the conduit, the connection, the way for her vitae to cross the space between her and the portal, and rip it open.\n\nShe kept down the growing scream as she forced her claw into the bone of her sternum. Jacob had introduced her to many forms of pain, in his growing efforts to teach her Cr\u00faac rituals. The physical pain was almost blaz\u00e9. Several times now, when buried to the neck in agony, she'd quieted her mind and found a way to commune with her Beast. When she came to, waking from the coma, the details of the encounter were lost to a haze and fog. But she could remember the shadow creature, and she could remember the feeling it shared with her, of there being something, or someone else out there it could touch.\n\nShe summoned that feeling as her Beast had taught her, as the entity Jacob called the Crone taught her, and ripped apart Elen's magic as she ripped apart her own body. Thankfully, she didn't need to literally rip her ribcage open, but that didn't change that she had use Kindred strength to drive her claw down through the bones of her chest, and into her stomach. With each inch her claw cut open, the wall before her began to bleed from its own forming vertical cut, deeper, and longer.\n\n\"Oh... god...\" Clara, of all people, was the first to gasp. Triss didn't dare look her way; breaking concentration now would really suck. But it was obvious Clara's words triggered a chain reaction, and everyone started gasping as they realized what Beatrice was doing.\n\n\"What? What's going on? I\u2014oh sweet fuck!\" Harcourt apparently stepped close enough to take a peek, and almost screamed before someone grabbed him and covered his mouth. Muffled cries lasted for a few seconds before the man calmed down.\n\nTriss kept her eyes on the portal before her, and ignored the scalding pain coursing through her chest. Vitae, thick, heavy blood that refused to drip, dripped. A wound this large was too much for her Kindred body, and several of the viscous droplets splattered on the swarming rats around her feet. They didn't seem to mind. Hell, Jack used his own blood to summon them, so they probably thought this was just part of their master's shtick, and it'd turn to ash in a bit anyway.\n\nShe pressed both her hands against the enormous, vertical slice down through her chest, soaked them in her vampire blood, and pressed them against the concrete. Like stabbing into flesh, she pressed her claws into the concrete, and began to pull it apart, this time as if she really were ripping open a ribcage. The ritual had turned the concrete into skin, into muscle, meat, bone, something she could rip apart and shred. Something that bled.\n\n\"Fuck me,\" Othello said. \"It's like... watching Jacob at work.\"\n\nShe grinned at that, but didn't let him see it; too busy with her chest nearly pressed to the portal, and her elbows out as she ripped it apart. It didn't take long, maybe fifteen seconds, but it was fifteen seconds of concrete becoming flesh, and fifteen seconds of her groaning as she tore it open, hoping to god her chest cavity didn't explode from flexing muscles.\n\nWhen the folds of flesh were finally spread apart, the hole was maybe five feet high, and three feet wide. More than big enough for people to enter.\n\n\"Triss!\" Jennifer came up to her side, and winced as she felt the wound of Triss's torso. \"This is horrible.\"\n\n\"I'll live.\"\n\n\"You can't fight like this!\"\n\n\"Watch me.\"\n\n\"Good job, Trissy,\" Jack said. Trissy? She looked over her shoulder again, and stifled a scream, nearly brought by the agony boiling in her chest, and the look on Jack's face.\n\nThat wasn't Jack.\n\n\"Th... thanks.\"\n\n\"Now step aside. Follow in when you can. Harcourt, stay behind me, we're going in first. The rest of you, follow behind Harcourt. We're not leaving until Jeremiah's head is decorating my fist, or until we're ashes.\" Chuckling, Jack nudged Triss aside with enough force to nearly make her trip. And then, the stranger stepped into the hole.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nLetting the curse out was surprisingly easily. He didn't need to do anything, not really. He just, opened the door, and the curse hopped on out to party, summoned by the promise of blood and carnage. It wanted to play.\n\nIt wasn't as overwhelming as the first time. It was there, in his mind, and he could tell it was there, altering him, overriding parts of him, taking over. Jack could still feel, could still control, but the curse was in there with him, in his fingers, in his toes and limbs, and in his blood.\n\nAnd then, Jack was in the passenger seat. He was still in the car, and still looking around, seeing, hearing, but it wasn't his hands on the wheel anymore, or his foot on the pedal. It was the curse.\n\nThe curse was a much better driver.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nHe reached into himself, and unleashed Armageddon. He bit his wrist open, and spilled his sacred blood. He smiled in the darkness, and reached out for the city around him. The shadows were his to control, and the animals were his to lead, order, and rule. There were many animals that lived with the sheep, animals that held kinship with Kindred. In some places, coyotes and owls held closer kinship to Kindred. But in a city, overflowing with flesh and sin, the crow and the rat were his brothers and sisters, and they would be the stepping stones to claiming his throne.\n\nYes, it was his city. Antoinette owned it in name, and Jacob owned the darkness beneath its shadows, but in the end, there was always a single force that rose to the top of any squabble: the mightiest. They could serve him; Jack would be ok with that, right? He could let them live, and they could serve him. He had no true need for sex, take it or leave it, but it'd be a shame to let a piece like Antoinette go. And Jacob, the old bastard deserved respect.\n\nHe could think about those two later. For now, his city had to be cleansed of vermin, and he was going to enjoy every moment of it.\n\nWith eyes closed, he reached out for his servants, and felt their presence. Claws, scurrying through the dark. Wings, flowing through the air. Noses sniffing french fries and used condoms. Talons clutching to glowing neon signs and rain-worn rooftop edges. So many. There were so many of them. He knew, deep down in the recesses of memories that were not his, that Susanna would have creamed herself at being so spoiled for choice. So many, there were so many. Thousands upon thousands of crows covering his city in their beautiful feathers, and millions of rats, living beneath the hooves of its sheep.\n\nAnd they came. He knew Mulder and Scully would be with him soon, since they were following him already. They'd feel the call, and come. The others though, they would come in a number he could not quite perfectly control. They would obey his call and command, true, and there would be a swarming mass of them, but exactly how big that mass would be, was to be seen. It got him excited. He'd be hard as fuck, if he was Blushing Life.\n\nScully and Mulder perched on his shoulders, and he gave each of them a deserved scratch on the back of their heads. They would bear witness to his triumph, to the slaughter, and spread the tale to all other birds not present to witness it. Let them know of him, and be in awe.\n\nAs the rats began to pour into the small ravine, Jack felt his vitae flow with a renewed hunger, desperate for violence, aching to dance in blood. His wound closed in moments, and he chuckled as he looked around at the waves of fur and claw. He didn't bother glancing at his fellow vampires, weaklings that they were, but he could hear their muffled surprise. The human wasn't nearly as muffled, and he proved his pathetic weakness with every squeak and squawk. A glance at Clara, on the other hand, showed the cute werewolf was looking at him like he'd sold his soul to the devil, and all she could do was watch. Heh.\n\nA glance at Athalia showed something different. She managed eye contact with him for a single moment, before she looked down and backed away. Fear. True terror. That annoying creature inside her, the nightmare creature, it could see him, all of him, and it horrified her. Pretty fucking dumb for a horror monster to be horrified of another monster. Well, fucking psycho skeleton bitch, you ain't seen nothing yet.\n\nBeatrice, in true witch fashion, began to do something super twisted and awesome. She began slicing her chest open. Fucking sick. It was almost predictable that, to open a door made of flesh, a witch would have to cut open their own flesh. When Beatrice started opening the flesh with her hands, pulling it apart, Jack had to fight to keep down an orgasmic groan. It was a perfect way to begin the festivities, pulling open alien flesh like tearing open a present.\n\nJennifer and Beatrice argued for a moment, but Jack stepped up and nudged the witch aside.\n\n\"Good job, Trissy.\"\n\n\"Thanks,\" she said, eyebrow raised. Christ, trying to be nice and she still looked at him like he was the devil. Fuck her.\n\n\"Now step aside. Follow in when you can. Harcourt, stay behind me, we're going in first. The rest of you, follow behind Harcourt. We're not leaving until Jeremiah's head is decorating my fist, or until we're ashes.\"\n\nHe pointed both hands forward, and grinned into the darkness that awaited them. The hunters doubtlessly knew their portal had been opened by now, and probably had some idea about who was out here, ready to come in. He laughed. Yeah, they had no fucking idea what was about to hit them.\n\nIt was this moment that made it all worth it. He was seconds away from unleashing Hell upon these poor fools, and they had no idea, no fucking idea at all. He was going to slaughter them like fish in a barrel, delight in seeing the surprise and horror on their faces, and dance in their blood. Relish it, savor it, the edge of the moment before the climax.\n\n\"Um, shouldn't we cloak up?\" Damien said.\n\nJack shook his head. \"Last time, Trissy snuck in because the door was open and unlocked. Here, we basically just kicked down the door. They know we're here. So we do this SWAT style.\"\n\n\"Which is?\"\n\n\"Expedient, overwhelming force.\"\n\nWith a great roar, the tide of flesh and fur flowed forward. It wasn't subtle, or quiet. It was like watching a ship-breaker wave, the sort that could snap one in half from hull pressure, and it slammed into a hole far too small to accept the rushing tide. The flesh of the portal rent apart under the scratching weight of the rats, and the weird blood splattered around him as his army tore through it. Thousands of rats pushed through in seconds, and thousands more followed, swirling about Jack a foot high off the ground, in a foot-wide radius around him. The rats would not dare accidentally get in his way, and they moved with almost one mind.\n\nWonderful. Absolutely wonderful. The ocean of blackness scurried forward, and Jack followed. No need to run, he moved along at a slow pace, chuckling as he did. He skipped a little too, because how could he not. Finally, fucking finally, he was going to get to crush Jeremiah's skill, and rip Angela's innards out.\n\n\"Better warn them, Brace,\" he said to the hunter behind him. \"Any hunters who even look like they're going to attack us, my army will devour alive.\" There, good enough, Jack? A fair warning to all within, that their lives could be spared. All they had to do was lay down their weapons, and pray that Satan was feeling merciful tonight.\n\n\"Shit! Shit shit shit!\" The idiot human ran up to join him in the tunnel, and held up his hands to his mouth. \"Guys! It's Harcourt! Put down your weapons, and stay out of the vampire's way! You won't be harmed!\"\n\nThere were a thousand better ways Jack could have done this. He could have established communication himself, under a banner of a parlay, or provided some sort of warning of what was about to happen. He could have sent in Harcourt first, and let the man try and convince them what was happening. This was chaos. This was a giant mess of a situation, horribly handled, that would doubtlessly lead to many deaths.",
        "Good. Better than good. Fucking perfect.\n\nThe chamber smelled like flesh, that much was obvious, but it was also pitch black. Trissy had said the chamber was supposed to have an amber glow, so the hunters must have turned out the lights, in the entrance at least. It wasn't until Aaron pulled out his phone and started shining a light that he could see, and Harcourt and Othello did the same. A tunnel made of flesh, with rib bones along the walls, and blood around their feet. Each step was soft, and would have made a subtle splash in the shallow blood, if it hadn't been teeming with thousands of rats.\n\nHe would have loved to take the time to really enjoy the moment, and the strange fetish environment he'd found himself in. It was like being inside a snake, a gutted one, surrounded by its skin, muscle, and bones. There were bits of metal sticking out of the flesh too, a spike here or there, and some chains hanging from the flesh. Beatrice had said to expect shit like this, and that it only got worse the deeper you went into the tunnel. He couldn't wait.\n\nJack smirked into the darkness ahead of him, and the rolling waves of fur and death. He should throw these hunters a bone, if only to keep Jack happy.\n\nHow to do this, how to do this. He could go for the snarky introduction, that always worked well. Or he could try the glorious villain introduction, a classic. Or he could stay silent, and let the hunters stew in the unknown.\n\n\"He means it, fuckers,\" he called into the flesh tunnel. Snarky it was. \"I am going to kill every single one of you who even so much as holds a weapon in hand. I'm here for Jeremiah, Angela, and Elen. The rest of you are free to run away.\" He could have said 'free to go', but then that would have likely meant some of them probably would. An escape offered as an insult to pride would hopefully keep a few more of them around, pitting their egos against themselves. More bodies for the pile. Blood for the blood god.\n\nMovement in the distance, quiet splashes, and then faster splashes. Yeah, someone was running down the tunnel. The splashes stopped suddenly, as if someone had winding up and releasing a throw, and Jack grinned into endless flesh before him. Predictable.\n\nHe pointed his hands forward again, and his army obeyed. As flame began to pour down the tunnel toward Jack and his crew, a tidal wave of black fur gushed up and over, claws upon backs upon claws upon backs, until the rushing mound of flesh filled the tunnel to the ceiling. It crashed forward, a plague of delightful, furry little bodies, uncountable and unstoppable, silencing all beyond it. The flame became nothing, lost to the monsoon of rats that filled the tunnel as they barreled forward.\n\nWhat was that movie? Where the water pours down the tunnel, flooding it in seconds? Probably a bunch of movies, always eliciting terror from the people within as the unstoppable wave of cruel water came for them with all the subtlety of a volcanic eruption. Interesting to be on the other side of the wave.\n\n\"Holy shit,\" Harcourt said. The man's eyes were wide, bugging out of his head.\n\n\"Come on,\" Jack said. He followed after the rolling wave of flesh and fur, smiling with every step. It was a barrier that only an armor-penetrating bullet fired from a high-powered sniper rifle was likely to get through, and while he didn't put it pass the hunters to have that, they weren't going to have that set up to fire in their current circumstance.\n\nThe hunters were trapped. Trapped trapped trapped. Fish in a barrel, unless they had a way to get out of the chamber beyond. Ooh ooh, like opening a present, Jack could not wait to get to the end of the tunnel, and see what gift awaited him.\n\n\"Jack,\" Clara said, jogging up to him. \"Jack, this is\u2014\" She stopped, looked down, and sucked in a breath.\n\nDead rats. Walking through a hallway made of flesh and dripping of blood was pretty awesome, but the way the rolling wave of rats left behind those that died to the hunters attacking from the other side, was artistic. The wave was so huge it plugged the tunnel to the ceiling, and now all sounds of attacks by the hunters were muffled and buried under the roaring sound of tens of thousands of rodents pouring over each other. Chuckling, Jack stepped over the corpses with only a moment's glance. Some were burned, while others had been shot. Ah well, sacrifices in the name of his pleasure were sacrifices well made. Had to break a few eggs, and whatnot.\n\nEveryone started to follow, once they realized it was safe. They were scared of what they were seeing, but that made it all the better. Susanna had never done this, if the vague images swimming around in recesses of his blood were correct. She'd never taken a crew with her into one of her forays. They'd probably be more pain than they were worth, but it'd be kind of cool to have some witnesses. Normally, no one survived.\n\nOld Jack would have tried to be tactical or something, like back in the nightmare chamber of the gargoyle monster. New Jack, heh, new Jack knew better. Tactics were stupid, and never worked once shit started flying. No plan survived first contact with the enemy. It was so much easier to simply overwhelm, overpower, and be the first person to get that shit flying. Humans, hunters included, did not have the instincts to respond to chaos; and he was going to fucking drown them in chaos.\n\nMulder and Scully fluttered their wings a couple times, and Jack offered each a quick head scratch, again.\n\n\"Don't worry my pets. Once we're inside, Trissy says there's plenty of ceiling space, and dangling things for you to perch on.\" They both cawed, loud enough to be heard over the rapids of rats. \"I will summon your kin once I am sure they will be of use.\" For icing on the cake, of course. Let the hunters drown in biting teeth and scratching claws. His legion of crows could follow, and rip the skin from their screaming faces. And, if some hunters managed to escape through the tunnel Jack had come through, plenty of crows waited outside to tear them to pieces.\n\n\"Fuck me,\" Beatrice said. \"You're... fucking sick.\"\n\nJack raised a brow as he looked over his shoulder. Beatrice was following, Othello and Aaron in front of her, with Athalia behind. Her shirt was down again, but it was clear she was struggling with the wound. Yeah, vampire as young as her wouldn't be healing from a nasty wound like that too easily. But if she wanted to come along and maybe get shot, her choice.\n\nFor the life of him, he couldn't help but give her a big grin. \"You wanted this too, right? Don't get squeamish now.\"\n\nWhile the vampires and the werewolf all looked quite perturbed by the display he'd unleashed, Athalia was carrying a lovely combination of terror and worry. Poor mother was worried for her daughter. Well, Angela was going to die, so the worry was justified, even if it was stupid of her. Her daughter hated monsters, and actively hunted to kill them. What kind of self-respecting monster would let someone like that live? Who the fuck cares if it's family.\n\nAngela was going to die. Hell, Jack was sure he wouldn't have to break his promise to spare the psycho's life in the unlikely circumstance it was possible. No way was someone like that going to go down without a fight. And he remembered the look on Angela's face, when he almost shot her that time in the gargoyle's nightmare. She'd looked relieved. The girl wanted to die, and he was happy to deliver peace.\n\n\"My pets, stay back with Beatrice for now. Fly, when the opportunity presents itself. Be my eyes.\" Mulder and Scully nodded, and hopped back with a single wing flap. The Nos flinched for a moment, but his pets were good enough to not hurt her as their claws met her skin. \"We're almost there.\"\n\n\"How do you know?\" Damien said. His friend looked at him like Jack was someone else, like he was possessed, like there was some sort of curse running rampant inside Jack, liable to get them all killed.\n\nNah, they'd all live. He'd make them see he was better than the old Jack.\n\n\"My army has found the exit.\" He grinned at his friend, and set a finger to his own temple. Communication with tens of thousands of rats was a glorious thing, little chirps and squeaks that all meant small images, scents, and textures. It painted an image like a Van Gogh, expressive lines and streaks of color that told so much more than a simple picture.\n\nThey were close to the exit now, his army told him, and beyond was a grand chamber of flesh, bone, chains, and glowing amber crystals. Light.\n\nHe didn't need his army to explain to him that the hunters were shooting at the oncoming death tide, and in greater numbers. The sound, once nothing more than quiet pop pops in the background, had grown to louder cracking sounds, like someone stepping on bubble wrap. And the corpses of his rats were growing in number, to the point he could not walk without feeling their tiny, broken bodies squash under his step, into the flesh floor. More of the corpses were burned as well, some in huge clumps, others more spread out. Molotovs and flamethrowers.\n\n\"Ten more feet,\" he said. \"Everybody duck.\"\n\n\"Duck?\" they all said together.\n\nLaughing, he pointed his hands toward the rats, then upward. Moses, parting the Red Sea. No God here though, freeing slaves from an oppressive pharaoh. Just a vampire doing what vampires were supposed to do: kill.\n\nThe tide of fur and death erupted forward, exploding outward as rats jumped off rats jumping off other rats. Amber light flooded over them, hints of fire scattering about along the army of fur, but most of the strange light came from the interior of the enormous flesh chamber. Such a beautiful room, with flesh nodules sticking out of the floor like divine cancer, and chains hanging from the ceiling with bones and chunks of corpses hooked onto their spikes. Never in his wildest dreams, could he have envisioned such a beautiful room.\n\nA perfect room to bathe in death.\n\nThere was a total of two seconds of beautiful chaos. As thousands of rats poured out of the tunnel and into the chamber, many leaping far through the air, many on fire, Jack analyzed what he could. A dozen hunters, armed with assault rifles and pistols. No Molotovs; must have used them all on the rats. There were two hunters with flamethrowers, but they weren't the crazy military grade kind, so their range wasn't absurd. They were maybe thirty feet away, more than close enough for the explosion of rats leaping forward to send them backward, recoiling.\n\nJeremiah and Angela were there, in the middle of barking some sort of order, each with pistol in hand and firing at the tunnel. The hunters looked panicked, terrified, and two of them opened their hands to let their guns drop, once they saw Jack and Harcourt. Damn, two lives to spare. Ah well, he'd keep his word, for now.\n\nHe grinned the best grin he could summon, and pointed the palms of his raised hands at the stunned group before him.\n\nOnly when the choir of shrieks from the portal entrance pierced the chaos unfolding before him, did the unholy chorus of screaming caws fill the air. Everyone behind him finally ducked.\n\n\"Surprise, motherfuckers!\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\nNoises so loud they managed to cut through the insanity, erupted from the tunnel behind them. It was hard to notice anything other than the giant flood of rats erupting forward, into the huge chamber of flesh, and pouring out toward the hunters. It was Athalia though, who shoved on their backs and sent them onto their hands and knees. For a moment, he was tempted to yell at her. The feel of alien flesh and blood was not pleasant, and the feel of hundreds of rat corpses mixed among them was even worse.\n\nWhen a black cloud ripped past their heads, shrieking and cawing, he understood. Like bullets, black bullets with wings, crows flew overhead with zero grace or zero interest in subtlety. Like that night at the hospital, the birds flew straight and hard, zipping past Damien with enough force they could penetrate glass with their beaks. He'd seen it. He did not want to be in the way of it.\n\n\"Holy fuck,\" Clara said, down in the blood and death next to him.\n\n\"Holy fuck,\" the three witches said.\n\nAthalia said nothing. But, once Damien managed a glance back toward her, he could see the horror in her eyes as she stared at Jack's back.\n\nThe kid had his hands out in front of him, like he was a puppeteer controlling his puppets. His back looked massive, a small body carrying something none of them could understand. Whoever this man was, it wasn't Jack. As pandemonium fell upon the hunters, and cries of terror and pain joined the mixture of panic yells, Damien swore he could hear a quiet laughter.\n\nHe could. He could see it, too. Jack's shoulders were trembling lightly, shaking up and down with the motions of someone enjoying a good, deep laugh, noise buried in the discord.\n\nSometime during all this, Scully and Mulder had left Triss and joined the flock. Damien tried to look up and see where they went, but all he could see was flapping wings, a black cloud that tore through the air with far more speed than the rats could ever accomplish.\n\nAfter a few seconds passed, and he realized his life was in danger of being riddled with bullets and fire, he got up and got ready to dash forward into the large chamber. Othello, Aaron, and Clara all did the same, up and crouched, ready to sprint toward cover. They didn't. Despite the obvious danger, Jack stayed in front of them, standing, chuckling, and waving his hand around as he guided his flock. The chaos was a barrier between the vampires and the hunters ahead.\n\n\"Remember my pretties, if they don't drop their weapons, eat them alive.\"\n\n\"You heard him!\" Harcourt yelled. The man had managed to get up at some point, and had his shoulder to the side of the tunnel where it met the chamber. His hands were pressed to his cheeks, cupping around his mouth to try and amplify the sound. \"Please, drop your weapons! We're here for Jeremiah and Angela, not you guys!\"\n\nGod take pity on this man. There was no chance in all Hell that Harcourt was going to save many of his comrades. Upon opening his mouth, half of the hunters, caught between trying to fight off the impending swarm in melee, and firing bullets at its endless tide, turned to look at him.\n\n\"Traitor! Traitor!\" they said, screaming, vitriol dripping from their mouths.\n\n\"Team! Plan Vandermont!\" Jeremiah pulled out one of those strange, glowing knives, and stabbed the wall behind him. \"Form up!\"\n\nAnd just like that, the ten hunters who kept their weapons, pressed their backs to the wall near Jeremiah, with maybe a hundred feet between them and the intruders, and began their line of defense. The two with flamethrowers formed the outer edges, and each unleashed seemingly unending waves of fire upon the encroaching rats and birds. It was enough to bring the insane, inhuman blitzkrieg assault to a stop. For a moment.\n\nJack stepped forward, giving his team room to follow. Damien and the others remained crouched as they ran into the room, and slipped along the skin and blood to find giant bone and flesh to hide behind. Gross. It was thick and hard though, more than enough to stop the bullets that were flying around. The other vampires ran to different places, while Clara ran over to join Damien, still untransformed. He was tempted to tell her to do it, but she knew herself better than he did. Surely there was a reason she wasn't. Maybe she didn't feel the need to, considering none of them had done a thing yet. All of them were just watching Jack do his thing, as the curse turned their absurd, practically suicidal plan, into a brutally efficient frontal assault.\n\nDamien looked up, and gulped. The chains dangling, with bones and body parts hooked onto them, were now covered in crows. Some of the birds took a few nibbles of the plentiful flesh, but most perched for only a moment, before soaring around, either adding to the death cloud that circled above, or dive bombing the hunters doing their best to fend off the rats biting at their ankles. A maelstrom of turmoil for any human caught in its wake, the creatures descended upon the hunters with zero hesitation or fear. They were after blood.\n\nIt felt like an eternity. It'd only been ten seconds. In ten seconds, the two hunters who'd dropped their weapons had dove behind some giant bones, and were curled up, clutching their knees as rats splashed past them along the blood. In ten seconds, the rest had formed up and were waiting for Jeremiah to do something called Plan Vandermont. In ten seconds, the vampires, werewolf, and monster had taken up positions behind cover, while Harcourt started running toward the two hunters who'd given up. He knew them, apparently, judging from the look on his face. Maybe he'd expressed concerns about their bosses before.\n\n\"I'll kill you!\" Angela screamed. \"Kill you! I'll\u2014\" Her voice disappeared under a hail of her own gunfire. A pistol wasn't enough for her, and she grabbed an assault rifle from one of the hunters. Jeremiah was behind her, cutting through the flesh of the wall and carving symbols into it, but Damien could see the man's face carried some panic. And Angela, she looked like she'd been tossed into Hell without warning, and was going to blast her way out.\n\nThis was going better than any of them could have hoped for. The hunters were caught with their pants down, caught off guard by the shock of Harcourt's betrayal, by the vampires' ability to break through their closed portal, but most importantly, by Jack's sheer power. Much as Damien wanted to look at the hunters, and maybe launch an attack of his own, he was awestruck, eyes locked onto Jack and the way the kid was slowly waving his hands around. Conducting an orchestra.\n\nThis was going to be a slaughter.\n\nAngela's directed fire wasn't aimed for the oncoming swarms of rats or birds, it was aimed for Jack. Rats burned away and crows fell from the air by the dozens, but they were endless, with more pouring in from the tunnel to Jack's call. Each of Angela's bullets were met with a wall of rats that flowed in front of Jack in waves, spreading onto the floor moments later, only to rise up again once Angela loaded a new magazine.\n\nIt was sad. Even an elder vampire would struggle to do this; Michael certainly couldn't. The hunters were totally outmatched, and the crew Jack brought with him were practically pointless. Hell, if Damien so much as stood up, a crow was liable to sink its beak into the back of his head, purely by accident. No, every moment of this madness was like a nightmare, someone else's nightmare that Damien was just a powerless witness in. Jack was the Bogey Man.\n\nThere would be no grand stand here for the hunters, a last, final battle. They weren't Spartans in the Battle of Thermopylae, or the Alamo. They were cockroaches that'd invaded someone's home, and they'd awakened something dark and twisted in the black, something that was going to destroy them with all the empathy of an exterminator.\n\n\"Surrender!\" Jack yelled, laughing the whole time. \"I'll kill you quick. Hell, Angela, I'll even let you live, so you can spend the rest of your days locked up in a dungeon, alone, with only your mom to visit you. Isn't that right, Athalia?\"\n\nAgain, Angela paused, eyes snapping around through the chaos until Athalia poked her head out from behind one of the enormous rib bones jutting out from the fleshy floor. It was strange, seeing Athalia in her human form, in an environment that was so obviously a nightmare.\n\n\"Angela, stop this!\" Athalia said. \"Stop! It doesn't need to end this way.\"\n\n\"Fuck you! Fuck you! Fuc\u2014\"\n\nJeremiah grabbed her shoulder, and yanked her in through the slit he'd cut in the flesh. The man didn't have the time to open it wide like Triss had to the other opening, and he moved through it like a splinter pushing through flesh, with blood squirting out from the pressure in the wound.",
        "The other hunters tried to follow, but with two less people unloading lead and flame on the endless swarms, the encroaching animals grew closer, and closer. They tried, they really tried, but as hunter after hunter slipped through the bloody hole, the crows and rats had an easier time reaching the target. When three were left, one with a flamethrower and two with rifles, that was the tipping point, when the end was inevitable.\n\nRats overflowed the three hunters, and screams filled the room, loud enough they cut through the squawks and chirps of the creatures devouring them. Gargling mixed with their screams in moments, and as Damien finally stood up from behind his cover, he watched flailing arms and legs, sticking out from a literal mound of churning fur and claws, eventually go still.\n\nDamien felt sick, and he thanked the Lord Fiona wasn't here. Vrall may have been comfortable murdering people, but Fiona? He doubted the joyful woman would be able to stomach seeing these men eaten alive, men and women who didn't deserve it.\n\n\"They got away!\" Triss said, forcing herself back to her feet. Clutching her chest with one hand, she walked over to Jack, and pointed at the hole in the wall. \"Again!\"\n\n\"They've entered the nightmare,\" Athalia said, joining them. \"I can feel it. Jeremiah must have opened one of our burrows and entered the nightmare, one of S\u00e1ndor's nightmare chambers. I can't tell which one without entering it first, though.\"\n\nNodding and sporting the biggest, strangest grin Damien had ever seen, Jack pat Triss on the shoulder, and started for the hole.\n\n\"Come on then. They're not getting away. Clara! Transform, rip that hole bigger, and run through it first. I want you to punch a hole through whatever defense they're setting up. They know what I'm doing now, and I want to make sure we catch them off guard a second time. Rip any hunter in the way to bits.\"\n\n\"O... kay...\" Clara looked to the roiling mound of rats, still pouring over the three hunter corpses, and the crows that flew by and snatched a piece of flesh, before flying off. She looked just as disgusted as Damien felt, and when she looked Jack's way, she looked concerned, in a blatant 'please be ok' sort of way. Jack either didn't notice or didn't care.\n\n\"Aaron,\" he continued, \"get Jennifer, get her in here. She'll be playing watch duty for these two. And help her tie them up before you follow us in. Athalia, you're following me. I want information the moment you can give it to us. If this is in the nightmare realm, then will Fiona be able to help us?\"\n\n\"She'll be able to sense you've entered the nightmare, but finding you is another matter entirely. S\u00e1ndor's lair is not open to ours. She'll have to push her way in.\"\n\nJack groaned and rolled his eyes. \"Of course. Can you navigate to her lair from Sandor's?\"\n\n\"Yes. It might take a little time, but yes, getting to my lair or Fiona's from S\u00e1ndor's is doable. I assume you want Fiona's help?\"\n\nJack shrugged. \"The more people on my side to stop Jeremiah, the better the chance I don't feed your daughter's guts to my pets.\" For a moment, it looked like Athalia was going to hit him, but one glance from the little Ventrue was enough to make her freeze, fists clenched at her sides. \"Can Jeremiah escape from inside this nightmare chamber? Escape into the city elsewhere?\"\n\n\"If Jeremiah had to use this flesh stuff to get into the nightmare realm, I'd be surprised if he has a way out the nightmare that doesn't come right back here; not like Elen would have multiple of these flesh chambers just sitting around for use, hopefully. And he won't come back here, not now, when for all he knows, we could have a hundred vampires marching in after us to secure this area. Elen has to be in the nightmare with him. Maybe she can create another way out of the nightmare, but I can't imagine it's easy.\" The Begotten gestured to the flesh chamber around them. \"I can't imagine her doing any of this is easy. And\u2014\"\n\n\"That's enough guessing,\" Jack said. \"Sick of it. Sick of all this guessing, planning. Ugh, doing it makes me want to puke. Enough. Humans are the ones that need to plan, that need to waste their short, useless lives on plans that accomplish nothing. We go in, and we thrive on the free-for-all!\" Shrugging, he pointed to the giant, bleeding hole the hunters had squeezed through, and the three corpses that now lay around it, barely more than skeletons anymore. \"Damien, Othello, follow in after us. Do your thing; I expect to see some speed and hear some death. Trissy, behind them. Stay out of the way until you're useful. Bring Harcourt along too, we might need him. Let's go.\"\n\nClara started to walk over to the hole, before looking over her shoulder. \"But\u2014\"\n\n\"Now!\"\n\nJack's voice boomed through the room, thunder that silenced every sound. No one moved, no one breathed, and each and every rodent and bird stopped moving as the weight of the entity's words settled on them. Clara was dumbfounded, eyes wide and locked on the small man. But, after a second, she swallowed down the growing fear Damien saw on her, and she began to transform.\n\nSeeing the beautiful woman turn into a monstrous wolf beast, standing on two legs and eight feet tall, seemed almost mundane in comparison to everything around her. No one batted an eyelash, not even the three hunters crouched in a corner of the flesh chamber. And, with the strength he expected of a werewolf, Clara the Uratha sank her claws into the fleshy walls, and ripped them apart. Blood squirted, gushing from the fresh wounds, and soaking the enormous beast in fresh crimson; it fit the decor.\n\nAfter a moment to recover, Clara unleashed an enormous roar, and charged through the hole into the blackness beyond. As she did, Jack followed, chuckling yet again as his army of rats poured around his legs until they reached his knees. Big as Clara was, she managed to make the hole big enough for Jack, hundreds of rats, and dozens of crows to follow in after him without issue.\n\nAthalia walked in after him, and Damien could see the dread filling her. As Othello followed, Damien looked back to the others, and found Triss carrying the same look as Clara.\n\n\"What... have I done,\" Triss said. In the noise of rats and crows, Damien had to combine the buried sound with some attempted lip reading to piece together her words; a skill he was now trying to learn.\n\n\"What do you mean?\"\n\n\"I did this to him, begged him for his help, asked him to... to go all out, like this. Oh fucking god Damien, look at him. He's\u2014\"\n\n\"Let's save the guilt for after we get Jeremiah, Angela, and Elen, ok? Besides, I saw him pull out of this once before, at the hospital. Trust him.\"\n\nDamien turned, and followed after the others, Othello beside him. He didn't let Beatrice see his face, and the worry he knew was carved there. This was the second time he'd seen this personality manifest in Jack, yes, but last time the kid pulled out of it by seeing the comatose, dying body of his mother. There was no one like that this time, and if anything, the presence of all the sources of pain and agony in Jack's life being in one place, would drive him and the curse to new depths of carnage.\n\n\"Ok. Ok, yeah.\"\n\n\"Sure you're up for this?\" He gestured to her chest.\n\n\"No, but I'm not missing this. That bitch has to die, Damien. She killed Julias, and... and she has to... has to...\"\n\nDamien pat her shoulder once, and offered his best confident nod and smile, which weren't very good, before he followed after Othello.\n\nIt was obvious on contact that this wasn't the same sort of entrance as the one they came in from. The first portal had definitely been meant to be opened; maybe not the way Triss opened it, but it had been designed to be opened, to serve as a doorway. But whatever Jeremiah had done had been some sort of hack job, using Elen's magic symbols to force an opening through the wall of flesh. It was a mess, leaking blood and showing ruined flesh, like skin being torn apart by claws. Not like, was.\n\nIt pressed on parts of his body as he pushed through it, and he had to close his eyes to keep the blood out of them. The wound was closing, like a healing wound, and Damien took some time to push the hanging flaps of flesh apart. Once he created more room, more birds flew in, many hopping off his shoulders as they flapped past. It took effort to not flinch or drop at the feel of their bodies jumping off his.\n\n\"Beatrice! Before you come in, tell Aaron he should stay out here with Jennifer, and try and keep this doorway from closing!\" Damien said. With the city at his beck and call, Jack's army was limitless. There were more crows and rats in Dolareido than any human could individually count, and to have them at his service made Jack unstoppable. If they were blocked off, it'd be a problem.\n\nTriss nodded, and Damien pushed through, more rats and birds following him as he fought against the heavy flesh. The wall was thick, thicker than Damien could have guessed. Three feet, four feet, five feet. Six feet. Longinus, give him strength, he was walking into the valley of the shadow of death.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\nShe stared at the text in her phone, and slowly squeezed the device. It shattered unceremoniously, bending on itself until the glass screen littered the floor of her office. She dropped it, letting it land with a loud clunk, before she started to tremble with growing anger.\n\n\"That... infuriating... stupid... boy!\" If Daniel were with her, no doubt her old friend would have asked what was bothering her. But he was not, and she was forced to share her fury with the air. \"That idiot boy is risking his life on a yet another excursion, another foolhardy mission to fight the hunters. He has not prepared!\" Why did the boy insist on letting impulse dictate his choices, when the hunters were involved? Did he not understand that such a rash action was bound to lead to failure and pain?\n\nShe paced left and right in front of her window overlooking her city, and glared down at the Elysium garden beneath her. Once he returned, she was going to tie him to the wall in her bedroom, and leave him there. She would explain, in great detail, the folly of his reasonings and actions, and invite his mother to join in berating him. Samantha may not agree with literally chaining her son to a wall, until Antoinette detailed the actions of her son. Then, no doubt, she would agree with Antoinette. The boy needed to be locked up for his own protection.\n\nShe kicked the phone across the floor. A touch of Kindred strength was enough that, upon colliding with the toe of her shoe, the phone exploded, showering her office in its innards.\n\nThere was some sense in what the fool was doing, based on what little his text told her. If a hunter had indeed offered him a single night to launch an assault on Jeremiah, and Jack had used his skills as a Ventrue to prove the hunter spoke true, then she could not entirely blame him for choosing to take advantage of the opening. But the boy did not understand. He did not appreciate that eternity lay before him, and if he were to act with wisdom, he would understand that a gamble on revenge was not worth risking eternity. The vampires could weather this storm, and deal with the hunters as they always did, with patience and decades.\n\nSighing, she took a moment to regain her composure. Such unbridled rage did not become her, and only with a clear mind could she respond to this situation intelligently. As her love described it, it was flipping a switch in the mind, and setting all emotions aside; evidently, he did not employ the skill in this particular matter.\n\nShe reached into her desk, acquired another phone, and called her sheriff.\n\n\"Yes, Prince?\"\n\n\"Daniel, where is Jacob?\"\n\n\"Jacob? I... I'm not sure. He's difficult to track, but I assume he's in one of his sacrifice chambers. He's not in his Circle's cave.\"\n\n\"I see. Well, his Circle has launched an assault on the hunters, with Jack leading them. That foolish boy has taken the witches, his friend Damien, and even one of the Uratha with him into what is undoubtedly a suicidal battle!\" Do not crush this phone, Antoinette. It is your spare, and you will need to format a new one should you destroy this one. You do not have time for that.\n\n\"I... see. Natasha?\"\n\n\"His message said nothing of Vola. Where is your childe?\"\n\n\"I do not know. I assume she is with Matthew and Arturo, and perhaps her friend Herrington, if... if Herrington is not with Terry? The message said nothing of her?\"\n\n\"It did not.\" With a loud sigh, Antoinette sent a message to Natasha. Normally the diligent Mekhet would respond within seconds, but nothing came. \"I assume you are correct, then,\" she said to Daniel. Whether that was because Jack dare not ask Natasha to join him on this mission, knowing full well it would pit Vola against her Prince and teacher, or because he had asked and she said no, Antoinette did not know. But Natasha would crack about such a request from Jack, if Antoinette pressed her for information. Interrogations could come later.\n\n\"You think... Jack will be able to defeat the hunters?\"\n\n\"With this curse as a tool for his use, like the Devil on his shoulder, I fear he will be able to do far more than defeat them, Daniel. It will be a slaughter, and it will affect my love in ways neither of us can predict.\" That did not mean his life was not in danger, but after witnessing its power herself, it was his soul she was concerned for, not his life.\n\n\"I see. But, why do you wish to speak to Jacob?\"\n\n\"Because Jack and the Circle may assume that they were doing this on a whim, without the knowledge of their superiors, but I know Jacob. He and that infernal creature Black Blood watch the shadows of my city, and with such chaos occurring, that man must know something.\"\n\n\"Then I will find him, immediately.\"\n\n\"See that you do.\" She ended the conversation, got up, and headed for the door. Before she could open it, someone knocked.\n\nThere were only three vampires she considered talented and powerful enough to sneak into her tower, without at least one of her defense measures noticing: Daniel, Jacob, and Maria. Talented as the Uratha were, she doubted they had the tools to penetrated her tower; they were beasts, wolves, meant for dirt and hunts, not walls of metal and electronics. Her Beast did not recognize the aura of a fellow Kindred, however.\n\nUpon opening the door, she could not help but be surprised at the presence before her. Elder Nosferatu and Mekhet could hide their presence to the point she would have difficulty sensing them, but this, she had not expected. Mark, the Begotten, stood there with Azamel, in a wheel chair.\n\nA curious moment, and one Antoinette was forced to take pause within. In another circumstance, it would not be Elen Antoinette and her Kindred would be hunting, it would be this woman, yet another old, frail creature in a wheelchair, with far too much power under her control.\n\nMark was an interesting looking man, dark skin, muscled, and overweight. It would not have surprised Antoinette to see the man playing American Football. But the power of his Horror, the creature that lurked within, did not radiate might. It radiated disgust. It radiated shadow and stealth, subterfuge, and the quiet inching of insects and rot. He was the reason Azamel now sat before her, bypassing Antoinette's defenses.\n\nBegotten were utterly aggravating. Slippery, frustrating creatures. They had tools to tunnel through the world in ways Antoinette struggled to fathom, let alone mimic. If the Uratha were a reminder that Antoinette struggled to master the mysteries of otherworldly connections, the Begotten were reminders that the Uratha were merely children by comparison, in that regard. They lived and breathed other realms in the way Antoinette lived and breathed blood, money, and concrete.\n\n\"Azamel,\" Antoinette said, barely suppressing a snarl, \"I assume you have business with me?\"\n\n\"I do. I... assume Jack has sent word that he's attacking the hunters?\"\n\n\"He has.\"\n\n\"Did he mention that Athalia is with him?\"\n\n\"He did not.\"\n\n\"Hmm. I assume he wants to protect her from the fallout. Your boy toy puts others before himself as a habit, without even realizing it, doesn't he?\"\n\n\"He... does.\" Sighing, she folded her arms across her chest and tapped her foot. \"What do you seek, old monster?\"\n\n\"I would like to see S\u00e1ndor.\"\n\n\"Out of the question. He is locked away, and I will not risk the presence of one of your kind.\"\n\nThe old monster chuckled, which turned into a choking cough within moments. \"You think I'll attempt to free him.\"\n\n\"I think I am not so senseless as to let such a security risk arise with no reasonable benefit for myself.\"\n\nThe old woman tapped her fingers together. She reeked of cigarettes, tar, poison, and age, but at least she was not smoking; such an insult would be too much.\n\n\"Your lover visited me, Prince. I know where's he's gone.\"\n\nAntoinette clenched her teeth until she felt her fangs emerge, hidden within her lips but ready to sink into this creature and end her pitiful existence as a dried husk.\n\n\"And you wish to see S\u00e1ndor, in exchange for such information?\"\n\n\"That, and because... there's a chance he may be freed.\"\n\n \n"
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "violent",
        "slow",
        "paranormal romance",
        "suspense",
        "horror"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-07-ch-11"
}