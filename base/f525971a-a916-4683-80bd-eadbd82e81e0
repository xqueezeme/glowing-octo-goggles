{
    "title": "Bedroom Conversations Ch. 03",
    "pages": [
        "My name is Tom Rogers and I am 46 years old. My wife Peggy and I have been married since my third year of medical school. I am presently a practicing gynecologist at the Collins Clinic in Springfield Missouri. My marriage to Peggy is a good one. She is a wonderful wife, with only one fault -- an obsessive desire to gossip with several other wives about the personal lives of the members of the club.\n\nEach evening in bed she regales me with stories from her luncheon group, her bridge group and the gals she sits around the pool with. All they talk about is sex. I suppose I should thank my lucky stars that she's just talking about it -- not doing it!\n\nPeggy has a good life, but she earned it by working as a nurse to get me through medical school and residency, while raising two great kids at the same time. She worked her ass off! Now that the kids are in college, she's entitled to a little relaxation.\n\nMONDAY NIGHT IN BED\n\nI lay quietly in the dark afraid to tell Peggy about my telephone conversation today with the President of my graduating class. He had called and asked me to serve on the committee planning our twenty-fifth class reunion. It was going to be a big weekend event and we were hoping for a nice turnout. Our committee would have its first meeting next weekend in Columbia. It was a six-person committee and Sam read me the names he had selected. When he came to Bill Alpin I felt a cramp in my stomach. Bill was the class nerd and he had married Gladys Detweiler! Well, I thought, better get it over with.\n\n\"I got a call from Sam today and he wants me to serve on a six man planning committee for our twenty-fifth class reunion,\" I said. \"And he wants the wives to help out in the planning.\"\n\n\"That's a nice compliment, dear. I'll be delighted to help. Who's on your committee?\"\n\nI ran through the list, naming classmates Peggy knew: my former roommate, a lab partner in gross anatomy and another classmate.\n\n\"That's only five,\" Peggy said, suspiciously. Was she in my head again?\n\n\"Oh? I thought I named them all,\" I said nervously.\n\n\"You named five, you bastard! And I think I know why! I can never figure out why you try to keep secrets from me. Your mind is like an open book. The sixth member is that nerd Bill Alpin isn't it?\"\n\nShit! How the hell does she do this? She gets inside my head. I have no privacy!\n\n\"Oh,\" I said. \"You're right dear. Bill Alpin is on the committee also.\"\n\n\"And that nerd married Gladys Detweiler!\" Peggy said in a determined voice. \"You fucked that Detweiler bitch while you were dating me. She fucked half the guys in your med school class before she finally hooked that stupid nerd Bill Alpin.\"\n\n\"Bill Alpin may be a nerd but he's not stupid,\" I said. \"He wrote a computer program for robotic prostate surgery. You know sometimes that's better than conventional or laparoscopic surgery - six small incisions - great visualization of the surgical field and better nerve sparing. A lot of guys still get erections after surgery because of his work at Hopkins.\"\n\nPeggy chuckled. \"If I was a guy I wouldn't let a robot programmed by that nerd anywhere close to my balls with a scalpel. Why did he marry that whore?\"\n\n\"He didn't know ... in fact he still doesn't know that Gladys was fucking all those guys,\" I said.\n\n\"I saw that Detweiler bitch a year ago at the reunion. She's gotta weigh almost a hundred and fifty pounds now and I can't imagine a brassiere strong enough to hold up those big udders.\"\n\n\"She probably sees herself as pleasingly plump,\" I said.\n\n\"Pleasingly plump? She's too fat to fuck!\" Peggy said.\n\nThen I said something I should never have said. I was trying to be funny, but I should have known better. My attempts at humor always got me in trouble.\n\n\"Well she can still suck.\"\n\n\"YOU BASTARD!\" Peggy shouted. \"YOU'RE REMEMBERING HER BLOWJOBS!\"\n\n\"Nonsense,\" I said. \"That was twenty-four years ago.\"\n\n\"And I remember it like it was yesterday,\" Peggy said.\n\n\"Try to get some sleep dear. I'm tired,\" I said.\n\n\"Good night Dear.\"\n\n\"Good night Dear.\"\n\nTUESDAY NIGHT IN BED\n\nPeggy had been in a bad mood all evening and I think I knew why. I had had a hard day in surgery and I was in no mood to argue about anything.\n\n\"I've been thinking about that Detweiler bitch all day long,\" Peggy said. \"I'm gonna have to work with her on that committee. So are the other wives. I went over that list again. That bitch was blowing and fuckin every guy on that committee when they were in med school. And their wives know it! And we'll all have to work together with her.\"\n\n\"That was twenty-four years ago,\" I said wearily.\n\n\"They all remember it though. At every reunion, at least a couple of gals tell a Gladys Detweiler story that the rest of us haven't heard. I heard about your class President who bent her over a lab table and fucked her doggie in gross anatomy lab. I've told stories about your little Plymouth bouncing up and down in the Sigma Kappa parking lot when you fucked that bitch. All the wives have stories about their husbands and that slut.\"\n\nMaybe if I just lay here silently she'll change the subject.\n\n\"Every reunion she seems to get fatter. That little nerd husband of hers would suffocate if she tried to do him cowboy.\"\n\nPeggy started laughing at the image of Gladys on top of Bill Alpin.\n\n\"Why are you so happy that she's getting fat?\" I asked innocently.\n\nPeggy was silent for a moment and then began to speak softly.\n\n\"Because when she was bouncing around campus with a narrow waist and shapely hips and those big udders jiggling, you and your buddies couldn't keep your eyes in your heads. You guys took turns fucking that bitch and I was scared shitless that you were gonna dump my ass like you dumped two other girls you fucked.\"\n\nThen she got angry.\n\n\"You bastard! She sucked you off to slow you down and make you a better fuck. You enjoyed her blowjobs didn't you?\"\n\nI didn't get a chance to answer.\n\n\"No need to answer that -- of course you did! Okay, say it! I was jealous. I was in love with you and I was scared of losing you just like a bunch of other girls were scared of that bitch. You were fuckin her brains out every Friday night and I was scared to say a word about it because I thought you might just laugh at me and stop asking me out. All I could do was try to pump my ass harder and suck you off better. Now I feel good to see her getting fat and unattractive and I ought to be ashamed of myself. BUT I'AM NOT!\"\n\n\"Darling, I don't think you're jealous at all,\" I said softly.\n\n\"Well you ought to!\" Peggy said. \"I was and I still am when I think back about it. How the hell could any gal compete with a bitch that didn't have a gag reflex? Okay I'll work with the bitch on that committee, but every time I see those big lips of hers I'm gonna think about your dick between 'em, pushin all the way back to her tonsils.\"\n\nMaybe if I change the subject Peggy will feel better. \"Have you talked to Pam lately?\"\n\n\"I had lunch with her yesterday.\"\n\n\"How are Pam and Rusty getting along?\" I asked.\n\n\"More or less like you said they would,\" Peggy responded. \"It's been over two months since they started going to bed together and they have a wonderful relationship except ... except ...\"\n\n\"Except what?\" I asked.\n\n\"Except for that whore Carolyn Ames,\" Peggy finally said.\n\n\"What does that mean?\" I asked.\n\n\"It means that every now and then -- maybe every couple of weeks or so -- one of the girls see's Rusty's car in that bitch's parking lot. He's still fucking her!\"\n\n\"Well,\" I said, \"I'm glad your luncheon group is keeping track of his movements. But I doubt he's serious. Probably just a little extra pussy on the side -- you know -- some strange stuff now and then.\"\n\n\"YOU BASTARD,\" Peggy shouted. \"Why are all men like that?\"\n\n\"Pam doesn't need to worry,\" I said. \"Rusty will stop trying out strange stuff after he gets a ring on her finger.\"\n\n\"Just like you did! YOU BASTARD. You enjoyed that pussy right up till the very last minute. You had my engagement ring in your pocket the last time you fucked her. I told Pam that. I told her you did that and then I told her what you said about Rusty fucking Carolyn. I told her you said it will keep her ass in gear.\"\n\n\"What did she say to that?\" I asked.\n\n\"She said her ass WAS in gear. She's deep throating that horny bastard and he's got a big thick one. And she fucks him till she's sore. She's doing the best she can do to keep him satisfied but the bastard still stops off at the Ames bitch's apartment every couple of weeks.\"\n\n\"Well it will keep her working hard and it won't last forever,\" I said.\n\n\"She keeps asking me to tell her about Gladys Detweiler. Pam has a lot of respect for you and ... well ... the thought of you settling down to married life after fucking that whore helps her deal with Rusty fuckin that Ames bitch.\"\n\n\"Good night Dear,\" I said.\n\n\"Shit! The thought of working with Gladys Detweiler all next weekend, looking at those sagging udders and those big lips, is depressing.\"\n\n\"Good night Dear,\" I said again.\n\n\"Good night Dear.\"\n\nFRIDAY NIGHT IN BED (MARRIOTT HOTEL, COLUMBIA MISSOURI)\n\nPeggy was pissed, as I knew she would be. She had been pissed since our committee and their wives met this afternoon to discuss the twenty-fifth anniversary celebration. I knew what she was upset about. It was the dress that Gladys Detweiler had worn -- or Gladys Alpin, now.\n\n\"I can't get over how the bitch was dressed,\" Peggy said, disgust and anger in her voice.\n\n\"How she was dressed?\" I asked innocently.\n\n\"Don't play dumb you bastard! Her dress was cut so low that those big udders almost dropped out. And if they had, they would have sagged down to her waist!\"\n\n\"I didn't notice,\" I said.\n\n\"YOU BASTARD!\" Peggy shouted. \"You noticed! All five of you guys noticed. Five sets of eyeballs were bulging out of five staring heads. That nerd was so busy working on his computer program to confirm every class member's address that he didn't notice you guys ogling his wife's jiggling udders like lechers.\"\n\n\"Well now that you remind me, she was wearing a rather low cut dress.\"\n\n\"Rather low cut? Rather low cut? You bastard! Any lower and her nipples would have been hanging out. As it was when she bent over you could see her nipples. And that bitch kept bending over every time she pointed to the seating charts on the table.\"\n\n\"And every time she bent over,\" Peggy continued, \"five heads turned and dropped down to look. Your neck is probably sore!\"\n\n\"My neck is NOT sore.\"\n\n\"I don't get it. You play with tits all day long in your office. Why are HERS so damned interesting all of a sudden?\"\n\n\"It's NOT all of a sudden,\" I protested. It was the wrong thing to say.\n\n\"Oh, so you've been remembering them all these years!\"\n\nShit! There was no way to escape! Whatever I said was wrong. Better keep my mouth shut. I saw that bra holding up those big tits. It was a miracle of structural engineering. I guess I was remembering playing with those tits while Gladys gave me a blowjob. Gladys gave very good blowjobs. And she worked on your balls while she sucked your cock. All the guys talked about that. Poor Bill Alpin -- he has no idea that the gal he married had sucked off half the guys in his med school class.\n\n\"Well, are you gonna stop thinking about her blowjobs and say something?\" Peggy asked, belligerently.\n\nShe was inside my head again!\n\n\"What can I say? Everything I say is wrong!\"\n\n\"You could at least say you're sorry,\" Peggy said.\n\n\"Sorry about what?\"\n\n\"Sorry about fucking Gladys Detweiler,\" Peggy said.\n\n\"I didn't know you knew I HAD been fuckin her until a few months ago,\" I said plaintively. \"Okay, I'm sorry I fucked her.\"\n\n\"You may be sorry but you enjoyed it, you bastard. This afternoon the gals talked about those blowjobs she gave. She was the best cocksucker in Columbia when you guys were in med school.\"\n\nPeggy was on a roll now and couldn't quit.\n\n\"My roommate's brother fucked her and told us all about it. She worked on your scrotum with two hands while she was blowin you. TWO HANDS! And she didn't have a gag reflex! All of us tried to blow you guys but we all knew that none of us were as good as she was.\"\n\n\"Don't be silly, darling,\" I said. \"You were as good as she was.\"\n\nAgain it was the wrong thing to say. I knew it the moment I said it.\n\n\"As good as she was, but not better. Right? YOU BASTARD!\"\n\nI sat there thinking that there was no way out of this.\n\n\"What did the other wives have to say, Darling?\" I asked.\n\n\"We talked about that nerd,\" Peggy said. \"And how that little nerd has no idea you guys fucked his wife's brains out in med school. Then we talked about whose hubby fucked her longest. I told 'em you fucked her for two months.\"\n\n\"Oh, I guess it was about that,\" I said.\n\n\"It was EXACTLY that,\" Peggy said firmly. \"Two months and that meant NINE Friday nights.\"\n\n\"I guess I wasn't counting,\" I said.\n\n\"You weren't counting because you were too damn busy fucking! But you were about average. Two of the husbands fucked her longer than two months and the other two only fucked her a month or so. She might have been an expert cocksucker but that bitch couldn't keep a man till she met that nerd!\"\n\n\"Well they seem to be happy together,\" I said.\n\n\"And that nerd doesn't even notice the way she shows off her udders,\" Peggy said.\n\n\"Well, there's nothing we can do about it,\" I said. \"Let's get some sleep.\"\n\n\"Good night Dear.\"\n\n\"Good night Dear.\"\n\nSATURDAY NIGHT IN BED (MARRIOTT HOTEL, COLUMBIA MISSOURI)\n\nIt had been a rough day. Sam had asked Gladys and me to check out the Drury Inn, which had promised us special rates. I thought Peggy was gonna blow a fuse when I left with Gladys, who had on another low cut dress showing a lot of tit. Sam asked Peggy to go with the nerd and check out the convention center banquet hall, which had a computerized projector to show our class pictures. The lights had hardly gone out before Peggy started.\n\n\"Did you have fun with the birch?\" Peggy said in an angry voice.\n\n\"We checked out the hotel,\" I said.\n\n\"And I'll bet you checked out those big udders,\" Peggy said.\n\nWhat had actually happened could remain private and there was no reason to tell her. On the other hand, there was no reason not to tell her and I never kept secrets from my wife. I decided to tell her.\n\n\"As a matter of fact I did,\" I said with a chuckle.\n\nThere was a long pause. Then Peggy said, \"Come again?\"\n\n\"We were given keys to several empty rooms to look at and when we got inside the first one we ...\"\n\n\"Hold it right there!\" Peggy said. \"\"You took that bitch up to a hotel room?\"\n\n\"I didn't TAKE her! We went up to check it out. And when we were inside Gladys popped herself out of that low cut dress and bra and flashed her tits at me.\"\n\n\"SHE WHAT?\"\n\n\"She showed me her tits and walked over and took my balls in her hand and said we were supposed to check out the bed.\"\n\n\"YOU BASTARD!\" Peggy shouted.\n\n\"You're calling me a bastard because you think I had sex with her?\"\n\n\"No! I know THAT didn't happen. I'm calling you a bastard because you were nice to her. You WERE nice weren't you? You should have laughed at the bitch and told her she was too fat to fuck but you didn't do that did you?\"\n\nShit! Peggy was in my head again. How many husbands had a wife like this? Of course I had been nice to her. It was the only decent thing to do. She was in her forties. She had lost her figure. She was obviously insecure. She was married to a friend of mine. I couldn't laugh at her!\n\n\"Yes I was nice to her. Let me explain why. Look Peg, Gladys has put on ten or fifteen pounds and ...\"\n\n\"More like twenty or thirty,\" Peggy interrupted.\n\n\" ... and she's feeling insecure. She's looking for some attention and support and...\"\n\n\"SHE'S LOOKING TO GET LAID! That's what she's looking for - and with MY HUSBAND. THE BITCH! You were nice to her weren't you? You bastard!\"\n\n\"Well she needed support and ...\"\n\n\"A horny bitch flashes her udders at you and offers you a blowjob and you turn into a God damned psychiatrist! What did you do?\"\n\n\"Well I laughed in a friendly way and said she still looked just as good as she did twenty years ago. I wanted to give her some reassurance, you know.\"\n\n\"You bastard! I knew you would be sweet and not embarrass her. I know she couldn't seduce you but I didn't want you to be sweet to her.\"\n\n\"Well,\" I said. \"I'm glad you trust me.\"\n\n\"So then what happened?\" Peggy said.\n\n\"I picked up her bra and ...\"\n\n\"YOU WHAT?\"\n\n\"Her bra was on the floor. She had slipped out of it when she dropped her dress down,\" I said.\n\n\"Dropped her dress down. What the hell do you mean?\" Peggy was getting more angry now.\n\n\"She had pulled her dress down to her waist -- actually a little bit below her waist and ...\"\n\n\"BELOW HER WAIST?\"\n\n\"Well yeah,\" I said. \"She was wearing a garter belt and I think she was wearing bikini panties and ...\"\n\n\"THE BITCH WAS HALF NAKED!\"\n\n\"Yeah, I guess you could say that. Anyway I picked up her bra and fastened it around her chest and tried to get her boobs back into it. They were so big that I had to use two hands on each boob and at first I couldn't get her nipples back into her bra.\"\n\n\"The bitch doesn't put her nipples in her bra. She leaves 'em out so you can see them when she bends over,\" Peggy was almost shouting now.\n\n\"Well anyway, her nipples were getting hard and ...\"\n\n\"With your soft hands playing with those udders I'm not surprised,\" Peggy said.\n\n\"It took a while to get her dressed again,\" I said.\n\n\"You know I trust you, dear. But I know what was in your head when you were shoving those floppy udders back into their harness.\"\n\n\"In my head?\" I asked. \"What's that supposed to mean?\"\n\n\"You bastard! You were thinking about telling me this story. You had both her big, soft udders in your hands squeezing 'em back into harness and you were thinking about telling me this story. Weren't you?\" Peggy said, accusingly.\n\nShit! Peggy was always in my head! I remember thinking as I pushed those huge tits back into her bra that I would tell Peggy about what happened.\n\n\"Yes I was thinking about telling you the story.\"\n\n\"And I know what else you were thinking, you bastard. You were thinking that I was gonna have to give you a blowjob. You were thinking that no wife alive is gonna disappoint her husband after he refuses a blowjob from another woman -- especially an old flame. You were thinking you'd tell me the story and then lay back with a big hard on and enjoy a grateful, loving wife sucking you off.\"\n\n\"Well, yes, that ... that thought did cross my mind,\" I said.\n\n\"You bastard!\"\n\nThen I felt a soft hand on my dick, another tickling my balls, and a warm mouth. I laid back to enjoy a special treat from my loving wife. She was exactly right! No wife in her right mind would leave hubby lying there with a hard on after he turned down a blowjob from another woman. I'm glad she knew what I expected. Every now and then it feels good to get one up on your wife - especially a wife as clever as mine. I reached down and put my hand on the back of her head to be sure I was gonna say hello to her tonsils.\n\nSUNDAY NIGHT IN BED (MARRIOTT HOTEL, COLUMBIA MISSOURI)\n\nI lay in the darkness remembering that long afternoon. The Country Club of Missouri had offered its facilities for our use at the reunion. Several of my classmates were in practice in Columbia and were members. We spent Sunday afternoon checking out the club and then we enjoyed the pool. I knew Peggy was gonna be upset tonight when I first saw the bikini that Gladys had worn.\n\nThat bikini was thin and skimpy and white and when it got wet you could see right through it just like she was naked -- and Gladys kept it wet all afternoon. And it fit tight with little rolls of fat from her stomach and thighs hanging over tantalizingly. If you liked a plump woman with soft handholds, this was your cup of tea.",
        "And I knew, somehow, Peggy was gonna blame me. It was gonna be MY fault. We lay quietly in the darkness for a few minutes before the inevitable happened.\n\n\"Your girlfriend wanted to show you what you missed yesterday,\" Peggy said. \"She might as well have been stark naked when that damn thing got wet. You never told me her beaver was so hairy.\"\n\n\"What can I say?\" I asked plaintively.\n\n\"Five horny guys looking at an almost naked broad and five wives pissed off and that nerd laying in the sun reading a computer magazine and not noticing that his wife was running around almost starkers in front of his buddies.\"\n\nSomehow I always said the wrong thing. I was trying to make it seem less important.\n\n\"Well, we'd all seen it before,\" I said.\n\n\"Bastard! And you all enjoyed it before! All five of you guys had fucked that bitch! And you were remembering it as she walked around naked for your entertainment.\"\n\n\"Darling, you were so nice to me last night that I hardly noticed Gladys in that bikini.\"\n\n\"And it wasn't just me,\" Peggy said.\n\n\"What's that supposed to mean?\" I asked.\n\n\"It means that all five of you horny bastards got blowjobs last night. I talked to the gals and all of us had figured the same thing. It's the sports car thing.\"\n\n\"The sports car thing?\" I asked, puzzled.\n\n\"Yeah. A dick is like an expensive sports car. The best way to be sure it stays out of trouble is to be sure it gets regularly serviced.\"\n\n\"And where did you acquire that little tidbit of wifely knowledge?\" I asked.\n\n\"From Pam,\" Peggy said. \"She's an expert on sports cars and ... well, on dicks as well.\"\n\n\"And Pam is sure that Rusty is being properly serviced?\" I asked.\n\n\"She was the last time I talked to her. I think he's about ready to ask her the big question. I'm having lunch with her tomorrow when we get back.\"\n\n\"She's in love with him?\" I asked.\n\n\"She's in love,\" Peggy said. \"And that makes a woman helpless. She's trying to keep him satisfied -- he needs a lot of sex. And he's getting as much as he wants. She's afraid to complain about that whore Carolyn Ames. It's just like I was, when you were fucking that Detweiler bitch. I was scared to death of her, but I didn't dare say a word. All I could do was smile and try to please you and hope that you liked fucking me enough to make it permanent. Pam's in the same tough situation.\"\n\n\"And you pleased me and I proposed,\" I said.\n\n\"And I was so happy that I never said a word about that Detweiler bitch,\" Peggy said.\n\n\"It will be the same with Rusty,\" I said. \"He'll propose and then he'll quit fucking Carolyn Ames.\"\n\n\"Men are such bastards,\" Peggy said. \"But a woman can't live without one and when she finds the right man she'll do anything she has to do to get him.\"\n\n\"And keep doing it?\" I said softly, stroking her belly.\n\n\"You horny bastard! Sam's wife was right.\"\n\n\"What did Sam's wife say?\" I asked.\n\n\"She said that Sam made sure that the Detweiler bitch was here so the wives would all be user-friendly. And all five of us have been exactly that. You five horny bastards got more BJs and pussy than you could handle this weekend.\"\n\n\"Oh I think I handled it rather well. And, Darling, the weekend isn't over yet.\"\n\n\"Horny bastard!\" Peggy said. \"It's a good thing I'm still in love with you.\"\n\nI felt her body motions in bed as she spread her legs."
    ],
    "authorname": "LynnGKS",
    "tags": [],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/bedroom-conversations-ch-03"
}