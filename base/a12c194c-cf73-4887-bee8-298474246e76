{
    "title": "Meara and Oakley Ch. 03",
    "pages": [
        "The warmth of sunlight over my bare back and the shrill ringing of my cellphone on my nightstand work in concert to rip me from a deliciously dreamless slumber. My hand shoots out to retrieve it, barely missing the alarm clock and a half empty glass of water left over from the night before. \n\nI drag the handset close and squint through bleary eyes at the display. I recognise the number immediately and briefly entertain the thought of launching the phone across the room. I hadn't planned much for the day, but dealing with my crazy ex-husband was definitely not on my 'to-do' list.\n\nI silence the call and replace the phone, wondering, fleetingly, if changing my number would be worth not having to deal with him. The thought is quickly discarded, though. It's the number everyone has for me, including my vendors, which is more important than Xavier and his particular brand of crazy. Changing it, a number I've had for over 6 years, would no doubt invite an array of delays and screw ups with deliveries.\n\nThe sound of the bathroom door opening stops whatever coherent line of thought I'd been having, and I roll to my side to see Oakley sauntering into the room, a billowing cloud of steam trailing him. In the bright wash of sunlight, with a towel cinched loosely around his slim waist and his dark hair damp and curling slightly about his shoulders, he is magnificent. My body reacts immediately and I try not to gape, though if I'm going by the amused glint in his eyes, I'm failing miserably. \n\nOakley is a fucking work of art. All hard lines and lightly tanned skin. I'm in shape, but my lines tend to lean more toward softly curved. I would be jealous if I weren't busy remembering what his body had done to mine.\n\nHe let's the towel fall away, then bends low to retrieve the jeans he'd discarded a couple hours ago. I watch as he slides them up his long, leanly muscled legs, and sigh at the loss of the sight of his skin. And his swinging cock. I am shameless.\n\n\"Show ain't free,\" he says, his deep rumble pulling my gaze to his face and away from every delicious, decadent inch of flesh on display.\n\n\"Oh, wow, you made a joke!\" \n\nI smooth the edge of the sheet over my breasts and attempt a coy smile that's interrupted by a wide-mouthed yawn.\n\nHe releases a short huff of laughter, then sinks down on the edge of the bed to pull his t-shirt over his head. His boots are last. I watch him, wanting to reach out and sift my fingers through his hair. It most likely smells like my shampoo. I like that thought - that he'll leave the house with the scent of me on him. \n\nMy cell starts to ring again and I scoop it up, hoping against hope that it's someone other than Xavier. It's not. I have no qualms about silencing his call for the second time before tossing it onto the bed.\n\nOakley glances at me, his gaze pulled by my sigh of frustration. He tugs at the zippers and buckles on his boots.\n\n\"Someone's determined to get a hold of you,\" he says. \"That thing's been goin' off since before I got in the shower.\"\n\nI feel my brow furrow, surprised that I slept through it. He must have worn me out. And Ella's super surprise visit this morning didn't aid in getting any significant amount of rest on my part. \n\nHe rests his elbows on his thighs, leaning over slightly as he watches me from around a glistening hank of hair. His gaze is intent.\n\n\"No one I'm interested in talking to right now.\"\n\nI swing my legs over the edge of the bed and move to stand, but Oakley's thick fingers around my wrist stop me. \n\n\"Is someone bothering you, Meara,\" he asks. \n\nI can't read the expression on his face; can't tell if it's concern or jealousy which causes the corners of his mouth to tighten ever so slightly. It sends a sliver of emotion through me, one I'm not completely sure how to describe. Granted, we have no labels, and I did spend two weeks ignoring him solely out of spite after seeing that bike bunny plastered to his back, but it feels... I don't know, good, I guess?\n\nMaybe that's why I let him in on the identity of the persistent caller.\n\n\"It's just my useless sack of shit of an ex-husband.\"\n\nOne dark eyebrow quirks. \"He call a lot?\"\n\nI let out a dry laugh. \"Him calling even once is more than enough,\" I reply. \"He's gotten it into his head that I owe him money. He gets bored, or low on funds, which is often, apparently, and guess who he decides to bother? Yay!\"\n\nOakley doesn't say anything for a long moment. His eyes move over my face, searching for what, I don't know. His hand remains at my wrist, the heat of his skin branding mine. He smells so good right now - the clean, almost sweet scent of my soap and his own wonderfully dark scent just beneath it. I want to crawl over him, to seal my lips over his. Just a taste before he's out the door again.\n\n\"If it gets out of hand, you let me know.\" \n\nI snort. \"He's bothersome, not dangerous. Besides,\" I playfully bump his shoulder with mine, \"do I look like I need protecting?\"\n\nAgain, he is silent, but this look, I can read. He doesn't believe me. \n\n\"Desperate people do stupid shit, Meara,\" he says. His gruff bass trickles across my skin, warming more than just my flesh. \"If he, or anyone else for that matter, gives you any problems, you let me know. All right?\"\n\nHis eyes are shining and full of dark promise. Tension has overtaken his big, normally loose body.\n\nIt feels like we're stepping into something, something we've remained silent about for months. Something which Ella's appearance and hastily thrown out invite has, perhaps, served as a catalyst. It makes me nervous, in that I had neither planned nor prepared for this. \n\nBut, maybe, I'm reading too much into it. \n\nOakley uses the hand at my wrist to pull me in, and just before my lips touch his I reel back, covering my mouth with the back of my free hand. He stares at me, lines of confusion appearing on his face.\n\n\"I haven't brushed my teeth yet!\"\n\nHe does a slow blink, his face smoothing out. I stand, not bothering with the sheet, and move to the bathroom. I can feel his eyes on me, following the rolling sway of my hips.\n\n\"Show ain't free,\" I throw over my shoulder before shutting the door behind me. I can hear him chuckling, even over the sound of the water running in the sink. \n\n********************************************************\n\nElla thinks she's slick. She's not. I know all her tricks. Hell, I taught them to her. \n\nInstead of calling, like she was supposed to, she comes over that evening with a heavy plate of leftover lasagna and a benign smile plastered across her pretty face. \n\n\"We need to discuss Mom and Dad's party\" she claims, failing to hide the furtive glances she casts my way when she thinks I'm not paying attention. \n\nI indulge her, if for no other reason than I love her lasagna. \n\nAn hour later, the lasagna now long gone, and she goes in for the kill.\n\n\"So, who is he, Mimi,\" she asks, using the nickname she gave me when we were children. Another ploy. She only calls me that when there's something she wants and wants to tug on my heart strings a little. \n\nI don't pretend to not know the 'he' in question. I simply roll my eyes. \n\nShe narrows hers at me. \"Seriously? You have to give me something.\"\n\nI scoop up my empty plate and move to the sink. I wet a dishrag and proceed to clean off the plate.\n\n\"I don't have to do anything but stay black and die,\" I reply, secretly loving the flustered groan she grits out. \n\n\"Meara Elise,\" she says in warning.\n\nI shake the excess water off the dish and set it on the rack to dry. Turning, I fold my arms over my stomach and lean back against the sinks edge. \n\n\"There's nothing to know, Ella. He's just some guy I'm fucking.\"\n\nShe's scrunches up her nose and waves off my crude response. \n\n\"Please. Even I know you wouldn't just pick up some random.\" She tilts her head and peers at me through perfect lashes. \"The energy between you two-\"\n\nI scoff. \n\n\"- and the way he was moving around your kitchen, well, it all seemed pretty... familiar...\"\n\nWhat a bitch. \n\n\"Might as well just tell me what I want to know, big sister.\"\n\nIf I know nothing else about Ella, it's that her annoying ass is persistent. With a heavy sigh, I open my mouth. \n\n\"Remember when Carter Ludlow busted out a window in my car and flattened my tire?\"\n\nShe nods her head expectantly and, for whatever reason, I fill her in. Mostly, anyway. \n\nMaybe I want to get her off my back. Maybe a part of me wants to share the details of my weird little dance with Oakley. Whatever the reason, I tell her about that first bike ride. The exhilaration. The bubbling laughter that had filed up inside me. Oakley's offer of a follow-up ride. \n\nA thin smile blooms on Ella's face when I've completed my tale.\n\n\"You like him,\" she says.\n\n\"Fucking hell, Ella.\" \n\nI shake my head at her, unwilling to admit to what she seems to already know, what the strange emotion had been when Oakley had told me to let him know if someone were bothering me. The care he'd shown was unexpected. Even my ex, who had vowed before God to protect me, had never shown the slightest inkling of concern for my well-being. Something I came to realize far too late in our disastrous relationship. \n\n\"So, what else do you knew about him?\"\n\nI'm almost embarrassed to admit the truth. Almost. Not quite. \n\n\"I know enough, Ella,\" I assure her. \"What we're doing is working.\"\n\n\"If you say so.\"\n\n\"Fuck your face, Ella.\"\n\nShe snorts incredulously and begins to gather her things. \n\n\"For now. Until you get tired of fucking someone you know nothing about.\"\n\n\"Don't do that. Don't plant little mental landmines, Ella.\"\n\nShe stares at me a long time, her face softening as she comes around the table to stand in front of me. She sighs, reaching out to dust an imaginary speck from the shoulder of my t-shirt.\n\n\"Meara, this is cute and all, but it isn't sustainable. You don't need another replay of the 'Xavier' fiasco.\"\n\nShe's speaking from experience, from knowledge, from being my shoulder when things between Xavier and I had crashed and burned, and though she means well, her words dig little doubting fingers through my brain. \n\n\"I oughta punch you in the face,\" I grumble though there's no venom to my words. \n\nI know she's right, and I'm almost terrified of what more there can be to Oakley. In my head, he's an almost person, vaguely actualized outside of the walls of my house or when I'm sitting on the back of his bike. I've purposely not questioned, not dug around because reality, the more solid actualization of Oakey might be problematic - specifically for my heart. And I don't want to risk that.\n\nAnd, now, I find myself wondering at the things I hadn't bothered to be too concerned about in the beginning. \n\nSee? She is the Queen of fucking shit up. \n\n********************************************************\n\nThe next day is a shit-show of glorious proportions. On top of two of my employees getting sick on the job (one of whom is pregnant), a bunch of out-of- town college kids decided to start a fight around closing time. At some point between the clean up and my arriving home at nearly 3am, Xavier finally stopped ringing my phone. \n\nI don't know what he wants; I don't care what he wants. I stopped concerning myself with him long before the ink dried on the divorce papers. \n\nBut, it's unnerving and I hate that he feels the need to maintain any sort of presence in my life. I'm just going to have to change my number, and deal with the fallout later. \n\nBy the time I make it home, by the grace of God I didn't wreck my car, I'm exhausted and just this side of irritated. I trudge up the front walk, eyes downcast and the pain running the length of my back causing my shoulders to hunch up toward my ears. My feet hurt. My head hurts. Every muscle and nerve ending is screaming for pain pills and a steaming hot shower. \n\nMy keys are in hand and I've almost got them in the top lock when a glimmer of light by my left foot catches my eye. I'm so tired that I nearly missed the tall vase of flowers sitting half in shadow right next to my front door. \n\nNo one I know has ever sent me flowers. And, to my knowledge, I haven't done anything particularly exceptional as of late to warrant their delivery. \n\nDespite the pain in my body, I bend low to look at them. The simple glass vase is nearly overflowing with bright orange day lilies. They smell wonderful. I sift my fingers through the blooms, looking for a card, a note. Something that will indicate who's sent them. There's nothing. \n\nI settle back a bit, too tired and sore to push myself to stand.\n\n\"They're beautiful.\"\n\nOakley's voice drifts softly over my shoulder and I nearly jump out of my skin. \n\n\"JESUS!\" I yelp, my palms coming up and bracing against the door a millisecond before my forehead collides with it. My heart is in my throat, adrenaline spiking through my limbs and leaving my fingers trembling. I waver, then allow my body to crash to the porch. My ass hits hard, but that pain is nothing compared to the rest.\n\nI lift my head to shoot him my most menacing death glare.\n\n\"What the fuck, man!\" I bark.\n\nWeariness has made me inattentive, but not so much that I would have missed his bike parked out front. Which it is not.\n\nHe merely gazes down at me a long moment, his face expressionless save for the slight tick of his shadowy jawline. \n\n\"Nice flowers.\"\n\n\"Fuck the flowers. Help me up.\"\n\nI raise my hand to him, and he pulls me effortlessly to my feet. \n\n\"How long have you been here, skulking in the shadows?\"\n\nNo response, and I'm tempted to punch him. I don't have the energy for it. So, I hiss at him instead. \n\nHe grunts and bends down to pick up the house keys I'd dropped when he tried to scare me to death. He doesn't hand them to me. He turns and unlocks the door as if he's done it a million times. He pushes the door open and directs me to enter with a simple nod of his head. \n\nI slide past him and into the house, hitting switches as I move down the long hall and into the living room. A groan passes my lips at the sight before me.\n\nI forgot Ella had said she would be dropping off the decorations for my parents party. The living room is filled with a haphazard mess of streamers, half-assembled centerpieces and other party paraphernalia. My living room looks like a purple and silver bomb went off in it.\n\nI drop my purse amid the mess, deciding in an instant that it can all wait for tomorrow. I don't have the energy or the concern to sort through it right now.\n\nI can feel Oakley at my back. Can feel the heat coming off of him. I turn to him, a sudden overwhelming need to be held overcoming me, but when I look up into his face I'm startled by what I see.\n\nThere is a cut marring his bottom lip, close to the corner of his mouth. It looks fresh. The bit of flesh visible beneath the light shadow of his beard is colored in faint shades of angry red and pale bluish purple.\n\nHe notices when I notice it, shaking his head minutely as a shadow of uncertainty shifts in his green eyes. \n\n\"What the hell happened?\"\n\nHe doesn't respond and I take a step toward him. \n\n\"It's nothing,\" he rumbles. His tone says he doesn't want to talk about it, that I should just let it go, but his lip is busted for God knows what reason, and it's startling to see. \n\nMy fingers lift to touch his face, to stupidly test the sensitivity of the injury, and I gasp when his hand shoots up and closes around my wrist.\n\n\"I said, it's nothing, Meara,\" he practically growls at me, his eyes shooting sparks in the dim light. \"Leave it be.\"\n\nI don't know where the anger comes from. Perhaps the whole of the day has caught up to me - the chaos of the bar, the incessant phone calls from my ex, Oakley showing up and acting like I shouldn't give a fuck about the how and why of him being hurt - but, whatever it is, I wrench my arm away from him and return his warning glare. \n\n\"Fine,\" I say, uttering the word in my own drawn out version of a growl. \"Forget it. I'm taking a shower.\"\n\nAnd, with that, I shove past him and stomp up the stairs.\n\nIt's stupid. I shouldn't care. We're not a couple. We're just two people who enjoy a little slap and tickle on a regular basis. But, if I'm honest, his reaction stung. \n\nWhatever measure of care or interest which had been growing inside me had also been growing in intensity. Him pushing me away was like a rejection. I suppose I'm not supposed to care, just let him shove his dick inside me whenever either of us gets the urge.\n\nIn the bedroom, I strip out of my clothes and march into the bathroom, slamming the door behind me like a petulant child who's just been denied something she wants.\n\nAnd, I guess that's exactly what it feels like. I'd wanted to comfort him, to soothe the hurt if I could, and he'd pushed me away.\n\nThis is the reason I don't let people close. This is the reason why I don't find it necessary to form any more attachments after my divorce. I don't want to waste the emotion on someone who doesn't return it. \n\nI turn on the water in the shower as hot as I can stand it and climb inside. The water feels wonderful on my aching body, but it doesn't nothing for the pounding ache inside my chest. \n\nI should have ended this a long time ago. Ella is right; this sort of pseudo-relationship is not sustainable. How long can you go on fucking someone you don't know the first thing about?\n\nI scrub my body once, twice, then shut off the water. I'm hoping he'll be gone by the time I come out, but a small part of me, the part that likes his smell and the feel of his hands on me, the heat of his body next to mine, is loathe to accept that thought. \n\nOver the course of my five year relationship with my ex-husband, Xavier had spent more time 'away' than he had being present. I was used to it. After a while, a very short while, actually, I didn't care anymore. His presence caused more problems than it solved. I couldn't depend on him for anything. And, I mean, nothing. I had spent more time trying with him than was necessary. Or smart.\n\nBut, with Oakley, it was different. There was no trying. When he looked at me, I could see my reflection in the shifting, deep green of his eyes. He asked for nothing, and brought with him nothing more than the scent of the wind on his skin and the rumbling growl of his motorcycle.\n\nUntil the bike bunny.\n\nUntil Ella started asking questions to which I didn't have answers.\n\nUntil his brief show of concern the other morning when Xavier was blowing up my cell phone. \n\nWhich bore asking, he could ask me questions, but I couldn't ask questions about him and his busted fucking lip? Or, was he just being territorial over his little fuck-toy?\n\nI got out the shower. Dried off. Rubbed scented lotion into my body, mumbling and cussing the entire time.\n\nI don't need this. I don't need another emotionally unavailable, secret-keeping man in my life. \n\nI'm surprised, and a bit relieved, when I come out the bathroom and Oakley is standing in the middle of the bedroom. \n\nHe doesn't say anything, just stares at me while I go to the dresser and pull out my night clothes - a simple tank and a pair of pale blue boy-cut panties. I put them on in record time.\n\n\"Meara,\" he says finally when I brush past him without a word and begin yanking down the blankets on my side of the bed. \n\nMy side of the bed.\n\nI nearly laugh out loud at that.\n\nI climb in and hunker down. \n\n\"Meara,\" he says again.\n\nI look at him, lock my brown eyes with his green ones, then reach out and turn off the lamp.\n\nThe room goes dark, save for a few slivers of moonlight that sift through the blinds and throw bands of soft blue light across the bed. \n\nOakley sighs, more weary than angry, and my heart lurches just a little at the sound. \n\n\"You don't have to stay,\" I mutter. I'll give him a way out if he wants to take it. No reason to make this any more of a mess.",
        "Another long moment passes and I can see his shadow begin to shed his clothing. I close my eyes against the longing that rises inside my traitorous body.\n\nWhen he's finished undressing, he slides into bed next to me. He doesn't touch me. We lay there, silent, the tension shifting in waves around us. Between us.\n\nCall me weak. Call me an idiot, but I still want him. It takes everything in me not to huddle in close to him.\n\nHis voice, when he speaks, is soft. Tired. Shot through with what sounds like resignation. \n\n\"I didn't expect it to go this far.\"\n\n\"You didn't expect 'what' to go this far?\"\n\nThe bed shifts slightly with his deep exhalation.\n\n\"Us.\"\n\nSomething inside me softens a little, a bit of the anger and hurt bleeding away.\n\n\"Neither did I,\" I admit.\n\nA beam of moonlight cuts across my hand where it lays on my stomach atop the comforter, pale against me dark brown.\n\nOakley shifts, slides his heavy arm around me. His lips graze the shell of my ear and a bit more tension leeches out of me. \n\n\"I don't want you to worry about me, Meara,\" he says softly.\n\n\"Should I be?\"\n\n\"I don't want you to be.\"\n\nI turn into the curve of his arms. I can't see his face but when I lift my fingers to trace the line of his jaw, I can feel the tension there.\n\n\"I'm not ready for things to change just yet, Meara,\" he murmurs. And there's something in his tone, something riding just below the surface that stops my tongue from forming any more words. \n\nHis arm tightens around me, pulling me in closer. Always closer. His heart beats steadily where my chest is flush with his.\n\nWe don't say any more. Eventually, the long day and the waning of the adrenaline that our fight had spiked in me begin to take their toll, and I start to drift off.\n\nHe'd said he's not ready for things to change just yet. Part of me doesn't understand what he means. The other understands completely and is fucking terrified. \n\nRegardless, things are changing between us whether we want them to or not. For the good, or for the bad is yet to be determined.\n\nThe last thing I'm aware of is the gentle brush of his lips on my forehead, and everything else melts away.\n\nI think I dream. I'm not sure. \n\nOakley holds me all night."
    ],
    "authorname": "Erisjade16",
    "tags": [
        "black woman",
        "white man",
        "interracial erotica",
        "interracial romance",
        "slow burn",
        "bwwm"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/meara-and-oakley-ch-03"
}