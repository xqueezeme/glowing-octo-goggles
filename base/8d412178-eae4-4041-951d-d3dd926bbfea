{
    "title": "The Twelve Zenati Pt. 02",
    "pages": [
        "Authors note: Hello everyone. Welcome to the new Twelve Tables series and the new family I have for you all to meet. I hope you come to know and like them as much as the families from the past series. Please understand this is a work of fiction and I am in no way an expert on mental illness or PTSD. This story is not based on real people or situations and any resemblance is mere coincidence. Thank you once again to David and Kate for being my second set of eyes. Enjoy! ~ellie. \n\nThe Twelve Zenati: Ch. 1\n\nVivienne.\n\n\"For fuck's sake, did you have to call him?\" Genesis groaned at his cousin, Helena. \"I came to you because I thought you had some sort of doctor-patient ethic!\" \n\n\"Gen, you think you had a heart attack,\" Helena clicked her tongue. \"What did you expect me to do?\" \n\n\"Give us a minute alone please, Helena,\" Armando chuckled. \"My son will be fine. You can trust me on that, but I promise to call if you're needed. I am sure his test results show no lasting effects. It was probably just bad indigestion; you know what wild tales he has always told in that little paper he writes for.\"\n\n\"Alright, Zio, but if he dies, I am telling Zia it was your fault,\" Helena warned him, trying not to sound amused as she wagged a finger at him. As far as she could see, there was nothing wrong with her cousin's heart in any of the tests results she had. \n\n\"So, tell me about the curse breaker?\" Armando asked, his eyes twinkling with merriment.\n\n\"There is no curse! It's not like that!\" Genesis shook his head in denial.\n\n\"When I saw your mother for the first time, she fell from a wall and broke her arm. The pain I felt, however, was like a knife twisting in my gut, then it radiated up into my chest and it felt like a gorilla took hold of my heart and was squeezing it in its big fist,\" he spoke casually as he watched his son try to hide the surprise from his face. \"Once I recovered, I launched into action because I knew I had to save her. I couldn't bear the thought of anyone else picking her up and taking her to the hospital.\" He took a seat in the small consultation room and surveyed his son. \n\n\"There is no such thing as a love curse, Papa,\" Genesis groaned. \"I know you all like to tease us about it, but now is not the time for family legends.\" His father had never told him the details of his curse breaker before, just that his heart stopped when he saw his broken dove. That is all any of the men in his family ever said about finding the woman they fell in love with. The fact that the details were identical to how he felt when he had laid eyes on Serena Seabrook was nothing more than a coincidence, he told himself. It was probably the beer he'd had at that seedy dive bar giving him nasty heartburn.\n\n\"Tell me about the girl that made your heart stop, then,\" Armando chuckled. \"Where were you when you had this heart attack?\"\n\n\"It's not like that, Papa. Trust me,\" he sighed and related the story of Father Bob Rossi and the woman who could bring down Remington Royce. \n\n\"So, a priest asked you to help save this young woman, and when you walked into the hospital room to meet her you had a heart attack?\" Armando tried hard to keep a straight face. \n\n\"She is beyond broken Papa, brainwashed and tortured. Her whole personality was replaced with the Suebi version of the perfect woman. I don't know that anyone can save her,\" he said sadly.\n\n\"But you want to try, don't you?\" Armando asked gently.\n\n\"I promised Father Bob that I would. Is that so bad?\" Genesis said, defensively.\n\n\"Not at all. You're a good man Genesis. You always champion the weak and vulnerable. Here's the thing though. Let's say your Zio and his watchmen also have an interest in what the girl can tell them about Remington Royce and his Suebi network. Would you be just as happy for him or your cousins to help her?\"\n\n\"No! This is my story, my lead,\" he blurted without a thought about the consequences of his words and had to endure his father's knowing smile as his eyes danced with merriment.\n\n\"Alright, calm down,\" Armando chuckled. \"Your uncles and I will help you to help her. You can call the shots where she is concerned, with our full backing, on two conditions.\" He paused, waiting for his son to look him in the eye and nod in agreement. before going on. \"First, you admit to me that this heart attack you described was exactly like I experienced when I first met your mother. The knife in the gut moving up to the gorilla fist around your heart,\" he paused again and saw the truth of that shared pain in Genesis' eyes. \"Second, go along with the story of the curse breaker even if you don't believe it yourself. Not one man in this family would be game to stand in the way of the curse. Bad things happen when you try to fight it, or so they say.\"\n\n\"Fine. I have the same genetic disorder, heart condition, indigestion, whatever, as you,\" Genesis admitted grudgingly. \"It hurt like hell, so 'curse' is as good as any word for it. That doesn't mean that I believe that the men in our family are cursed to suffer for their one true love. Or that anyone has just one true love. If you want to call my heart attack a curse, so be it.\"\n\n\"Good man, but Helena is pretty sure you didn't have a heart attack which is why she called me. Now, here are my immediate thoughts given what you have told me,\" Armando drew a pen from his pocket and searched the desk in the small consultation room for something to write on.\n\n\"You need that bodyguard to answer some questions. Interrogate her about how you get the girl to respond to people trying to help her. We're about to start picking up the Suebi, so you need to work on the priest and get every detail about the man who confessed the story about the girl. You need to contact her family. Not to do so would be wrong and could cause rifts between the families, but there are ways around letting them take her away. There is also a Papillo trauma specialist here to work with the Vitali leaders. I will send her down to consult with you.\" Armando was all business, and Genesis blinked in awe. Even though the new table had been announced as a safeguard against an attack such as the Donati family suffered, the older members were still not ready to retire, so little had been expected of any of the younger members except Dominic and Xavier, the heirs apparent.\n\n\"The watchmen are all pretty busy,\" Genesis said dubiously. \"I would need some help from them, or at least access to their resources.\"\n\n\"Your Uncle will give you what you need, just ask. He can spare a man or two for you given the circumstances,\" Armando said. \"No doubt he will want the information the girl can give as much as you do, considering who she was about to marry.\"\n\n\"Shit, we heard! Are you okay?\" Gideon boomed as he burst into the small room, taking up a large amount of space, not only with his physique but also his larger-than-life personality. Genesis grimaced as he looked at his brother. This was getting worse by the moment.\n\n\"You should tell your brothers. They will be your biggest supporters if you do. Trust me on that,\" Armando chuckled again and clapped his son on the shoulder. \"I'll go and see about that trauma specialist and get her to call you.\" He stood up and winked at Gideon before chuckling and leaving the room.\n\nGenesis looked at his older brother and tried to reassure him that he was quite well and that he knew he was needed by his family during the location and arrest of the Suebi underground network that had orchestrated the nationwide attack on the Mothers of the Tables While their own family had taken the warning seriously and nullified the threat before anyone could get close to his Aunt or the wife of his cousin, Xavier, others had been injured. The mother of the Vitali table had also been airlifted from the desert airport of the Papillo to Darwin, and that had put extra pressure on the Zenati family's medical resources. He had just felt a strange twinge and wanted it checked out, that was all.\n\n\"A your-heart-stopped type of twinge?\" Gideon's eyes widened. \n\n\"No, not like that, but I was in the hospital following a lead at the time, so I just asked Helena to check me out to make sure it wouldn't happen again,\" Genesis sighed. God! Were all of the men of his family crazy when it came to believing in this stupid curse? Against his better judgement, he began to explain how he had become involved with Bob Rossi and Serena Seabrook. The fact was that his father was right; he felt an unbelievably strong pull from deep within him to help the girl. He refused to believe it was a curse but rather, as his father had pointed out, that he had a hero complex and always championed the cause of the weak and vulnerable, and said as much to his big brother.\n\n\"So, this mysterious guy goes to confession and tells this Father Bob about a girl who was brainwashed. Then Bob comes to you with this story, and you think 'Great! Here's a way to bring down a man we believe is a main player in the Suebi organisation.' Have I got it right so far?\" Gideon asked.\n\n\"Yeah, that about covers it, though she wasn't just brainwashed. Royce systematically destroyed her old life. He created a new identity for her and made her believe it and live it through the use of drugs, torture and brainwashing. She believes she is Serena Seabrook and that Olivia Gambaro was murdered by bad men. She believes that she is in love and was about to marry the man of her dreams, who did this to her, when she was injured,\" Genesis said disgustedly. The information he had came from Bob, but he had no reason to doubt the earnest priest, and what he had seen of the girl seemed to confirm what he had been told.\n\n\"But the guy is brain-dead. Machines are keeping him alive. He isn't a threat anymore and can't give us any useful information. So why not just hand this girl over to the experts that know how to deal with this sort of shit?\" Gideon asked. \"The girl got a bad deal, but we can send her to the Papillo or the Battaglia hospitals where they are set up for this type of thing. I am sure her family would be glad to know she is alive. Why do you want to get involved in helping a woman who is possibly damaged beyond repair?\" Gideon needed his brother to admit the real reason out loud. He could already see it in his eyes and his movements, but he needed to hear his brother say it before committing himself to the cause.\n\n\"A priest asked me, and I gave my word,\" Genesis shrugged. The fact that the moment he had walked into the hospital room and seen the fragile-looking woman he had determined that he would be the one to help her was beside the point. Bob had spent hours trying to get her to talk and eat, but she had ignored him and Genesis as if they didn't exist. According to the doctors and nurses, the only time she interacted with the hospital staff at all was through her bodyguard, Leila Miles.\n\n\"So what? Priests always ask us to go to church every Sunday. It doesn't mean we show up,\" Gideon chuckled and leaned back in his chair. \"Why don't you just admit the curse is real, even though you have gone out of your way to prove it wrong?\"\n\n\"You should have seen her, Gideon. She's the epitome of the lost lamb, as Bob called her. She looks terrified of everything and everybody. I just wanted to make her see that we were just trying to help her, that we meant her no harm,\" Genesis tried to explain. \"She's on pain medication for her injuries, but she is being sedated as well because she is so distressed about being separated from Royce, even though they have explained the situation to her several times.\"\n\n\"She's your curse breaker, isn't she?\" Gideon asked again, not letting his brother dismiss the subject. \"You would know if she was. Tell me what happened when you saw her. Did your heart really stop?\"\n\n\"The curse is bullshit, and you know it,\" Genesis shook his head in denial.\n\n\"Seriously? You tell me this story. You obviously want and need my help and expect me to believe she's not your curse breaker?\" Gideon chuckled. \"Go on then, pick any Zenati man, any of them, no matter how far removed, and tell me about how they met their wife and if they claim their heart stopped because she was in danger or hurt.\"\n\n\"You can twist any of those stories to make it sound like the curse was at work,\" Genesis sighed.\n\n\"Just admit she is your curse breaker. Admit what you felt when you first saw her and I will move heaven and earth to help you. So will Noah. Hell, I can't imagine anyone in the family wouldn't help you,\" Gideon chuckled. \"We Zenati only get one shot at this love thing, and if you mess it up because you can't accept that the men of our family are cursed, then nothing I can do will help you. So, tell me what really happened when you walked into that hospital room.\"\n\n\"I got your message. What's going on?\" Noah, the third of the three brothers ambled into the room and flopped into a chair. \n\n\"Gen found his curse breaker,\" Gideon announced. \n\n\"Yeah? Didn't think you were a believer,\" Noah chuckled, looking at Genesis.\n\n\"I'm not! I had a twinge,\" Genesis grumbled. \"I just want to help this one girl, okay? It's no different to what I did for any of the girls from that trafficking ring.\"\n\n\"You couldn't hand those girls over to immigration fast enough,\" Noah laughed. \"Can I take it you want to hand this girl over to someone? Have you called the police?\"\n\n\"The police are already involved as well as a macho, motorbike-riding priest, and the guy we think is the leader of the Suebi in this territory,\" Gideon explained and grinned at Noah, as his eyebrows continued to rise with each person named, making Genesis groan. Gideon told Noah the story as he saw it, leaving out a few pertinent facts, but Genesis found that he couldn't deny any of the things Gideon had said.\n\n\"Alright. So tell me your version then, if she isn't your curse breaker,\" Noah asked the grumbling Genesis.\n\n\"She hasn't even looked at me nor will she talk to me. Gideon has lost his mind with all this curse bullshit,\" Genesis appealed to his younger brother. \"He just uses the curse as an excuse for not dating.\"\n\n\"Okay, so why am I here?\" Noah asked. \n\n\"I need your help,\" Genesis sighed as both brothers grinned widely at him. \"Fine, you're as bad as Papa. Call it a curse or a gift or whatever, but I need your help to help her.\"\n\n*****\n\n\"The prognosis isn't good,\" Vivienne Papillo said sadly. She came to the hospital to help the Vitali deal with all that had occurred at the Papillo airport and the seriousness of Theresa's condition. She was an expert on trauma-related psychosis, one of the best in her field, and when she had heard of the girl and her story, she had readily agreed to help. \"It's my opinion that she truly believes in her new identity and that Remington owned her body and soul. She is unwavering in that or her love for the man, which is why she is refusing to interact with anyone but the bodyguard he put in place himself. The only way that woman gets her to acknowledge anyone is to call her by the assumed name and tell her Remy wants her to speak to them. Even then, Serena will just shut down after a few words, as if she knows that he wouldn't have told her to answer whatever question was being posed.\"\n\nGenesis nodded. He had assumed as much from the few words that he had managed to overhear before she fell silent, as if at some unspoken command. It was as if there were trigger words that would just shut her down, and he had expressed as much to Vivienne when she had agreed to help in treating Serena. \n\n\"I will need to look into it a little further. I know of only a few cases where this much damage was done to a woman's personality. This isn't really my speciality area of trauma-related psychosis, but I am well aware of the research and able to advise you. I wish I knew what sort of medication they used on her. Perhaps in the roundup we might find the man who knew about her treatment? The one who confessed his sins might be forthcoming again?\" she asked.\n\n\"If the Tatar are as good as they appear to be, there's a possibility that they could find the chemist himself,\" said Genesis, who had already thought about this and trying to find a way to reverse the effects of the brainwashing. It appeared to be complete though. There didn't seem to be any trace of the girl who had once been Olivia Gambaro. Her sister was arriving tomorrow, and he hoped the familiarity of a close familial bond would help her. \n\n\"Hmm, I will have to follow that up. It's fascinating that the new identity has completely erased who she once was,\" Vivienne continued to muse over the problem.\n\n\"If I buy you lunch, will you tell me about these other cases?\" Genesis asked. \"I want to help this woman. I just need to find a way to reach her.\"\n\n\"I can tell you a little, but as I said, I would need to do some further investigation into how the girls have responded to the treatments we recommended in each case,\" Vivienne agreed reluctantly. She used 'we' in the broad sense because, while she knew of the cases, she hadn't been involved in any real work with them. \n\n\"There were treatments though, so that is a good sign,\" he smiled and, leaving his brother watching over the girl who slept once again, he guided Vivienne from the hospital to a nearby restaurant. The pair remained quiet during the short walk, both deep in their own thoughts about how to treat Serena.\n\nGenesis was relentless in his questions and was quick to pick up on what was left unspoken. They spent a long time over lunch discussing the few cases of extreme brainwashing that Vivienne claimed to have researched, if not consulted on, though she never qualified that specifically.\n\n\"I don't see how you could use any of those treatments, seeing as the man who bound her to him is lying in a coma,\" Vivienne finally shrugged helplessly. \"Even if you were willing to take on such an arduous task, honestly, you don't seem ruthless enough to carry through with what would be needed. That's only if you could find a way around the issue of consent for a change of ownership, even temporarily.\"\n\n\"Ruthless?' he frowned at the woman.\n\n\"These men created the perfect woman in their eyes. They cut away their strengths like you would sever a decaying limb from a tree. They find and exploit all of their weaknesses and strip them bare of any self-worth that might make them rebel against what is happening to them. All their insecurities, their loneliness, their failures in careers and with the people they cared for, all are used against them. From the sound of it, this girl had hit rock bottom on her own when Remington took her, and she was easily exploited and broken down further until she was totally reliant on him for everything in her life, every decision, every thought.\" She tried desperately to explain better how deeply Serena was damaged and what would be needed.\n\n\"What would have happened if he was busy or detained? He didn't have her with him twenty-four hours a day. The bodyguard we took into custody said she worked at a restaurant while Remington went to his offices each day. He kept her separate from his business dealings and subterfuge apparently,\" Genesis said.\n\n\"If that's true then he would have put people in place to watch over her, the bodyguard perhaps, but she would have had limited power. Maybe, if he had a second, they might be able to broker a change of ownership, or even someone she saw as her boss at her job might have the power to do it,\" she said thoughtfully. \"But it would have to be done in front of the comatose man for her to understand that Remington was not going to come for her anytime soon and that this was a necessary process she had to accept. It would depend on how much control the second or boss was allowed over her when Remington left her with them. They may have to tell her that when and if Remington recovered he would come for her, which opens up a whole other can of worms for you to navigate,\" she sighed.",
        "\"Like what? He had a second. This could be a possible solution, but I need to know it all,\" Genesis said as if calculating the outcomes.\n\n\"Genesis, this is not something you can take on lightly. You would need to do everything for her. Choose her diet, her clothes, manage every minute detail of her life. Are you prepared for that?\" she asked. \n\n\"It would only be that way in the beginning. Once she started to trust me, I could start releasing some of that hold and give her a little autonomy-baby steps,\" he said, showing that he had been listening.\n\n\"The beginning could last a very long time and that is only in the best-case scenario, if this second had enough power to broker a complete change of ownership. If there is a hint that Remington will come for her when he is recovered, then you will need to do things his way, or close enough to his way so that she is comfortable under your influence. That could easily double the time and effort required to help her.\" Once again, she sighed.\n\n\"What if she thought him dead? Would the deal still need to brokered?\" he asked.\n\n\"Yes, or she will feel immense guilt for living without him, and she might even become suicidal, such is the bond she feels at present,\" Vivienne warned.\n\n\"Then the second is our best shot at this,\" he said whilst he scratched his cheek, wishing he had taken the time to shave that morning.\n\n\"Are you truly so ruthless? Could you become the sadistic Master she craves? You saw the medical reports detailing the marks, bruises and damage to her body. The information from the bodyguard is that they were totally monogamous, and she begged for every single mark on her body, including the engagement ring that was pierced through her nipple rather than placed on her finger. She will expect the same treatment from any man strong enough to take her from Remington and claim ownership, even if only temporarily. She is broken, Genesis, and she may not ever completely heal.\" Vivienne was trying to make him see what an impossible task he faced if he took on this challenge.\n\n\"So, what's the alternative, just leave her as she is?\" he exploded, incredulously.\n\n\"No, I wasn't saying that, but the Papillo have facilities where she would be kept safe and comfortable,\" she said, gently giving him one of the other options. \"The Battaglia Masters may be ruthless enough to beat some self-awareness back into her.\"\n\n\"You can't be serious? The other options are to lock her away with lunatics or lock her away with the Battaglia Masters?\" he asked incredulously. \"How would either of those options help her to heal properly? She's not the criminal here! She's an innocent!\" The thought made him furious, and he was glad that his father and brothers were not here to witness his outburst as he took a cleansing breath to calm down.\n\n\"Okay, I will help you to do this if you can tell me why. Why are you so invested in this girl?\" she asked.\n\nWhat could he say? He promised Father Bob that he would save her? Admit that the moment he walked into her hospital room his heart stopped and that his body had a very real visceral reaction to her despite her injuries and generally-dishevelled state? That he believed in fate and that nothing was a true coincidence? That he had a hero complex, which was why he had the career path he did? He'd been at the height of his superhero powers when he had helped uncover the human trafficking operation and saved several women from a life of horror. How could he explain why he was so hell-bent on saving this one woman? He decided to be honest.\n\n\"Because I am a ruthless, sadistic bastard at heart, but instead of making her my perfect woman, I think she could be perfection all on her own, in her natural state,\" he said seriously, admitting his attraction to the woman. \"Besides, I love a challenge, and I imagine that this will be more than challenging for both of us if you decide to help me.\"\n\n\"I believe you are right,\" Vivienne laughed lightly, taken aback by his honesty and deciding to help him to help Serena.\n\n*****\n\nThe enthusiasm that Kairos showed to broker a change of ownership for the woman known as Serena Seabrook and give her back her birth name had puzzled Genesis until he saw the look on the man's face as they entered the hospital room where Remington Royce lay in a coma. He was in love with the man, albeit unrequited love. It seemed he wanted to be rid of her and any further damage she could do to the Suebi though Genesis was unsure if she could be used as a pawn by others or if Kairos still held hope he would be released from prison and able to take up the mantle of Suebi Chieftain in this territory. He was more inclined to believe he wanted her out of reach of any who may come after them and handing her back to the tables was possibly the only way to ensure that.\n\nAfter spending some time with the body and speaking with the specialists that Kairos had put in place himself when they had first brought Remy to the hospital, ensuring that everything possible had been done to save his life, he seemed to accept that the death of his friend was inevitable. Only after all of his questions had been answered did he approach Genesis and Vivienne and give his agreement to follow through with his end of the bargain.\n\n\"Kairos?\" Serena asked quietly as she saw him in the doorway where he had stopped to draw a steadying breath.\n\n\"Serena, are they treating you well?\" he asked formally as he approached the bed. He turned his head, glaring at the nurse until she left, claiming she needed to check the chart for doctor's notes. Genesis followed Kairos in and leaned against the wall watching the proceedings until he was called for.\n\n\"Yes and I've been a good girl. Where's Remy?\" she asked, her eyes desperately sliding to where Genesis leaned against the wall and sealing her lips shut again.\n\n\"Remy is here in the hospital. He is in a coma that he will not waken from,\" Kairos said with genuine grief and took Serena in his arms. \"Sweet girl, they have told you that he will die here, have they not?\" he asked, regaining some of his composure.\n\n\"Yes, but I didn't believe... Remy is so strong... I can't,\" she stuttered and stopped as tears rolled down her face. \"The machines... he is alive! They said the machines keep him alive.\"\n\n\"No, sweet girl. The man we knew is gone; that is just the shell,\" Kairos said, his voice choked with emotion. \"That is why I am here. There are things we must all do to honour his memory and keep you safe, just as Remy promised. The burden that Remy has given me is large now, and you need to trust me as you did him. I speak for him now, you understand?\" Kairos asked, making her look up into his face to see his resolve. \"He left instructions for your care, should he not be here to keep you safe. Instructions that I must carry out now. He loved his little slut and would never leave you alone and needy, not even when he died. He loved you and wanted you safe and protected, no matter what happened, sweet girl.\"\n\n\"Instructions?\" she asked, not understanding what he was saying.\n\n\"Remy went to a lot of trouble saving you and creating a new life for you with him so you would be safe. He made you the woman you are today, and he did not want the gifts he had given you tossed away easily. You were his greatest treasure, his most precious and prized possession.\" Kairos stroked her hair from her face. \"Remy discussed, at length, his wishes regarding your safety and care with me, as he did with everything. You know that he always relied on me to know his wishes and see them carried out.\"\n\n\"Yes, he trusted you above everyone,\" she agreed. \"He always told me to go to you if I ever got separated from him. He made me memorise your number, in case, but I have no phone here and they will not let me leave the room.\" She was babbling and talking fast, trying to apologise for not following Remy's commands and instructions, just as Kairos always did.\n\n\"He would not punish you for circumstances beyond his control, sweet girl,\" Kairos soothed her. \"Nor will I. That is no longer my task to perform. Remy chose this man,\" he indicated Genesis. \"He has been here checking your well-being, has he not? Keeping you safe?\" Kairos asked.\n\n\"He has,\" she nodded, once again sliding her glance to Genesis, who had been an almost permanent fixture in her room since she woke here earlier that morning. \"He knows about my life before Remy,\" she whispered softly, dropping her eyes in the admission that she remembered Olivia Gambaro's miserable life.\n\n\"Yes, he does. He also knows that you belonged to Remy, body and soul. He is part of the same circle of friends who go to Hermione's, although he has been absent for many months, so you may not remember him from there,\" Kairos lied easily. \"It is he that will now keep you safe from those who hunt you, and take care of your needs, little slut. He knows what you need and crave. Remy has given his greatest treasure, his most prized passion to this man, Genesis, to care for and treat as his own now. I could never give you what you need, but Genesis can and Remy knew that. It is what Remy wanted, and his last command to you is to treat this man as you treated him, with absolute loyalty and obedience. When you leave here, you will leave here with Genesis. Even more bad men hunt Serena now, just as they hunted Olivia, and he will keep you safe, sweet girl. Do you understand?\"\n\n\"Yes, but I don't want anyone else. I want Remy,\" she sobbed.\n\n\"That is not possible. You know this. Remy wanted his most precious possession to be treasured in the same way he treasured you. He did not want you drowning in guilt and sorrow. You belong to Genesis now, and you will obey him as you obeyed Remy. Remy would be disappointed to see you being so disobedient. He wanted this, and he will be happy knowing you are with this man. You will make him happy. Make Remy happy and make me happy, sweet girl.\"\n\nAs he watched the exchange carefully, looking for small clues to the keywords that he knew must be in place as part of the brainwashing, Genesis saw a few tell-tale moments but none as big as the final few phrases. Keeping her safe from bad men and making him and others she needed to obey happy seemed to be the crux of Remy's persuasive training, everything else spun from those phrases. He considered the phase, 'sweet girl'. It suited her and he would use it if he needed to, but it was not a phrase he liked to use. He gave them a few more minutes before signalling Vivienne to interrupt the show. \n\n\"I'm afraid that your visitors will have to leave while we have another chat. If you wish to leave the hospital anytime soon you must talk to me,\" Vivienne said in a serious voice, as if she had struggled to get the girl to talk for Kairos's benefit. \n\n\"Talk to the doctors, little girl,\" Kairos said in a chastising voice as he disengaged her arms from his. \"I will not return to you, and if you are a good girl for Genesis, he may let you see Remy before the machines are taken away. Remy will not wake up again. He will die here in this place. You have a different future now, and you need to be brave and to do as Remy instructed and make him happy one last time. Tell the doctors all they want to know. Genesis will protect you and keep you safe now. You can trust him, little girl.\" Kairos kissed her forehead and stood, walking slowly from the room without saying the word 'goodbye' and held his hands out to the federal agents to cuff him, looking desolate.\n\n\"Talk to the doctor, Serena, or would you prefer to be called Olivia now?\" Genesis asked softly, taking her hand. He saw her confused eyes, and he squeezed her hand. \"While we are here the choice is yours. The doctors have been told your real name, but you can continue to be called Serena for now. When we leave the hospital, we can discuss what will make me happy and my expectations for keeping you safe and caring for you as Remy did.\" He considered how Kairos had commanded her rather than inform her before he left and added. \"You will do as I ask now, little one.\"\n\n\"Yes, Genesis,\" she said quietly and turned toward Vivienne. \"I would prefer to be called Serena until I leave the hospital, please.\"\n\n\"Of course, Serena. Will you answer a few questions for me today?\" Vivienne asked gently and watched, as the girl turned to look at Genesis, who nodded his head almost imperceptibly.\n\n\"Talk to the doctor, little one,\" he commanded and squeezed her hand slightly. \"I am sure that we would both like to be free of this hospital sooner rather than later.\" He knew it might still be days that she would have to remain under medical supervision with her injuries. He would move her to a private facility closer to his home once her sister had arrived and approved his care of her and acknowledged the power-of-attorney he had Noah create for Serena to sign for him and her sister to witness.\n\n\"Yes, Genesis,\" Serena said softly, looking back at the doctor but sounding confused and unsure of herself. He had an idea of the keywords and commands now, and that was a boon. He also believed he had a few other ideas and would try them out later this afternoon or tonight when he had some alone time with her. \n\n\"Can you tell me why you are refusing to eat?\" she asked, making Genesis raise an eyebrow. He hadn't realised that this was still an issue. The bodyguard had managed to get her to take a few mouthfuls at breakfast. \"If you don't start eating properly today, the doctors will order a feeding tube for you. Do you understand that?\" she asked the second question as Serena hung her head and played with her fingernails as she always did when trying to ignore someone talking to her.\n\nHe was grateful for Vivienne's help, but due to her expertise, she had put herself in a position above Genesis in the care of Serena, as if he was the one assisting her. He had asked for her assistance, it was true, but he was not about to hand over the decision-making for her treatment to anyone. Ordering a feeding tube was not on any of the doctor's agendas, as far as he knew, and he doubted that any of them would lift a finger now without talking to him first. Vivienne would learn quickly that if she thought she could just take charge of treating his girl then she was sadly mistaken, and her consultation on the case would cease.\n\n\"Answer the doctor, little one,\" Genesis said sternly, making her lift her head and look at him.\n\n\"It's not the right food. They don't understand. I can't eat it,\" she blurted, almost as if it was painful for her to admit, and fidgeted even more as if her fingers and nails fascinated her. \n\n\"I'd like to understand, Serena. Can you tell me what the right food is?\" Vivienne asked patiently. \n\n\"I don't know. Aunty Bea always gave me what I needed unless we were out and then Remy chose the things that wouldn't hurt me,\" she said, helplessly. \n\n\"That is my responsibility now. I will bring you some food, and you will eat it. I will be very unhappy if you damage my prized possession any further. When I told Remy that I would care for you as he did I did not expect to be receiving damaged goods in need of repair,\" Genesis said sternly. and withdrew his hand from her, making her gasp. \"He would not be pleased by this at all and neither am I,\" he snapped at her, his dark eyes boring into hers.\n\n\"I'm sorry.\" She turned her sea green eyes on him. \"I'm so sorry. I will eat what you tell me to,\" she said desperately, a shudder running through her. \"Please, I will be a good girl, I promise.\" She looked down at the hand he had withdrawn from her as if willing it to return to where it had rested on her leg. Genesis wondered if the simple act of denying her his touch was how Remy had punished her because she admitted that she enjoyed and even begged for the harsher punishments and use, so obvious on her bruised and battered body.\n\n\"Tell the doctor what she wants to know.\" Genesis practically barked at her, showing his displeasure. \"I now have to go and find you something decent to eat because you can't be trusted to look after the treasure Remy gifted to me,\" he said unhappily and shook his head. \"I will be keeping track of these offences while you are healing,\" he informed her and stalked from the room. \n\nGenesis stood just out of sight beyond the door, listening to the conversation for a few minutes while he texted Gideon, asking him to pick up soup and bread from one of their favourite restaurants and deliver it to the hospital. He reasoned that she probably hadn't eaten properly since she arrived. He then went to the nurse's station and asked about anything she could snack on, preferably a piece of fruit.\n\nTaking an apple along with a plate and paring knife from the small kitchenette in the ward, he returned to the room, to find Vivienne once again trying to rephrase her questions to get a reasonable response from the girl. He perched on the bed and began to peel and core the apple as one might for a child. He didn't have to fake his anger. That a man could make a woman he claimed to love this helpless, this dependant on him for her mere survival, infuriated him. He handed her a piece of the apple and frowned at her until she took a bite and began to chew. Then he nodded and turned to Vivienne. \n\n\"Did she tell you what you needed to know?\" he asked, brusquely.\n\n\"I believe she is trying to find the right words,\" Vivienne said protectively, and gave Serena a soft smile, trying to gain her friendship by not telling Genesis that she had stopped talking when he left the room. She sat back, watching Genesis hand Serena the apple one piece at a time, making sure that she ate it all before finally removing the frown of disappointment from his face. He might be up to the task of helping this girl after all, she conceded, but she still had her doubts and considered taking the girl back to the hospital where she had her offices to help her as she did the research on this type of personality disorder. \n\nOf the few cases she knew of and had followed up on in the last day not one had given her much hope for successful treatment of such extreme personality erasure. One girl had successfully transferred her feelings to another dominant and had made some steps toward independent thought, while another one had not coped at all and was institutionalised to receive intensive therapy after several suicide attempts. A third had remained in the same dependant state, serving a new master, believing that the man who had damaged her psyche would come back to claim her one day. None of these three girls had had their minds altered with drugs. Only the abuse of cruel and sadistic men over several years had done the extreme damage. \n\nSerena had only been with Remy for six months, but the introduction of some sort of super mind-altering drug during the initial stages of her training seemed to have had extreme effects on the girl. This made Vivienne concerned that she may not ever be able to recover or accept a new Master fully, not without the same drug to enhance her pliability. Still, Genesis was playing the part, and the girl was responding. It was more than she had thought would happen this morning before the charade with Kairos. \n\n*****\n\n\"Whoa! Well, hello gorgeous!\" Gideon said cheerily, walking into the hospital room and being confronted by Vivienne Papillo sitting with Genesis and the woman in the bed. \n\n\"Ignore my brother, Vivienne, he doesn't get out much,\" Genesis groaned and rolled his eyes at Gideon as he stood to take the food from him. \"Gideon, try to think before you open your mouth again. Vivienne is a doctor not a barmaid.\"\n\n\"True, but after spending time with you, I think she needs to know that we Zenati men aren't all uptight bastards,\" he said and shrugged. He then turned his attention to the woman in the bed and got his first sight of Olivia Gambaro. He could understand his brother's attraction now. She was exactly his type. A lost lamb in need of saving was a good description, with her anxious expression. She looked small and fragile with fine elfin features like a pixie. He grinned as he settled on a nickname for her. ",
        "\"It's nice to meet you, Gideon,\" Vivienne said, recovering from her initial shock after the tall, cheerful man entered the room.\n\n\"Trust me when I say it's more than nice to meet you. Gen is right you know. I don't get out often enough,\" he said, sadly. \"You could take pity on me and come to dinner with me tonight and save me from yet another microwave mess,\" he invited. \n\n\"That would be nice, thank you. I could use an excuse to get away from the hospital and my research,\" Vivienne accepted, surprising both brothers.\n\n\"Great! Hear that Gen? I have a date!\" Gideon said proudly. \n\n\"A pity date,\" Genesis chuckled. \n\n\"It still counts,\" he said, not concerned at all by his brother's teasing. \"We can't all be lucky enough to be given little pixies to look after.\" He winked at the girl in the bed. \"You're a lucky girl, Pixie. Genesis is very fussy about who he takes into his home. I hope you understand how fortunate you are,\" he said to her seriously. He knew exactly what his brother was doing with the girl and the challenges that faced them both. Gideon worried for Genesis. He wouldn't handle a failure in this challenge well. Gideon wanted to talk to Vivienne about her take on the situation, so he was more than pleased that she had accepted his offer of dinner.\n\n\"I do,\" Serena whispered after a quick look at Genesis, who glared at her until she responded. She wasn't used to being addressed by the people who came to see Remy, and the fact that the first of Genesis inner circle she had met spoke to her directly had startled her. She wanted Remy back desperately. She knew what to do, what to say, what to eat, how to look for Remy. She knew nothing about the man to whom she had been given, except that he didn't like her being rude and ignoring people when they spoke to her. She fought back the sting of tears as she thought about Remy, who would never have let her eat bread with her soup. She felt like she was betraying him by eating the small piece of bread that Genesis had torn off the roll and fed to her after dipping it into the hot soup.\n\n\"Eat, little one, before it goes cold,\" Genesis commanded, handing her the spoon.\n\n\"She hasn't eaten properly for a few days, Genesis. Perhaps just the soup to start with,\" Vivienne suggested, seeing the girl look at the bread roll like it was a horrific giant spider.\n\n\"You're the doctor, but she belongs to me now,\" he said meaningfully, giving Vivienne a quick glance. How was he supposed to be the ruthless Master that this girl needed if Vivienne kept telling him what to do in front of the girl? It was the last straw for him, and the familiar anger he experienced each time he hit a wall with this girl surfaced. \"Eat, little one, so we can leave this place sooner rather than later, and not have to put up with doctors telling us what to do when they clearly don't understand that I am here to care for you and keep you safe,\" he said, exaggerating his displeasure with Vivienne.\n\n\"Not a good move, Viv,\" Gideon murmured, as he drew her closer to the door. \"Don't leave your pixie girl. I'll take care of this,\" Gideon said, using an unimpressed tone as he spoke louder to Genesis. Then drew an indignant Vivienne from the room. \"I thought you were supposed to be helping him, not eroding his authority over the girl,\" he hissed. \"How is she supposed to bond to him if he is not the all-powerful figure Remy was? I guarantee you that no one ever told Remy what he could or could not feed her.\"\n\n\"She was terrified of that bread roll!\" Vivienne hissed back. \n\n\"You don't think he knew that? Why do you think he tore such a little piece from it and fed it to her? He's not an idiot, and by interfering you just told her that you don't trust him to look after her properly. He specifically asked me to bring bread because that is always one of the first things to go from an athlete's diet when they are in training, and this girl has been in endurance training for months now. He was testing how far he could push her with this first meal, and you took that away from him because you obviously don't understand the type of relationship he has to build with her. You see the trauma and the damage from abuses in this type of relationship when they go wrong, but do you honestly understand the reality of the relationship itself?\"\n\n\"Of course, I do! This is my area of expertise!\" she said indignantly, exaggerating the truth.\n\n\"Then act like it. In that room Genesis is the king, and his word is law. You get no say in what he asks her to do, understand?\" Gideon said in frustration. \"Start acting like you actually want to help this girl instead of treating her like a case study for your next book.\"\n\n\"That's unfair!\" Vivienne said. \n\n\"Is it?\" He asked as he regained his calm demeanour and looked at her as if daring her to deny what she had just done. \"Look, Gen thinks highly of you. It's just a shame you don't think as highly of him. Trust me though, he's committed to this, and I have no doubt that he can help her. We can discuss it properly over dinner. What time will I pick you up?\" he said as if he hadn't just chewed her out for being a know-it-all bitch.\n\n\"You still want to have dinner with me?\" she asked, startled by the question.\n\n\"Sure. You made a mistake; I corrected it. You'll think before criticising Gen's judgement in front of the pixie next time. So, dinner? Or would you rather not now?\" giving her the option of going home to lick her wounds. He doubted that many people had the balls to tell her when she did something stupid.\n\n\"Dinner,\" she agreed. \"I will dress up, and you will take me somewhere nice and...\" She gave him a steady look. \"We. Will. Discuss this further. I need to go and check on the Vitali leaders. Tell Genesis I will see him in the morning,\" and with that, she walked off.\n\n\"Um, Viv, I don't know where you're staying or what time you would like me to pick you up,\" he called after her.\n\n\"The DoubleTree by Hilton. Six,\" she called back without bothering to turn around. She kept walking, her back stiff with indignation, making him laugh.\n\n\"She is fascinating,\" he chuckled to himself and walked back into the hospital room to check on his brother and his latest impossible challenge. He hoped it was the curse this time because he had to stop taking on these strays and broken birds that he kept finding or he was going to go crazy himself. The doctor had obviously pissed his brother off, and he wondered if it was just about the bread or if something else had happened before he arrived. He'd find out all about the good doctor over dinner. He wondered if he could convince her to make a house call, he chuckled, making Genesis look up at him.\n\n\"She's fascinating,\" he said out loud. \"She needs to be taught a little lesson in respect, but I don't see that being much of a hardship for either of us.\" He let out a genuine laugh. \n\n\"She took the scolding well, I take it?\" Genesis asked. \n\n\"As she will the punishment tonight after dinner,\" he grinned. \"I pointed out that your little pixie would understand who she needed to listen to and obey, so her suggestions as to her care were not necessary. You do understand that, don't you, pixie?\" Gideon turned his dark-eyed gaze on Serena and held her eyes until she nodded silently.\n\n\"Gideon will help me keep you safe just as Kairos helped Remy,\" Genesis explained, putting his brother's words into perspective for her. \"I have several brothers and cousins who act like brothers, and I trust them all implicitly. You will do the same and show them respect at all times,\" he instructed her in a stern voice. \"That includes answering when they speak to you and ask you a question.\n\n\"I wasn't allowed to speak to Remy's friends and business partners,\" she said softly. \"I don't know how. I am not like those other girls at Hermione's,\" she continued, her voice was barely above a whisper. \"I was his. Only his.\"\n\n\"This is why you won't talk to the doctors properly?\" Genesis demanded.\n\n\"When I hurt or am too tired my mind gets muddled, and I forget the rules. You won't tell him, will you?\" she asked in a panic. \n\n\"But you talked to Kairos, and you had a job in a restaurant, I understand, where you regularly spoke to customers,\" he frowned at her, not understanding the distinction.\n\n\"My work and home were fine to use my voice, never beyond that and never for idle chatter about a girl who is gone. Olivia and her boat are gone, gone for good,\" she said sadly. \"There is no point to the questions about her. I am not that girl. I can't be that awful girl any more. I am Serena Seabrook, and Remy loves me,\" she said proudly.\n\n\"I see,\" Genesis said coldly, anger and frustration in his eyes, not at the girl before him but at the man who did this to her. \"Yet you talk to me now, so you know Remy will not wake up. He will not come for you, and I will not tell him of your misdeeds because he cannot hear me.\" He was brutal with the truth. When she stared at him blankly, he prompted her again. \"You know that Remy will not come for you, that you belong to me now and that there will be new rules. Ones that suit me, not a dead man.\" It wasn't a question.\n\n\"Dead?\" Serena gasped and her eyes filled with tears. \"No, he is sleeping, and he won't wake up, but he is alive,\" she argued. \"Kairos said that if I was good then you would take me to see him and that you would look after me because he can't give me what I need right now.\"\n\n\"What does that mean? What do you need that he can't give you?\" Genesis frowned. \n\n\"He can't touch me, or take away the ache, the constant ache I have.\" Her eyes flicked to Gideon and then back to Genesis. \"Is he invisible, like Kairos was at home?\" she flicked her eyes to Gideon again. \n\n\"Yes, pretend he is not there,\" Genesis nodded. \"Tell me about your ache.\"\n\n\"Remy understood. He knew what I needed. He would have made sure that I had time alone, even in here, to take the ache away, even if he couldn't do it himself. The doctors don't understand why I ache, but Remy knew, and he must have told you.\" She placed a hand low on her pelvis as she spoke.\n\nGenesis tried not to show his surprise and frowned at his brother's snort as Gideon tried to hold in his laughter. Thinking quickly, he spoke in the same stern tone that he had been using with her since having to command her to eat whatever he provided.\n\n\"You have a serious injury to your side, and while no major organs were harmed, there is damage to the muscles around the wound. Touching yourself is completely forbidden until I have spoken with your doctors,\" he said, again seeing a hint of panic in her eyes. \"Do you need help to follow that instruction?\" he asked in a slightly gentler voice. \"I do not want what belongs to me damaged any further,\" he reminded her.\"\n\nShe seemed to consider him, and her eyes flicked warily to Gideon again.\n\n\"Ignore him for now, as if he isn't there,\" Genesis instructed and gained her full attention.\n\n\"He works for you?\" she asked.\n\n\"No.\" He let a small smile soften his features. \"He is my brother. I told you this.\"\n\n\"Then he can't be invisible; that would be rude,\" Serena said, her eyes wide.\n\n\"Gideon, give us a few minutes,\" Genesis said, pressing his fingers to his temple as if he had a headache.\n\n\"I'll check on the possibility of taking her to see the body of Remington Royce,\" Gideon nodded and turned to the door.\n\n\"See if you can find Helena too. I want to ask about her wound and muscle damage\" Genesis said and became thoughtful.\n\nHis talk with Kairos had been enlightening about a range of issues, including the side effects of her prolonged use of the experimental medication. Kairos seemed more than eager for the girl's bond with Remington Royce to be broken and have the girl out of reach of anyone who may try to assume Remington's place within the Suebi. True, he probably didn't realise that there would be no aid from the other Suebi alliances yet, and he possibly sought the top job himself and... and what? Would Serena be in his way? Had Remington given her some position of power by almost marrying her? Certainly, the Suebi did not have the gender bias that the Tables had, but Serena couldn't even speak to the medical staff to feed herself. It wasn't like she would be able to take over where Remington left off.\n\nHe considered the possibility as he sat quietly, looking at Serena who seemed unperturbed by his silence. She was desirable and, in her current state, highly prone to manipulation. Her relationship with Remington could make her a valuable bargaining chip should someone want to challenge Kairos for leadership. Kairos obviously had no desire for her at all. He pulled his phone from his pocket, planning to call his cousin Dominic to find out when the arrested men would be moved. He would like another opportunity to talk to Kairos, and possibly even the man called Jay. He paused and drew a breath. This was the first time that he had been completely alone with Serena, and he needed to talk to her not be on his phone again.\n\n\"Tell me about this ache,\" he said. \"What causes it and how you ease it?\"\n\n\"Only Remy can ease it,\" she said. \"He knows what I need, how my body craves it.\" \n\n\"I see,\" Genesis said and stood up to lock the door. \"You no longer belong to Remy; you belong to me now. It is now my responsibility to give you what you need and what your body craves. So, answer my question properly,\" he commanded, moving back toward the bed and standing over her, looking down intimidatingly. It was as if she wasn't connecting all the dots in her change of ownership, but she was talking to him now and that was more than he had yesterday or even this morning. Serena had gone quiet, and cursing himself, he realised that her compliance with the food had made him relax his speech and forget the keywords. Vivienne's interference had possibly further harmed that bond he had been building. \n\n\"I will keep you safe, sweet girl. It is me that will protect you and keep you safe and love you now. I will not let the bad men near you. You will stop questioning that you belong to me now, little one. Remy is gone, he will not be coming back for you.\" He reached down and stroked her cheek softly, moving his hand down to her neck and around to the back of her head. Gripping her hair in his fist, he yanked her head back and made her look at him and asked again, \"Now, tell me about this ache, what causes it and how you ease it?\"\n\n\"I need to touch, to umm... cum,\" she whimpered. \"I want to touch myself. I'm not allowed, but I ache so bad,\" She was breathless with the small amount of pain he gave her just by gripping her hair. He could see her hands smooth over her thighs as if considering if the crime was worth the punishment.\n\n\"How long has it been since you were allowed to cum, little slut?\" he asked, tightening his grip and noting her reaction. It was almost as if he could feel the tremor that ran through her at his use of the words he had heard Kairos use with her. \n\n\"The morning before I got married,\" she answered quickly.\n\n\"You are not married,\" he growled, twisting his hand in her hair to make his point. \"And this,\" he placed his hand over her breast that held the ring she had so far refused to give up, \"Will be removed tonight. You are mine now. You will wear what I deem appropriate. Remy is gone, little slut.\" He pressed his face closer to her and growled, \"It is time to start making me happy!\"\n\n\"Yes, Genesis,\" she whispered breathlessly. \n\nGenesis held her like that for a few moments, wondering if he had imagined the slight hint of a smile that touched her lips before he bent his head and took those lips in a hard kiss, his hand not leaving her breast as he held her in place. He let her go abruptly and watched as she fell back onto her pillows, not taking her eyes from him. This was going to be difficult. She tugged at him in ways he had never experienced before. She was a fragile beauty on the surface but obviously had great willpower and strength for the things in this relationship that required it.\n\n\"I will talk with the doctors about your injuries and the effects of easing your ache on your healing. You will not touch yourself. If you are tempted, there are ways I can help you. You only have to ask, little one, because keeping you safe and healthy is my priority now,\" he instructed, his voice sounding hard as he tried to marshal his own aching groin at the thought of taking her and making her his physically as well as mentally. He took a deep cleansing breath and unlocked the door before using her buzzer to call a nurse.\n\n\"Are you in pain?\" One of the nurses specially selected for this room because of their connections to the family asked as she came bustling in looking rushed and harried.\n\n\"She has an ache and could use a relaxant. Is that possible?\" Genesis asked.\n\n\"Not without a doctor amending her chart. She has a mild sedative available to her at night to help with sleeping and pain medication available by pressing the button on her drip as she needs it,\" she answered with a brisk, professional tone after checking the chart at the end of the bed.\n\n\"I will speak with her doctors about it, thank you. For now, I need a sterile kit. I wish to remove the piercing so she can return the ring to the man who gave it to her before he leaves this world,\" he said in a commanding tone.\n\n\"I can remove it for you, sweetie,\" the nurse touched Serena's leg. and frowned when the girl flinched. \"I was led to believe that she was doing better today and even ate something,\" she turned to Genesis for confirmation.\n\n\"She will allow me to touch her and feed her, so I will need that kit and a dressing. Find the doctor as well; I would like him to give her a proper examination while I am here, since she has been so unresponsive to the hospital staff,\" Genesis issued orders, letting the nurse know in no uncertain terms now who was in charge of Serena's care. \"Also, if you see my brother Gideon send him in.\" He dismissed the woman, turning back to the bed and Serena, who looked at him with a strange expression. Genesis pulled his phone from his pocket again and growled, remembering the rules on the use of phones in public hospitals, before putting it away again. \n\n*****\n\nSerena watched Genesis, wondering why Remy would have given her to him. She knew he would wake up. He was the strongest man she knew, and he wouldn't leave her. He had promised to look after her for always. They were going to be married so that she would legally belong to him alone. He didn't want to share her in any way with anyone else, not even talking to others, and she had trusted him to know what was best, not only for her but for them and their love for each other. How could he leave her and expect her to love, honour and obey a total stranger? Yet Kairos had told her it was true. Kairos would know. He knew all of Remy's secrets. Kairos said Remy wouldn't wake up ever again. She couldn't believe it though. He was stronger than they all realised and he would wake up. She knew he would.\n\nGenesis was handsome in a different way to Remy. Remy was fair-haired and blue-eyed, his skin pale and soft. This man was the polar opposite with dark hair and eyes. His tanned olive complexion made it seem somehow as if he radiated heat and warmth as he touched and spoke to her, rather than the ice-cold hardness and strength of Remy. \n\nIt wouldn't be hard to let Genesis take care of her body and its cravings, she admitted. God, she ached so badly. Maybe if she begged he would let her touch herself. It would better than nothing, and she was sure that his punishments could not be as harsh as Remy's had been. She had learned to enjoy them, it was true, for the painful pleasure they eventually brought her, but there were times when she wasn't sure that she could take all the punishment he gave her. Invariably he spoiled her after he pushed her that hard, but it would take days to recover, during which her body ached for him painfully, making her suffer all the more.",
        "Everything felt wrong for her now. It felt as if she was trapped in a nightmare. At least her stomach had stopped hurting now that she had eaten something. The easing of that discomfort had made her better able to deal with the ache as well as the man who forced her to speak when she knew Remy wouldn't like it. \n\n\"Hands,\" Genesis said in a warning tone, and Serena was surprised to find they had been moving over the top of her legs near the apex of her thighs. As if startled, she gasped and drew them up her body and rested them on her chest.\n\n\"May I talk?\" she asked, turning her head toward him.\n\n\"I wish you would, sweet girl,\" he sighed. \"I will not restrict your speech as long as you do not nag or prattle on endlessly about nothing. You will be respectful at all times to those you speak to, however,\" he instructed.\n\n\"I would like to keep the ring, please,\" she said softly, her hand covering her breast protectively.\n\n\"I heard that you gave the nurses quite a fight to keep it but that is not your decision now, little one. It is mine to make, as Remy decided to give it to you. Tell me why you want to keep it, and I will consider your reasons,\" he compromised. \"Be warned that I am not inclined to allow a girl who belongs to me to wear a ring that signifies her engagement to another man. Remy did not share you when you belonged to him. You can hardly expect me to share you with a ghost.\"\n\n\"A ghost?\" she asked, startled by the word.\n\n\"Yes, a ghost, a memory of the man you once loved but who will never be part of your life again,\" Genesis said, trying not to feel compassion for her growing understanding of the loss of Remington Royce. \"That is all that ring is now. If, on the other hand, you like it as a piece of jewellery to enhance your appeal to me, then I will replace it with a ring of my choosing rather than just remove it.\" It was the best compromise he could come up with on the spur of the moment.\n\n\"A ghost,\" Serena repeated in a whisper. \"No, he is sleeping, but he is alive.\"\n\n\"No, little one, his brain is dead. Once the machines are turned off he will die. Once a relative has made the decision to turn the machines off there will be no opportunity to give him back his ring and say goodbye. I need to remove that ring so that you can see him one last time tonight and say that final goodbye.\" He reached out to stroke her hair and cursed himself for his softness.\n\n\"Give it back to him,\" Serena repeated the words and tilted her head into his hand. She wanted so much to be touched, and she closed her eyes, wishing it could be Remy petting her hair. \"Say goodbye,\" she whispered. \n\n\"Do you remember what happened?\" Genesis asked curiously. \"Can you tell me how you got your injury.\"\n\n\"I was...\" Serena's voice cracked and her eyes misted. \"I was getting married. I said my vows, and then there was a fight or something at the back of the chapel, so I turned to look,\" she frowned and looked down at her side where the padding covered a deep gash where a bullet had torn along her side between her ribs and hip. \"Then Leila made me leave and brought me here.\"\n\n\"You were shot, little one. Remy couldn't keep you safe because he was shot as well, more than once. That is why I must care for you now and protect you. Remy didn't keep you or himself safe enough,\" Genesis said softly. \"This ring means nothing now, and we have to remove it and give it back to Remy. Do you understand, little one?\"\n\n\"Remy was shot?\" she gasped. \n\n\"Yes, several times,\" he confirmed. \"Once the ring is removed. I will take you to where he is lying in a coma. He is not asleep little one. He is dead, and only the machines keep him alive, until someone tells the doctors to turn them off. The police are searching for his brother.\"\n\n\"His brother was murdered too,\" she said sadly. \"On the dock near Olivia's boat. The bad men who are looking for Olivia Gambaro did it. Remy saved me and kept me safe from them. Did the bad men shoot him because of me?\" Serena asked woodenly. \"Is it my fault?\"\n\n\"No, this was not your fault.\" Genesis swore inwardly. That explained why they hadn't found the brother they were looking for. He would need to speak to Dominic to see if her story was true. There was nothing reported about a murder on the docks. He would have been assigned something like that by his editor. They needed to speak further to Kairos. He needed Dominic to stop the Federal Police from moving the man to another location. It might be something the Tatar could discover if given the right questions to ask. He was stopped from saying anything further by the nurse returning with the doctor and a sterile kit and dressing for him.\n\nSerena was dying inside. Guilt and grief filled her with such a sense of despair that she didn't resist the doctor's examination this time nor did she have to be restrained by the well-meaning nurses as the doctor probed her body when she knew no one should be touching her. She answered their questions robotically and held herself together as she silently endured the removal of her engagement ring. None of this was right. It was all wrong, and she hadn't been shot. She wasn't dying. Remy couldn't have been shot either. He was strong; he was smart. He wouldn't let anyone shoot him.\n\nGenesis asked the doctor a lot of questions, and Serena heard the doctor confirm that she had been grazed by a bullet meant for the man she was marrying or so the authorities had said. Genesis had constantly kept a hand on her during the examination. She had barely noticed it as she wallowed in her own despair and grief until his touch was gone. He removed his hand and moved away to talk to Gideon, who arrived as the examination was finishing. She felt a real sense of loss from the removal of his firm touch on her shoulder or leg. Her eyes followed him, and she watched him speak briefly with Gideon, who left as quickly as he had arrived.\n\n\"How are you feeling?\" Genesis asked in an unemotional voice when the doctor and nurse had left her room. Serena shook her head and couldn't find the words to answer him. She didn't know how she felt. \"You will answer me when I speak to you, little one,\" he said sternly and frowned, showing his displeasure. \"Are you in physical pain?\"\n\n\"A little,\" she shook her head again. \"From the examination,\" she clarified. \n\n\"I spoke to the doctor about your pain relief and adding a muscle relaxant for the ache you feel,\" he told her even though he knew she had been listening throughout his exchange with the doctor. \"You will also be given something stronger to help you sleep tonight. You will not argue about taking the medication,\" his voice lowered menacingly. \"There are already enough misdemeanours from your behaviour today to ensure that you are punished severely once you are well enough to endure it.\"\n\n\"I understand, Genesis,\" she said contritely lowering her head.\n\n\"There is one more thing we must do, but it can wait until your medication starts working,\" Genesis said in the same stern voice as the nurse bustled in again with her chart and made some notes. \"Rest for a while, little one, and let the medication start to work, then we will tend to the other tasks you must complete today.\"\n\nSerena nodded and relaxed back into the pillow as Genesis pulled a chair to the side of the bed and rested his hand on her thigh. She could feel herself relax into the silence of the room after so much activity. The hunger pains had subsided with the food he made her eat, and now the medication was working to dull the pain in her side and the ache low in her pelvis. She closed her eyes with a sigh, feeling calm and safe for the first time since coming to this place, and slipped into sleep. \n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "curse",
        "dominant/submissive",
        "recovery",
        "brainwashing",
        "dom/sub",
        "d/s",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-twelve-zenati-ch-01"
}