{
    "title": "Looking at the Sun",
    "pages": [
        "Acknowledgments\n\nThank you to all of you who have written me with feedback on my previous submissions. A big thank you each to Ripley and JumbledMind for being my capable counselors in this new endeavor. Their thoughtful contributions have certainly made everything about this story better.\n\nPreface\n\nI was about to start tinkering with the next part of Alex and Jess's story, but I kept getting pulled back to Sienna. I felt I owed this to her; she, whom I capriciously used as an admittedly clumsy device in the main Jess/Alex narrative. So here is Sienna's story. Caveat emptor: 1) The buildup is long; it may not be your cup of tea if you are looking for something more, er, expedient. 2) One of the main characters is butch.\n\n+++ The Past +++\n\nChapter 1: A Most Rare Vision (Freshman Year, September)\n\n\"Hey, what's your roommate like?\" Hannah asked. \n\nSienna shrugged, \"Non-controversial. Yours?\" \n\n\"Non-controversial,\" Hannah shrugged similarly, \"With limited motivation to engage in conversation.\" \n\n\"I don't feel like a college student,\" Sienna looked at the expanse of campus before them as they walked to the Athletic Center. It was the second day of orientation at Franklin-Adams College and the two Freshmen were headed to the Varsity Athletics Open House. They had been in high school together, and were glad to have each other at FAC as they navigated the sprawling campus in the middle of New York City. \n\n\"It's orientation, things don't start picking up until classes start... Soccer's in L-203...\" Hannah squinted at the notice board at the Sports Center entrance, \"Looks like you are in.... Mezz. What's 'Mezz'?\"\n\nSienna shrugged, \"I'll find it. Maybe.... over there?\" Her eyes followed a tall and lanky athlete wearing a varsity swimming jacket. \n\nHannah sniffed the air mockingly, \"Oh yes, the unmistakable trail of chlorine... follow your nose, Logan. I'll see you later.\" \n\nSienna strolled upstairs into the Mezz meeting room, where a handful of tables stood in haphazard formation. Ten or so upperclassman in varsity jackets sat with feigned insouciance at the front of the room. There was a podium to their right, and Sienna saw two members of the men's team leaning against it, chatting away. Both had a red \"C\" on their jackets. \n\nSienna spied a leaflet on the table and picked it up. \"FAC Men's and Women's Varsity Swimming,\" read the title, followed by, \"Co-Captains: David Sotir and Alex Mak.\" Really? Both captains are men? That's disappointing. \n\nSienna strolled up to the podium, indignation simmering over the lack of a female captain, \"I have a question for the two of you.\" \n\nThe taller of the two smiled, \"Freshman? I'm David. Captain of the men's team.\" \n\nSienna nodded as she shook his outstretched hand. \n\n\"Sienna Logan.\" She looked over at the other captain and her stomach lurched. Not a guy. Oh shit. So much for challenging misogyny.  \n\n\"And this is Alex... uh... Alexandra, captain for the women's team,\" David continued, gesturing to his co-captain. \n\n\"Hi,\" Alex held out her hand. \n\nSienna stared at Alex. Now that she was standing closer, she felt stupid for mistaking Alex for a guy. More than that though, was a feeling that there was something familiar about the women's captain. What was it? She felt herself blush with embarrassment as she shook hands with Alex. \n\nDavid raised his eyebrows, \"You okay?\"\n\nSienna felt herself nod vigorously. Sure I'm okay. I was one obnoxious comment away from putting my foot in it and embarrassing myself before the semester even started.\n\n\"You had a question, you said?\" David asked. \n\nSienna nodded again as she willed her brain come up with a believable question, \"Yes. Um, I'm interested in trying out for the team. Just wanted to get a sense of timing and all that.\" Oh man, that was lame.  \n\nDavid nodded, \"We'll cover that in a minute. Just waiting for Mel to get here. She's our coach.\" \n\nAlex flashed a reassuring smile. Sienna blushed, \"Okay, thanks,\" and quickly turned away. Luckily, the room was beginning to fill up, and Sienna slid into a seat at one of the tables. \n\nHer heart was pounding. There was something about Alex that was scratching at the edge of Sienna's brain. They'd never met before, that was certain. So what was it? \n\nAlex sat down when Mel walked in. David leaned over, \"I think we freaked out the freshman.\" \n\nAlex glanced at Sienna and whispered back, \"I think I freaked out the freshman. Bet she thought I was a guy.\" \n\nDavid barked out a short laugh, \"Maybe. Or maybe she likes you. She's hot.\" \n\nAlex fist-bumped Mel in greeting and turned back to David, \"Yeah, not my type though.\" \n\nMel rolled her eyes when she heard what Alex said, \"Is whatever you are talking about something I should be hearing?\" \n\n\"Nope,\" the two seniors said together.\n\nMel shook her head, \"Thought not. Let's get started then. Hello everyone...\" \n\nSienna sat through the meeting, half listening as Mel and the captains introduced the swimming program and gave information about try-outs. When they opened it up to questions, she was still trying to figure out where she could have seen Alex before; she was drawn to the tall, androgynous woman, but she didn't know why. Something was missing. \n\nSienna's head suddenly snapped up. Alex was talking. \n\n\"Uh, no, I didn't have any of these guys' US age group swimming experience when I first arrived. I went to high school in the UK and our swimming programme was quite different. Mel had to whip the metric system out of me. I'm surprised she's kept me around!\" The room laughed. Sienna's eyes widened.  Of course. Why not throw in an irresistible British accent. This must be a cruel joke. \n\n\"Seriously though,\" Alex continued, \"If you are willing to work hard, there'd be room for you. You might not get a lot of competition time, but there'd be room for you on the team.\" \n\nAnother hand went up and Mel fielded the next question. \n\nSienna couldn't stop herself from stealing glances at Alex. It felt like d\u00e9j\u00e0 vu. Everything she saw seemed to already have a home in her brain. The thatch of black hair that casually hung over Alex's eyes blended into a handsome fade on the sides and back. The broad shoulders. The provocatively masculine air. Am I attracted to her? What if I am? Sienna tried to calm her breathing. Okay. Maybe I am. Nothing wrong with it. It's not like I haven't dreamt about being with women... OH MY GOD... that dream...\n\nMel pointed towards the table by the door, \"Make sure you fill out the attendance sheets at the door, and we'll see you at try-outs. Thanks for coming, everyone.\" \n\nSienna's silent revelation left her completely discombobulated. She was one of the last ones out of the meeting room and walked downstairs in a daze. She found Hannah sitting on a bench by the lounge area, texting furiously with someone. \n\n\"Hey...\" Sienna muttered. \n\n\"Oh -- hey. How was it?\" Hannah smiled at the reply she received, before shutting off the screen, \"Mine was ok. The coach seemed nice. Try-outs at the end of the week.\" \n\nSienna nodded, \"Us too.\" \n\n\"Anyone you know? Sadie Dawson from Lexington High is here. Remember how awesome she was during States last year? She's definitely getting a spot.\" \n\nSienna shrugged, \"I didn't really pay attention--\" Some weird instinct tugged her eyes towards the staircase. Alex was about to walk down with Mel. \n\nHannah nodded, \"Yeah, ours was not the height of intellectual stimulation either.\" \n\nSienna had a sarcastic remark in mind, but it evaporated as her entire being focused on sensing when Alex would walk past. Five... four... three... two...  Sienna looked up. \n\n\"Hey, thanks for coming to the info session. See you at try-outs!\" Alex said as she strolled past. \n\nSienna nodded, \"I'm fine, thanks! Oh, um, I mean, yeah, sure. See you then.\" \n\nHannah observed the exchange. \"Who was that?\" Hannah followed Sienna's gaze. \n\nSienna felt her face heat up, \"Alex Mak. Captain... swim... women's...\" \n\nHannah noted the blush, \"... and the reason you can't form a complete sentence and was distracted during the orientation session?\" \n\nSienna stared at the floor. \n\nHannah's eyebrows leapt upwards, \"Wait... You are into women now?\" \n\nSienna stood up and started walking. \"Who knows? I mean, maybe? I don't know.\" Sienna knew that it had always been something she'd been open to. Hell, her mother's favorite story was about Sienna coming home from kindergarten one day saying that she and her best friend had plans to get married, just like Auntie Sarah and Auntie Ruth. \n\nHannah shook her head as she walked alongside her friend, \"Wow. I've never seen you get all tongue-tied like that before.\"\n\n\"I'm kinda going through what can only be described as a bizarre Freudian spectacle in my head right now, so cut me some slack, will ya?\" \n\nHannah chuckled, \"What, you think you've been repressing the gay thing?\" <br />\n\nSienna shook her head, \"No, I was thinking more about dreams being the manifestation of unspoken wishes. But sure, throw that in the mix. Why not?\" \n\n\"I honestly don't think you are the type to feel compelled to be closeted. Your parents will probably sign right up for PFLAG the moment you tell them. Wait, what dream?\" \n\nSienna stopped walking, \"Yeah. Okay. First, let me ask you this: did Alex look familiar to you?\"\n\nHannah shook her head, \"Why? Should she?\" \n\n\"Just humor me.\" \n\nHannah's fingers flew around her phone's screen, \"Ok, ok, look, here's the stuff from the student directory: Alexandra Mak. Senior. High School: The Halsey School, UK. I've never heard of it,\" she looked at Sienna blankly. \n\n\"Are you sure?\" \n\nHannah nodded emphatically, \"Positive... Alex's home town is listed as Hong Kong and New York, she's majoring in Business Studies... lives in Hoffman Hall. I wouldn't know her from a hole in the wall.\" \n\nSienna shook her head, \"I don't think I've ever seen her before either. I mean, I think I kind of have, but I haven't.\" \n\n\"You've lost me. Have you or not? And what does this have to do with Freud and dreams?\" \n\n\"Uh,\" Sienna came to a halt again, \"Um. It's hard to explain...\" \n\n\"Spill it, Logan,\" Hannah gestured with her head for Sienna to keep moving. \n\nSienna took a deep breath as she started walking again, \"Earlier this summer, I started to have this recurring dream. This is very weird....\" \n\nHannah looked completely confused, \"Okay... go on...\" \n\n\"There's this woman that keeps appearing in that dream. I think it's Alex.\" \n\n\"What do you mean 'you think'?\" \n\nSienna was now bright red. \"I don't really see her. I'm not really able to...\"\n\nHannah arched an eyebrow, \"Why not?\" \n\n\"Um...\" Sienna shifted uncomfortably, \"Because it's kinda dark, and she comes up behind me, and then she kind of just moves in front of me... but lower.\" The last word came out very quietly. \n\nHannah stared at her friend, trying to envision the movements described. She gasped, \"Are you saying that you've been having a dream about someone going down on you? And you think it's Alex?\" \n\nSienna felt her face heat up even more. She nodded, \"Yeah. The body type... the dark hair...\" \n\nHannah grinned slyly, \"And does she... do you... uh, is it a... I mean, does it end well?\" \n\nSienna buried her face in her hands and nodded. \n\nHannah shrieked with delight, \"Clearly, this means you have to send her flowers or something. You know, as a thank you.\" \n\nSienna looked through her fingers at Hannah, \"What? No! I don't even know what this is!\" \n\n\"How often do you have the dream?\" \n\nSienna shrugged, \"Not often. Most recent time was last week, before we left for New York.\" \n\n\"Maybe it's a guy?\" \n\nSienna shook her head again, \"It is definitely a woman. The first time I had the dream, it was like, 'huh, well this is unexpected' but then you know, things happened and it's kind of hard not to be on board after that...\" \n\nHannah giggled, \"Most people struggle with the coming out process, Sienna. You.. you can't just orgasm your way into it.\" \n\nSienna blushed, \"I know! Actually, I haven't really thought it through before now. Logically, the fact that I have this recurring dream means I'm probably not one hundred percent straight. Which, by the way, I never thought I was. Maybe Sigmund is right and it's just my sub-conscious nudging me along.\" \n\n\"Wait, if you can't see this person, how do you know it's a woman?\" \n\n\"Boobage. Not big, but suffice it to say, the lack of clothing makes them apparent.\" \n\n\"Look harder next time,\" giggled Hannah, \"Or at least, try and look harder next time... when your fantasy woman shows up to provide some cunning linguistics.\" \n\nChapter 2: No More Yielding But a Dream (Sophomore Year, May)\n\n\"Hey you,\" a low voice said into her ear. \n\nSienna smiled as she felt a warm body slide into bed behind her. She reached back and touched a forearm, which she immediately pulled around her stomach. Soft lips began nibbling on her earlobe. \n\n\"Hmmmmm...\" Sienna sighed. Wait. \n\nOh shit, it's the dream again. Ok. Let's get a look at you... Fuck. Why is it always so dark when this happens? \n\nSienna tried to move, but couldn't. The mystery woman had commenced the now familiar ministrations of pleasure, her lips gently kissing Sienna's neck. Her hands moved under Sienna's shirt, and then, after a moment of delicious anticipation, Sienna felt them on her breasts. \"Ohhhhhhhhhh.....\" \n\nIf I know I'm in a dream, I should be able to control it, right? How the hell do you lucid dream? Oh god, that feels so good.... \n\nSienna felt warm breaths trailing warm lips as the woman kissed a delicious path down her torso. Dark brown hair shielded the woman's face from view. Sienna noticed two orbs emitting a soft blue light far off in the distance. Huh, that's new...  \"OH!\" \n\nA warm, smooth tongue made contact with her sex. She smiled and opened her legs. \"Oh yes,\" she sighed, \"Oh yes.\" \n\nI know this is not real... but it feels so good... \n\nSienna's clit was being caressed with exquisite attention. \"Oh, right there... right there...\" <br />\n\nGrowing pulses of pleasure were rippling up and down Sienna's body. She felt a familiar tightening as the muscles in her body flexed, every sinew welcoming a glorious orgasm that crackled and coursed through every nerve with delight. \"Kiss me,\" mumbled Sienna. \n\nShe felt her lover's body move upwards. She tried to open her eyes, but couldn't. Those soft, soft lips touched hers. Just lightly as first, but then with more insistence; yielding but strong. Sienna opened her mouth, kissing back earnestly. Good kisser. Amazingly good kisser... even though this is all in my head....  \n\nMoments later, Sienna opened her eyes, stretching her body contentedly. \n\n\"Alone again,\" she sighed, \"Who are you??!!\" \n\nThe kiss lingered in Sienna's mind the rest of that week. Not only because it was new, but because it had been so delicious. She wondered if such a kiss could happen outside of her imagination. She'd certainly enjoyed mind-blowing kisses before, but now she knew of something better. \n\n\"Hey... Hannah,\" Sienna nudged her friend. The two of them were studying in the library reading room, cramming for the next day's finals. \n\nHannah chewed on her pen, \"I am totally screwed if we get a question on Ampere's Law. I always overthink it and get it mixed up.\" \n\n\"Go over the midterm question on the coaxial cable,\" Sienna replied, \"It'll help.\" \n\nHannah made a face as she looked through her midterm exam. \"I got that question right. Huh. So why is it confusing now?\" \n\n\"Because you are panicking and your brain's stopped working. Which is good. Because I want to talk about something other than electro-magnetic fields for a sec.\" \n\n\"Ok, shoot,\" Hannah threw the midterm back onto the pile of papers on the table. \n\n\"I definitely maybe for sure, almost, think that it's definitely Alex I've been dreaming about. Had the dream again the other night. After I talked to Mel earlier that day.\" Sienna looked at Hannah meaningfully. \n\n\"You told your coach about your dream?\" Hannah looked shocked. \n\n\"No, I was telling Mel about Spring Break and what a disaster it was. But then she got an email from Alex while we were talking. I think it was a trigger for the dream.\" \n\nHannah lifted an eyebrow, \"Oh man, I thought you were over Alex. Is this why you're breaking up with Sydney?\" \n\n\"'Broke up.' She came over last night and we talked. Hannah, it was never going to work. I mean, we had fun and all that, but we are fundamentally incompatible: our lives don't mesh! She works the late shift for the student union four nights a week. I have morning practices 5am five days a week. I'm gone most weekends for meets. I'm pre-med and on West campus. She's theater studies and downtown. It's a miracle we actually even met.\" \n\n\"And now you are running straight back to the Alex-is-the-woman-in-your-dreams theory,\" Hannah stretched, \"And you were doing so well without it, Sienna!\" \n\n\"There was something new in the last dream. We kissed. So now I kind of feel like there's something I can use to compare in real life. You know, without...\" <br />\n\n\"Without having to make an indecent proposal?\" \n\n\"Exactly! And according to Mel's email, Alex is in New York....\" \n\n\"Your grand plan is what? 'Hey Alex, give me a kiss so I can see if it measures up to the one that is actually a figment of my imagination'?\" \n\n\"When you put it that way, it sounds ludicrous. Forget I said anything...\" \n\nHannah shook her head, \"Give me Ampere's Law any day. At least it's grounded in fact.\" \n\nChapter 3: Though She be but Little, She is Fierce (Junior Year, September)\n\nSienna leaned back happily into her beach chair, loving the sound of the ocean in her ears and the feel of the warm sun on her skin. It was Labor Day Weekend, and Sienna was looking forward to three days at the beach before the official start of classes. \n\nHannah had invited Sienna and Amy, a mutual friend from FAC, to stay at her family's house on the Cape. The guest list grew when Amy's boyfriend Steve wanted to join and brought along his friend Pete -- ostensibly to use Pete's car, but truthfully it was because he didn't want to be the only guy. Pete was on the swim team with Sienna, and Steve was in Hannah's Chemistry Lab so the five of them all got along well, which was fortunate as it was a cramped ride in Pete's car as they drove up to Massachusetts. \n\nJust as she was about to drift off to sleep, her phone started ringing. \"Hey Hannah, what's up?\" \n\n\"We are headed into the village. Amy wants to give Steve the full tourist treatment. Wanna come?\" \n\n\"Nah, I'm staying put.\" \n\n\"Ok. We'll be back before dinner, we can go back out together. Reservation is at 7:30.\" \n\n\"Okay -- see you then.\" Sienna dropped the phone back into her bag. She stared out at the ocean and watched a cargo ship make its way steadily across the horizon. Now there's a job for you. Months and months way out there... \n\nSienna stared at the ocean a little while longer, and then fished out her book from her bag. \"I'm going to finish this book even if it kills me,\" she muttered to herself. It was a novel that critics and friends had raved about for months, but it just wasn't doing it for Sienna. She was, however, not one to abandon any book once she started reading, so along she plodded, feeling a small sense of victory each time she completed a chapter. \n\nA shadow fell across the page and she looked up, \"Hey Pete, you guys back already?\" \n\nPete shook his head and dropped himself onto the sand next to Sienna, \"They're still out. Got too hot for me. Better back here with the breeze from the ocean.\" ",
        "He dipped his head to try and look at the cover of her book, \"What are you reading?\" \n\nSienna held up the book. Pete grimaced, \"Oh, I couldn't get into that.\" \n\n\"I'm struggling with it too. I'm halfway, so I am just going to push through.\" \n\nSienna went back to reading. Every now and then, she sensed Pete looking at her, and then looking away again. After about five minutes of this, she finally put down her book, and said gently, \"Pete, if you want to say something, just say it...\" \n\nPete went beet red, \"Oh. Uh, no. Nothing. I was just thinking... it's nothing. I better get back inside. I'm kinda getting burned anyway. Sorry.\" \n\nPete jumped up and practically ran back to the house. Sienna felt bad. Oh shit. Was he about to tell me he has a thing for me? She checked the page number in her book and chucked it into her bag. \n\nWhen she walked into the kitchen, Pete was sitting at the counter, flipping through the newspaper. \n\n\"Hey, sorry about being a bit of an ass just now. I just noticed you kept looking at me, and it felt like you wanted to say something. I didn't mean to be pushy.\" \n\nPete shrugged, \"It's ok.\" Then, with a look of resolve on his face, he added, \"You weren't wrong though. I... um... I just wanted to ask you what Hannah likes to do... uh, you know, on dates...\" \n\n\"Oh... OH!\" Sienna smiled, \"Cheesy movies. Boot up one of those sports movies with long emotional arcs. That'll get her every time.\" \n\nPete nodded, \"Ok. Ok. I can do that. What about\u2014\"\n\n\"SIENNA!! SIENNAAAAAA!\" Hannah burst through the front door. \n\n\"Yee-ee-s?\" Sienna said quietly as she watched Hannah stride into the kitchen. \n\n\"You'll never guess who we ran into!!\" Hannah was grinning, \"Sasha! We saw Sasha in town with her girlfriend... uh, Stacey?\" \n\n\"Anastasia,\" Sienna corrected. \n\n\"Yeah. Sorry. I'm horrible with names. I remembered the \"sta\"... anyway, we ran into them, and they might join for dinner!\" \n\nSienna stared at Hannah, \"Are you insane? Hannah! How could you?\" \n\nHannah looked confused, \"What? I thought you'd be happy! You'd been saying how you wish you had spent more time with Sasha when you were both home over Spring Break... and how shitty that was? What did I miss?\" \n\n\"I knew you weren't really listening to me. Spring Break was a shit show because Anastasia kept inventing reasons why Sasha couldn't hang out. Sasha and I would make plans and then I'd get a text from her saying something came up. That's what I meant when I said I wish Sasha and I had hung out more.\" \n\n\"Oh.\" \n\n\"What happened?\" Amy jumped up and sat on the counter, \"Hannah said you guys know Sasha from high school?\" \n\n\"Yeah. Hannah and I have been friends with her since kindergarten, actually,\" Sienna explained, \"She brought her girlfriend home for Spring Break. When Sasha introduced us, it was immediately clear that Anastasia did not like me and it just went downhill from there.\"\n\n\"She met you and she didn't like you?\" Amy swung her legs back and forth, \"Why?\" \n\n\"I made a joke about Sasha going out with blondes. It didn't land the way I thought it would.\" \n\nAmy laughed, \"You are blonde! Doesn't that mean you have immunity for blonde jokes?\"\n\n\"Apparently not. Soooo. If they show up and I'm there, I might end up with a drink in my face.\" \n\n\"I told them you were here. Anastasia seemed fine. We'll just sit you and her at opposite ends of the table.\"\n\n\"I know! Pete can be your date,\" Amy offered, \"Right, Pete? You can play the part? That way, if Sienna needs to bust a move, you guys can make up a post dinner date or something....\"\n\nPete nodded, eager to help. \n\n\"Pete, you do not have to do that. Just don't say I didn't warn you guys.\" \n\nBy the time the five of them arrived at the restaurant, they all felt like they were gladiators walking into the Colosseum. Hannah convinced Sienna it would be worth trying to mend fences with Anastasia. Sienna appreciated her friends' support, but mostly, she just felt like hiding back at the house.\n\nInitially, it seemed as if the whole thing would be theoretical, as the clock crept towards eight with no sign of Sasha and Anastasia. But just as the group was about to start ordering, the pair arrived. Anastasia looked like she was ready for the runway at Fashion Week: her hair fell in golden waves around her shoulders, her dress was flowy and revealing in all the right places, and her make up seemed flawless. She was wearing a pair of heels that made Sienna's calves hurt just looking at them. \n\nSienna kept her face frozen with a half-smile, and tried not to roll her eyes. Not because Anastasia was so put together, but because she seemed so out of place -- everyone in the restaurant was in casual summer gear; Sasha was wearing a faded polo shirt, shorts, and the perennial baseball hat atop her head. \n\nEven with the heels, Anastasia was still a good six inches shorter than her girlfriend, which was apparent as Sasha stood behind Anastasia, looking over the blonde's head as they sought out the right table. \n\nHannah waved them over, and Steve jumped up and offered Anastasia the open seat that was the farthest away from Sienna. Pete introduced himself and Sienna waved hello. She received a stilted nod from Anastasia in return. Sasha walked around the table towards Sienna, who reluctantly got up to greet her friend. \n\n\"Hey you!\" Sasha wrapped Sienna in a huge hug. \n\n\"Uh, yeah, hi, Sasha,\" Sienna patted Sasha on the back and sat back down as quickly as possible. All eyes turned to Anastasia, who looked like she had swallowed something unpleasant. The table's first attempt at conversation was thankfully interrupted by a very cheerful waiter who asked if they were ready to order.\n\n\"Let me stop you right there,\" Anastasia said imperiously as she gestured to Sasha and herself, \"We won't be ordering. We have another engagement somewhere else in half an hour.\" \n\nSienna raised her eyebrows.\n\n\"Oh, that's too bad,\" Hannah said. She turned to the waiter, \"The rest of us can order though.\" \n\nAs the waiter took down the table's orders, Sienna glanced at Sasha, who was telling Hannah about the dinner party they were about to go to. The beak of Sasha's baseball hat bobbed up and down as she talked. Sasha's eyes looked bluer than usual against her sun-kissed skin. Bet she forgot the sunscreen again. Sienna missed her childhood friend. They started to drift apart during Senior year of high school after Sasha came out. It was as if Sasha felt compelled to live a whole new life that was unrelated to anything that existed before. It didn't help that Sasha's first girlfriend, Valerie, insisted on monopolizing all of Sasha's time. \n\n\"How are you doing?\" Pete asked quietly. <br />\n\nSienna smiled at him, and placed a hand gently against his cheek, \"You are very sweet to ask. Not the disaster I thought it was going to be... yet.\" \n\nSasha caught Sienna's gesture out of the corner of her eye and nudged Anastasia, \"Hey, now you can make fun of Sienna dating a blond too!\" \n\n\"She wasn't making fun of me being blonde. She was making fun of you and that's not okay.\" Anastasia snapped, loud enough for Sienna to hear. \n\n\"Hey, she makes fun of me just as much,\" Sienna threw back, too angry to remember to correct Sasha's erroneous assumption about Pete. \n\n\"We always have, it's our thing.\" Sasha said as she tried to placate her girlfriend. It became abundantly clear that it was exactly the wrong thing to say. \n\n\"Sasha, can I talk to you for a moment? Alone?\" Anastasia stood up and walked towards the bar. \n\nSasha muttered a quick \"Sorry,\" and left the table. \n\n\"Anastasia, what the fuck?\" Sasha asked, looking back at the table with more than a little embarrassment. \n\n\"All these  \"things\" you have with Sienna. The Wolverine thing, the Massachusetts thing, the swimming thing. And now this making-fun-of-each-other thing.\" \n\nSasha sighed, \"For the hundredth time, we grew up together, what do you expect? And I haven't swum since I busted my shoulder. Sienna is actually really awesome if you give her a chance. Why are you so fucking sensitive?\" \n\nAnastasia crossed her arms, \"I'm not. You are the one who's being insensitive. You know I don't like her. And you know she hates me. No -- don't shake your head. She pretty much took my head off just now. Why did we even have to come here?\" \n\n\"Because it's for thirty fucking minutes, for the love of Christ. I want to see my friends for thirty minutes, okay? Then we can go to Georgia's thing.\" \n\n\"I'm going to go now. Just meet me there. Don't be late.\" \n\n\"You guys okay?\" Amy smiled congenially as Sasha and Anastasia returned to the table. \n\n\"No. We are not okay.\" Anastasia sneered, \"But here we are anyway. What's that they say? 'Time flies when you are having fun?' Sadly, time is definitely not flying.\" \n\n\"Ana! Come on.\" Sasha pleaded. \n\nAnastasia grabbed her bag and shawl. \"Don't be late,\" she repeated as she strutted out without another look back at the table. \n\nSasha threw an arm up in frustration. \"Sorry guys.\" She stood up and followed Anastasia out. Sienna could see them walking past outside, Sasha arguing vociferously as Anastasia stomped ahead. \n\n\"Can I get anyone more drinks?\" \n\nFive people looked at the waiter and said, as one, \"YES.\" \n\nChapter 4: And Then Her Charmed Eye Release (Junior Year - November)\n\nThe pounding on her dorm room door was interspersed with someone twisting the door knob without success. \n\n\"I can hear you! Who is it?\" Sienna shouted as she pulled yet another pair of pants out of her closet. \n\n\"It's Erin, come on let's go -- we're going to be late!\" \n\nSienna rolled her eyes, unlocked her door and went back to her closet. \n\n\"Sorry it took me so long to get ready,\" Erin began as she entered Sienna's room. When she saw the destruction wrought by Sienna's indecision, however, she smiled, \"I see I shouldn't have rushed. Uh, dude, what's going on?\" \n\n\"Something casual,\" Sienna mumbled to herself, brushing her hair out of her eyes, \"But not too casual...\"\n\nShe pulled on a ratty button-down shirt and turned to Erin, \"What do you think, too casual?\" \n\nErin sat on the bed, \"For the party? You decided to carpet-bomb your room with the contents of your closet for Alex Mak?\" \n\n\"It's a simple process of elimination...\" Sienna said defensively, \"Mel kept us late for practice, so I had less time to think about this than I thought I would. Help me find something to wear... Oh my god, whoever is knocking, just COME IN!\" \n\nHannah came through the door and surveyed the scene, \"... and what do we have here?\" \n\n\"She's in her 'process' of figuring out what to wear for Alex's thing.\" \n\n\"That's tonight?\" \n\nErin nodded, \"Yeah, pretty much the whole swim team is going. Some went straight from practice. You want to come?\" \n\nHannah shook her head. \"Much as I'd like to watch Sienna wrestle this demon, I can't. I'm going to a movie with Pete. Sienna, can I borrow those earrings that I like?\" \n\nSienna nodded, \"Go ahead. I should have guessed you guys had a date when he said he wasn't going to Alex's thing!\" She flung yet another shirt onto the pile of rejected apparel on the floor. \n\nHannah looked through the small case on Sienna's dresser, \"You know you can show up in a garbage bag and most people fall over themselves to make a pass at you, right?\" \n\nSienna kicked at the pile of clothes, \"It can't be too obvious.\" \n\nHannah rolled her eyes, \"Sienna Logan. That ship has sailed.\" \n\n\"It's not about catching her eye, Hannah,\" Sienna took off the shirt, \"It's about telling her the truth... without looking foolish, and I'm going to need all the help I can get.\" \n\n\"You are just going to walk up to her at the party and spill the beans?\" \n\nSienna glared at her friend, \"No... I'm going to wait until the end of the party. Until then, Erin's going to help me act all cool and stuff, like I don't give a fuck...\" \n\nErin crossed her arms, a smile fighting its way to her lips, \"When actually, how many fucks would you give?\" \n\nSienna smiled dreamily, \"Oh, many, many fucks... I would give an earth-shattering number of fucks...\" \n\n\"I don't get it,\" Hannah said as she put the earrings on, \"You spent your whole freshman year ogling her when she was your swimming captain, you spent hours upon hours of practice with her and you never said anything to her. Then, you run into her all over the place after she graduates, and you still say nothing to her. Now you want to tell her that you've been staggering under the weight of an enormous crush on her?\" \n\nSienna sat down on her bed, \"I've never said anything explicitly, but it's not like I haven't tried! It's just backfired spectacularly every time.\" \n\n\"When?\" \n\nSienna hugged a pillow and buried her face in it. \"Freshmen year, and then last summer. I brought flowers to her room freshman year... at your suggestion, by the way. She was blasting some god-awful house music so I knocked really loudly, and a woman's voice -- probably Olivia's -- shouted, 'Go away! We are having sex!'\" \n\n\"Oh yeah. I'd forgotten about that... at least it left no room for misinterpretation!\" \n\nSienna directed a mock smile at Hannah, \"How comforting. Thanks.\" \n\n\"Just for the record,\" Erin piped up, \"Everyone thought Olivia was horrible. No one was surprised they broke up. What happened last summer?\" \n\nSienna blew some hair off her face, \"Like everyone, I heard she had broken up with Olivia... so when I saw her at The Spotted Cat with Annie and the gang, I kinda threw myself at her. Which was super embarrassing because her new girlfriend was sitting there, watching the whole thing... and I didn't figure it out until Jess introduced herself to me. It was mortifying.\" \n\nErin frowned, \"So maybe because of that Alex already knows that you have a thing for her?\" \n\n\"Maybe. But I never apologized, or explained myself. I just need to get it off my chest. Have her tell me to go pound sand, then maybe I can move on.\" \n\nHannah nodded and pulled two items from the mess on the floor. \"These -- wear these. Understated, but highly optimal for sand-pounding.\" \n\n\"Good to know you have my back, H. Have a good time with Pete tonight. I'm glad he finally asked you.\" Sienna put on the proffered sweater and pants, and stuffed her feet into a pair of boots. \n\n\"I asked him. I got sick of waiting. What's up with you swimmers being shy about this kind of stuff? Thanks for the earrings. Hey, I've just had a thought. Have you talked to Sasha about this? Maybe this is like, standard lesbian drama.\" \n\n<br /> Sienna shook her head, \"No. Remember what happened over Labor Day? I am not breaking radio silence. I don't need to deal with another Anastasia meltdown.\" \n\nHannah shook her head, \"See? Standard lesbian drama.\" \n\n\"Can't pay me to go anywhere near it. Self-preservation or whatever. And what's to talk about? It's not like this thing with Alex is real. And the thing with Sydney was just a thing. None of it is real. Jesus, I am so pathetic.\" \n\nErin shook her head, \"Heartbreak Hotel. Standard college fare, I think. Character building!\" \n\nSienna grunted with resignation, \"Come on, let's go build me some character.\" \n\nThe three headed out. Sienna mulled over Hannah's suggestion of talking to Sasha. I wouldn't even know where to start if I were to tell Sasha any of this. I don't even know what to make of this dream-and-or-crush thing that I've had for Alex. There's no point. \n\nSienna paused at the dorm's front entrance, \"Has this ever happened to you? Someone who's able to throw you for a loop like this?\" \n\nHannah shook her head, \"I've had crushes, but not like this. I know, sorry, not helpful. I'm going to head over to Jefferson East to meet Pete. I'll see you later.\" \n\nSienna and Erin continued walking towards the subway station. \"If you sense that I'm about to do something stupid, please stop me.\" \n\nErin grinned, \"It's a Friday night; most people will end up doing something stupid.\" \n\nBy the time the train pulled into the Christopher Street stop, Sienna was starting to have second thoughts. \n\n\"Ok. This was a bad idea,\" Sienna suddenly stopped when the two were steps away from the restaurant. \n\n\"We absolutely do not need to go in,\" Erin said gently, retracting her hands into the sleeves of her coat as the early winter chill bit into her skin. \n\n\"Ok,\" Sienna looped some hair behind her ear, \"Let's go somewhere else.\" \n\nErin gently patted her friend on the back, \"No problem. Where do you want to go? How about that falafel place on West 4th?\" \n\nSienna nodded. \n\n\"Hey Sienna! Hey Erin!\" A mutual friend from Alex's class came strolling up. \n\n\"Hi Jo,\" Erin responded, \"We were just going to grab a bite to eat.\" \n\n\"You guys aren't coming to Alex's thing?\" Jo tilted her head towards the restaurant. \n\nErin looked at Sienna, who shrugged and kicked at some imaginary dirt on the sidewalk. \n\nJo narrowed her eyes and said, perceptively, \"Why don't you just come say goodbye. You are here anyway. Takes two minutes. It might feel worse if you leave now and end up regretting it.\" \n\nSienna nodded, blushing with embarrassment. Does everyone know about this? \n\nSienna, Erin, and Jo stepped into the restaurant. The ma\u00eetre d' pointed them to the back, where a long table was jammed into an alcove. People were good naturedly climbing over one another -- or under the table -- to get around. Alex was squished into a corner, beer in hand, laughing at Annie, her best friend, who appeared to be in the middle of an animated retelling of some drama or another. \n\nMichelle, another mutual friend, had commandeered a table nearby and waved the three over. \"Food's coming for both tables, I can't be bothered to tetris my sizeable behind into that mess.\" \n\n\"Where's Jess?\" Sienna asked as casually as she could, when she noticed that Alex's girlfriend was not at the restaurant. \n\nMichelle frowned, \"Hm, sore subject, Sienna.\" \n\n\"Trouble in paradise?\" Erin shot Sienna a look. \n\nMichelle shook her head, \"Don't really know what's going on, except that Jess was supposed to be here... and isn't.\" \n\nSienna stole a look in Alex's direction. Alex seemed happy enough. Once again, Sienna found herself wondering what strange cosmic aberration threw Alex into her imagination's orbit. Hannah was right: Sienna was drawn to Alex but she'd never had the audacity to really get close. It was as if she knew that Alex might fade into nothing, just like her dream. \n\nNot for the first time since knowing Alex, Sienna was relieved for the distance, and relaxed a little. The party doubled as a swim team reunion, so the satellite table was a spirited one. As the party started to wind down, Sienna stole a look over to Alex's table. \n\nAlex was wiped. She stretched out her leg on an empty chair and leaned back, resting her head on the wall behind her. She'd been cramped in a corner for the past couple of hours and was relieved that people were starting to say their goodnights. \n\n\"Al, we're going to put Ian in a cab. Be right back. We can settle up then.\" \n\nAlex looked up and nodded at Annie. Ian did not look like he would wake up happy the next day, but he gamely saluted Alex before being half carried out by Annie and Jo. \n\nSienna saw her chance, and slid into the chair next to Alex, \"Hey cappy.\" \n\n\"Sienna,\" Alex said warmly, \"Thanks for coming.\" \n\n\"You all packed?\" \n\nAlex shifted her head a little, \"Almost all done.\" \n\n\"Jess is stuck in the UK?\" Sienna's curiosity got the better of her. \n\n\"We're not...\" Alex winced, \"...she didn't fly over,\" she finished simply. \n\nSienna's heart leapt with hope. The rumors were true? Alex and Jess are on the rocks?  \n\nAlex changed the subject before Sienna could say anything, \"Sorry we didn't get to chat more earlier on. I was kind of stuck in this corner all night.\" ",
        "\"You were hiding from me,\" Sienna teased, sounding braver than she felt. \n\nAlex chuckled, \"And why would I hide from you, Sienna?\" \n\nSienna shrugged, \"Because of what happened over the summer and...\" \n\nAlex took a sip of beer from the bottle she'd been nursing. She had an inkling that Sienna had feelings for her, and wanted to be gentle with her dismissal. \"I think a lot of people would welcome your advances, Sienna...\" \n\n\"Why not you?\" Sienna threw caution to the wind. \n\nAlex sat up, \"Oh, Sienna, I'm sorry, I'm not...\" \n\n\"Shhhhh,\" Sienna put her fingers on Alex's lips, \"Hold on. Jess isn't here. Something happened between you two, I don't know what it is, but maybe you want to take your mind off it? Just for the night?\" \n\nAlex grasped Sienna's hand and tactfully moved it off her lips. \n\nBefore Alex could say anything, Sienna leaned in and kissed her. \n\nAlex's reaction time to Sienna's kiss was dulled by the alcohol. Alex regretted the kiss instantly and the two women broke apart. Sienna was puzzled; she had expected a surge of endorphins when their lips touched, but felt none. \n\nThey both spoke at once, \"Sienna...\" Alex began, searching for a way to relieve them both of the awkwardness of the moment, \"I really don't...\" \n\n\"That wasn't --\" Sienna said. \n\n\"Wasn't what?\" \n\n\"Uh, it wasn't the big deal I thought it would be.\" Sienna said, looking confused. \n\nAlex looked a little embarrassed, \"I guess that is a good thing?\" She touched her own lips self-consciously. \n\n\"May I confess something?\" \n\nAlex smiled and shrugged, \"Sure... I think...?\" \n\n\"I've been having this dream where I, um, kiss someone. Someone with your appearance -- so much so that I thought it was you... but just now... it wasn't the kiss I'd been dreaming about.\" Sienna felt as if some fog had lifted. Suddenly, she realized what she had attempted to do and felt like an idiot. \n\n\"Again, I guess that is a good thing?\" Alex grinned. \n\nSienna squeezed Alex's hand, \"Yeah. Oh god Alex, I'm sorry that happened. I really shouldn't have done that. Jesus. I wasn't thinking straight.\" Sienna stood up, tucking her hair behind her ears. \"I should go, before I get hit by the stupid stick again.\" \n\nAs uncomfortable as the moment was, Sienna's heart somehow felt lighter. Alex still looked handsome as ever, but there was no tightness in Sienna's chest as she put space between their two bodies. \n\nAlex got up, \"Okay. No, I mean, it's okay. Sienna, you don't need to go.\" \n\nSienna smiled, \"I know. But I should. I came by to say good-bye, and I think if I left now, I won't completely embarrass myself. Can we chalk this up to poor alcohol intake management?\" \n\nAlex smiled back, \"There's no need, honestly. But if you insist, then we are both culpable.\" \n\n\"You are too nice,\" Sienna said, and then, more sincerely, \"I hope it works out with Jess.\" She opened her arms for a hug. Alex hugged her back, \"Me too. I hope you find your kiss.\" \n\nSienna laughed half-heartedly, \"Safe travels, Alex. Come back and visit, ok?\" \n\nWhen Sienna turned around, she saw Erin and Annie, who were trying -- unsuccessfully -- to not look like they'd been witness to the entire exchange. \n\n\"Goodnight Annie, see you around,\" Sienna said as she left. \n\nSienna and Erin walked in silence for a while. As the subway train rumbled north, Sienna asked, \"So how much did you see?\" \n\nErin blushed, \"We saw the kiss... and lots of talking. We were trying to guess whether you'd manage to convince Alex to take you home with her tonight.\" \n\nSienna laughed, \"You know, I thought I had maybe one chance in a hundred. But something happened, and now, thinking back to that moment, I don't think I would have wanted to. Even if Alex wanted to.\" \n\n\"The kiss was that bad?\" \n\n\"Hmm, no, it wasn't bad. It was just... nothing... I mean, her lips felt good, but it didn't feel good, you know what I mean?\" \n\nErin shook her head, \"No. I have no idea what you mean. You've been dying to kiss this woman for over two years and then 'nothing' is all you give me??? It makes no sense!\" \n\n\"I know. It doesn't make sense to me either.\" \n\n\"Look on the bright side, you didn't become 'the other woman'!\" \n\nSienna shoved her friend playfully, \"They were on a break. But I still shouldn't have kissed her.\" \n\n\"No harm, no foul.\" \n\n\"I guess. And I can cross her off the list...\" \n\n\"What list?\" Erin asked. \n\n\"Uh, you know, the stupid crushes list,\" Sienna scrambled; Erin didn't know about the dream. \n\nErin nodded, \"Yeah, let's aim for the sweep-you-off-your-feet romances list instead!\" \n\n+++ The Present +++<br/>\n\nChapter 5: The Retirement Party (Junior Year, 21st Dec - Saturday)\n\n\"The Branson School Holiday Party -- Welcome Back Alums!\" read the banner hanging over the public school's entrance. Sienna and Hannah hurried in from the cold. Although the hallways and stairwells all had fresh coats of paint, both of them were hit by a nauseating mix of claustrophobia and nostalgia as they made their way to the school gym. Branson was actually split into two schools -- Branson Lower and Branson High, but most people had to suffer their way through both schools before finally managing to claw their way out to freedom. \n\n\"Do NOT leave me alone to deal with the people of my nightmares.\" Sienna tugged at Hannah's shirt. \n\n\"Relax. We'll stay until the surprise, and then zip out of here. It'll be worth it to see Mrs. Reilly's face. Speaks volumes that this many people have shown up to celebrate her retirement.\" \n\n\"I fucking hated high school,\" Sienna complained, scanning the gymnasium for the nearest drinks station. \"No, let me restate that. I fucking hated high school and I hated this small town even more.\"\n\n\"That's not entirely true. You only started hating everything Senior year when--\" \n\n\"Yeah, yeah. I know.\" Sienna's mood darkened.\n\n\"Mrs Reilly taught kindergarten. Before people turned into monsters. Try and focus on that.\" \n\nSienna rolled her eyes, not ready to cede any ground, \"Don't tell me Amanda Whitaker wasn't already a mean girl in kindergarten. She made fun of me every chance she got.\" \n\n\"That's because she had no friends and you and Sasha were inseparable. She had no time for me, for example. I was already so nerdy she looked right through me as if I was vapor. Oh look -- there's Kristen Banner! She said she'd be coming. I have to go say hi.\" \n\n\"Fine, go. I'll just stand here and pretend I am super thrilled to be seeing all these people that I have studiously avoided these past three years.\" Sienna's eyes swept the room again without spotting anyone she felt compelled to speak with. She got her drink and walked over to the window. The school playground was right below, next to the parking lot. She remembered standing at the very same window Senior year, wishing herself to be miles away. Everything had been tolerable until Senior year, and then she just wanted to get the hell of out Dodge. \n\n\"Hey Wolverine,\" whispered a voice in her ear. \n\nSienna screamed in surprise, her cup of cranberry juice leapt in a glorious arc high up in the air. The sticky red liquid landed with an unceremonious splash. \n\n\"SASHA JAMES, you asshole!\" Sienna exclaimed, knowing who it was before she turned around. \n\n\"You are entirely too easy to scare the shit out of.\" \n\nSienna glared at her childhood friend, who had an infuriating grin on her face, \"And you are so juvenile, Sasha.\" \n\nSasha flashed an even bigger smile. She took her baseball hat off with one hand while the other combed through her hair, gathering her dark brown locks in place before jamming the hat back on again. \n\nSienna couldn't help but smile back. Even despite their recent differences and disagreements, Sasha -- without Anastasia in tow -- was a sight for sore eyes. Taller than Sienna by a just a little bit, Sasha had always been a comforting presence. Now, stirred with the remembrance of how lonely Senior year was without Sasha (and because Anastasia was nowhere in sight), Sienna fought the urge to just fling herself into Sasha's arms.\n\n\"What? Do I have something in my teeth?\" \n\n\"Nada. I was just thinking that some things never change,\" Sienna countered smoothly. She had never let on how much she'd missed her friend, and she wasn't going to start now.\n\n\"How do you mean?\" \n\n\"Your outfit: jeans, button-down shirt, baseball hat, black boots. Standard Sasha outfit, although you are tucking your shirt in now. Classy.\" \n\n\"Yeah, me and the hundreds of thousands of people who wear this combination of things, dork.\" Sasha crossed her arms, deeply pleased that they'd slid back into the groove of bantering with each other.\n\nSienna frowned, \"Hmm, yes, you're right, not only are you boring, you are unoriginal. Now go get me some paper towels and soda water. You ruined my shirt.\" \n\nSasha returned moments later with the requested items and handed them to Sienna, who immediately went to work, dabbing the front of her shirt carefully. \n\nSienna stopped when she realized that Sasha was staring at her chest, \"What?\" \n\n\"Nothing!\" Sasha turned away quickly, mortified that Sienna had caught her. \n\n\"Liar,\" Sienna mumbled, getting back to her task. She sensed Sasha's eyes return to her breasts and looked up again, \"Seriously?\" Sienna raised her eyebrows, \"Are you 15?\" \n\nCaught staring for the second time, Sasha went on the offensive, \"You didn't have those when we were 15.\" \n\n\"Perv,\" Sienna narrowed her eyes, \"You'd better stop before Anastasia hears you. Where is she anyway? Applying on her fifth layer of make up?\" She looked around for a trash can. \n\nSasha narrowed her eyes back at Sienna, \"She went to the bathroom,\" she said, \"Try and be nice, ok? She and I have been arguing non-stop since Labor Day. Let's not add nitro-glycerin to the fire.\" \n\n\"I hate to sound like a five-year-old, but you know she's the one who starts stirring up shit right? I just try and defend myself from the litany of transgressions she hurls at me.\" \n\nSasha held up her hands, \"Alright already. Look Sienna, you and I both know she can be ridiculous when it comes to you. But calling her out on it the way you do doesn't help. Trust me. Please? Be less, you know, black-belt-lethal with your put downs?\" \n\nSienna felt a smile fighting to form. She nodded curtly, \"Fine.\" \n\n\"Thanks, Wolfy,\" Sasha wrapped her arms around Sienna and squeezed. \n\n\"Hmmmmm,\" Sienna sighed. I've missed this. Oh, get real, Sienna! Sienna shook herself out of her reverie and stepped away from the embrace. \n\n\"Uh, ok, no problem, Sasha,\" Sienna said as carelessly as she could, \"You got it.\" \n\nBefore Sasha could come up with a pithy comeback, she felt herself pulled into a hug along with Sienna. \n\n\"Sasha and Sienna, still stuck together like peas in a pod!\" \n\n\"Mrs. Reilly!\" They both said together. \n\nTheir kindergarten teacher released them from the hug, \"Oh, call me Beth. What a surprise to have you both come to the end of year party!\" \n\n\"Yeah, the rumor was they are spiking the drinks... that's why I'm here, anyway!\" Sasha joked. \n\n\"Maybe it's because they heard you were coming,\" Sienna winked affectionately at Beth, risking a half-truth. \n\nBeth laughed, \"I don't think I'm that big of a draw, Sienna. But thanks for making me feel good.\" \n\n\"I'm going to tell Hannah you are here -- be right back,\" Sienna said as she waded into the crowd. \n\n\"I didn't know Sienna came out! It's good to see you two together. You were always so close.\" Beth said, as she observed Sasha's eyes following Sienna across the room. \n\nSasha turned away from Sienna abruptly, \"Oh, no, we aren't together. Sienna's straight as an arrow. This is the first time we've seen each other in a while, we've kind of fallen out of touch actually.\" \n\n\"Oh! I'm sorry Sasha, my mistake -- I saw you two hugging and thought you were, you know...\" \n\nSasha shrugged, \"S'okay. So, Beth, any plans for the holidays?\" \n\n\"John and I are going to go visit my son and his family in Baltimore. I'm a grandmother now, can you believe it?\" \n\n\"Believe what? Hi, Mrs. Reilly!!!!\" Hannah gave the teacher a big hug. \n\n\"Oh, I was just telling Sasha that I'm going to visit my granddaughter over Christmas. Hello, Hannah dear. You are looking very well!\" \n\nHannah elbowed Sienna and nodded to her left. Anastasia was striding towards them, irritation written all over her face. \n\n\"I've been looking ALL OVER for you, Sasha,\" Anastasia pouted. \n\n\"I've been standing right here. The entire time. This is-- OOOF!\" Sasha almost fell forward as a giant of a man collided into her with a clumsy hug. \n\nSienna heard a nasty pop. Sasha let out a yelp of agony. \n\n\"Sasha! It's good to see you, man! You too, Sienna,\" the giant said, slapping Sasha on the back. Sasha winced again. \n\n\"Oh shit, are you okay?\" \n\nSasha doubled over in pain, \"Goddammit Seth, you just dislocated my shoulder.\" \n\nSeth paled, \"What do we do now? Get a doctor?\" \n\nSienna, in practiced movements, palpated Sasha's upper arm and clavicle, \"Go grab a chair, Seth. Let's figure out what this is first. Wolfy, is this like the camping trip or like the swim meet?\" \n\nSasha groaned, \"Swim meet.\" \n\n\"What does that mean?\" Anastasia asked. \n\n\"Probably just a dislocation. The camping trip was more complicated. We'll need to pop it back.\" \n\nSasha nodded as she sat down on the chair Seth brought over, \"Ugh, it's going to hurt, isn't it?\" \n\n\"You can take it. Let me know when you are ready.\" Sienna stood next to Sasha and positioned one arm under Sasha's elbow and the other on Sasha's forearm.\n\n\"Are you sure you know what you are doing?\" Anastasia asked, not really able to look at the way Sasha's shoulder had collapsed forward. \n\n\"Sasha's left shoulder likes to go rogue. We've popped this sucker back multiple times,\" Sienna smiled, \"She's just being a big baby right now.\" \n\nSasha turned to Sienna, \"Jackass.\" \n\nSienna leaned towards Sasha until they were almost nose to nose, \"You're stalling, asshole.\" \n\nBeth Reilly laughed, \"Come on guys, let's give them some space.\" \n\n\"No, it's fine,\" Sasha griped, \"Okay Sienna, do it.\" \n\n\"Okay. No sudden movements, and I will stop if you say 'stop,' okay?\" \n\nSasha nodded. Sienna applied support and pressure, gently rotating and lifting Sasha's arm and levering the shoulder back into its socket. \n\nEveryone clapped and Sienna took a dramatic bow. \n\nSasha shifted her shoulder around, \"Show's over. Thanks for nothing, Seth.\" \n\nSeth went red, \"I'm sorry dude - I forgot about your shoulder.\" \n\nSasha shrugged good-naturedly, \"Next time you tackle me, just make sure Sienna's around, okay?\" \n\n\"Is that all I'm good for?\" Sienna crossed her arms in mock irritation. \n\nBefore Sasha could respond, Anastasia made an abrupt turn and strode out of the gym. \n\nThe smile on Sasha's face faded. \"Sorry. I have to go. Sienna - thanks for.. you know...\" \n\nSienna nodded, \"You should go put that in a sling, Sasha.\" \n\n\"Beth - good seeing you. I'll be back later.\" Sasha hurried after her girlfriend.\n\n\"Someone didn't like you touching Sasha,\" Hannah noted. \n\nSienna just raised her eyebrows, \"Yeah, whatever, reducing shoulder dislocations is a real turn-on in Russia, don't you know?\" \n\n\"How come you knew how to do that?\" Seth asked, \"Impressive!\" \n\nSienna grinned, \"Sasha fractured her clavicle on a camping trip in 6th grade. Since then, her shoulder has had a tendency to dislocate. I went with her to a PT session once and the PT taught me how to help her put it back.\" \n\n\"And hasn't it come in handy?!\" Beth Reilly nodded with approval. \n\nSienna shrugged, \"No big deal. Although it clearly upset the girlfriend...\" \n\n\"Not the person I thought Sasha would end up with,\" Beth mused, looking at Sienna. \n\n\"Me neither,\" muttered Sienna. \n\nHannah agreed, \"Not really sure what Sasha sees in her...\" \n\nSienna moved over to the window as Hannah talked. She looked down and saw Sasha and Anastasia walking out into the parking lot. It looked like they were having a big argument. At that moment, Anastasia looked up and saw Sienna at the window. Anastasia shot Sienna a withering look and pulled Sasha towards her for a deep, passionate kiss. \n\n\"Ugh,\" Sienna turned away from the window. Seth, Hannah and Beth were still chatting away, unaware of what Sienna just saw. \n\nOutside the school, Sasha pushed Anastasia off. \"What the hell? One minute you are yelling at me, and then you kiss me?\" \n\nAnastasia looked up at the second-floor window and smiled, happy that she'd driven Sienna away. \"Sorry, couldn't help myself. Come on, let's go.\" \n\nSasha shook her head, \"I can't keep up with you. Wait, you want to leave?\" \n\n\"I'm flying to L.A. tonight, I'd prefer not to be at your high school thing, honestly.\" \n\nSasha bit her lip and frowned, \"Anastasia, the deal was that I'd take you to the airport after stopping by this thing first.\" \n\n\"We stopped by. I have fulfilled my end of the bargain. Let's go.\" \n\n\"Is this about Sienna? Why does it set you off like this whenever she and I end up in the same place? She's straight and we hardly see each other anymore. It shouldn't be a big deal.\" \n\nAnastasia eyes flashed, \"It is a big deal because you keep saying that.\" \n\n\"What? I keep saying it because both those things are true.\" \n\n\"I don't care if they're true or not. It's a big deal because of what you never say.\" \n\nSasha looked at her girlfriend. She sensed that she was on shaky ground, that this was the fight they'd been building up to for a while now, but she didn't know what Anastasia was getting at. \"What are you talking about?\" \n\nAnastasia glared at Sasha, \"All this time, I've been telling you how much I dislike spending time with Sienna, and you always tell me to stop being so threatened because she is straight and you never spend time with her. And you know what's really interesting? You've never once said YOU don't have feelings for her. It's always about how Sienna doesn't have feeling for you. That's why it's a big deal.\" \n\nSasha's stomach dropped. Of all the precipices she thought Anastasia was going to push her towards, this was not the one she expected. Feelings for Sienna was something Sasha wouldn't even let herself think about, least of all as a point of argument with Anastasia. \n\n\"Fine, let's just go, then.\" Sasha said in resignation. \n\nAnastasia crossed her arms, \"So you DO have feelings for her!\" \n\nSasha's mouth wouldn't work. \n\n\"I think we both know what comes next.\" Anastasia turned and walked to Sasha's truck. \n\n\"UGH!\" Sasha ran to catch up with Anastasia, \"Are you breaking up with me?\" \n\nAnastasia paused, her hand on the door handle, \"Sasha, I think this has been in the works for months. We've hardly spent any time together since Labor Day. And when we did, we fought. It's fucking exhausting.\" \n\n\"We're just going through a bad patch.\" \n\n\"Sasha, you liked it when she was playing doctor just now. And I saw you guys hugging. You like her. A lot. Even if you don't think it's obvious, it is.\" \n\nSasha opened her mouth, but nothing came out. \n\n\"You can come pick up your stuff from my place when I get back on the 26th. Just take me into town. I can grab a cab to the airport from there.\" \n\nBack in the school gym, Sienna watched Sasha's truck peel out of the school parking lot. For the rest of the day, Sienna tried to block out Sasha's early departure from the party, and it wasn't easy. It was like Senior year all over again, when her friendship with Sasha abruptly changed. Every subsequent time together since then just re-opened the wound. Sienna knew she played a role in it; once Valerie was part of the equation, Sienna made no effort to fight for their friendship, preferring to keep her distance and allowing them to drift apart. The mad dash of college-related insanity had redirected her focus most of Senior year, and the excitement of four years in the big city was just enough to muzzle the ever-present tumult of missing her life-long friend. ",
        "\"How was the party?\" Sienna's mother asked later that night. Sienna had settled into her bed, surrounded by her laptop and a pile of books she'd put aside to read over break. \n\n\"Mrs. Reilly was totally surprised when Mr. Abraham did the big reveal. She burst into tears. It was really sweet.\" \n\n\"Good turn out?\" \n\n\"Massive. I guess being a kindergarten teacher for forty plus years gets you a lot of fans!\" \n\n\"Beth Reilly is a cut above the rest. She just always respected the kids and never talked at them. You loved being in that class with her.\" \n\n\"You know who didn't show up? Amanda Whitaker. I was just talking with Hannah about how mean she was to Sasha and me and wondering if she'd come. She didn't.\" \n\nSienna's mother sat down on the edge of the bed, \"That's probably for the best. So! What are your plans for the rest of break?\" \n\n\"Stay here through New Year's, and then back to school for the training trip with the swim team.\" \n\n\"Oh good! We get you for almost two weeks! Are you meeting up with anyone while you are here?\" \n\n\"I bumped into Erik at the retirement party and he told me about a Christmas thing he and Jon Grasser are organizing at The Pool Hall on Monday night.\" \n\n\"Sounds like fun; are you going to go?\" \n\n\"I don't know - it's one of those crazy themed parties that takes too much time to think about.\" \n\n\"What's the theme?\" \n\n\"'The Princess Bride,' there're prizes for best costume, trivia knowledge, blah, blah.\" <br />\n\n\"You love that movie! You should go!\" \n\n\"Maybe. It's the night before a swim practice I signed up for... I promised coach I'd get in at least 15,000 yards over break. What else is going on?\" \n\n\"Holiday Pops with the Jameses on the 23rd, and then dinner with them and Erik and Sasha on Christmas Eve -- first time all seven of us will be together in years. I think it'd be fun.\" \n\nSienna nodded, \"Okay. I have practices at the Y on the 24th, 27th, and 30th. Med School frenzy is about to start and I kind of feel like staying home and doing a whole lot of nothing.\" \n\n\"A whole lot of nothing sounds good!\" Sienna's mom smiled. A low crunching sound caught both women's ears and they looked out the window, \"Ah, looks like Sasha's staying with her parents tonight. Did you see her at the party?\" \n\nSienna watched as Sasha's pick-up rolled to a stop in the gravel driveway of the house opposite, \"Yeah, for about five seconds. Then the Russian princess needed air and they left. Sasha didn't even stay for the surprise.\" \n\n\"Still not a fan, huh?\" \n\n\"Never will be. Sasha deserves better.\" \n\n\"You have someone in mind?\" Sienna's mom looked carefully at her. \n\nSienna grimaced and shook her head, \"Nope. But I know it's not Anastasia.\" \n\nBarbara Logan shifted slightly, \"What about you?\" \n\nSienna shook her head again, \"Me? Nothing going on with me. But I banished the ghost of that stupid crush on Alex Mak.\" \n\n\"Oh?\" \n\nSienna leaned into her mom's shoulder and sighed, \"Yeah. Very sad state of affairs. You okay with me growing into a crazy old spinster who shouts at the rain in her bathrobe?\" <br />\n\n\"Nonsense,\" Barbara soothed, holding her daughter close, \"and I know you know that. Just don't overthink it. Sometimes, you think too much, honey. It'll happen. You just have to let it.\" \n\nAcross the street, Sasha made a bee line for the kitchen, opened the fridge and took inventory of its contents. \n\n\"Erik said you left early from Mrs. Reilly's party.\" Maria James leaned into the counter as she watched her daughter stand in front of the refrigerator. \n\nSasha shrugged but didn't look back, \"Big brother needs to stop being such a tattle-tale.\" <br />\n\n\"I asked him, he told me,\" Sasha's mom sat down at the kitchen table, \"And why are you in my kitchen?\" \n\n\"The usual reason... extreme hunger,\" Sasha pulled some bread and cold cuts from the fridge. \n\n\"While I am thrilled to have you here raiding my kitchen, I thought you would be staying in Boston tonight -- why drive all the way back?\" \n\nSasha sat down at the table and haphazardly assembled her sandwich, \"Couldn't find parking.\" \n\n\"Very funny. No, really Sasha, what's up?\" \n\nSasha bit into the sandwich and mumbled, \"Anastasia and I had a fight. She left. Kind of didn't want to be alone in my apartment tonight.\" \n\n\"Oh honey, I'm sorry. You guys have been fighting a lot lately, it seems.\" \n\nSasha grunted, \"Won't be for much longer. She asked me to move my stuff out of her place after Christmas.\" \n\n\"Do you want to talk about it?\" \n\nSasha played around with her sandwich, \"Not really.\" \n\n\"Fair enough,\" Maria knew her daughter well enough to not push, and sensed that a glimmer of candor would eventually break through. She moved around the kitchen and tidied up unobtrusively as she waited for Sasha to get her thoughts together. \n\n\"I totally messed things up,\" Sasha finally said. \n\n\"How did you mess things up?\" <br />\n\n\"Anastasia didn't like Sienna. I tried to convince her otherwise but it didn't work. So I spent less time with Sienna. But it still wasn't enough. Now, there's about to be no Anastasia... and no friendship with Sienna. I tried to find some way to manage the conflict, but I think I ended up I losing both.\" \n\n\"Which one do you regret more?\" \n\nSasha knew the answer immediately, but once again, her mouth wouldn't work. \n\n\"Sasha, don't you think that the right person wouldn't be threatened by your friendship with Sienna? \n\nSasha shrugged, \"I miss her.\" \n\n\"Anastasia?\" \n\nSasha shook her head. Maria looked out the kitchen window, \"Looks like Sienna's still up. Go talk to her.\" \n\n\"Maybe she can come over for dinner tomorrow? Oh, mom, can you not tell anyone about the break up? I'd prefer not to tell people until after she's kicked me out officially.\" \n\nMaria nodded, \"Sure honey, if that's what you want.\" \n\nSasha nodded, \"Yeah. Not the best Christmas news, you know? Um.. so can Wolverine come over for dinner tomorrow?\" \n\n\"Why do you call her Wolverine? She has a beautiful name.\" \n\n\"Mom, we've explained this a million times. Her last name is Logan. Our last name is James. James Logan is the alter-ego of a superhero called Wolverine. She also has a big crush on the actor who plays him. She calls me Wolverine, I call her Wolverine.\" \n\nMaria scoffed, \"You are both in college. Enough with the cartoons. Call each other by your real names.\" \n\n\"I know she's not a cartoon, mother.\" \n\n\"Then act like it,\" Maria pulled off Sasha's hat, unleashing her daughter's mass of dark brown hair, \"and stop wearing these hats. You have a wonderful head of hair.\" \n\nSasha jammed the hat back on her head, \"They keep the hair out of my eyes; I like them. So Ma, can Wolv- I mean Sienna come over?\" \n\n\"Sure! If you want her over for dinner every night over break, go ahead. I'd be thrilled to see her. You guys can bay at the moon together.\" Maria was happy to see a smile creep across Sasha's face. She gave her daughter a kiss goodnight, grabbed her glass of water and headed upstairs, \"I'll see you in the morning.\" <br />\n\n\"Good night mom. I might run over to Sienna's for a bit tonight.\" \n\n\"Ok, but don't overstay your welcome,\" Maria shouted from the landing upstairs. She smiled to herself as she heard the front door open and shut. \n\n<br /> Sasha strode quickly across to the Logan's house. She scrambled up the trellis below Sienna's room like she had done again and again as they were growing up together. As she reached the top, she could see Sienna sitting on her bed, watching something on her laptop. She rapped lightly at the window. Sienna looked up, narrowed her eyes and mouthed, \"What?\"\n\n\"It's fucking freezing out here. Let me in!\" \n\nSienna rolled her eyes, and reached up to undo the latch. \"You're a lunatic.\" \n\n\"Didn't want to wake your parents.\" Sasha crawled through and brushed off her jeans. \n\n\"SIENNA!\" \n\nSasha and Sienna froze. Sienna's door swung open and George Logan burst in, panic on his face. \n\n\"Hi George,\" Sasha bleated out. \n\n\"You opened the window?\" \n\nThey both nodded, \"Dad, are you ok?\" \n\n\"I am now,\" George exhaled a long breath, pressed a couple keys on his phone and waved it in front of the two women, \"We just installed silent alarms on all the windows. The alarm company sent me a message to report a breach...\" he smiled at Sasha, \"Thought you guys were done with windows as a form of entry.\" \n\n\"Sorry.\" \n\n\"It's okay. I'll go recover from my heart attack now. Sasha - stay as late as you'd like, but go out the front door, ok, sport?\" \n\nSasha nodded. \n\nThe moment the door shut, Sienna settled back into bed, \"To what do I owe this visit? Given that you almost killed my dad, it had better be good. And don't say you need more shoulder therapy.\" \n\nSasha rotated her arm, \"Nope. All good - thanks again, by the way. I probably need to go get an x-ray, haven't had that happen in a while. I just wanted to come over and catch up. We didn't get to earlier.\" \n\n\"We didn't catch up earlier because Anastasia made you leave the party early.\" Sienna raised an eyebrow. \n\nSasha took in a breath and sat down at the end of the bed, \"Doesn't mean we can't catch up now.\" \n\n\"Sasha, I'm sorry if this sounds harsh, but are you out of your fricking mind?\" Sienna crossed her arms, \"Anastasia doesn't like you spending time with me. You know she'd be pissed if she knew we were hanging out together.\" \n\n\"Why do you care? Let me worry about that.\" \n\n\"Because you can't have it both ways, Sasha. I thought we had this really solid friendship, and then you keep dating women who want nothing to do with me, and you are ok with them pressuring you to ice me out. So I stayed away, and now, the moment Anastasia is not around, you come waltzing over like everything is normal. You can't have it both ways,\" Sienna repeated.\n\n\"I know. And I've decided to prioritize our friendship.\" \n\nSienna's heart soared at those words, but her instincts pushed her towards skepticism, \"I don't think you can call what we have a friendship, Sasha. This is the first time we've spoken more than two sentences to each other in three years.\" \n\n\"I never meant for that to happen,\" Sasha said, as the weight of guilt pressed down on her ability to say anything more. \n\n\"Well, it did.\" <br />\n\n\"That makes me sad,\" Sasha tilted her head down, the brim of her hat partially hiding her face from view. \n\n\"Me too,\" Sienna said quietly. The two were silent for a moment.\n\nSienna hated seeing Sasha look so upset, and gave Sasha a soft nudge with her foot, \"Careful Wolfy, if you think any harder, one of your two brain cells might just spontaneously combust...\" \n\nThat earned Sienna a small smile. \"What are you watching?\" Sasha pointed at the laptop. \n\n\"'Princess Bride'.\" \n\n\"Are you doing homework for Grasser's party?\" Sasha smirked, \"You are such a nerd.\" \n\nSienna flipped her the finger. \n\n\"How far in are you?\" \n\n\"Cliffs of Insanity.\" \n\n\"Scooch over.\" Sasha kicked off her shoes and crawled up beside Sienna. \n\n\"Seriously?\" Sienna rolled her eyes and made some room as Sasha slid under the covers. \n\n\"You're about to get to the sword fight. That's the best part!\" \n\nSienna fought against relishing the familiar comfort of hanging out with Sasha. They'd watched movies like this throughout high school, but it felt different now, with the specter of the jealous girlfriend looming over them. \"Keep your hands to yourself, Wolverine. I don't need Anastasia sending Russian agents to kill me next time I see her.\" \n\n\"Let me deal with Anastasia, okay?\" \n\n\"Fine, but seriously, stay on your side of the bed. I need to have plausible deniability,\" Sienna hit 'play' and settled back into her pillows as the movie started up again. \n\n\"Erik's going as Inigo. He's got the wig and sword and everything.\" \n\n\"Are you going?\" Sienna gave Sasha a quick glance. \n\nSasha wrinkled her nose, \"Maybe. The potential cost-benefit imbalance is hard to ignore though. I really don't want to spare any effort for the endeavor.\" \n\n\"That's what I told mom. Not going unless I can figure out a costume that takes zero effort.\" \n\nSasha nodded in agreement. Both women found comfort in using the movie as an excuse not to talk. \n\n[Westley] 'Inhale this, but do not touch...'\n\n\"GOT IT!\" yelled Sienna. She watched the scene intently for the next few moments, and then slammed the laptop shut. \n\nSasha smiled with amusement, \"Homework all done?\" \n\nSienna grinned and nodded. \n\n\"You are going to go as the Man in Black?\" \n\n\"Nope. Too obvious. Move over,\" Sienna slid her laptop onto the window sill next to the bed, climbed over Sasha and walked over to her closet, \"avert your eyes Sasha, I'm changing out of my jeans.\"\n\n\"I have seen your bare ass before. Why so shy?\" \n\n\"Because I now have a huge tattoo of multiple X-Men on my butt and I don't like people seeing.\" \n\nSasha sat up, \"Really?\" \n\n\"Yes, I got one of London Bridge too, dumbass.\" \n\n\"Tease.\" \n\n\"Perv.\" \n\n\"Dude, I SWEAR I'm not looking. So who are you going as?\" \n\nSienna grabbed a pair of PJs and quickly changed into them. She looked over at Sasha, who, true to her word, had her hands over her eyes. \"Here's a clue: it's not 'who,' but 'what.'\" \n\n\"You're going as a cliff of insanity.\" \n\nSienna giggled but shook her head, \"Feeble. Guess again.\" \n\n\"Vizzini's cod piece.\" \n\nSienna laughed. \"That's gross. Nope. I'm wearing this,\" Sienna held up a pair of khaki pants, \"And this,\" up came a light brown jacket. \"And I'll need to borrow a khaki baseball hat of yours.\" \n\n\"You are going as... sand?\" Sasha was genuinely puzzled. \n\nSienna grinned with glee, \"I'm going to go as the container of iocane powder.\" \n\nSasha raised both of her arms, \"Wow. Yep. That's genius, Logan. I love it. You're brilliant.\" \n\nSienna jumped back on the bed, \"Thank you kindly. Now piss off back to your place.\" \n\n\"It's only ten o'clock! Why not finish the movie?\" \n\n\"Because Anastasia would blow a gasket.\" \n\nSasha frowned, \"Can you stop harping on what Anastasia would think? Stop obsessing about her for a second. Do you want to watch the rest of the movie with me or not? Simple question.\" \n\n\"I'm not obsessed about her, Sasha. I just don't like thinking about you having to grovel and scrape when the inevitable blow up happens.\" \n\n\"Good to know you have such a high opinion of me... I am able to stand up for myself, you know.\" \n\nSienna shook her head, frustration rising to the surface, \"I do have a high opinion of you. Which is why it sucks that you can only show up when your girlfriend is not around. Do you know how fucked up it is that you can't be yourself when Anastasia is in the same room as you? Do you even know that you aren't being yourself? It kills me to see you get totally extinguished by the conflagration that is your girlfriend. She sucks all the air out of the room. And you just run after her, meeting her every need, catering to her every whim. Why do you put up with it?\" \n\n\"Why don't you tell me how you really feel?\" Sasha shot back, \"I put up with it because... because relationships are hard work! And who are you to talk? You haven't dated anyone since Jordan what's-his-butt Senior year. Oh, maybe that blond dude from Labor Day weekend.\" \n\nSienna allowed herself a sarcastic chuckle, \"I'm not dating Pete. You don't talk to me for three years and you assume I've been dateless since Jordan Lee. And by the way, relationships are hard work, but they shouldn't be about one person dancing on a string that's being pulled this way and that by the other person.\" \n\n\"Hey!\" Sasha shouted, \"I know what I'm doing, ok? Enough with the relationship 101. And by the way, you stopped talking to me, not the other way around.\" \n\n\"Sasha, Anastasia doesn't make you happy. Maybe you can't see it because she has got that glamor-azzi thing going on! Relationships are about reciprocation. Does she reciprocate?\" \n\nSasha turned a deep, deep red, \"Uh... no... wait, what?\" \n\nSienna's eyes twinkled, \"I wasn't talking about sex you idiot...\" \n\n\"Whatever.\" Sasha pulled the beak of her baseball hat lower. \n\n\"Seriously. What I meant was: someone who doesn't give you any room in a relationship can't possibly make you happy.\" \n\n\"I'm tired of talking about Anastasia. She's not here right now. And you don't know a whole ton about what goes on between Anastasia and me, either. Enough with the judgy-ness.\" Sasha looked into Sienna's eyes earnestly for a moment. The two sets of blue eyes found each other, for the first time in a long while. \n\n\"I wasn't judging you,\" Sienna whispered. Sasha's eyes flickered for a second when she noticed Sienna's eyes start to tear. \n\n\"Oh, man, Sienna, I--\" Sasha began. \n\nSienna knew what Sasha had seen, and quickly collected herself. She felt stupid for fighting with Sasha. The topic was nothing new. \"This is why I stopped talking to you,\" she breathed out slowly, and looked back at her friend. \"Arguing about your girlfriend. It never changes anything. It's your life Sasha, I shouldn't have said anything in the first place. I'm sorry you thought I was judging you.\" \n\n\"Hey - Sienna...\" Sasha began. \n\n\"What?\" Sienna snapped, slightly more sharply than she intended. \n\n\"Do you trust me?\" \n\nSienna shrugged, \"Of course.\" \n\n\"I don't want to fight any more about Anastasia either, okay? Labor Day was awful and I'm sorry about it. I was so happy to finally see everyone, and it just didn't turn out the way I thought it would. A lot of it was my fault. But I don't want to get into that right now. I do want to say that I want us to be friends again. Like we used to be. Clean slate.\" \n\n\"Okay,\" Sienna frowned and changed tack, \"You know, all this time, I've been expecting your phone to ring, with Anastasia telling you about some emergency thing that only you can solve, and only you can solve in person.\" \n\n\"Anastasia is in California. And I shut my ringer off before I came over.\" Sasha let that sink in for a moment, \"I just wanted to spend tonight with you.\" \n\nSienna didn't really know what to say, so she did the thing she always did, and made a joke of it, \"Are you propositioning me? Because that could get you arrested in 12 states, you know.\" \n\nSasha blushed, images of Sienna in states of orgasmic bliss flashing dangerously in her head. \"Who's the perv now?\" She gave Sienna a playful shove. \n\nSienna reached for her laptop. \"Ok. Ok. Truce. Let's finish the movie.\" \n\n\"Which is what I suggested half an hour ago, by the way.\" \n\n\"Must you get the last word every single time? Living with you must be a nightmare.\" \n\n\"Don't knock it till you try it,\" Sasha said breezily. \n\n\"Never gonna happen. You can't cook. It's one of my non-negotiable criteria for a life mate: 'Must know how to cook.'\" Sienna stared at the monitor as the computer came back to life. She looked at Sasha, who had an unreadable expression on her face, \"Ready, Wolfy?\" \n\nSasha nodded and Sienna hit play. The movie started up again. Sasha's eyes were on the monitor, but she kept obsessing about Sienna's comment about cooking.\n\n[Westley]...I'm not saying I'd like to build a summer home here, but the trees are actually quite lovely... \n\n\"Does this mean you've been dating college guys who are whizzes in the kitchen?\" \n\n\"I've met a lot of guys who know more about making omelettes than you do.\" Sienna replied casually, feeling slightly guilty about her lie of omission. She didn't have the energy to talk about Sydney or Alex.\n\n\"I know how to make an omelette,\" Sasha knew she should let it go, but she couldn't. \n\n\"I'm very happy for you, now shut up and watch the movie.\" Sienna conceded the point only because she wanted to move off the topic as soon as possible.\n\nSasha leaned back into the bed so she was slightly behind Sienna. She watched her friend watching the movie. Sienna's sandy blonde hair was tucked behind her ears, and fell in soft waves around her shoulders. There was a shorter strand that fell over Sienna's brow, which was now knitted with concern as she watched Westley surrender to Count Rogen. Sasha longed to sweep her thumb along those brows, so she stuffed her hands into her pockets instead. A familiar wave of conflicted emotions made itself known: sadness in knowing her feelings for Sienna would never be reciprocated, joy in being alone with Sienna for the first time in god knows how long, wonder at her beauty, delight in her wit and smarts, pain with not being able to touch her the way she wanted to. Perversely, dating crazy possessive girlfriends had been helpful in keeping those feelings at bay. Anastasia was right in a way, it was obvious what was going to happen next. Sasha scrunched her eyes shut, remembering how Sienna had caught her staring -- twice -- earlier in the day. Oh, this next part is going to suck. It wasn't fun walking around in high school secretly pining for Sienna... and it ain't going to be fun now. ",
        "As the movie slid towards its conclusion, Sienna glanced at Sasha, who looked like she had fallen asleep, baseball hat tipped forward. \"Same old Sasha,\" Sienna muttered to herself, \"Conking out before the movie is over.\" \n\nSienna watched the end credits for a little bit, and feeling tired herself, moved the laptop onto the window sill. She pulled the covers up and curled up with her back to Sasha. She stared out of the window, listening to Sasha's steady breathing behind her. Just enjoy this before Anastasia comes back. It's like a nice long dream. We'll both wake up soon enough.\n\nChapter 6: The D\u00e9tente (Junior Year, 22nd Dec - Sunday)\n\nSasha woke up with a face full of blonde hair. As her eyes focused on her surroundings, she realized she was still in Sienna's room. Sasha vaguely remembered falling asleep; her eyes had been getting heavier when Westley was tortured in the Pit of Despair. And she had been aware of Sienna moving the laptop off the bed and settling in next to her. \n\nNow, Sienna was wrapped around Sasha and sleeping soundly. <br />\n\n\"I like waking up with you,\" Sasha said quietly. Sienna shifted her hand up until it rested in the middle of Sasha's chest. To Sasha, it felt perfect: it was as if Sienna had a quiet but unambiguous claim to her body. She struggled to process the collision of wish and reality. The imminent rupture between her and Anastasia only served to stoke the resurgence of Sasha's long unspoken desire for her friend. \n\nSasha took a deep breath and tried to get her heartrate down from Sienna's unintentional caress. Her thoughts were interrupted by a gentle buzzing. With her free hand, Sasha fished her phone out of her pocket and checked her messages. Nothing from Anastasia. The writing's on the wall, I guess. There was a new text from Erik wondering where she was and asking if they were still on for their morning run. \"Shit,\" Sasha rested the edge of the phone on her forehead, \"I forgot about that.\" \n\nSasha started to shift out from under Sienna. Sienna sighed and turned back towards the window. Sasha leaned in to her ear and said, \"Si, I've got to go meet Erik for a run. I'll see you later.\" \n\nSienna reached behind her and grabbed Sasha's arm, bringing it across her body. Here comes the dream again... Sienna froze. No, wait, this isn't the dream. This is Sasha's arm. She quickly let go and sat up. She blinked at Sasha, who started putting on her shoes.\n\nSasha smiled, \"Gotta go, Wolfy. Wanna come over for dinner tonight?\" \n\nSienna nodded, heart pounding. She didn't move until she saw Sasha jogging across the front lawn, pulling her sweatshirt over her head as she headed home. \n\n\"Thank god!\" Sienna said under her breath, and dove back under the covers. Two more seconds and Sasha would have witnessed me having that dream. That would have been so fucking embarrassing.  \n\nJust over an hour later, Sasha glanced up at Sienna's window as she passed the Logan's house at the end of her run. She smiled, happy to have finally found some time to spend with her friend.\n\n\"How was the run, kids?\" Mike James looked over the top of his paper as his children walked in. \n\n\"She kicked my ass, I'm going to go cry in the shower now,\" Erik grabbed a glass of water and trooped upstairs. \n\n\"Which route did you take?\" \n\n\"We went round Standard and up Haverford. Then all the way up Crown Hill....\" Sasha put her foot on the counter and started stretching her leg. \n\nMike let out a slow whistle, \"You guys weren't kidding around!\"\n\n\"Foot off the counter, honey, we put food there!\" Sasha's mom admonished. \n\n\"Morning darling,\" Maria said, giving Mike a kiss before turning to Sasha, \"And you! You didn't come home last night.\" \n\nSasha looked from her mom, to her dad, and back to her mom again. \"I fell asleep at Sienna's,\" she said simply, \"I told you I was heading over there.\" \n\nHer parents looked at each other, and turned back to Sasha. \n\n\"We watched a movie. We fell asleep. Why do you look so shocked? This is something that we have always done. Oh, hey mom, can you teach me how to make lasagna? Like the one with Nona's recipe?\" \n\n<br /> Maria leaned against the fridge and crossed her arms. \"Did aliens switch my daughter with a clone? You want to learn how to make lasagna with my mother's recipe? Is it delayed April Fool's or something?\" \n\nSasha shook her head, \"No, I'm serious, I want to learn.\" \n\n\"Ok. Sure. When do you want to learn?\" \n\n\"Can we make it for dinner tonight?\" \n\n\"Tonight? I suppose. Will you go out and get the ingredients?\"\n\nSasha nodded. \n\nMike put the paper down, \"Sasha, you hate cooking. Shouldn't you start with something simple? Like you know, cheese and crackers?\" \n\n\"I don't hate cooking. And I've watched mom tons. Ma, if you write down the ingredients, I'll go after my shower.\" \n\n<br /> \"Ok, honey. Do you want any breakfast before you go?\" \n\nSasha nodded and headed upstairs, \"Sure. Thanks mom.\" \n\nMike looked at his wife, \"Should I buy some extra fire insurance?\" \n\n\"Hey, my daughter wanting to learn a family recipe from me? I'll take it.\" \n\n\"Yeah, where did that come from?\" \n\nMaria thought about it for a moment, and she started grinning, \"Sienna's coming over for dinner tonight. That's got to be it.\" \n\nMike raised his eyebrows, \"They are a thing? The movie wasn't a movie? Do I even want to know?\" \n\n\"Dad, there's nothing to know,\" Erik had walked in and pulled up a chair at the table, \"Sienna told Sasha last night that Sasha was horrible in the kitchen or something like that. Sasha spent the whole run plotting to prove her wrong.\" \n\n\"It's like they are still 8 years old,\" Mike shook his head and went back to the paper.\n\nSasha finished up her shower and trotted downstairs. Her mother had set aside some toast and coffee. Sasha looked over the shopping list as she munched on her breakfast. \n\nHer mother pointed at the list, \"Go get the other stuff first. Then go to Giacetti's for the pasta, they don't open until 11 today.\" \n\nSasha nodded and gulped down the coffee, \"Okay. I'll probably grab lunch with a couple friends, go to Giacetti's, then come home. See you later.\" \n\nMaria nodded as her daughter kissed her goodbye. \n\nThe moment he heard Sasha's truck start up, Mike piped up from the living room, \"George said they were just hanging out last night.\"\n\n\"You called George? What else did he say?\" Maria quickly made her way into the living room.\n\n\"Oh my god, you guys are terrible.\" Erik shook his head, \"Leave them alone.\" \n\nMike's ears went slightly pink, \"He said he was going to call me if I hadn't called first. So it's not just me. This is the first time they've spent time together in a while. It's notable.\" \n\nErik pretended to bang his head against the wall, \"I feel like I'm in some weird reality show-Gossip Girl mash up. Except it's got my parents in it. Guys, Sienna is straight.\" \n\nMaria frowned, \"Erik, I have it on good authority that it's not true.\" <br />\n\n\"Mom, have you considered the fact that your 'good authority' might just be engaged in wishful thinking?\" \n\n\"It is not!\" Maria said somewhat unconvincingly, and then, almost as an afterthought, \"Erik, go clean up the kitchen.\"\n\nMike laughed, \"Don't bother -- our worldly possessions will probably go up in flames tonight. Sasha in the kitchen... what a concept!\" \n\nTo Mike's great surprise though, Sasha proved to be a diligent and quick study. The afternoon was basically a flurry of activity as mother and daughter moved through the steps of getting dinner ready. It brought Maria no small amount of joy to share the delight of preparing a full on Italian feast with her daughter. Erik, the long-time cooking enthusiast, was banned from the kitchen. The only point of contention came when Sasha swore everyone to secrecy, something her family found very hard to do as dinner progressed. \n\n\"This was unexpectedly good!\" Mike said as he looked at Sasha at the end of the meal. It earned him an icy silence and pointed glare. \n\n\"Oh I had no doubt at all!\" Sienna began, \"Maria, thanks for dinner. It was delicious, as usual -- I always love your lasagna.\" \n\nSasha tipped her hat up and leaned back in her chair, \"Did you now? How much did you love it?\" \n\n\"Don't be a jerk, Sasha, I mean it. Maria, you've got mad skills. Too bad it didn't rub off on your daughter!\" \n\nMaria shook her head thoughtfully, \"Sasha has potential...\" \n\nSienna laughed as she got up, \"I'll believe it when I see it... I'll go help Erik with the dishes.\" \n\nSienna grabbed the rest of the dishes from the table and brought them into the kitchen, still chuckling to herself. \n\n\"What was so funny?\" Erik's face was stony with concentration as he tried to cram the entire meal's worth of dishes into the dishwasher. \n\n\"Sasha. Cooking. Your mom just said she had potential,\" Sienna dumped a handful of silverware into the dishwasher basket, \"That's like saying people can live on Mars... theoretically possible, but zero practical chance of happening in reality.\" \n\nErik shrugged, \"Normally I'd side with you, but I say the jury is out on that one.\" \n\n\"Traitor,\" Sienna gave him a friendly swipe across the shoulder. \n\n\"I call 'em like I see 'em,\" Erik started rearranging the plates, \"Sasha is more a 'won't cook' rather than a 'can't cook.'\" \n\n\"A distinction without a difference,\" Sienna picked up a stalk of celery and started munching on it. \n\n\"What are you talking about?\" Sasha sauntered in, picked up her own stalk of celery and bit into it. \n\n\"Whether or not wearing a chef's hat is in your future.\" Sienna mumbled, trying to talk and eat at the same time.\n\nSasha snapped her fingers, \"Hat! I almost forgot -- I'll go get that one you wanted for tomorrow night.\" \n\n\"You're definitely going to the party?\" Erik asked, his face breaking into a big smile. \n\nSienna shrugged, \"Not sure yet.\" \n\n\"We need more girls -- Jon said we are on our way to looking like a poorly attended pirate's convention.\" \n\nSienna crossed her arms, \"Geez, Erik, when you put it that way, it sounds so irresistible!\"\n\nSasha sighed, \"Do you want the hat or not?\" \n\n\"Will you go as my date?\" Erik asked. Sasha stared at her brother as a sharp flash of envy hit her right in the stomach. \n\nSienna smiled playfully, \"Will you protect me from all the crazy six-fingered men who show up?\" \n\nSasha held her breath. \n\n\"But of course, m'lady!\" Erik bowed gallantly. \n\n\"Then I accept,\" Sienna curtsied. \n\nSasha turned and stomped upstairs. Any desire she had for attending the party now flipped to outright aversion. It was not lost on Sienna that Sasha had left the room in a huff. She looked at Erik, who threw his hands up with bewilderment.\n\n\"What was that obnoxious display of passive-aggressiveness about?\" Sienna asked as she walked into Sasha's room. \n\nSasha nonchalantly lobbed a tan baseball hat towards Sienna. Sienna caught it, took one look and said, \"Are you out of your effing mind?\" \n\nSasha looked at her with as much innocence as she could muster, \"What?\" \n\nSienna turned the front of the hat towards Sasha, \"You want me to wear this Yankees hat to The Pool Hall tomorrow night?! Are you trying to get me killed?\" \n\n\"I don't think I like what you are implying about Red Sox fans, Sienna. And don't you have Prince Erik downstairs to defend your honor?\" \n\n\"Oh, is that what the hissy fit was about?\" Sienna leaned against the door frame, \"Now who's obsessing about someone else's potential dates?\" \n\n\"I thought you had better taste in men, Sienna.\" \n\n\"And I always thought you had better taste in women, Sasha,\" Sienna reflexively tossed back. \n\nWhen Sasha failed to respond, Sienna knew she'd hit a little too hard below the belt. Pivoting back to the issue at hand, she threw the Yankees hat at Sasha, \"It's a stupid Princess Bride costume party in the middle of suburban Boston! It's your brother! It's just harmless fun! There's nothing better to do tomorrow night so why the hell not?\" \n\n\"I can think of something better to do,\" Sasha countered. \n\n\"Next time tell me about it before someone else asks me to be their date for a costume party at the local dive! Now please lend me a hat that won't get me killed.\" \n\nSasha thrust a beige Carhatt hat into Sienna's hands. \n\n\"Thank you,\" Sienna said. She adjusted the hat and put it on. \n\n\"Do you need a ride over there tomorrow night?\" \n\n\"I'm taking mom's car, but thanks for offering.\" \n\n\"Sorry about the Yankees hat, it was infantile.\" \n\n\"Not one of your shining moments, Wolverine, but you are forgiven. Thanks for having me over tonight.\" Sienna smiled and turned to leave. Sasha sat thinking for a moment, before suddenly jumping up. \n\n\"Hey Sienna!\" Sasha ran out and leaned over the stairwell. Sienna looked up, \"What?\" \n\n\"I'm really glad you liked the food tonight,\" Sasha grinned. \n\nSienna frowned in confusion, \"You are a weirdo, you know that?\" \n\n\"Takes one to know one.\" \n\n\"Jerk.\" Sienna stuck her tongue out at Sasha before quickly bounding down the rest of the stairs.\n\nSasha walked back into her bedroom, spun on her heels and fell backwards onto her bed. She loved my food! \n\nChapter 7: The Costume Party (Junior Year, 23rd Dec - Monday) \n\nSienna was trying to get the bartender's attention when she sensed someone approach. She turned and sighed. Oh god. Not this again.\n\n\"Hey!!!! Are you a stick insect?\" The half-drunk frat boy asked for what seemed like the fiftieth time. He had asked that question when the party started, and had returned repeatedly to Sienna as the evening wore on, asking the same question as his blood alcohol level steadily climbed.\n\n\"Yes,\" Sienna finally said, hoping that this change in tactic would end the conversation once and for all. \n\n\"I thought so,\" the frat boy nodded, \"I knew it the moment I saw you. STICK INSECT!!!!\" The unexpected shouting caused Sienna to jump. It also caught Erik's attention. \n\n\"Everything ok over here?\" \n\n\"THERE'S A STICK INSECT AT THE BAR! HAHAHAHAHAHAHA!\" \n\n\"Okay, buddy,\" Erik patted the guy on the shoulder, \"Good one. I think you came with Jon's friend Brody, right? Okay, let's get you back over there.\" \n\nSienna signaled to the bartender to close up her tab. \n\n\"Sorry about that Sienna, I got caught up with the trivia thingy over there,\" Erik gave Sienna a quick squeeze on the arm. \n\n\"He was fine, just got a little loud at the end. Was he even in costume?\" \n\n\"I think he intended to be the Man in Black.\" \n\nSienna raised her eyebrows, \"If that's the case, he clearly ran out of money, motivation, and fabric...\" \n\n\"Hey, are you leaving?\" Erik asked as the bartender slid the bill over to Sienna. \n\n\"I signed up to do a Christmas Eve swim practice tomorrow morning at the Y. Can't stay out too late. You ok getting home?\" \n\nErik nodded, \"I'm going to ride with Grasser. See you tomorrow, thanks for coming tonight. Sorry about the stick insect guy.\" \n\nSienna gave Erik a big hug, \"You were on fire with the trivia tonight. You would have given Sasha a good run for her money if she'd been here.\"\n\n\"Her loss, she probably bagged this because she knew she'd lose to me. Here, let me walk you out.\" \n\nAs Sienna drove off, Erik ran back inside, the cold having eaten through his thin pirate shirt. He almost tripped over Jon, who was slumped over a booth by the entrance with his legs sticking out. \n\n\"Dude -- what happened?\" Erik knew the deal before Jon could muster an answer. His friend was clearly done for the night. \"Oh come on, man, this is NOT cool.\"\n\n\"Water...\" Jon warbled. \n\nAfter a number of failed attempts to get a ride home, he dialed Sasha's number and flinched in anticipation of her displeasure, \"Hey Sasha... Jon did not manage to maintain his designated driver status. We need a ride.\" \n\n\"Why don't you drive him home?\" \n\n\"Yeah, except that doesn't get me home. His dad needs the car in the morning, so I'd need a ride back from his place if I did that. I just called his girlfriend and she won't get here for a while. So come get me. Please?\" \n\n\"Have Sienna drive you -- she went in her mom's car.\" \n\n\"She already left. Now get your ass out of bed and come get me.\" \n\nSasha looked out her window, and there in the Logan's driveway was Barbara's car. Sasha kicked herself for not noticing Sienna's return. \n\n\"Fine,\" Sasha heaved herself off her bed and got dressed. By the time Sasha got to The Pool Hall, it was almost midnight. She spotted Erik at the bar with Hannah and Kristen. \n\n\"Fancy seeing you here,\" she said sarcastically. \n\nHannah raised her hands in resignation, \"There are only two places worth going to in this part of town -- this place, and Jerry's next door. And two guys got in a fight over there, so we moved over here.\" \n\n\"Do you need a ride back home too?\" \n\nKristen nodded hopefully, \"We were going to call a cab... but we'd love a ride. You only need to make one extra stop -- Hannah is staying with me tonight. And my house is literally 10 minutes away from yours.\" \n\n\"Fine, but you guys owe me,\" Sasha smiled, \"Let's go. Where's Grasser?\" \n\n\"He's in the bathroom worshipping the porcelain throne. His girlfriend's on her way. She'll take care of his transportation logistics.\" \n\n\"Nice ride, Sasha,\" commented Kristen as they piled into the BMW. \n\nErik laughed, \"This is dad's car. Sasha drives a pick-up that's older than any of us. You'd be freezing your asses off on the flatbed if she had rolled up in that antique.\" \n\n\"Cost me $900 and it runs like a dream. Sienna found it for me, actually.\" \n\n\"Does Anastasia know that?\" Erik teased, \"I'm surprised she agrees to ride in that thing.\" \n\nSasha scoffed, \"Not for much longer. But she did flip out when I told her how Sienna found it. I mean, never mind that Sienna's (a) my oldest friend, (b) straight, and (c) not -- \" \n\n\"What do you mean 'not for much longer?'\" Erik jumped in. \n\n\"What do you mean 'she's straight'?\" Hannah interrupted. \n\nSasha ignored Erik and looked in the rear-view mirror, \"Hannah, what do you mean what do I mean?\" \n\nHannah sat forward, \"She hasn't told you about Sydney? Or Alex?\" \n\nSasha rolled her eyes, \"Sienna doesn't tell me about her boyfriends anymore.\" \n\n\"Sydney and Alex aren't boys, Sasha,\" Hannah blurted out. \n\n\"WHAT?\" Sasha and Erik both turned and looked back at Hannah in shock. \n\n\"Eyes on the road, Sasha!\" Kristen shouted. \n\nSasha's brain had turned to mush, so she did the only sensible thing at that moment, which was to pull into the first gas station she saw. As the car idled in a parking spot, she turned to Hannah, \"Start over. Who are these people? I heard her talk about Alex freshman year, but I thought it was some guy she was into.\" \n\nAs Hannah explained, the knot in Sasha's stomach grew. The knot persisted after she dropped off Kristen and Hannah. When she finally pulled into her driveway and killed the engine, she turned to Erik, \"Why did you ask Sienna out on a date tonight?\" \n\n\"Oh shit, I... Sasha, I'm sorry, did that bother you?\" \n\n\"No!\" Sasha said, just a little too quickly, \"I was just wondering, that's all.\" \n\nErik exhaled deeply, \"I just thought it'd get her to agree to go to the party -- nothing more. And I missed the three of us hanging out. I kind of wanted to take advantage of Anastasia not being here to do that. You pissed all over that plan when you decided not to go, obviously.\" \n\nSasha looked across the street to the Logan's house. The house was dark. \"I'm going over to talk to her.\" \n\n\"Sash, wait,\" Erik grabbed her arm. \n\n\"What?\" \n\n\"Do you even know what you are going to say? \n\n\"No. But it'll be something along the lines of asking her why she didn't tell me about Sydney or Alex or any of it.\" \n\n\"Why? She must have had her reasons. Storming in there at,\" Erik pulled out his phone, \"Quarter of one in the morning is not good form, buddy.\" ",
        "Sasha took a deep breath and slumped into the seat, \"I wish she'd told me. Then I'd...\" \n\n\"You'd what?\" Erik leaned forward when Sasha didn't answer, \"I knew it. You have fee--\"\n\n\"Don't finish that sentence.\" <br />\n\nErik grinned, \"You have fee\u2014\" \n\n\"SHUT YOUR TRAP,\" Sasha rested her forehead on the steering wheel, \"Erik, don't.\" \n\n\"Why not? What's wrong with saying you have feelings for Sienna?\" \n\n\"Lesbian falls for straight best friend. That story line NEVER ends well.\" \n\n\"Yes, except now you know Sienna isn't straight. Kind of changes things up, right?\" \n\n\"Ok. Lesbian falls for uninterested best friend. Same difference.\" \n\n\"How long?\" Erik asked. \n\nSasha waved her hand dismissively and started getting out of the car. \n\n\"Sasha... \" \n\n\"No -- don't do the pity party thing, ok? I'll figure out Sienna after I sort things out with Anastasia.\" \n\nErik made a face, \"Ah, your 'it's almost over' comment?\" \n\nSasha nodded, \"It's pretty much over. She actually broke up with me before she left...\" \n\n\"What?\" Erik gave Sasha a shove as she tried to put her key in the door, \"You've been holding out on me? What the fuck?\" \n\nSasha shoved back, \"It's not all about you, asshole. I still have to move my stuff out of her place... so the final nail is almost in the coffin. And please don't tell anyone -- I really don't want to be the downer at Christmas.\" \n\n\"I think you are over-estimating how the news might make people sad,\" Erik dodged a blow from Sasha as they walked into the house. \n\nChapter 8: The Dinner (Junior Year, 24th Dec - Monday) \n\n\"This was quite a spread -- Barbara and George, you guys have outdone yourselves.\" Mike James stretched as he surveyed the table. \n\n\"Not over yet,\" Sienna said as she reached for a dish. \n\nErik looked at her in awe, \"How are you still eating? Didn't you have, like, eight helpings of everything already?\" \n\n\"No complaints from me,\" Barbara Logan said, \"Less leftovers... you guys should bring some stuff home, we made way too much.\" \n\nSienna shoveled more mashed potatoes onto her plate, \"It's the peak of swim season. My metabolism is on hyperdrive.\" \n\nMaria laughed, \"And here I was thinking that you'd lost weight, Sienna! You are getting enough to eat over there in New York, right?\" \n\n\"Definitely eating enough.\" Sienna smiled good-naturedly. \n\n\"So how much are you swimming these days?\" Mike asked. \n\n\"Five hours a day if we do doubles. It's a little nuts. But we shave and taper into February, so the yardage decreases until Nationals.\" \n\nMike raised his eyebrows and shook his head, \"That is a little nuts. What's 'shave and taper'? You didn't do that for age group, did you?\" \n\nSienna shook her head, \"No, we didn't. Taper is when we drop our yardage -- uh, that's how many yards we log per practice -- in a managed pace between now and February. It's a way to rest the body without losing stamina. And shaving is just shaving. We shave everything. Improves the aqua-dynamics.\" \n\nErik nodded, \"I dated a swimmer once... The pre-shave period was, um, interesting...\" \n\n\"What are you talking about?\" Sasha had been talking to Sienna's dad and caught the tail end of Erik's comment.\n\n\"Hirsute swimmers and the people they date,\" Sienna said with her mouth full. \n\nSasha, still wounded by the knowledge that Sienna had been keeping things from her, scoffed, \"Nice S.A.T. word Sienna. How long have you been waiting for an opportunity to use that in a sentence?\" \n\nSienna parried easily, \"More often than you'd think. We have an unusually large number of hairy people on our team this year. You know, like you, Sasha. Wild, unbridled hair, not a lot of disciplined maintenance.\" \n\nSasha crossed her arms in a huff. \n\nMaria clucked her tongue approvingly, \"You see, Sasha? Sienna agrees with me. You stuff all that hair under the hats. To what end?\" \n\n\"I like my hair the way it is.\" \n\n\"Why not just tie it up?\" Maria challenged. Sienna knew of Maria's deep hatred for Sasha's vast inventory of hats, and found it exceedingly amusing to watch Sasha squirm. \n\n\"It's not long enough to tie up.\" \n\n\"Then cut it, darling! SNIP! Nice and clean,\" Maria made an exaggerated scissor motion with her fingers. \n\n\"Then I'll look like a boy.\" \n\n\"You already look like a boy. What is it you young people say these days? You should own it!\" Maria nodded emphatically. \n\nSienna gave a lopsided grin, \"You should cut it. I think you'll look good that way.\" \n\n\"Really?\" Sasha peered at Sienna, waiting for the sarcastic punchline that usually followed such statements. \n\nSienna blushed a little under Sasha's intense gaze. Why did I say that?  She nodded casually, \"Sure, better than the perpetual frat boy look you got going on.\" \n\nErik got up and pulled Sasha's baseball hat off as he walked past. \n\n\"Hey!\" \n\n\"It's mine now, loser,\" Erik sang as he jammed the hat on his head and headed to the bathroom. \n\n\"Arrrghhh!\" Sasha ran her hands through her hair in frustration. Her wavy brown hair fell in a rakish mane around her fingers and over her face. Sienna gasped. Maria leaned over and ruffled her daughter's hair affectionately, \"People would pay good money for hair like this.\" \n\nOh, shit. Sienna felt her face redden as a flash of recognition breached the barrier between conscious and subconscious. A sea of obscenely inappropriate thoughts from that dream, now clearly of her and Sasha, bloomed with fervor in her head.\n\nSienna grabbed her plate and moved quickly into the kitchen. \n\n\"Honey, are you okay?\" Barbara Logan asked with concern. \n\n\"Yup. I'll be fine. Just not feeling well all of a sudden.\" \n\nSienna dumped the dishes in the sink and, after quick cursory goodnights to the Jameses, headed upstairs. In the dark solitude of her room, her mind broke open with a torrent of images and memories. Of Sasha. And of the two of them. \n\nBeth Reilly had not been far off: Sienna and Sasha had been like peas in a pod since even before kindergarten. She and Sasha, Sienna announced one day, were going to get married. Nobody batted an eye. Except for Amanda Whitaker, who decided to throw Sienna's backpack up a tree out of pure spite. Sienna ran to get a teacher's help but Sasha had other ideas. She climbed up the tree to retrieve it, but slipped and fell, cutting her forehead open in the process. There was blood everywhere, and the teachers and the school nurse were beside themselves with worry, but Sasha was grinning like an idiot as she held onto Sienna's backpack triumphantly. My Sasha. That's my Sasha.\n\nAnd then more recently a couple nights ago, Sienna woke to find herself snuggled into Sasha's arms at two in the morning. She had debated whether to move to the sofa in the living room, but she couldn't help but stay. She listened to Sasha's heartbeat and allowed herself to be lulled back to sleep by the comfort of being smashed up against her friend. In many ways, it seemed so obvious now. Of course it was Sasha. But the dream becoming reality? Kissing Sasha? Having sex with her? Loving her? Sienna almost couldn't bear thinking about all of that. It would be like looking directly at the sun.\n\n\"Sienna, you okay?\" Sasha knocked loudly.\n\n\"FUCK!\" Sienna shouted, \"What is it with you and scaring the shit out of me?\" \n\nSasha stepped into the room, \"Sorry... sorry... I knocked!\" \n\n\"I'm fine, just got a little, uh dizzy.\" Sienna sat on the bed and hugged herself tight, shivering with adrenaline. \n\nSasha unzipped her sweatshirt, \"Here. Take this.\" \n\nSienna frowned, \"Then you'll be cold. No, I'm fine.\" \n\n\"I'm hairy. I can take it.\" \n\nSienna laughed and shook her head. \"I'm fine, really... and you aren't hairy.\" \n\n\"Now that you've made that retraction, I won't sue you for defamation.\" \n\nSienna chuckled, \"I don't have any money. Any award would have been paltry.\" \n\n\"I guess that means you are free to spread slander and gossip about me as much as you'd like.\" \n\nSienna glanced at Sasha, \"What possible slander could I come up with? You're perfect.\" \n\n\"Yeah, right!\" Sasha's brain had stalled on the words 'you're perfect.' The sarcasm stung more than usual with last night's revelations. Certainly not perfect enough for you... I'm not even on your radar that way, am I?<br />\n\nSienna burrowed into her bed, \"I think I just need to rest. Maybe I overdid it at practice or something.\" \n\n\"You sure you are ok?\" Sasha sat on the bed, drawing up the covers for Sienna. \n\n\"Yes,\" squeaked Sienna, her heart galloping along now because of Sasha's proximity. \n\n\"Okay. Good night, Sienna.\" \n\n\"Good night, dork.\" \n\nChapter 9: The Separation(s) (26th Dec - Thursday)\n\nSasha looked at Erik in complete confusion as she talked to Sienna on the phone. \"I don't get it. You said you'd meet us here at the restaurant? It's after 1:00.\" \n\n\"Not feeling too good. Sorry. You and Anastasia have fun, ok? Probably better that I'm not there for the reunion anyway. You know, third wheel and all that.\"\n\n\"Anastasia?\" Sasha suddenly realized the misunderstanding, \"It's just Erik and me. I'm seeing her later but not until way after lunch. Get your butt over here!\" \n\nSienna felt a lump in her throat, \"I really don't feel good Sasha. I'm just going to try and sleep it off.\" \n\n\"Logan, you okay?\" Sasha heard an unfamiliar wobble in Sienna's voice. \n\n\"Yup. Fine. Sorry I flaked.\" \n\nBefore Sasha could say anything else, Sienna hung up. \n\nBarbara overheard part of the conversation and stuck her head into Sienna's room. \n\n\"I thought you were going out to lunch today? With Sasha and Erik? Maria mentioned it this morning.\" \n\nSienna shook her head, and tried to avoid her mother's eyes. \n\n\"Sienna.\" \n\nSienna looked up. The whole saga had come spilling out on Christmas morning; Sienna had been moping around and her mother eventually coaxed it out of her: the realization that Sasha was more than a friend to her, the brick wall that was Anastasia, the painful idea that her feelings wouldn't be reciprocated.\n\n\"Why are you sticking your head in the sand and hiding in here?\" Barbara's tone was gentle but firm. \n\n\"I'm not. Just don't feel up to going out.\" \n\n\"Avoiding Sasha will not make this go away, you know,\" Barbara said. \n\n\"True, but it'll hurt less.\" Sienna looked at her mother and smiled bravely. \n\n\"You don't know that, honey.\" \n\n\"Yes I do. Sasha goes after women who are so not like me. She--\" Sienna's phone started buzzing. \n\nSienna picked it up, and threw it back onto her bed, \"Sasha fucking James. STOP calling me!\" She shouted at the phone. \n\nBarbara crossed her arms and fixed Sienna with her best glare, \"How is ignoring Sasha's calls and standing her up for lunch not sticking your head in the sand?\" \n\nSienna looked at her phone and rolled her eyes.\n\n\"Honey, talk to her. You owe her that. And you owe yourself that.\" Barbara walked over and kissed the top of Sienna's head. \"And just so you know, sticking your head in the sand like this is exactly how you become a crazy spinster shouting at the rain.\" \n\nSienna shook her head, \"I can't talk to her.\" \n\n\"Sweetheart,\" Barbara turned to leave, \"You're overthinking it. Talking is better.\" \n\n\"Sasha and I don't know how to talk anymore. We just argue about Anastasia.\" \n\nBarbara smiled gently, \"Stop making excuses. You both know how. It's just that neither of you wants to. It's infuriating to witness, honestly.\" \n\nSienna stuck out her bottom lip and scrunched up her face in protest as her mother closed the bedroom door. Sienna picked up her phone and read Sasha's text. {SJ} So why did you really flake on lunch? Simple question.\n\n\"Why indeed,\" Sienna muttered as she typed back: {SL} I told you. Wasn't feeling well. \n\n\"And when I say 'not feeling well' I mean the fact that you are with Anastasia the Terrible,\" Sienna laughed cynically as she continued talking to herself, \"Thus begins my slow descent into madness. First, I realize I have a thing for Sasha, probably have had for years. Then I realize it's actually caused me to not ever have a real relationship. Now, I'm breaking up my friendship with her because she is too busy chasing after the Tsarina.\" \n\n{SJ} Thought we were going to try the clean slate thing?\n\n{SL} Changed my mind. Just keep things the way they are. Seems to be working for you.\n\n{SJ} WTF does that mean?\n\nSienna took a deep breath. \"Bye, Sasha,\" she said as she typed. {SL} Means I wish you all the best with A. I'm done fighting. Go and be happy with her.\n\nFor a good five minutes, Sasha didn't write back. Sienna just stared at her phone and tried to hold the tears back. \"Ok,\" she said, \"Just figure out a way to move on. Learn from the Alex debacle. It's not real. Just move on...\" \n\nThe phone in Sienna's hand vibrated once more. {SJ} Meet me at my place in Boston tomorrow night? We need to talk. Just you and me. \n\n{SL} So talk.\n\n{SJ} Too much to tell. Not over text. Dinner tomorrow? 7p? \n\nSienna bit her lip. {SL} Can't. Taking earlier train back to NYC. \n\nSasha frowned. \n\n\"No dice?\" Erik asked. \n\nSasha nodded, \"She's going back to NYC early.\" \n\n\"Call her now and tell her what's going on, Sasha.\" \n\nSasha pursed her lips, \"I want to tell her in person. This doesn't seem like something to do over the phone.\" \n\n\"Go talk to her now!\" \n\n\"Not enough time. I have to meet Anastasia in an hour.\" \n\n\"So when are you going to tell her?\" \n\nSasha thought about it for a moment, \"Tonight. After Anastasia officially dumps me.\" \n\n\"That's a hell of a one-two punch.\" \n\n\"I'm a glutton for punishment.\" Sasha growled. \n\nErik smiled sympathetically, \"Deep breath. It'll be okay.\" \n\nRemembering Erik's words later that afternoon, Sasha sucked in a lung full of air before walking into the lobby of Anastasia's apartment building. She greeted the doorman and stepped into the elevator. When she got to Anastasia's apartment, she inserted her key and attempted to turn it. It wouldn't move. What the fuck!? She tried again. The key wouldn't work. She rang the doorbell and waited. \n\nSasha didn't hear anything at first, but then heard footsteps from inside the apartment. The door was unlatched and opened. \n\n\"You changed the lock?\" Sasha was utterly bewildered. \n\nAnastasia shrugged, \"Didn't want you coming in here and going nuts while I was gone.\" \n\n\"Wow.\" Sasha was speechless, \"Wow.\" \n\n\"Oh, don't act all wounded.\" \n\nSasha spotted a cardboard box by the front door. She kicked at it, \"Mine?\" \n\n\"It's everything. Believe me, I was meticulous.\" \n\nSasha dug through the box, \"Where's my Michigan baseball hat?\" \n\n\"You mean your hat with 'Wolverines' on the back? It was so threadbare it was totally falling apart. I threw it out.\" Anastasia tossed her hair and checked her watch. \n\n\"Wow,\" Sasha said again, \"Is this how you are going to play this?\" \n\n\"What do you mean? I'm not playing anything.\" \n\nSasha let out a long breath, \"You threw out my favorite hat. You packed everything else. What's up with that?\" \n\n\"What's so special about a putrid yellow hat with the word 'Wolverines' on the back?\" Anastasia stared at Sasha, her voice dripping with sarcasm. \n\n\"Sienna gave it to me,\" Sasha snapped, \"And Sienna is special to me, so that hat is special to me.\" \n\nAnastasia froze. She had not expected that reply. \"Finally,\" she said bitterly, \"the truth.\"\n\nSasha frowned, \"The truth? The truth is that because I wanted to make this work with you, I probably screwed up my friendship her...\" \n\n\"Couldn't have happened to two nicer people,\" Anastasia cut in snidely. \n\n\"... and I'm going to do everything I can to fix it,\" Sasha stared defiantly at Anastasia, \"because she is worth it.\" \n\nAnastasia opened the door, the fight gone out of her, \"Just go, Sasha.\" \n\nSasha grabbed the box. She turned back towards Anastasia as she stepped into the hallway. \n\nWithout another word, Anastasia slammed the door shut. \n\nSasha stood stock still in the hallway, holding her box of belongings. There's no coming back from that one. The sadness she felt over the end of the relationship was increasingly blunted by her eagerness to move on with mending things with Sienna. Sasha sighed, and started walking towards the elevator. The moment the elevator got to the lobby level, she strode quickly towards the entrance.\n\n\"Miss James!\" \n\nSasha turned and saw one of the doormen coming out of a storage room, \"Hey Ben!\" \n\nBen handed Sasha a plastic bag, \"Johnny saw this poking out of one of the garbage bags in the trash room. Miss Zolkin must have thrown it away by mistake. We've been keeping it for you. I saw you coming back down in the elevator, so I went to get it.\" \n\nSasha lowered the cardboard box to the floor and took the plastic bag. Inside it was the Michigan hat she loved so much. \"Ben! Wow. Thank you!\" <br />\n\nBen looked at the box, \"Moving day?\"\n\nSasha placed the hat carefully in the box and picked it back up again, \"I over-stayed my welcome.\" \n\n\"I'm not supposed to say this, but don't take this personally,\" Ben pointed to the box, \"Let me put it this way, this ain't the first time Johnny's fished something out of Miss Zolkin's trash and returned it to its rightful owner, know what I mean?\" \n\n<br /> Sasha smiled, \"You are a good friend, Ben. I'll miss you. Thank Johnny for me and tell him I think he should go work for the NSA or something -- he's missed his calling.\" She shifted the box slightly and shook Ben's hand.\n\nBen winked, \"Nah, he loves the melodrama of a big condo like this. The kind of shit we see will blow your socks off!\" \n\nSasha laughed, and walked to her truck. She dropped the box off at her apartment in Cambridge and then drove home. A conversation with Sienna was foremost on her mind. Even with the little time she spent with Sienna over Christmas, Sasha knew what she wanted: get the friendship back onto solid ground, and then confess her feelings. Sienna may never love her back that way, but hiding it hadn't helped any one. \n\nShe went straight to Sienna's house. Barbara Logan opened the front door, having seen Sasha's truck pull up. \n\n\"Hello, Sasha.\" \n\n\"Hey! Is Sienna upstairs?\" \n\nBarbara shook her head, \"She took the three o'clock train back to New York.\" \n\nSasha went numb. \"What? Why?\" \n\n\"She said she had Med School stuff to take care of. She didn't tell you?\" \n\nSasha looked down and shook her head. She took a breath and looked Sienna's mom in the eyes, \"She doesn't want to be friends anymore, does she?\" \n\nBarbara leaned against the door frame, and chose her words carefully, \"It's not what you think, Sasha. You guys need to talk.\" \n\nSasha rubbed her eyes, \"That's what I came over for.\" <br />\n\n\"Keep trying, sweetie.\" Barbara pulled Sasha in for a hug, \"She misses you too. It might not feel like it, but she does.\" \n\nLater that night, Sienna dropped her bags in her room and stared at her phone, which had been ringing incessantly over the course of her train ride to New York. \"Jesus, Sasha, you are worse than a telemarketer with no people skills!\" She shouted at the phone. \n\nThe phone vibrated again and Sienna opened the incoming text. {SJ} Are you avoiding me?\n\nSienna let out a jagged breath as she typed: {SL} Weather wasn't agreeing with me. \n\n{SJ} That makes zero sense. \n\nSienna scoffed. Before she could reply, Sasha sent another text.\n\n{SJ} I know you don't want anything to do with me, but it doesn't mean I'm ok with you disappearing like that. \n\n\"Wow Sasha, you really don't get it, do you?\" {SL} Sorry, that's your problem, not mine.\n\n{SJ} Fair enough. I'll fix it on my own then. Good night Sienna.\n\nSienna read Sasha's last message over and over again. \"What the hell does that mean, you raving lunatic?\" "
    ],
    "authorname": "careythomas",
    "tags": [
        "lesbian friend",
        "lesbian coed",
        "lesbian college",
        "lesbian romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/looking-at-the-sun"
}