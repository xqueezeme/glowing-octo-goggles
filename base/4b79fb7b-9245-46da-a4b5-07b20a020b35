{
    "title": "Kosovo Syndrome",
    "pages": [
        "Ten years after I finally worked up the courage to make a profile on Literotica, here I am with another story. It wasn't always smooth sailing. I had some embarrassingly bad early efforts. There were poorly written stories with typos, grammatical mistakes, bland characters and ridiculous plots. I tried and tried again until the Internet took pity on me and gave me a red H. Looking back, I'm thankful for those early efforts, terrible as they were. They remain as a testament to trying over and over again.\n\nMy output has tapered off considerably from what it was a decade ago when I could put out a story a month, to struggling to put together a decent story a year now. So, I hope the wait was worth it and ten years of trying with mixed results have finally yielded something worthwhile. Thanks to all my readers, old and new who have stuck with me so far, despite all the ham-handed plots and the abandoned storylines.\n\nA massive vote of thanks to my editor duo of norafares and Bramblethorn, and my beta reader, EditorAlix. If you have not read their work yet, you're missing out.\n\nDISCLAIMER : All events in the story are fictional. Any similarities to real-life people, corporations, or incidents are merely coincidences. All characters involved are adults. There is graphic violence ahead.\n\n<p align=\"center\">* *</p>\n\nThe first thing Heather noticed about the man who opened the door of her vehicle was the machine gun he had pointed in her direction. In all fairness, it was the most important part of her predicament, much more so than his pockmarked face.\n\nHe barked at her, not that Heather understood a word of it. Finally, realising his ineloquent pleas were not having the desired effect, he reached inside and yanked her out by her hand. Heather saw a few more men waiting outside, all similarly armed and looking menacingly at her.\n\n\"Look, gentlemen, will the one of you who knows English tell the others that it is a terrible idea to kill an American citizen on foreign soil?\"\n\nHer statement led to a round of heated discussion among the men around her. She reached into her suit. This caused a brief flutter and all the men trained their guns on her again.\n\n\"Relax, I just need a smoke. I'll be right here if you need me.\"\n\nShe lit up one of the remaining cigarettes in her pack and sat down on the open seat. The crisp sunshine beat down on her from the nearly cloudless blue sky. It was neither too hot nor cold, a happy medium that her fellow New Yorkers would spend extravagant amounts of money to vacation to.\n\nAll in all, it was a good day... with the small exception of the men with machine guns.\n\n<p align=\"center\">* *</p>\n\nONE DAY BEFORE\n\nDAY 0\n\n\"Excuse me, ma'am, but we are about to begin our final descent,\" said the stewardess sweetly. \"Could you please put away your laptop, fold the tray table and straighten your seat?\"\n\nShe waited with a wide grin frozen on her face for an acknowledgement. It was as if the passenger was not quite aware she existed.\n\n\"Excuse me, ma'am,\" she tried again, her finger hovering inches from the shoulder of the errant traveller. Finally, accepting it would need to be done, she tapped her politely. It had the desired result. The mass of reddish-brown hair swept around and revealed an expression bordering on irritation. The woman looked about the age where she would take offence to being labelled as \"mid-thirties\".\n\n\"Didn't see you there,\" she said. \"How long till we land?\"\n\n\"About half an hour. Could you straighten your seat and fold the tray table please?\"\n\nThe redhead promptly complied. The first-class cabin came with a partition. As far as she was concerned, there was no one else on the plane. Except for the stewardess who made her presence known from time to time.\n\nShe settled back in her padded rest and looked at the stewardess. A horrified expression was writ large on her face as she stared into the passenger's lap. The redhead looked down to see the head of a pack of cigarettes sticking out of her pants pocket.\n\n\"Sorry about that,\" she said, pushing the pack inside.\n\n\"You can't have that on this plane. How did you get it past security?\"\n\n\"Luciana,\" the woman read off the badge. \"I've spent eighteen hours on two flights and two airports. I really couldn't care less what I can and cannot have on this plane.\"\n\nThe stewardess was taken aback by her tone. She made a motion to step back before the woman went on.\n\n\"I'd think twice before reporting me. The best you can hope for is a small fine, that too is doubtful given the people who are flying me in. It might make me change my choice of airline. That's over thirty first-class tickets a year that will go straight to your competition. You don't know it just yet, but you're actually doing your bosses a favour.\"\n\nThe stewardess was clearly beyond her depth. The redhead made room on her spacious seat and beckoned her over.\n\n\"Grab a couple of glasses and a bottle of that red you gave me with dinner last night.\"\n\nLuciana returned a moment later and settled down beside the redhead.\n\n\"Now if you won't tell, I won't tell,\" she said conspiratorially, offering her open pack. The stewardess eyed her with a raised eyebrow before quietly picking one. The redhead lit hers and took a long drag.\n\nTwo tall glasses of red wine were poured out on the now unfolded tray table. Luciana lit her cigarette off the tip of the passenger's. They sat side by side and smoked in silence.\n\n\"Cheers,\" she exclaimed, clinking glasses. \"There's something you should know about me, Luciana.\"\n\nThe stewardess pricked her ears and listened.\n\n\"I'm a very light sleeper. Last night, I did wake up briefly when I heard some rustling outside the partition. Now you wouldn't happen to know what that was about, would you?\"\n\nLuciana clapped her hand over her mouth. She had tried to resist the temptation, but this was the most secluded spot on the plane. Just outside the premium first-class partition.\n\n\"Not that I minded,\" reassured the passenger, taking a gulp of her wine. \"You do look beautiful when you're busy lip-locked with your crew.\"\n\nBefore Luciana could react, the redhead kissed her on the lips. She tasted the bitterness of nicotine and alcohol. The redhead kissed her deeply and tilted her face to push her tongue into her mouth. The stewardess remained frozen in place.\n\nAs suddenly as it started, the passenger disengaged from the kiss and took another long drag of her cigarette. Luciana looked bewildered. Her lips still held the smell of the kiss. She looked at the passenger again, who now looked completely oblivious about what she had done.\n\nThe stewardess took a large gulp of liquid courage before moving to kiss the redhead again. The passenger held out a hand and blocked her. She tried again, only to be met with the firm hand of refusal once more.\n\n\"Like you said, we're about to land,\" said the passenger, pointing outside the window. \"You should have tried your luck earlier.\"\n\nThe stewardess looked disappointed and was about to get up when the redhead held her hand again.\n\n\"Do you have a layover in Belgrade?\"\n\nThe stewardess nodded.\n\n\"Good, then I know you won't mind being slightly late to your hotel room,\" the passenger said calmly, stubbing out the remnants of her cigarette on the armrest. \"I hope you have clean airport bathrooms here.\"\n\nShe looked wide-eyed.\n\n\"You had better go out and do your thing now,\" said the passenger. \"Looks like we're about to touch down.\"\n\n\"Who are you?\" the stewardess finally asked.\n\n\"Heather Franklin,\" said the redhead, \"... and I'll make sure you never forget it.\"\n\n<p align=\"center\">* *</p>\n\n\"Welcome to Serbia.\"\n\nHeather shook hands with the balding man who was waiting for her.\n\n\"A trip of two presidents and a geek. I took off at JFK, spent an hour in Charles deGaulle, and finally I'm at Nikola Tesla. Did you know my car is named after the same guy as your airport?\"\n\nThe man chuckled at her joke. He had two suited men with him who took her luggage and began rolling them towards the exit.\n\n\"Did you have trouble finding your luggage, Ms Franklin? Your flight landed almost an hour ago.\"\n\n\"Yeah, sorry for that. I had to go to the washroom.\"\n\nShe heard one of the suited men sulk and mutter in a heavy accent \"woman problems\".\n\n\"Oh, it was a woman all right, but definitely not a problem,\" She smirked inwardly.\n\n\"Should we go and check out the installations today?\"\n\n\"No time like the present,\" said Heather. \"Give me an hour or so to freshen up at the hotel and we can be on our way. It's a long drive to Kosovo.\"\n\n\"Salinger Energy flew you in at the right time. You've got the inside scoop on possibly the biggest natural gas fields that have been discovered this century.\"\n\n\"I'm just here to oversee the contract of the drilling and distribution rights,\" she said, getting into a black car. \"Once I'm convinced that Salinger is getting the fair share we negotiated in New York last month, I'll go back and a team of engineers will take over.\"\n\nThe man got in front and asked the driver to start. They drove through the picturesque streets of Belgrade. It was almost unrecognisable from the images on the news as recently as a year ago -- the fighting in the streets, the burning vehicles and buildings. It was the bloodiest coup the world had seen in a generation and it culminated with the deposed President Kova\u010devi\u0107 hanging in the middle of Republic Square while his supporters and opponents battled violently all around his suspended corpse.\n\n\"If we finish early, you can visit The Church of Saint Sava or the National Museum,\" said her guide.\n\n\"I'm here for a few days,\" Heather said, nonchalantly lighting up inside the car. \"It would be a shame if the airport was the highlight of my trip.\"\n\n\"Would you like to do some sightseeing first? We could always go to the gas fields tomorrow.\"\n\n\"I'd rather get the work out of the way if you don't mind.\"\n\n\"As you wish,\" said the man. \"We have a reservation at a five-star hotel in Pristina. After you get some rest, a representative from the energy ministry will meet you and show you the fields tomorrow.\"\n\nThe winding road took them out of Belgrade. The beautiful cityscape gave way to a lush countryside dotted with small clusters of houses. Heather busied herself with her tablet where she had prepared notes for her visit. There were figures and estimates and terms she needed to know at the tip of her fingers before the next day.\n\n\"Can we stop for a fresh pack? I'm almost out over here.\"\n\n\"A fresh pack of...?\"\n\n\"Cigarettes, genius,\" she groaned. \"I tend to get into a supremely bad mood if I don't have any.\"\n\n<p align=\"center\">* *</p>\n\nHeather was admiring the view outside her hotel window. The city of Pristina had a unique mix of modernity and old-world roots. She could see bright lights on all the way to the rocky mountains where she would be going the next day.\n\nThere was a knock on her door. She looked through the peephole to see a young woman wearing far too little, standing outside. Heather opened the door slightly and looked at her.\n\n\"Ms Franklin?\" Her English was heavily accented.\n\n\"Yes,\" Heather smiled and opened the door wide for her. The woman was strikingly attractive, tall with blonde tresses coming down to her shoulders. Her features were sharp. Heather's eyes trailed all the way down to her long, toned legs.\n\n\"I have been sent by Mr Aleksander.\"\n\n\"I'll have to thank Mr Aleksander tomorrow,\" said Heather. \"What's your name?\"\n\n\"Jelena.\"\n\n\"Jelena, I suppose you know why you're here. There are two things I need to know from you right now before we take this any further. First, how old are you?\"\n\n\"Nineteen.\"\n\n\"Are you sure?\" repeated Heather. She had a knack for spotting a lie and nothing in the girl's demeanour indicated she was lying when she nodded.\n\n\"Fair enough,\" said Heather. \"Now tell me, is anyone forcing you to do this?\"\n\n\"No,\" said Jelena. \"I need the money and Mr Aleksander pays well. I entertain his guests from time to time.\"\n\n\"Are many of his guests like me?\"\n\n\"No, Ms Franklin,\" Jelena smiled. \"Most are fat, balding men who get hard when I moan for them. You're the first woman.\"\n\n\"A disgusting glass ceiling to break,\" Heather thought, eyeing her leggy guest.\n\nJelena looked nervous. It was much easier when a man was ogling her, licking his lips at the prospect of what was to come.\n\nHeather opened her laptop and opened up her account transfer page. What good was an obscene expense account if not to spend on pleasures of the flesh? Such largesse from Salinger Energy would be repaid a million times over with the natural gas rights she was here to secure.\n\n\"Put your IBAN number and SWIFT code here, please.\"\n\nJelena complied, unsure of what was going to be expected of her. Mr Aleksander had already paid her in advance.\n\nA few clicks and she got a text from Societe Generale indicating a credit to her account. Her eyes widened as she saw the amount.\n\n\"That's just for showing up,\" said Heather, calmly. \"If you choose to walk out right now, you can keep that. No one has to know.\"\n\nJelena looked perplexed. Heather lit a cigarette and continued.\n\n\"If, however, you were to strip for me,\" said Heather, taking a long drag, \"I might be inclined to add another deposit.\"\n\nJelena nodded and turned towards Heather. The dazzling sequins on her dress glinted against the light.\n\n\"Don't rush it.\"\n\nThe shimmering dress slowly slid down revealing her flawless pale skin. Heather's appraising eyes watched intently as her dress pooled in a satin puddle at her feet. Jelena was obviously good at what she did, else she would not have been chosen.\n\n\"That's more like it.\"\n\nSpurred on by the encouragement and looking to maximize her profits, the gifted Jelena sat on the couch facing Heather and spread her legs wide like a gymnast doing a split. The thong left nothing to the imagination, even more so when she pulled it aside and revealed her lush orifice to the lawyer.\n\n\"Play with yourself for me and there's another deposit in it for you.\"\n\nOn cue, Jelena dipped her finger inside her and started tracing her coral pink flesh. Heather's eyes remained transfixed on her while her fingers traced out shapes and patterns on her lips and her clit. She batted her eyelashes at Heather, daring her to cross the last barrier.\n\nHeather made good on her promise and gave the requisite few keystrokes to add another deposit. Even as Jelena was checking her phone, Heather pushed her pants down to her knees and spread her legs. Jelena's eyes flashed with dollar signs as she dove in.\n\n\"Oh... right there.\"\n\n<p align=\"center\">* *</p>\n\nDAY 1\n\n\"Not get much sleep?\" asked one of the men in Heather's car. His harsh tenor snapped her out of her drowsy trance.\n\nShe merely nodded before leaning back against the seat. She felt drained, both of energy and of enough money to put a kid through college. Once the gifted Jelena got used to the carrot and more carrot approach, she was eager to please, coming to her again and again through the night until she was a quivering mass of jelly.\n\nTheir car straddled the rugged terrain separating Serbia and Kosovo. There were frequent disagreements as to whether the line was to be considered as an international border or not. She didn't care how many pieces the former Yugoslavia fractured into, as long as the men paying her exorbitant fees got the natural gas fields they wanted.\n\nMr Aleksander was seated in front. Here was a man intent on testing the amount of flesh that a skeleton could support. Pale pink skin hung from his jaw to give him a triple chin. His waistline, similarly, betrayed his fondness for beer and red meat. His very expensive clothes were likely custom-made for his build.\n\n\"Your surveyor, a Mr Rinehart, has already seen the fields that we have earmarked for your client. I trust you have seen his reports.\"\n\n\"Let's talk shop when we get there,\" groaned Heather. \"I need sleep.\"\n\n\"Very well.\"\n\nTheir car sat between two jeeps with armed guards. Armed loyalists of the former president still hid out in these lands. There were multiple reports of casualties coming from the border every day. Military and civilian.\n\nHeather dozed off again. The stony-faced guards continued to stare straight ahead while Mr Aleksander kept checking his phone. Their convoy snaked through winding roads and idyllic countryside rendered barren by conflict. Somewhere only the ruins of a church remained standing and somewhere else, what was once a house was burnt to ash. The scant remains of villages and towns dotted the countryside, each a testament to an atrocity on civilians.\n\nJust when the embattled people were looking to put the horrors of war behind them, an obscure Serbian had decided to become President by force.\n\nHeather was a light sleeper by any measure, but the sound of the lead car exploding when it hit the IED would have woken up anybody.\n\n<p align=\"center\">* *</p>\n\nThe blast was followed by multiple rapid-fire rounds of bullets ringing out. Heather could make out that the car in front of her was reduced to a smouldering wreck. Her two companions immediately pulled out their guns and opened the doors enough to take cover. The hitherto jolly Mr Aleksander suddenly turned paler by several shades and ducked until he was horizontal, or at least as close to horizontal as his frame would allow.\n\nThe men from the car behind her poured out and joined the fight as well. She didn't have a clear idea where the enemy bullets were coming from but realised they were not aiming for the car. By all accounts, she was safer inside than out.\n\nThe gunfire got more intense. Nearby screams let Heather know that her side was faring badly. The man to her left was now lying supine on the grass with a red pool around his head. His counterpart on her right fired valiantly, but it was only a matter of time before he too met the same fate.\n\nEach passing second came with sickening sounds of lead piercing flesh. The men in the car behind her had all been neutralized. The last remaining armed man to her right made a suicidal run for it. He was halfway up a grassy knoll when a nine millimetre round met his back. His legs folded under him and he rolled back down.\n\nThe bullets stopped. Heather looked around to see multiple looming shadows approaching. There were at least twelve men who surrounded her car. They had a look about them akin to a pride of lions circling their prey.\n\nThe first thing Heather noticed about the man who opened the door of her vehicle was the machine gun he had pointed in her direction. In all fairness, it was the most important part of her predicament, much more so than his pockmarked face.\n\nHe barked at her, not that Heather understood a word of it. Finally, realising his ineloquent pleas were not having the desired effect, he reached inside and yanked her out by her hand. Heather saw a few more men waiting outside, all similarly armed and looking menacingly at her.\n\n\"Look, gentlemen, will the one of you who knows English tell the others that it is a terrible idea to kill an American citizen on foreign soil?\"\n\nHer statement led to a round of heated discussion among the men around her. She reached into her suit. This caused a brief flutter and all the men trained their guns on her again.\n\n\"Relax, I just need a smoke. I'll be right here if you need me.\"\n\nShe lit up one of the remaining cigarettes in her pack and sat down on the open seat. The crisp sunshine beat down on her from the nearly cloudless blue sky. It was neither too hot or cold, a happy medium that her fellow New Yorkers would spend extravagant amounts of money to vacation to.\n\nAll in all, it was a good day... with the small exception of the men with machine guns.",
        "<p align=\"center\">* *</p>\n\n\"So are you going to kill me or not?\"\n\nThe suspense was killing Heather, if not the posse of armed men. They were on their third conference and had still not decided on her fate.\n\nHeather scoured the month-long crash course in Serbian she had taken for something she could ask them but drew a blank. It was unlikely her situation would improve if she were to ask one of the armed men where the ladies room was.\n\nMeanwhile, they eyed her at intervals and went back to their discussion over what to do next. Perhaps they were fighting over who would pull the trigger.\n\n\"If only,\" thought Heather, knowing fully well that a bullet through the head would be one of the kinder fates that could befall her. She had seen how some of them looked at her. She had a fair idea what they were thinking. She closed her eyes and shuddered inwardly. Some of the men were big and they'd be big down there.\n\nA mewling sound reminded her she was not alone in the car. Mr Aleksander had turned impossibly pale and was muttering a prayer under his breath. The men outside might decide to start with him first. Heather would enjoy watching that at least.\n\nWith every passing minute, her fate grew more grim. The men who did not eye her with lust eyed her with hatred. How else are you supposed to look at someone who has come to facilitate the sale of your country to a Canadian billionaire?\n\nJust when she was about to ask again, she heard the sound of tyres. Three large jeeps showed up. A woman got out of the one in front and approached her.\n\n\"Ms Franklin, I presume?\"\n\nHer voice was accented, but was the best English Heather had heard all trip. She stood at five and a half feet, dressed in full body camo with a gun in her right hand. Her face was much more memorable. A scar started from her left temple. Heather's eyes followed the groove down to her eyebrow before it crossed over her nose and bisected her face diagonally all the way to her chin. It was a deep furrow, like a line furiously scribbled out on paper. A separate, shallow scar went from her right ear to her lower lip. Her face looked like that of a patchwork doll.\n\n\"Do you know how I got these scars?\" she asked Heather in a passable Joker voice.\n\nHeather still stared at them, mystified. The woman laughed and slapped her hard across the face.\n\n\"Oh the plans I have for you,\" she said. \"An American hostage. You will prove useful to me.\"\n\nHostage. So they were not going to kill her immediately. She breathed a sigh of relief.\n\nThe woman barked orders to her men who got into the waiting jeeps. She took two men and sauntered around to the passenger side door where poor Mr Aleksander was on his fiftieth futile entreaty to Jesus. The crotch of his pants was wet.\n\n\"Mr Aleksander. How nice to see you again?\" she said in English for Heather's benefit. \"You look better than when you were on trial for corruption. I assume all those juicy kickbacks from Salinger Energy have helped.\"\n\n\"Please. I'll give you whatever you want. I'm insured against kidnappings,\" he said breathlessly. \"You can get any ransom.\"\n\n\"That might have been useful if I wanted to kidnap you,\" she replied. \"Do you see what your men did to my face that night? That's just my face. You don't want to see where else they did their work.\"\n\n\"I'm sorry. I didn't know - \"\n\n\"Well you know now. It'll be the last thing you know.\"\n\nShe turned back to Heather.\n\n\"Go with my man and get into the jeep. No sudden movements. Don't try to be a hero. Remember... you're just as good of a hostage without a leg.\"\n\nHeather nodded and collected her pack and lighter. The man, who bore an uncanny resemblance to Mark Calaway (also known by his stage name, The Undertaker) grabbed her arm and escorted her to the lead vehicle where she got in the front. She saw the woman talk to Mr Aleksander for a long time before her cohorts grabbed him and hoisted him out of the car.\n\nShe watched him begging and crying all the way to their vehicle. The men produced a length of chain and tied one end to the rear fender of the jeep. The other end was wrapped securely around his ankles. He begged and pleaded even as the disfigured woman got in beside Heather.\n\n\"It's a long ride to our destination, Ms Franklin. A long ride through an active war zone. It's best if you didn't see what has happened to my beautiful country.\"\n\nBefore Heather could reply, Not Undertaker slipped a bag over her head. She saw complete darkness for a few seconds before her eyes adjusted to the faint light filtering in through the cloth.\n\nShe couldn't see much, but there was nothing to prevent her from hearing Mr Aleksander's demented screams when the jeep started towards its destination.\n\n<p align=\"center\">* *</p>\n\nTime stops when you can't see. One moment, Heather had a bag slipped over her head and the next it was taken off. How much time had elapsed in between, she was not sure. It had likely been a few hours given the brilliant sunshine of earlier had given way to dusk with night rapidly eating up any remnant of the sunset.\n\nOne of the men yanked her out of the car. It took a few moments for Heather to take in her surroundings. There were hundreds of barracks. Men, and a few women, in combat gear, marched and trained nearby. There were several other larger buildings towards the edge of the cliff, indicating they were now in the foothills.\n\nA group of soldiers who were climbing up a steep rope net stopped and looked in her direction. She tried to gauge their estimation of her. Further on, there was a firing range where rows of soldiers with AK-47s peppered holes into a target board. Many soldiers were crawling through a barbed wire laden obstacle course nearby.\n\n\"Mr Aleksander looks in better shape than he has in years.\"\n\nHeather turned towards where her scarred captor pointed. The chain was still intact at the back of their jeep. It was unfathomable that the mangled, blackened pulp that remained had been a human being a short while ago.\n\n\"Come with me,\" said the woman and dragged Heather by the arm. As she followed her captor, Heather became aware of hundreds of dilapidated houses and tents adjoining the military buildings. Heather was taken to one of the bigger buildings and forced into a solitary room with a bed, a sink, a toilet and a window.\n\n\"What do you think, Ms Franklin?\"\n\n\"I've had better,\" she replied, decidedly unfazed. \"Give me my cigarettes and lighter or it will reflect on your Yelp review.\"\n\n\"Funny. You have a smart mouth, Ms Franklin,\" The woman smirked. \"Don't you worry. We will be putting that smart mouth to use very soon.\"\n\nSaying this, she closed the door. Heather checked her bed. Unlike the plush queen size bed in her hotel room, she would now have to make do with a cheap metal bed. She adjusted her weight and heard it creak. There was a mattress and a thin blanket. The rest of her room was not much better. It was definitely not what her Priceline booking had promised.\n\nBut she was alive. A fact she had been unsure of earlier. She took out a cigarette and lit it. Taking it between her lips, she took a long drag and blew a thin stream of smoke upwards. The familiar feel of nicotine flowed through her body and she knew for sure that she was still alive.\n\n<p align=\"center\">* *</p>\n\nDAY 2\n\nHeather was shepherded into a small room. One wall was covered with a self-styled flag of the Serbian Liberation Army. A video camera was set up on a tripod. A motley group of rebels stood around, curiously awaiting what was going to happen.\n\n\"Did you sleep well?\" the scarred woman asked Heather. In truth, she was too exhausted to be bothered by her new accommodations and had slept like a baby.\n\n\"Here,\" she continued, handing her a sheet of paper. \"You will kneel in front of that wall and read out what we have prepared.\"\n\nHeather knelt as asked. She was flanked by two men holding M16's. The flag wall was behind her. The other woman walked to the camera and started recording.\n\n\"My name is Heather Franklin. I am an American citizen and a lawyer at Griffin, Markham and Wiley.\"\n\nWhat followed were the requisite warnings as to what fate may befall her if the powers that be did not comply with their demands.\n\n\"... the demands are as follows.\"\n\nHeather scanned through the next three paragraphs before bursting into laughter. She stopped and tried reading further, only to dissolve into a fit of laughter again.\n\n\"Is this is a joke to you?\" asked the scarred woman.\n\n\"It must be a joke if you think you will get any of these demands.\"\n\nThe woman bristled with anger. Her face darkened into a scowl and her eyes flashed fire.\n\n\"You will kneel and read the demands as they are written.\"\n\n\"Listen, Jigsaw. You have grossly overestimated my worth if you think you'll get any of what's written on this piece of paper,\" said Heather plainly. \"The people I represent will write me off as the cost of doing business and replace me with another lawyer by the end of the week.\"\n\nNot amused, the scarred woman fixed her with a glare and spoke slowly, enunciating her threat in detail.\n\n\"Do you know I'm a trained chef? I learned how to use a paring knife to remove skin from flesh quickly and efficiently. You will read the statement as we have written it or you shall find out how it feels when I peel the skin off you. I assure you it will be excruciatingly painful when I start from the back of your neck and work my way down your spine.\"\n\n\"Free General Savic. Return the natural gas rights to the people who live locally. Prosecute Salinger Energy for engineering a coup,\" Heather laughed. \"You can cut me up and send me back in little envelopes and no one will do any of that. Only now, Uncle Sam will have all the righteous indignation needed to send armed men in helicopters to wipe your rebellion off the face of the Earth.\"\n\nThe rest of the room understood little of what was being said. The scarred woman was breathing heavily now. She knocked aside the tripod and grabbed Heather by the throat. Pushing her to the ground, she straddled her hips and brought her face close to Heather's until she could see her scars reflected on Heather's eyes.\n\n\"I'm going to enjoy killing you with my bare hands.\"\n\nShe sat up and smacked Heather hard across the face. Again. A punch to her jaw. Each time she pulled her arm back and raised it over her head before bringing it crashing down onto Heather's face. Flecks of blood flew out.\n\nShe pounded away. Repeatedly, until she sat and gasped for air. Heather smiled and spat out some blood.\n\n\"I hope you're still enjoying yourself, because that is all you can hope to get from me. You can take out all that rage you have, but it won't change a thing.\"\n\nThe woman took a deep breath and tightened her grip on Heather's throat.\n\n\"Fine. Then I'll just record killing you and enjoy watching it over and over again.\"\n\nThe woman took out her gun and placed it under Heather's chin.\n\n\"You won't kill me.\"\n\n\"Is that a fact? Are you going to appeal to my better senses?\"\n\n\"No. Hers.\"\n\nHeather looked at a female soldier sitting at the far end of the room. She was dressed in full fatigues.\n\n\"While you've been giving orders, your men keep glancing in her direction. It's as if they're looking to see if she approves.\"\n\nThe soldier in question finally looked up.\n\n\"I'm a lawyer, Jigsaw. It's my job to read the room and to know who is the smartest person in it.\"\n\nThe woman atop Heather finally stopped gasping. She cocked her gun and placed her finger on the trigger.\n\n\"That's enough.\"\n\nThe woman in question finally spoke up. The scarred woman reluctantly got off Heather and let her stand up. The woman gave orders and everyone else quietly exited the room, leaving only Heather and herself.\n\n\"Nice to finally meet the one in charge.\"\n\n\"How did you know?\"\n\n\"I've seen the news. I know who you are.\"\n\n\"Marija Kova\u010devi\u0107. With a J.\"\n\nIt somehow failed to alarm Heather that she was talking to someone on the Interpol Most Wanted list.\n\n<p align=\"center\">* *</p>\n\n\"An old NATO base from the nineties. It serves us nicely.\"\n\nMarija had taken Heather for a walk. The behaviour from the men had dramatically changed when they saw her with Marija as opposed to earlier. From hatred to curiosity.\n\n\"I take it you're the diplomatic one,\" said Heather, nursing her wounds. \"Perhaps you could share some tips with Jigsaw.\"\n\n\"Anja is my sister,\" said Marija. \"My baby sister. She wasn't always like this - both physically and otherwise.\"\n\nMarija had a Mid-Atlantic accent with no trace of her Eastern European heritage. She had obviously done her schooling and university abroad. She was tall, towering over Heather at about five ten. Her body was lithe and toned with slight musculature. She could have easily been a ballerina or a gymnast with some training. Her face was pleasingly feminine, with a shock of dense black hair coming down to her shoulders and eyes as blue as a cloudless sky.\n\nHeather had seen that face on the news - usually in the context of a terrorist attack. A mass shooting in Belgrade. A car bomb in Sarajevo. A series of coordinated explosions in Zagreb.\n\n\"You should really watch yourself around Anja. She will kill you if you make one wisecrack too many. She has always been impulsive, but now...\"\n\n\"What do you plan to do with me?\"\n\n\"I haven't decided yet,\" answered Marija. \"For now, let's get you checked out and back in your room. I'll talk to Anja and my men and see how you fit in.\"\n\n<p align=\"center\">* *</p>\n\n\"This is the closest we have to a hospital,\" said Marija, escorting Heather to a collection of large tents. \"Get the doctor to make sure nothing's broken and take a painkiller if you want.\"\n\nShe left a soldier to guard her and left. Heather gingerly made her way inside the tent. There were around ten beds with bandaged people on them. Some lay silent and others writhed and squirmed in pain. Several nurses rushed back and forth. The soldier guided her through a partition to a smaller area of the tent.\n\nThere was a queue of patients in front of a doctor. Mainly women and children. She saw the woman at the far end examine a child. She indicated to a young makeshift nurse to hold his shoulder hard and popped it into the socket. The boy screamed while he was being led towards another part of the tent.\n\nHeather waited her turn. A woman who looked to be in her last trimester was next to be examined. The doctor was efficient, moving from one patient to the next with ease.\n\n\"Yes, the American. I was expecting you.\"\n\nThe doctor was of medium height and build. Her mixed-race heritage was evident in her caramel skin tone. Her black hair was cut short and her face looked aged far beyond her years.\n\n\"Wren Salinger,\" She introduced herself while examining Heather's face. \"I hear you got on Anja's wrong side. You're lucky this is all she did. She gouged out the eyes of the last hostage she took.\"\n\n\"Thank you for that visual.\"\n\n\"Nothing looks broken,\" Wren said. \"I'd need an X-ray to be sure, but the closest X-ray machine is a few hundred miles away in Pristina.\"\n\n\"Just give me something for the pain and I'll be on my way.\"\n\n\"No can do. The last stock of medicines I got was a month ago. I'm almost out on everything. I have to ration them for those who need them the most.\"\n\n\"And I don't make the cut?\" said Heather with a mock pout. \"I'm hurt.\"\n\n\"Just take a look behind you.\"\n\nHeather glanced behind her to see a woman with a deep cut from her knee, almost to her ankle. The ankle was twisted at an awkward angle. She had to be supported on two sides by her two boys.\n\n\"Point taken.\"\n\nShe turned to leave before saying.\n\n\"Wren Salinger. Any relation to - \"\n\n\"Yes, your boss is my grandfather.\"\n\n\"There has to be a story there. How did the granddaughter of that man end up here?\"\n\n\"Not now,\" said Wren, pointing to her seemingly endless queue of patients.\n\n<p align=\"center\">* *</p>\n\nDAY 4\n\n\"I take it you're warming up to your new accommodations.\"\n\n\"The rats are delightful company,\" said Heather.\n\nMarija smiled at her. It was surreal to see that smile on the face of someone responsible for bombing the military headquarters in Novi Sad.\n\n\"I have a peace offering,\" she said, tossing a carton of Marlboros to her captive. \"Don't ask me where I got that.\"\n\n\"Oh thank Goddd!\" exclaimed Heather. \"I thought I was going to die from withdrawal.\"\n\nMarija came and sat down opposite Heather. She shook the messy black curls off her face and cocked her head to the side.\n\n\"You're a curious one, Heather Franklin. Yesterday, Anja would have killed you had I not stopped her. Yet you goaded her on.\"\n\n\"Look, Marija with a J. You lot will either kill me or you won't. There is very little I can do to change whatever choice you make.\"\n\n\"In truth, we didn't plan for you. Anja wanted to get Mr Aleksander and you were merely collateral damage. She hasn't thought of what to do with you - no bank account for the ransom, no way to get in touch with your employers, no one to negotiate with the American consulate.\"\n\n\"She doesn't strike me as someone who plans too far ahead.\"\n\n\"She took what happened to our father hard,\" Marija said. \"Seeing him overpowered, dragged outside and lynched by the mob - it changed her. \"\n\nHeather nodded, vividly remembering the image from the news.\n\n\"I'll try to negotiate better accommodations for you. You didn't take away their land. You were just here doing your job and you got caught up in this mess.\"\n\n\"Thanks,\" said Heather. She got a close look at Marija's face. Her blue eyes looked jaded and weary, far more than they should.\n\n\"Of course, you do understand I can't set you free. At the very least you're worth a ransom or a political prisoner being released.\"\n\nHeather sighed and opened up a pack. Freedom was a distant dream. She had seen the base spanning hundreds of acres of elevated terrain. The border was of thick concrete with rolls of concertina wire along the top. There was an outpost with a turret every fifty metres... and all that was if she managed to somehow make it past Not Undertaker and his cronies stationed outside her door.\n\n<p align=\"center\">* *</p>\n\nDAY 6\n\n\"Take a look.\"\n\nMarija passed Heather a tablet. Through the weak internet connection, Heather saw her face and that of former Serbian energy minister and current human skid mark, Aleksander. All the major news networks had picked up the story and were running it - CNN, MSNBC, Fox, Al Jazeera, BBC, the works.\n\n\"You're famous,\" smiled Marija. \"Although I see this is not your first time in the media spotlight.\"\n\nIn truth, Heather stayed as far away from the media as possible. Her reticence often frustrated them when her name was associated with an especially scandalous trial.\n\n\"They'll move on. People get kidnapped all the time. I'll last one, maybe two news cycles before one of the Kardashians has a sex tape leaked, and the world goes back to normal.\"\n\n\"Won't your family make a public appeal?\"\n\n\"I don't have any family left for a public appeal. I don't have...\" said Heather, pausing to think. \"You could let Jigsaw kill me right now and the only people who will miss me are the senior partner at my firm who was counting on my help for a class action lawsuit and the drug dealer operating in The Ramble who supplies me weed.\"\n\nEven as she said this, Heather went through the news articles in front of her. There were appropriately grisly visuals of the ravaged countryside. Bodies piled in a mass grave here. A family hanging from a tree there. Two soldiers from the new Serbian army seemed to be playing soccer, a normally quaint sight rendered horrific by the severed human head they were kicking around. One picture had the soldiers celebrating as they kicked the aforementioned head through a goal marked by spent shell casings.",
        "\"See? See what your client Crispin Salinger has brought down on my country? He knew my father would not simply hand over the natural gas fields like he wanted, so he found someone who would.\"\n\nHeather closed her eyes, replaying the images she had seen.\n\n\"Of course, your New York Times only publishes one side of the conflict. Do they ask how many thousands of people have been displaced? Do they care how the newly formed army is mainly to drive people out of their homes so that construction of the rigs can begin?\"\n\n\"What do you want me to say, Marija with a J?\" asked Heather pointedly. \"That the people I work for are the Scum of the Earth? That Crispin Salinger's obscene wealth can only be matched by his insatiable greed? I've stopped caring about who I work for ages ago. It's how I go to sleep at night.\"\n\nMarija cocked her head to the side and looked at her for a few long moments.\n\n\"The good news is that I've finally decided what I'm going to do with you.\"\n\n<p align=\"center\">* *</p>\n\nDAY 7\n\n\"One of the things you may not know is that my family has a summer villa just up the road.\"\n\n\"This close to a military base?\"\n\n\"The villa was built decades earlier,\" she replied. \"It's the base that ruined my view.\"\n\nHeather was in a jeep with Marija. For the first time in a week, her life was not in imminent danger. Marija had negotiated her relative freedom. She could finally see her surroundings fully. The rebel base was on top of a large plateau with the Dinaric Alps on one side and a single road on the other. It was very much a fortress, with strategic control over two mountain passes and able to withstand a long siege.\n\n\"We came here every summer,\" she continued. \"Sometimes we came in winter to ski.\"\n\nThe stone structure loomed into a view. It was a massive building at the edge of the cliff. Heather liked the thought of a warm room inside.\n\n\"Do you bring all your prisoners here?\"\n\n\"Only the ones who I need to. I saw the risk that one or more of my men might take their chances with you. You wouldn't be much use to me dead.\"\n\nThe inside of the villa was suitably opulent, albeit empty.\n\n\"Home sweet home. The one place I can still call that.\"\n\nHeather walked to the main wall where there was a life-size portrait of a man with his two daughters. The man held them protectively and the older daughter had her arm around her sister.\n\n\"Our official portrait from when my father became President. It isn't protocol to have family members in the portrait, but he was adamant about it.\"\n\n\"I'm sorry for what happened to him.\"\n\n\"You're the first person to say that to me in a long time, Heather Franklin.\"\n\nPerhaps if she peeled back all those layers of camo, Heather felt that the woman who ordered the assassination of several EU diplomats might disappear, leaving behind a grieving daughter.\n\n<p align=\"center\">* *</p>\n\n\"We have just one demand. Free General Savic. He does not deserve to be imprisoned.\"\n\n\"The war criminal?\"\n\n\"Your western media would like to think so, but no. The General is a good man who fought for the rights of his people.\"\n\n\"Do you know what he has been accused of at The Hague tribunal last month?\"\n\n\"All lies,\" declared Marija. \"Lies invented by Crispin Salinger and peddled by his pet media houses.\"\n\nHeather shook her head derisively.\n\n\"I'll tell you what I told Jigsaw earlier. We don't negotiate with terrorists. It's Uncle Sam's party line. Releasing someone who has been accused of what Zeljko Savic has been... there is no chance of that, no matter how many hostages you take.\"\n\n\"I'll worry about that. You record the statement with our one demand. An exchange - you for the General.\"\n\nHeather had another snarky remark cued up, but restrained herself. She could see the mention of this man had touched a nerve inside Marija.\n\n\"All right. I'll do it. I just want you to know it has no chance of working.\"\n\nMarija nodded. She understood, even if she did not acknowledge it.\n\n<p align=\"center\">* *</p>\n\n\"I've just emailed the video to a newspaper in Belgrade. It should be all over the world by the time we wake up.\"\n\nMarija poured out two glasses of red wine. The abandoned mansion had a well-stocked cellar. A remnant of better times.\n\nHeather took a sip and surveyed Marija over the rim of her glass. Still in military gear with a holstered gun, Up close, she looked so... normal. Like a woman she might bump into jogging in Central Park or at the gym of her Upper East Side apartment building. Even the steely look in her eyes did not indicate she could be involved in a military plane being downed a few months earlier.\n\n\"Don't enjoy yourself too much. You're still my hostage.\"\n\n\"Do you usually wine and dine your hostages?\"\n\n\"Not always,\" chuckled Marija. \"But I made an exception for you. You're not just another hostage, Heather Franklin.\"\n\n\"And why is that?\" asked Heather, leaning forward curiously. \"What do you want from me?\"\n\n\"To talk to someone else for a change.\"\n\n\"So you brought me here to have someone to talk to?\"\n\n\"I love Anja with all my heart, but she is no longer the sister I grew up with. The soldiers are loyal and the refugees, grateful, but not exactly great at conversation. Dr Salinger is busy all the time.\"\n\n\"You do know there are easier ways to get a friend to chat with than ambush, murder and abduction. Perhaps try Tinder first next time. Or OkCupid if you're desperate.\"\n\nMarija laughed so hard she almost dropped her drink.\n\n\"Let's try something. Humour me, will you?\"\n\nHeather nodded in agreement.\n\n\"Close your eyes. Think of this house, this room, and me. Forget about how you got here, just be in the moment.\"\n\n\"Easier said than done,\" Heather muttered while her eyes remained closed.\n\n\"In this moment there is no war, no refugee crisis, no rebel army. We are two women sitting in a room overlooking a gorgeous view with a glass of wine each.\"\n\nHeather did her best. As instructed, she strenuously avoided the elephant in the room. Her breathing slowed and her head fell back.\n\nIn that moment, she felt wet lips pressed to her own and opened her eyes. Marija loomed over her, her large eyes trembling in the light and her lips waiting for an answer before making contact again.\n\n\"You could have just asked...\"\n\n<p align=\"center\">* *</p>\n\nDAY 8\n\nHeather was up first, admiring the scenery outside her window. The first rays of the sun painted the mountain range bronze. The very peaks were snow-capped, followed by lush, viridian forests down the slopes.\n\nIn another universe, maybe Heather had met Marija under different circumstances. Maybe her firm was contracted by the US government to help frame a treaty with Serbia. Maybe the sparks between her and Marija were too much to ignore, and Marija whisked her away to her summer villa for a whirlwind weekend.\n\nCigarette in hand, she was still ruminating when she felt a pair of arms clasp her from behind. She felt hot breathing on her left earlobe before she heard the words.\n\n\"You keep making me cum like that or else I'll send you back to the camp and let my sister and my men know it's open season on you.\"\n\nHeather chuckled as she took a long pull. Tendrils of warmth reached through the crisp mountain air. As far as the eye could see, green forests stretched on, flanked by mountain ranges on either side.\n\n\"Beautiful, isn't it?\" said Marija. \"Now picture all those trees cut down and all the land covered in fracking rigs. That's what Crispin Salinger wants.\"\n\n\"That's what I was sent here to ensure he is getting.\"\n\n\"Enough about that greedy fucker. Come back to bed, Heather.\"\n\nHeather turned to see her walk back to the bed. Her ass swayed from side to side with every step of the way. Her ass was taut and firm, like the rest of her. She turned around and sat on the edge of the bed. Her legs raised and parted, displaying her glistening wetness. Two of her fingers went south and gently toyed with her protruding clit while she beckoned Heather over with the other.\n\n\"Do you need an invitation, Heather Franklin?\"\n\nShe stuck the index and middle fingers of her left hand out. Heather saw them glistening with her liquids. She walked to the bed and took them in her mouth. Her captor's taste and smell were intoxicating, like a drug more potent than any known to man.\n\n\"That's it,\" said Marija, moving her fingers in and out of Heather's mouth.\n\nHeather closed her eyes and let her senses focus on the taste and smell. She licked the fingers from tip to knuckle and back again.\n\nMarija smiled and drew her head to her breast. Her nipple stuck out invitingly for Heather. A pale pink areola atop her alabaster pale skin. Heather obliged by locking her lips around the nipple and sucking hard. Simultaneously, her free hand found the other nipple and twisted it hard. The unexpected sensation elicited a yelp of surprise followed by a low moan of pleasure.\n\nHeather interchanged her hands and mouth like a pro, giving both nipples equal time and pleasure. In the meantime, Marija's fingers had returned to her pussy and gathered enough moisture for another taste. Without warning, she yanked Heather's head back by the hair and fed her her soaked fingers once again.\n\n\"You're enjoying yourself far too much for a prisoner of war.\"\n\nHeather chuckled as best she could with the fingers in her mouth.\n\n\"In case you're wondering, there is a lot more where this came from down there.\"\n\nSaying this, she lowered Heather's head between her legs and spasmed with pleasure the first time her tongue made contact.\n\n<p align=\"center\">* *</p>\n\nDAY 14\n\n\"Did you hear back from your negotiator?\"\n\n\"They have still not agreed to free General Savic.\"\n\nHeather sympathised with her plight. She wrapped her arm around Marija's naked shoulder and buried her face in her neck.\n\n\"At least you tried.\"\n\n\"It's not over yet.\"\n\nHeather kissed her collarbone and licked a line up to her ear. She groaned, but looked steadfastly ahead.\n\n\"He served with my father many years ago. The two of them fought shoulder to shoulder in Bosnia in the nineties. My father left the army and joined politics and he stayed and rose through the ranks. There was never a time they did not keep in touch. I played with him when I was a child. I mourned with him when his wife died. He is family to me, as much as Anja is. As much as my father was.\"\n\nHeather kissed her on the cheek and got up. Marija needed to be left alone for a while.\n\n<p align=\"center\">* *</p>\n\nDAY 25\n\nMarija led Heather out to the jeep. The atmosphere in the rebel camp was different. Most soldiers averted Heather's gaze as she walked past. They knew she was off-limits.\n\nThe tent city was not nearly equipped for the coming winter. Soldiers tried their best to consolidate the tents and fortify them with bricks and wood. Already, a chill had taken hold of the plateau with gusts of wind rippling through the tents frequently.\n\n\"I have to discuss the state of our medical supplies with Dr Salinger. You try not to wander off.\"\n\nHeather looked around for familiar faces. Not Undertaker and his crew all but ignored her as they marched past. A criss-cross of clothing lines went from tent to tent. Mothers tried in vain to fasten the line at either end, their efforts frequently undone by the wind. Clean clothes were at a premium among the squalor.\n\n\"Well. Well. Look who's all alone and vulnerable once again.\"\n\nHeather sighed. The face with the familiar scars sidled up to her.\n\n\"I've missed you as well, Jigsaw.\"\n\n\"Funny,\" she remarked. \"I like that about you Americans. I suppose my sister does too.\"\n\n\"Shouldn't you be out scaring kids into cleaning their rooms? I'm sure somewhere mothers tell their children about you.\"\n\n\"Marija has done this before. I'll give it a week before she's bored with you and kicks you out of the house. Then I'll finally be able to finish what we started that day.\"\n\nTo emphasize her point, Anja took out her gun and placed it against Heather's chin.\n\n\"I don't mean to tell you how to use that thing, but the safety is still on,\" Heather said with an eye-roll. \"If you are going to threaten my life, you can at least be competent in it.\"\n\n\"I'm going to enjoy your wisecracks one last time before I kill you.\"\n\nShe leaned forward until her scars were less than an inch from Heather's face. Her face was a portrait of pain, but her eyes blazed with rage.\n\n\"Anja, enough!\"\n\nShe took a couple of steps back. Marija stood a few feet away with her arms crossed.\n\n\"Did you get a response from your contact?\"\n\n\"Yes, but you're not going to like it,\" said Anja. \"They're offering four soldiers and a student activist who was caught in the protests.\"\n\n\"That's it? That's all we get for a prisoner exchange for the American?\"\n\n\"Hey! You got them to the table,\" chimed in Heather. \"That's a start. Now keep the dialogue open. Keep negotiating and you might even get your General.\"\n\n\"For your sake,\" said Anja. \"You had better hope we do.\"\n\n<p align=\"center\">* *</p>\n\nDAY 40\n\nMarija lay back and stared up at the ceiling. Her legs remained loosely wrapped around Heather's neck as her breasts rose and fell with her breathing. Her torso was covered in a sheen of sweat from Heather's recent efforts.\n\n\"We should have heard something from them by now.\"\n\n\"It's a waiting game. A staring contest and they're hoping you will blink first.\"\n\nThe offer had increased to include a politician who supported the former President, but there was no indication the General would ever be free.\n\nHeather pulled herself up and opened the bedside drawer. There was a whole carton of cigarettes. She took out one and took a long drag.\n\n\"I've spoken to the UN negotiator and confirmed that I am unharmed and well-fed. I've also told them that I would remain so if they complied with your demands.\"\n\n\"You haven't asked to talk to anyone since you arrived here? No family or significant others?\"\n\n\"I've already told you, I don't have any family worth a damn left. As for relationships, I broke up with my girlfriend a month before coming here. She isn't exactly pining by the phone waiting for me to call.\"\n\n\"You have no one who misses you, Heather?\" Marija asked curiously.\n\n\"If you shoot me right now and send my body back to my employers, all I can expect is a stuffy funeral and a few headlines. The way I've lived and the things I've done - no one will mourn for me. No one will cry when I die.\"\n\nMarija shook her head and rose from the bed. Her raven black hair fell in cascades around her head. She walked over to the side Heather was sitting on and put a palm on her shoulder.\n\n\"Is that why you tempt fate with my sister? You put yourself in front of her gun hoping she will pull the trigger.\"\n\n\"I can't say it would be a tragedy. In the larger scheme of things, it might even be a net benefit for the world.\"\n\nMarija bowed her head and pressed her lips to Heather's.\n\n<p align=\"center\">* *</p>\n\nDAY 45\n\n\"You were a lawyer?\"\n\n\"A damn good one at that. I was at Erskine, Knight and De Vries. They're the best international law firm in Europe and I was the daughter of a head of state and at the top of my class at Oxford. It was a win-win if there ever was one. I spent many years after law school living in a swanky townhouse in the most upscale part of London. I helped countries negotiate treaties and corporations negotiate trade deals. I took human rights cases, even arguing alongside Amal Clooney once.\"\n\n\"Sounds like a good life.\"\n\nHeather refilled their glasses of wine. Marija had her arm draped around her captive. She took a sip from her glass and went on.\n\n\"Anja stayed with me too. She was going to culinary school to be a chef.\"\n\n\"I vaguely remember her mentioning it before threatening to mutilate me,\" said Heather. \"How did she go from port wine reductions to... whatever she does now?\"\n\nMarija chuckled and planted a soft kiss on Heather's hair.\n\n\"The same way I went from preparing opening arguments at The Hague to having a UN resolution declaring me a global terrorist.\"\n\n\"One man's hero is another man's terrorist.\"\n\nThey clinked their glasses and locked lips. They were familiar with each other now, the contours of their mouths and the feel of each other's tongue.\n\n\"The day of the actual coup, Aleksander betrayed us. He led a squadron of armed men to the palace to capture Dad. I barely escaped, but they found Anja. She begged me to leave her and run while she held them off... and I did. I did because she didn't want me to see what his men were going to do to her.\"\n\nHeather closed her eyes and briefly remembered the hatred she had seen when Anja first saw Mr Aleksander in the car. By all accounts, it was well earned.\n\n\"Others may be scared of her, but she's terrified of them. Terrified that they might see past the fearful exterior and see the real her. The her that cried and begged Aleksander's men to stop that night. Only they didn't. Over and over again.\"\n\n<p align=\"center\">* *</p>\n\nDAY 60\n\n\"Looks like the news cycle has well and truly moved on. Now all that remains are back-channel negotiations with the State Department as to who can be exchanged for me.\"\n\nHeather came to this conclusion after seeing only scant mentions of her predicament on the internet. Much to her chagrin, her kidnapping was now relegated to the bottom of the sixth page of the New York Times website, below a mundane story about a woman from Florida who had drugged her husband and his mistress and fed them to alligators, and above an overloaded ferry that had capsized while crossing the Limpopo River in Botswana, drowning all on board.\n\nHeather knew she was not newsworthy any more. She was now on par with poor people dying in poor countries and they never made the front page.\n\nThe look on Marija's face indicated they were in no immediate danger of releasing the General either.\n\n\"You must have a plan B,\" Heather insisted. \"Anyone else. Just tell me and I'll make the video.\"\n\n\"The General saved my father from Bosnian soldiers in Srebrenica. I'm not abandoning him. There must be a way.\"\n\n\"I hate to interrupt you lovers, but we have more pressing problems.\"\n\nHeather and Marija turned around to see Anja standing a few feet behind them. Not Undertaker stood beside her.\n\n\"We're running low on supplies.\"\n\n\"What supplies?\"\n\n\"Everything. Food. Medicine. Blankets. Warm clothes. In case you have been too busy making love to notice, it's almost winter. In a few weeks, this place will be covered in snow.\"\n\n\"How much do we have?\"\n\n\"Not nearly enough, sestra. Our black market contact says it's getting harder and harder to smuggle the goods to our rendezvous. Too much heat.\"\n\n\"I'll think of something.\"\n\n<p align=\"center\">* *</p>\n\nDAY 68\n\n\"I still can't believe you're doing this.\"\n\nAnja looked at Marija with a look of exasperation.\n\n\"You said it yourself, we don't have supplies to last the winter.\"\n\n\"I meant looking for a new smuggling route or a new black market contact. Not this. This is insane.\"\n\n\"I never thought the day would come when you, my sister, would say I was insane,\" said Marija. \"It's like I said. I was not getting any better smuggling routes. The only other way is this.\"\n\nTheir jeep was on a winding mountain road that snaked its way through a narrow pass. According to the contacts Marija still had in the military, a supply convoy would be coming through that path towards the joint base with the Serbian Army held with the NATO peacekeeping forces.\n\n\"That convoy will be crawling with soldiers. Not just unskilled guards from Aleksander's private security, but actual soldiers with actual training and much better arms. There's no way our men could take them on.\"\n\nMarija closed her eyes and looked deep in thought. Underneath her black hair was a razor-sharp mind which was currently busy calculating their odds. The more she thought about it, the more her sister made sense. Her men, for all their courage and loyalty, were hopelessly outmatched.",
        "But did they have a choice?\n\n\"If I may...\" Heather began, earning a glare from the scarred woman.\n\n\"Remind me again, why did we get your girlfriend here? She'd look more in place in a department store than in combat.\"\n\n\"I'll have you know that negotiating Black Friday at Macy's is no less than combat,\" Heather replied. \"I have an idea how we can persuade the soldiers to hand their supplies over without a shot being fired.\"\n\nBoth sisters turned to look at her with incredulous disbelief.\n\n\"If this is another wisecrack, I swear to Saint Sava I will throw you off the cliff.\"\n\n\"I suppose killing me is the easy answer to all your problems, Jigsaw, but no. This might actually work. It has a better chance than the certain doom you are about to lead your troops into.\"\n\n\"Go on,\" said Marija.\n\n\"You see, I have something far more powerful than any gun or missile or armour.\"\n\n\"And what is that?\"\n\n\"I have an American passport.\"\n\n<p align=\"center\">* *</p>\n\nThe lead truck of the convoy had to be on guard. After the incident with Mr Aleksander, no one was taking any more risks. The convoy was armed to the teeth to repel any attempts by the rebels to attack it. The terrain made it difficult for a lot of supplies to be airlifted in. Thus, the majority of the supplies would have to come by road.\n\nThankfully, the truck was equipped with ground-penetrating radar to keep scanning the road ahead for IEDs. A few miles back, the radar had picked up something and the explosives specialists had stopped the convoy for an hour while they dug up rocks and eventually gave the green signal. No one was going to take any chances.\n\nThere were two officers in the back of the truck continuously watching the live feed from the radar. Any moment, they felt, another explosive device would come to view. They were surprised when the truck came to a halt, double-checking their screens if anything suspicious had popped up.\n\n\"There's a woman standing in the middle of the road.\"\n\nThe driver and the soldier beside him exchanged glances. It was almost certainly a trap. They scanned their surroundings, expecting to see machine guns pointing at them from behind the rocks.\n\nThey checked and re-checked, before making sure they were not in immediate danger.\n\n\"Who is she?\"\n\nThe question hung over them, but neither knew the answer. A pale woman with reddish-brown hair wearing a jacket and trousers stood in the middle of the road gesturing at them to stop.\n\nThe driver immediately called it in on his walkie. A few minutes of conversation later, the commanding officer wanted to know what the obstruction was about. The young soldier took the walkie and got out of the truck and began walking towards the woman.\n\n\"Stand back. A safe distance back.\"\n\nThe soldier stopped in his tracks. The woman was an American, judging by her East Coast accent. Trembling, she lowered the zipper of her jacket halfway to show a network of wires.\n\n\"Holy - \"\n\n\"Don't come any closer or she will blow me to pieces.\"\n\nThe soldier, clearly out of his depth, relayed the information back. He remained at a distance when she spoke again.\n\n\"Capshaw,\" Heather read off the man's uniform. \"I need to talk to your commanding officer. Can you put the walkie on speaker and put it on that surface?\"\n\nPrivate Capshaw proceeded to do the same and Heather started.\n\n\"My name is Heather Franklin. I am an American citizen and I was taken hostage by the Serbian Liberation Army. I am unharmed for now and will remain so as long as you do what I say. If not, they have strapped explosives to my body and will not hesitate to use them.\"\n\nBy now, several soldiers had streamed out and took positions along the road. Their guns were trained on Heather. The leader of the bomb squad eyed the wires and explosives visible under her jacket.\n\n\"The demand is simple. You leave all your supplies and take the vehicles to your destination. Not a single person will be harmed if you do. If not, then you will have the blood of an American citizen on your hands. You have to choose now, my life or your supplies.\"\n\n<p align=\"center\">* *</p>\n\nNATO Eastern Europe Command\n\nCamp Bondsteel\n\nThe General had nodded off for a few minutes after a long day when the phone call came. He was dreaming of the last time he had taken his grandchildren to the Denver Zoo when the infernal ring broke his trance. His training kicked in and he was immediately alert. The fact that he was not expecting a call did not bode well. He couldn't afford another attack, not after the Serbian Energy Minister two months ago.\n\n\"O'Keefe.\"\n\n\"General. This is Major Geary. We have a situation.\"\n\n\"Is this regarding the convoy? Did the rebels attack it?\"\n\n\"Not exactly.\"\n\nHis brow tightened and his temple furrowed with concern. The major quickly relayed the happenings to him and he gripped his phone tighter.\n\n\"Did any of our explosives experts check her device?\"\n\n\"Cell phone trigger. Marija Kova\u010devi\u0107 could be miles away watching on. We can't disarm it or remove it without triggering it.\"\n\nHe closed his eyes and sighed deeply.\n\n\"General. There is another phone with the hostage. She wants to conference you with Kova\u010devi\u0107 herself.\"\n\nHe agreed and a few moments later, his private number rang.\n\n\"I hope I'm not wasting my time with another empty suit. I especially wanted to talk to someone in charge.\"\n\n\"This is General O'Keefe.\"\n\n\"General? Looks like I got who I wanted. You know who I am. You know what I have done and what I am capable of. However, today is your lucky day. Not a single soldier on your convoy will be harmed. All I want are your supplies.\"\n\n\"I am not giving you anything.\"\n\n\"General. This is Heather Franklin. I am a lawyer for Griffin, Markham and Wiley in Manhattan. I was taken hostage by the SLA two months ago.\"\n\n\"Ms Franklin. Are you all right? Have they harmed you in any way?\"\n\n\"I am unharmed so far. Please don't let them kill me.\"\n\nThe General could sense fear in her tone. She was a private citizen caught up in a war. His heart went out to her, but he knew he couldn't do what she asked.\n\n\"General, please,\" repeated Heather. \"Call the State Department in Washington. Ask for Oscar Gonzalez Junior and explain the situation to him. He will know what to do.\"\n\nGeneral O'Keefe did not like this one bit. This was his war. He was the highest ranking representative of the US army in the region and he hated the idea that some suit in an air-conditioned office eight time zones away could give him an order.\n\n\"There is also a camera mounted on Ms Franklin's jacket,\" said Marija. \"If you do not do as I say, or you try to defuse the explosive, if you try to use a signal jammer or try to rescue her in any way, I will not hesitate to trigger it. An hour later, the footage and the recording of this call go up on YouTube. Of course, I fully expect your government to take it down within ten minutes but that will be enough time for it to be downloaded, shared and replicated thousands of times. Tell me, General. Would you prefer having to explain your actions that led to the death of an American citizen to a Congressional Committee in a few months' time?\"\n\nThere was silence on the call. Silence while the wheels turned furiously in the General's mind. Marija had chosen her words carefully.\n\n\"I thought so,\" she continued. \"Make the call. This isn't a prisoner I am asking to be released or a withdrawal of your troops. These are just supplies. Warm blankets. Food. Medicines. Are they really worth her life? Your men can unload the supplies and go wherever they want. I will have them picked up. Remember, you are fighting in my backyard and I am always two steps ahead of you.\"\n\nWhat Heather knew, and the General did not, was that the simple phone call he was about to make to the State Department would set a chain of events in motion. Oscar Gonzalez Junior was one of the few people who was authorized to call Crispin's chief of staff, Ken Strickland, at any hour. Ken would immediately call Crispin Salinger in whichever of his many mansions he was currently at and relay the news to him.\n\nThere would be a few minutes of delay while Crispin Salinger weighed the pros and cons of his next step. Eventually, he would reluctantly come to the conclusion that it would not be good PR if an employee of his died overseas and he could have stopped it. After all, these were just supplies, not weapons. Then he would reach back into his Rolodex and make some calls.\n\nAnd the Earth shakes when Crispin Salinger makes calls.\n\n<p align=\"center\">* *</p>\n\n\"Could you get me some water, Private Capshaw?\"\n\nThe soldier went back to the truck and duly retrieved a flask. He tossed it to her from a safe distance and she took a deep gulp.\n\nThis was taking longer than expected. Maybe Oscar was on vacation. Maybe Ken had finally had one rib-eye steak too many and had a long overdue heart attack. Maybe the old man was with one of his many mistresses one-third his age and did not want to be disturbed. Heather's plan relied on several maybes and she was hoping the dots would be joining on the other side of the Atlantic.\n\n\"Where are you from, Private Capshaw?\"\n\n\"Nashville, Tennessee, ma'am.\"\n\n\"Got a family?\"\n\n\"Wife and two girls, ma'am. A boy on the way.\"\n\n\"What are you doing in this godforsaken place, then? You should be with your wife and children enjoying a cold beer in front of the TV in Nashville.\"\n\n\"I don't get to decide that, ma'am. I go where the orders tell me to.\"\n\n\"How long have you served?\"\n\n\"Two tours, ma'am. Both in Iraq.\"\n\nHis Southern twang was unmistakable, as was his weather-beaten look. Heather could see the traces of a smile when he spoke about his family. It was obvious he missed them a lot, but he had no choice. The rebels had not folded to the Serbian army as smoothly as hoped and now, the US-backed NATO troops were brought in to bring stability to the region.\n\n\"If I ever get back home, I'd love to come down to Nashville and meet your family.\"\n\n\"It would be our pleasure, ma'am.\"\n\nHeather could see a higher-ranking officer approach the private from the rear. He handed over the walkie and whispered urgently into his ear. Private Capshaw's jaw dropped when he heard what was said.\n\nShe smiled inwardly, knowing she would not have to wear the suicide vest much longer.\n\n<p align=\"center\">* *</p>\n\n\"I still can't believe that actually worked.\"\n\nNot that anyone was complaining. Marija drove the lead jeep. A row of trucks followed, each containing desperately needed supplies. The military base would have to wait a few more days for theirs.\n\nThe last time Heather had been driven to the rebel camp, she couldn't see the approach. Now, she could make out the strategic importance. There was a single road leading up the hill, covered by forests on both sides. The plateau was surrounded by insurmountable terrain on the other sides and a sheer cliff leading to Kosovo.\n\nEven the most well-trained army would be stymied by this approach. Their progress would be slowed to a crawl.\n\n\"It's a good thing I had some soldiers from the former munitions expert group who could rig together a suicide vest on short notice.\"\n\n\"What if my plan had not worked? What if I had underestimated how much Salinger cares for his image?\"\n\nMarija chose not to answer. Anja, however, gleefully informed her she would have happily triggered the device just to get rid of her.\n\nThe trucks were greeted with open arms at the gate. Dr Salinger and her staff began distributing the supplies. Marija gave some orders and then continued driving all the way to her abode.\n\nHeather took out the tablet to see if the incident had made the news. To her surprise, there was a message waiting with a link.\n\n\"I think it's for you,\" said Heather, handing it over. \"From your lawyer in Belgrade.\"\n\nAnja took the device and clicked on it. After a few moments, her lips curled into a scowl as she bristled with rage.\n\n\"Those bastards. I'll kill them. I swear I'll kill every last one of them.\"\n\nMarija and Heather looked at each other before taking the tablet back. The link was to a video. A grainy video of a man sitting in a small room. He looked to be in his late fifties. Suddenly, four men charged into the room and began beating him. There was no sound with the video, but they rained blows down on him relentlessly. He tried to block them to no avail, finally curled in a ball to protect himself. The men did not stop, now taking out batons before bludgeoning him over and over again on his face and chest.\n\n\"Turn it off,\" said Marija quietly.\n\nHeather did so. She did not need to be told that that was General Savic. Even for someone accused of war crimes, this treatment violated the Geneva Convention in a hundred different ways. But it was no use. The video could never be tied back to Salinger and the court of public opinion was not sympathetic to war criminals, even those with baseless charges against them.\n\nCrispin Salinger was smarting over the day's happenings and needed to remind Marija of who he really was.\n\n<p align=\"center\">* *</p>\n\nDAY 80\n\n\"Slowly, Heather. Don't rush it.\"\n\nHeather made a show of opening the front of her shirt button by button. She didn't like the theatrics of sex, always preferring to skip to the part where upper lips met lower lips, but she was a captive. And the captive did what was asked.\n\nAfter the lowest button was done, she slowly peeled the shirt off her. Her pants also slowly receded, revealing her ghastly pale legs. Marija took a sip of her wine and studied her lover. She was only in her underwear now.\n\n\"Like what you see?\"\n\n\"So pure. So weak. So vulnerable,\" Marija whispered. \"Your gym membership. Your pilates classes. Your self-defence sessions. Nothing can help you here. Here, your life is in my hands.\"\n\nHeather walked towards Marija and placed a palm on her shoulder.\n\n\"Isn't that why you brought me here? To protect me?\"\n\nMarija grabbed her wrist. In one fluid motion, she rose and locked Heather's arm behind her back and pushed her up against a wall. Heather tried to resist, but she was completely outmatched.\n\n\"When you were in front of the convoy, I held your life in my hand. How did it feel?\" Her voice was next to Heather's ear and her tone was throaty. She asked again. \"How did it feel knowing I could push that button and leave only a smear where you stood?\"\n\nShe made her point by licking Heather's earlobe. Her hand locked the arm tighter, making Heather wince with pain.\n\n\"Don't pretend like you don't like it. I know you do. I see it in your eyes every time you tempt fate.\"\n\nHeather did not respond. Marija used her free hand to slip inside Heather's bra and grab a handful of her breast. She kneaded the soft flesh hard and rolled the nipple between her thumb and forefinger, making Heather squeal in pain.\n\n\"That's right, Heather Franklin. Sing for me. That's all you are to me - a glorified musical instrument.\"\n\nMarija repeated her rough handling of Heather's breast. Her fingers dug into her skin like hooks. Her lips and tongue were on her earlobe and the side of her cheek.\n\n\"Nowhere to go. Nowhere to run and hide. You are mine to do with as I want.\"\n\nHeather whimpered as her arm locked tighter behind her back.\n\n\"Do you know who I am? Do you know what your media says about me? I am the first woman to feature on both the Interpol and FBI Most Wanted Lists at the same time.\"\n\n\"You must be so proud.\"\n\n\"Funny till the bitter end, eh Heather?\"\n\nWithout waiting for a response, she turned Heather around and pushed her to the bed before pushing her face first down on the mattress. She yanked Heather's panties down to her knees and jammed two fingers inside her. As she had anticipated, Heather was dripping wet.\n\nShe got to work, twisting and scissoring her fingers inside Heather, determined to extract as much sensation as possible. Heather let out a moan and felt the invading fingers inside her. It was a tight fit, like a slightly small glove bought a thrift store. One finger. Two. Three. Back to two. There was no respite or monotony as Marija mixed it up and never let Heather's body settle into a routine of what to expect. All of a sudden, the fingers were gone, leaving a gaping void.\n\n\"Heather Franklin, I am going to pay you back in your own coin.\"\n\nBefore Heather could fully comprehend what that meant, she heard a rustling. Turning her head, she saw the silhouette of Marija opening a drawer and rummaging inside with one hand. To her shock, she soon felt the fingers replaced by something much larger and phallic in shape. She instinctively tried to close her legs, but felt a sharp sting of an open palm on her ass for her troubles. Marija let go of her arm and pressed the back of her neck down on the bed.\n\nIn one smooth motion, she was buried all the way to the hilt of her strapon inside Heather. The abrupt change of invader shocked Heather for a moment while she adjusted to the new shape. Marija smacked her left buttcheek and then her right in quick succession. Satisfied by their pinkish hue, she grabbed both of them hard and slowly slid out until the tip of her dildo rested against her captive's hole.\n\n\"I am going to do to you what your employer has done to my country.\"\n\n<p align=\"center\">* *</p>\n\nDAY 100\n\n\"Is it wrong that I'm toasting a hundred days of being a prisoner?\"\n\n\"If it's an excuse to drink, then go for it,\" said Marija. \"My family's cellar is at your service.\"\n\nThe winter had properly set in now. The row of Dinaric Alps outside the balcony was blanketed in a white sheet of snow. The sunrise lit the whole vista up, making each peak a shining point on the horizon.\n\n\"I wish I could have taken you skiing down that slope over there,\" Marija pointed. \"There is a cabin on the other side which leads to the top of the piste. It puts the likes of your American slopes at Vail and Deer Valley to shame.\"\n\n\"I was never much of a skier.\"\n\n\"All I can say is you missed out.\"\n\nMarija took a sip of wine and continued.\n\n\"I still remember the adrenaline rush. I've tried skydiving and it doesn't even come close. There is no parachute to save you. All you have to trust is your own skill. It feels like a different lifetime when I went skiing.\"\n\nThey were interrupted by a third voice. It lacked the requisite number of expletives to be Jigsaw. Instead, they saw Dr Salinger making her way to them.\n\n\"It feels like the first day off I have got in over a year.\"\n\n\"Is everyone okay, Dr Salinger?\" Marija asked.\n\n\"The volunteers have become quite useful now. I can trust them with the most common stuff like dressing wounds and making splints for fractures. That cuts my workload by half.\"\n\n\"Careful,\" joked Heather. \"You don't want Interpol's Red Notice holder here to get the idea you are redundant. After all, you are the closest Salinger around.\"\n\n\"I see you have settled in and Anja hasn't threatened your life in a week. That's a win.\"\n\n\"Are you also here to celebrate my hundred days in captivity?\"\n\n\"Any reason will do for a glass of wine.\"\n\nWren took her glass and settled down with the ladies.\n\n\"My grandfather has finally released a statement about you. A spokesperson for Salinger Energy mentioned how deeply concerned they were for your welfare and how they hoped you would be released unharmed.\"\n\n\"Did they mention I was in their thoughts and prayers?\" asked Heather, taking a gulp. \"That always does the trick.\"\n\nWren laughed. Heather saw her up close. Her copper brown hair naturally formed corkscrew curls down to her shoulder. Her eyes were bright, yet weary, set against her mocha skin tone and high cheekbones.\n\n\"I have never actually met your grandfather, just heard of him.\"\n\n\"That's Crispin Salinger for you. Rarely heard, never seen, eternally feared.\"",
        "\"He is...\" started Heather, unable to find a tactful way to complete her thought.\n\n\"Let me help you,\" offered Wren. \"My grandfather is a Lovecraftian horror who uses his unfathomable wealth to bludgeon his way to ever more obscene profits.\"\n\n\"Concisely put,\" said Marija, refilling her glass.\n\n\"I was at his Rhode Island mansion last year for his seventy-eighth birthday. He joked to all assembled how he was afraid his age might finally be catching up to the number of billions in his net worth, but he was soon going to be able to widen the gap once again. All his guests found it hilarious that he has more money than the GDP of a small country.\"\n\n\"Tell us about the stuff that did not make it to his biography,\" said Marija, pouring out a glass of wine for their guest.\n\n\"Let's start with the well-known. He was born in Montreal to a French-Canadian father and Irish mother. Inherited the largest energy company in Canada from his father. He could have lived comfortably with just what he was given, but it was nothing compared to his ambitions.\"\n\nWren took a sip and went on.\n\n\"He married the daughter of a prominent Dallas oilman, marking his entry into the American energy market. After that, his empire exploded. The joke is that if anything died a million years ago, Salinger will dig it up and burn it for fuel.\"\n\n\"I've seen the advertisements,\" said Heather.\n\n\"Yes, the advertisements of the kindly old man in a yellow hard-hat. Crispin Salinger, sending heat and light to seventy percent of homes in North America and fuel for fifty percent of vehicles.\"\n\n\"Is that even legal?\" asked Marija.\n\n\"It is when you have every single lawmaker in the country too scared to utter the words anti-trust,\" replied Heather. \".. and even if they did, there is a whole floor full of lawyers at my firm who specifically eat anti-trust regulators for lunch.\"\n\n\"He has expanded to everything now - from dams to power plants, from ports to infrastructure, from real estate to defence, from data centres to ski resorts. He owns the most expensive teams in the NFL, the MLB and the NBA. There is even a rumour that Salinger has set up a venture capital fund in San Francisco and invested in a start-up offering blockchain based high value payments.\"\n\n\"Just a rumour?\" asked Marija, raising her brow.\n\n\"When it comes to my grandfather, always believe the rumours. By the time they are verifiable fact, he's already onto his next move.\"\n\nBoth pairs of eyes turned to Heather, who smiled wryly.\n\n\"As someone who represents him in some of his business ventures, I can neither confirm nor deny that.\"\n\n\"You have to understand,\" said Wren, \"He did not break into Forbes top five by waiting his turn or being a nice guy. The world can see the facade of a benevolent business titan who funds charities for the homeless and inaugurates children's hospitals, but that's all it is - a facade. A dangerously thin veneer and when it slips, there's a monster underneath. He is a man of almost no words, but devastating action. When he makes a play, the whole world does not find out until months or years later.\"\n\nShe paused before taking a gulp of wine.\n\n\"From Wall Street to K Street and every other street worth its name, he reigns supreme. Our politicians may hate each other, but they are scared shitless of him. His donations to their Super PACs and his political support can make or break careers. Have you heard of Roger Costello?\"\n\n\"Senator Costello?\"\n\n\"That's how you may know him now, but ten years he was merely contesting for a small Congressional district in Pennsylvania. He raised a flutter when he questioned how Salinger Energy had won a contract for wind turbines in the state. No big press conference, just a small inquiry. The results were devastating. Within a day, his biggest donors mysteriously backed out. His brother was suddenly under investigation for tax evasion and his wife's law firm was about to fire her because they were bleeding clients. The final straw was when his daughter was abruptly dropped from a clinical trial for a rare leukaemia treatment. The company in question said it was because her latest medical report indicated that she could have an adverse reaction. It was then that one of his advisors told him why these things had happened.\"\n\n\"Sounds like a nightmare.\"\n\n\"It was,\" affirmed Wren. \"The next day, he met with a group of my grandfather's lobbyists and made it clear he was willing to bend the knee, kiss the ring, do whatever it took to make things right. As proof of his earnestness, he issued a press release rescinding his earlier criticism and instead praising the wind turbine initiative for the thousands of new jobs it would create and the benefit to the environment. The results were immediate. His political career was fast-tracked. He had more donors than ever before. Special interest groups with deep pockets flocked to him. The IRS dropped the case against his brother for lack of evidence. His wife was promoted to partner at her firm, which had to open new offices in four states to cope with a sudden influx of clients. Not only that, but the pharma company announced they had made an error in their exclusion criteria for their clinical trial and would be happy to welcome his daughter back for their next round of treatment. She made a full recovery and is currently doing an internship with Bain Capital in London.\"\n\n\"And what happened to the would-be Congressman?\" asked Marija curiously.\n\n\"If I remember correctly, he won by a landslide and got picked for important committee assignments never before given to a freshman lawmaker. Four years later, he ran for US Senator and won and now, he's quite likely to be the next Energy Secretary. All the while, he has been a vocal champion of my grandfather's business interests.\"\n\n\"I've met Senator Costello,\" said Heather. \"I've always thought he was a bit of a shill, but this is insane. He's basically Salinger's puppet.\"\n\n\"Not just him. I've seen firsthand the queue of politicians outside his door. Whichever side of the aisle, from those who believe the world is run by a secret cabal of Satan-worshipping lizard people to those who believe you can be a different gender each day of the week - you don't make it in Washington without his blessing. He claims to be apolitical in his views, but he has had the ear of the last six Presidents. He has been invited to the White House hundreds of times in the last forty years. At any given moment, his lobbyists know all the important Beltway players and know none of them will dare cross him. They're all nickels and dimes to him that he carries around in his pocket like loose change.\"\n\nWren stopped and took a deep breath. It was clear she had mixed feelings for her grandfather. A colossal presence in the world of business; a leviathan with his tentacles in every conceivable industry; a magnanimous philanthropist who had donated billions to charity and research; an impresario and art lover extraordinaire, with a private collection that both the Met and Louvre would give an arm and a leg to display.\n\nA monster who would bring war to a country to get what he wanted.\n\n\"This isn't even the first time he has done this, you know?\" Wren went on. \"In the months leading up to Operation Iraqi Freedom, the top brass of the Pentagon frequently held meetings with my grandfather's top aides at his private ranch outside Dallas. I was too young to understand what was happening. In hindsight, it makes sense. Salinger Energy immediately spun off a subsidiary to focus on oil exploration and refining in the middle east. The headquarters are in Baghdad.\"\n\n\"He made a mistake coming here, though,\" declared Marija. \"Our people will never surrender our lands and our natural resources to him. We will never let him win.\"\n\nWhether she actually believed that or whether it was alcohol-induced bravado, no one could tell. Heather looked at Wren and saw her thoughts reflected on the doctor's face.\n\n\"Marija, you can't win. Not against the might of Crispin Salinger and definitely not against the might of NATO.\"\n\nHer captor looked at her curiously before she began again.\n\n\"I'm sorry to have to tell you this, but this isn't even a fair fight.\"\n\n\"Are you really saying we can't win?\" asked Marija, clutching her glass hard.\n\n\"I'm saying you have already lost,\" said Heather plainly. \"You lost the exact day the geological survey team found evidence of natural gas in the region and your father refused to roll over and let Salinger have it for a pittance. You and your people never stood a chance after that.\"\n\n\"Do you agree as well, Dr Salinger?\"\n\nWren ruefully nodded. She took a sip and spoke.\n\n\"Salinger Energy has built a skyscraper in London. Not just that, they are setting up satellite offices in Paris, Frankfurt, Zurich and Brussels. As we speak, thousands of high-powered executives are being poached from the very best European companies at ridiculously high salaries. This gas deal is my grandfather's entry into the European energy market and he has big plans. You and your rebellion are all that stands between him and those plans. He bankrolled a coup, for God's sake, brought down a government, just so he could have his way.\"\n\nMarija grabbed her glass and the bottle and headed to the bedroom where she slammed the door shut behind her.\n\n\"Will she be okay?\"\n\n\"She'll lock the doors, throw some stuff, swear a lot, scorch the Earth, sleep off her drinks. But then she will realise it's the truth. Just be there for her when she does.\"\n\nHeather nodded. The woman before her seemed wise beyond her years.\n\n\"You still haven't answered how the granddaughter of that man ended up here.\"\n\n\"That's a story for a different time and something stronger than wine.\"\n\n<p align=\"center\">* *</p>\n\nDAY 125\n\nHeather leaned back against the ornate bed. Her gaze absent-mindedly drifted to the window, now specked with snow. The view outside was reduced to a white sleet now. Thankfully, there were ways to stay warm.\n\nShe turned to the shock of black hair between her spread legs. A tongue thrust in and out of her in staccato bursts. It went deep inside her before pulling back repeatedly, before suddenly stopping. Heather looked down and saw Marija grinning up at her before her tongue began a new trick, a slow journey up along her inflamed lips to her clit. She vaguely tried to guide the tongue by grasping Marija's hair, but the tongue defied her will. It latched onto her clit and she scrubbed the rough layer of her tastebuds over the sensitive button.\n\nShe closed her eyes and bucked, lifting her hips off the bed. Marija held her down admirably and left her clit and moved down her lips to the bottom. Simultaneously, two fingers from her free hand crept into Heather and began their work.\n\nMarija was obviously no amateur at this. Her fingers had technique, twisting, curling, spreading and crossing each other inside her lover. It was as if she had a roadmap for her fleshy walls and knew exactly where to prod and where to tease.\n\n\"Can I please cum?\"\n\n\"No,\" said Marija sternly. \"You cum without permission and I will take you back to camp tomorrow and make you repeat that performance in front of my soldiers.\"\n\nHeather stiffened, unsure how seriously to take that threat. She felt the insistent waves of orgasm course through her and threaten to overwhelm her, but she held them back.\n\nThe fingers went deeper now. Each thrust went all the way to her deepest recesses before withdrawing fully and plunging in again. The other hand was twisting and kneading her nipples, pinching them whenever possible.\n\n\"Please, now.\"\n\n\"Not yet, you insolent Yankee.\"\n\nHeather clenched her eyes shut. Her nervous system was on fire, all sensory endings burnt raw with the torrents of pleasure coursing through her. Just when she felt she might have to risk the threat, she heard the magic three-letter word.\"\n\n\"Now!\"\n\nIt was immediate. The dam broke and then exploded. The room spun around her as she felt the indescribable throes of her climax. Her fingers and toes curled in ecstasy as she felt lighter than air, floating above the bed.\n\nFor a few minutes, there was no sound in the room apart from their laboured breathing. Neither tried to extricate themselves from the sweaty tangle of limbs.\n\n<p align=\"center\">* *</p>\n\n\"Want one?\"\n\nHeather held an open pack of her precious Marlboros. She had already taken and lit one for herself.\n\n\"Wouldn't want to deprive you of your cancer sticks. Give me some of yours.\"\n\nHeather held out her lit cigarette between her thumb and forefinger while Marija took a deep drag and slowly let the smoke permeate out into the darkness.\n\n\"Do you miss your old life?\" Heather asked.\n\n\"A whole lot more than you do,\" came the reply.\n\n\"In all fairness, I was brutally kidnapped by the Serbian Liberation Army. You, on the other hand, chose this fight.\"\n\n\"Your boss, Crispin Salinger, chose the fight. I'm just fighting back.\"\n\n\"Yes, I'm sure he is positively quaking in his boots back at his Sun Valley lodge.\"\n\n\"He should be. He's taken too much from me. My father, my country, the General...\"\n\nMarija's voice choked. Heather had never seen her calm demeanour crack in the four months of her captivity. She gently stroked her smooth black hair as she started again.\n\n\"I was eight when my mother died. Anja was just a baby. She barely even remembers her. The General and his wife didn't have children of their own, so we were their proxy. Our father was always busy rising up the political ladder, but Uncle Savic always took care of us. His wife took us out to play at the park and baked cakes for our birthdays and Christmas. You see the men out there? Most of them have been trained by him and would lay down their lives without question on his order. He inspires loyalty like no one else.\"\n\nHeather smiled and kissed her on the forehead. Marija's recollections of the General were incongruous with the bloodthirsty monster the media had thoughtfully dubbed \"The Butcher of Kosovo\".\n\n\"All his life, he only loved his country and his family... because that is what we were to him - his family. To see him on trial for crimes he did not do...\"\n\nHeather kissed her again. The sentence did not need to be finished.\n\n\"I'm so sorry for what happened to you,\" said Heather softly. \"I wish I was here to fight for you rather than against you.\"\n\n\"It's all right, Heather Franklin. You're not here to fight. I am.\"\n\nMarija stood up. Heather could only see her silhouette against the sleet outside the window.\n\n\"When you look outside, what do you see?\"\n\n\"Snow?\"\n\n\"What do you really see?\"\n\nHeather scrunched her face in concentration before she gave up and turned her attention back to her cigarette.\n\n\"You see beautiful scenery, from lush meadows to snowy peaks to dense forests. That greedy bastard, Salinger, sees untapped natural gas. Do you know what I see, Heather Franklin?\"\n\nThere was a pause while Marija formed the rest of it in her mind.\n\n\"I see home. I see where my father is buried and his father before him. My father died trying to defend my country against a corporate coup. My grandfather died fighting the Nazis in modern-day Volgograd. Same for his father too. Generations of my family have built this country. They have fought for it, bled for it, died for it. We're all that's left, Heather. Me and my sister. Generations of Kova\u010devi\u0107s live within us now.\"\n\nShe sat at the edge of the bed, her eyes staring wistfully into the distance.\n\n\"You'll die,\" Heather said softly. \"You've made too many powerful people angry for this to end any other way.\"\n\n\"Maybe,\" she chuckled. \"But if I had stayed in London and just written an op-ed about it in The Guardian, I would have died anyway. Maybe decades later and maybe of natural causes, but my soul would have died the second I made that choice.\"\n\nHeather clasped her arms around her lover and brought the last remnants of her cigarette to her lips. Marija lightly held her wrist and took a deep drag off the end. The ember glowed brightly in the near darkness.\n\n\"To every man upon this Earth... Death cometh soon or late.. And how can man die better... Than facing fearful odds..\"\n\n\"For the ashes of his fathers... and the temples of his Gods,\" finished Heather and kissed the back of her neck.\n\nThey stayed like that for some time, with Heather's arms wrapped around Marija's muscular shoulders from behind while she sat at the edge of the bed.\n\nIt took Heather being brutally kidnapped and imprisoned for four months to feel such reverential awe for someone for the first time in her life.\n\n<p align=\"center\">* *</p>\n\nDAY 150\n\n\"How bad is it?\"\n\n\"There are more skirmishes every day,\" Wren reported. \"We're seeing many more casualties. They are getting deeper into our territory as we speak.\"\n\n\"They meaning the armed forces?\"\n\n\"Yes,\" said Wren. \"And it gets worse.\"\n\nShe sat down and shook her curls off her face.\n\n\"I always heard rumours that my grandfather had his own private army. It made sense since he had entered the private military business. His company, Lansing Security, has thousands of highly trained mercenaries on demand. Not just overweight retired mall cops. We're talking ex-special forces, Sayeret Matkal, the Spetsnaz, SAS and more. They're hand-picked as reliably ruthless. After the pipeline is built, Lansing Security already has the contract lined up to protect it from attacks worth hundreds of millions over ten years.\"\n\n\"You think he has some freelance commandos doing his dirty work?\" asked Marija, clearly concerned.\n\n\"The number of soldiers not coming back and the injuries I see on the ones that do... I think they're already here. Soldiers follow orders, they take no pleasure in what they do. But these men, they enjoy making it hurt. God help us all if they are out there.\"\n\n<p align=\"center\">* *</p>\n\nDAY 180\n\n\"Come. I want to show you something.\"\n\nWinter had given way to spring and the snow receded from the plateau. The lush greenery unfurled around them like a billiards table. The camp was bustling with activity. Soldiers trained, no longer surprised to see the American with their leader.\n\nTowards the far side of the camp was a steep cliff. At the base of the cliff, a cave opened up. It was wider than a road and as high as a building.\n\n\"Shall we?\" asked Marija, leading the way.\n\nHeather followed. The ceiling of the cave was interspersed with openings. Pockets of light streamed inside.\n\n\"Serbian soldiers found this cave in the nineties. It opens into a network of tunnels. They mapped out each path, dug further where required.\"\n\nIt was evident that in the distant past, a river had flowed through here. A river that had eroded the rugged rock faces to smooth walls.\n\n\"You asked me before what was my endgame? You're in it. The tunnels go on for hundreds of miles into the forests of Croatia, the valleys of Macedonia, even Albania. We have already prepared and can escape on a moment's notice. Then we keep moving, keep fighting.\"\n\nHeather marvelled at the view around her when Marija engulfed her in a hug and pressed her lips to hers. They kissed, used to each other's rhythm by now. Their tongues played with each other while they remained wrapped up in each other.\n\n<p align=\"center\">* *</p>\n\nDAY 205\n\nIt was a bloody day. There was a meeting of Salinger company executives with Serbian and Bosnian government officials in Minsk. A meeting no doubt about the delays to their timelines over acquiring the natural gas reserves and making them operational.\n\nThe meeting was rudely interrupted when one of the catering staff smuggled two bricks of C4 in under his serving cart. The entire banquet hall was blown to hell. Only charred remains with expensive Rolexes remained to be identified.",
        "\"You might as well ask.\"\n\nHeather looked up from the grim news on her tablet and looked at Marija.\n\n\"Did you do this?\"\n\n\"I must be one hell of an escape artist to go all the way to Minsk and back undetected yesterday.\"\n\n\"You know what I mean. Did you order it?\"\n\nMarija looked at her curiously, trying to get a read as to how she felt.\n\n\"No, I didn't. Not directly, at least. I have loyalists in Belarus. It was most likely one of those groups thinking they were helping me.\"\n\n\"They didn't,\" said Heather, lighting a cigarette. \"This is not playing well. Until now, you still had some hipster sections of the media on your side. With this, every single major world leader worth his or her title has condemned it.\"\n\n\"They weren't exactly fans of me before.\"\n\n\"You lost whatever sympathy you had. The few die-hard environmentalists writing for you will stop. There were civilians in that hall too. A family of six celebrating their twentieth anniversary. Two Dutch college students on an internship. A whole series of innocent collateral damage.\"\n\nMarija took a deep breath.\n\n\"I'm sorry it happened, Heather. I wish innocent people did not have to get hurt. But I cannot be responsible for what my supporters do. Whatever you may think of me, know this... my heart breaks for those who died who do not have any stake in my fight.\"\n\n\"I know,\" said Heather and placed a comforting arm on her shoulder. \"I just wanted you to remind yourself of it.\"\n\nMarija took her hand, kissed the back of her palm.\n\n\"What does Salinger have to say?\"\n\n\"The usual one line statement from a company spokesperson condoling the loss of lives at the behest of the rebels. That's all you will hear from him.\"\n\nBoth women looked up to see Wren entering the room.\n\n\"Anja just left on another supply run with a regiment of soldiers. I had some free time.\"\n\nShe sat down opposite them and shook her curls off her face. She could not be older than her late twenties or early thirties, but the creases across her temples and the bags around her eyes showed a different picture. Over a year of treating displaced refugees and patching up rebel soldiers had aged her terribly.\n\n\"You still haven't told me how you ended up here,\" said Heather.\n\n\"Didn't I say we would need something stronger for that?\"\n\n\"Speaking of which,\" said Marija, retrieving a small box from her cabinet. She placed it on the table and opened it.\n\n\"Holy shit!\" exclaimed Wren, picking one up. \"Is that what I think it is?\"\n\n\"How did you get your hands on this?\" asked Heather curiously.\n\n\"My black market contact added it along with the last shipment of arms. Compliments of the house.\"\n\nEven as she said this, Marija took out an ornate lighter.\n\n\"Ladies, shall we?\"\n\nShe helped light all three joints before she lay back on her couch.\n\n\"Give it some time,\" she said. \"If you see lights flash too bright or the stars sparkle, that's when you know it's working.\"\n\n\"My grandfather's getting into the marijuana business. His stores are popping up state by state, suspiciously soon after that state legalizes it.\"\n\n\"Crispin Salinger's a drug dealer now?\"\n\n\"Fancy stores with shiny packaging instead of corner boys with dime bags, but yes,\" said Wren, taking another drag. \"Along with big power, big construction, big defence and big real estate, my grandfather is officially big weed now.\"\n\n\"Does that go with the rest of his... respectable empire?\"\n\n\"Anything is respectable if it makes money,\" replied Wren. \"I'd wager cannabis is a lot more respectable than what he has done here.\"\n\n\"What's he like, your grandfather?\" asked Marija, exhaling slowly. \"You probably have seen more of him than anyone else in the world.\"\n\n\"Did he once really book a whole Broadway theatre to see a play alone without the distractions of anyone else?\" asked Heather.\n\n\"Yes.\"\n\n\"Did he really gift his office cleaner a whole apartment complex because he was so impressed by how well she cleaned?\"\n\n\"Oh yes. I've met her. Nice lady.\"\n\n\"Did he - \"\n\n\"Let me stop you right there, Heather. If you've heard about it and it sounds outlandish, he probably did it.\"\n\nHeather and Marija took a deep drag each. Wren started again.\n\n\"The one failure in Crispin's life was his daughter. My mother. He married her to the son of a wealthy Louisiana businessman. Within a year of their marriage, I was born. Then...\"\n\nThe two other women listened with rapt attention.\n\n\"You have to understand that while my parents loved each other - they weren't really cut out to be parents. Being responsible adults, let alone good parents, would have required them to cut down on most of their social life. That was a sacrifice neither was interested in. Whether it was partying all week in Miami or going on a wild rager that went on for a month at Ibiza or taking a cruise to Monte Carlo. They were addicted to excess and had money to burn. I was raised by my grandfather and his staff while my parents were partying in some exotic locale or the other.\"\n\n\"That sounds horrible.\"\n\n\"It wasn't that bad, really. My grandfather blamed himself for being too liberal with my mother. With me, it was like he had a second chance at a child. I had the most expensive tutors at home and the best private schools abroad. He even insisted I take his surname, so the world would know I really was... and it worked.\"\n\n\"I bet it did.\"\n\n\"You have no idea,\" said Wren with a chuckle. \"The best med schools fell over themselves to have me attend and attract Crispin's endowments. After I graduated, I got a residency at Mass General that's nearly impossible to get. Coincidentally, an anonymous donor had just given them enough for a cutting edge infectious disease wing. He paved the way for me wherever I went.\"\n\n\"Sounds like he loved you.\"\n\n\"He loved me like how Da Vinci loved the Mona Lisa or how Michaelangelo loved the Sistine Chapel. He didn't love me like a grandfather loves his granddaughter. I was a project to be constantly improved and bragged about. An extension of him.\"\n\n\"How did you feel about it?\" asked Marija.\n\n\"I liked it. Who wouldn't? But as time passed, the veneer cracked. I saw him for who he really was. I saw him cross every line imaginable in his insatiable greed for money and power. I was barely in high school during the invasion of Iraq and I still had a nagging feeling in my gut that he was involved. I saw all the people his top aides met, but I never really put it together until months after the fact. When he decided to do it all over again here, I decided I had to do something. I joined Doctors Without Borders and now here I am.\"\n\n\"And you just welcomed the granddaughter of the man who overthrew your father?\" asked Heather curiously.\n\n\"Do you see a lot of doctors queueing up to help us?\" replied Marija sardonically. \"I had my reservations at first, but Wren has helped more people than I can count over the last two years.\"\n\n\"And that's not even the real reason I'm here,\" said Wren. \"You see, Heather, even with the cliffs and impossible terrain, Uncle Sam can always send a drone strike. In fact, as we speak, there are probably Reaper drones up there armed with Hellfire missiles ready to fire. The only reason they don't - me.\"\n\n\"You?\"\n\n\"Yes, me. No matter how many times the Pentagon assures my grandfather that the drone strikes are precise and they can assure no harm will come to me, he will have none of it. Me being in the same zip code as a possible drone strike is too much of a risk for him. If so much as a firework goes off within a ten mile radius, my grandfather will make sure whoever gave the order never so much as works as a janitor ever again.\"\n\n\"Our guardian angel,\" said Heather.\n\nMarija put her joint down and surveyed the other two women for a few minutes.\n\n\"Maybe you should thank her, Heather,\" she said.\n\n\"Didn't I just do that?\"\n\n\"No, you rude Yank. I mean, really thank her,\" Marija emphasized, a glint in her eye. \"Don't you have any manners? The good doctor is keeping us all alive and all you can give her is half-baked thanks.\"\n\n\"What do you want me to do?\" asked Heather, clearly too acquiescent.\n\n\"Ask her what she would like you to do for her.\"\n\nHeather turned her gaze back to the mass of curls sitting opposite them. Wren was clearly far more interested than she had been a minute ago.\n\n\"What would you like me to do?\"\n\n\"I don't know, Ms Franklin,\" she said. \"What do you do?\"\n\n\"Well, if you ever do something illegal, I could probably find a way to get you out of it,\" Heather shrugged.\n\n\"I'll keep that in mind. I always hated parking tickets.\"\n\n\"Parking tickets. Taxes. Embezzlement. Fraud. Murder... take your pick. I've made people I knew were guilty of all of them go free. If there's a law that you've broken, I can break it further to get you off.\"\n\n\"Ahem,\" interjected Marija, lighting a fresh joint. \"Before you started advertising your services to Dr Salinger, I was thinking of a whole other kind of getting her off.\"\n\n\"Oh... oooooh,\" Realisation slowly dawned on Wren.\n\n\"So how about it, doc? Do you want what I have been having for the past several months?\"\n\nIt vaguely registered in Heather's mind that she was being offered as a party favour, but she did not protest.\n\n\"I mean, I have to think about it,\" said Wren. \"I haven't exactly had a roaring social life in a refugee camp. I was going strong with a Manhattan socialite, but I'm guessing that is shot to hell since I left her and came here.\"\n\n\"Such a sacrifice,\" tutted Marija. \"Heather, please go over and thank the doctor properly.\"\n\nHeather put down her joint and stumbled over to Wren, laughing and giggling as she went. She bowed her head and pulled her into a deep kiss. Their lips angled into each other and Heather smelled the doctor's uniquely musky scent.\n\n\"You're welcome, especially if I get more of this.\"\n\n\"Come here, Heather,\" said Marija, patting her lap. \"Sit down and face Wren.\"\n\nHeather did as asked, her eyes as wide as saucers from the extremely potent cannabis. Marija pushed her fingers into the waistband of Heather's pants and pushed them down to her ankles.\n\n\"See anything you like, Dr Salinger?\"\n\nMarija's firm hands held Heather's legs apart, splaying her cunt obscenely for the doctor to see. Wren smiled and cocked her head.\n\n\"Don't be shy. Come right up to get a better view.\"\n\n\"Don't mind if I do,\" said Wren and got on her knees in front of Marija. Her gaze remained arrested on the lush opening invitingly laid out in front of her.\n\n\"Heather, would it be okay if the doctor had a taste? You heard her. She has not had any since she came here.\"\n\nHeather tried to fully process the situation. She looked down to see Wren peering up at her expectantly. Her limbs were immobile. The room was a mosaic of colours, ranging from cyan to purple, which morphed and swirled all around her. All the voices echoed around and around inside her head.\n\n\"We're waiting, Heather.\"\n\nShe clenched her eyes shut and opened them. Wren still waited patiently between her legs.\n\n\"Yeah. I mean she has helped us a lot and deserves a reward.\"\n\nA look and a nod passed between Marija and Wren before Heather felt a pair of hands on her inner thighs spreading them wider. She looked down to see Wren holding her apart and looking straight at her cunt.\n\n\"She's wet,\" Wren exclaimed, looking at the glistening hole.\n\nWithout further comment, she slid her index and middle fingers into Heather all the way to her second joint. It elicited a gasp at the sudden intrusion before Heather adjusted to the feeling of her rough, calloused fingers rubbing her velvety walls.\n\n\"It feels like my OBGYN rotation all over again,\" laughed Wren. \"You're still so tight. No wonder Marija keeps you to herself.\"\n\nMarija chuckled and held her legs open wider.\n\n\"Come on, doc. You know you want to.\"\n\nHeather had closed her eyes to focus all her senses on the fingers plunging in and out of her when she suddenly felt them leave. After a momentary respite, she felt their place taken by Wren's tongue, which went as deep inside her as it could.\n\n\"Oh... fuuuuuuuuuck!\"\n\nHer eyes shot open as she saw the mass of copper curls between her legs. Wren's tongue was no less skilful than her fingers, alternating between her clit and lips. Each swipe of her tongue against Heather's most sensitive parts sent currents of pleasures flowing all the way to the farthest reaches of her nervous system.\n\n\"Remember, babe. Don't cum unless I say you can.\"\n\n\"Oh, come on,\" whined Heather. \"Give me a fucking break.\"\n\n\"Such language. Such insolence,\" Marija tutted. \"I am going to have to remind you of your manners when our guest has left.\"\n\nWren ignored them and kept to her task. The air was redolent with the smell of Heather's juices and the doctor's tongue made wet slapping sounds.\n\n\"May I please cum?\" asked Heather, holding back with all her might.\n\n\"Soon.\"\n\nHeather gritted her teeth as the unrelenting assault continued. Now the fingers had re-entered the fray and worked in concert with the talented tongue. She could feel the imminent deluge of pleasure approaching her like a hurtling train.\n\n\"Please...\" she beseeched her captor to no avail.\n\nThe doctor increased her pace. Up and down, back and forth, left to right. Her tongue was everywhere at the same time, extracting every last ounce of pleasure from her prey.\n\n\"Now,\" whispered Marija into her ear.\n\nThat was all it took. She closed her eyes and surrendered. Her body almost buckled under the sheer force of her orgasm.\n\nToo tired to move, she closed her eyes and let herself lie limply in her lover's arms.\n\n<p align=\"center\">* *</p>\n\nDay broke. Warm shafts of sunlight crept in through the open window onto the queen-sized bed. Heather and Marija lay wrapped in each other's arms and covered in a duvet. It was almost too ideal to be true.\n\nAnd it was.\n\nThe tranquillity was broken by a loud scream. Marija sat upright and hurriedly reached for some clothes she had discarded earlier. The screaming got closer, as did the sound of stomping footsteps.\n\n\"Stay behind me,\" Marija said quickly before getting out of bed just in time to greet a livid Anja entering the room. She stood at the doorway and surveyed the semi-dressed lovers in front of her.\n\n\"What happened, Anja?\"\n\n\"They killed him, Marija. They fucking killed him. It's all over the news.\"\n\nMarija took a brief pause to process the news. She grasped the bed frame for support as the full realisation of what had happened hit her like a freight train.\n\n\"When?\"\n\n\"A couple of hours ago. His trial was barely over. He still had appeals left. It shouldn't have been so soon.\"\n\nMarija looked up as Anja handed her the tablet.\n\n\"Somebody leaked a video of his execution online. The lethal injection didn't kill him immediately. They must have made a mistake with the dose or the chemicals but he bucked and thrashed in agony before he died. For ten minutes.\"\n\nMarija gritted her teeth as she pressed play on her screen and watched the grainy video. The General, the man she and her sister had looked up to all their lives, writhed and screamed in agony while the assembled men just looked on.\n\n\"Anja, I'm so sorry,\" she said and moved to hug her sister. Anja, however, rebuffed her attempt and shoved her aside.\n\n\"While the two of you have been playing house, our soldiers have been dying, our people have been dying and now, Uncle Savic is dead and we did nothing to save him. Nothing at all.\"\n\n\"That's not true, Anja. We did everything we could.\"\n\n\"Liar,\" she screamed back. \"We did nothing. I was too busy managing the camp and you were too busy fucking your whore.\"\n\n\"Anja, please...\"\n\n\"No. That is the last time I trust you. There is nothing between us now. I couldn't save Uncle Savic, but I can damn well avenge him.\"\n\n\"Anja, please... think this over. Don't do anything rash.\"\n\n\"I am way past that now,\" Anja laughed. \"I will go and put the word out to all our sympathisers and loyalists everywhere. Go find a Salinger employee and kill them. Kill them and their families. Kill them so their employer knows he's next.\"\n\n\"Anja, they are innocents who have nothing to do with what happened to Uncle Savic.\"\n\n\"Maybe, but that's the only language Crispin Salinger understands. I will kill every last employee of his with my bare hands if I have to... starting with his lawyer.\"\n\nAnja's gaze suddenly shifted to Heather's supine form amidst the bedsheets. In a trice, she was on the bed, clambering over to the redhead. Heather tried to kick her off, but Anja was far too strong and she had her palms around Heather's neck.\n\n\"Anja, NO!\"\n\n\"I have to. Before she came along, you were the leader we needed. You were always one step ahead of our enemies. The old you would never have let him be executed. You've gone soft fucking this bitch.\"\n\nHeather felt her vision blur and it got harder to breathe. Marija clambered on top of them and tried to prise Anja's hands away from her throat.\n\n\"I need to do this. I need to kill her,\" she wailed. \"They killed him. They didn't even grant him a bit of dignity in his death.\"\n\n\"She didn't do anything,\" Marija forced out through gritted teeth. \"We will get back at Salinger, but not today. Not this way.\"\n\nJust when Heather felt like she would pass out, Marija wrenched her sister's hands away from her throat and pushed her off the bed. She stood up and looked at the pair, incandescent with rage.\n\n\"I want my sister back, you bitch. I don't know what you've done with her, but I want her back. I-I.. need her.\"\n\nThat was all Anja managed before twin teardrops broke through her defences. One of her tears traced the groove of a deep scar all the way to her ear.\n\n\"Anja, sestra,\" said Marija and moved to wrap her arms around her sister.\n\n\"Don't,\" screamed Anja and blocked her. \"Just fucking don't. He loved you. He loved us and we couldn't save him. You didn't even try.\"\n\n\"We did try,\" said Marija. \"We tried all we could, but failed.\"\n\n\"Fuck you. Fuck both of you,\" growled Anja and left the room. Marija looked shell-shocked for a brief instant, but quickly composed herself. Now was not the time for regret or recrimination.\n\n\"I have to go and stop her from doing something stupid.\"\n\nHeather simply nodded.\n\n\"Not just her, but the rest of them out there. He was a hero to the people and a father-figure to the soldiers. They will want blood too. I'll have to go calm them.\"\n\nHeather sighed deeply, realising they would be difficult to persuade.\n\n\"You stay indoors. Don't leave the house. If one of the soldiers sees the lawyer of the man who killed their beloved leader...\" said Marija, leaving the unsaid implication hanging.\n\n\"Understood.\"\n\nMarija left hurriedly. Heather took the tablet and played the video again.\n\nShe had never seen a decorated and revered war hero having a seizure and crying like a helpless child. It was a sight she could have gone her whole life without seeing.\n\nAnd yet she knew that somewhere, the video would have brought a smile to Crispin Salinger's face.\n\n<p align=\"center\">* *</p>\n\nHeather was lost in thought, staring outside her window when the doors burst open. Marija walked in wearing full camo and purpose in her stride.\n\n\"Listen to me carefully,\" she said. \"There is a car and a driver I trust waiting at the back of the mansion. He will take you to the town of Mitrovica. There, another contact of mine will give you shelter and passage to Belgrade where you can go to the American consulate.\"\n\n\"I'm not leaving you.\"\n\n\"Don't fight me on this. Go!\"\n\nHeather sat on the bed with her arms crossed.\n\n\"Heather, please, you don't understand,\" implored Marija. \"I cannot tell my men that I am keeping you to trade for the General any longer. Whatever protection you had is gone now. All they see you as is part of Salinger's machine. The machine that killed the man they look up to. If you stay... I may not be able to keep you safe.\"",
        "\"I'll take that chance,\" she replied plainly. \"I'm not leaving you. Especially not now.\"\n\nMarija looked her up and down before letting out an exasperated sigh.\n\n\"Fucking hell, Heather!\" she yelled, visibly losing her cool for the first time that Heather had seen. \"Why won't you listen to me? You've got a target on your back and everyone out there is going to take a shot at it.\"\n\n\"I don't care. I'm staying.\"\n\nUnable to restrain herself any longer, Marija grabbed Heather by the shoulders and raised her to her full height.\n\n\"Just go. Please. I can't lose you.\"\n\nHeather smiled and kissed the back of her palm.\n\n\"You won't lose me. Not a chance.\"\n\nSaying this, Heather wrapped her arms around Marija and buried her face in her lover's shoulder. She grasped her tightly and gently kissed her cheek.\n\n\"All day, you have been trying to calm your sister. Trying to calm your soldiers. Trying to protect me from their wrath. Trying to talk your supporters out of killing innocent people as revenge. Has anybody asked you how you are feeling? You were close to the General too. He practically raised you and your sister. Anja got to break down and rage, but not you. You were too busy looking out for me.\"\n\nMarija was breathing heavily now. Heather held her tighter.\n\n\"Let me be the first one to tell you this today - I am so sorry you had to see him die. I know how much he meant to you.\"\n\nHeather felt a drop of wetness on her shoulder. Marija was not built to sob audibly, but this would do. These tears were long overdue.\n\nShe had been far too strong for one day.\n\n<p align=\"center\">* *</p>\n\nDAY 240\n\n\"Thanks.\"\n\n\"For what?\" asked Heather, caressing her cheek.\n\n\"Thanks for letting me cry the day the General died. I needed it.\"\n\n\"You don't need to thank me for that.\"\n\n\"I wouldn't have been able to break down in front of anyone else,\" Marija admitted. \"They can't see me being weak. You can.\"\n\n\"What are prisoners for if you can't be yourself with them?\"\n\nMarija laughed and propped herself up on her elbow to admire Heather. They had spread a blanket on the terrace of the mansion and lay under a cloudless, moonlit night. She ran her fingers through her captive's reddish brown hair and twirled a couple of strands between her fingers before tucking them behind her ear.\n\n\"How's Anja doing?\"\n\n\"She was furious at first, as you remember. She and the more hot-headed among the soldiers threatened to go on an all-out rampage. It took a few days and a lot of talking to calm them down, to tell them that was exactly the reaction that Salinger wanted to provoke out of us. He wanted us to surrender our position.\"\n\nHeather lay on her back and took a deep breath of the cool night air. Spring had given way to summer. Normally, Heather was not a summer person, but the climate was cooler given the height of the plateau.\n\n\"Do you think Anja still blames me for his death?\"\n\n\"Probably. Keep your distance until I've figured out a way for her to co-exist with you.\"\n\nMarija sighed deeply and continued absently playing with Heather's hair.\n\n\"She shouldn't even be here. She has always been brash and impulsive and maybe even a bit reckless, but this war turned her into a killer. She didn't ask for any of this. Do you know what she wanted?\"\n\n\"What?\"\n\n\"She wanted to open an expensive French restaurant in London and treat Uncle Savic, Dad and me to a four course meal. Before the war, she wanted Michelin stars. Now, she wants violence and death.\"\n\n\"Given what she's been through, I understand,\" said Heather. \"I don't like that she frequently wants to take it out on me, but I understand.\"\n\n\"I wish you knew all of us before the conflict.\"\n\n\"Preferably not at gunpoint,\" Heather added.\n\n\"Maybe I would have introduced you to my family over dinner at my sister's three-Michelin starred restaurant. Maybe I would have proposed to you at the end of the meal. Down on one knee with a diamond ring. Like a cheesy Hollywood romance.\"\n\n\"You lose points for creativity. One knee and ring over dinner? I'd expect something less basic from one of Interpol's Most Wanted.\"\n\n\"Oh it's on!\" exclaimed Marija. \"How about on top of the Burj Khalifa?\"\n\n\"I have a fear of heights, so unless you want to clean up after me... no.\"\n\n\"There goes my next two choices then. Give me a few minutes to think.\"\n\nHeather looked up at the myriad stars embedded into the night sky. Little pins of light in an infinite darkness. Far from any major city, she could see a riot of stars, a swirling cloud in the cosmos spread out for her.\n\n\"I have a suggestion,\" Heather said softly.\n\n\"I'm listening.\"\n\n\"How about on a summer night, under a starry sky, in a rebel base in the middle of a fight for your country?\"\n\nMarija's eyes went wide and she looked at Heather. Her heart was beating so hard that it might just break out of her ribcage. She tried to say something, but her words got caught in her throat.\n\n\"Are you serious?\" she finally squeezed out.\n\n\"We don't need an actual ceremony or let anybody else know. Just for you and me. Just for us.\"\n\nAs she said this, Heather took Marija's hand in hers and interlaced their fingers. She turned on her side until her face was almost touching Marija, their eyes inches apart. So close that she could see the moonlight shining on her crystal clear blue irises. So close she could see the glistening teardrop at the corner of her eye. So close that she could see Marija's trembling lips part to let out one solitary syllable.\n\n\"Yes.\"\n\n<p align=\"center\">* *</p>\n\nDAY 275\n\n\"All right. How bad is it?\"\n\n\"We're losing more men every day,\" confirmed Wren. \"The combined NATO forces and my grandfather's mercenaries now have all the territory up to the foothills. There are more skirmishes now than there were, but it's a losing battle for us. They have more soldiers and more firepower and they can always get even more. They've choked our main supply lines.\"\n\n\"Can we hold the base?\"\n\nAnja did not like the question. She pondered over it for a few long moments before she shook her head.\n\n\"Okay,\" sighed Marija. \"We've known this day was going to come for a while now and we've planned for it. Anja, you rally the troops and delay their advance as much as possible. Wren, you organize the movement out through the cave system. Make sure everyone has all their belongings packed and ready to move on a moment's notice.\"\n\n\"We're talking thousands of families here. They've already lost their homes once.\"\n\n\"I know,\" said Marija. \"Our home is wherever we go. In a few months time when your grandfather's troops come in and start firing, I don't want any civilians around. We move to the forests and we keep moving. That's how we survive.\"\n\n<p align=\"center\">* *</p>\n\nDAY 300\n\nSomething was wrong. Heather could sense it as Marija paced a hole in the floor. She had already tried to ask twice and been rebuffed.\n\n\"She should have been back by now,\" she finally said.\n\n\"Anja?\"\n\n\"Yes. She went on a supply run with a group of soldiers to get weapons and ammunition from the Serbian army base. That was two days ago.\"\n\nHeather wanted to offer reassurance, but realised she was out of her depth. She placed her hand over Marija's palm and pressed down comfortingly. It did little to calm her.\n\n\"If something happened to her, I-I...\" Marija started before her voice trailed off. \"I can't lose her, Heather. I can't. She has to be alright.\"\n\nHeather simply nodded, unsure of what she could say to comfort her. Back in Manhattan, she had the might of the most powerful law firm in the city to impose her will. Thousands of miles away, she was utterly powerless.\n\nMarija checked her walkie once more. Heather's Serbian had improved greatly in her ten month captivity and she understood when the voice on the other end confirmed that there had still been no sign of Anja.\n\nSeconds turned into minutes and minutes into hours. Marija checked in at regular intervals, but got nothing. She wanted to go to the base, but didn't want her soldiers to see her like this. As long as Anja was not back, there was no reason to assume the worst. Maybe the infiltration took longer than expected, maybe she found additional supplies to transport back. It wasn't the first time she was delayed.\n\nEven as Marija voiced her rationalisations, they did not soothe her. An imperceptible dread permeated her being and could not stop the spectre of her sister's fate hanging over her. She couldn't explain how, but she knew that something bad had happened.\n\nProvidentially, when she checked in again, there was a response. Heather watched from the bed as her jaw tightened and the colour left her face as she heard more. She sank to her knees and pummelled the floor.\n\nAnd now Heather also knew.\n\n<p align=\"center\">* *</p>\n\nThere was a crowd of soldiers gathered when Marija stopped the jeep. Many looked shell-shocked, some horrified. All eyes turned to the two women who got out. Heather knew none of the soldiers looked kindly upon her, but in the moment, she didn't care.\n\nThe throng parted to allow them in. Marija seemed to be on auto-pilot, at once wanting to know what awaited her and dreading it. The closer she got, the more effort it took.\n\nShe was at the centre of the crowd when she saw it. The vehicle Anja had taken. There were no supplies. In the front seat lay the bullet riddled corpses of two of the soldiers. The back was covered by a tarpaulin. Not Undertaker was standing near the truck tried to block Marija from lifting it.\n\n\"Please. I have to see.\"\n\nPursing his lips, he moved aside and helped Marija lift the tarpaulin. He clenched his eyes trying to block out the sight.\n\nAnja's naked corpse lay prone. The old scars on her face paled in comparison to the fresh ones on her back. They went deep and extended all across the length and breadth of her body. There were bruise marks around her wrists and ankles where she had been presumably tied down. Each laceration was surrounded by circles of burnt skin. The ones who did this had taken their time and clearly enjoyed it.\n\nNo soldier would ever have done this. Not even the worst kind. They were definitely Salinger's men and the Serbian government had chosen to turn a blind eye.\n\nTrembling, Marija rolled her onto her back. The sight of her torso looked straight out of a Korean horror movie. Bloody and eviscerated.\n\nMarija sank to her knees and screamed. She screamed over and over again at the sky before finally she exhausted herself and wept like a child.\n\nHeather's gaze was transfixed on a patch of skin on Anja's left thigh. A short message had been carved into her skin.\n\nRegards -- CS\n\n<p align=\"center\">* *</p>\n\nWren and Heather stood several feet back while Marija readied to make her big speech. It was not to be the rousing speech of a commander leading troops into battle.\n\n\"How long do we have until the base can't be held any longer?\" Heather asked.\n\n\"A few weeks at best. Maybe a couple of months. As we speak, rebel forces are holding my grandfather's soldiers back on the narrow forest path. We have the advantage of the higher ground, but that doesn't change the fact that we are hopelessly outgunned.\"\n\n\"Is everybody ready to move?\"\n\n\"Not even close,\" said Wren. \"But we don't have a choice.\"\n\n\"We? Don't tell me you're going with them.\"\n\n\"Even if there is no fighting, there will always be sick people and pregnant women. I don't get to abandon them now.\"\n\nThey leaned against a wooden pole when Marija started in Serbian to the gathered crowd.\n\n\"I wish I could give you better news than I have to,\" she said to all assembled. \"I wish I could tell you that we are turning the tide in this war, but I can't. The enemy is just weeks away from entering the camp. These aren't soldiers that are coming. They are trained killers who have no qualms about who they hurt and how.\"\n\nOnly Heather and a few of the soldiers had seen first hand what they had done to Anja.\n\n\"We cannot defend the camp any longer. All of you, pack whatever belongings you can and prepare to leave. The doctor and the volunteers can help you and the remaining soldiers will show you where to go. It is a long path ahead of you.\"\n\nShe stopped to form the next part in her mind.\n\n\"I will be making a last stand here along with all those who will stand with me. Anybody who dies by my side will have died my brother. Anybody who leaves with the families, you are doing a great service too. No women, no children and no man who has a family will stay.\"\n\nThis caused a sudden murmur within the crowd. A group of men tried to protest in vain.\n\n\"No,\" said Marija firmly. \"This war has taken my family from me. It has taken my father and my sister. I will not let it tear any more families apart. Be with your wives, be with your children. They will need you in the times ahead. They will need you much more than I will when we face certain defeat.\"\n\nWren looked away, trying not to think of what was going on inside Marija's head. Heather placed a palm on her shoulder.\n\n\"She's doing the right thing, Wren. She doesn't get to be Mel Gibson from Braveheart just because they want her to. She's making the hard decision to give up her fight and save her people rather than take everyone down in a blaze of glory.\"\n\n\"I know,\" the doctor admitted. \"But it doesn't mean I like it.\"\n\n\"It's her struggle. We don't get to like it.\"\n\n\"I have to go and oversee the preparations for evacuation,\" said Wren. \"Be there for her. She will need you more than ever now.\"\n\nWren wrapped Heather in a hug.\n\n\"She has to be strong for everyone else, but she's broken inside. The cracks started when the General died and now with her sister... This is her swansong, her last few days of freedom. Please, be there for her.\"\n\n<p align=\"center\">* *</p>\n\nDAY 305\n\nThe storm lashed the building. A relentless gunfire of raindrops struck the window. Marija sat at the edge of the bed with a thousand yard stare. She remained motionless as Heather approached her tentatively.\n\n\"You haven't eaten anything for three days now.\"\n\nIt was impossible to know if Marija heard it.\n\n\"Don't punish yourself, babe.\"\n\nThere was still no response. Heather tried to reach out and touch her cheek softly.\n\n\"Do you think she suffered?\" asked Marija. \"Was she in pain when they were doing those things to her?\"\n\nIt was a stupid question and they both knew it. Anja would have been in unimaginable pain and Salinger's men intended it so. Heather looked down to avoid answering.\n\n\"Then don't fucking tell me to stop punishing myself,\" Marija screamed. \"That was my sister. My flesh and blood. The last bit of family I had.\"\n\nHeather sat beside her and tried to place a comforting arm. Marija pushed it away and went on.\n\n\"She had no business being here. It was my fight.\"\n\n\"You're her big sister. She looked up to you\" Heather said. \"She wanted to help you avenge what happened to your father.\"\n\n\"And look where that got her.\"\n\nMarija clenched her eyes shut and pounded her fist on the bed.\n\n\"It's my fault. It was an impossible fight. You told me that, Wren told me that, but I didn't listen. I clung onto the fantasy that we could prevail in the face of insurmountable odds. I led my soldiers and my sister into a battle that could not be won.\"\n\nHeather stood in front of her and grabbed her shoulders.\n\n\"Listen to me,\" she said firmly. \"Every single soldier who died, died fighting for their country. They sacrificed their lives for what your father and you believed in. You don't get to belittle that sacrifice by calling it a fantasy.\"\n\nUnconvinced, Marija kept her gaze fixed outside her window.\n\n\"No,\" Heather said firmly. \"You don't get to give up. Let me talk to Wren. We can still smuggle you out of here.\"\n\n\"I don't want to go.\"\n\n\"They'll kill you,\" said Heather sombrely. \"They'll have a very public show trial where they will parade you and your crimes on stage and then they'll have you executed. They did it to Saddam, they almost did it to Gaddafi, they did it to General Savic and they will do it to you.\"\n\n\"It will be no more than I deserve.\"\n\n\"You don't deserve this. You don't deserve any of it.\"\n\n\"I do,\" she said evenly. \"Whatever happens to me now, I will take it. It will be nothing compared to what my sister went through.\"\n\n\"You can't change what happened to Anja.\"\n\n\"No, but I can do this for myself. I need to do this.\"\n\nLightning flashed outside the window, painting her face white for a moment.\n\n\"It's what I want to do,\" Marija said firmly. \"I want to sit here and burn.\"\n\nHeather grasped her from behind and kissed her neck.\n\n\"Remember the vows we made on the terrace? I'll not leave you. If you burn, I'll be right here, holding you close, burning with you.\"\n\nMarija held her arm and wiped a teardrop away.\n\n\"Hold me.\"\n\nThe storm swirled outside. Miles away, deep in the forests, the last of the rebel soldiers fought the rising tide of their enemy. There was nothing left for them now. Nothing but each other.\n\n\"Please don't let go.\"\n\nThey were scared and alone and they held each other tightly for courage.\n\n<p align=\"center\">* *</p>\n\nDAY 365\n\nIt had rained all week before the day in question. The wet soil had a unique fragrance that reminded Heather of home. The full moon shone through the clouds. It was a beautiful night. Far too beautiful to be the last night of Marija's freedom.\n\nHeather and Marija sat on the grassy knoll overlooking the rebel base. A base that was deserted now, except for the scant group of soldiers trying desperately to hold back the allied offensive.\n\n\"Is it time?\" Heather asked. Marija simply nodded.\n\n\"What happens now?\"\n\n\"I honestly don't know,\" Marija admitted. \"The men who will come for me might just decide to shoot me in the head and end it all right here.\"\n\n\"And deny Crispin the opportunity of making a public spectacle of your trial? No chance.\"\n\nHeather took a drag of her cigarette and spoke again.\n\n\"I'm sorry it had to come to this.\"\n\n\"Don't be. You couldn't have prevented it.\"\n\n\"I could have shown him the middle finger when his men hired me to be part of this farce. I could have stayed in New York.\"\n\n\"They would just have sent someone else,\" smiled Marija. \"And they wouldn't have been as pretty.\"\n\nHeather smiled. It was not often that she was complimented, much less so by a terrorist.\n\n\"Let me represent you at your trial.\"\n\nMarija chuckled and caressed her hair.\n\n\"Just imagine the tabloids. Lawyer represents her own captor,\" she said. \"You don't need that baggage in your life.\"\n\nHeather tried to come up with a compelling reason why she should do it anyway when Marija spoke up again.\n\n\"Promise me something,\" Marija said. \"Promise me you will give life a chance. Right from the first time I saw you, I could see pain in your eyes. Pain and the jaded resignation of someone waiting to die. You're better than that, Heather.\"\n\nHeather held her hand and smiled.\n\n\"I don't know. The longest relationship of my life has been this one.\"\n\n\"Seriously?\"\n\n\"Yes,\" she nodded. \"I have officially been in love with a rebel leader for longer than I have been with anyone else.\"\n\n\"Wow, that is some next level Stockholm Syndrome,\" remarked Marija.\n\nBoth laughed and leaned on each other.\n\n\"It could also be Lima Syndrome,\" replied Heather. \"When a Peruvian militia group took over the Japanese Embassy in Lima in 1996, it was actually the captors who sympathised with the hostages and not the other way around.\"\n\n\"I don't think they have one for when the captor and hostage fall in love. Not just sympathy, not just acquiescence, but love.\"\n\nHeather pondered over it thoughtfully before she opened her mouth.\n\n\"Let's call it Kosovo Syndrome.\"\n\n\"My father would have been disappointed you're not calling it Serbia Syndrome,\" said Marija. \"But fine, we can call it that.\"",
        "They leaned against each other as the sound of approaching gunfire could be heard. In the distance, they could see red laser sights and shafts of torchlight cutting through the darkness of the woods and making their way towards them.\n\nIt was time.\n\n\"Do try to look traumatized. It would help my street cred if you looked more like someone who has been held hostage by a rebel army for a whole year.\"\n\n<p align=\"center\">* *</p>\n\nEPILOGUE\n\nONE YEAR LATER\n\nHeather sat up in bed. The latest object of her affections and the cause for the sheen of sweat plastered on her skin lay curled up in her sheets. She had known for some time that it was the day and she had resisted the urge to turn on her news. As if not seeing it on screen would change it.\n\nShe vacillated for a few more minutes before turning on her flatscreen and switching to CNN. The always effervescent Kelly Chavez popped up on screen. After a few minutes of working through the rest of the news from around the world, she finally got to it.\n\n\"The dreaded terrorist leader Marija Kova\u010devi\u0107, leader of the rebel group the Serbian Liberation Army, was sentenced to death today by a special war crimes tribunal in International Criminal Court. She has exhausted all her appeals and will be executed by lethal injection soon. She had been responsible for over twenty bombings and political assassinations all over Europe. Marija was the daughter of the former President who had been deposed in a coup. She and the remainder of her loyalists were holed up in a rebel stronghold in the Dinaric Alps for almost two years before a joint operation from the Serbian Army and NATO troops finally captured her.\"\n\nHeather grimaced. She had mentally prepared herself for the news, but it had done little to soften the blow. Kelly went on.\n\n\"She had taken celebrity lawyer, Heather Franklin, hostage and kept her for a year before she was rescued. All through the trial, Ms Franklin has refused to testify and remained unavailable for comment.\"\n\nOn cue, Heather saw her face come up on screen beside that of Marija. She immediately felt a lump in her throat and reached out to touch the face of the woman she loved.\n\nHer fingertip was inches from the screen when Marija's face was replaced by a grossly overweight man as Kelly smoothly segued into the actual headline of the news cycle; about a washed up, broke former child star of a wildly popular 90's sitcom who had been found naked and dead in a motel room with a speedball in his lap, a needle in his arm and two barely legal Slovakian hookers who lay equally dead by his side. His signature catch-phrase from the show was tattooed on each of his butt cheeks.\n\nHeather recoiled in disgust and changed the channel hoping for another shot of Marija.\n\nNo luck.\n\nFox could not stop gushing about Salinger Energy's record profits for the quarter and how they had beaten every Wall Street estimate. MSNBC was on the topic of a localized outbreak of bat-borne coronavirus in the city of Wuhan in the Hubei province of China. The local authorities had assured everyone that the disease was under control and had been contained. CBS was hosting a talk show with Energy Secretary, Roger Costello, asking him to confirm the persistent rumours that he was sizing up a Presidential run next cycle.\n\nShe flipped through the channels in vain before turning off the TV.\n\n\"Penny for your thoughts?\"\n\nHeather turned around to see the lady on her bed awake and looking at her curiously.\n\n\"It's nothing, Flo. Nothing at all.\"\n\n\"Your lips say nothing and your eyes say everything,\" Flo said. \"I'm here if you want to talk. We authors do make good listeners.\"\n\n\"I don't really.\"\n\n\"Oh come on, babe. We've known each other for six months and you haven't told me anything about your time with that psychotic monster.\"\n\nThe last two words rankled Heather. Her hackles rose as she stared daggers at the other woman.\n\n\"Florence,\" she said quietly. \"Just because I you're in my bed now does not give you the right to talk that way about her. I like your company, but if you do it again, you will no longer be welcome in my bed. Do we understand each other?\"\n\nFlo nodded and smiled. She understood way more than Heather wanted her to.\n\n\"I'm sorry, Heather. I didn't know,\" she said. \"Come back to bed.\"\n\n<p align=\"center\">* *</p>\n\nIt was late at night when Heather made her way to the rooftop of her Upper East Side apartment building. She had a blanket in one hand and a bottle of Screaming Eagle Cabernet in the other. It was the obscenely expensive 92 vintage, a gift from Crispin Salinger for a job well done.\n\nShe lay out the blanket and poured herself a glass. It was velvety and sweet. She checked her phone. There was yet another offer by a publisher for a tell-all memoir about her year in captivity. Hachette had joined the long queue of those who wanted the exclusive rights to her story, not to mention every single media house who had bombarded her with interview requests. A more savvy individual would have done the whole talk show circuit, had a Netflix special in the works and would already be on the phone with a major publisher. Not her. She politely declined every time. What her NDA allowed her to say, she wouldn't, and what she really wanted to say, no one would understand.\n\nShe put the glass by her side and lay down. The ambient lights of Manhattan meant the stars were barely visible, but she imagined them scattered all over the sky. She willed herself to look higher, even higher until she was past the lights, past the sky and behind the stars.\n\nIn a cosmic garden somewhere her eyes could not see, she hoped there was a French restaurant where Anja served a sumptuous meal to her father and Uncle Savic. Marija would join them soon. There was joy and laughter at the table.\n\nShe hoped for it, even if she wasn't a part of it.\n\nFor Heather Franklin didn't belong there. She could not bear the thought of joy and laughter. Wherever she went, heartache and death followed.\n\nAs she stared up at the stars, her vision blurred and her tongue tasted something salty.\n\n<p align=\"center\">* *</p>\n\nEPILOGUE II\n\n(You weren't expecting that now, were you?)\n\nThe Hague, Netherlands\n\n\"Why can't this charade come to an end?\" thought Marija. Despite the sentencing, she kept having to come back to the same court and listen to the same judges regurgitate the same lies. She was being asked to allocute to her crimes in public, something about the victims of her attacks wanting closure.\n\nSadly, there was no such closure demanded for the innocent Serbians who had died in the war. Or for her sister.\n\nA fresh pang of sorrow went through Marija as she thought about her sister. Anja should not have been anywhere near a war zone. Vivid images of her violated corpse floated in front of Marija's eyes, indelibly seared into her memory. She craved the needle as soon as possible if it would help expedite her fate.\n\nDeath promised nothingness. A freedom from the lies and the pain.\n\nShe sat in the court room in her usual stony-faced silence. The so-called victims sat opposite and eyed her curiously. Perhaps they expected her to have horns or a spiked tail. The devil could not possibly look like her.\n\nThe trio of judges waited patiently until it was clear that no allocution was forthcoming. Sighing, they asked her to be sent back to prison and would schedule another hearing.\n\nEvidently the puppet-master sitting thousands of miles away wanted a show and she was being a spoilsport by refusing to give it to them.\n\nThe bailiffs grabbed her by the arms and escorted her out. The press had long lost interest in the trial. From thronging the courtroom and spilling over into gallery at the start of the trial to a few disinterested scribes clearly too busy on their phones now.\n\nThe men handed her over to the waiting van for transport back to the prison. Even the security presence around her had receded to the bare minimum. No one was interested in guarding a deflated prisoner with no interest in escaping. The judges may have passed the sentence, but she had spent the whole year as a dead woman walking.\n\nThe guard looked new, not that Marija really cared. She had been on auto-pilot for over a year and was just going through the motions at that point. To her, it was another face in a sea of faces.\n\nHe opened the back of her armoured transport van and let her climb in.\n\n\"For the ashes of his fathers and the temples of his Gods.\"\n\nMarija's head snapped up at the man who had now climbed in with her. He smiled at her and undid her handcuffs. He knocked on the driver partition and it slid aside, revealing the copper curls of Wren Salinger.\n\n\"We have to hurry. They'll figure it out soon. Our fake IDs are good, but they will eventually know, especially when you don't show up at your prison. Our best option is to switch cars. We have another car in an underground parking lot nearby.\"\n\nWren shoved a phone through the opening to Marija. Still bewildered, she flipped open the burner and found one number saved in the Contacts. An American number. The truck rumbled into motion while she pressed the call button.\n\n\"We made vows to each other that night, Marija with a J. Did you really think I would let you off the hook that easy?\"\n\n\"Heather, oh God!\" Marija's voice choked and tears burst through her eyes. \"It's really you.\"\n\n\"Of course it is. Now listen, I had to pay someone a lot of money for these two phones. The line is encrypted, but let's not stay on it for long.\"\n\n\"Got it.\"\n\n\"Wren contacted me last week. The men you will meet know what happens next. They've been planning it for over a year. Apparently, you have way more friends than you realised, you silly martyr.\"\n\n\"It's so good to hear your voice again.\"\n\n\"We'll save that for later. For now, I have to be careful. Once news of your escape breaks, Salinger's teams will be going over all the ways it could have happened and who could have helped. Given that I spent a year with you and got out unscathed means that I am definitely going to be under a microscope. It would be best if you were to go dark. This will be the last time we speak in a long time.\"\n\n\"I don't even know how to thank you.\"\n\n\"Thank me by getting rid of that sorry look I saw on TV. I don't need the defeated Marija. I need your rage. I need you to inspire as many people as you can and then I need your help to get to Salinger.\"\n\n\"He dies. There's no other way it ends.\"\n\n\"Careful now,\" Heather chuckled. \"He's eighty, so he may die of natural causes before you get to him.\"\n\n\"He doesn't get to die of natural causes,\" she said with quiet conviction. \"I am going to get into the same room as him and I will make what he did to my father and sister look pleasant in comparison.\"\n\nHeather smiled. She had missed this steel in Marija's voice.\n\n\"Stay off the grid. Go underground. Grow your army. Make plans. Know that when the time comes and you need me to play my part, I will be here waiting.\"\n\nThere was silence on the call for a few minutes before Heather spoke up again.\n\n\"Be careful, babe. You are going up against someone with unlimited resources.\"\n\n\"Do you know who is far more dangerous than someone with unlimited resources?\" asked Marija. \"It's someone with nothing to lose.\"\n\n<p align=\"center\">* *</p>\n\n\"These violent delights have violent ends.\"\n\n\u2015 William Shakespeare\n\nIf you liked this story and would like to read more about Heather Franklin, you can try the below stories about her listed chronologically\n\nHow To Catch A Falling Star\n\nThe Day The Music Died\n\nMoira\n\nEdge Of Reason\n\nBrutal Comfort"
    ],
    "authorname": "LaRascasse",
    "tags": [
        "marija",
        "rebel",
        "serbia",
        "lesbian romance",
        "lesbian love",
        "femdom",
        "sharing",
        "heartache",
        "heather franklin"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/kosovo-syndrome"
}