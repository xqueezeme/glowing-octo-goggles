{
    "title": "A Boiled Frog Pt. 05",
    "pages": [
        "First off, I apologize for the delay. I played hooky all summer and enjoyed the great outdoors. It did give me time to map out the story in my brain. Hopefully, now I can get it on paper quicker. This time I need to thank Misty F and Son of Battles for going through Part 5. Again, please vote or favorite the story if you like it, that's the only payment I get.\n\nChapter 1\n\nHere I was, laying on a couch, with two of the most beautiful creatures on the planet. I had just had my first threesome and was feeling special. Just a few short weeks ago I never dreamed that anything like this was possible, in fact I firmly believed I would go through life with only screwing one woman period, never two at once. Of course, I never dreamed I would have tits on my chest either. But the world never works the way you want it.\n\nAnd then I had to open my mouth.\n\n\"Ok girls, I need to know,\" I said \"Tell me one thing that you guys have planned that I don't know about. Just one. I don't think I can handle it all at once. But right now, I think I can handle one thing.\"\n\nThe girls looked at each other, then nodded to one another.\n\nHesitantly, Lisa spoke, \"If it's okay with you, of course, we have you scheduled for breast augmentation surgery on Thursday.\"\n\n\"Um, what happened to the injections?\" I responded. \"Didn't we decide to go that route? I specifically remembered stating that I wasn't comfortable with augmentation.\"\n\n\"But you're not gaining weight,\" Julie piped in. \"Lisa hasn't been able to do even one injection. I don't think its viable because your metabolism is just too high.\"\n\n\"Let me think on it, that's a pretty drastic step,\" I said. At first, they protested, but when I got firm, they both nodded at me, for the first time seeming unsure of themselves as I didn't cave in immediately.\n\nAfter a couple of minutes, Julie got up and headed to the restroom. The moment she left the room, Lisa vaulted into action. She was out of the cuddle and on her knees with my still flaccid dick in her mouth trying to revive it.\n\n\"Um, Lisa,\" I said. \"I'm okay right now and don't need a repeat. That was pretty good.\"\n\n\"I didn't get my turn on this dick,\" she declared. \"I get to ride you now.\"\n\nI glanced over to where Julie had headed, knowing she was in a fragile state, but Lisa was pursuing her case with an abundance of passion. My cock knew what it wanted, as it was rapidly gaining length and girth from Lisa's administrations. Once I was hard, she quickly got up and impaled herself. I laid there letting her do all the work, thoroughly enjoying myself.\n\nAs she got into a good rhythm, she began issuing orders.\n\n\"I need you to come home with me after this. Ash is worried about us since you weren't in my bed last night. She kept asking where you were. I need a good performance from you tonight so that she can report back to my parents that we are still in love and things are going well.\"\n\n\"I can't tonight,\" I said. \"And I don't think that's why Ash was asking about me. You saw the fragile state Julie is in. She needs me tonight. I am sure you understand, right?\"\n\nI could see Lisa's eyes harden. She kept saying she was willing to be second fiddle to our marriage, but part of her always liked to be in control.\n\n\"Jules is tough, she will be fine,\" Lisa declared. \"But I NEED you. You have to do this.\" She then went on with a laundry list of reasons of why I needed to take her home and fuck her loudly.\n\nI'm such a sucker. I could feel myself capitulating and I had just said \"Fine\" when Julie walked back in.\n\nJulie looked at Lisa going up and down on me and I looked for jealousy and saw none. In fact, it was the opposite -- her eyes were lighting up with lust. I guess she was really okay with me fucking Lisa. Did she still love me? I mean if I had walked in on her and Mick I would have thrown a conniption fit. Did that make me immature? I told myself I would have to think on this later as right now it was becoming harder and harder to concentrate on anything with Lisa's Kegel exercises working wonders.\n\nJulie came up and started making out with me as Lisa rode her way to orgasm, both hers and mine. She was kissing me and backing off and whispering sweet nothings to me, telling me how much she loved me and cared for me and would do anything for me. I whispered back to her that I felt the same way and her beaming smile filled her face and my heart with joy.\n\nAfter we were truly done, I mentioned to Julie that Lisa needed me to go with her tonight. Julie immediately got upset.\n\n\"No, I need you with me tonight,\" she demanded.\n\nI looked over at Lisa and her eyes were pleading with me.\n\nI turned back to Julie and said, \"What do you need me for? Lisa has Ash and doesn't want to break cover.\"\n\n\"I don't want to be alone,\" she pouted. \"Please be with me, Chris.\"\n\nI was surprised to hear that name from her. Lately, she had only been calling me Tina.\n\nI turned to Lisa. \"How bout we all four go to dinner since Ash knows Julie is my roommate? Then after dinner, I can go home with you, put on a performance for Ash, then slip out and say I need to work early so I am going home. Then I can rush home and be with you Julie. Would that work for the two of you?\"\n\nBoth girls spoke at once. Lisa stating that she wanted to wake up in the morning with me and Jules asking what she would do while waiting for me to finish with Lisa.\n\n\"There is only one of me, girls,\" I pointed out. \"You two are going to have to learn to share. You guys are the ones who put me into this mess, you have to deal with the consequences.\"\n\nPuppy dog stares was their response. I knew it was my decision. I preferred just going along with whatever my wife wanted and whatever Lisa wanted. But I guess at some point, I needed to take control. And yet, I am so weak. I punted the decision down the road a little further.\n\n\"Lisa, go home and put on something sexy. Me and Julie will run home and change and then pick up you and Ash and we'll hit Tru tonight, all four of us. Then we will see how the evening goes before making any more decisions.\"\n\nThe girls seemed okay with this plan and we headed out, agreeing to meet up later.\n\nChapter 2\n\nThe girls looked amazing. All four of them. Yes, I am including myself in that mix. Julie surprised me by pulling out a new sparkly blue dress that she had bought me. It was backless so I could wear no bra. I still had enough boobage for them to jostle around enticingly under the material, marbleizing my nipples in the process. The dress also came with a new pair of matching 4' inch stiletto heels.\n\nLisa was in a classy cream-white evening gown that was tight against her neck giving off no cleavage but cut sharply down her sides which emphasized her bosom even more. The dress went all the way to the floor but had slits that showed her legs when she moved. She looked elegant and worth a million bucks.\n\nJulie went with the little black dress, but one that looked spectacular on her. It made me glad I had locked my penis up in the femini girdle because otherwise I would have tented my dress for sure. She oozed sex appeal.\n\nAnd Ash had gone all out. Her dress was a red Chic Me sexy backless halter neck-plunged dress that exposed most of her flawless skin. The plunge line in the front went at least three inches below her breasts and I could see everything but the nipples. It was cut all the way to her waist, so when she walked I could drool over her long legs. And she had on the highest f-me heels I had ever seen, coming in close to 6' inches.\n\nNeedless to say, the three of them were all dressed to emphasize their sexiness and draw interest. In fact, it was a guarantee that every male eye focused on us as we walked in the restaurant. We had barely been seated when the first male approached, an alpha male Adonis who zoomed in on Lisa, who was obviously the most expensively dressed of our bunch.\n\nShe blew him off with style and precision, obviously something that was rote to her. I studied her while she did it, since I figured that was a skill I needed to develop if I was going to continue as Tina, which seemed more and more inevitable as each day passed. I then watched Julie do it a few minutes later, and even Ash got a chance to turn down a guy before the dinner was done. No guy approached me, which I was thankful for.\n\nAt one point, I felt a foot graze my leg. Someone had kicked off her heel and slowly dragged her foot from my ankle and upwards to my knee before pressing forward. From the angle of the attack it had to be Ash who was sitting across from me. As she nuzzled her way towards my crotch I reached down and grabbed her foot, holding it away from my groin and started to massage the balls of her foot. She smiled at this and smirked at me. This girl was trouble.\n\nBut as I sat there and enjoyed the company, the flirtations and the food, it dawned on me how impossible this was. There were more than 50 guys in this establishment, and I was with the three hottest girls in the place and all three of them was interested in me. Wimpy, little Chris. Maybe being Tina wasn't so bad after all.\n\nAsh had a plane to catch in the morning so I suggested we all head over to Lisa's place for a nightcap and to stop the procession of hopeful men. Even before we left the table, Ash announced, \"I want to ride one more time in Tina's new car, so I am going to ride with her.\"\n\nLuckily, I had foreseen this possibility and honestly told her, \"Sorry, Ash, but I rode over with Julie. She drove.\"\n\nDisappointment shone through her face and she was silent as we split up and headed to our vehicles. Julie walked with me, although she restrained from showing any PDA until they were safely out of sight.\n\nShe grabbed my arm and pulled herself in close as we walked. Her tone was flat as she said, \"You are going to spend the night with Lisa, aren't you?\"\n\n\"Actually, I am not,\" I replied. \"I really do want to be with you. We are going back to Lisa's pad where I will perform, as you to put it, for Ash. Then me and you will go back to our place where I can spend Sunday with you.\"\n\nShe snuggled in closer and kissed me before we separated to get into her car.\n\nOnce we were buckled in and heading out of the car garage, she switched subjects.\n\n\"You could fuck her, you know,\" Julie stated.\n\n\"Lisa?\"\n\n\"No, Ash,\" she responded. \"She wants you bad. It's pretty obvious.\"\n\n\"I know,\" I replied. \"She tried to grind her toes into my groin during dinner. That's why I had you drive. I can't be alone with her right now.\"\n\n\"I am okay with it,\" she said. \"I give you my permission. She certainly is cute.\"\n\n\"Honey,\" I glanced at her in astonishment. \"I can't do that. I mean that's Lisa's little sister. That's just wrong on so many levels.\"\n\n\"Wouldn't that be hot, though?\" she mused. \"Imagine doing them both at the same time. I get goosebumps just thinking about that. You would be such the stud. How many guys actually get to be with two sisters, especially two of that caliber?\"\n\n\"Not very many, that's for sure. In fact, I don't think there are too many sisters that hot out there, period.\"\n\n\"Just think about it,\" she requested. \"I would love to watch that.\"\n\nThoughts trickled back to what I heard Deidre and my wife talk about in the diner. It did seem like my wife was delving into pornography. Where else could she be getting these ideas? Yet, I never saw her doing it around me, so I couldn't be sure. In fact, she was barely ever on our home computer.\n\nWhile I was contemplating her response, we made it to Lisa's place. Lisa and Ash arrived simultaneously and all four of us walked up together. Once inside, Lisa headed for the kitchen for wine and Ash said she was going to slip into something more comfortable. Julie and I went into the living room where Julie turned on the TV and started pulling up Netflix.\n\nAsh returned in lingerie. It was see-through and I could see her nipples were erect. She then sidled into the couch right next to me, effectively forcing everyone else to sit away from me. Then dramatically, she called out, \"What we watching? I hope it's something sexy.\"\n\nShe then leaned into me and whispered, \"It's my last night in town. I am hoping for some good memories. Don't let me down!\"\n\nI looked at her and glared, but I kept my voice to a whisper as well. \"Ash, you need to cut this out. I told you I am unavailable and I meant it. I can't cheat on Lisa. I just can't. You need to let me be me. As I told you in Vegas, I need time.\"\n\nShe pouted.\n\nI had to give the girl one thing. She was like a heat-seeking missile once she had locked in her target. Unfortunately, that target was me. I didn't know how to handle that.\n\nI quickly stood up when Lisa entered the room and went to her and kissed her with a peck on the lips. Then I waited for her to sit down and sat right next to her, on the opposite side from Ash. Ash smirked at this and blew me a kiss.\n\nThe movie started but I couldn't focus on it. After the first 20 minutes, I got up and went to the bathroom. There, in the bathroom, I took the time and hassle to remove the femini girdle since I was supposed to 'perform' later. Coming out of the bathroom, Lisa was waiting for me. I guess that time was now.\n\nAs we entered her bedroom, light leaked in from the full moon and Lisa didn't bother to turn on any lights. She turned her back to me and asked me to unzip her. As I pulled down the zipper, exposing her back, the moonlight danced across her flawless muscles. It reminded me of Vegas, and the magic I felt there.\n\nI leaned forward and kissed her scapula lightly, continuing to peck as she slowly turned around to face me. My pecks went from her scapula, to her bicep, to her breasts. Avoiding the nipples, I gave each of her breasts a light peck before raising up to her mouth. She still had her heels on, so she towered above me and I had to strain my neck to reach those luscious lips of hers. She took pity and leaned down, opening her mouth to meet mine. Her hands simultaneously grasped the spaghetti straps that held my dress up, pushing them off my shoulders and pooling my dress onto the floor.\n\nAfter I pulled away breathless, I whispered to her, \"You are wonderful.\"\n\nShe giggled.\n\n\"I was thinking the same thing about you. Thank you for choosing me tonight.\"\n\n\"I am going to go home with Julie,\" I said. \"But let's not think about her, let's focus on us.\"\n\nShe had only panties and heels on after the dress had been removed. She wore no stockings tonight. I slid down to my knees and tugged the panties down. She stepped out of them for me, and as her legs split, a rich aroma drifted towards me and I jumped at the opening provided.\n\nMy tongue lashed at her clit and I saw the rivulets of moisture already starting to run down her legs. She was ready for me, strong with desire. It amazed me that this beautiful creature wanted me. As I tongue-bathed her, I thought back to our first meeting so many years ago. She had seemed too frigid then, controlling and cruel even. She was a distant memory of that now.\n\nAfter a couple of minutes, she pushed me away and climbed onto the bed to lie down. As I followed, she grabbed me and pulled my head back into place, this time controlling my head so that I'd focus on her clit. I felt her getting close so I started to slow down.\n\nShe whimpered.\n\n\"You're going to torture me, aren't you?\" she gasped. \"Can't I please just have this first one?\"\n\nI pulled my head back. \"You know it's better if you wait.\"\n\n\"I hate waiting,\" she growled.\n\nI ignored her protests and continued to tease, stretching out her pleasure and bringing her slowly to a boil. After the third time of bringing her to the brink, I succumbed to her begging and brought her to a very loud screaming climax.\n\nI heard the door knob twisted but Lisa had locked the door. Then we heard giggling outside the room. They must have heard Lisa cumming and came to investigate.\n\nI yelled out, \"We are fine in here. Everything is okay.\"\n\nLisa shouted out. \"More than okay, even.\"\n\nI heard Julie's reply. \"Have fun, you two. Don't mind us out here.\"\n\nLisa shouted back. \"We won't.\"\n\nShe then climbed onto me and said, \"My turn to tease.\"\n\nShe slid herself down onto me and started to rock. She started to squeeze her inner muscles and milk me. As I felt the pleasure build, she slowed down with a smirk.\n\n\"It's better if you wait,\" she teased. \"In fact, let's see how long we can draw this out. Three hours, four, maybe we should have you come just as the sun rises.\"\n\n\"You would be bored by then,\" I teased back. \"In fact, the first time it starts to feel good for you, you will lose all control and bounce like a pogo stick.\"\n\n\"A pogo stick, huh,\" she said. \"I will show you a pogo stick.\"\n\nHer hips started to thrust down with emphasis, slamming down into me and causing the bed to bounce. I moaned. My eyes were riveted to her breasts, those huge monsters were flying all about. I wondered if she would hurt herself.\n\n\"Oh, you like that, do you?\" she snarled. \"Does my little Tina like my pogo stick skills?'\n\n\"Uh, huh,\" I gasped, getting close.\n\nShe lifted herself completely off me and started to climb out of the bed.\n\n\"Too bad.\"\n\nIt was my turn to snarl. I dove at her, wrapped my arms around her and speared my dick back into her pussy from behind. I then proceeded to do my best impression of a jackhammer as I pistoned rapidly over and over into her.\n\nShe laughed and thrust back into me. It was exquisite. My release came quickly and I dumped into her. She fell back onto the bed, turned over and snuggled into me.\n\n\"That was fun,\" she whispered.\n\n\"I agree,\" I added. \"We need more fun in our lives.\"\n\n\"Agreed,\" she said, sighing.\n\nI started to pull away from her to get up, but she clung to me.\n\n\"Chris, please,\" she whispered. I was surprised to hear that name from her. It had been a while since she had called me that.\n\n\"Yes, love?\" I responded.\n\nIt was a miracle to see her hesitant but she was struggling to get out her thoughts. I had never seen her looking this vulnerable before.\n\n\"Please don't,\" she begged, looking at me imploringly.\n\n\"Please don't, what?\"\n\n\"Please don't sleep with my little sis,\" she finally breathed. \"Ash asked me earlier today. She really wants to be with you. I don't want to share you. It's bad enough I have to share with Jules.\"\n\nHeat boiled into me.\n\n\"Then what the hell was all this Mick stuff about,\" I asked. \"Julie told me you helped plan it all. And that was after I confided in you I wasn't interested in guys.\"\n\n\"Julie insisted,\" she eked out. \"She said it would help you be a better Tina.\"\n\n\"I guess I need to go have a heart-to-heart with her.\" I kissed her on the forehead. \"Go to sleep. I am going to go take Julie home and say goodbye to Ash. I will see you tomorrow?\"\n\n\"I can't,\" she said. \"I know it's Sunday but I have to fly out for a meeting in Boston. I won't be home until Wednesday. I guess the next time I will see you is in the operating room on Thursday.\"\n\nAll the tension that I had released through sex immediately returned and I felt my shoulders knotting up. I didn't want to get into that now so I just nodded and kissed her again before leaving the room.\n\nAs I walked down the hallway to the living room, I heard voices. Curiosity had me slow down so I could eavesdrop.\n\nI heard Ash's voice. \"Admit it,\" she accused. \"You like her just as much as I do. I am just more open about it.\"\n\n\"What makes you think that?\" Julie responded with. \"Whatever gave you that impression? Tina is my best friend.\"\n\n\"I saw the way you were checking her out tonight,\" Ash countered. \"You looked like a bitch in heat.\"\n\n\"I could say the same thing about you.\"\n\nAt that point, I didn't want a catfight to break out so I appeared.\n\n\"Please, ladies,\" I said. \"I was the least attractive one at that table and both of you know it.\"",
        "I walked up to Ash and spread my arms out for a hug. She came into them and tried to kiss me, but I nuzzled into her neck instead.\n\n\"Ash, I want you to have a safe flight now,\" I stated, distancing myself. \"Call me when you land so I know you got home safe. I do care about you. I really do.\"\n\nShe looked at me and sighed. \"No way I can talk you into tucking me in like you did Lisa?\"\n\nI grinned and shook my head.\n\nShe huffed. \"Fine. You take care of my sister for me then.\"\n\nI gave her one last hug and then called out to Julie, \"Let's go, I got stuff to do before bed.\"\n\nWe headed to the car. As we neared it, she turned to me and said, \"What do you have to do tonight?\"\n\nI smiled and looked at her.\n\n\"You.\"\n\n\"Oh, goodie,\" she squealed, as she got in the car.\n\nAs we drove away, I realized something. Lisa had asked me not to sleep with Ash and I hadn't responded I wouldn't. I mean I meant to, didn't I? Did I subconsciously know I couldn't resist Ash and so I didn't say it? Or did I mean to, because I really did I told myself, stay away from her sexually. I had enough to handle with Julie and Lisa, I didn't need any more complications. Yet, I knew a part of me wanted Ash. I just had to be the better man and resist her. I could do that, couldn't I?\n\nChapter 3\n\nI woke up the next morning with Julie sound asleep next to me. We had a quickie when we got home but it had been nothing special. I was just too exhausted to do much more than that. Today, though, I felt energized and wanted to bring the closeness back to our relationship that had been lacking lately.\n\nI rolled over and slowly pulled down Julie's panties. Her eyes flickered groggily but she continued to sleep. I eased her legs apart and then slipped my tongue into her inner folds. I was rewarded with moisture. The wetness appeared rapidly and her eyes fluttered open and she announced her waking with a groan of \"Yes.\"\n\nI lingered and played with her labia and clitoris until she built up to a climax and came, pushing away her hands as she reached for me. This first one I wanted to be all about her.\n\nWhen she was done, I reached to my nightstand and pulled out a coin. I still had the majority of them since I hadn't needed to use one in a while for sex and really didn't use them for much else, and despite the fact that I knew if I just asked she would, I wanted to give her this.\n\nI held it up to her and said, \"Can I use this to get a blowjob, dear?\"\n\nShe smiled and replied with, \"Sure, sexy. You know you didn't need to use a coin for that. I would have returned the favor.\"\n\n\"But I wanted to,\" I said.\n\nShe climbed over me and went to work. I laid back and relaxed and let the pressure build up, then release. What a marvelous way to start the day.\n\nAs she finished, I pulled her into the shower with me and took extra time shampooing her hair and scrubbing her back. As she repeated the gesture with me, I asked her what she wanted to do today.\n\n\"I have nothing planned. I just want to be with you.\"\n\n\"Me too. I thought it would be nice to go for a long drive through the countryside in my new car. I haven't driven you around in it, yet. Would that be ok?\"\n\n\"Sure,\" she replied. \"Let's pack a picnic lunch and make a day of it.\"\n\nI let her go the kitchen while I got dressed and then I pulled out the car. It was a little chilly so I told her to dress warm. I went casual -- tight jeans and a cashmere sweater followed by tennis shoes. Julie went a little more upscale and classy. She also had on a sweater, but chose tights and a skirt with high-heeled boots that came up to her calf.\n\nWe had a nice drive, lunch was great and the trip was uneventful until we pulled into a gas station to refill way away from our home. As I got out and was filling up the tank, Julie had gone into the store for a soda. She came out as another car pulled up to the fuel island. A big muscular man with GQ looks climbed out of the car. His eyes latched onto Julie's legs and he followed her back to our car. Then he saw me and smiled.\n\nOnce his pump was started and gas was flowing, he sauntered over to our car and proceeded to flirt with Julie.\n\n\"What are you two ladies doing out here?\" he said. \"And where did you get this gorgeous car? It looks almost as good as you two.\"\n\nI rolled my eyes at the line and continued to hold the pump handle. I wasn't one of those who wanted a spill and left my car unattended. As the guy continued to talk to Julie, I saw her look at me. She raised an eyebrow appraisingly.\n\nI got the gesture's message. \"What do you think,\" it said.\n\nI glared coldly at her trying to put as much hostility into it as I could. \"Really?\"\n\nShe shrugged an okay and then proceeded to dismiss the guy.\n\nAs we got in the car, I squealed out of the parking lot and turned to her.\n\n\"What the hell was that,\" I asked.\n\n\"What, he was cute,\" she replied. \"I was just asking.\"\n\nI slowed down and pulled off the side of the road. Once the car was stopped, I turned off the ignition and turned to face her.\n\n\"Didn't we just go through this with Mick? I told you I wasn't interested in being with a guy right now. What are you trying to say?\"\n\n\"I just thought you might want the experience. Your cock is wonderful. Don't you want to try one?\"\n\n\"I think it's you who wants to try one. One that isn't mine.\"\n\n\"No, no, no,\" she insisted. \"It isn't that at all. I swear.\"\n\n\"Aren't I enough for you?\"\n\n\"Don't say that, of course you are!\"\n\n\"Then let's get to the bottom of this. What do you want? Do you want an open marriage? Do you want to swing? Is that what you are pushing for?\"\n\n\"I just want you to be happy,\" she replied. \"I want to fulfill your fantasies. I know you have to have some. Can you honestly tell me that you have never not thought about having sex with a guy?\"\n\nI was about to reply, \"of course not\" when an image of Billy with no shirt on sniffing my hair appeared in my mind, I hesitated for just a second. Julie jumped on my hesitation.\n\n\"Ah hah, I knew it.\"\n\n\"Some things are meant to remain fantasies,\" I stated. \"If we all got everything we wanted, we would be spoiled rotten.\"\n\n\"I'm willing to spoil you rotten,\" she smirked. \"I will still love you.\"\n\n\"Seriously though, where is all this stuff coming from? Tell me what prompted all this. This isn't like you at all. It's like you are trying to live our life as a porno movie.\"\n\nShe blushed at the word porn. I knew she had been raised in a family that criminalized pornography.\n\n\"I caught my secretary reading this website on her computer a couple months back. After I scolded her for abusing her work time, when she left that night, I couldn't help myself and wanted to know what she had been reading. I went through her history and read some stories and I have been hooked. I've read at least one or two stories every day. I'm sorry.\"\n\nIt bothered me a little that my wife was reading porn but I couldn't complain without being hypocritical. I had did it when I was single, but once I found out what real sex was like, I didn't see the fascination with it. Nothing in fantasy land beat real life Julie.\n\n\"Can you understand that I am having trouble keeping up? I mean you have introduced me to so much I feel I am losing a part of myself. Can you give me time to adjust? For right now, I just want sex with you and Lisa? Can we limit it to that?\"\n\nAs she nodded my phone rang. Talk about timing. It was Deidre. I showed Julie the screen then answered the call.\n\n\"Hey Dee, we were just talking about you, I need to ...\" she interrupted me right there.\n\n\"Sorry to interrupt but it's an emergency,\" she blurted out, overriding me. \"I need you for your first date tomorrow night and I'm not taking no for an answer. Be at my place at 5 p.m. Dress casual.\"\n\nAnd then she hung up.\n\nI looked at Julie who was chuckling softly.\n\n\"Well, I guess we owe this commitment as well,\" I hedged. \"I wonder what she has in store for me. But back to us, can we slow down a little?\"\n\nShe nodded again, but then pressed forward.\n\n\"At least tell me what you have liked,\" she said. \"What's the favorite thing you have done now?\"\n\nThe answer popped into my head immediately, but I blushed hard when I realized that Julie wasn't in it. She was eyeing me intently and pushed harder.\n\n\"I see you know and are a little embarrassed by it. Was it me pegging your behind?\"\n\n\"No, no, it wasn't that. That was good, but it doesn't even make the top three.\"\n\nShe reached over and started tickling me. \"Tell me,\" she encouraged.\n\n\"I can't,\" was my immediate response.\n\n\"Come on. I won't let up until you tell me.\"\n\nHow do I tell her this? The problem is I knew it was the highlight of the whole journey I had been on so far but she wasn't included in it. It had just been between Lisa and me, when I took her ass for the first time. But I couldn't tell Julie that. I knew it would crush her. I decided to lie and tell her one of my top three.\n\n\"Probably the first time you dressed me. You had me so horny I could barely think. Your face when I carried you up the stairs over my shoulder in heels was priceless. Then the loving we had afterward, it went on for hours and I just felt so good with you. That was definitely a great time.\"\n\n\"That was nice, but that's not it,\" Julie remarked. \"I can tell when you are lying.\"\n\n\"Well, your blowjobs are amazing,\" I quipped. \"Discovering them was a joy beyond measure. My favorite one of those was the one you gave me while dressed for work. You in your power suit, kneeling before me with a gleam in your eye. You kept staring at me the entire way through and never did take off your clothes. You didn't even kick off your heels. I felt so powerful that day. That was such a rush.\"\n\n\"That one was good for me, too. But you still are hiding something. I know you too well. Come on, tell me. What was it?\"\n\n\"I can't,\" I gasped, while dodging her fingers as she continued trying to tickle the answer out of me.\n\n\"Why not?\"\n\n\"It's too embarrassing.\"\n\n\"Honey, you don't have to be embarrassed around me. I love you and wanted this for you if you remember. You can tell me anything.\"\n\n\"No, it's not that.\"\n\n\"Then tell me.\"\n\nBeing married to an attorney can be hard. They dig and they dig until they find out all your secrets. The cross-examination doesn't stop until someone is hurt.\n\n\"Honey, just drop it, please. I don't want to hurt you.\"\n\nThen it hit her. \"Oooooh, I see.\"\n\n\"You see nothing. Relax and drop it, okay.\"\n\n\"You don't want to tell me because it's Lisa, isn't it? She is the best thing to happen to you. I can understand that. She is so sexy.\"\n\n\"No, that's not it at all. Some times with Lisa have been good, but I enjoy sex with you more than I do with her. I am just more comfortable with you. It's always a performance with her.\"\n\n\"So, it's not Lisa in general, but a specific time with Lisa that was your favorite. Which one was it?\"\n\n\"Why are you torturing yourself? Just let this go. We don't have to do this. I love you, baby.\"\n\n\"No, I need to know. Was it in Vegas? Was I even in the state when your best time happened?\" I could tell she was heating up and this was going to get ugly.\n\n\"Okay, okay, if you have to know. Which you always do! It was the time she let me make love to her butt.\"\n\nThe anger went out of Julie like a balloon being popped. It dawned on me maybe it was because we hadn't done that yet.\n\n\"So, Tina likes anal action, does she?\" she smirked. \"That was your best experience. Well, baby. Maybe it's time you take my ass then. Then we can replace your top experience with one of me and you.\"\n\nJulie knew her ass was one of her best assets and I guess the competitive juices were flowing.\n\n\"Baby, we talked about that. I don't want to hurt you. Your butt is so much smaller and tighter than Lisa's. I can't imagine fitting in there.\"\n\n\"No, Tina, this is so on. It's on like Donkey Kong. Take us home, baby. You got a job to do when we get home.\"\n\nChapter 4\n\nI had been sawing my index and middle finger into Julie's ass for about 15 minutes and her sphincter muscles still clamped around them like she was dangling from a cliff and they were the only thing keeping her plummeting to certain death. I couldn't get her to relax and open up. Admittedly, I knew it was going be a tight fit, I just didn't understand the enormity of how tight she was. And the longer this took, the more impatient she was getting, causing her to relax even less.\n\nWe had come home and she had rushed upstairs to prepare herself with an enema while I had fixed us dinner. Then after dinner she had run up to the bed yelling me to follow. By the time I got there she had shucked all her clothes and had climbed up on the bed with her ass facing directly at me. A bottle of lube was already next to her. She was ready and waiting.\n\n\"Oh, my,\" I gasped at the beautiful sight before me. It was finally sinking in that I was going to do this. I was going to get to devirginize my wife. Desire rushed into me forcing pain as I quickly reached in and undid myself out of the gaffe to give me relief. My cock burst onto the scene in full majesty, standing erect as it had been since we started down this journey of discovery.\n\nI went over, knelt down and kissed her right on the rosebud of her anus -- and not a peck either. I went for the full French tongue experience with me and her asshole. I licked and shoved my tongue around her bud, giving it one long sloppy wet kiss. I lapped and licked and even tried to use my tongue as a little cock and thrust it in and out of her anus. Each time I did though, she seemed to tense up. I told her to relax but I could tell she was struggling with it, so I lubed up my fingers and went to work, talking to her softly and hoping time would soothe her tension.\n\nShe was getting frustrated that I wasn't progressing forward and I tried to tell her I wouldn't fit but she huffed and said, \"Let me do it then. You just don't want to hurt me. I understand it will hurt a little but I will be fine.\"\n\nSo, I sat on the bed and she straddled me. She ran her bottom over my lubed-up dick over and over and then, holding it with one hand and me holding her cheeks apart, she lowered herself. She kept wiggling her bottom over and over on the tip of my dick, trying to stretch herself enough to get the tip in. Every time she got close, it would pop out and slid away from her butt. I could see it was an exercise in frustration as every time she was almost there, my dick would dance away. Her face got more and more concentrated as she worked to maneuver me into her.\n\nWhile it might have been tough for Julie, for me I was feeling great. Her holding my penis and working the head around on her cute little butt had me very turned on. Finally, after several minutes, my penis breached her sphincter. Julie suddenly gasped and winced in pain. \"Ow, ow, ow, ow,\" she hissed. She paused right there with just the tip in her grimacing for a second before she pulled off. \"I'm sorry, honey, I just can't do this.\"\n\n\"I'm sorry,\" I said.\n\nShe climbed off and with a hitch in her throat, headed to the bathroom. I heard the door close and the first sobs begin.\n\nI sprang out of bed and ran to the door. The bathroom was locked. I called out.\n\n\"Julie, open the door, honey,\" I said, knocking.\n\nShe yelled back, \"Leave me alone. I need some time.\"\n\nI stood outside the door listening to her cry. I then made it worse by saying, \"It wasn't that bad!\"\n\n\"Please go away,\" was her next response, followed by further sobs.\n\nI went back and laid on the bed. She stayed in there at least an hour. I fell asleep before she came out. In the morning when I woke, she had already left for work. What had been a perfect day ended in shit.\n\nChapter 5\n\nI was fifteen minutes early to Deidre's house Monday night. I didn't know what to expect so I was very nervous. I hadn't been on a date since college and then, only with Julie. I had no idea what to expect. Didn't I just say that? Okay, you can tell how nervous I was.\n\nDeidre had told me to dress casual so I had on a blouse, jeans and sandals. My hair was in a high pony tail and I had on big hoop earrings with several bracelets on my left wrist. My makeup was a little heavy. I think my nervousness made me go a little overboard with it, but then it was a date.\n\nI rang the doorbell once and it was quickly opened, but not by Deidre. Standing in front of me was a gorgeous young black girl. I had a tough time focusing on her face because her chest demanded attention. My eyes seemed to slip there as if pulled by gravity. It took conscious effort to look at her face, which was saying something because it was model beautiful, and without her chest, I could have stared for hours. But it was like her breasts had their own gravitational pull -- despite being completely covered in a t-shirt -- they were enormous. They were easily the biggest I have ever seen.\n\nShe looked me up and down appraisingly for a second before speaking. \"You must be Mom's new thang. She's upstairs in the shower. Come on in, wonder bread. I'm Desiree.\"\n\nShe turned and strode back to the couch and to the television show she had on. Walking away from me I got a chance to stare at her ass. Her bubble butt was near to perfect as her tits had been. She plopped down on the couch and proceeded to ignore me, focusing back onto \"The Bachelorette.\"\n\nI stood there, hemming and hawing, not knowing what to say. Then I glanced over to the play pen and saw a baby inside. I walked over for a closer look.\n\n\"Don't wake her,\" Desiree pronounced. \"I just got her to sleep.\"\n\n\"I won't,\" I whispered. \"What's her name?\"\n\n\"Jasmine.\"\n\n\"How old is she? She's so cute.\"\n\nThe baby was facing towards me and had an angelic face. She was going to be a heartbreaker just like Mom and Grandma.\n\n\"Nine months.\"\n\nI had nothing else to say and Desiree had no interest in the conversation. The TV was much more interesting. I just stayed there on my knees watching the baby sleep until Deidre came downstairs.\n\nShe took one look at me and said, \"That won't do,\" before turning and running back upstairs. I sat there and wondered for about 20 seconds before she came back down and tossed me a pair of socks.\n\nI caught them and looked at her funny.\n\n\"You need socks,\" she said. \"We're going bowling.\"\n\n\"Bowling?\" I said, shocked. \"I'm not a bowler. I'm lucky to break 100. I think my best game is like 135.\"\n\n\"We're in a bind tonight and need a sub. Tonya can't make it. So, you are it.\"\n\nIt turned out to be a fun night. Deidre is a member of an all-female bowling team named \"The Free Agents.\" Deidre, Tonya and Stevie are real estate agents, Vicky is a talent agent and Courtney is a travel agent. I met the other ladies and all were cordial and friendly. It was amazing to hang out in social situation where no one knew who I was and I had no pressure to be Tina or Chris or anyone other than a substitute bowler. I think it helped that the team we bowled only had one male, and he was the husband of one of the other bowlers. He ogled me some but discretely. Heck, Stevie checked me out more than he did.\n\nThe only bad part of the night happened right as I threw my first practice ball. As I released the ball, my nail bent backwards and broke. It felt like having my scrotum nailed to the floor with a sledgehammer. Tears leaked like crazy. Deidre took one look and said, we need to file those off if you want to continue. I manned up and told her to do it, slightly worried what Julie would say when she found out. Lexi had told me she had picked out the nails and the polish personally.\n\nAs we drove back to my car, Deidre never once pressured me or tried to make a pass at me. I realized that tonight had been a break from my reality. I felt so much more relaxed and thanked Deidre for a wonderful night.",
        "\"Sure, sugar bear,\" she ventured. \"You looked like you needed a night off. But if you had a good time tonight, I got something special planned for tomorrow night. Be ready.\"\n\nI said sure and thanked her with a hug. She kissed me on the cheek and told me to drive safe. I drove off reminiscing about the night and how much fun I had had. I was looking forward to telling Julie about it but she wasn't home when I finally got in. Calling her, her phone when straight to voice mail. I shrugged and went to bed.\n\nThe next morning, I set an appointment with Lexi all on my own and went and had my nails redone. This time changing the length to something more manageable and I picked out the polish color myself -- I went to a sparkling blue. Lexi talked me into getting my toes to match as well. What's funny is I felt so manly doing it. Picking out my own nail polish and style on my own, without my wife deciding it for me. What a rush.\n\nTuesday night, we met early, around 4 p.m. at the batting cages. After we hit a few rounds to warm up my muscles, Deidre dragged me off to a massage parlor for a couple's massage. She said she could see the tension in me and I needed to let it all out.\n\nAt first, I was nervous and felt even more pressure, especially when Dee started peeling her clothes off in front of me once we had been shown into our private room.\n\n\"What are you doing?\" I whispered.\n\n\"Getting naked, sugar bear,\" she said. \"Just as you should be doing.\"\n\nI couldn't help staring as she pulled off her pants. Her legs were rippled with muscles and her chocolate skin looked incredible. Without a second thought, she reached up and pulled her t-shirt off, exposing a sports bra which landed on the floor two seconds later. She turned and flexed and thrusted her chest forward. Her melons were like cantaloupes and bounced appreciatively on her chest. There was a little sag accounting for her age but nothing like you would expect for a grandma. She looked heavenly.\n\nShe looked at me appraisingly. \"Well, what are you waiting for? I have already seen you naked sugar.\"\n\n\"Yeah,\" I said. \"But I haven't seen you. I'm enjoying the show.\"\n\nShe smirked and flexed.\n\n\"Do you like what you see?\"\n\n\"You are breathtaking,\" was my reply.\n\nAt that moment, a masseuse walked in and broke the magic. I quickly averted my eyes and turned and started removing my clothes. The fact that he was male bothered me, but I didn't know how to say anything and I wasn't going to show myself a chicken to Dee, who obviously didn't care that she was dancing around naked in front of a man. I stripped down to bra and panties and climbed onto the table, placing my head in the horseshoe-shaped pillow at one end of the table.\n\nDee took one look at me and balked.\n\n\"No, sugar bear, that just won't do. Lose everything. I know you can do it. You are strong.\"\n\nI sighed and reached back and undid the bra barely lifting my chest off the table, which cause by breasts to remain hidden. I still had some saline left in them and despite I was no longer a solid C cup, they were still in the small B-cup range and didn't match with my penis. Then after slipping the bra out without exposing myself, I reached down and shimmied my panties down my legs, keeping my dick hidden as best as I could. I kicked the panties off and laid there with my backside exposed, turning a beet red in the process.\n\n\"There is nothing to be embarrassed about, sugar,\" Dee said calmingly. \"Tony and Mark are professionals. They will be discrete.\"\n\n\"Why couldn't we get a female masseuse?\" I whined.\n\n\"Because they are the best, and you deserve the best. Relax, this is not a sexual thing unless you make it one.\"\n\nI laid there and closed my eyes and pretended I was all alone. The other guy entered and I felt his presence approach me. I twitched as he approached and grabbed my hair. He took a little in his hand and squeezed it slightly, causing pressure on my scalp before rolling it up and pinning it up with a hair clip. He then grabbed another handful and repeating the process. The pressure on my scalp was comforting and I eased out a small sigh.\n\n\"That's it, honey, just relax,\" a deep gruff voice sounded. \"I won't hurt you.\" He continued to pin up my hair and then I heard his hands rubbing together before I felt them on the base of my skull. Despite the fact that I was expecting them, I still tensed up and flinched.\n\nHe responded with a soothing voice, \"You are so tense. Is this your first massage dear?\"\n\nI managed to squeak out a sharp \"Yes.\"\n\n\"Then I will make this extra special,\" he replied.\n\nHis oiled hands started at the base of my skull before working down my neck and onto my shoulders. He began slowly and gently to spread the oil onto my skin, before coming back and working it a little harder and deeper, following the same pattern as the first time. The third time he went back to do it again, I couldn't help but let out a moan of pleasure.\n\nHis continued kneading and circulating his hands around my body, moving down my back to the tailbone. His hands were so large and strong and made me feel so insignificant. The longer he moved them over my body, the frailer and more fragile I felt. I felt like he could snap me in two. He skipped my ass and went to the back of my legs, pressing with his hard thumbs. When he reached my foot, he lifted it and moved it a little.\n\nThe movement of my legs caused me to feel air on my balls and I could feel his distraction as I know he must have realized that he had a man on his table. Heat rushed to my face and I cringed inwardly, waiting for an outburst of disgust.\n\n\"You are starting to tense up again, honey,\" his voiced reverberated through the room. \"Relax, I'm going to take good care of you. Let it all go.\"\n\nThe massage continued just as sensual and smoothly as before. He knew my secret and hadn't said anything. I felt the tension truly slip away as the minutes passed as he continued working on my feet and calves.\n\nThe tension started to rise again when he reached my thighs. He slowly pushed my legs wider and then started massaging upwards. I started to really clench when he reached my butt checks.\n\nIn a soothing, calming voice he whispered. \"Relax baby, it's ok. Your secret is safe with me. I won't hurt you.\"\n\nI laid there quietly as he turned my muscles into a pool of jelly. Each pass made me more and more relaxed and I couldn't concentrate on any particular thought as he kneaded any rational processes out of my brain. I was quickly turning to mush, seeping into a pool of contentment with not a worry in the world. His hands were magical and seemed to be drawing my mind further and further from my body.\n\nI was finally pulled out of my inner peace by the interruption of moans coming from the other table. Lifting up my head and looking over I saw something that instantly captured my attention. Dee was still laying on the table, but her legs were spread wide and Tony was between them thrusting a gigantic cock into her pussy. I have never seen another couple have sex before and I was instantly turned on, my own cock starting to harden by the sight.\n\nMark, my masseuse, used that opportunity to flip me over to my back and turned away. I completely forgot he was there as I stared at Dee and Tony getting it on. Their bodies were so fit and in shape it looked like a new sport in the Olympics had been introduced. An electric shock spread throughout my body as Mark again began massaging me. This time he started at my shoulders and one of his hands quickly cupped my breast and began rubbing it.\n\nI gasped. All thoughts of Dee and Tony fled my mind as I found myself looking up at this huge intimidating man leaning over my face massaging my chest. He still had on his shorts and I could see a thick bulge hiding beneath. He was obviously erect. Over me! I glanced down at my own body -- thin and without a shred of hair on it. With the remnants of saline-enhanced breasts and the work the corset had done on my waistline, it looked so feminine except for my hard-on pointing directly at my chest. I might be a freak, but I was obviously turning on Mark.\n\nFor some reason, it blurted out of my mouth. \"I am not gay,\" I whispered as I turned bright red. Obviously, the thought of sex must have entered my mind for me to say that.\n\nHe rumbled out, \"Neither am I, honey. Now stop worrying about everything and let me help you relax.\"\n\nI couldn't keep staring in his eyes so I closed mine and pretended I was alone again. He worked on my chest and moved to my shoulders and my neck. Then he repeated the process a second time. He was slow and methodical and I felt the mush returning. I even felt my dick start to go flaccid again as I relaxed and enjoyed the massage.\n\nHe bypassed my center and moved to my legs and feet and I felt myself drifting off. The moans coming from Dee and Tony had stopped and the quiet music playing in the background was all I could hear. As Mark reached my midsection, he accidentally grazed my cock which caused me to pop open my eyes. He wasn't looking at me and was focused on my thighs so I closed them again and continued to relax, although my cock had twitched at the attention.\n\nThere was no chance it was an accident the next time. One of his large oiled hands began rubbing my ball sack and while the other one gripped my cock firmly. I opened my eyes and caught him staring at me.\n\n\"I got you baby, just let all the tension out,\" he said as he continued to stroke my shaft.\n\nIt was surreal. Was this actually happening? I tried to open my mouth to say something but couldn't. Nothing would come out.\n\n\"Was this gay?\" I thought. \"Should I stop him?\" I glanced over at Dee and she was alone. Tony had left the room and she looked to be sleeping.\n\n\"How could I stop him?\" I told myself, as I just laid there and let it happen. \"He is much bigger than me and could do anything he wanted with me.\" I argued back and forth with myself that I had no choice yet I was the customer, so I should have had one.\n\nHe was just too big and intimidating and I couldn't confront him so I wimped out. I closed my eyes shut and pretended it was Julie jacking me off. That helped. Then in a flash it was Lisa jacking me off. She had bigger hands. Then it was Dee. That thought, after just watching her have sex, started me to spew onto my belly.\n\nMark didn't say a word. He just grabbed a towel and cleaned me up. Then he patted my prick, said, \"You are wonderful, honey. Come back any time,\" dimmed the lights, and left the room.\n\nI laid there in the darkness pondering my actions or inactions as they were. Does this count as sex with another man? Did I just cheat on my wife? Even more importantly, would she care? It sure hadn't seemed so lately. Slowly I drifted to sleep before being awakened by Dee and told it was time to go. She never mentioned anything about my happy ending. She just asked if I was more relaxed and I ensured her I was, but was I? I had to think on what I did later. We did have a pleasant dinner and a long talk before she dropped me off at home. This time I gave her a small peck on the lips as thanks.\n\nChapter 6\n\nWednesday morning changed my life.Dee and I had talked for a couple hours last night and while she thought I should go through with the implants, it was ultimately my decision and I needed to start to take charge of my life. That was scary thinking. But after my workout and tanning session, I came home and opened my email, something I don't do every day. There, I got the shock of my life -- Emily was coming to town next week.\n\nFor those of you who don't remember, my parents were both killed in a car wreck when I was 13. Emily was 18 when it happened and took over as my parent. After I had gone to college, she finally started her life by beginning to date where she met and married Frank, who was in the Air Force. They had been living in Germany the past four years and had two children who I had never met, one a boy around two named after me and the other a girl just six months old.\n\nNow it seemed that they were being transferred to Hill AFB, Utah, and she was flying into Chicago to pick up their things that they had boxed away in storage. She had left Frank and the kids in Germany and wanted me to travel with her to deliver the stuff from storage.\n\nI spent over an hour just sitting there thinking. My life had to come to a crux. As my grandpa used to say, \"It was time to shit or get off the pot.\" I made my decision and went to work. First, I called Dee for a pep talk.\n\nAfter that, I spent some time on the computer, first looking up plans and then emailing back Emily, I texted Lisa and asked when her flight landed so I could pick her up. She at first told me it wasn't necessary but when I insisted I could tell by the emojis that she was pleasantly surprised that I wanted to do this. Little did she know.\n\nThen I called Julie and asked her if she could be home by 5 p.m. tonight. We hadn't spoken since the anal incident and I felt the tension on the phone as she attempted to wiggle out of it but I wouldn't take no for an answer and insisted it was important. She finally agreed once I mentioned Lisa would be there as well.\n\nAfter that I had an errand to run. I pulled up to the adult sex shop as a bundle of nerves. The last time I had been here Amanda had totally emasculated me. I had left locked in high heels, corset cinched tight as can be, and a butt plug up my ass. Chris was screaming in my head to run away but Tina was in charge today.\n\nI had dressed purposely casual as I did not want to be a sex object in any way. I entered the store and the same disgusting man was behind the counter leering at me. How could they hire someone like that to work here? I heard the click of high heels coming up from behind me as I went down the aisle looking for my purchase.\n\nWith her first statement, I knew Amanda recognized me.\n\n\"Welcome back, sissy boy,\" Amanda cooed. \"I knew I'd see you again. You are dressed very casual though. I like my gurls in high heels and short skirts. Where are your manners?\"\n\nI produced an air of confidence, I would not let her domineer me. My confidence mantra had been playing in my head since I walked into the store.\n\n\"Yes, I am not here to play. I'm here for a quick purchase,\" I blurted out. \"Can you help me?\"\n\n\"And what do you need?\" she said with a smile.\n\n\"I need a beginner set of butt plugs,\" I said, desperately trying not to blush.\n\n\"I think you are little past the beginner step.\"\n\n\"They aren't for me,\" I replied. \"I need to train someone to be able to handle me.\"\n\n\"Hmm,\" she mused. \"Maybe you aren't the sissy I thought you were. You are going to top?\"\n\n\"Yes, can you help me?\"\n\n\"Of course.\" Her attitude changed completely and she helped me get exactly what I needed.\n\nAfter that I killed time until I had to be at the airport. I was sitting on a bench waiting at baggage claim for Lisa when I saw half of the heads in my view immediately crane to the left. I looked over and saw my vision walked towards me. She was buoyant and bubbly and a huge smile spread on her face as she saw me. What did I ever do to deserve her? I felt so lucky at that moment as she wrapped her arms around me and kissed me deeply. I felt the jealousy like a heat wave as the men around us gawked on.\n\nWe headed back to our house with meaningless conversation about how her trip went and she asked me about my first date with Dee since she didn't know about the second one. I told her about my bowling and she told me she could give me some pointers if I continued. I asked her if there was anything she couldn't do.\n\n\"You mean besides sing?\" she said with a grin.\n\n\"Oh, that's right, I do know your weak spot,\" I quipped back.\n\n\"Oh, I have found out I have a lot more than one.\"\n\n\"I haven't seen any others,\" I replied. \"Name one.\"\n\nShe looked at me pensively and smiled. \"You.\"\n\nI glowed under her praise but then fell silent. It was going to make what I was going to do next doubly hard.\n\nWe got to the house and Julie was there waiting, having just arrived from work. \"What's going on, Tina? Why did you call this meeting?\"\n\nI took a deep breath and turned to face the two and exhaled. I could do this. Chris might not be able to stand up to their combined onslaught, but Tina could. Dee told me I could do it and convinced me I needed to do it. I took a second deep breath and then made my pronouncement.\n\n\"I have decided NOT to undergo breast augmentation in the morning.\"\n\nBoth girls clamored to respond. I heard \"but you promised,\" from Lisa and \"you have got to be kidding me\" from Julie. I raised my hands to quiet both girls down.\n\n\"Let me finish, please,\" I stated firmly. \"I didn't say I wasn't having the boob job, I just said I wasn't having it tomorrow.\"\n\nJulie interrupted, \"But I blew the last of my vacation days to be home for you during your recovery. I am off for the next week. What the hell am I going to do?\"\n\n\"Julie, love, please let me finish,\" I said, focusing on my next words carefully. \"I decided I couldn't do this until I made sure that all of the women I love were okay with it. I am doing it for you two, and I admit, I am doing it for me as well, but I need to make sure everyone I love is okay with it because it is a big step.\"\n\nBoth girls were looking at me questioningly and for once didn't try to force me to their will or interrupt. I knew both were wondering who else I loved.\n\n\"I got an email from Emily today.\" I saw Lisa's eyebrows furl and saw her mouth open as she was about to ask who Emily was so I interjected the answer. \"My sister.\"\n\n\"She is coming to town next weekend and wants my help to move her stuff from storage to their new home in Utah. I told her I would do it. I am going to go as Tina and I am putting everything permanent on hold until I talk with her.\"\n\nJulie was nodding in approval but Lisa was still questioning I could see. And I knew Lisa was used to getting her way. I needed Tina to stay strong.\n\n\"This is non-negotiable,\" I stared Lisa down. \"Since you don't have surgery in the morning, I am claiming you as mine for tonight. I am going to tie you up and fuck you all night long.\"\n\nIt was fun to watch her blush. She wasn't used to being told what would happen.\n\nJulie responded, \"What am I going to be doing?\"\n\n\"You will be packing, my love,\" I responded. \"We have an early flight in the morning. Since you are on vacation, we are going to do just that. You owe me a trip to San Diego. I have it all planned out. For once, I am in charge.\n\nJulie stared on doubtfully. It would be interesting to see how this worked out since she liked to be in control and usually planned every second of every vacation we did in minute detail.\n\nI turned to face Lisa, who was pouting. \"And you princess, I called Carrie from your office and told her to cancel your appointments for Monday and Tuesday. You are joining us Saturday after your last appointment. I want to see you in a bikini.\"\n\nI was shocked at how both of them had listened to me and agreed to my conditions. I secretly had given myself less than 50 percent odds of succeeding and Tina had them eating out of her hand. Boy, I liked Tina. I owed Dee big time for her coaching.\n\nThe night with Lisa went perfect. I first had her shower and give herself an enema and then when we were alone without Julie, I explained that Julie had offered me her ass and since it was so tight I needed her help. I showed her the butt plug collection I had bought earlier that day and had her walk me through what I needed to do to open Julie up. Lisa let me use her as a practice doll and I got her wide open and gaping before I plunged in and had a great night plowing her behind. It was just as enjoyable as my first experience.\n\nThe next morning Julie and I headed out for the airport. I went in casual clothes that were as androgynous as I could get so that airport security wouldn't be a problem. The moment we passed through security though I dragged Julie into a bathroom.",
        "\"What's going on?\" she asked.\n\n\"Remember, I am in charge,\" I demanded.\n\n\"Yes, you are in charge. What's going on?\"\n\nI responded with a shush. I then started to unbutton her jeans and her eyes widened in surprise. \"Here?\" she asked.\n\n\"What did I say?\" I replied. \"No talking.\"\n\nShe smirked at this but remained quiet as I slid her jeans down to her ankles and had her panties follow. Then I turned her around facing the toilet and with a hand on her back bent her over. I slowly massaged her butthole with one hand as I opened the lube I had in my pocket and started to spread it over her asshole.\n\n\"What are you doing?\" she questioned.\n\nI smacked her bottom hard. Something I had never done.\n\n\"I said be quiet, dear.\"\n\nShe quieted and let me go to work. I had the smallest butt plug I could find, it was little bigger than my finger and I worked it into her. Despite its small size, Julie gasped as I slid it as the wider base plopped into position.\n\n\"Now pull up your underwear and let's go.\"\n\n\"You expect me to wear this on the flight?\"\n\n\"Absolutely. Who's in charge?\"\n\nShe actually blushed and smiled. \"You are, Tina.\"\n\nChapter 7\n\nWe went through the airport, boarded the plane, flew to San Diego, debarked, got our luggage, got a rental car, went to the hotel, and checked in. The entire time it was like I was with a different person. I found it hard to believe that a butt plug could bring this much of a change. It was like someone had flipped a switch on my wife and replaced her with someone else. She had told me she had been Lisa's submissive pet and I had never truly believed her until now. It was like being with a stranger, she was so docile -- nothing like my Julie.\n\nWhen we got to the hotel room and closed the door, I turned to face her. We hadn't really talked since the first anal attempt on Sunday. She had fled rather than talk it out with me. I guessed we both sucked at communication. That needed to stop and with the way she was acting, so docile and undemanding, I felt like we were on an even playing field for once.\n\n\"Love, we need to talk,\" I began.\n\n\"Okay,\" Jules said.\n\n\"First, I cannot stress this enough. I love you so much. I want to be with you more than anything. I became Tina to make you happy. I enjoy being Tina but I mainly enjoy it because I see the joy it brings you. Now, I like Lisa -- a whole lot, feelings have developed there, but I love you.\"\n\n\"I love you too, Chris.\"\n\n\"Now Sunday, I didn't admit to you that my favorite time had been with you and you got all upset. I am sorry about that. Because, I wasn't true to myself either during that conversation.\"\n\n\"What do you mean?\"\n\n\"I mean my favorite time is anytime I am with you. I love being with you, doing normal things. Sex, while important, is a temporary pleasure, in the long run it's nothing to the joy I get by just being in your presence. I love doing things with you -- even shopping -- and I am crazy about being married to you. That is more important than any sexual high I get from playing out a fantasy or two.\"\n\nI felt some of her confidence return. I could see her body morph in front of me as she stood more erect and some of her meekness disappeared. I saw my familiar Julie reassert herself.\n\n\"I'm sorry too. I have been feeling a little jealous lately. I mean, don't get me wrong. I love seeing you screw Lisa and I want to see you take her little sister too, but when you told me Lisa was better than me, it hurt.\"\n\n\"Now wait a minute,\" I replied. \"I never said Lisa was better than you. I said that experience was one of my favorites that I have had. I think it would have been just as good with you or anyone else. It made me feel so manly taking her ass. It was naughty and dirty and made me feel in charge, like she was mine to pleasure myself with. And the fact that she is so much bigger than me, it made me feel like a superhero. That's what I liked about it.\"\n\nShe giggled. \"Well, you are my superhero. I liked how you have changed from the mild-mannered Chris Adams into the amazing super-sexy Tina Nicole Adams.\"\n\nI laughed at that with her.\n\n\"I do too. But I have a confession to make.\"\n\nShe looked on expectantly.\n\n\"Dee took me to a massage parlor last night and after I watched her get it on with her masseuse, I let mine give me a happy ending.\"\n\nI expected jealously but got none.\n\n\"Was she cute?\" Julie asked.\n\n\"Actually, it was a he.\"\n\nHer eyes widened in surprise. \"Ooooo, details,\"\n\nI explained the situation and how I let it happen. I even explained about how I pretended it was her or Lisa or Dee stroking me off instead of a guy.\n\n\"Do you want to do it again?\" she said. \"Or do you want to stroke Mark? It's only fair that you return the favor.\"\n\n\"No, I don't,\" I said. \"I might have liked it, but I am not interested in going there. I don't want to take the chance that anything will get in between me and you.\"\n\n\"It won't, and I won't pressure you. I just want to see it. But, like I said before, I will let you continue at your own pace from now on. Just know that I absolutely adore Tina.\"\n\n\"And she adores you too. Now turn around and drop those panties, missy. I need to inspect my work.\"\n\nShe did and I pulled out the plug and saw her small gape. I inserted one finger and then a second and maneuvered them around. It was hot and warm and heavenly all wrapped up in one. I couldn't wait to get my dick inside her.\n\nBut, self-control is what Lisa said I needed. I got out the next bigger butt plug and lubed it up and slid it in. This one was wider than the first one but went in a lot easier. Once it was in, I smacked her ass again and told her to go shower and change into something sexy cause I was taking her to dinner.\n\nDinner was excellent and with the new plug Julie quickly reverted back to her unrecognizable self, meek in demeanor and eager to please. Could that be all it took? If so, what would it be like for me? I remembered my one day of wearing a butt plug and I couldn't think straight. It had been hard to concentrate on anything but my ass. It had been a constant reminder that someone else had control of me. Had I been as submissive as Julie was? I wasn't sure but I didn't think so. What if was another guy doing that to me? I shivered as I thought of Mark or Billy plowing into me from behind using all the force of their muscular bodies. I would lose all control. I couldn't let that happen.\n\nAfter dinner, I made her dance with me a few times before she begged me to take her back to the hotel and take her. She promised she was ready to please me. Again, so un-Julie like. No demands, just begging.\n\nWhen we entered the room, the clothes flew off and we kissed and made out like teenagers. When we were finally nude, I entered her. Her pussy was tight as ever with the plug still up her ass and she screamed with pleasure. I came quickly and pulled out and she dove at my cock, using her mouth to keep it hard. After a few minutes, I pulled away and turned her over. Wriggling the plug out, I saw a beautiful gape, one I knew my dick would fit in.\n\nI almost rushed it as I was eager to dive right in. But I reminded myself about Sunday and wanted to make sure this was as pleasant as I could make it. I poured lube directly into the gape, using three fingers inside to spread it around. Then I poured more on my cock and told Julie to climb on.\n\nShe straddled me, and with a huge smile, sighed as my head slipped into her.\n\n\"Take your time, honey. Go as slow as you need to. If we can't get this done tonight, we are going to keep at it all trip until we get it right.\"\n\n\"Oh, this is getting done tonight. And we can keep going all night. I am going to be your butt slut, baby. This is going to be your new favorite hole. Lisa's ass is a thing of the past.\"\n\n\"Are you mad at me for inviting Lisa on this trip?\"\n\n\"No, I just need to reclaim my place as your number one fuck toy.\" With that, she eased herself down my shaft. Her ass was a fiery furnace, so tight and warm and I almost passed out from pure pleasure. My mouth hung open and I panted with pleasure as her hips moved up and down. My moaning seemed to bring tears of joy to her face as she bottomed out. And that's when the fun really began.\n\nChapter 8\n\nMy elaborate plans for the trip went out the window on the next day as Julie took command. She wanted me to go 'round the world' and cum in each of her holes. Who wants to argue with that? That was way better than my plan of Sea World. We spent the entire day in bed, leaving only for a quick bite for \"dunch\" before heading back up to the room for more debauchery.\n\nI woke up Saturday morning with Julie reclaiming control. I found my hands tied together with nylons behind my back and my legs had been spread apart and make-shifted tied to the underside of the bed with one of her spandex leggings cut in half.\n\nWhen I started to wriggle free, Julie appeared out of the bathroom. She was dressed in heels, corset, garter belt and a strap-on. She announced it was her turn to go 'round the world' on me. She climbed up on the bed and scooched in between me and the headboard before thrusting her dildo right at my lips.\n\nI kept my mouth closed for a second but then she began begging. \"Come on Tina, open wide. I got a present for you. I know you are going to like it.\"\n\nReluctantly, I eased open my mouth and let her slide the fat dildo between my lips. She kept up with minute thrusts of her pelvic as she inched it further and further into my mouth.\n\n\"That's it, baby,\" she cooed. \"Suck my cock. Please me. Be my little cocksucker. Open up that throat. I'm going to split you in two.\"\n\nThe dirty talk continued as she inched the strap-on further into my mouth. She kept working it in and pulling out until she hit my gag reflex. Then, she pulled back a hair to give me a breather, but she didn't pull out of my mouth. After a minute or so, she restarted her ministrations, feeding me her cock. I gagged again and coughed and she pulled completely off until my coughing fit subsided.\n\nOnce I calmed down again, she stuck the dildo back to my lips. I opened my mouth and said, \"Seriously,\" but that's all I got out before she had worked her way back in.\n\n\"That's it, baby,\" she exclaimed. \"Suck me until I burst. You are doing so good. I won't stop until you get it all down. Kiss my clitty.\"\n\nI barreled through and started breathing through my nose. I could tell the dildo she had used was a hair bigger than I was. \"That's my Julie,\" I thought. \"Always has to be top dog.\"\n\nI finally got in enough to satisfy her and she pulled out and kissed me, despite the streams of saliva flowing down my chin and cheek. She then moved down to my rear where she started kneading my ass with one hand and she poured lube all over my back side.\n\nI knew what was coming and tried to relax. I was able to relax enough that she slipped in pretty easily. It was as uncomfortable as I remembered, not too much pain, but enough to make it unpleasant. But as she ratcheted up her pace, the pain disappeared to be replaced with exquisite pleasure. Despite not wanting to, I began to beg with cries of \"faster\" and \"harder\" and \"yes, baby.\"\n\nJulie was a workout queen and kept up a relentless pace with no pause in the process. I felt my climax building and then she made an angle adjustment and hit my prostate. The wave of pleasure rippled through my body and caused me to black out as semen spewed out all over the bed.\n\nI awoke to being untied, rolled over, and Julie rubbing my cock for it to rise again. I wasn't sure I could get it up again when I glanced at the time.\n\n\"Julie, we need to go,\" I said. \"Lisa's plane lands in less than an hour. We need to go get her.\"\n\nShe sighed and agreed. We picked up Lisa, who had her own agenda, and took charge. She dragged us to a boutique swim shop where all we all got new bikinis. Since I didn't have any swimwear other than my awful tanning one back in Chicago, I ended up with three suits, a classic bikini which I didn't see how it could hide my penis, a one-piece with a hole cut out that would show my flat stomach and all of my back side, and a boy shorts bottom with a lacy see-through wrap that exposed both of my shoulders.\n\nWe went back to the hotel and dolled up for the night off. Lisa and Julie had made me put my corset back on after we bought the swimwear and they pulled it extra tight and I was having trouble breathing. I swear they got it down at least three inches further than I had ever had it before. Between that, the pencil skirt which limited my movement and the four-inch heels they picked out for me, I was having a challenging time moving around.\n\nThey dragged me down to a restaurant called the Gossip Grill, which was supposed to have a decent night life. We got there just as the restaurant portion was closing down and was barely able to order dinner. The food was good but I had no room for it with this blasted corset as tight as it was, especially sitting down. My stomach was all cramped up.\n\nWe order drinks and I got a Clitty Clitty Bang Bang. Since I had no food in me really -- I hadn't eaten all day -- the rye went straight to my head. By the third one, I was having a hard time paying attention to the conversation.\n\nJulie dragged me on the dance floor but after the first dance I begged off and told her to dance with Lisa. She shrugged and the two of them started to move together. They looked so sexy as they danced close. I watched for a while and then had to pee so I went and stood in the lengthy line waiting for the bathroom. A slow song came on and I looked over and saw Lisa had her arms in the 'boy' position and Julie's head was resting on her shoulder. Lisa bent over and kissed first her forehead and then moved down to her lips. I felt a slight twinge of jealousy, but then realized I wished it was me in Lisa's arms and not Julie. Maybe I was okay with the two of them together after all. Lisa, it seemed, had pierced our inner circle. I was a little irritated at being left out, but confident that if I walked up to them, they would include me.\n\nSomeone came out of the bathroom and the line shuffled forward. The urge to pee was growing and I realized there was one more thing that I wished I was a guy for -- no lines for the toilet. \"Wait a minute,\" I thought. \"I can use the men's bathroom. What the heck am I waiting for.\"\n\nI glanced at the men's door with no line. There were a few guys interspersed in the bar but very few. It was 95 percent female as it advertised as a women's bar. I said to myself, \"screw it,\" and left the line and headed for the men's room.\n\nI walked in a little apprehensively, but there was no men present. There was a good looking but big-boned Hispanic girl with a crew cut washing her hands though. I shuffled forward and she looked up at me appraisingly.\n\nShe licked her lips and said, \"Hey, Chica, you ain't no dyke. I think you ended up in the wrong place. Or did you come in looking for me?\"\n\nI was too drunk and too irritated to argue. I replied, \"You wish.\"\n\nHer eyebrows lifted in surprise but continued to climb as I headed for the urinal. I rolled the pencil skirt up enough to get to my thong and moved it aside. I then laid my pounding head on the wall in front of me and let gravity and nature take care of the rest.\n\n\"Holy shit,\" she exclaimed as the noise of my stream hit the bottom of the urinal. \"You're a dude. I never would have guessed. You pass well.\" I lifted my head and looked at her and she was bouncing up and down with joy. What was I in for? Why did she look so excited? \"Andrea will never believe this.\" With that statement, she turned and fled the bathroom.\n\n\"What have I done?\" I thought. \"I need to get out of here.\"\n\nI quickly tucked myself away, washed my hands and went back to our table. Julie and Lisa were just coming off the dance floor. I saw over their shoulder the Mexican dyke approaching a table with six or seven other girls, some of them pretty rough looking, and she went up to one and was whispering in her ear, while pointing over towards me.\n\nThe girls looked to be on a high and when I said, \"I need to get out of here,\" disappointment spread across both of their faces. They looked at me and said the night was just getting started. I replied back that I wasn't feeling well and had just been outed. I had already hit the Uber app, and was going back to the hotel.\n\nI could tell neither girl wanted to leave so I told them I was okay if they wanted to stay and dance.\n\n\"I really need sleep,\" I pointed out. \"Julie wore me out earlier. I will see you guys back at the hotel, just don't pick up any strange.\"\n\nThey laughed at that and said, \"You either.\" I left them and headed back for some much-needed rest. I realized I had cum seven times in the last 30 hours while only eating one meal. No wonder I was worn down.\n\nI woke up the next morning to the rhythmic thumping of flesh pounding together. I laid there with a throbbing headache trying to determine the sound without opening my eyes. It sounded like someone was getting fucked and it wasn't me. Had the girls brought home a guy despite my desires?\n\nI finally rolled over and opened my eyes. The sight was jarring. Lisa had Julie with her face planted on the bed, her knees tucked up under her and she was slamming a large black strap-on dildo right into Julie's ass. The rhythmic slapping was her thighs slamming into Julie's butt cheeks. In Lisa's right hand she held a leash that went to a choker on Julie's neck. I looked at Julie and she looked out of it. Tears ran from her eyes to the bed sheets as she was being relentless pummeled. With each thrust, I could also see Lisa tugging on a second chain that disappeared under Julie. I assumed since it split into two, it was attached to her nipples.\n\n\"What the hell are you doing?\" I managed to croak out.\n\nLisa looked over at me and smiled.\n\n\"I'm teaching this bitch a lesson,\" she smirked. \"I begged and begged for her ass back in college and she always refused. Now I'm making up for lost time.\"\n\n\"Lisa, stop,\" I replied.\n\nShe looked at me in confusion.\n\n\"I mean it,\" I said. \"I said, Stop!\"\n\nShe slowed down but kept the thrusting up while I glared at her. Finally, after about five seconds, she finally pulled out. I looked at the black dildo glistening with lube and ass juice. It was an eight-incher, about an inch longer than me and about an inch wider as well. Julie just laid there like a limp rag, her asshole gaped wide open, breathing hard.\n\n\"I'm not okay with this,\" I replied. \"We need to come up with some ground rules.\"\n\nLisa's lips pursed together. I could see her temper rising. \"Like what?\" she spurted out tersely.\n\n\"Well, for one thing, I don't want anything larger than me in Julie. I don't want her stretched out. I like her nice and tight. The same goes for you, if that's okay. I want to continue enjoying sex at its best with both of you.\"\n\nLisa nodded thoughtfully.\n\n\"I guess I can see that,\" she mused. \"I wouldn't want to lessen your fun.\" She slowly shuffled towards me on the bed. \"That means one thing though.\"\n\n\"What's that?\"\n\n\"This thing is only good for one hole now,\" Lisa contemplated.\n\nI groggily replied, \"What do you mean?\"\n\nLisa leapt at me with a flying tackle, landing on me and tearing at my panties. I struggled back but she was clearly in the advantage. Julie stared at us with glazed eyes, almost like she was drugged.\n\n\"I mean, there is only one hole to stretch out that you can't fuck, and I mean to have it,\" Lisa mock growled. \"Gimme 'dat ass!\"\n\nI fought back half-heartedly for a minute but once Lisa's lubed finger entered me, I stopped the fighting and accepted the inevitable. I laid out and offered myself up as the sacrifice I was. I turned to face Julie and as Lisa took up her pounding.\n\nJulie whispered out to me as she closed her eyes and fell to sleep. \"I love you, my superhero. You saved me.\"",
        "Chapter 9\n\nAfter a nap by all three of us, I got some alone time with Lisa. I had woken up, found the other two asleep and snuck off to the shower. I was in the middle of washing my hair when the curtain pulled back and Lisa stepped in behind me.\n\n\"Let me do that for you,\" she offered, in a sultry tone.\n\n\"My ass is sore,\" I replied. \"I don't know if I want you to touch me.\"\n\n\"Ah, baby, don't be bitter, you gave it up for a good cause.\"\n\n\"And what was that?\"\n\n\"My pleasure,\" she said with a smirk. \"Is there a better cause than that?\"\n\n\"What about my pleasure?\"\n\n\"That's what I am here for now.\"\n\nShe had taken over the shampooing of my hair and was pulling on my scalp. The strain on my roots was relaxing as a massage. I turned around and faced her. With her hands up in my air, her luscious orbs were dangling provocatively in front of me, swaying this way and that with her movements. I reached out mouth first and latched onto one of her nipples, sucking it hard and pulling as much as possible into my mouth.\n\n\"I thought I said I was here for your pleasure, not mine,\" she stammered.\n\nI let go of the tit and said, \"That was very pleasurable for me. I love suckling on breasts, and yours are my favorite pair.\"\n\n\"You, charmer, you,\" she said as she thrust a breast toward my mouth, rubbing it across my face until I latched on. I continued to nuzzle and suck while she did my hair. After a few minutes, she ordered me to rinse and then pulled my head back to her other breast after she grabbed the conditioner. I suckled again and she massaged it through my hair, using my right hand to reach between her legs and start probing for her clit. She spread her legs wider to give me access and I rubbed and she did. I felt her climax on the horizon. Just as she was about to buck and cum when she pulled me away and said, \"rinse.\"\n\nWhile I was rinsing I felt her hand grab my boner and stroke it, getting it lathered up. The other hand, all soaped up, entered my sore asshole and started wiggling around. I just closed my eyes under the stream of the water and relaxed, letting her violate me as she wanted. She hit my prostrate and my knees buckled. She let go off my penis and grabbed my waist to keep me from slipping to my knees. Holding me there, she continued to assault my prostate as I groaned. She really was a strong woman. I felt the precum flow and wash away. I begged enough and she relented, turning me around and kissing me hard before pulling my cock into her pussy. I was standing as she lowered herself onto me. I pushed up against the side and jackhammered my way to release.\n\n\"Let me clean myself up,\" Lisa said. \"Go wake Julie, I'm ready for some food.\"\n\nLeaving the bathroom refreshed yet sated sexually, I saw Julie still asleep. I climbed into bed with her and lowered my face to her naked pussy, licking around the edges before diving in. She woke with a purr, like a pussy cat being rubbed.\n\n\"Mmmm,\" she gasped. \"What a great way to wake up!\"\n\nI dove in with abandon until she climaxed. Lisa came out of the bathroom as Julie's screams began and started applauding at our performance. As Julie came down from her climax, she reached for my cock.\n\n\"Lisa took care of me in the shower,\" I interrupted. \"Quickly, go get one yourself. I need food, I haven't really eaten anything in two days. The corset stays off today. I am going to pig out.\"\n\nWe gorged ourselves at the lunch buffet at a hotel restaurant before heading back and gorging ourselves with another threesome. After three climaxes, I was worn out, but the girls seemed to have kicked it into another gear. I was getting a double blowjob as they tried to wake my dick up for another round when I finally noticed the time.\n\n\"We got tickets to the Padres game,\" I said. \"The game starts soon. We need to head out.\"\n\nBoth girls gave me a penetrating stare of unbelief. I was in the middle of a getting head and mentioning sports.\n\nJulie was the first to respond. \"I don't want to go. I don't want to leave the room tonight. Let's order room service and fuck.\"\n\n\"But it's the Reds playing the Padres,\" I whined. I also needed the break to recharge, I admitted to myself. These two had been focusing on me and while I was satiated, they were both still raring to go. I didn't think I could get it up again. \"I know, why don't you two stay and play and I will go to the game alone.\"\n\n\"Are you sure you're okay with that?\" Julie asked.\n\n\"I'm sure,\" I said. \"Just keep Mr. Big put away.\"\n\n\"I don't need Mr. Big to turn Jules into a puddle of goo,\" Lisa bragged. \"Don't stay out too late or I might steal her away from you.\" She winked at that remark, but it did strike home at my insecurities. Should I go to the game after all?\n\n\"You be nice,\" Julie shot back. \"Or I will order Chris to fuck your sister. You know he listens to me.\"\n\nI left the girls arguing to kiss and make up, which I was sure they would do. I decided I had a game to catch.\n\nI got to the stadium and heard the National Anthem going as I got through the gates. I had dressed casual in my Cincinnati Red jersey, tight jeans and my Nikes. I didn't have time to fix my hair so I had put it in a ponytail. I did take the time to fix my makeup though. I wanted to make sure I passed.\n\nI had purchased three seats a few sections down from third base and I didn't have time to scalp the other two so I just decided to eat the cost and sit alone. I took the middle seat of the three and focused on the opening pitches.\n\nIt was the middle of the third when I was interrupted. A tall muscular man about 30 was coming down the row staring at his ticket stub. He got to the seat right next to mine, said \"Here it is\" and sat down. I nonchalantly reached into my pocket and pulled out my tickets and verified that I was indeed sitting in the right seats. I was.\n\n\"Here it comes,\" I thought, wondering if I should confront the guy and tell him he was in my seat. But then the thought was maybe he just saw them empty and figured he could move to a better seat. I couldn't blame him there yet I remained tense and waited for the pick-up line.\n\nI had to give him credit. He didn't speak for a whole inning before he looked over at me and said, \"I'm Adam. I see you are a Reds fan, too. Not many of us here in San Diego.\"\n\nIt wasn't really a pick-up line so I decided I could be cordial. \"I'm not from here,\" I said. \"I'm on vacation.\"\n\n\"And you are here alone?\" he said. \"I see you are engaged. The fianc\u00e9 getting popcorn?\"\n\n\"Back at the hotel,\" I replied without thinking. \"Not really a baseball fan.\"\n\n\"He left you alone?\" Adam queried. \"If you were my girl, I would do whatever you wanted.\"\n\nI nodded and grunted. Maybe if I didn't talk, he would leave me to enjoy the game.\n\nHis silence lasted for only a couple of pitches.\n\n\"How long are you in town for?\"\n\nI decided to move up my departure date figuring it was the easiest way to get him to shut up.\n\n\"Oh, we fly out in the morning,\" I replied. \"I just wanted to catch a game before we head home.\"\n\n\"That's a shame,\" he said. \"There are some great clubs that are worth hitting up here. You have to see some of them before you leave. Maybe after the game I could show you one or two.\"\n\n\"My fianc\u00e9 will be waiting for me,\" I said. \"I told him I would meet up with him right after the game.\"\n\n\"He can come, too,\" he said. \"I'm not trying to pick you up. Just show you a good time.\"\n\n\"I'll check with him and we'll see,\" I compromised, hopefully finally getting this guy to shut up and let me watch the game. But it was to no avail, he kept wanting to talk -- asking me all kinds of questions about my name, where I was from, etc. etc. I lied through my teeth and wished I had confronted him when he had first sat down.\n\nBecause I was annoyed with him I did say yes when the beer vendors came by selling beer. I admit, I did feel a little guilty. It was the first time I let a guy buy me a drink and I felt false for him thinking I was a girl. He never would have done it if I was Chris. I justified it by thinking I would get some reimbursement for the seat he had stolen.\n\nBut by the seventh-inning stretch, I couldn't take it anymore. I excused myself to the ladies' room and that's when disaster hit. I had finally made it through the line to the bathroom and was coming out when I ran face to face with the Hispanic lady from the Gossip Grill. She took one look at me and said to her friend, but loud enough for me to hear, \"Hey, that's him. Let me get a picture.\" She then started rummaging through her hand bag looking for her phone.\n\nI panicked and turned and ran. I dashed through the crowd with my hands blocking my face, heading for the nearest exit. Her friend had gotten off a quick shot, but I didn't know how good of a picture it was. I vowed never again to expose myself like I had at the Gossip Grill. I didn't know if I could take the embarrassment of my picture hitting the web.\n\nI asked the Uber driver to turn on the game. The Red's first baseman Joey Votto hit a homer in the 8<sup>th</sup> to give the Reds the victory. And I missed it.\n\nBoth girls were asleep when I got back to the room so I slipped between them without waking them and nodded off to sleep. Talk about a train wreck of a night.\n\nChapter 10\n\nMonday had been declared Beach Day and Julie put on a ban on sex until after some sun. After breakfast, we back to the room to put on our bikinis. We decided to change one at a time and I went first with the tiny bikini and got a standing ovation from the girls when I came out of the bathroom.\n\n\"I can't believe how good you look,\" Lisa said. \"It's just not natural.\"\n\nJulie went next and I nearly lost it. I have seen Julie naked several thousand times in my life and have seen her in skimpy bikinis but the one piece she came out in stirred my loins something fierce. It was a one-piece micro-bikini that went from a thong to two thin cords that raced up to her nipples, barely covered them before tying behind her neck. She must have had less than two square inches of fabric total in that outfit. Julie took one look at me and laughed.\n\n\"That swimsuit won't do,\" she said.\n\nI looked down and my dick had turned into a raging hard-on and half of it was sticking out of the top of my bikini. I blushed red.\n\n\"I have to change,\" I said. \"If you are going to wear that, I'm going to be hard for sure.\"\n\nI went and switched into the boy shorts. That would cover me up more.\n\nLisa came out next in a standard string bikini. It looked lovely on her despite her hands over her breasts. It was bright red and when she turned around the Cincinnati Reds was typed right across the ass. I laughed and she turned around again. This time I could see the C logo displayed proudly on her chest.\n\n\"What do you think?\" she said.\n\n\"It's perfect.\"\n\n\"I just want you to know that I am yours,\" she pronounced.\n\nWe went to the beach, enjoyed some sun, and getting gawked at. With the way the girls were dressed, I was a wallflower, but despite the hard-on, no one gave me a second look that I saw and suspected I was a guy. Several guys tried to pick up my ladies, only to be shot down repeatedly. After some sun and dinner, we retreated to the room for more sex -- this time I experienced the joy of having my balls sucked on by Julie as I plowed into Lisa. It was late before we finally turned in exhausted.\n\nI had rented jet-skis for Tuesday morning and we wore ourselves out fighting the waves before catching a flight home that night. It had been a weekend of fun, sun and sex -- a great combination.\n\nI had made love to each of my women singly and together at least once a day so I was looking forward to some recovery time when we got home. I know they spent some time alone together, but they never excluded me and I always seemed to be the focus of any threesome. It was magical.\n\nOn the plane flight home, I expressed extreme nervousness to Lisa about meeting Emily tomorrow. I told her I had an appointment in the morning with Andre to fix my hair and makeup because I wanted to look my best. With some cajoling, she finally got me to agree to stop by her office first thing in the morning for a saline infusion. She said if I was going to look my best, that had to include my full C cups.\n\nI woke up early and dressed in business casual, nothing overtly sexy but I wanted to impress so I went with corset, stockings and high heels. I needed my sister to think I was serious about this and not to judge me poorly. I got more and more nervous throughout the day as the clock slowly ticked closer to her showing up.\n\nIt got worse once I arrived at the airport. Beads of sweat started to appear everywhere as I sat waiting for her flight to arrive. \"This shit just got real,\" I thought. \"What would my sister say?\" I got up and started to pace. I couldn't sit still any more. Twice I felt my knees start to buckle as I imagined seeing disgust on her face. Would she even recognize me?\n\nMy hands were starting to shake. I was biting my lip. I turned and walked to the door and reached to open it and bolt, when I heard over the intercom the announcement of her flight's baggage carrousel number. It stiffened me and I turned around. She would still love me, wouldn't she? She had always told me so.\n\nOut of the corner of my eye I saw her. She was looking around for me. Her eyes swept over me and kept going. She didn't recognize me. I couldn't blame her for that. I didn't recognize Chris anymore when I looked in the mirror. All I saw was Tina. I steeled myself, ran my hands down my side straightening my skirt, and walked towards her.\n\nMy mouth immediately dried up. I couldn't speak. She saw me approaching and I could still see no recognition in her eyes. I stopped before her. She furled her forehead, and then almost as in slow motion, I saw her look into my eyes. I saw the recognition come forth. She gasped in shock.\n\nI finally got words to come out, even if it was only a raspy whisper.\n\n\"Hello, Emily.\""
    ],
    "authorname": "noobdude",
    "tags": [
        "crossdressing",
        "mff",
        "feminization",
        "ffm",
        "gender transformation"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-boiled-frog-pt-05"
}