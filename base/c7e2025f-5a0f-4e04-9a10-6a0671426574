{
    "title": "Beth's Disgrace Pt. 03",
    "pages": [
        "Hello all. I thank you all for your patience. I know it has been a long wait. I am trying my best and will continue to do so. Thanks to you all for the feedback. It is helpful and inspiring. Enjoy. As always, this is a work of fiction on a free adult writing site. Which means that most authors here are likely writing something that is fantasy. Which is a nice way of saying wet dreams. My work is definitely fantasy. If I wanted real life, there are other things to read and do. While I have attempted to make my story as believable as I can there are clearly parts that are not compatible with how real life works. No one should treat anyone this way. If a soon to be college freshman that gets her rocks off on public humiliations and happens to find herself blackmailed by people that hate her and want to humiliate her publicly isn't your cup of tea.... then kindly move on. Thanks. There is something for everyone here. And for those that DO dig this idea.. you are my people.\n\nDisclaimer: All characters in this story are 18 years of age or older. All students portrayed in a school setting or otherwise are high school seniors that are about to graduate and are all 18 years of age. And in this world there are only 18 year old students in their classes with them.\n\nPart 3\n\nWhile Beth agonized in the bathroom over what she was ordered to do with her pubic hair from now on, her 3 tormentors were texting each other with a sense of urgency as to what they should do next to the unsuspecting bitch down the hall now that they have just strengthened their grip on her. So far Kim had been calling all of the shots without much input from the girls. While she was doing a remarkable job in their eyes and they were a bit speechless after witnessing her on the spot creativity as an online dom, they were ready to revolt a little.\n\nWhile the girls were quickly learning that Kim had a kinky side to her that they never knew about, Amy and Jenna never have had any exposure to sexuality of this nature. They loved flirting with boys at school and at parties and all of the coming-of-age sexual experiences that came with being popular cheerleaders at school. They never even dreamed that people could be into the freaky degrading shit that Beth was into. A week ago, they couldn't even imagine thinking of ways to expose and humiliate another girl. Would have no reason to even want to. But now the girls were out for blood after what Beth had done to them. And after reading the freaky fantasies that Beth had laid out for them, both Amy and Jenna were intoxicated with the thought of being on the dominant end of Beth's humiliation. Their rage and thirst for revenge gave the girls off the charts motivation to come up with sadistic ways to torture the cunt that ruined their senior years. And they were tired of Kim's repeated insistence on holding themselves back.\n\nAmy was tired of seeing Beth walking tall and confident around the house. Even with her protective barriers being chipped away at daily, Beth was getting off on it so much that she seemed to be walking on air despite the new humiliations added to her life. Amy could no longer bear Beth's air of superiority around her and needed their plan to start yielding results. \"What good was having humiliating evidence on someone that gets off on humiliation if we were going to just help her get off in her room?\" thought Amy.\n\nJenna had more classes with Beth than Amy and was tired of the way Beth seemed to look down at people in school. Unlike the populars cheerleaders that looked down on the lower classes in the school hierarchy like Amy and Jenna did, Beth seemed to have a way of looking down at the popular girls in a way that could infuriate the school's ruling class. Add to that the smirk Beth seemed to be always sporting on her face now that she was experiencing these new sexual highs and Jenna was ready to go wild on that cunt. Besides being grounded for the rest of her senior year because of Beth, Jenna had another axe to grind. See, Jenna also played intramural volleyball with Beth. Jenna had always loved volleyball and dreamed of making the school team but didn't. It always bothered her because she thought she was good enough and she had to watch Beth and the other girls strut around school on game days with their uniforms on while Jenna burned with envy. Jenna still loved the game and kept at it with intramural games with the hope of improving her skills and maybe walking on the team when she got to college. She desperately wanted to see a change in Beth's demeanor at school and at volleyball games and she wanted it now.\n\nAnd so, after the customary texts of disbelief and laughter just like every time the naked and horny Beth further debased herself in her room while they spied on her, the subject changed to how they were going to proceed.....\n\nAmy: This is it! I am going to pounce on her once she marches that shaved twat out of that bathroom and down the hall to her room. I want to march her right to our parent's room in that slutty robe with all of her slutty bits hanging out of it. Let them see the real slut that pretends to be their angel stinking of her own cum as her shaved twat peaks out from under that robe!\n\nKim: Noooooooooooo. GOD DAMN IT NOT YET!!!!. Why do you insist on ruining our plans when we have so much left to do to her? Will you please listen to what I say???\n\nJenna: Fuck that shit. What are we doing to her?? Yes we are laughing our asses off at what a freak she is and what a naked flailing mess of body parts she continues to make of herself, but at the end of the day we are just helping her masturbate. What are we here, a bunch of voyeur dykes? I want her to pay with misery just like we have and you just seem like you want to get her off!!!\n\nKim was expecting this but the last comment pissed her off.\n\nKim: IS THAT WHAT YOU FUCKING BITCHES THINK THIS IS ABOUT! FUCK YOU!\n\nKim took a deep breath and continued..\n\nKim: This bitch did major damage to all of us. She took away the last month of our senior year, one of the best times of our lives that we can never get back. She took it away because she was horny. That's it. But she ruined my life in a far worse way than yours. At least you got to go to prom. Got to have pictures in a prom dress. Got to ride in a limo with your best friends. Got to dance and kiss your date. I never got any of that. It was taken away from me. Because she was horny. That's it. And my boyfriend broke up with me because of it. Left me for another girl and took her to the prom. Broke my heart. For no reason besides that selfish cunt was horny and didn't want us to catch her while we were living our lives. I want to absolutely ruin her life as she knows it. I want to make her most humiliating fantasy seem like light foreplay by the time we start hitting her hard. And yes, she is getting off right now. She is fucked up. I want her to never be able to stop getting off because of what we do to her. I want it to be public knowledge to everyone who cares to know what she looks like when she gets off, and how low she will sink to do it. I want to make everyone intimately familiar with that sweatsuit hidden body that she is ashamed to show to anyone. Every naked inch of it including her fat ass! I want her showing it to everyone in places she can't imagine being naked. But it will take time. What do I need to do in order for you guys to trust me? I have a plan. A detailed plan. And I promise that you will be satisfied with your revenge beyond your expectations if you just listen to me and don't screw up the end game for a little short-term satisfaction. What do you guys need from me?!\n\nAmy: Well for starters, you need to tell us about this fucking plan. We keep getting told that you have a plan and we need to be patient, so we end up just watching her naked ass flopping around on the floor while she attacks that furry menace between her legs and whimpers like a sex starved slut. While it is funny, it isn't revenge. So, what are you planning on doing that is better than me outing her right now? I want her to know that I know! I want our parents to know why she set us up!\n\nJenna: Yes. We need to know what we are doing. I have all of the videos on my server here and it would bring me great joy to just broadcast them to the entire school while she is in class! What is to stop me!\n\nKim: Ok. Ok. Just cool it for now. This is the plan. And I am sorry I have kept this to myself. I want this to be our plan. And I want you guys to come up with as many ways to humiliate our closet masochist slut as you can. I just want you to be patient. I have been busy researching what makes this slut tick around the clock. A lot of this is new to me too. I have poured over her writings, what she read, what she has told us, and more. I have gone into chat rooms and message boards and mined information from anywhere I can to come up with ideas to humiliate her over and over again. My plan is simple in the end. Non stop humiliation that she has brought on herself.\n\nAmy: That isn't good enough. First of all, you said that she is in phase 1. What the hell is phase 1? How many phases are there? How long does this take?\n\nJenna: And who agreed on these phases? You couldn't have done this shit without me and my surveillance abilities.\n\nKim: Ok. Ok. You are right. So, nothing is etched in stone but what I have come up with is to start with minor humiliations outside of her comfort zone which is her room. Subtle things that don't seem much from the casual viewer, maybe just a little weird but in the end, people will shrug and go on their way. We do this more and more to her through the end of the school year and the summer months. Now that we are officially blackmailing her, we will be adding rules and punishments to her daily life. This should address your concerns and give you more satisfaction for now. Especially with regard to that smirk on her face. Think about it. Right now, she is horny as fuck while she shaving her pussy on our orders. All she is thinking about is the next orgasm and this humiliation will push her sick mind to make her hornier than she already is. But after she cums it will hit her hard that a real person that lives close by is blackmailing her and has all of her information. That her pale naked body that she is afraid to show off has been seen in the lewdest of possible ways. She is not going to handle that well and that should let a little air out of her balloon don't you think?\n\nJenna: I guess so, but that is it? We don't want subtle humiliations. We want to own that bitch. Ruin her life like she did ours! What are the other phases? And we need something good now!\n\nKim: Ok. Ok. Calm the fuck down. Here is the plan....\n\nAnd Kim told them what she had planned. How she planned to do it. What they were going to do to poor Beth along the way. And in the end all three girls had wicked smiles on their faces. They concluded that Kim was right. And this was going to be a fun summer. But Kim's plan, the latter phases of the plan, the truly cruel and sadistic parts of her plan were going to make the girls' college years even more memorable than they were anticipating.\n\nBut Kim knew she had to throw them a bone. And why not? Things were about to ratchet up for poor Beth, why not let the girls have some fun and keep them off of Kim's back?\n\nKim: Now that we are on the same page, I would still like to address your concerns for right now. So Why don't you each tell me something you want to see done in the short term here and we can implement them into our little slut's life?\n\nAmy: Now we are talking! I know we aren't going to make her live with the consequences of that destroyed robe she has committed to wearing. Too much too early. Although I can't wait for the day that she will be regularly wearing things like that we can't do it now, I know. So you had threatened her with losing clothing privileges on the entire 2<sup>nd</sup> floor and it seemed to really scare the shit out of my cunt step-sister. I want that. Sooner than later. It doesn't mean I will be hounding her in the hallway. But I want to catch her every now and then and maybe make some remarks about her big ass, but nothing over the top. Many girls walk from the shower to their bedroom naked with a towel in their hair. Just not Beth because she is obsessed with covering those giant pale tits of hers. Not anymore. Naked upstairs. No exceptions. Soon.\n\nKim: Ok. Done. We will see how tonight goes, but I promise one of the next times she fails a task or breaks a rule or something, naked on the 2<sup>nd</sup> floor from now on will be the consequence. How about you Jenna?\n\nJenna: Wow. The naked upstairs thing is a great start and kind of hot. Never thought I would say anything like that but now that we are about to see Beth go through some actual humiliations outside of her bedroom, I am soooo excited! Anyway, I want to see her become more uncomfortable at school. I know you won't be parading her around naked or in super slutty clothes or anything, but something that makes her skin crawl and knocks the confidence out of her. I don't care if she gets off on it, in fact we want her to, but start messing around with her at school. Maybe show some leg. It is just about summer after all. And maybe have her strip in some places at school. They could be private but would still freak her out and knock her down a peg. What do you think?\n\nKim: I like it. I have a few things in mind that we can implement right away. Now, before we get to that stuff, we have to finish off tonight. She is about to come back to her bedroom crying tears of humiliation. This is what I want to do to finish her off for the night. A rude awakening as to what is in store for the little twat that ruined our lives!!\n\nAnd Kim proceeded to lay out the rest of the night to the girls.\n\n--\n\nBeth was standing completely naked in her bathroom. Her right hand was searching through the medicine cabinet for scissors while her left hand stroked her sopping wet pussy. Her bush and the insides of her legs were soaked with a long night's worth of slutty bodily fluids. Slimy pussy juice had been smeared over her tits and stomach and she even rubbed some in her hair to feel extra nasty. She was so horny she could scream out loud. And she was once again terrified.\n\nHer blackmailer had ordered her to shave her pubic hair. All of it. Something that Beth was terrified to do. She always felt a nice bush afforded modesty even though Beth never considered undressing in front of anyone. She knew she would be more exposed and she was worried that her large pussy lips and clit would look obscene without any hair covering them. She wanted to fall to the floor in tears, to tell this MistressK that she couldn't do it. But her pussy was in horny overdrive and any sane thought to stop this craziness was overruled by her desperate need to cum again. She had been on edge again for a while and her hand never seemed to stop rubbing herself between the legs!\n\nBeth found the scissors, took a deep breath while wiping tears off her face with a pussy juice covered hand, and started cutting. Hair started falling to the shower floor as lock after lock was removed from her pubic area. After a lot of snipping her all covering bush was reduced to a lot of short hair that could be taken off by razor. She looked down and cringed. Her red prominent lips were now clearly in view. Her body image issues were about to be hit with another hard blow and she knew it. And she hated that it made her even hornier at the thought of more awful exposure of her body.\n\nShe got the cream and the razor and turned the shower on. She couldn't picture how she should angle her body to complete her task. She had read plenty about girls in her fantasies being ordered to shave their twats and it made her cum many nights just thinking about it. But she never actually gave thought as to how she would actually shave it. With the warm water trickling over her over-stimulated body she decided to just sit down in the shower and go to work. This was a mistake for Beth. As revolting as it was for her to step barefoot into her bathroom and shower barefoot for the first time, sitting her naked ass and pussy on the shower floor where people bathed made her shriek with disgust. She started crying again and was about to jump back up when the water started making a direct hit to her pussy. The next thing she knew her legs were pinned open wide against the shower wall while her hips thrust up to meet the water involuntarily to try and get off.\n\nBeth was able to calm herself somewhat and started to lather up her remaining pubic hair. Beth started to slowly shave away more of her dignity with each stroke. As the hair fell off of her crotch and went down the drain she started to see prominent red lips come into focus and they were contrasted by the surrounding pale skin that was once covered by hair. Beth was already very sensitive down there when she got horny and couldn't imagine that right now her lips were twice as sensitive as they normally were. Her clit was standing fully erect and now that it was exposed in all of its glory it seemed to just beg to be touched. Beth started rubbing it and almost came instantly. She had to scream into her elbow to muffle the screams.\n\nBeth thought she was done but then realized that she hadn't shaved all of her pubic hair. There was still some of it around her asshole. Beth lathered up around her ass and flipped over to her hands and knees. Beth didn't even hesitate now. As nasty as it was to be on her hands and knees on the nasty tile floor while shaving the last pubes she had left, she just wanted to finish and get back to her room so she could cum! So she started to shave away. She imagined being watched by someone that hated her and was hell bent on humiliating her. She thought about being ordered to lick the shower floor while she was shaving and wanted to wretch, but she also moaned in ecstasy at the heightened humiliation that would bring her.\n\nBeth rubbed her hand around her newly bald snatch and asshole to check for any stray hairs she may have missed. She didn't want to fail at any rule or task. She was afraid of what MistressK would make her do. She already had a task left to do for the night with some humiliating rules already set by herself to deal with. She didn't want to make it any worse for herself right now. As she rubbed around her hairless crotch she almost buckled in orgasm. Her most sensitive place now felt like an exposed bundle of nerve endings. She got up and dried off quickly. She quickly put the robe on without looking down at the finished product. She was dreading what she would look like in the full-length mirror and was nauseous at the thought of baring it to her blackmailer on the other end of the webcam in her room.\n\nBeth didn't even bother adjusting the nasty tattered robe to maximize what little it could cover. She just put it over her wet body, tied the rope and bolted to her room. Amy wished she could open the door but agreed not to. Beth's tits were swinging back and forth beyond the reach of the robe while the lower half of her ass was exposed as it jiggled with each step. She barged back into the room and looked in the mirror. She was shocked. The robe covered almost nothing. Both tits were hanging out and her pussy was barely covered. No way she could wear this all of the time. She would have to beg. But she didn't have time for that now. She shrugged off the robe and walked naked towards the mirror.",
        "Beth was dreading what her most private parts would look like without the cover of pubic hair and the site shocked her. Her prominent lips were beat red and were framed perfectly by the shaved white skin that surrounded it. And that wasn't the worst of it. Since she was forever on the edge horny, her clit literally stood out like a sore thumb! It was exposed and fully erect just begging to be touched. Like a tiny red dick. Beth was already unreasonably insecure about many aspects of her body. One of the things she hates most about her body is that her large red nipples got huge when she was horny and unlike many girls she couldn't hide the fact that she was aroused if anyone saw them. Now that her crotch was shaved bald her angry cunt and erect clit in tandem with her rock hard nipples could announce to a blind man from across the street that she was horny as fuck. And for the first time, now that she had screwed up and found herself being blackmailed, she was worried about just how many people were going to be seeing her overly aroused body on display.\n\nBeth went to the computer and fell to her knees in tears. Her bald glistening twat on display to her excited tormentors on the other side of the screen. Beth started frigging her twat in shame as she begged to cum and end this mess. She started typing, telling MistressK that she had had her fun but it was time to move on. She was begging to be allowed to cum, but to be released from her blackmail as well. If she was given a choice as to which one of those she wanted more, Beth couldn't be too sure she would have chosen her freedom. She needed to cum. And anyway, she wasn't about to be given a choice.\n\nMistressK: Wow! Look at the size of that angry red clit! That is amazing. What do you think that would look like in a bikini! World's largest camel toe! And those lips. My god, between that clit, your bald pussy and those rocket nipples there is no doubt you're still enjoying this you slut. Don't tell me you want out! Your twat is practically dripping like a faucet now!\n\nBeth cried more tears. Having her pussy shaved bald was even worse than she thought it was going to be. When the air hit her clit it shot electricity through her body. And her lips were so prominent as they stood out from her pale skin. And she could practically see her pulse rate by just looking at her throbbing clit. And she was wet. Oh she was wet. Instead of her pubic hair absorbing a lot of her arousal and getting matted down, her newly bald snatch glistened from her prolonged arousal. The insides of her pale thighs were soaked and started to drip down her legs. This was going to be a problem for Beth. She cried more thinking about how she would deal with her hypersensitive bald pussy in public while it gushed fluids down her legs. She was overwhelmed with shame and arousal. She couldn't deny that her need for humiliation was being met in ways she never thought would happen in real life. She wanted to cum! And MistressK making fun of her only made it worse!\n\nBeth: Please let me cum. I can't take it anymore. I feel like a stiff breeze would take me over the top right now. Please. I have done all that you have asked!\n\nThe girls looked on as Beth rocked her naked body back and forth as she kneeled on the floor trying to hold back her orgasm. Beth was smearing her seemingly never-ending supply of pussy juice over her tummy and tits again. She was even running her slimy hand through her hair from time to time like she needed to find a way to look and feel worse. Every time her hand touched her newly shaved lips Beth couldn't help but moan out loud. It felt amazing and she couldn't keep her hands off herself. The girls could tell that Beth was afraid of cumming without permission. That she didn't want any further consequences to her mistakes. This was good. They wanted her to be scared of MistressK.\n\nMistressK: You can cum in a minute you filthy slut. We need to talk about how the rest of your night is going to go. Remember, you still owe us a task and you imposed some rules for that task. Do you remember slut?\n\n\"Oh no!\" thought Beth. She just wanted to cum and get tonight over with. She forgot about all the jibberish she was spouting out of her mouth when she was begging to cum earlier. Now she remembered and it only increased her already through the roof arousal.\n\nBeth: Yes mistress. I do.\n\nMistressK: And what were they slut? We might as well start testing your memory now. Remembering rules are going to be a big thing for you from now on you freak!\n\nBeth: I have to do a task of your choosing and it doesn't count towards any tasks or punishments that I owe you. I need to make myself cum before doing the task so I am not horny and will not enjoy it. And I must be naked for the task. And I have to make it more humiliating for myself.\n\nIt sounded hot when she said it out loud before. Now that she was about to be assigned this task it didn't sound too good. But she was so horny and this was the kind of stuff she fantasized about. Forced exhibitionism, tasks, rules, self-humiliation. She couldn't believe it but she was as excited as she was scared to hear the task.\n\nMistressK: That is right slut. So first things first. You need to cum. And you will cum. I want you to put your chair back in front of the computer so the webcam can get your entire body. I want you to spread your legs as wide as you can. Then, when you are in your most natural position of naked and spread wide open, I want you to masturbate for me and put on a full show. Go to town on yourself. Your twat, your tits, your ass, and whatever else you want to rub. Make it nasty. And you are going to do it for the next 30 minutes non-stop. I want you to cum as much as you can in that 30 minutes and I want you to do it spread open for me you stupid slut! After you are done I will tell you your task!\n\nAs bad as she had to cum she started to fight back a bit. It still hadn't hit her totally that she was actually exposing her naked body to someone. A body she had issues with and was very careful to keep hidden. And she was exposing it to someone that now knew who she was. But when MistressK gave that last order driving home that she would be spreading wide and masturbating for an audience Beth showed that she hadn't lost her fight. She slapped her legs shut and covered her crotch and tits with her arms.\n\nBeth: Please, please no! Don't make me do that again. I did it once and it was a mistake. Please, just let me cum in private. Under the covers in my bed. Please don't make me do this!\n\nBeth was fighting much too late. Not even counting the surveillance she had been under by the girls that she didn't know about, her careless fuck ups already had her naked and masturbating on video for MistressK. But her throbbing clit was driving her decisions then and now. When Beth thought back on this moment, she couldn't help but think that while she genuinely was sick over masturbating naked for the camera, she subconsciously revolted a little on purpose knowing that it would make her upcoming task a little worse. The girls loved that Beth was still showing a lot of fight. They looked forward to the many ways they would break her strong spirit over and over again.\n\nMistressK: You don't get it slut. You are mine. If you don't get your naked ass on that chair and spread those thunder thighs as wide as they can go, your step-sister and parent's will be getting a video tonight! Now move!\n\nBeth doubled over crying as her red-hot pussy gushed some more into her hand that was futilely trying to cover her newly shaved pussy. She was begging and bargaining. She offered to pay money to end this. To no avail. Beth was told that if she didn't start her masturbation show in 10 seconds, that her school would wake up to an assortment of media files to entertain themselves with. Beth was also told that she would again pay for her hesitation to obey.\n\nShe got up and grabbed her chair to move it in front of her computer. The girls laughed at her usual show of large tits swaying back and forth as she moved quickly. Beth continued sobbing as she set up her chair the correct distance from the camera. Then, against her will, she started to slowly part her long pale legs until they were spread as wide as they could go. She saw her image in the video window on her monitor and wailed in tears at the sight of herself. She wanted to vomit. Shewas more humiliated than she thought possible and was dying to cum.\n\nMistressK: That is better slut. Now, since you didn't obey right away like you were supposed to, I am going to give you a reward as a punishment! You now get to make yourself cum for an entire hour non-stop! Isn't that great? Plus as a punishment you are now going to make an even better video for me tomorrow. You worried about exposing yourself, well we will see how you feel after that video. But that will be tomorrow. We need to get going because it is getting late and we haven't even been given your task yet. Now cum you filthy slut! And don't you dare stop or even slow down or it will be two hours on your front sidewalk!\n\nDespite her extreme reservations about this whole nightmare scenario, she was as horny as she had ever been and that is saying something after what she has been put through the past 2 days. She moaned some more and started hammering away at her clit. Especially in light of the threat of sending her outside! Within 30 seconds she had a ferocious orgasm that squirted out in front of her. Although that first orgasm almost knocked her through a loop, she didn't even slow down. Orgasm number 2 came hard and fast. She pulled her slimy hand from her snatch and looked at it for a second before smearing her own gooey nastiness in her hair. That only made her ready for more and she turned her attention back to her needy cunt.\n\nSo, on she went while carrying out her extended self-debasement. She had her first five orgasms within the first ten minutes. She was still horny but less so and would have liked to have taken a break as her clit was overly sensitive. Only slowing down wasn't an option and she knew it. This was going to be a long hour.\n\nBeth continued to hammer away at herself. She had rubbed her cunt slime all over herself like the filthy slut that she is. She took turns licking her tits all over, rubbing her nipples and running her finger across her asshole. After thirty minutes Beth was not having any fun. She was hardly aroused anymore and her body didn't want anything to do with the orgasms she was forcing from herself.\n\nShe was crying full on now as she sat there completely naked and spread wide for the camera while she continued her masturbation show. Her unknown fan club looked on with large smiles on their faces. Beth the cunt didn't seem so high and mighty now. She desperately wanted to stop but was not allowed to. She was still getting off but wasn't enjoying it anymore. This was just pure humiliation without the erotic payoff.\n\nBeth continued putting on her lewd performance. Her face contorted in agony every time she forced an orgasm from her body. She was a sweaty, cum covered mess. She had squirted several times and had made a mess out of her immediate surroundings. She looked at the timer and she still had ten minutes left. She started to beg. She couldn't handle any more. She begged out loud instead of typing. She knew the video had sound.\n\n\"Please let me stop. I can't take it anymore. I will do your task and hate it. There is no more arousal left in my body to enjoy any humiliations you have in mind. I am begging. I will do anything! Please. My clit can't take it anymore!\" Beth said out loud to the webcam. She was loud enough that Amy could hear her from the room next door. Beth was oblivious and the girls were laughing at her expense once again. She didn't know anything about who was on the other side of this video but she hoped they had mercy. She was wrong.\n\nMistressK: Sorry slut but rules are rules. And what gives anyway? You have been begging to make yourself cum all night. I thought I was doing your slutty cunt a favor. Well, you will continue fingering that sloppy mess between your legs as hard as you can for the next ten minutes. But now, since you keep needing to be reminded that I make the rules, once your time is up you will continue finishing whatever orgasm you were in the middle of at the end of the hour. If that means you keep going for another hour to bring another orgasm out of you, so be it slut. Then you will drop to your hands and knees on the floor facing away from the camera. I want to see that big ass as you lower your face to the floor. Just sit there while I enjoy the nasty view of your fat ass before I give you your final orders and be done with you for the night. And if you don't please me you won't be showering before school tomorrow!\n\nBeth cried more as she picked up the pace. She couldn't be made to face school while covered in nights worth of cum and sweat. Her lips and clit were raw and so sensitive that her hips bucked even more. The thought of going to school stinking of sex and covered in crusty dried fluids ratcheted up the humiliation again and brought another painful orgasm crashing towards Beth. She wailed in discomfort and embarrassment. She started again. She was a blabbering mess. As the timer went off Beth was stuck between orgasms just like Kim hoped would happen. Beth was terrified. She didn't think she could make herself cum again and then she had to get on the floor.\n\nBeth tried to think of humiliating thoughts. Things that had brought her off before. Nothing was working. She cried more, then buckled down harder. As her hand circled her clit at warp speed causing agony to her overly stimulated parts Beth held up her other hand that was covered in more of her pussy slime and shoved it in her mouth! This was a new low. Tasting her own cunt for the first time. It was revolting and humiliating. To do something so vile and knowing someone was watching. . As she licked her slime off of each finger, Beth started to buck uncontrollably as her naked toes curled once again as yet another cruel orgasm was ripped from her body.\n\nBeth knew she couldn't waste any time so she moved the chair and got on all fours while still panting from the last orgasm. She had to finish this task.. Tomorrow's shower depended on it. Beth adjusted herself until she saw her full pale ass on the screen as well as the rest of her body from head to toe. She looked at the pale flesh looking back at her in the webcam and whined again. The white skin of her full ass cheeks were jiggling with every breath, and her newly exposed twat was beet red and soaked. Her skin was glistening with sweat and her own fluids. And she was being watched. She started crying some more. It felt like she had been crying for hours.\n\nAfter 5 minutes of laying on the sticky floor after her last painful orgasm, Beth heard her computer chime with another message. Beth cringed at the thought of what comes next. It was late. Midnight. And she still had to do a task. And she wasn't in the mood at all. All arousal had been drained from her body and she didn't want to play now. Too bad Kim, Amy, and Jenna didn't care. MistressK had already posted the task and Beth was not going to like it.\n\nMistressK: Ok slut. Now on to your task. Good news. Once you finish this task you may go to bed. So here it is.\n\nMistressK: When you described your house you said the laundry was in the attached garage. Well, that is where you are going. You are going to grab a load of laundry from your room and wash it tonight. I am sure you have some garments that you have made stink like sex by now so you need to wash them. So, your task is simple. You are to take a load of laundry downstairs and out to the garage. You are to wash your clothes and wait there until the cycle is done washing. You may even use the express cycle so it only takes 15 minutes. Then, you are to switch the laundry to the dryer and start it. That's it. Simple right? Once your clothes are in the dryer you can come upstairs and go to bed. Now remember the conditions you set, slut!\n\nBeth was almost hyperventilating now. Things were taking another horrible turn. She was being ordered to leave her room naked and go downstairs. The nightmare scenario and fantasy of getting caught naked would be drastically increased if these games were taken out of her room. Beth wanted to scream. She wanted to shut off the computer and forget about this whole thing. But she couldn't. She just made another really embarrassing video of herself and her blackmailer would surely send that out if she disobeyed. She wanted to beg but stopped herself. She couldn't handle MistressK making this task worse because she begged again. Which reminded Beth... she had to make this worse!!!\n\nBeth: Yes mistress. I must be naked at all times. I am so scared but I will do it. And to make it more humiliating may I crawl on my hands and knees around the garage while gently stroking my pussy the whole time the clothes are washing?\n\nThe girls were just as surprised Beth was at her humiliating suggestion. \"What is wrong with her?\" said the girls. \"What is wrong with me?\" said Beth!\n\nMistressK: Yes, you may but I want you to record that whole spectacle with your cell phone so you can show me proof that you did it, slut. I don't care what you have to do to make this possible. If you have to move a car outside the garage while naked to give me a better view of the garage then do it! And don't clean a thing off of your body. Be proud of the nasty slut that you are!\n\nBeth couldn't believe what was happening. Her nightmare had come true. Her darkest fantasies found out and she was being forced to act on them. She was shaking at the thought of leaving the privacy of her room like this. Naked. Shaved. Smelling like sex. Covered in sweat and cum. Looking like she was freshly fucked! \"Why?\" she asked herself. \"Why was I so dumb? Why am I such a freak?\".\n\nBeth looked at the time and was happy that it was so late. Tomorrow would be tough on no sleep but that was the least of her problems. She was about to risk being seen naked by her nemesis. Her step sister who would torment her to no end. With it being so late there was a good chance everyone was sound asleep. She gulped then gathered some laundry into a basket. MistressK was right. She has some clothes that stunk like sex. She took a deep breath and opened the door. She stepped into the hallway and shut the door behind her. Despite being careful, in her paranoid state the sound of her gently shutting the door felt like a loud boom. She tiptoed to the edge of the stairs and cried some more. This was it. The point of no return. Or so she thought anyway.\n\nBeth started her way down the stairs one bare foot step after another. The cold hardwood reminded her of her naked state as if she needed one. With every step her tits swung free back and forth humiliating her further. She felt like the world was staring at her bare ass as she slowly walked. The prospect of being found out did not turn her on at all this time. She had cum so much earlier that all she felt was shame instead of arousal. She could smell herself and was disgusted. She reached the bottom of the stairs and saw herself reflected in a decorative mirror and yelped. There she was in all her pale naked glory walking around her house. Her pussy was hidden by the laundry basket but her bouncing tits were on full display. Her hair was a crusty mess. Her sticky thighs were rubbing against each other, reminding her of their size and her filth.\n\nBeth crouched down in anguish. \"I can't go through with this,\" she thought. She wanted to run back to her room and under her covers and pretend that none of this happened. But it did happen and she knew she would be making her life worse if she didn't carry out this task. With tears streaming down her face she stood up and walked through the kitchen, then the living room towards the door that leads to the garage. As she padded past the windows she shrunk down as if someone would see her this late at night in a house that sits back from the road a bit.",
        "As she made her naked way to the garage she heard a sudden noise that brought her heart into her throat. She quickly hid on the other side of the wall and crouched down. \"This is it!\" she thought. She was going to be found out and ruined. She was breathing so heavy she feared she would hyperventilate. She had to cover her mouth because of the involuntary whimpers she was making. She hugged her legs to her chest to give her what little modesty that was available to her. If she had been thinking she could have quickly put on one of the dirty garments she was carrying but that never occurred to her. The cold floor against her bare ass cheeks heightened her awareness to the fact that she was naked and in danger of being caught that way.\n\nWhen she finally calmed down she decided that since she hadn't heard another noise it was time to investigate. She peered around the corner and saw a piece of paper on the floor. She sighed in relief. \"Ceiling fan must have blown it off the counter,\" she thought.\n\nShe probably would have been right in most cases. But what she didn't realize was that she had company and that the piece of paper was thrown on purpose to scare her. See, Amy had quietly crept downstairs while Kim was laying out Beth's instructions for the night. She wanted to witness Beth being put through her paces with her own eyes. Amy was hidden in the dark hallway that led to her father's home office and she was able to see everything without being seen herself. There was recessed lighting throughout the first floor of their house and at night they were set to dim which gave Amy a decent view of Beth's naked voyage. Listening to how panicked Beth was at the sound of the paper falling was hilarious to Amy. She thought she was going to watch her naked sister break down on the living room floor.\n\nBeth slowly got up, looked around then bent over to get the basket. There was nothing lady like about this act and Beth bent over at the waist figuring she was by herself. Amy was able to get a decent view of Beth's bald snatch peeking out from under her ass as she bent over and gravity pulled her large tits away from her body. Beth was clearly uncomfortable and Amy loved to see her bitch sister being tormented. Without her horny twat as her guiding light she felt only fear and self consciousness of her body.\n\nBeth made her way to the door and slowly opened it. It squeaked slightly which made her cringe with fear. She looked around quickly to see if anyone was coming then went into the garage. She closed the door behind her and descended the 2 steps to the garage quickly. Her bare feet hit the cold concrete floor and she stopped dead in her tracks. Her aversion to walking anywhere barefoot once again ignored. She would have never walked out here without shoes or slippers on before, but here she was, barefoot and bare ass naked.\n\n\"Oh my god\" Beth gasped out loud as the cold surface and brisk air hit her. She felt goosebumps all over her naked body. She also felt some stirring down below. The humiliating risk of being naked in her garage was turning her on again. The cold air hitting her newly shaved lips was like a shockwave. It turns out that she wasn't done being horny after all tonight.\n\nShe started to walk around. The vulnerability she felt while walking naked on the cold concrete floor was quickly turning into arousal and she felt her pussy get wet once again. The cold spring evening air in her garage could be felt on her wet lips. Her nipples were growing rock hard again. She walked up to the garage bay door and looked at the window. From a distance she could see her reflection and she squealed a little. Her red nipples were sticking out hard from her pale tits. Her exposed sex was like a stop sign. Her face and hair were a mess. She looked like a used slut.\n\nShe pressed herself to the garage door to look out. Her tits pressing up against the cold metal sending shockwaves from her nipples to her clit. She looked out the window and could see her driveway with the street off in the distance. Their house set back around 50 feet from the sidewalk but looking straight out from this position the street could clearly be seen. She fantasized briefly about her task forcing her out of the garage and down the driveway to the street. She imagined being made to walk the neighborhood naked to fulfil some humiliating task that MistressK made her do. She could feel her inner thighs get wet again. She started to lightly stroke her pussy. Her newly bare lips were now so sensitive that the cold air alone had her on edge. The touch of her hand almost sent her buckling to the floor.\n\nAmy watched all of this with deviant joy. She had crept to the window of the inside door to witness Beth's task unfold. She noted that for someone so scared about being caught naked she was sure taking her sweet time out there before she got down to her task. She hadn't even put the laundry in yet. She noticed Beth's hand go between her legs. \"That sick bick is still enjoying this. Unbelievable!\" Amy thought. As much as she wanted to throw Beth outside naked and lock the doors she had sworn she would just watch.\n\nBeth started to slowly thrust her hips back and forth as she stood against the door masturbating. Amy couldn't help but look at the entirety of Beth's naked backside in its entirety. Amy couldn't help but think that while Beth certainly wouldn't fit the mold of the hot cheerleader girls that are the standard for beauty at their age, she was beautiful in her own statuesque way. She was tall, comically pale, with meat on her thighs and tummy. Her ass was large and her tits were huge D cups. But as she watched Beth's naked ass clench and unclench as she fingered herself, her ample cheeks squishing against each other, she couldn't help but think that while they would be exploiting Beth's body insecurities to make fun of her, there were surely a great number of people that would want to see her naked. Which was fortunate because sooner than later a great number of people in fact would be seeing her naked! Right then and there Amy decided that there would be a time soon that tall curvy Beth would be spending a lot of time in public wearing the various cheerleader outfits that fit Amy's petite and perky body. She laughed at what parts of Beth would be spelling out of those tiny outfits!\n\nAs Beth was getting lost in the moment she saw headlights come down the street. She yelped and put her hand over her mouth. Too bad for Beth it was the hand that was just exploring her wet pussy and she got more of her juices on her face. There was no way she would be seen yet she was still terrified. She started to snap out of it and set out to complete her task. It was now past midnight and she needed to get to sleep. Beth timidly padded her bare feet across the cold concrete floor over to the laundry machines. She dumped the laundry in along with a soap pod and switched the settings to express wash. She was about to hit start before she started to look for her phone. She remembered she had to film this. Ten minutes ago she would have been mortified by that thought but now she was horny again and she sort of embraced the humiliation. \"God what is wrong with me?\" she thought to herself.\n\nAfter quickly searching around the basket she quickly realized that she left her phone in her room upstairs. It's not like she had any pockets to search! She cursed herself for prolonging this even further and inviting more unnecessary risk for herself. She cried out in frustration and started to walk towards the inside door. Amy did not know what was going on and panicked when Beth was walking towards her. She quickly ducked behind the wall that Beth was previously hiding behind and hoped she wouldn't be caught. Certainly Beth was the one who would be embarrassed to no end but the girls had plans, and Beth knowing that she was being watched was not part of those plans.\n\nBeth opened the door faster this time. While she was still on edge and scared, she wanted to get this done and her level of arousal was once again clouding her judgement. She left the door open and started to walk across the kitchen towards the stairs. While Amy didn't really know what Beth was up to, she watched this unexpected display with an amused smirk on her face. Beth was walking through the house at a somewhat normal pace and wasn't as worried about covering herself. The result was a front row seat for Amy as she watched Beth's tits bounce back and forth, up and down as she walked. Watching her ass and thighs jiggle as she went up the stairs was an added bonus.\n\nA moment later Beth was headed back down the stairs with her phone in her hand and Amy quickly realized what the problem was. She laughed to herself, both about this added twist to her task and the visible wetness that could clearly be seen on her exposed pussy lips and her white inner thighs. Amy swore she could see Beth's clit from across the room. \"Wow\" thought Amy. \"Between the size of her nipples, her leaking twat, and erect clit, this girl couldn't hide her arousal from anyone if she tried!\". The thought of Beth trying to explain how much being naked and humiliated in front of a group of people turns her on brought an evil smile to Amy's face. And of course she had been filming much of this so she was forwarding what she had to the other girls.\n\nBeth set up her phone on the dryer and toyed with it until it caught the empty bay in the garage. She was thankful that her step-dad was out of town or the garage would be full and she just might have to move the car outside like MistressK suggested. She was scared and a bit miserable at the thought of filming herself some more while completely exposed for some stranger. But she knew that for the time being she was in trouble if she refused and she was just horny enough again to keep going forward with her task.\n\nBeth hit start on the machine, record on the phone, and reluctantly lowered naked self to the garage floor. \"Why did I suggest this? Why am I doing this to myself? Beth quietly said out loud. The floor was fairly clean but it was still a garage floor. Beth had stepped on a couple of pebbles with her bare feet and that had made her cringe. But when she got to the floor she could see that it was a bit dusty as garages tend to be and was no proper place for a naked girl to be crawling. \"That's because normal people aren't naked outside of their bedroom!\" Beth thought.\n\nBeth started her humiliating crawl around her garage, naked as the day she was born. At first she was just crawling to get used to how bizarre this felt. The cold floor on her knees further heightened her awareness that she was naked and pretty close to outside. As she started crawling, what really increased her humiliation beyond the fact that she was crawling around naked for an online stranger was how her tits were hanging free and swinging back and forth as she went along. Every bounce and sway made her want to cry. She imagined people looking at her and ridiculing her large breasts that should be covered by a bra at all times just hanging and swinging about. Amy particularly loved this part too and made a not to think of ways exploit the relationship that Beth's monster tits had with gravity as much as she could.\n\nBeth pictured the lewd display her big ass must be making as she crawled along. Her level of arousal was now through the roof again. Her wet lips felt like they tripled in sensitivity now that she shaved her bush. There was now no protection from the cold garage air and she was quietly moaning at the new sensations being felt by her throbbing twat. She could feel the wetness expand beyond her pussy and to her inner thighs. With her position on fours she starting dripping as she crawled.\n\nShe then remembered her bright idea to make it worse by masturbating. \"Who masturbates while they crawl?\" she asked herself. She was so horny with embarrassment that she gave little thought to the fact that she was filming herself as she brought her left hand to her clit as she crawled along, albeit a bit slower now with only one arm to balance herself. When her cold fingers touched her burning clit she yelped and crashed forward on the garage floor. She now had her face down, ass up, and her tits were pressed against the cold floor shooting josts of extreme arousal from her nipples to her inflamed clit. The thought of her hand covered with the dirt from the floor as she jammed it into her pussy only made her feel dirtier and she started to masturbate like she was on a mission.\n\nAmy was thoroughly enjoying the show from the window as Beth once again went to town on herself. \"Not even 1 minute in and the slut is cumming again! After cumming for the past hour!\" Amy smugly thought to herself. There was Beth, on all fours right in front of her on the dirty garage floor, legs spread open, face and tits on the floor with her ass and soaking wet slit on display. The soles of her dirty bare feet turned upright and curling as if they were searching for Beth's impending orgasm. Beth's ass cheeks alone were putting on a fine show as they jiggled and bounced with every thrust and clench. Beth started to moan a little louder now and Amy could faintly hear her through the door she was eavesdropping behind. A moment later Beth started to rock back and forth harder and then came hard once again, her pussy opened the floodgates and released a small deluge of fluids that splattered all over the floor and Beths inner legs. Beth once again indulged her thirst to bring herself down lower and smeared her slimy fingers all on her exposed skin above her pussy and on her lower tummy.\n\nAs Beth was still panting heavily and more shame was setting in as she came down from another embarrassing orgasm she heard the washer cycle turn on. As much as she wanted to lay there in the fetal position she knew she wasn't done yet. If she screwed this up she would not be allowed to shower before school tomorrow or risk her shameless videos sent to her family and friends. She also realized that she wasn't sure if she had permission for the orgasm she had. But what was done was done and Beth resolved to make the rest of the video nasty in hopes of mercy in the case that she just broke a rule.\n\nBeth rose to her knees and faced the camera. She spread her legs as wide as she could and started to finger herself again. As she did that she brought her left tit to her mouth and started licking herself. She could taste the dried sweat and juices on herself and wanted to wretch, which only brought her to the brink of orgasm once again. Once she felt her hand was oozing with her fluids once again she brought her hand to her face and rubbed her own nastiness all over her face and hair again. She didn't look scared anymore as she looked at the camera, she looked like she was possessed by her out of control libido.\n\nAfter she finished this latest act of debasement she started to crawl some more, her hand never leaving her cunt. Around and around she went as she continuously moaned and whimpered. When she made the first lap it seemed as if she purposely crawled through the small puddle she left from her orgasm. This made it even nastier to Beth and she started to work her hand in and out of her snatch a little more. After a couple of laps she was practically leaving a trail of drips in her wake.\n\nAmy was covering her mouth on the other side of the door, she was laughing so much. Amy thought that Beth looked absolutely ridiculous as her naked body crawled along and pale curvature jiggled along with her. Amy thought of how Beth would look when doing something like this in front of people in the near future and she felt a little arousal between her legs as well. While she wasn't attracted to girls or into anything kinky, the thought of the power she had to humiliate the person she hates the most in such a personal, naked, and degrading way started to stir some emotions inside her. Her arousal started to motivate her to think of more extreme ways to humiliate her step-sister. The awakening of this part of Amy's brain would no doubt spell bad news for Beth in the future.\n\nAfter the selected time the washing machine clicked off and finished its cycle. While Beth could have stood up and finished her task immediately she didn't. She was too far gone with arousal to think clearly once again. By now she was imagining her sister filling the garage with the very cheerleaders that Beth hated as she went round and round. She imagined the garage door open as well so passers by could see her humiliate herself. The dark recesses of her brain imagined Beth being ordered to kiss Amy's bare feet while she masturbated herself to several orgasms in front of her enemies.\n\nThis brought a new low (and high!) in Beth's mind and she cried out with lust. She was close to the garage door at this point and she crawled up to it. Much to Amy's delight and confusion she watched as Beth layed on her back with her legs towards the door. She scooted her bare ass to the edge of the garage, spread her legs as wide as she could and put her bare feet against the door and kept pumping her twat with her hand while pinching her nipples with the other. It was as if she was pretending that the door was open and she was exposing herself to the world. As the soles of her feet took in the cold metal of the door it sent Beth over the edge. She was humping her ass up and down off the floor as she came violently and not all that quietly. She shot some more cum on the door in front of her as her toes curled against the foreign surface.\n\nAs Beth finally came down from another self humiliation she decided that she needed to finish tonight in a hurry. She quickly jumped to her feet, her unrestrained tits bouncing with her, which made Beth get reacquainted quickly to her vulnerable state. She shut off the video on her phone, switched the laundry to the dryer, turned it on and headed to the inside door. She looked down and could see patches of gray dust on her knees and tits. She moaned some more, this time in disgust. . She imagined her ass and back looked worse.\n\nShe crept back inside the house and started to gingerly pad towards the stares. Amy was back to her hiding place silently laughing at the pale naked bitch walking by her, at one point unknown to Beth she was no more than 2 feet away from the one person she needed to hide her secret life from the most. Amy could swear she could faintly smell Beth's pussy as she walked by.\n\nNow that Beth was no longer horny after this latest freakshow she was acutely aware of every barefoot step, every sway of her tits, and every jiggle in her wide ass. Now it was all humiliation again and she was scared and ashamed at what she had once again done to herself. As she and her magnificent breasts made their way up the stairs Beth was acutely aware that she held in her hands a very humiliating video that she was supposed to send to her blackmailer. She started to think clearly about the risks of not sending this to MistressK. She should have never made the stupid thing in the first place but she still was the only one who knew about it (so she thought). Maybe she would ignore her computer from now on and call her tormentor's bluff!\n\nAs Beth's naked body made it back to her room she looked at her computer and it had another message in the chat window.\n\nMistressK: Slut! Make sure you send me that video as soon as you are done. And since this is on your phone I will make it easy for you. Send it to this number. ###-##-####. And program that number into your phone, you will be receiving orders from it in the future and you will want to recognize it as soon as possible when it happens! Now I bet you are hesitating about sending this video. After all, it is just between you and your phone right now, right? Well consider this: If I don't have that video by the time I wake up tomorrow you can count on your family reading your kinky desires including those about your sister, and watching every nasty video I have of you naked and masturbating like an insatiable slut by the time you join them for breakfast. At school it will be much the same. I hope you understand. Now after you send that video, remember that you are not to wash yourself off at all before bed. This is who you are and you will sleep that way. Your permission to shower will be discussed after I have seen your video. I have already set your alarm to wake up tomorrow on your computer. We will talk about your night and the day ahead then. And remember, if you don't do as you are told I will do irreparable damage to your life as you know it! Goodnight slut!",
        "Beth started to cry a lot now. Her tears made her face even more of a mess. \"What have I done? What am I going to do? How could I have been so stupid? And why do I have the urge to touch myself some more?\" were all questions Beth was asking herself as she cried agonizingly over her bad situation.\n\nShe resigned to the fact that she was fucked if she complies, but really fucked if she doesn't. At least if she sent the video she had a chance at keeping her secret safe. At least she thought so at the time. So with shaking hands and eyes filled with tears she attached the video to the text and hit send. She collapsed in her bed while openly weeping. As she lay that hating herself she couldn't help but also noticed how much she smelled like sex. She rubbed her hands over her naked skin and felt grime and stickiness all over. She felt that familiar feeling between her legs again as she thought of the new rock bottom she just hit. Beth cried herself to sleep with her hand on her wet pussy.\n\n--\n\nSince Beth's last escapade took place so late there wasn't much chatter amongst Amy, Jenna, and Kim after it was done. Besides Amy, who wanted to see her cunt sister act like a ridiculous naked fool in person, the other girls had gone to bed after giving Beth her marching orders.\n\nAt 5:30 am Kim was awake reviewing the video that Beth sent. For starters she was happy to see that Beth had sent it in the first place. This meant that they not only still had Beth on the hook but she had also dug herself an even bigger hole. Kim had gotten a track phone with the hopes that Beth would be dumb enough to text her video to the number provided. Not that the girls didn't know Beth's number, but Beth didn't know that. Now she was foolish enough to give her blackmailer her phone number and there was a plausible explanation for MistressK to have it. Kim and the girls could now use this phone to give Beth orders during the day when she wasn't in her bedroom.\n\nKim was also amused that Beth did things beyond what was asked of her. Nobody told Beth to spread her legs against the garage door and cum, but she did it. And of course Amy had texted to the girls that Beth was standing naked against the door, looking out the window while masturbating before she even started to film. They obviously knew that Beth secretly got off on this stuff but this was the first time she moved these fantasies out of her bedroom or bathroom. Beth's reaction was magic to Kim's eyes. It was clear that deep down Beth enjoyed her ridiculous exhibition and she showed potential for willingly wanting some more no matter how much her rational mind protested.\n\nOf course, as always, Kim and the girls laughed at the lewd display that Beth made of herself. Crawling naked, her pale body on display and her tits swinging like pendulums, her big ass and thighs bouncing with every movement. The slimy, sweaty, just fucked look after a night of self-debasement, and her cumming twice by her own hand. Kim had thought about whether or not Beth was allowed those orgasms, as ridiculous as that sounds in real life, but she resolved to make a ruling that she wasn't. She would use that to her further advantage, but this morning would play a little different. When this plan moves forward, the girls will be playing good cop and bad cop on Beth, but as long as Kim was the only one communicating with Beth in this way she had to play both. And this morning was going to start with the good cop routine. Sort of.\n\nAt 6am Beth's computer started to wail very loudly with some kind of an alarm that sounded like an air-raid. Beth jumped out of bed like a rocket. She looked around confused until she got her bearings and realized that the alarm was coming from her computer that was also flashing red and white like a beacon. Beth didn't even have time to think of her nudity as she bolted over to the computer to try and shut it off. She sat her naked ass in her computer chair and it felt a little damp which made her cringe. She clicked on whatever she could but the alarm wouldn't stop. It was so loud and she was terrified that her sister or parents would wake up and start pounding on her door which wouldn't go well for her. She was naked and there was a fair share of remnants from last night's sexual deviance!\n\nAfter several frantic clicks a message popped up.\n\nMistressK: To shut the alarm off, spread your legs as wide as you can and start masturbating hard. Like your life depends on it. If i don't like the effort the alarm will get louder. Don't stop until I tell you and don't cum no matter how long you are at it slut!\n\nBeth was in a panic. She wasn't even awake to process anything. She wanted to puke at the thought of putting on another naked show to a stranger and she couldn't get her head around masturbating at the sound of an alarm at 6am. But mostly she panicked that the alarm would wake her house. So she opened her legs wide and started to finger herself. The alarm was still blaring. She worked 2 fingers inside of herself and started to hammer away at herself. The alarm was still going off and she couldn't help but notice that she had become wet already and had no problem getting her fingers into her snatch.\n\nWith the alarm still blaring she started to cry as she doubled her efforts. She put her long legs on the legs of the chair and kicked her feet out as wide as she could. She started to fondle her tits with one hand while her hips started to buck up and down like a mad woman fucking her other hand. Once again she looked absolutely absurd. After a few seconds of this the alarm shut off and the lights stopped flashing. Beth whimpered in relief and started to slow down her efforts a bit. As if on cue the alarm started blaring again. \"Shit\" said Beth as her breath ran ragged. She forgot about the order to keep going!\n\nOnce again she started humping and hammering herself. She moved her hand from her tits to her clit for a second then back to her tits out of fear of cumming. The alarm stopped again but this time Beth didn't dare stop. She kept flailing her naked body like a woman possessed. The whole scene would have been very odd and a bit surreal if Beth had a chance to take a step back and think about what she was doing. Beyond obeying this mistress which was obviously crazy in real life, Beth was masturbating like she was in a race. But it wasn't like her usual masturbation where she had read a story or watched a movie that made her horny and it was time to cum. She was masturbating naked like a lunatic, spread side like a full figured gymnast, and she was doing it because she was ordered to. That was it. Obviously she was incentivized by getting that alarm shut off but she was humiliating herself in front of a camera because she was told to.\n\nAlthough Beth's mind was scrambled, this fact did not escape her thoughts and it made her mad with arousal. Humiliate yourself. Naked. Masturbate on command. Because you were told. This hit her masochistic fantasies on the head and she was going to soon have a problem not cumming all over herself without permission. There were no stories to read. No pictures or movies to look at. Just Beth in a dark room, spread wide and masturbating naked because she was told. As the minutes wore on there was nothing but grunts, moans, and the loud squelching noise of her hand moving in and out of her drenched hole.\n\nIt was 6:05 am and Beth was wild with lust. She wanted to cum. Would do anything to cum. Because of how hard she had to go at herself to keep the alarm off she was rapidly approaching the point of no return. She didn't know what to do so she stuck her nipple in her mouth and bit down a little. This made her yelp and it distracted her a bit while she made a point to keep fingering herself at the same pace. Her pussy once again started leaking like a faucet, making her chair more than just damp. Kim watched in delight as the bitch who ruined her life was being driven crazy with lust because of an order she gave. After 5 more minutes Beth was openly pleading to cum. Her eyes were almost rolling in the back of her head. She was covered in sweat and her hair was soaked. Her sensitive and newly shaved twat couldn't take anymore. She was about to cum, consequences be damned, when she got a message on her screen with a beep.\n\nMistressK: STOP YOU SLUT! DON'T YOU DARE CUM!\n\nBeth stopped her manual stimulation and cried out in both relief and frustration. She still needed to cum. Bad. But she was still confused by this abrupt start of her day and was desperate for some normalcy and she feared breaking more rules. She started to close her legs and the computer beeped again.\n\nMistressK: Did I tell you to close your legs slut? Open them back up. I want to see that mini-cock you call a clit!\n\nBeth put her legs back on top of the chair arms in their lewd position and started to cry as her skin turned red from head to toe. Her body issues started to come crashing down on her as Kim pointed out the prominent features of her sex that she had always kept hidden by layers of clothes and a thick bush. Now she was reminded of her shame as she was spread wide and shaved. Once again she was sick with fear and embarrassment that someone was watching on the other end. \"This should have never happened,\" thought Beth. \"Now I am so fucked! What am I going to do?\".\n\nMistressK: Well slut. Good morning. I told you I had already set your alarm. I hope you enjoyed it. We will be doing all sorts of surprises like this going forward. Now, we have a lot to talk about. So first I want to tell you how much I enjoyed your video that you sent. You looked like a natural, crawling like a dog on the garage floor. Watching those tits swing back and forth never gets old. And the way that big ass stands out with every movement is sure to be a crowd pleaser. And the newly shaved look suits you. Good thing you will be keeping it. It looks like you had fun too! Didn't you slut?\n\nBeth once again wanted to die thinking about the fact that someone saw her naked and on display like that. She took her legs down off the arms of the chair so she could type but she kept them spread wide in hopes of keeping the alarm quiet.\n\nBeth: Noooo. I hated it. Please stop. I don't want to do this anymore. What if I get caught. I can't do that again!\n\nMistressK: ENOUGH SLUT! Lets get something straight. I own you. Of course part of you didn't like it and wanted to stop. No normal person wants to crawl naked in their garage while masturbating on video. Only a freak would do that. But that is the thing. We know you are a freak and more than a small part of you loves this. We have established that. So here is the deal. When I ask you if you enjoyed something I no longer want to hear from the Beth Johnson that is afraid to be seen baring so much as her calves and bare feet. I am getting tired of hearing how bad you hate this every step of the way. Any more of that will anger me. Let me show you something!\n\nAfter a second a window popped up showing Beth's video last night where she was crawling naked. Another window popped up of her spread open and masturbating wildly this morning after that dreaded alarm went off. And another window opened of what appeared to be a live feed of Beth naked at her computer right now. If she was supposed to be getting over how much she hated and feared people seeing her body or finding out about her secret masochistic tendencies, these videos had the exact opposite effect on her and she started to cry harder.\n\nBeth: Please. Ok. I will try harder. What do you want me to do?\n\nMistressK: First I want you to tell me about how you felt last night when you were performing for me slut! How did it feel prancing your naked ass around your house like an exhibitionist slut!\n\nBeth wanted to burst out again but she resolved to hold back her complaining. She felt ridiculous sitting there naked with her legs spread wide while trying to control her emotions for this stranger that was watching her. She took a deep breath and thought about last night. About the electric feeling through her body as her naked body left the privacy of her room or bathroom for the first time. After her masturbatory start to the morning she was leaking between her legs again.\n\nBeth: I felt scared but it excited me, mistress. I felt tingling all over my body as my bare feet walked on the cold floor. I was so horny I could hardly make it to the garage before I touched myself.\n\nMistressK: Did anything unplanned happen?\n\nBeth: Yes. I made it all the way down there and loaded the laundry before I realized I left my stupid phone upstairs! I had to walk through the house naked again to get it!\n\nMistressK: Did you think about not finishing your task? Were you scared?\n\nBeth: I was scared but I didn't think about finishing. I went back up and got it, and walked back through the house naked once more.\n\nMistressK: What were you thinking about when you were walking through the 2nd time?\n\nBeth: I was imagining myself being caught by my mother or sister. I was thinking about how humiliated I would be and what I would say, how they would react.\n\nMistressK: What was going through your mind about how your sister would react?\n\nBeth: She would be so cruel. She would laugh non stop at my body and tease me about walking around naked. She would probably try to take pictures of me to hold over my head.\n\nMistressK: Is that all you thought about her doing? Or did you imagine her doing worse to you since you get off on being humiliated you little slut?\n\nThe words cut into Beth's soul a little and only increased her heightened arousal.\n\nBeth: I imagined that after she laughed and made fun of me, she asked me what I was doing. I told her the whole truth because I wanted to look like the idiot I am in front of the person that hates me the most. And the funny thing is that she doesn't even realize that she should hate me even more after I got her and her friends caught!\n\nKim once again seethed on the other end after hearing Beth once again admit that she got the girls in trouble on purpose so she could masturbate in her bedroom! This time it was Kim who had to control her emotions in this situation.\n\nMistressK: So what did you think your sister would do to you next?\n\nBeth: After making fun of my sexual antics and poking fun at my breasts and butt, she led me to the garage by my hair to make me do my task in front of her. I pictured her opening the garage door so my stupid display was more public. It made me so horny I couldn't wait to rub my pussy.\n\nMistressK: Speaking of your pussy, how did it feel to rub your newly bald cunt?\n\nBeth: Oh my god it felt so good. I hate how ridiculous and exposed it makes me look but it is so sensitive I feel like a cool breeze could make me cum!\n\nMistressK: You mentioned your mom. How do you think she would react?\n\nBeth: She would be startled for sure and a little confused. She would certainly ask me what I was doing since it is so out of character for me to be seen walking around naked? The thing is I am not sure how much she would care. I think if I just fed her a line she would shrug after a minute and say something about whatever makes me happy, it's just us girls around the house or something like that. She doesn't seem to care about what I do unless it causes trouble with Amy or my step-dad. We don't want to upset the \"landlords\".\n\nMistressK: And what did you think about if you told her the truth about why you were prancing your bouncy ass and big ole tits around the house?\n\nBeth: Oh Mistress, in my darkest of fantasies I would picture her finding out why I was doing something like this and her making my humiliation worse with more nudity in order to teach me a lesson. She would be ashamed of her daughter, the freak messing up her new image. She can be so callous sometimes that is part of the fun. I am not sure what she would do. Either go to great lengths to hide what I was doing, or setting my every article of clothing on fire to teach me a lesson! No matter what! I thought of all of those things as I was crawling around the garage like a fool and I came hard! Then I finished my task and went to bed feeling all gross and nasty but satisfied.\n\nMistressK: How did it feel crawling around in the garage. Maybe it is something you will have to get used to slut! Especially since you liked it so much!\n\nBeth: Oh god! It felt so dirty. The garage floor was dusty and cold. My tits were swinging free. I imagined what my ass must look like from behind. I imagined a crowd watching me as I went along, with my pussy and asshole playing peek-a-boo as I crawled around. It made me so horny!\n\nBeth couldn't believe the words coming out of her mouth. If word of any of this she would be ruined and she wouldn't even have a clue as to what to do about it. But she couldn't help it. Beth had kept her sexual urges repressed in her room for so long, these new sexual experiences were bringing her to places she didn't dare dream of and she wasn't sure she wanted it to stop even though her rational thought should be telling her to run away fast! Beth was subconsciously thrusting her hips again as she remembered doing the same last night while standing naked at the garage window.\n\nMistressK: Ok slut, it is time for you to get ready for your day so we can play later. No go get your nice robe you made for yourself last night and get your skanky ass in the shower! I guess you have earned it after last night's performance. Unless you want to skip the shower today?\n\nBeth looked at her body in the mirror. Her hair was sticking out in several directions, her body was sticky, she was wet again on her inner thighs and her knees had a light coating of dust on them. Her ass and back had the same from the garage floor. And she stunk of sweat and cum. She imagined the humiliating delight of being made to go out in public in this disheveled state, but she was glad she could shower. That was the rub of her kinky side. It wasn't enough to think of ways to humiliate herself because she would never do them on her own if given a choice. She needed to be forced. And since she still had some rational thought left she decided to keep her mouth shut before she was required to do exactly that. \"maybe some other time\" thought the horny freak part of Beth's brain.\n\nBeth: No. Please. Thank you mistress. I can't go to school like this. I will shower.\n\nKim knew that Beth had forgotten about the handiwork she did to her skimpy robe last night and the promises she made in the heat of passion last night. While Kim wasn't going to make her go through it in the early stages of tormenting Beth, she was going to have some fun before she let that miserable bitch off the hook.\n\nBeth started to cry out loud again as she thought of what she had done to that robe last night. She couldn't resist begging for mercy any longer despite her soaking wet pussy. She just couldn't walk around her house in broad daylight with that tiny cut-up robe.\n\nBeth: Nooooooo. Please please please. I can't do that. It would be obvious I was up to something. It would be so horrible. Please. I will do what you want but don't let me walk around the house in that robe.\n\nMistressK: You promised you would. You even went through the show of cutting it up for us. It was YOUR idea slut. Now go get it on!",
        "Beth sat there with her legs wide open and her sobbing face in her hands. \"Why? Why is this happening to me?\" she thought. After a minute of feeling sorry for herself and no further response on her screen she stood up on shaky legs and padded her bare feet gingerly towards the door to pick up her robe. She picked it up and could smell her own arousal on the robe. She cringed as she remembered what she did with that robe. She put it on and looked in the mirror and covered her mouth with her hand and tears rolled down her face.\n\nThe robe was awful. It was almost worse than being naked. It came down even with her pussy and the chunks of fabric cut off the sides showed all of her hips and a lot of her ass. The inner half moons of her tits showed along with a sliver of her areola. Her cleavage was massive, almost none of her chest was covered. The pieces cut off the sides showed a ton of side boob. She turned around and half of her ass was hanging out. She just couldn't explain this if she was caught. She begged!\n\nBeth: Please. I beg you. Don't make me do it. Think of something horrible for me to do in private to amuse you, but don't make me do this. It will ruin everything for me. Please. I beg you. I will pay you!\n\nKim was laughing out loud on the other end. So were the other girls at this point now that they were awake and watching the show. After watching Beth work herself into a frenzy of tears to the point that snot was dripping out of her nose and down her face she pretended to relent and let the hysterical girl off the hook for now.\n\nMistressK: Wow slut. That is some robe you made there. I should make you wear it because you made a deal and said you would but I am willing to let you out of it. We will keep that robe for when you disobey me slut and maybe I will make you go to the grocery store wearing it!\n\nBeth whimpered at that thought. Her sloppy cunt was once again leaking down her thighs.\n\nBeth: Thank you. Anything. Just don't make me do it.\n\nMistressK: Ok slut here is the deal. You originally said you would wear that old robe instead of your big heavy robe. That was before you cut it up like a crazed slut. For now you will put that pussy stinking robe in your closet and you will get to wear your big frumpy robe. I am going to order you a replacement robe and have it shipped to you in the size that I think is appropriate. When it comes that will be what you wear to and from the shower until I say otherwise. Don't worry, I have your address Beth Johnson!\n\nThat made Beth nauseous at just how real this is. This person that has all sorts of humiliating videos and chats knows her real name and address!\n\nBeth: Yes Mistress. Thank you.\n\nMistressK: Don't thank me yet slut, we aren't done. We will also be adding one new rule and assigning you a task as well. And since I am in the giving mood I will allow you to do your favorite and make things worse for yourself but you get to choose which one. You don't have to do both. Do you understand slut?\n\nBeth: Yes Mistress. Thank you. I will obey.\n\nBeth was worried. Things were moving so fast and now they had moved way beyond her comfort zone. She was terrified that MistressK would make her debase herself in front of the school today.\n\nMistressK: Your new rule is that every night you have to spend 10 minutes downstairs naked. I don't care what you do, but you will do this and film it before bed every night.\n\nBeth started to physically shake. She had somehow shucked her robe off and was naked again, her tits heaving up and down as she nearly hyperventilated at the thought of being nude downstairs every day. She was going to get caught doing this and she knew it.\n\nMistressK: And now the task for the day. When you use the bathroom today at school, you will strip naked in the stall and remain naked until you are done peeing. And you WILL pee at school today! No telling me you didn't have to go today slut! Now pick which one you want to make worse, you little exhibitionist whore!\n\nBeth couldn't believe what she was hearing. First she had to be naked downstairs, now at school. Even in the bathroom this was still another major barrier, one that she never imagined going anywhere near. But after the robe she was afraid to complain. And she was still horny, so she didn't think about using any strategy about choosing which act she wanted to make worse. Had she been thinking, she would have chosen the task since it was a one time thing and not a recurring daily rule, but she chose....\n\nBeth: To make things worse for myself, may I be naked for 20 minutes every night and I have to masturbate to orgasm before I am allowed back in my room?\n\n\"God what is wrong with me?\" Beth thought. \"My life will be ruined by the weekend at this pace\"\n\nMistressK: Yes you may slut but with a catch. You will masturbate every time, but I will decide whether or not you will be allowed to cum, slut! You came without permission last night and you are definitely cumming in he shower. We will talk about this later but your orgasms belong to me now you horny freak! Now get in the shower. Check your computer before going downstairs. Beyond that, have a good day and I will check to see if you completed your task after school. See you then slut! And I mean all of you!\n\n--\n\nBeth walked to the shower on autopilot. She didn't even remember putting on her comfortable robe but clearly she had done it. Before she knew it she found herself in the shower with shaving cream over her pubic area. She hated that she had to shave but after what she is being put through today she didn't want to risk more humiliation because of some stubble. After she finished, Beth couldn't believe it but she was horny again. Between the humiliations she has been put through and the sensitivity of her newly shaved twat she couldn't keep her hands off herself. Just as well she thought. Might as well cum now so she won't be crazy horny all day at school. Just as she was about to start bucking her hips into overdrive she remembered her rule not to cum. Although she was in her bathroom and nobody would know, she was not a good liar and didn't want to make things worse. Plus she was strangely compelled to obey. \"Fuck\" she thought,\" now I can't even get release to take my mind off things today!\n\nAs she looked at her majestic pale curves she couldn't believe that she was going to be naked outside of this house today, and naked downstairs every day! Her nipples hardened in front of her eyes at the thought. \"So much for not being horny in school\" Beth sighed. She got out of the shower and checked her computer as she was asked to do. It was still odd to not have her clothes under her robe but after her recent ordeals she was happy to be covered. She was not happy to be incredibly horny and about to be among her family. She always kept that in check. Her screen had an open chat window:\n\nMistressK: Slut. Today you will text me a sort of journal throughout your day. Since this whole thing started as you making up fantasies for yourself I will indulge you. You will think about your day ahead of you and observe things in your day that you see or that happen to you. You will use these events and interactions to create imaginary scenarios for yourself that are humiliating. Don't hold back. Let it rip. We both know by now that the deeper you dig the harder you cum. Relax, none of these things will really happen, it is just for play so have fun with it and see if you can impress me!We will have fun discussing them tonight. But here is the deal. I expect at least one per hour. If my text feed is blank you will be giving blowjobs at the bus station tonight! And I expect them to be sufficiently humiliating. I know what you are about and so do you, so if you come back with bland ideas like \"I wore a pair of shorts and they made fun of my pale legs\", you will be giving blowjobs at the bus station tonight!. And you will text me immediately when the ideas pop into your head. I don't care if you text shorthand, you will be explaining them in detail as you sit naked with your legs spread at your computer tonight, slut! Have a good day!\n\nBeth was breathing heavily as she dressed herself in her usual jeans, tshirt and hoodie and trotted downstairs. It was getting warm out but she hung on to her hoodie ensemble as long as she could every year. She actually looked forward to coming up with these scenarios. This is what she started to get off on in the first place when she discovered these online forums. And the thought of giving blowjobs anywhere, let alone the bus station, made her ill. Yet sadly she could picture herself doing it and her pussy twitched as ner nipples perked up a little.\n\nTrue to her rules she was barefoot and discreetly carried her socks. The cold hard surface on her bare feet did not feel one ounce more comfortable today than yesterday. She ate breakfast in a blur without paying much attention to what anyone was saying at the table. She quickly slipped on her shoes and socks and out the door she went.\n\nAs she drove to school she couldn't escape the feeling of her underwear rubbing directly on her pussy now that she had no more pubic hair to serve as a protective barrier. Although she had been shaved since last night she hadn't worn clothes for several hours until now and this new sensation both excited and frightened her. She had usually been able to block out her private sexual life during the day, but the constant rubbing on her sensitive lips was going to make that more of a challenge now.\n\nBeth started to go through her day like normal, talking with friends before class and crossing paths with Amy and Jenna with nothing but subtly snarky looks occasionally exchanged between them. Once she got going, Beth started to really enjoy her morning. The feeling of finally being alive and living out some of her repressed sexual urges had not gone away and she still felt the glow she had been feeling. But now she was horny. Between her day abruptly starting with forced masturbation, being denied an orgasm that she craved, the increased sensitivity between her legs, and being ordered to come up with sexually humiliating ideas all day, she was no longer going to be able to completely repress her secret kinky side while outside of her bedroom. And she thought of her tasks today, then started to type her first text to MistressK....\n\n--\n\nAnd on the day went. Beth was a little more distracted than usual but she was highly intelligent and was able to overcome the sexual tension that simmered all day. She was rather enjoying the series of texts she was sending off to her \"mistress\". It was as if she took it as a challenge to excel at dreaming up an alternate version of her day that revolved around humiliation and she was intent on impressing MistressK! There would be no bus station blowjobs in her future tonight, for she was going above and beyond her requirement here in her opinion.\n\nAmy and Jenna had eyes on Beth whenever they could and they only barely tell that there was a slight change in Beth's mindset. And they could only tell because they were looking for it. Of course this was a disappointment to the girls who were hoping for tears of humiliation from Beth all day. But what infuriated them was the smile on her face every time she texted her \"journal entries\" to Kim. When they gathered at lunch they were less than pleased.\n\n\"What the fuck?\" Jenna said. \"I can tell she is a bit distracted, but how can that sick cunt still be smiling after what she was asked to do?\"\n\n\"The fuck if I know\" said Amy. \"It feels like we are trying to just get her off again! I want to punch her in the fucking face!\"\n\n\"I know. I want to text her videos to everyone in class and watch her squirm!\" said Jenna.\n\n\"Look. We need to keep our eyes on the prize. Kim's plan is brilliant and that bitch is going to pay dearly. But she better fuck up today so we can ratchet things up to make her uncomfortable or I am going to lose it!\" said Amy.\n\n\"She still has to get naked in the bathroom today, so we will see how that goes. But I want to follow her in there and steal her clothes after she takes them off. Then we will see if that slut is smiling into her phone as she types!\" said Jenna.\n\n\"I am just as frustrated as you, but in due time my dear, in due time!\" joked Amy as they both laughed.\n\n--\n\nThe day went on and soon enough the inevitable happened; Beth had to go pee. She was smart enough to wait until during a class instead of lunch time so most people would be in the classrooms. She would have no problem getting a hall pass since it was near the end of senior year, Beth was a good student, and the teachers had grown tired of the bitchy attitude that Beth portrayed from time to time.\n\nWhen Beth could no longer hold it, she raised her hand in her afternoon Art class. The teacher, Miss Bliss, rolled her eyes at Beth's hand being raised. Beth had always been a pain in her ass. Beth was a math and science girl and thought of Art as a waste of time. There was one year required to graduate and she put it off as long as she could. She would question every project that Miss Bliss assigned as if it were beneath her and Beth shouldn't be bothered to have to participate in such nonsense. Miss Bliss was a recent college grad, not much older than the seniors that she was teaching. Plus she was a former cheerleader and always a cheerleader at heart. And she has seen the way Beth looked down at the cheerleaders with disgust.....\n\n\"What is the matter now, Beth?\" sighed Miss Bliss.\n\n\"Um, nothing.. may I go to the bathroom?\" said Beth.\n\nMiss Bliss was taken aback. Beth was never this polite about anything. Any time she raised her hand it was always a complaint. Beth seemed off a little, like she was nervous.\n\n\"Um, sure Beth. Is everything ok?\" asked the teacher, partially out of surprise, partially feigning concern.\n\n\"Yes, Jesus, it's the bathroom and none of your business!\" snapped Beth.\n\nMiss Bliss glared back at Beth. \"There's the snotty bitch we all know\" she thought.\n\n\"Sure, here, take the pass, whatever\" said Miss Bliss as she made out a pass and pushed it to the end of the desk. \"The less time she is in my class between now and the end of the year the better\" she thought to herself. In her young teaching career, Beth was by far the one student Miss Bliss couldn't stand.\n\nBeth got up and walked to the front of the class to get the hall pass off of the teacher's desk. They both seemed to mutter unintelligible unpleasantries at each other before Beth abruptly left the room. \"Whatever\" thought Beth. \"Bitch's class is a waste of time anyway.\" Jenna was in this class and watched with daggers as Beth nervously walked across the room. She wished she could follow the bitch into the bathroom and take her clothes the minute she took them off, but that would have to wait for another day. She was curious if the horny sick cunt was actually going to go through with it.\n\nBeth had just sent another text to MistressK before her back and forth with Miss Bliss, but this time she wasn't smirking at her phone. She was nervous now. It was time for her task. Although she had planned it to minimize her risk, she still couldn't believe that she was going to do this. She thought about not going through with it, but she realized that the time to walk away from this nonsensical role play without being completely humiliated was long gone. MistressK had her and she had to try and make her happy. As much as she hated the thought of someone seeing her naked body no matter how many times she had been on camera in her room by now, it was still better than everyone seeing it, she reasoned.\n\nBeth's class was on the 3rd floor of the building and was where the art and music classes were. With budget cuts to electives it wasn't a full floor. There was a floor above that was even less occupied. She wasn't sure exactly what went on up there but it was mostly storage.\n\nBeth made her way down the hall to the stairway. Her body was tingling with nerves and arousal. She had been aroused off and on all day which was a first for her. She always kept her horny freak under wraps at school but not today. She started the day masturbating and hadn't been allowed to cum. Thinking of putting herself through different humiliating predicaments all day as she was ordered had made her arousal constantly spike throughout the day. Since it didn't take much to make her pussy wet and she no longer had her thick bush to absorb her leakage she had been dealing with more than a little dampness in her panties all day. And the feeling wasn't pleasant. She felt gross, which only heightened her arousal.\n\nShe got to the top floor and looked both ways down the hall. Deserted just as she thought, she made her way to the bathroom. As she made her way in she was regretting her choice. Although it didn't get used that much, it looked like it didn't get cleaned all that much either. Since it was the girls room it wasn't that bad, but it still smelled like musty piss mixed with cleaning products and the floor didn't look the cleanest.\n\nBeth was near hyperventilation as she entered the stall. First off she tried to avoid peeing in public if she could. With how skeeved out Beth was about her bare feet touching any kind of surface, you can imagine how she felt about sitting her bare ass where others had. She couldn't believe she had to get naked in here while she peed in this disgusting place. She was about to not go through with it and say fuck it. Then she pictured those open windows on her computer that showed her naked body lewdly on display while she constantly masturbated and thought better of pissing off her blackmailer.\n\nShe closed the stall door with her hands trembling and got out her phone. She was almost sick with fear but nearly on fire with arousal. She felt like she was on fire between her legs. As much as she hated and feared each humiliation she has been put through she couldn't believe that she could experience sexual highs that were any more instense than what she has already done, but here she was at the edge of another cliff and she felt like someone was holding a lighter underneath her pussy. She was going to have another problem. After sexually yo-yoing all day on top of what she was about to do, she was afraid she was going to need to cum and she didn't know what to do about it.\n\nFirst, she didn't have \"permission\". MistressK had forbidden any cumming without her saying so. Although she was by herself and no one would possibly know, she was worried about what would happen if she was caught. She wasn't a good liar and by now she didn't trust what would come out of her mouth when she was horny. With the way she had been going the past 2 days she was likely to admit to orgasms she didn't even have to get in more trouble if she was horny enough!\n\nHer arousal gave her enough courage to start doing what she had to do. She lifted her hoodie over her head and hung it over the stall door. She did the same with her t-shirt. Before she knew it she was staring down at her bra in shock. She couldn't believe she was going through with it. She unhooked her bra and shrugged it off, letting her massive globes swing free. The cold air hit her nipples like a tidal wave and she barely suppressed an audible moan. She wanted to cry but managed to move forward. She unbuttoned her jeans and pulled them down to her ankles. With a deep breath and no hesitation for fear she wouldn't do it, she shoved her panties down her legs to join her jeans at her ankles. She almost cried out in despair when she saw thick strands of fluid follow her panties from her by now soaking pussy. That was it. She was going to have to cum.",
        "She sat her big naked ass down on the public toilet seat. She moaned in disgust as she imagined it being filthy even though it wasn't. She started to pee from the nerves and quickly got her phone. She wasn't sure if she was supposed to take pictures of her just naked or peeing too and she wasn't going to chance it. She videoed it which only upped her shame and arousal. She made sure there was not any doubt that she was naked so and she double checked that the video showed her bare tits and shaved twat. The video showed the glistening piss flowing out of her pussy and she wanted to gag, but what was she going to do at this point. She hit send without thinking.\n\nJenna had alerted the girls that Beth had left for the bathroom so they were anxiously awaiting Beth's text. Jenna had also set up the messaging app on the track phone so that the girls could see Beth and the MistressK phone's chat in real time. Their phones buzzed and it was all they could do in their respective classes. Jenna especially. She was in Beth's current class and she could tell how much the teacher and student hated each other. What fun it would be to show Miss Bliss what her most hated student was doing with that bathroom pass she just gave her.\n\nBeth's phone buzzed right back.\n\nMistressK: Very good you horny slut. But I want to see that big ass of yours too! Picture is fine.\n\nBeth was flustered. She didn't want to be naked in a public bathroom any longer than she had to and she wasn't sure how she was going to take a clear shot in the stall. And she was very horny. She said \"fuck it\" and opened the door and pointed her thick pale ass at the mirror. She even bent over so it stuck out more, moaning as gravity pulled her tits away from her body in a swaying motion. She took the pic as she whined at the thought of willingly exposing her large pale ass to someone again. Again she hit send.\n\nThe girls were watching their phones discreetly so they wouldn't get caught. At first they just wanted to laugh at the sight of Beth bent over with her fat ass sticking out and her tits hanging free. Her shiny lips were peeking through her legs, wet from arousal and piss. Then they all respectively started to smirk at the picture. Whether Beth realized it or not would be the topic of a later debate, but the picture revealed an infraction that she committed that would give the girls an excuse to fuck with her some more. Not that they needed one, but they were committed to playing Kim's game to get the evil justice they were after.\n\nBeth still had a problem. She needed to cum. She was on fire after another level of humiliation was thrust upon her. She was horny out of her mind and needed release. And there was no way she could go back to class in this state. She might try and fuck the door knobs in her class to get off! She did the only thing that came to mind. Something that she never thought she would ever find herself in the position to do in real life, but one that was a big part of her humiliating fantasies.\n\nThe mistress phone buzzed....\n\nBeth: May I cum please mistress?\n\nThere it was. She was begging for permission to cum, and she was doing it in a public place. Her own school nonetheless. She had fantasized forever about being made to do this, and all of the humiliating things she would do to herself in a horny frenzy. At this moment she wasn't sure about what she WOULDN'T do in order to cum. She was on fire. She hadn't even closed the door as she was staring at her heaving naked body in the mirror. Her pussy was making her thighs wet again, but for the first time in public. After a few minutes of silence, she begged again.\n\nBeth: Please mistress, may I cum? I did what you asked and I am ready to explode. I can't go back to class like this. Please. Anyway you wish, mistress.\n\nIf she could have yelled into the phone she would have. She was carefully caressing her lips at this point, afraid she would set herself over the edge. Her hips slowly gyrated as she stared at her naked reflection as if in a trance. This was dangerous. Her inner freak had taken over in a public place. This was the downfall of so many victims in the stories she had read by her favorite authors and here she was, begging to cum and practically daring a stranger to humiliate her more just to do it.\n\nBeth: Please. I don't have a lot of time. I need to get back.\n\nThe girls were once again in shock with various evil thoughts running through their minds. They couldn't believe the position Beth was willing to put herself in just to have an orgasm. Hidden well, but naked in her own school and she didn't care. The girls had many bad ideas for how Beth could achieve her goal but they knew Kim wouldn't have it this soon. So they waited to see what would happen.\n\nMistressK: Well aren't we the horny fat naked slut.\n\nThe insult made Beth cry as she moved closer to the edge.\n\nMistressK: Very well you twisted whore, but we will make this a little interesting. I will even let you cover yourself up a little more than you are now since I am such a nice person, aren't I slut?\n\nBeth could barely breathe at this point without cumming.\n\nBeth: Yes mistress. The nicest. Please mistress may this slut cum?\n\nMistressK: First put your panties back on and pull them up. You may cum, but you must do so by taking your panties which are surely a bit wet already and rubbing them into your slutty cunt. Then by all means you may cum. Once you cum in your school toilet like the exhibitionist skank that you are, I want you to pull the front of your soaked underwear up into your nasty snatch, and pull the back of them as far as you can into your ass crack like a thong. You will leave them like this for the rest of the day until you strip them off with the rest of your clothes on your little stripping towel in your room. I will be nice for now and let you wash your hands, but nothing else. Whatever sodden mess you create between your legs and on your thighs you can live with for the rest of the day. It is almost over anyway. Have a nice cum you stupid cunt!\n\nBeth grabbed her panties from around her ankles and yanked them up her wide hips without a thought. She needed to cum and get back to class. She mashed her damp panties against her pussy and started to go to town. She rubbed them against her throbbing clit and tried to jam her other hand into her pussy through the soiled garment. She looked at herself in the mirror because she carelessly left the door open. She really had no self control when she got this way. She saw the slut before her, tits flopping about, her large red nipples were on fire and felt like they were the size of broom stocks. Her hand kept attacking her clit through her panties and she took her other hand and started to massage her tits, getting some of her fluids on them. She started working her nipples and her clit and before she knew it she was cumming as hard as she had ever cum before, her eyes rolled in the back of her head.\n\nWhen she came down she panicked. She had to get back to class. After a second she realized a new problem; she was a mess. She was sweaty all over, her panties were saturated, and her thighs were covered with a thick sheen of her cum. Her hands were a mess and she could smell herself. How was she going to deal with her classmates and a teacher who didn't like her in this state? She stifled her tears and stood up to walk to the bathroom sink. She was lucky that this was an abandoned floor, because she was taking tiny steps due to the fact that her jeans were still around her ankles, but she was fully exposed otherwise. The cool air against her soaked filthy twat had her moaning and begging her body not to get horny again. She needed to get through the day and get home.\n\nShe thoroughly washed her hands to get her scent off of them. That was a good start. She couldn't start dressing with pussy juice all over them. Once they were dry she thought about what she had to do, closed her eyes in shame for a second, then yanked her nearly dripping panties into her hot moist pussy. It felt absolutely gross and she almost fainted at the sight of her full red fat lips surrounding the barely visible piece of cloth that was now yanked between them and putting pressure on the raw nerve endings in her clit. Then she yanked the back up her back and between her ass cheeks until they nearly disappeared. She took her pictures quickly to get moving and paused in mortification at the equally horrible sight from behind. She never would consider wearing a thong but now it looked like she had one on. Thongs did girls with her curves no favors in her opinion and she hated her pale cakes staring at the mirror.\n\nShe hit send without a thought and put on the rest of her clothes. She felt dirty all over from what she did, and the sweaty condition her body was still in. She felt so nasty about the messy wet feeling in her crotch she felt sick. She blotted her face dry with paper towels and headed back. Only now each step was extremely uncomfortable. The self wedge felt awful and she had never experienced the feeling of her jeans rubbing against her bare cheeks before. It was not pleasant for her. She was worried her dampness would show through her jeans even though it was mostly dry on her legs by now. And her arousal was still humming hard. The camel toe wedgie felt disgusting but also was rubbing against her clit as she walked. She was worried that if she was any more aroused she would cum just by walking!\n\nShe got outside the classroom door, paused and took a breath, then entered the class. Miss Bliss rolled her eyes at the return of her least favorite student but Beth caught her attention. Beth had a strange look on her face and her face was sweaty and flushed.\n\n\"er, um.. is everything ok Beth?\" said the teacher.\n\n\"I'm fine,\" said Beth, softly.\n\n\"Strange\" thought Miss Bliss. \"What happened to the air of confidence that usually accompanied the pain in the ass before her. And why was she sweating? Come to think of it, she was gone for a while. And she is walking very deliberately.\"\n\nThe teacher was looking at Beth and Beth could tell. Normally she would tell this useless teacher to mind her own business. But now she wanted to crawl into a hole. She was still in disbelief that she had a mind blowing orgasm in school, and she felt gross between her legs. The fabric was tormenting her clit, and her outer lips that were left exposed by pulling her panties into her pussy were soaked and occasionally touching against her jeans and she did not enjoy the feeling. She quickly sat down and her bare cheeks against her ass cheeks caused her to yelp a little which further caught the teacher's attention.\n\nMiss Bliss decided against a further line of questioning, she wouldn't get anywhere anyway with Beth and she didn't enjoy talking to her. As she looked around the room at her students at work on some mindless end of the year project she caught Jenna staring at Beth with a big smile on her face.\n\n\"Huh\" she thought, \"what is this about now?\"\n\nJenna knew what Beth had done and had seen all of the videos so she expected to see her hated enemy knocked down a peg or two from her earlier smirky demeanor. This is a little taste of what she was looking for. Finally that cunt Beth was feeling some shame outside of her bedroom and Jenna couldn't get enough. She looked at Miss Bliss who was looking at her. Jenna gave a knowing look back at her. Jenna liked art class and got along well with Miss Bliss. Also, with Jenna a current cheerleader and Miss Bliss a proud cheerleader alumni they felt like they shared some sort of bond. Miss Bliss was more curious than ever at the peculiar events going on in her classroom and she hoped to find out more at some point.\n\nMeanwhile, time couldn't move fast enough. She was uncomfortable and terrified that someone could smell her arousal. She couldn't tell if she could smell herself or if it was permanently in her nose at this point. So far she didn't see any damp spots on her jeans. Minutes later the bell rang. Beth jumped up immediately and started to walk out of this dreaded room. She felt like prying eyes were on her and in this case she was right. Jenna was watching her every move and Miss Bliss was watching them both.\n\nThe walk down the hall was tough and Beth felt like people were crowding her more than normal. They weren't but she was paranoid and vulnerable after her first orgasm outside of the privacy of her home. But as she walked her yanked up panties were sawing away at her throbbing clit and she was getting worked up again. Her already sensitive pussy seemed to be twice as sensitive without the protection of pubic hair. Her panties were absolutely soaked.\n\nHer last period was a study hall which meant nothing so close to the end of the year. By the time she sat down she was pretty horny again. Not quite on the edge, but she was heating up. There was no way she could cum in here for so many reasons so she was just going to have to make it through. Her horniness starting to take her dirty mind elsewhere which passed the time but didn't help the warmth and wetness between her legs. She figured she had to make one more \"journal entry\" to MistressK to be safe. She looked around the room for a bit and let her kinky imagination explore the humiliation potential around her. She got an idea and started typing.\n\nFinally the bell rang and her day had ended. It had actually been pretty fun for Beth until she had to take her clothes off to pee. From there on it was tough but she made it to her car in one piece. She typed off one more naughty scenario to MistressK for good measure. She was really enjoying this part. She really got off on how cruel her imagination could be to her. She had really thought up some embarrassing shit for her fantasies, and she started to see that a change of scenery and the requirement from MistressK to make up some really humiliating situations had the potential to bring her masochistic depravity to new depths. This scared her now doubt, but she was also a little excited at the challenge.\n\nShe got home and dashed inside, kicked her shoes off, and ran upstairs. The wedgied panties were relentless on her clit, and the risk of public humiliation this afternoon had her close to the edge again despite cumming in school. She got in her room and stood on her towel. She pulled off her socks, hoodie, t-shirt and jeans. Her normal pathetic whining about taking her clothes off were gone this time. She needed to get the nasty panties out of her pussy and ass and to do that she needed to get naked. She stood there in her bra and panties for a second and looked in the mirror. On top of the embarrassment she felt about her pale curves, the panties pulled up high looked ridiculous. They were dark blue and soaked, with her prominent red lips blatantly sticking out around the front part. She turned around and saw that her wedgied back side was almost all showing. She started to picture herself in a tight thong walking to the pool or beach, with groups of people behind her seeing her big ass full of jiggle and joking about why someone like her would wear a thong in public.\n\nShe whined a little as she took off her bra, her tits bouncing free felt pretty good for a change since she usually hated to see her D-cups dance around with her movement. She was extremely hot now and she started to really fondle her tits. She was moaning and not super quiet about it. She rubbed her nipples and felt like a fire was between her legs. Her nipples were rock hard and poking out hard and it felt amazing. Her pussy looked like it could drip soon. She pulled her soiled panties out from her ass and pussy and down to the floor, trails of goo following until some strands landed lightly along her legs.\n\nShe sighed as she sat there and basked there in the relief of being home without incident and out of those nasty panties. After a few moments of being stress free which was a rarity these days for Beth she remembered that she would likely be not wearing anything for most of the night until school and her nudity quickly went from relief back to her normal embarrassing anxieties. She cursed her stupidity once more for getting herself and in this mess then walked to her computer. She had wanted to shower right away to wash the sweat and arousal from her body but she figured that if was put through some more paces by MistressK in the immediate future she would likely be in an even more disheveled state and have to suspiciously take another shower or run the risk of sitting at dinner with her family a sweaty horny mess.\n\nShe padded her bare feet across the room with a few sticky footsteps along the way. She would have to clean her floor every day at this rate. She was still horny but she had backed away from the edge that she was at when she got home. Her disgust over her filthy state was ever present and she had not become any more comfortable with being naked in her room. The only thing she had gotten used to is the fact that her predicament wasn't going away so there was no use in constantly protesting about her nudity because it was going to cause her more trouble sooner than later. She resolved to try and choose her battles more wisely when it came to pissing off her blackmailer.\n\nHer computer screen was always on and videoing now and it showed now correspondence from MistressK. Neither did her phone. So she sat down on her computer chair to do the little school work she had for the night at this stage in her senior year. She still winced at her bare cheeks squishing down on the chair and she felt even dirtier when she thought of the onslaught of bodily fluids that have been absorbed in that chair. With a less than steady hand she started to navigate her computer in order to do her work.\n\nEven though Beth was less than slowly devolving into living out her self destructive fantasies she was still highly intelligent when it came to most other things including her studies. So she was able to still do what she needed to do at a high level. She even started to enjoy it a little despite her aversion to her undressed plight. This too was part of her fantasies: to be made to do casual things while she was completely naked. The difference of course was that when she was getting herself off her mind had her doing things like this in front of people she knew or lived with, at home or in school or college. And part of her humiliation was that she had to pretend that she was an exhibitionist who enjoyed being naked as often as she could and was doing this on her own.\n\nShe started to get a smile on her face as she plugged away at her homework with her mind remarkably able to think about humiliating herself while she still turned out top shelf homework. The double edge sword of her remarkable intelligence perhaps; able to be smarter than her peers and more imaginative and cruel to herself when thinking of erotic humilations than anyone she has encountered in her online life including her new \"mistress\".\n\nShe stopped for a second to imagine herself doing her homework naked in front of her roommate in her dorm room and lightly touched her bald pussy for a second which was still warm and soaking. She stopped and went back to her work. Beth wanted to get it out of the way and she hadn't been given permission to cum. Yes, she had also resolved to not push the envelope on this one even though it was silly but she was afraid of getting caught. But deep down, orgasm denial was also one of her favorite fantasies and the humiliating possibilities it brought to the table made her want to adhere to this rule despite its absurdity. Yes, despite her biggest fear of having her kinky desires found out by someone, Beth was starting to reluctantly enjoy herself a little and she couldn't deny that the height of her arousal and the intensity of the orgasms were increasing the more she was \"forced\" to risk exposure and humiliation. Beth was starting to become a willing participant in her torment and a small part of her was excited about that."
    ],
    "authorname": "Drazenpet23",
    "tags": [
        "humiliation",
        "public",
        "school",
        "rules",
        "orgasm denial",
        "forced exhibitionist",
        "forced nudity"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/beths-disgrace-pt-03"
}