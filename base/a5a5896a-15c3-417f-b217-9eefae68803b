{
    "title": "Encounters with Evil Pt. 09",
    "pages": [
        "\u00a9Copyright jvaughn, 2013, 2014. All rights reserved. Copyright violators will be prosecuted to the fullest extent of the law. \n\n*\n\nGuy stared in wonder at Mel's sleeping face. He looked peaceful and angelic. My angel ... so perfect, he thought. The scent of their coupling hung heavy over Mel, and it smelled right. There was no hint of blood, no lingering scent of fear. Did I really have sex with him without hurting him? he wondered.\n\nBut he remembered the scream. At the moment of entry, Mel had cried out, a shattering, piercing scream of pain. Guy shuddered at the memory. He had felt Mel's pain too at that moment, but he'd been out of his mind with delirium. He could not have stopped for the end of the world. Yes, he'd hurt Mel, but he also remembered the wonderful ecstasy they had shared. He'd felt Mel's pleasure, and it had been exquisite.\n\nMel's long eyelashes fluttered and his lovely eyes eased open. He smiled at Guy and reached a hand up to stroke his cheek.\n\nGuy drank deeply of Mel's pale eyes. \"Are you alright Angel? Did I hurt you too much?\"\n\n\"I'm good. You didn't hurt me.\" Mel shifted. \"I'm gooey though, and I've probably leaked all over your couch.\"\n\nGuy chuckled. \"We'll have to clean that up before Consuela finds it.\"\n\nMel's face reddened. \"We most certainly will!\" He sat up then, and Guy felt an odd sensation ghosting over his anus. That's not my sensation, it's his, he realized in wonder. It didn't seem like pain, but...\n\n\"Are you sure you're okay?\" Guy asked, peering at Mel with concern.\n\n\"I feel great!\" Mel said, bouncing a few times as if to test that out. Guy felt that odd sensation again.\n\n\"I just feel a bit stretched,\" Mel said, \"but it's good.\" He looked at Guy closely, his brow furrowed. \"But how are you? I can't believe you made love to me like that in your condition. Did we exacerbate the wound?\"\n\n\"No, I don't think so,\" Guy said in surprise. He sat up and slowly stretched both arms out in front of him. He felt a twinge in his shoulder.\n\n\"Oh!\" Mel cried. He stretched out his own arms and his eyes got round. \"Do that again,\" he demanded.\n\nGuy obliged, purposefully stretching and shifting his injured shoulder so that he felt the pain, all the while watching Mel with trepidation. It seemed like the telepathy might go both ways.\n\n\"That's you! That's what you're feeling. How can I feel what you're feeling?\" Mel cried.\n\nGuy caught the undercurrent of Mel's emotions\u2014shock but not distress.\n\n\"I don't know. We're bonded now, I guess. We were already to a certain extent, at least on my part, because when you were taken by Valjevo, I felt some of what you felt. The connection seems much stronger now.\"\n\n\"But how does that work? I mean, I guess I get that you're part vampire and have these superpowers, but I'm not part vampire. How come I can feel you?\"\n\n\"You forget how I got my superpowers,\" Guy said softly, a dark guilt starting to gather in his core.\n\n\"You were raped,\" Mel said, mulling it over. \"You said it was something in the semen...\" His eyes widened. \"Does that mean I'm part-vampire now too?\"\n\nGuy felt Mel's horror and his guilt erupted into full fledged agony. He closed his eyes and swallowed.\n\n\"Oh, no, Guy!\" Mel cried, shifting around to pull him into a tight hug. Guy felt Mel's distress, but it had changed. Mel wasn't upset about himself, he was upset about Guy. \"You can't feel bad. It's not your fault. You didn't know.\"\n\n\"I should have known,\" Guy growled. \"I should have thought of this beforehand.\" Evil blackness swamped Guy. He had hurt his angel again and in a vast and irreparable way.\n\nMel let out a whimper and Guy's own anguish ratcheted up as he felt another wave of distress role off of his angel. \"Guy, please don't,\" Mel begged. \"Please...\" His breath hitched and he hugged Guy closer.\n\nWhen the paradox of the situation hit Guy, he tried to focus on his own breathing and calm down, for Mel's sake. He realized he was pouring all his own emotions right back into Mel which distressed Mel and further exacerbated his own darkness in an horribly destructive cycle. He tried to clear his head and focus on a tropical beach. Warm sand, cool breeze, the calming crash of the waves upon the shore...\n\n\"Better,\" Mel mumbled, his fingers starting to trace gently up and down Guy's back. Guy felt a wave of desire wash over Mel and a fraction of a second later he caught the scent of his pheromones. He hadn't been thinking about sex at all\u2014amazingly since that had been the only thing on his mind for weeks\u2014but now, suddenly, he was awash with lust.\n\nHe grabbed Mel's hair and pulled his head gently but firmly back so he could reach those kiss-swollen lips. Mashing his lips onto Mel's, he reveled in their softness and the wonderful sensation of connectedness he felt. He felt his cock swelling as heat and desire built in his core. He felt Mel's answering lust, and his angel squirmed around so he was on top of Guy, pushing him back against the arm of the couch as he responded to his kiss eagerly.\n\nGuy groaned and they both began to hump into each other. Guy had pulled his sweats back up, but Mel was still completely naked, and their cocks rubbed together through the soft fabric. As Guy felt himself start to spin out of control, he caught a whiff of his own body odor and it pulled him back from the brink. He was rank.\n\nMel too had caught the scent, he could tell. His reaction was flash of distaste quickly overpowered by the lust he was feeling.\n\nGuy pulled out of the kiss. \"Wait. Wait,\" he said, stilling his own hips, his hands on Mel's butt willing him to do the same. \"I need a shower, and we need to talk about this.\"\n\nHe felt Mel's wave of disappointment and almost relented. This is going to take some getting used to.\n\n\"Do you realize what's happening?\" he asked. \"We're feeding off each other.\"\n\n\"Our emotions, you mean?\" Mel said, nodding. \"Your emotional pain distressed me and then that distressed you further, and so on. That was really intense. But the same thing happened with our lust.\" His lips curled up in a sexy smile. \"When you want me, I want you even more.\"\n\n\"Yeah, I think we're going to have to be careful.\" The thought that maybe it was too much for Mel, maybe he wouldn't be able to stand being around Guy, entered his head and pain sliced through his heart like a knife.\n\nMel's eyes widened. \"Whatever you're thinking, don't,\" he said.\n\nGuy tried to clamp down hard on his emotions. He was used to keeping them bottled up inside him, not showing the outside world what he was feeling, but he still felt them. Now he had to be careful not even to feel. He swallowed and focused on calming himself. Then, with extreme care not let himself think too much about the ramifications of what he was saying, he said, \"If you don't want to be with me because of this, I'll understand.\"\n\nHe felt Mel's distress at his words and cringed inwardly. God, I don't seem to be able to keep from hurting him.\n\n\"That's the last thing I want,\" Mel said. \"I don't want to leave. I won't leave you. You're stuck with me.\" As the pain in Guy's chest eased, Mel smiled at him gently. \"We can work through this, learn how to control our emotions, how to help each other.\"\n\n\"It won't be easy,\" Guy warned.\n\n\"I know,\" Mel said thoughtfully, and then a cheeky grin spread across his face. \"You won't be able to hide behind your steel fa\u00e7ade. I can see right through it now.\"\n\nGuy groaned, but he was smiling. He shifted Mel off of himself and sat up again. \"Come on. I need a shower, and I think I might need some help in there.\"\n\nHe hadn't been thinking about sex, only about having someone help him take his bandages off, but he caught the ripple of desire that washed through Mel, and his cock started to swell.\n\nGuy stood up and reached for Mel's hand to help him up. Mel cast his eyes down shyly, but Guy was pretty sure he was checking out the bulge in his sweat pants.\n\n\"Yes, sir,\" he said softly, \"I'd love help you.\"\n\n<p align=\"center\">*****</p>\n\nGuy's knees were weak. He fed his cock into Mel's sweet mouth until he saw his angel's eyes widen with the effort of taking him. Although the shower spray was not directly on Mel, droplets of water ran down his smooth chest and caught in the fair curls at his groin. Guy wanted to lick him all over.\n\nNot taking his expressive eyes off Guy's face, Mel slowly slid his mouth off of the thick shaft and plunged back down again. It was exquisite. Not only could Guy feel the sensations of Mel's hot mouth enveloping his cock, he could feel what Mel was feeling: the slight discomfort of his knees on the hard tile, the stretch of his mouth and sensation of having it filled with a big, velvet-steel rod, the ache of need in Mel's cock... And he could feel Mel's emotions too, his love and his burning desire. All of it jumbled together into a heady mixture that overwhelmed his senses.\n\nHe let out a low groan. \"Angel ... Angel,\" he gasped, but no further words came forth. Watching his Angel take him, and feeling how willing\u2014no eager\u2014he was to do so filled his chest with fire.\n\nMel moaned with pleasure in response, sending vibrations into his balls. Guy could no longer hang on and plunged over the edge, grasping frantically at the faucet for purchase before he ended up on the shower floor, crushing Mel.\n\nWhen his senses cleared he found himself still on his feet, shaky and dazed. Mel was kneeling before him, grinning up at him like the cat that got the canary.\n\n\"Oh ... sweetheart,\" Guy said, his voice low and rough. \"That was ... perfect.\" He ran his fingers through Mel's damp hair and eyed his partially swollen cock. \"Let's get out and dry off, and then I'll see about you.\"\n\nMel grinned. \"You don't have to. I already came.\" He climbed to his feet, wrapping his arms around Guy's waist. His grin widened as Guy emanated confusion. \"I came when you did. I mean, I might have anyway, I was so turned on, but I could feel how good it was for you, and you took me right over the edge with you.\"\n\n\"Hunh!\" Guy said, eyeing Mel's cock again. It was indeed shrinking. He thought back to his orgasm, trying to remember if he'd felt Mel's too. He had been so out of his mind at the time, he hadn't processed whose sensations was feeling, but now that he thought about it, he was pretty sure he had felt Mel's orgasm intertwined with his own. Maybe that's why it was so fucking awesome.\n\nJust then Guy's stomach let out a loud growl. Suddenly he realized he starving. He still felt light-headed.\n\nMel laughed. \"Let's eat dinner.\"\n\nAt the mention of dinner, Guy's mouth started to water. He was hungrier than he'd been in his entire life. He allowed his angel to lead him out of the shower enclosure and dry him off.\n\nMel paused while drying his shoulder to examine his wounds. They'd both been amazed when they'd removed the bandages and found the wound completely healed into a dark purple scar.\n\n\"You know, I think it looks even better than it did before we got into the shower,\" Mel said.\n\n\"I think it's the sex,\" Guy said with a lecherous grin. \"It's curing me.\"\n\nMel responded by waggling his eyebrows. \"Well, then we'll have to make sure you get lots of it.\"\n\nGuy leaned over and licked some droplets of water off of Mel's shoulder. When he got to the juncture of his beautiful, slender neck he began to suck. Mel shivered and moaned, wrapping his damp body around Guy's and tilting his head back to give Guy full access.\n\nGuy felt his cock responding again. Fuck! He was going to have his angel again right here on the shower floor. His stomach let out a loud growl of protest.\n\nMel pulled away from him, laughing. \"I think we'd better feed you.\"\n\nGuy saw spots before his eyes and wasn't sure if it was from hunger or lust, or possibly because he'd been bed-ridden for weeks and this was his first time on his feet for more than three minutes.\n\nMel was already drying himself off and moving toward the door, and now he glanced back at guy with concern. \"Are you okay?\"\n\nThe wave of dizziness passed. \"I'm fine,\" Guy said, but he still felt weak. He headed for his bed and sat down on the edge, quickly but carefully.\n\nMel was instantly at his side, his face full of concern. \"What can I do?\"\n\nA sharp pain sliced through Guy's stomach and he suppressed a groan. \"I think I'm just super hungry. Can you hand me some boxers? I'll head upstairs and see about dinner.\"\n\n\"You'll do no such thing!\" Mel said. Guy couldn't help grinning as he felt Mel's outrage. \"You will lay down here on your bed and do nothing until I get back with dinner.\" As he spoke he drew back the covers and fluffed a couple of Guy's pillows, stacking them up so Guy would have something to lean against.\n\n\"You're awfully dominant for a sub,\" Guy teased.\n\nMel's eyes widened and he opened his mouth but no sound came out.\n\nGuy chuckled and scooted back on the bed, allowing Mel to pull the covers up over his lap. As Mel began to move away, Guy grabbed him and pulled him in for a deep kiss. His angel's body melted into his for a few seconds as he responded to the kiss, but then he pulled away with some force.\n\n\"You need to eat,\" he said firmly. As he headed for the bedroom door, he called back over his shoulder, \"and I only get bossy when you're not taking care of yourself the way you should.\"\n\n\"I'll bet that's not the only time,\" Guy said with amusement, but Mel had already disappeared out the door.\n\n<p align=\"center\">*****</p>\n\nGuy felt more normal than he had since before he'd met Mel. Better than normal, he felt great. His shoulder was still sore, but it no longer gave off sharp stabs of pain when he moved. He had regained full use of his arm and hand, although they were a little stiff, and he could tell that that side was much weaker than it should be. He was looking forward to getting some gym time in.\n\nHe had eaten a shocking amount of Consuela's delicious beef stew the night before and had been hungry again an hour later. He'd made passionate love to Mel twice during the night, and after the second time, Mel had brought him a three a.m. snack of bread, meats, cheeses, and fruit, which he had demolished. Now, he'd just finished a six-egg omelet, four muffins, a half-slab of bacon, and a huge quantity of fruit salad. He felt full but had no doubt that he'd be hungry again soon. He guessed that he needed the food to fuel his healing process\u2014and their almost-incessant love-making. They'd taken care of each other's morning woods with a romping sixty-nine session.\n\nI could get used to this, he thought with contentment as he watched Mel move back and forth from the table to the kitchen counter, clearing away breakfast things. He got to his feet with the intention of helping Mel, but as the tiny, graceful man brushed past him, he caught a whiff of his luscious skin.\n\nI need you again. His cock throbbed, pushing against his briefs, making a sizeable bulge in the crotch of his sweats.\n\nSensing his desire, Mel glanced up at him with a smirk. Then he leaned across the table, with a pretense of picking up the butter, but he pushed his little ass out and wiggled it slightly in a not-so-subtle provocative display. With a low growl Guy captured him against the table. Being careful not to be too rough, he none-the-less slammed his hips into Mel's tight ass as he sucked another deep purple mark onto his mate's pale skin. Mel whimpered and thrust back into him and they were spiraling together again, swept away on a tide of passion.\n\nGuy reached for some control. \"Is it too much, Angel? Are you too sore? I'm not crazy like I was before; I can wait.\"\n\nMel's answer was breathless. \"No it's good. I want you again.\"\n\nGuy felt his words were true and he was infused with warmth. Still, cognizant of the fact that his cock was pretty damn big, Mel was tiny, and he'd already taken him three times in the past twelve hours, he kept a tight rein on his desires.\n\n\"You're not sore, Angel?\" he murmured into his lover's neck, licking the mark he'd just made to soothe it.\n\nHe felt Mel's surprise as he said, \"No, actually not! I mean, I can feel that I've had sex.\" He shifted his hips back and forth, and Guy felt the ghost of a stretched feeling in his own anus. But the movement had caused Mel's butt to rub against Guy's now fully hard cock. He groaned with desire.\n\n\"It must be one of the other qualities of my semen,\" he murmured as his hands caressed Mel's chest. \"The scientists at EERIE told me it acted as a lubricant and had analgesic qualities, and they thought it might do something else too.\" Guy paused, suddenly worried that Mel would be upset again that his semen was full of unknown chemicals, but Mel's response was thoughtful.\n\n\"Really? I'll have to study it when I start working there ... see if I can figure out what all it does.\"\n\n\"I think you'll have firsthand knowledge by then,\" Guy said. He couldn't help but push his erection against Mel's ass.\n\n\"I'm sure it's not harmful,\" Mel said. \"I feel better than I've ever felt and I'm not sore at all.\" He twisted in Guy's arms to face him and his voice dropped an octave. \"You're so fucking sexy, I can't get enough of you. Please...\" He didn't get any further because Guy took his mouth in a passionate kiss.\n\n<p align=\"center\">*****</p>\n\nGuy's tongue was deep down his throat. His lover's large hands ran over his body, caressing, exploring, worshipping. Mel's arms wrapped around Guy's warm neck, and his masculine scent enveloped him, driving him to push is erection against Guy's massive thigh.\n\nNeither of them had bothered to put on a shirt that morning, and Mel ran his fingers through the lush, dark curls on Guy's chest.\n\nA low rumble came from Guy's throat as he pushed Mel's flannel pants down to his knees and lifted him onto the kitchen table. Mel's cock popped out, hard and leaking. Guy lost no time in sucking it into his mouth.\n\nMel screamed in pleasure and clutched at Guy's thick hair. He would not have believed himself capable of getting hard yet again, but not only was he hard, he was aching with need, and he felt Guy's desire pouring off of him too. When Guy slipped a finger inside his still loose hole and began to pet his prostate, he almost came undone. He felt his own sensation reflected back at him through Guy's response. It was incredible.\n\n\"Guy, Guy!\" he chanted in desperation. \"Please, I need you in me.\"\n\nGuy lost no time in yanking Mel's pants the rest of the way off, and then he pulled him gently forward a few inches so that his ass was right at the edge of the table. Grabbing Mel's hands he brought them over his head, trapping them against the hard wood and holding them there with one hand while he freed his own steaming erection.\n\nMel whimpered, reveling in the feel of being taken\u2014not against his will, but taken nonetheless. Guy was manhandling him, clearly in control. All Mel had to do was hang on for the ride.\n\n\"Angel...\" The word came out on a growl and Mel shivered in anticipation. His new, absolute-favorite activity was having Guy plunging in and out of him, pounding him into the mattress\u2014or in this case, into the table.\n\nGuy pulled Mel's legs up to rest on his shoulders and positioned his blunt cockhead at the entrance to his channel.\n\n\"Yes! Yes!\" Mel pleaded, trying to shift forward to take Guy's cock.\n\nGuy stilled him with a firm hand on his hip and smirked at him, his dark eye dancing. \"You've gone from virgin to whore in twelve hours,\" he teased.\n\n\"Hey!\" Mel protested, but he was secretly pleased. He adored making love. He didn't regret waiting so long to lose his virginity because it felt so right with Guy like it hadn't with anyone else. No one could compare with his sexy vampire hunter. \"Only for you,\" he said softly.\n\n\"Angel ... I can't believe you want me,\" Guy said, stroking Mel's cheek lovingly.",
        "\"Want you, need you, love you Guy,\" Mel responded.\n\n\"Sal. My real name is Salvatore.\"\n\nBefore Mel had time to process that, Guy pushed into him, taking him slowly all the way to the hilt.\n\nMel's head fell back and a whimper tore from his mouth. He wrapped his feet around Guy's hips and thrust forward.\n\nWith a guttural groan Guy started up a slow, torturous rhythm. His large hands held him in place and he nuzzled along Mel's throat. \"You're so fucking sexy,\" he growled into his ear.\n\nMel was immediately consumed. Guy's cock head found his prostate on every stroke and he spun into ecstasy, a cacophony of pleasure sounds coming from his throat. Soon his legs began to shake and he felt a tingle start in his balls.\n\n\"Not yet,\" Guy said, squeezing the base of his cock firmly.\n\nMel let out a pitiable sound as his orgasm eased off under the pressure of Guy's firm fingers.\n\n\"Slow and easy, Angel,\" Guy murmured as his hips continued their steady torture, and he held Mel still under his strong hands. If Mel hadn't been able to feel Guy's emotions, he would have thought Guy was in complete control. But he could feel what Guy felt. He knew his lover was just a hair-trigger behind him.\n\nHe squeezed his muscles together tightly on Guy's instroke, and Guy let loose with a howl. Mel felt his lover's control snap like a dry twig. Guy began to pound into him at a frantic pace. \"Mine,\" he growled. \"You're mine!\"\n\nMel's answering cries were high-pitched and raw. Yes, yours! As he felt Guy's orgasm unleash itself, his cock began to spray like an errant fire hose, squirting hot, white jism all over the dark curls on Guy's chest. He felt Guy's cock pumping torrents of the same into his hungry channel, and the intensity of Guy's orgasm intertwined with his own, sweeping him away to paradise. When awareness returned the first thing he felt was the heat of Guy's seed seeping into him. It seemed as if he could feel his body absorbing the goodness of Guy's sperm.\n\nGuy suddenly stiffened, pulling away from him and standing up straight. He felt alarm wash over Guy.\n\n\"What is it?\" he asked.\n\nGuy didn't answer immediately. He was busy pulling his cock out of Mel's hole and yanking his sweats up. Then he scooped Mel up into his arms and whisked him, at a world-blurring pace, into the bathroom.\n\nAs guy dumped him onto the bathroom floor, he said, \"We have company.\" Then he slammed the door shut. Chapter Twenty-Four\n\nEd could smell the heavy scent of sex long before the elevator doors swished open. When they did she was hit with a tidal wave of masculine pheromones and semen.\n\nGuy stood in the front hall, facing the elevator, his stance relaxed and alert. He was wearing nothing but a pair of black sweat pants, hanging low on his hips. His body was covered with a light sheen of sweat. He had a kitchen towel draped over his injured shoulder. The towel was liberally covered with fresh spunk that he must have just wiped off his chest.\n\nShe detected Mel in the bathroom, his heart rate elevated, but otherwise he was quiet and calm. Sated, her mind supplied.\n\nGuy was calmer too than she'd seen him since\u2014well, maybe ever. In spite of having been interrupted during their coupling, or immediately thereafter, he was serene.\n\nShe let Consuela and Jon precede her off the elevator. Jon was trying to play it cool, but she could tell he was impressed by the modern opulence of Guy's residence. His head swiveled this way and that, taking everything in.\n\nShe wrinkled her nose as she stepped off the elevator. \"My God, Salt! I see you've finally claimed your mate\u2014many times over, it seems.\"\n\nConsuela's thin lips curled into a satisfied smirk as she disappeared into the kitchen.\n\n\"The doctor vastly exaggerated your sorry state,\" Ed continued. \"He said you could barely make it to the bathroom on your own and that you weren't getting any better.\"\n\nGuy folded his herculean arms over his chest. \"I've experienced a miraculous recovery,\" he said dryly, obviously irritated by the interruption. \"You could have let me know you were coming rather than just suddenly dropping in.\"\n\n\"Well, if you ever answered your phone or checked your messages, we wouldn't have surprised you. How did we surprise you, anyway?\" Ed knew her own vampire-enhanced senses would have allowed her to hear if not smell a party of three coming long before they arrived.\n\n\"I was ... occupied,\" Guy said gruffly. \"And my phone is dead. I didn't bother to plug it in because I really didn't want to be bothered by anyone. So here you all are\u2014bothering me.\"\n\n\"Get over it,\" Ed said, fixing Guy with a steely-eyed glare. \"We came by to check on you because we care about you, believe it or not.\" She knew her tone held no hint of caring or warmth. Even though her words were true, she didn't want Guy to realize the extent of her affection. He might start taking advantage of it.\n\n\"I'm fine. Good. Great, in fact,\" Guy said. \"Now that you've seen me, you can be on your way again.\"\n\nJon gaped at Guy. Ed wasn't sure if he was shocked by his rudeness or by the tone of voice he was taking with her. She knew Guy wasn't serious. They teased each other like this quite often, but sometimes Guy needed to be reminded who buttered his bread.\n\n\"Doctor Abernathy is on his way. He should be here shortly to confirm your assertion. Meanwhile, we'll chat.\" She smiled at him thinly, daring him to disagree as she pushed past him into the living room. She took a seat on one of the large leather chairs, crossed her shapely legs, and looked back at Guy expectantly.\n\nHe harrumphed as he followed her into the room.\n\nJon trailed along behind and Ed noted that his attention was focused on Guy. His pupils were dilated and his heart rate was elevated. His gaze slid down Guy's perfectly sculpted back to where his muscular ass filled out his sweats. He licked his lips and then glanced up at Ed guiltily.\n\n\"Where's Tigger?\" he asked.\n\nEd's enhanced hearing picked up the sound of the bathroom door cracking open.\n\n\"In here, Jon,\" Mel hissed.\n\nJon retreated into the hallway and Mel's whispered voice said, \"Can you bring me my suitcase, please? It's right over there.\"\n\nJon laughed. \"Well, look at you, naked-boy. I can guess what you've been up to. Actually your whole house smells like a brothel. I don't think you're keeping any secrets from anyone. How is he?\"\n\nThere was a slight pause. Ed imagined the tiny blond blushing while he figured out what to say. \"Amazing, of course. Now bring me my clothes, please.\"\n\nGuy had obviously heard the whispered conversation as well. He had a satisfied smirk on his face, but there was also a hint of tension in his stance, and she could tell his attention was attuned to Mel and Jon. His mate is naked and talking to another man, she realized. She looked at Guy closely. His jaw was clenched and his eyes were narrowed. He was clearly trying to keep a tight rein on himself.\n\nJon was no threat to Mel. She knew that Guy understood that, but how much control he had over his vampire instincts, she wasn't sure.\n\nThey heard the suitcase roll across the floor and the bathroom door swing wider.\n\n\"So, you're not a virgin anymore?\" Jon asked.\n\nGuy took a step in the direction of the front hall, obviously warring with himself.\n\n\"Yeah ... not.\" Ed could hear the smile in Mel's voice.\n\nLuckily the suitcase changed hands quickly. As soon as they heard the door snick shut and Jon's footsteps coming toward them, Guy relaxed and turned his attention back to her.\n\n\"I'm going to go put a shirt on. I'll join you shortly.\"\n\nGuy returned a few minutes later, still in sweats and bare feet, but he had slipped on a clean T-shirt and his eyepatch and run his fingers through the tangled curls on top of his head. Jon stood at the sliding door, taking in the view of the lake and bouncing slightly on the balls of his feet. Just as Guy perched on the edge of the couch, Mel came in, looking flushed and happy. He went immediately to Guy and snuggled in next to him.\n\nThe big man relaxed back against the cushions, pulling Mel closer and wrapping his arm possessively around the younger man's shoulder. They exchanged a smile that was gaggingly sweet to Ed's mind. A sharp pang of longing sliced through her. What the fuck? I'm getting soft in my old age. I don't need a damn mate.\n\nShe focused her attention back on the couple on the couch, who was ignoring her completely at this point. \"I read over your report of the Valjevo Encounter, Guy. It's a bit thin.\"\n\nGuy met her eye, no emotion showing on his face. In contrast, Mel looked decidedly hurt.\n\n\"I wasn't really feeling up to revisiting that whole fiasco,\" Guy said. \"And I'm not used to dictating my report. I prefer to type, but of course, that was not an option.\"\n\nEd eyed his injured arm which was still around Mel's shoulders, his fingers lightly caressing the smaller man's arm.\n\n\"Looks like you've got function back in your fingers. I'll send you a copy of the report. I expect you to fill in the missing details and have it back to me by tomorrow.\"\n\nGuy grunted and Ed suppressed a smile. Her number one operative hated to be told what to do almost as much as he hated doing less than a perfect job.\n\n\"Father Shubert has been taken into custody for is role in Father Henry's disappearance,\" she said. \"He admitted lying to his superiors about Father Henry's whereabouts. He spun a story about Henry taking leave to care for his ailing mother, when all the while the poor man was being tortured to death in the subbasement of the church. At first I was afraid he'd been ensorcelled by the vampire, and that he himself was wholly innocent. We would have had to do some fancy footwork to get him released. However, it turns out that he acted on his own accord, motivated by the oldest incentives known to man: fear and greed.\n\n\"Valjevo apparently caught the two of them having sex in that small room in the basement. He then blackmailed Father Shubert into handing over Henry, threatening to provide proof to the bishop of their affair. He also apparently promised Shubert a substantial sum of money for each new victim he supplied. Shubert was planning on finding one more victim, then fleeing to the Caribbean with his reward.\n\n\"Valjevo would not have allowed Shubert to leave, of course. The man would have died a slow, horrible death. Shubert was completely distraught when he found out about the condition of Henry's body. They've got him on suicide watch, but I can't feel sorry for him. He made his own bed.\"\n\nBy now Mel's eyes were round and his face had whitened to an even fairer shade pale. Jon's jaw was set and his eyes were flashing. Such passion. He'll make a good agent if we can get him properly trained.\n\nJust then Consuela came out of the kitchen carrying a tray laden with a coffee set and sticky buns, which she set on the coffee table.\n\nGuy immediately reached for a sticky bun and took a huge bite.\n\nMel looked at him aghast. \"How can you possibly eat again already? I'm still completely stuffed from breakfast.\"\n\nGuy swallowed his bite and waggled his eyebrows at his young lover. \"Exertion always makes me hungry.\" When Mel's face pinked, he laughed and tightened the arm he had around him lovingly, giving him a brief sideways hug.\n\n\"You treat my chico right, Salvatore,\" Consuela warned, slapping him lightly on the arm. \"If I see any bruises on him, I'll give you twice as many.\"\n\n\"Yes, ma'am,\" Guy replied contritely while Mel's face deepened to a bright red.\n\nJon's eyebrow's shot up, disappearing behind his bangs. He was obviously surprised that this tiny old woman was threatening Guy with bodily harm, and he was apparently taking her seriously.\n\nMel turned to face Guy, his expression unreadable. \"So, your real name is Salvatore?\"\n\nGuy nodded his ascent, looking slightly guilty.\n\n\"And Salucci's not your real last name either, is it?\"\n\n\"No, it's not. I think it's better if you don't know my last name.\" Mel's face showed the hurt he was feeling, and Guy quickly pressed on. \"I would love to tell you. I mean, I'm would be fine with telling you, except I think it is dangerous information for you to have, and I would not endanger your life.\"\n\n\"I agree,\" Ed said, quickly backing Guy up. \"We went to a lot of work to have you disappear. The fewer people who know your real identity, who know you're still alive, the better.\"\n\nMel's jaw dropped open and he starred at Guy with huge eyes. \"They've changed your identity for you? Kind of like ... witness protection?\"\n\n\"Something like that,\" Guy said.\n\n\"Exactly like that,\" Ed confirmed. \"The only difference is that EERIE was responsible for hiding him rather than some government agency. And, I'll say we do a much more thorough job than the FBI. No one will ever find you as long as you don't make contact or talk about your past.\" She narrowed her eyes at Mel and he squirmed uncomfortably. \"The less you know about Guy's previous life, the better.\"\n\nHe nodded his ascent, but his eyes reflected his disappointment. Guy leaned over and nuzzled the top of Mel's head. He looked like he was about to say something, but thought the better of it.\n\nShe fixed him with a cold stare. \"You know better than anyone what will happen if they find you,\" she said.\n\nGuy stiffened, the movement so slight it would have been imperceptible to anyone else. \"Yes, I know,\" he said quietly.\n\nEd's phone vibrated and she pulled it out of her jacket pocket to check it. \"Abernathy's on his way up.\"\n\nEd watched Guy and Mel thoughtfully, while sipping on her strong, black coffee. They were obviously very close, seeming to communicate on a sub vocal level. That pair is inseparable now. I'll have to place them on jobs together. Maybe since Jon and Mel are such good friends, the three of them will make a good team.\n\nPresently the elevator door swished open and Dr. Abernathy appeared, carrying a large black leather bag. He stopped short when he entered the living room and caught sight of Guy happily munching on a sticky bun with one hand, while his injured hand slid up and down Mel's arm.\n\nEd smiled at him, enjoying his consternation. \"Your patient is not as sick as you made out, Dr. Abernathy.\"\n\nHe seemed to recover himself and moved further into the room, still staring at Guy. \"How ... what?\" He was clearly at a loss for words.\n\n\"I'm feeling much better, Doc,\" Guy said with a smirk.\n\n\"It appears so,\" the doctor said softly, as if talking to himself. \"I'd like to examine you, if you don't mind.\"\n\nGuy raised an eyebrow at him. \"Actually, I do mind.\"\n\n\"Guy!\" Ed barked. The man did not know the meaning of the word obedience. \"If you don't let Dr. Abernathy examine you here and now, I will have you hauled into headquarters and he can do a much more thorough exam there.\"\n\nGuy rolled his eyes. \"Fine. But only my shoulder wound. My other injury is completely healed.\"\n\nMel's eyes widened and Ed realized he was putting two and two together. He had witnessed the rape, after all. He lifted his hand that had been acid-burned by the vampire's blood and examined it in surprise. \"I'm healed too,\" he murmured.\n\nDr. Abernathy grabbed his hand gently and pulled it toward himself to examine it more closely. \"Well I'll be a monkey's uncle!\" he said in awe. \"I could have sworn you'd have scarring from that burn. He ran his thumb across the back of Mel's hand. \"There's no trace!\"\n\nGuy let out a low growl, and the doctor glanced up at him in surprise. The glare in Guy's eye was intense. Dr. Abernathy dropped Mel's hand and took a quick step backwards.\n\n\"Settle down, Guy,\" Ed said. \"Take your shirt off so the doctor can see your wound.\"\n\nGuy pulled away from Mel and removed his shirt, barely seeming to favor his injured shoulder while doing so.\n\nDr. Abernathy let out a gasp of surprise, and Ed was hard pressed not to gasp as well. Jon gasped too, but he was looking at Guy's sculpted chest and abs, not at where his massive wound should have been. There was a long, jagged scar that was deep purple in color, running from his collarbone around his rib cage, but there was no redness around the wound or any sign of other trauma. The injury looked months, not weeks, old.\n\n\"How the hell did that happen?\" Dr. Abernathy cried, moving in close to examine the injury. He prodded it gently with his fingers, and when he got no response from Guy, he applied a bit more pressure.\n\nMel let out a small yelp, grabbing his own shoulder at the exact spot that the doctor had been poking Guy. His eyes widened and he slapped a hand over his mouth.\n\nHe feels Guy's pain, Ed realized in surprise. It must go both ways. There is so much we don't know about the vampire mating bond. We'll have to study these two closely.\n\nGuy had exhibited no outward response to the pain the doctor had surely caused him, but now he said tightly, \"It's still a bit tender, Doctor. I'd appreciate it if you didn't reinjure it.\"\n\n\"Oh, sorry,\" the Doctor said, removing his hands from Guy. \"I don't think you need me anymore, and you certainly don't need any more drugs. Perhaps some physical therapy would be in order. How does it feel?\"\n\nGuy moved his arm and shoulder, testing them. \"It's mostly just stiff\u2014and weak. Can I start working out again?\"\n\n\"I think I can sign off on that,\" the doctor said. \"I'll send Craig over tomorrow to supervise your first workout and give you some specific exercises to help. I'd say, 'don't overdo it', but with your remarkable capacity for recovery, I'm not sure it's possible for you to overdo.\"\n\nThe doctor finished his exam, quickly covering just the basics: blood pressure, pulse, temperature, eyes, ears, and mouth, and finishing up by listening to Guy's heartbeat.\n\n\"Hale as a horse, I'd say,\" was his proclamation.\n\n<p align=\"center\">*****</p>\n\nMel watched Jon surreptitiously. There was something subtly different about him, but he couldn't put his finger on what it was. His outfit, perhaps? No, it's different from his usual flamboyant self. That's part of it, but ... an outward manifestation of an inner change?\n\nJon's clothing was new and top of the line. He was wearing all black: tight designer jeans, high-top boots, a form-fitting, pullover shirt in some kind of high-tech, silky fabric, and a leather bomber jacket very similar to the one Guy wore. His shoulder-length hair was pulled into a tight braid down the back of his neck.\n\nHe's dressed for vampire hunting, Mel suddenly realized. He suppressed a smirk. He just couldn't picture Jon fighting vampires. Then he had a flashback to their captivity. Jon had been calm and brave\u2014and smart about fighting Valjevo. If it hadn't been for Jon, he would surely be dead, or worse. Maybe Ed's right about him. Maybe he will make a good vampire hunter. That didn't eliminate his amusement at Jon's choice of outfit.\n\n\"So, are you thinking you'll run into a vampire on the way home?\" he asked. He couldn't help but rib his friend.\n\nJon looked at him in confusion.\n\nMel waved his hands to indicate Jon's appearance. \"Looks like you're dressing the part already.\"\n\nGuy made a small noise and Mel thought he was suppressing a laugh. Ed's eyes glinted with mirth.\n\nJon tossed his head and put his hands on his narrow hips. \"Hey, at least I'm dressed, which is more than I can say for you when we arrived.\"\n\nMel felt his face growing red. He had no response to that. He supposed he deserved it.\n\nJon relaxed his stance, already over his snit, but his eyes were still on Mel. \"You don't like my new look?\"\n\n\"I'm sorry for teasing you. I do. You look great Jon, as always.\"\n\nJon's eyes shone with excitement. \"I can't wait to start!\"\n\n\"Well, you've got lots of training to get through before we let you anywhere near another vampire,\" Ed said. \"And our boot camp is much tougher than the U.S. Army's.\"",
        "Jon looked slightly apprehensive and Mel felt a wave of relief that he didn't have to go to boot camp.\n\nEd turned her attention to Guy. \"We lost Freeman near Bryce National Park last week,\" she said.\n\nMel felt Guy's pang of loss, but he showed no outward emotion other than surprise.\n\n\"To a vampire?\" Guy asked. \"What the hell is a vamp doing out in the middle of nowhere?\"\n\n\"We don't think it's a vampire,\" Ed said. \"There is something out there that is preying on people, though. Several have disappeared without a trace, including Freeman, but one body was found. Or, at least a partial body. It appears to have been shredded by animals\u2014either while he was still alive or immediately thereafter.\"\n\nMel's stomach flipped over and Guy squeezed his arm reassuringly.\n\n\"So ... wolves?\" Guy guessed.\n\n\"That's what the authorities think. I'm not so sure. I'd like to send someone in to investigate.\"\n\nGuy looked at her sharply. \"Are you thinking I need to go back to work already?\"\n\nA wave of dread washed over Mel. Having Guy off fighting who-knows-what-evil would be sheer torture. Every time he went off on a job, Mel wouldn't know if he would come home or not. What the hell have I gotten myself into?\n\nGuy nuzzled the top of his head.\n\n\"Not at all,\" Ed said.\n\nMel felt the tension drain from his body when he heard those words. A reprieve, at least.\n\n\"I have something else in mind for you. I'd like you to assist with training the new set of recruits. The class won't start for several more weeks. Do you think you'll be up for it?\"\n\nMel could sense Guy's emotions, but he couldn't quite place what he was feeling. Relief mixed with disappointment?\n\n\"I should certainly be well enough to intimidate a few recruits.\"\n\n\"Good.\" Ed's eyes focused on Mel. \"I think you'll need to take this semester off,\" she said. \"The training is a ten-week very intensive program and it takes place at various locations all over the globe. I'll give you a light workload next semester so you can catch up.\"\n\nGuy jumped to his feet and Mel could feel the anger rolling off of him.\n\n\"What the hell, Ed! You're not sending Mel out to hunt vampires!\" He stalked toward her.\n\nShe appeared completely nonplused by Guy's show of aggression. \"Relax, Salt. I didn't say I was sending him on any missions. I just think it would be a good idea to have him trained. Don't you think so?\"\n\nGuy stopped in mid-stride and gaped at her.\n\n\"I mean, if you're out fighting vampires, and his best friend is out fighting vampires, there is a slight chance that he'll have another Encounter. I'd like to make sure he has the best chance of survival that I can give him.\"\n\n\"I'll be there to protect him,\" Guy growled.\n\nEd raised an eyebrow at him.\n\nThe silence hung heavy for a few long moments until Guy conceded. \"Alright, he can go through training\u2014but no missions!\"\n\n\"No missions,\" Ed agreed.\n\nHer statement was drowned out by Jon's whoop of excitement. \"We're going to boot camp together! Oh, Tigger, it will be so much fun!\"\n\n\"It's not going to be fun,\" Guy warned. \"It's going to be hell.\"\n\nMel's head was still spinning, adjusting to the sudden turnabout his life seemed to be making. He was discovering that Ed had the disconcerting habit of deciding things for you without finding out whether it was what you wanted or not. It would take a little time to sort through the jumble of emotions he felt about boot camp with Jon and Guy, but there was one thing he was already clear about.\n\nHe turned to Jon and said, \"Don't call me Tigger anymore please. I'm Mel now.\"\n\n\"What?\" Jon looked at him in confusion.\n\n\"Don't you think I'm a little old to go by Tigger?\" he asked.\n\n\"But I thought you hated Melvin.\"\n\n\"Melvin is still growing on me, but I do like Mel.\" He smiled at Guy. He loved the way his name sounded when his lover said it in his deep sexy voice. His cock twitched.\n\nGuy smiled back at him. He saw the lust bloom in Guy's eye in response to his thoughts.\n\n\"Ahem!\" Ed said, standing up abruptly. \"I think it's time for us to go.\" She raised her voice, \"Consuela!\"\n\nThe woman who Mel had initially mistaken for a witch poked her head out of the kitchen. Looking at her objectively, she still looked like a witch. She had an aura about her that was positively spooky, but knowing her as he did now, he knew that in spite of her frightening demeanor, she had a soft heart. He noticed Jon was eyeing her apprehensively. Yes, she takes some getting used to.\n\n\"But I'm not done cleaning up in the kitchen,\" she protested. She fixed Mel with a glare that he knew wasn't real. \"Someone made a terrible mess in there.\"\n\n\"I'm sure they're capable of cleaning up after themselves,\" Ed said as she headed toward the elevator. \"You're on vacation. You've got the next week off.\"\n\n\"What?\" Consuela protested as she followed behind. \"What am I going to do with a week off?\"\n\n\"Perhaps you can help Jon move into his new apartment and clean up his old one.\"\n\nJon looked decidedly worried by that comment and Mel suppressed a smirk.\n\nBy now the three of them were piling into the elevator. Ed held the button to keep the door open for a few seconds longer. \"Turn your phone back on Salt and keep it charged. I expect both of you at EERIE headquarters next Monday morning for Evaluation\u201408:00 sharp.\"\n\nGuy groaned. Ed grinned at them evilly as she let the button go and the door started to slide shut. \"It's going to be a very thorough examination.\"\n\nA jolt of foreboding slid down Mel's spine. He looked up at Guy for reassurance. \"What does an evaluation entail?\"\n\nGuy stepped close to him and slid one arm around Mel's waist while smoothing the hair back away from his face with his other hand. \"I can show you,\" he said, his voice low and husky. \"Of course, I will need to restrain you first.\"\n\nA full body shudder of desire swept through Mel and a small sound came out of the back of his throat that was so needy it would have been embarrassing if he'd been able to feel such an emotion. But at that moment there was no room in his mind for anything more than intense love and lust for the man who had taken control of his heart.\n\n\"Yes, please ... evaluate me, sir,\" he whispered. Chapter Twenty-Five\n\nGuy gazed in wonder at the man kneeling before him. A fallen angel. Wingless. Debauched.\n\nHis perfect pale skin and white-blond hair seemed to glow in the moonlight that spilled in through the wide windows, washing the room in a bluish light. His kiss-swollen lips were a tantalizing, dark stain against the white of his teeth that chewed gently on the lower one. His lovely, aqua eyes were hidden beneath a black silk cloth that was tied tightly around his head. The weak light seduced shadows from the dark, making the swell and ripple of his toned arms and chest stand out in stark relief.\n\nIt was easy to imagine the young man with great white wings unfurled behind him, a glowing halo hovering over his angelic head. But no longer. He was part demon now, irreversibly tainted by wicked seed.\n\nHis whole aspect spoke of submission and repentance: the bend of his head, the shameless nakedness of his form, the way his hands were clasped together behind him, resting lightly at the base of his spine. He was begging to be tied up and punished.\n\nGuy drew in a deep breath and let it out slowly through his nose.\n\nThe young man at his feet began to tremble, his shoulders shaking with minute tremors.\n\n\"Are you cold, angel?\" he asked, his voice breaking the silence like shattered glass.\n\nA shake of the head, pale curls shifting against the angel's face with the movement. Full lips parted and then closed again, thinning as he pressed them together in a tight line.\n\nGuy smiled. He's learning. He knows not to volunteer information that was not requested.\n\nThe length of black cord Guy held in hands felt smooth and cool. He stepped behind the young man and began his task. As he began to bind them, he marveled at how small the angel's hands looked next to his. He worked slowly and deliberately, wrapping the cord decoratively around hands and wrists and looping it around the toned torso, tying intricate knots here and there. He was careful to leave full access to nipples, cock, and ass, and to allow for his angel's legs to be spread wide. Depraved and corrupted.\n\nAs he progressed, the young man's heart rate and breathing quickened. Guy could smell the pheromones rolling off of him. He could also feel his intense desire, quickly building to an insatiable need. He himself was in a similar state. It would take all of his control not to push too quickly and simply take his hostage with a few wild thrusts. Luckily his own swollen cock was securely encased in tight leather.\n\nHe finished his task by tucking the spare length neatly under some of the loops that encircled the angel's thighs. He would use that later, but first...\n\nHe stepped back and admired his work. His angel was absolutely breathtaking. The black rope was a perfect contrast, setting off his pale skin and framing his rosy nipples and dusky genitals as if they were art. His cock was fully hard and snugged up against his taut belly. The tension in his compact body was palpable. He was strung tight, like a harp string waiting to be plucked.\n\nGuy reached out and very lightly brushed the tip of one of Mel's nipples, thrilling in the visible shudder that ran through the lovely young man at his touch. The buds were hard with arousal and Guy dropped to his knees and took one of them in his mouth. Mel gasped in surprise, and as he bit lightly down on the nub, his angel let out a low moan. When he licked and then sucked, Mel's hips started to thrust. Guy stilled them with a firm hand as he switched to the other nipple.\n\nThe angel's moans turned into whimpers. He teased one of the nipples with his fingers, rolling it gently but firmly while he sucked hard on the other one. He could feel Mel succumbing to the torturous pleasure, his emotions a white haze of ecstasy. He felt an arousing sensation in his own nipples, an echo of what he was doing to Mel.\n\nIt took every ounce of control he had not to reach for Mel's cock, not to flip him over and shove his hard length brutally into the fallen angel's tight channel. His own pleasure centers went into overload as he felt Mel climbing toward orgasm. Can he orgasm just from nipple play? he wondered. It would be fun to find out.\n\nJust then his angel broke one of the rules.\n\n\"Please,\" he gasped out. \"Oh, please.\"\n\nGuy pulled away immediately. Mel's tone had held so much frustrated need he couldn't help but smile. He was grateful for the other man's blindfold; he was supposed to be frowning at his disobedient sub.\n\nMel pulled his bottom lip between his teeth and bit down, tipping his head down in shame. He knew he'd made a mistake.\n\nGuy climbed to his feet. \"Melvin...\" He used Mel's full name to hint at displeasure he wasn't feeling. His body hummed with anticipation. \"You understand I need to punish you for that infraction?\"\n\n\"Yes sir.\" Mel's response was soft. His cock bobbed as if nodding.\n\nGuy picked up the flogger that he'd laid out earlier. As an untrained submissive, he knew that it was unlikely that Mel would get through an entire scene without making a mistake. Mel had played right into his hands.\n\nHe caressed the soft falls of the flogger. It was not designed for severe pain and, truly, one had to wield it with considerable force to even cause a good sting. He let the tresses trail gently across his angel's shoulders, delighting in the shudder of anticipation he felt flow through the younger man. There was excitement in him, and perhaps a touch of fear, but mainly there was growing arousal.\n\nGuy walked slowly around Mel. The young man was tense, waiting for the blow that didn't come. As Guy continued to pace around him, a low whine came out of his angel's throat.\n\nHe wants it badly, Guy realized in wonder.\n\nHe stopped behind Mel and waited a few more beats, reveling in his lover's impatience. Then, finally, he raised the flogger and let a stinging blow land on Mel's bare ass.\n\nMel let out a small cry and tried to move his hands down to cover his ass, straining against the ropes, wanting to protect himself from further abuse. But Guy could feel what Mel was feeling and knew his pleasure level was much higher than his pain level.\n\nHe reached out and stroked Mel's arm watching his body visibly relax at his touch. He had tied him in such a way that he had full access to that delectable ass and he was going to take advantage of it. His vampire-enhanced eye picked out a spreading pinkness on Mel's butt cheek even in the dim light. Fucking gorgeous.\n\n\"Relax,\" he ordered using his dom voice, but speaking softly.\n\nMel drew in a deep breath and nodded. He shifted his knees slightly apart, bracing himself.\n\nGuy continued with the flogging, starting up a steady rhythm, striking Mel's perfect buttocks with precision and grace. Mel took it quietly at first, head bowed, body rigid. After a time his breath began to hitch and a low whine came from the back of throat. Guy could feel the intensity of his pleasure ratcheting up even as the pain increased. A sheen of sweat broke out across Mel's shoulders. He paused in his ministrations and moved around in front of him.\n\nHis angel's face was contorted\u2014in pain or ecstasy, it would have been impossible for him to tell if he hadn't been able to feel his titillation. His blood-choked cock looked painfully swollen. A trail of precum ran down the front of it and a small puddle had started to form on the floor. When Guy saw this, his own cock spasmed and he bit back a groan.\n\nHis mate was the sexiest man alive.\n\nAnd he was needy. Ever so needy. The angel before him started to tremble.\n\nGuy moved behind him again. The pain on his buttocks had started to subside, giving way to a pleasing warmth. Guy let the lash fall again, with some force this time.\n\nMel cried out and Guy felt the pleasure-pain streak through him, fierce and sharp. He struck again, hard, reveling in the sounds that Mel made. Once more and he felt Mel tip over, pleasure washing through him that was so intense it drowned out all other sensation.\n\nGuy dropped the flogger and grabbed Mel by his shoulders to support him as he swayed. His angel's cock spewed forth a torrent of cum and he let out a strangled cry. Guy felt the spasms rocking through the younger man's body with both his hands and his head. It was almost enough to push him over the edge as well. Almost.\n\nHe needed his cock encased inside his angel in a bad way. But first ... there was more discipline to take care.\n\nMel seemed to have recovered from his intense orgasm\u2014mostly. He was still breathing hard, his chest rising and falling rapidly.\n\n\"Angel,\" Guy said gently, running a finger lightly down his smooth cheek. \"You know you've broken another rule? You are not supposed to cum without permission when we're doing a scene.\"\n\nMel sucked in a sharp breath, raising his head as if he were looking at Guy. He opened his mouth and then snapped it closed again quickly, returning his head to its bowed state. He nodded mutely.\n\n\"Well, I won't go too hard on you this time, sweetheart. I know it's your first flogging and you were very excited.\"\n\nGuy dropped to his knees in front of Mel. \"But I will do something to help you remember and to keep it from happening again.\"\n\nGuy grabbed a handful of Mel's hair and tugged so that that angelic face was raised toward him. Then he took that luscious mouth in a deep, fiery kiss. Mel moaned around the invading tongue and answered the kiss eagerly.\n\nGuy could never get enough of his mate. The taste, the feel, the amazing smell. Am I always going to be this besotted? he wondered. \"Yes,\" a little voice in the back of his mind answered him, \"you are.\"\n\nKeeping a tight hold of Mel's hair with one hand so the young man wouldn't forget who was in control, Guy let his other hand stray around to his backside. His butt was deliciously warm to the touch and Guy massaged it gently, urging further moans from his lover.\n\nHe could have gone on kissing Mel forever, except for the urgency of his own need. His swollen cock was still trapped in his tight leather pants, and it was time to let it out.\n\nHe pulled out of the kiss, smiling as Mel's lips tried to follow him. Then he set to work on his next task. Pulling out the extra length of cord he had tucked away, he wrapped it gently around Mel's balls and the base of his cock and secured it, taking extreme care that it wouldn't be too tight once Mel was fully hard. His young lover was already most of the way there again.\n\nHe stood up and stepped back to admire his handiwork. His angel was a picture, indeed. The black rope around his cock and balls caused them to stand out away from his body looking obscene. Naughty.\n\nGuy caught his breath. \"So lovely you are, Angel. I can't believe you're mine.\"\n\nMel's lips pulled up into a sweet smile.\n\nOn a whim Guy grabbed his cell phone off the nightstand and snapped a picture.\n\n<p align=\"center\">*****</p>\n\nMel heard the distinctive click of a camera and saw a flash of light even from behind his blindfold. He took my picture!\n\nWhen he thought about what he must look like\u2014naked, tied up, and probably covered in his own cum\u2014he was filled with embarrassment and dismay. He could feel Guy's pleasure, though, and that tempered his own feelings. When the scene's over, I'll take a look at the picture and if it's too bad, I'll ask Guy to delete it, he decided.\n\nHe felt Guy's uncertainty now, probably feeding off his own misgivings and he tried to let them go, to get back into the moment. It wasn't difficult. He could smell Guy\u2014much better than he should have been able to, he thought\u2014and he wondered if it was the mating bond making him extra sensitive to his lover's unique musk.\n\nHe could feel the soft rope that was wrapped around his body, securing his hands behind his back and binding his cock and balls in an intricate harness. A thrill of excitement ran through him. He was completely at Guy's mercy\u2014the big man could do whatever he wanted to him. Not that he couldn't anyway, Mel thought. He's so strong and fast, I'm helpless in his arms even when I'm not tied up and blindfolded. He sighed happily. It was hard to believe he finally had a gorgeous lover who seemed to be completely devoted to him and to understand exactly what he needed.\n\nHis butt still burned with the aftermath of the flogging. It had felt incredible\u2014every stroke like a bolt of lightning, searing right through to his cock and balls.\n\nHe felt Guy move toward him. Although he couldn't see him, he could sense his large body standing before him. His body tensed in exquisite anticipation. Is he going to touch me? Every hair stood on end waiting for the contact.\n\nFingers under his chin tipped his head up and then stroked his cheek. He sucked in his breath and waited for ... something. Lips, maybe?\n\nThen he heard the sound of a zipper being lowered, and he almost moaned in pleasure. He caught the heady scent of Guy's sex and breathed in deeply, letting the smell permeate him. He wanted it. He wanted it in his mouth. He wanted it in his ass. He needed that hard cock like he needed air. He wondered distantly if there was something in Guy's semen that was addictive, but it didn't matter. He didn't care. If he was addicted, then it was the most wondrous affliction in the world.\n\nHe felt the tip of Guy's cock nudge his lips, damp with precum. He swept his tongue out to taste, running it all around the head. A small flood of fluid greeted his endeavor, coating his tongue with salty goodness. Suddenly he was overwhelmed with a desire so intense it was irresistible. He plunged down onto the thick shaft, until he felt the head bouncing against the back of his throat.",
        "Guy let out a loud groan and Mel felt fingers threading through his hair, holding his head still. He swallowed, trying to fit more of Guy's cock down his throat. His eyes began to water with the effort, but still he wanted more.\n\nGuy's hands controlled his head and Mel let out a whimper as he withdrew his cock until just the tip was inside his mouth, then he plunged in again, starting up a slow rhythm. Guy let out another groan, low and sexy. Mel could feel his mate's pleasure. It was a very strange sensation feeling Guy's cock sliding between his lips, and at the same time feeling the echo of it from Guy's perspective, almost like ghostly lips were swallowing his own cock.\n\nOh God! He felt precum drizzling out of his cock even as he tasted the viscous liquid flowing from Guy's. He felt the ropes tugging on his balls and realized that if he wasn't bound, he'd be close to orgasm again. He could sense Guy's pleasure escalating and knew that the big man wouldn't last much longer either.\n\nHe sucked hard on Guy's next outstroke and was rewarded with another deep groan and the reflection of the incredible sensation on his own cock. He felt Guy's legs begin to tremble. Guy pulled his dripping shaft out of his mouth and he heard him gasping for air, felt him trying to control his impending orgasm. It was so close, Mel expected to feel the splash of hot cum on his cheek at any moment, but Guy won his struggle.\n\nMel's brain was white hot, melting down, burning up with desire. The urge to couple was overwhelming and he wasn't sure if what he was feeling was his own need or Guy's. He only knew that if he didn't have Guy's cock plunging into his ass in the next few seconds, they were both going to burst into flames. He let out a loud whimper at the same time that Guy growled and swept him up into his arms.\n\nMel felt the heat of Guy's broad chest against his skin and smelled the scent of sex flowing off of him. He wished that he had his hands free so he could wrap them around his lover. He rubbed his cheek against the course hairs on Guy's chest and shifted, trying to get closer. He wanted to crawl inside of Guy.\n\nGuy's dire need escalated his own, driving him to the brink of madness. He marveled at the control Guy exhibited when he set him down carefully. With the desperate desire he felt coursing through Guy's loins, he expected to be thrown down and immediately mounted.\n\nHell, he wanted that.\n\nHis legs felt like jelly when his feet touched the floor, but Guy kept a hand wrapped tightly around his waist, supporting him. He urged him forward and Mel felt the bed against his knees. He would have shimmied onto it, ass in the air, but Guy's urgent hands positioned him with his torso on the bed, head resting against the covers, feet still on the floor, and bare ass on display.\n\nYes! Yes! He's going to take me now. He's just going to slam his huge cock into me. Mel pushed forward so that his straining cock had contact with the bedcovers. He began to hump against them, needing the friction. A small wail escaped his mouth.\n\nHe felt Guy's amusement, briefly flaring through his raging lust. Guy's firm hand pulled his hips back so that his cock was just out of reach of the bed. He let out a whimper of protest, not even caring how needy he sounded. If Guy could feel his emotions as easily as he could feel Guy's, he would know already that he was insane.\n\nHe knew Guy was in the same state: blind with desire. That gorgeous cock would be at his entrance any second, ready to pierce him with its thick hardness. A frantic whimper came out of his mouth and he shifted from foot to foot in anticipation, shimmying his ass. He heard Guy's animalistic growl, a sound so masculine and feral it sent a shiver up his spine.\n\nInstead of a hard cock plunging into his hole, to his surprise he felt Guy dropping to his knees. The deft hands shifted from his hips to his ass and parted his cheeks firmly. Guy's hot breath ghosted over the sensitive skin of his pucker. Mel had time to marvel at Guy's control. His need was as overwhelming as his own, and yet he was taking time to...\n\nThen Guy's tongue slid down his crack to his quivering hole and his world exploded into ecstasy. He would not have been aware of the sounds cascading from his mouth, if he had not felt Guy's pleasure at hearing them.\n\nHis lover's tongue lapped at his hole, teasing it open before thrusting inside. The taste of musky spice exploded over his tongue, and he felt Guy's delight in the flavor. Sensation swirled through him. His cock was drooling, dripping onto the floor. His legs shook. He pushed back into Guy's face wantonly. The strong hands on his ass controlled him, holding him still.\n\nHe was desperate to tear the constricting ropes away from his cock and balls, to grab his hot shaft and bring himself to orgasm in one quick stroke. A howl of need and frustration came out of his throat. Guy's chuckle of amusement was swallowed with a groan as the big man lurched to his feet.\n\nMel felt Guy's raging need. His big lover wrapped a hand firmly around his waist and instantly he felt something hard, blunt, and wet at his entrance. He had time to take a gasping breath, and then he was breached. A spike a pain shot through him and he pushed out to ease Guy's passage. The echo of the pleasure that Guy felt as the head of his cock entered his tight heat was overwhelming. The nerves at the entrance to his channel, already sensitized by Guy's tongue, flared with burning delight as Guy slid his large organ slowly but steadily into him. When the hot head of Guy's organ nudged his prostate, the resulting spike of pleasure caused him to cry out, loud and shrill.\n\nGuy pulled back and slid in again, ever so slowly. Mel was almost sobbing with need. He heard a keening sound coming out of his mouth. Then Guy was plunging in and out him, going deep, rubbing against his prostate with every quick stroke.\n\nMel was pulled into a sea of wild sensation. He lost track of where his own pleasure ended and Guy's began. He could feel both the wondrous feeling of Guy filling him, hitting his hot spot, taking him to the edge with his powerful strokes, as well as what Guy was feeling: his cock sliding in and out of tight, hot heaven, the friction quickly escalating to wave after wave of ecstasy, consuming him. Stealing his sanity.\n\nIt was only when he heard Guy's voice, guttural and strained next to his ear, that he realized he was screaming.\n\n\"Angel, my angel,\" Guy rasped. \"Oh God!\" Mel felt another wild shudder of pleasure rip through Guy. \"Angel!\"\n\nGuy was right there and so was he, ready to tip over and accept the ravishing bliss of orgasm. He suddenly became aware of the ropes around his cock and balls, a little too tight now that his cock was so painfully swollen. He whimpered in frustration, close to breaking down in sobs. Then Guy's hands were on his cock, tugging at the rope. He must have tied it with a quick release in mind, because suddenly the rope fell away and Mel's cock and balls were free.\n\nHe let out a wail as his balls emptied themselves, the sperm racing up his shaft and forcefully ejecting from his slit. He felt the mirrored sensation of Guy's cock doing the same even as he felt the hot liquid explode deep inside him. He rode the crest of his and Guy's orgasms, the two of them inexorably intertwined. He couldn't tell which sensation was his and which was his mate's. It felt like he was plunging into a sea of molten lava, his body and his mind completely consumed.\n\nThe next thing he was aware of was the rough cover on Guy's bed brushing against his cheek. The large, warm body of his mate covered him completely, pressing him into the mattress. He could feel the gasping breaths coming from his lover, feel his softening cock still firmly lodged in his ass. His body jolted with an aftershock of his intense orgasm and he felt Guy's body respond with one of his own, his cock swelling briefly.\n\nGuy let out a loud groan that seemed to reverberate through Mel's body. He felt like he was made of Jell-O, his limbs liquid and melting and his brain jellified. His arms were still firmly tied behind his back and now they ached for release.\n\nSensing his discomfort, Guy shifted off him, his spent cock sliding gently out of Mel's ass. Mel whimpered. He was still incapable of movement. Incapable of speech. Guy's deft hands found the end of the rope at his wrists and began the task of releasing him. Luckily the untying went much more quickly than the tying, and very soon Mel was able to pull his arms around his front of himself. He groaned as his muscles protested.\n\nReaching up, he pulled the blindfold off his head, letting it fall to the side, blinking in the weak light, his eyes taking a minute to focus. Guy was intent on his task of untying him, taking the time to lovingly stroke each piece of skin as it was revealed. His expression was one of awe and wonder, and Mel felt a spike of surprise and pleasure that Guy could take so much delight in him.\n\nGuy met his eye and smiled warmly. \"You are the most amazing man I've ever met, inside and out,\" he murmured. \"I don't know why it surprises you that I am overwhelmed by your beauty.\"\n\nMel smiled. His brain, lost in a post-coital fog, still wasn't formulating words.\n\nGuy finished with his task and took the time to coil the rope neatly and set it on the foot of the bed. Mel was rubbing sensation back into his wrists when Guy pulled him close and stretched out on the bed, holding Mel tightly in the cocoon of his arms, Mel on his back and Guy on his side.\n\nMel sighed with contentment and snuggled in. He couldn't believe his steel-eyed, emotionless, mountain of muscle liked to cuddle after sex, but he surely did. Guy stoked the damp hair away from his forehead.\n\n\"I love you, Angel. I'm never going to let you go.\"\n\nA shiver of joy ran through Mel at Guy's words. \"I love you too, Salvatore.\"\n\nHe felt Guy's rush of pleasure at hearing his true name fall from Mel's lips, and Mel promised himself to use it more often.\n\n\"Thank you,\" Guy said.\n\nMel looked at him quizzically.\n\n\"I don't think I ever told you thank you ... for saving my life.\"\n\n\"Well, it was mainly Jon,\" Mel started, not entirely comfortable taking credit for the kill.\n\n\"Thanks for saving me from Valjevo too. It's hard to believe you actually destroyed him.\"\n\n\"What?\" Mel said in confusion. Guy grinned at him. \"Aside from the vampire, how did I save your life?\"\n\n\"You accepted me as your mate. If you hadn't, I'm not sure how much longer I could have gone on.\"\n\nMel shivered, thinking of how bad Guy had looked when he had first seen him lying listlessly on his couch. \"You would have committed suicide?\" he asked in alarm.\n\n\"Probably not, but I still don't think I would have lived much longer. You are part of me now and being without you was like having vital organs removed. I would have died soon of sheer misery. So, thank you for saving me.\"\n\n\"If rescuing you involves lying next to you and kissing you, then anytime you need me handsome, I'll be here.\"\n\nGuy kissed him then, a deep and consuming kiss. Mel wrapped his arms around his mate's huge chest and returned the passion. Soon enough he felt Guy's cock chubbing against his thigh even as blood pooled in his own.\n\nThey pulled out of the kiss to smile into each other's eyes.\n\n\"Another round?\" Guy asked.\n\nMel nodded, still dreamy. \"Soon,\" he said. His need was no longer urgent and it felt so good just to lie in his lover's arms. \"Where did you learn to tie ropes like that?\"\n\n\"Shibari? I took a class a couple of summers ago when I was on assignment in Amsterdam. I haven't had much practice. Did you enjoy it?\"\n\nMel squirmed. The entire scene had been amazing. Having those ropes wrapped around his body had put him in a trance-like state that was hard to describe. That followed by the intense sensations of the flogger had made him so high\u2014he couldn't believe he had orgasmed from the flogging. He cast his eyes down, not wanting to admit how much he'd liked it\u2014no loved it. What is wrong with me to enjoy being tied up and whipped? he wondered.\n\nGuy's hand went to his chin, lifting his face up to see his eyes. \"You loved it, didn't you?\" he asked softly.\n\nMel nodded, feeling a blush creep across his face. \"Entirely too much,\" he admitted. Suddenly he remembered the photo Guy had taken. \"I want to look at the picture you snapped of me.\"\n\nGuy chuckled. \"You were so debauched.\" He reached for his phone and quickly navigated to the photo, holding it up for Mel to see.\n\nMel gasped in surprise. The photo looked like it could have come from a magazine\u2014one of those that Guy kept in his toy drawer. The scene looked surreal. He was nicely framed in the middle and there were no distracting background elements\u2014mostly just polished hardwoods. His skin seemed unnaturally pale and the black rope stood out starkly, wrapped and knotted intricately and beautifully around his body. His cock was thick but not hard. He'd obviously just orgasmed; there was a shimmer of cum on his stomach and spatters on the floor beneath him.\n\nWhat surprised Mel the most, however, was his smile. It wasn't broad and toothy, but it was definitely there in the curve of his mouth and the tilt of his head. In his entire aspect was a sense of euphoria. He practically glowed with it.\n\n\"Wow!\" he said, glancing at Guy to see his reaction.\n\nGuy was staring intently at the photo with such an adoring look in his eye that Mel felt a burning heat build in his chest.\n\n\"My perfect angel,\" Guy murmured, not taking his eyes off the picture. One of his hands stole down to his cock and he caressed it absently. Mel was surprised to note that Guy was almost fully hard again already.\n\nGuy turned his piercing eye on Mel and asked, \"Can I keep it?\" Mel could feel Guy's hope and dread.\n\n\"For jack-off material?\" Mel teased.\n\nGuy's face broke into a huge smile. \"I think I could cum just by looking at it.\"\n\n\"Only if you promise not to show it to anyone else.\"\n\nMel felt an instant strong reaction flare in his mate.\n\n\"Never!\" Guy growled. \"You're mine! Only mine!\" With his words, he rolled over on top of Mel, keeping most of his weight on his knees which were on either side of Mel's legs, but pinning him firmly nonetheless, surrounding him with his big body. \"Mine!\" he declared again, staring into Mel's eyes.\n\nMel glowed with happiness. He felt loved, cherished, and protected in his lover's strong arms. He felt owned. \"Yours,\" he agreed.\n\nAnd before the smirk spread fully across Guy's face he added. \"I'm yours and you're mine.\"\n\nGuy lifted one eyebrow.\n\n\"Mine!\" Mel repeated, feeling possessive. \"All mine.\" He wrapped his fingers through Guy's dark curls and pulled him down for passionate kiss.\n"
    ],
    "authorname": "roughboy18",
    "tags": [
        "gay vampire",
        "gay paranormal",
        "gay bdsm",
        "gay bondage",
        "gay blowjob",
        "gay anal",
        "gay drama",
        "gay novella",
        "gay supernatural",
        "vampire"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/encounters-with-evil-pt-09"
}