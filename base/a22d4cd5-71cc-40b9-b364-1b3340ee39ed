{
    "title": "Hero's Life Ch. 14",
    "pages": [
        "In the middle of the night, I woke up with a start. I laid there in the dark between Peaches and Tracy for several minutes but couldn't go back to sleep. Was it the damn Cialis Lisa had given me? I had no idea what its side effects were. \n\nI slid out of bed carefully, trying not to wake the sleeping women. For the same reason, I quietly walked down to the hall bathroom, turned on its shower and got in. I stood under the warm water in the dark for awhile and began to relax.\n\nThe shower curtain behind me opened then shut. Arms wrapped around me and a tall warm body pressed against my back. Tracy. She was taller than the rest of the girls.\n\n\"Thanks for today,\" she breathed into my ear.\n\n\"Are you kidding? That was a dream come true for me.\"\n\n\"I was thinking the same thing. But it's not just the hot, squishy in-and-out parts. I mean for all of it. For all of this.\"\n\n\"I'm glad you could share it.\"\n\n\"Hero, do you really think Heather can unravel the pickle Lisa and I are in with her husband?\"\n\n\"With Peaches leading the charge and Sam steering? I give you really good odds.\"\n\n\"She's a beautiful girl isn't she?\"\n\n\"Which one?\"\n\n\"Good point. I was thinking of Peaches. I've got her on the brain right now.\"\n\n\"Is it the boobs? I never figured you for a boob junkie, Trace.\"\n\n\"Maybe I am,\" she chuckled, \"or maybe I just wish I could have had all of this at her age. She's a lucky girl.\"\n\n\"It's more than luck, Heather deserves most of the credit for getting the three of us together. She's a smart little girl.\" \n\n\"So it seems. To be honest, I think I also have Peaches on the brain because there's something of hers I'd like to try,\" Tracy turned, planting her hands against the rear tile wall, and arched her back to present me with her tight, heartshaped ass. \n\n\"I'd like to try her 'treats' please. If it feels as good as it looks...\" she humped her butt up and down \"...maybe I'll let you have another sample of my not-so virgin goodies.\"\n\nBefore she could change her mind. I fell to my knees in the shower and lapped at one of her firm, heart-shaped buns while slipping a hand up to circle her clitoris lazily with my thumb. After lathing each of her glorious cheeks, I trailed my tongue into her crease and teased her crinkled star with my tongue. \n\nI took my time, circling and circling her sphincter. By minute degrees, I increased the pressure of my tongue against her ass. It began to loosen under my patient treatment. I continued to swirl my thumb against her clit. When her ring had relaxed a bit more, I began to pause periodically in my circling to press the tip of my tongue to her opening, wedging it just a tiny bit into her tight hole. Each time I did this, her knees quivered a little and she moaned a quiet \"Oh\" that echoed in the shower.\n\nI pulled my tongue back out and continue my patient circling\n\n\"Oh god, that's good. Come here though, I need you. Now.\" She reached down behind her and closed her hand around my cock, already hardened from having my face lodged in her beautiful tush. She pulled me to my feet and tugged me forward. She dragged my tip up and down her asscrack.\n\n\"Uh, Trace,\" I said softly to the back of her head, \"that's not where it usually goes.\"\n\n\"I know,\" she turned to look back at me. Her lower lip was caught between her teeth sexily. \"But if you don't mind, I'd like you to be first guy in my last, littlest hole too. You don't really mind do you?\"\n\nAs an answer, I grabbed a bottle of conditioner and squirted some on myself and then more her upturned ass. It ran down her crack in a creamy, pearl ribbon. I stroked myself to spread the slick goo then nudged the fat head of my cock between her slippery cheeks. \n\nShe reached back with a hand to center me on her still slightly loosened anus. It puckered slowly and reluctantly opened to kiss the very tip of my knob. It was still ridiculously tight inside.\n\nI pushed into her firmly.\n\n\"Uughh...\" she howled just as my cock head popped inside her. She was definitely a complete virgin here.\n\n\"Have you had anything at all in your ass before Trace?\" I asked softly.\n\n\"Nothing bigger than Heather's little finger earlier today,\" she panted.\n\nThat explained it. I took her gently by the hips. \"Breathe out. Now push out with your butt. No, don't tighten up. Relax.\" \n\nI carefully pressed further into her most intimate entrance.\n\n\"Huhuhuhu... how much more?\" she whimpered.\n\n\"You sure you still want to try this?\"\n\n\"No. Yeah. I don't know. How much more?\" she whimpered again.\n\n\"Halfway there. You're doing great.\" \n\nThe slick hair conditioner assisted my slow entry. Her ass felt fantastic. It also helped that she was fairly tall. Our hips were lined up perfectly without any awkward crouching. \n\n\"Aaaaahaaahaa... I don't think I can make it,\" she gritted through clenched teeth, as I continued working into her. She may have sounded hesitant, but she pushed backwards a little and curved her back into an even deeper arch - her spectacular upturned ass inviting me to take her further.\n\nI finally ground myself home and pressed my hips into her firm ass cheeks. My last push into her shook some water droplets that were resting on her upcurved ass and lower back. They droplets sparkled in the tiny bit of light in the bathroom.\n\n\"That's it, Trace. All in.\"\n\n\"Thank God!\" She dug her nails into my thigh. \"Don't move. Please, don't move.\" \n\nI waited with her in the darkened shower, the warm water spraying my shoulders. I softly stroked her lower back in lazy circles, praying she'd relax enough to actually enjoy this. I didn't want to be the guy to ruin anal sex for her. \n\nEventually, she let go of my leg and urged me on. \"OK. Move a little. Slow. Slower!\" she gasped. \"Easy. Yeah. That's better. Now back in. Slow again.\"\n\n\"Wow, this is so dirty, Hero. I wish I'd thought of letting you do this back when we were teenagers in Thailand.\" She reached down through her legs to play at her clit with a free hand. \"I could have fucked you and still stayed a virgin.\"\n\n\"No way. It barely fits now,\" I panted from the effort and the excitement of wedging myself into her virgin ass. \"One of us would have gotten hurt. Could you imagine trying to explain it to the hotel doctor?\" We both laughed at the thought and her laughter translated into squeezes inside her tight rectum.\n\nI began a slow, steady rhythm in and out of her clutching ass.\n\nTracy pressed her face against the cool tile. I felt her slip a finger into her pussy and begin to gently slide it in and out in time with my strokes. \n\n\"Hero, I can't believe you're in my ass. I mean I believe it because I can feel it but... wow... no wonder Heather likes this so much. It's so nasty. I feel like I'm going to burst.\" \n\n\"Speaking of bursting, I'm not going to last much longer,\" I warned her.\n\n\"Good, neither am I. Just one more minute? Come with me?\"\n\nI gritted my teeth and by sheer force of will held back what felt like a tidal wave. When I felt twitches start in her rectum, I pushed myself completely into her ass so hard I jammed her flat against the tile wall. I thrust deeply twice more, bouncing off her tight butt cheeks, then buried myself deep inside her ass.\n\n\"Ahh... ahhhh...\" she moaned and clawed the tile as she heaved into her orgasm. Her finger was pushed deep in her seizing cunt, her body rocking in release. I came with her, sawing gently in and out of the depths of her ass as I spurted into her. \n\nWe stayed like that for a few minutes and caught our breath.\n\n\"You okay?\" I asked finally, my spent cock slipping free. Her ass snapped shut immediately. \n\n\"I think so.\" She turned and leaned heavily against the wall. \"I'm not sure my legs work though. I'm still tired from all that fun earlier,\" she said unsteadily.\n\n\"I could carry you to bed.\" \n\n\"That might be nice actually.\"\n\nWe rinsed and, after hastily toweling us both dry, I swept Tracy up in my arms and brought her back to bed.\n\nWe slipped back under the covers together, trying not to wake the three snoozers. As it turns out, Peaches was awake.\n\n\"How'd it go?\" I heard Peaches ask.\n\n\"You're right. 'Treats' rock.\" Tracy giggled.\n\n\"After, did it fit?\"\n\n\"Oh yes, it fit.\"\n\n\"Good.\"\n\nIt had been a setup. As if to confirm my thought, Peaches reached an arm across Tracy to gently pat my soft phallus.\n\nSleep came quickly and easily. I was exhausted. It had been a ridiculous day.\n\n****\n\nHeather and Lisa were up, dressed, and out of the house at dawn for a morning flight to Sydney. I only vaguely remembered each of them distributing kisses to the three of us still sleeping in a warm, tangled pile beneath the bunched up blankets.\n\nBy the next afternoon, Sam was already in a funk. She missed Heather and it was showing. She was moping around the house and grumbling.\n\nTracy and I did our best to stay out of her way. After a couple of hours of particularly intense moping, I patted one of Sam's passing buns and made a gentle suggestion. \n\n\"Hey grumpy, how about you run through a long routine upstairs? Maybe it'll work your way out of these blues.\"\n\n\"Hmmmmm... not a bad idea.\" She nodded and slunk up the stairs. \n\nI waited a few minutes then I grabbed Tracy and we followed Sam up to a large bedroom that we kept empty save for one overstuffed chair in the corner. The bedroom's floor was clean, gleaming hardwood. I plunked down in the chair and Tracy sat herself across my lap with her long legs dangling over an armrest.\n\nTracy was about to see a special part of Samantha. It still fascinated me. \n\nSam had stripped completely naked and was stretching slowly as a warm up. Her back was turned to us and the muscles beneath its perfect olive skin twitched and played as she moved slowly. Her slender muscular buttocks were taut and well-defined. \n\n\"What's she doing?\" Tracy whispered.\n\n\"Shhh... exercise. Mind if we watch, Sammie?\" I asked softly\n\nSam turned her head. Her eyes were closed and stayed that way. She shook her head to indicate it was okay to stay, but brought a finger to pursed lips to ask us to keep quiet.\n\nShe began. \n\nSam tipped up onto the balls of her feet, then up onto her toes. She extended one leg forward slowly in a demonstration of balance and poise. That leg came down. She repeated with the other. In the language Sam had taught me, these movements were tondue.\n\n\"Ballet,\" I murmured quickly for Tracy's benefit.\n\nTracy nodded, her eyes intently on Sam.\n\nWe watched as Sam lifted her arms, folded a leg inwards, and dropped flatfooted. She sprang back to her toes. Releve. She repeated this several times then moved through several more forms. Plie. Battement. Arabesque. \n\nEvery motion was slow, controlled, and graceful.\n\nSamantha began to turn slowly, elbows out, hands parallel to the ground and held chest high. She did this in place. Soutenu. Eventually, her spinning quickened and she moved forward across the room in a whirling pair of turns. These were pique turns. \n\nBut Sam's absurd variation then followed. Half-way through what should have been another pique turn, her arm whipped out in a spinning backfist. The other arm followed as a tightly clasped ridge hand. Still turning, a leg spun up for a high crescent kick. \n\nShe continued the spin, leaped into the air and whirled through a back roundhouse kick that came just short of the rapidly approaching wall. She landed low, turned and snapped a leg sweep in the opposite direction. \n\nShe came up quickly and stopped. Perfectly still. Sam rose onto the balls of her feet, then rocked again onto her toes. \n\n\"And Kenpo,\" I whispered again, as Sam transitioned smoothly back into her languid ballet movements. \n\n\"There's beauty in her violence,\" Tracy admired.\n\n\"And vice versa,\" I agreed.\n\nSam heard us and, eyes still closed, she burst into a gleeful, crazy cackle. She continued to twist and turn to music only she could hear. She danced, fought, and danced in a dervish-like mix of mad laughter and sinewy, graceful brutality. This continued for an intense half hour. Tracy watched with the same awe I had when I saw this for the first time. \n\nHere was more proof that Sammie was more than what she looked like. \n\nWhen she finally stopped she was panting. Her naked body shone with perspiration. She opened her eyes and came over to kiss my cheek. \"Good idea,\" she said softly. She turned and smooched Tracy on the lips then left.\n\nWhen Sam was gone, Tracy piped up. \"Wow, I kind of wanted to clap. Where's she going now though?\"\n\nI craned my neck in a vain attempt to see down the hallway. \"Usually she takes a long hot shower. But sometimes...\" there was a soft thump from the master bedroom and I brightened, \"...sometimes she lets me lick the sweat off. She didn't turn the shower on and that thump was the sound of her plunking into bed. She's waiting. It means I get to have some fun. Wanna come?\"\n\n\"Absolutely.\"\n\nSure enough, when we got to the bedroom door and looked in, Samantha was stretched out on the bed facedown.\n\n\"Isn't she getting the bed all sweaty?\" Tracy commented dryly.\n\n\"Honestly, this is worth it. Keep an open mind, okay?\"\n\nI made my way over to the bed where Sam lay patiently, still catching her breath. Her hair was covering her face in a sweat-dampened pile. \n\n\"Playtime Sammie?\" I touched her perspiration slickened shoulder gently.\n\n\"Mmmhmmm, 'the works' please,\" she answered through her hair.\n\nI sat on the bed next to her, bent, and began to lap at the back of one of Samantha's knees. Perspiration had gathered in the crease and I trailed my tongue back and forth along the delicate lines. I rolled Samantha's sweet, warm, salty taste over and over in my mouth. Just a hint of musk.\n\nConfession time: I have a medium-grade sweat fetish. \n\nBy \"medium grade fetish\", I mean I'm not dragging down strange women in the gymn to suck on their foreheads. I might think about it but that's my own business, right? In real life, I'm selective. If I like a girl and she's... well... tasty, I'll very happily give her a good licking after a work out.\n\nI'm not sure what it is - maybe a pheromone thing. There's just something so basic, so primal, so fucking feral about lapping perspiration off a beautiful naked young woman. \n\nPlus, a lot of 'em like it. \n\nSamantha, because of who she is and what she is, didn't needed much convincing the first time I did it to her. She'd staggered home from a 15 mile run. She was tired and her body was gleaming and her jog bra and running shorts were damp. \n\nShe'd giggled, gasped, and moaned as I peeled off her lycra outfit then pulled her to the kitchen floor and sucked her entire body dry before eating her until she'd come enough times that she had to push me away. It was my turn to laugh when she finally stood up and barely managed to stumble upstairs on rubbery legs to shower afterwards.\n\nWe'd repeated that session several times since she'd moved in with me. My favorite ones were when she called me upstairs after she'd been dancing naked. It was even better than running because there were no clothes in the way. Just a beautiful even sheen of salty goodness.\n\nI worked my way up Samantha's leg in long, slow licks from her knee then up along the back of her thigh. Her toned little hamstring twitched involuntarily. Her legs were weak from the exertion of putting on her show. I ran my tongue up and down her tiny muscular butt cheek, lathing away the sweat there, before working my way up over her narrow waist to the sleek muscles of her beaded back. \n\nAs I licked, Sam began to catch her breath. Her panting slowed to regular breaths then deepened into long relaxed ones as I traced her body with slow licks. I basically painted her back with my tongue - dragging it up and down her warm, smooth olive skin.\n\nAt some point, Sam gasped and started a little. I looked down. Tracy had slid onto the bed with us and had tentatively lapped at Sam's other leg, the one I hadn't gotten to yet.\n\n\"Wow, this is kinda fun.\" Tracy looked up at me from Sam's knee, \"You know, Hero, for a relatively normal looking guy, you're chock full naughty.\" She bent to continue licking at Sam's knee before working up her thigh. \n\nSam chimed in from above. \"I swear that's the best part, Trace. He's all white-bread and suburban on the outside but inside he's got this little simmering pot of pervert stirring away.\"\n\nI nipped at Sam's back and she giggled.\n\n\"C'mon Hero, just one sweaty crease left. Don't be shy, you big oaf.\" Sam slid a hand down to palm one of her own ass cheeks and pulled it aside gently, spreading her perfect little buns in invitation. I usually left that part, the best part, for last. Sam's tush is one of the finest I've ever seen. And she knew it. She also knew how much I looked forward to wedging my face into it.\n\nI never got my chance because Tracy surprised us both. Her tongue raced up Sam's thigh, across her other butt cheek, and she quickly sank her face into Sam's open ass crack.\n\nWow, she'd had never done anything like this before. Sam wiggled in surprise and my dick lurched in my shorts at the sight. We were rubbing off on Tracy. She was picking up all kinds of tricks on her visit with us. \n\nAs I looked, Tracy seemed quite content. Her bright lavender eyes looked up at me over Sam's perfect, sleek little ass. I watched her jaw work as she licked and sucked lustily at Sam's backdoor.\n\nToo lustily it seemed.\n\n\"Easy, honey,\" Sam winced and giggled, \"Don't just try to jam your whole tongue in me at once. Yeah, that's it. Ease it in my tush nice and slow. Tease me. Then press it in. Tease me again. Then press it in a little more. Perfect. See how I'm opening up for you now, honey? Fuck, that's good.\" Sam was soon moaning as Tracy worked at her rear hole.\n\nI stretched out on my side next to Samantha, content to watch this new development. \n\nBut Sam wasn't going to just let me observe. My cock was bobbing only a couple of inches from her face so she leaned over to suck me into her mouth. I was instantly sheathed in its tight, suctioning heat. Her tongue toyed at my tip while her hand stroked up and down gently. She mouthed me expertly for several minutes while Tracy continued rimming her. \n\nI was getting a a blowjob and a show. Life was beyond good.\n\nThat's when Tracy popped her face out of Sam's ass to look at me. \"Okay, either go get me a dildo or get the hell down here. I want to see something sink into this perfect little bum of hers. It's so cute and so little. It's perfect.\" She grinned at me evilly, \"I want to see it violated.\"\n\nI looked down at Sam for her answer.\n\nSam didn't hesitate. \"Gimme the real thing. Do me, Hero.\"\n\nIn less than 5 seconds, I was nudging the thick, blunt head of my cock at her saliva-soaked backdoor. Tracy watched intently and held Sam's tiny asscheeks open as I pressed myself against her ring. She'd done a stellar job. Sam's small olive star was buttery soft and relaxed. It parted and opened slowly to swallow my above average girth.\n\n\"Aww, I wish I had a camera,\" Tracy murmured, \"something that thick going into your miniature butt is one of the hottest things I've ever seen.\"\n\nI sank halfway into Sam's perfect little ass and Tracy shook her head in wonder. \"Look at you, just swallowing him up with ease. I don't know how you do it. I'm a much bigger girl and I thought I was going to die when he crammed that thing in me for the first time in the shower.\"\n\n\"Well,\" Sam chuckled, \" wouldn't call it 'ease' - it still feels like I'm getting poked by a chair leg. But, I have had a little practice at this.\" Sam gasped and moaned as I took that moment to sink my full length into her ass. \n\nI held still for a minute to let her get used to the penetration. Tracy was right, I'd been fucking Sam's delicious little ass for long enough that I'd almost forgotten just what an amazing sight it was. My overthick dick sinking into her petite tush was almost like a magic show. It barely looked possible.",
        "I began sliding gently in and out of Sam's upturned rump, with my hands softly holding her waist. She was eager already - she rocked back slighly to meet me at each thrust.\n\nTracy just watched us move together, my shaft disappearing and reappearing from Sam's tightly circled ring, \"Crikey, this is hot.\"\n\n\"Trace?\" Sam called, \"Why don't you come up with me so I can do something nice for you too? You can keep watching Hero do me, I promise.\"\n\nTracy was torn between the offer of sex and her first row seat to sodomy. Sex won out but barely. Her eyes never left Sam's ass as she moved up the bed to the spot in front of Sam's face that Sam was patting in invitation. \n\nTracy sat in front of Sam and tilted her hips upwards, spreading her long, sleek model's legs. She exhaled softly as Sam nuzzled at the little blonde mound of her pussy. She bucked her hips when Sam's tongue parted her lips and flicked at her delicate folds. Tracy automatically twisted her hand into Samantha's long dark hair and cupped the back of her head in encouragement.\n\nI sawed my cock in and out of Sam's small gorgeous ass and watched her tongue work at Tracy's pink folds. \n\nTracy was excited to begin with. In fact, in only a few moments her face was scrunched up with pleasure and she was gulping for air. For once, Sam didn't tease her or toy with her or try to drag it out. I think Sam was a little distracted with my cock spearing her tiny rump. She simply made Tracy cum. \n\nI watched as Tracy's entire body rock haphazardly a few times then surge off the bed into Sam's face. She shuddered and clutched both sides of Sam's head, groaning as she came. \n\nWhen Tracy was finished and slouched with a contented smile, Sam turned to look back at me. Her mouth and chin gleamed with a thin coating of Tracy's pussy juice. She nibbled her lip sexily as she arched her rump up, giving me easier access. Then she slid a hand down to play at her clit as I continued lazily piping my entire shaft in and out of her ass.\n\n\"Don't stop, Hero. Just like this. Nice and slow and deep. Ugh, I needed this.\" She was working her ass on me now. Relaxing as I sank into her. Tightening as I pulled out. She's the only girl I'd ever been with who did this. It was like getting a massage while fucking. Fantastic. \n\nSoon I felt her rectum begin to flutter a little along my length too. The flutters became twitches. The twitches became spasms. Then her ass was basically seizing around my cock. When I looked up, Sam's eyes were squinted and her mouth was hanging open. Her breathing was ragged.\n\nI felt her start cumming around me. It was more like a string of smaller orgasms linked together. She mewled and cooed as I fucked her slowly and deeply while she worked from peak to peak. Her ass would relax for a several seconds then snap back to life and clutch my pistoning cock as she tumbled into another orgasm. I made it through three of her little cum cycles before I couldn't hold out anymore. I pushed her flat on the bed, sank myself all the way inside her perfect little ass and jetted cum deep into her miniature backhole. The deep, heavy spurts I poured into her brought on a fourth little cum for Sam.\n\nThe three of us lay like that for a few minutes, none of us willing to move. Finally, Sam looked back at me, \"Okay, out. And gentle on the exit, Hero. I'm a bit tender.\"\n\nI nodded and carefull pulled my still half-hard cock from her rump and she exhaled as I slid free.\n\nTracy had another surprise for us. I watched as she slunk back down from the top of the bed, tucked her pale blone hair behind her ears, and sank her face into Sam's ass again. Sam groaned gratefully.\n\nFelching?! Wow, Tracy had really come a long way in a week. She grimaced a little at what I assumed was her first dose of funky butt cum. But she stuck with it. Soon, she was happiliy sucking and tonguing Sam's sphincter to keep it open, playing at the hole I had loosened.\n\n\"Trace?\" Sam gasped after a couple of minutes.\n\n\"Mmmhmmm?\" Tracy answered with her tongue lodged halfway in Sam's still-open sphincter.\n\n\"Could you... could you keep doing me just like that? You're going to make me go again, sweetie.\"\n\n\"Mmmhmmm,\" Tracy grinned around Sam's buns.\n\nSam arched her hips off the bed again and began to frig herself while Tracy plunged her tongue in and out of her ass. Then Tracy took hold of Sam's small buns with both hands and spread them lewdly. She paused to briefly lick up and down Sam's ass crack every once in awhile, only to sink her tongue home again. It was a beautiful, raunchy, nasty thing to watch.\n\nSam was working towards another cum with Tracy's patient service and her own hand flying back and forth across her clit. Then Tracy moved a hand over and sank a long, slender thumb into Sam's cunt. Sam shivered and whimpered at the added sensation. \n\n\"Fuck. Fuck. Fuck. Fuck. Fuuuuuuuuuuuck,\" Sam keened as she came again, rocking her ass back into Tracy's face. Tracy's fingers dug fiercely into Sam's sleek butt cheeks as she rooted her tongue in the dark brunette's crack.\n\nFinally, Sam's hips collapsed back down onto the bed. She was panting and shaking as she rolled over flat on her back. \n\n\"Get up here, blondie,\" she whispered hoarsely and waved her arms upwards, still panting.\n\nI watched as Tracy crawled up the bed and stretched herself out on top of Sam with a grin. Sam cradled Tracy's proud, flushed face with both hands. \n\n\"That was absolutely wonderful, honey. Thank you.\" Sam pulled Tracy down for a well-deserved but funky kiss. I watched as Tracy's long, pale blonde locks fell forward covering them both. It mixed with Samantha's nearly black hair. Neither of them moved to fix it as their kiss continued. It was a tender moment that made my heart swell.\n\nI scooted over to curl in next to Samantha and we laid together like that, basking in the afterglow. Our were bodies pressed together and breathing as a unit. \n\nIt was severeal minutes later, I thought the girls had both fallen asleep, when Sammie turned and looked up at me. \n\n\"Hero? It's time now.\"\n\n\"Hmmm?\"\n\n\"For the other shoe. The one you've been waiting for me to drop since I told you about... that thing with that guy who hurt Stephen.\" Sam became vague at the end, unwilling or unable to describe the vengeance she'd wreaked in front of Tracy. \n\n[NB: See \"Sam's Short Dark Tale\" for that story.] \n\nI suddenly wished I had a drink in my hand. I glanced at Tracy, laying on her side next to us. She'd propped her head up on one elbow.\n\n\"Want me to go?\" she offered softly.\n\nSam shook her head. \"No, stay Trace. You should know too. You should know how I got like this.\" \n\n\"Okay,\" Sam sighed, \"here's why I dance the way I do.\" She smiled sadly at both of us and continued. \n\nTracy and I didn't say anything the entire time Samantha talked. Jesus, there was nothing to say. When she was done, we laid there quietly.\n\nAfter what she'd been through, it was a testament to Sam's character that she wasn't simply rocking herself on the floor in a padded room somewhere. My deceptively delicate-looking little dark-haired girl was made of stern stuff.\n\nThere was nothing to do but stroke her hair. It seemed to work because Samantha arched her back in appreciation in her feline way. \n\nTracy slid over to curl in behind her. She kissed the back of Sam's neck softly and rubbed her hip. \"I'm so sorry, honey. If there's anything I can do.\"\n\nTears welled up in Sammie's eyes, and she shook her head sadly. \"Some poisons can be sucked out, Trace. Others, well, you just have to wait to break down. This was the second kind.\" \n\nSam looked up at me, her bright green eyes wide and soft and shining. \n\n\"Maybe it's been long enough now, I don't know. I feel better, Hero. I really do.\" As proof, she nuzzled my neck, kissing it gently a few times. She pulled Tracy's hand up to her chest and held it there against her heart. \n\nThen she fell asleep between us more soundly than I'd ever seen my usually restless Samantha ever sleep.\n\nIt was the rest she'd been waiting years for.\n\n**********\n\nAuthor's note: you can read what happened to Sammie in \"Her Uncle's Secret.\" If you're not up for a stiff dose of incest + non-consensual/reluctance then I'll summarize it for you thusly: Sam's knack for seeing what people want got her into trouble with her uncle. It's where a Sam's life took its first dark turn."
    ],
    "authorname": "PacoFear",
    "tags": [
        "romance novella",
        "anal sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/heros-life-ch-14"
}