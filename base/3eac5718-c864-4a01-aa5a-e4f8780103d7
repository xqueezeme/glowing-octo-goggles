{
    "title": "Love Knows No Color Pt. 02",
    "pages": [
        "I woke up in the morning, naked, sunlight shining in my eyes, to the smell of bacon and eggs and the beautiful sound of a woman singing. Somewhere a stereo was playing Michel'le, and the woman was singing along. \"There's something you should know. There's something in my heart, something in my heart, it's got me hooked on you...\"\n\nI looked around the room, from the king bed in which I lay, to the candles around the room. Only the one on the night stand was still flickering. On the wall at the foot of the bed was a low dresser, topped with a wide mirror. On the dresser sat various bottles of lotions and fragrances, and a couple of jars of hair grease. There were paintings on the walls, with an African theme. Women in native dress, with headdresses. One in particular caught my eye. She was sitting on what looked like a wicker chair with a throne like back, hair in an afro, naked with her legs folded under her. She looked familiar somehow... I looked down at the floor for my clothes, and saw a pair of red heels at the foot of the night stand.\n\nThat's when I remembered. Shavonda! Did I really spend the night with her? The memories came flooding back. The rainstorm, the candles, those incredible eyes watching me as she devoured my body...\n\nI wearily eased out of bed and ambled into the bathroom. I found some mouthwash and took a swig. I hoped Shavonda wouldn't mind. I didn't want to offend her with morning breath.\n\nShe was now singing Morcheeba: \"as you well know, you better take care. Treat me with respect because love is rare...\"\n\nI strolled on out into the kitchen, following the delicious smells. I was getting hungry. There she stood, at the stove, in nothing but a t shirt just long enough to cover her ass, hips swaying seductively to the music as she cooked. Singing Macy Gray this time, \"After what we did the other night, I wanna be with you for all my life. And I'm so glad you're a freak like me...\" \n\nShe was unaware of my presence as I walked up behind her, saying, \"I'm so glad too.\" She whirled around and put her arms around my neck and kissed me. \n\n\"Good morning, baby,\" she said, smiling. \"I was going to bring you breakfast in bed.\" \n\nI grabbed her ass, lifting the hem of the shirt in the process, feeling her soft bare skin, and pulled her to me. We kissed again, lips open and tongues darting.\n\nShe broke the kiss and turned back to the stove as I grabbed her hips and ground my pelvis into her booty. \"Boy, you better stop that or I'll burn your breakfast. The eggs and bacon were done and sitting on a plate, and she had pancakes frying in a skillet.\n\nSoon she was done with the cooking, and she set two plates at the kitchen table where I had taken a seat. \"What do you want to drink?\" she asked. \"I have coffee, Dr. Pepper, milk, orange juice, and Kool Aid.\"\n\n\"Kool Aid's fine,\" I replied. She pulled a pitcher from the refrigerator and poured two glasses, handing me one. \n\n\"This may be a little stronger than what you've used to,\" she said. I took a sip. It was sweet, really sweet. I could imagine the spoon standing on its own as she stirred it when she made it, there was that much sugar in it. But it was good. \n\n\"Ghetto Kool Aid,\" she laughed as she watched my facial expression. \"We like it sweet.\"\n\nShavonda sat down, breasts jiggling sexily under her shirt. She noticed me staring and laughed, \"If you're going to stare at my tits, boy, then I better take this off.\" \n\nShe lifted the shirt over her head. I was enjoying the dark chocolate tone of her skin. We'd made love in candlelight, and this was the first I had seen her naked in daylight. I was smitten. She sat there, eating her breakfast, watching me with those beautiful brown eyes. \n\n\"Boy, you better eat.\"\n\nI picked up a forkful of scrambled eggs, they were delicious. In fact, everything about that breakfast was delicious.\n\n\"Did you enjoy last night?\" she purred, \"Because I sure did.\"\n\n\"You were wonderful. It was one of the most beautiful experiences of my life. I can't believe you swallowed me.\" I answered.\n\n\"I wanted to. I needed to taste your nut. Besides you'd last longer on the second nut. I didn't want you to come too fast inside me.\"\n\nI replied, \"Von, I held back as much as I could.\"\n\n\"I know,\" she replied. \"You have some great self-control, to be able to ride the edge like that.\"\n\n\"You noticed that?\" I was incredulous. She was that in tune with my reactions the first time?\n\n\"Yes. And I appreciate the tenderness you showed last night. And I'm glad you stayed over. I know you have a history of kicking people out of your bed.\" Shavonda sighed. \"But you didn't leave me.\" \n\nBreakfast done, she cleared the plates and put them in the sink. She came back to the table, pulled her chair over to mine, and sat down facing me. She took my hands in hers and placed them on her lap, looking right into my eyes as she asked, \"So where do we go from here?\"\n\n\"We enjoy what we have,\" I replied.\n\n\"Jason, I am a strong black woman. Everything I have I worked for. I don't need a man to live a full life. But I want one. And you are the man I want. Even if it means I am your booty call, the one you see in the middle of the night when you're lonely. If that's what I can have that's what I will take. You wouldn't be the first. But I want more.\"\n\n\"I would never do that to you, Von. You are my friend. We were friends long before we became lovers. And I couldn't do that to a friend. If we pursue this, and I want to as much as I think you do, we will go face the world, hand in hand, proudly. I will not keep you under wraps. If you are my queen you will be my pride and joy. I will never be ashamed to be seen with you. Believe that.\"\n\nTears welled up in her eyes as she breathed a sigh of relief. \"Thank you,\" she whispered.\n\nI felt my heart break just a little. I never wanted to see my queen cry.\n\nRegaining her composure, she said, \"You do realize this won't be easy. A lot of people aren't going to like us. They're going to harass us. They will try to break us apart. You may lose friends and family because of me.\"\n\n\"If they were truly my friends, they'd want to see me happy. Anybody who has a problem with you and me together, was never truly a friend in the first place,\" I said with conviction. \n\nMy life was about to change. I knew it, she knew it. But she had experienced it before. I hadn't. She had to live with prejudice every day. I could walk away and go back to my old life and nobody would be the wiser. Except that I couldn't. Shavonda had a hold on me already, a hold that I couldn't, and didn't want to, break.\n\nShe leaned in and kissed me, passionately. Holding the back of my head so I couldn't escape. Playing in my hair with the other hand.\n\n\"Let's set some ground rules,\" she said. \"First and foremost, don't EVER call me or my family out of our race. No matter how mad you get just don't do it. If you ever call me nigger, tar baby, spade or coon it will permanently damage our relationship. I don't care if you call me your chocolate morsel, Hershey kiss, or other terms of endearment. I know that's part of our attraction to each other. In return, I promise never to call you cracker or honky. I do reserve the right to call you white boy or white bread.\"\n\n\"Fair enough,\" I said. \"That won't be hard for me.\" She didn't know it, but I tend to be cool in arguments, and try to avoid name calling. I prefer to walk away and cool down rather than say something hurtful I don't really mean.\n\n\"I want you to always come inside me. I don't like facials, especially when I've had my hair done. And I would rather not have come all over my tits and ass. I don't care if it leaks out of me and runs down my leg, as long as it was inside me.\"\n\n\"I can deal with that.\" \n\n\"Besides,\" she said, as a shadow crossed her face, \"I can't have a baby so you don't have to worry about that. It's a long story. I'll tell you about it some time.\"\n\nI nodded. I didn't like the sadness I saw in her eyes when she talked about having babies. I'd noticed it last night, and there it was again.\n\n\"I have some errands to run today,\" she said, \"so we can't start anything now. I have a spare toothbrush you can use, and you are welcome to use my deodorant as well.\"\n\n\"What? And smell like a girl?\" I exclaimed in mock indignation.\n\n\"You ate the hell outa that pussy. Twice. And you worried about smelling like a girl? Boy, go use that deodorant!\" She laughed, then added, \"And while you're at it do something about that hair.\" I realized that during the night somehow I had lost the pony tail holder, and that my unruly locks probably resembled Einstein more than a little.\n\n\"Better yet, I have some hair bands. Let me brush it out for you. I'd love to play in that hair. When was the last time you had somebody brush your hair for you?\" Nobody had been interested in my hair before. Not like that.\n\nWe washed each other up. The smoldering fire almost ignited again but we held it in check. I watched her dress, shorts, sandals and a V-neck t shirt. Evidently she loved showing cleavage. I loved her showing it. After putting on my clothes, retrieved from the living room floor where they lay strewn about from last night, I applied her Secret to my underarms. \n\n\"You smell pretty,\" she laughed. \"So do you,\" I replied.\n\nI sat in one of the kitchen chairs while she brushed out my long hair, and banded it back into a tail. \"One of these days I'ma have to braid this sucker. Would you like that?\" \n\nShe was obviously enjoying herself.\n\n\"I love your hair too,\" I said. \n\nShe laughed, \"This is what it looks like when I don't straighten it. You'd be surprised how long it actually is when it's not all kinked up.\"\n\n\"First we have to stop by the store,\" she continued. \"You'll get to meet my cousin and aunt; they hold it down on weekends for me. Then we can swing by your place and get you a change of clothes. You're coming back here tonight for round two. If you want, we can get your car on the way.\"\n\nWe left in her car, and soon arrived at her store. As we walked in, a small, chubby girl in her early twenties greeted us. She was light skinned with a caramel complexion. \n\n\"Hi, Von. Who you got with you?\"\n\n\"Tamika, this is Jason. He's a friend of mine.\"\n\n\"Pleased to meet you, Jason.\" Tamika gave me a fist bump and turned to the back of the store and yelled, \"Velma! Von's here!\"\n\nAn older lady, a couple of shades lighter than Von, hair in locks, came out of the bead covered doorway to the back of the store, saying, \"Von, what you doing here? Take some time off. We got this.\" She stopped when she saw me. \"Ooh, Von's got herself a white boy! And he fine as hell!\" She sniffed the air. \"Hey Von, why he smell like Secret? Did you...\" Velma looked at me, then Von, then back at me. I could feel myself turning red. Von grinned sheepishly. \n\n\"Velma, this is Jason. You're going to be seeing a lot more of him around here.\"\n\n\"Ooh she did! She turned that boy out!\" Velma turned to me. \"Welcome to the family. Gimme a hug.\"\n\nShe embraced me in a friendly hug. It was official. I was accepted at the store. I looked around, marveling at the various items on display. I instantly liked this place. Liked the ambience. Liked the aroma of incense burning, the jewelry case filled with handmade bracelets, pendants and necklaces, the photos and paintings hung on the wall. I noticed a rack of cds in the corner, and went over to browse the music selections. \n\n\"If you see anything you like, just take it. My present,\" Von said. \"Then come in the back.\" I picked out an Enigma cd, then followed Von into the back room. \"This is where we make a lot of the jewelry,\" she said, pointing out trays full of beads and semi-precious stones. \"We can make scented candles over here,\" she pointed at the candle molds and a small machine used to melt the candle wax\n\n.\n\nI hadn't noticed Von had brought in the envelope of photos I'd shown her last night. She handed them to Velma, who'd followed me back and was seated at a small drawing table. \"Velma, tell me what you think of these.\"\n\nVelma pulled the photos out and gazed at each one. \"These are beautiful,\" she said, \"Who took them?\"\n\n\"Jason did. I think they would fit in well with the other stuff we sell, maybe attract a few more people into the store.\"\n\nVelma looked at me. \"Jason,\" she said, \"Would you mind if we used these? We'll pay you a percentage on every one we sell.\"\n\n\"Of course not. I have many more as well. Let me know and I'll bring the SD cards by.\"\n\nI was flattered they liked my photos. They were something I had done for enjoyment, never dreaming anybody would like to buy copies.\n\nWe left the store, and I directed her to my house. As we got out of the car, I heard a voice call from across the street. \n\n\"Hi, Jason. Who's your lady friend?\" \n\nIt was Mrs. Zucchero, the neighborhood busybody. She's harmless but she keeps an eye on things. I guess when you get to be in your 70s, you need something to do. She was sitting with her husband Guido, a retired pizza shop owner. His sons had taken over the business, and I ordered pizza from them often. It was great pizza, even in a city full of great pizza shops. We walked over to say hi, and I introduced Shavonda.\n\n\"Shavonda, where have I heard that name?\" Mrs. Z said to herself. \n\n\"Isn't there a store over in Shadyside called Shavonda's Creations?\" Guido asked.\n\n\"That's right,\" said his wife. She turned to me. \"Jason, you remember that little squaw statue we have, the one with the wolf at her side? That's where we got that.\"\n\n\"I am the owner of that store.\" Shavonda beamed proudly. \"Pleased to meet you.\"\n\nAfter some small talk, we walked back across the street and up the steps to my porch. Turning the key, I said,\" Welcome to my humble abode. It ain't much but it's all mine.\"\n\nShavonda stepped inside, checking out the rack of cds that dominated one wall of the living room. \n\n\"I'll be right back.\" I said bounding up the stairs. I quickly grabbed a clean set of clothes, plus a pair of work pants, one of my uniform shirt, my Nikon and tripod, and stuffed them in my duffel bag. I also grabbed my work boots, then came back downstairs. Shavonda had moved on to my bookshelf, and was admiring my collection. \n\n\"Would you like to see my work of art,\" I asked. She nodded and I led her by the hand to the cellar. When I turned the lights on, she gasped. There it was, my model railroad in all its glory. I have been working on it, with help from a couple of friends, since I bought this house. It featured trains winding through mountains, with a foot-high bridge over a canyon as the centerpiece. The trains work their way from the train yard at the bottom of the canyon, to the bridge, then descend back to the lower level.\n\n\"Jason that's beautiful,\" she exclaimed in awe. \"Does it run?\"\n\n\"Yes, but not in the way you'd think. We run this one like a real railroad. We don't just let the trains run in circles. They actually work moving freight from place to place.\"\n\nWe stayed down there for a while and I showed her how things worked. I even let her take a short train over the mountain.\n\nWe were getting hungry, and Von wanted to get back to her place, so we locked up, waved bye to the Zuccheros, and got in the Cruze. We stopped for a Zucchero Brothers pizza on the way back, and happily sat on Von's couch, eating pizza, drinking rum and Dr. Pepper, and watching a movie. It felt good to have her snuggling under my arm. I let my free hand roam Von's body as she undid my belt and fished out my manhood. We made out for a while, kissing and nibbling on each other's lips, necks and earlobes. Hmmm, found another of her spots, right where her neck and shoulders meet.\n\nShe was stroking me up and down, and I was getting rock hard all over again. I looked into her eyes and saw the same smoldering look from the night before. I grabbed the hem of her shirt and lifted it over her head. She let go of my penis just long enough to get her arm out of the sleeve then went back to stroking me. I gazed upon her black bra, barely containing those beautiful titties, then up into her eyes again. Those eyes, they just draw you in...\n\nI reached around her back, unsnapped her bra, then lifted the cups free. Her beautiful chocolate tits jiggled free, nipples puckered. I ran my thumbs over each one, delighting in their soft, rubbery texture. Shavonda moaned softly, still stroking my meat. I was leaning in to take one of the titties in my mouth when there was a loud knock at the door.\n\n\"Von! Open up Von! I know you're in there,\" yelled a loud female voice. Shavonda jumped up quickly and put her shirt back on. I put my dick back in my pants and zipped back up. Shavonda quickly stuffed her bra between the couch cushions. \"Shavonda Jenkins you open up right now!\"\n\n\"Oh, shit, it's my ma!\" she exclaimed, rushing to the door. \n\n\"Your Aunt Velma tells me you got some white boy up in here!\" The woman who steeped through the door looked just like Shavonda, but with glasses, a few extra pounds and 20 years older. She stopped when she saw me, speechless.\n\n\"Hi, I'm Jason,\" I grinned sheepishly, turning red. \n\nThe lady looked at me, then at my duffel bag, back at me, then at Shavonda. My dick was still building a tent in my pants, and Shavonda's nipples were poking through the t shirt. It was obvious what we'd been doing. Her mom's gaze finally settled on the couch cushion next to me. The strap of Shavonda's bra was poking up from between the cushions. She strode with purpose to the couch, and pulled the bra free, glaring at me icily.\n\n\"I don't suppose this is yours,\" she said to me, dripping sarcasm.\n\n\"Ma, I'm 30 years old. I can handle myself,\" Shavonda protested.\n\n\"Boy, you better not hurt her. I swear to God you better not hurt her. She's been through too much.\" Mom's tone was threatening. She glared at Shavonda. \"Girl, what were you thinking?\"\n\nShavonda said, \"Jason is a good friend. He is good to me. He is a good man. Mama please let him be. Don't scare him off. Give him a chance.\"\n\nA thought came into my head. Maybe I could defuse the situation.\n\n\"Ma'am, could you do me a favor?\" I pleaded.\n\nMom turned at me with her finger in the air like she was going to cuss me out, but she was speechless. I had broken her train of thought. After a long pause she snapped, \"What?\"\n\n\"Von and I don't have any pictures together. We can't find anybody I trust enough with my camera. Would you take a few of us on the porch?\" I rose and grabbed my Nikon from the duffel bag.\n\n\"Well, OK.\" She sounded a little calmer. I handed her the camera and showed her how to work it. We all walked to the porch, where Shavonda and I struck various poses as her mom snapped away.\n\n\"Thank you,\" I said, taking the camera and showing her the photos she'd just taken. \"If you'd like copies of these just let Von or me know.\"\n\nShavonda asked, \"Ma do you want something to drink?\"\n\n\"Kool Aid if you have it\" Mom was calm now. She turned to me as Shavonda quickly went to get us all drinks. \"I'm Althea,\" she said. \"Sorry to meet you like this.\"\n\nShavonda returned with a tray and 3 glasses. We all sat around a small round table on the porch, sipping Kool Aid.\n\nAlthea looked at me and asked, \"You from the South?\"\n\n\"West Virginia,\" I answered.\n\n\"I Knew it!\" she said. \"What are your intentions toward my daughter?\"\n\n\"I would like to take care of her, to be her strength. I never want to bring her shame or disrespect.\"\n\n\"Good answer\" I could sense her attitude softening as I tried to put her at ease.\n\nWe talked for a long time on the porch, watching the sun set through the trees. Over Shavonda's protests, Althea told me about Shavonda's dark past, about the baby she was never destined to have, how when she was pregnant, her boyfriend at the time turned abusive. One day, in a fit of rage he had punched Shavonda repeatedly in the stomach. She was 5 months pregnant at the time.",
        "The cops were called, and a kind lady cop had taken the info. Police were on the lookout for the boyfriend, who had taken off in his car. After they left, Shavonda started throwing up blood, and tried to drive herself to the hospital. The boyfriend saw her and ran her off the road and over a hillside. Luckily somebody had witnessed the accident and had called an ambulance. They got Shavonda to the emergency room, but it was too late to save the baby. She had suffered several cracked ribs in the beating, and it took a while for the wounds to heal. But permanent damage was done and Shavonda was no longer able to conceive.\n\nThe boyfriend was later spotted by police and took off. The cops gave chase, but broke it off when speeds reached over 110 mph. Eventually, the boyfriend lost control of the car and collided head on with another vehicle carrying a family of four. There were no survivors; six dead including the baby, over an argument nobody would have remembered the next day. I remembered seeing the crash on the news, and hearing of the car run off the road. I was now looking at the victim. She hid it well. I had no idea. That would explain the shadow across her face every time having a baby was mentioned.\n\nAbout the same time, Shavonda's Granddad passed away from a massive heart attack, leaving a widow behind. Shavonda had moved into the house, this house, to take care of her grandmother; two women burdened by loss who turned to each other for comfort and support. Her grandmother, still grieving, had died heartbroken a year later. Shavonda inherited the house. She'd somehow managed to keep the store afloat, through the help of family, and it became even more important to her, providing some much-needed consistency in her life. 4 years later, Shavonda had bounced back. She was a strong black woman, but her mother still worried over her.\n\nShavonda sat dejectedly as her mother recounted the tale.\n\nI had gained a new respect for Shavonda, and her mother. And I promised never to hurt her. Especially not like that. My hope at that point was that our relationship would blossom and she would be the stepmom to my children. Through them, I could give her the children she couldn't have on her own. But first, I had to make sure we were a permanent thing.\n\nHer mother left shortly after dark, saying, \"Have fun kids.\"\n\nWatching her leave, Shavonda said to me, \"That was quick thinking. You calmed her down to where she would talk to you. You're in now. She likes you. If she didn't she'd have run you off. And stayed here long enough to make sure you didn't come back.\" \n\n\"But my car...\" I protested.\n\n\"Doesn't matter. She'd have made you walk.\" She yawned, \"I feel like a bubble bath. You in?\"\n\nI chased her into the bathroom where we undressed each other as the tub filled. The cloud had passed, and she was playful again. She said, \"I hope you brought your Dark Temptation.\"\n\nWe sat down in the bubbles, her back to me as she sat between my legs. I sensuously washed her back, then we turned around as she washed mine. \n\n\"You need a shave,\" she said, getting out of the tub. She picked up a lady's razor from the sink and climbed back in the tub facing me. After lathering my face with bubbles, the slowly carefully scraped away the day-old stubble from my face. I had never had anybody shave me before. Shavonda did it with love. She's a keeper, I thought\n\n.\n\nWe finished up with a long playful wash of our front sides. I paid particularly close attention to her breasts and vagina area. She really enjoyed the attention. She lifted her feet out of the soapy water and I made sure that I gave each one a massage as I washed it.\n\nStepping out of the tub we dried each other off. \"Would you like to lotion me?\" she asked. \"Can't have your queen all ashy, can we?\"\n\nI followed her to the bedroom, and soon was rubbing cocoa butter into her soft ebony skin. All of it, even the secret places. I rubbed her feet again, and she moaned her appreciation. \n\n\"Jason you have such wonderful hands,\" she purred. Those eyes were boring into me lustily again as I rubbed the lotion on her breasts and belly. She reached in the bed stand and pulled out a bottle of baby oil. \"Here, now you can use this.\"\n\nShe squirted some baby oil into her hands and rubbed in into my chest, I did the same to her. We rubbed each other's backs in the dim light. Then she got up.\n\n\"Something's missing,\" she whispered. \"Wait right here.\"\n\nShe left the room, soft r&b music began playing. She returned, with my Dark Temptation in hand, spraying me lightly as she passed. Setting the spray can down, she began to light the candles in the rom from last night, pulled a couple of incense sticks from a dresser drawer and lit them too. The room now smelled of incense, Axe, and baby oil. She opened a tube of glitter and threw some on me before dumping the rest on herself. \"Your queen is now golden,\" she said, climbing back into bed.\n\nThe glitter shimmered in the candlelight, like 1000 points of light, as she slid her way up my well-oiled body. The sensual feeling was something I'd never experienced before. It was almost like being coated in her juices. It was that slippery. We slid over each other's bodies for a long time, rolling naked on that huge king bed. Lips and tongues met, hands wandered their way into sensitive spots, all lubricated in oil. Things were heating up. \n\nBreaking our kiss, I started run my lips over her body, nibbling, biting, sucking. Head to toe I went. Down the front, kissing a trail between her heaving breasts, down to her pubic hair, over to her hip, down her inner thigh and calves to her feet. Purposely avoiding the one place she most wanted to be kissed. Noting her reaction as each area was stimulated. I was going to find all her spots. \n\nI kissed down her ankle, the arch of her foot, then took each toe into my mouth to suck for a minute. Finishing the one side, I moved to the other foot and repeated the process in reverse. Shavonda was going crazy, moaning, writhing, calling out my name in her passion. I kissed my way up from her toes to her inner thighs, once again bypassing the sweet spot. She was going crazy with lust. Her hands grabbed my head, trying to push me down into her crotch. But I was having none of it.\n\nI worked my way back up her body. This time, I took each nipple in my mouth in turn, and gave them a good hard suck before moving on. She shuddered in ecstasy, her moans getting louder. I worked my was up to her neck, kissing the sensitive spot where her neck met her shoulder. Nibbling on her earlobe, I whispered in her ear, \"Turn over, boo.\" \n\nShe rolled on her stomach, obediently. I started kissing and licking my way down her back. Down her spine, moving over to her hip, then down her asscheek, the back of her leg. She jumped in pleasure when I kissed the back of her knee. Found one, I thought mischievously. I continued to kiss down the back of her leg, to her heel and the ball of her foot. \n\n\"Jason, Jason, oooh Jason!\" she moaned writhing. \"I don't know how much more of this I can take,\" she whined.\n\nI stopped. Her head lifted from the bed and she looked at me over her shoulder. \n\n\"Boy don't you DARE stop!\" she hissed, eyes aflame with lust. I continues to work my way up the back of the other leg, hearing her gasp as I licked the back of her kneecap. Her shiny, oiled ebony skin was really turning me on, the way my lips slid easily in the baby oil. I continued to work my way up until I got to the bottom of her asscheek. I playfully nipped at the spot where her cheek met her inner thigh. The dam burst. She was in an intense, all out orgasm. Aha, I thought, mother lode...\n\nI rested, watching her as she rolled over, panting, gasping. Every muscle in her body seemed to be spasming with contractions. I figured I'd better let her catch her breath.\n\n\"How, how, did, you, do that,\" she gasped, looking at me in wonder.\n\n\"Do what?\" I innocently asked. \n\n\"How did you take me over the edge without touching my pussy?\" She lay gasping for air, heart pounding. \"I don't think I ever came so hard!\"\n\n\"You want more?\" I asked, toying with her.\n\n\"No, I want revenge,\" she gasped.\n\nI let her lay there, catching her breath for a minute, then I moved down the bed with my head positioned at her thighs, my pelvis by her head. Gently I spread her legs and pulled her pussy lips apart. \n\n\"Ooh,\" she moaned. \"Please.\" She was pleading now. Every nerve ending was sensitive. I had her right where I wanted her. I Stuck out my tongue and touched her clit. \"Ooooh, Jason!\" She exploded in another orgasm. She had been wanting me to taste her there all along. Now she was too sensitive to take it. I laughed evilly.\n\n\"Jason,\" she said coldly. \"I'ma get you good. That was not fair.\"\n\nI was laughing hard. She turned around and said, \"Look me in the eye, Jason. Don't look away until I say so.\" Her hand was on my rock-hard dick, and she gave it a hard squeeze. \"You understand.\"\n\nI nodded mutely.\n\nShe stared at me as she lowered her head over my penis and took its length in her mouth. She had glitter on her forehead, in her hair. It sparkled in the flickering light. Bobbing her head, she nibbled on my shaft with those soft brown lips. Her tongue started to work its magic. She nibbled on the sensitive spot under the head. Now it was my turn to plead. She reached up with one hand and started to flick my nipples. Chills shot up my spine and I bucked my hips wildly. She laughed, mouth full of white dick. The vibrations were taking me right to the edge. Then, she stopped. \n\n\"Do you want me to finish, Jason?\" she asked sweetly. \n\n\"Yes! Yes!\" I moaned in frustration. \"Finish me off! Please!\"\n\n\"Mouth or pussy?\"\n\n\"I don't care! You choose! Just take me over the edge!\"\n\nShe had my member in hand, tapping the shaft with her fingers. It was driving me wild.\n\n\"Eeny meeny miney moe.\" She teased me. \"Catch a white boy by the toe. If he hollers make him say he'll eat your pussy every day.\"\n\n\"Yes! Anything you want!\"\n\n\"That's better. Let's see. Mouth? Pussy? Mouth? Pussy?\" Her fingers continued their drumming. I was right on the edge now. \"Well, I kind of like the way your nut tastes.\"\n\nWith that, she lowered her lips to take my head in her mouth. Her tongue flicked around the underside of the head. She gave a good hard suck. She looked in my eyes, lifted her head.\n\n\"Come for me, Jason.\"\n\nShe lowered her head again, eyes watching me. Her tongue swirled. I was right there teetering on the edge, but I couldn't go over. She bobbed up and down my shaft, then swallowed me whole. That was all it took. As she bobbed her head back up, I came in a torrent. It was the most intense orgasm I'd ever had. I looked at her with pure lust as she swallowed my seed, her hand milking me dry. She smiled at me as she raised her head once more, hand still pumping my spent rod.\n\n\"Yummy,\" she said. \"I could get used to this.\"\n\nI lay there panting, trying to control my breathing, trying to slow my racing heart.\n\n\"Your eyes are so sexy when you come,\" she said, her smile sticky with come. \"They have a fire in them.\"\n\nI nodded, and looked at the ceiling.\n\n\"Did I tell you to look away?\"\n\n\"No,\" I said weakly. \n\n\"Don't think you're getting off that easily, mister. My pussy still needs attention. Eat me then fuck me. Fuck me then eat me. Doesn't matter to me. But you WILL eat me tonight, and you WILL fuck me tonight.\"\n\nShe was toying with me, and I was enjoying every minute. Our relationship would be like that. We would each have our dominant and submissive moments. We would switch roles. We would mischievously tease each other. But it was always done in pure fun, with respect for the other. If I had a problem with what she was doing I would have told her. She'd have done the same for me.\n\n\"Let's see, eat me first? Or fuck me first? I can't decide.\"\n\n\"I don't think you get to make that choice. He does,\" I pointed out, motioning toward my spent sausage. \n\n\"Good point. He's tired. We'll let him rest while I get mine.\" Grabbing a pillow, Shavonda slid her oiled brown body up mine, dragging her nipples up my chest. As her mouth reached mine, she kissed me. Her hips straddled mine as she slid the rest of the way up my body, leaving a trail of her juices up my stomach. She leaned back on her feet so she was straddling my chest with her legs doubled under her body. Sliding her knees under my arms, she placed the pillow under my head.\n\n\"That'll give you support while I ride your tongue.\" She slid forward until her pussy was inches above my mouth. \"Work your magic, big boy,\" she cooed.\n\nGrabbing her hips, I stuck my tongue between her well lubricated folds. Her pubic hairs tickled my nose as I started to lick her slit. She purred as I hit her clit. I sucked on it using my lips and tongue. I had her juices in my nose and I could smell her arousal every time I breathed in. I could see the sparkle of the glitter above me as she ground her pelvis into my face. Her upper body was gyrating, and those beautiful tits were swinging above me. Her head was tilted toward the ceiling as she moaned her approval. I pulled her hips into me and stuck my tongue as deep into her love hole as I could.\n\n\"Ohh, lover boy, just like that. Lick my black pussy like you own it. Make me come all over your face. Fuck me with that tongue.\"\n\nI worked my tongue in and out of her, trying to swirl it like she had done to my dick. I rubbed my upper lip over her clit, watching her body move as she rode me. My hands kneaded her hips as she bounced on my tongue. She bucked in the candlelight, sparkling, bouncing, coating my face with her juices. She was grinding my head back into the pillow, lost in passion. I was loving every minute of it.\n\nI could sense she was getting close. She was moaning incoherently, calling my name which was about the only intelligible word she was saying. I slid my hands down to her asscheeks and squeezed them repeatedly as she rode my face even harder. She was right on the edge. I continued to lap up her cream, tongue inside her, lip nibbling on her pleasure center. My hands moved down to the bottom of her cheeks, and I worked my fingers toward her thighs. It was time to bring her home. My fingers reached that newly discovered sweet spot right where her cheeks met her inner thighs. I started to massage that spot. The effect was immediate and devastating.\n\n\"Oh shit!\" she shuddered. \"Ooooooh!\" She stopped thrusting her hips, her back stiffened and arched as she leaned her head back. \"Ooooooh fuck Jason.\" Bathing my face in her juices she collapsed on top of me. We both started laughing hysterically.\n\n\"Wow, just wow, Jason,\" she exclaimed breathlessly. \"That was great!\" She rolled off me and slid down to kiss me. There we lay, her arm around me, heads at the foot of the bed, feet at the headboard. Her leg was thrown over mine, quivering like jello.\n\n\"I couldn't resist that spot,\" I laughed, kissing her deeply. She returned the kiss passionately, her tongue forcefully probing my mouth. Breathlessly we came up for air. My rock hard manhood pulsed against her leg, wanting in on the action. \n\n\"Looks like somebody woke up,\" she said, wrapping a hand around it. Slowly stroking its length, she purred, \"I want you to watch me put him in my black pussy.\" She rose and straddled my hips, and slowly lowered herself as she guided my penis between her labia. She rubbed it against her clit, shuddering with pleasure.\n\n\"I want you to watch him slide inside me, where he belongs.\" Pressing me against her pink opening, she removed her hand and slowly slid her body down my shaft. I lay there enraptured by the sight of her pussy devouring my pale manhood. The contrast in our skin tones thrilled me. It still does, to this day. I never get tired of watching myself disappear into her ebony folds.\n\nShe was tight, warm, and ready for me. Her body offered no resistance as she sat all the way down on my hips. In one movement, she had me buried to the hilt in her grasping hole. I could feel her muscles spasming around me, as she asked, \"Did you enjoy watching your white dick disappear in my tight wet pussy? Does the color difference thrill you? It thrills me. I love watching our skin together. It is so beautiful. We look good together.\"\n\nShe slid herself up and down my pole a couple of times then stopped. \"I want you Jason. But you wore me out tonight. I don't have the energy to ride you. We'll have to flip if you want to fuck me.\"\n\nI could tell she was tired. Her legs were still quivering. I pulled her close to me and rolled us over. I was on top now, thrusting gently into her tight vagina as she spasmed around me. She draped her arms over my head and pulled me into another kiss. \"I love you Jason Waite,\" she whispered as I gently made love to her. Her hips rolled gently under me as I stroked my way in and out. I took my time, slowing or stopping when I felt close to coming. I didn't want it to end. She felt so good, writhing beneath me still slick with oil. I looked into her eyes. She looked contented, like this was where she belonged. In bed with me. \n\nWe made love in this slow, gentle rock as her strength slowly returned. The fire was not out in her, merely smoldering, waiting to burst into flames again. As the sensations overtook her, she moaned softly. Her legs wrapped around me as she came back to life. Her hips began to thrust back against me as her passion began to build. She matched her tempo to the soft r&b emanating from the living room stereo. We made love to the music, our needs building, as we slowly made our way toward release. \n\nHer legs locked around my ass, she began pulling me deeper inside her with her feet. Bucking her hips upward to meet me. She met me thrust for thrust. \n\n\"I'm going to come,\" she moaned. \"Jason, make me come. Come with me. I want your nut in my pussy.\"\n\nWe were thrusting into each other harder now. The tempo was quickening. I could feel her muscles tense up. My toes were curled, my hands were gripping her hips, clenching, as I watched her dark titties bounce. I was desperately holding back for her. I looked into her eyes again as I took her over the edge. They had a look of pure lust. Their whites glowed in the flickering candlelight. They stared right through me.\n\n\"Aaaagh. Fuck me Jason. Fuck me harder. Harder.\"\n\nI put all I had into the last two thrusts as her inner muscles tightened and spasmed around me. Her back arched off the bed. Her legs pulled me deep inside her and wouldn't let go. I came. Hard. Again. She always could do that to me. Trapped inside her dark pussy, I pushed my way as deep as I could, held in place by her feet, and unloaded everything I had left in me. Shot after shot flooded her clutching hole as she pulled me down on top of her with her arms. We were one quivering, shaking mass on the bed as we lost all control.\n\nWe lay spent in the afterglow, bodies entwined. I didn't want to leave her warm coital embrace, but part of me wanted to pull out of her just to watch my white sperm leak out of her pink hole and run down her ebony leg. The sight of her body in the aftermath excited me the night before. It still excites me. Just the sight of warm semen trickling down her leg brings back memories of how good she felt. How good she still feels. And they stir the lust all over again. I am in love with her. She is my queen.\n\nI resisted the urge this time. It felt too good to still be inside her, feeling her pussy squeezing me, milking every drop of come from my wilting penis. We lay like that, for a good long while. Staring deep into each other's eyes. Smiling. She giggled like a schoolgirl.\n\n\"Boy you keep that up and I'll never let you leave,\" she whispered.\n\n\"I don't want to leave. You're too beautiful.\"\n\nWe lay there talking. Hands roamed each other's bodies. We were learning each other's quirks. We were exploring. We both had open minds and the innate desire to please the other. We were meant to be together, and we both knew it.",
        "We made love once more that night. Her on her back, me on my side, legs entangled like scissors. I thrust into her as I rubbed her clit until we both came again. I fell asleep inside her.\n\nWaking up in the predawn hours, we were still entangled. The spring morning had a chill in the air. I disentangled myself, and pulled the bedspread from the other half of the bed over our naked bodies. I snuggled against her dark warmth, arm around her, hand cupping her breast, hips against that fine booty. I kissed her neck softly. She snuggled her booty into me and mumbled something in her sleep. I drifted off contentedly, dreaming of her. \n\nWe awoke in the morning light; birds were singing outside. Sometime during the night she'd gotten up and turned off the music.\n\n\"Good morning,\" I said.\n\n\"Where you been all my life?\" she asked, staring into my eyes. We lay awhile contentedly in each other's arms.\n\n\"That painting on the wall, she's beautiful,\" I said. \n\n\"The nude?\" Shavonda asked. \"Yes she is. I saw her and had to have her.\"\n\n\"She looks just like you, beautiful.\" I continued. \n\n\"No, she doesn't.\" She smiled bashfully. \"She's light skinned, I am not. Jason, I know I am not beautiful. Pretty, maybe. I am dark-skinned. Dark-skinned women are not beautiful.\"\n\nI stared at her, mouth agape. She WAS beautiful. She didn't know just how beautiful. In a room full of women, all wanting to be with me, I would have picked her. Even if I'd never met her before, online or in person. I was lucky to be with her. I told her so.\n\n\"Jason, you are so sweet. You make me feel good just being here.\"\n\n\"Don't ever doubt your beauty, Von,\" I replied. \"Your color makes you even more beautiful, not less. I'd rather be with you, or somebody who looks like you. I always knew that, even back in high school. But I never thought I'd have a chance. Thank you, Von, for showing me differently.\"\n\n\"Thank you for accepting me for who I am. Thank you for having an open mind. We're going to be good for each other. You are unleashing desires I never knew I had. I want you, as many times and as long as you'll have me.\"\n\n\"I'm not going anywhere, boo,\" I replied.\n\nThis was my first inkling that she was insecure over her skin tone. It had never occurred to me that lighter women were seen as beautiful but she was not. I would have to work on that. If she needed reassurance that she was beautiful, I would give it to her every chance I could. She deserved that. It also occurred to me that she could have put up a brave front about it, but she let me see her vulnerability. She trusted me. I would not let her down.\n\nWe arose and she cooked us eggs just like the morning before. But today, she cooked them naked. \"No bacon grease to burn me this morning,\" she explained. I watched her every move, thrilled.\n\n\"Sometime today we need to get your car. We can go early if you promise to stay over another night. You can leave from here for work.\"\n\nI nodded. \"I'd like that very much\"\n\nWe drove over to the diner parking lot, where I got in my Jeep Liberty as she waited. I told her I needed supplies, so we stopped at a store on the way home. I bought a razor, deodorant and a toothbrush. I'd need them in the morning.\n\nOnce home, we sat on the couch for a little while. \"I should be in church but I don't feel like it this morning,\" she said wearily. \"Besides, I don't know if you'd be up to going there with me.\"\n\nI assured her that anywhere she wanted to go I would follow.\n\nWe spent most of the rest of the day in the backyard, amid the bird feeders, at a round table with an umbrella for shade. She's brought a CD player and a stack of CDs. We methodically went through them, listening to each one and talking about the music. Her music. We listened to the artists we'd talked about online and on the phone. It was great. I felt like I belonged there, like we'd known each other all our lives. We were happy.\n\nIn the late afternoon, she said \"I guess I'd better make dinner.\" She pulled some chicken out of the freezer, thawing it in a bowl of hot water then breading it, hips gently swaying beneath her skirt, while the grease heated in the deep fryer. I peeled and cut potatoes for French fries. It was some of the best chicken I'd ever had. I could get used to this.\n\nWhen will I see you again?\" she asked.\n\nI told her I had the kids the next weekend. \"I'd love for you to meet them, but I want to take it slow with them. I don't parade women through their life. I want to be sure we are going to be together a long time before you meet them. I hope you aren't offended,\" I told her warily.\n\nShe said sadly, \"I understand. That's a big step. But I am going to miss you.\"\n\n\"We will have the weekend after that to ourselves. It's Memorial Day, so I'll have 3 days off. We can go to the mountains if you'd like. I could show you where I took some of those photos.\"\n\n\"I'd love that very much! But I am still going to miss you until then.\" \n\nAfter we did the dishes, hands touching in the soapy water, she said \"You have to get up early. You'd better get your shower and go to bed. I didn't want our time to end, but I knew she was right. \n\nOnce in the shower with the water running hot, all soaped up, I started to wash myself. She pulled back the shower curtain and stepped inside, naked. \"You didn't think I'd let you do this alone did you?\"\n\nWe lathered each other in the shower, face to face, enjoying the slippery feel of our hands sliding over each other's body. There is something thrilling about hard soapy nipples. I could have played with them forever, but Shavonda turned around and said, \"Wash my back.\"\n\nI lathered up her back and ass, kneading her soft flesh. She felt great. I had a huge erection, and my manhood was riding up the crack of her soapy ass as I rubbed her back muscled. \"Mmmmm that feel so good Jason,\" she purred, leaning forward with her hands against the shower wall. She spread her legs slightly. \"I love the way you feel sliding up my crack.\"\n\nI gripped her hips as I continued to slide up and down. She was right. It did feel good. She wiggled herself, pressing back into me. She leaned forward, pushing back into me even more. \"I am the perfect height for you,\" she says with a laugh. She is the perfect height. \n\nShe reaches back, grabbing my penis and guides me into her soaped up, waiting pussy. \"Wash my insides with your scrub brush.\" She giggles, then moans as I push my way deep inside her. I can't help myself. I want to be inside her. If this keeps up she's going to wear me out. But I can't stop. She feels too good. She feels right, like she was made for me. Our lovemaking is not urgent, but that doesn't mean it's not passionate. She trusts me, trusts that I won't hurt her, physically or emotionally. And that is a huge turn on. \n\nI thrust my way into her from behind, as she wiggles that beautiful ass. The sight of her turns me on. She knows this. She moves in ways that tease me. How does she intuitively know what turns me on? She can't. But she does.\n\nI am thrusting harder into her, trying to own her, possess her. But I don't own her. I can't possess her. Instead, she possesses me, in ways that go far beyond the physical. Beyond what we're doing right now. She has a hold on me that I can't break. That I don't want to break. Ever. I feel her pulse around me, hear her moans of pleasure. It's like I am in a trance. Like I'm watching myself make love to her in the shower, hot water pouring over our bodies as we merge.\n\nI love her booty. I love the cute way it bounces as I slam into her. Love the way it feels in my clutching hands as I pull her into me by the hips. I feel her drawing me in, caressing me as I plunder her depths. I am showing her no mercy. She is asking for none. I know the cost, but to me it is worth it. I hear her moaning, calling my name as she convulses in pure pleasure. We've done this before. Maybe not here in the shower, but we have done this before. And every time gets better than the previous one.  \n\nI can feel her orgasm, hear her cries of ecstasy as her walls spasm around me, clutching, grabbing, searching for what they crave. I can feel her drawing it out of me. I pump faster as I give in, as I let her milk me of my seed. I feel her contractions pulling it out of me, causing my dick to spurt its milky fluid into her hungry, waiting pussy. She is draining me of more than seminal fluid. She is draining me of energy. I hold on to her hips for dear life, but I can feel my legs go rubbery and lose their strength. She has won another round. I am hers.\n\nI stand there spent, on rubbery legs, still buried deep inside her. Wilting. Slowly slipping out of a place I have come to know as heaven. She is my queen. No, she is my goddess.\n\nI somehow manage to make my way to the toilet without crawling. She is there on hands and knees, drying me with a towel. I do the same to her, still seated. I don't have the strength left to get up. Together we crawl to the bed, where I fall asleep while she cuddles up to me.\n\nAll too soon, the alarm clock awakens me. She is still there, curled up in my arm, sleeping peacefully. I nudge her awake and she pulls on a t shirt and scampers off to the kitchen. She is tired but happy. Happy but also sad, like I am. We know that soon we must part, not to see each other for days. \n\nI eat the eggs and bacon she has cooked for me, thanking her. \n\nAt work, I can't stop thinking about her. I push westward in my big Kenworth. At my stop in Canton, I text her, \"Greetings from Canton Ohio\" and attach a photo of the football hall of fame. By Massillon comes the reply. She misses me.\n\nEvenings we talk on the phone until I fall asleep.\n\nWe repeat the cycle all week. Thursday afternoon, the text comes. I read it in Bellefonte. \"I came across this and thought you'd enjoy it\"\n\nI open the attached photo. It is a selfie of her, a much younger Shavonda. The pencil eyebrows, the wide nose, the full lips all the same. Her eyes smolder, her lips hold just the hint of a smile. She is topless, wearing only a leopard print skits. She cups her breasts, one in each hand, sensuously holding them out. Her dark skin has a radiant shine to it, and it highlights her features. I don't know when the photo was originally taken, or for whom. But it is he she is smoldering for, holding herself out for. It is me she wants. She has trusted me enough to give me a nude photo of herself. She is absolutely, breathtakingly beautiful.\n\nThat night, on the phone, I ask her about the photo. She was in college at the time. 22 years of age. \n\n\"I wanted you to have that photo,\" Shavonda says in her sexy voice. \"I saw it and realized, I AM beautiful. I realized you are right.\" The king has won a round. The queen believes.\n\nFriday night I pick up the kids. Saturday, we go to the zoo, then to the Original for fresh French fries. They have fun. When we finally get home, they curl up exhausted on the couch, fast asleep. I call Shavonda, needing the sound of her voice. It's only been a few days, but it feels like forever since we were together.\n\nShavonda asks, \"What time do you take the kids home?\"\n\n\"8 pm.\" I tell her.\n\nThe next day, after taking the kids on a trolley ride through the South Hills, with pizza for lunch. All too soon it is time to take them home. After I drop them off, and put them to bed, Rose, their mother, my ex-wife, approaches me. \"Mom's not home,\" she says. \"Would you like to stay for a nightcap?\" She wants me. Something's up. I don't trust her. For the first time since our divorce, I turn her advances down. I'm simply not interested in being a plaything anymore. I have my queen. \n\nRose is pissed, and confused. I've never turned her down before. I was the obedient puppy, enduring the kicks to the ribs, hoping for the chance to be near her, inside her, once again. Not tonight. Not anymore. Rose, your spell has been broken. Your letter has had the opposite effect of what you intended. The man you casually cast aside has moved on. You will never again feel what you never appreciated in the first time. It now belongs to somebody else. It belongs to Shavonda.\n\nArriving home, I spy her on my porch, sitting, waiting for me. Shavonda had straightened her hair. She was wearing a white blouse and leopard print skirt. \"I hope you don't mind. I missed you so much,\" she said. In the dying light of the setting sun, I take her in the house. \n\n\"I haven't eaten yet.\" I told her. \"Would you like something. All I have left is microwave pizza.\"\n\n\"That would be wonderful,\" she replied with that special smile. Her eyes are watching me. In the kitchen, I put two pizzas on plates and microwave them one at a time. I take the plates, and two cans of Pepsi, back into the living room where Shavonda is sitting on my couch. We eat the pizzas in silence, watching each other eat. There is no need for words. We are together again. \n\nShavonda takes the empty plates to the kitchen sink. She calls my name. \"Jason, see anything you like?\"\n\nShe is standing there in the doorway. The blouse is gone. She is naked except for her skirt. The skirt. She looks at me with smoldering eyes, The hint of a smile on her full lips. She is the photograph. She is radiantly beautiful.\n\n\"I am surprised I still had that skirt. Come get you some,\" she giggles, running up the stairs. I follow her upstairs to my bedroom, dropping my clothing on the way. She unzipped the skirt, letting it fall to the floor. We were now both naked, standing in my room, Shavonda at the foot of my bed. I roared and lunged at her, tackling her to the bed as she giggled hysterically. \n\n\"I missed you so much, baby boy,\" she said, kissing me as I tumbled on top of her. Our hands roamed freely over our aroused bodies. \n\n\"You should be honored,\" I said. \"You are the first, and only woman to sleep in this bed. I'm so glad you came.\" \n\n\"I didn't come yet,\" she laughed. \"But I'm sure I will.\" She pushed my head down toward her crotch. Taking the hint, I quickly spread her legs and slid down her body. My head was now between her thighs, legs over my shoulders. My hands gripped her hips. I inhaled deeply, taking in her aroma. \n\n\"God, I missed this,\" I said, licking up her labia toward her clit. She was slick with arousal. I savored her juices, felt her jump as my tongue touched her clit. I took it between my lips and sucked. She squealed in pleasure. \n\n\"Jason, Jason, please don't stop.\" She was writhing, bucking her pelvis into my mouth. Her pubic hair tickled my nose. I continued to lick and suck her sensitive spot as she convulsed into first one than another orgasm, hands on the back of my head holding me in place. I couldn't lift my head if I wanted to. I didn't want to. I had her scent in my nose now. I was in heaven. My queen was back.\n\nAfter she came, I let her rest awhile. \n\nI had to tell her. \"Von, baby, when I took the kids home, Rose tried to seduce me. I turned her down.\"\n\n\"What?\" she exclaimed. \"That bitch!\"\n\n\"I turned her down,\" I explained. \"She has no attraction for me now. Her spell is broken. I am yours now.\"\n\nShavonda pulled me close, kissed me on the lips repeatedly. \"Thank you thank you thank you,\" she gushed. For better or worse we were a couple now. We were one. \"Fuck me. Now. Hard. Don't hold back, Jason. Just let go.\"\n\nI rolled on top of her. My dick found her slit easily, sliding my way into her tight entrance, I pushed my way in, no hands guided me. We didn't need them. Our bodies were made for each other. She wiggled her hips, the shimmy taking me deeper inside her.  \n\n\"Go for it, Jason.\" She moaned. \"Don't hold back. Don't be gentle. You deserve this. We deserve this.\"\n\nShe was panting as I hammered away at her pussy. Her walls were sucking me in, squeezing me. She was once again on the verge of coming. I love my little multiorgasmic woman. She is insatiable. I was crazy with lust for her. I could see her breasts jiggling as I pounded her. I could hear the rhythmic slap slap of our bodies meeting, the squeak squeak of the bed springs. It had been a week since I had made love to my queen. It was time.\n\n\"Unnnnhhh!' she cried as she arched her back, pushing her body into mine. Her eyes shone in the orange light from the street lights. I was on the edge. Seeing the light in her eyes was all it took to push me over the edge. \n\n\"Von!\" I screamed as l let loose my torrent. I flooded her with a week's pent up sperm. I poured all my energy into her, squeezing her hips hard as we collapsed in mutual orgasm. We lay there trembling, speechless in post orgasmic bliss. I softened and slipped out of her, and was soon fast asleep in her arms. \n\nWaking in the predawn stillness, I got ready for work with Shavonda curled up on my bead snoring softly. I was tempted to wake her for a quickie before I left. Instead I let her sleep. I got the spare key from its hiding place outside, and taped it to a note. \"You are welcome to any food in the house,\" I wrote. \"Here is the key to the front door. Keep it. It's yours. You already have the key to my heart.\"\n\nI was in Wooster, Ohio when the text came. Backed into the dock at Lowe's, I read it. \"This is how I always want to be,\" she'd written. The attached photo was of her vagina, with the results of last night's lovemaking running down her thigh.\n\nTo be continued..."
    ],
    "authorname": "bwwm4me",
    "tags": [
        "bwwm",
        "bw/wm",
        "black woman",
        "bfwm",
        "white man",
        "fellatio",
        "cunnilingus",
        "interracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/love-knows-no-color-pt-02"
}