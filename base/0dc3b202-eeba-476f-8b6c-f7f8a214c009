{
    "title": "Teacher. Lover. Friend.",
    "pages": [
        "Again, a sincere thank you to Harddaysknight for his critical read of my story before publishing. Real life and a lot of hours working sometimes takes my concentration away from my writing, and he spots those lapses for me.\n\n*\n\nI was more interested in writing and history than I was interested in math and science for most of my school years, with the exception of my eighth grade year.\n\nMrs. Blackstone taught science my eighth grade year, and for one year at least, I was interested in science. To be honest, I wasn't that much more interested in the subject that I had ever been: I was a 14-year-old hornball, and I had a thing for Mrs. Blackstone.\n\nIt's not that Mrs. Blackstone was a young beauty on the verge of being a Sports Illustrated swimsuit model. She was about 45 at the time and a little chunky, but she was fairly pretty and had big solid tits, and there was just something about her that gave me a hard-on on a regular basis. It was somewhat embarrassing, and I always felt she somehow knew how she affected me.\n\nNot that she ever did anything to encourage me, of course. I knew it was just in my own head, but I could have sworn there were several times where she would look at me, know she got me hard, and then give me a little smile. Then I would go home that night and have a wet dream about her. I probably would have killed someone for her had she asked. As it was, I made it through the school year without totally embarrassing myself, and my science grades for that year jumped from the 80s to the 90s.\n\nI went into the high school the next year and forgot about Mrs. Blackstone.\n\nFast forward four years. I was coming out of the high school boys' gym locker room after baseball practice, and Mrs. Blackstone was coming out of the girls' locker room probably after working out in the high school weight room, as several teachers did on a regular basis. She had gotten dressed back in her regular clothes and was walking toward the parking lot, ahead of me. I didn't recognize her from the back side, but I did notice that the middle button on her blouse was undone, and the back of her white bra was showing. I know it was only the back of her white bra, but again, I was a teenage hornball, and I started to get turned on. I came to my senses enough, though, to realize that I should probably say something to this woman.\n\n\"Ma'am. Ma'am,\" I called after the woman. She turned around and faced me; that's when I realized it was Mrs. Blackstone.\n\n\"Well, hi, Robert. How have you been? Do you like the high school?\"\n\n\"Uh, yeah, Mrs. Blackstone, I like it. Excuse me, but you've left a button undone on your blouse,\" I said.\n\nShe blushed deeply. She had a gym bag in one hand and a folder in the other, so she would have to put both down to button her blouse, or ...\n\n\"I could get that button for your, Mrs. Blackstone. I've done a button or two for my mom over the years,\" I volunteered.\n\n\"That would be very nice of you, Robert. Could you do it quickly, please, for obvious reasons?\"\n\nI stepped over to her and did up the button as she turned her back toward me.\n\n\"Thank you, Robert. Your mother raised a gentleman.\"\n\n\"You're welcome, Mrs. Blackstone,\" I sputtered while remembering I hadn't taken a breath in about a minute.\n\nMrs. Blackstone went off to her car and I walked the mile to my house, thinking that I was only four buttons away from unbottoning Mrs. Blackstone's blouse. I had a wet dream about her that night.\n\nI thought about Mrs. Blackstone for the next five days, and on the sixth day I saw her again at the high school, this time with her blouse all buttoned. We talked briefly, then as we were both ready to go our separate ways, she gave me a bone-stiffening look and asked if I had turned 18 yet.\n\n\"About a month ago, why?\" was my quick answer.\n\n\"Thought so, no reason,\" was her reply.\n\nAdmittedly, we teenage boys can be so totally clueless, but when I saw her again the next week I got the feeling it wasn't a coincidence. She looked a little nervous as she asked me to join her inside the gym, and we went to a deserted corner.\n\n\"I have a proposition for you, Robert, and I'm sure it's unlike anything you've ever heard, so we need to go someplace quiet. How about one of the literacy rooms in the library?\"\n\nI nodded and started to follow her, watching her round ass as we headed to the library. The library seemed empty, but still she headed for a literacy room and closed the door behind us.\n\n\"I want to ask you something, but before I ask, I need to get your sworn promise that what we're about to talk about will never go any further than us, just you and me. It's really important that what we're going to talk about never gets discussed with anyone ... not your parents, not your friends, not even your dog. You got that?\"\n\nDespite the fact that we were in an enclosed room in a seemingly empty library, Mrs. Blackstone was practically whispering. Whatever was coming had to be damn serious, I thought.\n\n\"I will take this with me to my grave, if that's what you want, Mrs. Blackstone.\"\n\n\"That's exactly what I want, Robert.\"\n\nShe looked as serious as a heart attack. I thought she was going to pass out on me, but she finally spoke.\n\n\"My husband has an incurable neurological disease and is slowly dying. We haven't had sex in more than two years. It hurts not to have sex with the man I love, but I can make do. However, my husband thinks I should find a discreet sex partner to help me deal with the stress, so I don't fall into bed with the wrong person at the wrong time and wind up hating myself for cheating on him. I don't want to cheat on my husband, but he says this wouldn't be cheating if I was discreet and still respected him. I want you to be my sex partner.\"\n\nThe words came out in a hushed rush, and I had to listen very carefully. It was a good thing I was sitting in a chair while she was talking to me, because I'm pretty sure I would have fallen down had I been standing up.\n\n\"Me?\" I croaked. \"Why me?\"\n\nI'm sure most 18-year-old hornballs wouldn't have hesitated to say yes, but apparently I'm a special kind of stupid. I remembered the old saying that said if something seems to good to be true, it probably is.\n\n\"Partially because you asked the exact right question, rather than just say yes to what appears to be gratuitous sex,\" Mrs. Blackstone replied.\n\n\"I understand what my husband, in his loving way, is saying. I didn't even consider it for the first year, but after a second year and with who knows how much longer this could go on, I see what his fear is. But it still seems so wrong.\n\n\"It's supposed to be sex, without emotion, without love. Normally that's not how I'm built, so even considering the act with someone other than my husband has me blown away. But with you being a kid and all, it wouldn't be anything where I have to worry about emotions creeping in. I'm not going to get emotionally attached to an 18-year-old kid, and you're not going to ever get emotionally attached with someone who is probably older than your mother. If you could even stand to have sex with a woman my age.\"\n\nShe was blushing stop sign red while she was talking. I could see she was incredibly uncomfortable, but at the same time I was starting to get excited. I shook my head a bit to clear it. Could this woman that I've had wet dreams about really be asking me to have sex with her? Wasn't there a movie like this with Dustin Hoffman in it about a million years ago? I know I should have felt more compassion for her considering her situation with her husband, but what can I say, I'm 18, and -- holy shit -- this woman just asked me to have sex with her!\n\nI tried to answer, but there were no words coming from my mouth. I started to hyperventilate. She had been looking at the ground while talking, but she finally looked up when she heard me wheezing.\n\n\"Slow down, try to breathe normally,\" she offered.\n\nIt took about 30 seconds before I regained my composure, and when I finally did, Mrs. Blackstone figured it out for both of us.\n\n\"I'm sorry, Robert. I didn't mean to do that to you. I get it. You're 18. You don't need to say a thing.\n\n\"OK, then, now that we've got that out of the way, let me do a little more figuring, then I will have some ground rules to set. Remember, no talking about this ... to anyone, ever.\"\n\n\"Yes, ma'am.\"\n\nTo say the least, I was more than a little distracted for the next week. It was even tough to concentrate on the baseball field. Seemed like every few minutes I was fantasizing about having sex with Mrs. Blackstone. I got a late jump on a ball hit out toward me in center field during a game on Tuesday, and it dropped in for a hit. Coach knew I wasn't totally concentrating, and I got pulled when we came in to the bench for our turn to hit.\n\n\"Damn it, Jarrett! Unless you want to spend the rest of the season riding pine, you'll get your head out of your ass when you're out there. You get to balls most center fielders can only dream about most of the time, but you were out there daydreaming on this one. Thinking about your next at-bat. Don't be. I got you out there for your glove son, not your stick. If you weren't such a good fielder, Hickey would be my center fielder.\"\n\nMrs. Blackstone must be following the baseball team, because she knew about our Thursday afternoon practice being called off. She showed up outside the locker room after practice on Wednesday, and told me she would pick me up as I walked home on Thursday. My heart started to race the minute she walked off.\n\nI had walked about a quarter-mile toward my home after school on Thursday when Mrs. Blackstone's car pulled up ahead of me at the curb. I looked around quickly and got in the passenger side. My heart started to beat loudly in my chest.\n\n\"Are you OK with this, Robert?\" Mrs. Blackstone asked with real concern in her voice.\n\n\"Oh yeah!\" I responded.\n\nWe drove to a small motel on the other side of town. She pulled a room key out of her purse and we entered room 15.\n\n\"Can we get in trouble because you're a teacher?\" I asked.\n\n\"Yes and no,\" she answered. \"I'm not supposed to be doing this with any student, technically, but it would be worse if you were my actual student. There is a little wiggle room since you are not my student, and since you are over 18.\"\n\n\"And your husband is OK with this? He's not going to hire someone to shoot me for fooling around with his wife?\"\n\n\"Yes, he is OK with this. No, he doesn't want to know anything about when and where we meet and what we do ... that's the rules between him and me ... but as long as we all abide by the rules there shouldn't be any problems for anyone.\"\n\n\"You have done this before, haven't you?\" Mrs. Blackstone asked.\n\n\"Yes, ma'am,\" I responded as she stood in front of me and started taking off her clothes.\n\nHer thin blue blouse came off first, followed by her slacks. I felt my dick harden in my jeans. Holy shit, I was within a bra and panties of seeing Mrs. Blackstone naked! I think I drooled.\n\nShe went over to the bed and turned the bedspread and blanket down. I hadn't moved, so she came over to me and took the bottom of my Yankees T-shirt in her hands and pulled it off over my head. She next undid my belt and pushed my jeans down to the floor as I stepped out of them. My hard dick was straining against my briefs. She rubbed her hand over my dick, and it jumped of its own volition before she removed my underwear. I was standing naked with my hard-on sticking almost straight out.\n\n\"Do you want to do the honors?\" she asked.\n\n\"Oh yeah,\" I think I said, or something like that. She turned around with her back to me, and I unhooked and removed her bra. She then turned back toward me and I got to see her big white globes sticking out and hanging down on her stomach. Her tits were so much bigger than the other two sets I had been this close to, but they weren't nearly as perky because she wasn't 18 like the other two girls I had already bedded in my limited sexual lifetime. Pretty sure I did drool this time as she took my hands and gently placed them on her tits.\n\n\"Wow!\" I whispered, and she smiled. She then directed my hands to the waistband of her bikini panties, and I pulled them down in one smooth move.\n\nThe rest is kind of a blur of motion, punctuated by her rubbing the head of my dick up and down the length of her very wet pussy before stopping me at her opening and letting me do the rest. Oh my God, this woman's pussy was absolutely on fire! She was wetter than either Brittney or Caroline, and a whole lot hotter. Their pussies, however, seemed to be a lot tighter, but Mrs. Blackstone more than made up for that by squeezing my dick with her vaginal muscles. It was like my dick and my brain were communicating directly with one another, and everything was amazing. I pumped her hard and fast for about 15 minutes before I came like a freight train!\n\nI must have pumped a gallon of sperm into Mrs. Blackstone. I kept pumping and humping as my dick slowly softened, then I carefully pulled out.\n\nGod, I felt like Superman!\n\n\"That was amazing!\" I blurted out as we separated, but her face told me otherwise.\n\n\"What!?\" I said quizzically.\n\n\"How about next time I lead, and you follow. I'm the one with the experience here,\" she said very gently.\n\nI turned red as a beet. My greatest moment of triumph turned to failure in five seconds flat.\n\n\"Who do you think you satisfied with that?\" she asked, pointing to my now deflated dick. \"You satisfied yourself, that's who. But you're supposed to be satisfying me, and any future lovers, girlfriends, and maybe a wife.\n\n\"It's OK, Sweetie. If you're willing to work with an old lady like me, I'm willing to work with you. But you have to promise me that when I teach you, you only use your powers for good, not evil.\"\n\nShe smiled brightly as she said that last part, and the crushing weight that was laying on my spirit was lifted.\n\nWe got together about once every two weeks after that, and she was as good as her word. She taught me that satisfying your partner during sex can be incredibly erotic. Sometimes, though, I was a slow learner, and like the good teacher she was, she had me repeat the lesson before we had to leave for the day.\n\nShe taught me several positions with multiple variations, how changing an angle by just a bit can make a world of difference, and how to change pace and make the fun last. Little by little, she also taught me about how a woman -- not a girl -- thinks.\n\nShe gave me the first blowjob of my life on our third meeting, and I thought my head was going to explode. She then had me use my mouth on her after first taking the time to explain a few things. I stumbled and bumbled around, and the smell wasn't too great, but the orgasms I gave her were so intense I knew I wanted to do that again and again ... and she agreed with me.\n\nAdmittedly, I knew nothing about women's orgasms before getting together with Mrs. Blackstone. It's not high on the priority list for most teenage boys. I thought her vaginal muscles were going to crush my dick the first time she had an orgasm with me inside her, and the first time I gave her an oral orgasm she practically drenched me with her fluids.\n\n\"Is it always like that, Mrs. Blackstone?\" I asked as I came up sputtering.\n\n\"Dear Robert, when we are together like this, please call me Traci. You make me feel like I'm robbing the cradle with that Mrs. Blackstone shit. And yes, it's kind of like that all the time if you do a good job with your tongue. But it's also been a very long time for me, and I was probably a little stronger and more voluminous than normal.\"\n\nShe settled down somewhat as the weeks went by, but not too awful much. It seems I was a pretty good student, particularly with my tongue.\n\n\"Once word gets around that you eat pussy, you're going to become very popular, dear boy,\" she said to me after one such session. \"And if girls find out that you not only do it, but are very good at it, nobody is going to have more dates than you.\"\n\n\"And I guess we need to draw up some rules for that, too,\" she continued. \"I want you to have a normal teenage life, but you need to make sure that you always wear a condom when you have sex with anyone other than me. I get to experience you 'au naturel', but I can't have you bringing me any unwanted bugs. And wearing a condom with these fertile young things will keep you from bringing home any surprise grandchildren.\n\n\"As for me, I went on the pill when we began our relationship.\"\n\nI turned red when she said that, because, in all honesty, I was so thrilled with the arrangement I never even gave birth control the first thought.\n\nAs promised, our relationship was indeed unique. We would have great sex for an hour or two. In between, we talked more like a mother and son. She almost never mentioned her husband. I was still somewhat concerned that I might be interfering with her marriage, but she assured me that was not the case, and I should let the matter drop. She admitted to me she was still somewhat uncomfortable with the situation, and preferred to keep it as separated from her regular life as she could.\n\nMost of the time when we met she would be in what appeared to be workout attire. She admitted to me that she would tell her husband she was hitting the gym when we would get together, but she also did work out on a regular basis, so maybe she felt it wouldn't be quite as obvious to him when she was meeting me.\n\nI graduated from high school a couple of months later. Mrs. Blackstone showed up for the occasion, coming over to me and my parents to say hello before the ceremony. Then she sat with my parents throughout the ceremony, and when I occasionally looked over I could see she and my mother were just chattering like old friends. I was so weirded out about the situation that I never really heard any of the usual \"we can make the world a great place\" speeches.\n\nA day or two later, my mother made sure to tell me she thought Mrs. Blackstone was a nice person, and she was glad that I had someone of her years to \"advise me\" and be my friend. I was not sure what to make of that little speech, but I knew better than to say anything. Maybe it was Mrs. Blackstone's way of testing me to see if I'd spill the beans.\n\nI was somewhat of a tech guy in high school, so I decided to go into information systems in college, and I chose a school about an hour away from home. Honestly, my arrangement with Mrs. Blackstone never was a consideration as to where I was going to go to college. In fact, she told me that she understood I had a life to live, and I needed to do what was best for me.\n\nStill, I think we were both pleased with the fact that we could still meet every two or three weeks.\n\nAs Traci predicted, my popularity with girls grew when they found out I was a good pussy eater. It wasn't my style to be a raging Lothario, but I did well enough in both high school and college. But it all wasn't just about my ability to induce mind-blowing orgasms with my mouth. I found that my time with Traci was giving me a surge in confidence, and girls and women seemed to respond to that.\n\nTraci seemed a little distracted during one of our sessions early in my junior year, which was unusual because normally she was so focused on what we were doing. We had a good friendship going and had kept it at that. We both understood this was sex, with no emotional attachment, like we had agreed upon, but you can't have a relationship like we had without some kind of attachment, unless you're both robots or complete sluts or just don't give a shit about anything in life. I asked her if we had a problem, and she broke down in my arms.\n\n\"He's getting weaker, Robert. I think the end is nearing. I need to spend all of my free time with him, holding him, touching him. We'll have to stop our relationship.\"",
        "Traci was sobbing now, and I knew it wasn't because we'd have to end our relationship. She and her husband, Greg, had been married for 27 years, and from the little bit she had said about him, it sounded like a great marriage, despite Greg's illness. They had tried to have children for a number of years, but apparently it was not to be, so the two were centered completely on each other.\n\nGreg had been a medical supply salesman up until he had to stop working four years ago. They found the illness about six years ago, and he worked up until the point that maneuvering his wheelchair became a problem. The two of them had made good money until then and were financially ready for what was coming. The emotional toll, however, had to be devastating. I could only imagine how it would have affected my parents if it had been them.\n\nAlthough we were both naked, the hug I gave Traci was purely supportive. My heart was breaking for her.\n\n\"If there's ever anything I can do for you two, ever, you just let me know. I'm there,\" I said with the utmost sincerity. \"Mow your grass, wash your car ... I mean anything ...\n\n\"I don't know how to properly thank you for everything you've given me ... besides the gift of your body and your experience. The trust you've placed in me ... the trust you've both placed in me ...\"\n\nWe got dressed in silence. We hugged before we opened the door and left the motel for what we both believed would be the last time.\n\nMy mother called me about six months later with the news that Greg Blackstone had died. Apparently she and Traci had become friends and kept in touch since my high school graduation. It's funny, Traci never mentioned to me that she had kept in touch with my mom, and my mom never said anything either.\n\nI went to the funeral, sitting with my mom in the back row in the church. After the burial, we both paid our respects quickly and left.\n\nOne week later I was sitting in my apartment near the university taking in a ballgame on the television. I hadn't gone home for the summer because I was working at the local hospital on an internship. There was a knock at the door, and when I answered a well-dressed man of about 30 introduced himself as an attorney with Gluck &amp; Stroh, a law firm in my hometown. He handed me a sealed manila envelope and had me sign something that looked like a fancy receipt book.\n\nI pulled a beer out of the fridge and sat down in my La-Z-Boy. I slit the envelope open and pulled out a letter and a check -- holy shit a check for $50,000! It was made out to me, and signed by Leonard A. Roth, representative of Greg Blackstone. My mind started to reel, so I figured I'd better read the letter to figure out what was going on.\n\n\"Dear Mr. Jarrett,\n\n\"Although we never met while I was alive, we shared a connection that I believes bonds us forever. I know that you were my wife's lover for the past few years ... a lover that I encouraged and practically insisted she take. I was not able to provide for her from a sexual standpoint for the last several years, but I knew my vigorous, healthy wife would do nothing to disrespect me nor break our vows. While I totally trusted my wife to remain true to me, I was also afraid that with the stress of the situation, some unscrupulous person would be able to manipulate her into making a life-altering mistake ... for which she would feel guilty for the rest of her life. So I practically begged her to take a lover, knowing that she would choose one wisely and be discreet. And that would hopefully eliminate the possibility of that life-altering mistake happening.\n\n\"Traci and I never discussed potential lovers. The decision was completely hers. We also agreed not to talk about her relationship. I just asked for her respect and ultimate discretion.\n\n\"I must admit I was surprised and somewhat jealous when she chose an 18-year-old boy. At first I thought it was the very cuckold situation I was trying to avoid. But as you two moved into your relationship I realized that she chose a very special person to do a very special task. In essence, you did me the biggest favor one man could ask another, to take care of his wife in a special way with no hope of love ever becoming part of the equation, and yet being thoughtful, caring, and completely respectful. By respecting her completely and not treating her as merely a sex toy, you showed me the ultimate respect. I don't know how to properly thank you for that.\n\n\"Traci has no idea I even knew your identity. I had some of my people check you out completely. I needed to make sure my wife -- the love of my life -- was in good hands, so to speak.\n\n\"The check enclosed is just a small token of my appreciation for your consideration, respect, and kindness. Traci need never know about it. I know it will come in handy for school expenses.\n\n\"In closing, I again want to thank you for the respect and kindness you have shown both Traci and me. And if I may, I would ask you for two more additional favors. You have received this letter one week after my death. I know Traci will need a proper mourning period, but after that she is going to need you more than ever ... as much for who you are as well as the sex. And the first time you two again have sex, I ask that it be soft and gentle lovemaking ... and share your first kiss. Yes, I know she never let you kiss her before ... because in her mind that would have been crossing the line. But do it this time and tell her it's my special request.\n\n\"The second favor is for the future. Hopefully, Traci lives a long and fulfilling life, and finds someone to spend the rest of her life with. Regardless, when the end finally gets near and comes, I would ask that she not be alone ... that you be there for her with your physical presence and your being ... sort of like you would be leading her to the gate and handing her back to me, because, trust me, I will be waiting there most anxiously.\n\n\"I have leaned on you a lot more than you realize these last few years, and if I am correct about you, you will let me lean on you a little more. Again, thank you for everything.\"\n\n\"Most sincerely,\n\n\"Greg\"\n\nI called Traci once a week for more than six months, never chatting for more than 10 minutes at any single time. I was just checking in, and not trying to look like I was pressuring her to restart our sex. I really had no idea of everything she was dealing with, so I tried to give her space but show her I still cared. I know what we had together wasn't love, but I think our extraordinary arrangement pushed us past being just ordinary friends.\n\nAnd then one day seemingly out of the blue, she called. We set up a dinner date for the next Saturday at a small Italian restaurant. The way our situation was, we had never been out to dinner before, so this was new territory for us.\n\nI got back into town from the university a few hours early so I headed over to my parents' house to say hello first. They were happy to see me, and were happy to hear that Traci and I were going to spend the evening out. At one point, my mother sent my father to the convenience store to get something she said they needed for supper, and when he left the house she came over to me with what I could see was a look of concern.\n\n\"Is there something wrong, Mom?\" I asked.\n\n\"Robert, dear, it's been a long rough patch for Traci ... and I just want to make sure you understand that this has been a very emotional time for her ... and I want to make sure you be very gentle and loving with her. She is a special, special woman.\"\n\nI caught where this was going immediately, and I looked at my mom with what I know was a shocked look on my face. She blushed a little.\n\n\"Yes, dear, I know. I've known for some time now. Mothers know things, Dear. Traci owned up to it when I asked her. She explained the whole thing to me, and I've kept her confidence as well. Even your father doesn't know.\n\n\"And Traci was quick to point out that she would gladly step aside when you found someone you were serious about.\"\n\nI know I was blushing profusely. Yet somehow it also made some sense to me.\n\nMy parents and I had a nice visit, then I went off to pick up Traci for our evening out. I noted to myself that this was the first time I had ever been to her home as in the past we used to drive separately to wherever it was that we were meeting.\n\nThe restaurant turned out to be a small place that Traci and Greg frequented on a regular basis before his sickness stopped him from going out. Everybody seemed to know Traci and said hello, and she introduced me to everyone as a friend of hers and Greg. Although she pretty much avoided the topic of Greg when she was with me in the past, now she overflowed with stories and anecdotes about him in such a warm way that I almost expected him to show up any minute.\n\nThe owner of the restaurant even stopped by for a few minutes, and they swapped a few stories about Greg.\n\n\"I can't tell you how much better I feel right now,\" Traci said when I dropped her off at her home. \"Would you like to come in for a drink?\"\n\nI politely turned her down and she gave me a sweet yet sad smile. I just had the feeling that we, too, were ending something. After all, Traci was now a widow, and could openly date men. Why would she want a boy, I thought to myself.\n\n\"I'll call. I promise,\" she said.\n\nLike most 21-year-olds, I am apparently a very bad judge of women's emotions. Two days later, Traci called, and asked if we could resume \"the other part\" of our relationship as well. I was somewhat baffled, but not about to turn down sex with an older goddess.\n\nWe met at one of our usual motels, like we used to, and I was good with that. I was hoping she wasn't going to want to move our trysts to her house, now that her husband was dead. That would have been creepy.\n\nRight before we disrobed, I told her that I had something I needed to give her. I walked straight up to her and planted my best kiss solidly on her lips, before she slowly opened her mouth and accepted my tongue inside. She was an excellent kisser, and we stayed glued at the lips for probably two minutes.\n\n\"That was a gift from Greg,\" I half-whispered as we broke our embrace. \"I made him a promise.\"\n\n\"But ... how could ...\"\n\nShe broke down crying and set down on the end of the bed. I sat down with her and took her in my arms.\n\n\"I don't know how. But I promised him. I also promised him this.\"\n\nWe made slow and passionate love; so very different from what Traci and I had ever done before. Yes, in all of her teaching, there were lessons on lovemaking in addition to fucking, but on this night it was as much emotional as it was physical. I used all of my senses to try to pick up on any clues I could, and then I used them as best I could. I have to admit, when we were done, I was as drained emotionally as she was. It was quite the night.\n\nWe continued to see each other about twice a month through my last year in college and then when I stayed in the area after graduating. We both dated others from time to time, me much more so than her. But I never got serious until I met Mary Jo. I literally bumped into her at a Starbucks. She was right behind me in line, and I didn't see her when I turned around after getting my large black coffee ... yeah, I can never remember the Starbuck's term for large. Anyway, she was right there, I bumped into her and dropped my coffee, which naturally opened and spilled all over the floor. She bent down with me to try to clean up quickly with some napkins when I came upon the bluest eyes I'd ever seen. I sputtered, stuttered, and finally squeaked out an apology.\n\n\"Remind me not to give you anything I really like to hold in your hands, butterfingers!\" she said sarcastically.\n\n\"Not even your small black heart?\" I bantered back.\n\nThat apparently did the trick. After I bought both of us coffees, we sat down and talked for an hour, then I asked her out to dinner for the next Saturday. We became an item, and although we never talked about exclusivity, after a few months as far as I knew I was the only one she was dating, and she was the only one I was dating ... if you didn't count my arrangement with Traci.\n\nAlmost like my mother, Traci had this maternal sense about her and could just pick up on stuff when it came to me. I never hid the fact that I was dating from Traci, but it was not something we talked about much. Mary Jo and I had been dating for about six months before Traci finally spoke up.\n\n\"You've been with this one the longest I've ever seen,\" she said one night after we had finished having sex. \"Maybe you need to consider putting an end to our arrangement and make her an honest woman.\"\n\nThe very thought of that hit me like a brick to the forehead. After all this time, I never considered that my arrangement with Traci would have to end if I wanted to continue on with Mary Jo.\n\n\"You're right as usual. I don't want either one of us to ever regret any of this for a single moment, so we need to do the right thing.\"\n\nAnd just like that, my seven years as Traci's lover came to an end. We still remained friends -- more than friends -- but we never again touched as anything more than friends. Two months later, I asked Mary Jo to marry me, and eight months after that we tied the knot.\n\nTraci continued to stay in my life as a very close friend and adviser, and she and Mary Jo grew close in time as well. In fact, she stayed so close to us that when Ariel was born three years later, Traci became an honorary grandma, and Ariel grew up calling her Grandma Traci. My parents already loved Traci as friends, and Mary Jo's parents also got to know her and like her, and didn't seem to have any problem adding in another grandma to the family mix.\n\nTraci continued to teach until she was 65, then she retired and did some traveling with some other retired teacher friends. I know she dated some from time to time, but never really got herself a regular boyfriend, despite the fact that she had always taken good care of herself and was a pretty sexy Senior Citizen, at least by my way of thinking. Mary Jo apparently thought so, too, because one afternoon when the three of us were out on the deck talking, Mary Jo asked her why she didn't date more.\n\n\"I've had one great love in my life, and I've had an amazing friendship and ultimate respect from a second man,\" she answered. \"At this point, I'm not willing to take the chance on another.\"\n\nTraci glanced over at me when she said the second part of her statement, and that one peek was all that Mary Jo needed to fit the pieces into the puzzle.\n\n\"So, then, it's you that I need to thank for teaching my husband to be so attentive to my needs ... all of my needs,\" Mary Jo giggled. \" I'm not sure I can ever repay that debt.\"\n\n\"He was always an eager student and did come with some natural talent,\" Traci responded.\n\nFor my part, I kept my mouth shut. I had made a promise that I would never tell a soul about Traci and me, and I never have broken that vow, even when it was out in the open.\n\nAlthough they didn't continue this line of conversation out on the deck, I'm pretty sure Traci and Mary Jo finished the conversation at some point, because while I'm sure Mary Jo had questions, she never came to me for answers, probably knowing that I wouldn't talk about it. But since Traci had opened the door, she probably explained everything to Mary Jo so I wouldn't have to. And since it ended before Mary Jo and I became exclusive, I knew my wife wouldn't obsess about it.\n\nLife being what it is, nobody gets out alive ... and Traci was no different than anybody else. A few weeks after her 78th birthday, she called over to my office to tell me she didn't feel right and asked me if I could take her to the hospital. When I got to her house, she was dressed and waiting for me, but for the first time that I can recall, she looked like an old woman. I walked next to her as she shuffled to the car. She started apologizing for disturbing me at work.\n\n\"Don't you dare. I owe you more than I can ever pay back.\"\n\nTraci was diagnosed with a leaking heart valve a while back, and was put on medication. Although the doctors didn't think it was serious enough to warrant a surgery, some other issues made surgery a risky proposition. The testing at the hospital showed that her kidneys were also failing, and her lungs were filling with fluid. Doctors could help with some of that, but in the end they said a slow, uncomfortable death in the next few weeks was her fate. They recommended hospice care.\n\nMJ arrived at the hospital within the hour, and we stayed with Traci while hospice details were worked out. As it was late on a Friday afternoon, they would have everything ready to go Monday morning.\n\nWe stopped in to visit Saturday afternoon for a couple of hours. Traci looked tired and frail, but she was taking the news of her impending death well, at least, a lot better than I will when my turn comes.\n\n\"I've had a pretty good life. Sooner or later it ends for everybody. I just hope it doesn't get painful,\" she told us.\n\nShe was going to call some cousins and a few of her nieces and nephews after we left. We told her we'd be back on Sunday.\n\nA few hours later, we got a call from the nurse tending to Traci. After spending much of the day on the phone, Traci drifted off for a nap, but when she awoke she was mostly incoherent. The nurse told us that in her opinion, we probably wanted to come back to the hospital for a final goodbye.\n\nTraci barely acknowledged us when we came into the room. She appeared to be looking for something, or someone.\n\n\"I'm waiting for him, but I don't see him yet, Robert. He told me he'd be here.\"\n\nMary Jo looked confused, but I knew exactly what she was talking about it. It was time to make good on my last promise to Greg.\n\n\"Greg said he would meet me when my time came. He never lied to me. I know he's coming,\" she said quietly, but firmly.\n\n\"If he said it, then he will be here,\" I affirmed. \"We'll wait for him together, because I promised him I would take you to him.\"\n\nRecognition flashed into her eyes. I guess that Greg had probably left her a last letter as he had me.\n\n\"Scoot over a bit for me.\"\n\nShe moved over closer to the IV pole and gave me just a little room to slide into the bed up against her left side.\n\nShe smiled at me, then said, \"It's been a long time since we've done this.\"\n\nShe looked over at Traci.\n\n\"Just give me a few more minutes, Sweetie. I promise.\"\n\n\"Keep him as long as you need him, Traci,\" Mary Jo responded.\n\nWe sat in the bed for a few minutes, with my arm around Traci's shoulders, and Mary Jo sitting in a chair at bedside.\n\nI felt her start to drift off and she turned away from me on her side and moved more into a laying position. I leaned over her head and kissed her gently on the cheek. From on top of the covers, I spooned her like I used to so many years ago. She sighed and shifted back into me slightly, getting comfortable and familiar. I knew Greg was waiting patiently. "
    ],
    "authorname": "Hooked1957",
    "tags": [
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/teacher-lover-friend"
}