{
    "title": "The Last Bridge in Pittsburgh Ch. 10",
    "pages": [
        "Sara was surprisingly mellow about the whole thing.\n\n\"That's just typical. Running off so she doesn't have to apologize.\" She shook her head disapprovingly, the amused resignation of an older sister.\n\n\"You're not bothered?\" I asked, still shaken from being caught in the act. \"That's kind of out of character for you.\"\n\n\"Oh, don't get me wrong, her immaturity is infuriating, creeping around like that. You grow used to it, though. And besides, I wasn't doing anything to be ashamed of.\" She craned her neck upwards and pecked me on the lips. \"Just taking care of my man. I'm headed to bed - breakfast at eight?\" And with this, Sara turned and slipped back into the house.\n\nI turned in as well, but even lying in the comfy antique feather bed, I felt much less relaxed than Sara seemed to be. I was in quite a pickle. Or was I? It was hard to know. It was possible Ava had been watching - and listening - for quite some time, as I tranced and then conditioned my girlfriend. On the flipside, it was also possible she'd just shown up - perhaps only catching a glimpse of our activities. It was even possible that she hadn't realized, from all the way across the large yard, that Sara had been sucking my cock. Even if she had seen and heard everything, who knows if she would put two and two together? I probably wouldn't have guessed, having overheard some strange post-coital call-and-response situation, that there was hypnotic jizz magic afoot.\n\nThese rationalizations - and many more - got me to sleep. Even if it was an uneasy one.\n\n--\n\nThe next day was full of little moments with Ava that took me from worried at her behavior to just plain puzzled. In the morning, Sara and I started cleaning and packing the home office on the ground floor. Her folks had been real hoarders when it came to mail, with takeout menus and ancient campaign flyers intermingled with seemingly important legal documents in a vast pile which we had to sift through.\n\nThe entire morning, Ava found excuses to walk by the door, or stick her head in, every hour or so. First pretending she was checking furniture dimensions, then checking the fire alarm, then volunteering to take out the piles of discarded paper as we worked our way through it. Sara ignored her at first, and then began to give her odd looks. For my part, I tensed each time she came in the room. Was she working her way up to confront me about what she'd seen?\n\nAround two, after perhaps the third time Ava had peered into the room in an hour without any reason whatsoever before disappearing without a word, Sara snapped a bit.\n\n\"A week of practically ignoring me, and now she's quietly lurking. Honestly, it's infuriating. If she has something to say... well, I'm going to take a nap. Want to join me?\"\n\n---\n\nI had secretly hoped that 'nap' was code for more fooling around, but Sara conked out the second we lay down on the four poster bed in her room, curling up against my chest and dozing off before I could even suggest any hanky-panky. I lay for an interminable time, trying to feel tired and sleep myself, but despite my restless night, I couldn't seem to. Something about the moment was magical. With Sara tucked against me, I felt the gentle swell of her chest as she breathed, ever so slightly faster than the rhythm of her heart. I buried my nose in her long, golden hair. She always smelled like almonds. It was quickly becoming the smell of love.\n\nEventually, accepting that I would not sleep, and content to simply hold my girlfriend so she could, I began to watch the sun and the shadows creep across the floor as evening approached. The light filtered in through the cracked windows of the master bedroom, playing off little flakes of dust and ash to make the air glitter with a warm aura.\n\nAnd then, looking through the window, my sense of tranquility was shattered. In the wreckage of the house next door, looking through the glass right at us, was Ava. Our eyes met for a long moment before she looked away.\n\nI carefully got up, being sure not to wake Sara. It was time to have words with this Amazonian asshole.\n\n---\n\nFrom the backyard, I spotted her, sitting on the exposed second floor of a charred McMansion, her legs dangling off into a chasm below. She wasn't looking in my direction, but I could see that she had a strange, glum, angry look on her face.\n\nFifteen minutes later, against all better judgement, I was creeping up the stairs of the burnt house quietly, two bottles of the crappy home-brew beer in hand. As I came up behind her, she turned from the ledge and nearly snarled at me, angry to be confronted.\n\n\"What do you want?\"\n\nI shook the beer in her direction. \"Peace offering? I wanted to talk.\"\n\n\"I don't want to hang out with my siblings' privileged fucking frat boy squeeze, thanks.\" She turned back away from me.\n\nFortune favored the bold. I sat down next to her.\n\n\"Frat boy? I was never in a frat. Never even gone near one.\"\n\n\"Whatever. You know what I mean.\"\n\n\"I really don't. What do you think you know about me?\"\n\nAva shrugged. \"Sara says, some big hotshit lab scientist. La-te-dah, whole life spent in a Green Zone, I'm sure. I don't have any time for you silver spoon types. Ya'll are the reason things have gone to such crap.\" She gestured dramatically at the blackened collapsing ruins around the cul-de-sac.\n\nI made a puzzled face. This exact kind of hostility was not what I had been expecting. \"You know what they say about assumptions...\" I trailed off. Best not call her names to her face. \"At the risk of telling you your sister is dating a loser, I only work in a lab because I have a government placement as a glorified janitor. I basically just wash petri dishes.\"\n\nFor the first time, Ava turned towards me, but I kept looking off into the distance as I continued.\n\n\"And, for the record, I've only been in Pittsburgh for a year. I spent another year and a half or so in a FEMA camp before that.\"\n\n\"Oh, shit, I'm sorr-\" Ava spoke, her voice soft for the first time ever, but I kept going.\n\n\"And before that, another year and a half in the Atlanta swamps after hurricane Gamma.\"\n\n\"Well, look, I didn't - \"\n\nShe was fully backpedalling now, but for the first time, I had this confusing woman off-kilter, and I wanted to say my piece.\n\n\"No, you look. I have no idea what went on between you and Sara back in the past. You're both clearly kind of hung up about something, anyway. But if we're gonna be driving across the whole country you've really got to go easy on her.\"\n\nAva turned to me again, an angry look on her face, and I held up my hands defensively.\n\n\"I'm not here to yell at you or anything. We've just got a long trip ahead of us. Like I said - peace offering?\" I wiggled the homebrew at her again.\n\nAva sighed. \"What the hell.\" She took the beer from me, and tapped the cap off against a charred beam. \"I never really liked Dad's crappy beer, to be honest.\" She sniffed at it before setting it between her splayed legs.\n\nUnsure if we were drinking or talking, I nursed my own bottle and let the silence linger. Ava's look grew long again, her eyes locked to the horizon, a mournful look settling back over her face. After a minute or so, I found myself talking.\n\n\"Look, it's none of my business, but I can tell you're going through something -\"\n\nAva cut me off. \"Oh, for the love of god. Don't pretend like you know me. Just - save it.\" She punctuated herself with a swig from the beer I had brought. \"I don't need -\"\n\nShe didn't finish the thought. After a couple sips, she slumped over, her eyes going empty.\n\n---\n\nI kept my breathing very shallow. I didn't want to snap Ava out of the trance. I was also unsure how strong a dose she'd gotten with the quarter of a bottle she'd drunk - I'd used my last little sample from my cooler in the truck, easily prying the loose top off and replacing it when I was done. Thank goodness for incompetent hobbyists - I didn't know if I could do that with a real bottle.\n\n\"Ava?\"\n\nI paused for a long moment, concern beginning to creep in when I remembered that someone's name didn't count as a statement or question.\n\n\"Ava, finish your beer.\"\n\nMy girlfriend's sister slowly raised the bottle to her lips. I realized as she did that I was breathing easily around her for the first time ever. Perhaps she was just too anxiety-inducing generally. Or maybe, just maybe, I was becoming too inured to trancing people like this.\n\nBest to check in with my new subject. \"How are you feeling?\"\n\n\"Angry. Sad. Lonely.\"\n\nThat wasn't what I had expected. Well, I guess angry and sad weren't too much of a surprise.\n\n\"Why are you lonely?\"\n\n\"Whole squad in Denver. No seeing for months, no seeing much ever again. And being around sibling. And you. Lovebirds. Feels lonely.\"\n\nI had forgotten, from my time with Kate, how syntax suffered when given open-ended questions in trance. With Kate it had been kind of cute. With the buff Ava it almost made her sound like a cavewoman. I stifled a chuckle.\n\n\"Speaking of me and Sara, what were you doing last night?\"\n\n\"Took truck. Went into town for hookup. Got rejected by girl in bar. Drove around mesa -\"\n\nThe mystery of who would turn down advances from the stunning Ava would have to wait for another day. I interrupted.\n\n\"When you got back here - what did you see?\"\n\n\"Sibling kneeling. Sucking, I think? Or using hand. You talked, she talked. Repeated. Was interesting. Listened. Thought odd. Interesting. But... strange.\" Her words hung in the air.\n\n\"What - how much did you hear?\" My voice caught in my throat.\n\n\"How she was a 'good girl'. How she 'needed to suck your cock'. Much more. She said, you said.\"\n\nI knew - I knew I should wait, think, ask more questions. But a slight panic overtook me. Under no circumstances would I be found out so early into having these powers. Certainly not by some depressive goth-gone-bodybuilder I barely knew.\n\n\"What you heard last night was perfectly normal.\"\n\n\"What I heard last night was... uh..\" Ava twitched, the now familiar sign of resistance. From where I was I could see how it made her abs flex, and a dark, horny part of myself stirred. I forced my mind back onto the straight and narrow. Such as it was.\n\n\"I was just talking dirty.\"\n\n\"You were just talking dirty.\"\n\n\"It's normal to talk dirty to Sara during sex.\"\n\n\"It's normal to talk dirty to Sara during sex.\"\n\n\"Nothing suspicious happened last night.\"\n\n\"Nothing... nothing suspicious happened last night.\" Little pause there, but not enough to worry me.\n\n\"What you saw was just normal, sexy behavior.\"\n\n\"What I saw was just normal, sexy behavior.\"\n\nI paused. Was that enough? I had covered my ass well enough from the previous night, but I should probably take some precautions in case she accidentally overheard us again sometime in the next week.\n\n\"I was not changing Sara. I can't do that.\"\n\n\"You were not changing Sara. You can't do that.\"\n\n\"If you ever hear me talking to Sara during or after sex again, you won't think anything is wrong.\"\n\n\"If I ever hear you talking to Sara during or after sex again, I won't think anything is wrong.\"\n\n\"Anything you hear me say or hear her say back is just sexy talk. Just people stating fun, sexy facts.\"\n\n\"Anything I hear you say or hear her say back is just sexy talk. Just people stating fun, sexy facts.\"\n\nI stopped again. I was tempted to go further - \"There is no such thing as cum-based hypnotic trance\" - but I couldn't quite bring myself to say the words. Maybe I just didn't want to hear the full specifics out loud. Maybe I was worried that even putting the idea in her head in the negative could be dangerous. Maybe I just thought it would sound nuts.\n\nRegardless, I was safe. Ava wouldn't be raising any alarms over the next couple days of packing and then the drive back to Pittsburgh, and after that she wasn't Sara's problem any more. I reached over to wake Ava before I had one last idea.\n\n\"Ava - \"\n\nHmm, best phrase it carefully.\n\n\"You care about Sara and want to see her happy.\"\n\n\"I care about Sara and want to see her happy.\"\n\n\"You will take care not to upset her.\"\n\n\"I will take care not to upset her.\"\n\nI wondered vaguely about the ethics of my last few commands after I woke Ava and stumbled back down the stairs - should I really screw with the sisters' relationship? But, I knew they must love each other - else, why were they both so angsty around each other? All I was doing was helping Ava express herself a little more healthily. And anyway, helping someone be less of an ass was definitely a more responsible use for my ability than some of what I'd been up to.\n\n---\n\nI crept back up to the bedroom where I found Sara beginning to stir, and stroked her shoulder as she climbed out of her nap, looking up at me groggily.\n\n\"Ouuughh - how long have I been asleep?\"\n\nI rolled my phone open to check. \"Nearly three hours.\" How much of that had been cuddling with her and how much had been damage control with Ava, I had no idea.\n\n\"Oh, god, I totally overslept. You ever tell yourself you're going to nap for, like, fifteen minutes and it winds up being hours?\"\n\nI grinned as she dug sleep out of the corners of her eyes. \"And you swear off naps, only to make the same mistake a week later?\" I laughed and tugged her hand. \"C'mon, let's scare up some food.\"\n\n---\n\nWe rummaged around the kitchen looking only to realize we were running a little low. Sara found some bread and I some slightly suspicious looking government ration peanut butter with which we made sandwiches, before going out onto the patio to look at the stars while we ate. A minute or two after we sat down, the sliding door behind us opened and out stepped Ava.\n\n\"Can I, uh - may I join you guys?\" She gave a little wave with an even sloppier sandwich than us.\n\nSara flashed me an inscrutable look before nodding. Ava sat down heavily in the chair across from us and started chewing. We quietly did the same after a moment, myself feeling rather tense and Sara warily looking at her sister out of the corner of her eye.\n\n\"Yeah, yeah, I know, we're basically out of food.\" Ava broke the silence, having misread Sara's expression. \"I'll do a run to the store tomorrow and pick up some stuff. On me, you got the last grocery run.\"\n\n\"Huh. Thanks, Ava.\" Sara said, a slight hint of surprise in her voice. The silence returned, but only briefly, the tension broken. \"Hey. I was wondering. What's the deal with all the tattoos?\"\n\n\"Oh!\" Ava laughed, not the unkind bark I'd heard once or twice in the last couple of days but a gentle, melodic tone. \"You know, sometimes I forget I have them. Have you really been itching to ask that this last week?\"\n\nSara sputtered. \"Well, I - I just - you're kind of covered in them, and you weren't when I saw you last, back before...\" She trailed off. \"I really don't see how you can forget about them, either!\"\n\nAva sat back in her chair and rolled up one of her sleeves to look down at her forearm. Up close, I realized that the geometric designs on her arms were twisting flames, rendered in low-resolution polygons.\n\n\"Well, I guess I've just had them for a while, is all. I started getting them my first year in the corps, after the first battle for Denver. Actually - look at this.\" She hiked up her baggy cargo pants to show a very shapely leg, emblazoned with names in a neat bulleted list. \"Denver -\n\nSanta Fe - Sacremento - Las Alvinas - Denver - Albuquerque - Denver - Grand Junction - Lincoln -\" More, down into her high top sock. Albuquerque was crossed out, in big jagged red ink. She lowered her pant leg again.\n\n\"I really wanted a list, but I don't like text-heavy tats too much. So, hid it down on the leg.\" Ava said, catching our odd look.\n\n\"Wait, but what are those cities?\" Sara asked, still puzzled. I had caught on - I had bunked with a guy in my first FEMA camp who'd come from Albuquerque - but I stayed quiet.\n\nAva chuckled again. \"Sorry, I'm so used to everyone around me being a - anyway, they're deployments. Almost all firefighting, though one was for a flood. I hated that.\" She glanced towards me, trying to meet my eyes. \"And the sleeves, everything else - I've got a big crest on my back that took ages - I would add something special from each paycheck. Was nice to have something to look forward to each time we went out. I'd do sketches in my downtime, and I had a friend - this guy in my squad, Danesh - he used to be an art student before he was drafted, he'd make them look good. Hey - do you still paint?\"\n\nSara shook her head. \"I can't find oils anymore. Well, you can get them on mail order from Alaska, but it's very expensive. But never mind that - why all the...\" she gestured at Ava.\n\n\"Oh. Well, I thought of it my first month or so out of basic. Eight hundred people - kids, really - in a unit. I felt kinda anonymous, you know. Actually, maybe three dozen other Avas. Big actress around the time I was born.\" She explained offhandedly in my direction. \"Anyway, wanted to stand out, I guess. Thought either this, or shaving head. Called Mom to get her advice and she freaked out. So I did both.\"\n\nSara let out a loud peal of laughter, and I realized that this was the first time I'd seen her really let her guard down around Ava. Maybe, I thought, I was right to have meddled this afternoon.\n\n\"Honestly I'm kind of proud. I would never have guessed you'd have stood up to Mom like that. You and her always got along so well.\"\n\nAva laughed back. \"You didn't have a monopoly on rebellion as a kid, you know.\"\n\nSara's guard snapped back down. \"Ava, that wasn't rebellion - Dad trying to keep me from-\" she stopped herself and glanced in my direction and continued in a more controlled tone. \"It wasn't rebellion. Don't be cruel.\"\n\nAva reached out and touched my girlfriend on her shoulder softly. \"Hey - I'm sorry. I didn't mean it like that. You know I didn't, right?\"\n\n\"It's OK\" Sara said, even though whatever it had been clearly wasn't. I guess I hadn't magically fixed everything between them with my conditioning. \"Don't worry about it.\" She looked away.\n\nAva squeezed Sara's shoulder before stepping back into the doorway. \"I'm going to turn in for the night. Sleep tight, you two!\" She flashed a tight smile back at her sister before disappearing inside.\n\n---\n\nAfter we washed the excess peanut butter from our plates, Sara dragged me up to her room where we sat on the bed. I could see she was still agitated from the tense way her shoulders moved.\n\n\"Can I ask - \" I began, softly, my palm moving in slow strokes over her back, \"if it's OK, what that was all about?\" Sara's face had a strange look on it, and I course corrected. \"I thought it was kind of unusual how engaged your sister was, for once. But I clearly don't get something.\"\n\nSara waved her hand dismissively, scowling ever so slightly. \"I really don't want to go into it. I just - yeah, suffice to say my parents were particularly shitty. And they tried to prevent me from... Well, they were shitty. And Ava was always the perfect kid.\" She paused and kissed me on the cheek. \"Sorry, babe. I didn't mean to upset you. I know I've got some baggage.\"\n\n\"I don't mind your baggage.\" I said, hugging her. \"I just want you to let me help carry it.\"\n\nSara snorted slightly as she wiped away the beginning of a tear, only to turn and peck me on the lips. \"You're a really good man, have I ever told you that?\"\n\nI kissed her back again, harder and more wetly, before smirking at her. \"I concede I'm pretty okay, but certainly I don't deserve such a good girlfriend.\"\n\n\"Oh, don't do that. That thing where you act all humble. You sit right there, I'll show you exactly what I think of you. Though, I do agree with you on something...\"",
        "And with that, she unbuttoned my pants. \"...I am a terrific girlfriend.\"\n\n---\n\nFor the first time ever, I didn't spend any time planning Sara's conditioning as she blew me. Maybe that was a sign that I was finally growing comfortable in my now only somewhat new powers. Or maybe it was just that Sara really had turned into quite the cocksucker. Her innovation today was to gently massage my balls as her lips worked their magic. She'd used her hands on occasion before, mainly when I was about to cum, but today they were ever-present, her fingers gentle but insistent, making me moan each time she timed light pressure with a lick. Before I knew it, I was approaching the edge, but I was enjoying myself too much to finish too soon. I touched my partner's head lightly to get her attention.\n\nShe pried her eyes from my shaft to look up at me, idly moving her hand up and down. \"Who dares disturb me?\" she croaked, in an imitation of the villain from a movie we'd seen the previous month.\n\nI chortled, sending the tip of my cock bouncing off her nose. \"Whoops - haha - sorry. Just wondering something, is all. Where did you come up with the hand thing? I'm pretty sure I didn't suggest it.\"\n\nSara blushed, which was kind of remarkable given that she had just been joyfully cramming my dick in her face. \"Uh, same place as the licking thing I was just trying. I, uhh, may have been doing some reading.\"\n\nMy face broke into a wide grin and I decided to tease her a little. \"My bashful girlfriend, reading smut? What happened to not watching porn because you didn't want it in your search history?\"\n\n\"It was not\" - She squeezed my cock just a hair harder than felt good - \"smut. I may... have found a library book. A guide. Very clinical, for your information.\" Her mock irritability subsided, and she was back to blushing. \"I got it last week, and I was reading it last night to take my mind off Ava. Well, and I guess I really want to make sure these blowjobs are good for you.\"\n\nThat was pretty touching. I reached out to clasp her hand resting on my thigh.\n\n\"Sara, I've already told you how good you make me feel. Though I must say, getting a textbook is so in character for you.\" I paused. \"The library? I didn't think they had that sort of thing. Can I see it?\"\n\n\"It's not a textbook. And, later. I have an important practical exercise to finish.\" She winked before descending back upon me.\n\nHer energetic sucking quickly had me back on the edge, and I boiled into her mouth with force. I hadn't realized how pent up I had gotten in just one day. Or maybe it was just Sara's newfound book-learning. Whatever it was, I collapsed back on the bed for a moment to catch my breath. Between my legs, I could see Sara slip into trance, her mouth still on me. I closed my eyes and basked in the moment.\n\nUntil I heard a soft rustle in the hallway outside.\n\nAlready knowing what I would see, I turned to catch Ava smirking in the doorway, her hand gripping her crotch. I froze for a second, before scrambling for a pillow with which to cover myself. What the hell?\n\n\"Oh, don't mind me. I was just curious.\" Ava chuckled.\n\nI cast about for my pants - to run and shut the door that had, I assume, drifted open sometime during my and Sara's passion - when my focus was snapped back to my girlfriend, still in trance.\n\n\"I don't mind you. You were just curious.\"\n\nSara's words slid out of her in the flat, glossy tone that screamed 'trance'. My mind churned uselessly. Ava would find out what I had been been up to! Wait, no she wouldn't, I had handled that. Well, this was still bad -\n\n\"Oh? You must really like me watching, huh?\" Ava's smirk grew wider, but grew kinder, too.\n\n\"I must really like you watching.\" I spun back to Sara just in time to hear her repeat it.\n\n\"Ava!\" I finally exclaimed, sputtering. \"You can't - \"\n\nOur interloper threw up her hands defensively. \"Oh, hey, I - I guess you don't like it though!\" she responded, looking truly embarrassed. And with that, she slipped down the hall. \"Sorry!\"\n\nHer door slammed. And I looked back to Sara to see her awake.\n\nGood lord, what was that?\n\n---\n\nAuthor's note - Please reach out with feedback, comments, suggestions or other thoughts at all. I am entirely new to writing - really of any kind at all - and so I really value the occasional thoughts I have gotten; they both are useful as I seek to improve but also are invaluable encouragements on days where it's hard to write."
    ],
    "authorname": "YourNeighborhoodSeamstress",
    "tags": [
        "female submissive",
        "male dominant",
        "romance",
        "anthropocene",
        "magic cum",
        "hypnotic cum",
        "brainwashing",
        "accidental",
        "conditioning",
        "sister"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-last-bridge-in-pittsburgh-ch-10"
}