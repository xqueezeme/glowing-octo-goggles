{
    "title": "All That Glitters Ch. 39",
    "pages": [
        "OP Sandcastle is activated and a mass rescue of Union citizens, though the Alliance resists, resulting in the loss of some life. Disaster occurs...\n\n\u00a9 bigtddybr October 2021. This story 'All That Glitters - Ch 39' or the series 'All That Glitters' cannot be transferred to any other site besides Literotica.com in whole or in part without the prior authorizations in writing from the author and bigtddybr must be credited for this work.\n\nDue to the number of abbreviations, ship listings, and list of characters, in this story, I include a glossary that is now in a stand-alone chapter called 'All That Glitters: Notes'. Any and all information that you want or need to know about the series is included in Notes. It will be updated frequently simply by re-issuing the chapter to Literotica.\n\nThere is little attempt to explain the back story, so it is necessary to read previous chapters to fully understand where we are.\n\nAs before, I claim sole responsibility for the story line. This story is a fantasy, with no basis in reality. Any similarity that you may perceive to current events, people, or situations real or imaginary is completely unintended. Look no further than the story line for its intent and purpose.\n\nA big shout out to SaddleRider for all the help she has provided in editing. With her guidance, I'm making fewer and fewer errors, but she still finds them. If you find any errors still left in this chapter, they are mine.\n\nPlease rate and comment. But keep your comments respectful. If you rant and rave or are disrespectful in your commentary, it will be deleted.\n\n'Nuff said...enjoy.\n\nPlanet Varus, Clemet System, Forty-Eight Light Years from Terra\n\nIn Dalwan Province, at three in the morning, there was an earthquake measuring 4.8 on the Richter Scale. While it was not a strong earthquake, it was a shallow one, being only half-a-kilometer below the surface, and it was a long one, lasting more than three minutes. It caused significant damage to Dalwan City under which it manifested. Estimates of the injured exceeded 20,000 people.\n\nVioleta Serment, the planet's president was informed immediately. She was still awake, having received a message not long ago in reference to OP Asclepias. She now had the perfect scenario to engage the Senate with.\n\nVioletta opened a link to Senator Winslow on Terra and waited for his response. It wasn't long.\n\nDamn but this instant communications was so bloody useful! She thought.\n\n\"Good Day, Senator Winslow. We have actually had a major earthquake in Dalwan Province. It has likely produced 20,000+ injuries and an unknown number of casualties. We are going to use this as a pretext to initiate OP Asclepias,\" Violetta explained.\n\n\"You can handle the numbers with your own planetary resources?\" Jonathan Winslow asked.\n\n\"Yes,\" Violetta confirmed. \"The resources of OP Asclepias will go completely to OP Sandcastle.\"\n\n\"Thank-you Madame President. If you would, can you make a formal request that I can record?\" the Senator asked.\n\nVioletta went into her rehearsed speech, requesting the initiation of OP Asclepias, the 185,000+ estimated injured and unknown number of dead, estimated to be beyond the current resources of her planet. The recording was sent immediately to the Senate which was still in their afternoon session. Within an hour, OP Asclepias had been approved.\n\nMalihan Regional Hospital, Green's World, The Harn System, Twenty Light Years from Terra\n\nDr. Aurelie Pendame, the Senior Administrator of Malihan Hospital, received the emergency notification of the initiation of OP Asclepias on Planet Varus. The information was sparse, which paradoxically wasn't unusual in these situations, with an estimation of 185,000+ injuries. These numbers were beyond the capabilities of the planet's resources. The Senate had approved OP Asclepias and was requesting support from all the regional hospitals.\n\nAurelia called Dr. Holdar, the Chief Surgeon of the hospital and the Teaching Surgeon at the Malihan University Annex. She informed her of the activation of Asclepias and ordered her to provide as many of her available doctors and nurses, including those who might be at the end of their internship or in the last few months of their training before entering internship.\n\nDr. Holdar, in turn, found a message waiting for her on her comp. She was a reservist Captain in the Union Navy and she just found herself being called up to serve in OP Sandcastle within the auspices of OP Asclepius, whatever the hell OP Sandcastle was. She noted that it was being planned by Capt. Raymond Clark and commanded out of the Punarjanm system. Something tweaked her memory and she called up Ayesha Seito.\n\n\"Ayesha, I have been called up as a reserve Captain in OP Sandcastle. Something tells me that you may know about it?\" she inquired once Ayesha was sitting in her office.\n\n\"I do,\" she replied. \"It was being run by the Anti-Slavery Task Force out of Liramor-23. I was part of the team of nurses and doctors scheduled to go to OP Sandcastle if it was activated before I came here for my internship.\n\n\"OP Sandcastle is a raid against the Alliance of Planets to retrieve our kidnapped citizens,\" Ayesha informed Dr. Holdar.\n\n\"Shit!\" Holdar responded, surprise written all over her face. \"They have activated OP Asclepius.\"\n\n\"Then they intend to go after much more than the estimated 35,000 we were originally looking at,\" Ayesha stated.\n\n\"An earthquake on Planet Varus with 185,000+ injured,\" Holdar stated.\n\n\"The number will be their estimate of the rescued. If they get half, that will be over 92,000. That would justify initiating OP Asclepius,\" Ayesha mused.\n\n\"You are going with me. You will be in charge group of triage teams. With your experience dealing with the Navy, you will be an asset that I will need in place,\" Holdar ordered. \"We are going to need every doctor and nurse that the hospital can spare.\"\n\n\"Might I suggest that we make use of some of the Pod-Drran? At least the ones who have been certified to work on the human wards of late?\" Ayesha inquired.\n\n\"They will go with you, Ayesha. You will be the best person to make use of them. I am making you the coordinator over eight teams. Complete this task successfully and I will write off the remainder of your internship,\" Holdar said, holding out her hand to shake Ayesha's. \"Congratulations, Dr. Ayesha.\"\n\n************\n\nFrom all over Union space, the call was answered. Medical teams formed and were provided ships to transport them to Planet Varus, where they learned the actual truth, the supply ships that had transported them suddenly finding themselves pressed into service in support of OP Sandcastle.\n\nTo say the medical teams were shocked was an understatement. Their anger at being deceived was nullified only by the facts of the events. They would be needed and they would be involved with history. Many of those who were on the teams had family members lost to 'accidents' in space, some of which were suspected pirate attacks. They were praying that their family members could be retrieved.\n\nA surprising number of medical teams from Hollander's World were part of OP Asclepius. While it was not yet known, with their empathic ability, they would turn out to be a major asset on this mission.\n\n************\n\nAyesha, and her medical teams were transported to the Punarjanm system where they came aboard The Wanderer.\n\n\"Ayesha!\" a happy voice called out. She turned at the sound of her husband's voice and ran into his arms. He picked up the diminutive woman and held her close in a tight hug.\n\n\"What are you doing here?\" she asked.\n\n\"I was ordered back to the ship when it came into the system some four weeks ago,\" he told her. \"I couldn't tell you anything because of comms security.\"\n\n\"Oh, I am going to enjoy our reunion tonight,\" she purred.\n\n\"Hey, lovebirds, hold it in for a bit, there is still work to do,\" Lt. Ululla called out with some humour in her voice.\n\nA blushing Ayesha slipped down to the deck from her husband's grasp, trying to look calm and collected, her blush and the fact she wouldn't let go of his hand belying her act, much to the amusement of her fellow medical specialists.\n\n\"OK, who have we got and why have we got them?\" Ululla demanded.\n\n\"I'm bringing you eight triage teams to be deployed as you require. They consist of eight, three-person teams of a doctor or Nurse Practitioner and two nurses, so they can be set on eight different ships or sent to the one ship that will act as the ambulance ship,\" Ayesha told them.\n\n\"Nope, our ambulance ships are actual Navy Hospital ships, they will not need triage teams, so we will place the teams on ships that will be in the advance guard,\" Ululla stated.\n\n\"Welcome back, Dr. Kayl-Ur, Nurse Hend-Ur. I see we have two other Pod-Drran teams,\" Ululla commented.\n\n\"Malihan Hospital pulled everything it could for OP Asclepius. It was only after we arrived at Planet Varus that we discovered the real reason for the activation. They are here, they are certified to work on human anatomy, we will make use of them,\" Ayesha said in a confrontational manner.\n\n\"Hey, pull in your horns, little miss,\" Ululla laughed. \"I am only stating a fact, not disparaging your choices. However, the best place for these teams will be on a hospital ship, not as forward teams on rescue ships. The citizens currently on Alliance planets are not likely aware of the presence of the Interspecies Community. Best place for the Pod-Drran teams will be in the rear. That will free up human teams from the hospital ships for forward triage,\"\n\n\"OK, that makes sense, and it is 'Doctor' Little Miss, if you don't mind,\" Ayesha stated, hands on hips.\n\n\"Dr. Seito?\" Raymond called out as he came into reception. \"Congratulations Ayesha. It is good that you got your medical degree ahead of this mess.\"\n\n\"I haven't, actually. This is a momentary field promotion so that I can coordinate the teams; to become permanent if I do well out here,\" Ayesha admitted.\n\n\"If Dr. Holdar gave you the field promotion, she has no doubt as to your abilities,\" Raymond commented. \"As to the Pod-Drran teams, I agree with Mbibo. They would be more of a nuisance in forward triage, especially if we have to send medical teams down to the planet.\"\n\n\"Kayl-Ur, Hend-Ur, always good to see our two celebrity medical specialists,\" Raymond greeted them, giving Kayl a hug and Hend a slap on the back.\n\n\"Raymond, your body is so different from that of Pod-Drran males,\" Kayl purred. \"It is good to hold you again,\" she teased.\n\n\"You keep that up with my mate, Raymond, and I will have to demand Yudha-Seypec,\" Hend commented with a laugh, getting a smile in return from Raymond.\n\n\"OK. Let's get everyone situated, we will have to get the Pod-Drran over to the MHS Orenta before we launch the operation,\" Raymond said. \"Kayl, Hend, I apologize that we cannot use you on this ship or for forward triage duty, your presence would frighten those who we are trying to rescue. Nothing against your skills, which we will make use of, however, we are working to tight schedules on this raid, anything that interrupts that will not work for us. You will be better used aboard the Orenta.\"\n\n\"We understand, Raymond. While we will miss the better accommodations and food aboard The Wanderer, we are here to work. We will go where you need us,\" Kayl replied.\n\n\"Good, let's get them over to the Orenta and have them replace these three teams with human teams for forward triage work,\" Raymond told Ululla.\n\nAurelia's Apartment, Adenomere Estate, Planet Adenomere, The Adenomere System, 182 Light Years from Terra\n\nAurelia had been going through the personal notes of Jaar Adenomere for several weeks now. She had compiled a list of crimes that would shock even the Landstradt, which was principally made up of pirates.\n\nHis crimes included manipulating the markets to discredit other great houses, the murder of the senior members of the great houses he had illegally brought down, the enslavement of the children of those houses, several murders of individual who had opposed him for one reason or other, the manipulation of the Landstradt for personal gain, and the more recent attempted murder of herself.\n\nThe destruction of the House of Yunki, the murder of the elders of the house, and the kidnapping of their children was well documented. May and Mei had bristled at the information that Aurelia had discovered. She told them that she would work to correct this injustice when the time was right. She had to admonish them that this was not the time, that there was little they could do, under the current circumstances.\n\nWhile they were not pleased with having to wait, they were far better off working for Aurelia than working elsewhere in the house. Patience was something that slavery had instilled in them. They would bide their time.\n\nAurelia found that Jaar had not personally employed those who had tried to kill her. He had arranged for his brother Antonius, head of the Second House of Adenomere, to provide funding for the attack, and for Peotre Adenomere, the head of the Third House of Adenomere, to coordinate the attack. She had all their correspondence and planning information, which she put on a micro-memory chip, as well as some of the other more juicy tidbits.\n\nShe needed to get this information into the hands of others before the next Landstradt meeting, which was scheduled for the week after her wedding. She wondered who she could trust with this information. Several people came to mind. She had to make careful choices here. Getting this information to the wrong hands would mean her death rather than her salvation...\n\nPresidential Compound, Planet Varus, Cl\u00e9ment System\n\nFleet Admiral Robert Martin, commanding Sector Fifteen, out of Marlin Naval Base on Planet Varus, was sitting with President Violla Serment in her office, as they processed the information from three streams of data.\n\nOne was from the site of the recent earthquake in Dalwan Province. It gave the current estimates of dead and injured in Dalwan City.\n\nThe second, was from Marlin Naval Base. It showed the escalation of OP Asclepius as it built up to prepare for injuries supposedly coming from the disaster zone.\n\nThe third was also from Marlin Naval Base. It showed the preparations to receive upwards of 90,000 rescued Union citizens from OP Sandcastle.\n\nThey were getting continuous updates from the lead ships in OP Sandcastle via ICS.\n\n\"The ICS is a god-send,\" Violla commented.\n\n\"It is, Madame President,\" Robert admitted. \"We would have had to wait for daily comms probes prior to this. Having information sent immediately on all updates is a significant advantage. The only problem we have is the tendency of commanders and politicians to interfere with the local commanders now that we have instant communications.\"\n\nViolla smiled at that. \"Yes, I remember my military training, Admiral. You can only go down two levels of command for orders.\"\n\n\"Quite, Madame President. Theater Commanders do not need to be sending instructions to Platoon Commanders in the field,\" Robert admitted. \"However, telling that to politicians who have not had military training is problematical.\"\n\nThe President ignored the quip about politicians. She had heard them all. \"How soon before we go?\" Violla asked.\n\n\"Once all the assets are in place,\" Robert replied. \"That shouldn't be too long now. Probably the day after tomorrow.\"\n\nOP Sandcastle Fleet, Numbered Star System HD-137982, Fifty Light Years from Terra\n\nIn an empty star system, not on any known travel routes between planets, the ships of Operation Sandcastle started to appear. The NS Persephone, accompanied by PV The Trine, came into the system first. The Persephone immediately set up control over the system as the command ships of each raid came into the system and sorted their assault teams, pulling them into isolated groups away from the other teams.\n\nThe Persephone, was coordinating the instructions to ships as they appeared, directing them where to go to wait for the moment of assault. The Trine had two experienced Navy Comms people on board. Hanalei was in charge of the ship, Violletiya uncomfortably close to her at all times, the two children were with her and Urano.\n\nOnce all the assault teams were in place, Navy supply and hospital ships began to enter the system. The Persephone contacted each ship and directed them to their assault team, where they received their individual instructions from the command ship of each raid. Five of the hospital ships stayed with the Persephone. Two would be used for the anticipated overflow of injured rescued citizens while the other three would be dedicated to Navy/Marine injuries from the raid teams and orbital battles.\n\nDuring this time, Fayad and Junelliya had crossed over to NS Dewfall, Capt. Henadi Noor commanding, which was the overall command ship with Commodore Liana Dostier and would be the command ship for the raid on Planet Adenomere.\n\nThe assault teams were now waiting for civilian supply ships, which started appearing in system. They were directed to the various groups and given instructions. They were also given extra shuttles to top up their shuttle compliments. By seven bells second shift on the third day in system, the raid was ready. Dostier contacted all ships.\n\n\"All ships, this is Commodore Liana Dostier. Operation Sandcastle is ready, we go at one bell first shift. May the Gods grant us their benevolence,\" Dostier sent to the fleet.\n\nThe location of the HD-137982 star system had been chosen specifically because it was within twenty light years of all but one planet, Planet Adenomere. This allowed most of the ships to jump into their assigned target system without having to wait out a four to six hour recharge of the older Marilon Generators on the older ships.\n\nThe exception was Task Force Adenomere which was scheduled to jump the twenty light years into a specific location, the max range for most of the older supply ships, and then jump into the Adenomere System four hours later, all of her older ships having that recharge capability.\n\nFour hours before one bell, the ships of Task Force Adenomere jumped into an empty section of space fifteen light years from the Adenomere System to wait out the recharge of their older ships. Operation Sandcastle had begun...\n\nGaetan Orbital Station, Gaetan's Planet, Gaetan System, Seventy-Four Light Years from Terra\n\nThe tech was sipping coffee at his comp on Gaetan Station Control when a supply ship came into the system.\n\n\"Gaetan Station Control, this is SSP Whilhelm Harger, Capt. Miles Verbin commanding, requesting parking orbit, We are here to pick up high-end items, over.\"\n\n\"They've been here before?\" the supervisor asked.\n\n\"Yes, sir, they have been here on numerous occasions,\" was the reply.\n\n\"OK, give them access to the VIP Dock then.\"\n\n\"Control, roger, we are transmitting the route to your parking orbit now, over,\" the controller returned.\n\n\"Harger, roger, we have your plot, we should be in orbit in eighteen, out.\"\n\nThe Harger had come into Gaetan's planet using the code 'high-end items' that indicated she needed to have access to the upper section of the station. The ship was placed at a location that allowed for her shuttle to come into the VIP Shuttle Deck which, coincidentally, was only 100m from station control.\n\nThe shuttle came in as per normal, settling in the shuttle deck as per instructions and waited out the re-pressurization of the deck. Two men, dressed as ship's officers, left the rear of the shuttle and approached customs.\n\nThere were two customs agents and four guards waiting for them. The two men acted quickly, pulling hidden stun guns and knocked out all six before any of them could act. From the rear of the shuttle, a dozen Marines in EVA Combat Suits ran unopposed onto the station and into control, where they swiftly took over operations, without anyone outside of control being made aware of the situation.",
        "Comms specialists, who had been listening in on Gaetan Station's control operations for over a week, took over key posts and kept up the expected pattern of operations instructions from the station. They swiftly moved ships from a certain area of space not too deep into the gravity well and waited.\n\nTen minutes light from the station, a Valour Class ship was sitting, recording all that was happening on the station. When they noted the ships moving away from a specific area of space, they sent a message via ICS to Task Force Gaetan, waiting in the HD-137982 system, fourteen light years away. The Task Force quickly jumped into the allocated location.\n\n\"Gaetan Planetary Control, this is the Union Navy Ship Polyanty, Capt. William Endar commanding. We are here to retrieve our kidnapped citizens. Resistance will be met with force. Any ship that attacks this task force, or any person who attempts to stop our operations on your planet, will be considered an enemy and engaged with purpose,\" Capt. William Endar said over comms as the task force of over two hundred ships came into the system.\n\nEndar had 174 warships, of which half were Fairling Class Frigates. There were also fourteen navy supply ships, thirty-five civilian supply ships, one Navy hospital ship, and one fleet tender in his raid group. The warships immediately spread out to specific locations, ready to engage any ship that wanted to retaliate.\n\nThere were only thirty ships in the planetary defence force for Gaetan's Planet, spread out around the planet. Only ten of them were the more modern Handren Class Frigates, the remainder were not really capable of engaging Fairling Class Frigates in limited numbers or even Whippet Class for that matter. When they saw the level of threat against them, they decided en masse that this was not for them. They moved away from the area of potential threat and stayed out of the battle.\n\nCombat shuttles left the Fairling Class Frigates of the task force and proceeded to their allocated locations on planet, escorted by Valour Class ships. They had to fight their way down as the Airforce of the planet was large and well trained. Still, they had never actually engaged in a real battle and swiftly lost to the seasoned experts that were making planet fall.\n\nForces on the ground then engaged the attackers, again with little success. The attackers had the advantage and took the attack to the Militia, who found themselves outmatched, their numbers insufficient to engage a determined, concentrated, enemy assault. It would take time for the local Militia to assemble enough forces to make a difference, time which Task Force Gaetan never intended to give them.\n\nEmile Gaetan received the news from deep within his bunker, which had been built not long after the planet had first been settled. The bunker was designed to be used when the Union Navy was then looking for the very pirates that had founded the planetary government, including Emile himself.\n\nHe had watched and seethed as the Union Navy forced his Planetary Defence Force to back off. He didn't blame his captains in orbit for backing down. They had less than one sixth the ships available to fight off a determined Navy Task Force, only ten of which were somewhat as capable as the attackers. Against one or two Fairling Class, they might have stood a chance, against more than eighty Fairling Class, they had none. Still, it irked him that he had no options in orbit.\n\nHe was even more infuriated when his air forces was taken out with little or no issue by the attackers. He pushed ground forces at the attackers, who fared much better but still were pushed back from the battle ground. They didn't have the concentrations of force needed to make a difference. It would take time to concentrate the necessary forces to initiate a successful counterattack.\n\nAs he watched, markers indicating Combat Shuttles landed in specific locations around the continent, some on his properties. He had initially doubted the professed mission of this assault. The locations of the landings left no doubt in his mind. They were indeed after the Union slaves.\n\n************\n\nSlaves watched as a shuttle landed not far from their dormitory. People in EVA Combat Suits came out of the shuttle, making the slaves nervous.\n\n\"Attention Citizens of the Union. We are the Union Navy. We are here to rescue you. If you are a Union citizen, please identify yourself,\" the first people on the ground hailed the slaves they saw with the loudspeakers in their suits. A few people tentatively approached the Marines.\n\n\"I am a Union citizen,\" a young woman said. \"I was kidnapped by pirates three years ago. Can you really take me from here?\"\n\nThe Marine Sergeant who had spoken stepped forward and passed a device over her neck. The device beeped and a distinctive click was felt on the slave collar around the young woman's neck. The Marine then simply used his suit's augmented strength to break the slave collar, which he promptly threw away.\n\n\"Go to the shuttle,\" the Marine ordered.\n\n\"My baby!\" the woman cried. \"She is in the creche.\"\n\n\"Corporal Lynd, go with..?\" the Marine asked.\n\n\"Audette Laquois,\" the woman replied.\n\n\"Show the corporal where the creche is, retrieve your baby and head to the shuttle,\" the Marine ordered. \"Lynd, stay in the creche and make sure no one threatens the children until we leave here.\"\n\nLynd acknowledged her orders and followed the woman to the creche. Encouraged, more and more people came forward. The Sergeant had been told that there were some 5,000 citizens held at this site.\n\nFour hours later, they had lifted more than 11,000 to the ships above. They didn't know if they had gotten all of the Union Citizens or not but they could not stay any longer. Planetary air and ground forces were pushing a significant counteroffensive. It was time to leave.\n\nThe raid on Gaetan's Planet was a smashing success with no serious injuries to Union forces. Not all of the other raids would be so successful...\n\nGordon Orbiting Station, New Hadria, Frogus System, Seventy-Four Light Years from Terra\n\nMiles Devon was pissed. A Traffic Control Tech on the Gordon Orbital Station, he had just had the Union Ship SSP Carlos, Capt. Coal Devers, appear on his plot, demanding access to the upper tier of the station for pick-up of 'high-end' products, without being able to provide a manifest number.\n\nIt was obvious to Miles that the Carlos was shopping, and not actually picking something up. They could go through the station like any other ship that came into the system.\n\nThe Carlos was attempting to force the issue once again. Miles contacted his superior.\n\n\"Sir, we have a ship, SSP Carlos, which is attempting to gain access to the upper section of the station without invitation,\" Miles began. \"They are making claims of picking up 'high-end' items, without being able to show a manifest number.\"\n\n\"Yeah, that happens fairly frequently,\" his supervisor replied. \"They are probably seeking a shopping expedition on the upper decks.\"\n\n\"That was my thought, sir,\" Miles conceded. \"However, they won't back off from attempting to get access.\"\n\n\"Let me talk to them,\" his supervisor took over the comms. \"SSP Carlos, this is Gordon Station Control, you do not have proof of invitation to the upper deck. You will not be given permission to dock in the VIP section. If you wish to come to the station, you will dock in the lower section. If you continue to push this issue, you will be boarded for a customs inspection.\"\n\n\"That should get them to back down,\" his supervisor told Miles. \"Just in case it doesn't, swing one of the customs ships over her way.\"\n\nMiles acknowledged the order and sent instructions to the Customs Ship Elite on a separate channel. He watched as the ship moved over near to the Carlos.\n\n************\n\n\"It doesn't look as if they are going to let us dock on the upper deck, sir,\" Comms told Capt. Devers.\n\n\"Shit. We should have thought to have a manifest number available,\" grumbled the captain. \"What are the options?\" he asked of the Marine Lieutenant that was assigned to his ship.\n\n\"Not much, we cannot fight our way through the station from the lower docking areas,\" Lt. Brian Esca growled. \"We will have to go with plan B. We need to send a signal to the picket.\"\n\nThe captain gave the order. The Comms specialist sent a tight-beamed message to a specific area of space. Ten minutes later, the picket was relaying the message to the Raid Leader.\n\nNS Saraswati, Numbered Star System HD-137982\n\nAboard the NS Saraswati, Capt. Balakrishna cursed under her breath as the Comms O passed the message. They had success on the Handren Station but not on the Gordon Station.\n\n\"Comms, advise the ships going to the Gordon Station, they are using Plan B. Ships going to the Handren Station, we are going with Plan A. Advise me when all ships have acknowledged,\" she ordered.\n\n\"Aye, sir,\" came the immediate reply. She half listened as the orders were passed. A few minutes later, the Comms O advised her that all ships had responded.\n\n\"Comms, fleet-wide now,\" Damyanti was mad and it showed in her demeanor. She didn't want anything else to go wrong on this raid, unfortunately for her, it would.\n\n\"Sir, you have fleet-wide,\" the Comms O informed her a minute later.\n\n\"All ships, this is Balakrishna. We jump in one minute on my mark...three, two, one, mark.\"\n\nNo one acknowledged but they didn't need to. A minute later, the fleet jumped on a raid against New Hadria that already had problems...\n\nGordon Orbital Station Control, New Hadria\n\nThe supervisor briefly came up on Miles' command net.\n\n\"Any other issues with the Carlos?\" he asked.\n\n\"No, sir, the ship has gone silent for now,\" Miles informed his boss. Miles cursed as his comp told him that the Carlos had sent out a shuttle. Its trajectory was the VIP Shuttle Dock.\n\n\"Sir!\" Miles called out.\n\n\"I see it, Devon,\" his boss answered. \"Order the Elite to close on that shuttle and force it to a halt or destroy it.\"\n\nBefore Miles could reply, alarms stated sounding.\n\n\"Alert, Alert, multiple ships have jumped deep into the gravity well, they are jumping in all around the station!\" came the frantic call from another controller.\n\nMiles looked up as something impacted his peripheral vision. An odd looking small ship had come to a stop right outside of the Plasteel window in front of him. A gun, with a very large bore, was turned toward the window.\n\n\"Attention Gordon Station Control,\" came over the guard channel. \"This is the NS Albert Hern of the Union Navy, Capt. Todd Cl\u00e9ment commanding. You will surrender control to the Marines currently approaching your VIP Dock. Any resistance will be met with deadly force.\n\n\"We are the vanguard of a raid against New Hadria to rescue our kidnapped citizens who are currently being held illegally as slaves on your planet. Do not attempt to transmit any messages or you will be fired on,\" Miles heard.\n\nAs Miles watched, the situation board showed more and more ships arriving in-system near to the station. The computer was painting all of the ships as Union Navy vessels.\n\n\"Sir, I have forty-six ships, half of them Fairling Class Frigates, jumping in around the station! The numbers keep going up!\" a panicked voice called out.\n\n\"Sir, the shuttle is almost at the VIP Dock. Do we let it in?\"\n\nBefore the supervisor could respond, the CNHS Elite opened fire on one of the small ships and was promptly blown out of space by the return fire from half-a-dozen other small ships.\n\n\"Shit, no,\" the supervisor groaned as he witnessed the destruction of the Elite. \"Give them access to the VIP Dock. Advise the customs agents and guards there to leave their posts immediately. We do not want to have unnecessary casualties. Have the customs ships in the area back off immediately and have the Defence Force Ships back off as well. \"\n\nA few minutes later, a group of Union Marines marched into Control and took over running the station. The raid was already several minutes behind and the ships were not in their optimum location, but the raid had to continue as it was...\n\n************\n\n\"Attention New Hadria Planetary Control, this is the NS Saraswati, Capt. Damyanti Balakrishna commanding. The Union Navy is conducting a raid to rescue Union Citizens who have been kidnapped and are currently being held illegally as slaves on your planet.\n\n\"Any ship that attacks this task force, or any person who attempts to stop our operation on your planet, will be considered an enemy and engaged with deadly force,\" Damyanti sent out over the guard channel from her place on the Battle Bridge.\n\n\"Sir, Science, I show eighty plus ships, ten Handren Class Frigates, fifteen Forma Class Frigates, and twenty-five Hadria Class Escort ships. The other ships seem to be armed Customs ships, their armaments are not large enough to engage warships.\"\n\n\"Sir, Tac O, the Defence Forces are spread out around the planet and are currently converging on the two halves of the Task Force,\" the Tac O advised.\n\n\"Roger, ensure that data goes to the Tactical Link with the enemy ships painted as red,\" Balakrishna ordered.\n\n\"Already on the link, ma'am,\" the Tac O informed her.\n\nBeside the 174 ships that each planet was allocated, Balakrishna's task force also included an additional twenty Whippet Class and thirty Valour Class. She sent those fifty ships and eight Fairling Class Frigates to engage the approaching enemy in her area while the same was being done in the area of the Gordon Orbiting Station. It would be a hard fight for both of the mini-fleets, though they had been practicing joint attack formations for several weeks now.\n\nThe engagement was indeed hard fought as the New Hadrian Defence Forces had been seriously rebuked for not engaging The Wanderer previously but the New Hadrian forces did take the brunt of the damages. They had not really practiced working together and were seriously under-armed and under-trained for engaging Union Navy ships of this calibre.\n\nStill, the Defence Forces did manage to damage several of the Task Force's vessels, mostly Valour Class vessels, who had to be recovered onto Fairling Class ships, meaning there was less space for shuttles aboard those ships. There were also several Whippet Class Frigates that were damaged, though only one could not jump.\n\nThe Battle Bridge was active in solving issues of distribution of shuttles between ships and recovering the severely damaged Whippet Class. They sent in Fleet Tender Ulysses to take the ship into its larger hold for the jump out to the rear rally point, where the Persephone was waiting.\n\nIt took Task Force New Hadria a lot longer than they had estimated to take care of the orbital threat. That allowed the planetary Airforce and Militia to prepare to engage the raid as it came down.\n\nDamyanti sent the raid down to the planet, along with many additional Valour Class ships to assist. It was a good choice, as they were sorely needed to get the Combat shuttles down to the ground on the eighteen targets they were going against.\n\nWhile none of the Combat Shuttles or Valour Class were destroyed, several Combat Shuttles were damaged and would not be able to lift off the surface and eight Valour Class were damaged and had to withdraw to orbit.\n\nDamyanti sent additional Valour Class down to assist, while the people on the ground began to do their thing. It didn't take long for the Planetary Militia to engage some of the forces on the ground. The Task Force started taking casualties.\n\nDamyanti sent additional combat forces down and had the Valour Class strafe the Militia forces engaging the raiders. That provided some reprieve for their teams on the ground who were now sending shuttles back up filled with freed citizens.\n\nPlanetary Air Forces began to engage the shuttles returning to orbit, destroying several with the loss of all onboard, before they were successfully engaged by the Valour Class ships.\n\n\"We are not recovering people fast enough,\" MCPO Gigamy advised her. \"At this rate, it will take us over twelve hours to bring our people out.\"\n\n\"Send down more Valour Class and tell them to prioritize their efforts against the Planetary Air Force. They have authority to engage any military aircraft that approaches our shuttles,\" Damyanti ordered. \"I will give them twenty minutes to engage them, then we send down the unarmed shuttles.\"\n\n\"Aye, sir,\" Gigamy responded, sending out the orders. She had to move Whippet Class Frigates about to cover for the loss of the Valour Class, however, they had orbital control...for now.\n\nThe additional Valour Class sank into the atmosphere with a vengeance, engaging enemy aircraft with a will. In no time, they had air superiority over the areas they wanted. How long that would last was another matter.\n\n\"We have air superiority for now,\" Gigamy told his boss. \"I am sending in the unarmed shuttles.\"\n\nDamyanti acknowledged her Master Chief. Her priority was on the active battles on the planet, while he managed the movement of the shuttles. The addition of the unarmed shuttles doubled the number going down to the planet. That would help bring the Task Force back near to its required time schedule, though Damyanti was aware that they would not get the numbers out they were hoping for.\n\n\"We have 8,465 who have reached the ships,\" Gigamy advised her.\n\n\"Good, if we can double that on this load, it will bring us near to our schedule,\" she told the Battle Bridge.\n\nThe ship shuddered.\n\n\"Ex O, what the hell is happening?\" Damyanti called out to the bridge.\n\n\"Sir, we have been engaged by several torpedoes,\" Cdr. Lindal informed the Captain. \"We have managed to take three of them out, though one did get through. The ship took the blast, though we are not holed, the Gara-Hinn shield protected us. The ship that fired on us is now being aggressively engaged by Whippet Class ships.\"\n\n\"Roger, have Science and Tactics keep an eye out for other enemy ships that are getting within firing range of torpedoes or missiles,\" Damyanti advised.\n\n\"Roger, we are looking for those now,\" Lindal replied.\n\nDamyanti cut the link as she focused back on the ground battle.\n\nThe second group of shuttles was starting its assent out of the atmosphere while the first group was returning to the surface with additional unarmed shuttles to assist. Time was their enemy now. The planetary militia was working to get enough of a concentration of forces to successfully sweep through the raid, while the Valour Class were working to suppress any build up of the enemy in the air and on the ground.\n\nWhile Union forces currently had air superiority, the ground forces had the advantage of manpower, knowledge of the terrain, and time. It wouldn't be long before Damyanti would have to call a halt to the raid.\n\nShe sent down one more group of shuttles as the third wave began to ascend.\n\n\"We got 17,526 up from the second wave, that's slightly better than twice the number of the first wave,\" Gigamy told his boss.\n\n\"The wave going down will be the last wave, no matter the numbers we bring out,\" Damyanti told him, giving him a look that broke no argument.\n\nGigamy held up his hands in surrender. \"I agree with you ma'am.\"\n\n\"Ex O, how does it look out there?\" Damyanti asked.\n\n\"Ma'am, we have orbital control. The opposition has faded back,\" Lindal told her.\n\n\"Good, keep a close eye on things. When the opposition realises there are no other shuttles going down, they will get desperate to do something,\" Damyanti mused.\n\n\"Aye, that they will,\" Lindal agreed. \"We can always move our forces around a little to intimidate the opposition.\"\n\n\"Good idea. Twist their tails a little, but try not to engage them, we don't need them to get desperate and damage any more of our ships,\" Damyanti ordered.",
        "\"Ma'am, our people on the stations are indicating that the slaves on the station are asking for asylum,\" Gigamy stated.\n\n\"How many?\" she asked.\n\n\"We are looking at around 800 plus for both stations, ma'am,\" the Master Chief replied.\n\n\"OK. Since we are not sending any more shuttles to the planet, send some of the offloaded shuttles to the stations,\" Damyanti ordered.\n\nShe kept an ear out to what was happening around the Battle Bridge, trying to gauge the response of the enemy. She heard something that she didn't want to hear...\n\n\"Ma'am, we are seeing a large group of military aircraft heading to our area of operations, many transports with fighter escorts,\" one of the techs informed her.\n\n\"Shit, how long before they get there?\" she asked.\n\n\"Approximately twenty minutes, ma'am,\" she was told.\n\n\"Can we intercept them with the Valour Class?\" she asked.\n\n\"No ma'am, currently, all the Valour Class in atmosphere are suppressing the enemy ground forces or engaging enemy air forces attempting to attack the shuttles,\" she was told.\n\n\"Gigamy, order the shuttles that are still going down to return without landing. Any shuttles on the ground, they have fifteen minutes to complete operations. That's all the time we can give them. If they are not in the air by then, they will likely be engaged by enemy aircraft. They need to get out of the atmosphere within the next twenty minutes,\" she ordered.\n\nThe grim faces around the Battle Bridge told her everything. She had no choice and her team understood that.\n\n\"Those that are left behind, we will get out through diplomatic means, this raid is meant to get as many of our people out as we can. It was never intended to get everyone out. We have done a good job, so far. Let's get the rest of our people on those shuttles back to the ships and get us the hell out of Dodge,\" Damyanti ordered.\n\nA chorus of subdued, \"Aye, sirs,\" responded to her orders.\n\n\"Ex O, we are cutting our raid short as opposition on the planet is intensifying,\" Damyanti sent to the bridge. \"Keep a sharp eye on anyone trying to be an idiot out there.\"\n\n\"Aye, sir.\"\n\n\"Master Chief?\"\n\n\"The shuttles are starting to return, ma'am,\" he replied. \"We have half of them out of the atmosphere, now. There are still 182 shuttles on the planet.\"\n\n\"Are they aware of the timeline?\" Damyanti demanded.\n\n\"Aye, ma'am. They were informed that we could not protect them any further than four minutes from now,\" was the response.\n\nThree minutes later, the last of the shuttles were in the air.\n\n\"Ma'am, all the shuttles have left the surface, we are starting to see the faster aircraft entering our assault area. The Valour Class are engaging; however, these aircraft have long range missiles that our ships will have to deal with,\" Gigamy said.\n\n\"The crews from the damaged shuttles left on the planet?\" Damyanti asked.\n\n\"Already recovered during previous runs, ma'am, including the dead, ma'am,\" Gigamy returned.\n\n\"Have the Valour Class protect the shuttles as they leave the atmosphere. Inform them there are no other shuttles coming down, they can come to orbit with the shuttles,\" Damyanti ordered.\n\nTwelve minutes later, all the shuttles had left the atmosphere and were approaching their host ships, their Valour Class escorts coming up behind them.\n\n\"Let's pull back the ships in near orbit. Make sure we keep a wary eye on the Planetary Defence Forces ships. We don't need one of them getting a pot-shot at our retreating vessels,\" the captain ordered.\n\nThe plot got a little confused as the shuttles merged with their ships but it then cleared up as the ships informed the Saraswati they were ready to jump.\n\n\"Roll the Task Force back, let's return to the jump out point and get the hell out of here,\" Damyanti ordered, heading to the bridge.\n\n\"Captain on the bridge,\" came the call as she stepped onto the Captain's Deck and sat in her command chair.\n\n\"Status?\" she demanded.\n\n\"We are green across the board, sir,\" Lindal replied instantly.\n\n\"The fleet is getting ready to move to the jump out point. I want to be in the last third of the ships getting there. We jump as per the plan with the rescue ships and hospital ship going first, followed by the warships. Nav, let's head to our assigned monitoring point,\" Damyanti ordered and got an \"Aye, sir,\" back immediately.\n\nDamyanti watched the plot as the fleet moved back, the warships protecting the rescue ships who had most of the citizens on board. She was keeping a close eye on the tracts of the Planetary Defence Force ships, which were starting to follow the departing fleet.\n\n\"Ma'am, we got an additional 14,312 people off the planet and 872 slaves off of both of the stations for a total of 49,175 people,\" Gigamy reported.\n\n\"That's more than we bargained for,\" Lindal quietly told her boss, speaking from the Ex O's chair.\n\n\"Yeah, but how many of them are actually Union Citizens?\" Damyanti inquired.\n\n\"Captain, Tac O, the first civilian ships are jumping out, ma'am,\" the Tac O reported.\n\nDamyanti watched the tactical display as more and more of her fleet reached the jump out point and jumped to relative safety of the HD-137982 Star System.\n\n\"Sir, Tac O, the Defence Force ships are accelerating after us, ma'am.\"\n\nAlarmed, Damyanti watched the rear-guard action, trying to determine if the Defence Forces would get close enough to launch weapons. Her mental calculations told her it would be close.\n\n\"Comms, advise the rear-guard to launch some torpedoes their way,\" Damyanti ordered.\n\nSix Whippet Class ships of the rear-guard launched torpedoes from their rear tubes. They chose to use the 'quiet launch' system, which basically used only enough gas to force the torpedoes out of the tubes. The torpedoes' computers were rigged to fire the engines two minutes after launch, right when the enemy ships would be well within range.\n\nAs the Defence Force ships approached the rear-guard they got an unpleasant surprise when they suddenly found a few dozen torpedoes engaging them without warning. Eight of the Defence Force ships were engaged while the remaining ten ships split wide to avoid the torpedoes, the manoeuvre gave the Task Force time to get to the jump out point and jump, leaving four severely damaged Defence Force ships in their wake.\n\nSurdend Orbital Station, Planet Surdend, Sch\u00e4fer System, Sixty-Eight Light Years from Terra\n\nSSP Crowsfoot entered the system high in the gravity well and made it's way down toward the station.\n\n\"Surdend Station Control, this is SSP Crowsfoot, Capt. Benjamin Revelle commanding, requesting parking orbit with access to VIP Docking as we have priority goods for Surdend AG, over.\"\n\n\"Control, roger. We are sending you a plot to follow to your parking orbit, over.\"\n\n\"Crowsfoot, roger, we are on your plot now, see you in thirty minutes, out.\"\n\nTwenty minutes later, the Crowsfoot's shuttle was launched toward the VIP Dock which it reached within seven minutes. Three minutes after she docked, the Marines had taken over the Control Center. A message went out to the Comms Picket six minutes light from the station. Eight minutes later, Task Force Surdend was jumping into the system. They had complete surprise as they came in.\n\n\"Attention Planet Surdend Defence Force, this is the NS Suurland of the Union Nay, Capt. Jurgen Holf commanding. We are here to retrieve our kidnapped citizens illegally being held as slaves on your planet.\n\n\"Any ship that attacks this task force, or any person who attempts to stop our operation on your planet, will be considered an enemy and engaged with deadly force,\" Holf broadcast.\n\nHolf was on a tight schedule, he had 28,000 souls, in fifteen different locations, to retrieve from the planet. He was determined to complete his mission well within the six hours allocated time.\n\nThe fleet jumped out five hours later, having retrieved 32,523 citizens.\n\nErden Orbital Station, Erden's World, Erden System, Eighty-Six Light Years from Terra\n\nSSP Montclair came into being in Erden's high orbit.\n\n\"Erden Orbital Station, this is the SSP Montclair, Capt. Joseph Citadelle commanding. We are requesting access to VIP Dock for transfer of high-end goods on manifest #EFTL-2486-11337752, over.\"\n\n\"Control, roger. You have authority to access the VIP Dock. Follow the plot we are sending to your parking orbit, over.\"\n\n\"Montclair, roger, we have your plot. We will be twenty-two minutes to parking and ten minutes thereafter to VIP docking, out.\"\n\nThe Montclair came in right on time. Two minutes after the shuttle entered the VIP Dock, Erden Station Control was in the hands of the Marines.\n\nWithin fifteen minutes, Task Force Erden was making its way into the system. As in the Sch\u00e4fer System, they had complete surprise.\n\nThe NS Agrippa, Capt. William Stahl commanding, came into the system and made his challenge. With only fifteen ships of the Planetary Defence System, most of them older Forma Class Frigates, they also had complete dominance of the system and, consequently, the surface.\n\nStahl had 18,000 citizens in six locations on the planet's surface. He got out 26,000 and Task Force Erden was the only raid that managed to get out all of the Union Citizens on its target lists, though they wouldn't confirm that for several days.\n\nThe raid wrapped up quickly, well within four-hours, with no injuries or damage to any of their ships. They made their way to the jump out point and back to the HD-137982 Star System, only to find that Task Force Adenomere was in trouble.\n\nVuelta, Della System, Seventy-Nine Light Years from Terra\n\n\"Vuelta Station Control, this is SSP Avalos, Capt. Carlos Ramras commanding, requesting parking orbit near you with intent to retrieve high-end items of manifest #VFTL-2486-11599876, over.\"\n\n\"Vuelta Control, roger. There is a lot of traffic in or near the station, please follow the plot being transmitted to guide you to your parking orbit, over\"\n\n\"Avalos, roger, we have your plot and are following it to our parking slot. Request permission to send a shuttle to the VIP Docking Deck once in our parking slot, over.\"\n\n\"Vuelta Control, roger, you may send your shuttle when you are ready, out.\"\n\n\"That was easy,\" 1<sup>st</sup> Off. Martina Davis commented.\n\n\"Well, it makes it easier that we actually have an item on hold for Kaarina Kauppila, CEO of Kauppila Holdings, our boss,\" Ramras laughed. \"We get to kill two birds with one stone, #1.\"\n\n\"Speaking of killing birds, how is the selection fight between the ChEng and my CWO?\" Lt. Sampras, the Marine Platoon Commander, demanded.\n\n\"Mr. Sampras, do you not understand how things work in the universe? All men are jealous and sparked by the green-eyed monster where we women are involved. We women, are only too happy to have it so. The key, sir, is to ensure that the jealousy doesn't get out of hand,\" Martina Dayin, the 1<sup>st</sup> Officer told him. \"A little jealousy pampers our egos; a lot of jealousy is detrimental to all.\"\n\n\"Ah, playing the odds then are we?\" Sampras asked.\n\nThat got a giggle from the women around the bridge.\n\n\"Capt. Nav, we are approaching our parking orbit, sir,\" Nav sang out.\n\n\"Roger, FTL and sub-light engines to stand-by, I want us ready to move on a moments notice, thrusters to station keeping,\" the Captain ordered to a chorus of \"Aye, sirs.\"\n\n\"Number 1, you and the Cargo Officer will retrieve the high-end cargo and initiate the Marine's assault. Mr. Sampras, you and your Marines are up. We launch the cargo shuttle in ten,\" Ramras barked out.\n\nFifteen minutes later, the shuttle landed in the VIP Dock, conveniently close to station control. The two ship's officers showed the manifest and swiftly took out the two guards and two customs agents at their posts. The Marines left the cargo shuttle and, using their suit's augmentations, ran into control. They had their comms specialists in place in less than a minute, with no disruption to the comms flow and with nobody on the station the wiser. The Avalos even managed to retrieve its cargo before all hell broke loose.\n\nSampras opened his comp and sent a signal to the Avalos, which relayed the signal to the comms picket five minutes light from the station. A few minutes later, Task Force Vuelta was jumping into its designated location.\n\nIt had been decided that, because of its notoriety from their previous visit to New Hadria, The Wanderer's name would not be used in the raid.\n\n\"Vuelta Planetary Control, this is the Union Navy Task Force Vuelta, Capt. Hellene Degault commanding. We are here to retrieve our kidnapped citizens illegally being held as slaves on your planet.\n\n\"Any ship that attacks this task force, or any person who attempts to stop our operation on your planet, will be considered an enemy and engaged with deadly force,\" Hellen transmitted.\n\nThe ship's bridge crew was operating ahead of orders, the many hours of drills being put to immediate use as Science scanned the local area and determined which ships were armed and which were not.\n\n\"We see fourteen armed vessels of the Planetary Defence Force in orbit, sir. We have three Handren Class, four Forma Class, and seven Hadria Class,\" Science called up, the designated ships appearing on the Tactical Link in red. \"We also have ten lightly-armed customs ships, fifty-three civilian ships, mostly supply ships but a few transports, and twenty shuttles going to and fro from the planet,\" Those ships appeared as green on the display.\n\nIn the Battle Bridge, Raymond noted the Tactical Link firming up as the plot was added to. He listened in as Hellene sent orders to the fleet to confront but not to engage the Defence Forces so long as they did not attack.\n\nRaymond sent the Combat Shuttles to the surface with half of the Valour Class to act as escort. They had a few military aircraft approach but they backed off as soon as they discovered they were out-positioned by the much higher flying Valour Class.\n\nThe Combat Shuttles landed near to the barracks where they expected to find Union Citizens. As soon as word got around, slaves by the hundreds came to the shuttles.\n\n\"We have air superiority, sir,\" one of the Chief's called out to Raymond.\n\n\"Send the civilian shuttles down immediately,\" Raymond ordered. By now, the Task Force had been in-system for more than an hour. It would take the civilian shuttles twenty minutes to get to the planet's surface, by which time the original wave of Combat Shuttles would be starting to return to orbit.\n\n\"Sir, Comms, we are intercepting radio transmissions from the local Militia to the Airforce. They are angry for Airforce's refusal to engage our shuttles,\" the Comms tech in the Battle Bridge advised Raymond.\n\n\"How many Combat shuttles do we still have available?\" Raymond asked.\n\n\"Eighty-two, sir, and 146 civilian shuttles,\" came the immediate reply from one of the Chiefs.\n\n\"Send them all down with the second wave, the Combat Shuttles to act as a deterrent to Planetary Militia,\" Raymond ordered. \"Someone is going to try something unless we make it obvious that we will use force when necessary.\"\n\nOn the ground, the first wave was swiftly filling the interiors of the Combat Shuttles and preparing to return to orbit and their waiting ships. They were ordered to stay on the ground until the second wave was down and replacing the Marine Security Picket.\n\nA few minutes later, the first of the second wave of shuttles was down and security pickets were being swapped out. The first wave launched, headed to the relative safety of the fleet.\n\n\"Sir, we show a sub-orbital launch of military cargo ships, likely with troops aboard,\" Science on the Battle Bridge relayed.\n\n\"Comms, send a message on all Guard Frequencies; we will engage those ships if they continue on their present course,\" Raymond ordered, listening in on the resulting conversation as Planetary Airforce and Militia attempted to argue their authority.\n\nRaymond sent a couple of Whippet Class Frigates to an intercept point above the sub-orbital flight and ordered them to engage a couple of the smaller fighters escorting the flight, the pilots of which managed to escape their disintegrating aircraft. Two minutes later, the Militia flight was diverting from its course.\n\nOne problem solved, Raymond thought.\n\nThe first wave of shuttles was returning to their ships, where triage of the rescued would take place. Those that needed immediate care would be transferred to the hospital ship, either here or after the first jump, for treatment.\n\nRaymond kept a close watch on the clock as the numbers started coming into the Battle Bridge. They had already been at it for over two hours. Fortunately, they numbers of suspected Union Citizens on Vuelta did not exceed 9,000.\n\n\"We have retrieved 8,211 in the first wave, sir,\" MCPO Bridgette O'Neil informed him.\n\n\"Good numbers. Let's hope the second wave gets the remainder,\" someone commented.\n\n\"We are likely to have more on the second wave. I anticipate many slaves falsifying claims of citizenship in order to escape,\" Raymond stated. \"We can bring up almost 14,000 with the number of shuttles down now.\"\n\n\"We are receiving reports of fighting on the ground,\" Comms relayed.\n\nRaymond sent in additional Valour Class to support the shuttles now down. They strafed the Militia which quickly backed off, giving the Task Forces' ground troops a breather.\n\nShuttles from the second wave began to ascend to orbit.\n\n\"All ships in atmosphere, keep a close eye on the ascending shuttles, we don't need some local hero attacking them,\" Raymond ordered over the general frequency.\n\nMore and more shuttles were launching to orbit as they wound down the ground operations.\n\n\"All the civilian shuttles are now in the air. Security Picket is pulling in, returning to the Combat Shuttles, which are beginning to launch,\" Comms relayed.\n\nRaymond was watching the clock. Almost four hours had passed. They had wanted to get this completed within a six-hour window; they would be ahead of that.\n\n\"All shuttles are in the air, sir,\" Comms relayed.\n\n\"Capt. Degault, let's start pulling back the ships in orbit. Keep a close eye on the Planetary Defence Force ships,\" Raymond ordered.\n\n\"Aye, sir,\" Hellene returned, sending her orders out to the fleet.\n\nThe pull-back was orderly, with Valour Class coming back to orbit and transiting directly to the fleet. The remaining Valour Class and Whippet Class were keeping a close eye on the Defence Forces, the captains of which were not stupid enough to engage such a superior assault force of over 174 warships and 42 supply ships.\n\n\"We have retrieved all the shuttles with no losses, sir,\" Comms relayed.\n\n\"Right, Hellene, send out the orders, let's move to the jump out point, make sure to keep a close eye on our rear guard and vanguard,\" Raymond sent to the bridge. He then moved to the Bridge where he could keep a closer eye on the Tactical Link on the much larger bridge monitor.\n\nThirty minutes later, they were almost at the jump out point when MCPO O'Neil sent him a private communiqu\u00e9, \"Raymond, we got an additional 7,918 out on the last wave, we have eight injured Task Force members, from the attack by local militia, none of them serious. There are no casualties and none of our ships have sustained serious damage. The fleet is intact, sir.\"\n\nRaymond watched the Tactical Link as ships began to jump out to the rendezvous point. Activity on the bridge increased as the ship reached the jump point.\n\n\"Prepare for jump,\" Capt. Degault called out, \"Jump, jump, jump...\"\n\nAdenomere Station, Planet Adenomere, Adenomere System\n\nSSP Clive Russel came into the system and made its way down the gravity well to Adenomere station.\n\n\"Adenomere Station Control, this is SSP Clive Russel, Capt. Jonathan Veillans commanding, requesting permission to park near VIP Docking as we have high-end goods for consignment, over.\"",
        "\"Adenomere Control, roger, what is the nature of your consignment, over,\"\n\n\"Russel, that is confidential, consignment for Peotre Adenomere, over,\"\n\nIt took a few minutes for Adenomere Control to return.\n\n\"Russel, this is Adenomere Control, you are authorized to use the VIP Dock. A representative of Adenomere Three will attend your needs. Follow the plot we are sending, as there is heavy traffic around the station, over.\"\n\n\"Russel, roger, we have your plot and will follow it in. Russel, out.\"\n\nFifteen minutes later, the Russel was in its assigned parking orbit and a shuttle was on its way to the station. The Cargo Officer and the First Mate left the cargo shuttle, moving an anti-grave pallet with several cases of high-end liquor on it to the customs point. Four minutes after arriving on station, the Marines were in station control and were completing the take-over with their Comms Techs sitting in the controller's seats. The Cargo Officer was replacing the cargo of high-end liquor back in the shuttle.\n\nNo sense letting it go to waist, the Cargo Officer thought as he secured the cargo.\n\nA message was sent to a Valour Class Comms picket five light minutes from the station. It relayed the message via it's ICS link. Two minutes later, Task Force Adenomere was arriving in system. However, that's as smoothly as the assault went at Planet Adenomere...\n\n\"Sir, Science, I show fifty-three vessels of the Planetary Defence Force all concentrated around the Adenomere and Gordon stations. I also show an additional thirty-six named armed vessels in a single group, these are known pirate ships, sir!\" Science called out.\n\nThe Tac O was fervently placing information up on the Tactical Link for the fleet as information came in.\n\nCapt. Henadi Noor looked at the information and was not pleased by what she saw. Twenty-eight of the fifty-three Defence Force ships were the newer and more capable Handren Class Frigates, the remainder split with eight smaller Forma Class Frigates and nineteen Hadria Class Escort ships.\n\nThe pirate fleet consisted of twelve heavy ships, nine older Ballaron Class Frigates with three Fairling Class, eight Ballang Class Escort ships, and a mishmash of sixteen other ships, mostly outdated CP Navy vessels, though there were two Whippet Class Escort ships in pirate livery.\n\n\"Shit,\" Noor said as the Tactical display became more involved. \"This is going to turn into a fight.\"\n\n\"Cmdre. Dostier, our cover is blown. They know we are here, and it is too late to jump back out with the older ships in our fleet having to take time to recharge,\" Noor advised the Battle Bridge.\n\n\"I agree, Henadi,\" Dostier replied. \"We'll have to fight our way through. Fortunately, since we have the bulk of Citizen Slaves on this planet, we also have more fighting ships.\"\n\nTask Force Adenomere's fleet was slightly heavier in resources than the other raids. She had more of everything in order to get the expected number of citizens off the planet. She had an extra thirty Whippet Class Escorts, and fifty Valour Class for a total of 254 warships in the task force. She also had more navy and civilian supply ships, making 80 rescue vessels. That gave her a fleet of 334 ships.\n\n\"Attention Adenomere Planetary Control, this is the Union Navy Task Force, Commodore Liana Dostier commanding. We are here to retrieve our kidnapped citizens illegally held on your planet as slaves.\n\n\"Any resistance by ships in orbit, by your Airforce, or by your Militia, will be met with deadly force,\" the Dewfall broadcast on all guard channels.\n\n\"Screw you Union!\" came the reply, as the enemy ships began to take up attack formations.\n\n\"All ships, adopt fleet assault pattern Delta,\" Noor ordered through the Tactical Link.\n\n\"Assault groups, team up with those you have practiced with and engage as required, Dostier, out,\" Liana sent over the Tactical Link as her forces moved to engage the enemy. She kept the rescue ships in a tight, well protected ball.\n\nAdenomere Estate, First House of Adenomere, Planet Adenomere, The Adenomere System\n\nAlarms were going off all over the estate bringing confusion to the slaves and to Aurelia, who had no idea what they meant.\n\n\"See if you can contact Korman and find out what is happening,\" Aurelia ordered of Cierra, who immediately began sending messages to the senior PA.\n\n\"Mr. Korman says that there is a Union Raid in orbit. They are here to get their citizen slaves out, according to their purported challenge. According to Mr. Korman, they have a fleet of over 300 ships, against, a combined Defence Force of just over 90 ships,\" Cierra informed Aurelia.\n\n\"I'm surprised it took the Union this long,\" Aurelia mused. \"What are Mr. Korman's instructions?\"\n\n\"We are to go to the basement shelter and wait out what is happening in orbit,\" Cierra informed her boss.\n\n\"That could take some time. Space battles are lengthy,\" Aurelia informed her staff. \"Alright, does anyone know where the basement shelters are?\"\n\nJirani, Kodani, and Cierra all raised their hands.\n\n\"Very well, Jirani, you can escort me down there. We'll need to bring food for ourselves and probably for the other house slaves as I am sure that the Adenomere's will not anticipate being in the shelter for long.\n\n\"Cierra, take May, Mei, Allen, Kodani, and the cook with you and round up the house kitchen staff. Get them to move enough food stock to support the household for forty-eight hours into the shelters. Use my authority to impress any slaves you need to move the necessary material into the shelters.\n\n\"If Mr. Korman asks, tell him I said the assault in orbit could last twenty-four hours or longer and we will need the extra supplies,\" Aurelia ordered.\n\nThe staff split up and began to do as requested, while Aurelia followed Jirani and to the basement shelter. They arrived just as Marius and Jaar did.\n\n\"Good to see that you found the shelters,\" Jaar intoned.\n\n\"Yes, my staff was aware of the location. Are you aware of the length of time that space battles can go on for?\" Aurelia asked.\n\n\"They seldom last more than four or six hours,\" Marius told her in a smug tone.\n\n\"Actually, that is not correct. Small battles of up to four ships per side can last four to six hours, but the number of ships that I am hearing are involved mean this battle could go on for one or more days,\" Aurelia informed them. \"That is what I have learned from my studies of the war.\"\n\nMarius looked at his father, who called up items on his comp. His face suddenly got very pale looking.\n\n\"We will need to bring down more food stock,\" Jaar said to Korman.\n\n\"That won't be necessary,\" Aurelia informed him. \"I have directed my PA to find the house cooking staff and ordered them to bring down forty-eight hours worth of food. My PA is authorized to impress any staff they require to facilitate the move.\"\n\nJaar gave Aurelia another of those long looks.\n\nDamn but Armstrong Gordon was foolish to let this one go, he thought.\n\n\"What about the slaves in the fields?\" Aurelia asked.\n\n\"There are no shelters in the barracks,\" Jaar replied. \"The field workers have been ordered back to the barracks until this event is over.\"\n\n\"I hope they will still be there when this is over,\" Aurelia replied.\n\nThe two Adenomeres moved into a private room. Uninvited, Aurelia followed. The room was very well appointed, with couches, cushioned winged chairs, executive-level office chairs, a conference table with twelve chairs around it, and several 3D monitors on the wall, each now showing different imagery.\n\nOne was showing the battle in orbit from the point of view of Adenomere station. It clearly showed the Union forces in red. There were two fleets in blue, one listed as the Planetary Orbital Defence Forces, one listed as Armed Support Forces, a euphemism for the pirate fleet in orbit.\n\nWhat surprised Aurelia was the number of 'friendly' ships that had already been damaged. It had only been an hour since the alarms had sounded, yet thirty ships had already been damaged to some extent and at least eight were no longer involved in the fray, four of which were indicated as inoperable and requiring support/rescue.\n\nA second monitor was on the Planetary's Air Force net, watching the preparations to resist the intended assault on the planet.\n\nA third was tied to the Militia network, indicating the level of preparedness that was ongoing to repel the assault. Not much had happened there yet, though there was a list of actions to be taken and the time it would take to complete those actions. Aurelia noted that they would start being checked off after three hours. The longer the event in orbit continued, the more prepared the Airforce and Milia would be.\n\nA fourth was watching the Planetary Stock Markets as they responded to the event.\n\nTwo others were open on the underground bunkers of Antonius Adenomere, head of the Second House of Adenomere, showing that person and some of his sons and their wives, and Peotre Adenomere head of the Third House of Adenomere, though there was no one in the bunker at that location. There did not seem to be a monitor open on Elliott Adenomere, head of the Fourth House of Adenomere, which was quite telling in Aurelia's mind.\n\nHalf-an-hour later, there was a knock on the door and Ciara entered with May and Mei pushing a cart before them. On the cart was a tea set for Aurelia, a tea set for Jaar Adenomere, and a coffee set for Marius. Aurelia's staff set things out for the three, bowed, and left. Aurelia found tea biscuits and other delicacies on her plate, which she daintily ate, enjoying her tea.\n\nJaar was leery of the fact that Aurelia's staff had served them without orders. His own staff had to be ordered to do anything. That said much about how Aurelia operated and how well she had trained her staff. Once again he wondered about why Armstrong Gordon had let Aurelia go.\n\nThey sat back to watch what was happening in orbit. Many hours later, it became clear that Aurelia's prediction about the length of time such battles took was turning out to be correct.\n\nNS Mary Bright, Orbit of Planet Adenomere\n\nThe first engagement in the Battle of Adenomere was between four Valour Class, two Whippet Class, and four Handren Class ships. The Handren Class of the Defence Forces were outmaneuvered by the six Union ships, who could jump at will.\n\nThe NS Mary Bright, a new Valour Class ship, Lt.(N) Bill Sander commanding, was jumping into another engagement. Their mini-fleet was being coordinated via one of the Whippet Class, all six ships being recently constructed at Pallanders-4, so they had the latest and best of everything.\n\nThe ships jumped on one of the targets and fired on the sub-light engines, vanes, and gun turrets. The Handren Class Frigate was slightly smaller than a Fairling Class Frigate but no less powerful. They had the equivalent of two twin Mk-10's on their Dorsal Gun Deck, two twin Mk-20's on the Ventral Deck and two Mk-48's on each lateral line, port and starboard. However, because their sub-light engines were slightly underpowered, they were pigs at maneuvering in comparison to the Fairling Class. The Union mini-fleet took advantage of that as they moved in and out of contact with the individual enemy ships.\n\nThe trick for each jump was to place the ship in a location where the enemy weapons were not looking. Each time they jumped, they looked at the ship they were jumping on and placed their ship in a location just offline of the guns and tubes, coordinated with the other ships in their assault team.\n\nTheir own orientation was directed more or less at the target they wanted, allowing them to quickly acquire, fire, and jump again.\n\nWith two sets of generators, they could jump like this eighteen times before they had to jump out of the attack. The trick was to coordinate the jumps so the mini-fleet could cause as much damage as possible with the minimum number of jumps on each enemy vessel.\n\nThe priority targets were the vanes, then the large guns, the tubes, the smaller guns, and the sub-light engines. With luck, they would be able to fire twice between each jump, causing significant damage each time they jumped. It usually only took two jumps on one ship to knock it out. The maneuvering of the enemy vessels was the only thing that could upset their own attack patterns.\n\nThe Bright had jumped twice on two vessels, helping to knock out both vessels. Those ships were down to one sub-light engine, no vanes, no guns, and no tubes, most of the damage coming from the twin fifties each of the friendly ships had.\n\n\"Follow the plan and jump us to the next coordinates,\" Lt. Sander\n\nThe mini-fleet had jumped five times, with two of the Handren class now knocked out of contention due to damage to their engines and weapons, with each only one sub-light engine to manoeuvre with. The assault team planned to do the same to the next ship, unfortunately for the Bright, the enemy ship changed course slightly when she jumped, bringing The Bright in line with her Mk-10 turret after she reappeared...\n\nADFS Dark Constellation, Orbit of Planet Adenomere\n\nThe Adenomere Defence Force Ship Dark Constellation had watched as the six Union ships knocked out her sister ships, two Handren Class Frigates with suspicious ease.\n\n\"Tac O, Science, do we have anything on their pattern?\" Capt. Captain Render demanded.\n\n\"Aye, sir,\" the Tac O replied. \"They coordinate their jumps together. They take into account where our guns are pointed before they jump and try to jump so that they are not in a direct line of site of any of the guns or tubes.\"\n\n\"Right, watch when they jump and turn us ten degrees to port,\" Render ordered.\n\nThe Union ships suddenly jumped and the pilot moved the ship without orders, ten degrees to port and up five degrees. It worked perfectly as they found one of the smaller gun ship directly in the Mk-10's site.\n\n\"Fire!\" Render ordered. They heard the sound of the twin Mk-10s cycling. One of the pulses struck the small vessel square on.\n\nNS Mary Bright, Planet Adenomere\n\nThe Bright came into being only to discover that the enemy vessel had moved. Sander never even had time to think SHIT! when his ship jerked hard. All systems stopped functioning for a few seconds and then slowly came back on-line. Gravity came back with the lights, causing a moment of disorientation in its return.\n\n\"We've been hit by Mk-10 fire!\" Science stated.\n\n\"Move us before they can fire again!\" Sander shouted.\n\n\"Sir, Pilot, the engines are not operational!\"\n\n\"ChEng, why don't I have engines?\" Sander demanded.\n\n\"Dammit, Bill, we should be fucking dead and your demanding why we can't move?\" Lt.(N) Mark Wesson asked.\n\n\"If we can't move, we will die!\" Bill replied.\n\n\"The impact of the Mk-10 has fried some of the systems. Most of the damage is to the fuses, which tripped to prevent severe electrical damage. We are in the process of resetting them. However, the fuses for the sub-lights are completely fried, we will have to replace them before we can reactivate the sub-lights. That will take three minutes,\" Mark replied.\n\n\"We don't have three minutes!\" Bill screamed in reply.\n\n\"Then use the guns! We just reset them,\" Mark screamed back.\n\n\"Weapons!\" the Captain shouted.\n\n\"I don't have accurate input from the sensor array, sir. We have to engage manually,\" the Weapons O replied.\n\nBill could see the reticle wobbling on his monitor as the Weapons O roughly placed it over the offending enemy gun turret.\n\nOn the monitor, he could see the large guns powering up again. They didn't have time!\n\nADFS Dark Constellation, Orbit of Planet Adenomere\n\nCapt. Render looked on in shock as the small ship he had just fired on trembled violently but did not break up.\n\n\"What in the seven hells just happened?\" he screamed at his crew.\n\n\"Sir, they took a direct hit from one of the Mk-10's and survived! We have no idea what kind of condition they are in,\" Science replied.\n\n\"Then fire on them again, this time make sure we hit them with both guns!\" Renders ordered.\n\nHe waited the brief seconds it would take for another charge to build up in the turret. He heard the whine of discharge as a gun fired but the expected whine of the second gun never occurred. Instead, the ship lurched as the turret that had been directed to fire on the small ship exploded.\n\nNS Mary Bright, Planet Adenomere\n\nThe ChEng had just reset all of the fuses when the ship was hit again. Sparks flew all around in engineering as more fuses blew out or exploded.\n\n\"We've been hit a second time!\" Science called out as power began to return.\n\n\"Tell me something I don't already know!\" Sander grumbled under his breath.\n\nPower was swiftly restored allow Sander to look at the imagery on the screen, only to see that the turret that had been aimed at them was now blown open.\n\n\"Sir, Comms, message from The Libertine,\" the Comms O called out.\n\n\"My station,\" Sanders ordered.\n\n\"Bill, Lander, get your ship out of here and get it back to your carrier,\" Cdr. Lander Rudolph ordered after seeing the little ship had been hit twice by MK-10 fire.\n\n\"Roger that, Lander, we are trying to get our systems back online, we will get the hell out of dodge as soon as we can. Who do we thank for taking out that turret?\" Sander asked.\n\n\"Mark Emerson,\" Lander replied. \"Take care of your ship and get the fuck out of here. Libertine, out.\"\n\nLt.(N) Mark Emerson was the Captain of the NS Ria Kinley, another Valour Class. Sander and his crew would owe the crew of the Kinley more than one round for this.\n\n\"ChEng, what's our status?\" Sander demanded.\n\n\"Sir, I can give you two of the four sub-light engines. We've already burnt through eight master fuses for the Sub-lights and only have two left,\" the ChEng replied. \"Our guns are back online but our sensor array is half burnt out. Not sure how she is going to handle with only two engines, I'll give you the number one and three engines to help balance her out some.\n\n\"Our gravity system has taken two severe hits and is not very stable, if we get hit again, we will lose it completely. The M/A generators are all good, for now, but let's not take anymore hits. If they blow, they will take out the entire ship.\n\n\"I've got one unconscious crew member back here, hit his head in the last impact. The corpsman is here now,\" the ChEng finished.\n\n\"Any other injuries reported?\" Sander asked his bridge crew.\n\n\"Sir, the cook's mate has broken his leg, and one of the general duty people has a busted collar bone,\" the Comms O replied.\n\n\"Well shit, two impacts from a MK-10 and we only have three injuries to show for it, damn,\" Sander commented.\n\n\"Sir, Pilot, I have control again,\" the Pilot reported.\n\n\"Right, get us back to the barn, we are out of this fight for now,\" Sander ordered, as his ship turned and scooted as quickly as it could, which wasn't near fast enough for Sander, out of the ongoing melee...\n\nNS The Libertine, Planet Adenomere, Adenomere System\n\nADFS Dark Constellation was now fighting for its life, the five remaining ships of the Union assault team taking out their frustrations on it for having damaged one of their own.\n\nThe MK-10's were knocked out first, then the MK-20's. Two of the remaining Valour Class were engaging the MK-48's while the other Whippet Class was hitting her sub-light engines. The Libertine was taking out her bow tubes, knocking them out with fire from her improved MK-12 and the final Valour Class was engaging her rear tubes.\n\nIt didn't take long before the Constellation, now down to a single sub-light engine, was flashing S - S - S on it's white lights, indicating it was out of the fight. The Libertine let it go, then jumped the little fleet out of the battle.",
        "They had taken out three of the four Handren's and badly damaged another. Not bad for a forty minute fight...\n\nAdenomere Defence Forces, Planet Adenomere, Adenomere System\n\nThe captains of the Defence Forces quickly realized they were at a disadvantage in close-in fighting. They adopted more flexible tactics and began to lob missiles and torpedoes at the Union ships from a distance aiming for the ships in the middle of the protected ring. This tactic was much more effective and resulted in many hits against Navy ships.\n\nThe ratio of missiles to hits in most battles was twenty missiles/torpedoes for one hit. However, the Union warships had to protect the rescue vessels, making them more vulnerable to being hit as they took chances they normally wouldn't to protect the unarmed rescue ships. The ratio of shots to hits increased to almost ten to one and Defence Force vessels were loaded with missiles and torpedoes.\n\nThe battle of shoot and manoeuvre dragged on, with the Union Navy's timings for sending shuttles to the surface getting further and further behind...\n\nAdenomere Estate, Third House of Adenomere, Planet Adenomere\n\nAdolphus Adenomere, fourth and youngest son of Peotre Adenomere, was furious. His PA, David, was informing him that all people in the house had been ordered to the bunker by his father but Adolphus was refusing to go.\n\n\"I would be like a Scondar Beast instead of being forced to hide in the bunker like some frightened virgin,\" Adolphus shouted at his PA (a Scondar Beast was a large rabbit-like animal native to Planet Adenomere roughly the size of a Jackrabbit. Despite looking like a rabbit, it is neither meek nor mild. It had sharp teeth that are used for self-defence and for attack. As a burrowing animal, it also has hard claws that can tear through the hardest of clay dirt, able to dig out a ten meter tunnel in mere minutes. Only hunting animals that operated in packs could successfully hunt adult Scondar Beasts, and they would be hard pressed to do so. Many a slave had been injured when they accidentally come across Scondar Beasts who defend themselves vigorously when surprised instead of running away).\n\nDavid rung his hands in frustration at the idiocy of his boss. With the Master and his other brothers away, that left Adolphus in charge of the estate and he had ignored his father's orders to go to shelter.\n\nBeing the senior slave on site, David was responsible for getting all the slaves into the bunker. He pushed everyone below, setting up the more senior slaves to control those in the bunkers. The slaves could not seal the bunker, not even David. That took a master command comp that only an Adenomere wore.\n\nDavid had coffee brought to the Master and waited patiently for orders, silent now about the bunker on the orders of his master. The pair closely watched the information coming to them about the battle in orbit. As the day wore on, it didn't look good for the two Adenomere fleets but the longer they fought, the less likely it would be that the enemy would come down to the surface.\n\nIn Orbit, Planet Adenomere, Adenomere System\n\nThe fight in orbit was getting vicious as time wore on for both fleets. The Union would send ships to jump in amongst the two enemy fleets and wreak havoc deep inside those fleets. In close-in fighting, the more modern and manoeuvrable Union ships had a definite advantage causing extensive damage to enemy ships each time they closed for combat.\n\nOn the other hand, the Defence Forces and the Pirate vessels would lob shots at the Union fleet, which was tied to the rescue vessels. At a distance, the Union forces were at a disadvantage because of their inability to manoeuvre. They took chances to take out the missiles and torpedoes to protect the rescue vessels, which left the warships vulnerable to long-range enemy fire. While the number of Union vessels damaged was less than the number of Adenomere ships, the biggest factor for the Union was the time lost to the battle in orbit. The Task Force needed to put shuttles down on the planet to retrieve Union citizens and could not do so as long as they did not have superiority in orbit.\n\nAs the five hour mark crept up on her, Dostier decided to ask for help. She sent a message to the other Task Forces, ordering them to implement Plan Romeo...\n\nNS Polyanty, Numbered Star System, HD-137982\n\nTask Force Gaetan arrived in system after their successful raid.\n\n\"Sir, we got 11,273 slaves out, with no damage to any of our ships and only a few injured due to enemy Militia forces,\" the Boatswain advised Capt. Endar half-an-hour after they arrived in system.\n\n\"Sir, Comms, the Persephone is trying to contact us through the Tactical Link,\" the Comms O advised.\n\n\"My station,\" the Captain ordered.\n\n\"William, this is Ned. Dostier is in trouble at Adenomere. They hit a loaded system with ninety-two enemy ships, forty of them heavies. The fleet is tied to the rescue vessels which gives the enemy an advantage for lobbing missiles and torpedoes. Our forces have taken serious damage, though they have given it as well.\n\n\"Dostier has implemented Plan Romeo for Adenomere, she needs everything you have available,\" Ned finished.\n\n\"OK, I can send my ship and all of the newer Whippet Class and the Valour Class. Where do we go?\" William asked.\n\n\"I'll send you coordinates to fight from. No sense going to Dostier's fleet. We need to provide an additional problem for the Adenomere Defences,\" Ned answered.\n\nA few moments later, the coordinates that he wanted them to jump on came up. Endar sent the message to his fleet, advising them that they had to support the raid at Adenomere, which was in trouble. Since only the ships with the newer M/A generators could jump, he had all the other vessels stay under the coordination of the Persephone. They waited the few minutes needed before they could jump.\n\n\"Comms, give me fleetwide,\" Endar ordered. He had it within moments. \"All ships, this is The Polyanty. Our designated ships are about to jump into the Adenomere system in support of the raid there. They are in a firefight and we need to give them some much needed support.\n\n\"Our orders are simple: cause as much of a disruption to the enemy fleet as we can. We need to allow the raid to get down to the planet and start freeing our citizens. It can only do that if we have orbital superiority. That is our goal. We jump in three minutes, on my mark, three, two, one, mark. Polyanty out.\"\n\nThree minutes later, the fighting fleet winked out of existence...\n\nNS Saraswati, Numbered Star System, HD-137982\n\nAs the NS Saraswati came into the HD-137982 Star System, MCPO Gigamy gave the captain the bad news.\n\n\"Ma'am, we abandoned twelve damaged Combat Shuttles on the surface but got all the crews out with eight injured and retrieved the four dead. There were an additional forty-three Marines injured due to fighting on the ground. They all made it out.\n\n\"We lost eight shuttles to enemy fire in atmosphere, with the loss of all on board. We estimate that there were an average of seventy-six civilians, Marines, and crew, on board each shuttle, which means we lost 612 people to enemy air action on the planet.\n\n\"In addition, we have eighteen ships with various degrees of damage with 1,042 injured and 118 dead from combat in orbit. The severely damaged Valour Class were recovered by our Fairling Class Frigates while the damaged Whippet Class had to be recovered by the Fleet Tender with her larger holds. There are nine other Valour and five Whippet Class that have sustained damage, though they are capable of using their sub-light and FTL drives, ma'am,\" Gigamy ended.\n\n\"Thank-you, Master Chief,\" a subdued Damyanti replied. \"Let's keep that information to ourselves for the moment and concentrate our efforts on the living, especially the rescued.\"\n\n\"Aye, sir.\"\n\nAs they spoke, triage was taking place on all the ships with the rescued aboard. Those that were relatively healthy but hungry, were given hardy meals of thinned stew, so as not to upset their stomachs.\n\nClothes were also being distributed as many of the ex-slaves were wearing nothing but rags, some were only wearing loin-cloths, if that. More than a few of the rescued were naked, displaying the scars and wear and tear on their bodies from years of toil and deprivation by hunger.\n\nMany of the former slaves got the chance to shower for the first time in weeks, before receiving the clothes that had been brought for them.\n\nAll the rescued were being DNA scanned to determine their identities. Messages were being put out to all those who were not Union Citizens that they would not be returned to the Alliance of Planets if they asked for asylum. All chose asylum.\n\nNone of the rescued were really healthy but some were in very bad shape and were transferred to the fleet's hospital ship, which quickly filled up. The injured Marines/Navy were sent to the three hospital ships attached to the Polyanty's fleet; these ships being dedicated to the various raids' wounded.\n\nThe ships of Task Force New Hadria were waiting to jump again, this time to one of the two planets whose Naval bases OP Sandcastle was being supported from. It would be a tense wait of several hours as the older Marilon Generators recovered their charges. Fortunately, their end destinations were well within the jump range of the older ships.\n\n\"Sir, Comms, I have a message from the Dewfall requesting all available support to Task Force Adenomere. The Commodore is enacting Plan Romeo for Adenomere,\" the Comms O called out.\n\n\"Shit, just when we thought we would be out of this,\" Damyanti grumbled.\n\n\"Comms, get a count of the ships that can jump now, the damaged ships will remain in system as escort for the rescue ships and hospital ships.\n\n\"Tac O, list the ships capabilities on the Tactical Link. I want to see who can jump immediately on the Link. Those ships that can jump now, which will be mostly Whippet and Valour Class, will follow us to the Adenomere system.\n\n\"The remaining ships will jump once they have recharged.\n\n\"Boatswain, get our rescued citizens off this ship, as we are about to return to combat. See who can take them on and have them send shuttles to us to retrieve those that are with us,\" she finished to a chorus of Aye, sirs.\n\n\"Comms O, get me a link to the Persephone,\" Damyanti ordered.\n\n\"Ma'am, the Persephone is attempting to contact us,\" the Comms O indicated.\n\n\"To my station,\" Damyanti ordered.\n\n\"Ned, Damyanti, how is the situation with Task Force Adenomere?\" she asked.\n\n\"Damyanti, they jumped into bad luck, fifty-six ships of the Defence Force Fleet and thirty-six pirate vessels, both fleets loaded with heavies. While they have the largest fighting force of any raid, with 254 warships compared to 92 of the enemy, they are fighting for orbital supremacy right now. However, the longer they fight, the longer the planetary Airforce and Militia have time to prepare.\n\n\"The enemy is not backing down and is lobbing shots at the rescue ships, forcing the fleet to stay close to protect them. That has given the enemy a major advantage. Dostier is jumping her ships in amongst them as our forces have the advantage close in but our ships cannot stay inside the enemy fleet for more than a few passes.\n\n\"The battle in orbit is turning out to be a slug fest with several ships on both sides already damaged. Dostier is calling in everyone who has completed their raid and who is capable, to assist,\" Capt. Randolph replied.\n\n\"Shit. OK, I can send in my ship plus all the undamaged Whippet Class and Valour Class. My ship is the only heavy that can jump now, the rest will have to wait out the recharge. I'll put them into your care as part of the defence force here until they can jump.\n\n\"I suggest that as soon as the rescue ships can jump, they should make for the two bases. Keep your warships here to assist in the defence of this system and send anyone who can into Adenomere when they can. All the Fleet Tenders should leave the damaged ships here under your protection and support and jump into Adenomere when they can. They will be needed for the more severely damaged heavies, in that task force,\" Damyanti advised.\n\n\"That was my plan. I'll take support of any ship of your fleet that stays behind until they can jump. If we still need their support for Task Force Adenomere by then, we will definitely be in the shit,\" Ned replied.\n\n\"I'm sending a list of my ships that are staying behind, Ned. The rest of us will jump in twenty-five, once the generators are recharged,\" Damyanti told her friend.\n\n\"Roger, that. We have the list now. Good hunting, Damyanti,\" said Ned.\n\n\"We'll need it,\" Damyanti replied under her breath as she closed the link.\n\n\"Damyanti to all ships,\" she sent over her fleet's Tactical Link twenty minutes later. \"Those that can, we jump in five from my mark. The rest, keep tabs on the events in Adenomere in case you are still needed when you are ready to jump. The damaged ships from our raid will remain here until all rescue ships are through. We will jump to the coordinates listed to put us on the far side of the enemy fleet.\n\n\"On my mark, three, two, one, Mark!\" she called out, getting responses immediately from her ready fleet.\n\nFive minutes later, The Saraswati and all the ships that could, jumped into Adenomere...\n\nNS Suurland, Numbered Star System, HD-137982\n\nTask Force Surdend arrived in HD-137982 Star System only to discover that Task Force Adenomere was in trouble. They swiftly transferred those that needed immediate support to the hospital ships.\n\nHolf had no refit Fairling Class. He would send all of his Valour and Whippet Class immediately to support Cmdre. Dostier. He contacted Damyanti and attached his ready fleet to hers.\n\nHe would have to wait the four hours necessary to recharge the majority of his heavy ships and some of the older Whippet Class. He fervently hoped they would not still be needed...\n\nNS Agrippa, Numbered Star System, HD-137982\n\nTask Force Erden, came into the system to see ships from other task forces jumping out.\n\n\"Sir, Comms O, the Persephone is sending a message,\" the Comms O declared.\n\n\"My station,\" Stahl ordered.\n\n\"Aye, sir. Comms to you.\"\n\n\"Will, Ned, Task Force Adenomere is in trouble, they jumped into a loaded system with ninety-two determined enemy vessels, with forty of them heavies. They are in a slug-fest and are taking damage; they have as yet to send any raiders to the planet.\n\n\"Dostier is requesting support from any ships available,\" Ned Randolph finished.\n\n\"Shit. OK, we will immediately send all the newer Whippet and Valour Class ships to Adenomere, all our heavies are not refit class and cannot jump immediately. I'll send you our Tactical Link with the numbers in one minute,\" Stahl finished.\n\n\"Comms O, Fleet Wide, now,\" Stahl ordered.\n\nTen seconds later, he had Fleet Wide comms.\n\n\"All ships, this is Capt. Stahl. Task Force Adenomere is in trouble and is requesting assistance. They are in a slug-fest in orbit and need all available ships that can jump to assist.\n\n\"Send your ready state immediately. Those that can, will jump in thirty minutes, when the newer ships have recharged. The remainder will remain here as defence for this system until the rescue ships can jump to the support bases. Stahl, out.\"\n\nThe Tactical Link quickly showed who could and who could not jump.\n\nThree of the Valour Class were showing damage and Stahl opted to keep them in the rear, he had the information sent to the Persephone. The Persephone gave them coordinates to jump on. Thirty minutes later, Stahl's more modern ships began to jump into Adenomere...\n\nThe Wanderer, Numbered Star System, HD-137982\n\nTask Force Vuelta winked into existence in the HD-137982 Star System moments after leaving the Della System, fifteen light years away. The fleet collapsed into the protective ball with the hospital ship in its center. A quick triage sent many of the rescued to the hospital ship, the numbers beginning to overwhelm its capabilities.\n\n\"Sir, Comms, the MHS Cheotte reports they now have 1,100 patients on board. They are maxed out and can no longer take on any further injured,\" Comms reported.\n\n\"Roger, fortunately, it appears there are no more transferees waiting,\" Raymond reported. \"Comms, send a message to NS Dewfall via ICS, indicating the total numbers as 16,129 rescued, eight of our personnel injured, no damage to the fleet.\"\n\n\"Sir, Comms, the NS Dewfall sends its regards, we are to cut half of our military fleet to transfer to Task Force Adenomere which has met serious resistance. Send the most capable ships immediately, as per Plan Romeo,\" Comms relayed.\n\nRaymond gave the order: \"All ships, this is The Wanderer. Plan Romeo Task Force Adenomere. Repeat, Plan Romeo Task Force Adenomere. Those ships that can will jump ASAP.\n\n\"NS Holt, you will assume command of the remainder of Task Force Vuelta. The rescue ships are your responsibility. Coordinate with NS Persephone,\" Raymond ordered.\n\nNS Holt acknowledged its orders as the new Command Ship and took over the Tactical Link for what would be left of Task Force Vuelta.\n\n\"Sir, Comms, the Persephone is attempting to contact us,\" the Comms O said.\n\n\"My Station,\" Capt. Degault replied.\n\n\"Hellene, Ned, Dostier's fleet has met unexpected resistance, 92 enemy ships, forty of them heavies, the Defence Force Fleet is not backing down. They are in a pitch battle with a determined opposition. Damyanti has collected the Whippet and Valour Class from her raid, that of Task Force Surdend, and Task Force Erdan, and jumped to coordinates on the far side of the enemy fleet. They will be active now,\" Ned said.\n\n\"Right. We will collect what ships we can and jump in fifteen minutes with whatever we have,\" Hellene proposed, looking at the tactical plot from Adenomere.\n\n\"I want you to jump to the coordinates that the Polyanty jumped into and become part of the third fleet,\" Ned confirmed.\n\n\"Roger that, we can jump in ten minutes,\" Hellen advised. \"Send any other raids returning to either of the two new fleets in Adenomere.\"\n\n\"Roger, good hunting. Persephone out.\"\n\nThe ships of Task Force Vuelta looked at their orders and knew immediately which ships would remain in-system and which ships would move to support Task Force Adenomere. Those that could, jumped ten minutes later...\n\nNS Dewfall, Planet Adenomere, The Adenomere System\n\nAfter five hours of battle, Dostier was starting to get worried. The ships of the Planetary Defence Force were consolidating in front of her portion of the Adenomere fleet, recognizing that the Dewfall was the command ship and attempting to take her and the rescue fleet out. Her biggest fear was that even if they could gain orbital superiority, they wouldn't have the necessary support to escort the shuttles to the surface as more and more of her Whippet and Valour Class were taking damage, a mere handful of which were the newest model with grid-jump capability vice using vanes and with the Gara-Hinn force shields, which had proven remarkably successful, having saved four of the newest Valour Class from total destruction.\n\nShe had been receiving news from the other raids, which were fairing better but her raid was not going well at all. She was giving serious thought to abandoning the attempt when the first good news in many hours came to the Battle Bridge.\n\n\"Sir, I am showing a new fleet identified as Union ships appearing on a tangent to us and the enemy fleets!\" the Tac O in the Battle Bridge called out.\n\nDostier looked at the 3D display and saw the numbers creeping up as more and more ships came into the system.\n\n\"Dewfall, this is Polyanty. We are here to assist Plan Romeo. We have this ship, thirty two Whippet Class and fifty-five Valour Class. What do you want us to do, over.\"",
        "\"We've had the best success when we can get inside of their fleets. They are not suited or practiced at close-in fighting,\" Dostier told Capt. Endar. \"We have practiced working in teams, they have not. Get inside of their formation and hit as many of their ships as you can, especially the heavies which are lobbing missiles and torpedoes at us.\n\n\"You are opposite the pirate fleet. Take them out if possible. Give no quarter, as they will not give quarter to you,\" Dostier ordered.\n\n\"Roger, we'll lob some torpedoes at them and then hit them before they realize we are another fleet,\" Endar told Dostier.\n\n\"Just do something fast, we need to get down to the planet and we have already spent more than five hours trying to get orbital supremacy,\" Dostier ordered.\n\nEndar's fleet was opposite the pirate fleet. He went back to the Battle Bridge where he looked up the situation from the Tactical Link sent by the Dewfall. He noted several ships that had already been severely damaged but were not out of the fight. Of the thirty-six original vessels in this fleet, there were fifteen that had been damaged, only eight of which were now out of the fight. As long as they did not engage, those eight ships would not be attacked.\n\nEndar set his attack and launched his first and only salvo of sixty torpedoes, and a combination of forty electronic disrupter missiles and missiles with explosive warheads at the enemy fleet. The missiles moved swiftly in amongst the enemy who fired off counter-measures to disrupt their attack. The counter-measures were only partially successful.\n\nThe eleven electronic disrupter missiles hit nine different ships with spectacular results. Their electrical systems shut down briefly, taking more than fifty seconds to reset. The brief interlude was more than enough time for the explosive head missiles to track in. The warheads hit seven of the nine ships with devastating results, four of the seven being destroyed outright, the other three were effectively disabled, they would have to withdraw from the fight.\n\nThen the torpedoes arrived. Once more countermeasures were launched, only, with fighting ongoing for almost six hours, there were very few countermeasures left. The torpedoes tracked in on those ships that could not deploy counter measures. The sixty torpedoes tracked on fourteen ships, with multiple hits on eight of them. Five of those had already suffered hits from Dostier's fleet, those five were destroyed. The nine others were damaged but could still manoeuvre. The other seven had taken single strikes that caused some damage, they were still very much in the fight.\n\nEndar's first salvo had taken its toll, that's when his Valour and Whippet Class jumped into the middle of the enemy fleet. Combined into small assault groups, they chose to attack the heavy ships with telling results. Forty minutes after the start of Endar's assault, the pirate fleet broke off the engagement, leaving twenty-one destroyed or severely damaged ships behind, most of them Fairling, Ballaron, and Handren Class. The pirate heavies had been taken out and many of the Ballang Class escort ships had been damaged to some degree or another. It would be some time before this pirate fleet would be a threat again, if ever.\n\nDostier laughed when she saw the results of Endar's attack. \"Look what happens when we soften them up for you,\" she crowed over the Tactical Link to the Polyanty.\n\n\"Yeah, yeah. We'll take the assist,\" Endar returned, good naturedly.\n\nThe two fleets now set their sites on the larger Planetary Defence Force Fleet with their twenty-eight heavies. Because the pirate fleet had been the more aggressive, they had suffered more damage than the Defence Force Fleet, which had opted to lob missiles and torpedoes at Dostier's fleet from a distance. Now, they found themselves between two fleets.\n\nBefore action could begin, more ships jumped into the Adenomere System...\n\n\"Dewfall, this is Saraswati. We have activated Plan Romeo and are looking to see where we can help, over,\" came the voice of Capt. Balakrishna over the link.\n\n\"By the Gods, Damyanti, it is good to hear from you,\" Dostier declared. \"I need you to hit the ships listed as Planetary Defence Forces and make them lose interest in Task Force Adenomere. They are not suited for close-in combat while we have practiced it. It gives us our best advantage.\"\n\n\"Roger that, we will jump in amongst them with our Whippet and Valour Class and see what damage we can cause,\" Damyanti replied. She looked at the Tactical Link sent by the Dewfall and determined where best to send her ships, noting her intent on the link so as not to interfere with the other two Union fleets.\n\nA few minutes later, the Damyanti's fleet jumped into the attack, with nine teams of four ships jumping into the mass of the Defence Fleet, the Handren Class their priority. Each team took on one ship, hitting them hard to knock out their weapons, sub-light engines, and vanes, before jumping out again, leaving ships with no means to continue fighting.\n\nBetween the three Union fleets, the Defence Forces were in a bind and quickly losing orbital supremacy.\n\nThen, another fleet arrived...\n\n\"Liana, it's Raymond. We are here with three Failing Class, forty Whippet Class and sixty-seven Valour Class. What do you want us to do?\"\n\n\"Raymond, you are a godsend! We need to begin the assault on the planet. I am pulling my fleet from the assault and sending down the Combat Shuttles in the first wave, we can use some of your Valour Class to escort them down.\n\n\"Whatever shuttles you have on your ships, send them down as well,\" Dostier ordered. \"I'm sending planetary coordinates to you that I want you to take on. The local Airforce and Militia has had plenty of time to prepare. This will not be an easy assault.\"\n\n\"Roger that, we'll act as soon as we get the coordinates, our people are ready to go now,\" Raymond returned.\n\nMoments later, the information was streaming across the Battle Bridges Tactical Plots, showing where Dostier wanted him to raid. Raymond sent the information to the fleet and set his Valour and Whippet Class ships to taking out the local Airforce and Militia units that they could see. Things were starting to change significantly for Task Force Adenomere but they had been in battle for almost eight hours now.\n\nAdenomere Estate, First House of Adenomere, Planet Adenomere\n\nThe first indication to the Adenomeres that things were going wrong was when a new fleet came into the system some almost six hours after the advent of the assault and attacked the Armed Support Fleet.\n\nTheir initial attack of missiles and torpedoes caused significant damage within the Armed Support Fleet. The follow-on attack of small ships resulted in several ships being destroyed or knocked out of commission. The tide of the battle was turning in favour of the Union Navy. Aurelia was certain they would achieve orbital superiority within an hour or so.\n\n\"They will have to leave orbit now, they have sustained too much damage to their fleet,\" Marius reported happily.\n\n\"They will not,\" Aurelia stated candidly.\n\n\"What makes you say that?\" Jaar demanded, while Marius looked at her as if she had grown another head. She, a woman, had opposed his thoughts!\n\n\"The new fleet cannot jump out without recharging, that will take four to six hours,\" Aurelia stated, unaware of the improved M/A generators that the Union now enjoyed. \"In addition, they have not even attempted their assault on the planet. They must at least try before they abandon the remainder of their mission,\" Aurelia informed the two Adenomeres.\n\nJaar opened the link to the Airforce and Militia. \"This is Jaar Adenomere, the Union Fleet in orbit is about to attain orbital superiority. They will attempt to stage an assault on the planet. A determined effort on our part will hopefully make them give up on the assault.\n\n\"We must show our determination, both in the air and on the ground, to repel this assault,\" Jaar finished. Acknowledgements of being ready were quickly reported by the respective commands. The planet was ready to repel the assault, or so they thought...\n\nNS Dewfall, In Orbit of Planet Adenomere, Adenomere System\n\nDostier had decided that, due to the advantage in time that the Airforce and Militia had, they would need to send down Combat Drop Shuttles, which had more firepower available to them than Combat Shuttles but no room to carry out rescued citizens. She was watching as her heavies sent down the first wave of Marines in the Drop Shuttles.\n\nThe Wanderer took over command of the Valour and Whippet class sent to protect the shuttles. Raymond quickly coordinated their assault on the local Airforce and Militia. Coming down from orbit on them, gave the Valour Class a serious advantage over the Airforce, which Raymond exploited. The assault wave swiftly broke through the Airforce resistance, allowing the Drop Shuttles to reach their objectives. As the Drop Shuttles came in, they unleashed their firepower on the Militia, with devastating results to the locals.\n\nAdenomere Estate, Third House of Adenomere, Planet Adenomere\n\nGeneral Mike Holmes, Continental Commander for the Militia, was watching as the Drop Shuttles approached the ground. He ordered his Air Defence forces in and around the Adenomere Three Estate, to engage them when they were within one kilometer of the ground. They never got the chance, as the Drop Shuttles launched a series of micro-missiles at those very same units, taking out most of the local Air Defence capability in their first volley from a height of two kilometers. Holmes was furious.\n\nHe next ordered the ground troops in the locations nearest to the anticipated drop coordinates to engage the Drop Shuttles as they landed. Once again, a volley of micro-missiles hit his tanks and ground assault vehicles, taking out a serious portion of his capabilities before the enemy even touched down.\n\nThe enemy was now down on the ground and setting up a defensive ring around their targets. Holmes decided to breach that ring and called in units from further out. However, it would take them an hour to arrive at where they were needed, in the meantime, more and more shuttles were on their way down.\n\nThe next wave of shuttles were the much larger Combat Shuttles, less capable of combat but they could carry troops or rescued citizens, their intended purpose on this trip. They did not have the micro-missiles that the Drop Shuttles had but they did have twin 20mm cannon under their bellies, which they made good use of in their descent. The cannons took out missiles launched against them and enemy ground forces as they approached their targets. They landed fast and hard and began to do what they had been sent to do: retrieve the Union citizens.\n\n************\n\nTwo Drop Shuttles came in on the Barracks No.30, some fifty kilometers from the main Adenomere Three Estate, the home of Peotre Adenomere, which was now being run by his youngest son, Adolphus, the only Adenomere in residence.\n\nTwenty-four Marines in full Combat EVA rushed out of the shuttles and set up a protective perimeter as far out as they could, engaging local Militia sent to stop them. As on the other Alliance planets, the local Militia had never actually engaged an enemy before, while the Union Marines were experienced and battle hardened. The difference was telling and the Militia was swiftly forced back, just in time for the larger Combat Shuttles to land.\n\nSeveral Marines came out and looked around at the slaves.\n\n\"We are Union Marines, sent here to retrieve Union Citizens illegally held as slaves. Please identify yourselves so that we can free you,\" a Sergeant sent over his suits loudspeaker.\n\nThe slaves were hesitant to do anything until one younger males stepped forward.\n\n\"Sir, I was born of Union parents, does that make me a Union Citizen?\" he asked.\n\nThe Sergeant slipped the reflective visor of his helmet up so that the young man could see his face. The young man was practically nude, wearing what was left of a loin cloth around his waist. He looked thin, though his muscles were hard. He was dirty and had several old scars on his body.\n\n\"It does indeed, young man. What is your name?\" the Sergeant asked in a gentle voice.\n\n\"I am called, Doggy by the Masters, though my mother once named me Douglas. I have forgotten our family name and have no idea where my parents might be now,\" the young man replied.\n\n\"Well, Douglas, step over here young man and we will get you out of that collar,\" the Sergeant stated.\n\nDouglas stepped over and the Sergeant passed a wand over his collar. There was a beep, and Douglas felt a click from his collar. The Sergeant then simply broke the collar apart and threw it away. Douglas reached up and felt his neck, bare for the first time in his young life. He gave a look of pure shock to the Sergeant.\n\n\"Why don't you find a seat in the shuttle, Douglas, while we attend to the others here,\" the Sergeant ordered, as another Marine, this one obviously a female, came forward to guide him into the shuttle. Douglas allowed himself to be led away as more and more people stepped up and declared themselves Citizens of the Union...\n\n************\n\nGeneral Holmes was getting more and more desperate as time wore on. Whatever he did, the aggressors countered it. If he sent more men with heavy equipment, that heavy equipment was bombarded from above, often with 50mm rail gun fire.\n\nIf he sent more men to engage the enemy, the enemy simply took on whatever he sent at them. Despite the disparity in numbers, the enemy always seemed to know what to do to defeat his Militia forces. These were experienced forces he was fighting against, people who had been in the thick of things more than once, while his own people had never actually fought against anyone save for wargames. Holmes was finding that there was a hell of a difference between wargames and live combat!\n\nMore and more shuttles were coming down, landing in different places, never returning to a place they had already landed once. Wherever they touched down, they took slaves with them. The numbers of lost slaves kept creeping up.\n\nHe was happy to note that the Airforce was fairing little better than his Militia. They were losing expensive planes and even more expensive sub-orbital fighters, the only aircraft in the inventory that could actually take on one of the Valour Class ships one-on-one.\n\nWhile his people were being pushed back, he was starting to gain the upper hand in numbers. His planners were suggesting where to send these spare units when Holmes overturned them and ordered them to a new location, along with the local Militia. He knew that the enemy would land there not long in the future. He was right...\n\n************\n\n\"Sir, we've got 18,212 in the last two shuttle returns,\" MCPO Bridget O'Neil, the ship's Boatswain reported.\n\nRaymond was watching the numbers of returning shuttles, happy that none of them had been shot down as had happened in other raids. He was pulling citizens off the planet, but not in the numbers he wanted. He needed to up the speed of their assault before the Militia gained the numbers they needed to force a stop to their operations.\n\n\"Send down the civilian shuttles this time,\" he ordered the Boatswain,. \"This will likely be the last safe pass and I want as many people as possible coming back up.\"\n\nThere were three times as many civilian shuttles as Combat Shuttles. Since they didn't carry a large group of Marines in EVA suits, the 60m shuttles could also carry back many more rescued compared to the 40m Combat Shuttles.\n\nThe Boatswain was responsible for getting shuttles planet side and back up again. She sent out the orders and watched as the shuttles headed for the surface. They were hoping to get two passes with the civilian shuttles, they would be disappointed.\n\n************\n\nGeneral Holmes smiled as he saw the shuttles headed for his little trap. This time, things would go his way.\n\nAs the shuttles landed, Holmes sent his orders. Militia hidden under camouflage attacked.\n\n************\n\nThe Combat shuttles landed ahead of the civilian shuttles at Barracks No.18 ten kilometers from the Adenomere Three Estate. Adolphus sent the estate guards to the slave barracks on that side of the estates with orders to kill anyone they saw running away. The guards could not understand their orders, as any slave that attempted to run would die once they left the Adenomere grounds, their explosive collars killing them the moment they did so.\n\nUncertain as to what was happening, the guards drove into the area completely unaware of the ongoing assault. They arrived to see several large shuttles on the ground, with lines of slaves waiting to go to them.\n\n\"Stop whatever you are doing!\" the head guard challenged. He jumped down out of his truck and moved to intercept one of the people in some kind of hard suit. The suit gave the outline of a female, which very much surprised the head guard.\n\nWhen the people he had challenged simply ignored him, he raised his stun gun and fired twice at the head of the woman he was confronting, only to see a nimbus surround her body. In turn, the woman raised her arm and fired a bean bag at him, which hit him in the chest, shocking his heart and rendering the head guard unconscious. In seconds, the guard vehicles were surrounded.\n\n\"Union Marines, get your hands up! If you reach for your weapons or attempt to stop us in any manner, we will use force against you,\" the Marine shouted at the guards.\n\nJust then, all hell broke loose as the local Militia made themselves known and started firing on the shuttles and the people there. The indiscriminate attack killed slaves and guards alike but did little against the armoured Marines.\n\nThe Marines immediately returned fire, throwing everything they had at the approaching Militia, attempting to get them to seek shelter but the Militia were using supported fire and movement techniques, one group of Militia firing on the enemy, while another group would move forward before taking shelter and then firing at the enemy, allowing the other group to move up.\n\nThis worked for a few minutes until a couple of Valour Class strafed the attackers. The Militia commander was ready and engaged the two Valour Class with surface-to-air missiles. Six SAMs launched at the two Valour Class, forcing them to manoeuvre and send out countermeasures to avoid being hit, giving a respite to the Militia and allowing them to continue the attack.\n\nWhen the Militia again attempted to move forward, they found the Marines better prepared to repel the attack. The fighting was bitter and hard-pressed with the Militia having the superior numbers and weaponry while the Marines had experience behind them. Eventually, they pushed into the area of the barracks, forcing the shuttles to stop their raid and return to orbit with whatever numbers they had onboard. The Militia attack left scores of people dead on the ground, most of whom were not Union citizens.\n\nRaymond sent in several Valour Class to hit the Militia in the area of the Adenomere Three Estates, with limited results. The shuttles were getting to the ground and picking up citizens, however, they were hard-pressed wherever they landed in this area.\n\nHe contacted Dostier.\n\n\"Liana, this is going to have to be our last kick at the can,\" Raymond stated. \"No more shuttles going down. Once everyone is back we leave.\"\n\n\"I'm surprised we did as well as we have considering the amount of time the planet has had to prepare,\" Dostier returned.\n\nRaymond cursed under his breath. \"I need to be closer to the action, where I can see what is going on!\" he told her.\n\nTurning, he looked to the Boatswain. \"O'Neil, do we still have a Valour Class onboard?\"",
        "\"No, sir, the Jean Jacques Aucoin, Lt. Jacques Marneau commanding, is not far off, sir,\" the Boatswain replied.\n\n\"Bring her in, I am going down to the planet, closer to the action, to see what is happening,\" Raymond shouted, then sprinted for the EVA chamber where he swiftly donned his Combat EVA suit.\n\n************\n\nDavid had noted that the Master, Adolphus, was panicking. \"They are here to kidnap me!\" Adolphus shouted.\n\n\"Sir, if they were here to kidnap you, why are they touching down near the slave barracks?\" David asked. That seemed to jar Adolphus out of his diatrade. The man got a positively evil grin on his face.\n\n\"I know what will stop them!\" Adolphus snarled, calling up the lists of slaves in the various barracks. Wherever there were Navy shuttles on the ground, he chose names at random and pressed the destruct button. Kilometers away, at Barracks No. 30, one of the slaves in the lineup suddenly died, his explosive collar severing his neck. The death was so unexpected that it caused a panic in the line of slaves waiting to be freed.\n\n\"Stop, get your collars off if you want to be safe!\" the sergeant called out. Some of the slaves listened, others ran off, the sergeant cursing under his breath.\n\nBecause he could not see the location he was targeting, Adolphus had no idea of the effectiveness of his attacks, if any. Every thirty seconds, he called up another one of the names of the slaves on the list from the different barracks under attack and pressed the button to end their life. However, many of those he chose had already had their collars removed, he could not know that his finger on the button caused no harm. Adolphus kept calling up random names and pressing the button, more than occasionally randomly killing his slaves one after the other.\n\nDavid watched helplessly as slave after slave was killed by the Master. He seriously thought about killing the Master, and even picked up a small statue to hit his head with. Unfortunately for David, the Master saw and pushed a button on his wrist comp, sending a signal to David's collar, which jolted his brain stem. Pain laced through David's body and he temporarily passed out, leaving Adolphus to continue his killing spree.\n\n************\n\nA panicked call went up from the assault Marines at Barracks No. 30. \"Someone is randomly killing the people down here! They are blowing the slave collars. They are not even Union Citizens! We need to find the command site and stop them, NOW!\"\n\nRaymond was high in the atmosphere, effectively directing the assault by the Valour Class against the local Militia who were bringing their attacks against his raid to a standstill when he heard the call.\n\n\"Can you pinpoint where the destruct signal is coming from?\" Raymond demanded of Science.\n\n\"Aye, sir, it is coming from the estate two kilometers below us,\" Science replied, indicating on a map where he was speaking of.\n\n\"Who's closest?\" he asked the Tac O.\n\n\"We are, sir!\" came the immediate reply.\n\n\"Shit, Lt. Morneau, get us down there as close as possible. Once we are down, I want the five Marines in Combat EVA to exit with me to find the source of that signal and put an end to it, hopefully without killing some son-of-a-bitch!\" Raymond ordered.\n\nThe little ship dropped down and landed within the courtyard of the estate, the hatch opening even before the ship had completely settled. The six men and women in their Combat EVA suits used their suit's augmented systems to jump to the ground and rush up the stairs into the house, taking the large doors off their hinges when they hit them.\n\nThey followed the source of the signal to a room on the fourth floor of the building and broke through into the room. There were two men there, one was wearing a slave collar but was dressed rather well for a slave, the other was dressed quite well thank-you and did not wear a collar.\n\n\"Cease what you are doing immediately,\" Raymond shouted, using his suits built in loudspeaker to enforce his command.\n\nThe man ignored him and continued to call up slave names. He never got the chance to push the button again as one of the Marines hit him with a stun gun.\n\nDavid screamed when the Master fell over, though secretly he was happy that the Master got to experience some of what a slave did. Stunning a person hurt. Waking up after was even more painful.\n\n\"Don't worry, he has just been stunned,\" the female Marine stated as the yelling man suddenly went silent. \"Who is he?\"\n\n\"That is Master Adolphus, youngest son of Peotre Adenomere,\" the man replied.\n\n\"And you are?\" Raymond asked.\n\n\"I am David, his PA, sir,\" the man replied.\n\n\"Very well then, David. We don't want to stay here but we need to put an end to any opportunity this idiot will have to indiscriminately kill more people. How do we do that?\" Raymond asked.\n\n\"If you take the main computer offline, we will not be able to send out any messages of any kind from the estate,\" David offered, very much afraid for his life.\n\n\"Where can we find the master computer?\" Raymond demanded.\n\nDavid turned and took them to a door which entered into a small room. In the center of the room, on a small stand, was a micro-mainframe. Raymond nodded to one of the Marines, who attached a link to the mainframe. He took all the data he could, sending it directly to the Jean Jacques Aucoin.\n\n\"Sir, it's starting to get hot out here!\" Raymond received in a call from Lt. Morneau. \"The local Militia and Airforce are starting to make some serious headway. We need to get out of here.\"\n\nRaymond gave a questioning look to his tech. \"We are finished, sir,\" the tech advised, then shot the mainframe with his stun gun. The computer overloaded and shut down. \"They will have to replace the fuses in order to get her back up and running,\" the tech told him.\n\n\"Right, let's get out of here,\" Raymond ordered, turning for the only door out.\n\nThe six ran back through the house at full speed, seeking the exit.\n\n\"Sir, we are in the shit now! We have six local fighter jets heading at us and Militia units are entering the compound. The ship is taking small arms fire!\" Lt. Morneau advised.\n\nRaymond stopped to look out on the courtyard from the second story window. He could see immediately that they would not make the ship and even if they did, the ship could not open its hatch for them with all the small arms fire she was taking.\n\n\"Lt. Morneau, get the ship out of here, that is an order!\" Raymond told him, turning to look at his team. \"I'm sorry, we are captured,\" he told them, getting nods of understanding from the team.\n\nRaymond led them down the steps to the first floor where there were more than a hundred Militia waiting for them. Their capture was somewhat of an anti-climax.\n\n************\n\nThe people in the Battle Bridge looked on in disbelief as they heard the capture of Raymond and his fellow Marines, while the Jean Jacques Aucoin fought its way free of the atmosphere and the assault by the local Airforce.\n\nMore and more of the shuttles were heading for space, being protected on their way up from assault by the Valour Class ships. As the last of the shuttles left the surface, the Valour Class followed them up, the raid was over.\n\nThe Dewfall, In Orbit Planet Adenomere, Adenomere System\n\nDostier was watching as the shuttles made their way up. Several of them were attacked with the destruction of four in-atmosphere. The aircraft that took out those shuttles themselves being destroyed in retaliation. Eventually all of the shuttles were in orbit, heading for their respective support ships.\n\nThe Dewfall's Boatswain, MCPO Alexander Tach\u00e9, was coordinating the recovery of damaged Union vessels, paring up ships to help damaged ships jump out, or recovering smaller ships onto larger ships. All of the damaged ships got out.\n\nDostier began to roll up the raid, moving them to the jump out point with a strong rear-guard to support them in case someone tried something stupid. The rescue ships jumped out first, followed not long afterwards by the damaged ships, paired with support ships. Then followed the heavies with the Whippet and Valour Class immediately afterwards.\n\nThey jumped into their 'safe' zone, fifteen light years from Adenomere, where they waited out the recharging of the older ships of Task Force Adenomere. Dostier took stock of her fleet.\n\n\"During our raid, nineteen of the heavies took major hits, though only five of them could not jump on their own,\" the Boatswain reported. \"Two Whippet Class and eight Valour Class were destroyed in orbit with the loss of all hands.\n\n\"We have twenty-one damaged Whippet Class, six of which had to be taken aboard other vessels to make the jump here. There were thirty-six Valour Class damaged to the point they needed to be taken aboard other ships to make the jump, and a further sixteen with minor damage though they can jump on their own.\n\n\"We lost five civilian shuttles in-atmosphere with the loss of all aboard. That means six Marines, two pilots and up to eighty rescued citizens lost for a possible total of over 440 lives lost. The aircraft that shot those shuttles down were themselves harassed and three were destroyed, two escaped.\n\n\"We do not have the totals as of yet, but preliminary reports say that we lost 762, not including those lost in the shuttles, and 4,018 injured in orbit, those numbers will likely go upward some.\n\n\"We had a target of 90,000 citizens on Adenomere, we got 75,108 out. We are not sure at this time how many are actual citizens and how many are non-citizen slaves seeking asylum.\n\n\"Our target for all the raids was 180,000 citizens. If we add up all we rescued, we have a total of 218,525. We will need a couple of days to determine how many are citizens.\n\n\"Five of our Marines and one Navy officer were captured, that includes Capt. Raymond Clark, Sgt. Jacintha Aurans, Sgt. William Brogues, Tech. Sgt. Brian Donnes, Sgt. Melinda Tanten, and Sgt. Brianna Wilden,\" MCPO Tach\u00e9 finished.\n\n\"Send that report to our two base camps and advise them of the numbers heading their way. See if we can get some more hospital ships out to HD-137982, we will need that support,\" Dostier ordered.\n\nOn paper, the raids had been a massive success, however, it didn't seem like a success to Cmdre. Dostier...\n\nEnd of chapter thirty-nine.\n\nPlease rate and comment but remember to keep your comments respectful.\n\nCheers! See you all on Liramor-23!\n\nBe well, Be kind to one another, Be safe.\n\nbigtddybr"
    ],
    "authorname": "bigtddybr",
    "tags": [
        "sci-fi adventure",
        "adventure",
        "fantasy",
        "recued",
        "lost",
        "disaster"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/all-that-glitters-ch-39"
}