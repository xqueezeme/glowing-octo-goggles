{
    "title": "Rose Ch. 58-63",
    "pages": [
        "\"I'll get the house, you get the shed,\" Lars sent back. I stood and pulled off my Ghillie suit, then ran naked down the hillside with my pistol in my hand. I went straight to the dead men, watching the house as I rifled their pockets. The big man had a key ring, I grabbed that and went to the door of the shed.\n\nThe padlock was a Masterlock, I saw a key with that logo and put it in. The padlock opened, and the chains dropped. \"Es hora de que llegues aqui,\" a man said. (About time you got here.) I pulled the door back, keeping myself hidden, then burst through with my gun up. The man was sitting at a table, he reached for a gun but I was faster and soon his brains were spread on the wall behind him. I looked around for others, my stomach sinking as I saw what was here. \"Shed's clear, a dozen victims alive,\" I sent to Craig and Lars.\n\n\"Need help,\" Lars replied. \"I'm pinned down in the back yard.\"\n\nI could hear the gunfire, I had to leave them. \"We'll be back, we're here to rescue you,\" I told them as I raced back to the door. Shots were hitting the shed door, someone was firing from the house at me. I shifted into my panther and ran at full speed across to the house. The shooter was too shocked or slow, I made it there intact. Running hard, I turned my head and put my shoulder into the door, breaking it open.\n\nTwo men were at the front windows, both turned and looked at me in fear as my huge panther landed in the hallway. Before the first could recover from the shock, I was on him, my claws ripping his gun arm into shreds before slicing across his throat. I left him spurting blood as I leaped on the second man, who got a shot off. I ignored the pain in my back leg as I knocked him down. I opened my mouth wide and clamped my teeth on his head. He screamed in agony as my long teeth bit into each side of his face and my claws raked his chest and arms. I bit harder, there was a loud crunch as his skull caved in and he went limp.\n\nI dropped him and changed to human form, grabbing the AK-47 off the floor and a spare magazine. I ran through the hall to the kitchen where the gunfire was coming from. A man popped out at the end of the hallway, I put a burst into his chest and kept going. Stopping at the end of the hallway, I could see three more men firing through the back windows at Lars. Raising the rifle, I sent a burst at two, just as Lars shot the last one through the window.\n\nIt was quiet again.\n\n\"Stay in position, I'm going to sweep the house,\" I sent. I moved quickly, making sure each man was dead. \"CLEAR,\" I finally sent.\n\n\"Good, I was getting a bit pissed at being pinned behind the birdbath,\" Lars said as he approached. He had pulled off his Ghillie suit and was in his black pants, shirt and boots. I grabbed a shirt out of one of the dressers and used it to bind the bullet hole in my thigh, it had grazed the outside. It would heal on its own in a few hours.\n\n\"We need to secure the barn,\" I said.\n\n\"I've got that, you go get dressed so you don't scare them.\"\n\nI ran out of the house and back to my kit, dressing quickly. I shoved the Ghillie suit and camera in my pack, then shouldered it and grabbed my rifle. I could hear paws thundering towards me. \"Craig, have them stop. Go back to the cars and drive around, we have about a dozen to evacuate and we will need Doc and his ambulance,\" I said. \"The Alphas and Betas should come see this now, though. Oh, and get dressed before you arrive, we don't want to scare the humans.\"\n\n\"On it, Gunny.\" The pounding stopped, and some of them started to run back. I ran back down the hill, picking up my pistol and holstering it as I walked through the barn door. Lars had taken the keys out of the padlock and was starting to release people from their bonds.\n\nThe place was a pure and simple torture chamber. There were chains attached to the walls, eye bolts set into the concrete about ten feet up with collars at the end. The captives were standing against the wall; the chains only had a foot or two of slack, enough for them to move a little, but not to sit down without choking themselves. It was an old and effective means of breaking people down, because they couldn't rest and couldn't sleep without choking themselves.\n\nThe center was the real torture station. A woman was hanging naked by her arms, a pair of chains attached to the beams high above and keeping her arms spread in a 'V'. Her feet were chained to the floor, ensuring she couldn't kick or twist out of the way. Bright lights shone down on her wile the rest of the room was in semi-darkness, showing the whip scores on her back and legs. My body recoiled at the smell of this place; blood, piss, crap and fear.\n\nI grabbed a stepladder by the door and set it next to the woman; she was unconscious, her face bloody and battered. I could tell she had been raped, repeatedly; blood and semen trailed down her thighs. I pushed back my anger, the men were dead, we needed to help them now. \"Craig, you and the medical team in here, keep the others out. We'll frighten them if too many show up.\"\n\n\"OK, the rest are going to the house to see what we can find.\" Craig came in a moment later and ran to my side.\n\nI took the pins out of the manacles on her ankles, tossing them to the side. Craig climbed up the ladder, I gently supported her waist as he took the manacles off her hands. She collapsed onto my shoulder when she came loose, and I carried her over to the table. Craig pushed everything else off, including the guy I had shot on the way in, and I laid her gently on her stomach. \"Nothing else we can do for her now,\" Craig said, \"Let's get the others.\"\n\nThe other victims ranged from frightened to nearly dead, we sat them down in chairs until Doc could get here. Beta Daniel had raided the bedrooms of the house, bringing out shirts, shorts and blankets. He started handing them out to the people as they were freed, covering those who could not dress themselves. I counted thirteen people, eight women and five men. \"Who are you,\" one of the women asked as I wrapped a blanket around her shivering body; she was holding the hand of the woman who had been so badly beaten.\n\n\"Friends,\" I said. \"You are Kelsey Stillwater?\"\n\n\"How did you know my name?\"\n\n\"Your brother sent us,\" I said. \"This must be your mother, Daniella.\"\n\nShe nodded. \"Thank the Goddess you got here, she wouldn't have survived another beating,\" she said as she cried. \"Don't let those two men go,\" she told Craig. \"They are Pacific cartel enforcers.\" Craig looked at them, they had tattoos of the gang and he left them hanging. Kelsey was shivering hard, probably in shock. I held her while she broke down, as the other people were tended to and walked out.\n\nI could hear vehicles starting to arrive, and Doc came in shortly after with a gurney. \"Female, late forties, unconscious, pulse 90. She's been whipped badly,\" I said.\n\nDoc looked at her, lifting the blanket the clotting blood caught, and bleeding restarted. \"Help me move her,\" he said. Craig and I helped lift her, setting her on the gurney face down. We carefully adjusted the straps to hold her in place, avoiding the areas where the whippings were the worst. Doc attached an IV line to her hand, passing me the bag to hold. \"Let's get her out of here,\" he said as soon as he verified the IV flow.\n\nWe pushed her out to the driveway, where the ambulance was waiting. Nurse Wendy had quickly checked the others, two had serious injuries and were already in the back. We loaded up the gurney and Doc jumped in with them. \"Go directly to Alpha Carlos' territory and take the helicopter back to Gila,\" Robert said. \"The driver can meet us on the way back.\" I closed the door, and it pulled out of the driveway.\n\nThe captives were being loaded into Pack vehicles as we watched. Most of the women had been raped and couldn't calm down among men, so Patricia loaded them into a big SUV to drive back. The others were divided up and sent on their way, leaving only the Alphas, Lars and I. I reached into my bag and pulled out the cellphone, sending a text to Alpha Carlos that we were ready for them. \"Did you find anything in the house?\"\n\n\"Not much,\" Robert said. \"We gathered anything that looked important. We've grabbed the SIM cards for all cellphones, and hard drives from the computers.\"\n\n\"All right, time to put the plan into effect.\" I walked back into the barn, picking up the pistol dropped by the man I had shot when I burst in. Looking at the Cartel men still shackled to the wall, I put two rounds into each of their chests, then wiped the grip with my shirt. I put the pistol in the dead guard's hand, fired another shot into the wall and let the pistol drop to the ground again. \"Leave this place as is,\" I said. \"When the packages arrive, we'll make it look like they were killed in the shootout.\"\n\nWe got back outside as Carlos' vehicle pulled in. He stepped out, surveying the scene. \"Successful?\"\n\n\"Smooth,\" I replied. \"Those our guys?\"\n\n\"Yep, fresh from a Pacific Cartel hideout. We left a few others behind, we piled their heads outside and put Z's on the wall in their blood,\" he said.\n\nWe took the men out, they had been knocked out. I carried one into the shed, standing him up I shot him in the face and left him there. The other guy was shot in the driveway. Wiping off the blood, I went out and grabbed a torch and some kerosene from the back of the second vehicle. Carlos had already left, and Lars grabbed the other torch. \"Get the house and we'll meet you back at the trailhead,\" I said to Alpha Craig. Beta Alex took a can into the house, he would set fire to that and drive away with the others. Lars and I lit our torches after soaking the cloth in kerosene, we needed to burn the grasses and paths we used to hide our scents. With the dry air and the heat, it would start a wildfire, but it was better than being discovered. We made sure our hide locations were well burned, then continued up and over the hill. The trail where the Packs had come was especially strong in scent, so we set fires on each side of the trail. By the time we made it back to the vehicles, the whole mountain was on fire.\n\nThe victims were rescued, the Zeta Cartel members were dead, and it would be blamed on the Pacific Cartel. As we loaded into the back of the SUV, I was in a good mood. I held my right hand up in a fist, thumb up, while my left hand pointed at it. It was the universal signal for \"Want a beer?\"\n\nWe deserved it.\n\nCh. 59\n\nIt was a good thing all vehicles owned by the Pack kept a store of extra clothes around, because these people needed them. We were getting updates from the other vehicles, those carrying the victims we had rescued. It wasn't good.\n\nSome things were so important they were worth breaking radio silence. Alpha Craig took out the scrambled satellite phone we had brought along; although the transmissions could be intercepted, it was impossible to tell where they had come from. The scrambler Josh had installed would have to hold them off. He pressed the number for home. \"It's me,\" he said. \"Write these down, they were the ones rescued.\" He read the list of twelve names. \"Cross-reference and pull in those assets before this becomes public, use our allies as needed.\" He hung up, the whole call took about thirty seconds.\n\nWe drove through the Coronado National Forest, getting away from the flames and the emergency vehicles before we were noticed. When we were safe on the other side, we had all the vehicles pull over into an isolated area of desert; it was time to do a little dressing and sorting. We let Patricia take her van in the pullout first, the vehicle hiding the women from the roadway as they pulled on clothing. They didn't have enough, so we went in second, pulling alongside the van and letting Patricia get to our stash as well. When they were dressed, the SUV carrying the male victims came in.\n\nThey didn't know who we were, just that we had rescued them. Some were in shock, some were overjoyed, some still held fear of what would happen next. Nothing in their experiences with the Cartel was good, and they didn't know we would be any different. Lars and I had some basic medical training, we focused on treating the obvious injuries as we could. None were life threatening, but they did have the injuries from prolonged torture Robert had seen before. All were human as well; the two mountain lion shifters having been taken in the ambulance with two other women.\n\nWe divided the people up, getting their backgrounds and comparing notes from the four women and three men. We collected contact data for their families which we could later compare to what Charlie had already given us. All were being held as leverage against husbands or relatives. \"Alpha, how much do we tell them?\"\n\n\"Not much, follow my lead.\" Alpha Craig moved until he stood in front of the men and women who were sitting in the shade from the van and the SUV. He pulled out a badge, one he probably hadn't turned in at the end of the task force time. \"I'm Special Agent John Doe, Drug Enforcement Agency,\" he said before flipping it closed. \"And no, that's not my real name, and none of the other names you hear today will be real. Our Task Force is top secret, operating outside normal channels, for the express purpose of taking out the Zeta Cartel. This morning we got word from an informant that a Cartel safe house was located in the mountains outside Patagonia. We moved on the information immediately. The raid that freed you was a complete success, all Cartel figures were arrested or killed, plus we gained significant intelligence. Now, I would like nothing more that to return your freedom and reunite you with your loved ones, but I'm afraid that will have to wait for a while.\"\n\n\"Why?\" One of the men started to stand. \"We have done nothing wrong!\"\n\nCraig held his hand out. \"You have not, but to reunite you now would risk you and your loved ones,\" he said. \"We are going to transport you to a secure location, where you will be treated, fed and brought up to date on what is going on. When it is safe to do so, we will arrange for you to talk to your families again. The Cartels aren't stupid, they will know you are gone shortly. We need to safely reach out to your families and bring them to safety before the Cartel gets them.\"\n\n\"We need to listen to them,\" one woman said. \"The Zetas won't hesitate to wipe out your whole family if they think they have been crossed.\"\n\n\"They are, but the full resources of the United States government are being applied to take them down.\" He turned to me. \"We will be traveling to this secure location now, it will take about almost ten hours to get there. We expect the Cartel will have people watching, plus we know they have agents in government, so we have to take the long way and back roads. We will only be stopping as necessary for gas, food and bathroom breaks. I would ask that you cooperate, minimize your time outside the vehicles, and listen to our instructions. Get some sleep, tomorrow is going to be a busy day,\" he said.\n\n\"If you need to go to the bathroom, ladies behind that rock, men on the other side of the road,\" I said. \"There is water and food in the cars, we will get more along the way. If you have any specific needs or requests, let your driver know.\" A few people wandered off to go to the bathroom, and five minutes later we were back on the road. Ross joined Patricia in the van with the women, we had no other females along. We figured he was the best choice because they trusted her, and as her brother she could vouch for him.\n\nWe took off ahead of the rest, winding up to near a hundred miles an hour on the empty desert roads. \"Boss, what are we going to do with these guys? We can't put them on Pack lands without risking exposing ourselves. If the Cartel gets wind that werewolves and werecats were involved, our little blameshifting game falls apart.\"\n\nCraig nodded as he drove. \"I know. We can't do anything about the ones heading to Robert's territory, they need the clinic. Wherever we take them has to be defensible.\"\n\n\"And untraceable to the Pack,\" I said.\n\n\"For now, that house we own down the street will have to do. Charlie, your application for asylum for you and your family has been granted. Your information has been accurate and helpful, and that is enough for me.\"\n\n\"Thank you, Alpha. I won't let you down.\"\n\n\"You better not let my sister down, Charlie. You hurt her, and you'll beg for the Alpha Council to take over your judgment.\" Ross could be downright scary when he wanted to be. \"Have you talked about where you are going to settle?\"\n\n\"Not yet. I'm still figuring this pack thing out. Wherever we go, we need to be together.\"\n\n\"Nothing has to be decided yet,\" Craig said. \"Luna knows there have been enough surprises lately.\"\n\n\"How is your sister holding up, Charlie?\" She had clung to me, both as her rescuer and her fellow cat shifter. I didn't have much time to talk to her before she left in the ambulance.\n\n\"She didn't say much when we could still link, other than being worried about Mom and thanking us for getting them. She'll be fine until she's not fine,\" Charlie said. \"She's strong willed, clear headed when there is trouble. It's when things calm down that everything catches up with her.\" His fists clenched, and he looked out the window. \"She was raped, repeatedly. All of them were, the men too.\"\n\n\"I know, those bastards broke them in every way. I smelled it, and I could tell by how they reacted to me,\" I said.\n\n\"My Pack Healers have dealt with this before, we even have some females who escaped from the Cartel and their abuse,\" Robert said, \"Including my own mate. One of them, Maria, was in the ambulance.\"\n\n\"That won't help too much since they passed the patients to the helicopter,\" I said.\n\n\"I could send Caleb and Maria along to your house, they can stay with the victims for now. Wendy too, if Doc can spare her. That's all I can do.\"\n\nI could see the wheels churning in Craig's head. \"I want to minimize contact with werewolves, though, and I don't want to see Maria having to relive that time. There are some abuse and sexual assault counselors in Santa Fe, very discreet. I bet I could pay enough to keep their silence and make the house calls.\"\n\n\"Good idea,\" Robert said. \"Whatever help we can give them without them knowing who we are, we should.\"\n\nWe slowed down as we got to town. We found a McDonalds in Huachuca and placed a huge order; it wouldn't be the heathiest, but it was fast. We got bags of burgers, nuggets, fries and shakes and quickly pulled back out into the roads. Our timing was good, we were able to meet up with the other vehicles at stoplights and pass the bags across.\n\nAfter stuffing myself on chicken nuggets and fries, I was ready to nap. I rolled up my Ghillie suit, wedging it against the window as I tried to nap in the back seat. Craig and Robert had the first watch, Lars and I were taking the second. The navigation system had been programmed with waypoints to avoid law enforcement and Pack boundaries; we didn't need any more problems tonight. The fewer people who knew about us, the better.\n\nWe skirted the southern edge of the Gila Pack territory. As we got closer, Robert was able to get an update on the victims. Daniella Stillwater, Charlie's mother, was still unconscious but would pull through. She had been beaten nearly to death, another hour of that torture and she wouldn't have made it. Kelsey was better physically, she was resting in the same bed.\n\nCharlie asked to go with them, and Craig had to tell him no. \"You're needed back at the Belden house for the investigation,\" he said.\n\nTen minutes later, we were stopped at a road junction and everyone got out to stretch their legs. \"All right everyone,\" Craig got their attention, \"Some of our task force is going to return to base, and all of you who have been rescued are being taken to a safe house. As I said, I don't know how long you will need to be there, but the safety of you and your families is our priority.\" There were nods and grumbles, it was nearly four in the morning. \"Now, I need you all to load into the van, men first.\" The four men took the back rows of the thirteen-passenger van, the women in the middle, and I drove while Ross took shotgun. We waved at Robert and his men as we pulled out again.",
        "We pulled into the driveway of the safe house just as the sun was rising over the mountains. We had linked the Pack early enough for them to get the house prepped and open for us, then they were gone. Ross and Patricia were going to stay with them, since the women were already familiar with them. Rose said they left food on the table, but if they were anything like me, all they wanted was a bed.\n\nMine had my mate waiting in it when I got out of the shower.\n\nCh. 60\n\nI woke to an empty bed and sun streaming into my eyes from a crack in the draperies. Stretching, taking a deep breath of my Rose's scent, I listened for her in the room and didn't hear anything. I got up, took a quick shower and went downstairs, following the amazing scent.\n\n\"Good afternoon, Gunny,\" Marge said as she pushed a plate over to me. My mouth watered as I looked it over; an open-faced prime rib sandwich, with a huge side of mashed potatoes and covered in beef gravy. \"Eat up, then you can go downstairs.\"\n\nI grabbed the plate and silverware and sat at the table, looking around I saw the people present. \"Hello, I'm Beta Gunny Rodriguez of the Belden Pack,\" I said to the nervous people.\n\n\"Beta Richard Steele, of the Adirondack Pack,\" the closest man said. \"This is Beta Reggie Carlson, of the Telluride Pack.\" Richard was a typical Beta, strong and intimidating, but Reggie was something else- six and a half feet probably, and close to three hundred pounds. We stared at each other for a moment before he looked away, my dominance established. Something about my cat unnerved the wolves.\n\n\"Thanks for inviting us, I'm so happy to be able to get some revenge,\" Reggie said. \"You're Rose's mate?\"\n\n\"Yes,\" I said after swallowing a big bite. \"I was changed last year, I found her after the war when we had to visit Washington.\"\n\n\"She seems to be taking to the change just fine,\" Richard said.\n\n\"She is. We were going to wait until the investigation ended, since she was the human representative to the task force, but when she was hurt... I couldn't let her suffer at human healing rates. Now we are together in all ways.\" I finished my food quickly, draining a glass of milk. \"Now if you'll excuse me, I need to catch up.\"\n\nMarge pushed my shoulder down as she slid a piece of pecan pie with French vanilla ice cream in front of me. \"Stay put, they're all coming up here,\" she said. \"Not enough room for everyone in the control room anyway.\"\n\nI looked out the window, the pool was packed with Moms, teens and kids. I could see the outdoor kitchen was getting a workout with steaks, hot dogs and other food. The teens had the middle of the pool commandeered for a big volleyball game, extra teams waiting at the wings and socializing. The smaller children were in the shallow end, and some older kids and adults down near the waterfall. I recognized my own Pack members, and some from Gila, but a lot were new. \"Ella goes all out for a party,\" I commented.\n\n\"It's a good cover for everyone being here,\" Richard said. \"The invitation was innocuous, we all brought our mates and families, and they are having fun. No one would suspect that we're having a war council in your living room.\"\n\nI quickly finished, putting my dishes in the sink before heading to the stairway to the basement. The door opened, and Rose was there; tired, stressed and beautiful. She fell into my arms, wrapping herself around me as she pressed her face to my chest. \"I missed you when I woke,\" I whispered as the rest of the people passed us on the way to the living room.\n\n\"I had work,\" she said.\n\n\"I can see, you guys were busy.\" She pulled back and led me into the big room, where the couches were rapidly filling with Alphas and Betas. She sat me in a chair, then stood with Ella and Josh at the front of the room.\n\nWhen everyone was in the room, Ella asked for their attention. \"My friends and allies, we have learned much in the past few days about the Scrabble killer and the people behind it. As some of you have already seen, the conspiracy was much larger and had an evil purpose none of us could guess at. They want nothing less that the restart of a war with the humans, one that we will lose quickly and decisively,\" she said. There were gasps, comments and outrage in the room, she gave it a minute to settle down. \"You were invited here because you are allies and friends of the Gila and Belden Packs, or you were directly affected by the Scrabble Killer. The killer who was killed on orders of the same group that trained, funded and supported their reign of terror.\"\n\nJosh put a map on the huge television that dominated the wall behind them, as my mate stepped forward. \"The conspiracy goes back to money and drugs. At the end of the Were War, there were three Cartels that controlled the trade across the US border. The Pacific, Socorro and Gulf cartels,\" she said pointing the maps, \"Controlled California, Arizona/New Mexico and Texas routes. Now, the Socorro cartel messed with the wrong Alphas,\" she nodded to Robert and Renee, then Alpha Jesus and Maria Merino, \"and were wiped out.\" The map changed behind her, showing six months ago. \"The Gulf and Pacific cartels tried to carve things up between them. They were only partially successful. This is what we have now.\" The screen changed, showing a new player, the Zetas, moving through northern Mexico into New Mexico. \"The Zetas are the newest and most dangerous players in the drug trade. Former Special Forces, they switched sides and quickly dominated the trade through Florida and the South. They are pushing out, aggressively taking over territories from weaker cartels through extreme violence, intimidation, and intelligence.\"\n\n\"Intelligence? What do you mean,\" one of the Betas asked.\n\n\"Unlike the criminal focus of most cartels, the Zetas take a military approach. They spend a lot of time and resources on developing sources, cultivating cooperating agents, subverting law enforcement agencies. They have nearly unlimited resources and can buy experts and mercenaries for whatever is needed. We know that they did, and we were shocked at how many people in government are working for them. Some are being forced to do so, but the majority are in it for the money. Their agents are the reason Maitea avoided capture, why she was able to continue killing our members. People within government and within our own task force were helping her, not just her brother.\"\n\n\"How do you know,\" Alpha Jesus said.\n\n\"There is a man, Charlie Stillwater. He's a mountain lion shifter, he got his family through the war by working for the Socorro Cartel on US smuggling routes. Along the way, he became an expert in cultivating agents to protect his routes. When the cartel fell, he was able to escape the other two, and planned to live out a quiet life.\" She looked around the room. \"The Zetas found him, used him to develop their smuggling routes. Agents he had cultivated were added to the large number they already had. He came to us a few days ago, his mother and sister were being held by the Cartel to ensure his compliance. In exchange for help in rescuing them, he provided us with everything he had on the Cartel's sources and methods, plus the reasoning behind the Scrabble killer. They were using her to push humans and werewolves apart, to raise tensions. When the investigation failed, it was expected we would take things into our own hands and attack humans. Now that we are out in the open, it would be easy to wipe us out.\"\n\n\"This Charlie, you have him? If he helped, he must die,\" the Alpha of the Adirondack Pack said.\n\n\"That is not our choice, he understands the gravity of what was done and will face the Alpha Tribunal in time. Right now he is in our cells, with his mate.\"\n\n\"Cats don't have mates,\" Beta Richard sneered. \"Well, except you guys. Until you panthers showed up, no one had ever heard of werecat mates.\"\n\n\"A fact I think is more attributable to their isolation than nature,\" Alpha Nichols said. \"His mate is my sister, she recognized him immediately, he felt the pull but didn't know what it was. In any case, he has helped us greatly.\"\n\nElla pulled everyone back on topic. Josh put a diagram up showing the President and his Cabinet, highlighting the agents at the Zeta's disposal at the highest levels and down through regional contacts. \"Holy shit,\" was the basic comment as people's eyes gathered the size of the conspiracy. It took a few minutes and a few more slides before everyone had a good idea of what we were facing.\n\n\"We don't have the resources to take on the Zetas, not even if we combine,\" Rose said. \"They are insanely violent, and we would suffer great losses. So, we made the decision to fight this as a proxy war, following the model that we used with the Socorro cartel. They can't realize it is us behind what is happening to them. We have to do things like Gunny's team did.\"\n\nI rose and looked at everyone. \"When we hit the Cartel safe house, we made it look like the Pacific cartel did it. We destroyed all evidence of werewolves being there.\"\n\n\"And we have started the same plan from here,\" Josh said. \"We've been generating false email traffic, phone calls and text messages to make it look like the Cartels are starting an open war. We've used agents to direct law enforcement to hit Gulf and Pacific cartel targets, leaving behind information leading back to the Zetas. We've also sent information to the other cartels on Zeta operations and locations, helping them to hit back. Right now, we have Betas delivering packets of information to our allies in each Cartel. We're giving them everything they need to hit the Zetas and hit them hard.\"\n\n\"How can we help,\" one of the Alphas said.\n\n\"As far as I am concerned, anyone working for the Zetas is complicit in the attacks on us. There are hundreds of files we have compiled, far more than our Packs can handle. What we propose is to split things up, roughly geographically. We give you the information on them, and you find a way to take them out or use them to create more issues for the Zetas. Either way, they get hurt. Just make sure it can't be traced back to us,\" Ella said.\n\n\"We're still compiling things, but we'll have it all ready for you before you go. I'll give each Alpha a jump drive with all the information you need. We'll meet later tonight and go over a few suggested strategies,\" Josh said.\n\nDiscussions went on for ten minutes, eventually all agreed that this was the only way forward. \"What about the government? Can we trust them, can we use them,\" Alpha Jesus asked.\n\n\"Enrique and I have a plan for that,\" Lisa Giovanni said. \"I'd rather not reveal anything else right now, it's better you don't know.\"\n\nThe meeting ended, and some people returned downstairs; there was a lot going on down there, and our computer guys were swamped. Rose moved to go there, but I stopped her. \"Take a moment, let's go check on Charlotte and the others.\"\n\nWe walked out to the pool, waving at Charlotte as she played volleyball with her friends. We were working our way down to the waterfall when a person grabbed me from behind, her large breasts pressing into my shirt. Rose snarled, and she quickly let go. I turned to her, it was Kelsey Stillwater. \"Sorry,\" she said. \"I just wanted to thank you again for rescuing my mother and I.\"\n\nRose pushed her back to a decent distance, she was jealous of the buxom woman. \"I'll cut the bitch if she touches what is mine again,\" she sent.\n\n\"I only have eyes for you, love.\" \"It was a good operation, we saved people and no one got hurt,\" I replied.\n\n\"Thanks again.\"\n\n\"How is your mother doing?\"\n\n\"She is resting and healing, Doc said she would be fine in a few days. I brought her along, there wasn't anything else he could do in the clinic, and she wanted to be with her family.\" She jumped back into the waist-deep water, the unmated males in the area paying close attention to her boobs as she did so.\n\nRose pulled me back towards the house, visiting hours were over. \"Ella put her and her family in guest rooms. If I catch your scent near there I'll rip your nuts off.\"\n\nI pulled her into my arms. \"How many times can I tell you, love, YOU are the only one I will ever want. No other woman interests me.\"\n\nWe stopped at the kitchen, I made her a plate to take back down. As we were putting it together, Tom came into the pool area. \"How was your search,\" I asked.\n\n\"Good. I got enough hotel suites reserved for the visiting guests,\" he showed a bag full of key cards. \"I also got a line on three nearby properties, and one large chunk of land. I have to see if Craig and Ella want to proceed.\" He suddenly froze, a scent catching his interest. Moving quickly and with complete focus, he followed the scent to the pool area. I heard him mutter \"MATE!\" as he moved. \"Stay clear, Tom's scented his mate,\" I sent to all my Pack members. I saw the mated and juveniles start to move away for safety, while the word spread quickly to the unmated females. He stopped at the edge of the pool, pulling a woman up and into his chest.\n\nIt was Kelsey.\n\nHe buried his nose into her shoulder, then pulled back confused. He smelled her again, her hair the most. \"I smell my mate, but it isn't you,\" he finally said. \"Whose smell is on you?\"\n\nHer jaw fell. \"My mother's...\"\n\n\"WHERE?\"\n\n\"In the guest room, she's...\" He let go, causing her to fall back into the pool as he turned and ran for the house. We all stayed out of the way, he nearly took the sliding door off as he raced inside.\n\nWe heard a door crash open followed by a loud scream. He yelled \"MINE!\" and she screamed again, this time you could hear the pleasure and lust in her voice as he marked her.\n\nCh. 62\n\nRose's POV\n\nOne Week Later\n\nAt least the morning sickness had stopped.\n\nI was eating again, eating a LOT. Weird stuff, too; pregnancy cravings combined with the rising demands on my body to grow my FOUR babies. I just smiled at Marge as she set down another plate of pancakes and Nutella for me. I was in a bad mood, Gunny had been gone all week on various missions. Our Pack had been very busy lately.\n\nTom had gotten out of the bedroom long enough to buy a half-dozen more properties and get them ready for people. Taking the afternoons while his mate, Daniella Stillwater, rested and recovered from the abuse at the hands of the Zetas, he worked his magic. We needed the room; each home was purchased by dummy corporations set up back when Ella's Pack was still in North Dakota. We were rescuing and reuniting family members who were kidnapped to ensure compliance of Cartel agents.\n\nNow they were free from them, and almost all had volunteered to help us take them down. We put humans in some homes, shifters in others.\n\nAll over Mexico and the southern United States, the Zetas were under attack. Mexican and United States authorities were swamped with tips, leading to hundreds of successful raids... since the Cartel agents in place to warn them, didn't. Drug warehouses and shipments in progress were intercepted by rival Cartel members, and bloody battles raged between them over territory.\n\nWe participated as well, mostly in the banking area. Josh and Carl were experts at hacking banking systems, and we hit them where they hurt. Billions of dollars in offshore accounts mysteriously disappeared.\n\nWe were feeding that money to allied Packs, and giving Tom the resources he needed to further expand our Pack boundaries here. He was already visiting our neighbors, giving them well-above-market offers for houses that weren't on the market. He was confident we'd own the whole area, turning it into our own gated community, in the months before spring.\n\nI was so proud of my future son-in-law, my daughter as well. Charlotte didn't understand what he was doing or how he was doing it, but she made sure he, Carl and everyone else in that room had what they needed. She and Jane Spencer divided up the day, each taking a twelve-hour shift providing support. Food, drink, massages, messages, cleanup... it all helped, but it was their insistence on them taking regular breaks and getting enough sleep that let them stay effective as the week went on. When the boys would start to object, insisting they were all right, the girls would just raise an eyebrow and stare them down until they did what they said.\n\nOur Pack was growing as well. On a daily basis, werecats of all kinds were showing up at our gate seeking protection. We were the only Pack in the country with a feline Alpha, the only Pack that welcomed cats and dogs living together. Most were shocked to find they could even have mates; all feline were-species were loners, filling territories between the wolf packs who would kill them on sight. One of our houses was now filled with Cougars, Panthers, Tigers, Lions and even a small family of Canadian Lynx shifters. Some wanted to join the Pack, others just wanted to be in our shadow. Tom was going to find homes for them on the edges of our territory, where they could use our land for runs, and provide an extra layer of protection for our Pack.\n\nI was even getting used to the mountain lions.\n\n\"Good morning, Rose,\" Ella said as she came downstairs and sat down. \"How are you feeling?\"\n\n\"Better, but you are farther along than me and have more experience at this kind of thing.\"\n\n\"You'll be fine, things just happen faster with multiples,\" she said as she poured blueberries over her pancakes. \"I'm glad my stomach and bladder still have room, another month and things get more difficult.\" She had five children, including two sets of twins, and triplets due in March.\n\nI tensed a little when Kelsey walked in; she was nice enough, but I was jealous of her. I felt fat and unattractive, and she had this rocking body that had all the men drooling. She had taken the warning and stayed away from Gunny, in fact she hadn't messed around with any of the men. She politely declined all offers, stating she was waiting for her mate, and then she'd go work out again. \"Alpha, Beta, can I have a word with you,\" she asked meekly.\n\n\"Sure, Kelsey. Have some breakfast.\" Marge dropped a bowl of fruit and yogurt on the table in front of her, along with steak and eggs. \"Are you settling in all right?\"\n\n\"Yes, you have been very generous with my family. Mom is happy in Tom's room for now, although he is looking for a place of their own. Mitch and Kelly are very happy with the assignment you gave them, and May is enjoying being around other children and being able to play openly in her cat form.\" Kelly was her younger sister, her husband had been human until changed, their daughter was seven years old. Craig had put them in charge of the home for the new cat shifter arrivals, about two blocks away from our house.\n\n\"I'm glad,\" Ella said with a smile. \"So, what's going on?\"\n\n\"I'm showing the signs, Alpha. I'm going to start my heat in the next two days.\" Oh shit. As a mated panther, I'd not seen the heat yet since Gunny managed to knock me up with FOUR, yes FOUR babies before I even changed.\n\nElla furrowed her brow. \"I'm not very familiar with that, although I've heard things. Apparently, I don't get much of a heat because I get pregnant so quickly.\" The ladies in the area all snickered, Ella being pregnant was her normal. \"What does that mean for you?\"\n\n\"Cougars are solitary animals, you know. We have a territory, the heat drives my cat to push out, to find an acceptable male to mate with. I start to emit pheromones, strong ones, that can be scented miles away. Males will be drawn to me, hoping to be the one chosen, and they would fight each other for the opportunity to take me. The female takes the strongest one, creating the strongest offspring. At least, that's what normally happens, but I am not that way.\"\n\n\"Why?\"\n\n\"I'm gay.\" She slumped down, her face was an open book; she had faced discrimination all her life as a cat shifter, now there was another reason for most Pack members to shun her. \"I cannot lie with a man, in human or cat form. I usually find and isolated location, something secure, and have my family lock me in. We use chemicals and perfumes to mask the scent, and I, um... well... I bring along some toys to bring myself relief until the heat passes.\"",
        "I reached over and took her hand. \"It's fine, it actually settles my cat knowing this. She was jealous, thought you might take my mate.\"\n\n\"We can find a secure place for you to get through this,\" Ella said. \"I can make a phone call or two, I'm sure Alpha Renee has something remote on her territory.\"\n\n\"Thank you, but that isn't all I'm asking for. I'm getting older, I don't have a mate, and I don't want to wait for a family. I want to get pregnant this cycle, with the war over, now is the time for me to finally do it.\"\n\n\"All right... is there a cougar out there you wish to be with during your heat?\"\n\n\"Not be with, just be impregnated by. I want the strongest male I know, Rose.\" No... she can't.... \"I want Gunny to father my child.\"\n\nMy mind was on spin cycle, nothing made sense, I kept running that phrase through my head. My claws started extending, my cat was pushing forward. \"ROSE! CALM!\" Ella's Alpha order slapped my cat down, I sat back and gained control again. \"Rose, she isn't asking Gunny to sleep with her, she knows he is mated, she would never do that, right?\" Kelsey quickly nodded her assent. \"She is asking for a sperm donation.\"\n\n\"Yes, ideally, I would have you collect it and bring it to me, we could use a turkey baster and that would do the trick. We might have to repeat a few times, but in my heat, it should happen.\"\n\n\"And Gunny would have a child with another woman.\"\n\n\"Yes. I would leave it up to you as to how much you would involve yourself in my child's life; I already have a tie to this Pack through my mother, and I won't be far if I am welcome. As I said, I seek the strongest male, and Gunny is that. If you refuse, as is your right, you would not hurt my feelings for I know how much I ask of you.\"\n\n\"What would you do then?\"\n\n\"Well, the second strongest male is Lars, but that face... ugh. I'd have to shave my kid's butt and put eyeglasses over his tail.\" We all laughed a little, at least Lars was happy with Shelley, and they already had three cute girls. \"I could ask Al, he's a powerful male.\" I saw Marge tense up a little at this.\n\n\"Why not another mountain lion?\"\n\n\"Our numbers are small, inbreeding is getting to be a problem. Panthers are close enough to breed with us, and if we were not compatible, Tom would not be trying to get my mother pregnant right now.\"\n\nI sat back, thinking. \"I can't give you an answer right now.\"\n\n\"I know. I came to you first, because if you don't agree I would never think of asking Gunny.\"\n\n\"He's coming back tonight, I'll ask him.\" She looked a little surprised. \"Really, I understand what it is like to hear that clock ticking. It is to the Pack's benefit to have more children, to have more family ties holding us together. I just have to get past the initial jealousy to see the gift that would be for you.\" With that, we all finished our meals, passing the time in small talk because we'd reached our limit on the heavy topics.\n\nWe were cleaning up when Jacob came running up from the basement. \"Alpha, we've got a hit on Eduardo Jimenez, he's holed up in an apartment complex downtown,\" he said.\n\n\"He's MINE,\" Kelsey said. \"That bastard liked to rape my mother and I.\" When we debriefed the people we rescued from the safe house, we had identified Eduardo as the leader of the group; he wasn't there when Gunny and Lars attacked. The facial recognition software must have done its thing.\n\n\"Gotta go.\" He was already running for his room to gear up.\n\n\"I'll meet you outside in five,\" she said as she took off for her room.\n\nI couldn't believe what I saw when she came back down. She was dressed like an avenging angel; black leather pants, short black boots, a black coat open at the front, exposing her six-pack abs below a black sports bra. In her hands she carried aluminum softball bats. \"Holy shit,\" Jacob said, \"You're going old school on his ass, aren't you?\"\n\n\"Damn right. He's got two balls on him, and I'm bringing the chin music. I'll even loan you one.\"\n\n\"Batter up.\"\n\n\"Hey, it will look weird if you walk in there carrying baseball bats. Grab a couple of gloves and a ball from the shelves and take those with.\" Jacob looked at me like I was a genius. \"Hey, I carried a bat in my car for years as self-protection. As a lawyer, it's my advice that it looks better to a jury if you have a ball and glove with it.\" They went out to the garage, leaving a minute later. I felt sorry for the guy.\n\nAlmost.\n\nCh. 63\n\nLisa (Giovanni) Nichol's POV\n\nThe last four days had been very interesting. We had driven back to the Thurmont Pack the day after the pool party and Alpha Summit ended, leaving Patricia with Charlie. His trial with the Alphas would take place in a month, after this all blew over, and after they saw just how valuable his information was. Many of us would be making pleas for mercy on his behalf, and I hoped to God that they listened. Patricia was a good woman, and she deserved to keep her mate alive.\n\nEnrique was traveling with us, he and his road show of electronics and gadgets. He had approached me privately before the Alphas got together and presented an idea he needed my help on. It was beautiful, it was perfect for our needs, and it was exceedingly dangerous. The group of people aware of what was going on was limited to the two of us, Ross, Ella and Renee. This could not trace back to us, the blowback would be catastrophic and destroy our species within days.\n\nHe had been holed up in a room at our Pack since we arrived in the middle of the night. He didn't interact with the Pack, I brought him all his meals and took care of anything he needed. I didn't understand half of the things he needed, but I got them. All activities were performed by layers of Cartel agents that we controlled, people who were true believers or paid off. We'd contact them using the information Charlie gave us, using burner phones or phones he had cloned from higher level people. Some things were simple; rent a car and leave it in a location or rent a box at a UPS store, pick up a package and leave it somewhere else. One of our Pack members would get it after the agents left it at a dead drop, a place with no cameras to trace it back. We would wire them money after the job from a Zeta Cartel offshore account that was still active.\n\nWe were getting close; after I brought him lunch, he showed me a device. It was only a couple inches square, with four small propellers. It was an advanced mini-drone, but it was much more advanced than the ones in the toy store. He had five of them on his desk. \"Toys?\"\n\n\"Nope, I call them AFRAID.\" He picked one of them up, using his laptop he entered some information and the drone activated. It rose off the desk, hovering near the ceiling. The image from the drone was linked to his laptop; it focused on my face, boxes appeared, then it moved to his. \"Call your mate in here.\"\n\n\"Ross honey, Enrique asked for you to come to his work room,\" I sent. A minute later, he knocked on the door.\n\n\"Watch the screen,\" Enrique told me. \"Come in Ross.\"\n\nRoss opened the door and the drone focused its camera on his face. The word MATCH came up around the boxes surrounding his face in the image, and suddenly the drone shot across the room and stopped in front of his face. It was so fast Ross was caught off guard; he swatted at it, but the drone moved away just as quickly and hovered there. \"The FUCK was that,\" Ross said as the door closed.\n\n\"AFRAID. Autonomous Facial Recognition Artificial Intelligence Drone,\" Enrique said as he shut the drone down. \"It's a highly advanced miniature drone with a high-resolution camera; I programmed it to look for your face. It uses GPS and image analysis to fly without the need for a remote operator, and has a twenty-minute flight time and range of several miles. It automatically scans faces in a crowd for a match.\" He handed Ross the drone, it looked like a hummingbird when it was flying, in his hand it fit on his palm with room to spare.\n\n\"So? Cool stuff, but how does that help?\"\n\n\"I program them to recognize and dive-bomb their selected target, then I have this.\" He took another drone off the table and opened it up, inside was a tiny white putty, cup shaped with the opening forward. \"It doesn't look like much, but this is three grams of shaped explosive. If the drone puts it within an inch of someone's skull and detonates it, the shaped charge will send a stream of gas and shrapnel through their brain.\"\n\n\"A killer drone?\"\n\nHe nodded. \"We're ready to deploy to the five targets we selected, we just have to get them all together.\"\n\nThey both looked at me. \"Tomorrow, the President will be having a press conference to discuss the growing Cartel war that is spilling over into the United States. The Secretary of Homeland Security, Attorney General, FBI Director and other high-ranking officials will be present, and some will give short speeches before the President arrives. That's our chance.\"\n\n\"I have work to do then. I'll get the GPS coordinates off the satellite images, what I need is a good launch point. We'll do it from a vehicle, so a parking garage with an open top floor, a half-mile away or less, would be perfect.\"\n\n\"You handle the tech side, we'll set the trail,\" Ross said. \"All you need is a minivan with the back open, right?\"\n\n\"Yep. These drones can be remotely activated, from there the AI program takes over. Once released, they are done. I'll program them to travel and attack together.\"\n\nRoss and I moved to the other table, working through our list of agents. We broke the logistics down into pieces, making sure no two people saw each other or us. It took us most of the afternoon to give the directions, then Enrique made the bank transfers. \"That should do it,\" he said. \"When the investigation begins, it's going to be huge. Not only will the people we kill be exposed as Cartel agents, but so will the lower level. All the trails will lead back to the Zetas.\"\n\n\"So how do we justify them killing their own guys?\" Ross hadn't been privy to everything, even I didn't know.\n\n\"They were working for the Pacific cartel as well,\" Enrique said. \"They don't know about it, but I simulated private phone text traffic and bank transfers from a Pacific account. I have messages ready to go that will confirm they have taken out the traitors.\"\n\nRoss looked around the room, running the scenarios through his head. \"You're sure nothing gets back to us?\"\n\n\"Yes, all the emails, texts, and transfers are run through a maze of false servers, they won't get back to us. Plus, once they start focusing on the Zetas, they will see that all trails lead to them, they don't need to keep peeling the onion.\" He smiled. \"We're really good at this, it's how we survived the war.\"\n\n\"And as soon as the Zetas are identified as being responsible, the full might of the United States is going to fall on them.\" I smiled a bit. \"And it couldn't happen to a nicer bunch of guys.\"\n\nThe next morning, we had an agent rent a minivan and leave it in a remote parking lot of a park. We drove to a remote road near the park boundary, and I shifted. He put the bag with the programmed drones in a bag, then put it around my neck along with a collar. I looked like a huge dog at a glance, but I was the smallest of the three and closest to the size of a German Shepherd.\n\n\"Remember to get dressed before you approach the van,\" Ross said. \"Enrique will be flying a drone high above to watch for people, but keep your senses forward. Stay well clear of any humans.\" I chuffed, rubbing against his leg, before I took off through the woods.\n\n\"Jogger on trail ahead, stop and let him pass,\" Ross sent to me as I ran through the tall trees. I stopped, taking some time to sniff around on the leaf litter. I loved being in wolf form, I needed to talk to Ross about getting out on runs more often. My wolf was calmer and we were both happier when we had our time in fur. A few minutes later, he cleared me to go and I started running again.\n\nI reached the area near the parking lot, stopped and shifted. The bag had a T-shirt, shorts, and running shoes that I put on, along with a set of rubber gloves. Enrique had carefully cleaned and stored each of the drones to make sure there were no fingerprints, hairs or other evidence that could lead back to us. I couldn't leave anything on the van.\n\nI found the key under the rear wheel well and opened the rear hatch. Taking the soft-sided case out with the drones, I placed it in the back and closed the door again. After replacing the key, I walked into the woods and behind a tree. I put my gloves and clothes into the bag, shifting again I picked it up in my teeth and started to run back. \"On my way,\" I sent.\n\n\"All clear, have a good run,\" Ross replied. They had the door open when I got back to the road, I jumped into the back seat and Enrique drove off. \"Time to put the disguises on,\" he said.\n\nFacial recognition and cameras were in use all over the District of Colombia, so we had to take countermeasures. Some things, like the distance between your eyes, couldn't be faked, but it all worked on finding combinations of things. Enrique and Ross put on beards and dark sunglasses; I put on a wig, floppy hat and a pair of those big-lens sunglasses. The car we were driving had been rented by a dummy corporation, not related to the Cartel.\n\nIt took ninety minutes to drive into the District and park a few miles away from the White House. We stopped outside a coffeehouse with free Internet access so Enrique could use their signal. \"Is this going to be enough?\"\n\nHe smiled. \"All we are doing with this is watching C-SPAN. All the other stuff is automated from back at the Pack House.\" He pulled out a burner cell and attached a voice modification device to it, it would hide his voice from the NSA's recognition software. \"Our agent is already in place and waiting at the parking garage, he thinks we're going to meet up,\" he said.\n\nWe watched C-SPAN as the press conference started. The President was expected to speak at noon, so we verified the time and Enrique called the agent ten minutes prior. \"Frank, get out of the car and open the back hatch,\" he told him. He had hacked into the feed for the parking garage so we could see what he was doing. The man, a mid-level DEA agent who had turned a blind eye to Cartel smuggling routes in Florida, did what he was told. \"Now open the case.\" He did, and he talked about how cute they were. \"On the bottom of each is a small power switch. Take them one at a time, holding them away from the car at head level, and turn them on then let them go.\" A minute later, five drones were hovering in formation before climbing into the sky. \"That's all, return the car to the park and get back in your own car.\"\n\nWe had C-SPAN full screen now, the President had just walked out, his staffers in a line behind him. \"Flight time is two minutes,\" Enrique said, \"So we have another minute. The drones are programmed to work together, they won't attack until each has locked onto their target or two minutes hover time elapses.\"\n\nThe Secret Service agent behind the President was first to notice anything wrong, but he couldn't react fast enough to change anything. Five drones dove into the press conference at full speed, their targeting systems locked on the people they were programmed to attack. In rapid succession, I heard four BANG noises and a thud, and all hell broke loose.\n\nThere were screams, the cameras were panning around looking for the threat, and the Secret Service agents surrounded the President and dragged him back inside. He wasn't moving, his feet were dragging the ground as the men pulled him along. The staffers had scattered along with some of the press, leaving four men on the ground. The Attorney General, Homeland Security Chief, a DEA District Manager and a powerful Senator were quickly identified as the victims, cameras captured the medical personnel working frantically to save them. None were moving, and blood was seen pooling under their heads. \"Sending the messages,\" Enrique said as he sent an innocuous email out to his laptop back at the Pack.\n\n\"Let's get out of here,\" Ross said. We pulled into traffic, heading out of town as Washington DC and the nation went into a panic. "
    ],
    "authorname": "partwolf",
    "tags": [
        "drama",
        "action adventure",
        "battle",
        "action",
        "werewolves",
        "werewolf"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/rose-ch-58-63"
}