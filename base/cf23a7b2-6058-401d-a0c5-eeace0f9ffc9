{
    "title": "The Treehouse Pt. 03",
    "pages": [
        "The Treehouse Part 3\n\nI have felt nervous tension before. Sitting in a heli, all tooled up, minutes out from an LZ. Waiting in the perimeter as dawn came up and not knowing if machine guns and RPG's were going to be flying overhead when light got strong enough to see. Even the tension of a recruit just before a kit inspection. It wasn't as though this was worse...just different.\n\nIt was Friday afternoon and we were all waiting for word from the head shed that we were free for the weekend. Tomorrow night was the Regimental Ball and we all expected to get stood down early. While getting off mid-afternoon is always something to look forward to, it wasn't the source of my nervous energy.\n\nSomewhere, not far from base, Danni had checked in to a hotel. After teasing me a bit, she had told she would love to come to the ball as my date. She had driven up early this afternoon and, by now, should be at her hotel.\n\nI wasn't nervous...really. But this was all new territory for me. Danni had always been part of my hometown world. Sort of compartmentalized from the rest of my life, in more ways than one. It was maybe easier to keep that part of my life separate and...safe. Now parts of my world were blending and it felt a bit strange. I was definitely looking forward to seeing her. Okay, I will admit it: I was excited to see her.\n\nFinally, we heard the phone ring in the office and after a couple of minutes the OC stuck his head out the door and told us to turn the company loose.\n\nAfter a quick shower and change into my civvies, I grabbed a ride with a buddy off base. He dropped me outside the hotel, which was just down the main street about half a mile. I knew which room she was in, so after a wave to reception, headed up the stairs to the first floor. I was definitely feeling nervous as I walked down the hall, searching for her room number, but for the life of me, I wasn't sure why.\n\nFinding the right room at last, near the end of the slightly drab corridor, I gave it a tap.\n\n\"Just a minute,\" A familiar voice called from within.\n\nI stood still, trying not to fidget.\n\nI heard her coming and the light blue door swung open, and there she was: tiny, elfin, red hair, green eyes and a happy smile...my Danni.\n\nI didn't say anything at first, and neither did she. We just looked at each other, perhaps adjusting to seeing each other is such a new context. But a long moment later, Danni just threw herself forward and gave me a tight, warm hug. Her arms went around me and her head dove into my chest. As my arms went around her, a corner of my mind observed what a good fit she was.\n\nAfter long, comfortable hug that seemed to break the tension a bit, she stepped back and looked up at me. She didn't say anything, just looked into my eyes...maybe looking for something. I took the chance to look her over as well. She was wearing a sun dress, as she often did, with bare shoulders. It only came down to mid-thigh, showing off her long, slim legs. On her feet were a comfortable-looking pair of flats. She wasn't wearing much make up, but the soft effect made her all the more lovely. I smiled at the wash of freckles across her cheeks and nose.\n\nIt only lasted a moment, but she seemed to see what she wanted and with another smile, spun away.\n\n\"Let me grab my bag and we can go get something to eat,\" she announced. \"I'm starving!\"\n\nA moment later she was back and closing the door, so we set off. Danni walked happily beside me, her step light and seemingly not a care in the world. She always exuded such quiet contentment that she made me relax just being near her.\n\nAs usual, we didn't say much as we walked. I asked about her drive and she just laughed, saying that, 'she had been here before.'\n\nThe restaurant I took her to was a popular Mexican place. On a Friday, late afternoon, it was starting to get busy, but there were still lots of tables. We sat in the back, next to an open window looking onto a patio in the rear. We probably could have sat outside, but with Danni's fair skin I figured we should keep her in the shade.\n\nSoon we had cold beers in hand and food on the way, so we sat backed to relax and catch up.\n\n\"I'm glad you wanted to come,\" I said with a grin.\n\nDanni, laughed, bright teeth flashing. \"Oh, I enjoyed how our last big dance turned out,\" she said and winked, which made me almost spill the beer I was sipping. So much for my worry that mentioning prom might have put her off when I asked her.\n\nWe chatted for a while, about inconsequential things, as always. She told me about manuscripts she had been editing and I told her funny stories about the past few weeks with the guys in my unit. It was all just relaxed and calm.\n\nAt one point, Danni glanced over my shoulder for a moment. Turning back to me, she nodded across the room.\n\n\"I think someone here knows you,\" she said with a hint of curiosity.\n\nTurning, I felt my breath catch as I saw Karen sitting in another booth across the room. She was sitting across from some guy, civvy by the look of him, and laughing at something he said. I caught Karen glance quickly over at me and then she turned back to her date. Turning back to Danni, I wasn't sure how I should respond. A moment of pressure and I was drawing a blank.\n\nDanni quirked an eyebrow. \"A...friend of yours?\"\n\nI admit, I felt a rising of panic. \"Uhhh...,\" was all I got out.\n\nDanni held that inquisitive look, pinning me to the spot for what felt an eternity, before bursting into pleasant laughter. Leaning back, she sipped her drink and gave me an odd look for a long minute.\n\n\"Dave, it's fine,\" she said with a small smile. \"It isn't like we were married or anything. \"I'm glad you have had some relationships.\"\n\nFor a moment, I sat very still. As a guy you had to be very careful you weren't being led into a cunning trap by a woman, putting you at ease and then waiting for you to admit something incriminating. But after a moment, seeing Danni's pleasure at my turmoil, I laughed. This was Danni after all. She knew me better than I knew myself.\n\n\"It wasn't really a relationship,\" I started and then stopped, suddenly realizing what I was admitting. Danni quirked that eyebrow inquisitively again.\n\n\"Uuuhh...,\" was all I got out once more, not sure what to say next.\n\nDanni, let me stew for another few seconds and then laughed again. \"Don't worry,\" she said, reaching out and taking my hand. I suddenly began to relax, more grateful than I could recall in a while.\n\n\"It's not like I have been sitting at home celibate all these years,\" she said a bit wistfully.\n\nWait, what?\n\nDanni, my Danni...having sex with other guys? I knew even as I thought it, that it was a ridiculous thought. She was a beautiful, healthy woman now...of course she has had sex with other guys. But, somehow, that had just never occurred to me. I know I can be a bit thick, but this one had definitely caught me off guard.\n\nAgain, she could see my mental wheels churning.\n\n\"Dave, I went to college,\" she said, as if that was self-explanatory. \"And it's all your fault anyway,\" she said sitting back with a wicked smile.\n\n\"My fault?\"\n\n\"Of definitely,\" she teased. \"After you showed how much fun I could have with a willing boy, well, what's a girl to do?\" she teased with a laugh.\n\nSuddenly, I began to see a whole new side of Danni. Yes, she was still that best friend I had known forever. Definitely still the amazingly gorgeous woman I had made love to so many times; who had opened my mind to so many new ideas. Still the person in the world I felt most comfortable with. But she was also a woman with her own full life of experiences. Mentally boxing her up in that little, safe world of our hometown was not really fair to her.\n\nComing out of my stupor, I asked, \"Has there been anyone...special?\"\n\nI admit I was a little nervous about how she might answer. Danni sat back and stared out the window for a moment. She suddenly seemed a bit sad.\n\n\"Not really,\" she said, glancing back at me. She suddenly seemed a bit vulnerable, as if a crack in her usual armour of calm had been opened.\n\nSuddenly a new thought struck me. \"No one...hurt you did they?\n\nI know some girls in Danni's situation could face pretty dangerous reactions with guys who didn't understand their...special situation.\n\nBut Danni, shook her head slowly. \"No...not like that,\" knowing what I meant.\n\nI suddenly felt a hot rush at the idea of some asshole hitting Danni or hurting her. I had to choke that down quickly. I had always been protective of Danni, and the idea of someone hitting her started my blood boiling. I didn't want to spoil our evening though, so got a grip on that quickly. With effort, I took a deep breath and waited for her to respond.\n\nDanni looked back at me then, meeting my eyes. \"Not everyone is like you,\" she said with a small smile again.\n\nRelief washed through me, but it was replaced by a bit of sadness.\n\n\"So no one?\" I asked gently.\n\nShe looked back out the window again, and seemed to be considering. After a minute, she began to speak.\n\n\"There is a man, older. I met him because I edit his manuscripts. I have known him a long time. Usually, we only chatted by email or phone, but we met at a conference a few years ago. He is a nice guy,\" she said glancing at me, making sure I understood.\n\n\"One evening, he told me his wife had been in an accident and they...hadn't been intimate in a long time. He seemed so lonely....\" she said wistfully.\n\nListening I could see how this would affect Danni. She was so empathetic with people and I am sure that would have been hard on her. Certainly, Danni always seemed to know what I was feeling and what I needed at any given time. She was an amazingly giving person.\n\n\"Anyway, one thing led to another, and he was okay with...me. So we have been lovers on and off for a few years,\" she said glancing back at me. \"When either of us is feeling a bit lonely, we meet up,\" she shrugged her shoulders.\n\nWe both sat there quietly for a little while, wrapped in our own thoughts. For me, I began to understand more of the life Danni had been living while I was off having adventures. I suddenly felt immensely sad at the loneliness that seemed to be a part of her life. I don't think I ever looked at Danni exactly the same after that. She was now someone...more...than she had been before in my eyes.\n\nAfter a little while, the mood lightened again and Danni reverted to her normal, relaxed, very zen self. We laughed and chatted about our experiences dating over the years. I did squirm a bit when Danni told me about some of the scenes she had tried in college...but I guess that is what people did in college.\n\nMuch later, as the sun set on the horizon in a blaze of reds and pinks, we strolled back to the hotel. As we walked, I reached across and took Danni's hand. She never looked up, just gripped my hand back firmly as we walked along the sidewalk. At the hotel she took my arm and led me up to her room, making sure I knew where I was spending the night.\n\nInside, when the door shut, we kissed. Softly and gently. My arms went around her, pulling her close. Again, it occurred how well we fit together. Although, I was aware that for a good standing kiss, Danni had to get up on her tip-toes to reach my lips. But I actually found that very cute.\n\nPulling away, she slipped into the bathroom and I walked over to the bed. Sitting on the corner, I thought about everything I learned about Danni that evening. I knew it would take a while for it all to settle in my mind, but I was happy she had told me everything, even the bits I found a bit uncomfortable.\n\nAfter a few minutes Danni came out. Her dress was gone and she was wearing just a short chemise and panties that she had had on underneath. She walked over to me and I reached out, pulling her in. My arms went around her and my lips went to her pert little nipples protruding through the thin material of her top. I nuzzled and teased them as I held her and Danni pulled her arms forward so the thin straps slid off her shoulders. The chemise slid down then, revealing her small breasts and she pulled my head to them. I kissed and licked and nibbled those little brown nubs and was happy as they hardened in response to my attentions. My hands slid down to cup her ass; her perfect, round and pert little ass.\n\nI pulled her hips forward, and Danni willingly arched her back. As I nuzzled her breasts, I became aware of her growing member, now straining against her little panties. Glancing down, the tiny cock head poked up, climbing out of the constraints of her undies. I thought it looked so feminine and sexy, and I couldn't resist, bending forward and giving the pink head a soft kiss. Danni shuddered as I did and rose up on tip toes, thrusting her hips forward, body begging for more intimate contact.\n\nThis was something I had never done before with Danni, but she had always been so giving for me, I felt...wanted to do this for her if she enjoyed it. I don't think I was ready for a full-on blow job, but I happily lavished more wet kisses on the head of her petite dick and nuzzled the remainder, still trapped in her panties. Danni's hands were behind my head, not pressuring me, but reassuringly. She stroked my hair as I teased her cock and seemed to revel in the sensation.\n\nBut soon, I wanted more. Standing, I lifted her up and she wrapped her legs around by hips. Her ass cheeks firmly cupped in my hands, she wrapped her arms around my neck and we kissed, long and deep. I marvelled at how light she was...and could have held her like that for a very long time. But turning slowly, I laid her gently on the bed and slid her panties and chemise from her hips and legs, revealing her naked beauty. I shucked out of my own clothes quickly and joined her on the bed. Hands roamed over bodies and lips pressed together.\n\nHer little cock ended up positioned squarely against mine and she started making little thrusting motions with her hips, rubbing our cocks together. Reaching down, she wrapped her hand around both and held them together as her hips continued their small thrusts. God it felt amazing.\n\nAs she worked our cocks, I reached back to those soft globes of her ass and squeezed and kneaded. One finger slid its way to her special place, which I happily discovered she had already applied some lube to. My finger slipped straight in and Danni moaned softly. Pumping my finger in and out, soon synching with the movement of her hips rubbing our cocks together, I was lost in pleasurable sensations.\n\nFinally Danni broke away, \"Oh fuck, I need you in me now!\" she said, pulling me with her as she rolled on to her back, knees spread.\n\nI don't ever recall seeing that level of raw passion in Danni and that pleading need to be taken. But my need was equally strong and quickly positioned myself at her little rosebud. Danni's hands went to my hips and with surprising strength, pulled me forward. I surged down, plunging straight past her sphincter and deep inside. Danni let out a painful gasp as I did, but pulled even harder, trying to get me deeper inside of her, despite the pain at the sudden invasion. Her feet closed on my buttocks, adding their pull, until I was all the way inside; my balls resting against her ass. Then she wrapped her arms tightly around my back and held to me with a fierce intensity. Her breath started coming in quick gasps and spasms started racing across her body as her little cock, trapped tightly between us, began pulsing in a sudden, intense orgasm. I was more than a little shocked she had orgasmed just like that, but definitely wasn't disappointed. More impressed than anything else.\n\nI stayed very still as Danni's breath heaved. Shivers ran through her and her eyes remain screwed tightly shut. Her cum jetted out between our bodies, spreading its warm wetness. I could feel her ass pulse as it tightened around me, squeezing my embedded cock in the most amazing fashion. I had never seen Danni like this, and I was amazed. In fact, I don't think I had ever been with any woman with this level of sexual intensity.\n\nAfter a little while, Danni calmed and opened her eyes. \"Thank you,\" she mouthed almost silently and a tear streamed down her cheek. \"Now make love to me,\" she said with that soft smile.\n\nI did.\n\nI started slowly, just small strokes but Danni was having none of that. She started thrusting back against me, aggressively seeking more of my cock inside her. Our pace and intensity built quickly and soon the bed covers were gone as we writhed across the bed.\n\nI rolled over, pulling Danni on top and she set about riding me with a fierce passion. With each movement downwards, she ground her small hips onto mine, squeezing every last bit of pleasure out of the penetration.\n\nSoon, I was behind Danni, up against the wall, her hands spread wide, back arched fully thrusting her ass out while craning her neck back so her lips could meet mine in breathless kisses. Behind Danni, my hands firmly grasping her hips, I was slamming into her butt with each thrust.\n\nPulling away she spun around and leapt up onto me, her legs going around my waist and arms around my neck. With one hand I cupped her ass, supporting her, and with the other aimed my cock back at her little hole. Feeling it in the right spot, Danni surged down impaling herself once more.\n\nThroughout it all, Danni kept having little, shuddering mini-orgasms. At first, she would still dribble out a small amount of cum with each, but after the first few, most were dry orgasms marked by Danni shivering and gasping as her ass clenched rhythmically around my cock.\n\nFinally, we were back on the bed. Danni was on her stomach, legs trapped tight together between my thighs and her arms pinned above her head by my own. My full weight lay upon her tiny frame and yet she still managed to thrust her hips back against me. We could both feel my orgasm building and my breath started coming in deep, panting gasps. Grunting like an animal, my orgasm washed over me as I filled Danni's battered ass with my seed.\n\nWe lay there gasping. I released her arms and she reached back to hold my head and run her fingers through my sweat-soaked hair. She turned her face towards me and we kissed deeply, tongues intertwining.\n\nEventually, I rolled off and lay beside her, still breathing deeply as if I had just finished a marathon. Danni lay inert beside me, body collapsed into the bed. Her own breath still coming in deep pants. Slowly, we both came down from our sexual high. I slid an arm over and laid a hand on her beautifully curved, but hard-ridden ass. Not so much in a sexual way, but felt I wanted that body contact still. Danni, did the same, snaking a hand across to lay on my bicep. I guess we still need that physical connection even though our baser desires had been sated.\n\nEventually, Danni groaned and sliding slowly to her knees, climbed off the bed and staggered to the bathroom. After a few minutes I heard the shower going and realized how sweat-soaked I was. Rolling out of bed, feeling invigorated and still on a bit of a high, I stretched and headed for the bathroom as well. Joining Danni in the shower, we rinsed our mutual sweat and caked body fluids away.\n\nI climbed out after giving Danni a deep, lingering kiss, holding her slippery body tight in my arms, leaving the shower to her. Towelling off, I went back into the main room and sorted out the bed. The bottom sheet was a soaking, sweaty mess, so I pulled that off and tossed it in the closet. I used the top sheet to recover the mattress and straightened out the blankets. If there was one thing the army taught me, it was how to make a bed.\n\nEventually, I heard the shower shut off and, amidst clouds of steam, Danni emerged from the bathroom wrapped in a large, soft bath towel. I was standing by the window looking out at the city streetlights and she came over to me. Opening her towel, she moved into my arms and wrapped us both up in its soft cocoon.",
        "We didn't talk. We just stood there for a while, holding each other. Eventually, I scooped Danni up and carried her over to the bed. We both climbed under the covers and cuddling up together fell into a deep sleep.\n\nIn the morning, I woke early. A benefit or a curse of army life, depending on your point of view. Slipping out of bed and doing my best not to wake the still slumbering Danni, I dressed and headed down to the hotel restaurant. I grabbed us some toasted bagels and coffees and headed back up. Coming into the room, I found Danni, spread-eagled across the bed on her tummy. Her eyes half opened at my arrival.\n\n\"Coffee?\" she croaked out.\n\n\"Yep,\" I replied cheerily, \"and sustenance!\"\n\nSince Danni was taking up the majority of the bed, I grabbed a pillow and lying it against the bedstand, sat on the floor next to her. Her face was close, so I leaned in for a quick peck on her cheek.\n\nWith a groan, she raised her head and accepted her coffee. Taking a careful sip of the hot beverage, she passed it back to me to set on the side table.\n\n\"I am sooo sore,\" she said in a weak voice.\n\nPutting down my food, I reached over to stroke the tangled red hair away from her face. \"I am sorry Danni,\" I said gently. \"We did go at it pretty hard last night.\"\n\nShe smiled a weak smile.\n\nI finished my bagel and then ran a hot bath for her at her request. When it was ready, Danni slowly made her way into the bathroom. I left her to it. Needing something a bit more substantial for breakfast, I returned to the restaurant and put down a big plate of bacon, eggs and pancakes. Sitting there, stoking the body, my thoughts turned to the past few months. Something was happening here, between me and Danni. Things were getting...more intense? Complicated? Comfortable? Serious? I had no idea. I don't recall ever thinking about this kind of thing ever before.\n\nAs I chewed through my food, I pondered it all. One thing I decided I was clear on: 'Dan' was gone now, just a distant memory for me. Not a bad one in any way, but he was in the past. The woman upstairs was someone else. It was as if she was an entirely different person...unique; and not and extension of some other, earlier incarnation. Danni, was just Danni. That was fine with me.\n\nBut how did I feel about her? The lust part was easily a given...she definitely turned me on massively. Yet, there was no denying that there was more going on here. I felt closer and more comfortable with Danni than any girl I had ever been with. There was a...connection, I guess. She got me...knew me better than I did myself really. A bit scary that...\n\nAll the pondering led me to the final, big question: did it bother me that Danni wasn't actually a girl? That she had a dick...however cute, it was still a dick. I sat chewing, sipping my coffee and thinking about that. I would like to say I had some great epiphany then, but at the end of the day I just decided I didn't care. In every measure I could think of that mattered, Danni was all woman.\n\nThen I realized I had been sitting in the restaurant for over and hour, now surrounded by the empty plates of my breakfast. I paid my bill and headed back up to check on Danni. Knocking gently before opening the door with the room card, I found Danni was sitting at the desk along the wall. She was wrapped in a fluffy towel once more and coaming her shoulder-length red locks in front of the mirror. Turning as I entered, she gave me a warm smile.\n\n\"How are you feeling?\" I asked, going over and kneeling down next to her.\n\nDanni turned and leaned over to give me a small kiss. \"Actually... lovely,\" she replied with a smile.\n\n\"I am sorry if I...hurt you,\" I said nodding to her little butt.\n\nShe put down her brush and turned to me, putting her arms around my neck. \"It is the sweetest pain,\" she said with a gentle grin and a wink.\n\nI laughed and gave a her a hug.\n\n\"So, what's the plan for today?\" I asked, after our hug.\n\nTurning back to the mirror and picking up her brush once more, Danni replied, \"The plan is...you are going to leave me alone to get myself ready.\" She began long brush strokes through her wet hair.\n\n\"All day?\" I asked, a bit incredulous.\n\n\"Uh, huh,\" she replied. \"It took me days to get ready for our Prom. Be grateful this time it will only take one day.\"\n\nI chuckled at that. \"Well, I can't argue with the result back then...and guess I can't now either.\"\n\nTurning to give me a smile, she said, \"Now, off you go. Come back at seven to get me.\"\n\nReluctantly, I gave her a quick kiss and left her to her preparations.\n\nI headed back to base. I figured I should get my dress uniform out and go over it as well, to make sure I was well turned out. That included the time-honoured and universally despised task of shining my dress boots.\n\nThe day passed slowly, but at seven p.m. I was back at Danni's door, dressed in my military finest. Knocking once again, I waited. Inside, I could hear a bit of rustling around and then the door swung open. Danni stood there with a happy smile, looking stunning. Her red hair was tied back with a deep blue ribbon, and then fell in an elegant ponytail down the back. She had little silvery beads in her hair that glittered in the light of the hallway. Her make-up was perfect...not too much, but more than she normally wore. I couldn't see what she was wearing as she had a knee length coat on, but I was already super pleased.\n\nWhile I was momentarily speechless, Danni was not. \"Well, you clean up very well, don't you?\" she teased. Looking me up and down, she took in my stiff black tunic, shiny buttons and the rest of the uniform accoutrements, including a decent-sized rack of medals for someone my age.\n\nI smiled, preening a bit at the compliment. \"And you look...amazing!\"\n\nDanni curtsied slightly, and stepped into the hall, closing the door behind her. We walked down to the lobby where a taxi waited for us and were soon on our way to the hall on base where the ball would take place.\n\nOnce there, we joined a cue of other couples, all turned out in their finest, walking along the red carpet into the hall entrance. The guys all looked similar in our uniforms, but the ladies had gone all out. There were elaborately configured hairstyles, more jewellery than I have ever seen in one place before and every manner of gown, ranging from big and puffy arrangements, to sleek and sexy pencil dresses.\n\nAt the reception area we made our way to the coat check and I helped Danni remove her coat. Beneath she wore a satiny, silver-blue dress that started at a collar around the neck and went down to a slim, tight waist before becoming fuller down to below her knees. The back was completely open, ending in a sharp point aiming squarely at the top of her shapely ass.\n\n\"Lovely,\" I said as I got the full view...but my smile probably had given me away already. Offering Danni my arm, I led her inside.\n\nThe ball was a great success. Danni was beautiful, elegant and charming. She chatted easily with everyone from my best buddies to the commanding officer. She held her own with the other ladies and seemed to fit right in. Unlike Prom, I didn't have to stay glued to her side and when I was talking to the boys, or off getting a drink, she mingled easily.\n\nAt one point, I was standing talking to some friends, and glanced over to where Danni was chatting with some senior officers and their wives. It suddenly occurred to me that her dress was almost an exact match for the material of the nightie she wore after Prom; our first night... together. Thoughts of that night started racing through my head and I became uncomfortably aware of a bulge starting to form in my uniform trousers. It didn't help that the deep 'v' in the back of the dress was an arrow directing my attention straight at that pert, little bottom which curved so perfectly beneath the satiny dress. God, how I loved that ass! With great effort, I changed my line of thought and avoided any embarrassment.\n\nA couple of my buddies were quite taken with Danni and took great pleasure in asking her to dance, which she normally accepted. I watched as she gracefully moved about the dancefloor, laughing and enjoying herself. All in all, it was an amazing night.\n\nMany hours later, we climbed out of the taxi in front of the hotel and made our way back up to Danni's hotel room. Danni was happy, glowing even, and clung comfortably to my arm. For my part I was...happy. Nothing complicated...just truly happy. Life was good.\n\nOnce in the room, I pulled her into a long, lingering kiss. Danni, in her low heels, didn't have to stretch up quite as far as normal to receive that kiss. Without a word, we slowly undressed each other and I was delighted to find Danni had been wearing some very sexy, off-white lingerie beneath the dress. I was also a bit surprised to see that the usual small bulge was missing from the front of her panties. Danni smiled, when she noticed where my gaze was lingering.\n\n\"Don't worry,\" she said with a small laugh, \"it's still there.\" Reaching down inside her panties, she pulled out a small pad that seems to have been holding her little penis back between her legs.\n\nLooking back at me, she laughed again. \"Well, with all those big, hunky guys around and wanting to dance with me, I wouldn't want any...surprises making an appearance!\" she chuckled.\n\nI laughed with her. In a corner of my mind, I was a bit surprised that I found it funny as well; but took it as a sign that I had no more qualms about Danni's status.\n\nSoon we were in bed and wrapped up in each other. It wasn't the frantic lust of the previous night. More calm, intentional, and heartfelt passion. Our hands roamed over each other and we paused in our kissing periodically to gaze in each other's eyes. We made love...I guess that is the best way to describe it. It was long, slow and deep. I was gentle with Danni and while our mutual need was great, I didn't want to hurt her as she had likely just recovered from the previous nights' session. But being deep inside Danni, my cock embedded as far as it could go, was just...fulfilment. We both lasted longer than I would have expected, but in a surprisingly fitting end to the evening, we came together. Me deep inside my girl and hers safe between our entwined bodies.\n\nAfterwards, lying on our sides, noses almost touching and just gazing into each other's eyes, I heard myself say with all true conviction, \"I love you.\"\n\nDanni, staring back into my eyes, face as sweet and angelic as I could ever hope in a woman, nodded and said simply, \"I know.\"\n\n \n"
    ],
    "authorname": "TheSevenSeas",
    "tags": [
        "anal",
        "romantic",
        "transgender"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-treehouse-pt-03"
}