{
    "title": "Telemarketing",
    "pages": [
        "\"Hello?\"\n\n\"May I speak to Mr. or Mrs. Jergens?\"\n\nA telemarketer. Geez, I hate this. They can't even get my name right.\n\n\"What is this about?\"\n\n\"Is this Mr. Jergens?\"\n\n\"No, this is Mr. Jordan. What do you want?\"\n\n\"Mr. Jergens...\"\n\n\"Jordan. Jordan!!\" Ah, who cares?\n\n\"Mr. Jordan, I'm with Southwick Consulting and we're talking to people in your neighborhood about...\"\n\n\"What are you selling?\"\n\n\"I'm not selling anything. I'm merely making a courtesy call to determine...\"\n\n\"Bullshit! Look, I'm sick and tired of you people interrupting my dinner.\"\n\n[Click]\n\nIt's getting impossible to sit down to dinner without ...[Ring] ...Shit!\n\n\"Hello?\"\n\n\"Mr. Jordan? I'm Cindy Baker from American Surveys...\"\n\nOK, that's enough.\n\n\"Hey, baby. What are you wearing?\"\n\n\"What!?\"\n\n\"I said, what are you wearing?\"\n\n[Click]\n\nHeh heh. That was fast. I'll have to remember that one.\n\n[Ring]\n\n\"Hello?\"\n\n\"I should report you. I didn't call to hear obscenities.\"\n\n\"And I didn't answer to get a sales pitch. We're even.\"\n\n[Click]\n\n[Ring] \n\nI should just let it ring...no, I can't. Damn why didn't I get Caller ID?\n\n\"Hello?\"\n\n\"Who do you think you are? This job is tough enough.\"\n\n\"Get another job that doesn't involve interrupting my dinner. Are you wearing a bra?\"\n\n\"You're a jerk!\"\n\n[Click]\n\nMaybe she's right. But right now, I'm just hungry... [Ring]...not again...\n\n\"Hello?\"\n\n\"I just think you could be more courteous...\"\n\n\"OK, how about this? PLEASE tell me what color your panties are.\"\n\n\"Damn you!\"\n\n[Click]\n\nI probably should just go out to dinner...[Ring]...here we go again.\n\n\"Hello?\"\n\n\"They're blue.\"\n\n\"What?\"\n\n\"My panties...they're blue.\"\n\n[Click]\n\nUh oh...didn't expect that.\n\n[Ring]\n\n\"Hello?\"\n\n\"Uh...it's me, Cindy. \n\n\"Cindy who?\"\n\n\"Cindy from yesterday. Blue panties, remember? I...I don't know what to say or what to do...\"\n\n\"What do you mean?\"\n\n\"I mean I never had an obscene phone call before.\"\n\n\"Oh...well I never made one before, but let's try. Now don't freak...what are you wearing today?\"\n\n\"OK, I'm wearing pink. Pink panties and a matching bra.\"\n\n\"That's promising. Uh...why don't you trace the bra with your fingers and describe what you find.\"\n\n\"OK...no, I can't do this.\"\n\n[Click]\n\nWhat the hell. At least she's not trying to sell me something.\n\n[Ring]\n\n\"Hello?\"\n\n\"I'm wearing a pink bra. It hooks in the front. I'll unhook it. My breasts fall a little to the side. When I look down, I can see my nipples peeking out. \n\n\"Jesus, Cindy...that was...\"\n\n\"Was that OK? OH God, now I'm embarrassed.\"\n\n[Click]\n\n[Ring]\n\n\"Hello?\" God I hope it's...\n\n\"I was too embarrassed to go on last night. I'm sorry I hung up on you.\"\n\n\"That's OK. It was great. I thought about you all night. What are you wearing tonight?\"\n\n\"Red panties. And heels.\"\n\n\"That's all?\"\n\n\"And a smile.\"\n\n\"Me too. Big smile.\"\n\n\"I bought the red panties for you. They're cut high on the sides and very sheer. I can see my dark hair through them especially since they're getting a little wet.\"\n\n\"More...\"\n\n\"When I touch myself, the fabric is so silky it's like I'm not wearing anything.\n\n\"Oh God...\"\n\n\"They're very damp now...soaked actually. I wish you could see how excited I am...maybe later.\"\n\n[Click]\n\nNO WAIT! Damn. \n\n[Ring]\n\n\"Hello, this is Rick. Wait for the beep. You know the drill.\"\n\n\"It's me, Cindy. I was going to do more for you. I bought another outfit? Where are you? Call me.\"\n\n[Click]\n\nRats! I missed her and I don't have her number. Oh well. She's into this now. She'll call back.\n\n[Ring]\n\n\"Hello?\n\n\"I called earlier. Where were you?\"\n\n\"I went out to dinner.\"\n\n\"Really? You never take me anywhere.\"\n\n\"Well, we've never met. We've only had a little phone sex.\"\n\n\"I knew it. You're just interested in the sex.\"\n\n[Click]\n\nWhat the hell was that about?\n\n[Ring]\n\n\"Hello?\"\n\n\"I left you another message last night. I figured you'd be out again as usual. You're avoiding me, aren't you?\"\n\n\"Look...don't call me anymore. It was fun. Now it's not.\"\n\n\"You're still very rude. It's no wonder you're alone.\"\n\n\"I'm not alone. I have a girlfriend.\"\n\n\"I knew you were cheating on me. It's just like you.\"\n\n\"I'm not cheating on you. I don't even know you.\"\n\n\"Don't call me ever again.\"\n\n\"I don't have your number!\"\n\n\"You have an answer for everything.\"\n\n[Click]\n\nThat's the last time I date a telemarketer. Jesus, we never dated...now she has me doing it. I'll fix this...\n\n\"Pacific Bell, this is Arlene. May I help you?\"\n\n\"Yes, I need to change my telephone number.\n\n\"I can help you with that.\"\n\nIt took minutes to fix a weird week. \n\n\"Anything else I can do for you, Mr. Jordan?\"\n\n\"Yeah, I was wondering what color...uh...never mind...thanks.\"\n\n[Click] "
    ],
    "authorname": "rjordan",
    "tags": [
        "panties",
        "phone sex"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/telemarketing"
}