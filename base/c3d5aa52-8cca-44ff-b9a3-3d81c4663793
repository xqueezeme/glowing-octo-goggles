{
    "title": "Lucille Nailed It Ch. 11 - Final",
    "pages": [
        "In the lounge at the Kirby-Jones Events Center in Sydney, Lucille heard someone calling, \"Miss Lightfoot \u2013 Miss Lightfoot.\" Her mind jolted to the present and she focused on the reason for being there. \n\n\"Yes.\"\n\n\"You're second up when we resume after this break,\" said one of the coordinators.\" You haven't far to walk. Are you well \u2013 you appear to have been asleep?\"\n\n\"No young woman. I've allowed l my mind to drift and review some of the things that have brought me to this point. How long have I been allocated to speak?\"\n\n\"Three minutes.\"\n\n\"I'm sorry, that's not enough; I need at least five minutes.\"\n\n\"I regret Miss Lightfoot but that's not possible. This show is being televised and is running to a tight schedule as dictated by our commercial sponsors. You were hand-delivered the schedule that gave your speaking time.\"\n\n\"Damn commercial sponsors and damn schedules,\" Lucille snorted. \"Its five minutes or I'm not going on.\"\n\n\"I'll be right back,\" said the pretty coordinator, suddenly turning white. \n\nShe returned back the director of the event and her co-presenter.\n\n\"Good gracious Lucille,\" urged the co-presenter, \"Please allow us to adhere to our schedule.\"\n\n\"Who follows me Michelle?\"\n\n\"Philip Gadsby to be awarded for his thirty-five years of excellence in reporting on national politics on television.\"\n\n\"Philip's a jerk and will be drunk. Tell him diplomatically that his three minutes has been cut to one minute.\"\n\n\"You are the only person with three minutes Lucille. Mr Gadsby has two minutes like all other principal recipients.\"\n\n\"Then tell him to say 'Thank you' and walk off holding his golden whatever over his head. He'll be so grateful at not being given the opportunity of disgracing himself in front of family and friends \u2013 and the nation.\"\n\n\"Do you think so?\"\n\n\"I know so Michelle.\"\n\nThe director Alex Dodds intervened. \n\n\"That's not fair practice Miss Lightfoot; you are attempting to deny a fellow professional of his rights.\"\n\n\"Well, well Mr Dodds. Then you come up with a better solution. I'm taking a full five minutes and if there's any attempt to shut me down at the end of three minutes I'll create. For god's sake this is television, national television, not a sponsor's plaything. It's time you guys ran your own show.\"\n\n\"Thank you Miss Lightfoot. We will seek a time extension of two minutes from the studio.\"\n\n\"If they refuse suggest they cut out the sponsor's message.\"\n\nMr Dodds and Miss Joyce, both looking aghast, hurried off.\n\nDigger re-joined Lucille and asked, \"Has anyone ever called you an asshole?\" \n\n\"Only that grin saved you from head surgery after being hit with this champagne bottle,\" Lucille said, smiling thinly.\n\nOne of the big announcements came immediately after the break.\n\n\"Magazine of the Year,\" Alex Dodds said, stepping in for one of the co-presenters who was too upset to continue. \n\nAfter another drum roll he said, \"Will the principal personnel of FashionUP come to the stage, once again winner of this premier award in its illustrious short history of publication.\"\n\nSue lead her editorial team on stage and Chrissie led the management and production team to line up behind them.\n\n\"It's stunning, isn't it,\" said Michelle Joyce, as images of front covers and picture-spreads from selected issues of FashionUP appeared on the big screen behind her.\n\nSue accepted the award and handed it to Mo who passed it on to Chrissie.\n\nSue said, \"Thank you the Media Awards organizers and your sponsors. I thank our team and thank you everyone who buys our magazine and renews their subscription regularly and those precious advertisers who support us so well.\" \n\n\"A few of us have been with FashionUP since it was founded. In the 28 years that our present publisher, Miss Lucille Lightfoot has owned the magazine it has gone for strength to strength. This is the seventh time in those 28 years we have won this supreme award, a very proud record for us.\"\n\n\"We try to bring Lucille on stage with us but she always refuses, saying the ones who do the work go on stage not the one who only bankrolls the operation and provides a little inspiration. A little inspiration \u2013 if only you folk really knew. Congratulations team, and get us back onstage again next year. Thank you.\"\n\nDigger sniffed. \n\n\"To think that woman we almost fired 28 years ago for incompetence when all she needed was a leg up. Every so often along comes someone who can make a significant difference and in our case that person was you Lucille.\"\n\n\"Shut up Digger, you'll be making me nervous,\" Lucille snapped.\n\n\"I saw Bob Monk in the men's room,\" Digger grinned. \"He's now stuck with his New York company chairman's ex-wife who's almost ten years older than him and has him under her thumb. He asked me to say hello and he's looking forward to your presentation as being the highlight of the evening.\" \n\nHe was answered with a smile and wink.\n\n\"We now present a special major award of this evening in the magazine section,\" announced Michelle Joyce. \"It's being presented to the Magazine Publisher of the Decade. Miss Lucille Lightfoot please come to the stage.\"\n\nLucille went to the stage quickly and thanked the media awards organization for honoring her. She thanked the sponsors by name and to the people of Australia who purchased her magazine. She then launched into it.\n\n\"Will my dear friend Maria Lombardi please stand.\"\n\nMaria on a table just in front of the rostrum stood and had a new diamond clip in her white hair.\n\n\"Everyone, this woman probably saved me from a life of hell. Maria is 71 now but as a young married and struggling woman in New York, she came across me \u2013 a street waif, aged fifteen, recently discharged from an orphanage. She took me into her home and she and husband Enzio treated me as family, allowing me to work in their restaurant and adding to my dignity by calling me the head waitress \u2013 I was the only waitress. They paid for my singing lessons and guitar lessons. Thank you \u2013 thank you from my heart Maria. Please rejoin Enzio.\"\n\n\"A lady walked into our restaurant in New York one evening, unable to be accommodated in her first choice of restaurant. She saw the dress I was wearing, fingered it and asked who'd made it. I said I did. She asked me where had I copied the design from and I said nowhere, it came from my head. To keep a long story short the late Winslet Graham took me under her wing as her prot\u00e9g\u00e9, teaching me everything she knew, taking me with her to the fashion centers of the world and eventually making me general manager of her factories which, at their peak, employed 350 people.\"\n\n\"Maria saved my life, Mrs Graham gave me direction in life and I left her employ, aged 30, and came to Australia for a holiday, fell upon a publishing family who happened to have a failing Fashion magazine called FashionUp. I thought I might have the vision and experience to help save it and talked my way into the job. Please stand Debbie Monk.\"\n\n\"Debbie pressed her husband to give me that job. Please stand Andrew Monk. Please stand Mo Davis, my long-time business partner until selling out to me last month. Please stand Digger Morrissey who is Mo's brother. Andrew, Mo and Digger had their backs to the wall but being Australians they decided to give me a go and went to the bank for more money \u2013 and it worked. They almost died on that first day with them when I admitted I'd written for magazines but had never worked for one. Shortly after starting I asked them to send me to America and Mo accompanied me. You can imagine what test that put on the hearts of those three directors.\"\n\n\"Please stand Ashleigh Avon. Ashleigh is a household name in Australia. She saw something in me that she liked and agreed to help fund our trip to New York and accompanied us with samples of her beachwear and already famous outback wear. Mo, Ashleigh and I looked great in those days and we put on a fashion show for the staff of my targeted company \u2013 a big fashion magazine.\"\n\n\"They American big-wigs thought we were great and agreed to my outlandish request to exchange pages between our two magazines \u2013 originally eight pages, today it is consistently twenty-four so readers of our respective magazines get big impact fashion picture spreads from Australia and America for the price of one magazine. Who would be willing to agree to that today? You'd be ass-kicked out the door.\"\n\nAfter talking about the magazine market as it was in the late 1970s and comparing it with today, Lucille continued.\n\n\"Please stand Mrs Chrissie Morrissey. Chrissie has long managed my group of companies. As a young art student she stuck by me and finally withdrew from my head fashion design concepts that until then I had never been successful in getting on to paper. I'll immodestly say that those designs created by me and produced into sketches by Chrissie for some years until my output dried up made us quite famous in fashion circles. I encouraged Digger Morrissey to marry Chrissie. They occasionally had come into close contact \u2013 actually as close as you can get \u2013 but after a failed marriage under awful circumstances Digger was too hurt to try again and yet Chrissie had told me she loved him. So I did some pushing. They are still together and are very happy.\"\n\n\"I had a child out of wedlock who died after clinging to life for ten days despite a faulty heart and that birthing left me unable to have another child. But I suppose in recognition of how I'd brought them together Digger and Chrissie have named me godmother of each of their three children.\"\n\n\"And there it is \u2013 I came to Australia and found a career and despite my awful start to life I kept falling against some wonderful people who have helped make me what I am. I decided to retain joint American citizenship but spiritually regard myself as substantially Australian as this country has been immensely kind to me. Well, that is my story. Thank you.\"\n\nThat speech had dragged on, leaving the director and his co-presenters looking like nervous wrecks, drew a prolonged standing ovation which sucked up more time. \n\nLucille returned to the microphone, hushing the crowd. \n\n\"I've selfishly gobbled up more than my fair share of time. So you guys coming up here please accept my apologies and make it short and snappy. Let's have a little bit of professionalism and help our fine presenters run to time huh!\" \n\nThe nationally televised awards presentation ended exactly on schedule. At Lucille's request Chrissie purchased two bottles of champagne for each of the five recipients who'd followed Lucille and two for each of the presenters including the young coordinator who Lucille had roughed up. \n\n\"Tell them I'm not always hard-nosed,\" Lucille called to Chrissie. \n\nShe then bought champagne for their table and asked Digger to fetch the Lombardi's up to her table and squeeze them in beside her.\n\n* * *\n\nAfter Maria and the now arthritic Enzio, soon to turn eighty, were in bed in the loft apartment, Lucille looked at her company's award as magazine publisher of the decade \u2013 in this instance she really meant her rather than the company. \n\nAlthough the string of magazines are produced by a team \u2013 at the latest count being eighty-one people \u2013 she continued as the driving force with FashionUP which still easily shone as the flagship of output from MagWorld.\n\nLucille examined the bronze replica of an open book held on a thin brass column attached to a weighted brass stand. A piece of junk really \u2013 except to her. For the last thirty years publishing had been her life, the rewards had been numerous, the disappointments few.\n\nAmid the milestones had been the death of her infant daughter. That was so tragic but at least as Atlanta grew within her it made Lucille feel whole, complete. \n\nThe heart defect \u2013 more or less an under-development \u2013 had been detected before birth and the consensus was Atlanta would either die before or at birth but those medical persons hadn't counted on the underweight little darling having the fighting spirit of her mother. \n\nEach day, each night had been a nightmare for Lucille, expecting Atlanta to go at any minute and finally, just after midnight on the tenth day of life Atlanta gave a little cry and stiffened. A night nurse finding the two locked together during her hourly check recorded details on the chart and called her supervisor for conformation. \n\nThe two nurses made no attempt to take Atlanta until at 5.45, shortly before ending their shift, when they arrived with a porter wheeling a trolley. They stood silently, waiting. Lucille kissed Atlanta for the final time and then gave her up.\n\nLucille felt terrible, absolutely exhausted. She knew she'd lost weight, her skin looked yellow and her eyes were sunken. This was the huge low in her life \u2013 far bigger even when learning the loss of her parents because at that young age she really wasn't aware of what that meant and bigger than the grief she felt upon learning that Mrs Winslet Graham had passed away.\n\nThat nondescript nurse with mousy hair who'd found Atlanta had passed on returned when she finished duty to find Lucille staring at the ceiling. That young woman had a heart of gold, Lucille recalled.\n\nThe nurse sat on the bed \u2013 a real no-no for nursing staff \u2013 and took Lucille's upper body into her arms began stroking Lucille's hair and cheek. Lucille remembers that moment as if it occurred only a few days ago. She'd been lying stiffly, barely blinking, her eyes dry, her mouth parched and her heart heavy.\n\n\"Cry for me Lucille.\"\n\nThe request registered, dully.\n\nThere was a long pause then the nurse \u2013 Lucille remembers as Elizabeth Harper \u2013 said something else and that brought the tears: \"Lucille, cry for Atlanta.\"\n\nShe began to weep and for a moment that turned to wailing and that was it. \n\nShe slept all day and awoke during the night, dressed and against the protests of hospital night management, signed out. The irate facility manager called a taxi and Lucille returned to her loft, climbing the stairs and resolving to get that planned elevator installed.\n\nAfter the morning funeral Lucille returned to work and thereafter thought little more of her poor darling. \n\nGrief still remained foreign to her. Mo and particularly Ashleigh Avon knew this and one or the other remained close to Lucille for the next two days and nights. Then Lucille left with Ashleigh for a few days in Honolulu.\n\nOn the second day in their hotel at breakfast, overlooking the beach at Waikiki, Ashleigh asked: \"Would you rather stay here or come with me to the other side of the island to look at a property.\"\n\n\"A property?\"\n\n\"Yes, I'm thinking about it as an investment. Things are only ticking along between me and Martin so once the children leave home I rather think I'll be leaving the nest as well.\"\n\n\"But you two...\"\n\n\"Lucille he's found someone else.\"\n\nAs they traveled across the island to the coast Lucille began pointing out landmarks.\n\n\"You've been here before?\" asked the astonished Ashleigh, or have you been studying the map?\"\n\n\"Oh I came here many times. The Grahams always escaped the winter in New York and after Mr Graham's death Mrs Graham brought me here with her \u2013 exactly for ten weeks, always flying out on the same date each year, always returning to New York on the same date. Mrs Graham operated like a clock. I'm also familiar with some of the other islands.\"\n\n\"Then you choose what we do and where we go; you be our guide.\"\n\n\"Okay if that's what you wish. But should we not get this property inspection over. It's got you so uptight.\"\n\n\"I'm a little nervous because the asking price is huge. It will mean taking out a big loan and I'm rather stretched financially at the moment in relocating to my new factory and design complex.\"\n\n\"I'm prepared to loan you money; you won't have to go to the bank and it will be interest free.\"\n\n\"Darling, not the amount of money I'm talking about.\"\n\nAs they drove through the opened iron gates rusting on their hinges, the excited Ashleigh turned to say something and stopped: Lucille's face had turned white.\n\n\"What, what is it?\"\n\nLucille, without changing expression, intoned: \"This is Atlanta Estates spreading over four acres with three houses and a derelict shack right on the private beach. Income from the two rentable houses provides sufficient profit to cover all outgoings on the property. Asking price will be US$4 million.\"\n\nSmiling at the stupid look on her friend's face, Lucille said: \"This was Mrs Graham's winter retreat. You have brought me almost full circle.\"\n\n\"I can't believe this,\" Ashleigh gasped. \"As a coincidence, the chances of this happening are incredibly huge.\"\n\n\"Changes happen against all odds; you know that.\"\n\n\"Well...anyway you're wrong about the asking price \u2013 it's $5.8 million.\"\n\n\"That's pie in the sky thinking. How long has it been on the market?\"\n\n\"Just over a year.\"\n\n\"There you go. Buyers in this price bracket want to go to where other rich folk go, on the popular stretches where they can be seen and impress when being asked where they live. People who want the opposite to that buy a retreat like this and there're no so many people like that. Offer the sellers $3.7 and accept their second counter offer of $4.2 million.\"\n\nAshleigh stopped the rental sports car. \"How can you know that? Oh yeah, you know Hawaii. But darling even four mil madness for me at the moment and besides, they'll just laugh at me offering $3.7.\"\n\n\"Ashleigh, your expertise is fashion as is mine but I've also added a sound business brain to my personal arsenal. And as you know I 'see' things. This estate is run down; the three houses will all require expensive maintenance \u2013 those gates at the entrance tell the story.\"\n\n\"That's what you saw, you mean.\"\n\n\"Dampness is the problem in all three houses. All require replacement roofing.\"\n\n\"Oh come on, let's get this over. We should be back on the beach in our bikinis looking at the sexy men strutting their stuff.\"\n\n\"Oh really, I thought your preference was women.\"\n\nAshleigh laughed and called Lucille a cheeky bitch.\n\nLucille asked, \"Did Angus McKeon ever bed you?\"\n\n\"No but he made several determined efforts. He was too old for me and lacked the features I desired. Without his money he would have been nothing. Some stupid bitch gave him my private line number.\"\n\n\"I apologize for doing that. I thought a rumble in bed might produce some new business opportunities for you \u2013 he invests in things other than the media. He could easily set you up in a joint venture, ensuring you remain close when he feels it's your turn to be screwed.\"\n\n\"What, in business or the flesh,\" Ashleigh laughed then looked at Lucille thoughtfully.\n\n\"What? I'm not having sex with you, at least not in this toy car and in the open.\"\n\n\"Buy this property with me as a joint venture.\"\n\n\"Okay.\"\n\n\"What? Don't you have questions...require assurances as big money is involved?\"\n\n\"No I was just waiting for the invitation I knew would come. Let's get on with it and get back to looking at those sexy men and women on the beach. All that I ask is that you allow me to conduct the negotiations, alone, to allow me to bring that sale and purchase agreement to sign at $4.2 million which is the figure the sellers will cave in at.\"\n\n\"How do you know that?\"\n\n\"I just know. Let's go.\"\n\nThe inspection took almost two hours.\n\n\"God, the potential is great. It's a pity about the dampness,\" Ashleigh said. \"But as you said, new roofing and reinstatement and we'll be on cloud nine. The funny thing is I wasn't aware it rained in Hawaii but of course you can't have this tropical greenness without plenty of rain.\"\n\nLucille took her friend by the arm as they strolled to the beach. \n\n\"It's the power and influence of advertising huh? Have you ever seen an ad of Hawaii pictured during a rain downpour?\"",
        "\"No and have you ever seen an advertised Ashleigh Avon garment with crooked seams or failed stitching,\" Ashleigh giggled. \"Now to the derelict shack.\"\n\n\"Oh it's been upgraded since my times here.\"\n\n\"How do you know that?\"\n\n\"You saw those wall posters in some of the rooms in the houses.\"\n\n\"Yes posters of guys with massively wide chests and tans to die for surfing and babes with equally large chests and so what about it.\"\n\n\"This property borders a bay with what I understand is called a consistent point break lefthander over a sandy bottom. That means something to surfies and their wealthy parents staying here would have upgraded rich dad and mom would have upgraded the shack in keeping with their life-style.\"\n\n\"Oh look,\" Ashleigh cried. \"There it is and doesn't it look cute. My kids will love coming here with friends...but they better pick friends of rich parents because I'm not paying for free-loaders.\"\n\nOn the flight home Lucille and Ashleigh lay, heads together in perfect relaxation induced by martinis \u2013 several of them.\n\n\"This had been a rather expensive holiday break, sorry about that,\" Ashleigh sighed. \"I still can't believe you got Atlanta Estate for $4.2. You denied sleeping with the realty agent so what did you do, squeeze his nuts till he capitulated?\"\n\n\"I told you dummy. I threw our final offer at four-two on the table in front of the sellers and said, \"Take it or leave it; if you reject offer be prepared to wait another year for an offer. This way at least you can boast you got over four million for a property you paid $2.7 eight years ago. Won't that impress your friends in Chicago?\"\n\n\"Yes, go on. But what make his wife cave in?\"\n\n\"She whispered something to him; I'm sure it was 'Take it or I'll crack your nuts.\"\n\nThe two great friends giggled, hands over mouths, not wishing to wake sleeping passengers.\n\nAs the aircraft arrived over Sydney, preparing for its final descent, Lucille suggested they should appoint a professional agent to handle holiday packages to Atlanta Estate as soon as the renovations were completed.\n\nAshleigh said, \"There's sleeping accommodation for up to sixteen people in complete luxury with provision for a live-in housemaid and cook at the Great House. If we set this up correctly and replace that toady swimming pool with a big one and spa center we could offer the package at US5000 a night \u2013 allowing for plenty of days between occupancies but would not cover our investment and outgoings.\"\n\nLucille said but that wasn't the point; the purpose was to hold the property so it was there for their use as required. With the world's rich listers growing, that property was property be worth $30 to $40 million within ten years.\n\nAs the aircraft taxied to the terminal, Ashleigh said that she hoped one day Atlanta would become their permanent home.\n\n\"That's a lovely thought, darling.\"\n\n\"Don't cry Lucille when I say this, but if this conforms to your thinking I'd help you have baby Atlanta reburied at Atlanta Estate \u2013 that is, if the authorities allow it.\"\n\n\"That's sweet of you but baby Atlanta is no longer part of my life; I never weep for her. Not long after her demise I felt my feeling for her leave me. For me, the past has always belonged to the past. Even so, I shall treasure that thought you expressed for the rest of my life. Don't cry Ashleigh \u2013 come on, they are only words. Oh you poor darling be happy; here, let me hug you.\"\n\nMartin finally left Ashleigh who despite her resolve to cope rather lost it for a few weeks. Mo and Lucille helped to pull her through. Just as she began thinking of selling out of her business interests Martin slunk home, having being dumped and seeking forgiveness. Ashleigh relented because the three children voted he be allowed to return home. \n\nThey slept in separate bedrooms but Martin gradually broke through her resistance and they resumed life as husband and wife.\n\nLucille had watched this with interest, believing absolutely that she would have taken the skunk by the throat and tossed him down the driveway from that moment when he first re-appeared. Her fascination grew in observing Ashleigh gradually returning to her old self.\n\n* * *\n\nTwo months after the awards evening Ashleigh came bursting into Lucille's office, the PA looking helpless and saying, \"I'm sorry, Miss Lightfoot. I was unable to stop her without becoming physical.\"\n\n\"That's fine Rita. Close the door and bring us a pot of strong coffee; then I must not be disturbed until I call you.\"\n\nAshleigh wept on Lucille's shoulder. Although in her fifties she still had the features of a beauty, albeit now a faded beauty.\n\n\"Has he gone again?\"\n\nAshleigh's body shook with new sobs as she nodded.\n\nRita knocked and entered with the coffee, poured two cups and indicated with hands and facial expression was there anything she could do. Lucille mouthed 'No'.\n\nAfter Lucille managed to calm Ashleigh and coax her to drink some coffee, she said, \"Right Ashleigh, try not to let this upset you more than you are now. But that's the third time that bastard has done this to you and in my book it's time to say, Martin, it's three strikes and you've gone; finito. Call your lawyer now.\"\n\n\"No please.\"\n\n\"No nothing sweetie; hand me your phone.\"\n\n\"But...\"\n\n\"The phone please Ashleigh; don't make me get tough with you.\"\n\nLucille found the speed-dial for Laura and handed Ashleigh back her phone. \"Tell Laura you are ending your marriage and have authorized me to speak to her on your behalf.\"\n\n\"Hi Laura \u2013 we both know what a bastard that man has been to Ashleigh over the years. Well, here's what Ashleigh wants \u2013 Dissolution of the marriage \u2013 you know the grounds. We want you to set up immediate negotiations for the split of marital assets. Then Ashleigh wants you to appoint someone to find a buyer or buyers of her business assets which years ago Ashleigh's father was clever enough to persuade her to exclude from the upcoming marriage in a pre-nuptial arrangement. If necessary Ashleigh will be prepared to remain available to the buyers, for a fee, as an external consultant for up to two years.\"\n\n\"External?\"\n\n\"Yes, Laura. We've both selling up and going to our Eden called Atlanta in Hawaii to live.\"\n\n\"Oh my dream. You know my extended family have holidayed there three times. We just adore it.\"\n\n\"Well we haven't talked about living arrangements yet, but we'll keep part of the exotic holiday destination going to share in the company of people; we'll have no wish to become recluses. I'm handing you back to Ashleigh to confirm my instructions made on her behalf. She'll be staying with me for a few days until she bounces back.\"\n\nGraham Inspired Holdings Limited and several much smaller companies was sold subject to legalities being complete in the time it took Chrissie Morrissey to phone her stepmother Geneva, who managed the family trust on behalf of her husband, now in a nursing home with a perpetual vacant stare on his face and unable to recognize even Geneva or Chrissie though he liked holding their hands.\n\n\"How much?\" Chrissie had asked before making that call.\n\n\"At book value plus fifteen percent because you're family.\"\n\n\"But the asset is worth double book value on the open market.\"\n\n\"Does it matter Chrissie? I'd suggest you think about orchestrating a merger with the public company your father founded; public companies pay really big money for acquisitions.\"\n\nChrissie returned to the phone and after a moment said, \"Mum says yes, we'll sell shares. She suggests half payable on settlement in say six weeks and the other half on June 30 next year.\"\n\n\"Agreed.\"\n\n\"She's agreed mum. Thanks a million. Bye.\"\n\nLucille smiled. \"So Geneva is 'mum' now; when did that happen?\" \n\n\"Slowly, I guess. With me working she was so good to me when the kids were sick or on school holidays. Socially I still call her Geneva but when we are intimate, like just now, the 'mum' just slips out, exacerbated when dad had that stroke and again when the fight went out of him and he allowed himself to be admitted for 24-hour care. It's been difficult for mum but she's coping and there's still so much life in her.\"\n\n\"Then put her to work.\"\n\n\"What, mum?\"\n\n\"Yes mum. You told me years ago she has qualifications in accountancy and we know she has a sweet personality. Promote Eva and put Geneva into manage client liaison and bad debt collection. Then when she feels right for more responsibility, promote her. I picture her becoming general manager before too long.\"\n\nChrissie looked doubtful. \n\n\"I know you usually are right but mum would be working for people whose earnings for the week would be what she spends weekly on makeup and entertainment.\"\n\n\"Possibly but who cares? I suspect she won't; she's currently in a hole having a hell of a life. Oh my \u2013 you're scared to ask her aren't you? You've just done a multi-million dollar deal without blinking and yet you can't dare ask your mother to come and work for you.\"\n\n\"Toughen up, Chrissie \u2013 soon you'll not have me for backup.\"\n\n\"Well, what do I say to her?\"\n\n\"Here's the phone \u2013 call her and talk. Allow your brain to take over.\"\n\nChrissie was straight into it.\n\n\"Hi mum, would you like to come to work for me?\"\n\n\"Yes dear and thanks for asking; I'm thrilled.\"\n\n\"Yes? But I haven't made you an offer yet.\"\n\n\"Who cares?\"\n\n\"What do you mean who cares...and where did you get that dismissive retort from? The only person I know who talks like that is... Mum when did Lucille last talk to you? I'm just a puppet, aren't I? This purchase deal was done before I picked up the phone, wasn't it?\"\n\n\"Chrissie you're hallucinating.\" \n\nWhat do you mean I'm hallucinating? Right and bye mum.\"\n\nChrissie turned, looking ready for scrap.\n\n\"Cool it sweetie \u2013 having a row brings no one satisfaction.\"\n\n\"When did you last talk to my mother; she refused to tell me?\"\n\n\"Last night at the ballet and then we went to dinner. We had such a beautiful time. I told her I was selling up and heading off to retirement in Hawaii. She asked how much did I want for the business, I asked why and she said it would be a lovely present for you because you've been rather down since your father became ill.\"\n\n\"A present \u2013 she said a present?\"\n\n\"Yes but I talked her out of it and suggested the holding company be purchased through the family trust and then you'd feel you were buying your stake jointly. I told her you had an uptight streak in you that wouldn't permit you to accept an entire group of companies as a present. I then suggested when the deal is done she should go and work for you and Geneva said what would the other workers think with Mrs High Society working beside them. I said who cares, she laughed and said who cares and we kissed, deal done.\"\n\nChrissie looked at Lucille coldly. \n\n\"Then why put me through that purchasing charade?\"\n\n\"I did that for the satisfaction of seeing your face when working on a multi-million dollar deal without me behind you.\"\n\n\"And?\"\n\n\"You did well \u2013 but you didn't spring a lower counter-offer.\"\n\n\"That's because your price was exceedingly generous.\"\n\n\"Chrissie remember this for the rest of your financially negotiating life: no asking price is too low whereas the buying price can be too high.\"\n\n\"Would you have dropped your price?\"\n\n\"Perhaps but I was disappointed I wasn't tested.\"\n\nChrissie smiled faintly. \n\n\"Never again will I be that incompetent in negotiations; I promise you that. What about my reluctance to make an offer to my mother?\"\n\n\"Who cares? But you learned that even she can surprise by saying yes; that silly fear of engaging Geneva in business negotiations now lies behind you. Ask me Chrissie.\"\n\n\"Ask you what?\"\n\n\"It doesn't matter. I'm off to help find a buyer for Ashleigh's business interests.\"\n\n\"Lucille would you join our board as a director for a two-year term, attending three quarterly meetings and the combined December quarterly/annual meeting as well as being on tap as a consultant which can be worked via email.\"\n\n\"Thank God for that. Yes of course. I hope Geneva didn't prompt you to ask me that?\"\n\n\"She mentioned it but I'd already decided to make the invitation.\"\n\n\"Good girl; a sound business decision.\"\n\n\"No worries Lucille.\"\n\n\"What on earth does that mean?\"\n\n\"It's the modern version of who cares.\"\n\n* * *\n\n\"You've done what!\" Ashleigh screamed.\n\n\"Have you gone deaf? I said I've been to see Martin and suggested he form a syndicate of business friends to buy your business.\"\n\n\"But Martin \u2013 why that creep?\"\n\n\"Who's the one person who knows your business as well as you do? That weak managing-director of yours? I don't think so.\"\n\n\"Martin?\"\n\nLucille snapped, \"Speak up, I didn't hear.\"\n\n\"Martin!\"\n\n\"God you're bright Ashleigh. What a wonderful idea. Have you appointed a selling agent yet?\"\n\n\"Not yet, I'm doing that in the morning.\"\n\nAshleigh was asked had the house, beach-house and launch being valued and was told yes and asked why.\n\n\"Because you little business innocent, you slippery dick husband is with his lawyer right now drawing up a document offering you the house, beach-house and launch in exchange for a comparable amount in shares in your company.\"\n\n\"If he does that, where would he live and relax?\"\n\n\"Who cares Honey?\"\n\n\"I only suspect he'd doing that because he's smart and it's what I'd do. If you don't think he's that smart, consider the way he'd duped you over the years with his sexual sorties.\"\n\nThe phone went and two minutes later Ashleigh came from the bedroom combing her hair. \"That was Andrew; he wants to meet me for coffee for a quick chat. He wouldn't say what about. Do you think...\"\n\n\"Yes I do. We want to get out of here and so accept the higher of the two valuations for the house and the beach-house but refuse to have anything to do with the boat \u2013 they can be slow sellers. He'll know someone who'll buy it, even if that offer falls below valuation.\"\n\nAshleigh looked agog. \"You do know you don't know the pointy end of a boat from the blunt end.\"\n\n\"Who needs to know unless you're the driver or do they call them captains? But I know business and know from reading that boats can be hard to shift. So, um, no worries.\"\n\n\"No worries? That's rather modern vernacular for you. Have you taken on a young guy?\"\n\n\"Off to coffee you cheeky bitch. I'm off to have a drink with Geneva. She and Chrissie are buying my publishing empire.\"\n\n\"What \u2013 oh God! But you said nothing until now?\"\n\n\"At this stage shifting your business is my focus. We can always gloat in social time. Take the good news from Martin and then give him an ultimatum \u2013 five days to put an offer together or it's all off.\"\n\n\"Five days \u2013 don't you mean five weeks?\"\n\n\"Hawaii beckons up, darling. Besides, the longer you give men the worse they dither. Worse than women, I find.\"\n\n\"May I say seven days?\"\n\nAshleigh took one look at the poker face and said, \"Right five days or I'm to say fuck-off.\" \n\n* * *\n\nSix weeks later Ashleigh and Lucille were watching an after lunch soap on TV when the front door bell of the Great House chimed. Ashleigh answered and returned with two men in their mid-fifties in Hawaiian shirts, baggy shorts and no footwear.\n\n\"This is Lucille boys \u2013 Lucille, this is 'Cobber' Roach from Scarborough Beach, Perth and his old mate is Jeff Nixon from Santa Cruz California. The guys are on a surfing renaissance, going to some of the places they surfed at thirty years ago. They say a Mrs Graham lived here in those days and allowed them to sleep in the shack for a few days, using it as their base.\n\n\"Oh yes, for free and they were invited to this house in the evening for beer and a free meal.\"\n\n\"Well Lucille,\" Cobber smiled. \"Actually that's the truth. We were beach bums in those days with little cash. Mrs Graham found us amusing and treated us royally. But this time we're cash-rich and have our own vehicle. We seek to rent the shack and will keep out of your way. We'll eat in town.\"\n\n\"Are you agreeable to that Ashleigh?\"\n\n\"Yes, they appear to wash and look vermin free.\"\n\n\"Fine boys \u2013 you may have the shack for five nights, no charge, no excessive noise, no under-age women or drugs.\" Lucille said. \"Where are your wives?\"\n\nIn unison they both said at home, indicating they thought themselves too refined to go beach bumming even in Hawaii.\n\n\"Thank you for answering honestly guys. Coffee?\"\n\n\"Thank you ma'am,\" said Cobber. \"But if you don't mind we want to rush off the point \u2013 the waves appear to be at their peak right now; a wind change is expected later.\"\n\n\"Off you go,\" Ashleigh said. \"Mind if we come down and watch?\"\n\n\"Be our guests,\" Jeff frowned. \"Just remember we don't have bodies like we did thirty years ago.\"\n\n\"Right and who does,\" Ashleigh sighed.\n\nThe women became conscious of having their bodies appraised.\n\nCobber led the way out.\n\n\"Oh Jeff,\" Lucille called. \"Drinks at 7:00, dinner at 8:00. You both will be acceptable informally dressed providing you wear big smiles. We'll dress down.\"\n\n\"Thank you ma'am,\" Jeff beamed.\n\nCobber poked his head back into the room and said, \"Thanks \u2013 that's a wonderful offer ladies.\"\n\nAfter they'd gone Ashleigh sniffed and said she didn't think trying to seduce men over dinner was the reason for them coming to live in Hawaii. \"We're really too old for this sort of thing.\"\n\n\"Who cares,\" Lucille said, stretching. \"I think I'll wear my sexiest dress.\"\n\n\"Panties?\" Ashleigh asked\n\n\"I've yet to decide.\"\n\n\"Me too. What do you expect to happen?\"\n\n\"You won't want to know.\"\n\nAshleigh gave her friend an impolite gesture. \"Try me.\"\n\n\"Two very hot nights, then they go after younger chicks.\"\n\n\"Oh God,\" Ashleigh sighed. \"Which one can I have?\"\n\n\"Who cares!\"\n\nThe End"
    ],
    "authorname": "EgmontOriginals",
    "tags": [
        "novel",
        "novella",
        "drama",
        "couple"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lucille-nailed-it-ch-11-final"
}