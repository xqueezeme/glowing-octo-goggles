{
    "title": "Watching and Being Watched is Fun...",
    "pages": [
        "So I may be a little odd, I get that but for a long time I have had a bit of a strange obsession of watching women go for a pee. I know that I'm not alone in this and many people have an even greater fetish for this then me. Personally I've no interest excessive contact and definitely not in drinking, if that's your thing then fair enough, it's just not for me.\n\nFor me it is just about the taboo and secrecy rather than the physical action I think, but the fascination is certainly there. Unlike most people I can pin down exactly when this curiosity began and this is the story.\n\nFirstly I need to explain a few bits and set the scene I guess. Right now I'm a 42 year old fella from England, whilst I now live in a large town this has not always been the case. I grew up in a very rural area of the country called Cornwall in the lowermost South West of the country. The county of Cornwall is a peninsula with a lot of coastline and beaches. \n\nIt is on one of these beaches that I lived, most of my spare time was spent surfing and hanging out with friends on the beach. Having turned 18 and near to finishing college this was likely the last full summer I'd see not being part of the rat race of adult life proper. I was fortunate to still live in my parents large house with a huge garden. What I failed to realise at the time was that my parents were actually pretty cool. \n\nIt was not rare, particularly in the summer for the day to be spent down at the beach with friends, then all piling back to my house where a party would normally ensue. Those who hadn't been at the beach that day would normally find their way over as well. As I say it turns out my parents were pretty chilled and long as nothing too outrageous was going on than they would leave us in peace to have fun.\n\nIt was one of those party evenings where the beginnings of this mild fetish was born. The evening was getting late, a fire was burning and everyone was just chilled out and a few guys from a local band were jamming and entertaining everyone.\n\nAt this time I noticed someone peeking over the wall of our neighbour. A girl I didn't know was obviously trying to be inconspicuous but having a nose about what was going on. Now my neighbours were elderly but a good sort so I had to wonder who it was. Being a friendly fella I headed over and pushing the large conifer type trees aside surprised her saying \"Hello\".\n\nWe soon got to talking and she introduced herself as being Estelle, and explained she was visiting with her grandparents for a week over the summer as a cheap holiday during her summer break from university and had only just arrived that day.\n\nOf course being the perfect gentleman it would be rude to not offer to show her round a bit, introduce her to the crowd and make her stay in our lovely part of the world an enjoyable one. With a bit of cajoling she clambered over the wall and came and joined the party. \n\nWe spent most of the next hour or so chatting and got on really well. Time passed and the evening started to die off, people left and soon there where only a handful left. Making her excuses and saying it had been a long day Estelle headed back to clamber again over the wall. After seeing her safely over I felt happy that she had agreed to come to the beach tomorrow and I looked forward to spending some more time with her.\n\nOver the next few days we repeated the cycle with days spent on the beach, me teaching Estelle to surf (sort of anyway), swimming, cliff jumping hanging out on our fixed spot on the rocks. The crowd of people was largely the same each day and Estelle fitted in and made friends with all. The evenings were spent either at the pub or back for another impromptu party at my house. It really was a great time of life when I look back on it, I was fortunate to live and grew up in such a great place.\n\nHalfway through the week one evening Estelle was asking what happened at the end of the beach. Whilst this puzzled me slightly she explained that the beach seemed to just end at the huge cliffs. \n\nNow would probably be a good time to explain a bit of the geography. I lived in North Cornwall, think Poldark and other such dramas you may have seen (Or not), but North Cornwall is very rugged and made up of many bays and lots of cliffs. Warning signs are everywhere warning tourists of being cut off at high tide, rock falls and sudden vertical drops. It really is a bad idea to go off exploring beyond the main beach area if you don't know where you're going. \n\nOf course having lived here for all but the first three years of my life I knew every nock and cranny of our bit of coastline. I told Estelle all about the coves, rocky inlets and other secret places very few people got to see other then maybe from the top of 200+ foot cliffs above.\n\nOf course Estelle really wanted to see everything I had been telling her about, so that was that, we agreed the next day I would take her on an adventure.\n\nChecking that she had some decent beach shoes for getting over the rocks and some sun cream, I chucked these in my ruck sack which mainly had some food and plenty of water in it and off we set down over the cliffs for the five minute walk down to the beach.\n\nA few of the normal lot were there when we arrived so we dropped of some stuff we wouldn't need or didn't want to carry and set off along the sea edge. At this time the tide was turning so would perfectly suit a long walk. Not that it matter as even should the tide turn I knew every olden smugglers route up the cliffs.\n\nNow we weren't in a rush and the day was absolutely beautiful, and given that Estelle had her swimsuit only on and me a pair of shorts we jumped in and out of sea, messed about splashing and goofing around as we made our way.\n\nDespite how things might seem at this point and whilst a lot of flirting and even good natured innuendo filled teasing had occur neither of us had pushed things beyond this, all had been pretty innocent most probably because neither of us had the confidence to just \"go for it\".\n\nThat doesn't mean that as I walked down the beach with this gorgeous girl (Blonde, kinda short, very lean athletic body with boobs just a little bigger than you would expect and what I thought was the prettiest face ever... in case you were wondering) I wasn't constantly sneaking a look at her bum as she run away from me, taking every chance to grab or hold her when swimming or messing about in the water and I definitely didn't mind the way her nipples poked out every time she got out of the water.\n\nOf course I had been busted a few times starring at her breasts in this state and had been called a perv, but in the nicest possible way. And there was never any attempt to try and hide them or push me away when I got a little too grabby. It was clear we were both having fun.\n\nAnyway after an hour or so we had passed the two main touristy bays and I had navigated us around the cliff base through a maze of \"secret\" alleys and over some minor boulders.\n\nAs we jumped down the last of the rocks and whole new cove stretched out in front of us. Estelle was amazed to find such a perfect place and decided that I really was a good tour guide!\n\nWhat makes all these coves special is the fact they are pretty much always deserted, unless some other local or a small boat has decided to head this way you can pretty much bet to have the place to yourself.\n\nDue a break we sat for a while eat some food and rehydrated, chilled and enjoyed the sun again for a bit. A swim and drying off in the sun left us ready to carry on. \n\nAs we neared the end of the cove Estelle suddenly asked \"Erm so Matt, where exactly does a girl find a bathroom round here?\"\n\n\"A bathroom?\" I laughed, \"It's right over there behind them rocks.\"\n\n\"Oh wow really?\" she exclaimed.\n\n\"Nooooo,\" I howled as she realised I was joking.\n\n\"But I need to pee,\" she laughed.\n\n\"So pee then.\"\n\n\"Where?\" She asked.\n\nI point out to her that there is no one within a mile of us and that if she has to go it's a wild wee or no wee.\n\nExclaiming that she most certainly is not going to pee outside Estelle most adamantly tells me she will wait.\n\nAs we head towards the cliffs not two minutes later it's obvious that Estelle really does need to pee, just the way she is walking has me laughing and teasing her. However she is adamant she will wait!\n\nNow earlier I mentioned that I was a gentleman, that's not always true. I couldn't resist teasing and even ducking behind her and grabbing her waist and tickling her. I can tell that she is getting more and more desperate.\n\n\"Stop it or you'll make me piss myself,\" she snapped whilst trying not to laugh at the same time.\n\nI stop the tickling but keep up the teasing, offering her more water, exaggeratedly taking large gulps myself and singing any song that involves rain or running water that I can think of.\n\nEstelle stopped and faced me.\n\n\"You are really not helping,\" she said with a pained look on her face, \"I really need to pee, what am I going to do?\"\n\n\"Pee then,\" I tell her again.\n\n\"What just do it here?\" She exclaimed.\n\n\"Yes,\" I laughed. \"There's no one around for miles.\"\n\n\"You're here, and I've never done a wee outside,\" Estelle giggled.\n\n\"Well you aren't going to last much longer either way so you might just as well get on with it.\"\n\n\"OK, but you must turn around,\" she said as she kind of bobbed up and down clearly not far from having any choice taken from her.\n\nI turn my back to her but I already know that the gentleman in me has deserted again, I'm intrigued and know I'll being doing my best to have a peek.\n\n\"It won't come,\" I heard Estelle saying, then suddenly she let out a massive sigh of relief and laughs \"Oh my god I'm pissing myself.\" \n\nThat's my cue and I spin around. There stood just in front of me Estelle is stood with her legs a bit apart and her water cascading from the crotch of her swimming costume.\n\n\"It's going all down my legs,\" she tells me in fits of giggles, \"Your not supposed to be looking, perv.\"\n\nIt's true I am a perv but the sight of her stood there with a stream gushing through the material covering her crotch has me fascinated, I can feel the blood flowing into my dick as I feel turned on by the sight. Plus I know she wasn't really mad at me as she's watching me watching her with a big smile on her face.\n\nAs the flow dwindles Estelle gives a cute kind of shake of her hips.\n\n\"Oh god that feels better,\" she said laughing \"Now I need to wash myself off,\" and skips off to the ocean. \n\nI'm not sure what to do so just stand there watching as she jumps in the sea. I can see as she rinses off her legs and watch as her hand rubs across the material of her swim suit. If I wasn't already hard I definitely would have been when I saw her hand slip inside the gusset of her swimsuit. Knowing her hand was right then in contact with her naked pussy certainly added to the horny feelings I was having.\n\n\"Come on perv, lets go,\" Estelle shouted as she came running up. And we headed for the next crop of rocks to cross. This time there was a bit more climbing and scrambling to be done. Nothing to dramatic but enough to focus our attention on making sure no slips occurred. As we reached the top of the section we needed to cross we sat on a natural bench type ledge to recover our breath and admire the view. \n\n\"You know that was really fun, I want to do it again,\" Estelle suddenly said as we were sat in silence.\n\n\"What climb the rocks?\" I asked not quite catching on.\n\n\"No donkey, pissing outside. It was liberating and even better it felt really naughty,\" she shyly giggled as if she had just admitted something really shocking.\n\n\"Huh told you!\" I said \"fun even though you had a perv with you.\"\n\nEstelle went quite for a moment and I worried I had offended her.\n\n\"I don't actually think your a perv, if any one is it's me,\" she said quietly.\n\n\"Why you?\" I asked a bit confused \"I was the one watching you.\"\n\n\"Coz I liked it, I stood there peed and let you watch me. I liked that you were looking and watching me. It made me feel funny and I liked it. It turned me on a bit and when I rinsed myself off I realised I was wet,\" she said still talking quietly.\n\n\"What did you expect, plus you were in the sea,\" I laughed trying to lighten to atmosphere a bit.\n\nChuckling she carried on \"Not that kind of wet, the other kind of wet you donkey. My fanny (pussy to my American friends) was very slick,\" she explained shyly. \"Plus I'm a perv because I want to do it again, I want to piss outside and I want you to watch me do it. And now you will think I'm some kind of freak.\"\n\n\"Wow really,\" I exclaimed, \"I don't think your a freak, I liked watching you and would really like to see you do it again.\"\n\n\"OMG, so we're both pervs then,\" she set off giggling again, \"Give me that water I need to fill up.\" The giggling turning to proper laughter.\n\nThat seemed to be the end of the conversation for now as Estelle got up and started her way down the rocks to the next cove. This was only a small one and the last sandy beach in the stretch as the coastline got more rocky as it went on.\n\nAgainst the base of the cliff there were loads of rock pools and we spent some time exploring these looking at little fish that were swimming around them. A few crabs and other sea creatures shared the pools with them. We swam for a bit and finished off the food I had packed for our lunch. I noticed that Estelle was constantly sipping at one of the large bottles of water I had packed. Whilst nothing was said I couldn't help but smile to myself about the likely outcome. \n\n\"What's next?\" Asks Estelle glancing away across the cove, I know she is meaning the next cove we will visit. I point out the rocks jutting out in to the sea that hide any view of the next stretch of coast. Telling her that we need to follow a ledge out and all around them then back in the other side. Here we will find our last port of call. An amazing little inlet with a rock ledge all around it. Even at low tide the basin is full and it's like a sea water swimming pool. Totally secluded and can't be seen anyway other than being there. The only way out from there now is an old path once used by smugglers and wreckers along this treacherous coastline, we have left it way to late to go back the way we came as the tide coming back in would have cut off the route. I tell her about some local folklore about how The Wreckers would lure ships in by flashing lights pretending they were the light house further up the coast, and how the sailing ships would get lost and crash against the rocks. The Wreckers would then loot the wrecked ships ignoring the sailors who perished. \n\n\"Such adventure,\" teased Estelle. \"We best get on our way before we get trapped and a ghostly wrecker comes for our loot,\" she said standing up.\n\n\"First though I need to pee though, you coming?\" She smiled at me.\n\nI was up like a shot as I followed her towards a big cave entrance. As I caught up with her she grabbed my hand as we walked along.\n\n\"I want to feel really free this time, I assume you won't mind if I move my costume out the way and get my fanny out?\" she giggled. \"Maybe I won't soak my legs as much either then!\"\n\nHell no, I certainly didn't mind. The thought of seeing Estelle's pussy naked had my cock instantly hard.\n\n\"You sure?\" She asked as she stopped and turned and faced me. \"I don't think I've ever been so excited to have a wee before.\"\n\n\"Oh I'm very sure,\" I replied. I couldn't help but unconsciously touch my own crotch which by now contained a bulge. Estelle saw me do this and gave a very fake roll of the eyes and smiled at me.\n\nThen looking at me she placed her hands on the top of her chest and slowly run them down her body, as she passed them over her tits it just made her erect nipples even more obvious.\n\nAs her hand reached her hips she turned them outward and slipped her fingers under the edge of her costume. Each hand following the crease at the top of her legs. Her fingers inside the costume obviously feeling good against her skin as she let outa little gasp as they passed over her slit.\n\nPulling one hand out and hooking a finger through to the other side with the other, she gripped the material and pulled it downwards and to the side. \n\n\"Taa da,\" Estelle exclaimed as for the first time she reveal her beautiful pussy to me. Her slightly plump mound was 100% smooth and creased with a perfect slit running between her lips. At this time I hadn't seen a lot of pussy's in real life but I know this was the prettiest one I'd seen to date.\n\n\"Oh shit, I can't hold it,\" Estelle suddenly said.\n\nAs she did a powerful stream erupted from between her legs. Such was her need to relieve herself the stream shot straight down and in front of her. My eyes were transfixed.\n\n\"Look at me, I'm pissing like a boy!\" Estelle erupted in laughter. Suddenly Estelle started waving her hips about, sending her stream flying in all directions. Finding the hilarious she swept her hips from side to side as she clasped her hands together behind her head.\n\n\"Wow this is so fun, I'm such a dirty cow! Do you like seeing my pissing fanny? I reckon I could spell my name in the sand if I practice,\" She howled laughing. \"Well I could if my name was whoosh.\"\n\nI couldn't help but join in with her infectious laughter.\n\nAs her stream started to ebb and lose some power it started to spray a little, Estelle reached down with her hand and parted her lips a little. Finishing up with a little bob up and down she looked down at the puddle spread around her feet. Even though it was rapidly draining into the sand she exclaimed how much there was, excitedly saying how she really really did need to go.\n\n\"Did you enjoy that?\" She asked slightly nervously stood with her pussy still out in the open and making no attempt to cover up.\n\n\"I really enjoyed that\" I enthused.\n\n\"Come on, lets go clean up,\" Estelle grabbed my hand and led the way the waters edge. We waded into the small surf until the waters nearly up to our knees. Well nearly to mine and up to hers given she was shorter than me. \n\nAs we stop Estelle turned and faced me, pushing herself up on tiptoes she lifted her face up to mine and we shared our first kiss. As our lips met nearly a weeks worth of passion spilled out. Her warm tongue pushed into my mouth as we duelled both of ours together. It was warm, wet and I absolutely loved the intensity of our first kiss.\n\nBreaking our embrace Estelle turned her back to me and taking my wrists pulled my arms around her to embrace her from behind. As I leant forward to kiss her neck she bent forward and scooped up some water in her hands. She splashed the water across the top of her legs and stomach. Repeating this action and washing herself down Estelle then stood back up and leaned into me. Offering her neck to me I leant in and kissed it. Obviously something she liked as a little shudder ran through her body.\n\n\"You better make sure that I'm clean!\" She huskily whispered. \n\nSliding down her body a little I scooped up some water myself. Using my hands to spread this water I started at her thighs and slid my hands up her inner thighs. Intentionally sliding my hands past her exposed pussy and along her hips. Carrying on their path my hands slid around her flat stomach, up her ribs and nearing the end of their journey as they travel up the underside of her breasts.\n\n\"Oi, it wasn't my tits that got pissed on!\" she said as she turned her head towards mine. \n\nInstead of answering I just put my lips back on hers and shut her up by kissing her. Again I didn't find any complaints as I grabbed her perfect handful sized tits in my hands. Squeezing and kneading them through her swimming costume I could feel her nipples getting even harder as they poked the palms of my hands. Using just my fingers I teased and played with her nipples, lightly pinching them, circling them and dragging my nails over them. ",
        "I could tell by the soft moans escaping Estelle's mouth even though she was kissing me that she was enjoying my touch. Breaking our kiss I lightly kissed down her cheek, passed her ear and towards her neck. Estelle leaned her head back against my other shoulder fully exposing the soft skin of her neck for my lips to explore.\n\nMy hands started a new journey of their own. One arm reaching around to hold Estelle close to my body and the other heading further down south. As my wandering hand reached the swell of her pubis it was clear that I wasn't about to meet any resistance as Estelle widen the gap between her legs and slumped a little in my grasp and let me carry some of her weight.\n\nTravelling over the ridge of her bunched up costume the feel of material was swapped for bare skin. Wasting no time slipping my hand between her legs I cupped her bare pussy. The heat radiating from between her legs was just one of the sensations that assaulted my senses. That she was so smooth and hairless felt amazing but was only heightened by the fact that her pussy was absolutely soaking, even her lips were covered with her juices already, and as she had pointed out earlier it was definitely the 'other kind of wet'!\n\n\"God I'm dripping!\" she almost panted as she could feel just how slick the skin of her lips felt with my hand sliding over her sex.\n\nWith my hand covering her pussy and one finger laid lightly along the length of her slit I gently squeezed. Her sex almost melted in my hand as her lips just parted and swallowed the finger between them. Using my other fingers to trap it there I slid my hand up and down a little. Slipping between her pussy lips I could feel her clit also rubbing along my finger. It was at this point her legs almost buckled beneath her and she gasped, \"put it inside me properly, finger my pussy.\"\n\nAlways being one keen to give more than asked I quickly curled that finger inwards and added another to join it. Her pussy was scolding inside and so slick, it quickly swallowed both fingers and her legs totally went. I was almost holding her up solely by the two fingers hooked deep inside her body between her legs. With her weight like this I was not really able to thrust in and out of her so instead kind of bounced her up and down.\n\nIt must of hit the right spot regardless as within seconds she was screaming.\n\n\"Oh fuck Matt, bury your fingers up me, don't stop, don't stop, fuck fuck fuck I'm going to cum I'm going to cum, FUCKKKK I'm Cumming... don't stop I'm Cumming...\"\n\nThis lasted a good few minutes as Estelle came again and again. Her pussy just gushing juices all over my hand. It was one of the most erotic experiences of my life at that time.\n\nSlowly Estelle came down from her run of orgasms but was still like a rag doll in my arms. Not willing to let go just yet I lightly stroke her pussy enjoying the feeling of wetness and warmth it was radiating. Of course I was careful to avoid her clit which was way too sensitive as I had just found out.\n\nComing round some, Estelle took her own weight back on her legs, turned and looked at me and told me \"That was absolutely the best pee ever in the world\" and laughed as she kissed me.\n\n\"I think I need another wash down, but I think I best sort myself out this time,\" she giggled as once again she sluiced off her legs and fanny. I was mildly disappointed to see her cover herself back up this time.\n\n\"Don't worry, I'm sure it's not the last time you'll get to see it,\" she said winking at me. \n\nSetting off back on our intended adventure we walked down the waterline towards the rocks we needed to traverse round to the next inlet. As we walked Estelle put her arm round my waist. I reciprocated with my arm around her shoulders. It didn't stay that high for long thought to be honest. Firstly slipping down to the small of her back, the a little further to her arse. Then slipping under the leg of her costume to grab the bare skin of her bum. Groping her cheeks as we walked.\n\n\"Oh so my tits and fanny not enough to be going on with?\" She admonished jokingly as she also grabbed a hold of my arse.\n\nFor the next half hour or so we traversed the narrow ledge that made the path around the corner to the next bay. Stopping for a break on one of the wider sections I noticed that Estelle was still keenly working her way through the bottle of water she was carrying. Smiling to myself it made me realise that I was reaching the point myself where I would need to sort my own peeing needs out.\n\n\"Erm, is there a bathroom somewhere around here?\" I said jokingly referring to where this business all started.\n\n\"Do you need to go?\" Estelle asked with a seemingly hopeful look on her face.\n\n\"Yeah,\" I simply replied. I was not sure about the situation here, it was not something that had been broached.\n\nEstelle answered the question of etiquette quite simply.\n\n\"YESSS! My turn to perv,\" she excitedly said. \"Come on let's do it.\"\n\nI walk to the edge of the rocks which drop away into the sea that's lapping a few feet below where we stand. Estelle almost bounces up behind me, places a hand on each of my hips and standing slightly to the side and peered round me. I've got to be honest that at this point I was feeling a bit nervous, at least this kept things in check so I didn't have a raging boner which wouldn't have helped the situation at all! I do however have a bit of a lob on which pleases me that it will look a bit more impressive.\n\nI use one hand to pull the front of my shorts out the way and reach the other in to fetch out my cock.\n\n\"No cheating, you got to see all\" Estelle chides as she grabs the waistband of my shorts and roughly yanks them down to my knees. \n\nFeeling very self conscious and a bit daft I stand there with my cock in hand pointing out to sea. By now I really need to go so I relax and let the flow begin.\n\nAs I let out a steady stream Estelle surprises me by reaching around me and grabbing hold of my dick.\n\n\"Oh that's so cool, I want to hold it!\" she exclaimed as she does so.\n\nNow this is something new for me, being held by someone else whilst taking a piss. As she grabs me I freeze up and the flow stops.\n\n\"Aw don't stop I want to aim it\" she giggled.\n\nIn for a penny I thought and relax again. Now I'm stood in full flow with this cute girl holding my dick while I piss into the sea below, not an everyday occurrence! Estelle is busy having a great time waving around my dick like it's a sword and sending my flow all over the place.\n\n\"I really could write my name in the sand with this thing,\" she giggled.\n\nAs I near the end of my relief the stream of pee dies away.\n\n\"What do I do now?\" Estelle genuinely asked.\n\n\"Give it a shake and put it away I guess.\"\n\n\"I don't mind shaking it, but I'm not putting it away just yet,\" she tells me grinning.\n\nAfter a quick shake exactly as promised her hand movements change. From a shake to a stroke. Using the whole of her tiny hand she wraps it around my now rapidly growing cock.\n\n\"Oh it's getting hard,\" she said excitedly.\n\nShe kept stroking it, then cups my balls and continued to tease me. Making sure I'm fully hard before she spits into her hand and starts to work my hard cock over properly. Alternating her grip and speed it doesn't take long before I can feel the cum in my balls start to rise. To be fair given everything that I have seen and done today I'm quite impressed with myself I had lasted this long. Most of the day I had been at the point of totally horniness...\n\n\"Oh yeah baby, do it for me. Cum for me. I want to see you explode,\" she chanted quietly.\n\nThis sends me over the edge, my balls tighten and the release I have wanted all day was mine. White hot cum explodes from my cock the way only a horny teen can do it. Hot ropes of cum shoot out of my dick time and time again. I'm sure I'm lost in heaven.\n\n\"Second best ever pee in the world,\" Estelle breaks the silence cracking up. I notice her looking at her hand and seeing a few drops of cum on it. Smiling at me she nonchalantly wipes her hand across her stomach cleaning her hand on her swimming costume.\n\nWe sort our stuff out and as we are about to head off for the last stretch to the inlet Estelle hands me the last bottle of water from my bag.\n\n\"Drink. Lots,\" she instructs me. \"Next time I want us to piss together and I'm not sure how long I can wait for another wee.\" Despite the last part of her statement I notice her still swigging water herself. Not wanting to disappoint I drain half the bottle there and then in one go. As we traverse the last of the rocks I carry on and neck the rest of the bottle.\n\nPassing the last part of the corner the cliff the inlet appears suddenly. Estelle is taking aback by the beauty which I had not done justice in my description of. It truly is one of the rare spots in the world that is totally secluded and barely anyone knows (or can be bothered to reach if they do) and she is giddy exploring. A natural reef acts like a break water leaving the water in the basin almost perfectly still despite the rough waters just outside the bay. With a large ledge surrounding the water it is almost like god created the perfect swimming pool.\n\nEstelle is running around exploring like an excited child in a sweet shop, asking hundreds of questions. \n\nMost importantly she seems concerned with knowing if anyone can see the inlet. Again I explain to her the only way anyone can see in is from the sea on a boat.\n\n\"And is the water deep?\" She asks.\n\n\"About 20 foot with the tide like this,\" I explained. I know this will not concern her given she has proven not to be scared of the sea all week and is a strong swimmer. I point out a few gully's in the rocks which act as natural steps where it is easy to get out.\n\n\"Well if no one can see us then let's skinny dip,\" she grinned at me. Without taking her eyes from mine she reaches up for the straps of her costume and slowly slips them off her shoulders. With tantalising slowness she slips her arms out and peels the material down her body. \n\nAs she starts to expose her cleavage and is just seconds away from letting me get my first sight of her breasts she stops, the material just about covering her nipples which even covered I can see are rock hard.\n\n\"You sure you want to see my tits?\" She teases.\n\nBefore even giving me a chance to answer she pulls her costume down over her chest, slides it off her bum and lets it drop to the rocks at her feet. Standing up straight I catch a spilt second glance of her naked form before she turns, runs and takes a flying dive of the rocks into the basin.\n\nAs she breaks the water surface facing towards me still stood there she yells \"coz if you do you'll have to catch me first!\" then turns and swims off.\n\nWasting no time i drop my shorts, step out of them and also dive in. As I swim after her it doesn't take long to get within reach of her and grab her leg. Playfully she struggles as I grab hold of her and turn her towards me. Having spent my life growing up on the beach and in the sea I'm a pretty strong swimmer and can tread water forever. Using this skill I grab her with a hand on each side of her waist and lift her up out of the water.\n\nRight in front of my eyes are the most perfect pair of tits I had ever seen. Nicely full but so firm and pert. Her hard nipples standing out proud a gorgeous pink colour surrounded by a slightly darker pink shade of her areole. Her milky white skin making them show out clearly.\n\n\"Caught you,\" I stated the obvious, \"Now I can look for as long as I want.\"\n\n\"Good, I like you looking at me,\" she grinned.\n\nI had more than looking in my mind, given my hands were full I had limited options. So I did the only thing I could. Pulling her towards me I quickly latched my mouth around one of those beautiful nipples and sucked it into my mouth.\n\n\"Oi, who said you could touch?\" Estelle shrieked as she pushed away from me and fall back into the water laughing. We spent time swimming with A LOT of body contact, both grabbing each other at every chance, both pretending to be shocked but really absolutely loving exploring and being explored by each other. At times we gave up the pretence and just hang in the water with our naked bodies pressed against each other and kissed like the horny teenagers we were.\n\nI liked doing this especially as it meant that Estelle had to cling tightly to me, her body pressed up close to mine so I could feel every inch of her skin from her tits pressed into my chest to her pussy pushed up against me. Even in the cold water I could feel the heat of her sex when she wrapped her legs around me, totally trusting me to keep our heads above water. But just as good was that in this position I got to grab her arse. Not only to get a grip and hold her but to also to have a really good grope. Grabbing her cheeks and kneading them, even sometimes a stray finger or two slipping between them into the crack of her arse and brushing against the most private of places. When this happened sometimes Estelle gave a little squeal, other times she just said \"naughty\" but she never tried to shift and even gave an extra little wiggle at times.\n\nAfter a bit the water was starting to feel a bit cold, just as I was about to suggest heading over to the rocks to catch the last of the sun and warm up I looked over Estelle's shoulder and saw a little dog like head pop up on the surface. Along this stretch there are a number of resident seals and I recognised this as one of the locals. A friendly fella known as Dave (I know, but I didn't name him!) who was used to all the tourists and local humans sharing his sea. \n\nNow I could of simple pointed Dave out to Estelle and swam over to him. There's every chance he would have stayed and even let her pat him on he head as he sometimes does. Instead I thought it would be funnier to scream, point to him and shout \"SHARK\"...\n\nPredictably Estelle panicked and launched herself towards one of the exit gully's, screaming as she went. It was only a few strokes in she realised I was not following but was in fact cracking up with laughter. Cautiously she turned in the water to see what was happening and was treated by the sight of a curious seal unsure what had happened so decided to swim over to me to say hello.\n\nPatting Dave on the head I introduced him to Estelle who by now had stopped panicking and instead was busy being mad. \"You dickhead, I was scared to hell\" She lambasted me. Dave eased his way towards her and she gingerly reached out to pet him. Dave's big brown puppy dog eyes soon won her over and she relented that it was actually fairly funny. \n\n\"I nearly pissed myself,\" she laughed, \"What a waste that would have been...\"\n\nDave having had seen enough headed off to where ever it is that seals have need to go, hunting for fish I would imagine and I explained for the record that sharks off North Cornwall are very rare and those that do come by are hardly Great Whites.\n\n\"Well I really do need to wee now, and you better too. I want to have some fun together!\" Estelle stated over her shoulder as she headed over to the rock steps. Watching her climb out from the basin remains one of the most beautiful sights burned into my mind to this day. Her legs stretching all the way to the cutest of bums, the glimpse of her bald pussy between her legs as water drained off her body.\n\nWalking over to an open bit of rock she turned to face me, as I reached the ledge I just stopped and admired her naked body. No subtlety in my lecherous staring. Far from being offended Estelle struck a pose and gracefully spun in a full circle letting me get a good look at her fully.\n\n\"As much as I like you seeing me naked I need you over here being a perv so I can be one too.\"\n\nWell as invites went it sound pretty good to me... I walked towards her and as I do she adopts a more traditional 'girl peeing outside' squat position.\n\n\"Here, in front of me,\" she directed \"We both go at the same time, you aim between my legs and we're not ghostbusters so crossing streams is definitely allowed.\" she laughed at her own joke.\n\n\"3, 2, Oh shit gooooo.\" Estelle tried counting us in but her need was not willing to wait.\n\nAgain I stood almost dumbfounded watching something that really shouldn't be as exciting or such a turn on Estelle's pussy seemed to explode a torrent of her water and she used her fingers to spread her pussy lips open and let her stream escape. It felt like minutes but was only a second or so that I let myself go and soon my own stream of pee was flowing.\n\n\"Good shot,\" she giggled as my aim remained true and went straight between her spread thighs. \n\nWith the game initiated Estelle shuffled to move her flow about. Succeeding in her goal she directed her line of piss to cross into the path of mine. \n\n\"Ahhgg, I'm getting splashed,\" She howled with laughter as the resulting collision of streams caused disruption, drops were flying off and splattered her thighs. Far from upset she seemed to like this and claimed it to be warm.\n\nHer thighs weren't the only bit of limbs finding out this benefit. Given how long we had been in the water my feet weren't far from being chilled themselves. The run off from our joint streams was pooling around our feet and causing quite a pleasant warmth in their near frozen state.\n\nAfter a quick stream 'dual' and messing around, as the saying goes all good things must come to an end. As we both emptied out and finished off our business I could tell just from the look on Estelle's face that she enjoyed the experience and that again it had made her horny. That was clear from the predator look on her face.\n\nStanding up again she leant in and kissed me, taking hold of my shaft she gave it a quick shake. Surely taking a few more drops on her legs as a result.\n\n\"Thank you,\" she said as she started walking me backwards. Clear of the area where we had made our mess she told me to lay down, grabbed a towel and the bag. Giving me the bag a a pillow of sorts she made the towel into some improvised knee rests.\n\nAs she stood over me one leg each side of my waist I stared up at her sexy body. Her smooth pussy still with drops not quite shaken off as were some spots on her legs as well. This didn't stop my mind from wondering if her thought pattern was the same as mine. Just thinking this as I stared up up her fanny had my cock rock hard as I hoped she did.\n\nEstelle lowered herself down on all fours over me, her tits pressed into my chest. Her face right in front of mine as we kissed lightly. Leaving my lips Estelle moved her mouth next to my ear and whispered.\n\n\"Thank you, this has been the best day ever. There is only one way to make it even better, I want you to fuck me and make me cum harder than I have ever cum before. Will you fuck my pussy hard?\"\n\nAs she said this she lowered her hips down and that beautiful pussy touched my shaft. As she gently rocked her hips her slit slid up and down the length of my dick. She was so wet and slick that her lips parted immediately wrapping themselves around my ever hardening cock. The feeling this gave nearly drove me crazy. We both knew it was a rhetorical question and there was not a hope in hell I was about to say no.\n\nBarely able to speak I gasped \"Condoms in bag.\"\n\nStaring into my eyes Estelle gently shook her head.\n\n\"No, today is a day of firsts. No one has ever cum inside me before but today you are going too. I'm going to ride you until you can't take it anymore, My little pussy is going to make you cum so hard. I saw how much you came earlier and it really turned me on. I want your cum up me, I want to feel you explode deep inside me and I want you to flood my pussy with every drop of that hot cum.\"\n\nIf it even crossed her mind to give me a choice she took away any chance of that immediately as she lifted her bum slightly and moved her hand beneath her. I felt her hand under my cock rubbing my shaft and her pussy at the same time, then she tilted her hips and pushed against me. It was as if our worlds aligned as my hard pole found the entrance to her hole at exactly the moment as it passed over the head of my cock.",
        "Things were so slippy down there that I just sank inside her. There was no resistance and my rock hard cock buried straight into the depths of her as she took my whole length. Even so Estelle continued to push herself down hard on me as if her pussy wanted to swallow me whole. I grabbed her arse and wanted the same as I pulled her as close to me as I could. Almost as if we were frozen in this position I could feel the hot walls of her cunt squeezing my shaft, over and over her pussy throbbed around me.\n\n\"Oh fuck,\" she gasped staying still for a few moments.\n\nI had only just got inside her and she had cum already, I felt very proud of myself...\n\n\"That was only a little one as a starter,\" she giggle.\n\nThey temperature inside her pussy felt like a 1000 degrees, the water had made my dick really cold and she told me this felt good inside her. It worked for me as well because her pussy felt boiling hot and was certainly warming it up.\n\nSitting up Estelle rested her hands on my chest and told me now was the main event. She started rocking slowly and grinding her clit against me, gradually she sped up getting faster and faster. Not able to control anything I let her ride me as she wanted to, instead I reached up and grabbed her tits. Groping and teasing them, playing with her nipples then squeezing her breasts. \n\n\"Sit up,\" she urged me, as I did with her now on my lap her tits were right in my face. My hands now on her bum as I sucked first one then the nipple. Flicking them with tongue before sucking hard on them. This drove Estelle crazy as she suddenly pushed me backwards laying me flat again and started bouncing up and down on me like a crazed animal. As she impaled herself on my cock I thrust back up to meet her.\n\n\"OH MY FUCKING GOD, I'M CUMMING, I'M FUCKING CUMMING, MAKE ME CUM...\"\n\nPounding her pussy on me it felt like it was melting, hot juices from her very core flooding around my cock, running over my balls. I'd never felt anyone cum like that. As her pussy contracted it felt like my dick was in a vice. The most silky, hot best vice in the world. I was so concentrated on her pleasure I forgot all about my own and this helped me hold off ending myself.\n\nAs her orgasm wore down Estelle collapsed on top of me again. Her head rested on my shoulder I could still feel tremors flowing through her pussy.\n\n\"Holy mother of god, that was soooooo intense,\" she said barely audibly.\n\nAs if suddenly remembering me she started to rock her hips again. \n\n\"Your turn stud,\" she whispered in my ear.\n\nShe started to slowly raise and lower herself on my cock as it slid in and out of her, almost to the point of just the tip left inside then she would sink back down on me. She would tighten her cunt so I could feel every centimetre of the walls of her pussy as it slipped along my shaft. In, then out then back in again.\n\n\"Use me, use my tight pussy and make yourself feel so good\" she started whispering in my ear, she carried on talking driving me crazy...\n\n\"I want you to cum for me, give me your hot cum.\"\n\n\"Mmm cum inside me, cum in my pussy.\"\n\n\"I want your hot cum up me, fill me up. Fill my fanny with your spunk.\"\n\n\"Fuck me till you cum, use that pussy, fuck it good.\"\n\nIt really didn't take long of whispered talk like that in my ear before I was ready to unload myself. Sensing this Estelle moved slightly so she was staring straight into my face.\n\n\"Do it, come on do it... I want to feel you explode inside me... cum for me baby, fill me with your seed...I want to feel you shoot up my pussy.\"\n\nSpeeding up but not to quick she smiled at me.\n\n\"You can't stop yourself can you, your going to cum. Cum deep inside me...\"\n\nAt that precise point I did, I came harder than I had ever cum before. Estelle pussy gripped me tightly and she carried on sliding on me.\n\n\"Oh god I can feel it, I can feel it squirting inside me. More give me more fill that dirty pussy up with cum.\"\n\nI swear I almost blacked out at that point, all I could feel is my cock throbbing as load after load of cum shot out my balls and blasted inside that sweet pussy. I must have painted her cervix a perfect white and oh my god it felt good.\n\nAs I came down a little I noticed that Estelle had stopped sliding on my dick. Instead she was almost frozen above me. But she was shaking, or more like quaking maybe. Her eyes had rolled back and she was chanting \"Yes\" softly over and over again as a new type of orgasm seemed to grip her body from head to toe.\n\nI held her tight and after a few minutes she seemed to be back with me. Still resting above me with my cock still inside her. Unlike normal it did not seem minded to shrink.\n\n\"What the fuck did you just do to me, that was amazing. I never came like that before. Out of this world.\" was all she said.\n\nSlowly she sat up, rather than standing she kind of just leant back flick her legs out from under her. My still hard dick escaped her body with a pop and she laid on her back between my legs. \n\nResting on her elbows she look at me and told me that had been fantastic. She glanced down between her legs.\n\n\"Oh my god, look what a mess you've made of my fanny,\" she giggled.\n\nIt was true, her pussy was a sticky mess of both our juices and could only be described as looking well and truly fucked. \n\nJust then she felt and I saw a big drip of my cum start to leak out of her.\n\n\"No no, I want to keep it,\" she laughed as she reached down and cupped her pussy in her hand. Obviously deciding she like the feel of the foreign liquid seeping out of her she suddenly started playing with it. Spreading it around her lips and up over her clit.\n\n\"Mmmmm that feels good, I need more,\" she purred as she sunk her fingers inside herself. Pulling them out she had scooped up more of my sticky offering and continued to rub it into her fanny. Time and time again her fingers dipped inside her and returned to rub what she had found into her clit. By now she was beyond simply touching herself but openly masturbating. It was so hot to watch that I started stroking myself.\n\nWatching me play was turning her on further. In no time at all it was like a race, who could get there first. I knelt between her legs my cock pointed towards her.\n\n\"Oh yes, I'm going to cum,\" I gasped.\n\n\"On my pussy, come on my pussy!\" she screamed at me as her hand blurred rubbing her clit.\n\nSo I did, pointing my cock straight at her fanny lips I exploded all over them. Not stopping for a second this set off Estelle's orgasm as with one hand blurred as she furiously strummed her clit and with the other she massaged a fresh load of cum into the glistening pink inside of her pussy.\n\nReluctantly after a while we figured we needed to head back. After taking a quick dip in the water to have a much needed wash off we headed up the secret cliff path and set off on the few mile trek back to the beach. When we got there the crowd wanted to know what we had done with the day, Estelle enthused about the adventure and the views but didn't mention any of the really fun bits. A couple of the guys gave me 'still not managed to pull her' look. I just smiled to myself.\n\nA few people suggested a night out but to be honest we were both worn out from our adventures so declined. Back to being a gentleman I obviously walked Estelle home.\n\nAs we reached her gate her grandmother was on the front step.\n\n\"Oh hi Nan, I'll just be minute!\" Estelle greeted her like the doting grandchild.\n\nLeaning up to me she gave me a quick peck on the check and softly said \"I can still feel you leaking out of my pussy. You put a lot of cum in there, thank you.\"\n\nThe sweet as an angle she skipped down the path to grandma shouting \"See you tomorrow.\"\n\nAnd she did, for the next four days we had the time of our life. We played a lot more pee games and had a lot of fun. \n\n***\n\nIf you'd like to know more about what we got up to or just chat then please use the contact feature on my profile page. I would love to hear your feedback and maybe meet some likeminded souls. \n\nIf you do leave feedback be sure to include your email address so I can say Hi back!"
    ],
    "authorname": "snowbo",
    "tags": [
        "beach",
        "pee",
        "peeing",
        "pissing",
        "skinny dipping",
        "creampie",
        "exhibition",
        "summer",
        "holiday",
        "secluded"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/watching-and-being-watched-is-fun"
}