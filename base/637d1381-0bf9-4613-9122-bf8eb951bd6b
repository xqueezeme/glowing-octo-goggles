{
    "title": "Suzy and I Ch. 01",
    "pages": [
        "I hope you enjoy the retelling of this story. I considered putting this under the romance heading, but it is between siblings after all. Always remember, love can make us do things we previously believed were not possible. It will also strike without warning or regard.\n\n All characters are fictional and all sexual activities are between grown adults.\n\nSuzy and I: Part 1 (revised)\n\nHi, my name is Luke. I was raised in the seventies and eighties, along with my siblings, by stern but loving parents. They were strongly religious people whom raised us with a strong moral background and integrity. Not being the kind of parents that showed much in the way of outward emotional affection, it was still obvious that they loved us.\n\nI was number three of five children. The eldest was June, a sister, second was my sister Suzy, then me, followed by two brothers, Travis and Rich. There was a four year gap between the two sisters, me and Suzy were ten months apart, four more years till my next brother and then two more years to the last.\n\nWe had a normal family life growing up. There was the usual drama between sisters, brothers fighting now and then, but nobody ever staying angry.\n\nThe only exception was that of Suzy and me. We seemed to have a special relationship. I honestly don't recall a single cross word between us. As with all siblings, the boys had their shared interests, and of course the girls had their own. These activities were not unusual, but common to all childhood experiences, and seldom did our fun as boys intersect with that of the girls. We each had our own circle of friends, and things we liked to do. But when I needed to talk with someone, especially when something was bothering me, Suzy was who I sought out, and I knew Suzy looked for me when she needed to talk. It was common knowledge in our family that the two of us were simpatico. Our mother thought we should have been born twins.\n\nDespite our closeness the two of us were quite different. I was a little bit of a hot head, also impulsive and spontaneous. Suzy on the other hand was thoughtful, deliberative and kind to a fault. As different as we were, we treated each other with a special respect. I'm not sure why that was, at least nothing I could explain to another. But I think our differences balanced each other, and the trust we shared amplified that feeling of balance. It was like we were better people when we were together, than when we were apart.\n\nBecause she was only ten months older than me, my birthday being in August and Suzy's in October, and the fact she was diminutive in size, our parents decided to wait and start her in school when we both were five years old, which put us in the same grade.\n\nSome of my earliest childhood memories were of Suzy and me walking to school. We always walked together, both to and from school. During those walks we would sometimes be joined by friends that we picked up along the way. But always it was Suzy and I.\n\nBy the fifth grade I was much larger than Suzy and certainly stronger. I was a naturally muscled kid. I often helped her if she had a large load of books to deal with, especially through junior high and high school. She started calling me Pack Mule in the seventh grade, much to the consternation of our parents. They believed it was demeaning, but I took it as a badge of honor.\n\n(A quick side note here. Her calling me Pack Mule wasn't the only nickname being used. I had my own name for her, Lil Sis. Due to our size difference I began calling her that just to mess with her, but she actually loved it when I called her that, which took the fun out of it. It quickly turned into a term of endearment and something I only used when we were alone together. I believe that was due to the emotion I would feel behind that name. Those nicknames, by the way, endure to this day.)\n\nI enjoyed my time with her during those walks. She was always easy to talk to, attentive and considerate. Very cathartic. She always treated me as her friend, not as a younger brother.\n\nAll through school, especially elementary, we each had our own set of friends. I had my guy friends and Suzy had her girlfriends. There was very little intermingling of our social circles. We had different classrooms through the elementary grades, with the exception of kindergarten and the fourth grade and we never shared a homeroom in junior high. But through junior high and high school we did find ourselves sharing some classes together. It didn't happen very often, at least not often enough from my point of view. We had an unspoken rule in which we limited our social time together during school hours, as I think we didn't want to appear abnormal or weird. We knew we were close, but we didn't need everyone else knowing just how close we truly were.\n\nIt was the high school years that I loved the most in my youth, and it was because of Suzy. During those years Suzy transformed from a cute girl into a beautiful young woman. Her long mousy brown hair, bright hazel eyes and big mouth with the sculpted lips was just part of her attractiveness. She had a way of pulling you in when talking with you. Her face was animated and her eyes expressive, always positive and uplifting to be around.\n\nDuring our freshman year I began noticing how much attention she was getting from the other boys in school, some of the older classmen even stopping to offer her a ride as we walked to school. She never accepted their offers as this was our time, a time that we both enjoyed, but I sat up and took notice. Even my friends began to comment on her. Nothing crass or disrespectful though. They knew I'd kick their asses. But they would comment on how pretty or cool and nice she was. I actually went on an informational campaign our freshman year to be sure everyone knew that if Suzy was mistreated or hurt in anyway, they'd have to deal with me, and I didn't care who they were. I wasn't a huge kid, but I wasn't to be trifled with either. I was very protective of Suzy, especially during those years. I was also very proud to call her my sister, and for her to call me her brother.\n\nThe connection Suzy and I had strengthened during those high school years. When we'd pass each other in the halls she always had a smile and twinkle in her eye for me, regardless of whom was around. Our routine lunch tables, where we ate with our friends, were in sight of each other and during lunch we were sure to make eye contact and share a smile.\n\nI remember one day, our sophomore year during lunch, Suzy wouldn't look my direction. As I kept looking her way, hoping to catch her attention, I noticed that her friends appeared to be consoling her. I realized her body language showed an indication of distress. Breaking protocol I walked over and asked her what was wrong. She said 'nothing was wrong' and that she'd see me after school. Bullshit! She couldn't hide her hurt from me; her eyes betrayed her, as she knew they would. I pressured her friends for info and finally one, in the face of Suzy's protests, told me what had happened. A boy in one of her classes had been asking her to go out with him and she had turned him down each time. This last time, when she refused, he got in her face and called her some harsh names. One of the girls claimed to witness it. Knowing the boy's name and where I'd probably find him during lunch, I walked off, Suzy pleading with me not to go.\n\nI found him immediately and confronting him, asked him to apologize to Suzy. He decided to call me a few assorted things and push me around instead. He was a junior and a football and baseball player. He had two inches and twenty pounds on me and I was not inclined to tangle with him. That is until he decided to use more choice language concerning Suzy. I remember a feeling washing over me that I'd never known before and promptly attacked him. When it was over, about three minutes, we both were bloody, but I was standing and he was on his hands and knees, whipped. I was promptly sent home with a two week suspension (school wanted expulsion, but I had never been in trouble before) and received a scolding from my parents. I recall my dad having a gleam in his eye.\n\nThat evening in my room, which I was confined to for the time, Suzy came to talk with me, not having seen me since I walked away in the lunch room. Her face turned to shock as she looked at my swollen face for the first time. Her eyes welled up in tears and began running down her cheeks, her expression one of concern and fright. Wiping her tears on her sleeve she sat down next to me, our legs up against one another. She told me how scared she had been, afraid I'd get hurt, and how worried she was once she heard about the fight. I remember vividly how her voice choked up as she spoke and how I sensed her emotion, causing my heart to begin pounding. She touched the swelling on my face tenderly, a look in her eyes I didn't recognize, and thanked me and asked me to never do that again. I promised. She leaned into me and placing a hand on the other side of my face kissed me on the cheek, a soft lingering kiss, which caused my already pounding heart to jack hammer. I can still recall the feeling that swelled up in me with that kiss. It was such a feeling of happiness and joy. A feeling of belonging.\n\nWhen she left my room I stared after her, trying to wrap my head around the emotions I had washing through my body. The only thing I was certain of was how much I wanted her to kiss me again.\n\nOn the day I started school again, the boy, who was also suspended, sought out Suzy and apologized. He then did the same with me at lunch. We never became great friends, but he did become a friend and a fellow baseball team mate the following year. More importantly, Suzy was never disrespected again.\n\nWe always found the time to support each other in our varying high school activities. Suzy would come and watch me play baseball at the school field, both practices and home games. I could hear her yelling every time I went to bat. She was my biggest fan. I attended her tennis matches and swim meets as well. She was a decent tennis player, but swimming was her passion. She was so graceful in the water, and fast. Her speed came from her form and mechanics, and she worked hard on that. I felt it would have been awkward to attend her swim practices, with all those cute girls in their swim suits, especially if my attention was primarily on her. But I never missed any of her home swim meets and I loved watching her compete. She was at home in the water and had a fire in her eyes when competing.\n\nI also admired her body and how she looked. Long slender neck atop wide straight feminine shoulders, moderately sized mounds on her chest, a narrow waist, slender hips and the cutest little round butt. We had a pool growing up and whether she was swimming laps between school competitions or just relaxing in it with her friends I was in attendance. Her tight one piece suit showed off her cute little caboose and perky breasts. It was tough not to be awkward and just relax with her in the pool when my mind was filled with all sorts of lewd thoughts and desires as I studied her girlish figure. I often disgusted myself with such notions, knowing it was wrong to lust after one's own sister.\n\nSuzy was always made to wear a 'suitable' one piece bathing suit by our mother. The school's official suits barely made muster. She really didn't mind the restriction for a time, but as she got older, and her friends began wearing more revealing two piece suits, she became self-conscious. Her body was filling out slowly and she had just the right curves, so I think she wanted to step out a little and let everyone see that she wasn't a kid anymore. That and the fact that she was the only one in her circle of friends still in a one piece.\n\nThe summer between our sophomore and junior year, Suzy and I went with a group of friends to the local pool for the day. They had a high dive and a slide there, something our pool didn't. On the way we stopped at a store and Suzy bought herself a bikini. I had to take an oath to never tell mom about it. Of course she didn't have to ask for my silence, as I relished the idea of seeing her in it, and hopefully, many more times.\n\nWe arrived at the pool, went in and all changed into our suits. I was waiting for Suzy near the woman's locker when she came out. You could see she felt timid and self-conscious about showing so much skin. But she was stunning! She didn't have the biggest tits of our group, but her overall form was flawless. I mean perfect! I think I told her the suit looked nice on her, or something along those lines and that she could relax. She was blushing as she stood next to me, looking about, not sure which direction to go. For a moment I thought she was about to grab onto my arm in an attempt to overcome her nerves. Fortunately her friends all jumped straight in calling for her to join them. She quickly complied and I saw her face relax once she submerged her body, concealing it from prying eyes.\n\nAs the day wore on I could see Suzy becoming confident in showing so much skin as her activity with her friends had her getting in and out of the water regularly. We swam and played, enjoying the immense size of the facility. I took advantage of the high board as Suzy preferred the slide. It was a great time.\n\nI was sitting on a deck chair watching people in the pool and checking out the cute girls, while catching a little sun. Most of my attention though was on one particularly cute girl, Suzy. She was a beautiful sight to behold in that green bikini. Seeing me sitting there alone she motioned for me to come back in. I shook my head and motioned her to come out instead. She cruised to the side of the pool and climbed out. Walking over to me I saw that her bottoms had crawled quite thoroughly into her pussy. She was sporting a pronounced camel toe. Now normally, being a guy, I'd keep my mouth shut and enjoy the view for as long as possible. But I knew immediately how traumatizing this would be for Suzy if she knew others had seen her in this compromised state. I didn't want her to feel that level of discomfort or shame, as I knew she would, so I grabbed the towel from the back of my chair and met her halfway from the pool. She looked at me puzzled as I threw the large beach towel around her shoulders to conceal the wardrobe malfunction. I remember having an impulse to reach down and pull the fabric from between her lips, but wisely I refrained. As we walked to the chairs I told her through tight lips about her predicament. She turned a bright red as she nonchalantly fixed herself before sitting down. She thanked me for my discretion and swore to never wear a bikini again. I never saw her in one again during our remaining years of high school.\n\nWe both graduated with strong grades and I recall the feeling of excitement I had at the ceremony. I had accomplished something significant and had more I wanted to do. I also remember the feelings of gloom and despair that gripped me that evening as I lay in bed looking up at the ceiling. I was letting go of a life I relished and I struggled mightily with the loss.\n\nUnable to sleep I left my bedroom and walked out onto the back patio hoping the fresh air would have a positive effect on me. I couldn't think as my thoughts and emotions were inseparable. Stepping over to the nearest block column I leaned into it with my shoulder looked out over the backyard and pool. What was I going to do now?\n\nI was suddenly startled as I heard the faintest sigh and turned to see a dark figure sitting quietly on the porch swing. It was Suzy.\n\n\"You scared me.\"\n\nWithout a word she stood and with fluid grace closed the distance between us and in the next instant we embraced. With her arms around my chest I felt her small hands clench into fists, twisting my shirt into knots. My arms had encircled her as I brought a hand up to the back of her head holding her tight to me as I smelt her hair, felt her body, experienced her warm breath on my neck. No inappropriate thoughts crossed my mind, no other thoughts other than how much she meant to me. Life wasn't going to be the same from this day forward and I believe we both understood and were mourning the loss. We didn't speak. We simply held each other tightly for what felt like minutes.\n\nHer body relax and become soft and pliable under my grip, her hands releasing their grip and opened to hold be gently. She had been so tense, as if trying to resist something, then suddenly her will had collapsed, as if resigning her fate. A thrill surged through me as I suddenly felt that we were sharing something more than I had thought. What was this? Fear? Remorse? Longing? Desire?\n\nReleasing me abruptly Suzy turned away and headed into the house never speaking a word, but not before I saw the glint of moisture in her eyes as she tried to avoid eye contact. We never spoke of that encounter for there was nothing to be said, and my life continued on with a little less color.\n\n------------------------------------------------------\n\nSuzy went on to work on credits at the local community college and I enrolled in a vocational college. She met a good young man, someone from our church and within a year got married. It felt like their relationship was rushed, but I was happy for her. I remember how beautiful she looked at her wedding and felt that old surge of pride.\n\nI really missed her and our walks.\n\nI was a large man by then, 6'1\", 190 pounds, naturally muscled and lean. I took after my father's side of the family. I knew I wanted to do something in the construction trades as I enjoyed hard work and using my hands. A desk or office environment was not for me. While at school I met a cute little student nurse, Becky, and we began dating. It wasn't long, approximately five months, that she announced to me she was pregnant. We got married with-in two weeks of that. I was nineteen. It wasn't a shotgun wedding, although many thought so. The fact was, I was falling hard for her and knew marriage was in our future anyhow.\n\nSuzy and Becky hit it off immediately. Becky never had a sister, only three brothers that she was not particularly close with. But when she met Suzy, she fell in love with her, which was of no surprise to me. They talked all the time, on the phone, at arranged lunches, emails, texts, you name it. Suzy was always looking for ways to help Becky with her pregnancy. It was heartwarming to see Becky find a friend, or more importantly, a sister she had been missing all her life. That's just how Suzy was with everyone, loving and open, willing and wanting to help.\n\nOne evening as Becky and I were eating dinner, she mentioned she had lunch with Suzy.\n\n\"Oh and how did that go?\" I asked halfhearted, while looking at some school work.\n\n\"It was enlightening to say the least,\" she quipped with a smirk on her face.\n\n\"What did you guys talk about?\" Now I was interested.\n\n\"You\"\n\nI set my papers down and faced her.\n\n\"And what about me did you learn?\" I was smiling, unworried about what she might have been told about me, especially from Suzy.\n\n\"Well, I asked Suzy what you were like growing up. I was looking for some juicy tidbits I could tease you with later, or file away for future use.\" She enjoyed teasing me, so it made sense.\n\n\"Did you get anything?\"\n\n\"No, nothing I can use to embarrass you with. But Suzy did have a lot to say. Once she got going she couldn't stop talking about you. And from everything I was hearing I got a little jealous.\" She was still smiling, so this wasn't going south.\n\n\"What would have to be jealous of? I don't understand.\" I was truly puzzled by that.\n\n\"That I never had a close relationship with any of my brothers. I could see in her face how she feels about you. She really does love you, you know.\"\n\n\"Yea, I know.\"",
        "\"I'm not sure you really do.\" Her face was no longer smiling, but reflective and kind. I became a little uneasy by her sudden change in mood.\n\n\"The things she talked about helped me understand what you two shared. It helped me understand you a bit better as well. I know how much you love her too.\"\n\n\"Do I need to be concerned? I mean, I do love her, but I'm married to you and I love you, very much.\" I must have shown the nervousness I was feeling. She laughed.\n\n\"No, no. That's not where I was going at all!\" She laughed some more, at my discomfort.\n\n\"It only confirmed what I always knew about you, your capacity to love. I know you will always love Suzy, and that will never change. I also know that there is room in your heart for me, and that there will be room for our daughter as well.\"\n\nI almost fell out of my chair as I jumped up to get around the table. I grabbed her hands and lifting her to her feet, wrapped my arms around her as joyous tears began to well up.\n\n\"When did you find out?!\" I nearly shouted from my excitement.\n\n\"Today. Suzy took me to my appointment and we stopped for lunch afterward.\" Becky was grinning ear to ear.\n\n\"I didn't know about this appointment.\"\n\n\"I know. It was meant as a surprise, so I could be the one to tell you. You're happy about it being a girl then?\"\n\n\"I'm ecstatic! A girl! That's wonderful! And everything still looks good, right? Does Suzy know?\"\n\n\"Yes and yes. So actually you were the second person I told. Is that alright?\" She gave a little apologetic smile.\n\n\"Of course it is!\" My heart was pounding. \"We're having a girl! Hot damn! I love you so much it hurts.\" I kissed her rather roughly on the lips.\n\nWe celebrated some more, later in bed. Afterwards, as we lay there nearing sleep, I recalled Becky's remark about Suzy loving me. How I didn't really know. I fell asleep trying to read the sub-text of that statement.\n\nMy life was on a path I was comfortable with and I was looking forward to it. Little did I know that two major events would soon occur that would change my life forever.\n\n---------------------------------------------------------------------\n\nSome months had passed when disturbing news came to the family. We learned that Suzy was infertile. They had been trying to start a family ever since their union but had no success. After seeing a specialist they learned the bad news. My Lil Sis was not going to be a mother. She would have been a fantastic mom, we all knew it, but now.........\n\nI remember seeing her for the first time since learning the news at a family gathering. She strode right up to me, her chin quivering, tears already welling. She wrapped her arms around me as I engulfed her in my arms, holding her tight. She began to sob, loudly and without restraint, and my heart broke as I held her. I felt my shirt becoming wet with her tears as I gently kissed her on the top of her head, shedding tears of my own. I felt that old surge of protectiveness. Looking around at the others in the room I saw all had tears, except Tom, her husband, who looked uncomfortable. After a while Suzy began to get herself under control and released me, stepping back. \"Sorry\", she said quietly, suddenly self-conscious of her display of emotion. I could only smile at her. She walked to the counter and tore off a paper towel to clean her face, then walked over to Tom, and grabbing his arm and leaned into him.\n\nThe family spent the evening together chatting and laughing, giving the one we all loved, our support. I found a brief to opportunity to speak with Suzy.\n\n\"Never feel sorry for leaning on me.\" I quietly said to her. She patted my cheek in a manner that said she knew and thank you.\n\nI noticed that Tom had taken some time to talk with Becky, her glancing at me, giving me a knowing smile. What was going on over there I wondered. I didn't have to wait long. As we were driving home Becky informed me of what was up with Tom.\n\n\"Tom is struggling with his feelings right now,\" Becky jumped right in. I appreciated that in her, but sometimes it knocked me off balance.\n\n\"What's he struggling with?\"\n\n\"He asked me why Suzy would be so brave and together with her recent news, but as soon as she sees you, breaks down and cries, leaning on you for support. He feels like he's second string.\"\n\n\"Yea, I get it. If I try to see it from his side, I think I'd be hurt too. What did you tell him?\"\n\n\"Just that the two of you are close and that will never change. I told him not to worry, because like you, Suzy has a great capacity to love. I told him you two were unique like that.\"\n\n\"I'm sorry if this weirds you out or puts you in an uncomfortable position. I sure don't want Tom feeling like I'm some sort of obstacle for him. I like Tom.\"\n\n\"I've said before, I'm okay with the two of you. You have a lot of history, and I'm not insecure about it. Besides, I also know how you feel about me. You've made it abundantly clear!\", as she patted her round tummy, smiling. I laughed quietly.\n\n\"Good. Do you think it helped him?\"\n\n\"I hope so, but who can say. We all have our problems. It's up to him to confront his. But I hope so.\"\n\nI took her hand and raised it to my lips, kissing it.\n\n\"How did I get so lucky?\"\n\n\"I don't know, but you are a blessed man\" she laughed, a sound I had come to love.\n\n-------------------------------------------------------------------\n\nIt was nearly a month later and being due, Becky went into labor. We were having a girl and I had never been so happy! The delivery seemed to go well and she gave birth to this perfect little creature. As they were cleaning my daughter up the mood in the room suddenly changed. The doctor and nurses began quickly moving about the room, alarm in their faces.\n\n\"Sir, we need you to leave the room please,\" as a nurse took my arm. Looking down at Becky I could see distress in her eyes.\n\n\"Wait, wait! What is going on? What's wrong?!\" I felt panic welling up in me.\n\n\"She's having a problem with bleeding, sir. We need you to leave.\" The nurse still had a hold of my arm.\n\nI felt Becky grab my hand. Looking down I could see she wanted to say something to me. I jerked my arm loose from the nurse and bent down near my wife's face. She had tears in her eyes.\n\n\"Her name is Amber.\"\n\nI nodded weakly, my mind in a fog.\n\n\"Suzy will help you. I want her in our daughter's life. Promise me.\" She was looking weak and out of breath, but her eyes had a fierce determination, looking straight into me. In that look she told me she understood what was going on.\n\n\"Yes, yes.\" I felt the tears falling from my face. I knew deep inside what was going to happen.\n\n\"Thank you for choosing me. I loved you.\"\n\nShe closed her eyes as the bed began to roll away, the nurse pulling my now weak hands from it. I could only look straight down as my wife was rolled from my field of vision and the nurse herded me out. \"I'm sorry\" the nurse said quietly, and left me in a little room next door.\n\nI remember being so happy, then suddenly scared beyond reason. My new daughter was taken to the nursery even before I got to hold her. I sat there thinking about all the 'what now's', my heart pounding.\n\nMy family was out in the large delivery waiting room unaware of what was happening. They saw Amber wheeled into the viewing room and were doing the usual oohing and awing. But Suzy felt something was amiss when I didn't walk proudly out and announce her birth, and sought out the nurses for an update.\n\nI was sat there alone, head in my hands, when I felt an arm slide across my back. My Lil Sis had found me and was there to comfort and give me strength. She just held me in her arms, her head on my back, silent. I sobbed.\n\nA half hour had passed when the doctor came in to inform me that my wife had died. The bleeding could not be stopped in time and she quietly and peacefully succumbed. I sobbed some more.\n\nSuzy stayed with me for a while, then when it was appropriate she left to talk to the family in my stead.\n\nThe rest of the day was a fog. I stayed at the hospital, sleeping on the waiting room couch that night. The following day I received baby care instructions, and late that day Amber was released to my care. My folks and Becky's parents where there all day, which was of comfort, but if it weren't for Suzy coming back that morning to be with me I'd have been lost and hopeless. She drove us home that evening and put my daughter into her crib.\n\n\"Go get cleaned up and lay down. You look exhausted.\" I nodded dully and ambled off to do as instructed.\n\nI next remember waking. It was morning. Sitting up I went straight to Amber's crib, only to find she wasn't there. In a near panic I rushed into the family room. There I found Suzy, Amber in her arms, giving her a bottle. I sat down across from them and just watched. Suzy looked up and smiled, she looked tired, and she also looked calm and serene. As I sat there my mind began to race. What was I going to do now? How could I do this, work and take care of my daughter? And as the thoughts whirled through my head I suddenly knew what to do. Becky had told me what to do. It was staring me in the face.\n\n\"Suzy\" I said waiting till she looked up. \"I need help.\"\n\n\"I know. You don't need to ask. I'll do whatever you need.\" I nodded, expressionless. I was still numb.\n\nAmber finished her bottle and Suzy patted her gently till she burped. Suzy's face was that of an angel as she handled me my baby girl.\n\n\"Take her. Hold your daughter.\"\n\nShe laid Amber into my arms, the first time I'd touched her. Looking into her tiny face I began to cry as a myriad of emotions overwhelmed me. Suzy sat next to me and once again held me in her arms.\n\n\"The last thing Becky said to me was to give me her name. It's Amber, your middle name. She wants you involved in her life.\" I was looking into my daughter's face as I spoke.\n\n\"I'm not going anywhere,\" was her reply.\n\n----------------------------------------------------------\n\nMy in-laws graciously took care of the funeral arrangements and we buried my lovely wife the following week. They didn't stay long and headed back out of state to their home.\n\nThe days turned into weeks, the weeks into months. Soon it had been nearly two years since Amber's birth. During this time my heart healed and life had taken on a routine. Most week days I dropped Amber off to her aunt Suzy's home and went to work. Some days Suzy came over early to my place and stayed at my place for the day. It just depended on the day's events. I was working for an electrical contractor at the time and began my days early. Suzy worked from home for a title company and as long as she had access to a phone, fax and computer, could work anywhere.\n\nNow typically I took Amber to Suzy's place about sixty percent of the time, but recently she was spending more time at my place rather than being at her own home. I asked her about that one day and she explained that it was just easier taking care of Amber here. She slept better in her own bed and most of the things she needed were here, making for less things to move from place to place. That actually made sense, so I gave it no further thought. Then one evening she stayed much later than usual. I could see Suzy was looking stressed and not her happy self. She told me she was feeling very tired and didn't want to make the drive home and asked if she could stay the night. I didn't want to pry, but it was obvious something was amiss.\n\n\"What is going on? Is Tom okay with this?\" I looked at her questioning.\n\n\"Oh sure, he'll be fine. He's okay with it.\"\n\nI could see the lie in her eyes, so I pressed the matter.\n\n\"What's really going on? I can tell you're not being honest with me. Spill it.\" I saw her face, knew it was not going to be good.\n\n\"I just don't want to go home tonight. Is that okay?\" It was, but I needed more.\n\n\"You can stay, but I want to know what's going on. Are you and Tom having problems?\" She was looking down at the floor now, nodding slightly.\n\n\"Is he hurting you?\" I could feel the blood rushing into my head.\n\n\"No...No. It's nothing like that. He hasn't hit me. We've just been fighting a lot lately.\" I was watching her closely and could tell she was being truthful.\n\n\"May I know what about?\" My blood pressure began slowly dropping back down.\n\n\"He's just frustrated about not having kids of our own. Work is also stressing him. He's just struggling.\"\n\nShe was trying to minimize the problem, I knew her well enough.\n\n\"Suzy\" I waited till she looked back up at me.\n\n\"Is Amber being at your place causing problems? I've noticed how you're spending more time here lately.\"\n\n\"I just didn't want him seeing me taking care of someone else's child all the time. It's just a constant reminder. I know it's hard on him.\"\n\n\"Not just him. You don't need to shoulder the blame you know.\"\n\nI instantly regretted saying that as her face screwed up and she began to cry. I reached for her and pulled her to me, wanting to sooth her pain. She put her arms around my chest and cried. I felt that old surge once again, a surge of love and protection. This was my Lil Sis and I didn't like her feeling such sorrow.\n\n\"How bad is it? And give me the truth.\" I impulsively kissed the top of her head.\n\n\"I don't want to go home. He says things that cut. I try to understand his struggle but I'm tired of being the blame. I'm just tired.\"\n\n\"Do you want to take a break? I could find someone else for a while if that will help.\"\n\nHer face shot up, looking at me, eyes wet and panicked.\n\n\"No!\" she nearly shouted. She paused, taking a deep breath.\n\n\"No, please, that won't help. I couldn't bear not being with her. She is the best thing going on in my life. I love her so much\", she nearly wailed. I could see the desperation in her face.\n\n\"I'm sorry,\" she added.\n\n\"I have no right to say that. She's not mine to....to.....\n\nShe buried her face into my chest again and sobbed, unable to finish her thought. Like a clap of thunder I understood how she felt. I knew what Amber was to her. Suzy was the first person to hold her, the first in our family to welcome her into life. Amber's first words were for Suzy. Her first steps were toward Suzy. By all measures Suzy was her mom.\n\n\"You're her...mom. I know how that sounds, like I'm saying what I think you want to hear. But there is no other word to describe your relationship with Amber.\"\n\nHer sobbing picked up in intensity. I just stood there, holding her tight, wanting her to be happy and feeling useless.\n\nAfter what felt like minutes she began to relax. I sat her down on the couch and walked into the kitchen and grabbed some paper towels for her. She wiped her eyes and cleaned her face, and sat there slumping slightly. Sitting down next to her I put my hand on her leg.\n\n\"What are we going to do?\" I asked.\n\nShe shrugged, not answering.\n\n\"You can have my bed tonight, I'll sleep out here. Okay?\" She nodded.\n\n\"When you're ready to talk about Tom, I'm here to help, alright?\"\n\nI started to rise, but she quickly grabbed my arm and gently pulled me back down next to her. She leaned into me and I put my arm around her.\n\n\"I think I need to divorce Tom.\" She stated quietly, flatly.\n\n---------------------------------------------------------\n\nThe next several months' things were busy around the apartment. Suzy had moved in. We made space in Amber's room for a twin bed for Suzy as she insisted I keep my bed, and I wasn't going to put her on the couch. Then the divorce filing began along with the usual negotiations. Tom was actually quite descent about it and cooperated which made it simple, quick and far less expensive. Basically Tom kept the house and gave a onetime cash settlement and payed off her car. It was all amicable. During this I took the time to do some legal filings of my own. I drafted a will which gave Suzy everything I owned and control of my life insurance pay out. I knew Amber would be taken care of by her. In the event we both went at the same time, Amber got it all, in a trust, and my younger brother was executor when he turned eighteen, which was very soon. I also filed documents naming Suzy as Amber's guardian in my absence. I remember the day when the final divorce papers were delivered to the apartment. I stood behind her as she read them over for the last time before signing. Being satisfied she looked up at me.\n\n\"This is it. I'm going to be available again.\" she said with a twinkle in her eye.\n\nI smiled down at her.\n\nShe signed the papers in all the right spots, and as she signed the last sheet I dropped my papers in front of her.\n\n\"You're not done. You need to sign these too.\"\n\n\"What's this?\" looking back up at me quizzically.\n\n\"These assure me that you remain in our lives, if you're willing.\"\n\nShe looked back at the papers and scanned through the several pages. I could see her visibly trembling as she finished. Looking back up there were tears welling in her eyes as I nodded to her with a grin on my face. She shot up out of her chair and threw her arms around me, and not around my chest. With arms around my neck she pressed her body fully into me and for the first time kissed me full on the lips. It was a quick kiss, but firm and joyful. I had instinctively wrapped my arms around her and pulled her tight to me, feeling her firm body, aware of her mound pressing into my thigh, my hand pressed into the side of one of her compressed breasts. She clung onto me for a moment and whispered 'thank you' in my ear. Then looking into her hazel eyes I saw her blush as she released her hold of me and slid off. Sitting back down she quickly, with shaking hands signed where needed.\n\n\"Now what?\" she said, her eyes bright with excitement, looking to begin a new segment of her life.\n\n\"Now we take all this and file it with the courts tomorrow. You'll need to appear before a judge for the guardianship, so we can make that appointment too.\"\n\n\"I mean what now for us? I want to remain in Amber's life.......and yours. But I can't stay living in her room. So what do we do now?\"\n\n\"I think we should start looking for a house. I have money saved and you're getting a nice settlement. How do you feel about getting a place together? It would save us both a lot of money in the long run and would make things very easy.\"\n\n\"That sounds good, but what about when one of us finds someone else?\" Her voice was slightly hushed, almost nervous.\n\n\"How do we handle that?\"\n\n\"We'll figure it out. I don't want to stall trying to dot all the I s and crossing all the T s. Let's go looking and we can decide that stuff as we go. Yes?\"\n\nShe nodded, still seeming nervous.\n\nI went to bed that night with the memory of that kiss fresh in my mind. Her lips were softer and fuller than I expected. And her body felt amazing! It was tight and firm, yet soft. When she'd hugged me before I never really felt her like that. She always kept her body away from me, in the proper manner, as a sibling would. She also still dressed modestly, loose fitting clothing, as if trying to hide her shape. But I could feel what she was like under her clothing. And it excited me! I began to recall the summer days during high school, watching her as a young girl in her swim suit. I felt my cock stiffening as I replayed the feel of her in my arms, the firmness of her breasts, her body tight under my hands, the touch of her lips. I took hold of my member and satisfied myself with thoughts of my sister in my head. Immediately afterward I felt shame. This was Suzy, my sister! What had gotten into me?\n\n----------------------------------------------------------------\n\nIn the following months we found a modest three bedroom two bath home in an older neighborhood at the end of a cull-d-sac. It would require some work, but it had good bones. It was on the other end of town from our folks and in an area new to us. We had decided to put the house in both our names, so in the event that one of us met someone, the one remaining had the option to buy out the other or sell their share. We opened a joint bank account which we both contributed to in equal amounts to provide for all the expenses of a home. It was a great system, and over time we could see a large surplus developing for emergencies. I recall how the bank had treated us like a married couple when we opened that account. Suzy had gone back to using her maiden name and naturally they assumed our status. Suzy and I had looked at each other at one point, and without words, agreed to leave it be.",
        "I gave Suzy the master bedroom and Amber's room was right across the hall. I took the bedroom at the end of the hall, a good sized room and in a position to have a small bath added on. I had a lot of work to do to make this place a home for us to be proud of. I wasted no time and every weekend and a lot of week days I spent fixing, upgrading and remodeling our home. It was a labor of love and I enjoyed it, most of the time.\n\nOnce again the days turned into weeks, and weeks into months. Soon a year had passed then another. During this time I managed to complete everything I had planned for our home. It was wonderful! Suzy was a great help, not afraid to get dirty, and was supportive and grateful for all my hard work. She made the house a home with her caring and loving manner. Over this period of time I found myself getting more and more excited to get home. I loved to see how Amber had grown each day. I also found myself excited to see Suzy at the end of each day. She was such a soothing and pleasant presence in our home.\n\nOur life together was one of love, caring, activities and fun. We spent time together, going out and enjoying ourselves. Whether we went to a museum or to the movies, a restaurant or shopping at the mall, on a road trip or camping, we enjoyed spending time together. She was my best friend and I trusted her more than anyone in my life. The emotional intimacy we shared was pure and natural. Knowing you could go to a person and share anything without reservation was a source of much happiness and joy. In truth though, there was one thing in my life I could not share with her, something I couldn't share with anyone. It was a thing I kept buried deep within me.\n\nBecky's parents stayed in touch over the years, sending Amber cute post cards and emails expressing love. They often offered me financial support in raising Amber. I always refused but made sure they knew how much I appreciated them. They never called Amber on her birthday, but sent a card with a check instead. I think the joy of that day was forever tarnished for them. I understood, as I had my own struggle with conflicting feelings.\n\nAnother year passed and Amber was to start school. She was terribly bright and had quite the wit, something she got from her mother. As she got older and became more situationally aware, we made sure she understood that Suzy was her aunt, my sister. We helped her understand the story of our lives up to this point and about our decisions. She knew how much we loved her and I didn't make the mistake my parents had made, and showed Amber my affection for her. Suzy was even more loving in her manner towards both Amber and me. She was always like that; it was just her nature so it came easy for her. Amber insisted on calling Suzy mom, even after it was clear she understood the reality. Suzy didn't discourage it, but was careful to be sure Amber understood who her mother actually was. Amber took it all in stride, and was happy knowing her family loved her, and that after all, was all that mattered.\n\nOn her first day of school, I drove the two of them to Amber's school. I remembered them getting out of the car, Amber calling out \"bye dad\" over her shoulder, while grabbing Suzy's hand and dragging her toward the school. I watched, leaning back on the hood of the car, as they stood at the door to her classroom. Suzy knelt down as Amber's arms went around her neck. I could see Suzy saying something to her, she then kissed her and Amber went into the classroom, not looking back. When Suzy walked back to the car, tears were running down her face. Walking straight up to me she put her arms around my neck and leaned into me. Putting my arms around her I was flooded with such a feeling of happiness and belonging.\n\n\"I love her so much,\" was all she said. I whispered back, \"Me too.\"\n\nShe took a deep breath, sighing, her breasts pushing firmly into me. Another wave of emotion rolled through my body, as a sudden intense attraction for her came over me, taking me off guard. I became intensely aware of her body under my hands, of every portion of her that was touching me. I felt conflicted and didn't want to release her. She pulled away just then and I felt suddenly awkward. Looking down at her I noticed the blush in her cheeks. I batted away the impulse to pull her back to me and share with her what was running through my mind. All I wanted was to kiss that beautiful face and hold that firm body. Instead, I helped her into the car and drove us home. All the rest of that day I wrestled with the one thought that continued to torment me, I was in love with Suzy. Not a love for my sister, though that was there, and not the lust I'd been feeling for her, but genuine love. Nothing in this world gave me greater happiness and joy than to be with her, around her, sharing everything in my life with her. I was madly in love with my sister.\n\n--------------------------------------------------------\n\nOur life together was wonderful. Our home was always clean and inviting, and Suzy was so happy and delightful to have around. A great homemaker, she loved doing it. I had started my own business as well, an electrical contractor, using the contacts I had made over the previous years. I loved my work and each day I looked forward to going home.\n\nI also became aware with the way Suzy was changing too. She seemed to find reasons to be near me, to touch my arm or hand, to sit next to me while lounging on the couch. We sometimes massaged each other's feet while watching TV in the evenings, taking turns. I found myself walking up behind her when she was busy in the kitchen, grabbing her by the shoulders or waist to kiss the back of her head as I expressed appreciation for a dinner she made or a favor she had performed for me. Maybe it seemed like little things, things which on the face seemed insignificant. But taken as a whole, it showed signs of a growing affection between the two of us.\n\nMy contracting business had really taken off within the first year. I had spent a lot of my personal savings to grow the business and use as capital. But it was easy to see that the monetary return was going to be quick and healthy. I had a three man crew and we stayed busy wiring custom homes. I always talked business with Suzy each evening. She seemed to love it when I shared my day with her. I also enjoyed her input and thoughts. One evening we were doing just that, talking shop when Suzy interjected an idea.\n\n\"Have you thought about me making you a lunch every day, instead of just eating the nearest junk food?\"\n\n\"You're not getting any younger and eating garbage every day is going to catch up to you, you know\" she added, patting me on the stomach.\n\nI looked down at my gut, which was sticking out a little due to my being slouched on the couch. I didn't have wash board abs, but I was in good shape.\n\n\"If you would like, I think that'd be nice. I am getting tired of most places, except Panda. I could eat there almost every day I think.\"\n\n\"Yea, yea, I know. Let me make you lunch then and cut back on Panda as well. It'll save you money.\"\n\nI could see she had thought about it and was definitely interested in doing this for me.\n\n\"Want to start Monday then?\" I asked. It was the week end. She nodded.\n\n\"Take me to the store and I'll stock up on the things you like. I kind of already know what that is, but you could give me other ideas.\"\n\nSo we headed to the local Walmart with Amber and did some shopping. I bought myself a nice lunch cooler and Suzy picked up an assortment of containers. She said that she was not going to just give me sandwiches, but mix it up quite a bit. That sure sounded good to me.\n\nThe lunches I got were great! I sometimes got a sandwich with fresh condiments to add, other times a salad full of meats. A rice dinner, a deboned full chicken leg, the variety was wonderful. On the first day of my new lunches I found a note. It read, 'Thank you for all you have done for me. Lil Sis.'\n\nI got home that afternoon and sought her out. I gave her a hug, kissed her forehead and let her know that I could never repay her for what she had done for me. I remember how she gripped me tighter when I shared my appreciation for her, burying her face into my chest. We stood there for a moment and I smelled her hair, its fragrance arousing. Her eyes were wet when we separated, and laughing, she wiped them dry.\n\n\"Silly me, I get too emotional sometimes.\" She was smiling, the happiness she felt all too plain.\n\nI found other notes in my lunch box from time to time, cute little notes of encouragement or appreciation. One of my hands had noticed the notes and was already interested with what I had to eat each day. He was older than I by about 15 years and was also bringing lunch from home, while the other guys went off to buy it. Bob, his name was, would ask me to read him the notes if I was comfortable with it. I always did, but made sure to leave out the 'Lil Sis' at the end of each one. I think I did that because it was obvious from the comments Bob had made that he assumed my wife was responsible and I had never corrected him. I felt that maybe it was a little too intimate to have my sister doing all this for me and didn't want to explain it to him.\n\nAfter about four months of this, Suzy asked me one night if she could bring me my lunch the next day, as she was doing something that would be best if it was as fresh as possible. At first I didn't have a problem with that and gave her the directions to the job site. Then it occurred to me what Bob thought of our relationship.\n\n\"Uh, Suzy\" She looked at me. \"I need to tell you something. Thing is, Bob is under the impression that you're my wife.\"\n\nHer eyebrows arched up.\n\n\"Oh really? And why is that?\"\n\n\"I don't know. I guess he assumed as much and I never set him straight. That's all.\" I wasn't sure if this would bother her or not.\n\n\"Why haven't you told him? Are you ashamed of your Lil Sis?\" making a pouty face like she was wounded.\n\n\"No! Quit that!\"\n\nHer face went somber and her eyes wide. She was kidding me but the accusation, even in jest, got my dander up. I took a deep breath.\n\n\"Sorry, I.....I don't.......I'm not sure why I didn't tell him. I guess I didn't want to explain our relationship to someone.\"\n\nIt suddenly felt like I was ashamed of our unorthodox relationship and I could only look down at my hands, unable to meet her gaze. She slid over closer to me and put her small hands on mine.\n\n\"It's okay. I understand. I actually know how you feel. I have a friend at the yoga studio that has the same misunderstanding about you. We talk and I never told her that you're my brother. So it's okay. We just have a complicated partnership. I mean it may be complicated looking at it from the outside, but being with you the way we are, its simple and wonderful. At least that's how I feel.\"\n\nShe gave me a light kiss on the cheek.\n\n\"I don't have to bring you lunch if you'd rather I not\" she added.\n\nI looked at her, her face filled with love and understanding.\n\n\"No, please do. I'd love for the guys to meet you, actually. How could I not. I'm sorry. I'm overthinking it\" I said, feeling strange, my heart pounding.\n\n\"You are such a good man\" she said as she stood and went to get ready for bed. Suddenly she stopped at the hallway.\n\n\"Amber's going to want to see her dad at work. Will that be okay?\"\n\n\"That's cool. Job is safe enough and it's just us there.\"\n\nShe nodded with a smile and went to her room. I remained there, taking a deep breath, trying to slow my thumping heart.\n\nThe next day, right on time, Suzy pulled up to the job. She got out of the car with my cooler in hand and opened the door, letting Amber out. Taking Amber's hand she walked up the driveway and into the garage where I was standing. Bob had already settled down for lunch.\n\n\"Daddy!\" Amber screeched as she came running up to me to throw her arms around my neck for a hug.\n\n\"Hi honey\" I kissed her face then stood as Suzy approached.\n\n\"Hi\" Suzy said as I stepped toward her, leaned in and gave her a quick peck on the lips.\n\nI shocked myself with that purely impulsive move. It seemed so natural and easy. Her eyes went a little wide as she blushed lightly.\n\n\"Bob, this is Suzy, and this little monster is our Amber,\" I said keeping my composure.\n\nBob nodded towards them and said hello. We sat on a couple of cinder blocks I had found for this purpose as Amber explored the new house.\n\n\"Is she going to be okay?\" Suzy asked, looking at where she was going.\n\n\"Sure, she won't find any trouble in here\" Bob quipped.\n\nHe seemed to have a tough time not staring at Suzy. I certainly understood. Suzy was wearing a cute sun dress and matching pumps, simple but beautiful. She always dressed nice when she went anywhere. She was a modest dresser and never showy or provocative. She was raised like me, to be conservative and proper. It was that now, her clothes fit her better.\n\nWe ate lunch with a light conversation, Suzy finding out all about Bob, even thanking him for being such a good man on my crew. Bob was taken back by that remark until Suzy explained that we talked about my business every day. He just nodded and I could see him smiling to himself. When it was time for them to leave, Suzy and Amber said they're good byes. Suzy stepped up to me and put her hands around my back as I instinctively took her by the shoulders, and she gave me a full lipped kiss, soft and wonderful.\n\n\"That was for show\" she whispered in my ear.\n\nI could see a mischievous grin on her face as she turned to leave. As they pulled away I found myself, flat footed, staring after them, still feeling her lips on mine. My heart was pounding. She shouldn't have done that. I immediately began the difficult process of forcing my emotions back into the box that I kept them locked in.\n\n\"You really do have a beautiful family. You're a lucky man\" I heard Bob saying behind me. Pulling myself back to reality I turned around to retrieve my tool pouches.\n\n\"Thanks. They are quite the pair.\"\n\nI struggled with my thoughts the rest of the day and finally got my feelings pushed back down before going home. I wished she hadn't done that. It was hard enough for me.\n\nSuzy continued to bring me my lunch on occasion, if I was close enough to home and the job site was safe for Amber or herself. And she would still kiss me as a wife would kiss her husband when others where present, but she always made it a quick little peck on the cheek from then on. I believe that maybe she understood my discomfort and decided not to do that to me anymore. We never actually talked about it; I just think she kind of knew.\n\nOver time I had become skilled at controlling my feelings for Suzy. I had a lot of practice and no viable option. The risk of confessing my true feelings for her were too great. I knew she loved me, but probably not the same way I loved her. We were the greatest of friends, sharing everything, having total trust and confidence in our safety with one another. But I could lose everything if I acted impulsively. I had to keep my desire for her tamped down and under control.\n\nAlong with the realization of my feelings for Suzy, came a feeling of shame. Or maybe it was better to describe it as confusion. I had many a conflicted thought as I would lie in bed before sleep overcame me. I desperately wanted to take her in my arms, tell her how I felt. I was also terrified to cause her discomfort or make things awkward. Always I came to the same conclusion, just leave it alone. Enjoy her being in your life and work to make her happy. Making her happy was the only safe way to show her how you feel. Don't do anything stupid.\n\n----------------------------------------------------------------\n\nAfter Amber started school Suzy's clothing choices began to change. Disappearing were the baggy pants and blouses, to be replaced with form fitting attire. She wore more dresses and started wearing shorts for the first time. Not shorty shorts, but appropriate for her age. I noticed what nice legs she had, not that I hadn't seen them before now, it's just I was seeing more of her legs more often. I no longer saw the cute straight legs of a teenage girl, but the long graceful legs of a woman.\n\nShe took yoga a couple days a week and sometimes wore her yoga pants throughout the day. I noticed what an amazing butt she had, cheeks small and round. And her thigh gap was just right. I was amazed at how sexy she actually was, as I would watch her whenever she walked away. There were a lot of things I was noticing about her that I hadn't before. I was seeing her in a different light and I attributed this to the fact that I believe she was seeing herself in a different light as well. I didn't know what would have sparked her renaissance; I only knew I'd never seen her so happy, like on a whole new level. I also saw and felt how important she was to my daughter, Amber. They adored each other.\n\nI often thought of Suzy throughout my day. Nothing specific, just visualizing her face, her smiling eyes, her delicate mouth. If I dwelt too long on her I often found my heart thumping, sometimes standing motionless with a stupid grin on my face. Bob caught me in one such situation, asking me what was so funny. I don't recall what I offered to him in a way of explanation.\n\nI oft got so excited on my way home, excited that I would see her, knowing she would be there, that the commute home was agonizingly long. The sheer fact I was heading home to see her made that simple exercise a joyous occasion, one often filled with impatience. I could barely wait to see her!\n\nOur affection for each other was becoming more physical, meaning our level of physical contact was more comfortable and natural. There was no awkwardness in simple contact or being in close proximity to one another. At times she would cuddle up to me on the couch late at night, or lay her head in my lap looking for a head rub, sometimes falling asleep before bed. On such occasions, as she slept, I would often smell her hair, a wondrous aroma that aroused me. I had taken to wearing boxer briefs under my evening lounge pants. I found that I could be aroused, although unintentionally, too easily by Suzy. Sometimes I would tuck my penis in between my legs before sitting down not knowing if Suzy was going to cuddle up or lie in my lap. I didn't want my erection jabbing her in the ear, now did I.\n\nWhen we went out together for the evening or any special event Suzy was sure to hold my hand or my arm. She said it made her feel safe, and I guess I could understand that. After all, I was the only man in her life. All these little actions could be attributed to sibling love and just being comfortable with your best friend. But there were a few instances that calling it sibling love was a stretch.\n\nOne evening we were all sat at the bar. Suzy and Amber were preparing themselves for bed while I did my paper work. Amber was brushing out Suzy's hair, who was sitting next to me, facing me. Both had long silky hair that reached the middle of their backs. We had been talking during the grooming. When Amber finished they turned their stools and Suzy proceeded to brush Amber's hair. I watched them amused, as this was a nightly ritual.\n\n\"You two are like a couple of monkeys, preening each other.\" I exclaimed.\n\n\"Dad!\" Amber screeched.\n\nSuzy slowly turned back toward me, amusement in her eyes.\n\n\"You got some nerve on you! Why do you think we do this?\" she asked, looking for playful banter.\n\n\"You mean it's not because your monkeys?\" I asked in disbelief.\n\n\"Mom, make him stop saying we're monkeys!\" Amber jabbed, looking around Suzy at me, glaring. I couldn't help but laugh.\n\n\"Do you know why we do this every night?\" Suzy asked.\n\n\"Not to remove parasites I take it\" I said having fun.\n\nSuzy's face was glaring with affection.",
        "\"Certainly not! Feel your daughter's hair\" she commanded.\n\nI reach around and ran my fingers through Amber's hair which she had offered to me.\n\n\"Now feel my hair,\" she demanded as she spun her chair.\n\nI put my fingers into her hair and slowly dragged them through. It was silk. I felt a quickening of my heart. I put my fingers in a second time and as I neared the end, and forgetting myself, lifted her hair to my face and smelled its wonderful fragrance. Feeling her hair being pulled oddly, Suzy turned her head and looked at me. We made eye contact and I saw her blush as I felt my own face grow hot. I turned back to my work quickly commenting on how smooth their hair felt.\n\n\"That's why we paw each other like monkeys, thank you very much!\" she laughed. Such a lovely sound.\n\n\"Yea\" Amber reinforced her mom.\n\nI chuckled.\n\nSuzy placed the band in Amber's hair giving her a pony tail, and then did the same for herself, also a ritual. Suzy then placed her hand gently on my back and I turned to look at her. She was holding her hair across her face, her eyes laughing.\n\n\"It does smell nice, doesn't it?\"\n\nI felt my face redden again. She then left with Amber in tow, headed for bed. I couldn't think of anything to say so I shouted out after her.\n\n\"Brat!\"\n\nI heard Amber giggle and Suzy's musical laugh.\n\n\"I embarrassed you. I'm sorry. I was just having fun at your expense of course,\" she said sitting next to me, having come back from Amber's room.\n\n\"You're a miscreant, you know that?\" I said. She leaned into me and agreed.\n\n\"You almost done?\" she asked.\n\n\"No, but it's nothing that can't wait. What is it?\"\n\nShe took my hand and led me to the couch. She sat me down at the end then lying down, put her head in my lap, looking out across the room.\n\n\"Can I ask you a difficult question?\"\n\nI suddenly felt uneasy. Did she know how I really felt about her?\n\n\"Sure.\"\n\n\"Do you plan to look for someone? You know a wife. Someone to go through life with.\"\n\n\"I haven't thought about it. I've been happy the way things are. Why would you ask that?\"\n\n\"You're a nice looking man and deserve someone that you can be with.\"\n\n\"I'm with you.\"\n\n\"I don't mean like that. You know what I mean,\" she said, sounding almost angry.\n\nI put my fingers into her hair, lightly massaging her scalp.\n\n\"I know, but it's not just about me. Amber needs you. I'm happy being with you, even in this unusual circumstance. Are you not happy?\"\n\n\"I am, almost too happy. I just don't want you putting your entire life on hold for me. You'll never lose me no matter what the future has is store. I just want you to know that it's okay to go looking.\"\n\nShe sounded melancholy, almost reflective, as if she were looking back at her decisions in life.\n\n\"Same goes for you, you know.\"\n\n\"I know. I'm just unable to find any interest in it\", she replied.\n\n\"Same goes for me, so drop it?\"\n\n\"Dropped\" she said with resignation, getting sleepy as I rubbed her head.\n\n\"You make me happy, Pack Mule. Thank you,\" she quietly said, eyes closed.\n\n\"You make me happy as well Lil Sis,\" I whispered back as I leaned down and kissed the side of her head.\n\nShe smiled lightly and sighed, exhaling through her nose. Moments later she was asleep. I lifted her hair to my face, felt its silkiness and breathed in its fragrance, like I had done so many times before.\n\n--------------------------------------------------------------\n\nWe had been together now for five years and Amber was now in the second grade. I was twenty seven and Suzy was twenty eight. To any casual observer we appeared as husband and wife, as we went through all the same routines of normal married life. I went shopping with her, we took Amber to movies, went out to eat on occasion. I'm not sure if anyone even knew the truth, even the school. I couldn't recall filling out any papers showing Amber having only one parent. And Suzy actually was the one who dealt with the school matters. Amber also continued to call her mom, which Suzy loved. On top of that, Suzy had gone back to her maiden name a long time ago, so I don't think anyone knew outside our immediate family. Our brothers and sister seemed to understand our strange living situation and were supportive, though I think our parents probably didn't talk about it with their friends. To them we were walking a dangerous line.\n\nSuzy and I had decided to invest in a swimming pool after some discussion. We wanted Amber to grow up swimming like we had and it would improve our health as well. Wouldn't hurt our property value either. Being at the back of a cull-d-sac so we had a nice pie shaped lot with plenty of room, so getting with a pool company, I designed a long rectangular pool with a board on one end that would be great for swimming laps. We also had a solar heater installed to extend the swimming season into the colder months. It was fantastic! I knew how much Suzy loved to swim, and I wanted to give her that. I also wanted to get Suzy into a swim suit once again.\n\nThe pool was finished on schedule and we began filling it. It took almost two days to fill and once it was I fired up the pumps, turning on the heat circulation to warm it faster. I could hardly wait! It turned out Suzy was just as excited as I, and Amber was beyond controlling herself. She stuck her foot in every time she had a chance, waiting for the water to warm up. I knew it was going to take a couple more days so we took the opportunity to go swim suit shopping. I went and quickly picked out a pair of trunks while Suzy took Amber to find her something. I found them just as they settled on one for Amber.\n\n\"Okay Suzy, what are we looking for?\"\n\nI was keenly interested and wanted to know what I'd be seeing.\n\n\"A nice one piece I'm thinking.\"\n\nI must have shown a sign of disappointment in my face because Suzy flashed me a look of surprise. At least I interpreted it as surprise. She found a simple white one piece with higher than normal legs cuts and a very low back. A very sexy one piece I thought to myself. This will be cool.\n\nThe following day, after work, I got home and went straight out to check the pool. Close enough!\n\n\"Who's ready to go swimming?\" I yelled back at the house.\n\nI heard Amber screech her answer from somewhere inside.\n\nWalking into the house I headed back toward my room and saw Suzy just as she was closing her door.\n\n\"Take Amber in will you. I'll be there shortly.\" she said as she closed the door, her eyes bright and mischievous.\n\nWhat was that about, I thought as I went to my room and donned the trunks.\n\nAmber was standing at the gate when I got outside, hopping up and down. I went over the rules with her once again before I opened the gate and escorted her inside.\n\nI was sitting on the steps watching Amber walking around the shallow end when I heard the gate open as Suzy came up from behind. Turning I saw she had on a white pool robe. I didn't remember her getting that. She was grinning broadly as she pulled the bow and opened her robe, letting it fall to the ground. Holy shit! This wasn't the one piece! She stood there in a dark blue bikini. It was very tasteful, with comfortable shoulder straps and a decent amount of material on the bottom. She held her arms out from her sides and turned, looking for my approval.\n\n\"Suzy, that's.......that's uh,\" I gulped, \"really nice.\" My cock jumped in my pants. \"Where did the other one go?\" as I continued staring.\n\n\"It's in my room, for when we have guests. This is just for us. So you like it?\" she asked, trying to gauge my reaction.\n\n\"Oh yes, very much. It's certainly a different look for you. It's very daring.\"\n\nI was imagining what her ass would feel like in my hands.\n\n\"That's what I was going for. So mission accomplished then?\"\n\nNow I was noticing that her breasts appeared bigger than I thought, perhaps from so much exposure? They bulged out the top of her cups, proud and round.\n\n\"You knocked it out of the park! Wow! You're very well......,\" I felt myself blushing, \"put together.\"\n\nShe laughed at my sudden discomfort.\n\n\"Thank you. I've always thought so,\" she giggled as she sat down next to me.\n\n\"So, how is our little girl doing?\"\n\nI had forgotten about Amber! Damn!\n\n\"She's waiting for mom to give her swimming lessons.\"\n\nI blushed again. It was the first time I had referred to Suzy as mom openly. She flashed her eyes at me, a loving twinkle, with a smile on her lips.\n\n\"Thank you,\" she whispered as she leaned over and kissed my cheek. I could feel the top of her bared breast touching my arm.\n\nShe stood and stepped down into the pool. Amber came to her, eyes wide.\n\n\"Wow mom! You really look good!\"\n\n\"Why thank you. Now, let's teach you to swim.\"\n\nI spent the rest of the evening watching Suzy teach Amber the basics of swimming. I was always amazed at her beauty and grace. And in the swimming pool, in her element, she was in a league of her own. We spent a lot of time at the pool as a family. It was natural for both Suzy and I, as we grew up with a pool as children. Suzy became comfortable in her new suit and even occasionally cooked dinner, if we stayed too late in the pool, wearing it with a towel wrapped around her waist. I struggled with the thoughts I was having of her. I wanted to take her in my arms, to tell her how I felt, to kiss her, to feel her body against mine. To act on such an impulse would be too risky, even hazardous. It could drive her away in discomfort, or make things awkward, ruining what we now had. I needed her and so did Amber. So I kept my emotions locked away, wishing for what could not be.\n\n--------------------------------------------------------------\n\nYears continued to roll on. I had grown accustom to her new look and I was able to rein in my sexual desires for her, if not my affection. I knew I was in love with her. But what was I to do? Did she feel the same? And what if she did, then what? We were siblings, raising a young lady. How do we explain something like that to her? What would a future for us look like? How would we deal with the family? The risk was too great. I could lose it all, I could lose her, and I could lose my happiness. At the very least I had to wait till Amber was grown and gone, and then maybe I'd take the chance. Maybe.\n\nSuzy continued to sit close to me and affectionate incidental contact was normal. In all aspects we were married, except for the sex.\n\nAmber was now in the eighth grade. She was growing into a beauty. It amazed me at how similar the two looked. Both had the same oval shaped face, sculpted lips and large bright eyes. Suzy's eyes were hazel and Amber's were green. Their hair color was also very similar; Amber's was just a little redder. They had the same elvish ears that stuck out a little too much with no lobes. And their body types were similar, but I believe Amber was going to be taller. They looked like mother and daughter.\n\nSuzy did wonders for her confidence, her self-image and her swimming. Amber was fast. Suzy also continued to swim religiously and it showed. She had a beautiful body, one suited to a woman much younger. She also took care of her skin, never going out without sunblock, always with her cute sun hat. If Amber wasn't around to apply the lotion to her back I was recruited. The first few times I did it I had to remain sitting till my erection subsided. Even after I thought I was getting accustomed to applying lotion to her, I still chubbed up from merely touching her smooth soft skin. I think she knew what it did to me, but never let on.\n\n-----------------------------------------------------------\n\nOne afternoon, as I walked through the door upon getting home, Suzy informed me that we were needed to help chaperon a school dance that evening. It was the final big one before eighth grade graduation and the school was shorthanded. I was looking forward to relaxing poolside tonight after a particularly difficult day of work. I even contemplated pleading my case. But seeing a shadow of excitement on Suzy's face convinced me otherwise.\n\nAn hour later we got ourselves ready for the dance. I had to put on my Sunday best, tie and all. I hated ties. Amber was all prettied up, looking forward to strutting her stuff in front of all the boys in her grade. I certainly understood as she was becoming quite the looker. Suzy had bought a beautiful gown as soon as she was asked to help earlier that afternoon, one suited to her simple tastes. Now I understood her suppressed excitement. She was wanting to strut her own stuff for once. It was a full length sleeveless number, in pale green that hugged her hips. The back dropped to just above her bra line while the front was scooped in the neck, low but appropriate for the dance. She put her hair up, something she rarely did, into a bun made out of braids. She had also put on a little make-up, around her eyes. She rarely wore any and when she did it was minimal, something she was teaching Amber to do. They were both gorgeous.\n\nThe two of us spent the evening making sure no one messed with the punch and that the kids showed respect for each other. Oh yea, and no making out. Suzy spent the entire evening with either her hand on my arm or holding hands. I loved the feel of her delicate fingers intertwined in mine. Even though our holding hands was a seemingly innocuous act, it felt particularly intimate tonight. At times I could feel my heart pounding, especially when her fingers threaded through mine as she took my hand from time to time. The feel of those delicate smooth digits as they slid through mine made a lump catch in my throat every time. Could she possibly know what she was doing to me tonight? The torture was exquisite.\n\nI noticed Suzy was getting a lot of looks from the other dads and their wives this evening. Even some boys were checking her out, being a little more obvious. I think because of this attention she decided to have us appear more intimate, like a couple. It would certainly enforce everyone's preconceived notion we were man and wife. And we had been perceived by the school and everyone around us for years that indeed we were married. For anyone to realize we were in fact sibling, would be catastrophic. So I was okay with the charade. Besides, she was my best friend and the most important person in my life, next to my daughter. That's what I always told myself, but deep down I knew it was more than that. And I was a coward.\n\n\"You know, all the guys have been checking you out.\" I remarked, wanting her to know how beautiful she was without having to say it and feeling awkward.\n\nIt was something I would have normally said, without reservation, but tonight I found myself feeling especially self-conscience. My heart had been racing a little for some reason, sometimes down right pounding. I don't know what it was about this evening, but Suzy had me wrapped around her finger. I could not shake the desire I had for her which had bubbled up, despite the skill I had acquired over the years to keep it in check.\n\n\"Why would that be?\" she asked casually.\n\nShe knew damn well why. She just wanted to hear it from me. Shit! I looked at her, her eyes bright and smiling, her mouth relaxed. I found myself trapped in her gaze, my heart pounded in my ears, and I think I blushed, something I thought I was past. I can't remember her being more beautiful than she was at that moment. I felt as though I had no business being with her, I was unworthy, over my head. I felt like I wanted to slink away. I looked away, out across the dance floor.\n\n\"It's because you're so beautiful.\"\n\nThe words nearly caught in my throat and I felt the heat in my face as I blushed hard. What the hell was wrong with me?! She noticed my discomfort and took my arm in both hands, pulling herself tight to me, resting her head on my shoulder.\n\n\"Thank you. That was sweet of you to say.\" I felt her take a deep breath and sigh quietly, taking the breath out of my own lungs.\n\nSuddenly the DJ, or the kid trying to be a DJ, announced a chaperon's only dance. My heart skipped a beat. Suzy shot me a startled glance, also taken by surprise. Why did she react like that? Was she feeling uneasy? I just looked at her and pulled a tight grimace. I knew there was a possibility that we would dance together, but I felt totally off guard and unprepared.\n\nThere were five couples including us that walked out onto the floor. Holding her hand I led her to the middle of the floor. Almost immediately the Chicago song 'Color my World' began. This was my favorite slow dance tune back in the day, and I remembered a couple of cuties I had danced with to this song. But as I put my hands on her waist and she put her hands on my shoulders, our bodies near touching, I couldn't see their faces.\n\nAs we moved slowly to the rhythm, I couldn't pull my eyes off her and my heart pounded in my ears. She blushed and dropped my gaze, uncharacteristically shy. Or maybe she was uncomfortable with such an intimate situation.\n\nThen she did what I didn't expect, she slid her arms around my neck and moved into me. Resting her head on my shoulder I felt her breath on my neck, I could feel her breasts pressing into me, her stomach against mine, her pussy pushing into my thigh. I felt her legs sliding past mine in rhythm and I could smell her hair. I felt her heart pounding, or was that mine? I pulled her tighter to me. The world around us went to black and all I knew was her as we swayed slowly, the heat between us increasing.\n\nI wanted her to know how I felt about her. I wanted to tell her that I loved her. I could feel myself weakening, my resolve to protect what we had now beginning to crumble. And right behind it was a feeling of panic. My body stiffening involuntarily with the flood of conflict I found myself in.\n\n\"I'm in love with you.\"\n\nHer words were barely whispered, but sounded like hammers on an anvil! I felt like I was on fire, my body trembled, or was that hers? I knew I loved this woman, more than I thought possible. I was always terrified to say it, ever. Yet this beautiful woman had done just that, the unimaginable, throwing herself over a cliff, waiting to be caught.\n\n\"Suzy\" I whispered, feeling like the wind had been knocked out of me.\n\nShe looked up into my face, tears already welling in her eyes. I melted before that gaze, so vulnerable, so scared, so desirous and the wall of my resolve crashed about me.\n\nI bent my head to her and put my lips on hers. We had stopped moving, and there was nothing, just the two of us, locked, holding each other tight, breathing each other in. Her lips, pressed firmly onto mine, were softer than I imagine, fuller than I had anticipated. I felt her under my embrace, that wondrous body I had obsessed over all this time, and as good as it felt, her lips were all I knew, as my emotions and love for her seemed to focus onto that one point.\n\nI don't know how long we stood there, but when we parted the place was quiet. I started back to reality, glancing around at all the faces looking at us. The other couples were already leaving the floor, a couple of them looking back over their shoulders at us. One woman was smiling brightly, another scowling.\n\nI took Suzy by the hand and walked her back to the side. Some of the boys made cat calls, some laughed and some girls were delighted, judging by the noises they made. I didn't care, I only cared about the person whose hand I held. I wanted to make her safe, to protect her and crush anything that threatened her happiness. My emotions were elevated near melt down and I needed to speak with her, now!\n\nAs we walked off the floor I saw Amber, close by, her hands were over her mouth, her eyes enormous. All I could do was shoot her a worried grin and move on. I'd have to deal with her later.\n\nI walked Suzy to a row of chairs on the side wall and sat her down. Kneeling in front of her and taking both her hands in mine I forced myself to look at her. She was looking deeply into my eyes, trying to see what I saw. I wanted to pull her back to me and show her how I felt. I fought the impulse, it was reckless!",
        "\"Suzy...\" I was looking for the words.\n\n\"Do you love me?\"\n\nHer quiet simple question trumpeted in my ears. I saw the tears running down her cheeks and the pain in her face. She needed to know how I felt. Was my kiss an impulse or did I love her in return? She needed to know and I knew she deserved the truth.\n\n\"Of course I love you, you know that\" I replied, knowing immediately how lame I was.\n\n\"Are you in love with me?\" she pressed again, her tone desperate.\n\nThat simple rephrasing made a world of difference, and I found myself on a precipice. Do I play it safe and deny my true feelings as I had determined to do in the past, or throw caution to the wind and make the jump she just had? And as I looked into that face I knew my denial would be a filthy lie, disrespectful of the one I loved, causing her unnecessary pain.\n\n\"Yes, I am. I adore you.\" I hit every word, wanting her to believe, wanting her to know it, as sure as I did. I continued.\n\n\"You are everything to me Suzy. Do you understand?\"\n\nShe nodded and I saw her eyes transform right before me, from fear to joy. She extended her arms and I lifted her into my arms once again, our hearts pounding, knowing what we both feared was a fear no more. We stood there quiet, holding each other. After a short period Suzy broke the silence.\n\n\"You saved my life. Do you know that?\" I looked into her eyes, puzzled.\n\n\"You took me into your life and made me whole\" she added. I smiled broadly, nodding.\n\n\"That goes both ways. You saved me as well, and Amber. You fill our lives with love. Thank you.\" She buried her face in my chest as I continued.\n\n\"For so long I've wanted you to know how I felt about you, and was too afraid to say it. I couldn't bear the thought of driving you away. I wasn't strong enough. I'm grateful you were.\"\n\nShe lifted her face to mine, smiling. I pressed my lips onto hers once again, my heart pounding with joy!\n\nAs we parted I noticed a figure quietly standing near us. Amber. We both looked at her, unsure, waiting for a clue of what she was feeling. She had tears running down her face. And then as if to answer our question, she came to us, throwing her arms around the both of us.\n\n\"Amber?\"\n\nSuzy spoke first, putting her hand on Amber's back. In response Amber pushed her face deeper in between us, her arms still tight around our waists. We looked at each other, and then I saw the light of recognition in Suzy's hazel eyes.\n\n\"Have you been waiting for us to get together?\" Suzy asked.\n\nAmber relaxed her grip on the two of us, taking a small step back.\n\n\"What took so long?\" she said quietly, looking up.\n\n\"How could you have known?\" I asked her.\n\nHer face was wet with tears and the happiness she felt was written all across her face.\n\n\"I knew the day we first got in the pool. I knew when you called her mom. Ever since that day I watched the two of you. I knew you loved each other.\"\n\nShe continued in a whisper, looking about.\n\n\"I know your brother and sister and I know that makes it weird. But it doesn't really matter does it? Aren't we just a family that loves each other? Isn't that what really matters?\"\n\nDamn, I was stunned at the maturity level of this thirteen year old girl. Suzy had done wonders for her. She always treated her as an adult and expect adult like behavior from early on. She also knew when to treat her like a little girl.\n\n\"Yes, that's what matters the most\" I said.\n\n\"So how much do you love mom?\" she prodded, finding her composure.\n\n\"I love her more than..... Without her I'd be lost. I love her as much as I love you.\"\n\nShe put her arms around me, squeezing.\n\n\"Thank you dad, I've wanted this for so long.\"\n\nShe turned and looked at Suzy.\n\n\"How much do you love dad?\"\n\nSuzy's eyes went wide, welling once again, her emotions barely in control. She allowed her hand to slide down off my shoulder along my arm to grasp my hand, intertwining her fingers in mine, taking the opportunity to gather her wits.\n\n\"I don't know. It's more than I can imagine or say. Without him I believe I would die. I love him as much as I love you, and I never thought that could be possible\" she answered, her voice weak and quacking.\n\n\"Can we go home now? The dance is almost over and I want to go home, with my parents,\" Amber said.\n\nI nodded, taking Amber's hand and having both their hands led them out, both with tears running down their faces.\n\nAll the way home Suzy had a hold of my right hand, in her lap. She held onto it as though it might fly away. I would glance at her every now and again, each time she was looking at me, barely in control of her tears, joy written large across her face. Looking in the rear view mirror I could see Amber's broad smile, she appeared nearly giddy.\n\nWhen we got home I told Suzy we needed to talk after Amber was in bed. Nodding she said she wanted to take Amber aside and talk with her first, so I went to shower up. I had really put on a sweat tonight.\n\nI cleaned up and put on my night shorts and a tee shirt. Coming out of my room I found Suzy and Amber still talking in the front room.\n\n\"Am I interrupting?\" I asked as I entered.\n\n\"No, please, sit with me. We were just finishing weren't we,\" as she winked at Amber who giggled and got up.\n\nShe came to me and throwing her arms around me exclaimed her love for me and how happy she was. I kissed her good night and let her know of my love for her. She looked as though she was floating down the hall as she went into her room and closed the door.\n\n\"Anything I need to be concerned about? She looks ecstatic.\"\n\n\"No, she's great. She's a very special young lady. I'm so honored and proud that she calls me mom\" Suzy said, her voice choked up with emotion.\n\n\"You know you're mostly responsible for how she is turning out.\"\n\nSuzy was shaking her head as I continued.\n\n\"Please, I'm your back up and the enforcer. You're the conductor of this piece. You know it's true.\"\n\n\"It's not just me, it's her. She is a very smart young lady and a joy to teach. I'm less the conductor and more of a facilitator. That's the truth of it.\"\n\nI had to agree, Amber was sharp as a tack, and always obedient.\n\n\"I concede the point\" I affirmed as I sat down next to her and took her hands in mine.\n\n\"So what did you two talk about?\"\n\n\"I wanted her to know where you and I were going to go next. What she needed to expect after tonight and what two people in love do. We had the sex talk.\"\n\nHer eyebrows were raised as she said that last bit. I think I blushed. It was on my mind but I wasn't prepared for that.\n\n\"And obviously she handled it well.\"\n\n\"Oh yes, very well. Like I've said before, she is a very smart young lady. I also think she feels more secure now that we have acknowledged our feelings for one another. Her family is finally stable, or should I say, more stable than ever before. I can see now how she must have viewed us. It actually makes sense.\"\n\n\"Man, am I glad I missed that conversation. That's why a girl needs a mother.\"\n\nI lifted her hands to my face and kissed the back of them.\n\n\"Was there anything else?\" I asked.\n\n\"Yes, I told her we'd be sharing a room from here on. She also wants your room,\" she smiled amused, her eyed twinkling excitedly.\n\nI held her hands and just looked at her. My beautiful sister, whom I adored, wanted to be with the likes of me. My world was about to change forever, once again. Quietly I stood, lifting her up from the couch. We embraced in silence, holding each other, no longer afraid to acknowledge what we had buried in our hearts all these years.\n\n\"Let me gather a few things from my room while you get ready for bed.\" I said.\n\nShe smiled and turned to leave as I grabbed her arm gently. She turned back to look at me, questioning.\n\n\"You're the most beautiful creature I know, and I adore you,\" I said slowly, straight faced, deadly serious.\n\nShe smiled and blushed brightly. Turning she went into her room, our room, and I went into the kitchen for a drink.\n\nGoing back into my old room I grabbed my pillow, alarm clock and the clothes I'd need for tomorrow, tooth brush etc. The door was open into the bedroom and I entered. She was still in the bathroom as I could hear the shower going. I set my alarm up on one of the night stands then thought differently about it. Which side would she want? If I were to guess, I'd say the side closest to the bathroom. I'll give her the choice after tonight. I put my clothes on the ground on the side I was taking tonight and sat on the foot of the bed waiting. I didn't wait for long.\n\nShe came out of the bathroom wearing her white silk robe, tied at the front with a bow, the front forming a deep V down below her breasts. Her hair was uncharacteristically wavy from the braids she had worn tonight. I stood as she approached, holding my breath, trying to soak in the vision that lay before me. We embraced and kissed, long and deep, my hands running up and down her back. I felt suddenly nervous as the reality of our situation hit me.\n\nLetting out a huge sigh, she shuddered. She disengaged from me and walked to the side of the bed, leaving me standing. Pulling the sheet loose she stood at the side and turned her back to me. She untied her robe let it fall from her shoulders to the floor, her form revealing itself to me, her smooth tone body bare, except for little white panties. Lifting the sheets she spun herself under them, as I stood watching. The sheets settled over her, revealing the contours of her lithe body. Her nipples were hard atop firm cones, her pussy a smooth mound.\n\n\"I'm the luckiest man alive. You are so beautiful, so amazing, and I get to be with you. Thank you for stepping back into my life, for helping me when I asked you all those years ago. You have blessed my life.\"\n\nHer face which was beaming, changed as I spoke, to one I couldn't discern. She lay there quiet, looking at her hands lying on her chest. Looking back up at me, she patted the bed next to her. I went over and sat on the edge, facing her, as she took my hand.\n\n\"I told you tonight that you saved me. I meant that in the most literal way.\"\n\nShe paused; her eyes began to glisten with moisture as she struggled to find the right words.\n\n\"I was looking at a childless, possibly loveless life. I had no where I felt I could turn\" she spoke slowly, keeping her thoughts organized.\n\n\"Then I got swept up in your tragedy. I'm so sorry that happened. I'm sorry I took advantage of it. All I saw was a life line being tossed my direction, and I grabbed tight, hanging on for dear life, unconcerned about anything else.\"\n\nHer tears began to flow; I felt my own welling up at seeing her pain. She continued.\n\n\"I've been fighting my own guilt all the while I loved you. I felt unworthy of your attention. I felt selfish for being part of your lives, for taking advantage of your tragedy. So I buried myself into that wonderful girl. That gem. She was my chance to make up for what I did wrong, for taking advantage. So I made sure she knew who her mother really was, all the while resenting the fact I wasn't.\"\n\nShe paused again, her countenance showing sorrow.\n\n\"Knowing all this...do you still want to be with me?\"\n\nI was floored! She actually thought she had done me wrong all those years ago.\n\n\"I know who and what you are Suzy. You are more than I deserve, and you saved me as well. I don't know why things happen in life, why there is often tragedy. And I don't know if there is such a thing as fate, but what I do know is that all we can do is be the best we can be, and let the cards fall where they may. From that tragedy came a new beginning for you and a new beginning for me. There is no purpose in trying to make sense of it. All I know is that I'm happy and privileged to have you join our lives, however it happened. I want you in my life and I'm never letting you go.\"\n\nHer hands went over her face as she began to weep. I bent over her and kissed her forehead softly. Standing up I pulled off my shirt, and climbed under the sheet next to her. She rolled over toward me and I embraced her, soothing her tears, our bodies pressed together. As we lay there, I ran my hands over her body, feeling her velvety texture, her smooth curves. I felt her little cotton panties, feeling the smooth roundness of her cheeks, lightly squeezing them as I did. I felt her body tremble as I continued my examination of her form and her body began to relax and melt into me as her emotions moved from long held guilt into love and desire.\n\nI rolled her gently onto her back, staying in contact with her, and looked into her face. I could see the pure happiness she was feeling and desire for her washed through me. We kissed, long and deep, our tongues finding each other as our breath mingled in each other's lungs. Suzy began moving under me, her arms across my back, her legs opening and rising up as she tried to envelope me. Our need for each other became all-consuming as our bodies pressed tight together, groping and feeling as much as we could of one another. I ran my hand down between her open legs and felt her warm, soft mound. Her panties were soaked and sticking to her flesh as she moaned from my contact.\n\nSuddenly Suzy pushed me off her with more strength than I believed she possessed. I watched her with surprise as I rolled onto my back and she got up on her knees. She quickly pulled her panties off and tossed them off the bed, then grabbing my boxers, jerked them off, my rigid cock slapping me as it was set free. Her eyes looked almost wild as she looked at me head to toe, eyes pausing over my manhood. Without a word she took hold of my cock and bending down put it in her mouth. My body jolted as though shocked from the sudden contact with her mouth. She squeezed tight as she pushed her mouth down further and further with each stroke of her lips. Her breathing loud through her nose and she moaned, seemingly out of control.\n\nJust as sudden she turned her body and threw a leg over my head, spreading herself wide over my face. A more perfect pussy I could not imagine. Smooth firm lips covered in a thin layer of soft brown hair. The button of her clit sat at the apex of her thin delicate inner lips. All was glistening and pink. Her opening was inviting me entrance and I could smell a light musky sweetness. I could see her moisture and feel her warmth even before my eager mouth obtained her pussy.\n\nWith a hand on each cheek I pulled her down to my lips. The taste was exhilarating! I took her flesh into my mouth, sucking and licking her. This was my sister, the girl I grew up with, the girl I admired and protected since adolescence. Now I had my face buried deep in her pussy, drinking in her womanhood, bringing her pleasure, making her quiver and shake with ecstasy. The urges I felt all those years ago added fuel to my desires for her. Feeling the mouth of my sister engulfing my cock, knowing it was her giving me pleasure made my senses heighten. I could feel my cock throbbing with the beating of my heart. I was hard to the point of discomfort and my head was screaming from sensitivity. I knew I could not last much longer.\n\nSuzy raised herself on extended arms, panting heavily, her body trembling. Placing her hands on my thighs, she arched her back, forcing her pussy hard into my face. My mouth was locked on her clit, sucking and pushing the tip of my tongue into her button, wiggling it. All at once her body shook as she moaned through clenched teeth, her juices covering my face, as she climaxed. Waves of her orgasm sent her into spasms of shaking as she collapsed onto me, her legs jerking straight, the muscles in her perfect ass tightening, her pussy being jerked from the reach of my tongue.\n\nI ran my hands across her back as she slowly began to relax, wet and slick from sweat. I could hear her breathing slowing as I felt her body softening from its sudden exertion. She rolled off me and flopped flat on her back, one arm lay across her forehead as I sat up and looked at her. She smiled, serene and sweet, her eyes piercing. I moved alongside her, taking her in my arms.\n\n\"Oh Luke, that was wonderful,\" she quietly said, her voice thick with lust.\n\nI smiled; elated she was feeling so content. Taking loose sheets in her hand she wiped my face, still wet from her fluids. Then reaching down she took hold of my rod, squeezing it.\n\n\"I need you in me\", she breathed, her eyes still locked on mine.\n\nI lifted myself over her as her legs opened and I settled between them. I positioned my tool onto her pussy and slid it up and down until it was sliding along her slippery trough.\n\n\"Please be gentle. It's been a long time, and you're.........you know, rather large.\"\n\nHer face showed her anxiety. I smiled lightly, and then kissed her tenderly.\n\n\"I'll take good care of you, Lil Sis. I would never hurt you.\"\n\nShe smiled back and I saw tears welling in her eyes.\n\n\"Are you alright?\" I asked in a near whisper.\n\nShe nodded gently.\n\n\"I'm just so happy right now. I feel like I'm in a dream and I'm scared I'll wake up.\"\n\nTears ran down the sides of her face. I chuckled to myself with the amusing thought that she might dehydrate. That was random.\n\n\"I adore you Suzy,\" as I slid my cock further back so it was lying at her entrance.\n\nShe reached down and kept it aligned as I pushed into her. Slowly I applied pressure until my head suddenly popped into her. Suzy's eyes went wide as she inhaled sharply through her nose, and then slowly blew out her mouth. Looking into her face she nodded for me to continue. Again I pushed slowly as my cock slipped into her tight tunnel. She was breathing slow and steady, a gentle smile on her lips. I watched her steadily as I continued to push into her, our eyes locked. I was now about half way into her as I saw her smile broaden and felt her hands on my butt. Pulling me into her, she lifted her hips as she took the rest of me down to the hilt in one fluid motion. Her eyes went wide again, but the smile never left her face.\n\n\"You feel so good,\" she breathed heavily.\n\n\"You took the words right out of my mouth. You're so tight.\"\n\nI slowly withdrew my full length then slowly pushed back down. In and out I slowly pumped myself in my sweet sister, feeling the texture of her walls as she held me tight in her womanly grip. As I slowly fucked her she wrapped her arms around my neck pulling me down to her waiting lips. I ran my arms around her body and held her tight as we kissed, our tongues wrestling. She put her legs around the back of my thighs and pulled herself into me as I continued to thrust slowly in and out. We had become one, our bodies' molded together, moving in rhythm, our breath penetrating each other.\n\nI felt my cock throb and Suzy groaned in her throat, feeling it. I began to increase our rhythm gradually as I felt a knot building down deep behind my balls. Our lips separated as I lifted to look into her eyes. They were half closed, full of lust. I brought my mouth down to her breasts. Taking her hardened nipples in my lips I sucked them, sending quivers through her body. Her breathing began to become ragged and irregular as she moaned and grunted in pleasure. The pace continued to increase as I felt that knot begin to elongate up into the base of my cock. I could feel her walls clamping in spasms as her body began to twitch erratically. I settled onto my elbows, my arms under her shoulders, gripping the tops.\n\nI was now starting to pound her harder as our eyes came together again, wanting to watch the moment of release in each other. Sweat glistened off our bodies from our exertion. My cock began to throb as the knot climbed up my shaft nearing the tip. My orgasm was closing in quickly and I felt her vagina clamping down on my pulsing organ. Her eyes began to widen as her back arched. My cock throbbed twice more and my body shook as a wave of pleasure rolled through me. Suzy began shaking as I shot my seed deep into her in pulse after pulse. Each ejaculation was a new wave of intense sensation. She dug her fingers into my back as she convulsed under me, eyes staring wide into mine, mouth open in a soundless scream. Her orgasm shook her body with each shot of cum that I injected into her. As I began to subside cumming I continued to pump her as the urge to ejaculate didn't let up. I've never felt such a long sustained orgasm before. Suzy was still grunting and quivering when I finish cumming as I continued fucking her a little longer. Finally I quit thrusting into her as I felt myself softening and the sensation numbed from the juices that coated our union.",
        "Our eyes never left each other's face during our climax and I never experienced a more erotic moment. Our bodies were wet with sweat. Suzy had a puddle between her breasts and I took the time to lick it up as I slowly climbed off her. She lay motionless, her arms lying flat above her head, watching me as her breathing slowed. She had such a beautiful smile on her face, content and joyous.\n\n\"That was wonderful,\" I said.\n\nShe nodded and closed her eyes, the smile remaining.\n\nI got up and went into the bathroom and grabbed a towel. Coming back I sat beside her and began wiping her down. I dried her body of sweat from head to toe, and then cleaned her pussy and all the semen that had run back out of her. She lay still, watching me closely.\n\nI finished and as I went to get up she grabbed my arm, pulling me down to the bed. She sat up and pushed me down, flat to the bed, making sure I understood to stay put. She walked into the bathroom and returned with a fresh towel. Sitting next to me she took the towel I had used on her and put it between her legs to catch the remaining cum running from her. She then proceeded to wipe me down, as I had done her, cleaning and drying my body. We never spoke a word during all this.\n\nWhen she finished she tossed both towels off the bed, then climbed to her side of the bed. Patting the pillows next to her she motioned me over and I crawled over and lay down next to her. Reaching down she pulled the sheet up over the two of us. Rolling up against me, she laid her head between my shoulder and chest, arm across my body and one leg on top of mine. I wrapped my arm around her body, my hand resting on her ass.\n\n\"Can you get the light ... my love,\" she asked in a near whisper.\n\nI reached up behind me and clicked off the lamp. She placed her hand on the side of my face and kissed me softly on the cheek, took a deep breath and sighed.\n\n\"I love you Lil Sis\", I quietly said.\n\n\"I love you Pack Mule.\"\n\nI smiled to myself, my heart pounded as tears ran down the sides of my face. How did I deserve to have this wonderful woman here?\n\n------------------------------------------------------------\n\nI awoke on my back, staring at the ceiling, light beginning to show through the blinds. Suzy lay next to me on her side, her back up against me, and her head still in the crook of my shoulder. My arm lay across her body between her breasts, my hand on her hip, and her soft cheeks against my thigh. Unable to move without waking her I remained still, loving the feel of her. Turning my head I inhaled the fragrance of her hair. This was real! This was my new reality from this point on, and I rejoiced in silence!\n\nAs I lay there I thought of what I could do to impress upon my sister that I loved her. I wanted to show her in some grand gesture that would cement forever in her mind my feelings for her. It didn't take long when I suddenly had an epiphany. I knew what I must do! It was so obvious and perfect! She would love it! She deserved it! I lay there piecing my plan together in my head.\n\nAfter a time I looked over at the clock. Shit, I had to be going soon. I had a customer to meet, but the rest of the day I was blowing off to accomplish what I wanted to do for Suzy. I yawned and as I did my body trembled, attempting to hold back the stretch that came over me.\n\nSuzy turned her head.\n\n\"You been awake long\" she asked.\n\n\"No, I just woke a minute ago. I thought you were asleep, I was trying not to disturb you.\"\n\nShe chuckled to herself.\n\n\"I was doing the same.\"\n\nShe rolled over toward me, her head on my chest, an arm across my abdomen, her breasts smashed into my side and her leg lay over mine, straddling it. Oh, this felt much better! Her flesh was soft on mine, warm and inviting. Her pussy felt hot, pressing into my thigh. I felt myself getting aroused.\n\n\"I'm sorry about last night.\" she said, not looking up.\n\n\"What do you have to apologize for?\"\n\n\"For unloading my guilt on you. It could have ruined the mood. I didn't want to sabotage what I know we both wanted. I feel bad about that. But I was glad to get that off my chest. I've been holding onto that for a while.\"\n\nI kissed the top of her head as I stroked her back, letting my hand run over the top of her small round cheeks.\n\n\"I'm glad you let it go......you are letting it go, right?\"\n\n\"Yes, yes. I over think things sometimes, and you were helpful. Thank you.\"\n\n\"What's a brother for, right sis?\" I chuckled.\n\n\"You're terrible!\" she said in mock anger, slapping my chest while raising her head to give me a stern look.\n\nI just grinned and kissed her. She flopped her head back down.\n\n\"You're awful.\" she said while running her fingers through the hair on my chest. \"What am I going to do with you?\"\n\n\"Well it can't be what I think you're implying. I have to get up and be on the road in forty minutes. I've got an important customer I have to see.\"\n\n\"I wasn't implying anything you perv! Sometimes, really!\"\n\nHer mocking was so ridiculous I couldn't help but laugh out loud. She was grinning with a fake look of hurt.\n\n\"Very well, if you must go, then go.\"\n\nShe rolled off me and spinning her legs over the side of the bed, bent over and retrieved her robe. I watched as she stood and put the robe on, admiring the smooth slick lines of her body. Turning back around she flopped herself back across the bed onto my chest, nearly knocking the wind from me. She put her hands on both sides of my face, holding it while looking into my eyes. It felt as though she could see my thoughts.\n\n\"I love you so much it hurts\" she said in a sober statement.\n\nShe put her lips on mine and kissed me soft and long, a kiss ripe with emotion.\n\n\"Okay, jump up. I'll wake Amber and get you a quick breakfast\" as she jumped back up and sped out the door.\n\nGod I loved her!\n\n---------------------------------------------------------\n\nAt breakfast we talked over our plans for the day as we always did. It was Amber's last day of school, a day of year books and class parties. Graduation was tomorrow night, a Friday. It was decided that Suzy would move my things into our room so Amber could move tomorrow. I informed them that I was taking us all out for Amber's congratulatory dinner tonight, so Suzy was not to cook.\n\nWith plans all laid I gave Amber a hug and kiss, and told her how much I loved her. My chest was pounding when I held Suzy close to me for a good bye kiss. Amber was delighted with squeals of approval. On the way out I held Suzy again, and whispered in her ear that I was 'in love with my little sister'.\n\n\"Pervert\" she grinned and smacked me on the face.\n\nI've never been this happy!\n\nI accomplished what I wanted by early afternoon and had time to run by and check a couple jobs. I called Suzy before I headed home to let her know and to find out if I needed to stop for anything.\n\nGetting home I was greeted just inside the door by Suzy. She had just showered and still had her hair wrapped in a towel. Her breasts jiggled beneath her robe as she hurried up to me and threw her arms around me, smothering me in kisses.\n\n\"I missed you so much today! The closer we get the worse it becomes for me. What am I going to do?\" she asked excitedly.\n\n\"Don't worry; the honeymoon will be over eventually\" I kidded her.\n\nShe was not amused.\n\n\"Don't say things like that. Not even joking\" expressing her annoyance.\n\nI pulled her back to me and held her for a long moment, not speaking. Her body began to relax into me and I felt the happiness I always had, when I was near her, welling up. I gently put my face to hers, our foreheads touching.\n\n\"I'll not joke like that again. I don't feel I'll ever get over you, I truly don't.\"\n\nI kissed her neck tenderly as she sighed.\n\n\"Okay, let's see our room.\"\n\nShe spun about grabbing my hand as she pulled me down the hall. Entering our room I immediately saw all the effort she put into it. Not only did she move me, she rearranged the entire room to a more pleasing layout. Our bed with the low headboard was now under the window. She had set me up on the side that opened so I would have the fresh air when the season was right. That also put her closer to the bathroom. Nice.\n\nThe bathroom was set up similarly in that our sides corresponded to the bedroom. The closet was the same. She had decorated it all to feel less like a woman's room and more like ours. I was blown away and said as much. She was delighted I approved.\n\n\"You are a wonder\" I said as I scooped her up like a bride and kissed her.\n\n\"I want you to be happy. This is our home now. Not just yours and mine that we happen to share\" Suzy said wistfully.\n\n\"Well said\" I responded, appreciating the sentiment.\n\nHanging her head back to see the time on my bedside alarm, her boob nearly popping out, she asked to be put down.\n\n\"Amber's home soon and we need to get ready. What are you wearing?\" she asked as her feet reached the ground.\n\n\"Suit and tie.\"\n\nHer eyebrows went up.\n\n\"Oh really, and where are we going?\"\n\n\"A secret, and we WILL be overdressed. But this is a special night for us. I don't care about the average slug that infests our city\", I said in dramatic fashion.\n\nGrabbing my face with her little hand, and squeezing lightly so my mouth looked like a fish, she kissed me.\n\n\"You drive me nuts, but good call.\"\n\nShe walked back into the bathroom to continue getting ready.\n\nAmber got home shortly after that and I let her know the plan. She was excited to be going out all dressed up. She rushed to see what mom was going to do. I patiently waited till Amber received her instructions from Suzy and left the room, then closing the door, I changed. It took me five minutes. I knew the women would take longer, although not as long as one might think. Most of their time was spent on their hair, not make-up.\n\nIn any event I finished and went into the family room to wait. Listening I heard Suzy calling Amber to come see her so she could help her finish her hair. Good, almost ready, I was getting antsy. I didn't know how long my surprise would take before we got to the restaurant.\n\nA few minutes later they came into the family room together to make a show of it.\n\nAmber was cute in her black satin dress. At nearly fourteen, she already was growing up and showing some assets. She had the long straight legs of Suzy as well, and she was already nearly as tall. She was a beauty.\n\nAnd next to her was my Suzy, a vision. Her beauty seemed to increase when she kept herself simple. Things just distracted from her natural elegance and grace. She wore a white sun dress. It was reminiscent of the famous photo of Marilyn Monroe over the air grate with her skirt blowing up. It had a halter style top with a flared out skirt that stopped just above the knees. She had cute white heels with solid soles and open toe, with an ankle strap coming off the heel. Her hair was straight and pulled back by a matching white beret, smooth and shiny, like silk. At thirty three, she looked to be in her early twenties.\n\nI couldn't look at anything else for a moment, causing her to look down coyly and blush.\n\n\"You two are the most beautiful mother daughter pair I have ever seen\" I said straight faced in full sincerity.\n\nThey were both delighted as Suzy took Amber's hand and lifting it, kissed the back.\n\n\"Okay, time to get going\" I announced.\n\nI escorted the pair, opening doors and treating them like ladies. Tonight was special and I wanted them to remember it.\n\nOn the way the girls talked about Amber's last day, who signed what in whose year book. What was put in hers and by whom? All the things you'd expect from two thirteen year old girls. Suzy had a way about her that made Amber want to share and leave nothing out. I turned off the main road and drove onto a narrow two lane road which began climbing into the hills.\n\n\"Where are you taking us? Is there a restaurant I don't know about?\" Suzy expressed her natural curiosity.\n\n\"No, there's nothing like that up here. I want to show you girls this little park I found a while back. I stumbled onto it when I did a custom home just below it. You'll see. And don't worry about the time, I figured this detour in.\"\n\nI was getting excited.\n\n\"Well that's thoughtful\" Suzy said.\n\nI reached over and took her hand, kissing it.\n\n\"Just you wait.\"\n\nA few minutes later we arrived.\n\nI parked at the far west end of the park so that we could watch the sun set. It was a beautiful and serene setting. I pointed out the development that had the house I referenced, which was off to the south. Straight in front of us was rolling countryside, green and lush, falling away to the valley floor below. I walked us over to an old elm tree near the edge.\n\n\"I found this place a few years ago like I said. I had decided to keep it to myself at the time. I wasn't sure if I'd be able to use it or not.\"\n\nSuzy was puzzled.\n\n\"Why would you keep this a secret? It's lovely.\"\n\n\"I was saving it for a special purpose.\"\n\nI dropped to a knee in front of Suzy, her eyes going wide with sudden realization. Pulling a small box out of my pocket I opened it and presented it to her.\n\n\"I saved this as the spot I would tell you of my love for you. But now it's the spot that I ask you to be my partner through life.\"\n\nI paused gathering myself.\n\n\"Suzy, will you do me the honor of spending your remaining years with me?\"\n\nShe threw her hands over her face, only her eyes showed, bright and beautiful, welling with tears.\n\nWith all her might she extended a hand, shaking.\n\n\"Yes\" was all she could manage. It was all I needed.\n\nI placed the ring over her finger, and then stood. She threw her arms around my neck and wept unashamed. I fought the tears that welled up in my own eyes. I wasn't finished.\n\nAfter a moment, Suzy got her composure back, though tenuous. I handed her the handkerchief I brought just for this reason and wiping her eyes she admired the ring. It was a simple gold band with a thin line of crushed diamonds running the circumference.\n\n\"It's beautiful Luke\" she said, choking up again as she fanned her fingers in front of her chin.\n\n\"How could you know I dreamt of this?\"\n\nTears continued running down her face as she looked at me as though for the first time. I didn't answer.\n\nI turned to Amber who was standing to the side, tears already streaming, and her hands on her chin. I waved her over to me. Taking her hand I turned it palm up and reaching into my other pocket, removed two more rings and placed them in her palm, folding her fingers around them.\n\n\"Will you hold these for me? You'll know when to hand them back.\"\n\nShe nodded, stepped back and opening her hand examined them.\n\nSuzy was holding the handkerchief to her face, her eyes blazing bright.\n\nI stepped back in front of her and took her small hands in mine. She was barely able to stifle a sob as I saw her shoulders jerk with a sudden intake of breath.\n\n\"Suzy,\" I began slowly, \"With God and our daughter as witness, I vow to you my life. I give you my fidelity, my protection, my respect, my friendship and my love. In times of hardship and wealth, in sickness and health, I will hold you above and over all others, till the time of my death. So help me God.\"\n\nI looked at Amber who already had her hand extended with the simple gold band. Taking it, I slid it onto Suzy's finger, then still holding her hands, stood waiting. Taking deep breaths Suzy got control, her face became serene and peaceful, but her hands still trembled.\n\n\"Luke, with God and our daughter as a witness, I vow to you my life. I give to you my fidelity and my support, my hopes and my dreams, my respect, my friendship, my honor and my love. In hardship and wealth and in sickness and health I will place you above all others, for as long as I live. So help me God.\"\n\nShe turned and took the extended ring from Amber, a polished carbon steel band. She slid the ring over my finger and we stood silent for a moment, just looking at each other.\n\n\"You may kiss the bride\" Amber said quietly, almost reverently.\n\nWe fell into each other's arms as Suzy began sobbing. I held her there, in the half light of a setting sun.\n\nAfter a short time I held out my hand to Amber, and she joined us as we held onto her, and each other. We stood there for a time. The sun had set and darkness was approaching.\n\nI led Suzy and Amber back to the car and helped them in. We headed to the restaurant in a comfortable silence, my hand in Suzy's lap the whole way. Suzy was first to break the quiet.\n\n\"Luke, how is it that you can still surprise me? I'm overwhelmed\" her voice broke, but she held on.\n\n\"That was the most beautiful thing I have ever experienced\" she added.\n\nShe was looking at me in adoration.\n\nI shrugged.\n\n\"It's easy when you have reason. I just wanted to show you what you mean to me. Give you evidence, something to reflect back on, something you could hold in your hands. I also had a lot of time to dream up things.\"\n\nI smiled at her and she smiled back, understanding.\n\nWe had a wonderful evening, full of fun, good food and conversation. We talked about possible summer activities, beside swimming, and places we would like to visit. We also talked a lot of Amber being in high school next year. We felt she should join the swim team her first year, which she found a daunting possibility. We attracted a bit of attention from the other diners as I knew we would. We were over dressed, but I knew everyone wanted to know who Suzy was. Not only did her stunning looks get noticed, but if you watched her closely, her personality and aura beckoned to you. She was infectious, bubbly, and full of happiness and joy. This is who I got to look forward to spending my life with. It was a wonderful evening.\n\nWe got home around eight and got our swim suits on. The three of us enjoyed the occasional late night swim before bed, and we were too keyed up to just lie around waiting for bedtime. Amber swam laps as Suzy watched, checking her form. I puttered around slowly, breast stroking, and watched Suzy watching Amber. I loved the way her face showed what she felt about the girl. I swam to the steps and sat down next to Suzy, sliding my hand between her thighs.\n\n\"She is such a beauty isn't she\" Suzy said with a proud tone.\n\n\"Yes she is. She's turning into quite the lady.\" I too felt proud.\n\n\"She could be a state swimming champion if she wants. Her form is very good. She has the long limbs and frame of a swimmer too. She's faster than I was.\"\n\nYou could see the adoration in her eyes. Suzy constantly gave me these little moments of joy, it was in her nature. I laughed and bent in, kissing her on the cheek.\n\n\"Amber is blessed to have you.\"\n\nShe shot me a sideways glance and I saw her smiling. Grabbing my arm she snuggled into me and sighed.\n\n\"What was that?\" I asked.\n\n\"I'm just so happy.\"\n\nWe sat there and watched Amber finish her set of laps. Walking over to us she sat down next to me and relaxed, letting her heart rate and breathing slow. She looked at the two of us and smiled, saying nothing. We three sat there a moment, enjoying the night sky.\n\n\"I think I'll try out for the swim team next year\" Amber said, looking at the stars, her face blank.\n\n\"You're a natural. You'll do very well if you want to,\" Suzy said. \"There's no doubt you'll make the team. Maybe even varsity.\"\n\nAmber snorted at that.\n\n\"Yea, we can always dream. But I'll tell you what; if I do make the team I want you to help coach me, at the school.\"\n\nNow Suzy snorted.\n\n\"If you make the team, I'll ask, that's all I can do. And if you make varsity I'll knock their doors down getting in. So how's that?\"\n\nAmber stood and stuck out her hand.\n\n\"It's a deal!\"\n\nThey shook, and then they hugged, giggling.\n\nStepping away from Suzy, Amber turned to me, giving me my hug and left to get ready for bed. As I sat back down on a lower step, Suzy climbed into my lap, the water lapping across her chest.",
        "\"What do you think about my applying to the school to help with the coaching?\"\n\nShe slid an arm around my neck.\n\n\"It probably won't pay much, maybe even volunteer work. What matters is what do you want to do?\"\n\n\"I wouldn't mind coaching more than just the swimming team. Maybe coach track or tennis as well. I don't know, I'm getting tired of the title work. It's the same thing all the time, over and over. And I feel like I want to be around my girl more and other young ladies too. I feel like I have a lot to offer them, you know.\"\n\n\"You could quit you know. We don't need the money. Work is doing well and I make plenty for the both of us. But what matters is that you're happy with whatever you do. If you feel you have to contribute to the household budget, I get that, and I won't be dismissive. I just want you to do what makes you happy. That's all that matters to me. Understand?\"\n\nShe kissed my cheek.\n\n\"You're such a wonderful man. What did I do to deserve you?\"\n\nI shrugged, she giggled.\n\n\"I think I'll keep working, but I'm going to look into that coaching thing. Wouldn't it be fantastic if I could get hired on as a coach full time at the school? Why hadn't I thought of it before?\"\n\nI didn't answer; I just looked at the excitement in her eyes. She looked back and we froze, staring into each other's eyes. My heart began to pound. Taking my head in her hands we kissed. As I held her in my arms our passions began to build and our tongues found each other. We lost ourselves in each other and the world disappeared around us. Lifting her chin she led me onto her long neck, my lips tracing the curve of her. Her breathing quickened.\n\nSliding the straps off her shoulders, she lowered her arms as I pulled her top down to her stomach, her pert breast exposed, her brown nipples already stiffening. She arched her back as I took a breast into my mouth, sucking it lightly as I withdrew slowly till just the nipple remained. Holding the rigid nipple in my lips I increased the suction until Suzy moaned, grabbing the back of my head. I released it and took the other mound into my mouth, feeling ravenous for her. She now laid head back with eyes closed, her back arching to give me access, hands on my head, her breathing ragged as she shuddered in delight. I began licking and nibbling her breasts at random spots, enjoying their soft firmness. I suddenly felt her hand, between my legs, feeling for my now stiff member. As she got hold I felt her hand moving up and down its length, squeezing it. I shuddered as a wave of pleasure rolled through me. She lifted her head and looked at me, her eyes bright and excited.\n\n\"Oh my\" she gasped.\n\nI looked at the surprise in her face.\n\n\"What's wrong?\"\n\n\"You're just so quickly ready to go.\"\n\nI just smiled.\n\nSuddenly Suzy let go of my cock and slid off my lap. Crouching till she was neck deep, she pulled her top back on, then looking embarrassed, glided back and sat next to me once again. I saw her eyes searching the house. I suddenly realized the very thing she had. Where was Amber?\n\n\"Did you see her?\" I asked suddenly feeling awkward.\n\n\"No, I didn't. But I'm not sure she didn't see us. Didn't she say she was heading to bed?\" she asked, near panic in her voice.\n\n\"I don't think she said. She did tell me good night though\" I said trying to be reassuring.\n\n\"Do you think she saw us?\"\n\nShe was unnerved.\n\nI shook my head.\n\n\"Not if she's in her room. She'd have to come out into the family room. And look, the kitchen lights are on. It's impossible to see through a window from a lighted room into the dark.\"\n\nI started to feel confident she could not have seen us.\n\n\"But the pool is lit. Maybe she could have seen.\"\n\nSuzy was visibly shaken over the prospect. I drifted from the step and extended my hand.\n\n\"Come here.\"\n\nWith a nervous look she moved smoothly to me, and lifting her, I carried her like a baby into deeper water. Amber liked being carried around like this, effortlessly through the water, and when I did it I often wished it was my sister I carried. Now I had her and I moved gently and quietly through the pool, turning, spinning slowly and moving backward, all the while keeping our shoulders at the water line. Suzy was still clearly concerned and wasn't relaxing as I had hoped.\n\n\"You needn't worry so much,\" I said as we moved slowly about. \"You explained to her what to expect from us right?\"\n\nShe nodded, looking at the house.\n\n\"Was there anything that seemed to bother her?\"\n\n\"No, she understood and was happy we could be together like that.\"\n\nShe looked like she was recalling the conversation, and as she replayed it in her mind she seemed to me relax a little. She looked at me, her brow still troubled.\n\n\"That was careless of us. Understanding or not we needn't display ourselves in front of her like that.\"\n\nI agreed fully with her, she was right.\n\n\"I promise to be more careful. I got caught up in..... you,\" I said smiling as I kissed her softly. \"You okay?\"\n\nShe nodded, as I saw her worry lines relaxing.\n\n\"Do you have to go to work tomorrow?\" she asked.\n\n\"No, I already cleared the day. Tonight is our honeymoon, and I planned on spending the morning in bed with you, Lil Sis, unless you have other plans.\"\n\nI pinched her butt, a little too hard. She squealed and jumped out of my arms, eyes flashing.\n\n\"Ow! That hurt!\" as she rubbed her cheek.\n\n\"I'm so sorry! I didn't mean to do it that hard. Your butt is hard to pinch. It's too tight to easily grab a bit of skin.\"\n\nI was truly contrite.\n\nShe began to laugh at my unease, and walked up, wrapping her arms around my neck.\n\n\"Next time I'd rather you just grab it.\"\n\nI slid my hands down and gently grabbed both cheeks in my large hands, lightly squeezing. She inhaled sharply, closing her eyes.\n\n\"Like that\" she softly said, almost purring.\n\nMy cock almost immediately stiffened, making itself known between our bodies.\n\n\"Stay here, I'm going to check on Amber.\"\n\nShe slid out of my arms and stepping out of the pool, grabbed a towel and headed into the house. I watched her, as I always did, admiring her slender form and tight ass, noticing the red mark I left on her. Its movement hypnotized me.\n\nAs I waited I had an impulse and removed my swimming trunks. I began swimming, enjoying the feeling of my junk moving freely through the water. It was most exhilarating. Not long afterwards Suzy came back out, carrying a couple glasses of wine and a towel around her neck.\n\n\"I thought we might want to toast ourselves,\" as she sat on the pool deck, her feet on the first step.\n\nI cruised over to the bottom step and knelt on it.\n\n\"How was Amber?\"\n\n\"Asleep. Poor girl had to be exhausted. She's had a very eventful last couple of days.\"\n\n\"Haven't we all?\" I grinned, reaching up for a glass.\n\nSuzy looked at me quizzically while handing me my glass, then her eyes lit up.\n\n\"You're naked, aren't you?\" a smile spreading across her face knowingly.\n\n\"Yep. Come join me before we toast.\"\n\nShe could hardly suppress her excitement as she set her glass down on the edge and climbed down into the water. She slipped off her bottoms first then crouching neck deep removed her top. Taking them both she placed them near her glass, then grabbing her glass, joined me in the middle of the shallow end.\n\n\"Would you do the honors\" as I knelt, neck deep, grabbing her around the waist and pulling her to me.\n\nShe threw one arm around my neck as she wrapped her legs around my waist, my cock settling between her cheeks as she let her weight settle onto me. She was so cute as she looked coy from the sudden contact between us. I hoped she always would feel this way.\n\nShe took a deep breath and sighed.\n\n\"I do love you Luke.\"\n\nI was about to respond when she planted her lips on mine and we kissed. I stared into her eyes as we parted, not saying anything, just drinking in her beauty and feeling blessed to be with her. I saw her blush in the low light from my gaze, as she dropped her eyes from mine and leaned her head into my neck. She sighed again. Leaning back, her legs still holding me, she made ready for her toast.\n\n\"I'd like to toast us. We have known each other our entire lives and you have always been my closest friend, and now you are more than my friend, you are my life. I want to toast us, as continued friends and lovers. I toast our family and the happiness we have found. May it always be this way.\"\n\nI nodded consent as we touched glasses and drank down our wine.\n\nI took us both to the side where we set our glasses, then putting both arms around her I moved back out into the middle of the pool where we clung tightly to each other, kissing and exploring our naked bodies with busy hands. Our passion grew steadily and I felt her moving her ass over my now raging boner. She suddenly pushed herself away from me and taking my hand led me to the steps. Climbing out with me in tow she picked up the towel she had brought out with her and led me across the grass to a secluded spot behind the garden trestle I had built, my eyes watching her naked body move with a smooth grace. It was a nice little spot with a bench where she liked to sit and read at times as Amber swam laps and trained.\n\nShe spread out the large beach towel, as it turned out to be, and crawled onto it on all fours. Looking over her shoulder at me she spread her legs giving me a clear invitation. Without a word I knelt behind her, also spreading my legs and lower myself level with her. Taking my cock in hand I pressed the tip into her warm wet trough, sliding it back and forth along her crevice, getting myself slick. I slid my cock back and forth between her full lips spreading her juices along its length, getting her excited as I prepared the both of us for my entry.\n\nTaking my now slippery head I placed it at her opening. Taking a hold of her hips I pressed myself into her in one slow steady motion down to the hilt as her body quivered in delight. I felt the texture of her tunnel, rippled, firm, as I moved in and out of her in slow short strokes. An occasional muscular contraction around my swollen member sent shivers up from the origin through my back where it ended with a pleasurable tickling in my brain.\n\nLooking down at her back I felt a thrill in remembering that very form in a dark blue school swim suit, as she competed in school competitions, with me close by, in the bleachers, watching her every move. My hands now lay on that very ass I used to obsess over when Suzy played in the pool or lay around sun bathing with her friends, when we were adolescents. My cock throbbed in delight of those memories as they ran through my mind and the realization of exactly who I had with me and what she meant to me.\n\nSuzy had been watching me as I refocused on her face. She smiled sweetly as she raised her body, leaning back to me, reaching her hands back behind her head and taking hold of my neck. I slid my hands up her sides and placed a hand on each of her perky breasts, holding her to me. The feel of each firm mound filled my hands. She pulled her face up next to mine, her back arched, her pelvis tilted, holding me deep inside her.\n\n\"A penny for your thoughts?\" she purred quietly. \"You had such a faraway look just now.\"\n\n\"I was just remembering how I used to look at you so many years ago. I feel like I'm dreaming, having you with me like this.\"\n\nMy cock throbbed again as I voiced my thoughts. She shuddered as her body exploded into goose bumps, her delight in full view as she cooed her acknowledgment.\n\n\"You have no idea how long I've wanted to be with you, my Pack Mule.\"\n\nShe hummed her pleasure as she began pushing herself into me, trying to force me deeper, wanting me to fill her completely.\n\nI began picking up the pace of my thrusting, feeling that old familiar knot forming in the bowels of my manhood. Suzy was using what little leverage she had to push back against me in rhythm as our love making intensified. Slapping against her ass, I watched as the energy rippled through her cheeks, the sound subdued but clear. The impending pleasure wasn't far off. I could feel her body tensing, her tight pussy flexing, my own discharge rising closer to the surface.\n\nSuzy was moaning loudly, her pleasure consuming her as she pulled her face up alongside mine once again,\n\n\"Oh Luke, you feel wonderful! I love you so much. Please stay with me. Never leave me!\"\n\nHer emotional plea tore at my heart. Even now she felt some insecurity.\n\n\"I will never leave you Lil Sis\" I whispered, as I placed my lips on her neck just below her ear, gently sucking.\n\nHer orgasm seized her instantly as she began shaking, grunting, unable to control the waves of her climax. I wrapped my arms around her body, holding her up against my chest, her pelvis still sharply tilted, me still pounding. She dropped her arms and reached behind, placing her hands on my butt, digging in her nails for purchase.\n\nThat was the final straw as I felt that slow rise inside me suddenly explode from me. I could feel every pulse of my cock and felt each rush of semen as it shot out the end of my head. My heightened senses focused on my tool, as I felt the thick discharge rushing up my shaft, to be ejected from my swollen head. Each pulse of fluid was unique, separate from the others, a distinct occurrence of pleasure unto itself. Everything was black and I didn't know if I had closed my eyes or not, I only knew the head of my cock was the only thing I was conscience of and I felt her flesh tight around it, holding it.\n\nTime had stopped and not until my cumming had ceased was I able to refocus my mind and feel Suzy's body against me, her soft warmth filling my soul with such a feeling of belonging and utter happiness. I felt tears I didn't realized I had shed running down my cheeks, and my mind still swooned from the intense physical and emotional experience that clung to me. My cock slipped from her embrace as she straightened herself upright and turned to face me.\n\nHer eyes were large and bright, a look of such intensity and feeling. As she gazed into my face a look of surprise crossed her visage, seeing first hand my emotions, raw and open to her. Wordless, she put her arms around my neck and pressed herself into me as I took her into my arms.\n\nWe remained motionless, feeling each other's love flowing through our beings, something I had never experienced before now. It was as though I could feel our entire future of being together being confirmed and cemented into reality. I held her, contemplating this new reality, as I struggled to control my emotions, my heart continuing to pound since I first entered her womanhood.\n\n\"Luke?\" she asked, breaking the silence.\n\n\"Yes?\" I responded quietly, eyes closed, feeling her body next to me.\n\n\"When did you know you were in love with me?\"\n\nI looked into her upturned face; her eyes seemed brighter still, in the low light. I smiled softly, studying that face, a shiver ran through me as I realized once again, she was mine. I thought for a while, and her head lowered back down onto my shoulder, patiently waiting for an answer.\n\nI stood; lifting her with me, then bending down picked her up in my arms. Walking back to the pool I carried her in and sat on the steps, the water around our shoulders.\n\n\"It was during high school that I first asked myself that. I had a crush on you since our freshman year, and it lasted all through high school. I knew I loved you as my sister. That was easy. But it was different than how I felt about the rest of the family. I always had you on my mind to some extent. It was like we were interconnected in some weird way. I was only happy when I knew you were happy and I obsessed over your well-being. I remember how I used to have an urgency to play harder when I knew you were watching. You were never far from my thoughts.\"\n\nI paused a while analyzing my feelings of long ago.\n\n\"In our junior and senior year I was convinced that I was in love with you. It was something of a struggle keeping it under wraps, especially from you.\"\n\nShe giggled and I smiled back at her.\n\n\"We can laugh now, but it wasn't funny.\"\n\nShe snuggled in deeper, as an apology.\n\n\"I had all kinds of crazy fantasies that had me taking you away with me to somewhere that just the two of us would live. Remember 'The Blue Lagoon?'\n\nShe nodded.\n\n\"That was my favorite scenario, the two of us on an exotic island, barely dressed, living like man and wife.\"\n\nShe almost purred in approval.\n\n\"In any case, after our graduation you were moving on. Remember that night?\"\n\nShe nodded, a reflective look in her face.\n\n\"I felt like I was saying goodbye to you. And it turned out I was. You were going to another school and then you suddenly got engaged. I realized that year I was only infatuated with you and I probably didn't even know what love really was. Then when I got married I learned what love actually meant. Becky was good for me like that. My dreams of you vanished, but I never lost my affection for you, you were always in my heart.\"\n\nShe stretched in my arms, legs straight out and arms over her head. Her breasts broke the surface, her nipples tight and rigid. Distracted, I lost my train of thought.\n\n\"Don't stop\" she breathed quietly.\n\nI nodded, gathering my wits back to me.\n\n\"I never did stop thinking of you. I know I recovered from Becky's death much faster because you were back in my life. I was as happy as I have ever been, with you around. My feelings for you were different, in that I thought less of how you made me feel and more of how did I make you feel. It was like I only wanted to serve you and take care of you. Make your life better. Those feeling became much more powerful when you moved in. I think living with you in a quasi-married state, in our own home, made my love and appreciation for you grow. I saw how you were with Amber, how she made you happy, and that made me even happier. I could give something to you; serve you on an even deeper level than ever before. And that led to my moment of epiphany. Can you guess what that moment was?\"\n\nShe shook her head.\n\n\"No\" her voice sounded quietly strained.\n\nI looked down and saw her eyes glistening.\n\n\"The morning of Amber's first day of school. Amber took your hand, not mine, when she went confident and fearlessly to a whole new experience. I knew you did that for her, and I knew what you meant to her. I watched your interaction with her briefly before kissing her goodbye. And when you came back you put your arms around me and spoke of your love for her. That was the moment of my epiphany. I knew I was in love with you. I knew I couldn't live without you. I knew I'd spend the rest of my life making sure you felt happy and loved. It was then.\"\n\nI felt her body quiver and heard her stifle a sob. We lay there silent, unwilling to break the atmosphere. After a while I moved from the steps and carried her into deeper water. I released her and let her stand in the neck deep water.\n\n\"I'd like to hear when you knew you were in love with me\" I said.\n\nShe took a deep breath and put her arms around my neck once again, her head on my shoulder.\n\n\"I want to tell you.\"\n\nShe took another deep breath, obviously composing the thoughts she wanted to convey.\n\n\"I'm not sure when I knew. I don't remember having any kind of epiphany, but I knew I was in love with you.......in high school.\"\n\nShe was quiet for a moment, letting that sink in.\n\n\"I know how that sounds, juvenile and silly. Like a little girl's fantasy. But it wasn't. I was in love with you and I lived with that secret, afraid of how it would make me look. Afraid of what it meant. That I was some kind of a freak, and no one, not even you, would take me serious.\"\n\nI began to protest but she put her hand on my mouth.\n\n\"That was how I saw it. I knew you had feelings for me, it was obvious. Did you know I used to watch you? I'd watch your interactions with your friends and classmates. It almost became an obsession with me. I had a friend ask me once why I kept looking at you. That freaked me out a little. In any case, I took note of how you treated everyone, and that was someone I wanted in my life. I think that may have been the beginning of my love for you. But I knew we could never be together, we were brother and sister. That barrier was too strong for me to ignore and so I tried to forget how I felt for you and found someone else to try and love. It worked for a while, but then I found myself thinking about you, especially when we were intimate. I felt shame and guilt for that, but I couldn't shake off the thoughts of you. That may have contributed to Tom's frustration. He may have been able to feel that I was not honest with my love.\"",
        "Suzy paused, her eyes searching the recesses of her mind and I watched as she regained her focus.\n\n\"When I was thrown back into your life I rejoiced for that. But it felt as though Becky had to pay the price for my happiness and I struggled some more with guilt and shame. And on top of that I took from her the one thing she left behind. I knew I could never give myself to you while I had those terrible feelings hanging on to me. But I knew I was in love with both you and Amber, so I buried the negative and stayed to serve you both the best way I knew how. I've been in love with you most of my life and you were to never know. But then last night, dancing together, listening to the words of that song, and looking into the face of the man I adored, a wave come over me and I was helpless to resist. You had to know. Even if it meant I'd lose you, I couldn't live any longer without you knowing.\"\n\nShe was eerily calm, waiting for my reaction. I was taken back some and wanted to respond, but carefully, after she had made herself so vulnerable.\n\n\"I understand your feelings of guilt. I think they're misplaced, but you have a lot of courage to share with me what you just did. Thank you. Thank you for trusting me.\"\n\n\"There is no one else I trust more than you. You are everything and without you I am nothing.\"\n\nI understood her sentiment but disagreed, as she was the most beautiful person inside and out that I knew. She could never be nothing. But this wasn't the time for a debate.\n\n\"As much as it caused you pain, you did the right thing, keeping that secret. I can only imagine the ramifications if you'd have declared how you felt in our youth. I don't think we would have been able to get to where we are now. The forces that would have come to bear would have destroyed us both perhaps. We needed the time to mature as adults and grow together and become as strong as we are today. Because of your patience and suffering we now have a beautiful child to raise. We have the strength to do whatever is necessary to continue our lives together, and we have a lot of living still to do. And that gives me great joy and happiness.\"\n\nShe was sniffling again as her tears flowed and in my breast a great resolve formed. She would never feel alone or suffer again.\n\nLater that evening, as we lay in bed, I held Suzy close to me, our bodies still cooling after being intertwined in our love making. It was full of emotion as we slowly ground ourselves to climax. Her body lay half on mine, her head on my chest, her legs straddling my right leg. I loved feeling her soft body next to me, her tight little butt under my hand, and the smell of her hair in my nostrils. Heavenly!\n\nI dozed off with feelings of love and great hope burning hot in my chest.\n\n------------------------------------------------------------\n\nI hope you enjoyed this revised piece, and I appreciate your encouragement. Part two is undergoing revision next. Please watch for it.\n\n Thanks!\n\n-complexman"
    ],
    "authorname": "complexman",
    "tags": [
        "incest romance",
        "taboo",
        "sibling love",
        "forbidden love",
        "sister brother",
        "brother sister",
        "romance",
        "sibling sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/suzy-and-i-ch-01"
}