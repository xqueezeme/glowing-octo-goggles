{
    "title": "The Web Ch. 02",
    "pages": [
        "Second part of an eight part series. I wrote this story to develop some themes more along the lines of \"mind-influence\" than \"mind-control.\" The most erotic time in a relationship is often spent exploring the boundaries of trust and sharing. If that turns you on, then this story will have many molten scenes. At the same time, as the writing progressed, the characters grew and influenced each other in interesting ways. Is it better to get what you want, or learn what you want? I still don't know who really was in control. Maybe you will.\n\n*\n\nAs might be expected, I thought about what had happened and what might happen all of the next week. I replayed the events of our last session to a couple of great orgasms. Thursday, I called the clinic for the test results. Cathy and I were both negative. So was Kelly\u2014interesting that she got tested and shared the results with us. That night, I had a message on my machine. \"Brad, it's Cathy. Looking forward to our session tomorrow. See you at 6. Bye...\"\n\nI was at her door promptly at 6. Cathy flashed a smile. \"Good to see you again, Brad. Come in. How was your week?\"\n\nI found it difficult to assemble my thoughts given what my eyes caught in the first instant. Either Cathy had a very sheer bra on, or she didn't have anything under her form-fitting shirt. Her nipples showed through the fabric. In either case, this was a good sign.\n\n\"Well, to be honest, it stretched out pretty long. I was either reliving last Friday or looking forward to this one. Your flowers and message didn't help.\"\n\nCathy laughed, and I heard Kelly's laugh from the kitchen. \"Nice to know you have a weakness for beautiful women,\" Cathy said. She looked down, frowning. \"No toothbrush?\"\n\n\"I have it in the car. I didn't want to presume anything.\"\n\n\"I think you had better get it.\"\n\n\"Yes, Ma'am,\" I replied, a spring in my step. I quickly returned with a small overnight bag.\n\n\"Much better,\" Cathy observed. \"Why don't you drop that in my bedroom? End of the hallway.\"\n\nI went back into Cathy's tasteful bedroom, with a queen size bed turned down. I did notice the chair positioned with a reading lamp beside the bed. Knowing Cathy, I wondered if she wanted me to puzzle about that. I walked back into the living room, where Cathy caught my eye with a small smile.\n\nThis evening started out more relaxed. We all got a glass of wine and settled into conversation about our week and catching up on friends. After a bit, Cathy steered the subject to sex.\n\n\"Brad, I was really surprised by how well I responded last Friday. Does it always work that well?\"\n\n\"As you might guess, these multiple voice techniques depend on the person,\" I said. \"Plus, the sexual side of this is new to me. Tell me what you thought was happening, and let's see if we can figure it out.\"\n\n\"OK, let me think.\" Cathy looked down, gathering her thoughts. \"It seemed like my sense of nervousness was no longer toward you two, but more toward someone outside our circle who might use my desires to hurt me.\"\n\n\"So your Protector continued to do her job, but at a level that allowed your other voices to operate.\"\n\n\"Yes. And clearly, my Controller voice did her job. She really controlled me to hang on the edge of a huge orgasm!\"\n\nWe all laughed. \"You have it, Cathy. We gave each of your restricting voices good jobs to do, so they felt acknowledged and important. In fact, they contributed to the intensity of the experience. They also allowed your more expressive voices scope to bring you what you desired\u2014what we all desired for that matter. In some ways, the Protector created the buffer zone from the world that you needed to open up to us. What we'll do in the future is to give you the ability to open up to others that you trust.\"\n\n\"It's still amazing how well it worked,\" Cathy said.\n\n\"Most of it was you, Cathy,\" I replied. \"You caught on quickly during the explanation, so you could project yourself into the voices and really work with them. You also gave me your trust, which allowed me to help you relax and open up to your desires. Most importantly, though, you put in the effort to make this work. I could clearly see that you wanted to experience change, and that motivation carried you through...\" I paused.\n\n\"...I guess there's one more thing, Cathy. You're a natural. Your body knows what it wants. You care about others and want to share yourself with them. We just had to set those instincts free.\"\n\nKelly jumped in. \"So you're saying that Cathy is just a lean, mean, sex machine?\"\n\nWe all laughed. I looked up into Cathy's sparkling eyes. \"I wasn't ready to put it quite that way, but you're pretty much right, Kelly. Cathy's got what it takes to drive anyone wild.\"\n\nA bit of color appeared on Cathy's cheeks. \"I guess we had better move to the kitchen before my head is too big to fit through the door! Let's see if my cooking can match my growing reputation.\"\n\nKelly and I followed, chuckling, and perched on the bar as Cathy finished up dinner.\n\n\"I've made some beef burgundy,\" she said. \"I like how I can do most of it before guests come over.\" She quickly stir-fried some green beans, and she pulled something that smelled good out of the oven.\n\nWe settled back into general conversation during dinner. I enjoyed talking to two smart, attractive women who shared a general appreciation for life. I knew that both of them liked the outdoors with our larger circle of friends, but I learned that they often would hike around the area together. I filed that away for future reference.\n\n\"Thank you, Cathy. This was a wonderful dinner,\" I said, as we were finishing.\n\n\"I'll second that,\" Kelly added. \"You did a great job.\"\n\n\"You're both welcome,\" Cathy replied. \"Let's clear these dishes and adjourn for some more 'conversation.'\"\n\nWe got everything cleared and filed back into the living room. I moved one of her chairs to the side of the couch so she could stretch out and face away from me. \"It will help you to focus on yourself if you're not looking at us directly,\" I explained. \"Kelly, you can sit across as before. OK, Cathy, go ahead and get comfortable. Kelly, did you and Cathy discuss your role any further?\"\n\n\"If you mean me sitting here and getting all worked up watching you two, yes we discussed it,\" Kelly replied. \"For the betterment of my good friend, I will sacrifice and endure this torture alone, while you two get off any of a thousand ways.\"\n\nKelly waived off my next question before I even voiced it. \"Yeah, yeah, I know. Cathy is fine with me\u2014let's see\u2014taking care of some personal business while I watch.\" She looked at each of us. \"You both owe me big time.\"\n\n\"Of course,\" I replied smoothly. \"Cathy, we'll go through the relaxation exercise again and then speak to the voices. This time should go faster with the Controller and Protector, because we've already established their roles and can move directly to working with them. Would you still like to start on the beach?\"\n\n\"Yes, that worked well,\" Cathy replied.\n\n\"Let's go back to your beach. Can you hear the waves again?\" I took Cathy through the relaxation exercise, watching her still herself into a receptive state. I took her on a swim through the ocean again, emerging to find the visitor by the fire.\n\n\"Like before, Cathy, have each voice identify themselves when I ask for them. May I speak to the Controller again?\" I asked.\n\n\"You are speaking to the Controller.\" Cathy replied.\n\n\"Thank you, Controller, for your excellent work last time. I think that Cathy might appreciate you a little more.\"\n\n\"She does. She saw that I can help her get what she wants. I wish she would recognize that more often.\"\n\n\"It often takes some work to understand and appreciate the various voices that we have,\" I replied. \"We'll keep working on it during these sessions. Would you be willing to control the other voices, including yours, while we talk again?\"\n\n\"Yes, I will do that.\"\n\n\"Thank you, Controller. Now, may I speak to the Protector?\"\n\n\"Speaking. I am the Protector.\"\n\n\"Thank you,\" I replied. \"You have done a wonderful job of protecting Cathy, and all three of us, from hurt by the outside world. I'm also happy that you protected Cathy from something else. That is the feeling of regret from not following some of her desires, especially with people she trusts. Have you thought about that?\"\n\n\"I usually protect Cathy from others and from herself. I haven't thought about protecting her from regret.\"\n\n\"I know that's a bit different from your usual role. If you felt that Cathy genuinely trusts the people she is with, would you be willing to protect her from regret?\"\n\n\"As long as I trust who she is with and feel that she won't be hurt, I would do that.\"\n\n\"Thank you, Protector. You have an important role. Now, may I speak to Desire?\"\n\nCathy shifted on the couch and stretched her shoulders back. I had the ability to stare at her chest for the first time this evening, and if she had a bra on, it sure didn't show. Sensing something, I looked over and saw Kelly looking at me, a knowing grin on her face. She jerked her chin over to Cathy, as if to say Go ahead and look. You know you want to.\n\nI did, so I let my eyes roam over Cathy again. She shifted again and sighed. \"This is Desire.\"\n\n\"Good to talk to you again. How did our last meeting go for you?\" I asked.\n\n\"It was a great start. Clearly, Cathy did something she has always wanted to do, and look at how happy it made her! Cathy opened up and connected emotionally and visually with both of you. She needs to do that more, especially since she has so much to share.\"\n\n\"It takes time to completely open up with others,\" I said.\n\n\"You're right, and that's why I'm here to push her in the face of the things holding her back.\"\n\n\"What would you like her to do now?\"\n\n\"Well, for one thing, I'd like her to show all of herself to you, and see your pleasure as well.\"\n\nI stirred, my cock rising. \"We can probably arrange that. What else would you like?\"\n\n\"I'd also like her to connect physically this time. I'd like her to show herself as you made love.\"\n\nSuddenly, I found it very difficult to concentrate. \"I...I think we could arrange that as well.\" I glanced over at Kelly, who winked. \"Tell us why you would like that.\"\n\n\"I want Cathy to see you as she feels you inside her. I want her to see your appreciation. I want her to feel the release that comes from baring all of herself. She would get much more out of making love that way.\"\n\n\"Those are good reasons,\" I replied.\n\nCathy's voice dropped. \"There's one more thing. Making love to you is Cathy's first step toward some other things I want for her, but we'll save those for later. I don't want to scare her other voices.\"\n\nMy mind raced with possibilities. What was it that Cathy ultimately wanted? However, I was smart enough to know that some things must come at their own pace. I steered the conversation away.\n\n\"Thank you, Desire. I think we have some good things to work with. Now, may I speak to Joy?\"\n\n\"This is Joy speaking.\"\n\n\"Joy, thank you for filling us all with exhilaration last week. We shared something that will stick with us throughout our lives. Can we ask you to do that tonight as well? To keep her joyful as she shares her private self?\"\n\n\"I would love to. Cathy has enough joy to share with both of you.\"\n\n\"Thank you, Joy. Now, may I speak to the Controller one more time?\"\n\n\"Speaking.\"\n\n\"Will you do the job you did last time: to control any voices of fear or protection that would keep Cathy from experiencing something special tonight?\"\n\n\"Yes, I will.\"\n\n\"Thank you. May I ask one more favor?\" I said. \"Will you work to control my orgasm tonight, just like you are doing with Cathy? To see me brought to the edge and held there?\"\n\n\"Yes. I will work to do that.\"\n\n\"Thank you,\" I replied. \"Now, would you return us to the beach so we can talk some more?\"\n\n\"We are back at the beach.\"\n\n\"Thank you. Cathy, can you hear the water at the beach?\"\n\n\"Yes, it sounds wonderful.\"\n\n\"Would you like to try the things that Desire talked about?\"\n\n\"Yes, I would love to,\" Cathy replied.\n\n\"Would you like to show me all of yourself?\"\n\n\"Anything that you would want to see. What do you like?\"\n\n\"I think I'll love everything about you, top to bottom,\" I said. \"I would like you to feel as comfortable as possible, though, as you share so much of yourself.\" A sudden inspiration hit me.\n\n\"Kelly, do you have any ideas for how we should do this?\"\n\nKelly jerked her head up, surprised, but she quickly recovered, smiling a wicked smile. \"OK, you asked. How about this? We'll go into the bedroom, where you undress and lay face up on the bed. Having you naked with the two of us clothed should keep Cathy from worrying too much about herself. She can show you what she wants, and she can do to you what she wants.\"\n\nI wondered if Kelly's quick response had involved a little pre-planning, or maybe fantasizing. I didn't matter; it sounded hot. My cock was straining in my pants. \"Cathy, how does that sound to you?\"\n\n\"I love it. Time to get off this beach!\"\n\n\"Let's walk back to the cottage...\" I brought Cathy back to the couch.\n\n\"Do you remember everything we talked about?\" I asked.\n\n\"Yes, and let's get started,\" Cathy said, getting up and holding her hand out to me. I followed her back, with Kelly in tow.\n\nCathy lit a couple of candles and then turned back to me. Kelly broke in. \"I'm looking forward to this next part. Take 'em off!\"\n\n\"I think you're enjoying this too much for me to owe you anything,\" I replied. I sounded a little more confident than I felt. I wasn't shy about my body, but it was different to undress in front of two women who were simply watching. I concentrated on getting my shoes off, and then just getting off the next piece of clothing. Soon, I was sliding my slacks off, and my cock jutted through the front of my boxers. No use keeping them on any longer. I slid them off as well, and laid down on the bed, my cock waving in the air.\n\n\"Nice,\" Cathy said approvingly as she looked me up and down. \"Let's start with some kisses.\" She climbed on the bed and hovered over me, bringing her lips to mine.\n\nHer contact was electric, and I responded with a tingling feeling all over my limbs. I was exposed and a bit vulnerable, and I didn't know what she was going to do next. Who is really discovering new things? I wondered. We kissed each other passionately, loving with our lips.\n\nSuddenly, Cathy pulled back. Her eyes on mine, she flirted with the hem of her top and then pulled it over her head. Her lovely breasts came into view, unencumbered by a bra. She looked into my eyes, seeing my appreciation. \"You can look all you want,\" she said softly.\n\n\"You're beautiful, Cathy,\" I responded, lowering my gaze to her chest. Her breasts sat firm and athletic, and her nipples were standing out, begging to be touched. Sensing my desire, Cathy leaned forward. I raised my hands up and caressed the sides of her breasts.\n\n\"Mmmm,\" Cathy sighed, and she leaned further down. My hands wandered further up her breasts, and finally worked around the small bumps of her areola. Cathy made approving sighs, and I let my fingers drag across her nipples, watching as they snapped back. Cathy looked down, watching me delight her nipples. I stayed at this a while, knowing that it would drive her desire higher.\n\nI noticed that Cathy was gently thrusting her hips, attesting to her mounting arousal. She dropped down and brought a breast to my lips. I eagerly ran my tongue around the nipple, and then I kissed and sucked it, pushing it a little with my lips. Cathy moaned and pressed her nipple into my mouth.\n\nCathy pulled way, getting an involuntary moan of frustration from me. \"I'd better stop. You're so good, I could do that all night, and I've got other plans,\" she said. With that, she unzipped her slacks and slid them down her legs. That left her in a pair of lace black panties. She got up on her knees and straddled my hips, looking into my eyes as I soaked up the sight before me. Athletic thighs disappeared into her panties, and her toned abdomen pulled my gaze up to her breasts. I made sure she saw me appreciating everything, and I noticed the smile that played at the corners of her mouth.\n\nI couldn't help myself. \"Nice,\" I said approvingly.\n\nKelly snorted over in her chair. Cathy narrowed her eyes and wagged a finger at me, but she kept that smile. She returned her hands to her hips, playing with the waistband of her panties and looking a question at me. I nodded, my anticipation communicating itself to her. Cathy eased her panties down, and twisted to my side to pull them from her legs. She leaned over to kiss me as she straddled me again. I hungrily tasted her lips. Then, with a deep breath, she broke the kiss.\n\nI kept my eyes on hers as she straightened up onto her knees\u2014I wanted her to notice. We looked at each other for a long while. I then let my gaze wander down her neck, her lovely chest, her abdomen, and then down between her legs. Her neatly trimmed bush sat above her beautiful shaved pussy. Her inner folds just peaked out from her outer pussy lips, and I imagined my cock sliding between them. I gazed for a long time, thinking that no one had ever invited me to look like this before. Although confessing shyness, Cathy was actually taking me places I had never been.\n\nI let me eyes wander back up to Cathy's. \"You are incredibly beautiful,\" I said softly. \"I've never seen anyone so beautiful before.\"\n\nIf Cathy doubted my words, she must have believed the expression on my face. To me, beauty involves many dimensions, including the intent behind what is visible. Cathy's intent infused her natural allure with arresting power. She was a goddess come to earth to teach me about women all over again.\n\n\"Thank you,\" she said. Then she smiled. \"I'm glad you like.\"\n\n\"I like.\"\n\nCathy remained in that position for a while longer, studying me as my eyes resumed their journey over her body. She seemed to come to a decision.\n\n\"One more pose, if you would like something a little more daring?\"\n\n\"Anything,\" I replied. Right then, I would have let her do anything.\n\nShe quickly swung her knees to my side and twisted herself around, straddling me again but now facing away. I watched her shake her hair down her back, and my eyes traveled down to her firm ass, loving the view. Cathy then started lowering her chest and arching her back. Her pussy came into full view, and it opened to expose her clitoral hood. Her inner lips were flushed with arousal. I looked higher and saw her puckered hole reveal itself as she continued to stretch back toward my gaze. She was truly showing me everything.\n\nCathy twisted her head around, a questioning look in her eyes. She couldn't believe she was doing this, but she was immensely proud of herself as well.\n\n\"Cathy, you are so incredibly hot, I don't know what to say.\"\n\nShe smiled. \"Your eyes are telling me everything.\"\n\nCathy remained posed there, letting me study her pussy and ass. While I was absorbed, I felt a slight brush against my cock and jumped like I'd been shocked. My eyes whipped back to Cathy's face, where I saw an impish grin.\n\n\"Jumpy, are we?\"\n\n\"Maybe a little,\" I admitted, sighing as I felt Cathy's hand encircle my cock. I reaching out and ran my hands along her legs and ass, getting a sigh in reply.\n\nI glanced over at Kelly in the chair. She had sunk down and had one hand sliding between her legs.\n\n\"How do we look?\" I said.\n\n\"Pretty damn hot, I'll have to admit,\" Kelly replied. \"You're one lucky guy.\"\n\n\"Don't I know it,\" I said, gazing back at Cathy bending over me.\n\nCathy rose up and turned back around, settling down with my cock sliding along her pussy lips. The wetness dripping down my cock testified to her arousal. She slid back and forth, looking into my eyes.",
        "\"Mmmmm.\" Cathy leaned forward and fused her lips to mine. Her breath came fast and hot\u2014her show had turned her on. I ran my hands over her back, her ass, and back up to her chest, rolling her hard nipples between my fingers. She kept the friction light on my cock to draw out the pleasure for both of us.\n\nCathy drew herself up and looked down, watching her pussy slide over my cock. She then raised her hips, took my cock in her fingers, and positioned it at her opening. She slowly sank down, and I felt my cock slide into her liquid heat. An involuntary groan escaped my lips. I looked up and saw that smile play about her mouth again. She could feel and see my appreciation, and that bolstered her confidence in revealing herself. She stretched and closed her hands behind her head, thrusting out her chest and looking down at me. I let my gaze wander from her face, framed in her arms and hair; down to her breasts, pushed out with hard nipples standing tall; and further down to her pussy lips, encircling my hard cock. I had never enjoyed a sight so beautiful before.\n\nMovement from Kelly's direction caught both our eyes. I looked over to see Kelly pull her shirt over her head, and then undo her bra. She kept going, sliding her skirt and panties off in one motion, throwing a towel down and slinking back down in the chair.\n\nKelly saw us watching. \"OK, I admit it. I'm horny as hell, and I don't want to waste the opportunity. Watching you two fuck is something I've never done before. It's way better than any movie.\"\n\n\"I've always preferred live theater myself,\" I observed, feeling Cathy's laugh twitch down my cock.\n\n\"OK, smarty-pants,\" Kelly said as her laugh subsided. \"You better get back to your starring role,\" she said as she cupped one of her breasts.\n\nOrdinarily, I would have been hungry to watch Kelly pleasure herself. She was certainly striking naked, with firm, medium-sized breasts topped with hard nipples. However, I had a goddess astride my hips, and I shifted my gaze back to Cathy. She smiled back at me, pleased that my attention was back. She shifted slightly up and down.\n\n\"You feel wonderful, Cathy,\" I said as I brought my hands behind my head. I was going to let her control our lovemaking. I enjoyed driving my cock into a woman, but it was also particularly erotic to lie still and let a woman work her hips over me. The gentle motion could really build up the pleasure in my cock. Cathy took her time, slowly rocking up and down, watching me enjoy her body.\n\nAfter several minutes of pleasure, Cathy was biting her lip and breathing more heavily. She brought her hands down onto my chest and starting twisting her hips, driving my cock inside her. She looked down and watched her pussy slide down on my cock and then release it as she raised forward. I watched our union as well, knowing that Cathy was getting to experience the visual side of sex.\n\nI felt Cathy drive faster. I looked up into her eyes and saw her concentrating, and I knew that she was climbing her way to orgasm. She locked eyes with me, and we passed our need and readiness back and forth. I remained still and felt the tingling pulse throughout my body. Cathy worked me expertly, lightening the pressure as we both got close, extending our mutual pleasure. I noticed a deep red color spread from Cathy's neck to her breasts.\n\nCathy's face contorted, and her torso heaved as she wrestled with the edge of her orgasm. Finally, she surrendered, letting a sob escape her lips as the spasms wracked her body. I felt the contractions squeezing my cock, and I could remain still no longer. Grabbing her hips, I thrust upward into her and held on as my body twitched beneath her. I came so hard, it was nearly painful.\n\nWhen my eyes refocused, I saw Cathy looking down at me, a smile of contentment on her face. Cathy moved her hips slowly, milking aftershocks out of both of us, and she leaned down for a kiss. We let the kiss linger as we rode out the final waves.   \n\nCathy pulled back and studied me. \"Brad, I, that...\"\n\n\"I know,\" I replied, \"no words.\"\n\n\"Exactly.\"\n\n\"How about 'Fucking incredible!'\" Kelly interjected. \"I'm glad I had already cum, so I could pay attention as you two went into orbit. I'm going to get off on that image for years to come.\"\n\n\"I'm glad you enjoyed it, Kelly. And you're right, 'fucking incredible' is literally correct for what we were doing,\" Cathy observed, trying to hide a smile.\n\n\"Exactly, Miss Smart-Ass.\" Kelly stood up and started finding her clothes. \"I had better get dressed before I start playing with myself again, since you two don't look like you're moving anytime soon.\"\n\n\"I would jump up and help, but I'm being pinned down here by this sex fiend,\" I responded, getting another wagging finger from Cathy.\n\nKelly finished dressing and looked over again. \"You look lovely, Cathy, with that glow of getting fucked really well. You two get a good night's sleep\u2014I'll just show myself out and call tomorrow. Remember, behave yourselves since your chaperone will be gone.\"\n\n\"Could I get you to put out the lights?\" Cathy said. \"I don't think I have the energy to get up.\"\n\nKelly laughed, shaking her head, but she did turn the lights off as she got up. We could see the lights dim in the rest of Cathy's place as Kelly let herself out. As she left, Cathy collapsed down on me. \"Good sex always puts me to sleep.\"\n\n\"Me, too,\" I answered, finding her lips for a kiss. \"Let's find the sheets.\"\n\nWe snuggled against each other and were out.\n\nI woke feeling great, partly as the memories of last night, and part due to the soft skin against my cock. Cathy spooned against me, and my morning hard-on was nestled in the crack of her ass. My arm draped across her chest, and her hand covered mine. I couldn't tell if she was awake or not. My hard-on was certainly not going anywhere in this position.\n\nI wondered how our arrangement covered the morning after. If I honestly thought about it, I knew that I was seeing Cathy in a new light. I enjoyed our dinner and conversation together, and I had laughed many times to her dry wit. Of course, the sex was fantastic. Cathy might think she was shy, but she had all the instincts for passionate love, as well as the skills for physical pleasure. Would she be interested in making love outside our \"clinical\" boundaries?\n\nCathy soon answered my question. She stirred slightly, and snuggled her hips further back into me. \"Mmmmm,\" she sighed. Her hand pulled mine against her, cupping the bottom of her breast. I took the hint and slowly started caressing her flesh, getting a long moan of approval.\n\nI moved up from the underside of her breast, finding her nipple hard and prominent. I circled and rolled it between my fingers, also cupping her entire breast with the nipple sliding between my fingers. Cathy's breathing deepened as she savored the sensations. After a while, she lifted her arms over her head and luxuriously stretched, pushing her breast into my hand and twisting her ass against my cock. That got a moan out of me.\n\nCathy responded, lightly rippling her ass along the underside of my cock. I'm sure she could feel my precum leaking out. She shifted along me, and I could feel her ass settle into the junction of my cock and balls. Her grinding became stronger, and I pushed into her, reveling in the feel of her ass cheeks. I moved my hand from one breast to another, tweaking the hard nipples back and forth. We ground into each other for a long time, and I wondered what she was feeling with my balls pushed into her ass. I knew what I was feeling, which was incredible pleasure.\n\nKnowing if I stayed in this position much longer, I would cum over Cathy's ass, I rolled her on her back and climbed over her. After a long, good-morning kiss, I leaned down and captured her nipples in my mouth, letting them pop out as I pulled my lips back. Cathy squirmed under me, and I could feel her need. I traced kisses down to her navel, and worked my way to her waiting pussy. She gasped and spread her legs as I dragged my tongue along her slit. I found her slick, hot, and ready.\n\nCathy pulled her legs back and rested her feet on my shoulders, giving me easy access to her spread labia. I continued gently working around her pussy until I felt her bucking against my tongue. I took this as a signal to move higher and attack her clit.\n\n\"Oh, God, don't stop,\" Cathy moaned as she grabbed my head and pulled me tighter. I ran my tongue all around her prominent clit, and finally sucked it inside my mouth as Cathy's breathing got ragged and she started tweaking her own nipples. I never left her clit now, alternative dragging my tongue across it or sucking it as Cathy pushed into my face.\n\n\"Uh, oh, God, ah, aaaaahhhhhhh,\" Cathy wailed as she came, bucking against me. I felt her pussy contracting around my tongue and knew she was coming hard. After a long set of aftershocks, she collapsed back and dropped her feet from my shoulders. \"God, that was exactly what I needed. Thank you so much, Brad.\"\n\n\"Anytime, Cathy. I loved watching your pleasure.\"\n\n\"Be careful what you say. I could get used to that wake-up!\" Cathy laughed. She stretched languorously. \"Give me a second to recover, and I've got one more thing in mind this morning. I think you'll like it,\" she winked.\n\nCathy rolled over and stretched one more time. \"Mmmmm.\" I enjoyed the sight over her back, ass, and legs shifting under my gaze. She climbed up on her hands and knees and looked back at me. \"I want you inside me.\"\n\nMy cock leapt to an even harder level as I positioned behind her. I lined up my cock and she pushed back, her hot wetness taking me in easily until I bottomed out. Cathy dropped her head down to the mattress, looking back between her legs. \"Ahh, this feels great.\"\n\nI started slow, savoring the feel of my cock working deep into her from behind. Cathy kept her head down, watching as she pushed back into me. Her thrusts became harder, and I matched her, feeling her grind her ass into my hips.\n\n\"Cathy, you feel amazing.\"\n\n\"So do you, Brad. Don't hold back, I want it all.\"\n\nI grabbed her hips and pulled her into me with each thrust, picking up the pace. Cathy was moaning now, and she crossed her arms under herself, playing with her nipples. I watched her ass push back into me, and I felt the cum boiling in my balls. I looked down at my cock plunging in and out of her pussy and felt my balls tighten. \"Uhhhh,\" I groaned, getting the same response from Cathy.\n\nI held the pressure back as long as I could, feeling the pleasure mount in the base of my cock. Just as I was about to cum, I pulled Cathy back against the underside of my cock to hold back just a little bit more. Somehow I noticed Cathy shuddering beneath me, and I finally surrendered to the explosion within me. \"Uhhh, uhhh, uhhh, aaaahhhhh,\" I cried out as I shot into her spasming vagina.\n\nWell, there aren't many words to adequately describe a really great orgasm, so I just existed in mindless pleasure as my cock continued to spasm. I kept my cock deep within Cathy, and she continued to grind her ass around it as she milked her orgasm for all it was worth. We stayed like that for a long time, whimpering our contentment to each other. At last, I slumped forward and kissed Cathy between her shoulder blades.\n\n\"Mmmmm,\" Cathy said. \"What a way to wake up.\"\n\n\"I could do that every day for the rest of my life,\" I answered, only then realizing how much meaning might lie behind those words.\n\nCathy turned her head and cast me a sideways, appraising glance. Then she smiled. \"Thank you, Brad. It was really, really, good.\"\n\n\"You have no idea,\" I answered. \"Care to lie down beside me?\"\n\n\"I'd love to.\" I pulled slowly out of Cathy and we both groaned as my cock dropped free. We lied down and I wrapped my arm around Cathy, spooning against her again.\n\n\"Mmmmmm,\" Cathy said. \"This is so relaxing.\"\n\n\"Even after a great night's sleep, that huge orgasm is making me sleepy again,\" I replied.\n\n\"Me, too,\" Cathy replied, and I felt her breathing slow and deepen. I took that as permission to let myself drift off, happy that Cathy and I shared a desire to nap after sex.\n\nI woke when I felt Cathy stir against me. I stretched behind her, thoroughly satisfied but starting to get hungry.\n\n\"Time for some breakfast?\" Cathy asked.\n\n\"You bet. All that activity has worked up a good appetite!\"\n\n\"Well, let's see if you can cook breakfast as well as you make love.\"\n\n\"I don't think that's possible, and I'm a pretty good cook!\" I replied.\n\n\"Oh, yes, I forgot how wonderful it is to wake up with a comedian,\" Cathy sighed playfully, as she stretched and got up. She turned around and saw me watching her. \"Don't let your eyes bug out.\"\n\n\"I'll have to be careful about that,\" I said and started reaching for my bag beside the bed. As Cathy went into her bathroom, I pulled out an athletic outfit that was good for lounging and got some underwear and pants on. After a few minutes, she came out in an athletic outfit of her own, winking at my bare chest as she moved toward the kitchen.\n\nI went into the bathroom, cleaned up, and finished dressing.\n\n\"What's for breakfast?\" I said as I walked into the kitchen.\n\n\"Omelets, toast, and some fruit,\" Cathy replied. \"Why don't you look in the fridge and see what fruit you can find? Also, do you like coffee or tea?\"\n\n\"Tea, please.\" I looked into the refrigerator and was pleased to find a good selection of strawberries, blueberries, mangoes, and other fruits. No wonder Cathy looked so good.\n\nI got a good fruit bowl cleaned and cut up, and helped Cathy chop the onions for the omelets. She deftly moved through the kitchen, and I found myself admiring the way she carried herself and carried on a sparkling conversation. In short order she had an omelet at my place with a mug of steaming tea and toast.\n\n\"This looks fantastic!\" I said.\n\n\"Thank you. Here's to a wonderful evening and morning of new experiences.\" Cathy clinked her mug against mine, and we fell to our breakfast. We lingered over our plates as only the weekends allow, talking and laughing about all manner of things. We cleared the plates, and before things got awkward, I walked over and gave Cathy a hug, stroking her hair. \"Thank you for a wonderful breakfast.\"\n\n\"You're welcome. I enjoyed sharing it with you.\"\n\nWe held each other a bit longer. Finally, Cathy tilted her head back and looked up into my eyes. \"Brad, thank you so much for everything. I became more the person I wanted to be last night, letting go of some fears that were holding me back. Better yet, I had a fantastic person to share it with. I'm really glad that we're doing this together.\"\n\n\"Cathy, I can't tell you how powerful this has been for me, and how lucky I am to be sharing with you as well.\"\n\nCathy smiled, and then we both got quiet. We saw the confusion in each other's eyes, and we broke the embrace. I think we both needed some space to assimilate what had happened between us. \"I'd better go collect my things,\" I said.\n\n\"Here, let me help you.\" Cathy followed me back to her bedroom. I gathered my bag while Cathy retrieved my toothbrush from the bathroom. As I walked out, I paused and looked at the disheveled bed, reliving what had transpired there.\n\n\"Afraid you won't see it again?\" Cathy startled me, and I jerked my eyes up to see her leaning against the doorframe, a small smile in her lips.\n\n\"I've learned that in this life, you have to enjoy and savor each moment as if it's your last,\" I said. \"You never know what might happen.\"\n\n\"Oh, I've got at least a session or two left before I'm cured, so I think you'll get back,\" she said lightly.\n\n\"That's great news. I want my patients to be fully healed before they leave my care,\" I replied in my best doctor's voice. \"Please be sure to schedule your next session at your earliest convenience.\"\n\n\"Yes, Doctor. I'll check with the receptionist,\" Cathy chirped back and led me back to the front door.\n\nWe reached the threshold. On impulse, I stopped and pulled Cathy tight. \"I won't forget last night. It was, well....\"\n\n\"Hard to describe? I think I know what you mean.\" She hugged me back. \"Good-bye, Brad. We'll talk soon.\"\n\nI walked out the door and got into my car, waving at Cathy in the door. Driving home, my mind was in a whirl.\n\nWhen I got back, I decided to go for a long run and do some thinking. The day was warm but not oppressive, so I got into a running zone and tried to sort out what had happened. Cathy had become a good friend\u2014a really good friend\u2014I laughed to myself, but was there something more? What had happened this morning? Was that just an extension of our session the night before, with Cathy following through on her desire to get laid from behind? Normally, I felt like I could follow a woman's signals reasonably well, but this situation changed the game. Intimacy was part of what we both signed up for, and it could easily lead to assumptions that went farther than Cathy wanted to go. At the same time, she was suspending some of her judgment in our voice sessions, and that could lead to her identifying with me more deeply than she would otherwise. I needed to sense her mood in the times where we weren't working with each other, where she was more naturally enigmatic.\n\nI had to figure out my own emotions as well. Let's face it, it's easy to fall in love with a woman when you lust after her beauty and you're sharing mind-blowing orgasms. The real question is whether that feeling has staying power, and the answer comes from the other times you're together. How much did I like to be around her? Did we fit together? It was early, but I had to admit that I wanted to find out. I would have enjoyed our dinners without the sex, and would be looking forward to seeing her again. And looking forward to getting in her pants, I thought to myself, smiling inwardly.\n\nThe rest of the run was good to get my mind calmed down and reconnect with something besides sex. I got back and showered, and kicked back to rest a bit.\n\nWhen the knock sounded, I could feel Kelly's presence, and I was right. \"I wondered how long it would take before you came over. How many times?\"\n\nKelly stuck her tongue out. \"Let's just say you weren't the only ones enjoying yourself this morning. I collapsed like you did when I got home, but I woke up horny as hell. I wasn't kidding last night\u2014you two were totally hot. Watching Cathy display herself for you, and watching your eyes devour her, that's what really did it. I'll have to play with myself again after hearing Cathy's account of this morning. Cathy said you had a talented tongue.\"\n\n\"I'm a man of many talents.\"\n\n\"I guess modesty isn't one of them,\" Kelly shot back.\n\n\"Yeah, well, I've sacrificed some virtues in my quest to be the ultimate lover.\"\n\n\"Whatever, lover-boy.\" Kelly got serious. \"Speaking of talents, how comfortable are you with where Cathy might be going with this?\"\n\n\"What do you mean?\"\n\n\"You heard her last night, when Desire was speaking.\" Kelly emphasized the word. \"She said this was a first step. If what you did last night and this morning was a first step, she could be taking you to some pretty far out places!\"\n\n\"I guess I hadn't thought about that.\"\n\n\"Well, maybe I'm trying to do that for you. I wouldn't want Cathy to suggest something and you back out. She's invested a lot of trust in you, Brad, and it would be devastating for you to reject her desires. It would make her retreat again, after she's made so much progress. So I'm going to ask some personal questions.\"\n\n\"When have you not?\" I wondered aloud.\n\nKelly laughed. \"You have a point there. Anyway, let's start with the obvious. How comfortable are you with anal sex?\"\n\n\"Why's that obvious?\"\n\n\"You're stalling, big guy, but I'll tell you anyway. When Cathy bent over for her 'daring' pose last night, I knew what you were seeing just as much as you did and Cathy did. It doesn't take much women's intuition to connect the dots. I'm guessing that Cathy wouldn't show you her most private place unless there is a future reason. Women as smart as Cathy always know how much they are showing.\"",
        "\"OK, that's a pretty good story. Maybe you can just look down and guess the answer to your question.\" My cock was tenting my shorts. \"I love anal sex. I once had a girlfriend who liked it, and we explored each other in several ways.\" Kelly raised an eyebrow. \"Yes. I think I can handle any of Cathy's requests in that area. I might even enjoy them,\" I finished, smirking.\n\nKelly rolled her eyes. \"Good answer. Now...\"\n\n\"Look, Kelly, I'm pretty open-minded. I kind of doubt that Cathy will ask anything that I will balk at. I mean, I'm a horny guy.\"\n\n\"I appreciate your sincerity, but I've got to know. If there is anything that you won't do, I want Cathy to know beforehand so she won't offer it up in a moment of confession and then clam up as she sees the shock in your eyes. Since I'm such a wicked, kinky girl, I figure I can think of about anything she can. Now, how about spanking?\"\n\n\"Which way?\"\n\n\"Both. Does it matter?\"\n\n\"No,\" I said laughing, \"I'm just being a pain in the ass. No problem.\"\n\n\"You sure are. Bondage?\"\n\n\"Check. Haven't done it, but I could enjoy tying her up. Since I know you're going to ask, yes, I could probably let her do it to me. The main thing is whether it's a positive experience for both of us. I guess I would draw the line at something degrading.\"\n\n\"That's a great answer, Brad. I don't think Cathy has degrading in her personality, either giving or getting, so I think we're all safe there. I'm hoping she does the tie-up thing to you, though\u2014I would love to see that.\"\n\n\"No doubt, you kinky bitch. What other depraved things are you thinking about?\"\n\n\"Domination and submission?\"\n\n\"The light kind is fun. Serous stuff's not really my style, but I could probably learn. Maybe it would be a growth experience.\"\n\nKelly rolled her eyes. \"Always a smart-ass. OK, let's move on to taking pictures or making movies.\"\n\n\"Sounds like a good time, as long as we're careful where they end up.\"\n\n\"Exhibitionism?\"\n\n\"Aren't we doing that already with you in the room?\"\n\n\"I'm talking about with strangers,\" Kelly said.\n\n\"As long as we're careful, I could go there,\" I replied.\n\n\"Spraying her with cum?\"\n\n\"I'd rather not have to pull out too often, but that's more because Cathy feels amazingly good when I come inside her. Yeah, I would do it if she enjoyed it.\"\n\n\"OK, we outlawed group sex in the ground rules. There are wilder things out there, but I figure she would ask me before bringing them up. I guess you pass this part of the test.\"\n\n\"Thanks for the vote of confidence. There's more?\"\n\n\"Yeah, and this is even more personal.\"\n\n\"Oh, boy, I can't wait.\"\n\nKelly looked directly at me, and her eyes blazed intensity. I immediately lost the playful attitude and waited for her question. Time lingered as she burned into me.\n\n\"What do you think of Cathy herself?\" she said softly.\n\nMy face flushed and I felt like a seventh-grader surrounded by a crowd of girls asking the same question. \"I, uh, well...\" I stammered. I looked down, gathering my thoughts. \"Look, Kelly, I need you to be a friend to me, too.\"\n\nShe reached out, lifted my chin and looked into my eyes. I saw openness and honesty there. \"I am, more than you know. I'll keep your confidence in this.\"\n\nI took a breath. \"OK, I thought about this a lot on my run. Cathy is beautiful and fantastic in bed. You can see that yourself\u2014what's not to like? But the weird thing is that we're getting to know each other backwards in some ways. I'm sharing her mind and her body at a pretty deep level, but it's been pre-arranged. We didn't do the simple stuff, like go on a first date, like I've always done before. There's nothing wrong with that, but it makes it harder to separate lust from love.\"\n\n\"What does your heart say?\"\n\nI felt within myself. \"Cathy is the best thing that's ever happened to me.\" I looked up, surprised to have revealed that much. \"Wow, I didn't know that was there.\"\n\n\"You're starting to pass the second part of the test,\" Kelly replied, her eyes knowing. \"Now, what do you think Cathy is feeling?\"\n\n\"That's harder. She obviously likes me and trusts me with some of her most personal secrets. But that can happen to a good friend too. Also, I've got to factor in our arrangement. We have to eat together and sleep together as part of the sessions. Cathy is very kind and gracious, and she would treat me that way no matter what she ultimately wanted...\"\n\n\"You're overanalyzing this. Again, what does you heart say?\"\n\nI stopped using words and just felt deep down as I looked into Kelly's eyes.\n\n\"Cathy's falling for me.\"\n\nI sensed approval in Kelly's face. \"My work today is almost done,\" she sighed. \"Now, I'm a friend to Cathy, too. Of course, if I suspected that she was falling for you, I would want to check that out to make sure she didn't get hurt. As I said before, she's invested a lot of trust in you, so this wouldn't be some regular boyfriend breakup.\"\n\n\"It's funny that those two questions were a lot harder than all your 'Will I do this or that sex act' questions.\"\n\n\"You're a great guy, Brad. You know what the truly intimate questions really are.\" Kelly started for the door.\n\n\"So did I pass the test?\" I asked as I held the door open for her.\n\nKelly blew me a kiss. \"That part is self-graded, lover-boy.\"\n\n***************\n\nThis time, I sent the flowers first. The note read:\n\n\"Just wanted to express my thanks for your 'patronage.' I really appreciate your continued business. Please call anytime!\"\n\n--Dr. Brad Heller.\n\nI could easily have said more, but I wanted to keep my feelings a bit indirect for now. Cathy was on a roll with her sexuality, and I didn't want to complicate that with too much romance for a few more weeks.\n\nCathy called that evening. \"I loved the flowers, Brad. Thank you so much!\" We talked about a few things and scheduled our next session for Friday. I went out that night with some friends to catch some dinner and a couple of beers. Their company helped keep me from obsessing over Cathy.\n\nKelly called the next evening. \"I've got a plan.\"\n\n\"Oh?\"\n\n\"It involves us going to a resort for the weekend. I figure we can get more done than in one evening back here. Cathy is up for it. If you are, just leave it to me. I know a place about an hour away.\"\n\n\"Sounds great. I'm in. Is this just so you can see us the next morning?\"\n\n\"Yeah, I was feeling left out. By the way, I gave the green light to Cathy to bring up whatever fantasies she wants.\"\n\n\"Thanks. We'll both appreciate it. I know I will.\"\n\n\"Sweat dreams, Brad. It's going to be a long week.\"\n\n\"You said it, Kelly. 'Night.\"\n\nIt was a long week, but I called Cathy a couple of times and enjoyed talking to her. We were both looking forward to the trip and planned some time around the pool as well as a hike in the mountains surrounding the resort. I figured we needed to do a few things other than just screw all weekend.\n\nThursday evening, Cathy called. We chatted about our week, and then she said, \"Brad, I'm really looking forward to our trip this weekend.\"\n\n\"I am too. I've missed you.\" I decided to let that much out.\n\n\"Missed me, or some outstanding sex?\"\n\n\"Boy, that's a tough question,\" I replied.\n\nCathy laughed good-naturedly. \"See you tomorrow, Brad.\"\n\n*\n\nPlease take a moment to vote and offer any comments. They mean a lot.\n\nAdditional chapters linked below."
    ],
    "authorname": "Antonio_y_Cleopatra",
    "tags": [
        "cunnilingus",
        "shy",
        "friends",
        "female masturbation"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-web-ch-02"
}