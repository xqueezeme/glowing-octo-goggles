{
    "title": "500 Annies Epilogue",
    "pages": [
        "I couldn't leave it alone. Sorry. \n\n...................................................\n\n\"Good evening, listeners. This is Barbara Barnes, host of the newly syndicated Book Report, on PRI, coming from WORD, 86.7 on your dial.\n\nThis is our very first broadcast, and I can't think of anyone I would want to be my first guest more than Joe Williams, author of '500 Annies, and 'Average Joes', both best sellers. His series of interviews with me eighteen months ago actually was the catalyst for launching my new program. As you may be aware, the program got us two PRI awards and a Peabody. The rest, as they say, is history.\"\n\n\"Speaking of history, we're repeating it somewhat. The interview is coming to you live from Alumni Hall, and we're in the middle of our fall pledge drive. Once again, all proceeds from his appearance will go to the station. Also again, he has donated 500 copies of his latest book, 'Average Joes', to the pledge drive. And as before, they are all autographed.\"\n\nThe place was packed again. Joe could never understand why people thought he was so interesting. He and Barbara were on stage, two stools and a spotlight, just as before.\n\n\"Good evening, Joe. It's so good to see you again. How have you been since we last met?\"\n\n\"I'm fine Babs[he had learned she preferred to be called that], How are you? I understand congratulations are in order. How does it feel to be a newlywed?\"\n\n\"Wonderful! Listeners, I don't know if you're aware of it, but I recently wed Mike Perkins, my engineer. It's been three glorious months so far.\"\n\nThere was a smattering of applause.\n\n\"Joe, I need to confess something. After our last interview, I took your words to heart. I gave Mike a copy of your book, a big kiss, and told him to read it. He did, then we did. Get married I mean. I owe you a debt of thanks.\"\n\nHe grinned. \n\n\"Nonsense! I'm sure he would have figured it out eventually. But still, glad I could help.\"\n\n\"Speaking of newlyweds, how's your wife Maria?\"\n\n\"She and the kids are doing fine, thanks for asking.\"\n\nSmoothly transitioning into the meat of the interview, she asked him how his new book was doing.\n\n\"Oh, it's doing great. It's not as powerful as '500 Annies', but it's still a good read, and it is a bestseller.\"\n\n\"Yes it is, I enjoyed it immensely. Did you know both books are required reading at some colleges?\" \n\n\"No, I didn't Babs. I know both books got some very nice reviews.\"\n\nBabs had done her home work.\n\n\"Indeed they have. Cosmo, Vanity Fair, Modern Woman, and a host of other female oriented magazines gave them high marks. Cosmo said and I quote: 'These books should be read by anyone who has ever been in or is in a relationship, and that pretty much describes the adult population of the world.', end quote.\n\n\"Mens Health, GQ, and most other male oriented magazines echo these sentiments. Oprah raved about them on her network. You were in the running for Times Magazines' Man Of The Year last year. Has this affected you when you go out in public?\"\n\n\"It did a little at first, but where my family lives now people barely notice. They're a lot more likely to notice my wife and daughters, all very beautiful women. Some people know who I am, but to most I'm just that retired guy who lives in the old Jeffers place. I love it. Sometimes there's an advantage to being average.\n\n\"Was writing \"Average Joes\" easier than your first book?\"\n\n\"Actually, it was a lot harder, for a variety of reasons. I never intended to write again, I thought I said all I had to say with the first book. 'Average Joes' was my wifes' idea.\"\n\n.................................................\n\nMaria went home with my ring on her finger. I was a little apprehensive about the kids' reaction, but they were, to quote Mickey, 'cool with it'.\n\nCassie and Tina called and asked if it was too soon to start calling me Daddy. I almost choked on my tears and told them it would make me very proud, but check with their mother first. Her response was I might as well get used to it.\n\nThe promotional tour was finally over. To paraphrase an English poet, 'I shook the dust of Europe off my shoes', and returned home.\n\nHome was kind of an interesting term. I leased a four bedroom condo in Chicago because Maria didn't want to move the kids out of school before the end of the school year, and refused to actually live with me until the wedding.\n\nMy publishers were after me to write another book while the first was still so popular, but I really wasn't interested. I was snuggling with Maria one night, she and the kids spent almost every weekend at our condo, when she asked me if I had considered it.\n\n\"Not really. I don't think of myself as that kind of writer. \"500 Annies' was actually a fluke, a combination of circumstances that can never be repeated. I don't have the imagination to write fiction, and can't think of anything else that interests me.\"\n\n\"Why don't you write about relationships? You seem to be good at it.\"\n\n\"Already done that, honey, and frankly the thought of having more women tell me their life stories doesn't appeal to me anymore.\"\n\n\"Who said it had to be women? Ever wonder what guys think?\"\n\n\"Not really, I imagine they all think like me.\"\n\nShe sat up in bed and pulled my face into hers.\"\n\n\"That's where you're so wrong, my love. I've never met a man who thinks like you do. I doubt if you can find one who does. You're one in a million, maybe a billion, and that's probably why I love you so much.\"\n\nShe started kissing me and all thoughts of conversation fled my mind.\n\nBut the next evening, when they had all gone back to get ready for school the next day, and I was rattling around in that big condo by myself, I thought about what she said.\n\nWhat if she was right? After all, my first book taught me I didn't have a clue what women thought, what if I was wrong about the guys.\n\nI met with the publishers, just to kick the idea around. They got so excited it was unreal. The next day they had a contract ready and a very nice advance check. They wanted me to have it done in six months, but I had it amended to a year. I wanted to do it right.\n\nIt would still be a lot faster than the first one, but I was experienced now, so it should be easier, right?\n\nWrong.\n\nThe first four interviews had me thinking I had made a serious mistake. Women are for the most part far more articulate than men, and are much more comfortable talking about abstract concepts like relationships.\n\nMen, apparently, are much more closed, less likely to 'share', especially with another guy. I got a lot of 'shit, bro, you know what I mean' when I actually had no clue.\n\nI was complaining to Maria again, and again her insights were dead on.\n\n\"They don't open up to you because you are a guy. I bet if a woman did the interviews, you'd get a lot different results.\"\n\n\"Have I told you lately how much I love you? You're a genius.\"\n\nI was twirling her around the kitchen while the kids laughed.\n\n.................................................\n\nThe next Monday I checked with the publishers and they thought my plan had merit.\n\nMaria was an assistant editor, and did a lot of fact checking and research. She would be perfect.\n\nI went back home for a few days a month to check on my house and see my old friends, but when I walked into Harrys' this time I was on a mission.\n\nI had asked Annie and Chad to meet me there, and asked Harry to have one of his part timers there to watch the bar. We met at Janes' table.\n\nAfter we exchanged greetings and caught up with each other, I explained what I wanted.\n\nAt first they didn't know what to say, but after some more discussion they agreed to do what I asked on a trial basis.\n\nI needed women to do the interviews. They would be my researchers, writers did this all the time. I would listen to them and collate the data, just as before, but with three interviewers it should go much faster.\n\nOf course, they would be paid, and paid well. Anne wanted to protest, but I told her if she didn't take the money, someone else would. She didn't know I knew things were tight for them. Chads' company downsized, and he had to take a reduction in pay just to keep his job. They had two kids in college and could use the money.\n\n\"I don't feel comfortable sending you out alone, so I want Chad to accompany you, staying in the background. Of course, he will be compensated for his time. Do them on the weekends, it'll be a lot easier to connect. And you'll have to travel. I've found you don't get as much honesty if they know you.\"\n\n\"Here's a recorder, and a credit card in the name of my corporation. I had incorporated at the urging of my accountant and lawyer. Put everything on it, everything. Meals, lodgings, drinks of coffees you may have to buy. It will go on my expense sheet, and I can deduct it off my taxes. Don't go cheap on me either, the more you spend the bigger the deduction.\"\n\nI turned to Jane. I was a little worried about her because of her disability, but she would be using her mind and not her body.\n\n\"Jane, are you interested? Same deal as Annie, but work it around Harry.\"\n\nI had already talked to Harry and he thought it was a good idea, and not just for the money, they were doing all right. Funny thing about a bar, when the economy is good, people drink to celebrate, when it's bad, they drink to forget. Either way, the bar makes money.\n\nHe wanted to do something to get them both out for awhile, he thought they were stagnating sitting in the bar all day.\n\nWe talked for a little, ironing out details. Before I left they wanted to know why I picked them instead of professionals.\n\n\"I don't want professionals, I want people with an open mind. Professionals will analyze what they think you want and try to get it for you, you guys won't.\"\n\n\"Bedsides,\" I said grinning, \"You're partly responsible for all this. Think of it as cleaning up a mess you helped make.\" \n\n.................................................\n\nI was a little nervous explaining my idea[actually her idea] to her. I did it over lunch at one of her favorite restaurants, a little place I found by accident that specialized in Cuban dishes. She said it reminded her of when she was a child and her Mom would cook the dishes her Dad liked so much. I mentioned how much we liked it in an interview and business picked up tremendously. The owners loved us. Our picture was displayed prominently on their wall, with the owners. I had a hard time paying for meals, and finally told Antonio if he didn't let me pay I wouldn't come back. That scared him enough to back off.\n\nShe loved the idea. She would still be employed by the publisher, but I would be paying her salary. The kids loved it too, because when we traveled on the weekends we almost always took them with us.\n\nThings worked out pretty well as far as travel. My agent and lawyer got me a really good price for the movie rights, seems three studios were in a bidding war for them. The winning studio was going to film it in Toronto, it was much cheaper, sadly, than in the U.S., and they hired me as a technical advisor. Mostly it was to assist the screenwriter understand what I was going through and thinking at different times during the writing of the book.\n\nTo be honest, I was extremely uncomfortable with my life being made into a movie. Still couldn't understand why anyone thought a guy like me would be interesting.\n\nAnyway, it meant I would be spending at least two months during the summer in Canada, and Maria and the kids were going with me.\n\n..................................................\n\nBabs interrupted the narrative when he mentioned the movie.\n\n\"What did you think of the movie?\"\n\n\"I thought it was very well done, they didn't deviate much at all from the book, mostly because the screenwriter, a brilliant young man, thought the story was good enough on its' own.\"\n\n\"Did you like the casting?\"\n\n\"I thought it was brilliant. They deserved the Golden Globe they got. I figured they would Hollywood it up with extremely attractive actors but they didn't. Later I found out there was a lot of infighting to get parts.\"\n\n\"It came down to John C. Riley or William H. Macy to portray me. Either one would have done an excellent job, but what was more important to me was they had that 'everyman' look, not classic Hollywood leading man type. I'm sure either one would have been great, but Mr. Macy was spectacular.\"\n\n\"Amy Adams was a surprise as Annie, it wasn't a very big part, and she is a very attractive woman. They dressed her down a bit, but after all, the original Annie was, and I guess still is, an attractive woman.\"\n\nBabs started to ask if he had any contact with Annie since she last talked, but thought better of it.\n\n\"What did you think of Selma Hyack playing the part of Maria?\"\n\n\"I loved it, both are very attractive ladies. They actually became friends. You have no idea how surprised I was one day to walk into the house we had leased to find them in the kitchen cooking together, not to mention how blown away the kids were.\"\n\nHe stopped for just a minute.\n\n\"I guess what surprised me most of all was the fierce competitions for the cameos of some of my interviews.\"\n\n\"I heard Sally Fields threatened to actually kill people to get the part of Annie 337. Beyonce Knowles surprised me with how good she was as the abused Annie, but the newcomer they got to play Annie 499 surprised everyone with her performance. It led to several very good roles for her later.\"\n\nBabs interjected once again.\n\n\"let me run some numbers by you. It was the top grossing film of the year. It won Golden Globes for casting, screenwriting, best supporting actress for Ms. Hyack, best leading man for Mr. Macy, and a tie for best cameo between Sally Fields and the newcomer Jannie Pruitt.\"\n\n\"At the Oscars, it was nominated for movie of the year, best actor, best supporting actress, screen writing, and casting.\n\nMs. Hyack won, Mr. Macy was just barely edged out, and the screen writer and the casting directors all won. I understand you and your wife were there.\"\n\n\"Yes, just another episode of unreal happenings in my life. It was funny, Maria was dressed to the nines, and she was stunning. I had on a tux, and didn't look too bad myself, but on the red carpet and at the after party they ignored me and wondered exactly who she was. She was embarrassed, but I thought it was funny.\"\n\n\"I watched the show. She was stunning. How did it feel being one of the presenters?\"\n\n\"Again it was unreal. I only did it as a favor to the director, and I was really happy when Bill got it for best screenplay based on my book.\"\n\n\"Any plans to make 'Average Joes' into a movie?\"\n\n\"I don't know. The same studio that did '500 Annies' optioned the movie rights, but I have no idea if they're going to do anything with it.\"\n\n\"Let's hope they do. If it's half as good as the first, it will be well worth watching.\"\n\nTurning back to the original topic of the actual writing of the book, she asked him what, in his opinion, was the major difference between the writing of the books.\n\n\"As I said, this one was a lot harder. Men don't vocalize as well as women. So as I listened to the interviews I tried to hear what wasn't being said. It's kind of funny, while women expect men to read their moods and emotions some times, men seem to think women should actually know they love them. Where the ladies are seeking constant affirmation of their love, men take it for granted they shouldn't have to say anything, because a woman just knows.\"\n\nHe laughed.\n\n\"I tell you Babs, if humans didn't have such a high sex drive, we would have disappeared off the face of the planet thousands of years ago.\" \n\nThere was a ripple of laughter from the audience.\n\n\"I'd have to agree with you on that one, Joe. I've only been married three months, and already it's like pulling teeth to get him to say he loves me.\"\n\nShe turned and faced the side of the stage, where Mike had his equipment set up, and stuck her tongue out. The stage crew hit him with a light, and he looked like a deer caught in the headlamps of an oncoming car. \n\n\"Glad I don't have that problem, I'm happy to say 'I love you' often.\"\n\n\"Whether he'll admit it or not, Babs, we men like to hear it. And I think you just proved your point.\"\n\nBabs was looking at Joe, and didn't see Mike get up and approach her. He grabbed her head, planted a deep kiss on her, and smiled. Then he took her microphone.\n\n\"I love you, Barbara Barnes Perkins, and will until the day I die. There, now it's recorded for posterity.\"\n\nBabs lost her professional demeanor and blushed, before smiling. Joe was the only one close enough to see the moisture in her eyes.\n\nThe crowd roared.\n\nJoe was chuckling as Mike repositioned the microphone.\n\n\"Thanks Mike, glad we cleared that up. And Babs, promise me you'll leave that in when you rebroadcast this.\"\n\n\"Are you kidding? I'm gonna have it put on my phone as his personal ringtone.\"\n\nMore laughter.\n\n\"Would you like to take a few questions from the audience, Joe?\"\n\n\"Sure. I always get surprised and sometimes it's fun.\"\n\nSoon they had a stage hand going through the audience with a wireless mike.\n\nThe first question, from a woman roughly his age, was about his marriage.\n\n\"I've seen you new wife, she's quite the beauty. Do you ever compare her to Annie?\"\n\nHe reflected for just a second before answering.\n\n\"Wow, so much for easy questions. The answer is no, I don't. It would be an exercise in futility. Annie was quiet the last few years, and was never demonstrative. Maria is vocal, and likes to touch. We're almost never together when we're not holding hands, rubbing shoulders, or brushing up against each other. If she doesn't like something she lets you know pretty quick, and if she does she lets you know even quicker. Usually, I know exactly where I stand with her, whatever's on her mind usually comes out her mouth. I like that, it makes my life easier.\"\n\n\"Annie and I were together in our youth, when Maria and I got married she was just shy of forty eight, and I was fifty four. \"\n\n\"To actually compare them I would have had to have parallel experiences with them, and I didn't. I'm glad actually, the memories I have of Annie, good and bad, can't compare to the memories Maria and I are making.\"\n\n\"Well, damn, I guess I did just compare them.\"\n\nThe woman smiled.\n\n\"I remember reading something you said about her being half Cuban and half Irish, both groups known for being temperamental at times, does she have a temper?\"\n\n\"Yes she does, but luckily I've only experienced it once, and that was enough. We've talked about that episode, and I feel sure it will never be repeated.\"\n\n.................................................\n\nAfter the Christmas break, Maria returned to work. The women almost immediately noticed the ring, and they loved it. The fact that she was in Italy when she got engaged added an extra dimension of romance to the story. Plus, she had announcement put in her hometown paper, and the Sun-Times put it into their celebrity column.\n\nMy lawyer didn't find out I was engaged until March, when I stopped by to sign some papers. I told her in a few months I'd probably be changing my will, my family was about to get a whole lot bigger and I wanted to make sure everyone was covered.\n\nInstead of congratulating me, she went ballistic.\n\n\"You did what? Why didn't you call me first?\"\n\nI couldn't understand her.\n\n\"Why should I have called you? Did I need your permission to fall in love?\"\n\n\"No, damn it, but you went into it naked. Now she's going to expect all sorts of things. Never mind, I'll word the prenup to take care of that.\"\n\n\"Why would I need a prenup? I intend to spend the rest of my life with this woman. If it does goes bad, we'll split up, she'll get fifty percent, and we'll go our separate ways. I can't imagine that happening.\"",
        "She looked at me coolly.\n\n\"I bet you never thought your first wife would leave you after plundering your bank accounts, but she did, didn't she? And if you go into it without a prenup, if she gets a really good lawyer, like for instance me, she could end up with almost everything you've got.\"\n\nThat stung, a lot. I told her I would have to think about it. She did get me to agree to let her do some groundwork, and that I'd get back to her in a timely manner. Which I promtly forgot to do.\n\nShe was smiling that shark smile really good lawyers have when I left. \n\n................................................\n\nThe work on the book was progressing nicely, the girls were averaging about fifteen a week, much faster than when I did it on my own. Both Annie and Jane seemed to be enjoying it, and both confided in me that the weekend travel was a big boost in their love life. I told them to stop before they gave me too much information, I hated to think I was financing mini honeymoons. Jane said she was disappointed, she had several nice videos she wanted to share.\n\n\"I can't walk well anymore, but get me horizontal and I can compete with the best of them.\"\n\nI heard Annie shrieking with laughter when I hung up.\n\n................................................\n\nMy happy little world crumbled in mid April.\n\nI didn't see Maria Friday, I was told she took a day off. When she and the kids didn't get off the train at the normal time I didn't worry much, sometimes school activities caused them to run late. When the last train came and went I was past worrying. None of them were returning my calls.\n\nFinally, about ten, Tony answered his phone.\n\n\"Where are you guys? Nobody's hurt, are they? Why hasn't anybody returned my calls?\"\n\n\"We're fine, except for Mom. What did you do? She's been crying all day. She only let me answer to tell you not to try to call us for the rest of the weekend, and not to come up. You need to fix this Dad, I've never seen her like this. She said to tell you her lawyer would contact you Monday.\"\n\n\"Lawyer, why would I need to talk to a lawyer? Please son, get her to talk to me.\"\n\n\"We're all trying, Tina and Cassie have been with her all day, and now they're crying. I have to go. Fix it, Dad, please.\"\n\nHow could I fix it if I didn't know what was wrong. I spent a miserable weekend holed up in the condo, the silence mocking me. I didn't go to see her, but I called her cell and home phone until she shut them off.\n\nMonday, I was sitting at my computer, trying to work and failing pitifully, when the phone rang. Hoping it was Maria, I grabbed it on the second ring.\n\n\"Mr. Williams?\"\n\nIt wasn't Maria, damn it.\n\n\"Yes, who's calling please?\"\n\n\"Mr. Williams, this is Rebecca Garza. I'm Marias' cousin, but more importantly I'm her lawyer. We find the terms of your prenup completely unacceptable, and I'd like to set up a meet with your lawyer to discuss it.\"\n\n\"Prenup? What prenup?\"\n\n\"The prenup your lawyer presented to her Thursday afternoon. Are you telling me you don't know about it?\"\n\n\"That's exactly what I'm telling you. Can you fax me a copy? Good. I'll get back to you by four this afternoon.\"\n\nTwenty minutes later I had the fax in my hand.\n\nIt was cold. If she cheated, she got nothing. If she passed gas and I didn't like the smell, out she went with nothing. If I decided I didn't want her anymore, I retained title to all wealth and possessions, and she got $1000,000, max. I needed to see my lawyer. \n\nI nearly tore the door off her office when I got there. I threw the fax at her and asked if she was responsible for it. I think she had real fear in her eyes.\n\n\"Yes, you told me to look into it. You didn't get back to me, so I assumed you wanted me to handle it.\"\n\n\"You assumed wrong. If I lose her over this, I'll sue you for every silly little thing I can think of. You won't be able to work, you'll be too busy fighting me. As soon as one is over I'll think of something else.\"\n\nShe was definitely frightened now.\n\n\"Please Mr. Williams, I'm sure I can fix this. What do you want me to do? Whatever it is, consider it done.\"\n\nFor the next five hours, she listened and wrote notes. I think she wanted to object a few times, but thought better of it. \n\nI told her I expected the finished draft by noon tomorrow, and then I was going to set up a meeting with Maria and her lawyer. She was not to contact Maria or her lawyer until I gave the word.\n\nI called Ms. Garza and set a meeting without Maria or my lawyer. She seemed a bit uneasy.\n\n\"Look, if you think it's unethical don't do it. But I really think it's in her best interests to let me meet with you. If at any time you say stop, I'll leave immediately. Please Ms. Garza.\"\n\nShe finally agreed, saying she would have another lawyer present, just in case. I would have agreed to anything.\n\nThe next evening found me on the platform of the Grant City station. The memories were quite painful. A sedan pulled up, and a willowy blonde, pretty in a washed out kind of way, called my name.\n\n\"Mr Williams? I've come to take you to our office. My name is Whitney, Rebecca and I work together. She's tied up and couldn't come, so I agreed to fetch you.\"\n\nIt was silent in the car for a few minutes, when she suddenly spoke.\n\n\"I read your books. I wish they had been around ten years ago, it would have helped me a lot.\"\n\n\"I wish I had too, none of this would be happening now.\"\n\nShe didn't know how to respond so she didn't.\n\nRebecca reminded me a lot of Maria in mannerism and facial features. Physically though, they were both beautiful in different ways. Rebecca was a lot taller, and built well, not like the earth goddess shape Maria had, but I could imagine a lot of lustful thoughts were directed her way over the years. She wasn't married. I wondered why. Oh, well, not my business. I had my own relationship to save.\n\nAfter the pleasantries and coffee was poured, I got right to it.\n\n\"Ms. Garza, I'll get right to the point. I had no idea my lawyer had presented her with the prenup. In her defense, she was looking out for my interests, but she did this without my permission.\n\nI've corrected that error on her part. I've come up with a new proposal, one I hope your client finds acceptable. But to be clear here, there will be no negotiation. She either accepts it as is, or the marriage is off.\"\n\nI could see the storm clouds gathering on her brow. I held my hand up as if to ward off her explosion.\n\n\"Ms. Garza, before you say anything, please read through the document. All I need out of you tonight is that you will show this to Maria, and that she will come to the meeting. Actually, as you will see in the paperwork, if she doesn't come, the relationship is over.\"\n\n\"I'll wait while you give them a once over, if you think you can get your client to live with that, set the meeting.\"\n\nI sat quietly while she perused the document. At first her brow wrinkled, and she reread several pages before passing them on to Whitney. By the end she was smiling, and Whitney actually giggled twice. She was far more attractive when she smiled.\n\nFinally she leaned back in her chair and looked at me through those cool eyes.\n\n\"Mr. Williams, Mr Williams, you are an incredibly deceptive man. No wonder you surprise everyone you meet. Oh, yes, when I found out who you were I pulled up every interview you ever did. Due diligence you know. The radio interviews were quite good.\"\n\nShe stood to shake my hand.\n\n\"I'll do my best to advise my client in the right decision. I'll call your lawyer and set the meeting. Don't be too hard on her, she's quite good, and did have your best interests at heart. I'm surprised she agreed to this.\"\n\nI let the friendliness slip off my face.\n\n\"I didn't give her a choice, Ms. Garza. I threatened to destroy her if she didn't.\"\n\nShe actually flinched. Then she smiled that shark smile.\n\n\"Like I said, more to you than meets the eye. I'm glad you didn't decide to become a lawyer. See you soon, Mr. Williams.\"\n\nWhitney was a lot friendlier on the trip back. She asked for and I promised her autographed copies of my books for her, and surprisingly, her ex husband and his new wife.\n\n\"I don't want them to end up like we did.\"\n\nThat must be some interesting history.\n\nWhen we pulled up to the station, she had one more request.\n\n\"Could you please sign two for Rebecca? It might do her some good to read them.\"\n\n................................................\n\nThe meeting was set for Friday afternoon. This time the kids met me at the station. They hugged me like I had been gone a year. Cassie couldn't stop crying.\n\n\"We thought we lost you, Dad. Please don't let this happen again.\"\n\nI petted and fussed over her until she calmed down, and then the lawyer and I piled into the minivan for the meeting. The kids weren't allowed in, but swore they would be right outside when it was over.\n\nTina whispered to me as we got out.\n\n\"Please don't be too mean to her, Dad. She'll cry for awhile and smile for awhile. She's still a little shaky.\"\n\nI promised.\n\nSara[my lawyer] and I went into the conference room. Rebecca and Maria were on one side, we sat on the other. Whitney was there too, she didn't need to be but told me she wouldn't miss it for the world. We sat without acknowledging each other.\n\n\"Mr. Williams\" smiled Rebecca, \"My client accepts the terms and conditions of the prenup, and promises to honor them faithfully. First, though, I think Ms. Jenkins has something to say.\"\n\nMy lawyer faced Maria.\n\n\"I apologize, Ms. Garza, for causing you pain. Please remember I was acting on what I thought were the best interests of my client, just as I will for both of you after you marry him.\"\n\nMaria smiled and actually patted her hand.\n\n\"I know it was nothing personal. I'm well aware of the loyalty Joe inspires in those around him. This is probably for the best, it cleared up a lot of things we would have had to address later.\"\n\nRebecca cleared her throat.\n\n\"Now, per your instructions, I will go through the agreement point by point and Ms. Garza will verbally respond to remove any doubt that she isn't in total agreement.\"\n\n\"My client agrees that all moneys brought into the marriage will be considered communal, and should the unlikely event occur, they will divide them equally should they part, with agreed upon exceptions. Do you agree?\"\n\nMaria spoke.\n\n\"I do.\"\n\n\"These are the exceptions. A college fund in the amount of $150,000 per child will be placed into a trust, not to be touched except for educational purposes. If any or all children pursue more than a four year degree, monies will be made available. Do you agree to this?\" \n\n\"I do.\"\n\n\"Your current income between job and social security benefits is around $70,000 per year. The equivalent of twenty years wages, $1,400,000 will be put into a personal account in your name only, never to be touched by Mr. Williams. By accepting this you agree to stop working and devote your time to you family. Do you agree?\"\n\n\"I do.\"\n\n\"In the event of your deaths, all inheritance will be divided equally between all five children. Certain personal items will be divided according to the wills. Do you agree?\"\n\n\"I do.\"\n\nIn the event of more grandchildren, should monies be available, an educational trust fund will be established. Do you agree?\"\n\n\"I do.\"\n\n\"Mr Williams has decided not to finish out the agreed upon year of engagement. Your actions have made him reconsider, and if you truly love him, you will be married no later than June 30, this year. Do you agree?\"\n\nMaria sobbed for just a second.\n\n\"Do you need a moment?\"\n\nShe shook her head.\n\n\"No, no. I'll be fine.\"\n\n\"How do you answer to the last stipulation?\"\n\n\"I do. I will, oh, you know what I mean!\"\n\n\"At this point Mr. Williams would like to speak. Remember, you are not to speak to him except to answer questions.\"\n\nI faced her.\n\n\"Maria, I love you more than I thought I could ever love a woman, including Annie. You hurt me badly. You know she left because she wouldn't communicate with me, and now you do the same thing. I can't handle that again. If you can't talk to me, if you won't tell me what's wrong, we can never resolve it. I want you solemn word, on the cross you wear around your neck, that you will never do anything like this again. Can you do that? Be warned before you answer, if this happens again, I WILL LEAVE YOU. There will never be another chance. What do you have to say?\"\n\nShe shook violently. I thought maybe she was going to pass out, and instantly reached for her.\n\nShe waved me off, and reached into her blouse to pull out the cross, the little silver Celtic one I had given her. She kissed it.\n\n\"I swear by this cross and what it represents I will always talk our problems out, and I will NEVER behave again like I did this week.\"\n\nShe kissed the cross again and put it back.\n\nI smiled for probably the first time in a week.\n\n\"I believe you honey. Now, there are two more points to make, and we can put this behind us.\"\n\nRebecca resumed speaking, tears glistening in her eyes.\n\n\"Mr Williams reserves the right to adopt any and all of your children that are agreeable to it. Do you agree?\"\n\n\"I, I, I do.\"\n\nShe was weeping openly.\n\nIt was hard for Rebecca to keep a straight face.\n\n\"Mr Williams requires you to accept, that should you ever display a tendency to repeat the last weeks' events, that you submit to being disciplined with the first hairbrush, belt, or hand available, in an attempt to beat some sense into you. Do you agree?\"\n\n\"With all my heart!\"\n\n\"That concludes this meeting. I will file the agreement, excluding the last part. That will be considered a private matter.\"\n\nShe turned to Maria.\n\n\"You are one lucky bitch. He's the only man I've ever met who makes me want to rethink my decision to never marry. Now kiss him, you dumb ass.\"\n\n..................................................\n\nWe married June twenty second. \n\nJane was matron of honor. Rebecca, Tina, Cassie, Anne, AJ, and Sara were bridesmaids. I thought it was odd that she wanted my lawyer, but she said she owed it to her for moving us along. Women.\n\nHarry was my best man. Chad, Tony, Mickey, Bill[my old boss], Allen[my agent], and Mike were ushers. Bunny was the flower girl.\n\nMaria was a vision in ivory lace. A thick veil, and a long train. She wanted a Catholic ceremony, I don't know how she pulled it off, with me being Methodist, but I think it may have had to do with my corporation sponsoring every sports team they had for the next two years, complete with absolutely new everything.\n\nBecky agreed to keep the kids, and we went to Niagra Falls, her choice. I would have chosen somewhere with a lot of sand and sun. It was still a great week.\n\nI nearly had a heart attack when after we left the reception, she showed me what she wore under the gown.\n\nA silk and satin corset, white, of course, with white stockings attached to the garters of the corset. \n\nShe took the bodice off first, exposing the corset to me.\n\n\"Look, you can take the cups off. Isn't that cool?\"\n\nThe sight of those monumental breasts made me feel anything but cool.\n\nShe slipped her skirt off and I nearly had a heart attack. She had shaved every hair. He mound was completely bald. She hadn't worn panties at all.\n\n\"I was almost dripping before the priest finished. I'm surprised a lightning bolt didn't hit us with what I was thinking. Do you like?\"\n\nShe twirled around, still in her veil and high heels.\n\nI had her on the bed almost instantly.\n\n\"Honey, wait.\"\n\nShe unclipped her hose and rolled them down. She handed them to me.\n\n\"Tie me down, babe. When your tongue hits bare skin, I don't think I'll be able to stay on the bed.\"\n\nEven tied down she damn near bucked me off, but I stayed with her through all four orgasms, a personal best.\n\nShe returned the favor with interest. I thought a vacuum cleaner had locked down on me. She stayed with me all the way through, something she hadn't done before.\n\n\"If you can do it, I can do it.\"\n\nShe said as she flopped beside me.\n\nI thanked God I hadn't met her when she was young before I passed out. She would have killed me.\n\n...............................................\n\nAfter we returned from the honeymoon, we set up housekeeping as a family. Her house had long been outgrown, and I looked around until I found something suitable. \n\nFive bedrooms, large lot, privacy, and best of all, in the right school district. For the first time in their lives, each child had a room of their own. It was a lease, I didn't plan to stay long.\n\nMickey and Tony each had a drivers license by now. Maria was running in circles with their school activities, since she was a full time mom now the kids got more involved and I soon put a stop to that. I bought her one of those Cadillac SUV vehicles that Bobby drove us around in. She seemed to really like them. She almost complained about the cost, saw the look in my eyes, and thought better of it.\n\nThe original plan was to let the boys use the minivan for practices, but it was pretty much worn out. After putting it in the shop for the third time, I had enough.\n\nMickey had been eyeing a little used Ranger four wheel drive truck that a friends dad put up for sale. I looked at it, had it checked out, and bought it.\n\nI told Tony if he found something he liked tell me. He found a six year old Jeep Wrangler. Again I had it checked out and bought it.\n\nMaria ALMOST pitched a fit. \n\nI quickly pointed out they were my kids too, and if saved us some time I was all for it.\n\n\"Besides, now they won't be trying to borrow your car for dates.\"\n\nThe girls were almost fifteen, and would soon be driving.\n\nI called a family meeting.\n\n\"Here's the deal kids. Everybody gets a car. They won't be new cars because I can't see spending that much on a starter car no matter how much we have. Prove to me you can be responsible, and you'll all get something better down the line.\"\n\n\"If you get a speeding ticket, you lose the car for a month. If you get caught texting and driving, you lose it for a month. If you get caught drinking and driving, you lose the car period. If you have an accident, depending on the circumstances, you might lose the car from a month to forever. Don't try me on this. Everybody clear? Good.\"\n\nI had bought a car for me while I was at it.\n\nA Cadillac CTS-V, five hundred fifty six turbocharged horsepower. I called it Maria 2.\n\n\"Why did you name your car after me, honey?\"\n\n\"Look at it. It's beautiful, the upholstery is great, and it's the second most powerful thing I've ever been in.\"\n\nShe giggled and cooed, and said as long as it was second best she could handle it.\n\nI didn't know how to approach the kids about adoption, until I noticed Cassie signing a home work assignment Cassandra Williams. I held it up to her and she got embarrassed.\n\n\"Don't be mad, Daddy. I wish it was my real name.\"\n\n\"I can do that for you, if you want. For all of you if you want.\"\n\n\"Do you want to?\"\n\n\"As much as I wanted to marry your mother.\"\n\nShe screamed. The whole family came running.\n\nShe tried to explain but couldn't stop crying.\n\n\"Kids, I just told Cassie I wanted to adopt her. Not just her, but all of you. Think about it, really think about it, and let me know.\"\n\nThe girls were in instantly, the boys took almost twenty minutes. Mickey came out with his trademark, \"I'm cool with that.\"\n\nIt wasn't all roses and sweetness. They hadn't had a man in their home in years, and I wasn't used to a house, even as big as the one we had, being so full.\n\nBut we learned, and we were committed to each other. \n\n.................................................\n\n\"But, I'm glad she's so passionate, it's one of the things I love about her.\"\n\nThe lady nodded and sat down.\n\nA gentleman took the mike and asked the million dollar question.",
        "\"Have you talked to you ex wife since the books came out? If you did, how did she feel about them?\"\n\nI took my time answering the question.\n\n\"My ex wife has not spoken to me since the day before she left. I have no idea what her opinions are of my book, or my life. She choose this, so I let her have it that way.\"\n\n..................................................\n\nWhat I didn't say is I had spoken to her.\n\nWhen the book was released, it was off on the publicity trail. Thanks to the recently released movie, I was a hotter property than before.\n\nBut I was smarter this time, and had a little more control. Everything was going smoothly until the European swing. I had made plans, and Jane, Anne, Harry, and Chad all spent two weeks with us in France, England, Germany, and Spain. I even had Jane, Maria, and Anne talk about the research on British television.\n\nMy net worth was closing in on thirty million by now, so I never worried about the cost.\n\nOf course I took the whole brood with me. AJ was radiant, three months along, a boy this time. Chad fussed after her constantly.\n\nWe were in Spain, on the coast. I was of course always on the move, so I cherished what time I had with my family. I came in and the guys were looking at me funny and grinning. What was that?\n\nBunny was just over four, and she came running into my arms.\n\nI grabbed her and swung her around.\n\n\"What did you do today, my cute little Bunny?\"\n\n\"We went to the beach PopPop. Mommy and Nana and ever body showed their boobies! I did too! Every body there was showing them.\"\n\n\"Huh?\"\n\nAll the girls looked embarrassed, but the guys collapsed laughing.\n\n\"The beach we went to was topless Dad. We didn't know it until we got there, and Bunny took off before we could stop her. The man wouldn't let us in until we took off our tops. I suppose we could have sent the guys in, but I was in full Mommy mode and didn't hesitate. When I caught her and turned around, there was the whole family. So we stayed.\"\n\nAJ was glowing crimson. I looked at the guys, trying to keep a straight face. \n\n\"You bastards! Going without me!\"\n\nChad tried his best to keep a neutral demeanor.\n\n\"All I can say, Joe, Is you're one lucky man.\"\n\nThat did it, everybody collapsed laughing.\n\n\"Don't worry, man, I got plenty of pictures\" gasped Harry.\n\n\"Noooo,\" wailed all the girls.\"\n\nMike quipped up.\n\n\"Don't worry, we didn't take pictures, but there were plenty of guys who did. Might want to surf some Spanish websites, you know?\"\n\nThat set us off again, while the girls looked stricken by the thought.\n\nLater Maria asked me if I was mad.\n\n\"A little, I guess. But as long as everybody knows they're private property, and doesn't touch, I'll deal with it.\"\n\n\"Sorry honey, but you might not get to touch them for a couple of days. I was too embarrassed to rub suntan lotion on them and they're a little burned, but there's other parts you can play with to make up for it.\"\n\nSo I did.\n\nIt was a great holiday, but soon the real world intruded and they left. Mickey and Tony went with Mike, and that left just the girls and I. This was by design.\n\nJust before we left to go overseas, AJ called me.\n\n\"Dad, I need a favor.\"\n\n\"Sure honey, you know I'll do anything for you.\"\n\n\"You might not want to do this. Dad....I want you to find Mom. Please. I need to show her Bunny, tell her she's going to be a grandmother again. And I need to ask her why. Why did she abandon us.\"\n\nI was quiet for a minute. \n\n\"Are you sure? What if she rejects us again? Can you handle that?\"\n\n\"I don't know, but I have to try. Please Dad.\"\n\nI sighed. \"All right. I'll see what I can do.\"\n\n.................................................\n\nIt was pretty easy to find her. I gave the detective agency I hired in Madrid her information, and they found her through her social security number.\n\nShe was working as a tour guide in a small town on the coast. Seems like you have to file taxes everywhere these days.\n\nI read the detailed report when I got to London. Her lover had left her in nine months, perhaps because of money. Apparently she was broke.\n\nShe had taken the money and invested it in the Spanish stock market. Their economy hadn't collapsed, but with all the surrounding countries going down the tubes, it dragged them along.\n\nShe still had a bit left, but not enough to survive on for long.\n\nI told the girls the day I was going to do it. I knew her habits, where she would be when. \n\nShe was off on Mondays and Tuesdays. She liked to paint water scenes, so she would go down to the harbor a lot.\n\nI almost didn't recognize her. She had gained twenty to thirty pounds, and it didn't look good on her. She used to exercise religiously, I wonder what happened?\n\nHer hair was cut much shorter. She had it restrained in a kerchief. She set her easel up and selected a partially finished canvas.\n\nI walked up behind her, watching her for a second. She didn't turn around, people watched painters all the time.\n\n\"You know, Anne, one of the things I regret most was the cost of your lessons. You were never any good, and I don't see any improvement.\"\n\nShe flinched like she had been struck, and smeared the scene, but she never turned around. Instead she started cleaning the smear.\n\n\"Jesus Anne, would it kill you to acknowledge me? If it's any consolation, I'm not here for me, I'm here for your daughter. Remember her? She's pregnant again, a boy this time. Bunny is four now, a bundle of energy. I can arrange for you to meet her, I won't be anywhere near, I promise.\"\n\nShe didn't turn, just started reworking her canvas.\n\nI wanted to snatch her around to face me, and rail at her, but I didn't. Fuck her if that's the way she felt.\n\n\"Damn you Anne! I can maybe understand throwing me away, men and women fall in and out of love all the time, but AJ, your child? You practically raised her by yourself while I worked. Doesn't it bother to know she still cries over you?\n\nShe hunched her shoulders and kept painting.\n\n\"All right Anne, have it your way. I'm going to lay this envelope on the bench. It's pictures of Bunny growing up, and picture of AJ as she grows into an adult woman. The hotel address is on the front, along with her number. We'll be there until the end of the week.\"\n\n\"Oh, I know you're not interested, but I've found somebody, somebody I love deeply. I've got four new kids now, the full house YOU always wanted. I adopted them. Just think Annie, it could have been us. I guess I owe you a debt of thanks. Because of your actions, I got every thing you wanted. Wealth, travel, adventure. Too bad it wasn't us.\"\n\nI stood there a second, watching her. Did I still love her? No. All I felt was a profound sadness, wondering how to tell AJ.\n\nI didn't say another word, just walked away. Her ghost was finally buried, all I could think of was Marias' arms around me.\n\n................................................\n\nI shook my head when I walked back into our suite.\n\n\"I tried, AJ, I really tried. She wouldn't speak to me, wouldn't acknowledge me, wouldn't even face me. I left the packet you gave me with her, maybe she'll get in touch. I'm sorry, baby.\"\n\nShe collapsed in tears, while Maria held her and the girls fussed over her. Damn Annie. I think that was the moment she gave up hope. I had tears in my eyes and started for her when Maria held her hand up. I went for a walk.\n\nThe next day Maria came to me.\n\n\"Tell me where she is. I'll make that miserable bitch talk to her child if I have to slap a hello out of her.\"\n\nI had never seen such fire in her eyes.\n\n\"Are you sure? It might hurt AJ worse.\"\n\n\"It's not possible to hurt her any deeply. She needs closure. I'll take the girls with me to keep me in line.\"\n\nI gave her the address, where she usually was at different times of the day, where she worked, and got them a driver. I hoped I was doing the right thing.\n\nThey looked for her for nine hours. She wasn't in her apartment or at the harbor, not at work, not at the cafe she liked. It was a good thing Maria and the girls spoke fluent Spanish. They finally found she had quit her job and moved out of her apartment. Neither had a forwarding address. It was a forlorn bunch that came back.\n\nI tried to comfort AJ, but she just shrugged. \n\n\"It doesn't matter anymore, Dad. I'm going home, I need Mike.\"\n\nShe was on a plane the next morning.\n\nMaybe it was for the best. The hotel manager called me at noon, saying a package had arrived for me. I went down.\n\nIt was the packet I had left Annie, unopened.\n\n.................................................\n\nAnother man had the microphone.\n\n\"Are you working on another book? If so, when will it be out?\"\n\n\"No, and I'm probably not going to. The first book was great, the second good. I think it's time to stop before the third one stinks.\"\n\nBabs interjected. \n\n\"You're still writing though. I've read some of your essays in the Wall Street Journal and the Sun-Times. You're also in demand as a public speaker. Is this your career path now?\"\n\n\"Yes, pretty much. It keeps me busy and out from under Maria.\"\n\nThe man with the mike asked \"So you're semiretired now?\"\n\nJoe laughed.\n\n\"As retired as I can be with four teenagers at home. I can't let Maria do it all, it defeats the purpose of being married.\"\n\nBabs seemed sad.\n\n\"So Joe, think you'll ever be back on the show?\"\n\nHe laughed.\n\n\"I didn't think I'd ever be here the first time. Who knows? I may come up with something that keeps the terminally bored marginally entertained for a few seconds. We'll see.\"\n\n\"Before we sign off, do you ever hear from the Annies you interviewed?\" \n\n\"Now, that's an interesting question. I hear from some of them from time to time. Some have disappeared, some have died. But a group of them established a website. And Jane and Annie run a blog dedicated to Annies.\"\n\n..................................................\n\nIt started by accident. I didn't have time to answer all the emails, so after she did her portion of the interviews, I asked Jane if she would help.\n\n\"What should I say to them?\"\n\n\"Tell them I'm in the middle of writing a book. Answer their questions if you can, say so if you can't. Consider it being a PA by proxy, and I'll pay you.\"\n\nIt got to the point she had to split the work with Annie. I payed them, 2500 a month each. They protested, but they both needed the money. Janes' twins had entered college and the money was handy. Chad and Annie were still living tight, so the money was welcome.\n\nAnd it was worth every penny.\n\nAt first it was just for the original Annies, They exchanged greetings, recipes, gossip. They sent cards if one was sick, flowers when one died. It became a sisterhood.\n\nIf someone needed an appliance, a vehicle, or housing help, there was always a few Annies to go to. They exchanged hopes, pains, dreams of the future, regrets of the past.\n\nThe seventy four year old sexual dynamo passed away. I went to her funeral and sat in the back. There were twenty eight floral arrangements signed \"Annie\".\n\nThe abused Annie that affected me so much was murdered by her husband. I donated two hundred thousand dollars to a battered womens shelter, contingent that they name it after her. Her husband got fifteen years, he'll probably be out in eight.\n\nAnnie 499 came to be the official mascot.\n\nShe didn't have a computer, using public libraries. Annies sent her two laptops and two desktops. Another paid her internet bills. When she and her husband got a house, actually a single wide trailer, she received so many linens, towels, and small appliances she had to donate some back. They needed a car, one of the wealthier Annies paid for one of those donated to charity to be overhauled and parked it in her yard.\n\nWhen her first child, Joesph William, was born, they had a cyber baby shower, and she got so many gift certificates for diapers she had to pass some along. The clothes, car seats, and play equipment would have filled a semi.\n\nWomen clamored to join. Jane came up with a solution. The original Annies became the Inner Circle. There are now 139,00 Annies, and they're joining at the rate of three hundred a week. It costs a dollar a month to be an Annie, and the money is spent on anyone who has a need. If you can't pay, one of the other Annies will sponsor you. It become a force. One national politician even ascribed a program he was sponsoring as having 'Annie values'.\n\n................................................\n\n\"It's very humbling, Babs. So many have been touched by my work. People have had their lives altered, hopefully for the better, because an average man got his heart broken.\"\n\nBabs was near tears again.\n\n\"I think I can speak for this audience, everyone out there listening to this broadcast, everyone who has ever read your books, or talked to you in person. You'll always be much more than an average Joe.\"\n\n\"Goodnight listeners. Goodnight audience, and goodnight Joe. I'll always wish you the best.\"\n\nMike let ninety seconds of applause run before he stopped the tape.\n\n..................................\n\nWell there it is. A little slow perhaps, but I'll try a little harder next time.\n\nAnd my apologies to the fine writer Rehnquist, for stealing one of his characters, even if I did misspell her name a bit. She's been in several of his stories and has been woefully underutilized. Why isn't she marriage material? What happened in her past to make her that way? Give us a good one about her, Rehnquist, please. "
    ],
    "authorname": "qhml1",
    "tags": [
        "loving wives novella",
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/500-annies-epilogue"
}