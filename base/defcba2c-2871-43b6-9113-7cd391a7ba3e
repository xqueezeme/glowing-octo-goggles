{
    "title": "Facing the Frat Boy Ch. 07",
    "pages": [
        "Hey Guys! I had the first part of this chapter written but could never find the time to finish it off- life kind of got in the way. Here's the final chapter of Facing the Frat Boy. Thanks so much for all the support and kind words on this series, and my other stories too. Let me know if there are any characters and stories that you'd want to spend a little more time with. This just felt like a good place to end it. Let me know what you guys think.\n\n***\n\nCh. 07: The side of Levi Truong that people don't get to see\n\n\"Push, Ry.\" Levi instructed as he watched the smaller boy finish up the rest of his reps. He could see his arms shake like they were on the verge of giving out, but he knew that Ryan was strong and just needed some motivation. He'd made it through most of the workout without quitting, so the last few curls of weights were the final stretch.\n\nThe freshman kept a straight face, pressing down on his back teeth as he forced himself to finish it off. He looked focused, but on the inside he was cursing Levi and this wretched workout.\n\nHe remembered it clearly- being sprawled in bed and woven in between the older boy's hard limbs. Levi had just finished sucking him off and was lazily licking all over his body, determined to cover him in kisses. It was heaven- with Levi's curious mouth leaving no patch of skin untasted. He'd made his way up to the boy's chest and was licking circles around that nipple when he slipped it in.\n\n\"Come work out with me tomorrow.\"\n\nRyan must have made a face because the boy honed in on the hardened nub- a sweet spot that he knew made him weak.\n\n\"Uhh\" He tried to protest,.but the frat boy was sucking so fucking hard, draining away any hesitation.\n\nHe released his grip, leaving the area considerably pinker than the rest. \"So that's a yes?\" He asked, softly petting at Ryan's chest.\n\nWithout any ability to focus, Ryan fell for the trick and agreed. He pulled Levi in for a kiss before continuing their playing. \"I usually leave by 7\" he thought he heard the older boy say. But really, Levi could be proposing grand theft and he'd go along with it.\n\nThe next morning came in a series of loud noises. Ryan felt the cool air on his body as Levi ripped away the sheets, all while his alarm blared in the background. He pulled the pillow over his face as the frat boy turned on the lights, filling the space as the morning sun had yet to make an appearance.\n\n\"Why can't we just go laterrrrr?\" The boy whined as he felt Levi straddle him.\n\nThe older boy pulled away the pillow and leaned in for a kiss. \"Because then we'll be stuck with everyone who slept in.\"\n\nRyan rolled his eyes, pausing his annoyance for a few seconds so he could get a second kiss in. \"How do you do this all the time?\"\n\nLevi smirked, \"Trust me, it's not easy.\" He pinched the boy's cheek, \"Especially when you look so fucking cute every time I leave in the morning.\"\n\nHe paused his annoyance for a minute to accept the compliment before he dragged himself to the closet to get changed. As he got dressed, he saw Levi slip on a sleeveless navy shirt along with a pair of shorts that rode just above his knees. \"Fuck.\" Ryan said to himself, as he ogled the gym boy of his dreams. He stared long enough to get caught by the boy who winked and leaned in to give him a kiss.\n\n\"Wear the grey one.\" He said, looking at the two shirts that Ryan held in his hands, \"You look fucking good in the grey one.\"\n\nLevi bit down on his lip as he inspected the boy, seeing that shirt grip onto his body the same way his hands did while they were asleep. He could feel his cock growing hard at the sight of him- and it took all the self-discipline he had to not push him back onto the bed. But he had other plans. He went to the gym pretty regularly, and the idea of including Ryan on that seemed like a match made in heaven. It just took some convincing.\n\nRyan blushed as they headed out, wearing the fattest smile he could manage. It lasted on the walk there, but quickly disappeared when Levi went through their workout for the morning. He read the list from his phone- with Ryan stopping him every few lines to clarify the numbers.\n\n\"Thirteen push ups?\"\n\nLevi shook his head, \"No Ry, THIRTY.\" He emphasized as the boy pouted. This went on for a few seconds until finally he complied.\n\nDespite his complaints, Ryan did well considering it was the first time he'd been to the gym since moving here. He may not have been able to make all of Levi's goals, but he got real close to each of them. The boy didn't look disappointed for a second, pulling him in for a sweaty, congratulatory high five every time.\n\nDuring his last set of weights, Levi pulled him in for more than a high five, kissing the boy with their sweat soaked faces. Ryan looked around, noticing all the other gym-goers either zoned out with music playing on their earphones or watching one of the overhead TV's. He figured Levi couldn't care less what any of them thought- a concept that made him swell with pride.\n\nAn while later, they were dripping in sweat and panting as they finished the last of their stretches. Ryan was exhausted- having not worked out his body like that in some time. But along with fatigue, came this sense of pride that he'd completed their list- for the most part.\n\n\"You did great, Ry- a lot better than me when I first started working out.\" The boy nodded as he continued to catch his breath.\n\n\"I promise I won't force you to come with me next time.\"\n\nRyan looked up, \"You won't have to force me.\"\n\nConfused, Levi asked, \"Don't tell me you actually enjoyed that?\"\n\nHe shook his head, \"Not really- but I see why you do it,\" He smiled, \"And it gives us something to do together that isn't sex.\"\n\nLevi chuckled, \"We do have a lot of sex.\" He hooked the boy's waist and pulled him in like a fish who didn't know any better, \"And I'm glad you're coming along. I don't just come here to feed my ego.\"\n\nRyan listened as he went on, \"College can be one of the most stressful times of your life, between the demanding classes, terrible eating habits, binge drinking and a lack of sleep.\" He stopped, \"I come here for some balance and to relieve stress.\"\n\n\"We did just share a meat lover's pizza between the two of us last night.\"\n\nLevi chuckled, \"Could that have been any more gay? I mean, meat lovers...really?\"\n\nRyan rolled his eyes, \"I'm willing to come here to balance things out.\" He tugged on the muscled boy's soaked shirt, \"Plus you look fucking hot all sweaty.\" He felt a tug on his waist as their bodies pressed together.\n\n\"You smell good too.\" He admitted, forcing his eyes to the floor.\n\nLevi picked his face up, asking, \"You really are a freak aren't you?\" Before he could respond, the frat boy stuck out his tongue and drew a long lick against the boy's face- one that was sure to kill any sexual tension in this gym.\n\n\"Good, cause I'm a freak too.\" He assured, as Ryan rolled his eyes and wiped his face. \"Let's go get cleaned up, salty boy.\"\n\n***\n\nA few nights later, the boys were sitting in bed when Levi turned to Ryan who'd been scrolling through his Instagram feed.\n\n\"Can we have an honest conversation?\"\n\nRyan crooked his face, \"Do we ever have dishonest conversations?\"\n\nLevi shoved the boy lightly, \"Shut up, you know what I mean.\"\n\nHe snickered, \"What's on your mind?\"\n\n\"Are you happy with the roles we have now?\"\n\nRyan nodded, \"You just made me cum without even jerking off. Of course I'm happy!\"\n\nRolling his eyes, Levi replied, \"I'm being serious, Ry. Are you happy that you're the bottom and I'm the top all the time?\" He looked a little confused, \"Those are the right terms right?\"\n\nThe boy laughed, \"Yup those are the terms. Someone's been paying attention to the pamphlets I leave for you.\" He looked back to see Levi's annoyed face- this time it was him making light of these serious talks.\n\nHe gripped the boy's wrist, \"Look Levi, I'm more than happy with how things are. Besides, the two of us kind of just fell into them.\" He paused, trying to find the right words, \"I don't feel like any less of a guy because I like getting fucked by you. And I don't think it you need to be a bottom in order to prove you're gay.\"\n\nThe older boy nodded, feeling like they were on the same wavelength. \"I just don't want you to think that I'm not willing to do that because I am.\" He sighed, \"It's just a lot, Ry, which I'm sure you know.\"\n\n\"It's definitely not off the table, but it's something I need to work up to. But I'm getting there.\"\n\nRyan smiled, \"I don't think I've ever seen you freak out so much.\" He put his hand around the boy's body to give him a hug, \"Geez, you're even sweating.\"\n\nHe softened, \"I just didn't want you to think that I wasn't willing to do that...ever.\" He added, leaving the possibility still there.\n\n\"We're good, Levi.\" He reassured, \"I'm extremely happy with what we are, and whether or not you're willing to do that, doesn't change anything\"\n\nThe boy placed a thumb on Ryan's chin and pulled his face into a kiss. He looked into those hazel eyes, getting darker with every second like they were toasting on a flame.\n\n\"I kinda like this self-conscious side of you. It makes you seem like less of a cocky jock.\"\n\nLevi rolled his eyes, \"And you think I'm the annoying one.\"\n\nThey both snickered as they went back to the show they were watching. Ryan honestly hadn't given switching their roles much thought until just now- and even so, Levi bottoming wasn't a deal breaker in any sense. He'd gotten more than he hoped for with the former straight boy. Everything else was just an added bonus.\n\n\"Let's go get some food before you freak out again. You're worse than me.\"\n\n***\n\nThe next day, Ryan barged into the room and plopped himself down on the bed, causing the mattress to sway as Levi held onto his laptop.\n\n\"Tough class?\" He asked, with a chuckle.\n\nHe nodded, \"I swear that professor is trying to drive us insane before the break. We have this big project due on Tuesday and then, bam! Happy Thanksgiving.\"\n\nLevi leaned in closer, \"Well at least you'll get time off after the shit show. When do you leave?\"\n\nRyan shook his head, \"I'm not.\"\n\nLevi turned, \"What do you mean you're not leaving? You're spending Thanksgiving here?!?\" He said with his arms extended.\n\nThe freshman brushed it off, \"Yeah, but it's not that big of a deal.\"\n\nHe looked over at the concerned boy, \"I talked it over with my parents and it just doesn't make sense to come home for only like four days.\" He shook his head, \"It'll take me just as long to get there and back.\"\n\nLevi looked unconvinced so Ryan went on, \"They just visited last month and plus I'm going back for winter break which isn't too far away.\" He shrugged, \"I'll just spend the long weekend here. The dorms and the cafe will be open for all the kids staying back, and I'll just stay up late that night to Facetime them because of the time difference.\"\n\n\"But it's Thanksgiving!\" The older boy said with hands up in the air.\n\n\"It is\" He said with a chuckle, \"But it'll just have to be virtual this year.\" He winked at Levi. \"You think you could sneak away for a bit to Facetime me that day?\"\n\n\"Of course\" Levi said as he pulled the boy close, \"I might have to take a drive so I can really be alone with you.\"\n\nHe leaned into Ryan's ear, \"What's Thanksgiving without stuffing?\"\n\nThe younger boy rolled his eyes as Levi poked at his sides. He didn't know it yet, but the frat boy was already plotting something in his head- he just needed to work out a few things.\n\n***\n\nTwo days passed after that little announcement and Ryan had just finished his last assignment of the week. He felt a load fall off his shoulders as he walked out of that class- hearing echoes of \"Happy Thanksgiving\" ringing through the lecture hall. He walked out the door before it could reverberate across the room- thankful he'd get at least a couple days of respite.\n\nHe walked back to his dorm to find Levi sitting at his desk chair with a wicked smile on his face. He dreaded that smile- mostly because he hated surprises, but also because he knew it came with some offer he couldn't refuse.\n\n\"Why do I feel like you're up to something?\"\n\nLevi got up and walked towards the boy and held him by the waist as he gave him a kiss. \"Because I am.\"\n\nRyan made a face as he looked over to see what was up. Finally, he focused his gaze on the duffle bag placed on the edge of his bed with the zipper undone- almost like it was waiting to be filled.\n\n\"Is that my bag?\" Levi nodded.\n\n\"Geez, I must have stuffed that in the closet right after I moved in. Why'd you dig it up?\"\n\n\"Because you're coming home with me for Thanksgiving.\"\n\n\"Levi,\" He started as he pulled away slightly. But the older boy wouldn't loosen his hold. \"We talked about this. I'm perfectly fine with staying here over break, really.\"\n\n\"I know you'll be fine. Shit you're probably the most independent person I know\" He sighed, \"But the thought of you being alone on Thanksgiving while I'm back with my family and other people I care about-\" he paused for a second, \"it just doesn't feel right.\"\n\nRyan shook his head, \"So you want to bring me home to meet your parents?\" He searched for those eyes, \"Don't you think that's a little much?\"\n\nLevi shrugged, \"I met your parents and it was great.\"\n\n\"It was\" he agreed with a nod, \"But we also couldn't help the timing. I don't think either of us would have chosen to have it happen that early into us dating\"\n\nRyan looked back to see that this wasn't a typical Levi move of taking two steps forward without thinking. He almost felt guilty at how he didn't easily accept the offer, but he felt it needed to be addressed.\n\nLevi sighed, \"Look Ry. My parents are fully aware of you and us dating, and have been nothing but supportive. If you're worried that it's too soon, then let me assure you that it's not.\"\n\nHe held onto the boy's wrists, \"Thanksgiving is my favorite holiday. And I can't think of a better way to celebrate it than with the person I'm most thankful for.\"\n\nRyan would have laughed if it hadn't have been so damn sweet. He kissed the boy\n\non his cheek. \"How long have you practiced that line?\"\n\n\"It honestly just came to me right then.\" Levi said with a chuckle. \"So you'll agree to come?\"\n\n\"Yes.\" Ryan nodded, \"I'd love to.\"\n\n***\n\nThe boys spent the rest of the hour packing up Ryan's stuff for the weekend before\n\nheading over to the frat house, figuring it'd be better for when they leave tomorrow. They had a small argument over a certain pair of jeans that hugged Ryan's ass and legs a little too tight. The younger boy refused, but Levi took them anyway and shoved them into the bag until they got back and he brought them out for display.\n\n\"I'm not wearing that while meeting your family!\" Ryan said as he tried to toss them aside.\n\n\"But you look so fucking good in them!\" The older boy protested, managing to catch\n\nthem before they hit the floor.\n\nRyan couldn't help but laugh, \"It's gonna be a no for me, dawg.\" He joked, wondering if that reference was ten years too late. Levi still got it, pulling the boy in and grabbing his ass in the process. \"This is why I can't wear those pants- because we'll be on each other all weekend while I'm trying to make a good impression.\"\n\n\"I can't help myself around you.\" Levi admitted. He gave it a good squeeze, feeling his cock come to life as he pressed into that soft flesh.\n\n\"We can't be doing this while we're at your house.\" The younger boy said, feeling those soft lips against his neck. Levi's touch always flipped a switch in him- changing the game entirely.\n\nHe sucked on that supple skin, careful not to leave any trace of him. \"Then let's do it while we're here with nothing better to do tonight.\"\n\n\"Get it out of our systems?\"\n\nHe nodded, \"Drain each other thoroughly before we leave tomorrow.\"\n\nRyan growled, feeling his cock get hard at the thought of marathon rounds of sex, \"I wanna be so un-horny for you for the rest of the trip.\"\n\n\"Why don't we get started now?\" He said, feeling Ryan's hard dick pressed against his thigh. \"We can lock ourselves in here all night until you can't possibly cum again.\"\n\n\"We'll have to pause to get food.\" The boy reasoned, feeling Levi's finger slip into his hole.\n\nHe turned, pointing at the plastic bag full of several take-out containers on his desk, \"I have that figured out, too.\" He faced his boy, planting several kisses on those soft lips that he loved to taste. \"I picked that up right before I went over to your room. I figured we'd have a chill night in, but I prefer this a lot more.\"\n\nHe sucked on Ryan's lips, surely turning them a bright shade of red. They tasted like mango from the breath mints he bought earlier than week and had been popping like they were candy. Levi pulled off only so they could have a proper kiss, one so strong that Ryan pulled his hands up to his face. He loved it when he did that- when his neediness kicked in and he needed to touch him a little more. He swirled his tongue around his, dancing in his mouth until he pulled off with a chuckle.\n\n\"Get naked for me.\" Levi said, standing with his arms crossed as the boy undid his pants. He unzipped, freeing his bulge as it hung between both stretches of fabric. Levi watched in anticipation as Ryan pulled his shirt from the neck, slowly watching the hem climb up his body, revealing every stretch of beautifully tanned skin. He was a few shades light these days- having not had a proper day in the sun since he got here, but the hue of his skin was still very much like the color of his favorite indulgent drink.\n\nNot able to simply watch, Levi pulled the boy in between his legs and softly kissed up his body as he followed the upward shirt. Ryan was impossibly warm, like the Guam heat carried over the long haul and kept burning inside him. Levi licked up, feeling the creases of flesh on his tongue as he worked his way up. It was so intimate like this, and not even something he did with the girls he used to date. But this was Ryan- the boy who upturned his whole life. Everything he did with him was good. Every part of him tasted good.\n\nThe moment was broken slightly by a shy giggle, followed by a flinch.\n\n\"That tickles.\" He said softly, as he tossed the shirt aside.\n\nLevi gave a long lick between the boy's growing chest before blowing cold air onto him. The younger boy recoiled, fighting off Levi's playfulness until both of his wrists were caught in his grasp. He surrendered, pulling himself onto Levi's lap as he sunk down on the boy's neck.\n\n\"Mmmm\" He moaned out, feeling those soft lips against his skin. Ryan wasn't shy to taste him either, picking up beads of sweat with his tongue and sucking down on the soft flesh as Levi's hands worked his body.\n\nThe frat boy snaked his hand into Ryan's pants, slipping his fingers under the boy's waistband until he could feel that extra soft skin between his cheeks.\n\n\"Ahhhh.\" He breathed out, feeling that spot get touched.\n\n\"That got your attention.\" Levi said, cockily as he nibbled on the boy's lips. \"We can't have you so sensitive when I take you home, can we?\" He added as he drew his fingers along the boy's crack.\n\nRyan could feel his hole twitching at the motions. He brought both hands up to Levi's chiseled jaw and held his face close. Even with all the teasing and torment, Levi's eyes shined with softness as they leaned in to kiss.\n\n\"Guess you're gonna have to fuck it out of me.\"\n\nThey smiled together as Ryan slid out of his pants and kicked them aside. Levi did the same and they motioned for a bit until the boy was able to reclaim his seat.\n\n\"Better?\" He asked, now that they were both naked.\n\nRyan nodded excitedly, \"Much better.\" He nuzzled into Levi's chest and started sucking on the boy's hard nipples, coaxing around them with his tongue and leaving soft bites along his chest. This was a new weak spot he'd discovered, making the boy crazy.",
        "Levi pulled his extended hand up and placed it at Ryan's mouth. Not needing to be told, he watched the boy spit into his palm and give a slight chuckle before he reached down and lathered it all over his hole. He winced as he felt those fingers at his entrance, followed by the painstakingly slow movements from the frat boy. His voice let out a hitch when two of them were fully inside, with Levi curling his fingers to tease the boy's spot.\n\n\"Feel good?\" He asked, keeping his fingers in place while his other arm wrapped around the boy's back like a seatbelt.\n\n\"Yes.\" He said instantly, clearing a way so they could kiss. Once he tasted those lips, he pulled away and reached for Levi's cock nestled between his cheeks. He lifted himself slightly, stopping only for a second to apply some lube and lowered himself down in one shot. Ryan held his breath until he felt those trimmed pubes on his ass.\n\nOpening his eyes, he saw Levi's golden brown eyes on him. \"I thought we had all night- what's the rush?\" He teased, cupping that perfect ass in his palms.\n\nRyan pressed a foot into the bed and held onto one of Levi's shoulders. Now stable, he bounced up and down, feeling that hard cock flex as he did so.\n\n\"We do have all night.\" He said in between grunts, \"And we're gonna keep going until sex is the last thing on either of our minds.\" He paused, clenching his hole tight against Levi's cockhead.\n\n\"I want as many loads as you can give me.\" He said, almost in a whisper before Levi attacked his mouth and sunk his grip deep into his sides. Ryan held firmly against the boy's body, using it as leverage as he bounced up and down. He could feel that cockhead scrape against his walls- with just enough friction for sensation to trickle through his ass. And then there was the grip at his sides- with Levi holding on so tight that he was sure it would leave even the slightest red marks on deeply tanned skin. His breath hitched as his hole opened every time the shaft all the way down.\n\nRyan circled his hands around Levi's neck and continued to ride, feeling his hole open even wider every time the boy's cock slipped out and back inside. He looked down to see a determined Levi examining his body like he was reading the creases on his forehead from all the pressure and every goosebump on his forearms like braille. He started to sweat too, with those little beads forming at every hair follicle. He didn't know why, but Ryan always looked good when he was sweating.\n\nThe frat boy reached up and stole Ryan's grip from his neck. Instead he offered up his hands which the boy took willingly, interlocking their fingers with a tight grip. He held on, like he was grasping the clutch as he switched gears, finding that right balance as he fucked himself deep. Even with his cock buried inside his boy, and those perfect little fingers wrapped around his hands, Levi still needed more. He pushed his head out, offering up his lips which Ryan took in one fail swoop. He bit down on them, sending a tinge of pressure through the boy's body before lapping them up with his tongue. They were sweet- like a tall glass of Vietnamese coffee that was sure to keep him up all night.\n\n\"Need to cum inside you.\" Levi breathed out as he watched that glistening boy bouncing up and down on him. He could hear Ryan's cock thumping against his stomach, slinging strands of precum all around as he continued to leak.\n\n\"Breed me.\" He instructed as he clamped down on Levi's lips, sucking them hard as tightened his hole around the boy's dick. The frat boy held onto Ryan's hips as he thrusted deep, He let out a few grunts as he shot inside his boy, feeling that incredible hole coax out as much cum as it could.\n\nRyan looked down, smiling wide as felt full. He leaned in and kissed Levi as the boy composed himself, still reeling from his orgasm.\n\n\"Fuck, you pounded me so good baby.\"\n\n\"And you took it so well.\" Levi said with a chuckle. \"Now come here and fuck my face\" he said while patting his chest.\n\nRyan took his rightful place as he aligned his dick with Levi's mouth. The boy took it easily, getting half of it down his throat before Ryan could even get in position.\n\n\"Easy, let me help you out first.\" He said with a chuckle as he made himself more comfortable.\n\nLevi slipped his tongue into Ryan's slit as he gave him a few strokes, \"You're not the only one who's cock-hungry tonight.\" The frat boy wrapped his lips around that thick cock as the boy fucked his face, feeling those balls slap against his chin as he took more of it. It tasted so fucking good, Levi thought, having been eyeing it all night as Ryan leaked the entire time he was getting fucked. He slurped up all of that precum, just waiting for the boy to reach completion so he could get his real prize.\n\nRyan braced himself on the headboard and looked down, seeing his boyfriend dazed with his eyes focused on watching that dick slide in and out of his mouth. It was easily one of the hottest things he'd ever see- Levi, the macho and annoyingly hot former straight boy greedily taking his cock like it was all he needed.\n\nHe felt the boy pull off and suck on his foreskin, nibbling gently with his teeth. \"You keep staring at me\" Levi said, slipping his tongue under that hood.\n\n\"It's cause you look really hot sucking me off.\" Ryan said with a chuckle.\n\n\"I'd look even better if you give me a load.\" He replied, with an ironically cocky tone.\n\nRyan bit down on his lap and watched as that hungry tongue lapped at his slit while the older boy jerked him off. With his other hand, Levi reached up and pulled at those hanging balls, coaxing a load out of the boy. Ryan shot, feeling that wet tongue on his head as he emptied himself into Levi's mouth. He watched those eyes roll back- the frat boy getting exactly what he wanted as he lapped up that creamy load until he'd swallowed it all.\n\nUnable to control himself, Ryan felt that load that Levi had fucked into him start to seep out of his hole and drip down onto the boy's sweat soaked body. He got up and moved to the side, with Levi still sucking off any traces of cum remaining. He looked down, seeing his own dick rock hard from all of that, and just waiting to be used again. Levi took his fingers and scooped up his own load from earlier and ate it up like the dirtiest cum pig either of them had seen.\n\n\"Still not satisfied?\" Ryan asked, catching his break.\n\nThe boy reached for his cock and slapped it against his stomach, filling the room with the sound of beating drums. \"That's just a start baby.\" He grabbed at Ryan's own dick, feeling it come to life by his touch. \"As you can see, neither of us will be done anytime soon.\"\n\nLevi turned, curling up beside the boy as he slipped his cock back into that wet hole. He heard Ryan's whimpers as he slowly fucked into him, wanting to ride this one out for a while. He reached for those open hands and felt them clamp down on his like a venus fly trap who'd been waiting around all day. This was easily his favorite position- being able to feel his boyfriend's body impossibly close to his, to hold his hand and kiss at every inch of skin he was offering. They fucked like that for another half hour until the bed sheets were soaked in sweat and cum. Even then, they stayed tangled in each other's arms, softly kissing as they cooled off.\n\nAt some point, they heard a series of knocks. The boys were too exhausted by then to even pull the covers over their naked bodies- let alone get dressed to answer the door.\n\n\"Bro what the hell? No one's heard from you all afternoon.\" They heard Rico say from the other side.\n\nLevi lazily sat up in an attempt to be closer to the door, \"Dude I'm fine, just been with Ryan the whole day.\"\n\nRyan sighed, feeling like he'd been called on. \"Hey Rico\" he said, somewhat embarrassed.\n\n\"Oh, hey.\" They heard through the door.\n\nLevi continued, \"Now unless you wanna hear us have sex for the third time, I suggest you back away from the door.\"\n\n\"Too much information bro, fuck.\" Rico said before walking off, leaving the boys laughing.\n\n***\n\nLevi and Ryan were standing outside the station as the older boy looked around at the nearby cars pulling into the pick-up lane.\n\n\"Welcome to suburban Northern California.\" He said, trying to spot the red truck in a sea of cars. \"Knowing my folks, they sent Meghan in order to get some peace and quiet for a few minutes.\"\n\nRyan laughed just as a series of honks blared towards them. He turned to see a truck speeding its way in their direction with an arm flailing out from the driver's side window.\n\n\"I'm guessing that's her.\" He said as embarrassment washed over his boyfriend.\n\n\"Yup.\" Levi said as they observed her hit a curb as she turned in, with that big red truck tilting on its side as she stubbornly kept going. She stopped right in front of them and quickly got out.\n\n\"Meghan Truong, everybody.\" Levi deadpanned as she ran up to him.\n\n\"Well if it isn't the two gayest boys in all of Contra Costa county.\" She said, flashing the younger boy a wink. Ryan couldn't help but laugh- not expecting that to be the first thing out of her mouth.\n\nLevi shook his head, \"Please don't mind her, she doesn't really have a filter.\" He turned and pulled an arm around his sister who stood a good foot shorter than him. She had an earful of piercings and a fading henna tattoo sprawled across her hand from the latest music festival to grace the East Bay. They were obviously related, but Meghan's eclectic style contrasted heavily against Levi's clean cut look.\n\n\"No I do not.\" She said, finding and twisting her brother's nipple as he recoiled. \"Good to see you, bro\" she said, sincerely as he rubbed his chest.\n\nRyan stood as she turned to him and pulled him into a forceful, albeit softer greeting. \"And you must be Ryan.\" She said as she pulled away. She examined him for a second, looking over his casual attire and impossibly cute smile that looked like a lamb preparing himself for slaughter.\n\n\"You're a lot cuter than your instagram gives you credit for.\"\n\nHe cracked up instantly, \"Thanks? I think? Nice to meet you/\" He said as they both shook their heads.\n\n\"It's all about getting the right camera angles- Levi knows.\" She said with a wink. \"He didn't get to a thousand followers based on his looks alone.\"\n\nLevi reached for their bags, \"Yeah yeah, let's get going before you scare the poor boy to death.\"\n\nUnwilling to put up with Meghan's terrible driving, Levi bee-lined to the driver's seat and claimed the steering wheel, sticking his tongue out to his sister for good measure. Ryan followed behind him, and slid into the back only to be surprised to see Meghan joining him rather than sitting up front.\n\n\"I guess I'm an Uber now\" he joked as he pulled onto the road and made his way to their house. He peaked at the rear-view mirror to see the two engrossed in conversation, trying his best to hide his pleased smile. His worlds were dovetailing like missing pieces finally finding their place.\n\nThere was something really comforting about being behind the wheel of a car. That's one thing that Levi hated about living in the city- how often he had to walk or take the bus. He loved driving, and it almost made him giddy as he looked back to see Ryan- the one person he didn't mind chauffeuring around, sitting in his back seat as he pulled onto the familiar roads.\n\nMeghan wasted no time- firing off questions to get to know the new boy like she was doing a background check. Everything from how he first came out to what his favorite album was, Meghan managed to wring out of him in the 22 minute drive from the station to their house. Apart from a few odd looks towards Levi, the boy managed to keep his cool and answer just as quickly as she asked.\n\nThey were so deep in conversation, they didn't even notice that Levi had pulled up to their house. They stopped so Ryan could see the modest two story house with tamed trees and a couple cars parked outside. In what seemed to be true Truoung fashion, nothing was flashy or overdone.\n\nThey all got down as the freshman looked over the little details of the place that made it comforting. Meghan took the opportunity to pull her brother aside as he was gathering their bags, saying, \"Where the fuck did you find him? He's so much cooler than you.\"\n\n\"We met at a party\" he said as he slung the duffle over his shoulder. \"And I know he is.\"\n\nThey laughed together as they walked up to him with Levi interlocking their fingers. Ryan leaned in, taking the boy's scent and tightening his grip. Levi reached for the front door as Ryan pulled away- it was obvious why they were here, but he still wasn't convinced the boy's parents would be so quick to adapt. Most of those apprehensions melted away in the California heat as they stepped into the house, getting whiffs of beef broth and something bubbling away in the deep fryer.\n\n\"There he is!\" Ryan heard as an older man appeared from around the corner, wearing a university t-shirt. He looked like he was plucked from their school's ad campaigns, he thought, as the man pulled Levi into a hug. Even a few feet apart, it felt warm- like the kind of greetings his dad would give him when they went a few months without seeing each other.\n\nLevi squeezed his old man before pulling away, \"Out of all your shirts, you chose this one?\" He asked as he pulled at the hem.\n\nMeghan rolled her eyes, \"It's just until Tanner gets here, he already laid out his UC Santa Cruz polo on the bed.\n\n\"You weren't supposed to tell him that!\" Mr. Truong scolded as Meghan hurried off to the kitchen.\n\n\"And you must be Ryan. Welcome!\" He said warmly as he pulled him into a half hug. Ryan had been here all of five minutes and he already felt at ease.\n\nThey pulled away as they walked into the kitchen, with the scents of spices and fresh herbs filling the boy's nose. Mrs. Truong had her back turned as she separated a head of lettuce into individual leaves. She leaned over to stir a large pot that looked to have meat simmering away and filling the room with a delicious smell.\n\n\"Hey mom.\" Levi said as she turned around, quickly discarding the wooden spoon like nothing else mattered. She hurried over to Levi and pulled him in tight,\n\n:My God! What are they feeding you there, you're all skin and bones!\" She chastised, while trying to find a loose piece of skin to pinch. She pulled at the back of his elbow, causing the near six foot muscular boy to wince.\n\nRyan snickered at the exchange before he too was pulled into an embrace. \"And you must be Ryan.\" He responded with a simple yes after nearly getting the wind knocked out of him. \"I told Levi to drag you over here if he had to.\"\n\nShe pulled away, \"We couldn't bear the thought of you spending Thanksgiving alone.\" She said in a typical mom voice.\n\n\"Well thank you for having me, it's very kind.\" The freshman said as Levi looked over with pride. Mrs. Truong nodded with a smile before she turned back to the simmering pot and gave it a stir. She handed Levi's dad a pair of shears and pointed towards the back garden.\n\nThe boys took that as their cue, with Levi leading Ryan through the rest of the house and up towards his room.\n\n\"This is Meghan's\" he said, pointing towards the dry erase board hung on the door with the words, \"carpe that fucking diem\" which got a laugh from Ryan.\n\n\"Tanner and his fianc\u00e9 Natalie will be staying in the guest room downstairs.\" He said as they passed one of the bathrooms. \"She's hella pregnant, like damn.\" He said with his arms stretched out like he was holding a watermelon.\n\n\"Something tells me you'd make a great uncle.\"\n\nLevi nodded quickly, \"I definitely will.\" He motioned his head to the left and led them inside.\n\nBefore Ryan could even look around, he felt the boy's grip on his wrists as they rolled onto the bed, messing the perfectly folded sheets on top.\n\n\"What are you doing?\" He asked with a chuckle as Levi steadied them and then planted his lips on the boy's. Ryan was tentative at first, remembering their surroundings, but it was clear that Levi's touch couldn't be denied. He parted his mouth, letting that tongue slip inside and taste him.\n\nThey continued like that for a few more seconds- before either of them had started something they couldn't finish.\n\n\"I'd been wanting to do that since the station.\" He admitted, loving how good Ryan looked sprawled across his bed.\n\n\"I'm trying to be good but you're making it really...\" he chose his words carefully, \"difficult.\"\n\nLevi smiled, biting down on his lip. \"I just can't believe you're here.\" He eased his grip and nestled beside the boy, \"It feels like two worlds colliding\" he admitted.\n\n\"Don't tell me you've never had one of your girlfriends over at your house.\" Ryan said, downplaying it all.\n\n\"I have\" He admitted, as he pulled at Ryan's collar. \"But never like this. My folks are old school- you bring someone home and it's serious.\" He kissed at the boy's cheek, \"None of my other...partners...have actually met my parents. I only brought them around when they weren't home.\"\n\n\"Oh, so this is serious?\" Ryan teased.\n\n\"Dead serious.\" The boy said as he reached for his bag. \"Now we'd better get back down before they send Meghan up to check on us.\"\n\nLevi changed out of his jeans and into a pair of comfortable shorts before kissing his boyfriend on the cheek and heading downstairs. Ryan lingered for a minute, taking in being at Levi's house, in his bedroom and about to share a meal with his family. The thought would have been too much for him to bear, except for the fact that it was Levi. And as much as he'd try to downplay it, things were as serious as they could be.\n\nA little while later, they were all seated at the large dining table. Mr. Truong stood at the end, guarding the large pot of precious broth like it was a family heirloom.\n\nLevi whispered to his boyfriend, \"Mom's making the whitest meal of her life tomorrow, so she wanted to make pho today as a reminder that we're Asian as fuck.\"\n\nRyan nickered as he watched Mr. Truong carefully pouring some broth into each bowl, leaving them to add whatever toppings they wanted. Ryan watched as Levi took the lead, filling out two matching bowls with a helping of rice noodles, bean sprouts and thinly sliced beef that seemed to cook as soon as it touched the soup. He even raised an eyebrow as the boy grabbed the sriracha, only to see him douse a single bowl with the stuff, leaving the other with just hoisin. He remembered that Ryan wasn't keen on anything spicy.\n\n\"Thanks\" he said as he was handed a bowl. Levi gave him a wink before they all dug in, audibly slurping up their noodles followed by moans of approval.\n\nLevi's mom turned to the younger boy, saying, \"Well Ryan, we're so happy you could join us this Thanksgiving.\"\n\nMr. Truong chimed in, \"Yeah we know a thing or two about being away from family over the holidays.\"\n\n\"I appreciate you guys having me over. I do get pretty homesick being away from my family, but this\" he looked around, \"this is really nice.\" Ryan said, feeling his heart melt as he was met with two approving grins, a look of absolute pride on Levi's face, and Meghan, who looked like she could throw up from all the cheesiness.\n\n\"You're welcome here any time\" Mrs. Truong said, giving her son a knowing look that\n\nmade him blush.\n\n***\n\nA little while later after the sun had already gone down, Levi's best friend Chaz came through the door, getting a cheer all around from the family as he made his rounds.\n\n\"I hope I'm not intruding on your little family dinner\" He said with a smile as he kissed Mrs. Truong on the cheek.\n\n\"Nonsense\" she said, \"you're easily my favorite child after Meghan and Tanner\". The room laughed while Levi did his best impression of a scowl. Chaz beelined to him, getting pulled into a wide hug that almost knocked over the large pot of soup. They steadied themselves, getting some dirty looks from Levi's dad as he put on the lid and walked it back to the stove.",
        "\"Whattup homie!\" He said as he gripped onto his tall friend.\n\n\"Dude how's it going? This is the longest we've gone without seeing each other since middle school.\"\n\n\"I know! I just haven't had much time to visit, you know with-\"\n\nChaz raised an eyebrow as he turned to Ryan. \"Yeah I know.\" He said to his friend before meeting the younger boy with a handshake, \"Really nice to meet you, man. This dude doesn't shut up about you.\" He said with the warmest smile.\n\nRyan returned it fully, \"Nice to finally meet you too.\" Chaz nodded before walking over to the stove and helping himself to some food.\n\nLevi's mom called out from the living room, \"Chaz, honey, you're joining us tomorrow right?\"\n\n\"Yes ma'am\" He said before joining the boys back at the table.\n\n\"Chaz has spent every Thanksgiving with us since middle school.\" Levi explained to Ryan.\n\nThe tall boy nodded, \"I swear my parents always have some weird plans that come up and so I always opt out and spend Thanksgiving here.\" He raised a fork, \"Mrs. Truong's spread is next level. She makes it better than my white mom.\"\n\nRyan chuckled, \"I'm looking forward to it. My fam usually goes pretty traditional so it'll be nice to have that this year.\"\n\n\"Play your cards right and you can eat for free here for the rest of your life.\" Chaz said with a wink as Levi shook his head.\n\n\"Is that why you're friends with me?\"\n\nChaz shrugged, \"Well it's not for your personality, that's for sure.\"\n\nAbout an hour later, they heard people coming from the door. Levi got up quickly and opened it, just as two people walked in. The first was a very blonde, very pregnant, Natalie, Tanner's fiance. She was followed by the older version of Levi, carrying a bag from each finger before setting them down gently by the door.\n\n\"I told you to take two trips.\" She scolded as she took off her jacket.\n\n\"Nonsense, babe.\" The older guy said, in a voice that sounded a lot like Levi's. He turned to see his brother waiting by the door, \"Besides, Lee here will be a good sport and bring all that up to the guest room.\"\n\nLevi rolled his eyes as he pulled his brother into a hug, \"Good to see you bro.\" He turned to his future sister-in-law, \"Hi Nat, how's the little guy?\"\n\n\"It feels like he's training for soccer.\" She said, pressing her hands against her stomach. Levi laughed as he picked up the bags as he pulled them down the hall. \"Sorry about your brother\" he heard her say as he shrugged it off.\n\nNatalie walked over and greeted everyone before getting whisked away by Mrs. Truong right after Ryan introduced himself. \"And so, the baby talk begins\" Meghan groaned as she rolled her eyes.\n\nChaz and Meghan led Ryan outside just as Levi's dad took full inventory of the fridge and pantry, making sure they had everything for tomorrow's late lunch. The three sat just off the sliding door, bundling up with blankets and pillows as the night sky came into full effect. They chatted for a bit, mostly Chaz trying to get to know Ryan better before the two brothers walked outside, looking like a pair of twins- albeit one noticeably older than the other.\n\nTanner walked right up to Ryan and extended a hand, \"Sorry I didn't get to properly meet you earlier, Mom and Dad just finished grilling me about how an apartment on the second floor isn't good for a newborn.\"\n\nRyan laughed as he shook his hand, \"Haha it's no problem at all man. Nice to meet you.\"\n\n\"Likewise\" the older guy said as he took the last empty chair. Levi walked over to the couch where Chaz and Ryan were sitting, forcing himself in between the two before his friend finally scooted over. Chaz rolled his eyes at his friend who felt the need to establish his dominance.\n\n\"I feel like I should send you a bill,\" Tanner said, looking at Ryan.\n\n\"Why's that?\" the younger boy asked, confused.\n\n\"For every time that Levi's drunkenly called me up for advice about you.\"\n\nRyan could see Levi blush bright red out of the corner of his eye as he nearly spat out his drink. \"Alright bro, you don't have to say any more.\" He said, like he was trying to diffuse a bomb.\n\nTanner shook his head with that same cocky smirk his brother wore so well, \"You know Nat has to get up several times at night to use the bathroom, but she still hasn't bothered me as much as my brother.\" He said, looking over at Ryan, Chaz and Meghan. \"I remember getting a call at 1 in the morning several weeks ago by a very drunk Levi, complaining about how you weren't answering his calls and probably hated him.\"\n\n\"Wait\" Chaz said as he jumped in, \"I'm pretty sure that's the same night he called me.\" He thought for a second, \"He kept going on about how this person\" he said, with air quotes, \"was totally not interested but he couldn't get them off his mind.\" He pointed at Ryan, \"It wasn't until a few days later when he told me that person was a dude and that they'd started dating.\"\n\nRyan couldn't believe what he was hearing. The guys and a very entertained Meghan continued to laugh as he looked over at Levi who was still recovering from dying of embarrassment.\n\nThe younger boy put his hands up like he was confessing to a joint crime. \"Well, you guys didn't get to see me freaking out all those times I questioned whether he was actually into me.\" He said, truthfully. He felt those warm hazel eyes on him, and turned for a second to see a smile wash over that blushed face.\n\nLevi found his confidence, \"Not that it's any of your business\" he said to his brother and best friend who'd ganged up on him, \"but I was always into him.\"\n\nTanner nodded, \"If there's one thing about my brother, it's that he knows what he wants and he'll do what he needs to in order to get it.\"\n\n\"Like when he convinced mom and dad to change our family trip from Florida to Hawaii.\" Megan said.\n\n\"In my defense, that trip was awesome!\" The frat boy said, finding his voice again.\n\n\"Or when you somehow convinced Mrs. Baxter to let us house-sit for the weekend so we could throw a pool party Junior year.\"\n\nHe chuckled as he nodded to Chaz, \"She still has no idea we did that.\"\n\nTanner pointed at Ryan, \"Or in your case, when he needed to prove to the boy with the warmest eyes that he was serious about him.\"\n\nRyan pulled the boy into a half hug and squeezed him, \"Well I'd say he did a good job at that.\" They kissed on the cheek while everyone just smiled.\n\nTanner took a sip of his drink and gestured to Meghan, \"Now that Levi's off the market, I say we focus our attention on setting up little sis here. I'm gonna need some help in the grandchildren department since Levi's strictly dickly now.\"\n\n\"Shut up, bro!\" Levi said as he hit Tanner with a throw pillow.\n\nAfter another twenty minutes of shit talking, Tanner drank the last of his beer, saying, \"Well I'm gonna go check on Nat.\" Meghan's phone went off around the same time and she rushed in after him to answer it. He looked over at the three boys, \"You crazy kids have fun.\"\n\nLevi looked around, \"So what do you guys wanna do?\"\n\nChaz scrolled through some of his missed texts, \"There's a party over at West Beach if you guys wanna go. The rich kids bought a couple kegs to celebrate everyone being back for the weekend.\"\n\nLevi nudged Ryan, \"Do you wanna check it out? It'll be kids from our high school.\" He dropped his voice down, \"We can totally stay in and tell Chaz to fuck off, so it's just you and me\" he said in a sultry voice.\n\n\"I heard that, dumbass.\"\n\nThey chuckled as Ryan spoke up, \"Yeah I'm down. Plus we can finally settle the debate of who has nicer beaches.\"\n\nChaz rolled his eyes, \"Unless Guam beaches have drunk college kids and the faint scent of weed mixed with vape, I think you have us beat.\"\n\n***\n\nThe three piled into Levi's car, not before the frat boy quickly handed the keys over to Chaz. He led Ryan to the backseat where they sat nearly on each other's lap while Chaz reluctantly got into the driver's seat.\n\n\"Really, bro?\" The tall boy asked as he started up the car.\n\n\"It's been hours since I got to kiss my boyfriend so keep your eyes on the road unless you wanna see two dudes making out.\"\n\nChaz cracked a smile as he pulled off the sidewalk and drove towards the beach, giving the two lovers some privacy. The beach wasn't even that far- a near fifteen minute drive from Levi's place, but the two managed to nearly undo each other's shirts and leave Ryan's crop of curly hair in disarray.\n\nChaz cleared his throat as he put the car in park, leaving Levi no choice but to steal one last taste of those sweet lips. He pulled off as they all got down. Ryan wore an embarrassed grin as Levi took his keys back.\n\nHe nudged Chaz on the elbow, saying, \"Hey sorry about that, man. We kinda had this plan to be good this weekend, but we couldn't help ourselves.\"\n\nChaz laughed as he patted Ryan on the shoulder, \"It's no sweat dude, really. Plus he seems happy- like really happy.\"\n\nLevi looked back at the two boys as he zipped up his jacket, \"You two done talking shit about me or what?\"\n\n\"Impossible\" Ryan replied as they hurried up to catch him. Levi wrapped one arm around each boy as they walked down the paved pathway until it turned to sand, following the sound of top 40 hits as they got closer to the beach. The scene opened up just as they turned a corner, with a sizable crowd of people huddled around scattered bonfires with their red solo cups reflecting the lights. At a distance was the water, calmly swaying back and forth like the people who danced along to the beat.\n\nRight as they were spotted, Levi was immediately pulled away by some old soccer buddies who quickly grabbed him for a round of shots.\n\nRyan took the opportunity to nudge Chaz as they poured their own beer, asking. \"So, any exes or homophobes I should be on the lookout for?\"\n\nHe took a sip, \"Homophobes? Not likely.\" He scanned the beach, \"There is a high chance we'll run into Levi's ex, Julie, but if there's any issue, he'll set her straight. She's not exactly the nicest person.\"\n\n\"He mentioned her- said they only dated like three months though.\"\n\n\"If you'd even call it that. He was pretty straight up with her about not wanting anything serious, but she kinda forced him into it. He went along, until he felt the need to break it off. I hear she's been bitter about it ever since.\"\n\nRyan sipped his beer, \"I see.\"\n\n\"Levi doesn't bullshit.\"\n\n\"You're not wrong about that.\" The younger boy said.\n\nLevi quickly re-joined them, pulling Ryan back into his embrace as he looked over at Chaz. \"You're welcome by the way. I convinced those guys to let me take your shot cause I know you hate Jameson.\"\n\nChaz shook his head, \"Best friend of the year, everybody.\"\n\nThe frat boy pulled Ryan by his hand and walked towards the crowd of guys still recovering from their shots. \"Come here\" he said as they got closer.\n\n\"Yo guys I didn't get to introduce you to my boyfriend.\" He took a step back like he was presenting a sculpture he'd just finished- one he couldn't have been more proud to call his own. \"This is Ryan. He's from Guam and we met back at school.\"\n\nSome of the guys weren't good at hiding their shock, while the others nodded like it was just another piece of info to file away into their brains. Ryan could hear a faint \"oh fuck\" as he shook their hands, all while Levi listed off names like he was taking attendance. To their credit, the surprise eventually wore off and they were talking to him like he was just a normal dude- not some guy who'd been dating the seemingly straight friend they assumed since high school.\n\nAfter chatting for a bit, they walked over to find Chaz with another group of friends as they made their rounds. Ryan elbowed at Levi's side, asking, \"Where's your head at?\"\n\nThe older boy just smiled, \"I can't say I'm a fan of the whole song and dance every time I have to introduce you to people or have to clarify that I like guys.\"\n\nRyan nodded, \"Yeah unfortunately we're kinda stuck playing that game for a while.\"\n\nLevi continued, \"It's worth it.\" He stole another kiss from the boy, warming up his lips as the cool breeze of the ocean came through. \"I do prefer ripping off the bandaid, though.\" He chuckled. \"No sense in trying to sugar coat it for anyone.\"\n\nRyan nodded, still amazed at how easily the frat boy seemed to handle the whole situation. They mingled for another hour, with Ryan being presented like it was the best show and tell that Levi ever had. Some were better at hiding their surprise than others, but still no one said anything negative. One drunk girl that Levi claimed had the biggest crush on him in high school clapped her hands excitedly, saying, \"So that's why you weren't into me- you were gay all along!\" Levi was about to correct her when she hurried off to go puke in the bushes.\n\nAfter a good laugh, they met up with Chaz who was talking to some girl. Ryan swooped in at the right time, proving himself to be a better wingman than either of them thought. Levi flashed both of them a wink before excusing himself to refill their cups.\n\nBefore he could even get to that never ending keg, he was stopped by a short brunette with olive skin and an expression that was a mix between intimidating and sweet. \"I was hoping you'd come tonight.\"\n\nThe boy gave a polite smile but continued to refill the cups. \"Oh hey.\" He managed, half paying attention. \"Well Chaz saw that there was a party and I wanted to see my old friends.\"\n\nLevi was smiling and, to the average listener, he even came off as his charming, usual self. But his use of \"my\" really stuck out to anyone that knew him.\n\nThe brunette continued, \"I see that you've been parading that guy that you brought along.\"\n\nLevi minced as he set the cups down, \"He's not just some guy, Julie, his name's Ryan and he's my boyfriend.\" He said in the most calm, yet direct way he could.\n\n\"If you say so.\"\n\nThe boy quipped back, \"And what's that supposed to mean?\"\n\nJulie rolled her eyes, \"Come on, Levi, I know you. You like to play with things until you get bored of them.\" She said, reaching for his shoulder before he took a step back. \"We both know this is some little college experiment. Next time you're home, you'll be bringing some girl around and we'll be right back where we started.\"\n\nLevi washed away the smile from his face, saying, \"First off, you don't know me. We dated for a bit, and then when I saw that you weren't the type of person I wanted to be around, I broke it off.\"\n\nShe looked like she was going to say something, but he cut her off.\n\n\"And this\" he said as he pumped his chest with his fist, \"This isn't some experiment. And I don't need to prove myself or my relationship to anyone at this fucking party, especially you.\"\n\nThe older boy stormed off before she could even reply. He walked quickly, keeping his eyes peeled for that light jean jacket that he knew so well because he'd had it wrapped around his arms every time Ryan looked a little cold. He slowed when he finally spotted Ryan and Chaz at one edge of the beach, chatting happily beside one of the still lit bonfires.\n\n\"What happened to our drinks?\" Ryan asked, seeing that Levi had come back empty handed.\n\nHe just shrugged, \"I was kinda hoping we could just go. I'm feeling kinda tired.\"\n\nChaz replied, \"What do you mean, dude? It's barely 11\"\n\nRyan couldn't see, but Levi shot Chaz a certain look that made the taller boy play along. Chaz stopped as he motioned for the older boy to hand over his keys. \"Yeah okay, plus it's a big day tomorrow.\"\n\nConfused at how quickly it changed, Ryan brushed it off and followed the two boys as they walked towards the pavement and back to the parking lot.\n\nThe drive back was a bit weird, with Levi and Chaz trying their best to keep up a conversation. In reality, it's like neither of them wanted Ryan to think that something was up, so much so that they were overcompensating.\n\nWhen they got home, Chaz gave both of the boys a half hug along with a promise to be here bright and early tomorrow to help out. He got into his car, not before Ryan could see his boyfriend mouthing \"thank you\" to which he just nodded.\n\nWhen they were alone, Ryan looked over, asking, \"Are you gonna tell me what happened back at the beach?\"\n\nLevi sighed as he reached for his keys, \"Let's go for a drive.\"\n\nNot even five minutes after they got home, the two were on that same road driving back towards the beach. Ryan could see the scattered bonfires below, several feet away from the ocean that was pitch black, apart from the reflection coming down from the moon. But instead of turning back to the same parking lot, Levi took a left and drove a little further down, following a line of trees. He signalled left and pulled onto the center lane. Ryan looked, but couldn't even see something resembling a road. Still, Levi drove through the now apparent dirt trail as he wove through the trees with ease, having sobered up since they left.\n\nOnce their little excursion was over, Ryan looked to see a clearing with West Beach perfectly framed by the surrounding trees. He looked, barely able to make out the bonfires from this side. Instead, the ocean was the real focal point with the moon perfectly hung at the center.\n\nLevi grabbed some blankets he'd kept stored in the backseat and scattered them across the bed of his truck. Once it looked comfy enough, he lied down, motioning for Ryan to do the same.\n\nHe leaned back, feeling the soft cushions as he cozied up to Levi. For good measure, the frat boy rested his head on the boy's shoulder, fitting together like a jigsaw puzzle that no one could manage to complete, until now.\n\n\"I'm really happy you came home with me\" he said, leaving Ryan to look up at the stars that hung above them like pendant lights suspended from a black ceiling.\n\n\"Even before you mentioned not being able to go home, I always wanted to bring you here.\"\n\n\"It was always just a matter of time,\" Ryan said simply, as Levi turned to smile at him. \"What happened earlier? Why were you in such a rush to leave?\"\n\nHe sighed, digging his head deeper into Ryan's body. \"I ran into someone who had some choice words about us.\"\n\nRyan paused, \"...what did they say?\"\n\n\"Nothing I want to repeat.\" the older boy explained, \"Let's just say it's like hearing your deepest fears aloud- the ones that you hope will never come up from the doubtful parts of your head.\"\n\nRyan tried to process what he was saying, but he needed some help. As if on cue, Levi dug in, \"This isn't some experiment to me Ry.\" He said, echoing Julie's words. \"You and me? It's probably the most real thing I've ever had.\"\n\n\"Is that what this is about?\" He asked, feeling the boy's racing heart as it did laps between them. \"You're worried that some people think this is just a temporary thing?\"\n\n\"Not some people, Ryan.\"\n\nThe younger boy paused. For a while, they seemed to be in this bubble where everything is positive and nothing seems to go wrong. But Levi's admission- the one that haunted him since the first time he ever opened up to the possibility of this being real, that brought up some old pain.\n\n\"I did think that.\" He corrected, \"At first. But then you showed me that you were serious. Shit, every time the universe gave you a choice to prove that you were who I thought you were, you managed to do the exact opposite.\"\n\n\"I don't doubt you anymore, Levi.\" Ryan said simply, \"I think, for a while, I was scared for this to be real because if it was, then there was a good chance I'd fuck it up.\"\n\nLevi replied quickly, \"You won't fuck it up.\" He flashed that killer smile that won Ryan over time and time again, \"I won't let you.\"\n\nThe younger boy laughed as they lay there, listening to the rustling waves like they were carrying secrets across oceans. They eventually sat up, propping the blankets along the back of Levi's truck as they stretched their legs, continuing to watch the shore.\n\n\"I love you, Ryan.\" Levi said as the waves seemed to stop, almost like they were letting him speak.",
        "Before he could even respond, Ryan placed both hands on Levi's jaw and pulled him into a kiss. It was soft, yet powerful- like the final lines in an epic novel. Ryan was smiling bigger than he ever had, with his teeth brighter than the stars just above them.\n\n\"I love you too, Levi.' He replied, \"You never have to doubt how I feel about you.\"\n\nThey kissed again, this time, parting their lips so their tongues could slip inside. They fumbled around, getting tangled in blankets before Ryan nearly fell off the side of the truck bed, with Levi, of course, grabbing him at the right moment.\n\n\"I think that's the universe telling us to behave.\" Ryan said as he leaned back into his spot.\n\nLevi raised an eyebrow, \"It's probably some metaphor about you falling for me that first night at the Kappa party.\"\n\nRyan rolled his eyes hard as the frat boy continued to flash that award winning smile. \"I'm kidding. Tanner and Chaz can both vouch for me when I say that I fell for you first.\" He paused, \"And I fell hard.\"\n\n\"So all of that back at the house was true?\"\n\nLevi nodded, \"Yup. Tanner's a dick for bringing it up, but he wasn't lying.\" He shook his shoulders, \"Those first few weeks were a series of: 'maybe I like this guy' to 'maybe i'm gay' to 'maybe i'll have a shot with him'- and even though he teases me about it, he really helped me through it.\"\n\nRyan squeezed his hand tight and brought Levi's fist up. He kissed it, seeing that boy absolutely giddy with emotion.\n\n\"I love you, Levi\" he said, feeling like the frat boy had earned himself another serving.\n\nLevi kissed his cheek, \"I love you too.\"\n\nEventually the night grew colder and Levi caught Ryan dozing off on his shoulder. He gently nudged the boy, who clung onto the blankets even harder. \"Ry. He said, pulling at the seam. \"Let's head back.\"\n\nThe younger boy nodded as he stretched and got down from the truck. They hopped in the car and Levi turned it on as Ryan thawed his hands with the heat. He turned on the headlights, exposing that narrow path that he could drive blindfolded, if he wanted to.\n\n\"You know I've never said those words out loud before.\" Levi admitted as he let the car warm up a bit more. \"Have you?\"\n\nRyan replied, \"Just once. And I thought it was real at the time, but now, looking back.\" He sighed, \"I was in love with the idea of him, but I didn't love him.\"\n\nLevi nodded, \"I've dated a few people here and there.\" He said, trying to ease his way through this realization, \"And yes, there have been one or two who said those words to me.\" He paused, \"But I could never bring myself to say it back because it wouldn't have meant anything.\"\n\nThe younger boy pulled Levi into a kiss, this time, it was soft and slow. \"It means something now.\" Ryan said simply, \"That's all that matters.\"\n\nLevi just smiled as he put the car in drive and proceeded down that dark and winding path. \"Let's go home, Ry.\" He said with a smile, before facing the road and driving off."
    ],
    "authorname": "thealphamale",
    "tags": [
        "bareback",
        "breeding",
        "college",
        "cum",
        "frat",
        "gay sex",
        "interracial",
        "kissing",
        "muscle",
        "romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/facing-the-frat-boy-ch-07"
}