{
    "title": "The Mysterious Mr Treeman Pt. 01",
    "pages": [
        "Eleanor\n\n1985:\n\nEleanor settled into the Limo's plush back seat. The Chauffeur closed her door, climbed in and pulled the limo out into traffic. Eleanor removed her sunglasses, slid out of her jacket and settled in for the ride. The chauffeur glanced in the rear-view, \"Ms Windham, my name is Carl. There is an envelope for you in my seat-back. Put that in your bag and please cash this one.\"\n\nEleanor retrieved the envelope and sat back, clicking the corner under her nail. \"Was the other check not cashed?\"\n\nCarl smiled, shooting a quick glance at her in the mirror. \"It was; by The Humane Society. Mr Treeman matched your five million dollar donation. He hopes you will take this new check and do something for yourself.\"\n\nEleanor tapped the envelope against her knuckle. She looked up at Carl in the rear-view. He glanced briefly and their eyes locked for a flash. Carl looked back at the road but he felt Eleanor's eyes remain on him. \n\nAbout 70 years old, she thought. Handsome, with his pure white hair and stern face, belied by the soft eyes.\n\n\"Ms Windham...\"\n\n\"Eleanor, please.\"\n\n\"Okay, Eleanor, Mr Treeman is a very private person, but I assure you he is as decent a person as you will meet.\" He glanced into her eyes for a second, then back at the road. \"What you are doing is very important, and a very decent kind of giving also.\"\n\nEleanor saw a pained look cross Carl's face. He glanced up for a moment, then back at the road. A tight smile followed.\n\n\"He wouldn't want me saying even that.\" He chuckled, glancing in the mirror. \"I am a huge fan of yours, Ms Windham...Eleanor.\"\n\n\"You mean were a fan.\"\n\n\"No. I am a fan. I think you are class personified.\"\n\nEleanor took a deep breath and sighed. She crossed her arms.\n\n\"That's a lot to live up to.\"\n\n\"Young lady,\" Carl pursed his lips. \"You have already.\"\n\nWhen Eleanor Windham came into her inheritance, she horrified her family by giving most of it to charity. They disowned her and cut off all contact. Eleanor refused press requests, and went about her life. Her fame made the jump to Hollywood a simple matter. She had studied drama and she was beautiful. She had light brown hair, green eyes, and a one in a million cuteness that made her darling of the world. Her pleasant curves were a water-cooler topic, and her butt was even more famous than her face.\n\nAfter six successful movies, Eleanor announced her retirement. \"I can't act half as well as these other serious women so I'm going to just get out of the way.\"\n\nShe dedicated herself to helping animals, using her name, her face, and her money. Outside of these ventures however, she was now a completely private person. She moved away from Hollywood, was sighted on occasion in Manhattan, attempting stealth, but no one knew exactly where she lived. If she had any close friends, no one knew who they were.\n\nEleanor continued watching Carl in the mirror. \"Thank you,\" she said. This adventure actually appealed to her. Christopher Treeman was a legend. He earned millions playing poker in Las Vegas before turning twenty-five. He then turned his attention to the stock market and became a famously wealthy recluse. Not much was known about him but Eleanor had remembered hearing about his generosity toward animals. That had been the deciding factor when she accepted the offer of five million dollars to be Mr Treeman's guest for one night. \n\n\"So Carl, I imagine there has been a parade of beauties who have taken this trip.\"\n\n\"Ms Windhan. I'm surprised at you fishing. I assure you your discretion...\"\n\n\"No, I'm sorry. Of course I wasn't asking you to tell me anything, and I've been assured of my safety and privacy. I'm sorry Carl.\"\n\nHe saw the apology on her face. \"There has been no parade. I wish. Even that is more than I should say,\" Carl shot her a smirk, \"but, like I said. I'm a big fan.\"\n\nEleanor watched the greenery go by as Carl wound the car up into the mountains. Soon they came to a great gate. It opened from nothing Eleanor could see and they continued on a winding road which rose gently until the huge house came into view. There the ground leveled into a circular driveway with a garden in the center. All around were gardens. \"It was a pleasure meeting you Ms...Eleanor. Have a good stay and I'll see you tomorrow.\"\n\nCarl pulled up to the entrance where two young women in blue suits awaited her. A slight fear took Eleanor, accompanied by an intense thrill. the door was opened. A soft, \"take care,\" was all she could reply to Carl. He nodded. Eleanor took her bag and climbed out of the car, taking the outstretched hand of the woman.\"Thank you,\" she said to the smiling Japanese woman, who now shook her hand. \"Ms Windham. I am Tolly.\" She released Eleanor's hand and turned. \"Please follow Jennifer to your quarters. She will take care of you.\"\n\nEleanor and Jen nodded to each other.\n\n\"Come with me please,\" Jen said. Eleanor followed her into the house. \n\nEleanor had been prepared for much of what she could expect. She knew Jen was taking her to bathe before meeting Mr Treeman. There would also be one more conversation with this woman, Jen. Eleanor choose conversation and bath together.\n\nJen led her into a huge bathroom where a drawn bath awaited. Eleanor stripped with her back to Jen. It struck her as erotic, stripping before this beautiful woman who was professionally dressed. She slid silkily into the warm water with growing excitement. \n\nEleanor relaxed in her bath while Jen prepared her for the coming evening. Jen's manner and tone of voice had Eleanor talking quite naturally about sex. Jennifer told her things Mr Treeman had been very frank about; both physical and verbal. \"Sir wants there to be no confusion about this role-play being directed at you personally.\"\n\n\"I understand. It's a role.\"\n\n\"Yes, but it is a role as yourself, the you Mr. Treeman knows of. He will be using that in the role-play, but he doesn't want to offend you.\"\n\nEleanor nodded. After some questions and answers, Eleanor was prepared to be offended by nothing, and use everything that was about to happen as a turn-on. All of her fear was gone, but she remained quite nervous and very excited.\n\n\"When you're out of the tub,\" Jennifer finished, \"you can choose something of your own to wear, or anything from the adjoining room. When you feel ready, walk down the hall to the white door and enter. Mr Treeman will join you there.\" She turned to go.\n\n\"Jennifer,\" Eleanor called. Jennifer turned back to her.\n\n\"How does this...my visit stay secret? Why don't his people talk.\"\n\n\"If you mean talk bad, no. No one who works for him would betray him. We are a small crew, and everyone here is committed to him. He has helped a lot of people.\" Jennifer scrutinized Eleanor, and decided to go on. \"For instance, I wish I were in your place. To please him once even, I would pay money.\"\n\nThe two women stared at each other. Eleanor took in Jennifer's sincerity, and that she was a very beautiful woman.\n\n\"So why don't you?\"\n\nJennifer's face lit with laughter. \"I work for him. He would never.\" She strode away. Stopping at the door she turned to Eleanor. \"You see, I get the honor of knowing him, and it is a privilege. You will have the honor of being with him, and I envy you.\"\n\nEleanor climbed out of the tub and began drying herself. She opted for clothes she had brought; her worn corduroys, which clung to everything but were soft and comfortable, and a loose white tank with almost no side coverage. No bra. No panties. Sandals. \n\nShe looked herself over in the mirror, turning to the left, the right. \"Well he's definitely over-paying,\" she thought, snorting a laugh out loud, \"but I have to admit. I probably never looked so good.\" She had eaten especially well the last two weeks to look and feel her best, and her excitement at what was to happen to her had her flushed and bright-eyed. \n\nShe took two deep breaths, and closed her eyes for a moment before striding down the hall, filled with a delicious tension. She opened and walked through the white door and into a cavernous room. She closed and locked the door.\n\n\"Completely unnecessary,\" came a firm voice behind her. She turned.\n\nChristopher Treeman strolled slowly toward her, then slightly off course, like he was giving her a wide berth. \"Everyone has left the house by now. Tolly and Jennifer are in the guest house. If you press any of these buttons, anywhere in the house at any hour, one of them will come to wherever you are. For the time you are here, they work for you, not me.\" He walked slowly by her to the bar. Eleanor moved to join him but he stopped her with a hand gesture.\n\n\"Please. I want to look at you.\"\n\nEleanor slid her thumbs into her front pockets, favored one hip, and relaxed. While Christopher studied her without expression, Eleanor studied him. He wore plain grey sweats and a white tee-shirt. He was about 6'1\" 180. He was both more boyish and handsomer in person. He had dark hair and brilliant brown eyes. \n\nEleanor knew he was handsome, but from ten feet away she thought he was amazing. His arms looked well but not overly muscled. She watched his eyes graze over the exposed side of her breast. She felt her nipples tighten a little. He continued looking her over. He raised his eyes to her face. His stoic eyes warmed, then veiled again.\n\n\"You're incredible,\" Chris whispered.\n\nHe turned away and went around behind the bar. Eleanor stayed right where she was, as she had been told. Chris was slightly behind her now, looking at the tight roundness of her butt, and the side of her breast almost to the nipple. Chris found the power of her beauty overwhelming. \n\nWell, that was why she was here, and why he had to get into character. He put bottles of water on the bar. \"Don't expect me to say please again. I am going to get into character. When I am in I will tell you what to do, not ask.\" He watched her shift her weight, dropping her other hip now. He took in the loveliness that covered all of her.(Fuck!)\n\n\"Your safe word is stop. No matter what I'm doing or saying, you are not to endure any discomfort. The word stop will do exactly that, I'll stop. So if you want to play with any words in role, omit the word stop, and I will continue.\" He took a deep breath and sighed. He wanted to hear her voice, it had been another dagger to his heart. Conversation wasn't his thing though, \"How was your trip?\"\n\nEleanor turned only her head toward him. Their eyes locked. Eleanor felt a spark between them. \"My trip was fine. I like your people. Carl was very gentlemanly, and Jennifer was comforting and pleasant.\" Her voice was beautiful. Honey smooth, naturally sensual, and from somewhere a little further back than most voices. Arm in arm with her looks, her voice made her irresistible to millions of men and women around the world. She had planted an ache in Chris's body that absolutely had to be assuaged.\n\n\"Want some water?\"\n\nEleanor sauntered over slowly, thumbs still in her pockets, her hips flowing like a wave. Chris backed away and came out from behind the bar. He leaned where he could continue watching her while she drank. Chris was surprised at how calm and cool she was. The seven steps over to the bar were downright seductive. He hadn't expected to be more nervous than her. She switched the bottle to her right and raised it to drink, exposing the side of her breast to Chris. He took a first gentle step into character with a soft phrase that couldn't be mistaken for anything but a command. \"You're left handed Ms Windham. Let me see you drink that with your left hand.\"\n\nEleanor had been warming to Chris with every passing moment. The enormity of what she was doing had hit her body. Her body apparently loved the idea of being paid a king's ransom to place her body in the hands of this stranger. First of all she found him physically more attractive than any man she had ever seen. When their eyes locked, her body warmed, juices woke. When he whispered that she was incredible, Eleanor registered her lack of underwear and quickly thought, \"fuck it. I don't care.\"\n\nEvery second after that her hornless, which had been left untended too long, surged. She thought of everything Jennifer had said about Chris, and about what they would be doing. She remained cool on the outside, but she was aching now to give herself to him. When he told her to drink with her left hand, so she wouldn't flash her breast, she tried to hurry him along. \n\nShe switched the bottle to her left hand, turned one hundred and eighty degrees around so her back was to the bar, leaned her left foot up on the railing, accentuating the side of her butt, and lifted the bottle to drink, exposing the side of her other breast to him. \n\nShe held the pose, drinking little water. Taking the bottle deliberately from her lips, she twisted away to put it on the bar, stretching her body seductively for him before turning toward him. She put her hand on her hip and shot him a look that said, \"I dare you to fuck me.\"\n\nThe look shocked Chris. He didn't need to see the spot forming under her tan corduroys to know that she wanted to proceed. He couldn't wait any longer. He looked deep into her eyes from across the room. \"I have to tell you one more thing before we begin.\" Eleanor moved her weight from one leg to the other, but held his eyes. \"Tell me,\" she said.\n\n\"I know you are a truly good person. I want you to know I know that. I'm going to talk to you like you aren't because of how you look. Understand?\"\n\nEleanor nodded. She stared at him, parted her lips, darted her tongue across them. He stared back. The electricity between them was obvious to both. They were dying for this, dying to get started. Chris walked toward the living room area. \"Come here Eleanor,\" he said without looking at her. She followed after him. He was waiting for her by a Chaise that had a low end, where one could sit, and a high part to lean your back against. Of course if you kneel on the low end, you could drape your body over the high part and be in a perfect position to be fucked from behind.\n\nEleanor was surprised to note the change in him. His look displayed a distracted disapproval. She looked in his eyes but they were on her feet. \"Kneel here,\" he said, pointing. Eleanor began unbuttoning her pants but he stopped her in a very firm voice. \"I didn't say you could strip.\"\n\n\"Okay,\" she said.\n\nChris happily noted her deep breathing. He watched her redo her top pants button, shoot him an apprehensive look and proceed to kneel and drape herself over the chair. Her ass jutted amazingly in the soft tight pants. Her waist was taught and lovely, her adorable breasts, stunning, pressed into the soft upholstry. She was an awesome sight up close like this. He had watched her on film like everyone else, but here she was on her knees, and she had to listen to anything he wanted to say, and he would get to hear her respond.\n\nEleanor was now desperate to release the lust that had flooded her body. She wished he would rip off her clothes and do anything to her. She would cum, surely, from any contact. She saw him take a step behind her.He was holding his cock, now outlined in the loose sweatpants. She surprised herself, a low moan escaping her involuntarily.\n\nChris held his swelling cock, watching her. Her darling breasts moving with her breathing, that ass of perfection, and she was on fire, as much as him maybe. He saw the wet spot on her cords. He drew an audible breath and shook his head, afraid he wouldn't be able to wait enough to give her an earful first.\n\n\"So how do you like men drooling over you?\"\n\nEleanor hesitated, thinking.\n\n\"I asked you...\"\n\n\"I like it.\"\n\n\"You like it?\"\n\n\"I like it a lot,\" Eleanor gasped.\n\n\"You know how beautiful you are?\"\n\n\"I...I know people want me.\" She looked back at Chris. His eyes softened. He looked down and said in a softer voice, \"Look forward.\"\n\n\"Okay.\" Eleanor faced forward and arched her back a little for him.\n\n\"So you don't know you're beautiful?\" The hard voice was back.\n\nShe nodded. \"Yes.\"\n\n\"You know you've got like...the nicest ass in the world.\"\n\nShe hesitated again. \"What's with her,\" he thought. He was about to prompt her again when she said, \"Yes I know, I know.\"\n\nChris took off his shirt and knelt down next to her, finally touching his hand to the small of her back. His breath would have been audible at the touch except for Eleanor's Moan of, \"Ooooh.\"\n\nChris gently let his hand glide down the curve of her corduroys. She moaned softly and her breathing intensified. \"The fucking girl is making it hard to go slow,\" he thought. He was astonished at her intense responses. He reached around to unbutton her pants.\n\n\"Yes,\" she said, moving to help him.\n\n\"No,\" he said. \"I'm just undoing the top one right now.\" He undid the top button and went back to petting her astounding ass.\n\n\"Please,\" She whimpered, surprising both of them.\n\nChris came close to whisper in her ear. She turned her head, looking to be kissed but he pointed her head forward. She moved her forehead against the cushion, obviously agitated. He came next to her head. She smelled beautiful also. He picked up her own scent as she'd begun sweating. He whispered, \"So you know everyone, every man you've waked by in your life has stared at your ass and wished they could just touch it?\"\n\n\"I...Yes.\" Eleanor was through wasting seconds by disagreeing with him. She would have confessed to helping Oswald if he would only promise to fuck her in return.\n\n\"Say it. Tell me.\"\n\n\"I know they watch me.\"\n\n\"They watch what?\"\n\n\"My ass. They watch my ass, and I love it.\"\n\n\"Your beautiful ass.\"\n\n\"My beautiful ass,\" she whimpered, \"my beautiful ass. Please.\"\n\n\"Please?\"\n\n\"Yes,\" she said, \"whatever else you do to me. Please. You have to let me cum soon. Please.\"\n\nChris could tell she wasn't acting. Eleanor was truly tortured . He wanted to take this slow but she was already there way early. \"Hang on,\" he said. He came close to her ear again. She took a deep breath to get control, but tiny whimpers kept coming from her. \"Please, \" she whispered.\n\n\"I'm going to peel your pants off...\"\n\n\"Yes.\"\n\n\"I'm going lube my dick...\"\n\n\"Oh my god.\"\n\n\"I'm going to get on my knees behind you...\"\n\n\"Yes.\"\n\n\"I'm going to squeeze my big cock into your ass...\"\n\nEleanor nodded her head, \"Please do it. Please...\"\n\n\"I'm going to then just selfishly fuck you...\"\n\n\"Oh fuck me. Please put it in my ass.\"\n\n\"I will be here behind you, taking my time, almost pulling it out, slowly pushing it in until you feel it in your guts.\"\n\n\"Arrggh,\"\n\n\"I'll enjoy your screams while I relentlessly fuck your ass for my own pleasure, and I won't stop until you're exhausted from screaming my name and cumming.\"\n\n\"Oh please,\" she cried urgently. She turned a pleading look on him that was not character. Tears formed and ran over her eyelids. Please!\n\nChris couldn't stand her desperation any longer. He was going to have to let her cum before he was ever going to get inside her. As hot as she was she might actually cum from penetration. But his cock was both long and thick, and he wanted her to take it without hurting herself. He backed up. \"Get up. Take off your clothes and kneel back down,\" he said.\n\nEleanor sprang up, saying, \"Thank you, thank you.\" She smiled at Chris but he was dead serious, watching her sleek, naked body exposed, (FUCK!) She knelt again, her heart-breaking ass displayed for his view, (Perfect). His heart pounded.\n\n\"Fuck me,\" she said.\n\nChris pressed a pedal with his foot and the chair began to rise. He raised it so her ass was level with his face. \"I'm too big to just fuck you. I'll make you cum now and we'll get back to it after.\"\n\n\"I'm sorry,\" she said. \"You made me insane.\" She arched her back. her ass was like two perfect scoops of vanilla ice cream laid against each other. \"Touch me,\" she begged.",
        "Chris caressed her cheeks, then teased her crack with his fingertips. She wriggled against them. \"Oh. Put it in.\" Chris's cock became painfully hard. He gently spread her tight cheeks, and did what he had dreamed of since he first saw her in that famous string bikini scene. He licked between her cheeks, teasing more whimpers from her. \"Oh my god. Please,\" she cried.\n\nHe continued licking between her cheeks, teasing her, running his tongue deeper almost to her asshole,then pulling away and painting the peaks of her cheeeks with the tip of his tongue.\n\n\"Oh my God,\" she cried, \"Please.\"\n\nHe slid his tongue deep between her cheeks, spreading the round globes in search of her hole. Eleanor was moaning but she gasped when he found her. Chris ran his tongue around her while she cried and begged for him to put it in. She tried to push back but he kept her where he wanted her with his hands. Swirling his tongue. Poking her with it. Squeezing her cheeks. Her whines became unearthly. \n\nChris relented and slid his tongue into her ass. Eleanor cried gratefully, in a voice that came from deep within, \"Yes. Oooohmy goddd yes.\"\n\nChris kneeded her perfect ass while he swirled his tongue in circles as deep inside her as he could get. \"Oh I'm cumming,\" she cried, \"I'm cumming, I'm...Oh my god I'm...CUMMING!\" \n\nChris felt her contract over and over on his tongue as she screamed, \"Cumming, cumming, cumming, aahhoooh I'm cumming.\"\n\nChris continued rimming her gently while Eleanor, barely in control of her thoughts, still breathing heavy, whimpered grateful endearment to him of utter satisfaction. Chris gradually licked, little by little away from her, enjoying her until her breathing calmed. Then he kissed her beautiful cheeks, got up, let the chair back down and walked away. \"Stay there,\" he said. Eleanor settled, sighing. She whispered, \"Thank you,\" with closed eyes, resting her head against the upholstery, \"thank you.\"\n\nChris pulled down and climbed out of his sweatpants. His cock had been hard a long time now. He sat facing her at an angle behind her. He stroked his cock while ravishing her with his eyes. She still knelt, draped over the chair, eyes closed, relaxed and happy. Chris looked at her ass and at her glistening light brown bush. He stroked himself. \"Soon,\" he thought, \"soon I will fuck you and fuck you and give you all my lust and cum.\" He wanted her to be fully ready after the tremendous orgasm she just had. Rested and ready, not exhausted.\n\nChris replayed making her cum with his tongue. \"Oh my god,\" he thought. \"she's fucking amazing with those tight round cheeks, and that perfect little hole.\" It had all happened so easily that Chris just registered now, watching her. He had planned to rub her clit while he tongued her but he never needed to. She had exploded from just his tongue rolling around inside her anus, and his hands on her ass. She seemed as starved as he was, and as ready and happy to be quenched.\n\nEleanor opened her eyes to the sight of Chris stroking his big cock. Her eyes went from open to wide open, to a squint that could only be interpreted as raw carnal lust. She took in his length and girth. \"Oh my god,\" she thought, \"he's fat.\" She had practiced for this date. She had been told everything, but she hadn't practiced with anything like that. She had shopped for and practiced with, what she thought was a quite thick realistic dildo. Chris was at least the next step bigger. She began breathing a little heavier. She cleared her throat before speaking. \"Can I come over there?\"\n\nChris got up and walked the ten steps to her with his hard cock in his hand. She gave him a warm smile to greet the man who had so pleased her but he refused to recognize it. \"Face forward,\" he directed. Eleanor obeyed. Chris came around behind her and raised the chair where he wanted it. Eleanor shifted her weight from one knee to the other, anxious for this to happen. Her breathing increased a little more. The feeling of having him behind her, picturing him working that huge, beautiful cock into her ass made her exhale out loud. He hadn't touched her yet but her pussy was wet already.\n\n\"So do you have any pity for all the men who have watched you. For the men who, if they could, they would trade time on the planet to fuck your ass once.\" His tone was an accusation. Eleanor thought, and he gave her some time. \"No,\" she said.\n\n\"No?\" His tone a warning.\n\nEleanor defied him. \"No. Too bad.\"\n\n\"Oh my god,\" Chris thought. She knew she was playing into his hands, surprising \n\nChris. He had expected honest modesty like before. \"Wow. She's fucking asking for it and she knows she is.\"\n\n\"Too bad for them. Is that it?\"\n\nEleanor arched her back, \"um. They can look but not touch.\"\n\nChris rested a hand softly on her crack. \"Ooh,\" she breathed. He tickled between her cheeks. He came to whisper in her ear again. Agitation flowed from her.\n\n\"But I can touch you.\"\n\nEleanor nodded,\"You can touch me.\"\n\nHe whispered, \"I'm going to fuck your ass for all those men.\"\n\n\"Yes,\" she whispered back, \"Do it like they're all watching.\"\n\nChris's eyebrows rose at that. \"They're going to want me to fuck you hard.\"\n\n\"Yes.\"\n\n\"They can watch me pound the fuck out of you.\"\n\n\"Y...yeah.\"\n\n\"So you do have pity on them.\"\n\nShe nodded. \"I'm going to let that geek from the computer store fuck my ass.\"\n\n\"So should I have mercy on you?\"\n\nEleanor gasped, thoroughly turned on. \"No. Make me say I'm sorry.\"\n\n\"Oh I'm going to make you sorry,\" He said fiercely.\n\nEleanor was breathing hard now and Chris couldn't stand to wait. He reached for the set of dildos and lube wrapped in cloth, he laid it out on the chair. Eleanor quivered in anticipation of what was to come. She looked at the three dildos, grabbed the larger two and tossed them across the room.\n\nChris drew back, surprised.\n\n\"Just that one,\" she said, \"I want your cock to be a struggle.\"\n\nChris opened his mouth, now out of character. He looked into her eyes. Eleanor also opened herself personally. Her look was a plea, but she said simply into his eyes, \"I want you so bad.\"\n\nChris squeezed lube on his fingers. He slid them teasingly up and down her crack, lubing her and bring deep breaths from Eleanor. He worked his finger to her hole and was massaging and lubricating her when she pushed backward onto him bringing an, \"Uuuhh,\" from her. Chris worked his finger further into her tightness.\n\n\"Oh I...I want it now,\" she moaned, stretching herself luxuriously, arching her back fully and rocking back and forth on his finger. \"Oh Chris,\" she moaned.\n\nChris withdrew his finger, coated the slim plug Eleanor thought was enough. She felt way too tight to Chris. He would need to hold her off. The fucking girl was intense. He slid it between her cheeks, felt for her and pushed it slowly in. Eleanor breathed and arched her back more as she got past the thicker part. The rest slid in with an, \"Oh yeah,\" from Her. \n\nChris allowed his left hand to explore different parts of her body, not for her but for him. He availed himself of her beauty while he slowly removed and inserted the small plug. He just stayed away from her dripping pussy.\n\nEleanor said, \"Uuuhh,\" each time the apex stretched her hole, and \"Ooooh,\" when it slid past. She moved with all the caressing. She reached for his cock but he stopped her. She pushed off one chair cushion so she could put her face down. Now her back was completely arched. She looked back at Chris. \"I want to put it in. Please.\"\n\nChris shook his head at how beautiful she was. Even face down ass up her cheeks were so tight. He lubed his cock generously. It couldn't get any harder. He removed the plug. She hissed \"ahhh,\" when it left her. Chris then took his lubed fingers and pressed them against her. She relaxed and opened herself, accepting his two fingers. \"Oh yeah,\" she moaned. Chris moved them in and out and Eleanor loved it. \n\nShe grew impatient. \"Please.\"\n\nChris got in position behind her and pressed his impressive cock head between her cheeks. Eleanor spread her legs a little more and reached between them to grasp the base of his thick cock. It squeezed between her snug cheeks to her hole and stopped there. Eleanor tried to press it in but she couldn't do it.\n\nShe took deep breaths and focused on opening again. She pulled on the shaft and tried to open while moving in little circles against the big head. She felt the tip begin to enter her. She started panting and felt it start entering her, but she needed to open further. Her next deep breath opened her enough for the head to pop in, \"Ohhhhh god Chris.\" There was a slight prick of pain that converted quickly to pleasure. \"ummm\" she moaned.\n\nChris was out of character and didn't care for the moment. He let her take control. She wanted to take his cock the way she wanted. He just watched the beautiful sight of his thick cock squeezing between Her awesome cheeks, her hand grasping the base, sliding on the shaft as she tried with no success to pull more into her. Chris decided for her, slowly easing himself out of her.\n\n\"Oh,\" she cried, obviously annoyed. Chris looked down at her disappointed face. He nodded, \"Let me.\" He pressed against her again. Like before she took two breaths to pop the head in. \"Ouh,\" He slowly pulled it out again. \"OOH Okay,\" she croaked. She pushed back against him and he slid the head into her in one motion. \"AAAhh.\" \n\nAgain the slight pain before even more pleasurable fullness inside her.\n\nChris worked his cock-head in and out of her, loving her tightness, but wondering if she could take what he hoped. Eleanor called, \"Yes,\" and gasped quick airy breaths. Able to slip the head in now, Chris, instead of pulling out again, pushed. A fraction at a time he began sliding into her. Eleanor's moans became loud and urgent. Chris almost asked her, \"stop?\" but Eleanor continued pulling. Her loud moans became open-mouth calls as she bore down, \"AHHHHH\"\n\n\"Are you okay?\" Chris couldn't help it. It sounded like pain.\n\n\"Uhhh, I know the rules,\" she called. But the concern in his voice made her want him all the more.\n\nChris let Eleanor continue pulling on his shaft but he took control. He pulled back an inch, pushed in an inch. With each thrust going just a little deeper. Eleanor cried out loud but Chris took her at her word and kept pressing into her, enjoying her cries and calls. He had worked three inches into her, taking two seconds to pull back two inches, and two seconds to push forward two inches. Eleanor called, \"AHHHH, OOOHH\" and opened for him, \"AHHHH.\" he was half in, plenty to fuck her good. Her loud screeches, her moans and screams, her gasping breaths sent tingles up his spine.\n\nChris pulled slowly almost out of her and firmly into her up to half way. \"UUUHH.\" He picked up a rhythm and Eleanor went even crazier, \"OH MY GOD CHRIS YES OHHHH OHHHH,\" only pausing to draw deep gasping breaths of air accompanied by high squeals. Chris put a hand on each of her glorious cheeks and slid his whole length into her. Now he was fucking her with eight inch strokes, still with the same rhythm. Two seconds out, two seconds in. Eleanor started screaming, \"AHHHH I'm cumming, Oh I can't believe I'm cumming,\"\n\nShe took a horse gasping breath, closed her eyes tight, and it took her. Her eyes opened, head rocking against the cushion to Chris's rythem, eyes bulging before slamming shut. She screamed with each contraction, \"AHHH, AHHH, AAAH, AHH, AH, AH, OH CHRIS CUM IN ME PLEASE CUM IN ME,\" Chris went harder as his orgasm approached. Eleanor urged him with screams of pleasure and calls, \"Fuck my ass Ohh fuck me.\" \n\nWhen he gasped and slowed Eleanor began whimpering with pleasure, and she urged him with yeses while he let go inside her, \"Uh Eleanor, uh, uh, uh, uh, uh, uh.\"\n\nShe cried, \"Yes, Chris, yes...oh Chris.\" She covered his hand with her own. They stayed that way, breathing heavy, Chris parked deep inside of her, spent, and happier than he remembered being for a long time. Eleanor wanted to fall asleep with his cock filling her. She felt complete for the first time ever."
    ],
    "authorname": "Wisheswerehorses",
    "tags": [
        "actress",
        "anal",
        "cute",
        "erotic couplings",
        "high priced date",
        "mystery",
        "recluse",
        "starlet",
        "strange"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-mysterious-mr-treeman-pt-01"
}