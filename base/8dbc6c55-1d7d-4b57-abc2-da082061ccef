{
    "title": "The Bra Salesman Ch. 10",
    "pages": [
        "We're closing in on the end. I've got most of the rest of the story written, so I'm hoping to get the last few chapters out every other week from here on out. Hope you enjoy!\n\nChapter 10: Best Served Served\n\nUgh, I feel like crap today. And I don't mean the usual \"I woke up sleepy\" crap that most people refer to when they say that. Or the \"I'm overwhelmed with all I have to do today\" bullshit feeling as if that were somehow uniquely applied to them and only them. No, I mean the \"my heart and stomach were dropkicked by a Brazilian soccer player after being pummeled by a rabidly nasty mountain goat but being chewed by a certifiably insane boxer\" kind of feeling. \n\nToday was a particularly grueling day on the job, and I honestly don't know how my boss puts up with my significantly decreased output of work over the last week. Actually I do know how he puts up with it. It's because he's one of those incompetent managers that has absolutely no fucking idea what his workers do or has any experience in this field. That means I can bullshit him up and down every which way in my sleep.\n\nWhich, it turns out, is a good thing because that's exactly what I'm doing. All night long I'd tossed and turned in bed, desperately trying to think of any way to get out of the blackmail Brittney holds over me that doesn't involve me getting thrown in prison. No matter how much I think about it, though, it always comes down to my word against hers, and my word won't be worth shit after people hear what I did to Tasha, plain and simple. Ok, granted my word was never worth shit to begin with, but don't get me off topic.\n\nI did manage to come up with one plan that I have to admit is pathetically stupid and probably won't do me any good whatsoever, but I have to try something. That's why I'm currently knocking on Brittney's apartment door at 6 o'clock. That's 6 o'clock SHARP because that's what fucking Brittney demands. I never understood what means, 6 o'clock sharp? Like time is a knife you need to keep in a special drawer away from small children so they don't nick themselves? Whatever, I just hope my stupid plan fucking works.\n\nBrittney answers the door wearing a bathrobe and smiles as she lets me in. \"Oh, I've been waiting for this!\" I step in and put my wallet and keys on a table by the door, then I nonchalantly put my cell phone down on its side. I surreptitiously click the Record button on the digital recorder of the phone, and then put the cell phone down again. \n\nI turn towards her and grimace, \"Just tell me what you want me to do and let's get this over with.\"\n\n\"Oh come, come,\" Brittney said in a mockingly sweet tone, \"no need to be so down. I just...\" she paused for a moment to think, \"I want you to show me some of more of your exercises, the kind that make me feel SO good.\" She never refers to what we do as my exercises, so now I know she's just messing with my head. Of course, dropping her bathrobe and revealing her naked body to me is doing a lot more to mess with my head than anything else. She slowly walks toward me then grabs my hand, thrusting it into her crotch and whispers into my ear, \"Finger me.\"\n\nUnder normal circumstances, any day that a beautiful woman with nice perky D breasts asks you to put your fingers into her moist pussy can be instantly classified as a very good day. But when it comes to a hateful demon like Brittney, even this wonderful request gets ruined. But of course, that doesn't stop me from sliding my fingers into her wetness and rubbing the lips of her labia with my thumb. Every time I find the knob of her clitoris, she lets out a moan.\n\nShe clenches my tricep and pulls my arm towards her, coaxing my fingers deeper into the spongy walls of her drenched vagina. As I move in and out, I can feel her tightening her pussy around my fingers as my other hand reachs out and squeezes one of her nipples. Her hands scramble to undo my belt and pull my pants off while my hands are busy doing other things.\n\nNext thing I know we are down on the floor on her rug. I honestly can't tell you if she pulled me down there, I pushed her down, or we both just lost our balance and landed on our respective asses. All I know is she is on her back with her hands on my buttocks and guiding my groin so that my cock aligns with her pussy. She smiles as she spreads her legs apart and pushes me inside her.\n\nMy mind starts imagining I am on top of Tasha, and I rock my pelvis back and forth so that I thrust inside her with a force that makes her gasp. I imagine I'm watching Tasha's breasts shudder every time I shove my body into hers. I imagine it's Tasha's hair I have grasped with one hand, and that it's her leg I have lifted up to rest on my chest with the other hand. I hold her thigh steady as I pummel her wet cunt repeatedly and listen to her excited pant with every plunge.\n\nI almost tell her I love her until I remember that it's not Tasha, which then makes me want to get this fucking thing over with, and I literally mean this fucking thing. I give several more plunges into her tight pussy, and it doesn't take long until my cum bursts inside her and turns her wetness into a sticky combination of sweat and jism.\n\nShe rolls over on the floor breathing heavily, which makes her large breasts wobble and quiver. \"Thank you, Albert. That feels so good,\" and then she gives a devilish smile, \"and I really think these exercises are helping me fit into my lingerie.\"\n\nI look at her confused, \"Oh cut the act, you know that's all fake.\"\n\nShe stood up with an indignant look, \"What?!? This is all fake? You mean, none of these exercises are real?\" Yeah right, you bitch, now you're just giving me a hard time about... Shit! She's not giving me hard time, she's putting on an act for the camera! She must have realized what I was doing and now she's get this all recorded! \"I can't believe you would do this to me!\" she screamed at me. \"Get out of my house!\"\n\nI lunge for the table with my wallet and cell phone, but she is too quick for me. In one fluid motion, she snatched the cell phone and gently tossed it across the room onto the couch while spinning around and opening the front door. Then in a move worthy of Jet Li, she grabbed my shoulder and spun me into the hallway so that I fell down on my back. Within seconds I feel my clothes, wallet, and keys land on my torso. \"You think I couldn't see the little light on your phone, jackass? God, you're a fucking moron. Don't worry, you'll get your phone back, after I download that video off of your phone onto my computer. Idiot!\" And with that, she slammed the door into my little toe.\n\nFuckitty fuck fuck fuckitty fuck FUUUCK! I quickly put my clothes on in the hallway before anyone catches me naked out there and calls the cops for public indecency. That's just fucking terrific. Brilliant plan, dickwad. Now instead of me having an incriminating video of Brittney confessing she's blackmailing, she has an incriminating video of me fucking her and lying to her. Fuck! Now I'm in even deeper shit. Instead of my word against hers, now it's my word against a recorded digital video where everything I said can and will be used against me in a court of law. Not even Matlock could get me out of this. Matlock? What am I, 75 years old? I can't think of a better lawyer cultural reference than fucking Matlock? \n\nI stand up and want to bang on the door as hard as I can until she opens the door and lets me back into her apartment, but I stop myself. I know all I will do is draw attention to myself from anyone nearby, and I'll come across as an out-of-control violent jerk, and she'll be able to play up the sweet, innocent victim to any eavesdropping neighbors that would undoubtedly be interviewed by any newscasters that are called in to get comments of how the insane rapist appeared to frightened, objective onlookers. So I listen to the Matlock voice in my head and instead grab my jacket and hobble to the elevator.\n\nI might as well go down to a local bar and down a bottle of 200% proof liquor and maybe I'll be lucky enough to get liver poisoning and die right on the spot. Instead I find myself outside of Tasha's apartment. What the fuck, I might as well knock on the door and see if she's home.\n\nI hear an annoying \"Hey there!\" Oh, great, there's Dave greeting me with a big fucking smile on his face. I thought this was the night he was giving her a break from all his shitty toys. \"Come on in, Tasha's in the other room and ready to go,\" then he says under his breath, \"if you know what I'm saying.\" Yeah, I know what you're saying, you dumbfuck. A third grader knows what you're fucking saying. Amoebas growing on the bottom of my shoes know what the fuck you're saying.\n\nI'm sorry, I'm being an asshole. I know that was uncalled for. I'm just in a really REALLY pissy mood now and I thought maybe seeing Tasha would cheer me a little. But seeing Dave and knowing he's here with Tasha just puts me in an even lousier mood. \n\nDave leads the way into her bedroom, where Tasha is on her knees in the middle of the bed with her hands tied above her head with a rope. Ok, I admit seeing her stunningly gorgeous body does put me in a slightly better mood. Then I see she is blindfolded and gagged, and that's when I notice the whip in Dave's hand. \"Ever since I got here, she's been begging me to do this!\" God, that gleeful pitch in his voice is even more fucking annoying than a soulless ballad sung by some ballless boy band. \n\nHe stands beside Tasha on the bed and grabs a clump of her hair, jerking her head back. \"Do you want to be whipped again?\" Jesus, Dave, what the fuck kind of dominating bullshit are you doing here? But when I watch her nod her head vigorously, I remember her fetish and how much she enjoyed this kind of dominating bullshit. \n\nDave takes a step or two back and then brings the whip against her back, which I see is already a little red from before. Her entire body jerks in pain and she lets out a yelp as every muscle in her body tenses up and her gargantuan tits jiggle. He whips her again, which makes me really angry, but I'm too hypnotized by Tasha's incredible naked body, glistening with sweat, writhe in ecstasy. \n\nDave walks up and grabs her hair again, \"Do you want the clamps?\" She nods. \"Do you really want the clamps?\" She nods again. \"I don't think you want the clamps.\" She nods and grunts with enthusiasm. Dave reaches down and grabs the large metal nipple clamps from his bag and puts the pinchers right on top of her erect nipples. The chain between the clamps shakes violently as Tasha's entire body twists with anguish. Her breasts randomly shake in every direction with sweat flying off of her delectable flesh. \n\n\"Spread your legs. Now.\" Dave commands as he grabs a dildo from his bag. She obediently does so, and then he shoves it into her wet cunt as hard as he can. He thrusts it in and out of her body several times, and she is grunting with orgasm and trying to hump that little piece of silicone polyethylene as hard as her jiggling, shackled body can.\n\nWith the clamps and dildo firmly in place, Dave went back to whipping her a few more times. The slap of leather against her skin, the smell of her sweat, the way her body rocked and thrashed with every impact, the sound of her orgasmic grunts, it was all getting to be too much for me. I just need to get the fuck out of here, I can't take this shit any more.\n\nDave looked at me, smiling, but when I walked towards the door, he said, \"Wait, don't leave! I was just getting her warmed up so that you and I could... y'know, do an exercise together.\" He immediately untied her hands, and Tasha went down on all fours on the bed. \n\n\"I don't think so, it's getting late, and I...\" my voice trailed off. Don't get me wrong, my cock was rock hard by now, and nothing would be better than finding some unused orifice of hers, although that was getting increasingly hard to find. \n\nAs Dave unhooked her hands and took her gag off, I heard Tasha plead, \"Please. Don't go.\" She was still blindfolded, so she couldn't tell where I was exactly. But there she was on the bed, on all fours, with the chain of the nipple clamps dangling beneath her swaying tits and a huge dildo protruding from her drenched pussy. \"Please,\" was the only other word she said.\n\nMy brain stopped working at this point, because I don't remember consciously deciding to take off my clothes and stand in front of Tasha. I certainly don't remember choosing to put my hardened dick against her cheek so that she, in her blindfolded state, could easily turn her head and wrap her wet lips around my dick. I don't remember when Dave came up to her from behind and spread her butt apart so that he could force his dick into her ass. I don't really remember deciding to do any of this. But whatever part of my inner psyche made these decisions on behalf of the rest of my body, I and my cock are both infinitely grateful.\n\nTasha was moaning as she slid her head up and down my shaft as Dave was thrusting himself deeper and deeper into her from behind. Every inch of himself that he shoved into her made her hanging breasts wriggle and swing. By now, Tasha had swallowed so much of my cock that my balls were tickling her chin. Dave was hammering her from behind now, which made her forehead press into my groin and pushed my cock deeper into her throat.\n\nI felt her mouth relax a little, so I pulled myself out of her and let her catch her breath for a few seconds. It didn't take long, however, before she ingested my cock whole again and I marveled as it disappeared into her wonderful mouth. \n\nI could see the veins in Dave's neck popping out as he was thrusting faster and faster and, sure enough, within a few seconds a saw a satisfied goofy grin on his face as his body slowed down. Not the kind of thing I want to be looking at in this particular moment, but not so distracting that I had to stop fucking her face.\n\nThat's when I felt Tasha slow down herself and let my throbbing cock go free from her mouth for a moment. Then she gradually let her lips glide over my dick again. I could feel myself pulsing in her mouth as she covered me with her spittle. She would suck as hard as she could, and just when I thought I was going to cum, she would release the pressure and lightly flick her tongue up and down my shaft. And then she would suck hard again until I could feel the jism building inside me, and then she would tauntingly release the pressure again. \n\nFinally, she sucked as hard as she could and this time she didn't relent until streams of my warm cum shot into her mouth. As she slid her mouth off my cum-covered cock, strings of jism swung between her lips and my throbbing dick. She reached between her legs and pushed the dildo in and out of her pussy a few times, just to keep herself good and wet.\n\nNext I watched dumbstruck as she began licking my cock, lapping up every drop of cum I had on me. Like my dick was some jism-flavored ice cream cone that she wanted to savor every single morsel. Feeling her tongue lightly go up and down every inch of my penis was an experience unlike anything I'd ever had. I could see her drinking every globule of cum and letting it rest on her tongue for a few seconds before she swallowed it down. My God, I think I'm going to faint. That's right, faint from a fucking blowjob, which may sound ridiculous to most people, but fuck them, they don't know. They have no fucking idea how she was an unbelievable virtuoso at sucking cock.\n\nI hadn't felt this good in days and I could feel the muscles in my cheeks start to quiver from being plastered in such an unnaturally large smile for so long. Tasha took off her blindfold and my heart leapt as I stared at her beautiful face. Yes, my heart fucking leapt, so don't say a fucking word about it. She looked up at me with a devilish smile and slowly slid her tongue up my stomach, pausing every so often to kiss my torso. As her mouth moved across my chest, my breathing became faster and more excited until her eyes met mine and she planted her lips right on top of mine so that I could literally taste my own cum. And the weird thing is I didn't even mind tasting my own cum, which should tell you just how extraordinarily intoxicated I am with Tasha right now.\n\nAs we kissed, she wrapped her arms around my shoulders and pressed her incredible breasts against me. Then, with an impish giggle, she fell down on her back onto the bed and pulled me down on top of her. I was taken by surprise as she quickly rolled over so that all of a sudden I was the one on bottom and she was the one sitting on top of me with her muscular thighs straddling my body. The dildo was still inside her, and she used her hands to move it around a little.\n\nShe leaned over to the nightstand and grabbed a bottle of oil that I hadn't noticed sitting there. Of course, to be fair to myself, when I'm facing a woman with large tits who wants to suck my cock, I don't normally notice too many other things going on.  \n\nTasha holds the bottle of oil with one hand as she takes my hand in another. She pours a generous amount of oil into my hand and then presses my hand in the deep chasm of her cleavage. Taking the hint, I massage her entire chest with my hands until her huge tits were glistening and dripping with oil. Oh my god, I had forgotten how wonderful it felt to squeeze the flesh of her breasts so that her skin bulged between my fingers. Who am I kidding? I hadn't forgotten; I just missed these wonderful tits. I missed sinking my fingers into her generous mounds of flesh, and squeezing her nipples between my oily fingertips, and putting as much of her tits into my mouth as humanly possible. \n\nShe rolled her shoulders back a little so that I had unfettered access to her entire chest, and I made sure I covered every millimeter of her gargantuan tits. Now that her shiny breasts were coated in oil, she put her hands into mine and pushed them aside and began rubbing her massive chest against mine. I could feel the heat of her body as she moved her tits side to side across my chest until it too was oily. \n\nShe moved her breasts downward and used them to cover my entire torso with oil. She continued down my body, pressing her breasts against my legs until each hair of my shaggy legs was gleaming with oil. Every so often she would play with the dildo still lodged in her moist cunt. \n\nI laid there as if I were floating in heaven, enjoying having my whole body lovingly massaged by her slippery tits. It must've taken her ten minutes, but it could've been hours for all I know. I lose all sense of time every time I get a breast massage. Right, as if my scrawny ass gets breast massages every other day. No, the only time I've ever gotten this kind of treatment was from Tasha, and I fucking loved her for it.\n\nI hear a rustling and look over and see Dave is gleefully videotaping all of this. Normally I find Dave's presence to be irritating, if not downright distracting, but I admit I appreciate he had the perverted ambition to capture this moment digitally for me to enjoy over and over. Yeah, I know he was doing it for him to enjoy, but as long as I could relive this moment, I don't fucking care.\n\nOh, actually Dave is setting the camera down and he approaches Tasha. He's standing beside the bed trying to shove his penis into her breasts. I can tell Tasha isn't in the mood to have his bony little pencil-dick anywhere near her, but she obliges by turning her shoulders toward him and pressing her breasts together so that he can start fucking her tits.\n\nThe remaining oil on her breasts seems to be lubricating him, because he starts moving faster and faster. Each time he shoves his groin against her chest, the skin on her tits ripple from the impact. She's pressing her breasts together as hard as she can, giving him as much friction as possible, which does the trick because within thirty seconds he grunts and shoots his load onto her huge bosom. Thirty seconds? Jesus Christ, Dave, don't you have any fucking strength in your groin that can make you stretch the moment out longer than it takes me to heat a box of Oodles o'Noodles?",
        "As his eyes rolled into the back of his head with orgasmic satisfaction, she looked over her shoulder at me and smiled. Then she got on all fours on the edge of the bed and laid her head on the bed moving her hips up so that her pussy was directed straight at me. I immediately got on my knees behind her and grabbed her hips. With any other woman, my spent cock would be too exhausted to do anything else that night, but seeing Tasha naked and presenting her wet cunt to me was all the inspiration my body needed to become rock hard again.\n\nThe dildo was still lodged inside her, so I pulled the dildo in and out of her a few times, and she threw her head back in arousal. I even shoved it hard into her one time, and she squealed with delight. Finally I removed the dildo and tossed it to the side of the bed and then pressed the tip of my penis against the lips of her pussy as she wiggled her hips trying to get my cock inside her. Instead, I playfully moved around so that she couldn't quite wrap herself around my throbbing dick. She sighed several times and then used her hand to spread the lips of her pussy apart, practically begging me to put myself inside her. I continued, however, to move the tip of my cock in and around and up and down all over her pussy, but never penetrating her. \n\nShe gave another pouty sound of disappointment and then with her hand reached back and grabbed my cock. Her hands were still a little oily and her fingers easily slid up and down my shaft. \n\nI was just enjoying her giving me a handjob when she pulled me into her cunt and shoved her hips back against me so that my cock was driven deep inside her. I tried to pull out, but I felt the muscles around her pussy clench hard so that I could barely move. See Dave, that's what groin muscles could do if you tried to force yourself to hold off for a little while.\n\nWith her cunt locked around my cock, she began gyrating her hips around and grinding herself on top of my penis so that I was burrowing deeper into her. Now it was her turn to play with me as she moved her pelvis back and forth and up and down, all while clamping tightly onto my stiff, throbbing cock.\n\nSoon we fell into a rhythm together so that she rocked back into me and I thrust forward. We started slowly at first, not wanting to rush ourselves. After spending so much time apart, it felt so wonderful to finally be with each other again that I don't think either of us wanted this moment to end any time soon.\n\nI grabbed the side of her hips with my still oily hands and rubbed her buttocks as I coaxed them back and forth on top of my shaft. I slid my hand down to the small of her back and held her in place as I gave a few forceful thrusts into her that made her gasp with pleasure. I could hear her moan with pleasure as I slipped back into our former rhythm.\n\nI sunk my fingers into her and slammed by cock into her as hard as I could once, and her grunt \"Ungh!\" conveyed pure satisfaction. I thrust myself into her again, and she cried \"Ungh!\" as I spread the fingers of my greasy hands wide across her back. I began pummeling her as hard as possible and she shrieked with pleasure. \"Ungh! Ungh! Ungh! Ungh!\" Again and again, I barreled into her.\n\nI could feel her slamming her hips back against me even harder as she screamed with arousal. \"UNGH! UNGH!\" Her tousled hair was swaying wildly now \"YES! UNGH! UNGH!\" and she was begging me for more, \"Harder! Harder! UNGH! HARDER! YES! UNGH! UNGH!\" \n\nHer muscular buttocks quivered every time my sweaty body slammed into hers, and I could see the sides of her immense breasts shuddering as well. \"YES! YES! UNGH! UNGH!\" I was slamming into her violently and brutally and her voice, rising in pitch, screamed for more. \"YES! YES! YEEEEEES!\" By now, I could hear the difference in her voice when she orgasmed, and it encouraged me to continue pounding myself into her even harder. \"UNGH! UNGH! OH GOD! OH GOD! UNGH!\"\n\nI don't know how I managed to hold out for as long as I did, but I could feel the jism building and I knew I wouldn't be able to stop myself. \"UNGH! UNGH! YES! UNGH!\" I felt an orgasmic rush as cum exploded inside her and filled her groin. \"YES! UNGH! UNNNNNNGH!\" \n\nWe both collapsed onto the bed, drenched in sweat. Well, I was drenched in sweat. She was drenched in sweat and my cum around her pussy, as well as Dave's leftover cum still sticking to her gigantic tits that swayed as she gasped and tried to catch her breath. \n\nWe looked at each other and smiled. God, I can't remember the last time I had felt this happy. I reached out and found her hand and held it gently in mine, and I felt her tenderly squeeze my hand in return. Have her eyes always been this intensely green, or is this just my orgasmically giddy brain seeing colors that aren't really there? Oh, who the fuck cares? I just love staring at her.\n\n\"That was fucking awesome!\" Dave is peering into the digital camera in his hands. I hadn't even noticed him standing there, but I assume he captured the entire thing. Once again, my instant feeling of disgust for this swine of a person was immediately replaced with a gratitude that this wonderful man captured this moment of time for all eternity.\n\n\"I thought I'd find you here,\" and with that grating voice, all my orgasm-induced giddy happiness vanished in a nanosecond. I lifted my head and saw that yes, in fact, Brittney had let herself into Tasha's apartment and was now standing in the doorway with a scowl on her face. Or maybe that was her smile. I honestly can't tell the difference anymore. \"Why am I not surprised to see you here fucking this cheap harlot?\"\n\nDave stood nervously beside the bed, \"Um... the thing is...\"\n\n\"Get the fuck out of here, you little troll!\" Brittney snapped. Dave immediately gathered up all his clothes and left the room. I heard the front door open and close soon after, and I wondered if he'd taken the time to put on his clothes before he left or if he'd been so scared of Brittney that he had wandered into the hallway without anything on. \n\n\"And as for YOU,\" she turned to me jutting out a bony gnarled finger toward me, \"I thought you would have been smart enough to come back and beg me for forgiveness instead of fucking this stupid whore!\"\n\nI could see Tasha was annoyed but still wanting to make amends. \"Brittney! I'm...\"\n\n\"Shut the fuck up, you little tramp!!\" Brittney bellowed. \"You'll spread your slutty legs and slutty jaws for any semi-erect cock that happens to be nearby, so keep your jism-filled mouth shut!\" \n\n\"Hold on a minute,\" I said. \n\nBut Brittney cut me off, \"NO! YOU hold on a minute! In case you've forgotten, you are going to do what *I* say or things are going to go VERY badly for you!\" I swear Brittney's face would have veins popping out of her forehead if her species had blood running through their cold, dead bodies.\n\nTasha leans over to me, \"Who was that guy that said 'God is dead'?\"\n\nBrittney keeps screaming, \"I hold your pitiful little life in my fucking hands, and you decide to come HERE and fuck this trollop? Are you fucking insane?\" \n\nGod is dead? What is Tasha talking about? \"Are you talking about John Lennon?\" No, he said he was more popular than Jesus.\n\n\"Not him, some philosopher writer guy.\" Philosopher? Where is this coming from? \n\nSeeing us talk only made Brittney even more furious, which I didn't even think was possible. \"Don't you fucking talk to each other when I'm fucking talking to you!! Who the fuck do you two think you are?\" \n\nI ignore Brittney and wrack my brain trying to think of the philosopher that talked about God being dead. It's right on the tip of my tong... oh right! \"You're mean Nietzsche?\"\n\n\"Yeah! That's him!\" Tasha sat up, cleared her throat, and calmly said in a loud voice, \"Neitzsche-esque.\" \n\nBrittney's face, red and contorted with fury, immediately calmed down into a silent, vapid look where she was staring off into nowhere. Shit! What the fuck just happened? The room that had filled with yelling and screaming immediately became so quiet I could hear my own heartbeat. What the fuck what the fuck WHAT THE FUCK?!? Now I am starting to seriously freak out. \"Holy shit! What the fuck did you do?\" What the fuck DID she do? What the fuck is going on?!?\n\n\"It's ok,\" she says to me. Don'ttellmeit'sokgoddamnittellmewhatthefuckishappinghere!\n\n\"She's fine, she just needed to calm down.\" Tasha said, almost indifferently. \"You can relax too,\" she quietly tells me as she pries the bed sheet out of my stiffly clenched hand.\n\nMy brain is both flooded with hundreds of questions and deadened with any sense of reality. I finally manage to catch my breath, \"But how the fuck did you DO that?\"\n\n\"Oh, that?\" Tasha pointed at Brittney. Uh YEAH, I do believe THAT is what the fuck I'm talking about!! \"Brittney wanted to go see this hypnotist about a year ago, so we went and she was picked to go onstage. He hypnotized her and used this code word. A few days later, when she was ranting about something, I tried using the word and this is what happened. So every now and then when she goes crazy like that, I use the word to help her calm down.\" Tasha smiled and hopped off the bed and started looking for her clothes. As she started putting her bra on, she continued, \"Don't worry, she'll come to in a few minutes and won't remember a thing.\" \n\nAre you fucking shitting me? That is the dumbest thing I've ever heard. Hypnotism is just a bullshit racket for people who want to believe some stupid hocus-pocus and ignore everything we know about human will power and self-determination. Hypnotism is like the creationism of psychology, who in their fucking right minds would believe such bullshit?!? But as I stare blankly at Brittney, who is clearly staring blankly back at me, I can't think of any other explanation for what just happened right in front of my face.\n\nAs Tasha stepped into the bathroom, I realize that now would be a good time to go to Brittney's apartment and get my phone back. And then it hits me. \"Brittney,\" I whisper to her so that Tasha wouldn't be able to hear, \"first you need to apologize to Tasha for calling her all those names. Then you're going to go back to your apartment and erase the incriminating video of me off your computer. And the next time I come to your apartment, you're going to give me my phone back.\" \n\nI smile and stand there, but Brittney isn't moving. I thought she was going to do whatever I said, so why is she just standing there? Shouldn't be hopping to it and doing what I ordered her to do? Is she really hypnotized? Maybe it's all bullshit after all. Hrmm, I must need to do something else. Think back to other hypnotists I've seen on TV. What do they do? Great, I'm using TV hypnotists as a source of information. Next I'll use Dora the Explorer to help me figure out how to use my GPS.\n\nOh yeah, hypnotists snap their fingers at the end. I hold my hand up and snap. Instantly Brittney blinks several times and then looks around the room. Tasha is walking back into the bedroom, and Brittney goes up to her, \"Hey, I didn't mean what I said, I just get wound up sometimes. You know me. I don't know why I did that, so I'm sorry.\"\n\nTasha responded, \"It's ok, really.\" But I don't think Brittney was even listening, since she'd already turned on her heel and walked straight out the bedroom door and out the front door of Tasha's apartment. Tasha then gave me a big smile and said, \"See, I told you she'd calm down.\" \n\nHoly shit, Brittney actually did what I told her. But I can't get too excited yet. I have to go see if she did all the other stuff I told her to do. I walk over to Tasha and put my hands on her chin and jaw. I lean in and give her a great big kiss, and she wraps her arms around me affectionately in return. My hands wandered down her body and cupped her massive breasts. As I rubbed the fabric of her bra covering her amazing tits, I said, \"Y'know, I think my time would be better spent here with you than with Brittney.\"\n\nTasha sighed, \"Yeah, but you know how she gets when she doesn't get her way.\"\n\nI kept massaging her gargantuan tits, \"I think everything is going to be ok now.\" God I hope so. Please oh please let this work. I gave Tasha another big kiss and then said, \"I'm going to talk to Brittney now and let her know, ok?\"\n\nTasha looked down at my hands, still rubbing her gigantic bosoms, \"I'd really like that.\"\n\n\"I'll see you tomorrow after work.\" And then I gave her another kiss. And then another. Ok one more. No, maybe a couple more. Five minutes later and I'm still trying to pull myself away from her body, but I finally get enough will power to push her away and walk out the door.\n\nI stood in the hallway for a moment, wondering whether to deal with Brittney right this second or go home and sleep on it so that I could come up with a real plan. Revenge is a dish best served cold, isn't that what they say? Don't get stuck in the heat of the moment and instead bide your time, plan your move, think about what you're going to do next.\n\nThing is, thinking has never been my strong point. Which of course is why I get into so much trouble and my life is little more than a pathetic, crappy existence. But it's also got me this far. To me, get your revenge when you can as you can. Revenge is a dish best served served. Ooooh, I've got to remember to write that down. I don't think of too many pithy things to say, and that's as close as I'm ever going to get.\n\nPoint is, even though I should probably go home and plan my next move, I just want to get this over with now and get my life back as soon as fucking possible. So I make my way upstairs to Brittney's apartment and knock on her door, and for once I do it with a smile on my face. \n\nShe opens the door and gives me a look of disgust, \"What the fuck are you doing here? Did she finally have the sense to spit out whatever cum you shot into her mouth and kick your sorry ass out the door?\"\n\n\"Nice to see you too.\" I don't know why I thought she would be less of a bitch now, but clearly that didn't happen. Shit, maybe this was all too good to be true.\n\n\"Here's your crappy phone,\" she says as she places the phone in my hand. \"I decided to get rid of that worthless recording you had. But don't think I won't have you put in jail if you don't do everything I say.\" Hrmm, that's interesting. She did everything I commanded, but she rationalized it all within her skewed, bitchy viewpoint.\n\nWell, I think that needs to change as well. \"Neitzsche-esque.\" Brittney immediately went blank again, so I let myself into her apartment and closed the door. I gently led her across the room by her shoulders and sat her down on her couch. \"Ok, I need you to listen. You do not want to put me in jail anymore. You are happy that Tasha and I are together, and you won't interfere with our relationship in any way. Do you understand?\"\n\n\"Yes,\" she says with the bored, mind-numbing listlessness like someone who has watched too many episodes of Jersey Shore in a row.\n\n\"Good,\" I said to no one in particular, since Brittney was staring off into nothing. She looks so peaceful just standing there after all the mean, vicious shit she had put me through. After what she did, I deserve a little payback, I decided to go one step further. \"And while you're at it, take off your clothes and give me a blowjob.\" Brittney instantly began taking off every stitch of clothing covering her. I wish I'd timed it, because I swear she was standing in front of me completely naked in about twenty seconds.\n\nShe undid my belt and loosened my pants as she fell to her knees in front of me. Then she ravenously pulled my pants down and shoved my limp cock into her mouth. The pressure of her suction immediately made me stiff, and she bobbed her head up and down over my shaft as her lips lubricated my entire cock.\n\nIn a few minutes, she starts really going to town on me, her hair is flailing as she shoves her head up and down as fast as she can over my rod. I even reach down and grab her hair and start thrusting myself into her mouth as hard as I can, thinking about every shitty thing she did, every threat she gave me, every horrible thing she did to Tasha. And I want to take Brittney down to the local bar and force her to have give blowjobs with every willing male in the place until her mouth is filled with the cum of dozens of men. Or maybe I could make her walk down the worst street in the city after midnight naked with a sign that says \"Fuck me\" so that every toothless homeless guy in every garbage-ridden alley can get his unshowered dick laid.\n\nHey, I know I'm being a prick. I confess, I wanted some humiliating, cruel, inhumane revenge. It's not a moment I'm proud of, mind you, but I had just fucking had it with this terrible bitch and I... y'know, this isn't right. I can't do this. Jesus, what's wrong with me? There was a time I would have reveled in this moment to get some fucking revenge, but now, I'm just not that into it.\n\nI slow down, and Brittney looks up at me confused, like she wants me to keep banging her skull. \"Swallow it all,\" is all I say to her, and she goes back to her business, which in this case means wrapping her mouth around my cock and sucking as hard as she can. It takes less than a minute, but soon I feel my cock explode with jism, and Brittney obediently keeps as much of her mouth over me and swallows every last little bit. She kept moving her mouth up and down my shaft a few more times slowly, just to make sure she swallowed as much as she could.\n\nBut there's something wrong. I mean, it feels nice, sure, who doesn't enjoy a naked woman sucking on your cock, y'know? But it just wasn't... it wasn't who I wanted, that's the problem. \n\nSo what do I do now? See, this is why I should've waited until tomorrow so that I could devise a plan. Now I'm just sitting here with a spent dick and a naked hypnotized woman and no good ideas. Wait! I've got it. I can get...\n\n\"Huh? Why am I on the floor naked?\" Brittney blinks her eyes and looks at me with a fury that I hadn't seen since... well, honestly since ten minutes ago. But what is she doing awake? Oh shit, I instinctively snapped my fingers when I had my next idea, and that must have brought her out of her hypnosis.\n\nQuickly, I say \"Neitzsche-esque!\" and Brittney immediately regains that blank look of staring off at nothing in particular. Anyway I've got a fantastic idea. I look into Brittney's vacant eyes and give her my next set of instructions. \"You are hopelessly attracted to short, balding guys who are a little overweight. And you love bondage. You love being tied up, whipped, bit, and everything else. You love it when a guy wants to do that to you and you are willing to do anything he wants. Do you understand?\"\n\n\"Yes.\" I may not be heartless enough to have her fuck every stranger I can find, but I sure as shit can dump Brittney off on Dave and let him do whatever sick, twisted thing he wants to her. There's something poetic about that I think. I mean, if you consider poetry to include sick, perverted bondage.\n\nSuddenly Brittney says, \"Huh? What am I doing on the floor?\" How the hell did she wake up again? It must've been when I slapped my hand against the armrest on the chair. Damn it, I need to be more careful.\n\n\"Neitzshe-esque!\" I say, and she devolves into her blank stupor again. Just make sure she gets her instructions. \"Dave is going to come see you tomorrow, and you are going to be hopelessly attracted to him. You will beg him to tie you up, handcuff you, whip you, put nipple clamps on you, and anything else he wants to do. You want him to be rough and painful. You like it when he's perverted and kinky. He is the sexiest man you know. Got it?\"\n\n\"Yes.\" Oh this is fucking perfect. Dave can do whatever his sick, perverted mind can think of on Brittney, and she'll love it and beg for more. This is even better than I'd...",
        "\"Huh? Why am I on the floor?\" Brittney says, \"and why do I have the taste of cum in my mouth?\" Shit, what just happened? I didn't snap or anything. Did I clap my hands? Did I make some other noise that was enough to bring her out? Maybe I... doesn't matter. She's awake and she doesn't look happy.\n\n\"Neitzsche-esque!\" And again that one word relaxes her face and body and the empty look in her eyes returned. Shit, I have no idea what I'm doing or how many times I can do this before it doesn't work anymore. Or I give her brain damage so badly she'll start listening to Josh Groban and enjoy it. I need to just wrap this up.\n\n\"Ok. I'm going to leave now. Five seconds after I leave, you are going to put your clothes back on and wake up. You will not remember this conversation or that I was even here just now. Then you are going to go to work tomorrow and do all your normal routines. And when Dave knocks on your door tomorrow after work, you will beg him to handcuff you and let him do whatever he wants to do.\" And with that, I get up off the couch feeling better than I have for many, many days. \n\nI am half walking and half dancing across her apartment as I take several deep breaths that feel like freedom filling my lungs, or at least what I imagine freedom feels like. As if freedom could come in some vaporized aerosol that one could inhale, maybe in a variety of flavors. Liberty Lemon. Independence Fruit. Gimme Liberty or Gimme Berry. I am so high on life right now that not only am I coming up with ridiculously stupid ideas for a nonsense product, I can actually use a phrase like \"high on life\" and not puke on myself in disgust. I finally know that tomorrow is actually going to be a better day that I am actually looking forward to living, which to me means a day that involves my putting my stiff cock into Tasha's gorgeous body. Who knew I could be such a hopeless romantic, right? I open the front door, snap my fingers, and then close the door behind me."
    ],
    "authorname": "bobrobertson",
    "tags": [
        "breasts",
        "tits",
        "lingerie",
        "bondage",
        "fetish",
        "bra",
        "boob",
        "hypnotism"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-bra-salesman-ch-10"
}