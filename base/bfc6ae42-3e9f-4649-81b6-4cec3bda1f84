{
    "title": "A New Way of Seeing Things Pt. 03 Ch. 01",
    "pages": [
        "For those who have stumbled across this story for the first time, please be aware that this chapter may or may not have much or anything to do with the selected category. Many of the earlier chapters do fit more neatly into the exhibitionist area; please be sure to go back and start from chapter 1 if that is where your tastes lie.\n\nNow, standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\nAlso, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\nMuch to the Slut's disappointment, it was not guilt or inhibition but time and opportunity that put the damper on Gwen's sexuality over the next couple of months. Her sister-in-law had only been able to come over and ride once in that time as she and Adam had been busy preparing for and then traveling on their annual trip to the Caribbean. Natalie had been insistent the Nelsons join them, but the ever-increasing demands of the business put a vacation out of the question for this for now and Gwen had eventually promised that she and Tim would seriously consider going along with them next year,. \n\nTo no one's surprise, Cricket was a regular visitor, but she was again studying for the CPA exam Gwen had convinced her to take after she had put it aside during her divorce, and spent her Saturdays holed up in her tiny apartment. She left her books on Sundays to come ride, and Tim had contrived excuses to be somewhere else a couple of times during her visits in the hopes of hearing later what had happened in his absence. \n\nEven the weather had conspired against her, Gwen's rare opportunities to get out and perhaps give someone an \"accidental\" peek at the mall or grocery store curtailed by the need to dress warmly and therefore, conservatively. Only the sex with Tim remained a glorious constant, and the couple were more active in the bedroom than they had ever been. \n\n\"Do you think Cricket's pretty?\" Gwen asked as the couple climbed the hillock to the hot tub that cool Sunday evening. The young woman had shared the spa with them on several of her visits, all parties modestly dressed so as not to make the others uncomfortable. With her absence, the couple happily ditched the bathing suits. \n\nTim chose his words carefully, knowing it would be counterproductive to lie. \"She looks like you, so in that way, yeah, I think she's pretty. Why?\"\n\n\"I see you looking at her when we all come up here.\"\n\nHe shrugged helplessly and held the gate open. He had tried to make it seem like he was just being polite by letting Cricket climb the hill ahead of him so he could check out that cute little ass work under her one-piece. And her suit did cling to all the right places when wet... \"I'm a guy. We look. We can't help it. I'm also a married guy, so I don't do anything more than look. You know that, right?\"\n\nTwo bodies eased themselves into the steaming water. My mother has that much right about men, Gwen admitted to herself. Every man looks. \n\n\"Lookin' helps my imagination when I'm listenin' to your stories.\" Tim paused. \"You can look at my friends, if you want. Don't women ever look at guys?\" \n\nIt was Gwen's turn to weigh her words. \"We do, we're just more discrete about it. And as for your friends, I would rather not look at Charlie, thank you very much. He's not exactly in peak physical shape. Besides, if he ever caught me he'd probably think I was checking him out and decide he could do the same to me without at least pretending he's not.\" Definitely not Charlie, but there were others who I wouldn't mind watching take off their clothes, the Slut offered.\n\nTim chuckled but said nothing. Charlie had been checking her out for years; he mentally undressed every woman. But to him, Gwen was the unattainable trophy, the one who never showed anything. His friend still thought she lived her life fully dressed at all times, even if he did have to admit she had begun to occasionally flash glimpses of her carefully-hidden warm and caring personality. Tim had not let it slip yet that she had begun to frequently show much more than a smile, and wondered if Charlie would even believe him if he did. \n\nIt was quiet save for the sounds of the darkened forest, Tim and Gwen leaning back against the wall of the tub, savoring a last few moments of peace before bed and the upcoming work week. \n\n\"Does he have a big one?\"\n\nHe opened his eyes to see her looking back at him. \"Huh?\"\n\n\"Does Charlie...is he, uhh, well-endowed down there?\" Gwen motioned with her eyes below the surface to Tim's midsection.\n\n\"Oh\u2014uhh, can't say. I don't think I've seen him naked since the locker room in high school, and he sure as hell wasn't hard then, so I don't know how big he is. To hear him tell it though, he's huge.\" Tim smiled. \"Why? Looking for something bigger?\"\n\n\"I'm not looking for anything\u2014or anyone,\" she quickly countered, the Lady certain the rude question had offended her husband. \"It's just that I haven't seen that many, and it seems like there's quite a variety.\n\n\"Yeah, they do come in a lot of shapes, sizes and colors, not that I'm lookin' or anything. It's okay if you do, though,\" he added. \"If I can go around imagining Cricket nekkid, no reason you can't do the same to Charlie.\"\n\n\"Thank you very much, no,\" Gwen retorted, moving next to her husband and tucking herself under his arm. \"He's someone I have to believe looks better in his clothes than out of them.\" Some of our employees, on the other hand...the Lady ominously warned of even the thought as grounds for a workplace harassment lawsuit. \n\nThere was silence again. After a while, Gwen spoke in a low voice, barely audible above the hum of the filter. \"Have you ever seen an uncircumcised one?\" \n\nTim laughed. \"You don't look at other naked guys too much or else you get a reputation. But yeah, I've seen one or two. Not real common when I was growing up, but I guess more and more parents are letting their sons keep the natural look.\" \n\n\"Jason's uncircumcised, you know.\"\n\nTim smiled. \"Ali told you too, huh?\"\n\nGwen looked up at her husband. \"She told you? When?\"\n\nHe shrugged. \"Back when they were first dating. She found out he was...uhh, that way, and called me to ask about the proper care and handling of the uncircumcised penis.\"\n\n\"She admitted to her own father that she had become that\u2014familiar\u2014with a boy? What did she even ask you about? You're circumcised-you don't have any experience with\u2014that, do you? What in the world did you tell her?\"\n\nI let her know I didn't have any experience with foreskins, either. But since I've got the stripped-down model, I think I told her Jason's was more or less the same thing, just still in the natural wrapper. You pull it back when want to get at what's underneath, if it's not already out of the way, and that I was sure Jason would be happy to explain the finer points. I think I was able to get her going in the right direction and not screw her up too bad. He did marry her, after all.\"\n\n\"I'm really sorry you got put in that situation. You must have been so embarrassed, your own daughter ask you about having sex before she was married! Alison should have been able to talk to me. She must think I'm a terrible mother.\"\n\nTim hugged her to him. \"I kinda knew the girls weren't waiting for marriage, so I just wanted to make sure they were safe and informed, at least as much as they'd listen to me. And as for you...you were an incredible mother, and continue to be an incredible mother. I can still remember how you would become mama bear when one of the horse show moms would try and rattle the girls before they rode. You were so good about protecting them in everything they did, bringing them up right. So you weren't comfortable talking about sex back then\u2014so what? You're getting better about it now, and I think the girls know that\u2014I mean, Ali told you about Jason, right?\"\n\n\"No,\" she mumbled, looking down. \"Not exactly. I accidentally saw a picture of his...of him on her tablet.\"\n\n\"Oh...does she know you saw it?\"\n\n\"Yes, she saw me looking and told me sometimes he takes pictures like that and sends them to her when he's traveling.\" \n\nTim doubted the flow of pictures was only one way, but put the thought aside \"Caught you looking huh? There's one way to add to you collection. She was okay with you looking?\" \n\n\"I didn't mean to! It was just\u2014there. And yes, she was a little embarrassed, but she seemed alright with me seeing it.\"\n\n\"See? She was fine, you were fine. No big deal.\"\n\n'Course, some of the things I saw and heard when they were younger would probably have been a very big deal to you back then, Tim mused. KD's pregnancy scare had been the most nerve-wracking\u2014the potential father would not have been his first or even fifteenth choice for a son-in-law-but there had been other heart-to-hearts regarding sexual matters with both of his daughters as well. A faint smile crossed his lips as he remembered the morning he had found a recently-used condom on the pool deck. He had quietly confronted Alison, thanking her for using protection but asking that her friends pick up after themselves. No man likes to pick up another man's used rubber, he reminded her, especially after the rubber had been in the man's daughter. Alison had blushed furiously and mumbled her apologies, begging him not to tell Mom. \"If she finds it first next time, I'll be hiding in the shop while you tell her,\" he had replied with a half-smile. \n\nHe waited until it was quiet again. \"So? Does he have a big one?\"\n\nIt was Gwen who was caught off guard this time. \"Huh? Who?\"\n\n\"Jason. Is it worthy of my daughter? Think it'll be the right tool for the job when it comes time to make us a grandkid?\"\n\n\"I\u2014I'm sure it's perfectly fine for that. I don't have much to compare it to,\" she stammered, remembering how big and capable she had thought it when he had been preparing to put it in her daughter. But there would be no grandchildren using that entrance! \n\n\"Well, how big compared to me?\"\n\n\"I don't know, maybe a little shorter than yours\u2014it's hard to tell with the extra skin.\" That's what men wanted to hear, right\u2014that theirs was bigger?\n\n\"Thick or thin?\"\n\n\"It was hard to tell from the picture,\" she lied. Definitely thicker, the Slut opined. The Lady was aghast that she could so casually compare her husband's and son-in-law's penises like cucumbers for pickling.\n\n\"As long as it comes when called...\" Tim's hands began to roam over his wife's body, stopping to gently squeeze a breast. \"Ready for bed?\" Gwen nodded and they climbed from the water. He led the way down the hill to their room, laid her down, and resumed their caresses.\n\n\"Tim?\"\n\nHe didn't bother to remove his lips from where they were nuzzling her neck. \"Hmm?\" \n\n\"Did you ever...from behind...before you met me?\" \n\n\"From behind? A couple times, yeah, I guess. Why? Am I doing it wrong with you?\"\n\nGwen laughed nervously. \"No, not that way, the other way...from behind.\"\n\nTim pulled back from her neck, a little confused. \"You mean-\" he patted her lightly on her exposed ass cheek\u2014\"back here?\"\n\nGwen could not look him in the eye. \"Yes, there.\" \n\n\"Well, uh no, never did that...why?\" \n\n\"Oh, you know... Natalie lets Adam do it that way some times, and Ali and Jason do it that way, too\u2014\"\n\n\"Wait. Alison and Jason have anal sex? How do you know that? I can see Natalie telling you about her and your brother, but Ali...sounds like she's been talking to you, after all, unless you saw that on her tablet, too.\" Tim smiled hoping to make the joke obvious, but Gwen found it too close for comfort. No, not her tablet. \n\n\"I just know, and I thought that since everyone else does it, that maybe if we're not doing it we should be, or that you want to? I'm sorry, I'm not making any sense.\" \n\nTim's cock jumped at the idea of Gwen even mentioning that most forbidden zone, and he fought to remain calm and sound reasonable. \"No, you're fine, and not everybody does it, at least from what I've heard. The guys I know make a big deal of it when they do get it, and I think they're making it up half the time. You know you and me, we can have sex however we want, right? Whatever you and me decide we do or don't do is nobody else's business.\" Tim spoke slowly, carefully. \"Are you asking because you think we should be doing, or because you want to?\"\n\n\"I don't know... I want to give you something you want for once rather than have it be all about me. I'm willing to try it, if you think you might like it.\" \n\n\"It hasn't been all about you. Trust me, I feel like I died and went to sex heaven. I don't want to make you do something you don't want to do...aren't you afraid it might hurt?\"\n\n\"I was, and I still am a little bit, but Natalie gave me some things to practice with and it's really not that bad, especially after I relax a little.\"\n\nGood ole' Natalie to the rescue, Tim thought. \"Practicing? With what?\"\n\nGwen rolled off the bed and to her feet. \"I'll show you. Be right back.\" She returned in a moment, laying the spreaders and lube on the sheets. \"These. I put one in back there and then leave it in for a while.\"\n\n\"Really? And it doesn't hurt?\" \n\n\"Not really, no. I get used to it pretty quickly.\" Gwen looked down at his straining erection\u2014the interruption had not seemed to affect it at all. \"So, did you want to try? Your umm, cock seems like it wants to.\"\n\nTim's length, already hard just from the prospect of going where no man had gone before, twitched in response at his wife's use of that rarely uttered word. \"Uh, sure, if you want to, but I'm really not sure how to start...\"\n\nPractical Gwen had already thought this through. \"Off the bed,\" she ordered, removing the Magic Wand from her nightstand and dropping next to the pillows she had piled on the spot Tim had just vacated. The shorter, fatter dildo was also placed within reach. She lay stomach-down on the pillows, positioning the vibrator underneath the junction of her spread legs and reaching back with the rubber cudgel, putting the bulbous tip to her already-wet opening. \n\nTim watched the show from the end of the bed, tentatively stroking his length, fascinated by the sight of Gwen's upturned ass and the dildo beginning to split her pussy lips. \"Damn, that's a hell of a view,\" he muttered. \"I could just stand here and watch you do that.\" \n\n\"You can if you'd like,\" Gwen replied, her face on the bedspread as she filled herself with the faux penis, sliding it in until the testicles rested against her. \"I'll understand.\"\n\n\"No, no,\" Tim said hurriedly, putting a knee on the bed. \"But I do want to watch you do that some other time. So, what do I do?\"\n\nShe imagined him staring lustfully at her exposed rosebud, presented for his pleasure. \"Take the bottle and squirt a little on my, uh, hole, and spread it around.\" The bed sagged as he shuffled between her legs and flipped the cap open. Her puckered ring contracted at the first touch of the cool liquid, and Tim began to delicately spread it over and around the muscle, delicately exploring the texture of the wrinkled ring. \"Try and get some if it inside me.\" Tim was gentle as he tentatively pushed against the ring, letting it yield to his push. He marveled at just how tight it was and doubting whether the somewhat-larger thing between his legs would fit, although it was very eager to try. \n\nGwen involuntarily contracted around his finger, feeling how much thicker and rougher it was than her own or Natalie's. It continued to fill her, slowly pushing deeper, until knuckles brushed the curve of her split. The invader withdrew a little and slid forward again, twisting and turning to coat her walls with the slippery liquid. \n\n\"You, uh, you think I should use some more?\"\n\nGwen's head stayed on the mattress, her eyes closed. \"Maybe if you put some of it on yourself, we can try that next, if you want.\" She heard the bottle top snap open again and steeled herself against what was about to happen, a fist gripping the blanket while the other hand snaked under and between her legs, ready to flip the switch on the Magic Wand. \"Is the angle alright?\"\n\nTim moved, straddling her thighs, lining himself up. \"I think so.\" \n\n\"Just go easy, okay? Stop if I say stop?\" Gwen asked with as much calm as she could muster, unaware she was repeating her daughter's plea from the video. \n\n\"We don't have to if you don't want,\" Tim repeated, his length already lying in her crevice, anxious for the go ahead. \"You can say no any time.\" \n\n\"I want to try, at least...\"\n\n\"Okay...\"\n\nGwen thumbed the vibrator's switch, feeling the first jolt against her clitoris as the tip of her husband's cock touched and tested her still-tight muscle. It hesitated there, engaged in a last-minute debate with its owner, and then compressed as Tim worked out how much pressure needed to be applied without being too much. She felt the now-familiar stretching as the crown of his head slid past the taut muscle and pushed her ring open further than it had ever been opened before, then stopped.\n\n\"Okay?\"\n\nGwen nodded, her eyes still closed, willing herself not to show the nervous anticipation or discomfort she felt, concentrating on the tingling of her clit and the fullness in her other opening. \"Okay.\" The head again pushed forward, the shaft behind holding her open, past where the spreader would have begun to narrow and allow her ring to snap shut and capture its neck. Now, there was nowhere for her muscle to relax, just more of an impossibly thick penis to grip. Her body fought to expel the invader but the Slut welcomed it, reveling in this incredibly perverted act of submission; she had given up her most forbidden opening. \n\nAnd then she felt her husband's hips lightly press against her rear; he seemed unwilling to burrow any deeper. \"Do you want me to take it out?\" he rumbled, anxiously looking for some sort of reaction, fearful of the hurt he might be causing. \n\nGwen's hips twitched at the vibrations tormenting her button, involuntarily pushing back to seat his length just a little bit deeper. \"No, it's alright,\" she groaned softly. \"You can...fuck me now...if you want. Just go slow, right?\"\n\nTim's answer was to withdraw himself a bit, then grasp her hipbones with strong fingers and push forward again with just a little more force than the first time. \"Jesus Gwen, I thought your pussy was tight, but this is incredible. Are you sure you're alright?\"\n\n\"I'm fine. It's actually not too bad once you get used to it.\" That was the truth; she enjoyed the feeling of him sliding against the length buried in her vagina, just a thin layer of flesh separating the two lovers. She wondered what it would be like to be filled completely, to have her face in another man's lap instead of the blankets. Three men, taking her, using her, each trying to outdo the other...\n\nTim established a slow and steady rhythm, being careful not to become too energetic, the tightness of her ass and the thought of what he was being allowed\u2014invited!-to do bringing him close to orgasm in a short time. Gwen too was beginning her rise to climax.\n\nHe stopped after one thrust, letting his urge to let it fly subside a bit. \"Uhh, should I pull out before I shoot?\" \n\nGwen thought for a second\u2014Alison's video had ended well before the final act and she had no idea if there was any reason why he shouldn't finish where he was. \"No, you can stay in me if you want. Just don't get carried away, okay?\"\n\nTim smiled. \"Let me give it a try.\" \n\nHe managed to stay in control despite his rapidly growing need to come, giving a few more pushes before emptying himself inside her. He started to pull away with the last pulse. \"Stay there,\" Gwen hissed, and her own orgasm overtook her a moment later. Tim could feel her contracting around his still rock-hard dick, shuddering and bucking against the man pinning her to the bed in a most unnatural fashion. He waited until she seemed spent before withdrawing. ",
        "Gwen wore nothing but a t-shirt and muck boots as she went out to put the horses to bed, enjoying the feel of the slickness leaking out and down between her legs, smiling and shaking her head at how it had gotten there in the first place. She joined her husband in the shower after assuring all was well in the barn. \n\n***\n\nThe plumbers and apprentices assumed Mrs. Nelson's stiff and deliberate walk could be attributed to a little too much riding over the weekend. They could never have guessed that riding had indeed been the cause, but she had not been the rider but the mount. Despite Tim's efforts to be gentle the night before, her bottom felt slightly abused in a way the spreaders had never given a hint of. I'll have to ask Natalie if there's a way to avoid that the next time, she thought as she sat down at her desk. Despite the aftereffects, it hadn't been that bad...maybe Tim would want her that way again, might not even bother to ask, just bend her over something and take whatever he wanted. \n\nThe phone interrupted her musings, and she picked up on the second ring. \"Nelson Plumbing, may I help you?\"\n\n\"Uh, yes, may I speak with Gwen please?\"\n\n\"Speaking.\"\n\n\"Hi Gwen, this is Yvette McCallum. We had asked for a quote on a bathroom remodel before Christmas? I think we're ready to start.\" \n\nGwen began to shuffle through paperwork. \"McCallum...let me find the paperwork. Do you know which of our plumbers gave you the quote?\"\n\n\"I believe it was your husband Tim? We have the house up on the lake? We met at the beach there last fall?\" \n\nAn image of the woman on the other end of the line, naked and holding her husband's penis, flashed into her head. \"Oh, yes Mrs. McCallum, of course, how are you?\"\n\nShe laughed. \"Please, call me Yvette, and my husband is Bob.\"\n\n\"Yes, yes of course Yvette, I remember you both.\" Another image, of Bob squatting in front of her, flaunting his semi-tumescent length, came to mind. \"So, you're looking to schedule some work?\" \n\n\"We are. Our general contractors are going to begin the rip out of the master bathroom next week, and we were hoping Tim could come by and do the plumbing once they get things exposed?\" \n\n\"Of course, we can have somebody out there to do the tear out next Thursday, if that will be alright, and then when your contractors get things roughed in, they can call us and we'll send somebody out to do the installs.\"\n\n\"That would be great! And Tim can do the work?\"\n\n\"Well, we have someone we normally send out to do the first part, but I can see if Tim will be available to do both the tear out and install.\" Her husband would make the most sense for the job for the install anyways, Gwen had to admit. He had not yet filled the apprentice position vacated when Andrew got his journeyman's license, so to send one plumber out all that way on a relatively small job was the probably the most efficient use of manpower. It would also lessen the chance of any one of the employees finding out what their bosses had been doing that weekend last fall.\n\nThe voice on the other end hesitated. \"Thank you...I know this is going to make me sound a little paranoid, but we\u2014well, I\u2014was hoping we could be discrete about the circumstances of how we met exactly. We try to maintain a certain level of...privacy...in our personal life. And since Tim was there and already knows...I hope you understand.\"\n\n\"Oh yes, I understand, certainly,\" Gwen stammered. \"Nobody else knows\u2014we enjoy our privacy, too!\"\n\nYvette laughed. \"Wonderful. Thank you for understanding. So we'll be seeing Tim next Thursday morning?\" \n\n\"Yes, first thing, absolutely,\" a flustered Gwen gushed. \n\n\"Great! Thanks Gwen, I hope to see you at the lake soon!\" \n\n\"Thank you, that would be nice! Take care!\" \n\nGwen breathed a small sigh of relief as she hung up, glad that Yvette McCallum was apparently as concerned about keeping their little secret as she was. Of course, the Lady reminded her, they may have requested Tim so they would not have to be so discrete in their own home? What if they chose to walk around in the nude? Would they expect Tim strip down as well? Despite her new concern, she giggled at the Slut's suggestion of her husband in nothing but work boots and a tool belt. Was naked plumbing even legal in the state of Georgia? It was the master bathroom; the master bedroom would certainly be nearby. What if they did something more, like that day at the beach, right in front of her husband? He said he doesn't touch, you can trust him not to, the Slut counseled, even if he does get an eyeful. Maybe he'll have his own story to tell you. \n\nShe shifted to reach for her keyboard and her bottom reminded her of their activities the night before. Definitely not a spot for muscle rub, she thought ruefully. The hot tub works on sore muscles, and that's a muscle, maybe a soak might help? She made a quick stop at the house for a towel before heading up the hill to find out. \n\nThe hot water stung her rosebud as she sat, the crinkled ring clenching tight against the sudden heat. Gwen drew a sharp breath at her discomfort but continued to gingerly lower herself into the tub. Her body soon adjusted to the sudden change of temperature and she closed her eyes, enjoying the sun on her face. Between the warmer temperatures and the radiant heating system, the pool would be open for the season very soon, she thought. Skinny-dipping would be the rule this year\u2014no suits unless absolutely required! The Slut debated whether they would be required around anybody; the Lady insisted on everyone in the interest of privacy. Gwen pondered the Slut's question and wondered who else might be inclined to join their hosts and go au naturel. Her daughters had admitted they had not felt the need for bathing suits when their parents were not around; maybe this year they would feel the same in her presence\". The thought of having that level of trust pleased her, and she wondered if it would be proper for them to extend it to their father.\n\nGwen remembered how she had caught KD coming in from the pool that night last summer, the banana-shaped dildo unsuccessfully concealed in a small towel. A finger strayed to her clitoris at the memory of how her daughter had unwittingly helped her mother discover the pleasures of the pool jet, and how powerful the orgasm it had created had been that first muggy night. The hot tub had jets...she and Tim normally didn't use them, appreciating the quiet of their woodland setting over the whir of the pump and the slap and splash of turbulent water. Gwen looked about and found a nozzle at the right height for massaging the lower back...also the right height for something else if you turned to face it. She kneeled on the low seat before it, spreading her legs slightly to steady herself, and reached over to turn the jet on.\n\nThe watery blast that assaulted her sex was much stronger than what she had remembered of the pool jet, and she hurriedly angled her hips to lessen the onslaught while allowing the flow to continue on between her thighs and over her rosebud, soothing and tickling. With a contented sigh, Gwen lay her forearms and head on the concrete and let the water perform its magic. \n\nShe stayed like this for some time, letting her lower body dictate the force of the jet against her sex, moving close to build to a sensory overload before backing up and off a bit to tease herself. Her climax began its climb, the movement of her hips creating plateaus to be savored before different sensations were applied. Gwen was in no hurry; the water was wonderfully warm, the swish of warm water over her rear soothing, and her clitoris loved being subjected to the fast-moving current then withdrawn when it could take no more. Her orgasm was near, and she didn't have to do anything but soak in the warm spring sun...\n\nHer head snapped up, alert for danger, at the muffled thud of the truck door down in the yard. Gwen looked about wildly, wondering if even now someone could see onto the pool deck and the naked body half-hanging out of the spa. Her clothes were nearby, thankfully left where she might collect them without being seen from below\u2014as long as whoever was driving the truck hadn't started to climb the hill looking for her. She scrambled from the hot water and ran to her towel in a bent-over crouch. Only one door, she thought as she wrapped herself. Probably not one of the plumbing trucks unless it was Tim, or Andrew, they were solo. Maybe it was one of Tim's friends, come looking for something...\n\nThe idea of parading down the hill dressed in nothing but a smile to greet her husband had its own perverse merits, and her interrupted orgasm made the prospect of him finishing what she had started very appealing. She cautiously crept towards the fence, towel wrapped about her, hoping to peek down the hill and catch a glimpse of the visitor. \n\nGwen ducked and recoiled at the sight of Andrew coming out of the shop's office door. Most likely looking for me, she thought, and quickly ran through her options. Dress quickly was the obvious first step. Wait here until he left, or go see what he wants. Being caught up here hiding if he decided to check might prove difficult to explain...better to go down and see what he needs. \n\nGwen dressed quickly to the familiar sound of copper pipe being pulled out of the truck and tossed on the recycle pile on the other side of the shop. She hurried down the hill, the vehicle hiding her approach from the young plumber. \n\nAndrew looked up on his way back from the scrap heap just in time to avoid running into her as she rounded the truck. \"Shit! I mean\u2014sorry, Mrs. Nelson, but I didn't know you were there!\" \n\n\"Sorry Andrew,\" she said with a smile. \"I should have warned you.\"\n\nThe young man's eyes quickly traveled over her body. Her denim shirt was wet in patches, not like sweat, but like she had not dried off completely after a shower. Maybe that's where she had been when he pulled in. His eyes locked in on a spot above her left breast as he conjured an image of her naked, under the hot spray...\n\nGwen caught his stare, looked at the patch and smiled. \"I heard you come in. I was up in the spa. \"I'm a little sore,\" she explained. \"It happens when you get old. The hot tub helps.\" \n\nThe explanation didn't help stifle his imagination, and his cock twitched at the thought that maybe she hadn't been wearing a suit up there, like that night with Tim. She wasn't old then; to the young plumber's way of thinking, old ladies did not give blowjobs. \"Oh, uhh, I guess it would. I never tried that\u2014they always made us get in the cold tubs to ice down after baseball practice in high school.\"\n\n\"That doesn't sound very pleasant. You should try it sometime\u2014you boys know you're free to use the pool and tub any time.\" \n\n\"Yes ma'am, I know, thank you,\" he replied nervously, turning back to the remaining pipe scrap he had piled on the back of the truck at the last job, anxious to hide what he could feel growing in his pants. \"I'll remember that the next time I'm sore. But right now I've got to empty the truck and get a couple of things out of inventory and head out again.\"\n\n\"Of course. What do you need? I can go pull them for you.\" \n\nShe returned with the items he had requested as the last pipes were thrown on the pile. He hurriedly mumbled his goodbyes and was on his way again, Gwen waving as he went down the driveway. She headed to the house when the truck was out of sight and retrieved her rabbit, returning to the office and disrobing while she checked messages. Gwen leaned back in her chair with legs spread wide and feet set firmly on her desk, imagining the young plumber walking in on her and taking in the show. She came with a Cricket-like squeak. \n\nNobody was there to watch her shudder and recover, but her fantasy audience was close by. Andrew had stopped the truck a short distance down the road and snuck up through the woods to a secluded spot in the hope that Mrs. Nelson might return to the spa and confirm his suspicion about her choice of swimwear. He was disappointed she had not appeared, but his brain spent the rest of the day suggesting lurid scenarios where she had. Mrs. Nelson was anxious to satisfy his every desire as he jerked off that night."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "anal",
        "husband",
        "wife",
        "hot tub",
        "masturbation"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-03-ch-01"
}