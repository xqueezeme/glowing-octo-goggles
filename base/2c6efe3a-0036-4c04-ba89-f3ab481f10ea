{
    "title": "Truck Got Stuck",
    "pages": [
        "This is my first attempt at a story, and also my submission for the \" \" challenge. Perhaps in a bit of a deviation from the norm, the ballad on which this is based isn't exactly what one would call \"romantic,\" \"sensual,\" or... y'know... \"entirely sane.\" But I hope what I pulled out of this catchy little novelty C&amp;W single will at least be a little humorous.\n\nA special thanks to my delightful and talented beta reader, without whom I could never have gotten this whipped into proper form.\n\n***\n\nWell, the Chev' got stuck and the Ford got stuck,<br>Got the Chev' unstuck when the Dodge showed up,<br>But the Dodge got stuck in the tractor rut, <br>Which eventually pulled out the Ford...<br>-Corb Lund\n\nDo you ever hear a song on the radio and wonder how, exactly, a songwriter who, to the best of your knowledge, has no connection to you whatsoever manages to write a song that was lifted, with frightening fidelity, from your own past?\n\nYeah, happens every day, right?\n\nSo, I was headed to the local home-improvement warehouse maybe two, three days ago to pick up some lumber and hardware, maybe a little paint, and possibly look at some new kitchen cabinets and a new mailbox. And pick up some bug spray.\n\nOh, and a can of, uh, PVC cement.\n\nOkay, actually, my wife and I had been cooped up in the house together for a week and I was just desperate to get.. the... fuck... out. \n\nFor a couple of hours, anyway.\n\nSo, I'm driving down the road and this great little classic country lick starts playing. I'm a sucker for a great little classic country lick, so I cranked it up. Turns out it was this goofy little novelty song from some Canadian kid, about getting trucks stuck in the mud and the hilarity that ensues.\n\nI almost had to pull over to the side of the road. I was frantic. \"How the hell did....?\" It was picture perfect. I mean, the names were different, but otherwise...\n\nI held my breath as the end of the song got closer. Was the little Canuck bastard going to tell the whole sordid tale?\n\nHe didn't, much to my relief. That was probably for the best. Otherwise, it probably wouldn't be playable on commercial radio.\n\n***\n\nA word of advice: do not ever let anyone know that you own tools and are proficient in their use. As soon as your friends and family find out that you know your way around a table saw, torque wrench, soldering iron, or pipe cutter, you will spend the rest of your natural days helping them rewire the flux capacitors on their Mr. Fusions. \n\nIf you're handy, man, keep that shit to yourself. \n\nI hadn't learned that lesson, so on the Saturday in question, I found myself out in the middle of a south Georgia peanut field, underneath a hastily-constructed pole barn, trying to resurrect an Army-surplus generator that my friend Reg had purchased online from some lunatic prepper.\n\nIt was at times like this when I was so glad that I'd spent my youth helping my old man out in his workshop instead of picking up girls, drinking illicit booze, and holding up drug stores. Who needs to have fun in their youth when they could be learning how to rebuild a lawnmower engine?\n\nReg intended to use the generator to run tools for his attempt to build a cabin on this sad little plot of dirt. With aspirations of becoming a certified-organic farmer, he was planning to build a small cabin down here, raise high-priced produce, and retire young amongst the gnats and mosquitos.\n\nOf course, I knew Reg - the cabin would be abandoned after it was no more than a foundation in a couple years' time, and the only thing that would ever be planted on this land would be a few sad little tomatoes and possibly a bell pepper or two.\n\nBut, in the meantime, I'd use my considerable skill in repairing useless junk to at least give him some light to not work by.\n\nI'd gotten there at about 8:30, about twenty minutes ahead of a rain shower that parked itself overhead and looked as though it was planning to stay for the rest of the day. We stayed under the only-slightly-leaky roof of the pole barn and proceeded to dismantle the gennie.\n\nIt wasn't a bad morning; I wasn't terribly well-versed in diesel engines, but it didn't seem all that complicated. By eleven, I had the motor running pretty well, but the generator was, disappointingly, not generating. We talked and joked around while I tinkered, drinking beer and telling lies. About noon, our buddy Charles showed up, bearing a fresh sixer and his neverending supply of filthy jokes.\n\nI was just thinking that I had figured out the problem and was trying to figure out a way to fix said problem when the day got suddenly much, much worse.\n\nI'd love to say that it was because I'd accidentally shorted two wires together and we'd all been horribly injured in a freak explosion, but it was actually much worse than that.\n\nMandy showed up.\n\nMandy was Reg's sister, and she and I had roughly the same relationship that a mongoose has with a cobra - bitter animosity, tempered with a strong dose of mutual disdain. \n\nI looked up to see her ridiculous little Audi coming up the path leading through the pine trees. She pulled it into the shade at the edge of the clearing and got out, opening an umbrella as she made her way towards the pole barn.\n\nI rolled my eyes and gave a small internal groan before turning my attention back to the part I was trying - unsuccessfully - to remove. \n\n\"Hey, sis,\" said Reg, as she walked up to where he and Charles were standing, watching me fight with the balky piece of equipment. \n\n\"Hey, Reg. Charles.\" She gave each of them a small hug and they hugged her back. Reg, I understood - she was his sister, there's a certain level of familial obligation at play. Charles, I could not understand. I'd given him unequivocal proof that Mandy was a hellspawn brought to Earth solely for the purpose of destroying the last remnants of civilization - and somehow my theory had gained little-to-no traction with him.\n\nOf course, Charles might also have been motivated by the fact that Mandy, despite being a horrid bitch, was also a not-unattractive woman.\n\nOkay, she was pretty.\n\nOkay, okay. She was a stone hottie.\n\nShe looked over to where I knelt behind the olive-drab cowling of the generator. She nodded slightly. \"Shithead,\" she said in greeting.\n\n\"Hell-beast,\" I responded.\n\nWe at least had a firm grasp on where we stood with one another.\n\n\"What are you doing out here?\" Reg asked.\n\n\"Are you planning to, at any point between now and the heat death of the Universe, call our mother?\" She started poking around on the makeshift workbench where I'd been placing pieces of the generator, casually disarranging everything that I'd organized (piled) so carefully (haphazardly).\n\n\"Aw, man, what does she want now?\" Reg's relationship with his parents was... complicated. \n\n\"How the hell would I know? I'm not the parent whisperer. Call Mom so she'll leave me the fuck alone.\" Mandy stepped away from the bench, and found a place to roost on a camp chair leaned up against one of the columns. \n\nWait, do I have that right? Do harpies roost? Perch? Brood?\n\nReggie sighed theatrically. \"I'll call her tonight.\"\n\n\"You better. What the hell is that?\" she asked, pointing at the generator.\n\n\"It's a generator,\" I said, my tone indicating that any 26-year-old recent graduate in psychology should be able to identify on sight a thirty-year-old piece of surplus military power equipment, obviously. \n\n\"What's it for?\"\n\nI slammed the access hatch shut and stood up. \"It's for generating electricity,\" I said snidely. \"You know, some of these things are pretty self-explanatory.\"\n\nShe looked daggers at me. \"I wasn't talking to you, asshole, I was asking my brother.\"\n\nI shrugged and walked over to the bench, taking just a moment to indulge myself with a quick look over my adversary. It was the only good thing I ever got out of our infrequent and unwelcome interactions, and so I allowed my admiration of her form to last for only a few seconds each time. I certainly didn't want to start associating her with any concepts such as \"attraction\" or \"appeal.\"\n\nKeeping those ideas separate was admittedly difficult. She had a cute little nose, big, pretty blue eyes, and a mouth that looked like the sculptor had kissing in mind when he put it all together. In the rare moments when she wasn't actively working towards the corruption of all things good and proper in the world, she could look either fun and innocent or sultry and mysterious. Both looks were not entirely unpleasant to behold. Her pale blonde hair typically framed her face, but today she had it tied up in a ponytail which was, I shuddered to admit, quite fetching.\n\nHer body wasn't at all bad, either - slender waist, with deliciously curvy hips, a great ass, and what even I had to admit were a very impressive pair of boobs - perfectly shaped and just slightly larger than a nice, ripe Georgia peach. She had on a tight pair of jeans and an orange strappy tank top that fit just well enough to be distracting.\n\nAll-in-all, a very nice package for a complete shitshow of a human being.\n\nI finally managed to pull the armature free of the generator and started cleaning it, hoping that would get this thing running so I could get out of here before she started summoning and devouring human souls.\n\nThe other three chatted aimlessly, talking about.... I have no idea. I was furiously realigning a copper core and cleaning the windings and praying for a miracle, or - at the very least - that the family reunion would end.\n\nApparently, God was none-too-pleased with something I'd done recently, and my prayers got sent to voicemail. The rain showed no sign of stopping, the generator was still stubbornly not generating, and Mandy seemed to be making no effort to leave. I toiled on.\n\nAfter another couple of hours, I reached the core of the problem - the generator wasn't \"broken\" so much as it was \"incomplete.\" Before making the sale, the previous owner had robbed the unit of a couple of necessary parts. I called Reg over and gave him the bad news.\n\nA torrent of creative profanity hit my ears, but I really didn't care. There was nothing left for me to do, so I could get the hell out and maybe salvage a little of my day. \n\nAt least the rain had stopped.\n\nI started packing up my tools. \"Aww, leaving so soon?\" cooed Mandy. I flipped her the bird and closed up my toolbox.\n\n\"Fellas, it's been fun,\" I said, waving at Reg and Charles. \"Devil-whore, always a pleasure,\" I said, nodding towards Mandy.\n\nAfter tossing my toolbox in the back, I climbed into the cab of my ancient Chevy pickup, keyed the motor into life, dropped it into first and eased down on the gas.\n\nAnd went.... nowhere.\n\nWhen I'd parked that morning, I'd forgotten about the four days of rain that we'd had earlier in the week. Added to that, a day's worth of soaking rain had turned the Georgia red clay into something resembling a particularly unpleasant soup. I felt the sinking sensation - literally, the sinking sensation - of the rear wheels of my truck digging themselves into Reg's now-saturated field.\n\n\"No,\" I said, easing off the gas. \"No, no, no, no, this is not happening,\" I muttered, realizing I'd failed to put my pickup in four-wheel-drive mode. I hastily reached down and moved the lever on the floor, engaging the two front wheels. I let the clutch out slowly, carefully, and eased down on the gas. For a second, I felt the truck start to move forward, and then traction on the front wheels failed. I felt the nose start to dip. \"No, no, no, no, no!\" I said again. \n\nMy vocabulary had, apparently, been reduced to one word. \n\nI shifted into reverse and gave it a little gas. It rocked back on the springs, but didn't move - but the front wheels did dig themselves a couple inches deeper into the mud, so I guess that was something.\n\nI fell back on a skill handed down to me by my beloved father - I began to swear, fluently. I cursed with a vehemence normally reserved for Marine drill instructors or owners of Yugos. I cursed in English. I cursed in German. I cursed in languages that hadn't been invented yet. It was impressive.\n\nThe truck was not impressed.\n\nI switched off the engine and climbed out. By now, all three of them were watching.\n\nI kicked a rear tire, doing considerably more damage to my foot than to the tire. \"Either of you got a chain?\" I hollered. \n\nReg laughed, nodded. \"Yeah, man, I got you.\" He walked over to his truck and pulled out a short logging chain. He slowly and cautiously backed his old Ford up to the front of my pickup and we hooked his trailer hitch to the tow hook under my front bumper. I got into position and gave him a thumbs-up. \n\nHe crept forward, carefully taking up the slack, then gave it some gas. I eased off the clutch, ready to roll out of the hole, and then watched with growing dismay as Reg's truck spun an avalanche of mud onto my windshield - and it, too, buried its back wheels in the muck.\n\n\"Whoa!\" I shouted out the window, over the roar of the old V8, waving frantically for him to stop. He shifted into reverse, trying to rock himself out, and succeeded only in sinking all the way down the rear end.\n\nWe cut off both engines and stood there, looking - as men do when confronted with a difficult situation - as though we were deep in thought. \n\nWe weren't actually in deep thought; we were mostly just swearing inside our heads because we didn't have the right words in our vocabularies to swear aloud.\n\nCharles and Mandy wandered over. Charles was clearly amused; Mandy looked like, yes, this was exactly what she expected out of the two of us. She opened her mouth to say something, and I just held up one finger.\n\n\"Nope,\" I said. \"Not one fucking word out of you, okay? Just.... no.\"\n\nShe held up her hands, palms out, as if to say, \"I wouldn't dream of it,\" and walked back towards a high patch of relatively-dry dirt.\n\nCharles slapped us both on the back. \"Looks like I gotta do everything, huh? When a Ford and a Chevy can't get it done, I guess you gotta bring in a real truck, huh?\"\n\nCharles was one of those guys who was really proud to own a Dodge, and never once let anyone forget it, as though the very concept of \"truck\" had been invented by the Dodge brothers and all others were mere pretenders to the throne. \n\nCharles jockeyed his Ram into position and snugged up the chain between his truck and Reg's. He cranked up and, crowing gleefully, eased forward, pulling Reg free. They gradually picked up a little speed, heading for higher, dryer ground. Charles, window down and voice triumphant, kept up a running commentary on the overall superiority of Chrysler products named after male sheep - essentially, acting like a true and complete cockhead.\n\nOf course, he was so busy giving free advertising to the company to which he'd just paid $32,000 that he did not notice the deep, old tractor rut which intersected his course a few yards ahead, nor the enormous puddle that he was gleefully dragging Reg's Ford into. Reg and I both saw what was about to happen and started yelling for him to go around, but he couldn't hear us over his own boisterous bellowings... and we suddenly had three pickups buried to the axles in sticky red Georgia mud.\n\nThey climbed out, and I walked over to where they stood. We stared at our trucks and said absolutely nothing.\n\nMale intellect is a truly wonderful thing.\n\n***\n\nFor the next two and a half hours, we tried everything we could think of to get the trucks out of the mud. We jacked up the rear ends, trying to get enough clearance to shovel some less-soupy mud under the tires - the jacks sank into the mud. We shoved scrap wood under the wheels - it either sank itself into the muck, or became whirling projectiles as the wheels flung it out towards the rest of us at terrifying velocities. We called everyone we knew in a ten-mile radius with a four-wheel drive pickup - nobody answered. We wandered the periphery of the field, hoping that Providence had perhaps graced us with a pile of sand.\n\nMandy watched from the sidelines, tossing out mostly-useless ideas, adding a few choice insults in my direction, blaming me for starting the whole sad debacle.\n\nWell, I hated to admit, she wasn't entirely wrong.\n\nFinally, about six o'clock, Charles looked at his watch. \"Shit, man, I gotta be at work in an hour,\" he said. He was a nurse at a local hospital, and frequently worked the swing shift.\n\nWe gathered back under the pole barn and discussed the problem. Mandy's Audi was clear - she'd parked on a small rise and wasn't bogged down at all. But it was only a two-seater. \n\nReg knew a guy not far away who had a tractor we might borrow. I saw what was coming, and my heart sank.\n\n\"Okay,\" I heard Reg say. \"Mandy, let me take Charles into town with your car. I'll come back, stop off at Holtzman's and get his tractor, and bring it back here. We'll pull all three trucks out - Dave, you can head home; Mandy, you follow me back over to Holtzman's in my truck and get your car, and then I'll run Charles back out here in the morning to get his.\"\n\n\"Sure,\" said Charles.\n\n\"Wait,\" said Mandy and I at the same time. \n\n\"Why don't I take Charles to work and go back by... who was it? Holtzman?\" I heard her ask.\n\nReg rolled his eyes. \"Mandy, have you ever met Gus Holtzman? For that matter, have you ever driven a tractor?\"\n\n\"Well, no...\"\n\n\"Then how the fuck do you plan to convince a 90-year-old stranger who doesn't think women shouldn't be allowed to vote, let along drive, to let you borrow his $18,000 farm tractor, and then drive a tractor - that you don't know how to drive - back over here in the dark?\"\n\nI grabbed a notepad and a pen off the workbench and handed it to Reg. \"You can send her with a note explaining our predicament.\" I turned to Mandy. \"And driving a tractor is easy, just push the throttle up, let off the brake and clutch, and turn the wheel. I'm sure you can invoke some dark ritual...\"\n\nReg threw the pad down and whirled on me. \"Wait here with her,\" he growled. He spun on his sister, \"Wait here with him.\" He held out his hand for Mandy's keys. Sighing with hurricane force, she dropped them into his hand. \"And both of you grow the fuck up. I'll be back in an hour.\"\n\nWe watched as they both piled into the tiny roadster and vanished into the trees. \n\nShe pulled out her phone and wandered off towards the trucks. I heard her bitching to someone as I started one more fruitless search for something that would get me out of this situation - or at least provide a painless means of suicide.\n\nAlas, it was not to be. Resigned to my fate, I retreated back to my truck, dialed my friend Tony.\n\n\"Hey, brother,\" I said. \"I've got a little problem, I'm not gonna make it tonight.\" In addition to being a generator repairman and world-class mud-bogger, I was also rhythm guitarist for a little C&W act that played around in local bars. I was going to miss \"band practice\" - 30 minutes of half-assed dicking around with a couple songs, followed by an hour and a half of serious boozing.\n\n\"What kind of little problem, man?\"\n\nI explained, cautiously avoiding any mention of the fact that I was patient-zero for this particular pandemic. \n\nTony laughed. \"Stuck out there with Mandy, huh? I can think of worse ladies to be stranded....\"\n\nI flipped the phone shut and dropped it on the seat next to me, looking around to see if I had a book or something I could use to pass the time. All I found was the instruction manual for a Milwaukee reciprocating saw and an empty Funyuns pack. I sighed and put my head against the headrest, thinking I might grab a nap in the warm summer evening.",
        "I could hear Mandy complaining over her phone. \"...yeah, I dunno. I'm out here in the middle of nowhere, so...\"\n\nI glanced in the rearview - she was standing directly behind my truck, about fifteen feet back. \n\nI looked down at my dashboard, at the small clutch-override switch I'd installed a couple of years ago. \n\nI smiled a little. Like, that smile that the Grinch got when he figured out how to steal Christmas - that kind of smile.\n\nThe little devil on my shoulder was screaming \"Do it! Do it! Do it!\" in my ear.\n\nThe little angel on the other side shrugged and said \"Go ahead, man.\"\n\nI have never once said that I was a good person.\n\nI flipped the switch and casually, nonchalantly dropped the transmission into first. I reached out, eyes glued on the rearview, and bumped the key.\n\nThe torque from the starter caused a massive cascade of mud to spin up off of my back tires - and all over Mandy, who dropped her phone in surprise.\n\n\"You motherfucker!\" she screamed, wheeling around, face a mask of fury.\n\nI hopped out, pocketing my keys. \"Sorry 'bout that,\" I said. \"Forgot I had it in gear.\"\n\n\"Forgot, my ass!\" she shouted, stomping towards me, hands balled into fists.\n\nThat was laughable - I didn't like her, but I figured I was not terribly likely to forget her ass. It was, indeed, one of the few things about her that I actually liked.\n\nShe pulled back as though to hit me and I cocked my head to one side. \"Really?\" I asked, gesturing so as to indicate our size difference. I had six inches and sixty pounds on her.\n\nLet's be clear - I would never hit a woman. \n\nI wasn't sure, however, as to where my code of honor stood about hitting a she-demon from the Seven Hells.\n\nShe stood down. Then she stooped down. And before I knew what was happening, an enormous handful of mud had crossed the distance between us and splattered all over my face.\n\nI responded in kind, grabbing a handful of my own and sending it flying her way. She dodged most of it, but a biggish drop landed right in her blonde hair, with a satisfying \"splort!\" sound.\n\nLike most skirmishes, it quickly blossomed out into full-on war - before too long, we were both covered head-to-toe in mud, running and dodging between the stationary pickups and creating a terrifically satisfying mess, all the while hurling the most horrendous insults imaginable.\n\nI'd hidden behind Charles' jacked-up Ram, and she was on the other side, trying to decide whether to circle around the front or the back to catch me. I had an idea - I dropped to the ground and wriggled my head and shoulders into what little space was still available under the truck. I was covered in mud anyway, so a little more wouldn't hurt. \n\nWhile she was still edging back and forth, like a baserunner taking a tentative lead off first, shouting her intent to murder me via some arcane means, I reached out, grabbed one ankle and pulled. \n\nShe went down like a sack of potatoes, plopping heavily into the mud, cursing like a sailor. I hopped up and sprinted around to gloat over my fallen foe - forgetting that she, too, could grab and pull someone's ankle. Which she promptly did.\n\nBefore I knew it, we were locked in a half-assed wrestling grapple, rolling ass-over-teakettle through the muck. \n\nWe finally rolled to a stop, with me pinning her to the ground, her struggling like a trapped cat under me.\n\n\"Let me up!\" she shouted.\n\n\"Stop being such a bitch!\"\n\n\"You first!\"\n\n\"Say uncle!\"\n\n\"Fuck you!\"\n\n\"You first!\"\n\nIt was a terribly mature sort of exchange for two people in their mid-to-late twenties.\n\nShe finally stopped struggling and lay there, panting from the exertion. I watched her face soften. She really was incredibly pretty, even slathered in a healthy coat of mud. I forced myself back to reality before I could go too far down that road.\n\n\"Okay,\" she said.\n\n\"Okay what?\"\n\n\"I give, let me up.\"\n\nI nodded. I started up, and then stopped. \"Hang on.\"\n\nI reached out and brushed her face with my fingers.\n\n\"What the fuck!?\" she cried.\n\n\"You had some mud about to get in your eye. Calm down.\"\n\nI rolled off and got into a seated position on the ground next to her. She struggled into a seated position herself, still panting from our brief tussle, and we both sat there silently for a few minutes.\n\nPretty soon, I heard her starting to laugh. I looked over at her - her laugh intensified. \"Look at us,\" she said. \"The creatures from the black lagoon.\"\n\nI chuckled. \"Yeah, maybe not our best moments.\"\n\nShe shook her head. \"No, maybe not.\"\n\nWe looked at each other for a second and then the absurdity of the whole thing washed over us and we were both taken by paroxysms of laughter, rolling on our backs, roaring our hilarity into the darkening Georgia sky.\n\nAfter a minute, we recovered and I stumbled to my feet. I offered her a hand up and she accepted. I fumbled around behind the seat of my truck and produced a couple of old towels and a gallon of water I'd been carrying around to top off my radiator; I tossed one to her and we both spent a couple of minutes trying to get as much mud off as possible.\n\n\"Jesus, I'm never gonna get this shit out of my hair,\" I heard her grumble. \"I'm gonna have to shave it off.\"\n\n\"Oh, don't do that,\" I said, my mouth responding before my brain could catch it.\n\nShe looked at me with a puzzled expression. \"Hang on.\" She paused, cocked her head to one side. \"Do you like my hair?\" she asked, her tone one of amazement.\n\n\"I...\" I stammered. \"It's not bad. It's a good look for you.\"\n\n\"Well, I'll be damned. I didn't think you had it in you.\"\n\n\"Oh, come off it,\" I started to protest.\n\nShe held up one hand to cut me off. \"Stop,\" she said. \"Please, let's not.... You know, maybe my brother was right.\" She let out a deep, sad sigh. \"Why do we do this?\"\n\nI opened the tailgate of my truck and sat down; she came and sat down next to me.\n\nI thought for a minute. I was about to make some crack about how I was merely doing my job to defend Earth from alien invaders, but it seemed like she was genuinely asking. And I was too tired to do the whole battle-of-the-wits thing, anyway.\n\nI thought some more. I looked over at her.\n\n\"Well?\" she said.\n\nI shook my head. \"I don't have the first goddamned clue.\"\n\nShe laughed again, a great, throaty laugh that started deep in her chest and rolled out towards the still, dark, dripping pines. I joined in, and she held out one hand.\n\n\"Truce?\" she asked.\n\nI took her hand and shook it, nodding my agreement.\n\nMy cell phone rang. \n\nI reached into my back pocket and held up the phone to show her the caller ID - it was Reg.\n\n\"Where the righteous fuck are you?\" I asked him, forgoing a polite \"hello.\"\n\n\"Uh, you're not gonna...\"\n\n\"What?\" I rolled my eyes and put him on speaker. \n\n\"Holtzman's tractor's broke down. I'm gonna have to head over to Mr. Franklin's and see if I can get his.\"\n\n\"Then get a move on, man!\"\n\nThere was a pause on the line. \"Uh, yeah, I'm already on my way. Thing is...\" he trailed off.\n\nMandy piped up. \"What? The thing is what?\"\n\n\"Uh, well, he lives 'way on the other side of the WMA; it's gonna be at least another hour before I can get back. Are y'all gonna be all....\" I hung up on him and tossed my phone into the truck bed behind me.\n\n\"Well, shit,\" I said. \"We might as well get comfortable.\" I leaned back, resting on my elbows.\n\nShe sat, cross-legged, on the tailgate. \n\nI was staring up at the sky, watching the last vestiges of daylight fade away, when she suddenly spoke.\n\n\"I don't hate you, you know,\" she said. \"I never have.\"\n\nShe was looking at me with a thoughtful expression.\n\nI sighed. \"I don't hate you, either. I just... I guess we never really got off on the right foot or something.\"\n\nShe smiled. \"Do you remember the night we met?\"\n\nI did.\n\n***\n\nReg and I had started hanging out in our junior year of college; he was roommates with a guy I'd gone to high school with. We had mutual interests - girls, beer, video games, and fishing - and we'd quickly become friends. One weekend, his little sister came down to visit, and we'd all agreed to hit the town that Saturday night.\n\nWhen I got to the bar, the place was crammed with drunk undergrads - I spotted Reg and this unbelievably hot blonde sitting at a back table. Whoa, I thought. Is that his sister?\n\nOf course, I wasn't planning on making any moves - my girlfriend Jamie was meeting us shortly - but nonetheless, I found her very - shall we say \"interesting\"? \n\nUntil she started talking.\n\nShe was two years younger than us, and had been studying psychology at an elite private school in Atlanta. She was clearly brilliant, but also clearly aware of that fact - and wanted us to be aware of it, too. \n\nLooking back later, I didn't think she was doing it on purpose, but at the time, it was incredibly offputting. She rattled off obscure references, kept turning the conversation to her research projects, and then - the last straw - started performing a half-assed psychoanalysis of me at the table.\n\nThat was the beginning of the end. By the time the night was over, we were all but shouting at one another across a table, and I stormed back to my apartment early, just to get away from her.\n\nIt had not been an auspicious start to our relationship.\n\n***\n\nI smiled back at her. \"Yeah, you tried to diagnose my psychoses, right there at the bar. Just after you spent a half-hour showing off how much smarter you were than the rest of us.\"\n\n\"Hey, you weren't exactly being Mr. Welcoming yourself,\" she snapped back. \"You made it pretty clear that you didn't have a lot of respect for psych majors.\"\n\nI thought for a second. Yeah, that was true - I'd been a pretty big dick that evening, myself. I shrugged. \"Fair cop,\" I said.\n\nThere was another long pause. \"I was trying to impress you,\" she said, blushing and looking away. \"I thought you were cute as hell, and I was trying to flirt. I just.... I didn't really know how.\"\n\nYou could have knocked all 195 pounds of me over with a very small feather. Possibly with a few specks of dust. Nonplussed? I'd never been so far away from plussed in my entire life.\n\nShe looked back at me with a small smile and continued. \"I actually had a crush on you for a long time after that, but you were going out with that other girl... Jamie? I started coming down on weekends a lot more after that, remember?\"\n\nI nodded.\n\n\"It was pretty clear we had different things going on, but I kept coming around to argue with you because at least that way we got to spend time together.\" She gave a small laugh. \"It probably wasn't the healthiest thing I've ever done. By the time you and Jamie broke up, we'd pretty well established our relationship - all-fighting-all-the-time - and then I got together with Tyler, and....\" she trailed off and shrugged slightly. \"That was that.\"\n\nShe blushed and looked away again.\n\nMy head was spinning a little. My mind raced through the past eight years. It occurred to me that my relationship with Mandy had been the most solid one I'd had with any female - other than my mom and my sister - in pretty much my entire life. It hadn't been a pleasant one, but it had been constant.\n\nAnd, putting everything else aside for a second, I actually did like a lot of things about her. I'd have never admitted it to her or anyone else, but it was fun sparring with her. Her mind was truly impressive - sharp, incisive, fiercely logical, and dangerously witty. Her jokes were vicious and always landed. And, she did seem to genuinely care about the people around her. \n\nAt least the ones she wasn't engaged in a years-long blood feud with, anyway.\n\nShe stretched out next to me, propped up on one elbow, looking at me with a curious expression on her face.\n\n\"Sorry I've been a bitch for the last eight years,\" she said.\n\n\"Sorry I've been an asshole.\"\n\nI turned onto my side to face her. A strand of clumped, mud-saturated hair had fallen across her face, and she brushed it aside with one long finger.\n\nShe smiled slightly, shook her head a little. \"You're not exactly an asshole. Maybe, like, asshole-adjacent.\" \n\nI started to reply, but she continued. \"You're smart, but not stuck up about it, you know how to do, like, everything, and you're a really good friend to my brother. Like today - Jesus, you spent an entire day helping him with that generator when you and I both know that nothing is ever going to be built out here.\"\n\n\"Eh, he'd do the same for me.\"\n\n\"No, he wouldn't.\"\n\nI laughed. \"Well, no, he doesn't know which end of a wrench to hold, but if I needed something he could do, he would.\"\n\nShe smiled again. I was really starting to like that smile. \"Fair enough,\" she continued. \"You used to intimidate the hell out of me, I think that's why I didn't just ask you out instead of trying to be an amateur psychologist.\n\n\"And you're still cute as hell,\" she finished with a wink.\n\nI'd never thought of myself as cute. Or handsome. Or anything of the sort. My work kept me in pretty good shape, and I supposed I might be called \"rugged\" or something like that, but there was simply no evidence that she knew what the hell she was talking about, vis-a-vis my physical appearance. Still, a compliment's a compliment - I could feel face starting to turn red.\n\nI said, \"Well, if we're doing confessions - I've always thought you were brilliant, even back when I first met you. Your little analysis of me at the bar cut a little too close to home, and that scared me to death. I never liked it when people were able to get my number, and you got it fast. You've always been the little hottie who was too damned smart for her own good.\"\n\nShe was blushing. \"You think I'm a hottie?\" she asked, looking into my eyes.\n\n\"Well... yeah. I mean, Jesus, Mandy, look at you. Even muddy and all gross, you're still fucking gorgeous. You do know that about yourself, right?\"\n\nShe smiled for a third time, and I felt butterflies starting to come to life in my belly.\n\nHold up, what's all this? my brain was shouting.\n\nJust, hang on, replied some other parts of my body. Let's see where this goes, okay?\n\nFine, snapped back my brain. Just leave me out of it.\n\nAnother silence. We lay there, looking at each other as the stars winked into existence overhead.\n\nShe broke the silence again, scooching closer to me. \"So, what was that you were saying about getting comfortable...?\" \n\nShe leaned forward and her lips brushed mine.\n\n\"That was pretty comfortable,\" she whispered.\n\nShe pressed her lips to mine for a second longer.\n\n\"Better.\"\n\nShe put a hand on the side of my neck and pulled my face into hers. Our lips met again, locked together. Her lips parted, and our tongues danced together. \n\nWe broke for a second. \"Now that's comfortable,\" she purred, caressing the side of my face.\n\nMy brain piped up again. What the actual fuck!?\n\n\"Mandy, wait,\" I started. She put her hand across my mouth. \n\n\"Just.. hush,\" she said. \"I'm not looking to pair up for life or anything, I just... Y'know... I kinda... oh, just shut up.\" She leaned in again and kissed me for the fourth time. This kiss was hungry, seeking - passionate. She held onto me as though one small slip would send her hurtling into the abyss. Her tongue probed into my mouth, hands greedily pulled me closer and tighter. \n\nI found myself perfectly willing to shut up for as long as she required.\n\nWell, at least most of me did. My brain was still trying to protest what was happening - thankfully, the rest of me went to work and pretty quickly subdued the stupid son of a bitch.\n\nHer body felt amazing next to mine; I could feel every curve, feel her warmth. I ran my hand along her side, down her hip, back up to rest on her waist. She put a hand out and pushed me over onto my back. \"One thing is not comfortable,\" she said, \"this truck bed ain't cutting it on my precious, delicate skin.\" I laughed and pulled her over on top of me.\n\n\"Better?\"\n\nShe kissed me again, running her hands down my chest. \"Better.\"\n\nWe lay like that for a moment, kissing, touching, exploring one another's bodies with our hands. I slid one hand up the back of her shirt to stroke her back, feeling her soft skin and tracing her spine with one finger. She shivered and began tracing light kisses up my jawline towards my ear. I felt her hot breath flowing across my skin.\n\nI wasn't entirely sure what was happening, or where this had come from, or whether or not it was some kind of elaborate ruse to finish me off once and for all, but - whatever it was - I was completely okay with it. Her lips felt incredible on my skin - soft and warm and promising. Each contact set my nerve endings on fire - I felt like I'd been worked over with sandpaper, every touch more intense than the one before.\n\nI brought my hand around her side and gently cupped one breast in my hand, a thin layer of lace between my fingers and her smooth skin. I pinched her nipple and she nipped at my earlobe.\n\n\"Don't stop there,\" she whispered.\n\nI could feel her fingers unbuttoning my shirt; I reached around and unsnapped the clasp on her bra.\n\nShe sat up, startled.\n\n\"Oh, shit!\" I said. \"I'm sorry, I didn't...\"\n\n\"No,\" she said, laughing. \"Never been with a guy who could do that one-handed,\" she said. \"You're just full of surprises.\"\n\nIndeed I was. One of them, in fact, was starting to be a bit more vocal in its request for attention. She could feel it, too, and she pressed herself down onto me, rubbing her mound against my rapidly-growing erection. \n\n\"Hellooooooo, nurse,\" she giggled. \"That feels promising.\"\n\nI let out a small moan and reached down for the hem of her shirt. She raised her arms, allowing me to pull the tank top over her head, and she shrugged, dropping her bra to one side.\n\nOhhhhhhh, I get it, said my brain, finally deciding to join the party. \n\nBefore me was a stunningly-beautiful woman with the most amazing breasts I had ever seen. They were larger than you'd expect on a girl of her size; they sagged slightly once freed from the restraints of her bra - round and soft and inviting. Pale pink nipples perked out from the peaks, one slightly larger than the other. \n\nI may have been slack-jawed, I'm not sure. Hell, I may have been babbling like a traumatized toddler. At the very least, I was staring hard enough to burn holes in her skin.\n\nShe ran her hands down them, lightly pinching her nipples and tracing circles with the tips of her fingers. \"You like?\" she asked, then rolled her eyes. \"Wait, what am I saying? You're a guy. You all go stupid over these things.\"\n\nI could have responded to that, but I'd already moved onto other things in my head. I shrugged off my shirt and sat up a little straighter, reaching out to caress the soft skin around her nipples. She edged up closer to me and pressed her naked chest against mine, kissing me softly. \n\nI placed my hands on the small of her back and pulled her tighter into my lap. She slowly slid back and forth, grinding again, my cock straining against the fabric that held it.\n\n\"Jesus, Mandy,\" I groaned. \n\n\"If you're enjoying that,\" she said, tossing her hair back and leaning in to nibble my ear again, \"wait'll we get our pants off.\"\n\nOne of her hands had made its way into my lap, where it fumbled for a moment with my belt. Finally, she managed to unbuckle it and made quick work of my pants. I felt a soft, gentle hand reach into my boxers and free my now-throbbing cock. \n\nShe stroked me lightly, sending bolts of lightning pulsing through me with every touch. Her touch was gentle, soft. She continued to trace light kisses up and down my neck, my jaw, teasing my lips with faint brushes.",
        "The whole thing felt extremely wrong in a lot of different ways. It also felt incredibly right in a lot more ways. My heart was racing, breath coming faster, I could feel the blood pulsing in my veins as I took in each new sensation.\n\nShe tightened her grip and sped up her stroke, pumping at my cock. I continued my attention to her breasts - the harder I pinched and tweaked at her nipples, the more furiously she worked on my shaft. I twisted slightly, and she let out a small shriek and bit down gently on my neck, earning her ass a light swat from my free hand.\n\nI reached down and unbuttoned her jeans, slowly unzipping her pants and tugging at them slightly. She got the hint and stood up - I pulled her jeans down, and reached back up to pull at the light blue panties she was wearing. I took my time, easing them slowly down, taking the opportunity to run my hands first down one leg, then up the other. \n\nOnly then did I raise my eyes to the small tuft of light blonde hair between her legs. I looked up at her and she smiled - a wicked smile - down at me. She spread her legs slightly, and I leaned forward, gazing up at a pair of slightly-swollen lips. She reached down and parted them slightly, tweaked her clit with one finger. \n\nThe musky aroma coming off of her was instantly enough to drive me mad. Any hesitation I'd had was gone - I wanted this woman. Now.\n\n\"Wanna taste?\"\n\nI reached around behind her and grabbed her ass with both hands, pulling her midsection towards my face. I marveled - then opened my mouth and got to work.\n\nDear Old Dad had been insistent that I learn to do a few things in my life. He'd taught me well - car maintenance, home repair, outdoorsmanship, things like that. The necessity of learning how to eat a girl out, that one I'd figured out on my own. Thankfully.\n\nShe tasted wonderful - tangy and wild. I teased her lips with my tongue, made light, flirting licks, working my way up from the bottom to the top, stopping to put my lips on either side of her clit and suckle lightly.\n\nShe moaned above me, twining her hands in my hair. \n\nI turned her, and lifted her so she was sitting on the roof of the cab. I knelt down in front of her and continued my efforts, gradually increasing in intensity. I could feel heat coming off of her flesh, could feel her wetness increasing as her moans got louder. She clamped her thighs onto either side of my head, steering me as I licked. \n\nI was completely in the moment, savoring the taste and the smell and the sounds - muffled as they were by her legs pressed against my ears. My own excitement ran up and down my body, connecting every nerve directly to my lips, my tongue, and my cock. I continued licking, kissing, nipping lightly and consuming her pussy with my mouth.\n\nThe moaning became words, a low stream of encouragement and pleasure.\n\n\"Oh..... God, yes.... Oh, yes, baby, yes.... Lick that little pussy... Fuck yes.....\"\n\nI was happy to oblige. She began to thrust into my face, grabbing my hair and pulling me harder and harder into her. She was almost dripping now; my face was saturated with her sweet muskiness. It filled my nose, coated my tongue, and I lapped it up, eager for more.\n\nShe bucked wildly and began to cry out into the night.\n\n\"Oh, fuck yes, oh God.... I'm gonna... fuck, I'm gonna cum...\"\n\nShe did. I felt her entire body tense and she arched her back, nearly knocking me backwards - only her locking her legs even more tightly around my head kept me from falling on my ass. She practically screamed - and a flood gushed out of her throbbing pussy, soaking me.\n\nHer legs relaxed, followed slowly by the rest of her body as she sagged backwards. I rocked back onto my heels and sat, watching, as she began to recover from her orgasm. \n\n\"Jesus Christ,\" I said. \"Does that happen every time?\"\n\nShe looked down at me and smiled. \"No, just when it's really, really good. And that? That was fucking incredible.\"\n\nShe hopped down from the cab, straddling me where I sat, and kissed me again, hard and rough. Her mouth moved down my chin, kissing and licking, cleaning her own juices off of my face wherever her lips or tongue came to rest. She proceeded down my chest, biting lightly at my nipples with her teeth, until she reached the waistband of my jeans. Already unfastened, they quickly joined the rest of our clothes, and she put her face next to my achingly-hard cock.\n\nI could feel her hot breath on me, as she looked at - studied, almost - my erection. \n\n\"Now, let's see...\" she muttered. \"Maybe something like....\"\n\nIn a flash, my cock was completely in her mouth - no hesitation, no holding back. She sucked on it - like you would a milkshake - and began to slowly move her lips up and down the shaft, teasing at the head with her tongue.\n\n\"Oh, fuck me.... Mandy, Jesus Christ.... Hooooooly shit....\"\n\nI'd gotten blowjobs before, but this was.... \n\nSorry, even just remembering it tends to make my brain sort of.... Y'know... stop working.\n\nShe was an expert, alternating fast, hard, powerful suction with light, lingering caresses, kisses, and licks. Every few moments, she'd roll her eyes up to meet mine, all hint of innocence gone from her face. The eyes that looked up at me were burning, dancing with desire and lust.\n\nI could feel pressure building up at the base, threatening to explode any second. She must have felt the tension, because she slowed down, pulled back slightly. \n\nI groaned. I started getting tunnel vision as my brain worked diligently to block out everything except what was happening to the lower half of my body.\n\nShe opened her mouth and again took my entire length, licking slowly up the underside, until I tapped her on the shoulder.\n\n\"Mandy... baby, I'm gonna....\"\n\nShe nodded, redoubling her efforts and moaning lightly around my cock as I erupted, exploding deep in her mouth. My hips bucked, and she reached around and grabbed my ass, pulling my entire crotch into her face - I could feel the head of my dick tickling the back of her throat. \n\nShe held me there for a second, and I suddenly realized the odd sensation I was feeling was her swallowing what felt like a solid gallon of cum.\n\nI felt the last of it trickle out of me as my body finally stilled. She was holding me rigid, our bodies locked together like the jaws of a vice. After a moment, I felt our muscles go lax, all at once.\n\n\"Foolish mortal,\" she said, opening eyes that had turned jet black. Pointed, gnarled horns began to sprout from her forehead, and she grabbed my face with hands that ended in jagged claws. \"Now that I have your seed\" - her voice came from a place beyond her, a place of damnation and despair - \"I can fully enter this realm and sing the bloodsong to begin the Convocation of the Billion Corpses!\" She threw back her head and laughed, and the moon turned blood red above me. I could hear the din of a thousand condemned souls' wailing on the suddenly-hot wind.\n\nNo, that... That didn't happen. But wouldn't it have been a great end this story? \n\nWhat actually happened was that I collapsed next to her and she cuddled into me, head nestled comfortably on my chest, one hand tracing idly along my belly. That smile - the sultry one - began teasing its way around the corners of her mouth. \"Damn, boy,\" she said. \"If I'd known we could've been doing that this whole time...\"\n\nI nodded. \"Preach.\"\n\nShe laughed; I kissed her and she sighed contentedly.\n\nI stroked her hair gently. \n\nShe turned her eyes up towards me. \n\n\"Sooooo,\" I said, grinning, \"can I brag to all my friends that I hooked up with my buddy's hot-ass baby sister?\"\n\nShe slapped at my chest. \"Oh, my God, don't even joke!\"\n\n\"So you'd rather I.... didn't tell anyone?\"\n\nShe sat up. \"Not yet, anyway. Jesus, can you imagine?\"\n\nI laughed. \"They'd think we'd lost our goddamned minds, wouldn't they?\"\n\n\"Yeah. If there's anything to tell 'em later, we'll tell 'em then, okay? Until then...\"\n\n\"Fair enough,\" I said, catching her drift and leaning in for another kiss.\n\nIt started slowly, but like before, it quickly came to a head. \n\nPun intended.\n\nHer hand moved down from my chest, and began, once again to stroke the sensitive underside of my dick. It quickly sprang back to life, ready to once again report for duty. I murmured appreciatively and began to run one finger lightly up and down her wet slit.\n\nShe suddenly sat bolt upright. \"What's that?\"\n\n\"What?\"\n\n\"That!\" There was a soft mechanical rumble off in the darkness.\n\nHm. Yeah, I forgot about that.\n\n\"Yeah... that's a 1974 Farmall tractor. It belongs to...\"\n\n\"Mr. Franklin?\"\n\nI nodded grimly. \"Yup.\"\n\nShe let out a small shriek. Or maybe I did. One of us did, anyway, and that was the starting gun - we both jumped immediately to our feet and scrambled frantically for clothes, shoes, and other accoutrements, simultaneously blasting the cosmos with prayers to deities of all sorts, that they might grant us a few more seconds before Reg turned the corner and found us all naked and entangled in the bed of my truck.\n\n\"Where's my other shoe?\"\n\n\"Is this it?\"\n\n\"Yeah. Is this your sock?\"\n\n\"Let me... well, yeah, I was the only one wearing socks. Where the hell is my....\"\n\n\"Shirt? Right here.\"\n\nIt was, thankfully, a long driveway - we were just starting to see the flickers of the tractor's headlights in the pines when we realized another problem - despite our earlier efforts with the towels, we both still looked like we'd taken a bath in red Georgia clay.\n\n\"He's gonna know something happened,\" Mandy suddenly said in a low, worried voice. \"I'm still covered in fucking mud!\"\n\n\"We'll say you fell down.\"\n\n\"And then wallowed around in it for a bit?\"\n\nI had to hand it to her, that was a good point.\n\nWe stared at each other, completely skulled.\n\nSuddenly, I smiled. \"Got it. We'll tell him the truth.\"\n\n\"What?!\"\n\n\"We'll tell him the truth, up to a point.\"\n\nShe looked at me impatiently.\n\nMy smile turned into a grin. \"Are you telling me your brother would think it was in any way out of character for us to end up in a mud fight?\"\n\nEven she had to admit, that was brilliant.\n\nWhich, she kinda... Sorta... Almost kinda did.\n\n\"Not bad... yeah, I think that might work,\" she said, using her fingers to attempt to brush the larger clumps out of her hair.\n\nThanks for the vote of confidence.\n\nJust then, the venerable red tractor broke through the treeline and Reg waved from the operator's seat.\n\n\"We're agreed?\" she asked me, giving my backside a surreptitious pat.\n\n\"Never happened,\" I said, smiling and returning the gesture.\n\nAs expected, our muddied appearance raised some questions, but once we explained, Reg's irritation with us indulging our childish impulses kept him from asking any further questions. After he stomped off to pull a chain out from under the tractor's seat, Mandy and I exchanged a quick fist bump.\n\nWe shared a few Significant Glances as we worked by the headlights of the three trucks and the tractor; after about thirty minutes' work, had all three parked on the high ground by the trees. \n\nReg tossed his sister the keys to his truck and hollered for her to follow him back to Franklin's place. He threw the old red tractor into gear and headed down the driveway. As soon as he was around the bend and out of sight, she walked back over to where I was scraping mud off my windshield.\n\n\"Hey,\" she said, putting her arms around me and giving me a light kiss. \"So, that thing that never happened?\"\n\nI kissed her back. \"Yeah?\"\n\n\"You think it might never happen again sometime?\"\n\nI paused for a second. \"I mean, I guess it could.\"\n\nShe swatted at me. \"You guess?\"\n\nI nodded, chucking. \"I guess.\"\n\n\"If I promise that it doesn't mean in any way that I like you at all?\"\n\nI looked down at her. \"Well, if you're willing to concede that... and maybe if you'll get a shower and get some of this mud off...\"\n\nShe swatted at me again. And by \"swatted,\" I mean, \"punched me really goddamned hard in the shoulder.\"\n\nI grabbed her arms and pinned them to her sides, kissing her deeply. After a moment, I released her arms and ran my hands down her back, grabbing twin handfuls of her ass.\n\nWe came up for air, she smiled up at me. \"So, like I said - do you think it might never happen again?\"\n\nI just smiled back. \"Never.\"\n\n***\n\nI got home from the home-improvement place a couple hours later, the lick from the song still playing in my head. My wife met me at the door, seemingly glad to have me back.\n\n\"Hey, you gotta hear this song,\" I said, calling it up on my phone. \"You remember that day the truck got stuck?\" I asked, pointing back over my shoulder to where my old Chevy was still parked under the big pecan tree beside the house.\n\nMandy threw back her head and laughed, that same great laugh I'd loved for so many years. \n\nMandy and Dave (and Corb) will return in \"I Think You Oughta Try Whiskey\""
    ],
    "authorname": "PaperbackWriter007",
    "tags": [
        "frenemies",
        "funny",
        "muddy",
        "outdoors",
        "a story for your song"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/truck-got-stuck"
}