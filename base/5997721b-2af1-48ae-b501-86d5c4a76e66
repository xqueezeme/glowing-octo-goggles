{
    "title": "Saturday Night School Ch. 12",
    "pages": [
        "Charlie called Michelle the next day. She picked up and immediately started talking. \"Charlie, I've been thinking about it, and it's so wrong that you came to spy on me last night. Like, what did you think I was doing?\"\n\n\"Come over,\" he said.\n\n\"What?\"\n\n\"Come to my house.\"\n\n\"Is your mom there?\"\n\n\"Yeah. She's here now, but she'll probably go out later. Come over and let's talk in person.\"\n\nSo Michelle came over, and although she spent a little over four hours at his house that Sunday, they didn't say a single word to each other about the previous evening. Neither of them seemed inclined to discuss it. In Charlie's mind, the event had become another secret rendezvous, similar to their midnight encounter in the Macy's parking lot, something that felt too much like a dream to be analyzed in the daylight. He suspected that Michelle felt the same way.\n\nThey ate waffles. They lounged on the couch watching old movies on the TV. Around two o'clock, Mrs. Tucker went out to do some shopping, and Michelle was naked less than a minute after she left. They had sex in the backyard, and Michelle gazed up at the sky the entire time.\n\nWhile she rinsed off in the upstairs shower, Charlie sat by himself on the couch, flipping through the channels on the TV. He paused on one of the HBO channels and watched a bit of the movie in progress: a quartet of attractive twenty-something men walked through what appeared to be a street festival. They jostled through crowds of people, but had no trouble carrying on their conversation as they walked, talking about the fun they were going to have. One of the men caught site of a pretty woman walking on the other side of the street; their eyes met, and she smiled at him, but the flow of the crowd pulled her away. He stretched up, trying to see her over the throng, but she was gone.\n\nPresumably, he would run into her again later in the movie. It seemed like a scene that would set up a later encounter. Charlie never found out. He heard Michelle coming down the stairs and he changed the channel, still looking for something for them to watch.\n\nMichelle was fully dressed when she appeared, and she stood next to the couch without sitting. \"Charlie, I should go.\"\n\n\"Now?\"\n\n\"Yeah. I need to head home.\"\n\nCharlie stood. \"Okay. I'll walk you to your car.\"\n\n\"All right.\"\n\nIt wasn't a far walk this time; Michelle's car was parked right in front of his house. It was odd to see it sitting right there. Every other time she had come by, Michelle had parked a block away, on a dark side street, and when it came time to say goodbye, they did it in the darkness, with Michelle wearing next to nothing. This would be a first: bright daylight, and Michelle fully dressed.\n\nCharlie glanced at her as they walked along the front path towards the sidewalk. \"Can I ask you something?\"\n\n\"Okay.\"\n\n\"Your parents. Do they know you're here?\"\n\n\"Yeah. Mostly.\"\n\n\"Mostly? What does that mean?\"\n\n\"Well... I don't tell them everything.\" She stopped and looked at him. \"They know that I'm in a student film you're working on. They know that I'm with you right now. I told them I needed to meet with you, to talk about the movie. I didn't tell them I was going to your house, and I'm not going to tell them what we did here. Obviously, we haven't been talking about the movie, have we?\"\n\n\"No.\"\n\n\"And I'm not going to tell them we just had sex in your backyard. I mean, that makes sense, right?\"\n\n\"Right.\" He watched her while she searched for her car keys in her purse. \"I just wondered if they knew about me.\"\n\nShe paused her search and looked up at him. \"Well, they know I'm spending time lately with a boy named Charlie,\" she said. \"And I think they strongly suspect that I like that boy Charlie. But they're not pressuring me for information. They're going to wait for me to tell them.\"\n\n\"Okay.\"\n\nShe smiled. \"You have to trust me when I say this: you should be in no hurry to involve my family in this thing of ours. My parents are super nosy and my sisters are worse. They're going to want to know everything about you. Everything about us. How we met, what we do when we go out. I don't know if we're ready for that kind of interrogation yet.\"\n\nCharlie nodded thoughtfully as he considered facing her parents and answering their questions. How did you meet our daughter? At school, while she was walking through the hallways naked. What do you do when you take our daughter out? I usually strip her naked. In public. Then I have sex with her.\n\nWho am I? I'm the bad guy. The guy you don't want her to date.\n\n\"Here they are.\" Michelle held up her car keys. She stepped forward and gave Charlie a quick peck on the lips. \"Bye!\"\n\n\"That wasn't much of a kiss.\"\n\nShe shrugged. \"Your mom might come home. I don't want her to see me giving you one of those Greenholt Gardens kisses in front of her house. Probably not a good idea.\" She grinned and started to walk around her car to the driver's side door.\n\nA thought came into Charlie's head and he voiced it without thinking. \"If I asked you to take off all your clothes right now, would you do it?\"\n\nThe question froze her. She turned back towards him, clearly shocked. Her eyes were wide and her mouth quivered\n\nShe spoke softly, \"Are you asking me?\"\n\nHis question was answered. Yes, she would take off all her clothes. Not only that, but she was on the verge of doing it, maybe seconds away from doing it, just because he had suggested the possibility. A moment ago, she had been reluctant to give him a long kiss for fear that his mom might see. Now, suddenly, she was ready to strip completely naked in the middle of the road.\n\n\"No,\" he said quickly. \"Keep your clothes on. It was just a question that popped into my head.\"\n\nShe looked relieved but the tension didn't leave her. His question had given her a jolt. She looked down, squeezing her keys in her fingers.\n\n\"I'm sorry,\" he said. \"I shouldn't have asked. That was rude.\"\n\n\"It's okay.\" She raised her eyes. \"Charlie... you know I trust you so much. You're the only one who knows my secret. The keeper of my secret.\" Her eyes begged him to understand the meaning of her words. \"I've given the key to you. Because I don't trust myself with the key. I know I can't control myself. I know it and you know it, too. I can't make good decisions. I'm too addicted to this secret of mine. But I trust you. I trust you to know when the time is right, for me to let go. You understand what I'm saying, don't you?\"\n\n\"Yes,\" he said. But he didn't really understand.\n\n\"Bye, Charlie. I'll see you in school.\" She got into her car and closed the door. He watched her drive away, her red car glinting in the light of the sun, a cloudless blue sky above. He remembered how she looked up at the sky while they had sex, as if that was the way she always wanted it to be. As if she was meant to make love without walls, without a ceiling, out in the open air, completely free.\n\n***\n\nHe ran into Ronni and Jennifer in school the next day, just outside the library. \"Hey!\" Jennifer greeted him. \"How'd it go over the weekend? Did the disguise work?\"\n\n\"Yeah, it worked. Thanks again.\"\n\nJennifer eyed him critically. \"Your face looks red. You ripped the beard right off, didn't you?\" She shook her head in disapproval. \"You know better than that. What happened with your girlfriend? Did you catch her in the act?\"\n\n\"No. She caught me,\" he said. \"The disguise worked, she didn't recognize me. But my phone rang, and she recognized the ring. She knew it was me.\"\n\n\"Oh, no! What did she say? Was she mad?\"\n\n\"Yeah. I don't blame her. In retrospect, it was a stupid thing to do, spying on her like that.\"\n\nJennifer laughed. \"I guess so!\"\n\n\"You didn't do any work on your movie yesterday?\" Ronni asked.\n\n\"No,\" Charlie said. He had planned to drop by the school to do some editing, but then he invited Michelle over instead. \"Maybe I'll stay after school today and do some work on it.\"\n\n\"I came by the school yesterday,\" Ronni said. \"I thought you would be editing. Because Wednesday is our last filming day, right?\"\n\n\"Yeah. Wednesday. You came to the school yesterday?\"\n\n\"Uh huh. I thought you would be here. It's all right. I'm free after school, I can join you in the editing bay.\"\n\n\"Okay.\"\n\n\"We need to have our list of shots ready. Wednesday's probably going to be our last chance. So we should prepare as much as we can before then.\"\n\n\"You're right,\" Charlie said.\n\n\"I'm curious to see your film,\" Jennifer said. \"Will you show it to me when it's done?\"\n\nCharlie nodded. \"Sure.\"\n\nJennifer laughed. Everything made Jennifer Addish laugh.\n\nCharlie stopped by the bathroom on the way to his next class and checked his face. He could see a streak of red running across his chin, but it wasn't too obvious. Jennifer just had sharp eyes. Anyone who noticed the redness would just assume he had spent too long in the sun over the weekend.\n\nWhen he came out of the bathroom, the hall was nearly empty. He checked his phone and saw that he had two minutes to get to class. It was Euro Lit, and Ms. Landers wasn't strict about tardiness, but he still increased his pace. He didn't want to walk in too late.\n\nWhen he turned the corner, he was surprised to see Vampire Vanessa at the other end of the hall. She was alone, walking down the middle of the hallway towards him. She wore a red dress and black boots that came to her knees. Their eyes met, and he felt a sudden surge of apprehension. They were going to walk right by each other. Should he say hello? Vanessa was Michelle's best friend; he couldn't act as if he didn't know her.\n\nAs they approached each other, Charlie said, \"Hi, Vanessa.\" He half-expected her to walk right by him without saying anything in return. Instead, she stopped right in front of him.\n\n\"Hi, Charlie,\" she said. \"Did you have a good weekend?\"\n\nHe was surprised. She wanted to have a conversation? The bell was about to ring. But she gazed at him as if she had all the time in the world. He had to admit that she intimidated him. Apart from being very attractive, she was also very confident. She was the kind of person who could walk up to a complete stranger and talk to them without feeling at all awkward about it.\n\n\"Yeah,\" he said. \"It was good.\"\n\n\"I saw a movie,\" she said. \"With Michelle, Saturday night. 'Night Crew'. Have you seen it?\"\n\n\"No.\" Now the hall was empty, except for Vanessa and himself. \"I heard it's bad,\" he said.\n\n\"It is. It's bad. Did Michelle tell you it was bad?\" Vanessa watched him, waiting for his response. The bell rang. Vanessa ignored it.\n\nDid she know something? \"No,\" Charlie said. \"I just heard the reviews were bad.\"\n\nVanessa nodded. After a moment, she said, \"There's a party this weekend.\"\n\n\"Really?\"\n\n\"Yes. Glenn Mack is throwing a party at his house. Should be fun. He throws good parties.\"\n\n\"Oh. Okay.\"\n\n\"He's throwing a party because he hopes Michelle will come,\" Vanessa said. \"That's what I heard. Actually, I heard it's the only reason he's throwing a party. So Michelle will come.\"\n\n\"Really?\" Charlie had been trying to keep an expression of indifference on his face, but he knew he let it slip when he heard this information. \"Who said that? Cody?\"\n\n\"Yes. That's who told me.\" Vanessa tilted her head. Her eyes were dark brown; they looked almost completely black. \"You should come to the party, Charlie. It'll be fun.\" She let her hand rest briefly on his shoulder as she passed him. The heels of her boots tapped on the floor, moving away.\n\nCharlie was already brooding over the news. He felt like an outsider, trapped on the perimeter while another man made moves on the woman he loved. It was the movie theater all over again. He could go to the party, but what would he do there? Stand awkwardly to the side, watching while Michelle interacted with Glenn? Or aggressively hang on Michelle, wherever she went, and do his best to ruin any hope Glenn had of a relationship with Michelle?\n\nThe second option sounded good.\n\nCharlie checked his phone. He was eight minutes late, and Ms. Landers relaxed attitude towards tardiness only went so far. He hurried down the hall.\n\n***\n\n\"Vanessa said that?\"\n\nCharlie sat in his car, his phone pressed to his ear. \"Yeah. Did you know about this party?\"\n\n\"She knows about us.\" Michelle's voice was subdued. \"Can you tell me again what she said? Like, word for word?\"\n\n\"I don't know if I can remember,\" Charlie said, but he tried anyway. After he was done, he asked, \"Is that what you're doing Saturday? You're going to the party?\"\n\n\"I don't know. Probably.\" She paused. \"Do you want to go?\"\n\nNo, he thought. To her, he said, \"You mean, go with you? Together?\"\n\n\"No,\" she said. \"You go in disguise. Wear a fake beard. Then I'll sneak over to you at some point for some sex.\"\n\n\"You're joking.\"\n\nShe giggled. \"Of course I am! Just show up, Charlie. I'll be there while you're there. I'll leave when you want to leave.\"\n\n\"But not together.\"\n\n\"That's up to you, Charlie. I'll be there with Vanessa and my other friends from cheerleading. If you want to talk to me, come talk to me. If you want me to be with you, then come and get me.\"\n\n\"Vanessa said that Glenn is just throwing a party so he can be with you,\" Charlie said. \"That's literally the only reason he's throwing it. To hit on you. Maybe it's not a good idea for you to go? He might get the wrong idea if you're there?\"\n\n\"My friends are going to be there,\" Michelle said. \"A lot of people will be there. I don't think he's throwing the party just for me.\"\n\n\"Vanessa said he was.\"\n\n\"She said that's what Cody told her. It doesn't mean it's true.\"\n\n\"So what if it is? What if he comes over to you?\"\n\n\"Charlie...\" Michelle spoke in a low voice. \"Last week, I told you that you could go out with Ronni if you wanted to. Instead, you put on a disguise and went to the same movie theater I was at, so you could spy on me. Remember? And I was sitting there, and Glenn was sitting right next to me. I could've stayed with him. You know what I did? I snuck away to be with you. Do you see what I'm saying?\"\n\n\"Not really...\"\n\n\"You picked me and I picked you. So don't worry about Glenn.\"\n\nCharlie frowned. She told him he shouldn't worry about Glenn, but it was less than a week before that she had implied she would probably be with Glenn if Charlie hadn't entered her life. She had told him to ask Ronni on a date...\n\nRonni!\n\n\"Ah, damn it!\" he swore.\n\n\"What?\"\n\n\"I forgot I said I would do some work on the movie after school. Ronni said she would come by the editing bay and help. We're trying to get as much done as possible before Wednesday.\"\n\n\"Oh, you better go then.\"\n\n\"You're still good with Wednesday, right?\"\n\n\"Of course. That's the last day, right? You'll be done with the filming?\"\n\n\"I think so.\"\n\n\"Awesome,\" she said. \"I can't wait to see it when it's done.\"\n\nAfter disconnecting the call, Charlie got out of his car and took his usual route through the green door to the school. He found Ronni waiting for him in the editing bay. She had already opened the editing software and was organizing their footage.\n\n\"Hey,\" he said, out of breath. \"Sorry I'm late. I was out in my car. My mom called me.\"\n\n\"It's all right,\" Ronni said. \"You're not that late.\"\n\nCharlie sat down next to her. He wasn't sure why he had concealed the fact that he'd just been talking to Michelle. The lie had come easily and he didn't question it.\n\n***\n\nMichelle brought several outfits to Greenholt Gardens on Wednesday. They planned to film the final scene in the script, and Michelle's character Gwen would complete the transformation that had been occurring throughout the film, where her outfits shifted from dark and conservative in the beginning to bright and provocative at the end. Michelle had easily selected the previous dresses that she wore in the film, but for the final dress, she had trouble making up her mind.\n\nCharlie watched as Michelle held each dress in front of her. \"This one? Or this one? Or this pink one? Were you thinking the last dress would be pink?\" Some of the dresses she held up looked like they would barely fit her.\n\nCharlie consulted with Ronni, and they decided on a sleeveless dress with a bright floral print. Michelle went off to change. Darren and Kim arrived while she was gone, and they walked to the day's filming spot, an area with tables and chairs near the Japanese Garden. After a few minutes, Nick arrived escorting Michelle. Charlie couldn't help watching her as she arrived. The dress was shorter and tighter than he expected, clinging to her curves and displaying her long legs. When he turned towards his actors, he could see Darren was also watching Michelle's arrival with appreciation.\n\n\"Beautiful dress,\" Kim commented. \"Looks great on you, Michelle.\"\n\n\"Thanks.\" Michelle smiled and looked down. Their admiration was making her shy.\n\n\"We need to start,\" Ronni reminded Charlie. \"We don't have a lot of time.\"\n\n\"Right,\" Charlie agreed. \"Everyone in your place. We'll start with the wide shot.\"\n\nCharlie went behind the camera and started recording. He signaled the actors to start the scene. The screen on the camera displayed what was being recorded. Darren on one side, Kim on the other, and between them, Michelle. Michelle in her tight flower dress, with her coy smile. She was meant to represent the secret love between the other two characters. The way the light glowed behind her, she looked like she had a halo.\n\nCharlie felt more and more anxious as they went through their shot list. This was probably going to be their last chance to get any footage for the film, and wanted to get everything they needed. \"That dress really catches the light,\" he murmured to Ronni while he focused the camera on Michelle. \"Look at the way the colors pop on the screen. She's going to dominate the whole scene. Max and Ingrid are going to look like they were filmed in black and white compared to Michelle.\"\n\nHe had written the film as a ploy to have Michelle walk naked through these gardens. But now, on the last day of filming, he really started to feel like the movie might be something worthwhile. Something he could show to the film professors at Jefferson University, something they would appreciate. Maybe even something he could enter into short film festivals.\n\n\"We have a lot to do,\" Ronni kept reminding him. \"Don't fixate on one shot.\" But when Charlie focused the camera on Michelle, he knew that he wanted her to look perfect on the screen. He wanted her to look like a star.\n\nEventually, Darren spoke up. \"Fifteen minutes left,\" he said. \"Do you have everything you need, Charlie?\"\n\n\"Just fifteen minutes?\" Charlie checked the clock and saw that Darren was right. The time had flown by.\n\n\"I can't stay longer than that,\" Darren said. \"Not tonight.\"\n\n\"Same here,\" Kim said. \"I have plans.\"\n\nCharlie looked at Ronni. \"Fifteen minutes. I don't know. We've got footage for every shot on our list. Is there anything we need to redo? Or should we shoot from another angle? Any thoughts?\"\n\nRonni considered his question. Her eyes moved to Michelle and she studied the pretty cheerleader for a moment. \"Yes,\" she said. \"Maybe there's another way we can try the scene. What if we film it the way it was originally written?\"\n\n\"What?\" Charlie was confused.\n\n\"Michelle,\" Ronni said, \"let's run the scene again, but how about this time, we try it without the dress? Actually, would you mind doing the scene completely nude?\"\n\nShe said it so casually that Charlie could see the surprise bloom on Darren and Kim's faces as they realized what she had just suggested. Michelle's reaction was more immediate; she looked like she'd just been electrocuted. She stared up at Ronni with her mouth open, completely stunned.\n\n\"Ronni,\" Charlie spoke sharply. \"Don't.\" He stood up straight, almost knocking over the camera as he did it. Didn't Ronni understand where they were? Who they were with? Darren and Kim weren't part of the trusted circle, and they never would be.",
        "Ronni ignored him, focusing on Michelle. Still casual, she asked, \"What do you think, Michelle? Can you take off your clothes and we'll try to run it that way?\"\n\nMichelle blinked. She glanced quickly at Charlie, then turned back to Ronni, who was gazing steadily at her. \"Everything?\" she asked.\n\n\"Yes,\" Ronni said. \"Everything.\"\n\n\"Okay.\" Michelle nodded.\n\nDarren gaped at her. \"Did she say okay?\"\n\n\"Yes.\" Michelle nodded towards Charlie, as if he had been the one to suggest it. \"If you want to run it that way... if you think it could be good... that's fine. I'll do it.\"\n\n\"No way,\" Darren breathed. Kim looked around as if she thought it was a prank.\n\n\"Michelle,\" Charlie said quickly. \"That's all right. Keep your clothes on. This isn't supposed to be a nude scene.\"\n\nBut Ronni had already pulled out a blue duffel bag, a bag identical to the one from the week before, and she placed it on the table in front of Michelle. Charlie knew that he no longer had any way to stop this. Michelle stood, and he could see the tremble in her hands as she reached for the bottom of her flower dress. She was already feeling the rush of anticipation surging through her and he knew she was helpless to resist it.\n\nHer eyes darted between Darren and Kim as she hiked her dress up, revealing tiny black panties barely clinging to her hips. She peeled the dress up her body and pulled it over her head. Her bra was barely there, a sheer black wisp of a thing that didn't even cover her nipples. As she folded her dress to put it in the bag, she glanced at Darren and Kim, but neither of them was looking at her face. Darren was mesmerized by the sight of her nipples, and he gazed at her breasts with unconcealed interest.\n\nI need to stop this, Charlie thought. He tried to recall the way Michelle had appeared when she asked him to remove the nude scene, the discomfort she expressed at being naked in front of the two other actors. The fear that they might spread the story of her nudity around the school. He remembered her words from the previous Sunday: \"I've given the key to you,\" she had said. \"Because I don't trust myself with the key. I know I can't control myself.\"\n\nShe trusted him to be the one to set limits on her exhibitionistic behavior. And he was failing her.\n\nMichelle undid a clasp at the front of her bra and the fabric fell away from her breasts, exposing them completely. Her pale skin glowed in the artificial light, her nipples like hard buttons. She avoided looking at the circle of watchers as she placed her bra in the bag. Those flimsy black panties, now the last thing she wore, and she slid them down her legs without any hesitation. She put her panties with the rest of her clothes in the bag.\n\nNaked. She was completely naked. All because of Ronni. Charlie had trusted Ronni with Michelle's secret, and Ronni was exploiting it to humiliate Michelle. Just like the first day at Greenholt Gardens, the day that Ronni insisted Michelle be naked when she met Nick.\n\n\"Are we really doing this?\" Kim asked. \"Are we really running the scene with her nude?\"\n\nRonni pulled the bag off the table. \"Yes, we are,\" she said.\n\nMichelle sat down in her chair. Darren couldn't stop looking at her. \"Are you cold?\" he asked, then laughed before she could answer. \"Wow, Michelle. I knew you had a body. But damn. You really do have a body.\"\n\nMichelle's hands went down to rest on her bare legs. Her fingers nervously traced lines on her upper thighs. \"Thanks,\" she murmured.\n\nCharlie clinched his jaw. He couldn't stop what was happening, not anymore. He would only further humiliate Michelle if he tried. She had been asked to strip nude for the film, and she had complied. Later, she could claim that she did it out of a sense of obligation towards the film, or because of an unyielding faith in the artistic vision of the director and producer. If he pushed her to put her clothes back on, he would be making it clear to everyone that she had stripped of her own accord. No, she was already naked; he might as well use the opportunity.\n\n\"We'll try it this way,\" he said. \"Are you sure you're comfortable, Michelle?\"\n\n\"I am a little cold,\" she said. \"But I'm fine.\"\n\n\"Then let's run through the scene.\" Charlie aimed the camera. \"Just remember, Max and Ingrid, you don't notice anything odd about her nudity. Just go along with it.\"\n\nHe looked through the viewfinder, and it was like he looked through a stranger's eyes, seeing the tableau in front of him as if he had unexpectedly come across it. Darren as Max on the left, Kim as Ingrid on the right, both of them dressed for an elegant luncheon, and between them, Michelle, completely naked. The image struck him as extremely erotic. Her nudity was shocking, a complete contradiction to the rest of the scene. The light radiated from Michelle's skin, glowing against the darkness, and the way that she sat, the curve of her breasts turned slightly towards Darren, conveyed a level of intimacy that felt perverse. It was a man and a woman, sitting together, and between them, a naked woman submissively offering herself to the camera.\n\n\"Action,\" Charlie said, and started the camera recording.\n\nHe had to give credit to Darren and Kim. Both of them delivered their lines clearly and in character, showing no signs of being distracted by Michelle's nudity. Charlie wished he could say the same for himself. He stared at Michelle through the viewfinder, both aroused and distressed by her appearance. They had broken the unbreakable rule, exposing Michelle in front of the other actors, putting her in a situation where her secret could spread through the school. What had Ronni been thinking?\n\nHe kept the camera recording, even though he knew that none of this would make it into the final edited movie. The script didn't have a nude scene; he had taken it out, and he had taken it out for a reason. He would destroy this footage, record over it later. Why would Ronni ask Michelle to run the scene this way? Was there any possible reason, other than to humiliate Michelle in front of the other actors?\n\nWhen he thought about it, this was the third time Ronni had asked Michelle to strip, and Michelle had complied each time. Michelle had been naked in front of Ronni lots of times. Charlie wasn't the only one with the key to unlock Michelle's secret fetish. Apparently, Ronni had the key, too. And she had shown she couldn't be trusted with it.\n\nDarren messed up a line. They restarted the scene. Charlie could see that Michelle was getting turned on, and he prayed that no one else could tell. He could see it in the way she sat, the way she anxiously ran her fingers through her hair, the way she touched her upper thighs. He could see Darren's eyes peeking down between Michelle's legs, and he could see Michelle carelessly sitting with her legs apart, giving Darren a clear view of her most private part.\n\nThose last fifteen minutes couldn't pass fast enough. Charlie stopped everyone right in the middle of the scene. \"That's time, everyone. Let's stop. I know you guys need to leave.\"\n\n\"I think I can stay a while longer,\" Darren said.\n\n\"That's all right,\" Charlie said brusquely. \"Michelle's getting cold. We have what we need. Where's her clothes?\" He looked around for Ronni, finally locating her to his left. \"Ronni, can you give Michelle back her clothes?\"\n\n\"Okay,\" Ronni said. \"They're in a blue bag.\"\n\n\"Where's the bag?\" Charlie was struggling to control his temper. He didn't want to confront Ronni until Darren and Kim left.\n\nRonni made a show of looking around. \"I'll find it,\" she said, and walked away.\n\n\"Should we do that scene again?\" Darren asked. \"I can stay a few minutes. We didn't get to finish it.\"\n\nThankfully, Kim spoke up before Charlie could snap at Darren. \"Sorry,\" she said as she stood up. \"I really need to get going. I have a thing to get to.\"\n\n\"Right,\" Charlie said. \"Thanks, Kim. I appreciate the work you put into this.\"\n\nMichelle also stood. \"Good night, Kim!\" she said, approaching the actress. \"It's been fun acting with you.\" She leaned forward and gave Kim a hug, and if Kim found it at all unusual to be hugged by a naked woman, she didn't show it.\n\n\"Bye, Michelle,\" Kim said. \"You did great. See you at school.\"\n\nKim disappeared in the direction of the snack bar. Ronni still hadn't returned with Michelle's clothes. \"I'd better go, too,\" Darren announced. He looked towards Michelle, who was still standing, and Charlie suspected he hoped to receive his own naked goodbye hug. Michelle didn't disappoint him. Charlie clinched his jaw as he watched Michelle approach Darren and embrace him. Darren's hands moved over her back, enjoying the opportunity to touch her soft skin. He prayed that Michelle wouldn't give Darren the same goodbye kiss that she usually gave Nick. Thankfully, she didn't. He was also glad to see that Darren's hands didn't descend far enough to sneak a feel of Michelle's bare ass, although they came close.\n\nRonni reappeared with the blue bag and Michelle was finally able to start putting her clothes back on. Darren hesitated; he seemed like he wanted to linger and watch Michelle dress. \"Hey, Darren, can you help me with these extension cords?\" Charlie called out to him.\n\n\"What?\" Darren reluctantly pulled his attention away from the cheerleader. \"Oh... sorry. I can't. Actually, I really should get going.\"\n\n\"Oh, okay.\" Charlie forced a smile. \"Well, thanks for agreeing to be in our film. I appreciate your time and effort.\"\n\nDarren shot a quick glance at Michelle, who had only managed to put on her panties. \"My pleasure,\" he said. \"Can't wait to see the finished cut.\" After a moment, he turned and left.\n\nCharlie waited until Darren was out of sight. Then he turned to Ronni and let his anger free. \"Ronni!\" he snapped. \"What the fuck! What were you thinking?\"\n\nRonni looked surprised. \"What?\"\n\n\"You knew the script we were filming! You knew we were doing the clean version because Michelle didn't want to do a nude scene! Did you think it would be funny to humiliate her? Why the fuck did you ask her to take off her clothes?\"\n\nRonni was stunned by his anger. \"Charlie...\" Her voice was a whisper.\n\n\"Like the first day she came here, right? You told Michelle to leave her clothes in the car because you wanted to humiliate her in front of your brother. Remember? And now you go and do it to her again! Right in front of those other two, who are probably going to be blabbing about it all over school tomorrow! Why would you do such a despicable thing? What's wrong with you?\"\n\n\"Charlie!\" Her voice was insistent. \"Charlie, just listen.\"\n\n\"What? What is it?\"\n\n\"It was her idea.\"\n\nCharlie stared. \"What?\"\n\n\"It was Michelle's idea. We talked about it. We set it up. It was all planned.\"\n\nCharlie faced Michelle, who was still wearing just her black panties. She looked uncomfortable. \"It was your idea?\" he asked. \"You knew it was going to happen?\"\n\n\"Yes.\" She nodded, embarrassed.\n\n\"The whole thing,\" Ronni said. \"Even the bag. I was supposed to misplace the bag so she would be stuck without her clothes. It was the plan.\"\n\nCharlie struggled to absorb this new information. For fifteen minutes, he had seethed at Ronni for what she had done to Michelle... and it had all been Michelle's idea? \"Why?\" he asked her. \"I mean... why didn't you tell me?\"\n\nMichelle shrugged and smiled. \"I wanted to surprise you. I thought it would be fun.\"\n\nHer idea. The whole thing. Charlie replayed the evening in his mind from this new perspective. All the while they were filming, Michelle was waiting for that moment. Anticipating it. The moment when Ronni would ask her to strip in front of everyone and she would do it. Without argument, without hesitation. Strip naked in front of the other two actors, who wouldn't be expecting it; in front of Darren, who would gaze at her and want to fuck her.\n\nCharlie now understood that when Ronni asked Michelle to undress, Michelle wasn't surprised. They had planned it. Michelle wanted to be naked. She wanted it to be filmed. The lost blue bag, the naked hugs, Michelle had expected all of it.\n\nCharlie looked at Ronni. \"Um... I guess I owe you an apology, then,\" he said. \"I shouldn't have talked to you that way. I just... I didn't know.\"\n\n\"It's fine,\" Ronni said curtly. But she still looked upset.\n\nMichelle and Ronni had planned it. That was the other thing that Charlie had trouble wrapping his head around. Ronni knew that Michelle was an exhibitionist, and she'd seen Michelle naked many times. But Charlie had always considered Michelle's exhibitionism as a part of his relationship with her. The whole Bonnie and Clyde thing. The whole \"I've given the key to you\" thing.\n\nIf Ronni and Michelle were alone, and Ronni asked Michelle to strip, would Michelle do it? If Michelle went to Ronni's house, and Ronni told Michelle to leave her clothes by the door, would Michelle do it? How much control did Ronni have over Michelle anyway?\n\n\"I didn't think you would be upset about it,\" Michelle said. \"Isn't this the way you wanted the movie to be? Like your first script, where I'm nude in the last scene?\" Charlie noticed she wasn't wearing panties anymore. Now that Darren was gone, she had abandoned her pretense that she was getting dressed.\n\n\"You're not worried?\" he asked. \"That Darren and Kim will say something, and it'll get around the school?\"\n\nShe pushed her hair off her shoulders. \"I'm a little worried,\" she admitted. \"About Darren. I don't think Kim will say anything. But I don't know, is it really a big deal, if people hear about this? It'll just be a rumor. There's no proof. It won't be the first rumor about me to have gone through the school.\"\n\n\"There is proof,\" Ronni reminded her. She pointed at the camera. \"We're not going to use that footage for the film, right, Charlie?\"\n\n\"Um... no,\" he said. \"No. We won't use it.\"\u2028\n\n\"Then you'd better delete it,\" Ronni said. \"Before Darren figures out how to get a hold of it.\"\n\n\"Right.\" Charlie returned to the camera, which was attached to a tripod and pointing at Michelle. He pulled up the main screen and checked the library of recordings.\n\n\"Wait!\" Michelle burst out. \"Don't delete it! I mean, not yet. Can I watch it before you delete it?\" She swayed back and forth, her hands moving on her upper thighs. \"I think it'll be funny. I want to see the way Darren and Kim looked at me. I think we really caught them by surprise. Didn't we?\"\n\n\"You did,\" Charlie said. \"And me, too.\"\n\nMichelle giggled. \"Can I watch it?\"\n\n\"Now?\"\n\n\"Um... before you delete it.\" She looked around the dark garden. \"It doesn't have to be now, I guess.\"\n\nCharlie noticed that the camera was still pointing at Michelle. \"Since we're just going to delete it later, how about if we keep filming?\" he suggested. \"Behind-the-scenes footage. Putting away the gear after we've finished for the day.\" He pushed the record button and the red light appeared on the front of the camera.\n\n\"You're recording?\" Michelle asked. She faced the camera. \"What should I do?\"\n\n\"Nothing,\" he said. \"Sit. We'll get everything packed up.\" He waved at the camera. \"You're the star.\" Sit and let the camera record you, he thought. Put on a show. Michelle, the beautiful and naked star of their film, sitting and waiting for the crew to pack up all of the lights and equipment. Her clothes, in the blue bag, the first bit of equipment to be packed away.\n\nShe was clearly very conscious of the eye of the camera. Charlie kept an eye on her as he coiled an extension cord, noting how she slouched in her chair, one leg bent carelessly to the side, a sexy pose for the dark eye that recorded her. Perhaps she was putting on a show for herself; she knew she would be the one watching this video later.\n\nCharlie set down the extension cord and approached her. He leaned over and whispered in her ear. \"You look pretty turned on right now. Why don't you try and make yourself cum?\"\n\nMichelle gasped softly. She looked up at him; her uncertain eyes wondered if he was serious or joking. Then she leaned forward slightly and he knew she watched Ronni. He had made the suggestion spontaneously, provoked by a sly impulse to shock her with his words. Doubtful that she would actually do it, but maybe it would excite her to consider it. He went back to his work, retrieving the extension cord and winding it around his arm. When he looked back at her, she was still slouched in her chair, looking at the camera. Her finger traced a line on her bare thigh.\n\n\"Hey, you're all done?\" Nick's voice came from the darkness. \"I saw Darren drive away. You're packing up?\"\n\n\"Yeah,\" Ronni said. \"Do you want to help?\"\n\n\"Sure.\" Nick noticed Michelle, and he stopped to watch her for a moment. \"What's she doing?\" he asked Charlie. \"Is the camera still on?\"\n\n\"Yeah.\"\n\n\"She's letting you record her like that?\"\n\nCharlie glanced at Michelle. She had shifted in the chair so that she leaned against the left armrest. Her right leg was bent and angled to the side. A very unladylike way of sitting; her pussy was clearly displayed for the camera. Her fingertips stroked the soft, smooth skin of her inner thigh.\n\n\"We're going to delete the recording later,\" Charlie told Nick.\n\nNick nodded slowly. \"Right.\" He looked like he had more questions to ask regarding Michelle, but instead of asking them, he pointed at a set of lights. \"I'll take those down?\"\n\n\"That'd be great. Thanks.\"\n\nCharlie gathered the extension cords together one place and started shoving them into a large canvas bag. Behind him, he heard Nick whisper, \"Wow.\" Charlie peeked over his shoulder and saw that Michelle was now running her fingers over her pussy, stroking herself. She inserted a finger into her glistening slit, putting on a show for that silent, glass eye that recorded her. She didn't appear to be paying any attention to Nick, but Charlie was positive she was aware of Nick's presence, aware that he was a witness to her lewd behavior.\n\nRonni had disappeared to the snack bar with a box of assorted supplies; now she returned. She quickly identified her next task, a pair of lights attached to a tall stand, and started to disassemble them. Charlie didn't see the moment when Ronni noticed Michelle, but suddenly Ronni was standing right next to him. \"Do you see what Michelle's doing?\" she asked in a low voice.\n\nCharlie turned to look. Michelle was slouched in her seat and her hands were between her legs. She was openly playing with herself now. Her legs were spread apart and the wet fingers of her left hand moved in and out of her pussy. Her other hand rubbed circles against her clit. Her eyes were closed and her face was rapt with pleasure.\n\n\"Yes,\" Charlie answered Ronni. \"I see.\" He waited to see if Ronni would say anything else. When she didn't, he went back to packing the equipment. Ronni gazed at Michelle for a moment, then returned to the lights she was disassembling.\n\nCharlie, Nick and Ronni silently worked around Michelle, taking down and packing the rest of the equipment. Michelle acted as if she didn't see them; she sprawled naked in her chair, pleasuring herself while the camera recorded her. Charlie continued to work as if nothing was odd about the situation, and Nick and Ronni tried to do the same. But Michelle could be very distracting.\n\nWhat would Michelle think later, when she watched the footage and realized that the three of them had been moving all around her while she masturbated? At one point, Ronni was directly behind Michelle, visible to the camera, putting equipment in a bag. The footage would show a bizarre contrast between them, Ronni in the background, busy at work, and Michelle, naked in the foreground, furiously fingering herself.\n\nAs Michelle neared her climax, Ronni and Nick both stopped what they were doing and watched her. Charlie watched as well, but he did his best to be subtle about it. Michelle had her legs splayed open, just the tips of her toes touching the ground. Her back was arched, her head thrown back with her eyes closed, her dark hair cascading over the back of the chair. Her nude body glistened with sweat despite the cool temperature, her muscles tensing as her fingers spun against her clit. When she climaxed, she made no effort to remain quiet. Her high-pitched gasps resonated through the garden.",
        "She collapsed in the chair afterwards, the lights sparkling on her flushed and sweaty body. She looked spent but satisfied. At some point, Nick had retrieved some drinks from the snack bar; he picked up a cold bottle of Snapple and brought it to Michelle. Michelle noticed his approach. She looked up at him and smiled, and accepted the drink when he offered it. She didn't seem at all self-conscious about the fact that she had just made herself cum in front of him. Charlie suspected she was still high on the wave of euphoria that came from the orgasm. Later on, she would probably be shocked by the way she had acted.\n\nAnd of course, it was all recorded, if she needed evidence of what she had done.\n\nMichelle stood and took a long drink of the Snapple. She pushed her hair away from her face. Charlie couldn't help but admire her naked body as she walked over to him. With the flush of her orgasm still on her skin, she looked more exposed than she usually did. Funny how that was - he saw her naked so often, but sometimes she just looked more naked than usual.\n\n\"Hey,\" she said softly. \"Can you walk with me to the snack bar?\"\n\n\"Sure,\" he said. \"You want to bring that blue bag?\"\n\n\"No.\" She started walking, and Charlie quickly dropped what he was holding to walk with her.\n\nAfter about ten feet, Michelle took hold of his arm and leaned against him. She still walked slowly, and her body language was casual, but she spoke to him in an urgent whisper. \"Oh, god, Charlie!\" she moaned. \"I can't believe I just did that. In front of Nick and Ronni! I'm freaking out!\"\n\n\"It's all right,\" he tried to soothe her. \"They know how you are.\"\n\n\"They've never seen me like that before,\" she said. \"They probably think I'm a nymphomaniac.\"\n\n\"Ronni was the one who had you take your clothes off,\" Charlie said. He had his arm around Michelle, his hand resting on her side. He let it drift up to her breast. \"You planned this, right?\"\n\n\"Not that part.\" She shook her head. \"I'm just going to go. Okay? I can't hang around Ronni and Nick right now. I'm too embarrassed. Will you walk me to my car?\"\n\n\"What about the blue bag with your dress?\"\n\n\"You take it with you. I'll get it from you later. I have all those other dresses I brought, remember? I'll just wear one of those. Ahh! Charlie!\" She rose onto her tiptoes as Charlie slid two of his fingers into her pussy. Her hand clutched his shoulder.\n\n\"You're so wet,\" he murmured. \"You must have really been turned on.\"\n\n\"I was! Oh, I was!\" she gasped.\n\n\"We could tell.\"\n\n\"All of you, right? All of you could tell I was really, really turned on?\"\n\n\"Yes,\" he whispered. \"It was obvious. Even Darren and Kim could tell.\"\n\n\"Oh, Charlie! Stop it! Don't say that!\" She leaned against him for support, draping her arm over his shoulder like she was about to faint. \"I'll see them at school tomorrow. Darren and Kim. What am I going to say to them?\"\n\nCharlie didn't have an answer, so he kissed her instead. Michelle sighed as she kissed him back; her body moved up and down on his fingers as she fucked herself against his hand.\n\nThey reached the snack bar. Michelle walked around in a daze, gathering the unused dresses and tossing them in a pair of shopping bags. She didn't bother to get dressed, but instead walked naked to the back door of the snack bar with the bags slung over her arm. Charlie helped her carry two other dresses that were on hangers.\n\nFour cars remained in the parking lot. Charlie's, Nick's, Ronni's and Michelle's. Michelle opened her trunk and they put the dresses inside. She closed the trunk; the sound of it seemed to reverberate through the quiet night. Something pressed against her bare back. It was Charlie's hard cock.\n\nMichelle didn't say a word, just moved her feet apart and leaned against her car. Charlie pressed his palm against her ass, sliding it down between her legs, cupping her pussy. She was very slick; he would have no trouble entering her.\n\n\"Please,\" she whispered. \"Please do it.\"\n\nHe slid in, his cock like a sword finding its sheath. Michelle groaned. She moved against him, slowly at first, but increasing in speed. Charlie barely needed to move at all.\n\nHis hands gripped her hips, her skin warm under his palms. A cool wind blew, and Charlie wondered if it felt cold against her skin. In that spot where they were joined, where he was inside her, they made a sphere of warmth, and when she pushed against him, bringing his cock as deep inside her as it could go, the heat of their bodies merged. He felt like he could stay that way forever, with his cock imbedded inside her, only it was worth it to pull away so he could slide back in and experience the same exquisite sensation anew.\n\nIt didn't take long, not with the way she was grinding against him. He pulled out, holding his cock above her back, and a stripe of cum launched onto her flesh. One, two, three, four lines, crossing her back. He lingered over her, letting his cock soften, a few final drips. He pushed his cock back into his pants. Michelle stood up. The cum trickled down her body.\n\n\"Bye, Charlie,\" she said. \"I'll see you tomorrow in school.\"\n\n\"Bye,\" he said, and he kissed her. She stood by the door to her car, waiting, and watching him as he left. Even as he returned to the gardens and let the door shut behind him, she still stood there, watching and waiting, as if it was important for him to see her left that way, naked in the parking lot, her body streaked with his cum.\n\n***\n\n\"Did you bring it?\" Michelle texted him the next day, He knew what she was referring to. She wanted to see the video from the night before. He had promised to let her watch it before he deleted it.\n\n\"Yes,\" he texted back, and they made arrangements to meet at lunchtime. They would meet at his car, which he would park in the back corner of the school parking lot. Michelle wanted to watch the video, but she didn't want anyone to catch her watching it.\n\n\"Oh my god,\" she breathed as they sat together in the car and the video played on the camera's view screen. The screen showed her naked, sitting between Darren and Kim, running the lines of the scene. \"It's true,\" she whispered as she gazed at the screen. \"What you said, that Darren and Kim can tell I'm turned on. It's really obvious, isn't it?\"\n\nCharlie didn't answer. He let her continue to watch the video.\n\n\"On my god!\" Now the screen showed her with her legs spread, her glistening pussy displayed in perfect focus. She was stroking herself in the video. \"I can't believe I did this. Oh my god, Charlie! They really think I'm a pervert, don't they?\"\n\n\"You mean Nick and Ronni?\" he asked.\n\n\"Yes, Nick and Ronni. And Darren and Kim. They watched me do all of this. Oh my god!\" She was masturbating on the screen, her hand grinding against her pussy, and in the background, Nick crossed the screen, moving from right to left.\n\n\"Yes,\" Charlie said matter-of-factly. \"They think you're a pervert.\"\n\n\"Charlie! Don't say that! But is it true? Oh my god! It must be true. Right?\" She pointed at the screen. \"There's Ronni! She's right behind me! And look at what I'm doing!\"\n\n\"Didn't you know she was right there?\"\n\n\"I did. I knew Nick was right there, too. I knew all of you could see me. You could see everything I did.\" She pressed her hand against her face, peeking at the screen through her fingers. \"It made me so hot. I knew I was being such a pervert but it made me so hot.\"\n\n\"Here's where you cum,\" Charlie murmured.\n\nMichelle didn't answer. Her eyes were fixed on the screen, watching the Michelle she had been the night before, witnessing the moment when she brought herself to the threshold of an orgasm and then surged past, the moment when the pleasure flooded through her and her body trembled and shuddered.\n\n\"It seemed like a good one,\" Charlie observed.\n\n\"It was,\" Michelle said. \"It was a very good one.\"\n\nOn the screen, Michelle was leaning back in her chair, out of breath, and Nick appeared behind her, offering her a drink. Michelle smiled up at him as she accepted the bottle.\n\n\"You seem really happy right there,\" Charlie said.\n\n\"Yeah. I felt so good.\"\n\n\"It's funny,\" Charlie said. \"Because right after, you said you were freaking out.\"\n\nMichelle nodded thoughtfully. \"I did. Later I freaked out. But right then, at that moment, I felt really good. I wasn't worried about anything.\" She pressed the rewind button on the camera and the screen jumped back a minute. Again, the Michelle on the screen smiled and accepted a drink from Nick in his security guard uniform. She sipped the drink, all modesty forgotten as she slouched in her seat with her legs apart.\n\n\"You look amazing there,\" Charlie said. \"You look so confident.\"\n\n\"I felt like I wasn't myself anymore,\" Michelle murmured. \"You know what I felt like? One of those slutty little devil girls.\"\n\n\"One of what?\"\n\n\"You know the ones I mean. Like the kind that men get on tattoos. Where the woman has little horns, and a little pitchfork, she's completely naked but she doesn't care. A slutty little devil chick who loves to fuck and wants everyone to know it.\" She chuckled. \"Or maybe that is the real me.\"\n\nCharlie stopped the video. \"Are you ready for me to tape over it?\" he asked.\n\n\"I guess so. Part of me wishes we could keep it. But I don't know where we would put it and have it be safe. So I guess you should tape over it.\"\n\n\"Okay.\"\n\n\"But you don't have to do it right now.\"\n\n\"Okay.\"\n\n\"Because I want to fuck.\"\n\nCharlie glanced out the car window. \"Here?\"\n\n\"Yeah. I want to. And I know you're ready.\" Her hand fell onto his lap, squeezing the erection that was visibly pushing against the front of his jeans. She took a moment to hike up her skirt and find her panties, then she slid them down her legs and left them on the floor. \"A quick one. No one will see. My skirt will be over us, it'll hide everything.\"\n\n\"If anyone passes by, they're going to know what we're doing.\"\n\n\"No one will pass by. We'll be quick.\" She undid his zipper and found his cock, pulling it free. She squeezed it, stroked it, even put her mouth on it and licked it a few times, all while Charlie was glancing around nervously to make sure no one was watching them. Then she climbed on top of him.\n\nCharlie reclined the seat all the way down, so that he was lying mostly horizontally, and she was lying on top of him, also mostly horizontally. Charlie reached down and guided his cock into her. He was ready; so was she. He slid easily into her.\n\nThey moved slowly, Michelle barely coming off of him as she moved against him. Mostly it was about having his cock inside her, the sensation of filling her, a slow grind of their bodies moving against each other. He liked the feel of her weight on top of him, the scent of her.\n\nHer body jerked suddenly and she bit her lip, reveling in an orgasm that had come very quickly.\n\nShe climbed back into her seat. Charlie's cock was still out, gleaming with her juice and she reached down and stroked it in her small hand, watching his face as she did it. Charlie also came quickly, in less than a minute, and Michelle leaned forward at the pivotal moment to suck every drop of his cum into her mouth. She popped open the car door on her side and spit it out onto the asphalt.\n\nCharlie pushed his softening penis back into his pants, gazing at Michelle while she opened the glove compartment and retrieved the pack of spearmint gum he kept there. He couldn't remember how she knew he kept gum in the glove compartment. The clock on the dashboard showed ten more minutes until lunch ended. \"I saw Darren this morning,\" he told Michelle.\n\n\"Oh? What'd he say?\"\n\n\"He was asking about the video footage from last night. He wanted to know if he could see it. That is, a specific bit of it from the end.\"\n\n\"God. What did you say to him?\"\n\n\"I told him to give me his e-mail address, and I'd send it to him.\" Charlie said this with a straight face, but Michelle flashed him a look.\n\n\"No, you didn't. Now I know you're joking.\"\n\n\"Actually, I told him that particular bit of footage was lost. I told him Ronni might have erased it, but I didn't know for sure, all I knew was it was gone when I checked later.\"\n\n\"Did he believe you?\"\n\n\"I don't know. He asked if you'd been in any of my other films. And if he could see them.\"\n\n\"Hoping for more nude scenes, I guess.\"\n\n\"Yeah, probably.\" Charlie watched Michelle leaning down to put her feet back into her panties. \"He did get a nice nude hug from you. He should be happy.\"\n\n\"I know, right?\" Michelle pulled her panties up, leaning back against the seat while she did it. \"How much time do we have left?\"\n\n\"Six minutes.\"\n\n\"Better delete those videos from the camera.\"\n\nCharlie picked up the camera and found the footage from the night before. He scrolled through the list of videos until he found the ones they had just watched. He pushed the delete button, and the camera asked him to confirm.\n\nMichelle was leaning over, watching what he did. \"I wish we didn't have to delete them,\" she murmured regretfully. \"I know I won't be able to believe I did something so crazy, and I'll wish I could watch the evidence again.\"\n\n\"Yeah...\" Charlie agreed, but it had to be done. He pressed yes to confirm. The video disappeared. He went down the list, deleting, until he deleted the last video, the video of Michelle pleasuring herself in front of Ronni and Nick.\n\n\"Charlie...\" Michelle said.\n\n\"Yeah?\"\n\n\"I think we should make your movie the way it was supposed to be made. The original script. I want to do it.\"\n\n\"The film is done. We already shot everything.\"\n\n\"I know. You should finish the clean version of the movie, and show it to whoever you want, at the school or your Jefferson University film program, or whatever. It'll be really good and I think everyone's going to love it. But I think we should make another version, just for us. The way you originally wrote it. With the nude scenes. I want to do the nude scenes.\"\n\n\"Film the whole thing again?\"\n\n\"We still have Greenholt Gardens to film at. You have all the scenes broken down, you know all the shots you need. It'll be easier the second time.\"\n\n\"What about the other actors? Darren and Kim? They've already put a lot of time into this.\"\n\n\"No, not Darren and Kim. You're right, we couldn't ask them to do it all again. We'll need new actors.\" Michelle smoothed her skirt over her legs. \"I just think we should do it. I want to do it.\" She looked at the time. \"Better go. Think about it, okay?\" She gave him a quick kiss and took off for her next class."
    ],
    "authorname": "jessica_tang_vonharper",
    "tags": [
        "exhibitionism",
        "voyeur",
        "cmnf",
        "public nudity",
        "public sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/saturday-night-school-ch-12"
}