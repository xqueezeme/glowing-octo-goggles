{
    "title": "Merely Players",
    "pages": [
        "<p align=\"center\">This story can be read as a stand-alone, but would be improved if you had previously read \"No Strings Attached\" and \"Santa Mike\".</p>\n\n\"Gatorade.\"\n\nBelinda, my manager, handed me an ice-cold bottle and I chugged it down. Ninety minutes of singing and shaking what I've got under those lights and I was completely drained. I've never had a drug or another experience that comes close to capturing what I feel on stage. It's like a different life up there. It's transformative. I'm not Charlotte, a woman fighting a losing battle against aging; I'm the rock-star, a conduit for the energy the fans shower upon me.\n\nI return everything they give me and add in every ounce of who I am. When I'm out there I feel alive and finally at home, like the rest of my life was spent sleepwalking but on stage, I was awake and doing what I was born to do.\n\nThe wave of that near euphoria carried me over to the meet-and-greet. For many of the fans that got a pass, it was a lifetime experience. I did my best to honor that. Yeah, I did this day in and day out, but this would be their only opportunity to meet me, someone who'd they'd been supporting for decades. They deserved my best and I gave it to them.\n\nBelinda made sure that passes were color-coded. Contest winners were the casual fans. Nothing wrong with that, but they got a minute or two and a picture. The once-in-a-lifetime fans got more of my time and Belinda made sure she had a box behind the table with merch. I made an effort with all of them, but if I clicked with someone, I signed a shirt or a hat or recorded their outgoing message on their cell phone. They usually know someone who knows someone or they pay crazy prices to get a pass from a contest winner.\n\nI was planting a kiss on the cheek of one of them for a photo when I spotted Billy and Joanne. I gave them a wave and a wink from across the room. They'd hung back and were eating from the small buffet as they let the first-timers enjoy their moment. They were from the third group, my favorite.\n\nI'd been performing for over thirty years and Mike had started my fan club more than a quarter-century ago. Every show in every town had at least one person I'd met many, many times over the years. They were more friends than fans and they'd often bring baked goods and photos of their kids. I'd known some of them for almost half my life.\n\nWhen Belinda escorted everyone else out, Billy and Joanne came over. I hugged each of them.\n\nWith narrowed eyes, I looked at their empty hands. \"Okay, c'mon, where is it?\"\n\nThey laughed and Billy walked over and grabbed a cooler from under a table. If there is one thing that my die-hards wanted to do, it was to share a part of who they were with me. That usually came in the form of food. People were invariably proud of at least one place in their town that had a unique dish or they made me something from an old family recipe.\n\nMy eyes widened in anticipation. \"There it is!\"\n\nJoanne opened the cooler and pulled out the cioppino she'd made and the sourdough bread from Boudin Bakery on Fisherman's Wharf. Taking the lid off the seafood stew I nearly swooned as the aroma hit me.\n\nWe sat and talked for almost an hour as they caught me up on their lives. They were two of only five people who knew I frequented my fan forum as AlohaGirl34. It was a private forum with zealous admins. You had to be the most die-hard of fans to even know it existed. We kept up with each other's lives and shared tragedies and triumphs.\n\nI was insanely lucky. My career had exceeded any reasonable expectations. As much as I griped, Belinda was competent and kept things rolling and my fans were the sweetest, most loyal in the business.\n\nWithin an hour of their heading home, I'd showered and was in my room backstage with the professor as he looked over his notes and then up to me.\n\n\"So, what about the billboard with the eyeglasses? Was that just filler or did it mean anything?\"\n\nI liked the way he spoke to me, as if we were just having a conversation. He was cute, too. I'd always had a thing for the preppy, brainy types. If he wasn't twenty years younger than me and we weren't moving on to another city in two days, I'd consider jumping his bones. At 52 I was past that one-night fling stage. The way he pushed his long hair back and looked at me with those grey eyes had me rethinking that policy.\n\nSmiling, I put down my notes. \"I don't think Fitzgerald ever had anything that was just filler. The glasses represented society looking down their nose at the decadence of the twenties. Like a Greek chorus, it's the moral voice of the people.\"\n\nHe smiled back and those dimples killed me. I was sure he was a hit with all the coeds he taught. \"And you disagree with their moralizing?\"\n\n\"I do. They're only condemning the lifestyles because they can't participate.\"\n\n\"Interesting, Charlotte. Let's go a bit deeper. What if it's not just some prigs looking down on the social elite? What if eyeglasses represent logic and sobriety and post-war sensibilities while the Roaring Twenties and the opulent Long Island gold coast represents heat and passion? What if it's a Dionysian and Apollonian duality?\"\n\n\"That's--\"\n\nThere was a firm knocking on my door. Sighing, I rolled my eyes. I'd never gone to college; I was too busy being a rock star. After thirty-six years in the business, I had enough clout and money to indulge myself. I'd gone through pretty much every vice possible and was almost terminally bored. I'd decided that I'd get the education that I'd missed, but do it my way. My rider had a stipulation that a professor be brought in for two hours after every concert. The venue would be notified of the field of expertise three weeks in advance.\n\nI called out. \"Go away!\"\n\nTurning to Professor Hottie, I apologized. \"Sorry. It's the fiftieth show of the tour and the crew's having a party. I got some food trucks to come in and everyone's having a good time. They probably want me to make a speech or something. We're here tomorrow too, so we don't have to break down right away. Apollo and Dionysus. You think--\"\n\nThere was more knocking.\n\nThis was ridiculous. \"I'll be out in a bit. Give me thirty minutes!\"\n\nThe voice was muffled as Belinda spoke through the door. \"Charlotte, it's some cops.\"\n\nShe sounded nervous. I yearned for the days when it was Mike handling things and making cops nervous about me instead of Belinda jumping at her own shadow.\n\nI smiled again at the professor and put down my tea. \"This is embarrassing. Give me two minutes.\"\n\nIn sweats, slippers, and an oversized hoodie, I was sure that I wasn't what any cops were expecting. I looked more like some eccentric aunt than a rock legend. Pulling open my door I saw four uniformed cops, a woman whose look screamed 'government bureaucrat' and my for-now manager.\n\n\"What can I do for you?\"\n\nThe woman spoke. \"This sounds silly, but I need to see some ID.\"\n\n\"Listen, the crew is just pent-up and a little stir crazy. Did something happen in town? I'll cover any costs and absolutely have them shut things down.\"\n\n\"Ms. Kahale, it's nothing like that. I really do need to see some ID.\"\n\n\"Yeah, two minutes.\" I went back into my room and grabbed my purse. \"Driver's license good?\"\n\n\"Fine.\"\n\nAfter I showed it to her, she asked if she could step inside. Lamenting the loss of great literature and amazing dimples, I waved her in.\n\n\"Ms. Kahale, I'm very sorry to have to tell you that your brother Brian and his wife were in a car accident three days ago. They didn't make it. Your nephew wasn't in the vehicle, but their will left no provisions for his custody.\"\n\nI couldn't process what she was saying. \"What?\"\n\n\"I'm terribly sorry. The young man is fine, but I'm with CPS and there are no other relatives. Since you were within driving distance, I thought I would come in person.\"\n\nShe wasn't making any sense. Brian couldn't be dead. \"No... He... Brian's just a kid. He...\" I smiled. Why did I smile? \"This has to be a mistake. He's the baby. You're wrong. This is all a big mistake.\"\n\nHe wasn't a kid. My mind knew that, but in my heart, he was always the baby of the family. Brian had to be at least forty by now, but he was fine. He had to be. My little brother was all I had left. Belinda must have said something that I missed because the professor, the woman, and the cops left the room as she held me.\n\nI clung to her and my desperate hope that this was some sick nightmare.\n\nWe sat together for hours and I told her all my stories. Brian had been the baby of the family and the only one of us that was normal. My oldest brother had been in the military and then worked private security for celebrities. Mike served with him in the army before helping me start my career. Our sister had owned a little restaurant that catered to surfers but made money by being noted for its authentic Hawaiian food in travel guides. The tourists had no idea that she'd paid off the writers. Our other brother had been a cop who had worked vice.\n\nThey'd all passed, leaving me and Brian, our parents \"oops\" baby. He'd been an accountant. A freaking accountant. How could I have outlived them all? Brian had been four when I started my career and I treated him like a toy instead of a human being. I'd pop in and out of his life with presents and a hug and otherwise ignore him. My own flesh and blood, and I'd ignored him.\n\nWe were nearly two bottles of wine and endless tears in when Belinda turned to me.\n\n\"Didn't the woman say something about a nephew and custody?\"\n\nI was just so damned tired. There was an urge to lie down and pull the covers over my head and pretend that none of this was real, but it was. My parents were gone. My siblings were gone. Somewhere out there was a nephew who'd lost his parents.\n\n\"Yeah. Get Mike on the phone.\"\n\n\"You sure? I can--\"\n\n\"No, you can't. Get Mike.\"\n\n\"Okay.\" There was a hint of resentment in her voice.\n\nMike hadn't been my manager in decades and Belinda clearly thought that if I was turning to someone to get shit done, it should be her. He'd been my first manager and had taken me from playing high schools in Hawaii to selling out stadiums across the world. Mike had retired ages ago and she thought he was a dinosaur. She didn't realize that some dinosaurs had really big teeth.\n\nI needed someone with more bite than bark, and besides, Mike was the closest thing I had left to a brother.\n\nBelinda stepped out of my room and was back in five minutes with some food and hot chocolate.\n\n\"He's waiting for your call.\"\n\nI patted my pockets and looked around the room. Belinda shook her head. \"Here.\" She tossed me my phone, which had been on the stand next to the bathroom.\n\n\"Thanks.\" She stood there. \"Can you give me a few minutes?\"\n\n\"Yeah, of course.\" The door closed behind her with a resounding thud.\n\nMike picked up on the first ring.\n\n\"Hey, Jollo, don't do that shit again, okay?\"\n\nWhen Mike had come to Hawaii from the army to stay with my older brother he called me Charlo. Brian pronounced it Jollo and it stuck. It had bothered me for a while but now I wouldn't change it for the world.\n\n\"Mike...\"\n\n\"Seriously, Belinda does good by you. Don't have her doing that bullshit 'Are you available for a phone call from Ms. Kahale' shit. Just pick up the phone and call.\"\n\n\"Mike...\"\n\nHe was quiet for a moment, probably hearing the despair in my voice. \"Jollo, what's wrong?\"\n\n\"Brian, he... God, Mike. He was in an accident. He's gone.\"\n\nThere was a sudden intake of breath. \"When?\"\n\n\"I think they said three days ago.\"\n\n\"His wife? The kid?\"\n\n\"The kid's fine, I think. He wasn't in the car. Brian and Samantha didn't make it.\"\n\n\"Okay, let me get started. Where are you now? I'll reach out about arrangements for Brian and get you a flight to Cali.\"\n\n\"I'm here. In Frisco.\"\n\n\"He was in Davis, right? Did you see him?\"\n\n\"No... Mike, he was what, seventy miles away? Eighty? I was planning on calling him tomorrow, but I probably would have blown that off and convinced myself that he'd be too busy and I'd catch him next time. What the hell sort of sister am I?\"\n\n\"Don't be thinking like that. Hang out with the crew tonight. Make Belinda stay with you until you fall asleep. Have her call me. Cancel your next few shows. I'm gonna hop on a plane and see what I can find out.\"\n\n\"No, Mike, you don't have to--\"\n\n\"Don't give me that shit, Jollo. I knew Brian for thirty-five years. I'll be on the first flight.\"\n\n\"Mike?\"\n\n\"Yeah?\"\n\n\"Love you.\"\n\n\"I love you too, kid. Try to get some sleep.\"\n\n*****\n\nBelinda had wanted to book me in the Ritz-Carlton, but I preferred staying in my touring bus with my things around me and in my bed. I woke twice and forced myself back to sleep so I wouldn't have to deal with reality. My bladder finally forced me up. Belinda had my coffee and two slices of cinnamon raisin toast.\n\nTaking my breakfast back to bed, I pulled out my laptop and logged in to the forum. I had three private messages waiting. I answered them and scanned the subforums. The members shared most of their lives with each other. We took up collections to send baby stuff to new mothers. There were fantasy baseball and football leagues just for members. One member had a grandson who was in prison and had a little prayer group going on. We were like an extended distant family.\n\nI typed and erased what I had three times before trying again. This time I kept it simple.\n\nI found out that my brother and sister-in-law died last night. Sorry. They died before that. I think three days ago. I found out last night. I'd appreciate any prayers or good thoughts. He was a good man and a dad. I may be offline for a while.\n\nSighing, I closed the laptop. It was odd to think that I felt better, but I did. At least marginally. They knew me only as AlohaGirl34, and I preferred that. I was just another member of the community. After showering and changing, I found Belinda near the front of the bus.\n\n\"What's going on?\"\n\nShe pushed her glasses up higher on her nose. \"I canceled tonight's show and told the venue manager that we might have to cancel tomorrow.\"\n\n\"How did he take it?\"\n\n\"Well. Your reputation stands you in good stead.\"\n\nWho the hell uses phrases like 'good stead'? \"Yeah, okay.\"\n\nI was known for not missing shows, ever. I'd broken my leg once and played that night on a stool.\n\n\"Reach out to everyone from the Fan Club that had tickets through our site and send my apologies. Figure something out for them. Maybe closeouts from our concert tees. What else?\"\n\nShe raised an eyebrow. \"He's here.\"\n\n\"Mike?\"\n\n\"Yes, Mike.\"\n\nI felt a little better just knowing he was around. Opening the door, I headed down the three steps and saw him standing about ten feet away. He was holding a birch beer in one hand and had his phone glued to his ear with the other. As always, he looked like a haole extra from Hawaii 5-0 with sandals, khaki shorts, and a red floral-print shirt that was ugly as hell and twice as loud.\n\n\"Hey, Mike. Glad you're here. Where's your better half?\"\n\nHe hung up before answering. \"Wrapping stuff up at home. She's flying in tonight. You okay?\"\n\n\"No. I'm not okay. I'm pretty far from okay.\"\n\nHe nodded, walked over, and pulled me into a hug. \"I'm sorry, Jollo. It sucks. He was a good kid. I pulled some stuff together. You ready to get going?\"\n\n\"Yeah.\"\n\nTurning around, I headed back onto the bus, but Belinda met me and handed me an overnight bag. After grunting a thanks, I headed back out. Mike and I were on I-80 talking about anything but Brian. After we ran out of things to talk about, I finally asked him what he'd set up.\n\n\"Found Brian's church on his Facebook page and reached out to his pastor. Viewing tonight, funeral tomorrow. I upgraded everything. Coffins, plots, got food coming in for a reception at the church. Hired some musicians. Some Town Cars to take us to and from. Found a travel agent who reserved thirty seats on Alaskan Airlines and made a few calls. Friends are coming in from Kahului. All the seats are taken. They'll be here by 4:45.\"\n\nI stared at him for a minute. \"What are you, a fucking machine?\"\n\nHe shrugged. \"I get things done. Speaking of that, so does Belinda. You need to cut her some slack.\"\n\n\"She's fine.\"\n\n\"She's better than fine. That woman's been working for you forever, and she does a damned good job.\"\n\n\"She's...\" not you. I couldn't verbalize that last part. There was never anything romantic between the two of us, but I idolized Mike when I was younger and probably still did.\n\nHe shrugged. \"Yeah, just, I don't know. Buy her something nice or give her a raise once in a while. You're not the easiest person to get along with.\"\n\nAfter a while, I looked around. \"Where are we going? Hotel?\"\n\n\"Yeah, why?\"\n\nI sighed. \"Mike, I've never even been to his house.\"\n\n\"You wanna?\"\n\n\"No, absolutely not. How have I never been to my brother's house? Whenever we saw each other, it was at a hotel I was staying at on tour.\"\n\n\"You don't have a normal life. Whaddya want me to say? I know he loved you. Don't think he didn't, not for a minute. What you need to be doing is figuring out what you're going to do about Daniel.\"\n\nI nodded while staring out my window. Daniel. My nephew. My flesh and blood.\n\n*****\n\nWe sat at a diner across the street from the funeral home. I'd have to make an appearance sooner or later, but I was dreading seeing old acquaintances from Hawaii. It didn't make any sense, but somewhere deep inside of me I was sure that they would know I was a fraud. I was still just Charlotte, the little kid that would run around chasing my brothers and singing into my hairbrush that doubled as a microphone.\n\nGold records, platinum records, Rock and Roll Hall of Fame induction, sold-out concerts were all nothing. They'd see right through me and realize that I'd been playing a role for the past four decades and was still pretending to be someone else so I could drown out my mother's voice telling me that I was worthless and how she regretted my being born.\n\nMost of all, I couldn't muster the strength to walk across the street and explain to my nephew who I was and why I'd been a stranger to my own brother.\n\nMike checked his watch. \"It's about that time.\"\n\n\"Yeah, I'm just going to order some more fries.\"\n\n\"Jollo, you have a plate of fries in front of you.\"\n\n\"They're cold.\"\n\n\"The next plate'll get cold, too. C'mon. I'll be right next to you. Things get dicey, I'll tell everyone we have to get to the airport to pick up Haliaka.\"\n\nLetting out a breath, I nodded. \"Thanks.\"\n\n\"Not a problem.\"\n\n\"I mean... for everything.\"\n\n\"Yeah, I'm glad I can be here. For both of you. He was family, you know? You too.\"\n\n\"Okay. I guess I'm ready. What do I owe you for the plane tickets and the service?\"\n\n\"Get out of here with that shit. I just told you he was my brother.\"\n\nI was going to argue until I saw the look in his eyes. Fuck it. He probably had more money than I did. I'd reach out and get some friends to use his studio, but they had no problems getting the biggest acts in the country recording there. He worked with a few rehab centers. Maybe I'd make a donation.\n\n\"Hey, that kid you had working for you, the one with the stick-figure animations, he's a good kid, right?\"\n\n\"Gus? Yeah. Definitely.\"\n\nIf Mike liked the kid maybe that was a way to pay him back. \"Could he use some more business?\"\n\nHe paused for a second. \"Yeah, he definitely can.\"\n\n\"Alright. I need, I don't know, ten more of the animations. Tell him I'll pay top dollar. A few for crew members, a few for friends.\"\n\n\"Want one for Daniel?\"\n\nI thought about what he was suggesting. An animation of my brother's life, Samantha and Daniel playing supporting roles. Not able to speak, I shook my head. I wasn't ready for that.\n\nWe slid out of the booth and Mike left a twenty for the waitress. I paid for our meal at the register and flipped up the hood on my sweat-jacket as we exited. This wasn't a concert, it was a visiting before a funeral and I was an embarrassment. I just wanted to fade into the background and not be the fifty-three-year-old woman with blue hair that everyone stares at.",
        "Not now. Not tonight. This was about my brother, his beautiful wife, and the child they left behind.\n\nWe were greeted by someone from the funeral home when we walked through the door and then by the pastor as we entered the large room. I immediately took a seat in the back and tried desperately not to meet anyone's eyes. Mike being Mike immediately got to work making sure everything was taken care of. I saw him talking to the contingent from Hawaii, then the pastor, and then an older man in a dark suit who I assumed owned the funeral home.\n\nI was okay until I wasn't. I could see Brian and Samantha from where I was, but I couldn't bring myself to approach and pay my respects. If I breathed slowly, I could hold myself together. Then I saw Daniel. He was like a clone of Brian, the same dark, serious eyes, the same black hair, the same dimpled chin.\n\nTime slipped by like a quick-moving fog, taking my senses but not my grief. The soft chatter around me faded, my view narrowed, and I gripped my knees as I rocked back and forth in my chair, lamenting the lost years that were behind me and the future I'd never have with Brian.\n\nArms enveloped me and I didn't care who it was, I just leaned into them and continued my mute crying. Slowly, I began to pull myself back together. One arm pulled away from me and quickly reappeared with a small box of tissues.\n\nLooking up, I realized it was Haliaka, Mike's wife, that had been holding me.\n\n\"I'm so sorry, Charlotte.\"\n\nI nodded, wiped away a tear, and sniffled. \"Thanks.\"\n\nShe sat next to me as the minutes ticked by. Eventually, I stood up. The room was mostly empty. The walk to my brother seemed to take hours and my feet were weighed down with thousands of pounds of regret and guilt. He looked peaceful.\n\nKneeling on the small bench they had in front of the coffin, I tried to remember the prayers of my youth. I finally just spoke to God and asked him to welcome them into his Home and to comfort Daniel. There were no petitions for myself. I didn't deserve anything but scorn and alienation.\n\nI was the sister that had arrived too late, the blood kin that showed up for a funeral, but never for a Christmas or Thanksgiving.\n\nHaliaka helped me up and when I turned I saw Daniel standing with Mike and the pastor. Taking a deep breath, I walked over to my nephew. Their conversation ended as I arrived and Mike introduced me.\n\n\"Daniel, this is your Aunt Charlotte.\"\n\nThere was nothing in his eyes. No grief, no pain, no longing. I wondered how long it would take for me to get to that stage--to be so exhausted that the emotions just fled.\n\n\"I know who she is. My dad had her picture up everywhere. None with the two of them. Concert stuff. None with me.\" He turned to me. \"Thank you for coming. A celebrity at a funeral. Let me know if you need a picture or something for your social media or for your fans. You can get back to your tour now.\"\n\nHe walked away, the wound delivered. Haliaka helped me over to a chair, and I sat there wishing I was numb.\n\n\"He hates me.\"\n\n\"Shhh, he doesn't hate you. He's a boy in pain. It's... He doesn't know you, Charlotte.\"\n\n\"That's why he hates me. And he should. That boy should know me. I never gave him the chance.\"\n\n\"No, you're making this into something it isn't. His father didn't hate you. I'm sure Daniel doesn't either. He just needs some time to deal with things.\"\n\n\"Can we just go to the hotel? I need to get some sleep.\"\n\n\"Of course. Mike will wrap things up here and I'll drive us to the hotel. My rental is right outside.\"\n\nMy thirteen-year-old nephew had been standing with the pastor thanking people for coming and accepting condolences while I hid in the back row feeling sorry for myself. I was the weakest, most selfish bitch on the planet.\n\nI couldn't remember much beyond getting to my room. There was nothing of getting undressed, drinking some water, washing up or anything else. I could recall putting my keycard in the slot and then waking up. My sleep must have been deep, but it wasn't restful. I woke up exhausted and dreading the day.\n\nAs I showered, fragments of dreams came back. A child with dead eyes, rows and rows of family and friends from Hawaii sitting with their backs to me as I approached the caskets, weighted down by heavy chains and the worst was seemingly the most normal. The pastor smiling widely while shaking my hand.\n\nHe used his pulpit voice and stared into my eyes. \"It's okay, Jollo. Brian wouldn't have expected you to be here.\"\n\nLeaning against the warm tile wall, the tears returned as I let the water wash away some of my exhaustion.\n\nI sat under the covers on the bed and opened the laptop again. Some people in the forum were concerned about Charlotte and were wondering why the show was canceled. Many more were worried about AlohaGirl34. My inbox was flooded with messages. Someone sent me a digital gift card for Starbucks.\n\nAfter replying to all of them I updated my post to let people know about the viewing. The prayer group reassured me that they had my back. I clung to the support I found in the group, I got dressed and headed down to the lobby.\n\nSitting in the Town Car with Mike and Haliaka, I tried to remember the last time I'd seen him wear a suit two days in a row. Unless you count his Santa suit, it had to have been decades. I wore a black skirt, grey blouse, black blazer, and had a charcoal scarf to cover my blue hair. It should have been an overcast day, but it wasn't. There was something cosmically wrong for us to be putting Brian and Samantha in the ground on a gloriously sunny day.\n\nHaliaka put her hand on my knee. \"Are you okay?\"\n\nI nodded. \"Mike, I'm sorry to do this, but I'm going to need some help. Maybe you could walk Belinda through this, but... I don't really trust anyone else for something like this. I need to find a way to take care of the kid. Like, a college fund, and covering his expenses now. Does he go to a public school? Do you know what sort of life insurance Brian had?\"\n\nHe was quiet for a moment before replying. \"He's going to need more than money. He's alone, Jollo.\"\n\nShrugging, I shook my head. \"They had to have friends or members of their church, right? I'm... Look at me, I'm not the mothering type. Whatever he needs, I'll cover it, but I can't be a parent. I mean, I've never even had a pet and I haven't been to my condo in five months.\"\n\nMike sighed. \"Yeah, okay, I'll look into it.\"\n\nBrian seemed to have a lot of friends and I wasn't surprised that he was well-liked by them, his fellow parishioners and co-workers. The funeral was crowded, but they had a seat for me in the family section. They had to fill it with their closest friends.\n\nThe pastor spoke for a while and invited people to say a few words. Mike told a few stories that included my other siblings. It was a relief. They deserved to be remembered. In an echo of what the pastor had said about Brian and Samantha's tithing, Mike spoke about how Brian donated monthly to Doctors Without Borders and how much it meant to Mike due to his daughter's involvement.\n\nThat was when I realized that Mike and Brian had stayed in touch over the years. He was closer to my brother than I had been.\n\nAs we filtered away from the grave, I stopped in front of Daniel and handed him an envelope with a stack of hundreds and the phone number for me and Belinda.\n\n\"To help out until the insurance money comes in. Please call me for anything, even if it's just to talk. I, I should have... Look, you have every right to hate me. I'm not going to put my BS on you. I was a horrible sister and aunt. I promise, whatever you need. Just reach out. I'll try to stop by when I can.\"\n\nHe nodded, no emotion, no anger. \"I'll be fine. No need to stop by.\" Daniel tried to push the envelope back in my hands.\n\n\"No... Please, just take it.\"\n\nHe shrugged and handed it to the pastor, who I'd already given a similar envelope. Daniel studiously looked past me at the next person coming up to shake his hand. I walked away from my nephew, the last of my family, and my responsibilities.\n\nHaliaka and Mike were near the car speaking to some locals that had attended. He could be a gruff son-of-a-bitch, but Mike never had problems making friends or speaking to people. I waited for a break in their conversation before interjecting.\n\n\"I called for an Uber. It's going to take me back to the hotel and then to Frisco. You're my last brother, Mike. Thank you for everything. You'll never know what this means to me.\"\n\n\"Folks are getting together in the hall in the church basement. It's catered and we got a band. You sure you can't stay?\"\n\nI smiled sadly as I pulled him into a hug. \"Yeah. I gotta go. You're going to keep me in the loop on the kid?\"\n\n\"Sure.\"\n\nLooking over Mike's shoulder as I hugged him, I saw a man limping past some graves to a modest car.\n\n\"Jollo?\"\n\nMy lack of a reply had him pull slightly back and look at me.\n\n\"Jollo?\"\n\n\"Mike, was that Jerry?\"\n\n\"Yeah. He's a lecturer at UC Davis. Something about ethics and law, which is a contradiction in terms.\"\n\n\"Here? He lives here?\"\n\n\"Yeah, somewhere around here.\"\n\n\"I... I've got to go.\"\n\nChecking my phone, I found the make of the Uber that was waiting for me. I spent the drive back to the tour bus thinking of Jerry Acevedo, the idealistic law student I was in love with thirty years earlier.\n\nWe started the tour again and Belinda worked with Mike behind the scenes to set things up for Daniel. It turned out that my brother had a nice home that was paid off and plenty of life insurance. Even without my help, Daniel would be fine. Belinda helped me to find him on social media, but he ignored all of my attempts to reach out.\n\nThings were made a little better by the fans on the forum. They asked about Brian and I told them everything I could remember. Little stories about us growing up. The dog our neighbors had who they kept tied up outside and how Brian would sneak over the fence and bring him snacks. How he swore up and down that the rock he found was a shark's tooth and he convinced me to get it drilled, polished, and turned into a necklace. How our brothers convinced him to eat thirteen hot dogs one night and I was the one who wound up taking care of him after he puked his guts out.\n\nThe thread grew as I remembered more stories. I'd post one and it would trigger someone else talking about something similar from their families. I was always careful to leave out details that could identify me and tried to repay their kindness by being more active. Two members got married after having met on the forum, and I matched the largest single donation to the gift certificate drive as AlohaGirl34 and had Belinda double the total as Charlotte. The Amex gift card was enough to put a serious dent in the cost of their honeymoon.\n\nThe days turned into weeks and the weeks into months. There were mornings where I couldn't eat and would think of my dreams about boys on the verge of manhood with large dead eyes.\n\nWe were in Maine a couple of weeks before Thanksgiving and were about to start the southern shift to the tour when Belinda insisted we had to talk.\n\n\"I'm about five minutes out from the soundcheck.\"\n\nFrowning, she shook her head. \"It has to be now.\"\n\n\"Okay, what's up?\"\n\n\"Let's go to your room.\"\n\nRaising an eyebrow, I led the way. Once we were sitting, she started.\n\n\"I want you to know that I'm working on this. I just found out an hour ago, and I called Mike as I walked over here from the hotel.\"\n\n\"Spit it out, Belinda.\"\n\n\"Your brother's accident? The driver of the other car is claiming that Brian was at fault. He's suing the estate. The judge locked up the funds. When Daniel's guardians had the money cut off, they dumped him with social services. I think he's in a foster home but I don't have full details yet.\"\n\nMy heart started racing as I stared at her. \"How are you just finding out about this now?\"\n\n\"This happened in the last week. I check in with the church and his school twice a week and everything seemed fine.\"\n\n\"Whatever. Get me a plane ticket for tomorrow morning and cancel everything for the next week.\"\n\nBy the time the plane landed, Belinda had texted me the address of the foster home. I had no idea how she got it. I realized that I'd have to reassess her abilities if Mike didn't get it for her. Parking a few houses away, I saw Daniel in the front lawn of a large, beaten-down house raking leaves.\n\nI was back in my sweats and hoodie as I got out of the car and started walking over. A tall, obese woman in a faded red house dress walked out the front door and stomped over to him. I could hear her yelling as if I was standing next to them.\n\n\"I told you to watch the kids!\"\n\n\"You also told me to get the leaves.\"\n\n\"Are you talking back to me?\"\n\n\"No, I'm just saying--\"\n\n\"I put a fucking roof over your head and feed you and all I get is backtalk. Get in the damned house and watch the kids.\"\n\n\"Look, if you tell me to do two things--\"\n\nHer hand went up as if to smack him.\n\n\"Bitch, you put a hand on my nephew and I'll stick my foot so far up your ass you won't know if you need a dentist or a podiatrist.\"\n\nShe froze, hand in place. \"Who the hell... You're the rock star. Well, guess what, lady? I--\"\n\nIgnoring her, I looked at Daniel. \"Is there anything in the house that you absolutely have to have right now?\"\n\nHe shook his head.\n\n\"Good, let's go.\"\n\nThe woman looked at him. \"You set one foot off the property and you aren't coming back.\"\n\nTurning his back on her, he walked to the gate. \"Oh, no, Br'er Fox. Don't throw me in the fucking briar patch.\"\n\nI laughed. That was the last thing I expected from a thirteen-year-old. While he walked my way, I spoke to the woman.\n\n\"I'll be calling social services about Daniel. You call and try to stir shit up and I'll have you explain why you were about to hit a kid in your care and I'll hire the biggest, baddest lawyers in the country to put you through the wringer. Do we understand each other?\"\n\n\"Lady, you--\"\n\n\"Do we fucking understand each other?\"\n\nShe was silent for a minute. \"Never wanted him anyway.\"\n\n\"Fine. You got your wish.\"\n\nWhen I got behind the wheel, Daniel got in the passenger's side.\n\nI looked over at him. \"Put your belt on. And don't curse.\"\n\n\"Right, the woman who's been on tour for forty years with her leather outfits and blue hair and never once gave a crap about my dad is going to bitch about my language. Is that the plan?\"\n\n\"No. I thought maybe we could hang out for a while. That was the plan. See how that works. Sort of feel things out. I get it. You hate me and I hate me. Maybe we can hate me together for a while.\"\n\nHe leaned back into the seat and looked away from me while uttering the one word used by sullen teens everywhere.\n\n\"Whatever.\"\n\nI was too busy pulling into traffic to think of an appropriate response. To be honest I was grateful for the distraction. It gave me time to just think. What was I going to do now? One thing I was certain of, a phone call to Mike was in the cards in the very near future.\n\n*****\n\n\"Belinda, what's that internet thing where you can rent people's homes?\"\n\n\"Airbnb?\"\n\n\"I guess. I need a place in Davis. Make it for like, three weeks or something. That'll give me time to figure things out. Cancel everything for a month. We just pulled into Target. I'll call you back.\"\n\n\"Okay, but--\"\n\n\"Just figure it out. We need to do some shopping and I guess we're going to need some legal help. I think I just fucking kidnapped my nephew.\"\n\n\"And shopping is more important than figuring out who to contact with CPS and talking about a lawyer?\"\n\nI looked over at Daniel, who was staring out the window.\n\n\"Yeah. It is. I'm gonna text you in two seconds.\"\n\nAfter hanging up, I texted so Daniel couldn't hear.\n\nCharlotte: What do teenage boys need for day to day shit?\n\nBelinda: How on earth would I know? Clothes? Lots of food. A phone? A game system? A TV?\n\nCharlotte: Helpful. Thanks.\n\nBelinda: That's totally unfair. How would I know about teenage boys?\n\nCharlotte: Wasn't being sarcastic. You knew more than me.\n\nBelinda: Oh. Thanks. Not used to compliments. Your phrasing needs work. Totally thought you were taking a shot at me.\n\nCharlotte: How dare you? I take back everything nice I ever said.\n\nBelinda: lol\n\nGetting out, I held my door open waiting for him. \"If you're not coming I'm going to have to guess your size when I buy clothes. Pink clothes. Everything pink.\"\n\nShaking his head, he got out and followed me. I chose the destinations, he chose the particulars. We went to where they had jeans, he threw some in the cart. We went to Electronics; he threw in a cheap laptop and a phone. We stopped at the snack aisle, he took enough to feed a small army.\n\n\"I'll pay you back when they figure this stuff out with Dad's estate.\"\n\n\"Okay. Don't need to, but okay.\"\n\n\"Why are you here?\"\n\nI shrugged. \"I was tired of being afraid.\"\n\n\"Afraid of what?\"\n\n\"You.\"\n\nHe rolled his eyes and we kept shopping. I couldn't understand the brain of a teenage boy. We had a six pack of white socks, Target brand. We had three tee shirts, all solid colors. We had four pairs of jeans. We had a six pack of underwear. Simple, basic, no variety. We also had four types of Doritos, three types of M&M's, two types of energy drinks, four flavors of beef jerky, fourteen frozen burritos in three varieties, and I didn't count the ice cream. Mostly because they were all Ben & Jerry's, so there was nothing there to object to.\n\nAs we rolled our purchases through the parking lot, he spoke up. \"Why would you be afraid of me?\"\n\n\"Because you know the truth. I was a shitty sister and a shittier aunt. I was basically MIA since forever and you know it. I finally realized that not seeing you wouldn't help me forget that. Maybe if we hang out a little I can change how I think about myself. Maybe it'll still be the truth, it just won't be the whole truth.\"\n\nHe shrugged again. Not a big talker, my nephew.\n\nBelinda had found us a house not terribly far from Daniel's old home or the foster place. We drove over and met with someone who had our key and did a walk-through. When she checked my credit card she raised an eyebrow. When renting cars or paying delivery guys or any other situation where I don't want to be recognized, I used the corporate card. They could be issued in any name.\n\n\"Louisa Alcott?\"\n\nI smiled. \"My parents thought they had a sense of humor.\"\n\nShe ran it, the card cleared, she left us some paperwork and headed out.\n\nDaniel got up, grabbed his stuff from the car and walked down the main hall. \"I got the room on the left.\"\n\n\"Okay.\" I walked past that room on the way to the one I was going to use, backtracked and stuck my head in his room. He was stripping the bed. \"What are you doing?\"\n\n\"Gonna do the wash. People are gross.\"\n\n\"Yeah, I agree with that. Don't bother. I'll have Belinda get some bedding and other shit delivered.\"\n\nHis back still to me, he replied. \"Don't curse.\"\n\nHe was a smart ass. Okay, one point for the nephew. \"Can you do me a favor while I call her and grab my bags from the trunk?\"\n\nDaniel paused for a minute before walking passed me and out the door. I was on the couch waiting for Belinda to pick up when he came back in with the bags.\n\n\"Thanks!\"\n\nThere was no response and he left the bags in the hallway.\n\n\"Did you find the house, Charlotte?\"\n\n\"Yeah, it's actually pretty nice. I'm going to need you to find a place that will do same day delivery and get a bunch of shit over here. We need bedding and cleaning supplies and stuff like that. One queen, one double. And send some of my clothes next-day air.\"\n\n\"Okay, I'll get on that. I spoke to Mike and let him know what's going on. He said he'll reach out to you.\"\n\n\"Sounds good.\" I hung up. Thought for a second and called back.",
        "\"Yes?\"\n\n\"You did a good job with all this. Thanks.\"\n\n\"I... Yeah, okay, no problem.\"\n\nThere was a text from Mike about an hour later. It had a phone number and the words \"Call him\".\n\nI didn't have to ask whose number it was and I definitely didn't want to call. Daniel was still in his room, so I walked over. His back was to me, again, and he was laying out his new clothes on the bed.\n\n\"Hey, you hungry?\"\n\n\"No.\"\n\n\"Well, we gotta eat, you want--\"\n\nWithout turning around he reached his foot back, found the door and flipped it closed in my face. I nodded, counted to five and opened it.\n\n\"Look, I get it, but can we not be assholes to each other? Seriously, can we just not?\"\n\nDaniel slowly turned around and stared at me with all the loathing a teenager could summon. \"Are you going to take me back?\"\n\n\"To that foster place? No, of course not. I'm not going anywhere. Neither are you.\"\n\n\"Then close the door and leave me alone.\"\n\nI took a breath and let it out slowly. \"Okay. When you get hungry we'll order something.\"\n\nThis was going to be harder than I thought.\n\nIt took me half an hour to work up the courage to call.\n\n\"Hello?\"\n\nA quarter of a century later and his voice still killed me. He'd been everything until he wasn't and I'd spent decades looking for him in other smart, educated, cute men.\n\n\"Hello, Jerry.\"\n\nI was met with silence. I was about to hang up when he replied.\n\n\"I'm sorry about Brian and Sam.\"\n\nClosing my eyes, I leaned against the wall. \"Thanks. That was... Yeah, I don't know. Rough.\"\n\n\"Are you on tour, Charlotte?\"\n\n\"No. I'm here, in Davis. I need some help.\"\n\nHe was quiet again.\n\n\"Jerry?\"\n\n\"The first time I've heard from you in... How long has it been? And you need my help?\"\n\nI could try to find comforting lies about how I'd kept track of him, how I was wracked with regret and how I did what I did because he deserved better than a vagrant singer, but the truth was that he did deserve better, but he deserved it now. He deserved the truth.\n\nWe'd been together for years. He'd wanted kids, a home with a swing in the backyard and a white picket fence out front. I shared those dreams, and they were important, but not more important than the bright lights and the adulation of the faceless crowd. I'd worn his ring for eight months when he took me to a small house just outside Oakland.\n\nI had a blindfold on that Christmas Eve. Stopping the car, he slowly helped me out and onto the front lawn. When told to do so, I took off the mask. I knew what was happening immediately and it scared the crap out of me. He'd put every dime he had into buying us that place. Jerry assured me that he knew it was just a starter home and when his practice was more successful, he'd get us something larger.\n\nAt least I'd had the decency to give him that Christmas. On December 26th I gave him back his ring and headed to the east coast.\n\n\"Yeah, I'm reaching out because I'm the same person I was. Still selfish. I need your help. So does Daniel, Brian's son. I get it. You don't owe me anything. If you can give us a couple of hours and let me pick your brain, I'd appreciate it. If not, I understand.\"\n\n\"Why are you in Davis?\"\n\n\"Because that's where my nephew is.\"\n\n\"This isn't some... I don't know, weird set-up?\"\n\n\"What?\"\n\n\"It feels weird, Charlotte. After all these years you just happen to be in the town I live in and you just happen to need my help?\"\n\nI shrugged, but he obviously couldn't see it. \"Yeah. Life's fucked up like that sometimes. I understand, really. I'll get someone else. I'm sorry, Jerry. About everything. More sorry than you could know.\"\n\nHe sighed. \"Text me the address. I'll be there within the hour.\"\n\nWhen we hung up I knocked on Daniel's door. \"Can you come out in about thirty minutes? A lawyer's coming by.\"\n\nWhen there was no answer, I knocked harder.\n\n\"Yeah, thirty minutes. Got it.\"\n\nFuck! Yeah, this wasn't going to be easy. Going back to the kitchen, I took out my phone and started looking up food to order. We had to eat and I owed Jerry at least a meal, so enough food for three. Kids were into pizza and chicken. Maybe that was little kids? Didn't matter. If Daniel didn't like it, we'd order something else.\n\nI thought about getting sushi, but decided on Thai. Telling them that the delivery guy would get a thirty dollar tip if the food was there in twenty minutes got the food there quick. I thought about changing what I was wearing three times before the food arrived. Once it did, I couldn't decide where to put it out. Kitchen table or living room?\n\nAfter taking a deep breath, I calmed down. What I wore wouldn't matter. Where we ate wouldn't matter. Jerry was just going to do me a favor, answer some questions and maybe recommend someone I could hire. When I heard a car pull into the driveway, I went to the door.\n\nHe was driving a Prius. Of course he was driving a Prius.\n\nGrinding down on my molars, I forced a smile as he got out and walked towards me. Why did men get to age gracefully? He could have at least looked, I don't know, worn down or something. His hair was a little thinner and he had some wrinkles around the eyes, but those were the biggest changes.\n\n\"Charlotte.\"\n\n\"Hey, Jerry. Thanks for coming.\"\n\nI went to hug him as he stuck out a hand. Switching over to shaking hands, I went to take his as he went for the hug. We stood there uncomfortably for a moment before he smiled and I chuckled.\n\n\"Well, this isn't awkward as fuck,\" I said before quickly hugging him.\n\n\"Yeah. So, um, how are you doing?\"\n\n\"Good. Well, you know, not good. Sort of lost. Teenagers sort of suck, but I'm sure it would be easier if I'd been around more. Things got a little... testy with the foster lady.\"\n\n\"Okay, let's start there.\"\n\n\"Yeah, sure. Um, kitchen good?\"\n\n\"Sure.\"\n\nWe sat down, I handed him a water and we began divvying up some food as I brought him up to speed.\n\n\"Daniel's here now?\"\n\n\"In his room.\"\n\n\"Maybe he could join us? I don't want him to think we're keeping things from him or talking behind his back.\"\n\n\"Sure. Good point. I'll get him.\"\n\nWhen I stood and turned to the hallway, Jerry called out.\n\n\"Charlotte?\"\n\nI turned back. \"Yeah?\"\n\n\"It's good to see you again.\"\n\nSmiling, I replied. \"You too. Real good.\"\n\nDaniel deserved a freaking Oscar. He yanked the door inward when I knocked, walked past me without saying a word but when he hit the kitchen he was Mister Cordial.\n\n\"I'm sorry, I saw you at the funeral, but I didn't get your name. The pastor said you knew my dad?\"\n\n\"It's Jerry. We met a few times when you were little. I'm really sorry about your folks. They were good people.\"\n\n\"I appreciate that. Aunt Charlotte said you might be able to help with the foster stuff and my parents' money and house?\"\n\n\"In a general sense. Family law isn't my specialty, but I'm happy to act as a sounding board or help find the right person to help out. Shall we get started?\"\n\nWe went over things again with Daniel contributing most of the details. Jerry was wearing dockers, a lavender polo and sneakers and I found myself having to concentrate on the conversation. He'd shaved his beard and mustache, cut his hair and was dressing like a casual yuppie, but he was still Jerry.\n\nAfter grabbing another satay chicken skewer, he looked at the two of us. \"The first thing we need to do is change the narrative. You arrived to see your nephew in time to see him almost get hit by the foster lady. He stormed off and when you followed him, he told you he was leaving. Not wanting him to be out on the street, you brought him here. This was absolutely Daniel's move. Are we in agreement?\"\n\nDaniel shrugged while I nodded. Jerry continued.\n\n\"Okay, next thing we need to do is to assure absolutely everyone that this is a better environment for him. Here's what that means; Daniel gets a tutor or two immediately. Set it up tonight. He gets a doctor's appointment for tomorrow. Daniel, are you seeing anyone about your loss? A counselor or someone else?\"\n\n\"Um, the pastor.\"\n\n\"Do you know if he's credentialed?\"\n\n\"No.\"\n\n\"Okay, we need to get you into grief counseling. There will likely be a house visit. We need to make sure that this house is as... I don't know. Wholesome? As possible. Get lots of fruits and vegetables. Keep books around. Have some sports equipment where someone can see them. In the meantime, I'll make some calls and see how deep of a hole we're in.\"\n\n\"Yeah, I don't need counseling.\"\n\n\"Maybe, but we're trying to present an irrefutable case that you are better off here than in a foster home. If... Actually, am I jumping the gun? Charlotte, are you staying here?\"\n\nLooking at Daniel, I nodded. \"Yeah, I'm staying here. Unless there's a solid plan in place that works better, I'm staying.\"\n\n\"So, we can look into you becoming Daniel's guardian. I'm speaking out of ignorance, but it should be very, very possible. We'll need to talk about your background and any arrests and if you're financially stable, but I'm optimistic.\"\n\nDaniel spoke up. \"That's not what I want.\"\n\nWe both looked at him and not overly surprised, I responded. \"Why?\"\n\n\"I want to get the stuff with Mom and Dad's estate fixed and then I want to be an emancipated minor.\"\n\n\"Why? And where did you even hear of that?\"\n\nHe looked at me and rolled his eyes. \"I'm not five.\"\n\nJerry, nodded. \"It's a good thought, Daniel, but you're too young. We can look into that when you're sixteen, if you'd like.\"\n\n\"Sixteen? There's no exceptions?\"\n\n\"I don't think so, but I can check.\"\n\nDaniel sighed. \"Okay. And how much is this costing us, 'cause I won't have money until they figure out the estate stuff?\"\n\n\"How much is what costing you?\"\n\n\"You. How much are you charging us?\"\n\nJerry leaned back in his seat. \"I'm not charging you, Daniel. It's pro bono. Your father wouldn't have charged me if I needed help; there is no way I'm charging you.\"\n\nWe kept talking until Jerry checked his watch. \"I think we're good for the night. Any final questions?\"\n\nWhen neither of us said anything, he continued.\n\n\"Charlotte, can you walk me to my car?\"\n\nHe seemed to be deep in thought, so I was the first person to speak once we were in the driveway. \"Have to get back to the family?\"\n\n\"What? Sorry, no. I was lost there for a second. No family. I have an appointment at the driving range.\"\n\n\"They need a lawyer?\"\n\nHe chuckled. \"No, I have an appointment with an instructor. She's the golf coach for UC Davis and I'm horrible. She's helping me out.\"\n\nYeah, I bet she is. \"Well, that sounds nice. You wanted to talk?\"\n\n\"I did. Why isn't he in therapy?\"\n\n\"I don't know. He's talking to the pastor, right?\"\n\n\"Charlotte, why isn't anyone looking into this? He's not getting grief counseling? How the heck did that happen? What else is no one checking on? How are his grades? Does he see his old friends? What about sports or hobbies? Is he still participating?\"\n\nI was starting to get pissed off. \"Look, I've literally been here a day. I get you. Good points. Fine, but cut me some slack. I got a lot done for one day. I'll ask him about the other stuff.\"\n\n\"Okay. It's just... I don't know. He went from upper middle class to orphan in an instant and from what the two of you told me, the foster home was a nightmare. He's slipping through the cracks and it's freaking me out. Brian was my friend. I should have been looking out. Oh, and he's a teenager. Ask him, sure, but it's not his decision in the end.\"\n\n\"We're on it now. Go hit your golf balls and I'll talk to him. Promise.\"\n\n\"Call me, okay?\"\n\n\"Sure. And... Thank you.\"\n\nI waited while Jerry got in his car and drove off. He was upset with himself because he was Brian's friend and hadn't checked up on Daniel. I was his aunt and I hadn't either. This sucked and it wasn't right. I needed to do better.\n\n*****\n\nThere was someone from social services at the house two days after Jerry left. He seemed like a nice man and was thorough without being obnoxious. The guy had a job to do and I understood that. By the time he had arrived Belinda had gotten us on a program with a local farming co-op, so we had tons of fruits and vegetables. She'd signed Daniel up for a soccer league starting in a week and we had two tutors by. Daniel's first meeting with a therapist was scheduled for the day after the first soccer practice.\n\nDaniel and I were having regular meetings with Jerry. He asked me to meet him on campus to discuss a few lawyers he wanted to use if we were pressed by Child Protective Services or the family courts or whoever. I didn't really care. If Jerry pointed to a guy and said, 'him,' I'd hire that guy. Still, I wanted to participate, so I met him at a patisserie.\n\nHe was sitting outside under the awning. The woman sitting with him was interesting. She was absolutely gorgeous and way, way friendly. And totally fake. She had that little flip of the hair thing and the touching of his arm thing and a smile that seemed to reflect any light source from miles around. I felt my hands curling into fists as a fluch crawled up my neck.\n\nHe stood up as I approached. \"Charlotte! Glad you could make it. This is Nancy Yee. Nancy, this is Charlotte. Please, sit down. Can I get you anything? Iced tea?\"\n\n\"No, thanks.\" I shook the woman's hand. \"Nice to meet you.\"\n\n\"You too. Jerry speaks very highly of you. He says you're a musician?\"\n\nI raised an eyebrow and looked at him. Jerry knew I was trying to keep a low profile. He raised his hands in a mock defensive gesture.\n\n\"I said you were when we were together. That's all I said.\"\n\nAfter forcing a smile, I turned to Nancy. \"Still am. I play here and there for some spending money. How about you? What do you do?\"\n\n\"I'm the golf coach here. Speaking of which...\" She checked her phone. \"I have to get going.\" Nancy turned to Jerry. \"See you at the drive tomorrow?\"\n\n\"You bet.\"\n\n\"Enjoy your dinner. I hope to see you again, Charlotte.\"\n\nSmiling, I replied. \"Absolutely.\"\n\nThere was no reason for me to be hostile. If Jerry had bad taste in women, that was on him.\n\nHe pulled a laptop from his valise and we spent some time going over the pros and cons of three lawyers he wanted me to pick from. I tried to decide based on whatever clues I could find in his enthusiasm and he seemed pleased with the woman I'd decided on.\n\nWe had a 'meeting' set with someone from family court and were allowed legal counsel. Not utilizing any advantage we could seemed silly, so we were gearing up. I eventually got that iced tea that Jerry had offered and a tuna melt. The conversation turned to his work and how he was happy taking the infrequent case and spending most of his time teaching.\n\nIt was pretty much what I'd expected. Jerry had always been the do-gooder, the environmentalist, the advocate for everything right and just. Now he was living off a professor's salary and was probably as happy as, well, someone who was dating a beautiful golf coach and working at a job he loved.\n\n\"So, Nancy's pretty good? She's helping your swing or whatever?\"\n\n\"Pretty good?\" He chuckled. \"Yeah, I'd say she's pretty good.\"\n\nWhy was that funny? \"She play competitively?\"\n\n\"Seriously? Charlotte, she was the number one female player in the world three years ago.\"\n\n\"Um, what?\"\n\n\"Yeah. She had a, uh, sort of disastrous end to her career commercially. Lost all her endorsements and most of her money. Slid down in the rankings. Nancy climbed back up to number one, socked away all her money and then retired.\"\n\n\"That's... Okay, that's not what I was expecting to hear.\"\n\n\"She tries to keep things low key. Sort of like you, now.\"\n\n\"I guess. Well, if you two are happy, that's all that matters.\"\n\n\"If we're... Charlotte, I'm not dating Nancy. She's what, fifteen years younger than us? Besides, she's still in love with her ex-husband.\"\n\nThere was a tension I hadn't noticed that suddenly fled my body. I felt light and... happy? I hadn't been truly happy in a long time.\n\n\"Yeah? That's too bad. She seems nice. Hopefully she'll move past it and find some happiness.\"\n\n*****\n\nI spent the next two weeks prepping with the lawyer Jerry had found. Jerry sat in on most of the meetings and I wondered exactly how much time he spent teaching. My evenings were spent on the forums and keeping up with friends who had no idea who I was.\n\nDaniel was seeing his therapist twice a week and I hoped his life was stabilizing. He was having friends over and was playing soccer. I didn't know how to help him and felt that no matter what I did there was a good chance it would make things worse.\n\nI'd let myself believe that he was okay, that things were going to be alright and then I'd hear the muffled sounds of his crying deep into the night. His lamp had to be replaced twice and his laptop once. He scared the hell out of me when he put a hole in the wall with his foot. Daniel was breaking things in his rage and I simply didn't know what to do.\n\nMike finally convinced me to see a therapist myself.\n\nThe day before our meeting with the family court person Belinda called.\n\n\"We need to talk about business.\"\n\nI opened a Diet Coke as she was speaking. \"Okay, go ahead.\"\n\n\"I've cancelled everything for you for ninety days, and I'm about to expand that another thirty, but people are starting to complain. I've been pushing the band to get side gigs and studio work and I've been helping with some cash. It's not a big deal right now, but unless we do something definitive, that's going to snowball. You still owe Goliath Records two more albums and one is seriously late. They've been calling and it's friendly enough right now, but that's not going to last. I'm getting lots of questions from the press.\"\n\n\"Okay, but that's what I pay you for, Belinda. Handle it.\"\n\nShe sighed loudly. \"That's what I've been doing, Charlotte. I'm juggling twenty balls at the same time, and I'm not complaining. That's what I signed up for. But I'm telling you, as your manager, you need to make some decisions. Find a local studio and put out a cover album. Call it your unplugged sessions. Just you, a microphone and an acoustic guitar. Get them off your back. Cancel the tour, give the band a bonus and close up shop for a while.\"\n\n\"I don't know. I'm not going to put out an album that I'm not putting my all into.\"\n\n\"Well, I didn't want to bring this up, but I think you should let me get a PR person in and have them talk to the press.\"\n\n\"About what? Canceling the tour?\"\n\n\"About Daniel.\"\n\n\"Absolutely not.\"\n\n\"Charlotte--\"\n\n\"I said no. He's been through enough. I'm not using my nephew to buy breathing space.\"\n\n\"Right. I understand. Can I just say one thing? Remember when you made that video of you singing while that little girl played guitar? It was touching because it humanized you. You know what happened? The video had millions of hits, your back catalog sales were up twenty-one percent that quarter and your old videos all had huge bumps.\"\n\n\"I said no. He's not marketing material, he's a kid whose parents died and... No. Just no.\"\n\n\"Okay, You're the boss. Someone's going to find out though, and when they do you won't be able to control the narrative. Everyone has a cell phone and they all have cameras.\"\n\n*****\n\n\"Ms. Kahale, you have a, um, colorful past. If half the stories were true, I'd hesitate to have you babysit my kids, let alone recommend the judge sign off on you being Daniel's guardian. That being said, they are, indeed, stories. Aside from the TMZ, the National Enquirer and some documentaries made for MTV, I have no proof of anything untoward.\"\n\nWe'd been in a meeting with this woman for nearly two hours. She was a child advocate working for the courts and she'd done her research. Thankfully, so had my lawyer. She was with me and so was Jerry. We were calm and had an answer prepared for almost everything she brought up. When I was blindsided by an unexpected question, I winged it.",
        "\"Those stories? Most are made up, some are based in truth The ones that are partially true? Many are based on someone else. Keith Moon throwing a couch out his hotel window and into a pool five flights down becomes Axel Rose twenty years later. Why? The same answer rolls down the corridors of history. Because it sells. Have I stepped out of bounds on occasion? Sure. Am I some reformed mad woman? No, not even close. As the affidavits we've provided demonstrate, the JD I prefer isn't Jack Daniels, it's Salinger.\"\n\nShe nodded. \"I admire your dedication to your nephew, but I still have concerns. I'll tell you what, I'm going to make a provisional recommendation that Daniel remain in your custody and that the issue is revisited in six months. I think that's more than fair.\"\n\nI had to go through six more months of this bullshit? I flinched when Jerry kicked me under the table. Throwing a smile on my face, I thanked her.\n\n\"That would be great. Please feel free to come by at any time or give us a call to come in.\"\n\nDaniel was waiting for us outside the large room where we had the meeting. Our lawyer, Daniel and I waited while Jerry used the bathroom.\n\n\"Are you going straight to Belinda with your billing? I haven't received anything yet.\"\n\n\"Jerry didn't say anything? He's paying me.\"\n\n\"No. That's not going to fly. He's a freaking part-time college professor. That's nice of him, but I'll cover the bills. This can't be cheap.\"\n\nShe laughed.\n\n\"Charlotte, are you aware that Jerry is a tilt-at-windmills sort of guy?\"\n\n\"Uh, yeah.\"\n\n\"Well, sometimes that pays off. He represents people who need help. That's resulted in three class-action lawsuits that he's won. Jerry doesn't have to worry about money, trust me.\"\n\n\"No shit?\"\n\n\"No shit.\"\n\n\"Huh. Well, good for him. He was in entertainment law when we first met.\"\n\n\"He's the only lawyer I know who's successful at his level who jumps around. He specializes in antitrust now. He used to be known in intellectual property circles. Jerry's sort of a gadfly.\"\n\n\"Okay, well, you earned your money today. I'll keep you in the loop about this six months thing.\"\n\n\"Good luck, Charlotte. You deserve it.\" She turned to my nephew. \"Daniel, it was a pleasure working with you.\"\n\n\"Um, thanks.\"\n\nWhen he returned, Jerry walked us out to his car. I turned to him as he opened my door. \"Thank you for... Well, for all of this. I don't know what I would have done if you weren't around.\"\n\nHe laughed. \"Yes you do. You would've called Mike.\"\n\nI couldn't help smiling. \"Okay, you got me. But he would have just found you wherever you were and we'd be right back here.\"\n\n\"Listen, we're not out of the woods yet. We still have that follow-up, so we should stay in touch.\"\n\n\"Absolutely. Maybe we can get together next week? To, you know, talk about the case? You know, Brian's estate and everything.\"\n\nJerry raised an eyebrow and smiled. \"Just talk about the case?\"\n\n\"That and maybe other things.\"\n\n\"Call me, Charlotte. We should sit down and have a long conversation.\"\n\nOn the drive home Daniel asked me if I could loan him some money that he'd pay back from his parents estate.\n\n\"How much do you need?\"\n\n\"Maybe a few hundred.\"\n\n\"Yeah, sure. Let's set up a bank account for you and I'll put some money in. I should have done that a while back.\"\n\n\"So, can we stop at Guitar Center?\"\n\n\"Guitar Center? Why?\"\n\nHe was quiet for a while. \"When I had to go to the home, I gave away a bunch of my stuff to friends. My bike, two game systems and my bass and amp.\"\n\n\"You play? Why didn't you say anything?\"\n\n\"Like you would have cared? Please!\"\n\nI rolled my eyes. \"Yeah, Daniel, I would have cared. How long have you been playing? What made you start?\"\n\n\"You don't want to know.\"\n\n\"If I didn't want to know, I wouldn't have asked.\"\n\n\"Okay, I started playing because it fucking destroyed Dad that you ignored him. I thought... I don't know what I thought. Maybe he wouldn't feel so bad if someone else in the family did something musical.\"\n\nI wiped the sweat from one hand and then the other and felt the tension in my temples.\n\n\"What are you talking about?\"\n\n\"It was pathetic. He was pathetic. When it came to you, he was like a puppy or something. If you were playing within a day's drive, he would go see you. If he couldn't get tickets, he'd buy them from scalpers. Didn't know that, did you? Did you know that he flew out to Ohio when you were inducted into the Rock and Roll Hall of Fame? You never called, you never came by. In your big speech you never mentioned him.\n\n\"All you had to do was mention his name. It would have taken you twenty seconds, but you couldn't mention your own brother. He seemed all happy when he came back. He had shirts for us and everything, but I knew. I could see it. His big sister and... What the hell is wrong with you? You were like his, I don't know, his hero or something. I fucking hated you.\"\n\nEvery word was like a punch. Daniel's emotions were so raw, so brutal and there was nothing I could say. I had no defense, no refutations. He was right. My breathing grew shallow and my heart began slamming in my chest.\n\nI pulled into the parking lot of a strip mall and tried to calm down.\n\n\"Are... are you okay? Are you having, like, a heart attack or something? Should I call 911?\"\n\nManaging to shake my head, I put down the window as I tried to slow my breathing.\n\n\"No. I, I just need a minute.\" Letting go of the wheel, I shook my cramping hands.\n\n\"Do you want--\"\n\n\"Just give me a minute! I need... I need to breathe.\"\n\nIt took me almost five minutes before I could drive again. Daniel didn't ask about Guitar Center and the ride home was silent.\n\nHe went to his room and I called his therapist.\n\n\"Dr. Corelli's office. How may I help you?\"\n\n\"Does the doctor see adults?\"\n\n\"Yes, she does. Dr. Corelli's focus is on grief counseling. Would you like to set up an initial appointment?\"\n\nThere was a pause as I thought and mustered my courage.\n\n\"Ma'am?\"\n\n\"Yeah, I'd like to set up an appointment.\"\n\n*****\n\nI knocked on Daniel's door. \"I ordered Italian. Salads and pasta. It's in the fridge.\"\n\nHe didn't answer and I didn't linger. Going to my room, I grabbed my laptop and climbed into the bed. After checking my email, I logged in as AlohaGirl34. The thread I'd started on the forum had been growing and growing. I'd post once in a while and people would reply, offer suggestions or express concern. Keeping in touch had helped ground me, so I posted something every couple of days. They knew what was going on with AlohaGirl34 in general terms.\n\nThings aren't going that well. If anyone out there is the praying type, I could use some right about now. You'd think I'd be able to take it when he tells me how much I suck as an aunt and as a sister, but he hits like Tyson. When it's just me remembering, it hurts and the guilt is bad, but when he says it, I'm defenseless. Worse, he only sees one side of everything. I'm not saying he shouldn't and I'm not defending myself, but every single time it hurts like hell.\n\nThere was a professional event that I should have brought my brother to. My nephew said he went and I guess he was in the back and didn't want to bother me or something. It broke my heart. I'm really hurting here. I'm sorry to vent. I don't know what else to do. \n\nKentuckyMom replied almost immediately.\n\nDo you talk to him about his parents? Does he see things just from, you know, their perspective? Maybe you should sit down and let him ask you questions? Just a thought.\n\nShe should be KentuckyGrandmom. The woman has five of the most adorable grandkids and is always posting pictures of them. Belinda had sent her some of my concert tees, but in sizes for toddlers. Those pictures were a big hit. Everybody loves babies rocking out.\n\nI was grateful that she was there as a sounding board, and I quickly answered.\n\nWe don't really talk. It's more like co-existing. I make sure he has what he needs and we just sort of live together. He can't stand me and I try not to bother him.\n\nShe posted a shocked face emoji.\n\nGirl, you need to talk to this young man! You both need it. Like, desperately. Teens need someone they can go to and talk to and confess to and... I'm rambling. Talk to this boy and let him know he can talk to you. Real talk, not 'pass the salt' talk.\n\nI stayed online for another hour and others came in and posted. We should have used the chat function, but we worked it out. KentuckyMom's advice kept coming back to me. I heated up the dinner, put out some water and juice and knocked on Daniel's door.\n\nNo answer.\n\nI knocked again.\n\n\"What?\"\n\n\"Can you maybe come out for a bit? We need to talk.\"\n\n\"I'm busy.\"\n\n\"Daniel, please. I won't take up too much of your time.\"\n\nThere was no reply, so I went back to my dinner for one. As I finished the salad, he entered the kitchen and sat down.\n\n\"So?\"\n\nI guess that was the best I was going to get. \"Want me to heat up your food?\"\n\n\"No.\"\n\nAs he ate, I started.\n\n\"I'm going to tell you some stuff, but I don't want you to think they are excuses. They aren't. I screwed up with your parents and with you. I know that. I just want you to know where I'm coming from. You deserve that much, at least. Your dad was the baby of the family and your grandmother loved him like crazy. Her eyes lit up whenever he was in the room. I was the opposite with her. From where she stood, I was the wild child that left and moved to the mainland and disgraced the family.\n\n\"When your dad moved here, she blamed me. It made no sense, but that didn't stop her from thinking I somehow infected her golden child. When he graduated from college, stayed and married your mom, it was proof that I was totally evil and out to get her. Your other aunt and uncles all stayed close to home, so obviously I was the bad guy. She took me to the side at your parent's reception and begged me to stay out of your dad's life. That was the first time she'd spoken to me in six years and I was the person paying her bills.\n\n\"I laughed it off and told her she was a crazy old woman, but it shook me. If your own mother tells you you're evil... If you're the child that makes sure you have food on the table and health insurance and she hates you, there has to be something wrong with you, right? I think I used that as an excuse to not make the effort when I should have.\"\n\nHe hadn't looked up. Daniel just stared at the table as he shoveled in the food.\n\n\"We spoke more often than you think we did, but that's another excuse. Your mom and dad and I talked. Not often, certainly not enough, but once in a while. He was the successful one. I know that doesn't make sense, but we were all sort of... wild. Crazy. Your dad, though, he was stable.\"\n\nI thought a bit then expanded on that.\n\n\"He had the great wife, the white picket fence, the college education and the steady, safe job. He wasn't the adrenaline junky cop or the cook with a new scam every month or... whatever.\"\n\nStill no response so I continued.\n\n\"I'm not running down my family. I loved them, but your father was different. Maybe I was envious or maybe I heard the echo of your grandmother's words too often or maybe I was just too lazy to keep up the way I should have. I'm not blaming anyone but me. That being said, when your dad or mom did call, I called back. I really wished he'd told me how he felt and I really wish that I'd figured it out and been a better sister.\"\n\nIt was like talking to a wall, but I pushed on.\n\n\"The only thing I can do now is live with my regrets and be the best aunt I can be. If you can take ten steps to meet me, I'll take ninety to get to you. As much as I'm fucking this up, I'm trying, Daniel. I really am. Tell me what I'm doing wrong or where I can do better. I want us to at least try to, I don't know, be open? Talk? Be there for one another? Can we try?\"\n\nHe shrugged, remained silent and took his plate to the dishwasher. \"I guess.\"\n\nIt was only two words, but I felt the knot in my stomach unraveling.\n\n*****\n\nThings seemed different after our talk. I'd been sleepwalking through life since my brother's death. Treading water, I hadn't moved in any direction. Having grabbed hold of Daniel, I'd tried to keep him afloat as well. I was weighed down by guilt and paralyzed by indecisiveness. That was over. If Daniel was willing to give me a shot, I wasn't going to waste it.\n\nThe first thing I did was to see if we could buy his old home from the estate. I'd pay above market value if necessary. I wanted my nephew to have a sense of stability and permanence. Even if we didn't move there, knowing that the home he grew up in was safe and would be given to him when he was eighteen had to be a step forward for him.\n\nJerry was looking into the purchase of the home. It wasn't fair to keep leaning on him, but he didn't seem to mind and I was using his legal skills as an excuse to stay close until I could work out how I felt about him. The more time I spent with Jerry the more I doubted my decision decades earlier to run from what we had.\n\nHe'd been looking for permanence and building a family and I was looking for adventure. I found what I searched for but it was a Pyrrhic victory. Of everyone in my professional life, I was closest to Belinda, and I treated her like crap for not being Mike. Of everyone in my personal life, I was now closest to Daniel and I'd failed him. If it wasn't for Mike and the faceless friends in my forum I'd have nothing of true value.\n\nOkay, so I'm feeling sorry for myself. It's allowed. In truth, things weren't that bad. I had money and fame and loyal supporters. Being able to live the life you choose is a luxury and to do so without concern for where your next meal is coming from or if you have a roof over your head is a blessing. Most of my life was actually pretty great, but there was an empty core that ate at me.\n\nI began therapy with someone Daniel's therapist recommended. There were no dramatic revelations, nothing that sat me back on my heels. Like most things that are important, it was a journey. Lawsuits trudged on. Daniel began having friends over and we grew to be comfortable with each other. He didn't think of me as an aunt like you see on TV, but we were okay. Maybe that closeness would come in time.\n\nHe hadn't brought it up again, but I called Belinda and asked her to get me a bass.\n\n\"Um, okay, any particulars?\"\n\n\"No, just make it something decent. And maybe an amp.\"\n\n\"Sure. I'll see what I can do. You should have something there in a couple of days.\"\n\n\"Thanks. Listen, I, uh, I bought you a roundtrip ticket back to Ft. Lauderdale and rented you a place near your folks. I'll forward the details and I'm sending you some money. Put it towards their party, okay?\"\n\nThere was silence.\n\n\"Belinda?\"\n\n\"How did you know about the anniversary party? Hell, how did you know I have parents?\"\n\nFair enough. I wasn't a touchy-feely sort of boss.\n\n\"Maybe I haven't been, I don't know, that good of a person to you. I found you on Facebook and saw discussions. I just thought you deserved something nice and your folks seemed sweet. Maybe they did too. Just use the money for the party, and please don't mention it came from me.\"\n\n\"Why?\"\n\n\"Because I'm not trying to win people over or anything. It's just, yeah, the right thing to do.\"\n\n\"Did Mike put you up to this?\"\n\nI laughed. \"No, but I can't blame you for asking.\"\n\n\"Right. Well, I'm sort of at a loss for words. Thanks, I guess.\"\n\n\"You're welcome. Anything else going on?\"\n\n\"Yeah, a bunch. Johnny, Andi and Ted are still on the payroll. Everyone else has been let go with something extra in their last check. The record company is really harping on your contract. You're past due on the latest album by a lot and we're rolling up to the due date for the new album. Some gossip sites keep speculating about where you are and why the tour stopped.\"\n\nI sighed. \"How bad is it?\"\n\n\"With almost everyone gone from the tour, the money has stopped hemorrhaging. I've got a lid on the rest of the stuff, but the label is really getting on me about the album. If I can let them know about Daniel and--\"\n\n\"No. Belinda, that's not happening.\"\n\nI could almost see her rolling her eyes.\n\n\"Okay, well, now you're up-to-date. I'll get you the bass and amp. Does he need picks?\"\n\n\"Yeah, I guess so. Whatever else you can think of. Thanks.\"\n\n\"Happy to do it, and... Thanks. For the stuff with my parents. It's hard sometimes with... Well, whatever. I'll deal. As much as I push, Charlotte, you're doing a good thing with Daniel. If you won't let me get the word out, please start thinking about how you're going to handle it when someone else does.\"\n\nTrue to her word, two days later Daniel had a Schecter Stiletto. He tried to be nonchalant, but his eyes nearly bugged out of his head. After opening the boxes, pulling out the bass, the amp, the different straps, the pedal and the shirts from the manufacturers he was all smiles. Daniel leapt up from the chair and was about to hug me when he remembered who I was.\n\nStopping, he seemed to make a decision. Slowly, he wrapped his arms around me as if I was a delicate vase, whispered thank you and went back to boxes.\n\nNodding, I turned and walked to the bathroom, not trusting my voice. When I closed the door, I started crying. He hugged me. He was happy.\n\nIt was a small step but it felt so damned good.\n\n*****\n\nOkay, quick question: teenage boys around 13 and 14, six of them. Do I give them privacy and leave the house for a while or do I stay and make sure the place isn't burned to the ground?\n\nDaniel was having some friends over. I had no idea what teenage boys do when they got together, but I assumed it had to do with games and junk food. Lots of junk food. I hopped onto the forum as AlohaGirl and asked.\n\nThe responses came in hot and fast.\n\nGirl, have you lost your mind? No, you can't leave six teenagers alone in your house while you go out doing heaven knows what.\n\nFollowed quickly by:\n\nGive them the basement, throw a pizza or bags of chips down the stairs every once in a while and buy Febreze. Teenage boys have a very casual relationship with hygiene.\n\nKentuckyMom was back, and was her usual enthusiastic self.\n\nThere's a Charlotte and the Bobcats trivia game in the archives. D/L that. Someone even made a board. You only need dice. Kids will love it.\n\nIt was a cute suggestion, but there wasn't a chance in hell that was going to happen.\n\nI picked up the phone and couldn't hold back a smile when he answered.\n\n\"Charlotte.\"\n\n\"Hey Jerry, can I borrow you for some moral support?\"\n\n\"Um, I guess. What's going on?\"\n\n\"Daniel's having over a bunch of friends and I'm not sure that I'm up for handling it alone. If I buy us dinner, would you possibly be interested in helping me quell the chaos?\"\n\nHe laughed. \"Sure. When?\"\n\nIt was an odd experience to simultaneously cringe in emotional pain and be happy that someone is doing something you love. The boys spent most of their time in the garage trying to play what they would call music. It wasn't bad. They would need to stretch and climb to reach bad. The best that could be said was that they were enthusiastic.\n\nJerry and I sat in the living room and tried to ignore them. We eventually had five apology pizzas delivered and walked them over to the neighbors. They were reassured that we were keeping an eye on things and the boys were limited to ninety minutes.\n\nI realized that if this was going to be a regular happening, I needed to get the garage soundproofed. Maybe Mike would know of a place nearby where I could rent studio time. They were terrible, they were loud, and they were having a great time. It made me wonder how bad I was at fourteen.\n\nWhen they were done playing I had three more pizzas delivered. They went through them like a buzzsaw through butter. Within a few more hours every drop of soda, every bag of chips and every kernel of microwave popcorn was gone. We had been besieged by a plague of locusts known as Teenage Boys.",
        "When the parents eventually picked up their kids Daniel went to his room and closed the door without saying anything to us. Sighing, I shook my head and looked around at the debris. I grabbed a garbage bag and began cleaning while Jerry loaded up the dishwasher.\n\nDaniel was back out in a few minutes. He'd changed his shirt.\n\n\"Got Coke on it. And I was all sweaty from playing.\"\n\nHe stayed with me and lent a hand until the house was as clean as it was before the boys showed up.\n\n\"Hey, um, that was sort of fun. Thanks.\"\n\nI was stunned. \"It's, uh, it's your house too, Daniel. But you're welcome. As long as I know in advance so I can buy every snack known to man, your friends are always welcome.\"\n\nWhen Jerry was ready to go, I walked him to the door. \"Did I tell you I'm seeing a therapist? She said it would be good if I took up jogging, or hiking, or tennis. I was thinking golf. Maybe we could go to that drive and you can show me how to hit a ball?\"\n\nHe stood there staring at me, his eyes the same blue as when the horizon meets the ocean. Finally smiling, he leaned over and kissed my cheek.\n\n\"I'd like that. Thursday?\"\n\n\"That works. Text me the address and time?\"\n\n\"Sure. I had fun tonight. Made me think of what-ifs.\"\n\nNodding slightly, I tried to smile back. \"I get that. You know that if there was ever going to be someone, it was going to be you, right? It was always you.\"\n\nHe nodded back. \"Okay. I didn't know that, but alright. We just... Well, I'll see you on Thursday. We need to talk about Daniel's estate. There's been some developments, but nothing that really changes things yet.\"\n\nAs Jerry drove away I stood there on the porch. It had been many years and countless experiences since I was in any way an innocent, but that kiss on the cheek meant more to me than any sexual experience in years.\n\n*****\n\nHis golf-ball-hitting lessons, or whatever they were called, were electric. There was a spark between us that was growing more powerful every time we were together. We laughed, told old stories and learned about each other's lives.\n\n\"So, I went off and chased gold records. What did you do aside from becoming some super-lawyer.\"\n\nHe shook his head slightly and placed another ball on the tee. \"Nothing. The normal stuff.\"\n\n\"Normal stuff? C'mon, there had to be more than that. It's been decades.\"\n\n\"Nothing interesting.\"\n\n\"Seriously? I'm an open book and boring as hell. Tell me about your life.\"\n\nHe was quiet for a moment. \"Okay. Met a woman. She was a professor where I lecture now. We fell in love and got married. She died a week after our eighth anniversary. Aneurysm. I hid away from the world for a while and when I came back I dove into my work. Good enough? Can we drop it now?\"\n\nStunned into silence, I just nodded and wondered what to do or say. I opted to hit the ball he'd just set up. We continued in silence for a while.\n\n\"I'm going to get us some water.\"\n\nWhen he came back, he began talking about the case.\n\n\"The truck driver was speeding. Bryan had pretty decent dash cams. So did the truck. We've subpoenaed his logs to see if he was getting the mandated off-time that was required. It's not going to help a whole lot, as Bryan swerved into his lane, but it might reduce some of the liability. He drives for SuperMart, and it's in their best interest for him to win the suit. It reduces the chances of their being successfully sued by Daniel.\"\n\n\"So, we're shit out of luck?\"\n\n\"No, I didn't say that. It's still early. I'm just giving you an update.\"\n\n\"Okay, it's appreciated.\"\n\nThings warmed up a little after that, but were still awkward. Jerry walked me to my car when we finished.\n\n\"I, um, I'm sorry I pushed. If you want to talk about it, I'm here. If you don't, that's fine.\"\n\nHe tried to smile. \"Yeah. It's difficult. Sorry.\"\n\n\"Nothing to be sorry about. Can we do this again?\"\n\n\"Sure. I'll give you a call.\"\n\nThere was no kiss that night.\n\nI had lugged at least ten pounds of cut-up fruit to Daniel's soccer game the following week. I'd seen people do that for snacks in movies and we still had that final guardianship hearing coming up. It turned out that they had a regular rotation, so the kids were getting double the snacks for that game. I didn't care. It was all going down in the ledger on the side of 'good aunt.' I would take any positives I could get.\n\nNot knowing anything about the rules, I followed along with the parents. I cheered when they did and tried to be encouraging. Daniel introduced me to some of the parents. He never used my name, just 'my aunt.'\n\nTowards the end of the game I was approached by a guy with a full beard with streaks of grey running through it. He was tall and seamed in shape, but was losing his dark hair.\n\nHands in the pockets of his hoodie, he stood next to me.\n\n\"Hey.\"\n\nI guessed he was a parent.\n\n\"How are you doing? I'm Daniel's aunt. He's number four.\"\n\n\"Yeah, good player. Been in the league a while. I'm Marty.\"\n\n\"Good to meet you, Marty.\"\n\n'Uh-huh. Definitely. So, I have a business here in town.\"\n\nWas he a team sponsor or something? Did he want a donation?\n\n\"That's cool. What do you do?\"\n\n\"We sell stereos, speakers, cd's and vinyls. Lots of imported stuff.\"\n\nThis wasn't good.\n\n\"Yeah? Sounds great.\"\n\n\"It's not. It's a dying business. Ebay almost killed us and there's no true fans of great audio out there any more. You know what I mean.\"\n\n\"Not really.\"\n\nHe ignored that. \"I was sort of hoping that you might come down and we could do a signing. It would be a huge help.\"\n\n\"I'm sorry, I really can't.\"\n\n\"Listen, it might be the difference between staying open and closing up. I'd totally be respectful, maybe an hour or two, tops.\"\n\n\"It's not that. I wish I could help, I really do, but I can't.\"\n\n\"Lady, I have three employees, a wife and a daughter. How about ninety minutes? You don't know how much this could help.\"\n\n\"I'm sorry, it's Marty, right? Marty, it's not a time commitment thing. Under different circumstances, I'd be happy to do it. The thing is, I'm here for my nephew. Nobody knows who I am here. Hell, this is the first time I've had my natural hair color in twenty years. I'll tell you what, I'll get a hold of some premium marketing stuff, sign it and you can do whatever you'd like with it. Auction it, sell it in the store, whatever.\"\n\nHe looked up at the sky, head tilted back. \"I get it. You have your privacy. It's important to you. More than some strangers keeping their jobs. Not your fault. Whatever you can do would be appreciated. I won't bother you anymore.\"\n\nHe walked away. This wasn't going to be good.\n\n*****\n\nLife is made of cascading moments, at least mine had been. Rushing from moment to moment, from experience to experience, from one adrenaline rush to the next. I was used to them, cresting the highs, surfing the downswings, using momentum just to keep moving. And then there were the other moments, the in-between moments, the ones I had skirted, avoided or simply masked with my online persona. Playing at being not me.\n\nAnd it snuck up on me, so subtly that I didn't notice. Brian's death, the funeral, sorting out the tour, 'rescuing' Daniel, getting guardianship, Jeremy in all his incarnations. These too were moments. Even Daniel's derisive anger and sadness that he fought so hard to hide, at least from me, were moments akin to the blood-pumping, adrenaline-inducing performances.\n\nThen the beat changed, one day at a time, not enough change at once to notice, just enough to see each day as a flow when one looked back at it. The mellowing of Daniel's ire to a teen sullenness. Then there was the shifting of the legal drama to six months waiting and assessing and then there was getting Daniel to school and homework and friends and, and, and. Until finally there was one moment, just a same-ish, singular moment when it suddenly dawned on me that my career was coming to a close.\n\nThere was a parting of the skies and I was granted a moment of clarity. It started with the coffee cake on the table in front of me. I looked from there to the three bottles of wine and then down at my dog-eared copy of Circe.\n\nI was in a book club. With a bunch of middle-aged women. Me.\n\nCharlotte Kahale was in a suburban living room with six other women discussing a book and listening to advice on which restaurants to hit for the most authentic cuisine. No one knew who I was, my hair was now black with streaks of grey instead of electric blue.\n\nThere was no hot college professor discussing symbolism and subtext.\n\nIt turned out I really didn't mind. There was a hot professor I was interested in, but he didn't teach the classics. Everyone was actually... nice. They were welcoming, no one looked down on me because I didn't go to college and they seemed interested in my ideas. I had gold records, Grammys, a history of hedonism, and a spot at the Rock and Roll Hall of Fame and no one at the book club cared.\n\nMarly offered to give me her recipe for the crab puffs, but that was a bridge too far.\n\nI was whistling as I walked through the door. That stopped when I saw Belinda talking to Daniel.\n\n\"So, I guess you two have met. What's going on, Belinda?\"\n\n\"We need to talk. Can we, maybe, go out to the front yard or something?\"\n\n\"Um, if it's not R-rated, you can say it in front of Daniel.\"\n\nShe looked to him and back to me. \"Okay. The label is suing you.\"\n\n\"What?\"\n\n\"Yeah. They're not happy. The album was due out a long time ago and we're approaching the date for the next one and they haven't heard a single track. They found out that the band has been let go, so they know you're not working with them on the road to get new material. They think you just walked. That you decided to leave them in a lurch. They were pissed way back before your...\" She looked at Daniel. \"Before the accident. They are really pissed now.\"\n\n\"You have to be shitting me. We've never stuck to a set schedule and always played things loose. I've released seventeen albums with them for fuck's sake!\"\n\n\"Loyalty isn't their strong suit. The bottom line is all that matters. I've been handling it and keeping them at bay, but shit went crazy yesterday. They can't even lighten up if you went to them and plead your case. The trades found out and it's everywhere in the industry. If they back off now it will look like they caved and they can't take that hit.\"\n\n\"How much is this going to cost me?\"\n\n\"For this album and the next two on contract? You'll be broke. The tour promoter is also talking about suing.\"\n\n\"What a dick. Alright, what can we do?\"\n\n\"Public support. That's the only thing we can do. We need to go wide with your story and shame them into dropping things. If it stays professional, you're screwed. If the public gets behind you and everyone's talking about it, we might get some wriggle room.\"\n\n\"Can't I just turn them all into pigs?\"\n\n\"Um, what?\"\n\n\"Nothing. Okay. I need to think. There's a spare bedroom at the end of the hall. Linens are in the closet over there.\"\n\n\"I already called him.\"\n\n\"Who?\"\n\nShe smirked. \"'I need to think' means I'm going to call Mike. I already called him. He's flying in tomorrow.\"\n\nI nodded. \"I'm sorry. You've been doing great without any support from me. I don't want to cut the legs out from under you.\"\n\n\"Charlotte, I truly don't care. If Mike can help, great.\"\n\n\"Okay. Maybe we should call Jerry.\"\n\nBelinda raised an eyebrow. \"He's the lawyer?\"\n\n\"Yeah.\"\n\n\"Then we should definitely call him.\"\n\nI didn't need this shit. I really didn't. The final guardianship judgment was relentlessly marching towards us, Jerry was trying to ensure that Daniel had something left of his parents estate when he turned eighteen, and I had people like Belinda that depended on me to make a living.\n\nFor the first time since my brother had died, I was royally pissed off. I'd spent too much time pushing my emotions off into a corner and ignoring them and then when I finally got my head out of my ass I'd treated Daniel like a roommate I supported instead of like the kid he was. I'd made millions for the label. Millions.\n\nThere had been three times when I'd let them restructure my contract so they could avoid lump payments that would have seriously impacted their business. They used my name and likeness to push other bands and used some of my old songs for new artists at cut-rate prices. I'd been the good soldier year after year, showing up at their events, taking bands they wanted to break out on the road to open for me, singing on songs with new talent; all that and this was how they repaid me!\n\nFuck it! I was done. I couldn't turn them into pigs because that would be an insult to pigs. So be it. If they wanted a fight, well damn it, I'll cry havoc and let loose the dogs of war! We'd figure this out and I'd walk away from those leeches. Then I'd...\n\nMy internal ranting and building rage was interrupted by Daniel, asking in a small voice, unconfident in a way I'd never heard from him before.\n\n\"What does she mean, you'll lose everything?\"\n\nMy stomach dropped and I slowly turned to face him.\n\n\"Nothing, it means nothing. Just talk, you know? Not literally losing stuff, more like opportunities, and that doesn't matter with me being off the road.\"\n\nHe sat down at the table. \"Don't talk to me like I'm a kid. It was money. Are you going to be broke? You were sort of shitty to Dad, but still, that's not fair to you. Will I go back to a foster place?\"\n\nMy heart broke as I realized he was concerned about both of us. And I was elated because he was worried about me, but that could wait. What he needed now was stability and reassurance. I took a steadying breath before speaking.\n\n\"Daniel, that will never, ever happen. If I have to go to work pumping gas at a local station, that's what I'll do. I'll be honest with you, though. I may take a financial hit and things may change for me. Maybe I'll have to start tracking what I spend and not be able to have people working for me.\" He looked, if not unconvinced then certainly doubtful so I continued.\n\n\"But the reality is that once you hit a certain amount of fame in the industry, you'll never be truly broke. We'll always have food on the table and a roof over our heads. Please don't worry about this, okay? If I need to play some county fair gigs or do some signings, I will.\"\n\n\"Because of me.\"\n\n\"No, absolutely not. It's because of a label that is happy to bleed me dry in good times and then sue me when I need a little consideration. The money stuff has nothing to do with you. I couldn't be more sorry that it took what happened to your parents to make me realize this, but I needed a change. I was doing the same thing over and over for decades.\" I remembered the advice from KentuckyMom so I just spoke to him, from the heart.\n\n\"You and I... We're starting to be okay, right? You don't know what that means to me. And I'm reconnecting with Jerry and I'm learning how real people live. I wouldn't trade that. Not for you, not for anything.\"\n\nHe was quiet for a minute before standing. \"Okay.\"\n\nDaniel trudged back to his room and I got some sheets and pillow cases for Belinda soon after. It was a somber night that was made a little better by hopping on the forum and talking to friends that had no idea we had met in person when they came to see the rock star. They liked her, the image that I presented, but they were true friends to AlohaGirl, the person I was truly becoming.\n\n*****\n\nStumbling out of bed, I threw on a robe. \"Stop!\"\n\nThe banging on the door continued.\n\n\"STOP! I'm coming!\"\n\nYanking open the door, I stared at the guy in jeans and a tee shirt. \"What?\"\n\n\"Um, delivery for Charlotte Kahale?\"\n\n\"What the hell time is it?\"\n\nHe checked his phone. \"Just past eight.\"\n\n\"Who the hell delivers at this hour?\"\n\n\"University of Beer, ma'am. We have a keg for you.\"\n\nBelinda spoke over my shoulder. \"It's a prank. Charlotte, you didn't order a keg, did you?\"\n\n\"No, I didn't order a freaking keg. Why would I... Wait, is University of Beer a brewery?\"\n\nThe guy nodded. \"Yes, ma'am.\"\n\n\"Please don't ma'am me. Do they, by chance, make birch beer?\"\n\nHe smiled. \"Yes, ma'am! Sorry. Yes. We definitely do. Won three awards last year.\"\n\nI sighed. \"Okay, yeah, bring it in. It's definitely for us.\"\n\nFinding my purse, I tipped the kid a twenty. \"Hey, some free advice? Don't be so chipper at this hour. It's gross.\"\n\n\"Um, okay. Sorry.\"\n\nWhen he left Belinda stood there staring at me with a raised eyebrow.\n\n\"Mike must have ordered it. If it's any good he's never going to leave.\"\n\nShe frowned. \"Are you--\"\n\n\"Serious? Absolutely. Why are you so put together?\"\n\nShe was fully dressed and it looked like she'd taken a shower.\n\n\"I've been up for ninety minutes and working for forty-five.\"\n\n\"At this hour? I really don't pay you enough. Let me call Jerry.\"\n\nHe showed up after his morning lecture. I'd meant to sneak down one day and watch him in the lecture hall or classroom or whatever they called it in college. I'd been searching for a \"Jerry type\" for decades and now I had a chance with the real thing. That was something else I needed to move off the back burner. He was either interested or not and I needed to find out.\n\nMike knocked on the door an hour after Jerry arrived. Opening the door, I hugged him.\n\n\"Hey, Jollo, FedEx arrive yet?\"\n\n\"Um, no, why? What did you ship?\"\n\n\"Clothes. I hate luggage. I bought some stuff online and sent it next day.\"\n\nI rolled my eyes. \"And the keg?\"\n\nHe smiled. \"That got here already? You have it on ice?\"\n\n\"You are such a weirdo.\"\n\nMike hugged me again. \"Everything's going to be okay. We'll work it out.\" He nodded to Jerry and Belinda. \"Where's Daniel?\"\n\n\"Backyard with his soccer ball.\"\n\n\"Okay, I'm gonna pay my respects.\"\n\nHe went out the back door and Belinda looked at me. \"That man is very odd.\"\n\nI laughed. \"No arguments from me. He's also the best friend you can hope for.\"\n\nWhen Mike returned he got a cup with ice, grabbed some of the birch beer and sat down.\n\nHe took a swig and began. \"Okay, so I sort of have a plan. Jerry, if I hire you, can you fly down to LA and negotiate with the label?\"\n\n\"You don't have to hire me, but sure. What would I be negotiating?\"\n\n\"Belinda went over what's happening with you?\"\n\n\"She did.\"\n\n\"Okay, so we have an album for them within two weeks and we pay them some cash. In exchange, they let Jollo out of her contract.\"\n\nJerry leaned forward. \"How much cash?\"\n\n\"Offer them a quarter mill and go to half if necessary. Bird in the hand and all. If they decline, offer them more points on the album.\"\n\nI interrupted. \"Wait, wait... We can't get them an album in fourteen days. That's crazy.\"\n\nMike continued. \"No, it's totally reasonable. I'm betting that the album calls for a minimum of eight songs. We'll rent a studio here and I'll bring down the people we need and get a good producer. We'll do an unplugged sort of thing with six covers and two originals.\"\n\n\"I don't have any originals.\"\n\n\"You will. My partner will work with you. We're going to do more than that though. Those eight songs will be an appetizer. We'll follow it up quickly with another album and release it on our own. I can forward you the cash for the label and we'll get it back with the second album.\"\n\nI sat quietly for a moment. \"You think this is doable?\"\n\n\"Absolutely. I'm sort of psyched. Jerry, when do you think you can get to see them?\"\n\n\"Tomorrow. Charlotte's name will get me in the door with someone, even if they are low on the totem pole. Once they find out why I'm there, they will pull in the big dogs. If that doesn't happen for some reason, someone will google my name and when they read about the class action lawsuits, they'll at least want to hear why I'm there.\"\n\nMike tapped the coffee table in excitement. \"Nice. We're on a roll. See, Jollo? Things are looking up!\"",
        "Belinda leaned back in her chair and pulled out her ear buds. \"Um, yeah, maybe not. Charlotte, you're trending on TMZ. Some guy just gave an interview saying that you're here in Davis. He's a struggling music store owner who supports the local indie scene. Said he approached you about doing a signing and you told him you'd get him a signed poster and to leave you alone. They have photos of his daughter and his wife. His employees are talking him up and so are some Davis musicians. You're not looking good.\"\n\nI couldn't catch a fucking break.\n\nMike looked at Jerry and they seemed to share the same thought. It occurred to me yet again that my oldest friend had stayed close to my ex despite the miles between them. Or maybe it was just a man thing. Then Jerry, not Mike, spoke.\n\n\"Charlotte, we have a plan, it's a good plan. You're in a much better place than before. Now tell me about this store owner, what's the story? Is he lying? When did he see you?\"\n\nHeading to the kitchen, I got a glass of water, drank it down and thought.\n\n\"It's a mix. He did approach me. It was at Daniel's soccer game. He wanted me to do a signing at his store. I explained that I was keeping a low profile and I was just here for my nephew. I told him I'd get some premium marketing stuff, sign it and he could auction it or sell it or whatever. That shit brings in big money.\"\n\nJerry nodded. \"Okay, it's not good, but it's not the end of the world. We can patch up the PR issues, but your anonymity is gone. Do you have someone that handles marketing for you?\"\n\nI laughed. \"Yeah, the label.\"\n\nBelinda spoke up. \"Let me look into it. I'll head over to his store tomorrow and see what we can do.\"\n\nI smiled. \"That works. Mike's going to be busy looking for a studio to rent, and Daniel and I are going with Jerry to LA.\"\n\nWe'd been dancing around the subject for months now. I needed some alone time with Jerry to see if our embers could be fanned back into a flame. I couldn't leave Daniel home with strangers, but I'd figure something out.\n\nJerry turned to me. \"You are?\"\n\n\"Yup, I am. Daniel, you ever been to Pink's?\"\n\n\"Is that a strip club?\"\n\nSome of the water I was drinking when he answered shot out my nose. I started a mix of coughing and laughing.\n\n\"No! No, no, no. It's a hot dog stand. A strip club? You're way too young for that. Remind me when you're twenty-one.\"\n\nHe frowned. \"They better be good hot dogs.\"\n\nMike and I laughed and whatever tension in the room broke apart. Things seemed manageable somehow. We continued speaking for another hour before Jerry went home and Mike worked with Belinda on googling studios we could rent. I packed an overnight bag and had Daniel do the same. I was often the opposite of domestic, but I could be in the packing-light-for-travel Olympics.\n\nI hugged Mike before Belinda drove him to his hotel. \"Thanks, Mike. I wouldn't have bothered you, but I'm glad you're here. With the lawsuit against Brian's estate and the final hearing about custody and now this shit with the studio... Well, it's good to have friends when things aren't so great.\"\n\n\"You'd do the same for me. We've got too many years in to be worrying about shit like that. You need me, I'm there. I need you, I know you'll come running.\"\n\nWhen I went back inside I poured some orange juice and made a turkey sandwich. While I was eating, my phone beeped. It was Jerry.\n\nThree tx bought and ready. Pick you up at 5:45.\n\nI smiled.\n\nYou know one of us is a teenager, right? 5:45?\n\nHe can sleep in the car. See you in the morning.\n\nNight, Jerry. Thanks for everything.\n\nNight, Charlie.\n\nA shiver went down my spine. He hadn't called me Charlie in over twenty years. I knocked on Daniel's door on the way to my room.\n\n\"Hey, we need to leave at 5:45. Early flight.\"\n\nNothing.\n\n\"Daniel?\"\n\nFrom his tone, he was back to being angry. \"Yeah, I heard you. I'm packed, okay? Can I get back to the game now?\"\n\nI shook my head. \"Sure.\" I wasn't going to let it get me down.\n\nBrushing my teeth, I thought of the text, Jerry calling me Charlie and how we were going to be spending time together. Staring at my wrinkles and grey hair in the mirror, I realized that I didn't feel old. I didn't feel tired. I didn't feel afraid.\n\nI felt happy. And horny. Definitely horny.\n\nI'd had to shake Daniel's foot to wake him up. I'd have given a great deal to be able to sleep like a teenager again. Jerry showed up like the Patron Saint of Short Flights, complete with strong coffee, hot cocoa and bagels. He looked good. Very, very good. This was Battle Jerry, dressed for war. The man knew how to wear a suit. We flew out of Sacramento and it felt like we were descending almost as soon as we took off.\n\nWe were waiting in line for a cab when Jerry turned to us. \"So, anyplace other than Pink's that you want to hit up?\"\n\n\"No, I think that's it.\"\n\n\"Really? Daniel, would you like to see the Whiskey A Go Go or the Palladium?\"\n\nI was shaking my head, hoping he'd drop it when Daniel replied. \"Sure. I can find something to eat wherever we go, but the first one sounds like a bar.\"\n\nJerry looked shocked. \"They... You've never heard of either of them? What about the Roxy?\"\n\nDaniel shrugged. \"Sorry.\"\n\nSighing, Jerry looked to the sky for a second. \"They're sort of legendary clubs. Your aunt played them. Hell, she owned them. Maybe we could just drive by.\"\n\n\"Yeah, okay.\"\n\nMy nephew wasn't a fan of rock history. We piled into a car and gave them the address for Black Hat Records. We were there within the hour, which wasn't bad for early morning LA traffic. Daniel seemed much more impressed by the tall gleaming building than he was by the idea of clubs that introduced some of the biggest bands in music history.\n\nApproaching the desk with a man wearing black pants, a sweater over a white shirt and with a perma-smile on his face, Jerry pulled a business card out of a metal holder he had in his pocket and handed it to the man.\n\n\"Jerry Weiss, representing Charlotte Kahale of Charlotte and the Bobcats. We'd like to see lead counsel for Black Hat.\"\n\nThe perma-smile didn't waver. \"Do you have an appointment?\"\n\nJerry tilted his head and gave him his own smile. \"After seventeen albums, all gold, eleven platinum, thirteen Grammys and twenty-four top-twenty songs, they'll make some time.\"\n\n\"Yes, sir. I'll let them know you're here. One moment.\"\n\nWhile we waited, Jerry looked at us and nodded towards Daniel's bag. \"What's with the luggage? We're headed back tonight.\"\n\nI shrugged. \"Yeah, I thought that if we had to stay overnight we'd be set.\"\n\n\"Okay.\"\n\nSomeone came down to get us and we were soon sitting in a better class of waiting area. They were making us wait. It was a juvenile power move. They could have at least gotten us a room and had someone in talent chat us up. Daniel wouldn't stop fidgeting.\n\nLeaning over, I nudged him with my shoulder. \"Everything okay? This is all BS. Don't sweat it. Fancy as it is, it's all paid for by people like me.\"\n\n\"Yeah, no, I don't care about that. I, uh, that guy? With the record store? I'm on the team with his daughter. It's going to be weird.\"\n\n\"Belinda will figure it out. The guy was a prick, but I'm thinking TMZ was paying and he needed the money.\"\n\n\"Yeah, right, but... Maybe you could just not make a big deal about it? I mean... Like, I see her all the time, and...\"\n\nIt took me a minute. \"Daniel, do you like this girl?\"\n\n\"No! It's just, you know, um, maybe her dad being pissed off at me isn't such a great idea.\"\n\nI nodded, not wanting to embarrass him. \"Sure, that makes sense. I'll call Belinda and have her, um, I don't know. Be nice?\"\n\nDaniel gave me a half smile. \"Thanks.\"\n\nSqueezing his forearm for a second, I leaned in again. \"It's too bad you don't like her. If she's the girl I'm thinking of, she was cute.\"\n\nHe turned red and put in his earbuds.\n\nPulling out my phone, I texted Belinda just as Tony, the smarmy fuck, walked up, arms open wide.\n\n\"Charlotte! So great to see you. I wish I knew you were coming, we could have had something ready for you. Let's go to my office. You were taken care of, right?\" He turned his head and spoke over his shoulder. \"Amity, did you take care of Ms. Kahale and her guests? Tell me they had something from the new juicer!\"\n\nI held up a finger. \"Tony, calm down. I need to take care of this.\"\n\nBelinda, make sure the store owner is happy with us. Give him the carrot, not the stick. Important.\n\nPutting the phone in my pocket, I stood. \"Get a conference room. Get the lawyers. Get my contract. Get out of my face with that air-kiss bullshit. I'm not here to play games and listen to your lies.\"\n\nHe raised his eyebrows. \"Well, you definitely didn't try the juicer. Life changing! That attitude wouldn't stand a chance. Okay, give me fifteen.\"\n\nTwenty minutes later we were in a small conference room with two lawyers, three people from talent management and a vice president of something or another who did the talking.\n\n\"Charlotte, we appreciate your coming in, and--\"\n\nJerry interrupted. \"Speak to me. I'm representing Ms. Kahale.\"\n\nHe turned to Jerry. \"And you are?\"\n\n\"The lawyer representing Ms. Kahale. I thought we just established that.\"\n\n\"I see. And your name?\"\n\n\"Mr. Weiss.\"\n\n\"Well, Mr. Weiss, Charlotte is in breach of her contract. Our lawyers can give you all the legalese, but it comes down to this. We want the albums or we want our money back plus penalties.\"\n\n\"You'll be happy to hear that we want this resolved as much as you do. Ms. Kahale would like to terminate her relationship with Black Hat. She'll provide an album within twenty-one days and will buy back the rest of her contract for $75,000.\"\n\nThe man smiled. \"Is that a joke? To be honest, it's insulting. Our interns make more than that.\"\n\n\"It's not a joke. We have wriggle room on that number. What we also have is wriggle room on points on the album. Ms. Kahale is willing to give up half of her proceeds.\"\n\n\"Half?\"\n\n\"Half.\"\n\n\"How much are you willing to go up on the buyout?\"\n\n\"Here's the truth. If she doesn't talk up the final two albums, they aren't going to earn you anything. You'll have to bury them and they'll be worth nothing. Charlotte will go full out on PR for this last album, give up half her points and pay you $150,000.\"\n\n\"$500,000.\"\n\n\"$250,000 and I'll have the money wired to you within forty-eight hours.\"\n\nThe VP turned back to me. \"Charlotte, we have your word on promoting the album?\"\n\n\"As long as it can be done remotely, absolutely. I'll do radio interviews, blogs, whatever.\"\n\n\"Well, this is a sad day for Black Hat. You've been a part of the family far longer than I have. We'll be sad to see you go, but we appreciate everything you've done.\"\n\nWhat bullshit. \"Sure, just not enough to not sue me when my brother died and I took some time to be with my nephew. Fuck you. Get the paperwork for me to sign.\"\n\nThe VP turned to one of his lawyers. \"How long will that take?\"\n\n\"We can have things ready by tomorrow morning.\"\n\nI spoke up before Jerry could complain. \"That works. We'll stay in town and be back in the morning. Nine good?\"\n\nMr. VP stood. \"That will be fine, Ms. Kahale. Tony will show you out.\"\n\n\"Wonderful. It'll be the most productive thing he's done since he was assigned to me. What's it been, Tony, seven years?\"\n\n\"Eight, Charlotte.\"\n\nI shrugged. We picked up Daniel where we left him in the luxurious lobby. Someone had gotten him something from that miracle juicer. He asked for another one before we left. I realized he may as well drink up. I probably paid for the damned thing.\n\nOur Uber was waiting when we got out of the building and it suddenly struck me that Daniel was going to have to learn to drive in less than two years. For some reason that really bothered me. It was my own fault, but I'd missed so much of his life that I didn't want him growing up.\n\nWe got in and I sat in the back with Daniel while Jerry was in the front with the driver.\n\n\"I'm sorry, what's your name?\"\n\n\"Phillip, ma'am.\"\n\n\"Phillip, we're going to be doing a lot of driving around today. What are the chances we can just pay you a flat fee and keep you as the driver? Are you free this afternoon? Most of it will probably be you just hanging in your car while we do stuff. Not a whole lot of driving. We'll pay what you normally make in a day and we'll buy food and drinks and stuff. That's on top of this trip. Cash.\"\n\n\"Um, yeah, sure.\"\n\n\"Thanks, Phillip. You like Italian?\"\n\nHe drove us over to La Cienega and Daniel seemed impressed that we were in Beverly Hills. I popped out when we got to The Stinking Rose, picked up our meals and we were soon headed to Santa Monica Boulevard. Jerry turned, looked at me over his glasses and lowered his phone.\n\n\"You did some planning?\"\n\n\"A little.\"\n\nThe driver pulled up in front of Troubadour. I pulled out his meal and handed it to him.\n\n\"I went with pasta. Everybody likes pasta, right? We'll be about an hour. Feel free to take off for a bit if you need to get a drink or something.\"\n\nI had no idea what Uber drivers made in a day, so I gave him six-hundred dollars. If it wasn't enough, I was sure he'd let me know.\n\nJerry turned to me again. \"They're closed.\"\n\n\"Not to us. Daniel, remember that Elton John movie? This is the club he played when he first came to LA.\"\n\nHe looked at the sign and the entrance. \"Did you play here?\"\n\n\"A couple of times a week when I first moved to Cali. C'mon, let's have lunch.\"\n\nWe stepped out into the brutal LA heat and then thankfully into the air-conditioned club. We were met by the manager, who I had spoken with earlier.\n\n\"Charlotte! It's wonderful to see you! Let me show you to your table. We're just getting set up for the day, but ask anyone if you need something to drink. We'll sneak behind the bar and get you what you need. Are you going to be in town for a while? Can we convince you to play a set?\"\n\nHe was a very tall, thin man who had his long grey hair in a ponytail. \"Thanks, Bill, but we're not going to be here long. Next time.\"\n\nBill kissed me on the cheek. \"I'm going to hold you to that. Let me know if you need anything. Enjoy!\"\n\nThey had a table set up for us in the middle of the floor. I pulled the containers of food from the large bag and passed out the plastic utensils. Daniel opened his and the aroma of garlic wafted out.\n\n\"I thought we were going to the strip club for hot dogs?\"\n\nHe was smiling, so I knew he was joking. \"Later. Pink's is a nighttime place. Late night, if possible.\"\n\nJerry got up and walked to the bar. I'm not sure who helped him, but he came back with three waters.\n\n\"The first time I saw your aunt was right here.\"\n\nDaniel took a swig of his water. \"Yeah?\"\n\n\"Yup. It was a screw-up that paid off. I had the date wrong and thought I was going to see Jackson Brown. She, uh, made quite the impression.\"\n\nI laughed. \"I'm sure I did. Have you seen the photo, Daniel?\"\n\nThere was no question of what photo. For my career there is always the photo. I was onstage wearing a black leather bikini and screaming into the mic. I couldn't have been more than nineteen. When I die the articles will have that picture and something from the Rock and Roll Hall of Fame induction.\n\nDaniel rolled his eyes. \"Yeah, I've seen it.\"\n\nI'm sure I caught a lot of crap from Tipper Gore and the Moral Majority, but Mike shielded me from most of the bullshit. It still pissed me off. I did that during the same time guys in bands were wearing more makeup than the Joker and stuffed socks into their skin tight pants to enhance bulgitude, but I was the bad influence.\n\nJerry raised his eyebrows lasciviously. \"Still have that bikini?\"\n\n\"Um, no. I'd need something twice that size now.\"\n\nIt somehow felt right that I was there with Jerry and Daniel. We enjoyed the food, talked about the good old days that weren't always that good and answered my nephew's questions.\n\n\"Were you here when Elton John played that first time?\"\n\nI couldn't help but laugh. \"How old do you think I am? I was like six or something. I'm not that much of a dinosaur.\"\n\nWe thanked the staff and I left a fifty on the table. The previous few hours were some of the best I could remember. After the label, I felt free. Turning at the doorway, I looked back into the club and smiled. I hugged Daniel and he didn't flinch. I was with people I loved. I was with family.\n\nBelinda, Jerry and Mike were helping, but I was putting in the hard work. I was the one steering this ship, even if I leaned on friends when I needed to. We needed to get ahead of the PR shit-storm, handle the rumblings from venues about suing, protect Brian's estate and get the guardianship taken care of permanently.\n\nIt was big. All of it. But somehow, it felt manageable.\n\nJerry opened the door to the car for me. \"What now?\"\n\n\"Let's hit the hotel. I could do with a nap.\"\n\n\"You've planned out this whole day, haven't you?\"\n\n\"Lots and lots of plans. You might star in a few.\"\n\nPhillip pulled out into traffic and closing my eyes, I leaned back into my seat.\n\nI could make out Jerry's cologne from where he sat, or maybe it was a memory of our yesterdays. It would be like him to not change his preference over almost a quarter of a century. Listening to him talk to Daniel as we drove, pointing out landmarks that had been such an important part of my life was comforting. It felt... Domestic. Jerry was a good influence.\n\nThere was some mild irritation that the label let me out of my contract so cheaply, but that was my pride talking. They probably thought that I was retiring and after the TMZ thing, I was toxic. Screw them. This was nothing. I'd gone through worse a dozen times.\n\n\"Ma'am, we're here.\"\n\nI opened my eyes and saw we were in front of the Chateau Marmont. \"It's Charlotte, Phillip. Listen, we're going to be good for a while. Can you pick us up at nine and take us over to Pink's?\"\n\n\"Sure. Call me if you need anything.\"\n\n\"Have a great night.\"\n\nThey tried to take our overnight bags, but that was ridiculous. Still, I wanted Daniel to have the full experience, so we let them take the bags. The man at the front desk pulled out a box and put it on the counter.\n\n\"Welcome back, Ms. Kahale. You have a delivery.\"\n\nI smiled. \"Thanks. Jerry, this is yours. I guessed at the sizes. And there's a toothbrush and stuff.\"\n\nHe gave me a mock frown. \"Who are you? Where's the woman that did everything on the fly and was sure that things would work out? I like this planning, Charlie.\"\n\n\"Good to hear. I have a few more things planned.\"\n\nThe bellman, knowing he had a mark, talked up the hotel's fabled history to Daniel. He led us to our three rooms, opened the door for each, gave us a spiel about the amenities and waited graciously for his tip.\n\nI gave Daniel a bunch of small bills. \"Call for room service if you need something. Charge it to the room, but tip the staff. Play some games, get some rest or watch a movie. Part of La La Land was filmed here. Please don't go exploring. If you need me, call. You good?\"\n\n\"Yeah, fine.\"\n\nI'm not sure if I was hoping for a thanks or a hug, but he just closed the door. Teens can be assholes. Jerry and I headed to his room. He plopped the box down on the bed and looked over at the wall.\n\n\"There's a connecting door.\"\n\nI tried to look surprised. \"To my room? That is a complete shock. Who would have thought that would be there? Let me check and see if it works.\" Walking over, I unlocked it and opened the door. \"It does! I'm so surprised. Just to be on the safe side, maybe we should leave it open while we're here. You know, in case one of us needs something.\"\n\nHe sat down on the bed and gave me a smile that let me know he was gently amused. \"What's going to happen if this doesn't work out? Am I going to lose the friend I've rediscovered? I was also friends with Brian. Will I lose being able to see his son? Are you sure this is a good idea?\""
    ],
    "authorname": "Bebop3",
    "tags": [
        "no strings attached",
        "pueblo",
        "big mike",
        "no dr pepper",
        "no ninjas",
        "santa mike",
        "second chance romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/merely-players"
}