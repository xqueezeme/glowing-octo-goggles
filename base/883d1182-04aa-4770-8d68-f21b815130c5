{
    "title": "The Big Tits Club Ch. 07-08",
    "pages": [
        "- CHAPTER 7: Amazeballs -\n\n****\n\nWithout a word of warning or request, Sam elevated her body, notched my cockhead at the entrance to her pussy, and sank herself down.\n\nMy jaw dropped.\n\nMy eyes went WIDE.\n\nMy hips jerked UP.\n\nSam moaned, tilted her face to the right, and mashed her lips against mine.\n\nAnd then she MOVED.\n\nWrapping both arms around my head, Sam yanked my face down into her prodigious cleavage as she started to fuck me. I felt my cheeks getting squished by her massive mammaries, a constant up-and-down motion as she rose and fell in my lap with rhythmic intensity.\n\nAnd my cock? Holy crap I can't even properly describe what was happening to my cock. Adjectives fail to properly define how it felt to be inside my very first pussy. Tight? Yes. Wet? Hell yes. AMAZEBALLS? Hell fucking yes. And yet so much more.\n\n'Sex is fucking amazing!!' I thought to myself.\n\n'Why the fuck did I ever wait this long?!?'\n\n'I shoulda dropped the entire BTC in a fucking heartbeat and just slammed it into Holly when I had the chance!'\n\nOkay, maybe that last one is hyperbole, but it kinda puts you in the right frame of mind for where I was at that moment. Sex immediately blew every blowjob the girls had ever given me out of the water by a mile. And blowjobs had blown every time I'd ever masturbated myself out of the water by a mile. Sex was basically blowjobs squared, or an order of magnitude better than the greatest ejaculation the girls had ever given me so far, and I hadn't even cum yet!\n\nI LOVED it.\n\nI wanted MORE.\n\nAnd it was over way, way too soon.\n\nI blame Sam's never-ending quest to accomplish a deep-throat. Seriously, from the first BJ against the wall by the garage door, to the BJ on the couch, to me eating her out on the couch, to coming upstairs and eating her again, to fucking her tits, to fucking her face, and then another BJ on the bed, my endurance was pretty much fucking shot. I wasn't just primed to blow; I'd been primed to blow a half-hour ago. And if she'd ever stopped trying to choke herself on my dick and just concentrated on sucking me off, she would've gotten a mouthful in less than fifteen seconds.\n\nAs it was, I think Sam got a pussy full in less than fifteen seconds.\n\nMAYBE thirty seconds, tops.\n\nI mean, if I try to think back and do the math, Sam was humping me at a pace of about three humps per second, and her boobs smashed into my face what... fifty times?\n\nSo yeah, seventeen seconds, give or take?\n\nI didn't ask if she was protected. I didn't realize I was going to cum until I was already cumming. She didn't even slow down, still rabbit-humping me when my dick started spitting sizeable amounts of sperm straight into the back of Sam's womb. I did get SUPER sensitive then, grabbing her shoulders and physically pinning her down against my lap while I bucked and moaned and clenched, spasmodically shooting even more sperm into Sam's snatch.\n\nAnd then it was over.\n\nThe world came back to me what felt like an hour later. I still held a naked and sweaty blonde in my lap, clutching her body like it was a life preserver. She was stroking my spine, cooing in my ear while I trembled in her arms and continued to pant for oxygen.\n\nEventually, I found my voice.\n\nIt was weak, and raspy, and I was still in absolute shock at what had happened.\n\nAnd all I could mumble was, \"Holy crap...\"\n\nSam giggled musically. \"Was that good for you?\"\n\nI pulled my head back, eyes wide in complete and utter astonishment that we'd just had sex. \"Holy crap!\" I repeated, this time a little louder.\n\nSam laughed a little louder, too. She leaned in, nuzzled our noses, and set her forehead against mine. \"That may have been the shortest round of sex I've had, but I certainly enjoyed it more than the others.\"\n\nIt was a light blow to my ego, but a blow nonetheless. Hitting me like a splash of cold water, her words suddenly woke me up from my stupor, and my eyes sharpened while my arms filled with energy. \"Hey, you were blowing me for almost an hour! It's not my fault I couldn't last!\" I argued.\n\nSam cackled, and fresh tears were in her eyes, this time because she was laughing so hard. For those of you who don't know the biology, laughing compresses your core muscles. A girl compressing her core muscles squeezes her pussy. So I basically felt Sam's laughter through her pussy, which did wonderful things to my dick.\n\nI was a horny 18-year-old and having sex for the very first time. And more specifically, I was having sex with a teenaged vixen as gorgeous as SAM. \n\nRecharging was NOT an issue.\n\n\"You wanna see me last?\" I growled. \"Hang on for the ride.\"\n\nRolling the busty blonde onto her back, I immediately rolled after her and settled myself between her spread thighs. Her pink pussy was wet, open, and inviting, and I swiftly notched my cockhead at her entrance. I took one look at her face, old habits causing me to impulsively look for permission even though it was pretty obvious by now that sex was on the menu. Sam's eyes glowed amber as she reached up for me, a carefree smile of complete happiness on her beautiful face. And as I bent down to kiss her lips, I slammed my cock back inside.\n\n****\n\n\"Ohhh... shiiiiit, Matty...\" Sam groaned as she closed her eyes and let her head loll over to the side. The final aftershocks of her most recent orgasm still sent little ripples of pleasure into her brain, and she quivered beneath me for another minute before finally going still. \"Fucking A... That was... That was...\"\n\n\"That was fucking incredible,\" I finished for her, still quivering a little myself. My abs clenching, my cock squeezed out the final few drops of sperm straight into the back of Sam's womb. Fortunately, she'd reassured me about ten minutes ago that her mom had put her on birth control as soon as she got her first D-cup bra.\n\nWhen I finally ran out of gas, I reached up to remove Sam's legs from their positions hooked over my shoulders. I'd bent the beautiful busty blonde bombshell in half for the final charge, getting a real kick at the sight of her high heels waving in the air as I pounded the hell out of her while trying to get my big dick super-deep into her depths so I could detonate my cum as close to her womb as possible. Despite the reassurance that the likelihood of knocking her up was near impossible, the mental notion of breeding her had certainly stirred up some primal sense of satisfaction in me.\n\nSam's legs fell to the sides as I collapsed downward, first planting my palms on the mattress to arrest my fall and then bracing my elbows beneath me to keep from crushing her. Her tits were still big enough to press against my chest, and I snaked my hands beneath her shoulders to hold my very first lover while setting my forehead down on the pillow beside her head.\n\nSam brought her legs back up and crossed her ankles behind my lower back, keeping our bodies intimately joined together. She stroked my spine and cooed in my ear while I trembled in her arms and continued to pant for oxygen. She was breathing hard too, but managed to kiss my cheek and croon into my ear, \"I agree. That was fucking incredible... I've never felt like that before.\"\n\nI took deep, long breaths, but managed to turn my head to hers and respond, \"Likewise. Never even dreamed it could be that good.\"\n\n\"Me, neither.\" Sam nuzzled the side of my head, still trying to catch her breath. \"Everyone said sex was supposed to be this amazing thing, but the best orgasms I ever had were with someone's tongue on my clit. I was beginning to wonder if the problem was with me. Now I know for sure it's all about picking the right partner. YOU were the key difference.\"\n\nI chuckled and turned to peck her nose. \"I'm glad you think so.\"\n\nShe smiled and kissed me again. But a moment later, her eyebrows rose as she caught her breath and gave me a curious look. \"Was that really your first time? I mean, fuck Matty, you were so GOOD. Did I really get your cherry?\"\n\nI nodded.\n\nShe furrowed her eyebrows, her smile fading. \"I'm sorry. I didn't even ask you for permission.\"\n\nI shook my head and nuzzled her nose in the process. \"No need to apologize. I loved every second of it.\"\n\n\"Me, too.\" The smile was back as she sighed happily. \"I wanna do it again.\"\n\n\"Again? You came what, three times?\" I smiled a little proudly. \"Not even counting all the ones when I was going down on you?\" \n\nSam clenched her pussy around my penis. While I'd never really gone soft after that first 15-second ejaculation (seventeen!), this time my dick was spent and limp inside her. I could still feel her inner muscles a bit, but knew it would take more than a couple of cunt clenches to get me in working order again. She knew it too and giggled. \"I didn't mean right NOW. I gotta get home before my parents do. And you burned up all my remaining time with that last round.\"\n\nI shrugged. \"You bruised my ego with the crack about how quickly I popped off. I had to make sure I outlasted you.\"\n\n\"Mmm, and you did. Seriously, Matty, that was incredible. I wasn't kidding about believing sex wasn't all people made it out to be. Zofi's given me better orgasms than any of those greasy fuckwits ever did, and here you come along and destroy all my expectations.\"\n\nThat got my attention. \"Zofi?\"\n\n\"Oh, shit.\" Sam's eyes popped open WIDE and she clapped both hands over her face. \"A few good orgasms and I'm spilling all my secrets.\"\n\nI chuckled and shook my head. \"Don't worry about it; I suspected anyway. She HAS kissed you quite a few times by now. Can I ask how long you two have been... uhhh...\"\n\n\"Wouldn't you like to know,\" she replied with a mischievous smirk.\n\nI leaned over and started nibbling on her collarbone, murmuring, \"I think I know how to make you talk.\"\n\nSam immediately started moaning as she clutched my head to her neck, but a moment later she tensed up and groaned, \"Parents. Home. Before.\"\n\n\"C'mon...\" I pulled my head up and stared down at her. \"That first time she licked my cum off your boobs and shoved her tongue into your mouth? I nearly came again on the spot.\"\n\nSam's eyes sizzled. \"Play your cards right and you might get your first threesome.\"\n\nI winced. \"Only if Belle doesn't castrate me before then.\"\n\nThe sizzle in Sam's eyes went away. \"Why would Belle castrate you?\"\n\nMy wince turned into a frown as I sighed. \"She started taking the pill on Monday. Now I need to make clear I never promised her we'd have sex. In fact, I explicitly told her I wouldn't, if for no other reason than it wouldn't be fair to the rest of the BTC. But-\"\n\n\"You don't have to explain the rest.\" Sam grimaced. \"She is NOT going to be happy I beat her to the prize.\"\n\nI frowned. \"Is that all I am to you? The prize in a race to get my cherry first?\"\n\n\"What? No. Oh no-no-no-no.\" Sam started sitting up, so I finally pulled out of her and rolled onto my back. She pivoted onto her side, planting her elbow and propping her head up on one hand. \"I didn't plan this. I mean, I did plan to come here and have a little fun after the wedding. But I did NOT plan on taking your virginity. That part just... uh... I didn't mean for that to happen.\"\n\n\"Why did you?\"\n\n\"Because...\" Sam's eyes softened, and as she stared into mine that carefree smile of complete happiness spread across her beautiful face. But a moment later she blinked twice, furrowed her eyebrows, and abruptly sat up. Looking at the clock she said, \"Shit, I gotta get home before my parents do.\"\n\n\"Sam...\" I groaned, realizing she was avoiding the question.\n\nClosing her eyes, Sam held up a finger and grimaced. She exhaled slowly, opened her eyes again, and said, \"I know that we need to talk about this, but I really don't have the time right now. I've GOT to beat them home.\"\n\n\"Don't deflect.\"\n\n\"I promise we'll talk later, okay?\"\n\n\"There's still plenty of time to-\"\n\n\"Matty, please?\" She stared at me, her eyes begging me to drop it, and all thoughts of pressuring her any further evaporated. Something incredibly momentous had happened between us, life-altering really, and I was desperate to understand why. But my relationship with Sam - with all the BTC girls, really - had been built on me never pushing them beyond what they were comfortable with. And I couldn't bring myself to push her on this, either.\n\nWith a sigh, I nodded my agreement silently, and Sam immediately vaulted off my bed and to start hunting around for her clothes. I watched the way those big naked tits wobbled as she hunched over and bent to grab first her dress and then her corset. The garter belt and thigh-high stockings we'd never taken off. She said her feet were rather sore now, so she actually took her fancy high heels OFF to walk around barefoot (well, stocking-footed). And after taking a deep breath, I finally rolled off the bed as well.\n\nI didn't re-dress in my penguin suit, obviously. I grabbed clean underwear, a pair of jeans, and a T-shirt. I turned around to see that Sam was wearing the dress again, but she held up her hands and asked helplessly, \"Where are my panties?\"\n\n\"Downstairs next to the couch,\" I explained. \"From when I went down on you the first time.\"\n\n\"Oh, right.\" She stood up, checked herself out in the mirror, and guffawed at the image before her. \"Fuck me dead, I look a horror show! This makeup was supposed to be waterproof.\"\n\nI looked up. Her hair was wildly astray, semi-clipped into place but with loose strands everywhere. Her face was the real disaster, with running mascara (eyeliner?) everywhere. \"You still look beautiful to me,\" I said sincerely.\n\nSam flashed me a smile, but gestured for me to hurry up. I stood and followed her out the door. We went straight to the family room to collect her panties...\n\n... only they weren't there.\n\n\"Looking for these?\" a quiet voice sounded behind us.\n\nMother sat on a stool at the kitchen island, Sam's panties atop the granite countertop.\n\n\"You're home early again,\" I stated evenly, recovering from my surprise rather quickly.\n\nHer eyebrows rose up. \"Is there a reason I shouldn't be here in my own home?\"\n\nI rubbed my forehead and sighed. \"Of course not, Mother.\"\n\nSam, hugging herself nervously, stepped forward and quickly snatched up her panties off the countertop. \"I'm so sorry,\" she muttered in embarrassment.\n\n\"No need to apologize. These things happen.\" Mother arched an eyebrow. \"I DO, however, hope you're using protection.\"\n\nSam and I looked at each other. For a brief second, I thought about denying that we'd been having sex, but Sam had been screaming \"Fuck me! Fuck me!\" and \"Your cock is so fucking DEEP!\" - things like that. I pursed my lips and nodded to her.\n\nSam stared at the floor as she replied softly, \"Yes, ma'am, I'm taking birth control pills.\" \n\n\"Good then.\" Mother nodded with satisfaction, the matter closed. \n\nI sighed and said, \"I need to drive Sam home.\"\n\n\"Of course, Matthew.\" Mother flicked her hand dismissively and returned back to her glass of wine and a hardcover book.\n\nSam tried to give her a bashful smile, but I grabbed Sam by the elbow and hustled her into the garage and then into the van.\n\n\"Ohmigawd,\" Sam exclaimed quietly as soon as she sat down in the passenger seat, burying her face in her hands.\n\n\"Relax. Don't worry about it,\" I assured her. \"It's not a big deal.\"\n\nSam glanced out the window toward the door as I hit the garage remote. \"Did she know you were a virgin?\"\n\n\"Well, she asked and I told her I was after she caught us two days ago.\"\n\nShe looked back at me. \"So she knows you're not a virgin anymore?\"\n\n\"Apparently.\"\n\n\"Ohmigawd.\" She buried her face in her hands again.\n\n\"I told you, relax. I'm a guy, which means I can't get pregnant. Mother's biggest worry is about me knocking YOU up, but you told her you're on the pill. Now if YOU had been a virgin and we came downstairs to find YOUR dad waiting for us, I would be shitting bricks.\"\n\nShe gave me a mournful look. \"I'm sorry for putting you through this, Matty.\"\n\n\"I told you not to worry about it.\" I shifted the van into reverse. \"I promise I won't love you any less.\"\n\nSam froze and went deathly quiet for a second. I only noticed because I was backing out of the garage and happened to look over at her while turning around to face the rear. And she was still looking at me silently when I stopped in the middle of the road and prepared to shift the van back into drive.\n\n\"What?\" I asked, pausing with the van at a full stop.\n\n\"Do you love me more for what we did?\" she asked quietly.\n\nI broke into a big smile. \"Well... yeah, totally. I mean, I don't want you to think I've fallen head over heels in love with you or anything like that. The Rule clearly states I can't fall in love with any of you. But... yeah... Planned or not, what we shared was AMAZING. I'm never going to forget my first time. I'll never... EVER... forget the girl who made me feel so special. And even if your parents packed you up and dragged you back to Australia tomorrow, we would always have that connection.\"\n\nSam was suddenly out of her seat, having never actually buckled up in the first place. Her hands held my head as she kissed me with as much fierce passion as she'd started with when we first got into the house.\n\nAnd then she broke away, saying, \"Holy shit I want to fuck you again right now. But you'd better take me home before I get grounded and never get to see you again.\"\n\nI nodded, grinned, and shifted the van into gear.\n\n****\n\nI got Sam home before her parents returned from the wedding, and she gave me another fierce kiss in the van before running up to her front door. I waited on the curb to make sure she got inside safely, and then drove back home. Mother was still in the kitchen with her book and the glass of wine, but neither of us said a thing to each other as I headed upstairs to take a shower.\n\nIn the morning, however, Mother wanted to eat Sunday brunch together. But instead of driving out to a nice restaurant, she'd ordered from her favorite place and had the food delivered. I knew then that we'd be having a conversation unsuitable for a public place.\n\nAt least she let me start eating before launching into the expected Spanish Inquisition. But halfway through the meal, she asked out of the blue, \"I know you've had the girls coming over nearly every afternoon, but for how long has Sam been visiting you alone?\"\n\n\"What?\"\n\n\"I believe you heard the question.\"\n\n\"All the girls have come over to the house alone at one point or another,\" I hedged.\n\n\"Don't play dumb with me, Matthew.\"\n\nI took the time to finish chewing, swallowed, and gave her a terse look. \"I'd rather not say.\"\n\n\"This is MY home, Matthew. I have the right to know what's happening under my roof.\"\n\nTaking a deep breath, I measured her words and exhaled slowly. With a dismissive shrug, I admitted, \"Wednesday night was the first time. Then you were here when we came down on Thursday.\"\n\n\"You were still a virgin on Thursday night. That wasn't a lie, was it?\"\n\n\"It wasn't a lie.\"\n\n\"But you're not a virgin anymore.\" It was a statement, not a question.\n\nI shrugged and blushed a little. It's not every day your mother confronts you about losing your virginity.\n\nMom pursed her lips and sighed. She glanced up at the ceiling for a moment before remarking, \"She was wearing a very nice dress last night. Did you two go out on a date?\"\n\nI shrugged. \"One of her dad's co-workers was getting married and I was her escort to the wedding.\"\n\n\"That sounds like a date.\"\n\nI shrugged again.\n\n\"It's been a while since you were last out on a date. More than a year, to my knowledge.\"\n\nI shrugged again. \"I've been busy.\"\n\n\"With six beautiful young girls visiting you almost every day, I'll bet you've been busy.\"\n\n\"It's not like that, Mother. They're my friends.\"\n\n\"They're beautiful young girls, and you're a horny teenaged boy.\"\n\n\"Why does everybody assume I have to be fucking the-?\"",
        "\"Language, please, Matthew,\" Mother interrupted.\n\nI sighed and tried again. \"Why does everybody assume I have to be having sex with the girls to be friends with them? I'm NOT.\"\n\n\"Well, you're apparently fucking Sam.\"\n\nI popped my eyebrows at Mother's use of the f-word. It told me she was dead serious. Or she was messing with me. I couldn't actually tell. Pursing my lips, I said defensively, \"That's different.\"\n\n\"Are you in love with her?\"\n\n\"With Sam? No.\" I shook my head. \"We're friends.\"\n\n\"'Friends' don't spend three out of four nights alone together, having sex or... or whatever you two were doing to each other before tonight.\"\n\nI buried my face in my hands. \"I canNOT believe I'm having this conversation with my mother.\"\n\n\"Is she going to become your girlfriend?\"\n\n\"No.\"\n\n\"Do you intend to keep having sex with her?\"\n\n\"I don't know! We didn't plan on last night happening! It just... I mean...\" My shoulders sagged. \"Things got out of control, annnnd we didn't really have time to talk about it because I had to get her home before her parents got home from the wedding, and I have NO idea what we're going to tell all the rest of the girls, okay? I don't know what's going to happen next.\"\n\nMother frowned at me. \"You're expecting the other girls to get upset that you slept with Sam.\"\n\nI sighed. \"We have a rule: Nobody dates Matty.\"\n\n\"Despite the fact that you went on a date with Sam last night.\"\n\n\"That was... uh... a special occasion. And the group approved.\"\n\n\"So the rule is more understood to mean: 'Nobody has sex with Matty'.\"\n\n\"Pretty much.\"\n\n\"Then why has Sam been coming over here in the evenings? And alone? Were you two planning to keep that a secret?\"\n\n\"No, of course not.\"\n\n\"Were you two planning to keep the fact that you've had sex a secret?\"\n\n\"Uh... well...\"\n\n\"That sounds far less certain than, 'No, of course not.' You DO feel the need to keep your lost virginity a secret, don't you?\"\n\n\"Well...\"\n\n\"Some of those girls are going to get jealous when they find out, aren't they?\"\n\n\"It's not like that.\"\n\n\"Because some of those girls want to have sex with you too, don't they?\"\n\n\"I... uh...\" My voice trailed off as I thought about Naimh constantly trying to get into my pants. And ah, shit, there was the whole thing with Belle starting the pill for me. My face gave me away.\n\n\"There ARE others who want to have sex with you.\" Mother leaned forward and planted her elbows on the table, folded her fingers together, and set her chin down atop them. Her eyes glittered with intensity.\n\nI rubbed my forehead. \"It's... complicated.\"\n\n\"Teenage relationships are always complicated. It's been a while, but I was eighteen once, too.\"\n\n\"I do NOT want to think about that.\"\n\nMother chuckled. \"Are these other girls using birth control?\"\n\nI rolled my eyes. \"Is that all you care about?\"\n\n\"I care a LOT about whether or not my only son accidentally gets a girl pregnant. Yes, I do.\"\n\n\"Yes, yes, accidentally having me was the worst thing that ever happened to you. I know, I know.\"\n\n\"Matthew.\" Mother scolded rather loudly, on the verge of yelling, but she took a deep breath, collected herself, and sat up straight. \"I do not pretend to be a very good mother. I don't have that... maternal... instinct. I am sorry that I've always prioritized my career over you. I try to make myself feel better by making sure that you have always been provided for, but I realize that is small comfort for a boy who never really had a father.\"\n\nI rolled my eyes and glared at her.\n\n\"Well... you never really had a mother, either,\" she conceded. \"And there's nothing I can do that will make up for the time already gone by. Nor will I suddenly become a constant part of your life.\"\n\nShe paused, considering her next words.\n\nI arched an eyebrow. \"I smell a 'but' coming...\"\n\nMother looked amused, and then deliberately began, \"However... you are no longer a child. In fact, not only are you legally of age, there are some who would say you've only now reached full maturity tonight. And in plain simple fact, I find it much easier to deal with adults than I do with children.\"\n\n\"What are you saying?\"\n\nMom shrugged. \"I'm saying that the older you get, the more we'll have in common. And the more we have in common, the more I hope you'll come to understand that while I will never be the affectionate mama bear to you that Belle's mother was, I DO love you in my own way. And I'd like to do what I can to support your needs.\"\n\n\"Support my needs?\" I furrowed my eyebrows. \"Like what?\"\n\nShe gestured across the table. \"What do you need?\"\n\nI blinked, thought about it, and shrugged. She'd given me a large, empty house with a swimming pool suitable for attracting a group of hot babes to come hang out with me, a minivan, a credit card to pay for my expenses even though I didn't spend much, and a lot of unsupervised time to myself. \"I... I guess I already HAVE everything that I need.\"\n\nMother smiled. \"Guess I didn't do SUCH a bad job. You turned out to be a pretty fine young man.\"\n\nI rolled my eyes. \"You gave me my material possessions. Belle and the Kramers deserve the credit for me turning out to be a fine young man. Some other boy with the resources I've had could've turned into a drug dealer.\"\n\nMother's eyes sharpened. \"You're NOT doing any drugs, right?\"\n\n\"Jeez, of course not. You kidding me?\"\n\nShe stared at me a little bit just to be sure, the kind of stare a lawyer would use to intimidate a witness on the stand. But a moment later she relaxed, apparently satisfied.\n\n\"Well there is one thing I'd appreciate in the future,\" I said, thinking back to last night.\n\n\"What is it?\"\n\n\"Could you NOT intimidate the hell out of Sam or anyone else who comes to visit me?\"\n\nMother frowned, as if she had no idea what I was talking about. \"Intimidate? I didn't do any such thing.\"\n\n\"Then what was that whole bit with you lurking in wait for us to discover Sam's panties had gone missing?\"\n\nMother rolled her eyes. \"I wasn't 'lurking in wait'. I picked up the panties because I was curious and walked back into the kitchen. Once I heard you two yelling and screaming up in your room, I realized what was going on and tossed them aside. You'll recall I was in a fully lit kitchen, reading a book and drinking wine.\"\n\nI blinked, thought about it, and sighed. \"Okay fair enough. 'Intimidating' may just be your natural state.\"\n\nMother's smile was all teeth. She'd taken it as a compliment. How in the world someone with HER personality had ever given birth to ME I'll never know.\n\n****\n\n\"Wait-wait-wait. Sam did WHAT?!?\"\n\n\"Shhh!\" I shushed Belle with a finger to her lips. \"Your dad is right downstairs!\"\n\nEyes aflame, Belle yanked my hand away from her mouth and stared daggers into my eyes. With steam coming out of her nostrils, she growled through clenched teeth, \"Sam did what?\"\n\nI winced. \"You're mad.\"\n\n\"Matty!\" she hissed semi-quietly, still clenching her teeth. \"I got on the pill for you! I was supposed to be ready by tomorrow!\"\n\n\"In all fairness,\" I hedged, \"I never promised we'd-\"\n\n\"You never PROMISED?!?\" she roared, no longer trying to keep the volume down.\n\nI held up my hands defensively and said, \"Maybe we shouldn't be having this conversation here.\" I got off her bed and headed for the door.\n\n\"You fucking come back here, Matthew!\" Belle howled after me.\n\nI opened the door and headed down the stairs. Mr. K had come to the hallway and was looking up at me with a questioning look on his face, but he didn't say a word because Belle was already stomping after me howling, \"I can't BELIEVE you! You rat-faced, inconsiderate, brain-damaged shithead!\"\n\n\"Annabelle, please watch your language,\" Mr. K scolded as I passed him.\n\n\"Sorry, Mr. K,\" I apologized.\n\n\"Do I want to know why she's mad at you?\" he asked casually.\n\n\"Not really.\"\n\nMr. K shrugged and patted me on the shoulder as I passed him and headed out the front door.\n\nBelle followed me out the front door and down to the sidewalk. At least she'd stopped yelling once we were in public. I glanced back and saw Mr. K chuckling in amusement on the doorstep before he went back inside. Belle was right behind me.\n\nI went into my own house and closed the door after Belle came in. Mother was in the living room reading her book, and she looked up at our entrance. It was unusual for me to come back to the house so soon on a Sunday afternoon when visiting the Kramers.\n\n\"Hello, Belle,\" Mother greeted while taking in the girl's obviously livid demeanor.\n\nBelle managed to growl a 'hello' in reply while Mother pointedly looked at me. I figured she had already put all the pieces together, so I went ahead and explained, \"I told her about Sam.\"\n\nMother blinked, raised her head, and said, \"Ah.\" And after a moment's thought, she added, \"You know, I think I'm going to go out for a while. Give you two some privacy for this conversation.\"\n\nBelle's jaw dropped as she gawked at me. \"Your mother knows?!?\"\n\nI shrugged. \"She was here last night when Sam and I came back downstairs.\"\n\nBelle rubbed her forehead and clenched her eyes as if she had a headache. Still keeping her eyes closed, she jabbed one finger at the stairs, clearly directing me to go up to my room.\n\nI did as ordered, marching up to my room. Belle followed and closed the door behind her. And as soon as the latch clicked, I wrapped her up in my arms and kissed her fiercely.\n\nBelle squeaked in surprise and initially tried to push me off, but a second later her body relaxed, and she flowed back into the kiss. Our lips moved up and down and around together in waves while our tongues came out to play. And I squeezed her tight as if the strength of my arms could somehow express the strength of my love for her.\n\nEventually, I released her. Belle pulled her head back, pale green eyes aglow as she stared at me with the same love I felt for her. But a second later they hardened as she gave me a medium strength shove to the chest. \"You can't just kiss me and make everything better.\"\n\nI shrugged. \"Didn't make things any worse. I love kissing you,\" I stated sincerely.\n\nShe pursed her lips and deliberately walked over to my desk chair. It would be less likely for us to start messing around there than if she'd gone to sit on my bed. I, on the other hand, did go to sit on the edge of the bed facing her.\n\n\"So Sam got your virginity,\" she stated flatly. \"Just mounted herself on you before you could realize what was going on.\"\n\nI nodded slowly. \"She apologized for not asking me.\"\n\n\"Yeah, I'll bet she was soooo torn up about it,\" Belle scoffed. \"You know she DID say that one time it wouldn't be such a stretch for her to fuck you just so she could be your favorite.\"\n\n\"I don't think that's what was going through her mind. I mean, I DID ask her why she did it, but she looked at the clock and said we had to hurry home.\"\n\n\"Convenient.\"\n\nI sighed. \"I thought so, too. She dodged the question. But at the same time, I genuinely believe that she doesn't know why she did it. It was an impulsive decision. Ten seconds earlier, she'd been bawling her eyes out over her inability to deep-throat me even though I told her it wasn't a big deal. Maybe having sex with me was her way of... making it up to me? Something like that.\"\n\nBelle looked at me skeptically. \"She couldn't deep-throat you, so she figured she'd give you her pussy instead?\"\n\n\"I know it sounds crazy, but it's the best explanation I've got.\"\n\nBelle pursed her lips and sighed, looking thoughtful. She started shaking her head, stopped, picked her head up to look at the ceiling, and fidgeted in her seat a bit. After another minute, she finally spoke again.\n\n\"So what was it like?\" she asked quietly, without looking at me.\n\n\"What? Sex?\"\n\n\"No the chocolate fondue fountain, you idiot. Of course sex! What did it feel like to have her pussy wrapped around your dick?\"\n\nI grinned at the memory. \"It felt incredible.\"\n\n\"Better than a blowjob?\"\n\n\"WAY better. AMAZEBALLS. Like my entire being was surrounded by an ocean of ecstatic pleasure that filled me up with overwhelming bliss until it started leaking out of my pores.\"\n\n\"Wow. That's uh... pretty descriptive.\" Belle shivered and I noticed the way her nipples started poking through her shirt. She was only wearing a t-shirt over her bra, dressed for hanging out around the house, not going out.\n\n\"I've been trying to put words to the experience since last night.\"\n\n\"Uh-huh...\" Belle's eyes were glassy, and her free hand drifted down from her hip, rubbing her thigh as it moved closer to her crotch.\n\n\"Are you imagining me having sex with Sam?\" I asked quietly. \"Or are you imagining me having sex with you?\"\n\n\"With me...\" she admitted with a sigh as she turned to look at me.\n\nAfter a moment's thought, I got off the bed and reached down to scoop my arms beneath Belle's butt and around her lower back. She stiffened at first, not prepared for me to pick her up, but relaxed once I held her light body comfortably in my arms and backed up to my bed. I sat up against the headboard and spread my legs, sitting Belle between them with her back to my chest. I hooked my left hand beneath the hem of her t-shirt, letting my palm slide up her belly until I cupped her right breast beneath her bra. My right hand slid down beneath the waistband of her sweatpants and into her panties until my middle finger found her cleft.\n\nBelle inhaled sharply when that middle finger penetrated her nether lips. I didn't have to push very far to find moisture, and after coating my fingertip in her honey, I pulled back far enough to rub that moisture over her clit. She shivered in my grasp at the touch, but I had already stopped rubbing as I'd gone back to get more juice.\n\n\"Tell me more...\" she breathed.\n\n\"I was so hard inside her,\" I said quietly. \"My very first pussy. She was absolutely soaked after all the orgasms I'd eaten her to. I can't describe how it felt to be suddenly surrounded by so much heat and warmth. Blowjobs are nice, but I suppose there's a reason guys want to feel a deep-throat, to feel every last inch completely encased inside that constricting pressure and not just the top several inches.\"\n\nBelle moaned and let her head fall back against my chest. I kissed her crown and continued rubbing her clit. By now, I was able to get two fingers into her tight slit each time I went spelunking for more moisture, and only then did I realize I'd never actually put my fingers into Belle's pussy before today. And as soon as I had that thought, I went to push my fingers back in, this time curling them slightly in search of Belle's g-spot while simultaneously putting pressure down on her clit with the heel of my hand.\n\n\"Nnnngghhhh...\" Belle groaned at the sensations, eyes clenched as she slowly waved her head side to side against my chest.\n\n\"She was riding me so hard and so fast. She'd wrapped her arms around my neck and yanked my face into her boobs. Those things are HUGE, and as she kept humping up and down those big tits kept banging into my face.\"\n\nBelle giggled at the imagery but then immediately moaned as my heel ground down on her clit again.\n\n\"The sensations were so overwhelming that I came inside her after only seventeen seconds or so. I blame her, of course, for blowing me for like an hour without letting me cum. I was practically on a hair-trigger, so I couldn't help but bust my load almost right away.\"\n\nBelle opened her eyes and looked up at me in surprise. \"Seriously?\" she asked breathily.\n\nI grinned and nodded, tightening the grip of my left hand on Belle's right breast and thumbing her nipple. \"Sam had a good laugh about it, but I didn't even really go soft. We were both still incredibly horny, so I rolled her over and started pounding away. Sex is pretty instinctive. It's not like she had to teach me how to thrust. She wrapped her arms around my shoulders and her legs around my waist, and I just started going to town on that pretty pussy. Super hard.\"\n\n\"Super deep,\" Belle breathed, looking up at me again.\n\n\"Indeed. Well, my ego had gotten involved a bit,\" I admitted. \"She made a crack about how that had been her shortest ever round of sex.\"\n\n\"And you had to prove her wrong.\"\n\n\"Mmm-hmm. I pounded the hell out of her, plundering that pink pussy with powerful, pistoning penetrations.\"\n\nBelle laughed. \"You really love alliteration, don't you?\"\n\nI laughed with her. \"I like to think of myself as an adept alliteration aficionado.\"\n\n\"And I'll bet you loved every minute of having sex with her.\"\n\n\"I loved fucking the shit out of her is what I loved. Hammering the hell out of her and watching the way her face contorted in response to the things I was doing to her. I imagine it's the same kind of thrill you get when you go down on me: watching the emotions crossing my face because of the pleasure you are giving to me.\"\n\n\"Yeah...\" she murmured, panting for breath while sitting up a bit so she could reach behind her and rub her hand over my bulge.\n\n\"Nuh-uh,\" I scolded, freezing both of my hands from moving, and then ordering, \"Hands off. I'm playing with you right now.\"\n\nBelle whimpered but pulled her hand back. She did skootch her butt backward into my crotch and wiggle it against my erection, though. I let that slide and resumed my fondling of her breast while continuing to fingerbang her. And she glanced back at me with heavily hooded eyes and asked quietly, \"It sounds like the most amazing thing in the world.\"\n\n\"It was.\"\n\n\"Wish you'd let Holly fuck you that one time?\"\n\nI chuckled. \"Actually, for a moment, yeah I wish that. I mean in hindsight, I'm glad I didn't. I mean, I know WHY I waited... I love you and the rest of the BTC. For me at least, it was so much better having my first time with Sam than it would've been with Holly.\"\n\n\"Just like my first time will be so much better with you than with anyone else,\" she said quietly.\n\nI took a deep breath and sighed, feeling the weight of inevitability settling over me.\n\nBelle sensed the change in my mood, not to mention the way I'd stopped fondling her. She craned her head back to look at me, an expectant look on her face.\n\n\"Don't give me any bullshit about seeing me like a little sister,\" she intoned quietly. \"Not while you've got two fingers in my twat and a hand inside my bra.\"\n\n\"I wasn't going to say anything.\"\n\n\"Sure you weren't,\" she drawled, not believing me. But she didn't press the issue, instead sighing and giving me another expectant look. \"You've known all week why I was getting on birth control - and it sure as hell wasn't for some sweaty second-string jock at school.\"\n\n\"I know.\"\n\n\"So don't give me any bullshit about how you never 'promised' you'd make love to me. You've always known it would be you. And in fact, I'm actually GLAD Sam got your cherry last night.\"\n\nThat stopped me short. \"Wait, what?\"\n\nBelle smiled a sort of evil grin, like she knew she'd checkmated me even though I hadn't realized it yet. \"Sam took away the only possible excuse you could still have for you and me not having sex.\"\n\n\"What excuse?\"\n\n\"That it wouldn't be fair to the rest of the BTC. That we've just barely started blowjobs, and even of those, neither Alice nor Zofi has put their mouth on you yet. If I'd tried to seduce you yesterday, you would've hemmed and hawed about not crossing lines or violating The Rule. But today? Miss 'The Rule' herself broke the barrier. The BTC is NOT in balance. And stopping me from making love to you isn't going to put The Rule back together again.\"\n\nI pursed my lips and sighed. \"Fair enough. I suppose I should start planning a nice romantic date or something, huh?\"\n\n\"A date?\"\n\n\"You know. Girl's first time and all that? Get dressed up and take you to a fancy dinner. Rent a horse-drawn carriage and take a ride through the city. Decorate my room with candles and rose petals, that sort of thing.\"",
        "Belle snorted and gave me a look of disbelief. \"You really think I wanted all that? I love you, Matty, and I always will. But I never wanted a fancy romantic date. The six of us girls may be eagerly climbing all over your body exploring everything physical pleasure has to offer, but none of us is going to date you. The BTC will survive you fucking the shit out of Sam. The BTC will survive you having sex with me. It will NOT survive you becoming someone's actual boyfriend. I told you before: I'm not breaking up the BTC for us.\"\n\n\"Then...?\"\n\nBelle pulled my hands out of her shirt and sweatpants, twisted around in my embrace, and got to her knees. She leaned forward to kiss me gently before sitting back on her heels. And then she reached down to grab the hem of her t-shirt and swiftly whipped it over her head. Her bra had been dislodged, exposing her right boob, but she unclasped it and tossed it to join the shirt. And then she hooked her thumbs into the waistband of her sweatpants and started tugging them down her thighs.\n\nMy eyes went wide in surprise. \"What, here? Now?\"\n\n\"Why not?\"\n\n\"Well your period isn't over, for one thing. I felt the pad when I went in to start rubbing you.\"\n\nBelle rolled her eyes and said, \"Look at your fingers. Not a trace of blood on them.\"\n\nI did. While my digits were pretty slimy with girl juice, there wasn't a hint of red color.\n\n\"I knew I was at the tail end of my period,\" she went on, now completely naked before me. \"I figured I'd seduce you tomorrow to give myself a full seven days just to be sure, but that's not a requirement. I'm ready.\"\n\n\"I'm dressed like shit. You don't have any makeup on. This is your virginity, B. You really don't want... I dunno... Sam had the whole fancy wedding date. I guess I thought you'd-\"\n\n\"You thought I'd want the same?\" she interrupted. \"Let Sam have her fancy wedding date with you in a nice suit and her in a dress that I'm sure was absolutely stunning.\"\n\nI smiled at the memory. \"It was.\"\n\n\"I don't care. All -I- ever wanted was for you to NOT go into vapor lock at the mere suggestion of deflowering me. I think I actually TOLD you what I'd do to overcome it, which is what Sam ended up doing: blow you within an inch of your life, and then when you were least expecting it, just get up and impale myself on your prick before you realized what was going on.\"\n\n\"Ah.\"\n\n\"The fact that we're here and you're not locking up is all I ever wanted. I don't need romance and I don't care if we're in crappy Sunday afternoon clothes. I'm naked and horny and I love you more than anyone in the world. I just want you. I've only ever wanted you.\"\n\nI smiled and opened my arms to her. \"You have me.\"\n\nBelle smiled, leaned in, and kissed me again. \"Not yet, I haven't. But we're gonna fix that right now.\"\n\n****\n\n- CHAPTER 8: Annabelle -\n\n****\n\nI'll never forget for the rest of my life the first time I entered her. She was so freaking tight. At 5'1\" with proportionally scaled-down hips, Belle was a small girl, and her vagina was similarly small. Add in the fact that she was a virgin who'd never stuffed a cucumber, hairbrush, or even a tampon into her pussy, and you're setting up a recipe for peeling the skin off my dick upon entry. Seriously, the two fingers I'd stuffed into her tonight only to the second knuckles were the biggest things she'd ever felt inside her. Those muscles simply weren't prepared to be stretched by something as thick as my dick, and I'm a little embarrassed to say her deflowering did not go very well.\n\nBelle, too anxious to get fucked for the first time, was overly overconfident in her virgin pussy's ability to accept my big dick without preparation. While I told her I wanted to go down on her first and get her warmed up, she insisted she was already wet and wanted to feel me INSIDE her. Like NOW. Before I second-guessed everything and went into vapor lock about thinking of her like my little sister again.\n\nShe had already stripped herself naked, so once we agreed that yes, we were doing this, she helped me get naked too.\n\n\"Do you still wanna be on top, or do you want me?\" I asked.\n\n\"You.\" She smiled up at me coyly. \"I'd settled for the idea of impaling myself on you before you realized what was going on. But I've always dreamed of you holding me in your arms, looking down into my eyes, and cuddling me close while you push your thick cock into my little pussy to just... take... me.\"\n\nWell that sounded pretty great to me, so I rolled Belle onto her back, climbed on top, and started kissing her like the apocalypse was imminent and the last things I wanted to feel on this earth before the meteor of doom hit were her lips pressing against mine.\n\nI actually told her that while we were kissing, and she moaned and wrapped her legs around me. Our height difference was such that her pussy was more or less around my belly button while we kissed, so it wasn't like I could grind my shaft against her clit, not without breaking our lip-lock. All of a sudden she was in a terrible hurry, whimpering, \"In me, Matty. I need you in me. Please?\"\n\nHow could I possibly say no to that? So I nodded my assent, crawled forward a bit so that my chin was at the crown of her head, and looked back down my body. She reached for my dick before I could, spreading her legs wide and aiming my mushroom head at her entrance. Her labia had been opened slightly by my fingers, so it wasn't like her pussy was completely closed. She managed to notch me into place, and while keeping her tiny right hand circled around my shaft as a guide, she dug her heels into my ass, directing me to start pushing my way inside.\n\nIt hurt.\n\nA lot.\n\nI did a full push-up, locking my elbows so that I could get a good view of her face as she felt her first ever penis penetrating her pussy. She said she wanted me looking down into her eyes, and if she'd been looking back at me she would've seen the concern in my gaze. But her eyes were clenched shut as she grimaced and winced and generally looked to be in terrible discomfort, so I immediately stopped my forward momentum and started to retreat.\n\n\"No!\" she cried, clamping onto me with her legs and gripping my dick tight in her right hand. \"In me! In me!\"\n\n\"You look like you're in pain,\" I reasoned.\n\n\"A girl's first time always hurts; don't you know that?\"\n\n\"Uh, I mean I've heard stories, but-\"\n\n\"Just fucking DO IT!\" Hugging my torso, Belle yanked on me with both legs and arms, so I stopped resisting her and began to push my way forward again.\n\nBelle was in agony. She screamed, and not in a good way, as my cockhead tried and failed to push through. Her labia weren't separating, and it felt like I was pressed up against a brick wall. Tears were now running down her eyes, and after the way Sam had cried so much it made her waterproof mascara run, I was beginning to wonder if every sex encounter I ever had would begin with me making the girl cry.\n\n\"I don't think it fits,\" I groaned, feeling Belle's insistent pressure for me to push down but literally feeling blocked by... something. It was as if my dick was caught in a spider-web or some other kind of elastic sheet.\n\n\"It'll fit!\" Belle whimpered. \"Everyone has always said it'll fit. I'm a girl! A woman! My body was made for this!\"\n\n\"It's not fitting though. And I don't think you're really wet enough. Lemme go down on you. Give you a nice orgasm and get the fluids going. Stretch you with my fingers a bit, huh?\"\n\n\"Just push it in, gawddammit!\" The tears were flowing freely, and she looked absolutely terrible. \"Maybe it's my hymen, I dunno. Just DO IT! Tear that shit up! In me! Now, Matty! INNNNN-OOOOWWWWWWWW!!\"\n\nI should have listened to my own advice, but she was so insistent I finally just slammed my hips forward. That elastic sheet suddenly ripped, and before I knew it, I had three inches of dick inside her. That was it. I'd torn Belle's cherry. She wasn't a virgin anymore.\n\nI'll never forget for the rest of my life the first time I entered her. And NOT in a good way.\n\nI had three inches inside her, but I wasn't getting any farther anytime soon. I may have gotten past the first obstacle, but more challenges still lay ahead. Now that I'd gotten past her entrance, I figured pushing in the rest of me should be fairly easy. But it wasn't. She was SO. FUCKING. TIGHT.\n\nI tried letting gravity drop my hips, but I didn't budge. Actually, attempting to support all my weight on my dick just sorta made my dick start bending in a direction it wasn't meant to, and that didn't feel good at all. I tried digging my toes in and really mashing my hips downward, and that got me maybe another inch, but that's all.\n\nMeanwhile, Belle started sobbing, in a world of pain, and when I looked back down and saw her face, my resolve completely left me. I'd spent years convincing myself that my role was to protect Belle like my little sister, not to molest her, fantasize about her, objectify her, or in any other way consider her as a sexual being. I was the one getting high-fives from Belle's dad for telling him I'd pound the face in of any boy who made her cry. And yet here I was, the molester who had painfully torn Belle's precious maidenhead and quite literally made her cry.\n\nI got my knees under me, pulled out, and that's when I saw the blood on my dick. I didn't know for sure if it was hymen blood or period blood, but let's get real: seeing blood on your dick is NOT arousing in the slightest, and I started to soften immediately.\n\nBelle didn't seem much in a sexy mood, either. And as soon as I pulled out, she twisted her hips and curled up into a fetal position, hugging my pillow like a life preserver while she sobbed her little heart out.\n\nI grabbed a few tissues and quickly cleaned up my shriveling penis. Then I dropped to the mattress and spooned behind Belle, holding her firmly in my arms. She shuddered and backed up into me, seeking comfort in my embrace, so that helped me not feel so bad about the molesting-destroyer-of-virginities feeling, and I shushed her gently, feeling a very weird sense of d\u00e9j\u00e0 vu having done basically the same thing just last night with Sam in this very same house.\n\n\"I've failed you,\" Belle sobbed.\n\n\"No, no. It's okay, it's okay. This isn't your fault.\"\n\nSeriously, I was NOT expecting to be in this position again so soon. Less than twenty-four hours ago I'd lost my virginity to one of my gorgeous friends, and now I'd taken the virginity of another of my gorgeous friends. Less than twenty-four hours ago, I'd had to comfort a despondent girl who was crying over her apparent failure to please me. And now here I was again.\n\n\"I wouldn't have even been able to impale you by surprise if I wanted,\" she moaned in abject misery. \"I'm too small. It wouldn't have fit.\"\n\n\"I think we were just in too much of a hurry,\" I reasoned. \"I should've taken the time to stretch you out before we started. This is my fault. I should've slowed you down.\"\n\n\"This is MY fault. I was the one who insisted you just hammer it in.\"\n\n\"We'll do better next time. There WILL be a next time. I'm not going to go into vapor lock and try to say you're like a little sister to me anymore. I can't hide behind that shield any longer, because it's time I admitted the truth to myself. I LOVE you. I've always loved you. Fuck, I've been in love with you my entire life. You're my Annabelle.\"\n\nShe was still crying, but the sobbing slowed and eventually stopped, and her whole body went still for a second. Then, the petite strawberry-blonde in my arms started to turn around, looking back at my face through bleary eyes. \"Wait, what did you say?\"\n\n\"I love you. You're my Annabelle,\" I repeated.\n\n\"No, the other part. You're in love with me?\"\n\n\"What? No. I've always loved you, and I always WILL love you.\"\n\n\"No, no. You specifically said you were IN love with me.\"\n\nI snorted and backed away from her a bit. \"That's just crazy, B. I think you misheard me.\"\n\nBelle frowned and furrowed her eyebrows as she completely turned around to face me. \"You're lying. You're not a very good liar, and I can always tell.\"\n\n\"Belle, seriously.\"\n\n\"How long have you been in love with me?\"\n\n\"I'm NOT. I'm not in love with ANY of the girls. That would totally ruin the BTC. We've had this conversation before.\"\n\n\"Then why did you say it a minute ago?\"\n\n\"I didn't.\"\n\n\"Yes you did,\" she said seriously. \"You said you've been in love with me your entire life.\"\n\nI sighed. \"Yes, I had a crush on you when I first knew what a crush was. I've told you that already, back when you were infatuated with Taylor Guazelli.\"\n\n\"And you've been in love with me all this time?\"\n\n\"No, no, of course not. You're blowing this whole thing out of proportion, B.\"\n\n\"Am I?\"\n\n\"I can't be in love with you. You know that.\"\n\n\"Why not? And don't give me some bullshit about me being your little sister.\"\n\n\"No, I told you I wasn't going to hide behind that anymore.\"\n\n\"Why were you hiding behind it in the first place?\"\n\n\"I...\" My voice trailed off, and I took a deep breath to try and collect myself.\n\n\"You're not a kid anymore, Matty. You told me you mentally categorized me as 'out of bounds' so you wouldn't be hurt by rejection, but that was a long time ago. There hasn't been a Taylor Guazelli in my life for a long time, and the relationship we have now is nothing like it was back then.\"\n\n\"It's not,\" I agreed. I took a deep breath, closed my eyes, and tried to relax my brain. I could feel the truth bubbling beneath the surface, the words trying to float into my brain if only I'd let them. Just like the words, 'I've been in love with you my entire life' had come into my brain and flown out of my mouth all on their own, a sentence I couldn't deny I'd said any longer.\n\n\"I...\" I began again, but stopped as I felt the old mental blocks coming back into my mind.\n\nBelle was patient. She didn't press me.\n\n\"I...\" I began again, and once again stopped and closed my eyes.\n\nBelle rubbed my shoulder and gave me a warm, inviting smile.\n\nI started shaking my head, muttering, \"I can't. It's... I-\"\n\n\"I love you, too, Matty,\" Belle said softly. \"I've been IN love with you a long time, too. Not my entire life, unfortunately. But... I dunno... before the BTC. I didn't want to admit it to myself, but it's certainly the reason why I never really dated anyone else.\"\n\nI blinked in shock. \"Wait, what?\"\n\nBelle grinned. \"That's why I always knew you'd get my cherry. It could never have been anyone else.\"\n\n\"But you've gone out of your way... several times... to state that you're not IN love with me.\"\n\nBelle shrugged. \"We all lie, even to ourselves, to avoid getting hurt. How could I tell you I was in love with you when you constantly held me at arm's length with your whole 'little sister' schtick? You made out with everyone but never let ME kiss you. It would have broken my heart to admit I was in love with you only to have you fall in love with... I dunno... fall in love with Sam or something.\"\n\n\"I'm not in love with Sam.\"\n\n\"I know that, and I'm glad for it.\"\n\n\"Shit, B. What are we gonna do? If I'm in love with you, and you're in love with me... what the HELL are we gonna tell the girls?\"\n\nBelle shook her head. \"We're not gonna tell them anything. Nothing changes, at least not for now. I may have tried to cover up just how strongly I felt for you, but I wasn't lying about not breaking up the BTC for us. There will be time for us to figure out our feelings for each other. There will be time for us to figure out your feelings for the other girls, too. And yes, there will be time for us to make this sex thing work. Because I'll be honest, if we don't figure out how to make this sex thing work and it's gonna be THAT fucking painful every time we try it, I am falling OUT of love with you as soon as fucking possible.\"\n\nI laughed at that and leaned in to kiss her. She met me with a tender brush of her lips, and I reached up to stroke her cheek.\n\nWhen we pulled back, I stated sincerely, \"I do love you, Annabelle.\"\n\nShe glowed and replied back primly, \"And I love you, Matthew.\"\n\nBelle giggled and shook her head. \"It does feel a little weird, calling you by your full name. You've been Matty to me for as long as I can remember.\"\n\nI shook my head. \"You used to call me Matthew all the time when we were little. Back then, I NEVER called you Belle. Your friends did, but not me. You had ALWAYS been my... holy crap.\"\n\nBelle gave me an amused look. \"I'd always been your 'holy crap'?\"\n\nMy eyes were wide and unseeing. The truth that I'd been trying to keep down had suddenly floated up into my brain while I'd been distracted. And I shook my head at the realization.\n\n\"What is it?\" Belle asked.\n\n\"I just realized when... and why... I stopped calling you Annabelle and started using Belle instead.\"\n\nShe snorted. \"Because I kept ASKING you to call me 'Belle'?\"\n\nI gave her a sad look and said, \"I remember why you started insisting everyone call you 'Belle' instead.\"\n\nHer eyes flickered, and I saw her start to close up a bit.\n\n\"Too painful?\" I asked.\n\n\"Matty...\"\n\n\"You had always been Annabelle to me. Your mom LOVED saying your full name, saying she chose it because it was so beautiful, like you. And every time I called you by your full name, I remembered the way your mom used to say it, too.\"\n\n\"Matty,\" Belle said a little more strongly, a touch of warning in her voice.\n\n\"She was as much a mom to me as she was to you, far more than my own mother, and once she was gone, I clung to you like a life preserver. After we lost her, I was terrified of losing you. I wanted to move into your house, have your dad be my dad. I knew I wanted to spend every waking moment possible with you. I wanted to marry you, maybe not so much because I wanted to date you or anything like that, but because if we got married, we'd be together forever.\"\n\nHer expression softened. \"I used to dream about that too. Still do, every now and again.\"\n\nI smiled. \"Maybe we WILL be together forever. We're still teenagers right now. Who knows what the future will hold?\"\n\nShe looked hopeful. \"Maybe.\"\n\nMy smile faded. The truth had come into my mind, and it wasn't leaving. \"But I couldn't have you back then. I was in love with you, but you wanted Taylor Guazelli. I realized I couldn't have you, and yes, you did keep asking me to call you 'Belle' instead of 'Annabelle', especially around your friends.\"\n\nShe gave me a curious look, a kind of realization dawning on her face even before I said it.\n\n\"The day I decided you were my 'sister' and that I'd never get to have you? That was the day I stopped calling you 'Annabelle', at least on a regular basis. From then on, you were just 'Belle: my sister'. It was as if I could package up all the love I felt for you into the full name 'Annabelle' and tuck it away for safekeeping. It still comes out from time to time, in those special moments when it's just me and you and I feel so happy inside I can't help but think of you as 'my Annabelle' the way we were when we were kids. But so long as you were 'Belle' or even just 'B' to me, we'd never be more than friends.\"\n\n\"Matty...\" she caressed my cheek and said a little uncertainly, \"Matthew...\"\n\nI arched an eyebrow at the way she physically chewed, as if tasting the way my full name felt in her mouth.\n\nShaking her head slowly, she grimaced and said, \"I don't think I can go there. It's a nice enough name, but you're still Matty to me.\"\n\nI laughed. \"I never said you had to use MY full name. I'm good with 'Matty'. Really, I am.\"\n\nShe looked relieved. I leaned in and kissed her, and gave her a warm smile when we pulled apart.\n\n\"I'll love you no matter what you call me. But for those times I do call you 'Annabelle'-\"\n\n\"I'll hear you saying 'I love you' in my mind,\" she finished for me.\n\nI grinned. \"Yeah, pretty much.\"\n\n\"Works for me.\"",
        "I nodded, and she nodded, and a long silence fell over both of us. We smiled at each other, unsure of what to say. And after the silence started to become a little awkward, only then did we seem to remember our nudity.\n\n\"I did NOT expect to have this conversation today,\" I finally said, a little embarrassed.\n\n\"Me neither. But...\" She popped her eyebrows and gave me a hopeful smile. \"I know this hasn't been the most 'uber sexy' conversation, but would it be too weird for me to say I'd still like to take another shot at this sex thing?\"\n\nI raised my eyebrows. \"You sure?\"\n\n\"I don't want to go to bed tonight still a... Well I guess I'm not technically a virgin anymore, but I still don't feel like I've earned my woman card.\"\n\nI smiled but held up a finger. \"You're letting me go down on you this time, no arguments.\"\n\n\"Not arguing.\"\n\n\"Maybe I shoulda bought some lube.\" I suddenly grimaced and rubbed my temple as if I could physically scrub away the thought that had just popped into my mind.\n\n\"What?\"\n\nI sighed. \"It occurred to me that Mother might actually have some in her bedroom. As much as I don't want to think about it, she's been a single woman who has kept herself in amazing shape ever since the divorce, and while she's never brought a man here as far as I know, she definitely stays out pretty late at night.\"\n\nBelle could tell I really didn't want to go snooping around Mother's bedroom and she stroked my hair, saying, \"Don't worry about getting lube. We'll make it work.\"\n\nRelieved, I nodded and repeated back to her, \"We'll make it work.\"\n\n****\n\nWe made it work.\n\nWe had both learned our lesson after that disastrous first attempt. We took our time, made sure she was plenty wet, and I pre-stretched her out as best I could.\n\nBelle's bright idea was to have our very first two-person shower to get cleaned up first. I was in heaven soaping up her petite, naked body, running my hands all over every inch of her silky-smooth skin. After years of fighting my own conscience every time I touched her in a semi-intimate way, it was SUCH a relief to simply enjoy myself grabbing her ass, fondling her tits, and kissing her lips beneath the shower spray.\n\nWe dried off and returned to my bedroom completely naked. We kissed and laughed and fell onto my bed to kiss some more. But eventually I started kissing my way down her body, pausing of course to luxuriate in her boobs. She would never have the massive melons Sam or Mari sported - globes that big would've looked ridiculous on Belle's tiny frame - but she was so skinny and small that she ended up looking pretty top-heavy anyway, which to me meant they were perfect. I liked my girls pretty top-heavy, you know?\n\nI devoured her breasts while Belle giggled and stroked my hair. But rather than linger, I quickly kissed my way down the rest of her body, tickling her ribs and briefly sticking my tongue into her belly button before reaching the juncture of her thighs.\n\nBy now I'd eaten Belle's pussy many times, so it was with no hesitation that I wrapped my lips around her clit and shoved my tongue up into her twat. Desperate to make up for the pain I'd caused during her deflowering, I sought to soothe her strained muscles while paradoxically doing my level best to make them clench up in climax. At first, I succeeded more at the latter when I ate her to an orgasm, but in the end still got the former because she went limp and got super-relaxed after cumming. That's when I slithered first one and then a second finger into her narrow channel, pumping slowly, intent on stretching her out while I languidly licked at her pleasure button to keep her distracted.\n\n\"Squeeze...\" I intoned softly. \"Imagine my cock is inside you. Squeeze... and release... Yeah... like that... Clench tight... and relax... Holy shit, B, you're gonna feel so good when I'm inside you. Release... yesss...\"\n\nMy little lover was moaning and on her way to another orgasm when I pushed in a third finger. But once I had three fingers sliding in and out pretty well, I figured she'd been stretched out enough and switched gears to concentrate on getting her another oral orgasm.\n\nSam had taught me a few tricks, and I'd practiced them on the girls during Friday's naked in heels bootcamp as well. But Belle had been on her period and I'd been unable to go down on her, so I was eager to explore and see how she reacted. Rotating my wrist and reducing down to two fingers again, I curled my digits up in search of her g-spot. I could tell I'd found it when Belle shivered and suddenly couldn't keep her hips still. I bore down with my lips and did my best to keep her pinned beneath me. Eating a moving target isn't easy, as I'm sure any African predator will tell you. But it didn't take long before I made her cry out in ecstasy, and once again, my little Annabelle went limp beneath me.\n\nIt was time.\n\nWiping my face with the back of my forearm, I didn't waste a moment before sliding up her body and notching myself into place. Her puffy pink labia were now wide-open and inviting instead of closed up tighter than a clamshell, and with only a little bit of pressure I felt my mushroom head pop in.\n\nBelle gasped, her eyes fluttering open as she felt that first penetration, and she immediately clenched up.\n\n\"Release... release...\" I soothed. Stroking her forehead, I added sincerely, \"I love you, Annabelle... I love you, Annabelle... I love you, Annabelle...\" \n\nShe cooed into my ear as her body visibly relaxed beneath me, and with a little more pressure I steadily burrowed inch after inch into her tiny body.\n\nShe was still exquisitely tight, tighter than anything I'd ever felt in my life, not that I had a whole lot of sexual experience. Even Mari's deep-throat couldn't compare, and when I finally had every last inch of myself inside her, I had to stop and just savor the experience.\n\nBelle was like minded, breathing shallowly with her eyes closed and her forehead furrowed in concentration. It took more than a minute to get myself fully seated, and now that she realized I'd stopped, she opened her eyes and squeaked softly, \"Did it all fit?\"\n\nI chuckled and pecked her forehead. I had to hunch my back in order to get low enough to kiss her lips, and I sighed, \"Yes, it all fit.\"\n\nBarely. She was a perfect fit for me, her pussy tailor-made like a glove that matched my cock to its exact specifications without a millimeter to spare. The feeling of being inside her was exquisite, even without any thrusting. My heart was filled with love for the girl I'd adored since I first realized the human species came in two different sexes. And for the next several minutes, we were both happy to remain as we were, making out for the first time while joined together so completely.\n\nBut after a while, Belle broke away to breathe, looked up at me through heavily lidded eyes, and murmured, \"Fuck me, Matty. I wanna feel it.\"\n\nHer words said \"fuck me\", but I was seized by a sense of wrongness in that, not so different from the wrongness I used to feel about molesting my \"little sister\". I wasn't going into vapor lock or anything, but I suddenly remembered something Belle had said earlier. She didn't want to hear my bullshit about how I'd never promised I'd \"fuck her\"; she'd specifically used the phrase \"make love\" to her. And THAT somehow felt so much more... right... to me.\n\nSo I told her, \"I'm not gonna fuck you.\"\n\nBelle blinked and looked up at me in surprise, not understanding.\n\nI smiled and said, \"I'm going to make love to you.\" And then I kissed her.\n\nI did make love to her. Not that there's anything wrong with fucking. I'd fucked the shit out of Sam last night and she'd loved every second of it. Someday soon I'd fuck the shit out of Belle and I knew she'd love it too. But tonight, Belle and I made love.\n\nI slowly retracted a few inches and then smoothly pushed my way in. I took up a gentle rhythm, not too hard and not too fast. Belle's pussy was still too constricting to build up much speed anyway. She was copiously wet, but the friction was still incredible. Even my leisurely pace was enough to generate a world of sensation for both of us, evidenced by the fireworks in my brain and the whimpers and moans of Belle beneath me.\n\n\"You're so big inside me,\" she whined, arching her back and wincing at the edge of pain but not quite. \"I feel so full...\"\n\n\"You feel so good around me,\" I hummed right back. \"Your pussy's amazing, Annabelle.\"\n\n\"So deep... So big... So... OOOH!\" Belle's eyes suddenly flew open. \"Ohmigawd what was that?\"\n\nI blinked in surprise myself. I'd started to retract a few more inches, until I was almost out, before sliding back in. The extra inches and extra push let me get about another centimeter or two of depth on the downstroke, and when I hit bottom it felt like my cockhead had bounced off a spongy wall. \n\n\"I think I hit your cervix,\" I muttered in wonder.\n\n\"Do it again!\" she breathed. \"It set off a little sparkle in my brain.\"\n\nAs ordered, I pulled back and thrust all the way in again, but somehow didn't quite get deep enough. I didn't feel the bump, neither did she, and Belle looked a little disappointed.\n\n\"Hang on a sec,\" I told her and scooped my arms beneath her legs, spreading them out to the sides until my elbows hooked under her knees.\n\nThis time, when I pulled back and thrust in, I felt that little bump at the end, and Belle's eyes fluttered as she cooed, \"Oooh, yeah... That was it. Do it again.\"\n\nSo I did. Again and again and again.\n\n\"Ungh, ungh, ungh,\" Belle started groaning every time I hit that spot.\n\n\"Hmph, hmph, hmph,\" I was grunting every time I put that much extra energy into my thrusts.\n\n\"Fuck, fuck, fuck,\" she started chanting, her pussy squeezing me as I powered my way through her narrow channel. I still wasn't up to true \"fucking\" speed; she was still too tight for that. But I was definitely thrusting harder than I had in the beginning.\n\n\"I love it,\" Belle whined. \"I love this. I love you! Why the fuck didn't we start doing this sooner?\"\n\nIt was a rhetorical question, one I couldn't answer right away. I was too focused on getting her off, sensing just how close she was getting to cumming. Her eyes were shut as she concentrated on the sensations I was giving her. My eyes were laser focused on her face, watching her reactions and reveling in the sense that -I- was the one giving her such pleasure. And all of a sudden, her eyes flew open as she announced, \"I'm gonna cum! I'm gonna cum! OHHHWWWAAAAAAAUUUUUGGGGGHHHH!!\"\n\nBelle's back arched, her hips thrust upwards, and she met my next thrust so that my dickhead made one big hammer blow against her cervix. She screamed even louder when that happened, going into what looked like epileptic convulsions at first glance. I tried to keep fucking through that orgasm, but her cunt clenched down, constraining my cock and keeping it captured in her clutches. With my dick completely surrounded, her muscles milked me from all sides until I couldn't take it anymore. And a second later, I felt my own ejaculation begin to FLOW.\n\n\"ANNABELLLLLLLE!\" I yelled, feeling my mushroom head open up like a firehose and begin spraying gallons of creamy cum straight into her cervix. Over and over again I poured my seed into Belle's snatch, my hips twitching as I filled her up to the brim.\n\nAnd then I collapsed, gasping for breath. I braced my elbows on the mattress lest I crush her beneath my weight. Our height difference was such that my head was above hers, so she pressed her lips against my chest and nibbled a little on my collarbone.\n\n\"Ohhh, Matty...\" she crooned, her voice filled with rapturous ecstasy.\n\nBelle... my Annabelle... lay beneath me all hot and sweaty and gasping for air in the aftermath of her very first coital orgasm while feeling my sperm soaking into her womb. Her hands gripped my upper arms as if fearful I would somehow evaporate into an ethereal mist if she let go, that I would fade away into nothing more than a dream.\n\nBut this was real. It was all real. Belle and I actually had sex.\n\nOr as I preferred to think of it: we'd made love.\n\nI'd never felt so happy in my entire life.\n\n****\n\nMother came home before dinnertime, by which time Belle had already gone back home. She didn't ask me how my conversation had gone, nor did she really say anything to me at all. She took note of my completely normal appearance watching NFL highlights in the TV room and continued on her way without a word. Although she didn't cook very often, it didn't mean she was incapable. So she made dinner for both of us and the rest of the evening passed in relative normality.\n\nAnd then Sam called me. The cordless handset in the kitchen rang (remember, we didn't have cell phones yet), and I went to pick it up. Long story short, she asked if she could come over, I advised her that my mother was home, and she said that wouldn't be an issue. I asked Mother if it would be alright for Sam to visit, and she gave her okay, so I went ahead and let Sam know it would be alright.\n\nThe beautiful blonde arrived ten minutes later, and she gave me a warm hug and a pretty passionate kiss on the lips when I let her in the front door. Mother was in the living room, so when Sam noticed her, she blushed and offered a polite greeting. But I quickly took my blonde friend by the hand and led her up to my bedroom, closing the door behind us for privacy.\n\n\"So how are you doing?\" I asked neutrally as I walked over to where Sam was standing by the foot of my bed.\n\nShe didn't answer verbally, instead wrapping her arms around my neck and searing a fierce kiss across my lips. She then pivoted the both of us so that I flopped backwards across my bed while she followed on top of me.\n\nMy knees were hanging off the foot of the bed while Sam crawled over me on all fours and speared her tongue back into my mouth. At first, I enjoyed the thrill of Sam's kiss and returned her passion with equal fervor, but a moment later I broke my lips away from hers and gasped, \"My mother's right downstairs!\"\n\n\"So what? She already knows we're fucking,\" Sam reasoned.\n\n\"Having her catch us in the act is one thing. Deliberately starting something while she's in the house is something else.\"\n\nSam frowned, realized I was serious, and pouted overdramatically. \"But I've been thinking of you all day and I've been desperate to feel you inside me again! We can be quiet.\"\n\nI arched an eyebrow. \"You? Quiet?\" I deadpanned. I'd literally never seen Sam have a quiet orgasm, whether on my cock, on my tongue, or even just dry-humping me out on Matty's Chair. She was definitely a screamer.\n\nSam winked. \"Well I can try.\"\n\nI rubbed my forehead, a little tempted to go ahead and let her start something. (Okay, I was a LOT tempted. She was wearing one of her plunging V-neck sweaters with her... well... big sweater-busters on display). But after calming my nerves and taking a deep breath, I gave her a serious look and said, \"We need to talk about last night.\"\n\nThere was a twinkle in Sam's eyes. \"Okay you talk. I'll suck.\" And she reached for my zipper.\n\n\"Sam, I'm serious.\"\n\nSam frowned, recognized the intensity in my eyes, and her shoulders drooped in disappointment. A moment later, she rolled off me to the side, and I sat up straight.\n\nShe sat on the side of the bed to my right, facing away from me at a right angle. Exhaling slowly with her head bent forward, she asked without looking back at me, \"Are you upset I stole your virginity last night?\"\n\n\"What? No, not at all. I've fantasized about you forever. If anything, I only wish we'd started sooner. Please don't feel any guilt for that.\"\n\nShe glanced back at me, a shy smile on her face. \"You mean that?\"\n\n\"Absolutely.\"\n\nShe frowned. \"Then why won't you let me open your pants and start blowing you?\"\n\n\"That's a good question, and a big part of me wants to. But there's something unresolved from last night we didn't have time to talk about.\"\n\n\"Like I said: You talk and I'll suck.\"\n\n\"Sam.\" I sighed. \"Stop deflecting.\"\n\nSam sighed and gave me a look that said she wanted to keep evading the discussion. But she bit her lip and turned to face away from me again. \"You want to know why I did it.\"\n\n\"The BTC means everything to you. You were the first one to implement The Rule, and you've been its staunchest defender for years. I never would've expected YOU to cross this line.\"\n\n\"Me neither.\"\n\n\"Then why did you? It wasn't simple horniness. I mean, you were a little bipolar last night. One minute you were totally into blowing me, the next you were bawling about not being able to deep-throat me. And then you went to all that effort to dress up in really sexy lingerie that you had to have planned to show me after the wedding, but I don't really think you intended for us to have sex in the end.\"\n\nShe nodded slowly. \"I didn't.\"\n\n\"Hence the question: Why did you?\"\n\n\"It's... complicated.\"\n\nI skootched over to her side of the bed, close enough that our hips touched, and wrapped my arm around Sam's lower back. Leaning in, I gave her a chaste kiss to the side of her head and murmured quietly, \"I'm here for you.\"\n\n\"I know.\" She gave me another shy smile. \"Believe me, I appreciate it. I've just had a hard time wrapping my mind around it all.\"\n\n\"Well, let's try starting with an easier question,\" I offered. \"Why did you come over here tonight?\"\n\nSam smirked. \"Isn't it obvious? I wanted you to fuck my brains out again.\"\n\nI arched an eyebrow. \"You don't seem nearly as conflicted about having sex with me now compared to last night.\"\n\nShe shrugged. \"What's done is done. We've already crossed the line from 'friends' to 'friends with benefits'. Might as well get my benefits.\"\n\nI chuckled at the idea of sharing those \"benefits\" with such a gorgeous and supremely fuckable teenage vixen. Seriously, Sam had been \"sex in heels\" personified last night, and even though I'd literally taken Belle's virginity only a few hours ago, the idea of plundering Sam's phenomenal pussy again had me packing a pretty hard prick in my shorts.\n\nTaking a deep breath, I pushed those thoughts aside and reminded myself to be patient. I hadn't gotten this far in my relationships with the BTC girls by leaping for every impulsive opportunity - quite the opposite, in fact. The same instinct that told me NOT to grab that round titty in my face without an explicit invitation warned me that to continue having sex with Sam without getting to the bottom of her psyche had disaster written all over it. And I forced myself to think rationally, not hormonally.\n\nClosing my eyes, I weighed the question I wanted to ask in my mind and reasoned out the implications. It was a risk, but one I thought needed to be taken. So I opened my eyes, hugged my friend to my side, and asked carefully, \"Are you in love with me?\"\n\nSam jerked away from my arm and stared at me in surprise. \"What?\"\n\nI shrugged and tried to look unthreatening. \"It's a simple question.\"\n\n\"No it's not.\"\n\n\"Well, it's a simple question if the answer is 'no'. Otherwise...\" I let my voice trail off.\n\nSam schooled her face and stated flatly, \"I'm not in love with you.\"\n\nI stared at her a little bit, the same kind of lawyerly stare Mother used. Sam's eyes wavered, and a moment later she turned to stare into her lap, unable to meet my gaze. And she winced, realizing she'd been caught in a lie.\n\n\"I'm not in love with you,\" she said evasively. \"Not exactly. I mean, I don't want to date you or anything like that. I've got too much going on in my life anyway.\"\n\n\"But you have feelings for me?\"\n\n\"I like you, Matty. A lot.\" She turned to face me, some of her self-confidence coming back as she raised her chin and added, \"I think you like me a lot, too.\"\n\nI smiled and nodded. \"I do.\"\n\n\"I'm attracted to you. I've been attracted to you for a while now. I think you're pretty gorgeous, actually. The other girls think so too.\"",
        "I arched an eyebrow. \"Never really thought of myself as 'gorgeous'.\"\n\n\"Why do you think we've all been rubbing ourselves all over you for the past few years? It's not because you're ugly.\" Sam reached up and traced my cheek with her fingertips. \"It's in your eyes, really. The intensity of your stare when you look at us with such... heat.\"\n\nI started to look at her with heat in my eyes, thinking about all the things I'd done to her last night... Thinking of all the things I could be doing to her right now. But I took a deep breath and forced myself to once again be patient, to think rationally instead of hormonally.\n\n\"But what changed?\" I asked. \"You've been attracted to me for a long time, you say. What was different about last night?\"\n\nSam sighed and stared back into her lap. She closed her eyes, took a deep breath, and said quietly, \"Maybe I should just go home.\"\n\n\"Sam...\"\n\n\"This wasn't a good idea.\"\n\n\"You can't dodge this forever. And you don't have an excuse that you need to beat your parents home.\" I blinked, realized I didn't actually know that, and added, \"Do you?\"\n\nShe shrugged. \"They think I'm visiting Zofi. She'll cover for me if they call for any reason. She knows I'm here.\"\n\nI arched an eyebrow. \"Does she know what we did last night?\"\n\nSam shook her head in the negative. \"But I don't know how long I can keep that under wraps. I don't like lying to her. And I can't lie to the BTC for very long.\"\n\nI raised both eyebrows. \"But you intend to lie to them for a little bit?\"\n\nSam bit her lip and started to hug herself. \"Just... Just until I can figure out what I'm gonna say to them. I never meant... You and I weren't... Ugh, I'm being so STUPID!\" She buried her face in her hands.\n\n\"Sam...\" I intoned soothingly as I hugged her with both arms. \"You're not being stupid.\"\n\n\"Mounting myself on you last night was pretty stupid,\" she muttered while picking her head back up.\n\n\"Best night of my life,\" I commented sincerely.\n\nShe managed to smile at that, and quickly leaned over to give me a peck on the lips. She sighed, stared into my eyes for a little while, and mumbled again, \"I'm not in love with you. But...\"\n\nI waited patiently when her voice trailed off.\n\nEventually, she found the words. Sitting up straight, she narrowed her eyes and asked rather interrogatively, \"Who's your favorite in the BTC?\"\n\nI blinked, surprised by having the tables turned on me. \"What?\"\n\n\"Which of the six of us is your favorite?\"\n\nI rolled my eyes and shook my head. \"I'm not answering that.\"\n\n\"Matty...\"\n\n\"I'm serious. I'm not answering trap questions like that. I love each of you for different reasons and I will NOT pick favorites.\"\n\n\"Belle and Neevie are already your favorites. Everybody knows it.\"\n\nI sighed and shook my head. \"Belle's like my little sister.\"\n\n\"A little sister who apparently can't go more than 48 hours without swallowing a load of big brother sperm down her throat.\"\n\nI blushed and glanced down. \"Well... she has more opportunities than the rest of you.\"\n\n\"And you've wanted Neevie since you first laid eyes on her. She's the one girl you'd actually want to date if only we didn't have The Rule.\"\n\nI sighed. \"True.\"\n\n\"Alice has been your buddy since grade school.\"\n\n\"True.\"\n\n\"Zofi I'm less sure of. I mean, you're friends and she definitely gets a kick out of holding your hand everywhere you two walk around campus. But your favorite? No.\"\n\n\"I like Zofi just fine and I don't rank you all.\"\n\n\"And Mari's super sweet. She's so shy and innocent. But then she pulled that deep-throat like it was so easy for her and I got super jealous and...\"\n\nHer voice had trailed off again.\n\n\"Is it really that simple?\" I asked quietly. \"You wanted to deep-throat me so badly, and when you couldn't do it for me, no matter how hard you tried, you impulsively decided to give me your pussy instead?\"\n\nSam frowned and stared at the floor in front of her. Rather, she stared at some point a thousand yards beyond the floor in front of her. Her breathing came in slow, rhythmic streams. And she went so quiet that I dared not interrupt her train of thought.\n\nEventually, she answered my question as if nearly four minutes hadn't passed since I'd asked it. \"Yes... and no...\"\n\nWhen no further explanation came forth, I sighed and muttered, \"Well that's clear as mud.\"\n\nSam blinked her way out of her trance and looked over at me. \"Wednesday and Thursday nights alone with you were some of the best nights of my life. I'd had some amazing orgasms with you going down on me with all the other girls around, but it's hard to get into rhythm when you're sharing with a bunch of other girls knowing they're all waiting for their turn. But when it was just you and me - no rush, no worry - getting to have you focus on just me for as long as it took...\" She sighed in rapturous pleasure, staring a thousand yards and four nights away.\n\n\"I had this big night planned for us,\" she continued while still staring off into the middle distance. \"I went out in the morning and bought that black lace ensemble, just for you. I was going to be SO super-sexy you were gonna squirt in your shorts like Jake Pedson at the mere sight of me. I was gonna make you fall in love with me, not that I actually want you to be in love with me or anything, but I wanted...\"\n\nHer voice had trailed off again.\n\nShaking her head slowly, Sam furrowed her eyebrows and muttered, \"I don't want you to actually be in love with me, but I wanted to know that I could make you fall in love with me. I wanted to be irresistible to you. That even after all these years of playing it cool, being the 'safe' guy friend who would never quite grab my ass no matter how invitingly I shook it in front of you, never quite bite my nipple no matter how close I brought it to your mouth, that I could make you crack. I wanted that rush.\"\n\nSam's eyes were on fire.\n\nBut a moment later, she blinked and that fire was gone, replaced by an abyss of darkness and a... haunted... expression on her face.\n\n\"I'm supposed to be the sex goddess. All men are supposed to lust for my body. Even my dad's co-workers are hitting on me. I am Venus. I am Aphrodite. I'm supposed to inspire incredible, transcendent sexual experiences!\" Her voice trailed off, and when she spoke again, her volume had gone way down. \"But I've only ever had disasters. Antonio was popular and experienced, but he said I was lousy... I begged him to give me another chance, and we went out one more time, and he stopped calling me after that.\" \n\n\"Sam...\" I tried to hug her reassuringly.\n\n\"That one drunken college thing, he couldn't even...\" Her voice trailed off as she stared out into space. \"I just knew that the problem was ME. I mean, I'm fucking Aphrodite. Of COURSE I was gonna be this incredible lover when the time came. And yet... I... I mean Mari of all people could... Don't get me wrong, I love Mari. She's soooo sweet, how could you not love her? But despite the fact that she has that massive rack, she's not ME. She's never been as sexy as me. So when we went on that date and we got back to your house, I knew... I just KNEW... I was gonna be SPECTACULAR for you. I wasn't going to fuck you. I wouldn't need to. I was gonna burn the image of me in that sexy lingerie into your fucking retinas so every lover you ever had after me would pale in comparison. I was gonna deep-throat your monster dick. I was gonna fuck you with my big titties until you unloaded all over my gorgeous face. And Gawd. Fucking. Dammit! -I- was gonna be your FAVORITE!\"\n\nI blinked in surprise at the vehemence in Sam's words. She was crying again, bawling really. Why the hell were girls always crying next to me? But I realized she was going through an epiphany and needed my support more than ever. So I held her close with both arms and let her let it all out while she sobbed in my arms.\n\n\"I couldn't do it,\" she whimpered in abject misery. \"I couldn't do it. I'm so sorry I couldn't do it.\"\n\n\"Shhh,\" I shushed her soothingly. \"I know you tried your best.\"\n\nBleary eyed, she turned to look up at me. \"If I did, would it change the way you feel about me?\"\n\nI gave her a reassuring smile and began to say the same thing I'd said to her last night. \"I told you: I won't love you any le-\"\n\nI stopped as I was suddenly seized with the sense that I was about to make a huge mistake. I remembered what Sam had said to me the last time I'd said those words, complaining that I wasn't listening.\n\nBut I was listening now, and I realized that last night I'd gotten everything backwards. So instead, I tilted her face to look up at me and stated evenly, \"Deep-throating me isn't going to make me love you more. I don't need you to do something like that... or even have sex with me... to try and make me think of you as 'my favorite'. You can't buy my love with a blowjob. I care a great deal about you and I'd never want to hurt you. I also don't want to lead you on. So I need to make this crystal clear: How much I care about you is NOT tied into whether or not you can deep-throat me. How much I care about you is NOT tied into whether or not you'll have sex with me. I won't love you any less for not being able to accomplish one sexual act or another, but I also won't love you any MORE if you do. You can't BUY my love like that. And your self-worth should NOT be dependent upon these things.\"\n\n\"But...\" Sam looked crestfallen. \"But you said last night that you DID love me more for what we did.\"\n\nI rubbed my forehead and grimaced. \"Sex changes things. You're special, you're my first lover, and nothing can ever change that. And after years of fantasizing, I was THRILLED you let me finally have sex with you.\"\n\n\"And wouldn't you be disappointed if I stopped?\"\n\nI sighed. \"Of course I'd be disappointed.\"\n\n\"Sounds like your love IS dependent on these things.\"\n\nI set my forehead against hers and took a deep breath. \"I loved what we did, using the term 'loved' as a substitute for 'really, really liked'. But I don't want you to leave here believing that my feelings for you are conditional on you putting out for me. Make sense?\"\n\n\"Yeah... Makes sense...\" Sam's words said she agreed, but her tone was that of a six-year-old accepting the fact that broccoli is good for you.\n\n\"I get that you're competitive. I get that you want to feel like you're my favorite. And I'll be honest: Yes, I'm thrilled that we had sex. I don't regret it in the slightest, and if I had the chance to do it all over again, even knowing what I know now about why you chose to mount yourself on me, quite frankly I'd still do it. You were my FIRST. I'm never going to forget that. I'm never going to forget YOU. The sex... I mean...\"\n\n\"Was pretty spectacular,\" Sam drawled with a small smile of reminiscence.\n\n\"REALLY spectacular. You truly did become my Venus, my Aphrodite.\" I assured her with a smile, although I held up a finger. \"But that's in the past now. If you and I are going to have sex again in the future, I have to know it's for the right reasons. I have to know it's because you want me for me, and not to try and one-up the others.\"\n\nShe shook her head. \"I'm not trying to one-up the others. I... Okay... Maybe that had something to do with it last night. I saw where the wind was blowing, realized things were going to escalate between you and the girls sooner than later, and I'm willing to admit I may have gone into last night's date intent on doing something to really knock your socks off before the others could get their claws into you. And when the deep-throat failed, I panicked and decided to fuck you.\"\n\n\"Simple as that?\" I asked gently.\n\nSam blinked, her eyebrows furrowed as she studied the front of my shirt, even though she clearly wasn't looking at my shirt. \"Well... okay...\" she sighed and looked away from me, mumbling, \"Mbbemltllvwyu.\"\n\nI leaned forward and cocked my ear. \"I'm sorry. I didn't quite catch that.\"\n\nTaking a deep breath, Sam looked up at me, her luminous brown eyes looking large and liquid. She gave me a brave smile that nevertheless revealed all of her teenaged fear. And in a voice that was still quiet but at least intelligible, she muttered, \"Maybe I am a little in love with you.\"\n\nI arched an eyebrow.\n\nSam chuckled and shook her head. \"I didn't want to be. You were Matty, the BTC's personal plaything. You belonged to the club, not to me. But then Holly showed up, asked our permission to seduce you, and my first thought was, 'Of course. Go right ahead!' You were our friend, not our boyfriend, and it wouldn't be right for us to stop you from getting laid.\"\n\n\"But then...?\"\n\nSam exhaled slowly. \"I'd been so careful to keep myself and the other girls from doing anything actually sexual with you, you know? To keep everyone 'in balance'. Because I was afraid... I'm still afraid... that things will fall apart once we start crossing those lines. But then Holly started messing around with you on the couch under that damn blanket, and I got SOOOO jealous. I just KNEW she was doing stuff with you that you'd never done with any of us yet.\"\n\nI nodded. \"Which is exactly why I turned her down in the end.\"\n\nSam quietly seethed. \"I could visualize her hand in your shorts stroking you off, when I'D never even touched your bare cock yet. How unfair was that? I was looking at her thinking, 'Get stuffed, bitch!'\"\n\nI chuckled at that. \"Well, Holly DID want to get 'stuffed'...\"\n\nSam frowned, not understanding right away, but then she cracked a smile and laughed. She rubbed her forehead again and sighed. \"I never thought I'd be jealous over you until suddenly I was. Over and over in my head I kept thinking, 'He's mine! He's mine!' Alice was the one to talk me down and I finally said it was alright. But...\"\n\n\"But it wasn't really alright?\"\n\nSam shook her head mournfully. She looked up at me with those big eyes, looking ready to cry again. \"I want you to be mine.\"\n\nI blinked. \"You mean, like a real boyfriend?\"\n\nSam made a stink face. \"No... But...\"\n\n\"You don't want me to be Holly's or anyone else's. You don't want me to mess around with anyone except you.\"\n\n\"Well, me and the BTC girls. I've watched all of them messing around with you and never felt an ounce of jealousy.\"\n\n\"But you'd still prefer it if you were my 'favorite'.\" I did the air quotes for her.\n\nSam blushed. \"Is that so bad?\"\n\n\"Not bad. Just... I'm not going to pick favorites, even if you're having sex with me. I can't be bought that way, and more importantly to me, I absolutely DON'T want to put pressure on girls like Alice and Mari to feel like they have to fuck me in order to stay in the club.\"\n\nSam nodded fervently. \"That was exactly why I didn't want things to escalate this fast.\"\n\n\"Even though YOU were the one to cross the line first.\"\n\nSam held up her hands helplessly. \"I'm a bundle of contradictions.\"\n\nI smiled. \"You're a teenage girl. You're allowed.\"\n\n\"And I AM a little in love with you,\" she admitted with a bit of a hopeful smile. \"I swore to myself I wouldn't, but I can't help the way I feel.\"\n\n\"Well, if it's any consolation,\" I replied warmly, brushing her hair back from her face and behind her ear. \"The feeling's mutual.\"\n\nShe leaned into me, so I leaned into her, and the next moment our lips met softly. We kissed tenderly, reassuringly, with none of the passion or heat of our first kisses when she'd arrived at my house tonight.\n\nBut a moment after that, her lips weren't so soft anymore. She pressed firmly, moaned into my mouth, and tilted her head to the side so that she could kiss me even harder than before. With her hands on my shoulders, she rotated me so that I started falling back across the bed. And I suddenly found her on all fours above me not unlike the position we'd first been in upon entering the room.\n\nThe bodacious blonde bombshell grabbed my hands and pulled them around to her ass. I fondled her cheeks happily, groaning as the intensity of our lip-lock grew and grew. But a moment later I broke my lips away from hers and gasped, \"My mother's still downstairs!\"\n\n\"But I wanna fuck you,\" she whimpered.\n\n\"You are NOT gonna stay quiet.\"\n\n\"So? She's heard us fucking before. She won't care.\"\n\n\"-I- care.\"\n\nSam thought about that for a second before staring down at me with an impish grin. Her eyes sizzled amber. \"Fine then. Lemme go down on you. I can't scream if my mouth is full, right?\"\n\nI blinked in surprise but narrowed my eyes immediately afterward, sensing a rat. \"You're gonna mount me mid-blowjob again, aren't you?\"\n\nSam giggled and put on an innocent face. \"Worked once before, didn't it?\" She was already scooting off the edge of the bed and fiddling with my pants.\n\nI sighed and gave her a look. \"You're not trying to buy my love again, are you?\"\n\n\"Nope. I'm just a happy girl who had the GREATEST sexual experience of my life and I wanna feel that good AGAIN.\"\n\n\"And the thought never crossed your mind that the more you fuck me, the more I'll think of you as my favorite?\"\n\n\"Are you suggesting that strategy will work?\"\n\n\"Sam...\" I warned.\n\n\"Sorry, just part of my nature.\"\n\n\"And you figure that if you go down on me, I'll feel obligated to return the favor and give you a few spectacular orgasms tonight, mother or no mother.\"\n\nSam giggled, didn't respond verbally, and yanked my shorts down. A second later she had my growing erection in her mouth.\n\nAnd that's precisely when somebody knocked at my door.\n\n\"Matthew?\" Mother called.\n\nSam froze for a second, still with my dick in her mouth. A second later she jerked away and hurriedly tried to stuff me back into my shorts.\n\n\"Uh, yes, Mother?\" I called back after a short delay.\n\n\"You have another visitor,\" she explained through the door.\n\n\"Hi guys,\" Belle called. \"Sorry to interrupt.\"\n\nSam and I stared at each other.\n\nUm. Shit."
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "virgin",
        "first time",
        "big breasts",
        "high school",
        "harem",
        "18-year-old",
        "teenagers",
        "petite",
        "teen"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-07-08"
}