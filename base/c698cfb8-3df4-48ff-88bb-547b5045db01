{
    "title": "The Ultimate Playboy Pt. 02",
    "pages": [
        "Most stories would bring in another guy or two just to balance out the overwhelmingly female ratio. This is not that kind of story.\n\nPART 2: The Effect\n\n***\n\nCHAPTER 4\n\nI moved ahead, my hands rubbing at the cute girl's asscheeks while I aimed myself forwards. Mrs. Robinson came right up to whisper in my ear. \"And I mean FUCK her. I want you to split her in half so that she'll never forget it.\"\n\nI could not disappoint my goddess. So the moment I got my other head firmly situated, I rammed in with all the force my hips could generate.\n\nGabrielle screamed in pain as her supertight tunnel was instantly stretched farther than it had ever gone before, and I didn't give her a moment to recover as I backed out quickly and slammed myself in once again. She had barely stopped her first scream when my second thrust forced a new scream out of her throat.\n\nWe were in a room across the hallway from the main lab, which was organized like a doctor's office. A double-sized hospital bed dominated the space, an array of test equipment nearby. Gabrielle was on all fours while I knelt behind her, slamming into her pussy over and again.\n\nEven with the near empty campus and the closed lab, I was still amazed no one had heard the screams yet. The room wasn't designed to be soundproof. So I kept fucking, and Gabrielle's screaming finally died down into a constant whimpering as I was banging in and out as hard as I could and she was being assaulted by more feelings than she'd ever imagined.\n\nOnly a minute into our fucking, Gabrielle's whimpers slipped into a shriek as she came, her legs quaking as the climax rippled across her body. But I wasn't about to let up on her. I fucked her hard through the middle of her orgasm, and then she was shrieking again as she came again.\n\nBacked up by previous empirical data, we were proving that my \"effect\" not only instilled a heightened state of arousal in the subjects, but also magnified their sexual pleasure, resulting in highly positive encounters with impressive satisfaction levels.\n\nIn other words, sex with me was fantastic.\n\nGabrielle was now subject B in the experiment. I'd run through many such experiments with subject A, so much until Mrs. Robinson was starting to walk a little funny. Gabrielle had been a loyal assistant, running the experiments while watching me fuck Mrs. Robinson's lights out. Our initial round of testing complete, she was a logical (and very eager) choice for a second test subject.\n\nGabrielle was a pleasing subject. She was a little on the skinny side, and didn't take care to do perfect trimming down there, but she had a nice rack hidden in her baggy clothes. The only issue was that she was a virgin, and despite the massive arousal I produced in her, she had still been very nervous. My effect can instill arousal, but a person's decision-making can still override the inclination.\n\nNone of that mattered anymore as I tore through her hymen and thus I had deflowered her.\n\nMrs. Robinson was then next to us, one hand reaching down to rub at Gabrielle's clit while her other hand rubbed a firm breast, still perfectly formed in youth. And when Mrs. Robinson moved to plant a juicy kiss on Gabrielle's lips, Gabrielle's pussy went nova and a bigger climax poured out through our juncture. Oh, my effect was also an inhibition-reducer, where the subject became open to lesbianism, anal sex, exhibition, etc. Mrs. Robinson and I had already tried just about everything.\n\nOrgasmic fluids were coursing down Gabrielle's legs, and I had a mind to add my own special blend to the mix. But Mrs. Robinson had a more intelligent solution given that it was Gabrielle's first time and we had no protection. Condoms were a variable we didn't want to add just yet.\n\n\"She has to swallow your cum.\"\n\nMy hips were already speeding up towards explosion, and I pulled out and started jerking my own shaft.\n\nIt took Gabrielle a moment to recover from my pounding of her pussy, and finally she turned around and sank to her knees. All she could manage was to open her mouth, so I moved forward until she sucked the head in as best she could.\n\nI was still jerking myself when the rush came. Mrs. Robinson warned \"Here it comes\", and then my first load ejaculated into Gabrielle's mouth.\n\nHer eyes flew open as it hit the back of her throat, and then she was desperately swallowing as jet after jet poured out of me.\n\nAfter the third jet, her timing was off and she gagged, but Mrs. Robinson held her head tight around my rod as every spurt filled up her mouth and started to dribble out between her lips.\n\nGabrielle finally backed away and my final shot splattered against her cheek. She sat back on her heels, sighing with contentment, a happy grin on her face. She was covered in sweat and my fluids, and waited patiently as Mrs. Robinson moved around removing various electrodes and sensors from her naked body. Not the typical way of losing one's virginity, but Gabrielle didn't seem to mind.\n\nOnce complete, she slipped on a robe and we all huddled around the monitors to look at our test results.\n\n***\n\nSo there was something weird about me. Not supernatural, just biologically odd. Everyone gives out pheromones. Humans don't even have to be in heat; our bodies are screaming out all the time. I just happened to have an exceptionally powerful set.\n\nEven then, mine didn't quite work the same. Pheromones were usually detected by smell, drifting on the wind. Whatever freakish effect I had, it was a lot more powerful than that, working almost instantaneously on any female nearby. I could also focus it somewhat, zero in on a particular woman.\n\nMrs. Robinson wanted to turn me into a lab rat, run tests, the whole nine yards. Studying me could lead to the kind of scientific breakthrough that would define her career. If I got horny, I could turn her into a sex starved nympho. But any other moment she was clear-headed and a driven scientist whose academic ambition really outweighed her attachment to me.\n\nStill, I put up with it. To me, Mrs. Robinson was still the most gorgeous woman alive. I had wanted her for so long that I was willing to be with her and keep making love to her in whatever way I was allowed. Once the school year had started, I joined her staff as a lab assistant so I could at least get course credit. Besides, in a moment's notice I could be screwing her lights out right here in the lab, for experiment purposes or even just to satisfy my own libido. We never went on dates, or did romantic things. The heat of our attraction was intense, and the sex was fantastic. But I was still alone, just a lonely single guy.\n\nStrangely enough, after a few weeks of constant sex, my effect on Mrs. Robinson started to wear off. I was still thoroughly aroused by the sight of her naked body, or the husky seduction in her voice. But even when I focused my arousal on her, she was becoming less and less affected by me. In the meantime, I could still make any other female cream her panties whenever I got horny myself, so there was nothing wrong with me.\n\nMrs. Robinson theorized that her body was adapting to me, learning how to become immune to my effect. We just weren't sure how to prove it, or know the exact cause itself. After a few chemical tests and practical experiments, we finally found our answer.\n\nMrs. Robinson blew me to the brink of orgasm, then jerked me off into a glass. Then, with practiced scientific detachment, she added several droplets of my spunk to a group of the beakers filled with her female synthetic. The next time I got horny, we measured the chemical reaction. The group that had my sperm added reacted slightly less.\n\nSeveral blowjobs later, with Gabrielle's help as well, we found that my sperm had a cumulative effect that was proportional to the reduction in arousal. Basically, the more spunk I put into a girl in a short period of time, the less she would be affected by me.\n\nWe even ran a control test on poor Gabrielle. She was able to spend a lot of time around me, but for two weeks was unable to have any physical contact with me. She was going nuts by the end of the two weeks, and her arousal showed no sign of abating. Finally, our brief test complete, I fucked her silly until she eventually passed out from pleasure overload.\n\nProximity alone did not lead to lessened desire. That required a fluid transfer. The sperm antidote also seemed to wear off after a while. Mrs. Robinson and I went more than a month without me cumming in her body, and when we finally returned she was just as overwhelmed by my effect as ever. But the more I kept banging Mrs. Robinson and Gabrielle in short periods of time, the less valuable the data would become.\n\nSo for further testing, we needed more subjects.\n\n***\n\nCHAPTER 5\n\nI stood in the lab, theoretically paying attention to the monitors before me and crunching numbers. But really, I was surreptitiously checking out the various women entering and leaving Mrs. Robinson's office.\n\nThe posting had gone out across the college for female volunteers to participate in a biology study affecting human sexuality. It was a paid study, so there were many more girls signing up than positions needed, and Mrs. Robinson was able to select only the hottest co-eds on campus.\n\nThe more the beautiful girls went in and out, wearing skimpy clothing and flashing some skin, the more I felt my blood simmering. More than once, one of the co-eds would glance at me, startled, then scurry away as if they'd gotten caught checking me out.\n\nThis was going to be fun.\n\n***\n\nTwo hot blondes reclined side-by-side on the hospital bed in various states of undress, their bright blue eyes flashing in the fluorescent white lights. One's hair fell in golden curls, the other sleek and straight. Blouses had to be opened and skirts hiked up to the waist to accommodate the electrodes and other sensors. Mrs. Robinson, clad in a clean white lab coat, used the remote control to adjust the fold in the bed until they were both comfortable.\n\nGabrielle and I were next door in the observation room, watching the experiment unfold through a large mirrored window and the test equipment monitors. I worried that with me in a separate room, any pheromone scent would be unable to travel to the test subjects. Gabrielle informed me that Mrs. Robinson had already dismissed that concern. My effect transcended normal senses.\n\nHeidi and Isabelle were both members of the Delta Delta Delta Sorority. The Tri- Delt girls were some of the hottest babes on campus, but also notorious bitches. Both ladies were very pretty and they knew it. Even though they were in a closed room with no one else but a female college professor, they flexed their tanned legs and posed prettily to always ensure they looked their best. Both had huge, round breasts, unabashedly fake, barely tucked into expensive bras.\n\nAs their brief clothing shifted slightly with their every movement, I found myself becoming very interested in finding out what treasures lay hidden there. This was really going to be fun.\n\nMrs. Robinson told them to sit back, relax, and close their eyes, which they did obediently. She then left and joined us in the observation room. She set her clipboard down and then stood right behind me, looking into the room just over my shoulder. Then I felt a slight tickle as she brought her hands to my sides, rubbing slightly along my waist while I felt her hot breath against my neck. She had thought of everything.\n\nJust staring at the two girls on the bed would not have been sufficient to make the experiment work. So Mrs. Robinson fell back on the most efficient way of achieving the proper effect. When I felt her hands in my crotch and her lips nibbling at my shoulders, I felt a twitch in my shorts in response. Gabrielle and I kept staring into the examination room the whole time, watching to see if there might be a reaction. \n\nMrs. Robinson kept up her assault on my willing body, and when she slipped her bare hand underneath my waistband and around my erection, my soft moan was matched by a louder moan from inside the examination room.\n\nBoth girls were visibly sweating, panting softly, biting their lower lips and showing all the tell-tale signs of arousal. As Mrs. Robinson kept jerking my rod, I felt the flames inside of me stoking higher while my eyes burned fire at the two blonde babes before my eyes.\n\nHeidi and Isabelle were looking at each other, slightly confused at the feelings washing over their bodies. A girl getting horny talking to me at a social was one thing. A girl getting aroused while sitting on a hospital bed, eyes closed, with electrodes stuck to her skin was a completely different experience.\n\nHeidi, the one with the curly hair, finally just shoved a hand down her skirt and started masturbating furiously, throwing her head back against the bed and moaning loudly. Isabelle was rubbing her own breasts and had a hand in her crotch but outside her skirt. Clearly, my effect induced general arousal, and not necessarily an attraction to me. They couldn't even see me.\n\nThis theory was further evidenced when Isabelle just rolled over and tackled Heidi, and soon the two were exchanging sloppy kisses while trying to pull each other's clothes off. Most of the electrodes got pulled off as well, leaving faded red circles in their skin where the adhesive had been.\n\nHeidi got to the remote and lowered the bed to a flat position, and then the two of them moved around each other into a sixty-nine position and began to aggressively eat each other out.\n\nDespite my focus on the examination room, my effect was not lost upon Gabrielle. She was panting herself, and had a hand in her own jeans while watching the pornographic scene before us. Mrs. Robinson, by now able to keep her hormones in check around me, motioned Gabrielle to me and moved herself away so she could study and objectively take notes on the events.\n\nI looked away from the window briefly to kiss Gabrielle on the lips, then I moved her body in front of me, molding her against my chest and causing my crotch to press against her back side. One hand moved her jeans aside while I strummed her clit and the other hand snaked beneath her lab coat and under her shirt to cup a firm breast. And then I continued to fondle the slender lab assistant while we all watched the experiment's success.\n\nOf course, there was still more data to gather. I kept fingering Gabrielle until she had a quiet orgasm. And then Mrs. Robinson was motioning for me to enter the room. I let Gabrielle go, and then followed my professor through the doorway.\n\nThe two sorority sisters were still in the throes of their latest climaxes, and barely noticed our entrance. But when I stood next to the bed and started to peel off my clothing, we had their full attention.\n\nMrs. Robinson had a blood sample gun and calmly took quick blood samples of both girls and then left the room. The blondes submitted calmly and then returned their focus to me, more specifically, to my erection pointing into the air. Our next steps became clear.\n\nIsabelle rolled Heidi onto her back, with legs hanging over the bed and leaving Heidi's wet crotch at the edge of the bed. Heidi spread her legs in offering, and I stepped between her spread thighs. She cooed at me as I leaned over her and sank my shaft down her tunnel as deep as I could go. She sighed happily as I parted her folds and began to lightly thrust into her, making the globes on her chest wobble enticingly. I propelled my hips against Heidi, and she wrapped her legs around my butt and arched her back, shoving as much of her crotch against me as we moved with an easy rhythm.\n\nIsabelle settled her hips over Heidi's head while facing back at me, closing her eyes as she felt Heidi's tongue spearing into her. Then she lowered herself down so she could alternately lick at my rod and the pussy I was splitting open.\n\nThe three of us kept up a fast rhythm, and I found that I was already at the edge of cumming after warming up with Mrs. Robinson and Gabrielle earlier. I held back just long enough to give Heidi a muffled orgasm, then with my pride sated, I let loose, filling this beautiful stranger's quim with my jizz.\n\nWhen I groaned and pulled myself out, still standing at the foot of the bed, Isabelle crept off of Heidi and reached out to suck on me, eager for her turn. I simply rested my hand on top of her head as she bobbed up and down on me, bringing life back to my rod.\n\nHeidi got to the bed remote again and raised up the back so she could sit up and rest, watching her naked friend blowing me while cupping her own perfectly round tits and feeling my cum oozing out of her.\n\nOnce Isabelle was satisfied with my hardness, she turned around and got off the bed before turning and lying forward across the bed, bent forward at the waist. This put her in the perfect position to return the oral favor to Heidi while leaving her ass wriggling back at me.\n\nHeidi simply let her head loll around, enjoying the pleasure as Isabelle lapped at her wet mound, slurping up the combined cum from her box and urging her friend to suckle harder at her clit.\n\nI settled in behind Isabelle, holding her asscheeks in my hands as I lunged forward and speared my new erection into her dripping wetness. I thrust only a few short times before she was quaking with a new climax, her juices trickling out from our joining and dribbling down her leg.\n\nI fucked Isabelle's pussy for several minutes, enjoying the warmth and wetness. But then I pulled out, and with my hands holding her open to me, I pressed the head of my cock at her other hole. Isabelle lifted her head out from between Heidi's legs and gasped as the crown popped through her sphincter, and then she moaned as my shaft descended into her ass.\n\nIsabelle raised up her torso while I fucked her ass, bracing her hands on the bed, her arms straight with her head hanging down between her shoulders as she felt me reaming her out. I pressed my chest against her sweaty back, wrapping my arms around her waist while I raised my hands under her heavy breasts which were gyrating with our every motion.\n\nI rested my head on Isabelle's shoulder, my eyes locked in on Heidi's gorgeous body while she continued to play with herself and bite on her lip seductively. Isabelle's pants and screams sounded off in my ears while I plowed up her backside.\n\nEventually, I lifted Isabelle back until we were both standing fully upright, joined at our hips. Her head lolled back against my chest and I began fucking her furiously while I dropped one hand down into her crotch. She could barely stand, quivering in my arms while I simultaneously titillated her nether regions and violated her asshole.\n\nIsabelle's whole body began shaking as a powerful orgasm swept through her, dumping a load of her honey onto my hand as her ass muscles clenched tightly around me. Soon after I watched as Heidi, still reclining on the bed, trembled with a fresh climax spreading through her as well.\n\nFinally, Isabelle's sphincter unclenched and I was able to let loose, bursting a torrent of sperm into her anal chute. I roared out as my orgasm overtook me, and when I was done pumping her body full of cum, I let go of her and she collapsed forwards facedown onto the bed, her asshole still gaping wide and trickling out a little bit of white jizz.\n\nMy legs were weak, and I staggered around for a minute before the door to the observation room opened and both Mrs. Robinson and Gabrielle walked in, looking professionally scientific in their white lab coats, clipboards, and composed demeanors.\n\nHeidi let Mrs. Robinson take a new blood sample from her, post-coital. Isabelle was still half-conscious on the bed and offered no resistance as well.\n\n\"Thank you both for coming. I hope you enjoyed the experience.\" Mrs. Robinson paced the room. \"We need to keep you here for one hour of observation and another blood check. But beyond that, if we need anything else further we will let you know.\"",
        "***\n\nHeidi and Isabelle were not the last test subjects. We repeated the procedure with a number of beautiful and willing students: sometimes solo, sometimes not. And after a full battery of tests with dozens of girls, we had a sample size we felt we could trust given our results. The intensity would vary somewhat, but every female was affected by me, 100 percent.\n\nOne thing we DID find out was that while every female felt extremely elevated arousal levels, that did not necessarily mean they were attracted to me. In several instances, test subjects would aggressively pursue either Mrs. Robinson or Gabrielle and ignore me completely. Still, even the most hardcore lesbians (pre-exam) would eventually find themselves desperately horny and mate with me if I was the only available option.\n\nAll of this testing was physically quite enjoyable for me, but I quickly tired of the experiment routine. Also, after frequent doses of my sperm (whether oral, vaginal, or anal), both Gabrielle and Mrs. Robinson were virtually immune to my effect. Natural, unassisted attraction still led to a few encounters, but for the most part things were back to normal between the three of us.\n\nAlso, I had learned to see Mrs. Robinson as the professor, a human being, and no longer the fantasy woman of my dreams. Quite simply, the mystique of \"I'm fucking Mrs. Robinson\" started to lose its appeal. So I started looking for greener pastures. We had no real connection, nothing in common.\n\nThe biological research moved into more of a blood testing and chemistry phase, so we closed the intercourse experiment and my free time was back. Besides, there was still a school to attend. Classes were boring, but my social life increased dramatically.\n\nOur experiments had zero effect on a girl's memory, and soon dozens of gorgeous co-eds on campus were gossiping about me and the most incredible sex of their entire lives.\n\nIt was late on a Wednesday when Heidi dropped by my place. She flipped her peroxide blonde hair and giggled childishly while seductively inviting me to a Tri- Delt party they were having Friday night. It was invitation-only, and I would be one of the very few males present. It was also a lingerie party, so I was to attend ready to strip.\n\nMy eyes lit up at the thought of spreading my \u00fcber-pheremones throughout a house full of hot scantily-clad sorority chicks, and I agreed easily. That little thought was enough to get Heidi's blue eyes darkening and her breath into a soft pant, rubbing her thighs together unconsciously, but then she shook out of her reverie and started away down the hall.\n\nPity, I might've gone for a quickie.\n\n***\n\nCHAPTER 6\n\nThe night of the party, I arrived suitably dressed in silk boxers and an overcoat. A fiery red-head in a lace teddy greeted me at the door and put away my overcoat, then rubbed my bicep as she guided me into the main living room. Two dozen people were already present, and only six of them were male. Already, the imbalanced ratio told me this was going to be a fun party.\n\nA blue party cup full of some toxic mixture was handed to me, and then I joined the main group lounging on cushions and love sac bean bags around the floor. I recognized several people, and quite casually we all settled into a comfortable conversation.\n\nAn hour later, the party grew to 30, which was expected to be the maximum, and only 8 were male. The alcohol had kept flowing, there was a more decadent haze in the room from smoke that was not tobacco-based, and the conversation had taken a decidedly sexual tone. The music was pumping, a solid bass beat that had everyone's heart racing and adrenaline pumping.\n\nPeople were slowly grouping off, moving into more secluded corners to make-out and start feeling each other up. Now, an out in the air orgy was not planned, usually people would sneak away to quiet rooms. But I was already a little bit turned on by the feast of female flesh before me, beautiful women in all shapes, sizes, and cup sizes around me and doing their best to flirt and seduce. And my effect had seemingly already gone to work increasing physical excitement and reducing the Tri-Delt sisters' inhibitions.\n\nHeidi and Isabelle, both already familiar to me were leaning against my chest and shoulders, idly rubbing at my body while getting thoroughly drunk and antsy. I had one arm wrapped around Isabelle's shoulders, the palm of my hand between her bra and a naked breast. My other hand was in Heidi's panties, lazily tickling while we all kept up the conversation.\n\nBut one girl in particular had caught my attention. She was an athletic Amazon, at least as tall as me and built like a Greek goddess. Dark brown hair with natural curls fell over toned shoulders. Soft bangs framed her face and partially hid her brilliantly green eyes. Her limbs were quite slender but muscularly-defined, and her legs went on forever. In the middle, her large, full breasts were barely contained by a lace bodice, and she wore matching thong panties. Above all else, she possessed an exotically perfect face that would have put Aphrodite to shame.\n\nThis goddess was seated royally in an armchair above most everyone else, who were reclining on cushions closer to the floor. And despite her clear arousal she was still playing quite hard to get with any guy who approached her. When she did speak, her voice had a European accent which was at once intoxicatingly attractive and also threateningly bitchy.\n\nIsabelle followed my gaze for most of the hour, and finally told me about her.\n\n\"That's Kaia,\" she whispered in my ear. \"And forget about it. You'll never get her.\"\n\n\"Why not? Are you jealous?\"\n\n\"No,\" Isabelle giggled. \"But she's just a cocktease. She likes being in control, and I've never seen a guy actually bag her for as long as I've known her. She'd rather toy with them than actually fuck them.\"\n\n\"Hmm.\" I liked a challenge. Things had been altogether too easy for me lately.\n\nI spent the next hour pointedly ignoring Kaia, enough so that everyone in the room had noticed. In the meantime, my arousal had only been building and building, and as I got hornier, so did every other female in the room. The music was seemingly louder, filling our ears as the world around closed in until there was nothing left but the lust, the music, and whatever gorgeous body was nearby.\n\nNone of the guys knew the truth about what was happening, but they certainly were enjoying the fruits of my labor. Two couples were clearly fucking not five feet from us, and I had already brought both Heidi and Isabelle to finger-licking orgasms. Other girls had split off into threesomes (foursomes!) or lesbian rug- munching fests. The conversation had died out, with pretty much everyone heavily petting or blowing or sucking on something. There was nothing left but the symphony of an orgy set to a thudding bass soundtrack.\n\nI was sitting on a nice cushion, leaning back against the couch while Heidi gave me an expert blowjob. I was rubbing at Isabelle's pussy and nibbling on the back of her neck while my other hand palmed her swollen nipples and the two of us watched the scene unfolding in front of us.\n\nKaia was still in her throne, the fiery red-head sister eating out her pussy while she leaned back and simply enjoyed it. The only thing was that she looked rather unsure of herself as the lust flamed in her head almost out of her rigid control. Her eyebrows furrows as she panted and tried to comprehend why she felt so aroused. \n\nThree different guys had propositioned her, but she shooed them away with the most careless of dismissals, still in control enough to be the Ice Queen. With other, more willing sorority sisters around, they were able to find new attractions. But now Kaia's gaze was on me, watching me intently as if trying to figure out what was going on in my head. It was as if she could tell there was something very different about me from the other guys.\n\nHeidi was doing her best to bring me off, but eventually she tired after almost fifteen minutes of my cock at diamond hardness and whined, \"Dammit, come already!\"\n\nI grinned down at her. \"Make me.\"\n\nHeidi took on a bold look in her eyes, and returned to my rod with new aggressiveness. But then I noticed that despite the red-head's expert girl-loving, Kaia had not let herself orgasm either. I started staring her down, Kaia returning my gaze coolly. Finally, she called out \"Jamie!\", and then a sandy-blonde California girl came around.\n\n\"Jamie, do me a favor?\" Kaia asked, fighting past a soft moan. \"Make that boy lose it. I just don't think he could handle a challenge from you.\"\n\nHeidi got up and moved out of the way as the gauntlet had been thrown down, and I moved myself into an armchair directly opposite Kaia.\n\nI caught Isabelle's attention, who was relaxing after I'd brought her to two nice orgasms, and asked her if she could help me out with Kaia. With a devilish smile, she moved over to take the red-head's place between Kaia's thighs.\n\nJamie sashayed over to me, already naked from a previous encounter. She had a clean, California girl face and some of Beverly Hills' finest breasts ever created over a silky smooth bare pussy. She straddled me, rubbing her soft vaginal lips along my wet prick while pressing those perfectly round breasts into my face. Then she slid lower, my shaft trapped between the folds of her pussy while she glided backwards, dragging her tits down my legs until my erection was held in the cleft between her heavy boobs.\n\nI watched as Jamie tit-fucked me, opening her mouth on the downstroke and licking me for several seconds before gliding up and then returning back down, my rod encased in her warm flesh.\n\nWhen I looked up and over, Isabelle was Frenching Kaia pleasantly while she stripped off Kaia's bodice and then rubbed their boobs against each other. Eventually, she lowered herself down and began to lap at Kaia's wet slit.\n\nMeanwhile, Jamie was very, very good. In just a few short minutes she had picked up on my natural signals and figured out how to maximize my pleasure for rapid release. I felt my control slipping away from me as my balls started boiling, threatening to burst despite my intentions.\n\nI turned my focus onto Kaia's face, channeling all of my lust for her the way I would fixate myself on Mrs. Robinson or any other gorgeous woman I set my sights on. I watched Kaia's upper torso as she jiggled and twitched in pleasure, my \u00fcber-pheremones now focused in on one girl.\n\nAnother sorority sister came and started rubbing my shoulders while nibbling at my ear and whispering dirty thoughts to me. Heidi went over to Kaia and started caressing Kaia's large breasts and tickling any sensitive nerves she could find. Then another sorority sister came and rubbed at my chest, then directed my gaze to watch her tongue battling with another gorgeous woman, a vision that sent my heart racing even faster.\n\nPicking up on the challenge, one of the males joined my team and went to Kaia, massaging her neck and shoulders, and the others in the room slowly split off to choose their sides or stay in the middle and watch.\n\nEventually, both Kaia and I had been fighting to hold back our climaxes for over a half an hour despite swarms of fingers, lips, and tongue stroking every inch of our bodies. Jamie finally just got up, shoved her round tits in my face, straddled my hips, and buried my cock into her wet snatch. I nearly lost it right then and there as I felt the warm wetness envelope me, and biting down on my teeth I blocked out the pleasure, squeezing my own inner muscles until I felt shooting pain inside my balls while fighting to hold myself back.\n\nBy now, everyone else had stopped their activities completely. The sorority sisters were still buzzing with sexual excitement, but the main event was the duel of control between Kaia and me. Everyone formed a circle around us, cheering drunkenly.\n\nJamie rode me powerfully, bucking like a bronco in my lap while rubbing her big tits against my cheeks. But I was on a mission that ego would not let me waver away from. I clutched Jamie's body to my chest and looked beyond her to Kaia's sweaty form, flushed red with arousal and trembling from pleasure overload. I willed her to climax in my mind, straining my brain even as the male massaged her neck, Isabelle rubbed at her breasts, and Heidi had most of her hand embedded deep inside Kaia's pussy. And then at last, my mental power won out as Kaia's emerald eyes flew open, her body went rigidly still, and then the earthquake blasted through her body as Kaia climaxed harder than she'd ever done in her life.\n\nEvery nerve ending in Kaia's body was twitching and she shuddered so violently that everyone momentarily lost their grip on her. I was surprised she didn't sprain something. \n\nJust moments after I realized my victory, my muscles relaxed and immediately the dam burst inside of my balls, and my cock erupted inside of Jamie's warm cavern. There was so much built-up pressure that I poured out in what felt like a single massive cannon blast, and Jamie visibly flinched when she felt the wave slam against her insides. And with my hands on her ass and my hips grinding against her clit she tripped over into an orgasm of her own, the hot blonde's body quaking against me even as my entire body trembled against hers with the force of my ejaculation.\n\nWe were all done, the room silent as everyone rested in the aftermath of such explosive orgasms. Jamie toppled off of me to the floor, and a sorority sister went to lick and suck at her worn body. But the lust in me burned even more intensely than before. I knew exactly what I wanted, and who I wanted this very moment. The intense, raging desire felt like it formed a halo of flame around my body, radiating out into everyone in the room.\n\nA chorus of female moans shattered the still air as my arousal slammed into them invisibly, and then I was out of my chair. Kaia lay limply against the cushions of her chair, still in shock at the force of her climax. But then I grabbed her inert body, ferociously yanking her out of the chair and planting her face-up on top of a wide suede bean bag. Kaia's back was arched over the curving cushion with her head hanging off the far end while her ass perched on the nearer edge. I lay flat atop her, crushing her upright tits against my chest while I held her head in my hands and kissed her fiercely.\n\nShe managed to return my kiss with equal fervor, unable to put up any resistance to my blazing lust that filled the room and permeated every female, especially the one beneath my body. The harmony of moans spun into a melody of sex as a fresh full-blown orgy newly got under way, girls attacking anyone within reach.\n\nI leaned back for a brief moment, staring into Kaia's green eyes that were wide and liquid and staring right back at me. I could see her desperate desire for me, and my muscles were filled with a rush of power. I had THE power, and the cacophony of wet meat slaps with groans and whimpers and cries of \"fuck me\" would be the soundtrack of my life.\n\nI placed my new erection into the folds of Kaia's bare-shaven pussy, and she merely spread her legs and crossed her heels behind my back. In one powerful thrust, I speared my way inside of this goddess, burrowing past her extreme tightness. She gasped at my penetration, but the silky wetness of her insides let me glide all the way down slowly until I was embedded completely.\n\nShe let her head fall back, feeling the blood rush into her brain while I drew myself back, and then thrust in again. And again. And again. I suckled at her nipples and bit down on her neck, leaving my mark for all to know and remember: I had conquered the Ice Queen.\n\nKaia had two powerful orgasms, my effect helping her enjoy the best fuck of her life while she screamed at me to split her open and fuck her even harder, completely submissive to my will. Finally, I filled her twitching pussy with my creamy load, and then I was straddling the bean bag and her torso while she sucked my deflated pecker and massaged my wet shaft with her breasts.\n\nJamie parked herself between Kaia's legs and was slurping out our mingled orgasmic fluids, and even licked Kaia to a fresh orgasm while Kaia's lips clamped down almost painfully about my re-hardening rod.\n\nWhen I'd attained sufficient hardness, I stood up for a moment to survey the scene around me. Every single person was engaged in a sexual activity, the girls still buzzing with arousal and all males had dicks embedded in wondrous pussies or wet mouths. I had my pick of 22 different women, but my focus was all on ravaging the goddess beneath me.\n\nI flipped Kaia's body over, my eyes trailing down her spine to a narrow waist and an ass so tight I could barely dent her skin with my fingers. We were both hot and sweaty, our skin slick with moisture and my erection soaked and dripping saliva. I pinned Kaia down and spread her asscheeks wide for me, and with a loud scream from Kaia I pierced her asshole and sank my dick deeply into her rear chute.\n\nKaia howled with mixed pain and pleasure as I reamed her out. I was damn certain to give the Ice Queen the fucking of her life that she would never ever forget. I lifted her hips until she got to her hands and knees, precariously perched on the bean bag while my hands circled her hips to massage her love button. Her entire body shook forward with each impact, her tight asscheeks doing little to cushion each crash of our hips.\n\nKaia had one loud, screaming orgasm before the she finally decided she'd had enough of being the submissive one. She was still turned on beyond belief, but she was used to being the Queen and took charge of our fucking.\n\nKaia pulled me out of her ass and then before I could react, shoved me onto my back across some cushions on the floor. Then pivoting, she straddled my hips and carefully guiding my erection, sank my cock up her back door once again, watching my face the whole time.\n\nI lay back and groaned at the tight, dry heat surrounding my sensitive flesh, and enjoyed watching Kaia's perfect breasts bouncing up and down with every thrust.\n\nKaia had a new orgasm before she really started to ride me, squeezing her butt muscles tightly until I couldn't handle it any longer and came, geysering my fluids up Kaia's ass. She howled excitedly as she felt each spurt splash against her bowels. I had waited over 35 minutes for my first orgasm, but now I had shot twice into Kaia's body within the last 15.\n\nKaia leaned down to rub her nipples against my chest and kiss me while my cock slowly deflated inside of her ass.\n\nShe motioned to a few of her friends, until I was surrounded by four gorgeous sorority babes who were all rubbing at my chest and arms and cooing in lust for me. Kaia whispered, \"Let's get you rinsed off. And then? There's a hot tub out back I'm sure we could make good use of.\"\n\n***\n\nCHAPTER 7\n\nSaturday morning I managed to drag myself back to my apartment to shave and shower. Then Saturday afternoon I got a phone call I had not been expecting: Kaia was asking me out on a date.\n\nI was a bit surprised, but at her request I told her I'd be there at nine.\n\nKaia told me she had everything planned, but didn't mention style so I stood in front of my closet for a few minutes trying to figure out what to wear. I was still transitioning from High School geek to College stud and my wardrobe was not yet where I wanted it. I actually started to panic for a few moments when I realized I wasn't sure what to do on this date. Booty calls just didn't count, which were all that my previous dates amounted to.\n\nFinally deciding I could always dress up a little too much (instead of showing up too casual), I went with slacks and a dark green dress shirt. I showed up promptly on time, calming the butterflies in my stomach.\n\nTaking a deep breath, I thought about my strange situation. I could get laid anytime I wanted. But to get a girl to like me on a personal level was a completely different issue. I had the need and the want to be loved. But in the end, remembering that I was the Ultimate Casanova is what gave me the confidence to step up the door.",
        "I rang the bell, and Jamie's clean, pretty face greeted me on the other side of the door. She was in a little black cocktail dress and welcomed me into the living room.\n\nThe moment I stepped inside the first thing that caught my attention was Kaia's face. Her emerald eyes were bright, her hair up and stylish, and her figure exquisite in a short green dress that really brought out her eyes. But the most dazzling part was the smile that spread across her face when she saw me. She was pleased to see me, perhaps pleased that our outfits matched as well. It was almost surreal, and completely unexpected from the Ice Queen image I'd built up in my mind around her.\n\nKaia had been chatting with another sorority sister, a raven-haired, elegant girl I vaguely remembered from the previous night. I stepped up immediately and said hello to Kaia, exchanged a few pleasantries, then turned to her companion.\n\nKaia introduced me to Leanne, who stood up and shook my hand softly. I took in as much of her as I could with a quick glance down and up. Leanne's face was pretty and angular, with a sharp jawline and cool blue eyes that pierced right through me. If I hadn't already pegged Kaia as the Ice Queen, then I would have easily been able to apply the same quick analysis to Leanne as well.\n\nJamie returned to us, and then Kaia immediately took control of the situation. Turning to her friends for a moment, she then looked at me and offered up her hand. \"Shall we?\"\n\nI crooked my elbow and let her take it, then Jamie led the way to the door. We followed Jamie outside, and then I realized with a start that both Jamie and Leanne were going with us. I surmised that we had two chaperones for this first date. I covered my surprise and struck up a casual conversation with Kaia as we headed for the parking lot. We talked about the usual: majors, career paths, etc.\n\nThe strange nervousness fluttered up in me again. For the past year I had always been in charge of my dates, guiding them swiftly to a lustful and sexual conclusion. My natural instinct was to feel a little defensive not even knowing where our destination was, but I steeled my spine and exuded the confidence I knew with certainty that Kaia wanted in me.\n\nIt was that aggressiveness and aim to prove I was her equal that surely caught her attention the previous night, not to mention that I'd actually conquered her. So when we reached the black BMW, I took charge and opened the rear door for her as if it was my own car and the whole thing was my plan.\n\nKaia showed me her dazzling smile again, then slid into the back and let me follow. Leanne went to the driver's seat and Jamie hopped in as the front passenger.\n\nWe headed into downtown, the four of us chatting the whole way. I comfortably flirted with all three women, making suggestive, but very subtle, comments. Eventually, we valet parked at a dance club and started to make our way inside. New butterflies kicked up as I fully comprehended our destination and the fact that I wasn't 21 yet.\n\nBut my fears went unfounded as our little group went up to the bouncers who took one look at the girls and let us all in, Leanne stopping to rub the bouncer's cheek.\n\nInside, I ordered everyone a round of drinks while we went into a VIP lounge which was quiet enough to hold a decent conversation. I did notice conspicuously that Jamie was not drinking at all. Perhaps she was living a clean lifestyle or perhaps she was just the designated driver. Either way, the rest of us were getting toasted.\n\nKaia was rubbing her legs against mine, and our flirting was getting hotter and more risqu\u00e9 with each passing drink. The conversation moved decidedly away from the tame, usual talk about school and classwork and started shifting into sexual topics. I kept most of my focus on Kaia, but kept her friends included at all times. \n\nJamie and Leanne were watching us hungrily, but apparently were waiting for some signal from Kaia before acting. Finally, Kaia drained her third drink and proclaimed, \"Okay, time to hit the dance floor.\"\n\nIt was after ten, and the dance floor at least was half full. But when we got there, Kaia and Leanne parked themselves at a tall bistro table with stools and nursed additional drinks while Jamie wrapped an arm behind my back and guided me forwards, where her hips were already swaying to the beat.\n\nI glanced back at Kaia for a moment, but she just smiled at me, her eyes glittering in the club lights and neon colors.\n\nCalming my nerves for the hundredth time tonight, I set me body to the rhythm. I knew I wasn't the best dancer, but I was coordinated to the beat and kept my movements restrained enough to let Jamie mold herself around me. She swiveled on her knees and bounced her ass in the air, turning to bounce it back towards my crotch before rotating and slinking down my body. I stared down at her cute face parked at my crotch level, a grin forming when Jamie realized I was glancing lower down to between her perfectly round tits and wonderful cleavage.\n\nJamie danced with me through a full song, and then midway through the next she tilted my head to her and captured my lips with her own. My first reaction was to look to Kaia, but then Jamie was physically grabbing onto my head and holding it tightly until I flowed back into her kiss.\n\nEventually we broke away, our bodies still swaying with the music and breathing heavily while I stared into Jamie's sunny face. We had just begun dancing once again when I saw a new, feminine hand appear on Jamie's shoulder.\n\nLeanne was staring at the two of us, her blue eyes piercing in the dim light. Jamie spun in place then backed her ass up against my crotch while we kept up with the music, and then Leanne had stepped forward and pressed her thin body against Jamie's larger surfer girl physique.\n\nThe three of us danced, Jamie sandwiched between us. Leanne brought her face very close to Jamie, almost to the point of kissing but not quite as she took Jamie's hips in her hands and began to grind her crotch over Jamie's leg.\n\nI risked a glance to the side where two guys were grinning and giving me thumbs up, then I looked to the other side where Kaia was watching us with glittering eyes. Kaia's mouth was open as she panted softly, and I got the distinct impression she was very aroused by the sight before her, and it had almost nothing to do with my effect.\n\nI turned my head back just in time to see Jamie's and Leanne's lips come together, and then a moment later they were spinning around me until I was in the middle.\n\nJamie had her hands on my ass and was rubbing her tits into my back, while Leanne straddled one of my legs, boring her crotch down against my thigh and obviously rubbing herself on me while she reached up to pull my head down and sear my mouth with our first kiss.\n\nI'd had enough sexual experience not to be surprised by the turn of events, but a dim part of me still wondered how I'd ended up kissing both of our \"chaperones\" and not Kaia, my so-called \"date\".\n\nThe next two hours flew by in a blur, as I freaked both girls all night, only occasionally joined by Kaia. My hands had cupped tits and ass and legs, and I shared several more hot kisses with Jamie and Leanne, but never Kaia. I wondered if this was a new game, a form of control where she was so close but I couldn't have her.\n\nBut the longer we danced, the more aroused I became, and the club simply became hotter and hotter along with me. The entire place had to be filled with my pheromones and every woman I could see was visibly horny, especially the trio dancing with me.\n\nKaia finally gave a short nod, and Jamie produced the keys to the BMW. We quickly filed out of there and headed back to the Sorority House. As expected, sober Jamie drove, but the other two were drunk and horny and joined me in the backseat for a grope and kiss fest. I was in heaven as I was finally able to shove my tongue deeply down Kaia's throat.\n\nThe four of us staggered past half-naked sisters on the way to Kaia's bedroom, and once inside Kaia closed the door and Leanne literally launched herself and me both onto Kaia's bed. Together, she and Kaia stripped my clothes off and then turned to strip Leanne for me.\n\nHer party dress disappeared so quickly, and I paused for a moment to take in her very thin form, a few ribs showing, and normal B-cup breasts, firm and perky in youth, carried in a black lace bra.\n\nHer thong was already soaked, and once Leanne was able to shed her lingerie, she simply climbed atop me, already moaning in arousal. My dick was positioned into an upright and locked position, and then Leanne sank herself down onto me.\n\nI was a little too thick for her very narrow pussy, and only a few inches went in on her first lunge. But then as Leanne's eyes lit on fire until they were a bright, pale blue, she squirmed and rammed her body until I was all the way in, the end of my dick bumping against her cervix inside. \"Oh, fucking gawd!\" she cried.\n\nMeanwhile, Jamie and Kaia were also stripping, although Kaia stopped at her underwear, a dark velvety green look with sexy bra and matching thong, then she settled herself into an armchair to watch her friend riding me for all she was worth.\n\nJamie then got fully naked, baring her perfectly formed silicon breasts, still familiar from the previous night. Then she leaned down over my face to feed me her nipples, that sunny smile ever present and causing me to smile around a faceful of tit. I reached one hand down to her bare shaven pussy, squishing two fingers into her drenched folds.\n\nI had been aroused beyond belief for the past few hours, and the effect was not lost on these girls either as an aria of female moans and whimpers filled my ears. Leanne came first, screaming like a banshee and cursing at me loudly while she came, her narrow tunnel squeezing even tighter around me.\n\nJamie came next with my fingers in her box and my tongue on her nipples. What then came as a surprise was Kaia's orgasm next to the bed, self-inflicted as she was really getting off on watching.\n\nLeanne kept riding me and squeezing until all my pent up arousal finally let loose. With my hands gripping her thin arms tightly, almost painfully, I slammed her body down against me and held her there so I could explode deep inside of her, filling Leanne's pussy with a barrage of cumshots. She came a second time right then, a mental orgasm if nothing else as the extreme pleasure in my mind radiated directly into her. I bucked up my hips as I burst, shaking Leanne's light body atop me like she weighed nothing before I finally came down from my high and relaxed back against the bed.\n\nWhen her own climax finally released its grip on her mind, Leanne flopped off of me, lying down next to me and staring into my eyes with wonder at perhaps the most powerful orgasm of her life. My gift to womankind.\n\nKaia then removed herself from the bed, and casually split Leanne's thighs before lowering down and noisily eating out Leanne's worn pussy, still oozing our combined fluids. I listed attentively the wet squishing sounds of her tongue creeping inside of Leanne and the loud slurp as she swallowed the sexual mixture.\n\nJamie meanwhile crawled atop me in a sixty-nine, feeding her soaked nether lips to my mouth and cleaning up my tool with her tongue.\n\nVery quickly I found myself recharging for round 2, but by the time Jamie's talented mouth had revived me, Kaia had returned to her chair while Leanne knelt before her to return the oral favor. I looked to her, but she shook her head as if reading my mind and then gestured to the blonde still sucking at my new erection. \n\nMomentarily frustrated, I suddenly moved quickly and powerfully, spinning Jamie's body around until she was face down on the bed with her feet on the floor and her crotch hanging just at the edge of the mattress. I seized Jamie's hips, lifting her up until she was standing with her legs kicked to the sides, her face, arms, and tits pressed into the covers.\n\nThen in one aimed thrust, I speared my way completely into Jamie's moist pussy and began to really hammer her, our hips coming together with a wet slap on each downthrust.\n\nKaia finally released her bra, revealing those breasts of perfection and slipped the thong off, brushing away Leanne for a moment. She then came right up behind me while I kept drilling her friend, and molded her naked body against me. My hips kept banging but my upper torso turned as Kaia rubbed her tits against my arm, and she came to me when I reached for a kiss.\n\nBut then she broke away and began to massage my whole body with her own, so that our legs were touching, her damp crotch pressed against my ass, her stomach into my lower back, and her nipples scratching at my shoulder blades. This also let her whisper her dirty thoughts into my ear.\n\n\"Fuck that pussy. Deeper. Harder. Carve her out. I want to hear her squeal. That's it... ooh, that sounded like a good one...\" and on and on.\n\nLeanne meanwhile parked her spread legs around Jamie's face, so that now Jamie's tongue and fingers were able to get in on the act. This, however, left Jamie a little distracted and unable to resist my own fingers playing with her clit and the hard shaft pumping in and out of her. I fucked her into one new climax, and when Jamie's shrieking quieted down, Kaia breathed hotly against my ear and whispered a new command.\n\n\"Now FUCK her ass.\"\n\nI pulled back automatically, my dick coated with feminine juices as I spread Jamie's toned asscheeks to the side.\n\n\"That's it. Spread her wide and open.\"\n\nI settled the mushroom head against Jamie's dark hole, then waited for Kaia's command.\n\n\"NOW!\"\n\nInstantly, I threw my hips forward, Jamie screaming louder than I'd ever heard her as my shaft burrowed like a power drill into her backside.\n\nI had no sooner impacted my thighs against Jamie's asscheeks than I was pulling back and driving in once again, Kaia's naked and sweaty body still molded against me as we fucked Jamie together. In my mind, I couldn't decide if I was visualizing fucking Kaia's ass, or if Kaia was fucking Jamie's ass. It was all very surreal.\n\nJamie was crying out in mixed pain with the pleasure, \"Oh! Oh! Aaah!\"\n\nJamie's legs finally gave out from my reaming of her asshole and she collapsed flat onto the bed. Kaia and I fell with her, until I was almost fucking straight down with my hands holding my torso above Jamie's back, my knees on the mattress and my hips pumping relentlessly. \n\nI concentrated on splitting Jamie's ass until she would not be able to walk straight in the morning, and Kaia slid around to dig one hand under Jamie's crotch and frig at Jamie's swollen clit.\n\nFinally, Jamie's whimpers crescendoed louder and faster until they blended together in one orgasmic shriek, and her body went rigidly still, every muscle clenched, including the muscles in her ass. Jamie was still shrieking when my balls loosed, and then I was plugging her anal cavity with my spunk.\n\nKaia stopped to kiss Jamie on the lips, whispering a thank you, and then I saw Kaia visibly tremble as her body recovered from the telltale signs of her own orgasm. My eyes went wide as I realized Kaia had climaxed without anyone touching her. Partly perhaps because I was climaxing and I knew how that would affect a girl mentally. But mostly because Kaia must really get off on watching.\n\nThe four of us took a break from the sexual activity to clean up and shower. I had one more erection come back while surrounded by wet female flesh pressed tightly against me in the oversized tub.\n\nBut Kaia just grinned at me and kept teasing me, refusing to let me fuck her or anyone else. We got out and dried off, my erection still painfully poking out between the gap of my towel and returned to the bedroom.\n\nJamie and Leanne simply got dressed and then gave me kisses goodbye before returning to their own rooms. Then I finally slipped into bed with an equally naked Kaia beneath me.\n\nThe whole night was very surreal, but I at last felt a contentedness wash over me in palming Kaia's perfect bosom and smelling the skin of her neck. For several minutes we simply cuddled and kissed deeply. I was fresh off two very satisfying orgasms, so despite my erection I was in no rush. The lust was not burning out of me, replaced with a peaceful affection and admiration for the Greek goddess beneath me, her dark hair splayed out across the pillow. And even though she'd been watching me ream out her two friends and not getting any cock for herself, Kaia was content and unhurried as well. I reveled in seeing her Ice Queen fa\u00e7ade melt away from her face, replaced by the simple gorgeousness of her face without the hard edge.\n\nIt was while our bodies were rubbing against each other, hands massaging and lips trailing down sensitive nerves that our hips eventually moved into a proper position and I felt my shaft begin to part Kaia's silky soft folds. She gasped as I entered her, and with that sound as my signal I felt the boiling of hormones in my brain.\n\nI pulled back once, and then holding myself at the very edge of leaving her tight tunnel, I sharpened my eyes and stared right into the depths of Kaia's emerald irises, a deep pool of green I could lose myself into.\n\nKaia's face visibly twitched, almost as if I'd physically struck her. Immediately she let out a loud pant of rich arousal as my effect slammed into her with all the force I could put behind it. And then I pumped into her, mentally picturing myself firing off every one of her inner nerves.\n\nVisualize, and make it happen. And I did. All at once, Kaia was experiencing perhaps the Ultimate orgasm, every nerve ending in her body sparkling as she suddenly howled so loud I was sure I'd have trouble hearing in the morning. I kept driving my cock into her with very quick strokes, not letting up at all on her pussy and my thumb on her clit, physically riding Kaia's bucking body as she thrashed left and right, screaming and clawing at my body and completely out of control.\n\nWhat had been planned as a long, luxurious lovemaking session had become the instant incredible orgasm. Kaia had gone from zero to climax in less than 30 seconds, and I was giddy with the rush of realizing what I'd accomplished. I was seriously going to have to remember that trick for the future.\n\nBut then I found out how doing that had drained my body and my own control. I suddenly felt extreme exhaustion, my muscles aching and my body desperate to collapse. So collapse I did. My body fell heavily atop Kaia's still quaking skin, crushing my chest against her bare breasts and my head falling to the pillow beside her head.\n\nIn the same moment, my balls released and I shot every ounce of sperm I had in my body into her. My body went limp, like a marionette with cut strings, except for my pecker which kept spewing jet after jet of spunk into Kaia's shuddering pussy.\n\nA minute later, she finally stopped screaming and her sweaty body went still beneath me. I watched Kaia's eyelids flutter, then finally her eyeballs just rolled back in her head and she passed out, completely overwhelmed by the pleasure that had just coursed through every fiber of her being.\n\nI slid onto the bed beside her and moved my hand to her bosom to verify that her heart was still beating rapidly, then the creeping blackness overtook my vision and I joined her in the satisfied slumber of the sexually exhausted.\n\nI managed one smile just before I fell asleep. I could really get to enjoy my life.\n\n***\n\nNEXT PART 3 "
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "mff",
        "biology teacher",
        "college",
        "experiment",
        "orgy",
        "sorority"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-ultimate-playboy-pt-02"
}