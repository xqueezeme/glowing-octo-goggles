{
    "title": "The Woman on the Twelfth Green",
    "pages": [
        "I took a job in a mid-sized city some distance from home when the mine where I worked closed. There were no other opportunities nearby for an electrical engineer. I was in my late twenties and still single. I had a fianc\u00e9. It looked like we were beginning to build a life together. But she decided she didn't want to relocate with me despite receiving lucrative offers from the three hospitals in and near the city where I now lived. I didn't want to relocate either. I had no choice if I wanted to avoid poverty.\n\nInitially, I knew nobody outside of the people at work. I was fortunate in some respects though. The new job paid well, better than the one I'd lost. My new city had an active arts and music community, a technical community college, a small, prestigious liberal arts university, and a large branch campus of the state university.\n\nMy new employer provided a cash payment to help defray the cost of relocation, rather than covering moving expenses. I brought only my clothing, music collection, and some personal items. Everything fit into my mid-sized SUV, so I made out much better than if a relocation package covered moving expenses. The check was enough to put a sizable down-payment on a house or condo, but I didn't want to buy anything until I was established, knew my way around, and was sure I was staying.\n\nI found a nice furnished two-bedroom apartment above a three-car garage. My new landlord, Stephanie, was an early fifties widow that worked as a flight attendant on international routes. Her husband built the apartment to rent to university students. But after several successive student tenants proved problematic, she left it empty. She finally decided to rent again because she wanted someone responsible around when she was away from home. In return for an absurdly low rent, I kept the grass cut and monitored the house during her frequent, extended absences. The state university golf course was across the street.\n\nMy new colleagues at work were nice folks. I quickly felt at home and soon gained respect for improvements I made in the manufacturing process. But most employees were married with families. And I was one of the youngest employees. I found little opportunity for socializing through work. My family wasn't religious, so I had no desire to get involved with a church. I decided to take a course or two in the evening division of the state university the next school year. Perhaps pursue an MBA. Maybe I could meet some people there.\n\nLike any college town, there were lots of bars. I wasn't then, and still am not, much of a drinker so I was reluctant to start crawling pubs to socialize. I did occasionally frequent a few clubs that featured live entertainment and met some people, but none progressed beyond being casual acquaintances. I played softball for the company team. I played in a recreational basketball league. But outside of these activities, I spent most of my time alone.\n\nAfter a few months, I began having trouble sleeping. I often went for a walk when I couldn't sleep. On several occasions, my presence on a deserted street at 1:00AM on a weeknight attracted the attention of a police patrol. These never amounted to more than a casual inquiry along the lines of 'Are you alright?' or 'We received a call that someone was prowling the neighborhood.' In every instance, an explanation that I was out for a walk because I couldn't sleep and proving I lived nearby sufficed. But they were a nuisance. And I worried that an interaction with a cop might one night escalate because of some unrelated incident, such as an assault on a female student.\n\nTo avoid dealing with the police, I decided to explore walking the golf course at night. The university course was open to the public. Though a good athlete, my name and good golfer were never used in the same paragraph, much less the same sentence. On my best days, I might hit a handful of good shots a round. I played the course a few times to learn the layout. It was a challenging course, far above my meager skills.\n\nOnce confident I could walk the course in the dark without stumbling into a ditch, I started frequenting it nights when I couldn't sleep. It was convenient. It was quiet. I was always alone. I could relax with my thoughts. There was no chance of being stopped by the city police. Campus security didn't patrol it. If I avoided wandering close to campus where I had run into students a few times, I'd have no trouble. \n\nThe students I'd encountered at night on the course were typical of the friends I had when I was in school. Groups at night were usually a small group of guys not far from campus, either stoned or a little drunk. Sometimes a little loud but otherwise harmless. When I had run into students, they usually offered a friendly greeting or cracked a joke. Sometimes they offered a beer or a toke. But they were also likely to attract the attention of campus security.\n\nI typically walked the twelfth hole, a long par-five uphill dogleg. It was close to home and distant from campus. When you crested the hill, there was a wide gully. The hill continued to the right, turning into rough. A paved cart path through the rough led to the backside of the green and then to the thirteenth tee. From the top of the hill, you looked down on the green, across the gully to the left. The green was elevated about fifteen feet above the bottom of the gully, up a nearly vertical incline with several bunkers at the base. The bottom of the gully was fairway. But you didn't want to be down there. The way to play the hole was to get to the top of the hill with your second shot and hit a short iron onto the green. But knowing how to play it and being able to execute are very different things. My best score on the hole was a triple-bogey.\n\nOne warm, clear mid-Spring night, I was walking the edge of the twelfth fairway, along the tree line that separated the course from the road where I lived. The moon had been full a few nights earlier. When I got to the crest of the hill, I saw someone lying on a blanket spread out on the green. There was a something else on the blanket that looked like a pile of clothes. Though I was still more than fifty yards away, I could see there was a naked woman was lying on the blanket.\n\nI dawdled, unsure what to do. I should have quietly turned around and gone back the way I came. But my curiosity kept me where I stood. Instead of leaving, I couldn't resist moving closer. Her head was toward the cart path. Unless I made noise, she'd never know I was there. I stayed close to the tree line and on the grass until I reached an area where the cart path was behind some trees, moving silently. Before long, I was to her right, close enough to see her more clearly.\n\nI had managed to get within sixty feet without being detected. I stood close to a tree and remained motionless while I watched. Color perception was poor in the moonlight. I could see her hair was dark, black or brunette, maybe a dark shade of red. Her body was slender. Her breasts were flattened because she was on her back. She didn't look either flat-chested or buxom.\n\nHer legs were bent, knees spread apart. One hand was kneading a breast and pinching the nipple. The other was positioned down the front of her torso. The hand between her legs moved steadily. I felt the pressure in my groin as I grew hard watching her, listening to the soft hum of a vibrator moving in and out of her. Its buzz was barely discernable between soft moans and whimpers. \n\nDespite the erection uncomfortably tenting my pants, I didn't do anything about it. I just watched as she reached an orgasm, crying out softly. After taking a few minutes to catch her breath, she began again. This time the vibrator hum was higher-pitched, running through a series of short bursts, followed by a single long, intense burst, before repeating the pattern. \n\nI watched her hips writhe as her excitement grew. My own arousal grew with hers. It was difficult to resist relieving the pressure in my groin, but I was afraid she would hear me. I didn't want to frighten her. Or know I was watching. This was something new for me. Though my fianc\u00e9 and I had an active sex life before we split, there were some things she'd never do. Masturbating while I watched was one of them. She wouldn't even talk about whether she ever had.\n\nI enjoyed watching the woman, though I had reservations about it. She was panting rapidly, taking short breaths. She sighed and trembled as she continued to work the vibrator in and out. Finally, she let out a strangled cry. It may as well have been a full-throated scream in the dead of night. Her body arched, shoulders and feet on the ground, hips high. Her whole body shook as her orgasm short-circuited her nervous system. She pumped her hips up and down several times, rolled onto her side, and curled into a fetal position facing my direction. Her shoulders shuddered. Her torso jerked and twitched as her nervous system rebooted.\n\nShe stayed on her side for a few minutes, completely still. She whimpered softly a few times then rolled onto her back. When she stood, she looked around. I finally got a look at her face as she turned around several times with her arms out-stretched. Her features looked pleasant, though it was impossible to see her face clearly in the moonlight. When she stopped turning around, she was facing my direction. I stiffened but remained still, hoping she couldn't see me. Her breasts were perfect for her tall, slender, athletic build, not the huge mounds of an adolescent male fantasy. \n\nShe bent down, picked up her panties and stepped into them. She pulled on a top. Apparently, she hadn't worn a bra. She stepped into loose-fitting slacks and cinched the belt. She stepped into what looked like deck shoes, picked up a knapsack, dropped the vibrator into it and then stuffed in the blanket. After slinging the knapsack on her left shoulder, she walked straight at me!\n\nI nearly panicked. I stood still, frozen in fear. Terrified she would catch me. As she got closer, I held my breath. But she veered to her right and walked right by, within ten feet of me. Nothing about her stride or demeanor suggested she suspected anyone was near. I'd chosen my vantage point poorly. Logically, she took the same path that I had taken. I could only conclude my brain was addled by an inadequate blood supply.\n\nShe walked in the direction I needed to walk to get home. Down the hill in the fairway, along the tree line. I waited a few moments before I followed. She turned off the fairway and through the trees a few hundred feet past where I lived. I walked to the spot where she turned off and saw her walking down the street, around the corner from my apartment. A street I drove at least twice a day on my work commute. She crossed the street and turned into a house, though I couldn't tell which it was. She never once looked about.\n\nLater that week, I was on my way home from work when my cell phone rang. My car didn't have Bluetooth, so I pulled over and parked to take the call. I was just around the corner from my apartment, somewhere near where I'd seen the woman on the green turn to enter her home. I was parked for a few minutes listening to my mother vent about my father stubbornly refusing to allow a party for his sixtieth birthday. A car startled me when it turned into the driveway just past where I was parked. The door on the one-car garage opened and the car moved slowly into the garage.\n\nWhile half-listening to my mother, I watched an attractive woman about my age come out of the garage, open the trunk and remove two small bags with the logo of a nearby supermarket. She was tall and slender. In the sunlight, her dark brown hair was iridescent with shimmering red highlights as she walked. She looked in my direction with a slight scowl, probably wondering why a strange man was parked in front of her house. I held the phone in view and mouthed, 'My mother,' silently with a look of frustration. Her face and its expression disappeared as she turned to go inside.\n\nI listened to my mother for a few more minutes though my mind was elsewhere. While I listened distractedly, I looked at the house. It was small, well-maintained and nicely landscaped. There were no signs of children. I wondered if she was married. I also wondered if she was the woman on the twelfth green.\n\nI continued walking the golf course when I couldn't sleep but hadn't seen anyone after that night. About a month later, I was in the driveway rinsing my car after washing it. The woman from the house around the corner walked by and stopped at the end of my driveway. I didn't notice her until she spoke.\n\n'You were parked in front of my house a few weeks ago,' she said.\n\nI knew she was right but chose not to acknowledge that I remembered. 'I was?' I asked.\n\n'Yes, around the corner. When I looked at you, you held your phone out and said something. My mother, maybe.'\n\n'Oh, yeah. I remember. My mother was bending my ear about my father. She wanted to throw a birthday party for him, but he assured her that he wouldn't be there if she did. She wasn't happy and rather than complain to one of her friends, she called me. Sometimes, I wish she could call my sister instead. But Sheila is on a research project in the middle of nowhere. I hope I didn't frighten you. I just stopped to answer the call.' 'That's okay. There isn't much traffic on my street. It was just a little odd to see someone I didn't know parked in front of my house,' she said. She turned to walk away. She carried a small backpack on her left shoulder, a water bottle in a net pocket on the bag. She was dressed for a hike.\n\nI didn't want the conversation to end just yet, so I grasped at a topic. 'If you'd ever like company on a hike, I could join you. I'm new to the area and know almost no one.' I figured the worst that could happen was she'd either ignore me or tell me she was married. Instead, she stopped and seemed to be appraising me, trying to figure out whether I was trustworthy. \n\n'Do you have time to join me now?'\n\n'Do you mind waiting a couple of minutes while I change out of these wet clothes?' I asked.\n\n'Sure. I'll wait here for you,' she responded.\n\nI turned off the faucet and ran up into my apartment. It only took a few minutes to change into dry clothes, run a comb through my hair, and grab some water. When I returned, she was talking to my landlady. It appeared they already knew each other.\n\nI nodded at Stephanie and waited for them to finish talking. After they were done. My landlady smiled and told us to enjoy our walk as she turned to go inside.\n\n'Stephanie says she likes you, Dennis. I'm Kiersten,' she said, extending her hand. 'I didn't feel like cooking tonight. I'm going to walk to Angelo's for an early dinner. Care to join me?'\n\n'I could eat,' I said, trying to sound enthusiastic but not too enthusiastic. Angelo's was a small, family-owned Italian restaurant that served great food. It was cheap. The portions generous. I was a regular. The round trip was a long walk, probably six miles. My enthusiasm level increased. Kiersten had just committed to spending several hours with me after a brief conversation with my landlady. It seemed highly likely she was single. I made a mental note to buy a bottle of wine for Stephanie.\n\nKiersten set a brisk pace, but I was in good shape and had no trouble keeping up. We got acquainted while we walked. She was a music teacher and high school orchestra director. She also taught violin out of her home several evenings a week. She was twenty-seven, had never been married and wasn't seeing anyone. I told her my story, electrical engineer at Blythe Instrument and Control Systems. Relocated to town a few months earlier. Also, never married. And not only not seeing anyone, barely knew anyone in town.\n\nIt was late afternoon when we got to Angelo's, still a bit before the dinner rush. We were the only diners when we entered, though over the course of dinner, the place filled up with a mix of couples of various ages and families with kids.\n\nAngelo's teenage daughter, Tina, seated us, provided menus, and took our drink orders. Iced tea for me. Chianti for Kiersten. When Tina returned with our drinks and a basket of warm bread, we ordered. Neither of us had looked at the menu. Kiersten ordered an appetizer platter with hot and sweet soppressata, dried salami, and hard cheeses that she offered to split, and zuppa de pesce. I sorely missed my mother's eggplant parmigiana. Angelo's was almost as good.\n\nOur conversation over dinner was relaxed, easier than I expected, with none of the awkwardness typical of a first date. I wasn't sure Kiersten considered it a date. I told her about my sister, an archaeology doctoral candidate working a dig in Central America. My parents were both alive and well, that is if my mother hadn't strangled my often-cranky father since I'd last spoken with her. \n\nHer two older brothers were both professional musicians, a percussionist with a symphony orchestra and a guitarist working on Broadway and doing session work. Her father was a musician, too, lived nearby and was doing okay. He was legally blind, though he could read large print. Her mother had passed away while she was in college.\n\nAngelo's meals were big, but Kiersten's dinner was huge. I was surprised she finished it, along with more than half the basket of bread, three Chiantis, and desert. I skipped dessert. I tried to pick up the tab, but she snatched it away, insisting we each pay our own way. We sparred a little when I wanted to split the appetizer. But she insisted. She ordered it. The appetizer was her responsibility.\n\nWith full bellies, the walk back was much more leisurely. Kiersten was friendly, though a little guarded, on our walk to Angelo's. She was playful and animated on the walk home. As we walked, she would occasionally touch me. It wasn't sexual or intrusive, more like familiarity between friends. When I made a slightly off-color joke in response to her inadvertent double entendre, she playfully punched my arm and laughing, called me a dog.\n\nWe walked to her house. It was still light though the sun would soon set. We talked out front for a few minutes. I hoped she'd invite me in. But instead, she said good night. She had plans, early the next morning.\n\n'I had fun this afternoon,' I told her, before asking, 'Any chance we can do something like this again?'\n\n'Maybe,' she said with a smile. 'What's your phone number?' she asked.\n\nI told her the number but also gave her one of my business cards, which had my cell and work numbers. She giggled and mumbled something under her breath that sounded like, 'Engineers!', though she wouldn't repeat it. She looked at my card briefly before putting it in her pocket. She hugged me before she bounded up the sidewalk into the house. There was no kiss, and no opportunity for one.\n\nShe hadn't reciprocated when I asked for her number, telling me, 'When I know you a little better.'\n\nI hadn't reached home yet when an incoming text buzzed my phone. I called up the text. It read, 'I had fun, too. Call me tomorrow night. Any time after six.' Stephanie was definitely getting a bottle of wine. Maybe flowers, too.\n\nWhen I got home, Stephanie was sitting on the front porch. We talked briefly. She told me that Kiersten's mother had been her best friend and that she was very fond of Kiersten. She also admonished me to be nice. I smiled and assured her I wouldn't dream of treating Kiersten badly. I said goodnight and went up to my apartment to settle in for the evening.\n\nI fell asleep watching a baseball game between two west coast teams. When I woke, it was just after midnight. By the time I'd emptied my bladder, I knew I wasn't going back to sleep any time soon. I went out for one of my evening walks. The nearly full moon was high in the sky. I took my usual path up the twelfth hole and walked the length of the thirteenth hole, circling the small pond in front of the green and then headed back the way I'd walked. It was quiet. I saw no one while I was out.",
        "I slept well, once I returned home, and woke just after seven. I dressed for my morning run and went outside. The hose I used to wash my car was still lying on the driveway. I coiled it and hung it on the side of the garage where it belonged. After stretching I went for my run. \n\nI ran up the road, parallel to the golf course. After I'd gone about a half mile, I heard a car slow down as it approached. Kiersten beeped and waved as she passed but didn't stop. She accelerated and disappeared around the corner after safely passing me. I completed my run, showered and made a late breakfast.\n\nThe rest of the day was nothing special. I paid bills online. Did laundry. Went for groceries. I called my parents, who, as was their habit, bickered as they talked with me. It was like listening to a comedy team -- my father the straight man and incorrigible grouch. My mother the comic foil that played off his cranky demeanor for laughs at his expense.\n\nI called Kiersten just before seven. While I listened to the phone ringing in my ear, I heard the unmistakable sound of a cell phone coming from the deck just outside my apartment door. I looked outside and saw Kiersten standing on the deck, grinning as she looked at her phone. I hung up and opened the door.\n\nKiersten had stopped by to drop off a potted plant her father had bought for Stephanie. Instead of just going home, she started up the stairs to say hello. We sat on the deck for a few minutes and talked after she declined an offer have supper with me. She had just finished dinner at her father's. She only stayed about a half hour before going home. We made vague plans to get together the following weekend.\n\nI was excited about having finally met someone that might actually become a close, female friend. The rest of the evening passed quickly. After having a sandwich, a salad, and a bottle of iced tea for dinner, I stuck my nose in a mystery novel I'd picked up that afternoon and read until about eleven when I went to bed.\n\nBut I tossed and turned and couldn't settle into sleep. Thoughts of Kiersten kept me awake. I'd never fixated on a woman like this before. I just couldn't get her out of my mind. Frustrated at the prospect of another night of, at best, fitful sleep, I rolled out of bed and dressed for a walk.\n\nIt was another warm, clear night with a light breeze. The full moon was high as I made my way across the street, through the trees and onto the twelfth fairway. Usually, I walked slowly at night, trying to relax and settle my thoughts. For some reason, this night I walked briskly, my mind racing through vignettes of dinner at Angelo's, the walk back from Angelo's, her brief visit, a few hours earlier.\n\nWhen I crested the hill, I slammed on the brakes. The woman was on the green again. She was still dressed, walking across the green with her back to me. A steep slope of about thirty feet backed the green. The trees behind the slope were out-of-bounds. The woman took her blanket out of her backpack and spread it on the hill. She took something I couldn't see out of the backpack and dropped it on the blanket before dropping the backpack. \n\nI always wore dark clothes on the course at night. I liked being nearly invisible while I walked the course. It helped to avoid drawing attention if someone else was on the course. The backdrop of the trees behind me enhanced my invisibility. The woman looked up as she spun around, looking at the stars and moonlit sky. When she stopped spinning, she stripped out of her clothes and sat on the blanket. She laid back and put her hands behind her head and appeared to be just looking up at the sky. \n\nShe sat up suddenly and reached for the backpack. Something illuminated her face. Her cellphone. She fiddled with it briefly then put it away, returning to her previous position. A moment later my phone buzzed softly. The vibration sounded like a klaxon. I cringed. But a fortuitous gust carried the sound away from her. \n\nI couldn't resist my curiosity. Who might be texting me so late? I turned away and took out my phone, holding it close and cupping my hand around it. It was a text from Kiersten. I read it quickly. 'I hope I don't wake you. Thinking of you. Just wanted you to know I enjoyed our time together this weekend.'\n\nI closed my messages and put the phone away. The woman on the green had to be Kiersten. Receiving a text seconds after she used her cellphone was too much of a coincidence. I returned my attention to the reclining figure behind the green. I felt a little guilty about watching someone I knew and wanted to know better. But not guilty enough to retreat.\n\nI didn't dare try to get closer because of the way Kiersten was positioned on the green. Instead I watched from where I stood. The show was essentially the same though I got to watch it from the beginning this time. Without the benefit of sound until her first orgasm. She brought herself to orgasm four times while I watched, mesmerized by the increasing intensity of each orgasm. When she cried out for the fourth time, she rolled onto her side again and remained still.\n\nI got hard as I watched and remained hard through the entire session. I again resisted relieving myself to assure I didn't tip off my presence. I left in a hurry, well before Kiersten got dressed and packed her blanket for the walk back to her house. The first thing I did upon getting back in bed was relieve the pressure in my still hard cock. I soon fell sound asleep.\n\nKiersten and I spent the next two months getting to know each other, growing close. Our physical attraction to each also other grew. Things got heated at times. But it was limited to behaving like a high kids parking gone parking, the girl unwilling to go beyond second base. Kiersten wasn't ready to take intimacy as far as I kept hoping. I still had trouble sleeping and went for walks two or three times a week. I never saw Kiersten on the course as our relationship blossomed.\n\nOne Friday evening immediately after getting home from work, we went to an early dinner in the entertainment district. Despite having spent nearly every weekend with her, we had never gone out on Friday. Most weeknights, she had students in for lessons. I had hoped to spend the evening alone with her, but over dinner she told me she had a late commitment with her father that evening. \n\nIt was almost 8:00PM when I paid the check. Kiersten smiled at me. 'Why don't you ome with me?' she asked as we exited the restaurant.\n\nI hadn't met her father. I was surprised by the invitation. 'Are you sure?' I asked hesitantly. 'Meeting the father is a big step,' I added with a smile. \n\n'Oh, he probably won't even know you're there,' she responded.\n\nThe smile on her face suggested something was up. But what could she be up to that involved her father? And how was it he wouldn't know I was there?\n\n'Okay,' I said. 'What's going on?'\n\n'You'll see soon enough,' she laughed.\n\nKiersten had insisted on driving that day. We walked back to her car in a nearby municipal parking lot. The lot had filled completely while we ate dinner. But instead of unlocking the car, she popped the trunk and removed a battered violin case and a small satchel. I looked at her curiously. I knew she taught violin and presumed she could play. But she had never mentioned performing.\n\nWe walked several blocks, arm-in-arm to a nearby concert venue. She carried the violin. I carried the satchel. She was more excited than I'd ever seen her, practically floating as we made our way down the street. She didn't talk, just smiled at my questions.\n\nWe entered the concert hall through the performer's entrance. She escorted me into the audience and directed me to a seat in the front row. 'Sit center stage,' she told me. 'I won't be able to see you during the show. Come backstage afterwards.' She pointed to a man seated near the stage door. He waved at her. 'Roger knows to let you come back. I'll meet you back stage. I think you'll be able to figure out who I am. My father plays mandolin and acoustic guitar. He plays concertina and harmonica, too.' She turned and headed for the stage, stopping briefly to talk to Roger, giving him a hug and a high-five before disappearing.\n\nA local rock group opened the show with a forty-five-minute set. They were very good and locally popular. They played mostly covers with a couple of their own compositions mixed in. I'd seen them several times before, even made a point of going out to catch their act once or twice. They were well-received and roundly applauded when done. But they were just the warm-up. \n\nThe stage lights darkened after the opening act was done. The featured act, a Zydeco band with a national reputation, could be seen taking their places. When the lights came up, the crowd applauded enthusiastically. Kiersten was near center stage dressed in a white shirt, black pants, a fringed suede vest, and vintage, black high-top sneakers. A man with a mandolin, her father I assumed, sat to the left near a keyboard player. There were eleven musicians and vocalists on the stage. They opened with a cover of a Beatles song. I cringed initially. Zydeco Beatles? But it was so well adapted, you could almost believe Lennon and McCartney had written it just for them. Lead vocals for the opening number were handled by an African-American woman in the three-girl chorus. She had an incredible set of pipes, powerful and soulful.\n\nKiersten was already sweating by the time the first number finished. But she couldn't have looked happier. The band launched into another song but at a low sound level. The singer stepped up to the microphone and began a patter about the featured performer and how he was an innovator, expanded the range of instruments used in the Zydeco musical genre, and wove in influences from reggae, rock, and Motown Golden Age soul. When she introduced him, he entered from stage-right, wearing his accordion. He stepped to his microphone and immediately launched into his first song, the band increasing its energy level and volume to match the upbeat tempo.\n\nThe next two hours of high energy, upbeat music passed in a blink. The crowd spent all of it on their feet, many dancing in the aisles. After completing what appeared to be their last song, the star thanked the crowd for their hospitality and wished everyone a good night. The musicians set down their instruments as the lights dimmed and exited the stage. The crowd stomped their feet and cheered for more. After a couple of minutes, the star came back on stage alone and approached the microphone.\n\n'Don't all y'all want to go home?' he asked, beaming. \n\nIn a single voice that shook the building, the crowd roared, 'NO!'\n\nWearing a frown, he said, 'I'm not sure I can get the band to come out for one more song. But I'll give it a try?'\n\nThe lights dimmed, and the band returned, picked up their instruments and began playing softly to a cheer that shook the building.\n\n'All right! We're gonna do one more number for you,' he sang into the mike. 'But before we do, I want y'all to know who treated you oh sooooo right, to-night. I'm gonna skip me. Y'all already know who I am.'\n\n'On drums, Stevie Burns!. The drummer played a short solo to the cheers of the crowd. \n\nAs he went through the rest of the group, each taking a moment to show their skills, the crowd grew louder and louder. The tension and anticipation were palpable. 'And I had the pleasure of a couple of special guests tonight! On mandolin, acoustic guitar and concertina, . . . with a little harmonica, thrown in there, too! A man y'all know well from the local music scene, Paul Andreessen!'\n\nThe crowd was almost out of control as Kiersten's father stepped forward and played his mandolin while accompanying himself with his harmonica.\n\nWhen Paul stepped back, the band dropped their sound level even further. I could feel the crowd's anticipation of the last introduction. I had no idea Kiersten was so well-known and popular.'\n\n'I want y'all to show this pretty lady some big luvin! I'm going to offer her a job again tonight, but I know she'll turn me down. AGAIN! My favorite violinist, I don't dare call her a fiddle-player, she'd kick this ol' man's ass! Kiersten Andreessen!'\n\nA blue spotlight lit on Kiersten while she played a short mournful passage. The spotlight gradually turned white as she seamlessly transitioned to a bright, energetic, virtuoso minute that might have made Charlie Daniels dance in admiration. When she finished, she waved her bow and the crowd cheered louder yet. The curtains at the side of the stage were shaking.\n\nThe band played and sang their twenty-minute encore, a medley of several songs, each performer given an opportunity to show their chops. When they were done, the star stepped to the microphone and said 'Goodnight, y'all!' as the band walked off the stage, carrying their instruments. While the crowd screamed for another encore, I made my way to the stage door where Roger let me through and prevented anyone from following.\n\nIt took a few minutes to locate Kiersten in the backstage pandemonium. She had shed the vest. Her white shirt was sweat-soaked and stuck to her chest and back. But she glowed with energy. She greeted me with a smile so bright, I wished I had my sunglasses.\n\n'So, what do you think? Did you enjoy the show?' she asked before taking a drink from an ice-cold beer someone handed her after clapping her on the shoulder.\n\n'If you hadn't brought me tonight and I found out I missed this, I would never have forgiven you. Ever!' I laughed. 'You guys were great.'\n\nThe star came by just then. 'I mean it, Kiersten. I need you. You gotta come on tour with us. I won't take no for an answer,' he told her as he hugged her. 'Man, you need a shower, girl,' he laughed.\n\n'It's still no, Michael. And you know why. You don't smell so sweet, either,' she needled.\n\n'Like I need to be told this old body smells bad after a night's work. Who's this? Someone trying to steal you away from me?' he asked as he eyed me.\n\n'This is my friend, Dennis. Dennis, meet Michael Freed.'\n\nHe reached out and took my hand, shaking it vigorously. 'Nice to meet you, Dennis. You a musician?'\n\nI laughed. 'No, I'm an electrical engineer.' I hesitated. 'I thought your name was . . .' I was interrupted before I finished the question.\n\n'No, sir. That's my stage name. Kiersten, is this why you turning me down, again? My electrical guy is gonna retire soon. I'll hire Dennis right now if you'll come on tour.'\n\nKiersten laughed. 'No, Michael. You already know why I won't tour. Maybe someday. But hopefully not too soon.'\n\nMichael grinned widely. 'Can't blame a guy for playing every angle. It was nice to meet you, Dennis. Please excuse me. I gotta say goodnight to a few more people then get these ol' bones back to the hotel to shower and soak in the hot tub.'\n\n'He seems nice, Kiersten. How did you meet him?' I asked.\n\n'My father has a band that does a mix of bluegrass and Cajun music. They play regionally. I join in on Friday nights when they play nearby. Michael knew of my father and went to see him play one night a few years back. I was still in college but played with my father that night and Michael liked what he heard. Three years ago, he played here for the first time. Two days before the concert, his fiddle player broke his wrist. Even though he knew I'm a violinist, he made some calls and managed to locate me in time to get me in for some rehearsal. He doesn't know it, but I pretty much winged it that night.'\n\nMichael was still nearby. 'Who you think you're foolin', Kiersten? I know you winged it. But you were still better than Gerry ever hoped to be.'\n\nKiersten leaned in close and whispered, 'Gerry is one of the best fiddle players on the planet. I don't deserve to carry his bow. But he's getting older and touring is hard for him. And I don't play a violin when I play with Michael. I bought a fiddle and learned how to play it after I played with him the first time.'\n\nMichael came back. 'What nonsense she feedin' you? She wastin' her time with all that long-hair stuff. When I know I'm coming here, I call Kiersten. Don't want nobody else but she won't come on tour with us.' He seemed frustrated and almost annoyed when he left us again.\n\nKiersten giggled. 'I get him riled up every time he's here. But I do like playing with these guys. My father likes it, too. Michael loves my father and invited him to sit in last year. I've already said good night to my father. He's left already. Let's get out of here. I need a shower.'\n\nKiersten grabbed her violin and handed the satchel to me. As we made our way out, she tossed her keys to me. 'I'm too wired up to drive.'\n\nWhen we got to Kiersten's, she was still as wound up as a toddler on a sugar high. 'Why don't you come in. Neither of us is going anywhere, tomorrow. We can hang out for a while.'\n\nI'd been to Kiersten's. But at this time of day, she always went inside alone. I carried the satchel again while she took my arm and led me to the house. I dropped the satchel in the laundry room, per her instructions.\n\n'Grab something to drink and have a seat in the living room,' she told me. 'I'm going to take a shower. Turn on the TV, if you like.'\n\nI got a bottle of water and went into the living room. I hadn't even found the remote when I heard Kiersten call out.\n\n'Dennis! Could you help me for a minute?'\n\nI followed the sound of her voice to her bedroom. My jaw dropped when I saw her. Kiersten stood in door to the master bath. She wore not a stitch. A towel was on the floor at her feet. She held a stick in one hand and a luffa in the other.\n\n'My back scrubber broke,' she complained. After a pause she looked down. 'Oops, I seem to have lost my towel,' she smiled.\n\nI stepped toward her to retrieve the towel but couldn't look away from the vision of beauty in front of me. She perfectly fit the image I formed the first night I saw her on the green. Before I could bend to pick up the towel, Kiersten grabbed my belt and pulled me toward her. Her lips met mine in a passionate kiss.\n\n'Get out of those clothes,' she said. 'I need help washing my back.'\n\nKiersten helped me undress then pulled me into the shower stall. It was a small shower stall, making for close quarters. I didn't mind at all. She turned on the water, blasting us in cold water before it gradually warmed.\n\nWe played and teased each other as we washed. I had fun making her squirm while lathering her in suds from chin to toes. She seemed to enjoy torturing me when she repeatedly lathered my erection and scrotum. Once we were out of the shower, we dried each other as Kiersten maneuvered us to the bed.\n\nWe fell onto the bed together. My hands found her breasts and gently encircled the already erect nipples inside my thumb and index finger, my palm pressing against the outer swell of her breasts, while we kissed. As I closed the circle and captured her nipples, she moaned softly and pushed herself against my erection.\n\nI was thrilled. I would finally get an opportunity to attend to every whim and desire of this smart, beautiful, and talented woman I was falling hard for. I was going to make sure it was a night she'd neither regret, nor forget. \n\nIt didn't start well.\n\nTo my dismay, I ejaculated just from the pressure of her body against my cock. A thick stream of cum shot up her belly and between her breasts. The combination of imagination, voyeuristic memory, and thrill of the actual reality proved too much.\n\nKiersten giggled when she broke the kiss. 'I guess I paid a little too much attention to your sensitive parts,' she laughed.\n\n'What tipped you off?' I joked, relieved she didn't seem disappointed. I leaned over the side of the bed and retrieved a towel. I started to wipe the cum from her, but she protested. \n\n'Leave it,' she said softly. 'It feels good where it is.' A pause, 'We're not done yet, are we?' she asked hopefully.",
        "'Hardly,' I laughed, earning a wide smile.\n\nI pulled her to me and squeezed her tightly, getting a little sigh. I moved to the bottom of the bed, spread her legs, and sat between them. I slowly pulled her hips up my torso, kissing and licking the insides of her calves and thighs as they passed my face. She let her lower legs fall down my back, the crook of her knees resting on my shoulders, her shoulders on the bed between my legs.\n\nI alternated between kissing and nibbling gently on the skin of her upper thighs and on either side of her labia. I pulled her labia apart, exposing the moist, pink flesh between them. I touched the tip of my tongue to her clitoris, so lightly I barely felt it make contact. Kiersten drew in a sharp breath and let it out slowly. She reached for my head and entangled her fingers in my hair. She squeezed my head between her thighs when my tongue grazed her clit a second time.\n\nI slid my tongue down her clit. Kiersten gasped. Her upper body twisted and writhed when I flicked at the sensitive bundle of nerves centered in her clit. I pushed my tongue inside. When I withdrew it, a thick strand of vaginal fluid followed. I moved my tongue past her clit without touching it, stretching out the strand. It landed on her clit and bare skin just below her neatly trimmed landing strip when it broke loose from the tip of my tongue. She twitched and sighed as I used my tongue to smear the salty fluid across the top of her labia while her hands spread my cum across her abdomen.\n\nI flattened my tongue and pushed it across her clit and down the now slick, pink flesh along the slit. When my upper lip made contact again, I curled the tip of my tongue until it penetrated her again. I captured her clit under my upper lip and sucked. Her legs stiffened with a jolt and her upper body twisted sideways as she gasped and moaned. A little flood of thick, slightly salty liquid coated my tongue as she shook through her first orgasm.\n\nIt took all the strength I had to hold her hips as she tried to buck against my face. The effort undulated through her upper body. I released the pressure on her clit briefly, forced my tongue further into her and applied suction again. Another jolt stiffened her legs and squeezed my head between her thighs. The rest of the muscles in her body spasmed so fiercely, her entire torso lifted off the mattress. \n\nThe force of her reaction, combined with the weight of her body pulled my head, neck, and shoulders forward. Her face was red. The muscles in her neck strained, the tendons taut against her skin. Her mouth opened, but no sound came out at first. When her body relaxed, a high-pitched yelp announced she no longer had control of her body. Kiersten shook, twisted, and flopped against the bed.\n\n'Stop! Stop! Stop!' she cried until she had no more lung capacity. After a deep breath, 'Please, stop,' she begged softly.\n\nI relaxed my hold on her hips, allowing her to slide down my torso until she was on the bed. Her body shuddered, her legs jerked, and she bucked her hips up and down, rubbing herself against my again erect cock. We were both breathing hard, though for different reasons.\n\nKiersten sat up suddenly and pulled herself against me. Her lips found mine and her tongue pushed its way into my mouth. We kissed excitedly for a few minutes. She ground her groin against my shaft. She pulled her head back from our kiss and looked me in the eyes as her body shuddered through another orgasm, caused just by rubbing her clit against my erection.\n\nShe was still twitching when she said, 'I want you inside me now,' as she lifted her body up enough to lower herself onto my erection. We both moaned as I entered her. \n\nI savored the heat enveloping my cock and the pressure squeezing it. I held her against me as the spasms inside her massaged my length. It was my turn to gasp when she pressed down on my shoulders as she raised herself up my shaft, her eyes closed, a blissful look on her face. After a couple of trips up and down my cock, she shivered and fell back onto the bed.\n\n'Don't hold back, Dennis. Go until you can't stop yourself. Fill me with your cock. Empty yourself in me,' she whispered.\n\nMy first thought was 'I should get a condom' though I didn't immediately move to find one. She must have read my mind.\n\n'I won't get pregnant, Dennis. Now fuck me. Fuck me hard. Fuck me fast.'\n\nJust my cockhead remained inside once she fell back onto the bed. I pushed into her slowly, my eyes closed while I once again savored the heat and pressure.\n\n'Dennis? Hard and fast, Dennis,' she implored.\n\nI withdrew quickly and pushed into her hard. Kiersten grunted when I could go no further. I pulled back again and pushed in, harder this time. Her whole body jostled from the impact. Her breasts lagged her torso, bouncing up and down out of sync with my thrusts. I kept pushing in hard, gradually increasing the rate of my thrusts. Kiersten's body shook with each thrust. She timed her breaths, inhaling when I pulled back, exhaling with a grunt when I thrust my cock into her. \n\nShe implored me to go faster but I was already going as fast as I could in my sitting position. I pulled out, eliciting a protest. I rolled her over and pushed her knees up under her, pulling her hips up. Her face looking right, her shoulders resting on the mattress, she gripped the sheets to hold on to something. I got on my knees and carefully pushed back into her, delighted at the feel of the hot, wet flesh enveloping my cock again.\n\nNow that we were in a more advantageous position, my next thrust into Kiersten was more forceful, faster. She sighed when her body shook from the impact of my hips against her butt. Each time I pushed into her, Kiersten's lungs emptied with an 'Uh!' After several minutes of rapidly impaling her, she began a soft, continuous whine. As I drove into her, the sound gradually grew louder, interrupted only by her need for air.\n\nAt one point, I pulled back too far and popped out of her. When I pushed forward again, the head of my cock didn't enter her, but instead followed the groove between her labia and slid over her clit. Kiersten howled as her body shook violently. She reached under herself, desperately guided me back inside her, and began rubbing her clit. Her hips began bucking against me as my cock slid in and out rapidly. A vaginal spasm gripped my cock. Kiersten threw her head back and wailed. I watched a series of jolts cause her spine to undulate. It was almost difficult to pull back. When I tried to push back into her, it was like trying to drive my cock through a solid wall. When my cockhead finally broke through her spasm, she cried out loudly. Her legs straightened and stiffened as she fell flat onto the bed.\n\nMy cock pointing skyward, I watched Kiersten's body quiver and tremble. Periodic jerks caused her body to stiffen and relax again. If you could call the trembling relaxed. I leaned forward and softly caressed her buttocks with the fingers on both hands, moving slowly up her back, along either side of her spine. I could feel the muscles rapidly contracting and relaxing as her synapses fired mercilessly.\n\nKiersten surprised me by turning over and pulling me into a kiss, squeezing my head between her hands in a vise-like grip. She twisted and squirmed until I was on my back, then climbed on top of me. Her eyes were on fire as they held my gaze. Without a word, she took hold of my aching erection and impaled herself.\n\nKiersten took control. The next minutes were a blur as she bounced up and down, riding my erection. Her eyes were closed as her hips drove her up and down my shaft, her hands planted in the middle of my chest. I tried pushing up into her, but she never really lifted off me, though I felt her hot flesh glide up and down my cock. When she threw her head back, another undulating spasm gripped my cock. Kiersten cried out loudly, her overstimulated nervous system causing her body to flail uncontrollably as another orgasm overpowered her senses. \n\nShe finally fell forward onto my chest, still and unmoving but for the rise and fall of her back as she struggled to breathe. My cock started twitching inside her. When Kiersten drew in a deep breath, her vagina squeezed my cock and the unmistakable sensations of imminent ejaculation began in my scrotum. I pulled back and drove up into her, hard.\n\nKiersten lifted her head from my chest and held my cheeks tenderly. Her face and upper chest were red from exertion. Her hair was a tousled mess. Her eyes burned with desire. 'Do it,' she said softly as she looked into my eyes. \n\nI pulled back and slammed into her again. \n\n'Do it, Dennis. Don't think about it. Let it go.'\n\nMy cock twitched. My scrotum felt like it was about to burst into flames. I pulled out and pushed in again.\n\n'Fill my cunt with cum. I know you want to. I want it, too.'\n\nI could take no more. When I pushed into her one last time, my scrotum exploded. Pins and needles numbed my scrotum. The sensation spread rapidly, engulfing my entire body. I felt the head of my cock throb as the first ejaculate barreled up my shaft. A second throb was followed by the feel of more fluid being squirted from my cock. Several more spasms pushed yet more cum into Kiersten before every muscle in my body turned to jelly as the sensation began to fade.\n\nI could hardly breathe. It felt like I had forgotten how. My brain wasn't functional. The only thing I could perceive was the unrelenting ecstasy affecting every facet of my being and the contented exhaustion that suddenly descended on my body.\n\nKiersten pivoted off my body and curled up alongside me. She rested her head on my abdomen, facing my deflating cock. Her hand caressed my softening cock, her fingers played at spreading the mix of sticky fluids along my shaft and my scrotum. She lightly tugged on my pubic hair. The feel of her fingers was so gentle and calming, I couldn't resist drifting off to sleep.\n\nI don't know how long I slept. It couldn't have been long. Kiersten was in the same position she was in before sleep imposed its supremacy. But something was different. My cock was hard again. It felt warm and wet. I heard a slurping sound and what was happening finally worked its way into my enfeebled brain.\n\nI took a deep breath and reached down with both hands, entangling my fingers in Kiersten's silken locks, gently caressing her scalp with the tips of my fingers. Kiersten hummed with pleasure at my touch. The vibration resonated down the length of my shaft. Her tongue circled around my glans while she gently sucked on the head. Her fingernails lightly scratched my scrotum. The tickling sensation caused goosebumps to form on my forearms and thighs.\n\nI disentangled a hand from her hair and traced a line down her neck, along her spine to her coccyx. I pressed the heel of my palm against that bony knob and massaged it, still caressing her scalp. Kiersten mouth opened a bit. When she exhaled, her hot breath sent shivers up my spine. I slid my hand along the split between her buttocks, moving my fingertips through the stream dripping out of the cleft between her labia. Kiersten's hand left my cock and pressed down on the hand between her legs, flattening my palm against her mons, forcing me to stop caressing her.\n\nAn 'Mm-mm,' vibrated my cock briefly before I heard her say, 'Not now, too sensitive.'\n\nI relented. Lightly tracing a path back to her coccyx, where I resumed massaging it with the heel of my palm. I was rewarded with the vibrations of another satisfied hum.\n\nSeveral times over the next few minutes, my legs stiffened involuntarily when it felt like I might cum again. But each time, Kersten managed to prevent my release. And each time, when my orgasm retreated, she resumed her exquisite torture.\n\nBefore long, the pins and needles in my scrotum told me there would be no stopping my orgasm this time. My hips pivoted upwards, pushing my cock further into Kiersten's mouth. She gently caressed my scrotum with one hand while she stroked my shaft and sucked the head with increased vigor.\n\nMy body shook uncontrollably when the first jet barreled up my cock. The head of my cock contracted almost painfully at the first ejaculation. A second and third spasm, each more intense than the previous, sent shocks through me. I held Kiersten's head in my hands, unsure whether I should hold it in place while I thrust up into her mouth or pull her mouth off to stop the all-consuming miracle she had conjured.\n\nThe last few dribbles from my cock caused my body to jerk and twitch. Kiersten continued to suckle while my cock softened. When it was shriveled and limp, she let it slide from her lips and rolled over to face me. She drew in a deep breath through her nostrils, releasing it slowly. A lock of hair partially obscured her face. I brushed it away and caught it behind her ear while I caressed her temple. Her eyes were closed. She looked so content she appeared almost angelic.\n\nWhen she opened her eyes, she smiled up at me. I smiled back at her, though I'm sure it must have been a stupid grin because she stifled a laugh. Her lips parted slightly as she smiled again. A continuous stream of cum drooled from between her lips and followed her cheek until it pooled on my abdomen.\n\nKiersten closed her eyes again and wiggled her shoulder slightly before lying still again. Her hand rested on my chest, motionless. Slow, even respiration suggested she was either asleep or at least completely relaxed. I stopped caressing her temple and placed my hand on top of hers. I gently stroked the back of her hand.\n\n'That feels nice,' she whispered as her fingers began stroking my chest, mimicking the motions of my fingers against her hand.\n\nWe stayed like that for a while. Just when I felt myself beginning to drift off to sleep, Kiersten sat up. She leaned forward and kissed the middle of my chest then got up and headed in the direction of her bathroom. Her legs were unsteady as she crossed the room, looking over her shoulder at me with a smile. I laughed when she stopped just short of walking into the door frame.\n\nWhen she disappeared, I moved to one side of the bed and settled in to await her return. I heard the flush and then running water. When she returned, she walked directly to the side of the bed I was lying on.\n\n'Move over,' she said firmly, though she was smiling at me. 'That's my side.'\n\nI chuckled and slid sideways to make room for her. She nuzzled up against me and rested her head on my shoulder while I held her. Feeling her against me felt right. I never felt this at ease or content when I was with my ex-fianc\u00e9, though that thought remained unspoken.\n\nOnce she was settled in, Kiersten began playing with my nipple. She giggled when it hardened at her touch. I briefly wondered if she was going to try to arouse me for another round. I was hoping she'd allow me at least a little recovery time, but it turned out she was just toying with me.\n\n'I did something tonight I'd never done before,' she said. 'I don't know what came over me,' she added with a light laugh.\n\nI thought about it for a moment without saying anything. But eventually, my curiosity got the better of me. 'What was that?' I asked hesitantly.\n\n'Well, actually, three things,' she giggled.\n\nI knew she was teasing me, but there also seemed to something serious in her voice. 'Three?' I asked, curiously. I couldn't fathom what three things she was talking about.\n\n'First, I've never had sex after a performance,' she said. 'I'm always high as a kite after playing in front of an audience. But I've also always been exhausted. I don't think I ever even got myself off after a performance. Tonight, after the concert, I was still full of energy.'\n\nThis was different. None of the girls, or women, I dated had ever talked about masturbating. They had allowed me to get them off with my hands and fingers. They had used their hands to get me off. But none had ever even hinted at getting themselves off.\n\n'If tonight is any indication, I've been missing out on some great sex!'\n\nI looked down at her. She was looking up at me, grinning mischievously. 'You needn't worry. Tonight was as much about finally being with you as it was being high after the concert.'\n\n'Okay what else was a first?' I asked, wondering what other insight she'd provide.\n\n'I've never told anyone to fuck me,' she laughed. 'You're the first and only. Plus, I've never had a triple header!'\n\n'Triple header? You've never had three orgasms in one night?'\n\n'Oh, that's happened. I've done that myself. No one had ever cum on me, in my vagina, and in my mouth in one night.'\n\nI laughed nervously. 'Are you sure this is something you want to talk about?' I asked. \n\n'Dennis, I think you're that special guy I've been hoping for,' she whispered. 'Don't get all nervous and uncomfortable about making a commitment. I know we've only been seeing each other for a short time. I have a feeling about you, but I'm not going to rush or pressure you. It won't come up again until you make your own decision about me.'\n\nI was nervous about the nature of her revelations. Not because I was afraid of what she had said. But because I felt the same way. Even though I believed it was too soon for either of us to make such a commitment to each other. \n\nKiersten soon fell asleep against alongside me. My mind raced most of the night. Though I couldn't sleep, I wasn't about to get up and go for one of my insomniac's constitutionals. The last thing I wanted was for Kiersten to wake up and fear I was some asshole that surreptitiously slipped away after worming my way into her bed.\n\nAfter breakfast in the morning, I went home. Kiersten had a couple of students coming in after lunch. I had shopping to do, bills to pay, and laundry waiting for me. Stephanie was tending her roses when I walked up the driveway. The look she gave me would curdle milk. \n\n'Good morning, Dennis,' she said icily. She knew I was wearing the same clothes I was wearing when she talked to us briefly when Kiersten picked me up.\n\n'Good morning, Stephanie,' I responded with a smile. 'Did you go to see Kiersten play last night?'\n\n'I did. She was great. The rest of the band was pretty good, too.' Her tone had changed. It was neutral, less icy. 'Did you meet her father?' she asked. 'I saw you went backstage after the concert.' \n\n'I didn't get the chance. It was crazy back there. We only stayed a few minutes and Kiersten said her father had already left by the time I found her. Kiersten wanted to get home to shower and change,' I told her.\n\n'I see,' she said, her tone cold again. 'Paul and I had drinks after the concert. He said he hadn't met you.'\n\n'Stephanie, are you worried about Kiersten and me?' I asked pointedly.\n\n'Yes, I guess I am,' she sighed.\n\n'Don't be. I'm a good guy. I'm not going to treat her badly or take advantage of her. I like her too much to do that. I can't promise she won't get hurt but it won't be because I've mistreated her. And she's a big girl. She's smart and she knows what she's doing.'\n\nStephanie sighed. 'I'm sorry, Dennis. I worry about her. It's just that her mother is gone. There are times when a daughter needs her mother.'\n\n'We good?' I asked.\n\n'I suppose. But that doesn't mean I won't keep an eye on you,' she smiled half-heartedly.\n\n'I can live with that. My mother isn't here. Someone should keep me in line,' I said, trying to lighten the mood.\n\nStephanie laughed and shook her head. 'Go take a shower,' she said. 'You smell like Kiersten's perfume.'\n\nKiersten and I continued to see each other, growing much closer as the weeks passed. Eventually, she made room in a drawer for me to keep a few changes of clothes at her house. She never agreed to stay the night at my place. I think she didn't want any awkwardness between her and Stephanie. After I asked her to marry me, we talked about living together. But she wanted to wait until after the wedding.",
        "I was sleeping better but still had an occasional night of insomnia. When I did, I still went out for a walk on the golf course, though instead of a couple of times a week, bad nights only happened about once a month.\n\nI returned from a business trip a couple months before the wedding. I called Kiersten as soon as I got off the plane, but it was after 10:00PM. The call went straight to voicemail. I figured she was asleep. I left a message to let her know I was home.\n\nI couldn't get to sleep that night. Fortunately, because my boss knew it would be late when I got home, I wasn't expected to come in until mid-morning. I took my usual route along the tree line up the twelfth fairway. I stopped at the top of the hill and looked over at the green. No one was there. I hadn't seen Kiersten on the green since the night she texted me. I continued my usual route around the pond before turning back home.\n\nI was just about to cut through the trees when I heard a voice. I about jumped out of my shoes.\n\n'Did you stalk me, Dennis?' It was Kiersten. And she made it painfully obvious she was angry when she punched me in the chest, just below my left collar bone. The force of the blow caused me to stagger back. I was surprised at how much it hurt. I knew immediately there would be a bruise there in the morning.\n\n'Absolutely not!' I responded. 'Why would you think that?' Kiersten knew about my occasional insomnia and night walks, but we never discussed where I went.\n\n'I saw you come onto the course up ahead of me tonight. I was about to catch up when you stopped at the top of the hill and looked over at the green. How many times did you watch me?' she asked. \n\n'Twice,' I answered truthfully, without hesitating. I felt awful. I knew the wedding was off.\n\n'That day you were parked in front of my house? What was that all about?'\n\nI somehow kept my emotions in check. 'I told you the truth that day you stopped in my driveway. It was coincidence. My mother called. I just stopped to talk to her. I didn't know who was on the green. Until the second time I saw you there.'\n\n'How close to me were you that night? How did you know it was me?'\n\n'I was in front of the trees at the top of the hill. I had no idea it was you. You used your cell phone. A moment later, I got a text from you. It said you hoped you didn't wake me and that you were thinking about me.' \n\nKiersten sighed deeply. 'Don't you think watching me was a little creepy?'\n\n'I do. Once we started seeing each other, I felt pretty bad about it. But it was kind of exciting, too. I'd never seen a woman masturbate. And didn't you think there was a chance someone might see you?'\n\nKiersten wasn't about to go on the defensive. 'Did you an erection? Did you jerk off while you watched me?' she asked, testily.\n\n'I got hard. But no, I didn't jerk off while I watched you. I just couldn't bring myself to do it. I didn't want you to know I was there. The last thing I wanted to do was frighten you.'\n\nKiersten had remained in the shadows while she interrogated me. When she turned away, I knew I'd never see her again. She made some noise as I watched the outline of her body move away. To my surprise, she stopped and bent over. When she stood, she turned and came back toward me. She was carrying her backpack. She took my hand and held it as she led me back up the fairway to the top of the hill.\n\n'Stay here for now she told me. If you want to move closer after I'm situated, that's fine. But stay here for now.' She gave me a quick kiss before turning away. She looked back over her shoulder as she headed toward the green. 'There must be something wrong with me. I'm so fucking hot right now I can't stand it.' When she was about thirty feet away, she stopped. 'You can jerk off this time if you like.'\n\nI watched as she strutted to the green. She spread out the blanket and stripped out of her clothes. Once again, she held her arms out and looked up at the sky as she turned around several times. Then she settled onto the blanket and began to pleasure herself.\n\nI got hard as soon as she made her intentions clear. I quietly made my way closer, eventually making my way to the position where she had almost walked into me the first night. I slowly pulled down my zipper and took my cock out. It hurt when I bent it trying to get it out. \n\nI slowly stroked myself while I watched. I tried to go slow and control my breathing. I didn't want her to know just how close I was just yet. When Kiersten turned the vibrator on, I almost ejaculated. As I struggled to maintain control, I briefly lost my balance. In regaining it, I stepped on a twig. I froze when I heard it snap. \n\nKiersten raised her head and looked in my general direction but not directly at my position. But she never stopped moving the vibrator in and out of herself. Once she put her head down, she moved her hand faster. In the pale moonlight, her hand was no more than an illusion of movement as she rapidly drove the vibrator in and out. A few seconds after she put her head back down, she cried out at her first orgasm.\n\nAs Kiersten continued using the vibrator, her cries grew louder. Her first orgasm just the beginning. Her hips bucked. Her torso twisted and writhed. She pushed the vibrator in and her hips shot up in the air, her body forming an arch from shoulders to feet. Her hips raised and lowered several times, but her butt never touched down until she collapsed onto her back. Her hands fell to her sides. I watched the vibrator slowly slide out of her onto the blanket.\n\nI'd stopped stroking when the twig snapped but I still held my erection tightly. When Kiersten began bucking her hips in the arch, my cock shot a stream of cum out of sight in the dim light. A second stream of ejaculate escaped when Kiersten fell back onto the blanket. I choked back a grunt when the third emission dribbled out the end of my cock.\n\nI stumbled. My foot replanting itself when I regained my balance was so loud, a pile driver might have been quieter. Kiersten began giggling uncontrollably. She raised an arm and motioned with her hand for me to join her. I sat next to her on the blanket, grinning foolishly while she fought to contain her amusement. When she finally stopped laughing, she raised her shoulders, resting on her elbows.\n\n'I always got off wondering, almost hoping, someone was watching. But knowing someone was watching, tonight? That was intense.'\n\n'Weren't you ever worried about someone coming along and accosting you?' I asked.\n\n'A little. But I never once saw or heard anyone out here. In fact, I never suspected anyone had ever watched me until I saw you tonight.'\n\n'I'm sorry. Maybe I should have said something, but how would I ever have brought it up? I didn't want to embarrass you. I don't want to lose you.'\n\n'You truly didn't stalk me? Because that would be really creepy, Dennis. I'm not sure I could ever trust you again if you did.' Kiersten's mirth was gone for the moment.\n\n'I've been truthful. I saw you only twice. The day I was parked in front of your house, I had stopped to answer a call from my mother. I figured out it was you on the green the night you texted me.'\n\nKiersten looked thoughtful for a moment. 'How often do you walk the course at night?' she asked.\n\n'When I first started, a couple times a week. I had a lot of sleepless nights when I first moved here. Lately, it has only been once, maybe twice a month.'\n\nShe smiled. 'But you looked for me when you walked here.'\n\n'Every single time. I felt odd about it. But I couldn't help but hope I'd get to see you.' \n\n'Okay, enough talk, for now.' Kiersten giggled again. 'I want the real thing. Fuck me before I have to do myself again.' \n\nWe watched the first signs of dawn as we made our way back. I walked Kiersten to her house, kissed her, and waited for her to go inside. She only took a couple of steps before she stopped and turned back to me.\n\n'Are you going to work this morning?' she asked.\n\n'I'm not expected until mid-morning. But I think I'm going to call and tell my boss I want to take the day. Before I left, he suggested I take today off.'\n\nKiersten held her hand out. 'I think I'll do the same. Come in, sleep here.'\n\nMy smile must have been gleeful.\n\n'You're bad,' Kiersten laughed. 'We spent the whole night together and your first thought when I suggest you come in is more sex?' She shook her head. 'I don't know about you, but I'm going to get some sleep.'\n\n'Good. I don't think I could get it up again for quite a while,' I whispered as I followed her inside.\n\nWe both made a quick call to our respective bosses and then went to Kiersten's bedroom. We stripped out of our clothes and got into bed. I pulled the sheet and blanket over us and kissed Kiersten before settling in to get some sleep. 'When we get up, we should talk more about my trips to the green,' she said softly, still facing me. 'I've got some ideas I think you'll like.' As she rolled over to go to sleep, she added, 'You need to meet my friend, Erin.'\n\nI stared at the opposite wall for several hours, wondering what I might be getting into. "
    ],
    "authorname": "carrteun",
    "tags": [
        "exhibitionism",
        "voyeurism",
        "masturbation",
        "toy",
        "intercourse",
        "romance",
        "romantic"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-woman-on-the-twelfth-green"
}