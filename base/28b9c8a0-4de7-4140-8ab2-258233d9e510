{
    "title": "The Soprano Ch. 08",
    "pages": [
        "Note: Again what has been proven is the infinite patience of my readers. Gratitude for your kind thoughts! \n\n----------\n\nIt was late afternoon and Claire was sitting in the front row of the symphony hall, watching Sebastien put the orchestra through its paces with Stravinsky. Her sketchbook was balanced on her knee, but she hadn't drawn so much as one line. She was worried. It wasn't just his demeanor tonight -- he seemed to be in a pretty foul mood and was snapping at his musicians more than usual -- but also the way he had been for the past week or so.\n\nEver since the night of the costume party, when Claire had felt a separation between them most acutely, she had been noticing it more and more. They spent time together, but it was as if Sebastien was distracted somehow.\n\nClaire had been trying to brush it off, but today watching him berate the string sections until the first cellist was nearly in tears, she decided that enough was enough. He would tell her what was going on, or she wasn't going to leave him alone. She so rarely pressed him on how he was feeling, she thought she should get a free pass just this once.\n\n\"Again, again!\" he cried. \"Let us take it from three after B. Three after B, please, and the cellos need to play out. I cannot hear you over the horns.\" They began again, but had only gone a few bars before he was shaking his head and waving his arm for silence. Whipping around to face a rather startled Claire, he asked, \"How does it sound to you? They still need to play out more, no?\"\n\nShe bit her lip. Truth be told, she hadn't been listening all that carefully and she suspected Sebastien was nitpicking. She heard the cellos, though it might have been that the balance wasn't exactly perfect. Still, looking up at the first cellist's distraught face, she knew it wasn't the time to encourage his perfectionist tendencies.\n\n\"It sounds fine to me, Maestro,\" she said lightly, trying to tell him with her eyes that he should let it go. He twisted his face up in irritation and she shrugged. \"Besides, you've only got them for another fifteen minutes and you should probably run through the last movement.\" He glared down at her, and she frowned back.\n\n\"This is my orchestra and I will keep them here all night if I must in order for them to get it right.\" She knew she should let it go, but...\n\n\"No, you won't. You can't, and you won't, so you should make use of the time you have.\"\n\nIf she'd thought he was glaring before, it was nothing compared to the look he gave her now. She could see he wanted to argue, that he very much did not want to be bested in a contest of wills in front of the orchestra. At the same time she knew he was well aware that she was right, which left him unable to do anything but give in.\n\nThey stared at each other for a long moment, and now Claire was getting annoyed. She'd have been willing to look away first, but she could hardly give him a nice, submissive look with the entire symphony watching. And they were, of course watching. Waiting.\n\nSebastien finally composed his face into his usual non-expression, but his eyes stayed on hers as if he were trying to tell her something. She held his gaze for another moment before shrugging one shoulder and dropping her eyes back to her blank paper. Sebastien turned back around and, to the surprise of the musicians, flipped forward in his score.\n\n\"Last movement, please. We will start from the top.\" When some of the musicians were slow in getting there, their glances still lingering on Claire, he made no more than a token protest. Claire was relieved, but watched him with concern. He had a defeated air about him now, never a good sign. And they both knew what the orchestra was thinking. The lamb had tamed the lion.\n\nHah. If only they knew.\n\nEven Sebastien's conducting seemed subdued now, as if he were contrite, even regretful of his snappishness. He let a few minor errors go by entirely without comment. When the orchestra got off by a beat, Claire thought he wasn't going to do anything at first. Three bars later he dropped his arms, shook his head briefly, and waited for them to lumber to a halt before raising his arms again resignedly.\n\n\"Once more, please, from four after letter F. Four after F.\" He conducted, but it seemed he was somewhere else, perhaps listening to music none of them could hear. At last feeling he would make no further progress with them that night, he dismissed them early. They shuffled out of the auditorium, looking a little confused, but Claire didn't move until they were all gone.\n\nSebastien stood alone on stage looking a bit forlorn in the dim stage lights. He wandered off to the side of the stage, straightening a row of chairs absently as Claire mounted the steps. He didn't turn when she touched his arm.\n\n\"Maestro, are you feeling all right?\"\n\n\"Of course.\"\n\n\"It's just that you don't seem quite yourself today.\"\n\n\"Everything is fine.\"\n\n\"I think we both know that's not true. Why won't you talk to me?\"\n\n\"As I have already said, everything is fine!\" he snapped, turning to face her so suddenly that she took a step back in surprise.\n\n\"I don't understand why you're so upset.\"\n\n\"Oh, really? Perhaps you recall arguing with me in front of all my musicians tonight,\" he said, stalking toward her menacingly. She moved back away from him until she suddenly met the wall behind her.\n\n\"Th-that's not what I meant, and you know it,\" she stammered, trying to keep her voice steady.\n\n\"Oh?\" His voice was low and dangerous, and altogether too steady.\n\n\"You've been acting strangely all afternoon. I want to know what the matter is.\"\n\n\"There is nothing,\" he said in a soft, angry voice.\n\n\"There is!\" she insisted, just as angrily now. \"I know you're hiding something from me, and I want to know what it is.\" Sebastien jerked back in surprise, a flash of something that might have been guilt crossing his face briefly.\n\n\"If you keep harassing me about this, I swear I will --\"\n\n\"Will what?\" she challenged, interrupting him.\n\n\"I will make you very sorry,\" he replied, leaning over again and moving his face inches away from hers heatedly. Claire felt twin spikes of terror and arousal tear through her, and her heart sped up. Her chest was heaving with the emotions flooding through her, and it did not escape her notice when Sebastien's eyes strayed downward for a lingering moment before making heated eye contact with her again. Things were getting intense, quickly.\n\nJust then, they heard the scrape of soft-soled shoes on the stage. Turning as one from the humming energy between them, they saw a little slip of a girl -- one of the youngest in the orchestra, a flautist named Shelby.\n\n\"Get out,\" growled Sebastien, and Claire had the curious experience of watching someone else turn red and quiver under his stare.\n\n\"Ohhh,\" sighed the new arrival in obvious embarrassment, \"but I, um, I left my, um...\" She trailed off before finishing her thought under Sebastien's withering glare.\n\n\"Get it, and then get out,\" he said bitingly. Shelby scurried over to her music stand and grabbed a little case from underneath it. She turned to leave, but before she walked away she cast a glance over her shoulder. Making wide-eyed eye contact with Claire, she inclined her head slightly. Claire could do nothing but swallow nervously and blink back at her. Apparently deciding there was nothing further she could do, Shelby turned frightened eyes back to Sebastien and then fled for the safety of backstage.\n\nWhen her clattering footsteps had died away, Claire and Sebastien turned back to each other. The tension had not dissipated; if anything, the brief interruption had increased it. Claire's stomach twisted and she could not quite suppress a shudder from the strain of his hot glare. She wasn't sure what Sebastien was going to do.\n\nHe reached out to grip her upper arms tightly and press them into the wall behind her. She made a soft pained noise and he crushed her against the wall, digging his fingertips in and kissing her in a fierce, almost painful way. Claire tried in vain to move away from the wall, but he held her firmly, taking what he wanted from her. She whimpered into his mouth and he drew back to bite her lip. Her body was on fire, her blood heating with every passing second.\n\n\"God, please!\" she gasped.\n\n\"What?\" he demanded, before stealing her breath with another kiss. She could feel him, hard and hot, against her hip. Somehow, over the blood rushing through their ears, they heard footsteps again. Sebastien stilled immediately, pressing his face into the side of Claire's neck as if he could hide from whatever was about to enter the room.\n\n\"They're probably not even here anymore, but you should have seen them. He had her up against the wall and they were just glaring at each other like you wouldn't believe when I came in.\" Shelby, sounding like she was trying to keep her voice down.\n\n\"What do you think they were fighting about?\" Holly. Great, thought Claire.\n\n\"That's just it. I'm not sure they were fighting. I mean, they both looked pretty mad, but there was just something about it that seemed...\" Their footsteps stopped as she considered her words.\n\n\"Seemed what?\" A third woman, probably Violet, Shelby's friend. She also played flute.\n\n\"I don't know, different from when he looked at me. If they hadn't been glaring, I would have said it looked like he was...was, well, about to kiss her.\"\n\n\"Kiss her?\" echoed Holly incredulously, apparently forgetting all pretense of being quiet. The women started to laugh, but softly, as though they weren't sure it was really so ridiculous.\n\n\"Look, he was either supremely pissed or he was thinking of doing something extremely dirty to her.\"\n\nClaire let out a kind of choked laugh as Sebastien shook his head grimly beside her. If she hadn't known better, she'd have thought he was actually embarrassed that his thoughts had shown so plainly on his face. Obviously, he had been both supremely pissed and thinking of extremely dirty things to do to her.\n\n\"Did you hear that? Maybe they are still in there!\" said Violet in a hushed tone. Claire looked meaningfully at Sebastien, who gave her a pained look as he ground his still-hard cock into her firmly. She rolled her eyes, but the footsteps had begun again. He frowned down at her and took a step back, still looking pretty annoyed.\n\n\"And that,\" he said as the musicians entered the room, \"is what will happen to you if you cannot refrain from criticizing me in rehearsal. When I want your opinion, I shall ask you for it, and otherwise I expect you to stay out of my job.\" The thing about it was, he probably meant it. A flood of renewed anger ran through Claire and she stepped away from the wall, annoyed.\n\n\"Don't threaten me, Maestro. I will always tell you when I think you're making a big enough mistake to fuck up your rehearsal.\" Sebastien started, obviously surprised she was arguing rather than acting the part of a chastened employee.\n\n\"I shall threaten as I please, because believe me when I say I will follow through if you cannot respect me.\" Neither of them remembered that he hadn't even threatened her with anything.\n\n\"I respect you,\" she responded hotly. \"It's you that doesn't respect me enough to tell me the truth.\" She flinched inwardly. She hadn't meant to say that in front of the others, who were exchanging confused glances now. Evidently they were not so afraid of their conductor that they wouldn't risk his wrath for a little workplace gossip.\n\n\"I -- of course I respect you,\" he faltered. \"More than...I...well...but there is a time and place for some conversations, and now...now...\" He paused, looking a little lost.\n\nThen Violet sneezed. Sebastien turned, his irritation reminding him that they were supposed to be putting on a show, not discussing their relationship. It had gotten way too personal.\n\n\"You again,\" he said, addressing Shelby. \"Apparently I cannot even discipline my soprano without prying ears and eyes. Very well, Claire, we will continue this discussion in private. Come.\"\n\n\"I don't have to just do everything you say,\" she protested, and he closed his eyes briefly.\n\n\"You do, or you do not have to return to my symphony hall,\" he said coldly.\n\nThat stung. Claire sensed they were way past playing, and her eyes immediately filled with tears. She was frozen, knowing there was nothing she could do. She wanted to go with pride and leave, but then what would his threat mean when she returned next rehearsal? Maybe she no longer cared. She wasn't his slave -- certainly not here, and he had no right to treat her like one, especially when she hadn't even done anything wrong.\n\n\"Fine,\" she said, setting her jaw and stalking to the side of the stage to grab her bag and sketchbook. \"I'll get my things,\" she said pointedly, letting Sebastien draw his own conclusions as to whether she meant the things she kept at his apartment. For a long moment she heard nothing but her own heartbeat. Sebastien looked at her, clearly upset. Neither of them knew what to say. Things had escalated so quickly. Their salvation came from an unlikely source.\n\n\"I'm so sorry, Maestro, Claire,\" mumbled Shelby, clearly dying of embarrassment.\n\n\"This is none of our business,\" muttered Violet in agreement. Holly could only stare, red-faced and speechless. They backed out of the room and wandered down the hallway, whispering furiously. Claire and Sebastien were alone again. Neither seemed sure what to say or do. Through a haze of unshed tears, Claire could see Sebastien was as upset as she.\n\n\"Would you really leave?\" he finally asked, his voice cracking slightly with tension.\n\n\"I'm tired of this argument,\" she said softly. \"If you can't talk to me, and you want to insist your word is law under this roof, if you really believe you can command me like that...yes, I'd leave.\"\n\n\"Some things are better left unknown.\"\n\n\"Not when they affect you like this, I can't believe that.\"\n\n\"I need you to trust --\"\n\n\"No, I need you to trust me,\" she snapped. Sebastien shook his head in frustration.\n\n\"It is not about trust.\"\n\n\"But you said --\"\n\n\"Claire!\" he said loudly, startling her into silence. \"I do not want to have this conversation here. Others are about.\"\n\n\"I don't care what you want anymore,\" she heard herself say, surprising them both.\n\n\"Is that so?\" he asked, firming his jaw in annoyance.\n\n\"Yeah, that's so,\" she said, glaring up at him and trying to ignore the fact that she was still, inexplicably, turned on. She was baiting him and she knew it. From the look on his face, he knew it, too. He took a deep breath, trying to decide what to do. Finally he stalked away behind her, flinging aside the curtain and going backstage. Claire just looked after him, confused.\n\nAfter a second, he re-emerged and beckoned to her. Hesitantly she approached, until he reached out to grab her wrist and jerk her behind the curtain with him. It was backstage and technically connected with the rest of the symphony hall via a narrow hallway behind the stage, but no one went back there unless they needed to get one of the large instruments they stored in the alcove. It was darker the further Sebastien pulled her, and when he finally stopped, she could no longer see him clearly.\n\n\"Mon abeille,\" he said softly, the endearment catching her off guard, \"I repeat, I do respect you. You are an amazing and dedicated singer, passionate and caring in and out of bed, intelligent and adorable -- if impulsive and as quick to anger as I. You are the most incredible woman I have been with, and I mean that in every way you care to take it.\n\n\"I wish...I wish very much to have complete honesty with you, if you could but trust me a while longer. I very much regret some of my words to you today, but I am hurt that you think I could mean all of those things. You know I command you only as much as is pleasing to us both.\" He paused for a moment to let her think about what he had said so far.\n\nShe had misgivings, as he had nearly -- but not quite -- admitted he was in fact hiding something. But she did trust him, and more than that she was beginning to wonder if she really wanted to know.\n\n\"Claire, I do not want you to leave. If you did, I truly do not know what I would do. You mean so much to me, and I thought we had something special enough to be worth any trouble.\" At this, Claire burst into tears, throwing her arms around him.\n\n\"Maestro...Sebastien, I don't want to leave. Never, never want to,\" she sobbed into his chest. He wrapped his arms around her, holding her until her crying stopped. Stroking her hair, he made soothing noises over her head. He still felt tense, she thought.\n\n\"I think we must...I need to say...\" He stopped, frustrated, and then began again. \"About correcting me in rehearsals...\" Claire couldn't believe it. He was really going to bring this up?\n\n\"Are you serious?\" she protested, backing away from him abruptly. \"You were completely out of control tonight.\"\n\n\"I?\" he asked incredulously. \"It was you who was out of place.\"\n\n\"It was not! You were making Celeste so upset, and she didn't deserve that at all. Especially not because you've got some private problem that you're letting spill all over rehearsal. You never let personal stuff get in the way of work.\"\n\nThat must have cut too close to the truth as he saw it, because Sebastien drew himself up arrogantly and said, \"How I conduct my orchestra is certainly no concern of yours.\"\n\n\"Like Hell it's not!\" she said, her vehemence startling him a bit. \"I have to work here, too, and unlike you I care about the feelings of the musicians in the orchestra. You know, you might get a better sound out of them if you were nicer to them\"\n\n\"Oh?\" he said icily, and Claire knew she had overstepped. \"You think there is a deficiency in the way my orchestra performs?\"\n\n\"N-no, not exactly,\" she said uncertainly.\n\n\"Then kindly mind your own fucking business.\"\n\n\"I will not,\" she said, insulted.\n\n\"I say you will,\" he replied, deadly calm.\n\n\"Or what?\" They were glaring at each other again in the barely lit alcove. Claire's heart was speeding up again. The back and forth was getting exhausting, but her adrenaline was going again.\n\n\"Thank God,\" Sebastien muttered, confusing Claire until she found herself pinned between him and the covered piano behind her. The dusty smell of the space clouded her mind and she yielded to his intense kisses. She moaned softly as all the feelings she'd had pent up all afternoon exploded suddenly. Desire shivered across her skin.\n\n\"Tu me rends fou. Vous m'avez enchant\u00e9 et je ne sera jamais libre. Je ne veux jamas \u00eatre libre, car c'est moi qui suis esclave par vous,\" he murmured into her hear. Claire only understood half of the words, but it was enough. Tears slipped from the corners of her eyes even as his kisses enflamed her. He would take her here, where anyone could find them, and she would let him, like she always did. Like she always would. Emotion welled up in her and then words were tumbling incoherently out of her mouth.\n\n\"Anything I have, everything I am, is yours to take. Tell me please I can always be here, at your service.\" Sebastien drew back for a moment in astonishment at her words, and then enfolded her tenderly into his arms.\n\n\"Just when I was ready to ravage you, you say something sweet, darling, and I just want to make love to you.\"\n\nClaire looked up at him with a little smile and asked, \"Should I make you mad again?\" Sebastien smiled then, too, as much in relief as in amusement.\n\n\"I would rather you did not,\" he said.\n\n\"It's just that...of course I adore making love, but right now, I'd, um...I'd kind of rather...the other thing.\"\n\n\"Would you now?\"\n\n\"Yes, sir.\"\n\n\"As my lady commands,\" he said with an ironic smile before gripping her waist and pulling her into him, grinding himself against her. She wondered if they could possibly stop now if they wanted to.",
        "Sebastien had backed her into the wall of the alcove now and was nipping savagely at her neck when they suddenly became aware they weren't alone. The tinny sound of rock music piped through headphones was just discernible, which meant that whoever was there was either going deaf or had incredibly cheap headphones. Sebastien flicked up his eyes with such frustration that Claire thought he must have looked like a hungry vampire interrupted with his victim, the way his teeth were still sunk into her neck.\n\nHe bit down harder and she whimpered. Sebastien actually growled low in his throat and grabbed her again, pulling her farther to the back where they could no longer be discovered by anyone skulking around the stage -- as unlikely as that was.\n\n\"Of all days...\" he was muttering in French. Claire tried to suppress a smile, but didn't quite succeed. \"Think it is funny, do you?\" he asked, seeing her in the dim light of the single window they passed. She looked at him with wide eyes and shook her head, but he just snarled in her direction. He stalked off into the far corner and pushed her into the wall, unzipping his pants and reaching for the hem of her skirt. Claire pulled away, giving her usual token protest.\n\n\"Give me what I want without complaint or I shall drag you over to the window...or perhaps invite whoever is out on stage to watch.\" She knew it was an empty threat, but on the other hand...She turned back to him, flattening her back to the wall and looking up at him meekly.\n\n\"Much better,\" he murmured, lifting her skirt and smiling with appreciation at the sight of her pink lace panties. These he gave a little pat, making her squirm, before yanking them down to the floor. He lifted her hips and thrust into her, drawing a soft cry from her lips before she could stop herself. She wrapped her legs around his waist as his hand clamped down firmly on her mouth.\n\nLeaning into her until their upper bodies were pressed together, he began pounding into her mercilessly. The eye contact was intense and incredible, though it made Claire suddenly shy. Her cheeks pinked as her body vaulted up to orgasm between Sebastien and the wall. Her feet flexed from the sensations and her body twitched as much as it could. Sebastien groaned at the feeling of her pulsating around him, and let himself go, spilling into her as he held his breath.\n\nThey were both winded and weak-kneed when he let her down to the floor. Claire held out her hand for her panties, but Sebastien just smiled and stuck them in his pocket.\n\n\"Come on, I need those!\" she protested.\n\n\"You can manage without them,\" he said.\n\n\"I can not! You should understand.\"\n\n\"I have no idea what you might mean.\"\n\n\"Fine, then we're not doing this again,\" she grumbled.\n\n\"Sex as a weapon, mon abeille? I had thought better of you than that.\"\n\n\"Yeah, well, that goes double for you, withholding clothing from a woman in need.\"\n\nSebastien smiled and handed them over. Claire smiled back, but it didn't reach her heart. Inside, she knew there was something very wrong, but she couldn't know what.\n\n-----\n\nThe restaurant was a bit darker than Claire had expected for so early in the evening, though the candles flickering away on the tables provided a bit of warmth. She sipped her champagne cocktail and waited. Before long she saw the handsome blonde moving through the crowd toward her, and he sat across from her with a glass of beer he'd brought from the bar.\n\n\"I suppose you should be getting on to rehearsal soon,\" he said.\n\n\"I have a little while,\" she replied with a shrug. \"Sebastien called another closed rehearsal session before our rehearsal starts. I don't understand what's going on -- seems like almost everyone is there except for me. Do you know what's going on?\"\n\n\"Even if I did, you know I could not say.\" He shook his head, looking irritated.\n\n\"I know, I'm sorry. It's just that...I guess I feel like he must be keeping something from me, and I'm not sure what to do about it. He's acting funny.\"\n\n\"I do not know what to tell you.\"\n\n\"I just thought maybe you'd give me a little hint.\" Ren\u00e9 frowned, wishing he could at least promise that Sebastien was keeping nothing from her that would hurt her. But the truth was very different, and in fact Sebastien had not even mentioned to him what the closed rehearsals were for. It would have irked him, but he had told Sebastien he was tired of keeping secrets.\n\n\"Whatever are you going to do with yourself when he is away next week?\" he asked, changing the subject.\n\n\"I'm a big girl. I can take care of myself.\"\n\n\"I am sure that you can.\"\n\nClaire had no sooner left the caf\u00e9 than her phone rang. She glanced at the screen and saw that it was Sebastien's younger sister Justine, with whom she had struck up a friendship over the past few months.\n\n\"Justine, hello!\"\n\n\"Good day, Clarabelle. Tell me, when are you coming back for a visit?\"\n\n\"Our season ends next month, so hopefully soon.\"\n\n\"Good, yes. You can come by yourself, no?\"\n\n\"Why would I do that?\"\n\n\"Basi is so serious! We should have some fun. Ah well, bring the old stick in the mud and he can come play uncle while Sarah comes out with us.\"\n\n\"He's really good with the kids, isn't he?\"\n\n\"What is this I hear? Are you thinking of family things?\"\n\n\"Hardly. I'm too young to be starting a family.\"\n\n\"Not so very young,\" Justine said thoughtfully. \"But what about marriage? Surely you have thought about that.\"\n\n\"Once or twice. It's only natural,\" Claire replied slowly. Friends or not, perhaps Justine didn't need to know just how often her thoughts strayed that way.\n\n\"Of course. I think he's going to ask you.\"\n\n\"What?! Did he say something to you?\"\n\n\"Certainly not! After all the teasing we give him, I believe we will be lucky to get invited to his wedding at all. I just have a feeling.\"\n\n\"I don't know. Things seem pretty smooth as is. I don't know if either of us wants to, you know, rock the boat.\"\n\n\"Claire, are you saying you would not marry my brother if he asked?\" Justine didn't sound affronted, just curious. Claire was silent for a long moment, pausing to lean up against a tree trunk as she thought about it.\n\n\"I...no, I'm not saying that,\" she said at last. \"I think...no, I know. I would marry him if he asked.\"\n\n\"Ah, I knew you would say so! I am telling you, he will definitely ask you before the end of the year. Sarah says so, too. We are sisters, so we know these things,\" she said with a laugh.\n\n\"I really don't know. He hasn't even hinted...\" He had been acting strangely, but Claire didn't want to mention it to Justine. No need to worry -- or excite -- her unnecessarily.\n\n\"Of course not, Clarabelle. He always has held everything close to the chest. But believe me, we all agree he has not been this happy for a long time. We only tease him because we do not want him to let go of the good thing he has.\"\n\n\"I'm not going anywhere. Even if he never asks me to marry him, Justine. I love him.\"\n\n\"That is so sweet! Well, Clarabelle, please do give me a call when you decide to come. I will pick you up at the airport and I can give my darling brother a good tease on the way home!\"\n\n-----\n\n\"I must go up and do some work before rehearsal,\" Sebastien said, glancing down at Claire, who was curled up on the parlor sofa. \"Do you mind staying down here until I finish?\"\n\n\"Fine,\" she replied. \"I should spend a little more time going over my score, anyway.\" Sebastien nodded, giving her a peck on the cheek, and headed upstairs. Claire watched him go, then settled down at the piano bench. She flipped through her score, playing short sequences on the piano and humming along.\n\nA soft ringing sound nearby interrupted her momentarily, but she tried to ignore it. It was Sebastien's phone, and she knew he wasn't going to answer it while he was upstairs working. After another few rings Claire gave up trying to ignore it, instead waiting for the answering machine to click on so whoever was calling could leave their message and then go away. She heard Sebastien's terse message, the beep of the machine, and then a brief silence before a man's voice begun speaking.\n\n\"Maestro Boulet, this is Leonard calling to touch base about next week. As you know, it will give you a much better opportunity to see how you work with our orchestra than your brief visit earlier this year. Because each candidate will be here for such a short period of time, the schedule will be quite intensive. I will send a car to the airport for you, and a copy of the schedule should already be in your inbox. See you next week.\"\n\nThe man's voice stopped, along with Claire's heart. She felt weak all over. Did this mean what it sounded like? Well, of course. What else could it mean? Sebastien was hoping to become the conductor of another symphony. It explained a lot. But...he'd never mentioned...\n\nA door shut upstairs and Sebastien's footsteps drew closer. He was wearing only black slacks, errant beads of water sliding down his pale chest as he towel-dried his hair. Apparently he had also showered while he was upstairs. Even upset as she was, her eyes slid over his exposed skin hungrily. Sebastien's brows furrowed as he drew nearer to her.\n\n\"Mon abeille, is anything the matter?\" Claire stood wordlessly, took a few steps over to his answering machine, and hit play. She didn't want to, but she couldn't help watching his face as he listened to the message. When it was over, he watched her with an anxious expression, paler than usual.\n\n\"I would like to say it is not what it sounds like...\" he began softly.\n\n\"But it is,\" she interrupted. She felt numb.\n\n\"I am afraid so.\"\n\n\"Is this...is this about Julia?\" Sebastien stepped forward to touch her reassuringly, but she pulled away from him. His face fell and he dropped his hand.\n\n\"I swear it is not. I applied for the position at the suggestion of a colleague, and I did not find out that Julia was on the board until the exploratory gathering. She is not even on the hiring committee.\"\n\n\"I believe you, although I don't know why I should. You lied to me. Why would you do that?\"\n\n\"I did not suppose I would be offered the position, was not even sure I would take it if it was offered to me. Better, I thought, not to worry you for no reason.\"\n\n\"If what you're saying is true, it doesn't sound like there would have been much for me to worry about.\" She sounded eerily calm.\n\n\"I...I suppose that is true. Are you terribly upset with me?\"\n\n\"I'm furious, and heartbroken...and I don't know how to trust you anymore. You're too good a liar. You must have been going on like this for weeks.\" She shook her head.\n\n\"But you are still here...\" She looked down. It was true. Every time they'd had a big problem in the past, she'd run away until she could deal with it.\n\n\"I don't know...I guess I'm done running from you. I've done some stupid things before. Yelling, crying, running away, those things don't solve the problem. Maybe I just want to talk.\"\n\n\"We have some time before we leave for rehearsal. Would you like to sit down and discuss it now?\" He sounded very careful, as if the wrong word would shatter her into a million pieces. Maybe it would.\n\n\"Sure. Okay.\" She sat slowly, and Sebastien sat opposite her. \"Tell me why you applied for the position.\"\n\n\"An old acquaintance asked to meet with me, and he mentioned that my name had come up as a possible fit for the upcoming vacancy. It is an excellent opportunity. Any conductor would agree.\"\n\n\"Then why do you say you might not want it?\"\n\n\"I could not possibly bring you. I thought...\"\n\n\"You would, what, give it up because of that? If I wanted to give up this job and follow you, I would. Or we would learn how to be apart. I would never...could never ask you to sacrifice an opportunity like this for our relationship. Much as it would hurt, I think it hurts more that you think so little of me that you would have to lie to me like this.\"\n\n\"I do not...that is not how I meant it. I think the world of you, and I enjoy so much what we do here, together. It would take a lot for me to give that up, and I believed, foolishly, that it would be easier to wait until I had been offered the position -- or not -- to tell you. I realized weeks ago that I should have told you, but by then...I can only hope that you will forgive me.\"\n\n\"I don't know. I was wrong, I don't think I can deal with this right now. We...we have rehearsal. Let's go.\"\n\n-----\n\nThings were breaking down. He couldn't quite understand how it had happened, though he was quite sure that it had been mostly his fault. No...all his fault. Claire had been so wonderful, and he knew she was so hurt by the sudden revelation of his secret. Well, he had always intended to tell her eventually. How could it have gotten away from him so terribly? Yes, he knew she was hurt. Sebastien felt that she had not forgiven him -- perhaps could not -- and he couldn't blame her.\n\nStill, he thought he might have felt better if she had screamed at him, cried stormily, slammed doors. The soft, quiet acceptance; the way she moved disconnectedly through space unnerved and saddened him. He could not help remembering how she had looked the afternoon she found out. She had been so pale, even trembling as she faced him in his apartment.\n\nHe had faith that things would eventually go back to normal, but right now he was being so careful around her, it was hard to see it. Again he felt that she was, in some small ways, pulling away from him, and he was at a more profound loss than ever about what to do.\n\nPerhaps the time apart would do them good. He had finally finished packing his things for his audition trip, and Claire had agree to ride with him to the airport to say goodbye. The atmosphere was strained between them in the back seat of his car, but at last he spoke.\n\n\"I suppose it will be nice to have a break while the orchestra rehearses for the instrumental set being performed when I return.\"\n\n\"Oh, I guess I didn't tell you yet. Aaron asked me to perform with his choir this weekend, so I'll be rather busy with rehearsals myself.\"\n\n\"I see.\"\n\n\"That's all right, isn't it? My contract says--\"\n\n\"Of course, it is no problem.\" He shifted, looking uncomfortable. It was strange, but he was feeling sort of...sort of...\n\n\"You're not...jealous, are you?\"\n\n\"It may seem odd to you,\" he said softly, \"but I suppose I am, in a way. The thought of you singing for another man, well...watching you sing for me has become rather like...like...\"\n\n\"Like...\" she prompted, but he shrugged uncomfortably and she blushed when she realized what he was thinking. \"It's not like that with Aaron. I don't even call him Maestro.\"\n\n\"Yes, well.\" He waved that away, obviously wishing to change the subject. \"More than...those feelings...I wish I were able to come. To be able to see you perform when I am not also working, it would be nice.\"\n\n-----\n\nSebastien had hardly passed through security at the airport when he began to feel a strong sense of foreboding - about his trip or his relationship, he couldn't say. Making his way to the gate, he couldn't help but notice the throngs of people surrounding him. Harried parents running after their children, young college-types paired off and holding hands affectionately, and a strange woman with hair very similar to Claire's. She kept passing him, and he got more agitated each time he nearly mistook her for the woman he'd left behind.\n\nAt last he sat with a disgruntled sigh in a lightly padded seat by the window, watching the technicians loading planes with luggage. A plane took off gracefully in the background just as another touched down on another runway. He checked his watch. His plane wouldn't take off for another half hour. He had time to make a phone call. Pulling out his phone, he tapped in the sequence of buttons that placed a call. The phone rang three times before there was an answer, and he spoke before the startled person on the other end could even take a breath.\n\n\"Hello, it is I,\" he said briskly in French, to avoid being overheard.\n\n\"Having second thoughts?\" asked Ren\u00e9 in a mildly censorious tone. Sebastien frowned, though he knew Ren\u00e9 could not see him do it.\n\n\"And third, and fourth, and so on. That is not why I am calling.\"\n\n\"Well, I am, as they say, on the edge of my seat to hear what it is,\" came the dry reply.\n\n\"It is about mon abeille. I wished to ask if you would...would see to her wellbeing while I am away. I am afraid she is far more upset than she is letting on, and I...I could not live with myself if...\" He didn't know how to finish the sentence.\n\n\"Certainly I will look in on her from time to time, but she is a grown woman and I do not think-\"\n\n\"Whatever she wants, if it is anything you can give her, I want you to give it to her. Even adults sometimes need more care than they realize, and I want you to be there to give it to her.\"\n\n\"Sebastien,\" Ren\u00e9 began with a tired sigh, \"are we getting to the point where you are giving me orders as well as Claire?\"\n\n\"Ren\u00e9, please!\" Sebastien snapped in frustration. \"Do not do this to me today. I fear I have destroyed my life as it is and I do not have the time or energy to argue with you.\"\n\n\"Then why do you not come home?\"\n\n\"It is too late for that now,\" he answered darkly. \"I must resign myself to the mercy of the fates. Besides, if it is as I fear and Claire no longer loves me...\" He paused to collect himself, even the thought being more painful than he'd anticipated. \"If that be so, then I may as well take the position, should they offer it to me. I should not want to remain here after that.\"\n\n\"I have known you my whole life, and still I do not understand your fatalistic attitudes.\"\n\n\"Still I wish to be prepared.\"\n\n\"You will never get away from it. It will follow you your whole life, and you know I speak the truth,\" Ren\u00e9 said, his mind reaching far, far into the past, to a boy and a girl, to a blooming love and a rushing river. He shook his head.\n\n\"Be that as it may...Promise me you will take care of her.\"\n\n\"Very well, I promise.\"\n\n\"Anything she wants, you will give it to her.\"\n\n\"Yes.\"\n\n\"Anything,\" Sebastien repeated, more emphatically. Ren\u00e9 was silent for a long moment, processing the implications of what Sebastien was asking.\n\n\"Mon ami, I do not think-\"\n\n\"Please, do this for me. Or if you will not do it for me, do it for her. She may not need just a friend this week. She needs to feel safe and desired in the arms of a man who loves her. As it cannot be me - could not, even if I were here - it must be you.\" When Ren\u00e9 did not answer, Sebastien went on, \"I know it cannot be lack of desire...\"\n\n\"No,\" Ren\u00e9 finally said, reluctantly, \"but it feels disloyal and I know it will feel so to her.\"\n\n\"Then tell her I suggested it, if you like. Command her in my name, if you like. But I think it will not be so complicated as you imagine. When I am with her, it is like...like...birds bursting into song, or the feeling of a sun-warmed breeze on a spring day.\" His analogies sounded ludicrously sentimental, he knew, but it was the truth. \"But the problem is that our relationship must always be so...political. We are always dancing around how we feel, what we mean to each other, the politics of our sex and our relationship to each other, and so rarely do we get the freedom to simply...simply be. Certainly I have involved you in our little games, but I believe with you she may have the freedom to just be a woman-\" He broke off, unable to keep the bitterness out of his voice.\n\n\"Sebastien,\" Ren\u00e9 cut in kindly, \"I think you underestimate your relationship and your lover. But if it pleases you, perhaps you should make a greater effort to simply be with her. Surely your sex is not always full of your games from start to finish.\"\n\n\"No, I suppose not,\" he replied, sounding unconvinced. \"But still I think with me she misses the free and easy part of a relationship. With you, she may at least have that. I want her to have that, especially this week when she will be so untrusting of me. Promise me you will care for her.\"",
        "\"I promise...if you will promise me something.\"\n\n\"What?\"\n\n\"Promise you will think about what you are doing. I do not want you to torture yourself, and for now perhaps you should not even think about the effect on Claire. I want you to think about what you are doing to yourself and whether this is worth it. I hear what you are not saying aloud, even if you do not yet hear it yourself. Have a safe trip, and I expect to hear from you again when you have landed.\" Sebastien was still thinking about Ren\u00e9's words when the line went dead in his ear.\n\n-----\n\nThe sound of the phone startled Claire out of her reverie. She had been taking a break from studying her music, wishing she was with Sebastien and simultaneously mourning the turn their relationship had taken. It had only been three days since he'd left, but they hadn't been easy. Sebastien had called the night before, but neither of them seemed to know what to say. She stretched her arm out of the nest of blankets she'd made around herself on the sofa and caught up the phone on the fourth ring.\n\n\"Hello?\"\n\n\"Ch\u00e9rie, it is good to hear your voice. When Sebastien is not around, I never get to see you. How would you like to come out with me to dinner tonight?\"\n\n\"Oh, Ren\u00e9, it's you. I don't know. I've just been so tired lately.\"\n\n\"Have you eaten since he left?\" he asked softly.\n\n\"Of course,\" she replied defensively, before adding contritely, \"a little.\"\n\n\"I am coming over. Do not go anywhere; I will be there in ten minutes,\" he said, and hung up before she could protest. Not that she was going to go anywhere. She just didn't feel up to it. Everything was going wrong. One way or another she was going to lose the best thing that had ever happened to her. She sat back in her chair and watched a bird flitting about in the tree outside. It seemed happy. Why couldn't she be happy?\n\nSuddenly she realized it was very quiet in the room. Her laptop had been playing an internet radio station, but had shut itself down after she had ignored it for long enough. Absently she clicked a few buttons to get it started again, but instantly regretted it. The snare drum and the wistful flute solo told her it was Bol\u00e9ro, and it reminded her of Sebastien.\n\nIt had been months ago now, after some concert or other -- she couldn't even recall which one anymore -- and Sebastien surprised the audience, and Claire, with a piece that hadn't been on the program. Bol\u00e9ro, a perennial audience favorite for its twisting melody and insistent rhythms, was part of the symphony's usual repertoire, so the musicians were generally familiar with it. Claire had known it was about more than that, though.\n\nSebastien was trying to embarrass her by playing for her, in public, the song he had so thoroughly whipped her to in a sleazy hotel room the year before. The worst part was, it had worked. Her cheeks burned as she sat at the front of the stage, knowing no one in the audience could possibly understand the reason for her discomfort. Yet she saw Sebastien's sneaky smile, understood that he was getting some perverse pleasure from it.\n\nShe had been pissed off, but couldn't deny the power of the memory or the fact that he had embarrassed her with it in public. She had put on a show of being mad at him, but it hadn't lasted. They had retired to his dressing room and had incredible, passionate sex. Those were the days before secrets had come between them. But then, she had to admit he had been lying to her not just for weeks but really for months. Months. It didn't seem possible.\n\nA sharp knock on the door brought her out of her thoughts again and she sighed. Whoever it was should just go away and let her suffer. She drew the blankets over her head and pretended to be asleep. Not that they could see her anyway, but it made her feel better.\n\nThe knock came again. Then she remembered. Ren\u00e9. Heaving an even bigger sigh, she got up from the sofa and wrapped the blanket around herself before shuffling to the door. She unlocked it, but didn't open it, and then went back to the couch without a word. Behind her was unintelligible French muttering, and then the sound of the door opening and closing again. She braced herself for the look she knew he would give her.\n\nRen\u00e9 walked around in front of the sofa, looked down at her, and gave a sigh of his own. But she didn't see the expected pity. Instead, he looked rather annoyed.\n\n\"I do not understand what is the matter with you. Sebastien is gone for three days and you turn into a complete mess.\" Claire's mouth opened in surprise and indignation. \"You know, a French woman would never allow a man to destroy her life like this. She would simply go out and live her life, and the man, seeing what he has missed, would drop everything to come back to her.\"\n\n\"Well, I'm not French. I'm an American woman and this is how we grieve our relationships. Don't you watch American movies? I'm not sleeping well, I've barely eaten, and I haven't showered or brushed my teeth today.\"\n\nRen\u00e9 wrinkled his nose, but could not quite conceal the soft concern in his eyes.\n\n\"Ch\u00e9rie, you are so pale. Why are you doing this to yourself? Mon ami loves you more than anything. He would give up everything for you.\"\n\n\"Then why is he there, and I'm here?\" Neither of them knew the answer to that.\n\n\"How will you be able to perform on Friday if you do not get control of yourself?\"\n\n\"I'll be fine. I always am.\"\n\n\"I am not very good at this ordering around business, but if that is what it takes to get you back into the world, then so be it. Get up from that couch,\" he said.\n\n\"No.\"\n\n\"Is this how you treat Sebastien?\" asked Ren\u00e9 exasperatedly.\n\n\"Sometimes.\"\n\n\"No wonder he wants to whip you all the time.\" Claire frowned at him. He leaned over and tried again in a lower voice. \"You will get up, or I will force you to get up.\" Claire thought about trying him on that, but wasn't sure she should. Still, it was obvious he meant business, so she pushed aside the blanket and got off the couch.\n\n\"Fine,\" she said with a pout.\n\n\"Go take a shower.\"\n\n\"Make me,\" she replied, before she even realized it. Rolling his eyes, he lifted her bodily over his shoulder and carried her into the bathroom. He turned on the shower and then set her down, looking meaningfully at her.\n\n\"I'm not going to undress in front of you.\"\n\n\"I have seen it before, you know.\"\n\n\"Don't you trust me?\"\n\n\"Should I?\" With a frown, Claire turned her back on him and disrobed. She dropped her clothes at her feet and stepped into the shower. The door didn't open, so she knew Ren\u00e9 was just standing there. It was weird, but she tried to ignore the fact that he was there and just take her damn shower. She washed her hair out -- twice -- and even brushed her teeth while her conditioner worked its magic.\n\nShe couldn't believe he was treating her like a child -- or that she had been acting like one. Really, as he had asked her, what was her problem? She had been trying very hard not to think about Sebastien, although he was the only thing she apparently could think about. Sometimes it felt like she had already given up on the relationship. Oh, sure, she had said they would be able to work something out if he moved across the country to take this new job.\n\nBut did she mean it? Long-distance relationships were hard enough when they started off in the right way, without lies and deception and hurt feelings. Besides, when he left Ren\u00e9 would no doubt go with him, and then who would she have? She didn't really have any friends in the city, although one of her high school friends was supposed to be moving up here this year and she'd gotten very friendly with some of the musicians. But still most of her social life was wrapped up in these two men, and soon she would have nothing.\n\nRen\u00e9 hadn't heard anything in a long moment when he suddenly perceived what sounded like soft sobs under the pounding water of the shower. Peering around the edge of the shower curtain he saw Claire sitting on the floor, her knees drawn up tightly to her chest, crying her eyes out. Heart pierced with pity, he quietly slipped from the bathroom and dialed a number on his phone.\n\n\"What do you want?\"\n\n\"It is about Claire.\"\n\n\"What about her? Is she all right?\" Sebastien asked, suddenly focusing his attention very intensely on the other end of the phone.\n\n\"Of course she is not all right. I got her to take a shower, at least, but now she is curled up sobbing. I have never seen her like this. She is not eating, not sleeping.\"\n\n\"I asked you to take care of her-\" began Sebastien, his concern making him sound angrier than he was.\n\n\"Do not blame me for this!\" returned Ren\u00e9 hotly. \"May I remind you she is an adult, and she said she was 'grieving like an American', so you will pardon me for being out of my element.\"\n\n\"What would you like me to tell you?\"\n\n\"I just thought you would want to know.\" For the second time in a week, Ren\u00e9 hung up on Sebastien and then dropped his phone into his pocket. When he turned around, hardly knowing what he would do about Claire, he saw her in the bathroom doorway. She was clutching a towel around her, hair dripping onto her shoulders, eyes red-rimmed and looking very vulnerable.\n\n\"Were you talking to Sebastien?\" she asked in a small voice.\n\n\"I was.\"\n\n\"Did you tell him I was...\"\n\n\"Yes.\"\n\n\"What did he say?\"\n\n\"I did not give him much of a chance to respond, ch\u00e9rie. But I know that his heart is breaking. In all my years of knowing him, I have never seen him as distraught - except perhaps when he thought you were going to leave.\"\n\n\"It's his fault, you know.\"\n\n\"I do know, and I have told him as much. But he is, as you know, a stubborn man. Once he has decided upon something, there is no turning back. So he will punish himself for leaving you, and torture himself with thoughts of you turning your back on him when he returns.\"\n\n\"I wouldn't-\"\n\n\"Reality does not intrude upon a sorry man's thoughts, I am afraid. But look at you, shivering. Let us warm you up.\" He strode forward, sliding the towel out of her hands and moving it up to her hair. He squeezed the moisture out, heedless of her nakedness in that moment. Then he motioned for her to go into her bedroom, and he followed. He crawled onto the bed, pulling her blanket back and patting the bed beside him. Claire looked over at him, feeling a bit awkward, but got into bed beside him. He wrapped the blanket tightly around her and then pulled her into his lap.\n\nThe chill finally faded away as she found herself enveloped in the heat of Ren\u00e9's body. She was suddenly very conscious that she was naked in his lap. Naked and clean and feeling comfortable for the first time since she had found out Sebastien's secret. She turned, burying her face in the side of his neck and breathing in his scent. She had never noticed it before; he smelled clean and lightly floral, like freshly laundered cotton t-shirts and tea and roses. Claire slid her arms around him, hardly noticing when he stiffened slightly.\n\n\"Thank you for coming over to see me,\" she said softly.\n\n\"Sebastien asked me to care for you,\" he murmured, unable to forget his friend.\n\n\"He did?\" Claire asked, pulling back slightly in surprise. She wanted to be mad about that, but it touched her heart somehow. Sebastien did care about her. Not that she had ever doubted it really, but it was nice to hear. She studied Ren\u00e9's face. He looked...nervous. His pulse was jumping in his throat and his tongue flicked over his lower lip.\n\n\"He did.\"\n\n\"What else did he ask you to do?\"\n\n\"Claire, I-\"\n\n\"What else?\" she repeated.\n\n\"Anything you asked.\"\n\n\"Anything...\" Claire leaned in again and pressed her lips gently against Ren\u00e9's. It felt nice, his arms around her and the growing heat she felt as his hardening cock bumped in against her hip. But he drew back and ran his hand through his hair.\n\n\"Claire,\" he said, as gently as he could manage, \"Sebastien did not ask me to do this because he wishes it. He asked it of me to care for you, to give you what he feels he cannot.\"\n\n\"What can't he give me?\" Ren\u00e9 just sighed.\n\n\"Is this really what you want to do?\" Claire looked away. The truth was, she wasn't sure. She loved Ren\u00e9, she was attracted to him, but...\n\n\"I don't know,\" she finally said. \"If you think it would hurt Sebastien...\"\n\n\"I do, but I do not think he realizes it.\"\n\n\"I would never want that. But, um, what are you going to do about...\" She pressed her hip more firmly against him, and Ren\u00e9 smiled and shook his head.\n\n\"Ch\u00e9rie, please, I am a man, not a beast. Come, I shall take you to dinner.\"\n\n-----\n\nThe weather was gorgeous this time of year. Snowdrifts had largely melted away and the brisk winds brought with them the scents of spring. Mornings and evenings were still cold and dark, driving those in the city to coffee shops for heated sustenance. Sebastien remembered days like this from graduate school and thought he should have felt more at home. It was familiar, of course, but so much more alien now than it should have been.\n\nHe was as busy as had been promised this week, his schedule packed with orchestral rehearsals and meetings with various important figures in the symphony world from soloists to board members. Hiring committee members were in and out over the week, but all of them would be present during the final performance he would give with the orchestra.\n\nJulia was present at these meetings once or twice, and she had been charming and friendly -- and nothing more, though she mentioned the possibility of having another girls' night out with Claire should she come to visit.\n\nSebastien rehearsed with the orchestra in the auditorium, the vast empty space behind him making him almost uneasy. Of course, the musicians were consummate professionals, so getting them to follow his direction was simple. He did miss the camaraderie of the musicians in his own symphony, however. They tended to be a bit more relaxed, but also more interested -- no, more obviously passionate about the music they played.\n\nEverything was lovely; he was forced to admit that. Yet...yet it was not home. He supposed that was the way it always felt at the beginning of a new venture. Certainly when he had first arrived in America there had been a period of adjustment. Now, finally, it felt almost as much like home as Paris did -- even more so in some ways.\n\nBut when he'd come for his graduate students, he'd had a definite point and purpose that drove him, a spirit that kept his cold heart warm. When he moved to helm his own symphony, again his sense of purpose kept him going. When he had begun to run out of steam and long for home and family again, Claire had come into his life and recharged him.\n\nNow he could honestly say he had everything he wanted. He was the conductor of a major city's symphony, for goodness' sake. He had built fulfilling professional relationships with musicians and donors alike. He was genuinely excited each season about creating a music program that would delight his patrons, and he enjoyed the people he worked with.\n\nSo why, if he was so content, was he really applying for this job? If the additional money, renown, and whatever perks there were didn't ignite his passion for the profession any more than he already felt, what was the point? It pained him to admit that his major motivation might have been to keep from revealing his relationship with the woman he loved. And damned if that wasn't incredibly stupid -- he hadn't even needed to do it, really.\n\nOr maybe it was his ego. Maybe he wanted to prove to himself that he could still be that great. He could still contend with those older and more experienced, with the young upstarts. He was still good enough to get hired here.\n\nEach evening after rehearsals and meetings and luncheons, he went out on his own to explore the city he had once felt he knew so well. He traversed the funky angled corridors, discovering new places and rediscovering old haunts. Perhaps it was the city itself that had called to him. He could almost imagine himself living in this place again, head of one of the very largest and most prestigious symphonies in the country.\n\nWell. It was all just ego, after all. How unattractive.\n\nOn Friday, Sebastien conducted Brahms' Third Symphony early in the morning, to the polite applause of the hiring committee. He had relaxed into it, though his mind was beginning to drift far away indeed. When it was over, he'd individually thanked and greeted each of the musicians and the hiring committee, surreptitiously checking his watch. If he caught an early flight and went straight from the airport, he could catch Claire's performance. It wouldn't fix things between them -- probably nothing could return to normal until a decision had been made -- but at least she might see that he cared. At least that.\n\n-----\n\nTom drove Sebastien directly from the airport to the church where Aaron's choir was performing -- a vast stone monolith on a square in the middle of the city. The doors were just closing for the performance when he slipped through and found a seat near the back. As he waited for things to begin, he realized how very rarely he allowed himself to be merely a spectator -- even more rarely for choral music than opera or ballet.\n\nNever a particular fan of Bach, he nonetheless was swept up in the majesty of one chorale and the simple beauty of another in the quartet of cantatas that Aaron had chosen. At intermission, he took pains to avoid Claire so that his presence wouldn't make her nervous. But he observed her from afar, noting with dismay that between cheerful interludes with singers and audience members there was an undeniable sadness about her.\n\nWhen the concert was finally over, he wandered into the courtyard along with the others, hoping to find Claire. He saw Aaron first, however, and went to congratulate him.\n\n\"Maestro, hello!\" Aaron said in surprise. \"You almost never make it out to our concerts.\"\n\n\"Perhaps if you did not schedule them in the middle of the last rehearsals of our symphonic season,\" he teased. \"This time I was away on business and just made it back in time. It reminds me I must come more often.\"\n\n\"I'm glad you did. So you enjoyed yourself? It's not what you're used to, I know.\"\n\n\"Indeed no. Much larger ensembles all around. But I must say you created a very pleasing sound. It was quite good.\"\n\n\"And what about Claire? She actually turned me down at first, thinking she'd be too busy at the end of the season. But last week our soloist came down with a bad cold, and Claire stepped in. She must have practiced all week long, and she was so perfect tonight. Definitely our angel this week. Quite a girl, isn't she?\"\n\n\"She certainly is,\" Sebastien murmured as he finally caught a glimpse of her. \"And always an absolute joy to listen to. I am glad every day that I hired her.\" His voice was soft and charged with emotion, which clearly surprised Aaron. The undemonstrative conductor apparently had a tender heart.\n\nClaire emerged from a knot of people heading directly for Aaron, though the uncomplicated smiled on her face told Sebastien she hadn't noticed him just yet. She was beautiful as always in a dark blue gown he had never seen before. It was a good color on her, setting off the coppery undertones of the silky auburn hair she had pulled back into a braided bun. As she reached for Aaron's elbow to catch his attention, she turned slightly and flicked her eyes up to see whose conversation she would be interrupting.\n\nFor a moment she was completely still, startled to see Sebastien there. A blush crept up her cheeks and she moved her hand from Aaron's elbow to hover just above Sebastien's forearm. She didn't touch him, almost afraid he would disappear if she did.\n\n\"Maestro...you're here.\"\n\n\"Yes, I...\" He hesitated for a second, but decided to say what was on his mind. \"I could not miss your performance.\" Claire's expression softened as she gazed up at him, like they were alone in the courtyard. \"Oh, and mon abeille, you were magnificent.\"",
        "Sebastien touched her shoulder in a gentle caress as he learned down to kiss her cheek in greeting. But as his lips brushed her soft skin, he felt her trembling in his arms, smelled the sweet scent of her perfume. He could not control the impulse to let his lips trespass upon hers for a moment. When he pulled away, Claire looked as shocked as if he had just suggested something far more lascivious than a chaste kiss. Aaron was practicing his best blank expression.\n\n\"Um...um...\" Claire mumbled vaguely, her blush deepening. For a long moment, no one said anything. Then Aaron ventured bravely into the silence.\n\n\"You two are...dating?\" His voice was empty of judgment, but Claire looked down at her feet uncomfortably.\n\n\"We are,\" Sebastien answered, placing his finger beneath Claire's chin and tipping her face up to look at him. \"I love you, Claire, and perhaps it is time we began letting others know.\"\n\n\"I don't think I'm ready yet,\" she said softly.\n\n\"No one else knows?\" Aaron asked in a gentle tone.\n\n\"Aside from our families, no. I am afraid my musicians will never look at me quite the same way once they find out,\" Sebastien said ruefully.\n\n\"You? What about me? It's such a stereotype. Innocent young girl moves to the city, falls in love with a mysterious, charming older man -- and her boss; it just couldn't get any worse!\"\n\n\"Now, it's not that bad at all,\" Aaron cut it, patting her shoulder soothingly and giving her a sympathetic smile. \"The musicians are all wonderful people, and I'm sure they'll only be as happy for you as I am.\" He touched Sebastien's arm in the kind of familiar affectionate way that Sebastien allowed of so few people, and Claire realized they probably had worked together for years and knew each other quite well.\n\n\"Ah, look, my wife is trying to get my attention. Good luck with whatever you decide.\" With that and a smile, Aaron disappeared into the now thinning crowd leaving Claire and Sebastien quite alone.\n\n\"I think he is right, mon abeille. It may be uncomfortable at first, but it would be the best thing.\"\n\n\"He might be right, but that doesn't mean I have to like it,\" Claire said, pouting a little in spite of herself.\n\n\"It would mean not having to hide...\" That was true, and persuasive, but it was just too much. Why did he have to keep springing the idea on her? \"There is no need to decide tonight,\" he said softly. She nodded, but said nothing.\n\n\"Claire...are you not pleased to see me?\" he asked, sounding so uncertain of himself that Claire wasn't sure for a moment quite what to say.\n\n\"No, I am. Of course I am. I was just surprised.\"\n\n\"Did you perhaps have other plans tonight?\"\n\n\"I did...\"\n\n\"I see.\"\n\n\"...but since they mostly consisted of sitting around my apartment feeling nervous about seeing you tomorrow, I guess they're shot anyway.\" She smiled a little at her pathetic joke, and was pleased to see him return it. \"If you wouldn't mind waiting a minute, I'll go get changed.\"\n\n\"Of course.\" He watched her head back into the church, and then walked lazily around the courtyard looking up at the stars. So she was nervous about his return, was she? Well, that made two of them. Only his nerves had just begun. He couldn't expect the night to just be business as usual between them after everything that had happened, but he hoped they wouldn't spend it deep in miserable conversation either. He certainly deserved it, no question about that, but it would be a sorry way to spend any evening, much less the first one they were together after a week apart.\n\nMovement from the corner of his eye caught his attention, and he looked back toward the church to see Claire emerging. He noticed that she'd taken her hair out of its braid and pulled back into a ponytail, the auburn waves flicking back and forth as she walked. It was a hairstyle she wore infrequently, and Sebastien found it oddly appealing. He was surprised also by her outfit, which was much more casual than her usual attire.\n\nHe realized that he had only seen her in jeans a handful of times, and usually they were paired with heels and blouses. Tonight she wore what looked like an older pair, more faded, with a thin, form-fitting t-shirt and trendy sneakers. She hadn't washed off any of her makeup, and looked like any college student going on a casual date.\n\nActually...he remembered a time, not so very long ago, when Claire had come to his apartment dressed almost exactly the same way. How angry she had been with him that day. It was as if the casual dress was supposed to be an insult -- he would take her that way or not at all. Well. He had taken her. Her clothes tonight reminded him forcefully of how young she really was, how innocent she'd been before they'd come together and peeled back those layers, one by one.\n\nShe was apologizing for her attire even before he started walking toward her, mumbling something about how she hadn't expected to be seeing him. But her words cut off abruptly as he strode forward and took her into his arms. He pressed his palms into her back and kissed her deeply, swallowing the little sound of surprise she made.\n\nHe kissed her as though he wasn't sure he would ever get another chance at it, gripping the fabric of her t-shirt so tightly Claire was afraid he might tear it. Then his grip loosened and he slid his hands down her back to her ass and squeezed it through her jeans. Claire was surprised; this was very un-Sebastien-like behavior for a public place. Though everyone had left at this point, they were still technically in a place where anyone driving by could see.\n\nAll at once, Sebastien lifted her up and she had to wrap her legs around his waist to keep them both upright. Without once breaking contact between their lips, he walked her back toward the church until he had her pinned up against the wall. Claire shivered as he began kissing down her neck, feeling him pressed up against her so intimately.\n\n\"Stop, Sebastien. This...this isn't what I want.\" That she'd used his name stilled his lips on her skin immediately, but he didn't lift his head. He didn't want to see the look in her eyes.\n\n\"What do you want?\" he asked, his lips brushing against her neck as he spoke.\n\n\"Too much has come between us. I want things to go back to the way they used to be. Before the secrets and the lies...back when things were simpler. When I was afraid of you, and the fear and the attraction made my heart race every time I saw you. The times you first touched me, and I was terrified I wouldn't be what you wanted, or that you could just toss me aside, but the pleasure, it...it was like nothing I'd ever felt before, and it made everything worth it.\" Her breath caught in her throat and Sebastien stood still, so still, waiting for her to tell him what she needed. But she fell silent, just touched the tip of her nose gently to his ear. He shifted, setting her back down on the ground and looking at her once more.\n\n\"Mon abeille. If the past few weeks have taught me anything, it is what a fool I was to think of keeping such a secret from you. How much I, too, miss the way we used to be together, how much I dearly hope that someday you can look at me without the shadow of suspicion in your eyes. I want you to know, Claire, that I love you, that you are precious to me, and that I want to give you everything that you desire and more. Can you tell me what that is tonight?\"\n\n\"I'm not sure. I want something...familiar. Something comfortable. Something that reminds us of who we are and why we're together.\" Sebastien nodded thoughtfully. \"But, Maestro...this does't mean I've forgiven you.\" As she said it, she realized it wasn't totally true. She was still upset, but she knew he hadn't ever meant to hurt her. Sebastien's face was closed down, careful, but the flash of pain she'd seen was like a lance to her heart.\n\n\"Of course,\" he said stiffly, \"and I would not deserve it if you had.\"\n\n\"Oh, Sebastien,\" she said, so softly, touching his cheek. \"I'm sorry, I shouldn't have said that.\"\n\n\"You have nothing to apologize for.\" Claire didn't know quite how to respond, so she just leaned into him, pressing her cheek into his chest. He wound his arms around her and sighed, so she heard his breath and the beating of his heart. Then Sebastien drew back, regarding her carefully.\n\n\"You wish things to be simpler.\"\n\n\"Yes.\"\n\n\"You wish to be afraid of me.\"\n\n\"Well...yes.\"\n\n\"When, precisely, had you stopped being afraid of me?\" he asked in a dark tone, making Claire's eyes widen in surprise.\n\n\"It's...it's not exactly that I stopped, just that so many other things have gotten in the way.\"\n\n\"I see.\" He wasn't entirely sure that he did, but he was thinking. She was right, of course. The business of falling in love alone had taken attention away from the simple pleasures of terrorizing and pleasing her, to say nothing of the complications of symphony politics. It wasn't likely to get better very quickly, but at least occasionally they should take a night to put that all aside and just be together. Tonight could be that night.\n\n\"Come, I am taking you to my flat tonight.\" Claire followed him to the car and slid into the back seat beside him. She nodded a greeting to Tom, who returned the gesture as he started the car. A sense of excitement was growing in her as she realized she had no idea what was in store for her. It could be anything; Sebastien could and often did push her up to her very limits. She watched him from the corner of her eye, knowing he was slipping into the person who created so much pain and pleasure for her.\n\nBut of course, she reminded herself, this person was so close to the skin for him. It wasn't a sexual persona he'd had to cultivate over the years. It was so much a part of who he was, and she knew that was part of the turn on.\n\nThe car was so utterly quiet on the way back to his apartment that it was almost unnerving. Although she suspected it might break his train of thought, Claire shifted close and rested her head on his shoulder. To her surprise, he slid his arm around her, drawing her head in against his chest. The scent of his cologne overwhelmed her senses and she finally felt herself relaxing.\n\nAt last Tom turned downward and parked the car in its usual spot in the underground garage. At a signal from Sebastien, he got out and then disappeared to wherever he usually went at times like this. Sebastien turned to Claire and did the last thing she was expecting at that moment: he kissed her. It was a soft, tender kiss, full of longing. The kiss said he missed her, he loved her, he was sorry. It was wistful and joyful and turned into an intense, hungry thing in a matter of seconds. When they parted, Sebastien's chest was rising and falling a bit too quickly.\n\n\"You look altogether too appealing in jeans and a t-shirt, you know. It is almost too bad we have to take them off so soon. Ah, well. Please go ahead upstairs. I need to...collect myself. Wait in the bedroom.\"\n\nWith a shy smile and a little nod, Claire headed into the building. Sebastien watched her hips move side to side as she walked, shifted his own as he felt himself harden even more, though he wasn't sure how that was possible. He leaned his head back on the seat. It seemed strange, but he was actually nervous. It wasn't as if they were going up there to do anything they hadn't done before, but...Somehow it seemed more significant. As if he was desperate to prove to Claire that they could block everything out and just be together. He sat for a few moments in silence before following Claire upstairs.\n\nMeanwhile, Claire let herself into Sebastien's apartment. She flipped on the heat and then headed upstairs. In his bedroom, she disrobed and her thoughts began to turn to him. What was he thinking right now? What would he do to her tonight? It would be nice to have a quiet night in.\n\nFolding her clothes, she felt a shiver run through her. It was still a bit chilly in the bedroom, but she was sure it would warm up soon. She wasted no time wondering how he would want to find her when he came up; she already knew. Naked and kneeling on the edge of his bed, waiting for him. Kneeling until her thighs ached, until she was wet and hot all over. She knelt, spreading her knees apart, and placed her hands palm-down on her thighs. Focusing her eyes on the floor, she waited.\n\nA few moments passed before the door opened. Claire glanced up to see Sebastien in the doorway, his shirt unbuttoned and his eyes raking over her hungrily. The time apart had been hard on them both. Their eyes met and Claire's cheeks pinked before she turned her gaze back to the floor. Sebastien shrugged out of his shirt and draped it over the nearby armchair, picking up a multi-tendriled object she knew so well. He brought it over to the bed and set it beside her.\n\nSebastien stepped away from the bed and returned with a small box and a length of smooth, black rope. Claire shifted, unable to keep still from excitement. Inside the box was her matching set of wrist cuffs, ankle cuffs, and collar, all in a stunning ruby red. He fastened them on her methodically. Her pulse sped faster with each creak of the leather as the cuffs tightened.\n\nThen, Sebastien turned to the rope. Positioning her hands back on her ankles, he drew the rope around her body and through the rings on her cuffs and collar. Twice between her legs it went, sliding through her wetness and rubbing against her in the most tantalizing way. It sent sparks of pleasure through her with each tiny movement, and she hoped Sebastien would go easy on her.\n\nHe stepped back, surveying his work. Claire's chest was pushed forward, her skin already taking on a soft blush as she fought not to pull on her bonds.\n\n\"Look at me,\" he said softly, and she raised her eyes to see him holding a camera. \"May I? I want to remember this forever.\"\n\nShe couldn't speak, could only nod. Sebastien snapped a few shots, then put the camera down. He picked up the Stinger and trailed it down her body teasingly.\n\n\"Forgive me if I cannot control myself perfectly tonight, mon abeille. Your body, your perfect obedience, you drive me mad.\"\n\nBefore she could even think of a response, he drew back and brought the Stinger back down on her. It wasn't a hard strike, but her skin exploded in tingles and heat flew through her in a rush. Another slap nearly brought tears to her eyes as the tendrils curled painfully over her nipples. Then one on her soft stomach, followed by one between the legs.\n\nThat last was always the most intense sensation, the one that made her jerk in surprise and pain. Only now when she moved, the ropes slid against her and made her cry out. The writhing pulled her collar tighter against her neck and she already knew she could not hold out for long. Sebastien repeated the cycle -- upper chest, breasts, stomach, between the legs -- adding in lighter, teasing motions to her inner thighs. After two more rounds, Claire was already panting and asking for a break.\n\n\"So I am not the only one whose control is held by far too thin a thread...\" Claire ran her tongue over her lower lip and gave a short nod. She still didn't trust herself to speak. Her body was straining to remain upright, making the ropes rub her most intimately. At that moment she knew she was too far gone. Even if he didn't hit her again, she would come, and soon. She whimpered softly and Sebastien studied her. He could see her struggle in the tension of her body, the wild look in her eyes.\n\nWithout warning he fell to his knees, pressing his cool cheek against the heated skin of her inner thigh. He slid forward, gripping her waist to steady her as he drew his tongue over her in one long, slow motion. Claire flinched, trying to keep control by digging her fingernails into her ankles. But there was no way to defend against Sebastien. He bit down then, gently, running his tongue over her, and she cried out helplessly as she came. She shook all over, straining her bonds and tightening the collar around her neck.\n\n\"Please, please Maestro, no more!\" she gasped at last. Sebastien have her a last, lingering taste before pulling back, but she could tell by the look on his face that he wasn't done with her yet. Not nearly done.\n\nWith shaking fingers he pulled at the knots that kept her tied up. After a moment of frustration he was able to pull out all of the rope. Claire knew he was impatient by the way he tossed it to the floor instead of coiling it neatly first. He grabbed her wrist and pulled her up to her feet, where she fell against his body with trembling knees. Sliding his hands up he unbound her hair and ran his fingers through it before claiming her mouth with his. Claire traced the waistband of his pants, letting her fingers ask what her mouth could not. She had learned her lesson.\n\n\"Yes, take them off.\" Sebastien said, sounding a bit out of breath himself. Knowing how it affected him only inflamed her more. She unsnapped his pants and pushed them down his legs, brushing against his hard length with her hair on the way down. Sebastien actually groaned above her, but when she reached up to touch him he grasped her hand so tightly it hurt. \"Do not touch me,\" he said sharply. Claire blushed, mumbling out an apology, but he just shook his head firmly. \"No, it is just that...I cannot...\"\n\nClaire understood then, her cheeks coloring even more deeply. Sebastien ducked his head to give her another kiss and then picked her up and dropped her onto the bed. He pushed her onto her stomach and then lifted her hips up to plunge in with a sigh. Picking up the forgotten Stinger he slapped her lightly with it over back and buttocks, making her whimper and writhe below him.\n\nHe thrust into her harder. She knew her hips would show the bruises from her fingertips, but she didn't care. He was striking her harder again, and she could feel the warm, wet wave of pleasure growing deep inside. The sound of their bodies coming together filled the room alongside strangled moans and short, harsh breaths. Then his voice in her ear.\n\n\"Come for me, my darling, my Claire. I need to feel you.\" He dropped the Stinger and slid his hand below her, dragging through the slickness he found there in rough circles. At once the explosion inside her head blocked out any sight, any sound, any sensation except the rhythmic pulsating and the feeling of him pumping his come into her.\n\nWhen it was over, she dropped her head to the pillow and sighed. Sebastien slid out of her and collapsed down beside her. He ran his hand up and down her back, unable to keep from touching her now that they were back together.\n\nThere was so much they could have said, but neither of them wanted to spoil the silence. Sebastien rolled out of bed, somewhat reluctantly, and ducked into the bathroom to fill the tub with warm, soapy water. He returned to sweep Claire into his arms and then settled them both in the bathtub. His lips again found hers and they sunk into each other, shutting out the world.\n\n-----\n\nIt was getting on into late afternoon on a Thursday in early May, when the sun was shining brightly and the scent of blooming flowers was carried on into the symphony hall. Sebastien wasn't in as cheery a mood, however, as some of the musicians who tripped in that day. Their last performance set was coming up soon, and in his opinion they were nowhere near ready. Oh, the main pieces were all set -- Schumann's Symphony No. 1 and Stravinsky's Rite of Spring -- but those were ordinary symphonic repertoire.\n\nThe piece they were going to rehearse today was assuredly...not. They had squeezed rehearsals in wherever they could for the past few weeks, but Sebastien had only given them their music a month ago and he could hardly expect miracles. The problem was that it really had to be perfect. Naturally he liked all of their music to be perfect, but this had to be...well, truly perfect.",
        "He paced anxiously while the musicians tuned up. Deep breaths were helping him to calm down, but not much. He stepped up on the podium and opened his score. After a few beats, the orchestra came in just as they were supposed to, and his nerves began to settle at last. They still weren't quite perfect, but it was the best he could have expected. A few more rehearsals and they would be ready.\n\nThe notes slipped away before him and he closed his eyes, leaning his head back as he swished his baton. For the first time he felt a little stirring in his heart as the orchestra played on, and he dearly hoped it wasn't showing on his face. That just wouldn't do. At last, of course, it had to end and he opened his eyes again, nodding slowly.\n\n\"That will do, thank you. It is coming along very nicely. Let us take a short break, please, and we will meet again at seven.\"\n\nHe stepped off his podium and strode briskly toward the hallway, stopping in his tracks abruptly when he saw the figure leaning up against the wall, looking at him with an inscrutable expression. Sebastien frowned, feeling very anxious again.\n\n\"You are early,\" he said, inclining his head and heading down the hallway away from prying ears.\n\n\"I suppose I am,\" answered Ren\u00e9 softly, touching his friend's arm to stop him. The expression on his face made Sebastien want to squirm, a very unusual feeling for him. \"Mon ami, this was the purpose behind your secret rehearsals?\" Sebastien hesitated for a moment before heading off down the hallway again, eager to escape Ren\u00e9's knowing look.\n\n\"So what if it is?\" he asked stiffly. \"Perhaps you would not understand, because you do not know...have not seen...\"\n\n\"Sebastien, please, I know you better than you think. Believe me, I have expected...something like this, but still it is...\"\n\n\"You think it will not be received well?\" Sebastien asked, suddenly worried. Ren\u00e9's expression softened, and as they crossed the threshold of Sebastien's office he drew his friend into a gentle embrace.\n\n\"It will be perfect.\"\n\n-----\n\nWhen the house lights dimmed, Claire was in an odd mood. It wouldn't be the first concert she'd had no part in -- there were only so many orchestral pieces featuring soprano, after all -- but usually she sang in the concert that begun or ended a season. She had been a little put out, but really it would be worth it considering the pieces Sebastien had chosen. They were so beautiful and interesting, and she was really lucky to have a good seat.\n\nShe had begged Sebastien to let her sit just offstage, where she couldn't be seen by the audience but would have a good view of him. Actually in retrospect he had been surprisingly easy to convince, but then he had known she would want to come to the concert. He probably just assumed she would want to sit in the audience, where she usually did for performances. But she missed him, missed watching him.\n\nThe show was every bit as wonderful as she'd expected, if a bit on the short side. Sebastien strode off stage after the Stravinsky, appearing surprised to see Claire standing there waiting for him. They stood still for a moment, looking at each other, and then Sebastien whisked Claire behind one of the hanging curtains, wrapping them up in the dark cloth. He pressed a firm kiss to the lips of a very surprised Claire, his hands holding her firmly against him.\n\n\"I love you,\" he said, then disappeared with a flick of his wrist that sent the curtain away from him to float back around Claire. She lifted a hand to her forehead, suddenly feeling a bit dizzy. Peering out from the curtain, she saw that she was alone and that Sebastien had gone back on stage for what she presumed would be the second round of applause. But as she went back to her seat, she saw that her chair had been moved. Glancing back to the stage, she saw Sebastien looking back toward her.\n\nHe tipped his head subtly to the side and she saw the chair waiting for her on the stage itself, close to where she usually sat. He held up a finger and then turned back to the audience as he mounted his conducting platform again.\n\n\"Ladies and gentlemen, I would like to thank you all for attending our final concert of the season. If you would all please stay in your seats for just a short time longer, we are premiering a special piece for just this one night only. I hope you enjoy it.\"\n\nSebastien stepped off the platform and headed toward the grand piano, which had been installed at the far end of the stage. As the lighting dimmed at the front of the stage and brightened over the piano, Claire saw her opportunity and slipped on stage to take her seat. Whatever he was about to do, it would certainly sound better from up here rather than off stage. What was he up to, anyway?\n\nTruthfully he had begun to grow rather nervous again. As he seated himself at the piano, he tried to keep his mind on what he was about to do, tried not to think about long ago nights, faraway places. Sebastien glanced at the other end of the stage where Claire sat, looking curiously over at him. He wanted this so much to be perfect, for her, and at last he thought it might be.\n\nHe began to play. Just like the original composition, the first few bars of this Moonlight Sonata were piano only. Then his real work would become apparent. He had finally completed an orchestral arrangement of this favorite work of his early in the year. This was what they had been secretly rehearsing for weeks, and it was finally ready for its debut. He hoped so much that she would love it, but more than that, that she would understand. It was all for her.\n\nThe orchestra played sublimely. Every note was pitch-perfect, every silence thrummingly beautiful. When the final notes died away, he chanced a glance at Claire. She was looking at him very intensely, tears shimmering in her eyes. She understood. The audience seemed to take in a collective breath and then the applause began. They liked it, too, and he was proud, of course. But she...\n\nClaire was very quiet as they left the symphony hall. Sebastien was taking her for a late supper at the restaurant of a nice nearby hotel. Normally they would have separated after the performance and met up outside the building, but tonight it seemed that neither of them cared any longer. Of course, it probably would have risen no suspicion for two colleagues to go to dinner together, but they had always felt safe was better than sorry. Not tonight.\n\nTonight Claire had flung herself into Sebastien's arms for a moment as soon as they made it offstage together, and he held her for just a few seconds longer than was probably appropriate for acquaintances. But then he had given her his hand and they had gone out the back entrance together, hoping to avoid conversation with anyone else.\n\nOf course, they hadn't spoken to each other since the performance was over, either. It wasn't an uncomfortable silence, just full of the knowledge that something had certainly changed between them. Neither of them were quite sure what.\n\nThey were seated in a quiet corner of the restaurant, under the flickering lights of candles in wall sconces throwing delicate shadows on the cream-colored walls. Claire ran her fingers in little circles on the ivory tablecloth, trying to focus on the menu instead of Sebastien, but it was difficult. He looked so handsome, and she knew he was waiting on her to say something. Anything. The trouble was, she had just been thrown for such a loop that she didn't know what to say yet.\n\nThe arrival of the waitress saved her from having to come up with anything for the moment. She was a bright-eyed, bubbly young woman -- probably a bit too bubbly for the somewhat reserved atmosphere for the restaurant, but nice enough. She smiled down at Claire to take her order, but really turned up the brightness when she looked at Sebastien. Once they finished ordering, she disappeared, and Claire fixed Sebastien with a thoughtful look.\n\n\"Are women always like that around you?\"\n\n\"Always like what?\"\n\n\"You know...perky and flirtatious.\"\n\n\"I have never particularly thought about it. I suppose women in this country are, yes, though you certainly weren't.\" Claire waved that away.\n\n\"It's your accent,\" she said seriously. \"Well, that and the fact that you have money, I suppose. But it wouldn't matter if you didn't. Girls are always saying, you know, French men might not be much to look at, not compared to Italians. Italian men are gorgeous, but it's the French guy you want to take to bed.\"\n\n\"Girls say that, do they?\"\n\n\"Believe me, they do.\"\n\n\"Hmm...is that what you think?\"\n\n\"With you and Ren\u00e9 as my examples of French men? Well...I've never been to bed with an Italian, so I'll have to get back to you on that one.\" She finally gave him a little smile, which he returned. Then she turned pensive again. \"They all think I'm lucky, you know. They think they want to be me.\"\n\n\"Who?\"\n\n\"Women who see us together.\"\n\n\"Why shouldn't they want to be you? Lovely voice, beautiful face...\"\n\n\"No, they want you. Well, they think they want you. If they knew what I let you do to me on a regular basis, they'd probably be less interested.\"\n\n\"Oh?\"\n\n\"Yeah, most girls don't go for the sort of thing we do. They like soft, romantic stuff. They see a French guy, they think they've hit the damn jackpot.\" She tried to laugh, but her voice hitched a little as she did so. Sebastien frowned, picking up her hand.\n\n\"I am afraid I have been lacking in the romance department,\" he murmured, bringing her wrist to his mouth and brushing his lips against it. \"Sometimes I admit I get carried away and forget to simply take you into my arms and...\"\n\n\"You don't have to say it,\" Claire protested with a blush.\n\n\"I apologize. I did not mean to embarrass you.\"\n\n\"It's fine. You're right, though, I guess. I'm really a romantic at heart myself.\" She looked down, but suddenly knew what she wanted to say. \"I want you to know that I loved the surprise performance tonight. It...it was your arrangement, wasn't it?\"\n\n\"How could you tell?\" Sebastien asked in surprise.\n\n\"The way you looked at me, so intently, like you were about to show me the most secret part of yourself. And the music, it was so passionate and yet so precise. Every note exactly in place, but because you wanted it to be there. It was one of the most lovely things I've ever heard.\"\n\n\"Thank you.\"\n\n\"No, no. Thank you. I'll never forget it, as long as I live.\"\n\nLooking across the table at her, Sebastien suddenly thought about the position he'd applied for, the call he'd made earlier in the day. He knew he'd made the right decision.\n\n-----\n\nThey were hand-in-hand, walking back toward Sebastien's car, when he turned to her suddenly.\n\n\"I wonder, mon abeille, if you would come back into the symphony hall with me for a few moments. There is something I would like to do.\"\n\n\"Want to look in on the party, do you?\" Claire teased.\n\n\"Heaven forbid,\" he replied dryly. \"I have had quite enough of symphony parties for one season, I think.\"\n\n\"Then what is it you want to do?\" Sebastien didn't answer. As they slipped in through the side door, Claire let go of his hand out of habit and was surprised to feel him take it back. She glanced up at him. In the dark of the hallway, she thought he might have been smiling, but she couldn't be sure. It was quiet; only an echo of the party noise reached them as they walked.\n\n\"I am remembering just now the very first time I saw you,\" Sebastien mused softly. \"You were sitting there awaiting your audition, so nervous you could hardly read.\"\n\n\"I can't believe you remember that. I was nervous.\"\n\n\"You were. And so beautiful.\" He leaned down to kiss her cheek.\n\n\"Maestro...you didn't bring me down here just to go down memory lane, did you?\"\n\n\"Perhaps.\" But he slid his arm around her shoulders and said nothing more as he guided her down the hallway. Around a corner and through the curtains they went, to the stage again. All of the chairs and music stands had been put away, though the piano was still in its spot to one side, and the lights were very low. Claire looked up at Sebastien and a tremor ran through her as she saw the look on his face -- dark, serious. Surely he wasn't having any impure ideas. Not here, not now with their colleagues socializing so nearby.\n\nBut it seemed he indeed had no such ideas. Giving her shoulders a final squeeze, he sat down at the piano bench. He tapped out a quick little tune before segueing slowly into the beginning of one of their four-hand waltzes. Hearing her cue, Claire sat beside him, touching her fingers gently to the keys in a light echo to Sebastien's notes. As they neared the end of the song, he slowed a bit and finished on a rather wistful note. Claire glanced up at him, but he wouldn't meet her eyes now. When she laid her hand on his arm, he stood abruptly.\n\n\"I think it is time we talked,\" he said, and Claire's heart fell. He didn't just want to talk...he wanted to talk.\n\n\"Tonight?\" she protested.\n\n\"Yes, tonight,\" he answered, a bit impatiently. \"It is past time we should have had this conversation, I think.\" Claire stood and walked over to him uncertainly. Sebastien turned suddenly, startling her. \"You know how much I love you, mon abeille, do you not?\"\n\n\"Of course I do. Would you please just tell me what's going on?\"\n\n\"The symphony called.\" The words hung in the air. Of course that was it. What else would have him so agitated?\n\n\"Oh,\" she said, very softly. There was nothing more to say. She looked down at her feet, understanding now why he hadn't wanted to look at her.\n\n\"Or perhaps it would be more accurate to say that I called them.\"\n\n\"I see,\" she said, although she didn't. Was he so eager?\n\n\"Yes, I was anxious to speak with them, so I thought it would be best not to wait until they called.\" Claire's heart hurt suddenly. Had he accepted already? Was he here to pack up his things? It was so sudden, but she couldn't imagine what else he would be doing here. Her mind was racing and she was sure she would start to cry before he had even finished speaking. She was so upset that she almost didn't hear what he said next.\n\n\"I...\" He stopped to take a breath. \"I told then I was withdrawing my name from their consideration, that I was no longer interested in the position. That I am content here, and I am thinking of getting married...if my love will have me.\"\n\nClaire blinked up at him with tear-filled eyes, not quite comprehending his words.\n\n\"I...what?\" she finally asked.\n\n\"Mon abeille...I am trying to ask if you will marry me,\" he answered with a touch of amusement. \"Ah, I nearly forgot. It would never do to ask empty-handed,\" he added, reaching into his jacket pocket and withdrawing something in his cupped hand. Unfurling his fingers, he revealed a ring sitting alone in his palm. It was beautiful, and looked to be fairly old. In a delicate, filigreed rose-gold band sat a ruby that glowed blood-red in the dim lights, flanked by seed pearls.\n\n\"It was my grandmother's,\" he said quietly. Claire was still speechless. \"Will you give me an answer?\" he prompted.\n\n\"I forgot the question,\" she stammered, looking up at him with wide eyes.\n\n\"Claire,\" he said a little impatiently, \"you can be so exasperating sometimes. Now tell me, will you be my wife?\"\n\nFor a long moment she looked up at him, uncertain. It had truly taken her by surprise. She hadn't been sure he would ask her at all -- regardless of his sisters' meddling words -- and certainly not so soon. Her mind was full of questions: Wasn't it too soon? Where would they live? Where would they marry? What would her parents say? It felt like too much, too soon, too fast.\n\nShe looked up at him, his face a mixture of amusement, irritation, and tenderness, and sighed inwardly. Opening her mouth at last, she said the only thing she could say: \"Yes.\" And it was done. One little word to change her whole life.\n\n\"Yes?\" Sebastien echoed, looking cautious now as if he had expected her to run, or ask for more time, or argue with him the way she had with herself. Suddenly Claire felt as if her heard might burst; she loved him that much.\n\n\"Yes,\" she repeated, this time with a smile that he returned. Then he pulled her into his arms, kissing a line from her temple down her cheek slowly as he held her. When he reached her lips at last, a soft sighing sound came from behind them.\n\nDreading what she was about to see, Claire turned back slowly to see the greater part of the orchestra clustered below the stage, watching.\n\n\"Um...I thought you were all at the party,\" she said lamely.\n\n\"We were,\" said Holly from the front of the stage, \"but it's late, didn't you know? The party was breaking up and we heard talking, so we came to investigate.\"\n\n\"How long have you all been there?\" asked Sebastien, baffled that neither of them had noticed them all come in.\n\n\"Only a couple of minutes.\" Claire looked around, terribly embarrassed.\n\n\"I guess the secret's out.\"\n\n\"It wasn't that much of a secret. After we saw you together after rehearsal a few weeks ago, some of us suspected there was something going on between you two.\"\n\n\"Somehow that doesn't make me feel any better.\"\n\n-----\n\nIt was well after one in the morning by the time Claire and Sebastien returned to his apartment. The musicians had insisted on opening a few bottles of champagne in a sort of impromptu engagement party, but it wasn't long before their significant looks became noticeable and they were sent off home with well wishes. At last truly alone in the silence of deepest night, Sebastien picked Claire up and twirled her around his living room.\n\nHe carried her up to his bedroom and they made love in the light of the full moon splashing down onto his bed. When it was over, Claire curled up beside him and pressed soft kisses into his neck until he could no longer keep his eyes open. She ran her hands through the curls of hair on his chest and let herself wonder for a moment if she really had made the right decision.\n\nShe thought of how much her parents loved him, how excited his sisters would be when they heard the news. She thought of Ren\u00e9...and she wondered. But there, that was a problem for another day. Tonight she was exactly where she belonged. She had everything she wanted, and perhaps it was time to stop questioning it and just live her life. But then...that's just who she was, wasn't it?\n\n\"Mon abeille, kindly settle down for the night,\" came the rumbling, tired voice beside her. \"You are thinking too loudly for me to sleep.\"\n\n\"Hmph,\" she pouted.\n\n\"Anything you want to discuss, we can do it in the morning. For now, let us just have this night.\" Sebastien rolled over onto his side and wrapped his arms around her. His lips found hers in the dark and she let herself melt into him. All right, yes. In the morning."
    ],
    "authorname": "barabajagal001",
    "tags": [
        "music",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-soprano-ch-08"
}