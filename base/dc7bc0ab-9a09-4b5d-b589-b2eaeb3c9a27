{
    "title": "Carrying On Ch. 04",
    "pages": [
        "Author's note:\n\nThis is the conclusion to the series. I know is been over two years and I apologize for that. Life has really gotten in the way, but things are a bit back on track now. I want to thank everyone for their support throughout this journey, especially my editor, Rnebular. Once you've finished with it, please rate and comment. I love to hear from you guys. Enjoy!\n\n*****\n\nThe dusty mirror behind the bar reflected my image, though at this point I barely recognized it. My face was partially obscured by a row of liquor bottles sporting the typical metal pour spouts, which I was, admittedly, happy about. I had taken 30 days off, claiming stress, and was granted it with no questions asked. Now I dealt with that stress in the most self destructive way I knew how. I drank myself stupid.\n\nOver, and over. Day after day.\n\nMy phone had stopped buzzing at night a few nights ago. I had sent out a text to the group explaining that I was taking some stress time and that I would get back with them soon. My phone had been one giant buzzing noise for the twelve hours following that text. I muted the conversation after that, choosing inebriation over dealing with my problems right away. Can you blame me? My heart had just been torn out, in homage to the Temple Of Doom. That was days ago now, though how many it had been, I didn't know.\n\nNow, in this smoke filled room, I sat at the bar, blending in with the anonymous patrons who visited just a frequently as I have been. Folks of all walks of life gathered here for a myriad of reasons, probably, I mused, for the same reason I'm here. The bartender had been moving back and forth with practiced grace, filling beers and making cocktails for patrons who had come for them, as well as getting together the orders that had been brought to him by waitress. He passed by me about ten times, watching the level in my glass get low, then empty.\n\n\"Get ya another one?\" He asked, his workload calming down for a minute.\n\n\"Sure thing, Sam,\" I replied, pushing the highball glass, along with the cocktail napkin it was resting on, toward the bartender. He grabbed the cheap whiskey, filled the glass half way and then topped it off with sweet and sour mix before pushing it back to me. I nodded, and he moved off.\n\nI drank deep from the glass, the abundance of whiskey burning slightly as it worked its way down. Sam went back to working the bar. He was older, maybe in his sixties, with an impressive grey mustache that he would surely have to rake out after he ate. His hair was thin and matched his mustache, hanging down almost to his shoulders. His face was rough like old leather, creased and pock marked with age. Sam pulled away a bottle from the back shelf, a large bottle of scotch, and I could see myself clearly for a moment.\n\nGods, did I really look that bad? It was no wonder Sam had been generous with the whiskey, though whether that was because I looked like I needed it or if it was to hurry me out of here, was entirely up for debate. I looked down at my glass as Sam put the bottle back in its place. As I stared into the amber liquid I could feel the world begin to fade. I could hear the sounds behind me dying away, the sounds being replaced by those of a time long past.\n\n\"Anderson.\" The voice was distant and hazy, as if the speaker were on the other side of a thick door. \"Anderson,\" the voice came again, noticeably closer now. My view changed right before my eyes. I was back in the thick of it, out of the Humvee and crouching against a rock. I could hear the rhythmic, throaty bark of the M2 .50 cal coming from the Humvee behind me, which blended with the shouts and softer, more high pitched snapping of rifles. \"Anderson!\"\n\nI grabbed the radio mic from the right shoulder of my flak jacket, the source of the noise. One of the men in my squad calling for me to report in or ask for support. \"This is Anderson, send it.\"\n\n\"Anderson, it's Adams. Enemy reinforcements coming down the east road. Looks like two trucks with combatants and a Technical,\" His voice was scratchy, the transmission laced with static. \"This must be the group we've been waiting for, over.\"\n\n\"Roger that, I'll call it in. Get ready, if they get through then the Army's left flank is gonna be in trouble.\" I switched channels to contact the Battalion HQ. \"HQ, this is Beastmaster 2-3. Enemy convoy moving down MSR Independence, two Victors with ten men each and one Technical with mounted .50 Cal. Request permission to engage.\"\n\nThere was a short burst of static before a voice came through. \"Roger Beastmaster 2-3, you're cleared hot.\"\n\n\"Roger, Out.\" I switched my radio back to our channel and passed the word along. \"Cleared hot, gentlemen. Just like we trained for.\"\n\nI kept low as I moved along our position. We were off the Main Service Road about 50 meters to the right. Our elevated position gave us the advantage of being able to see for miles while the rocks that populated this particular stretch gave us enough cover to set up a good ambush position. The battalion had been ordered forward to support the advancing Army and Marine Corps units heading into Afghanistan and we had drawn the short straw of relinquishing our Howitzer to some Motor transport fools who would bring it up for us. We were needed to provide route and flank security as the massive war machine moved forward.\n\nI stayed crouched low, moving over until I found Corporal Diaz. Andrew Diaz was a young kid from Texas with dreams of being famous. He had a boyish face that looked very much out of place in this hell hole. He was the lucky one selected to carry the AT-4 rocket launcher.\n\n\"Diaz, get ready. When they come into range, I want you to waste that Technical.\"\n\n\"Not the lead vehicle, Sergeant?\" He asked, a bit confused. We had trained to shoot the lead vehicle and disrupt their forward momentum, keeping them in the ambush zone. Now I wanted him to shoot the rear vehicle.\n\n\"Those shitty trucks can't stand up to a BB gun,\" I told him. \"Those two trucks full of assholes who want to kill us will be scrap in a few seconds, their survivors picked off shortly after. If that Technical brings his .50 to bear, the whole dynamic changes. Kill it.\"\n\nHe nodded as we watched the three dirty white trucks racing down the road, with others probably behind them hoping to exploit a gap in our tactical planning. Fools. Their engine noise grew louder and louder as they came closer. Lance Corporal Davis, mounted in the Humvee turret, called out just before depressing the trigger on his weapon.\n\n\"Fire!\"\n\nThe deep bark of the .50 was punctuated by the snaps of small arms fire. The lead truck swerved, bullet holes appearing along the cab and engine compartment as those standing in the bed scrambled to get out, and died as they did. The second truck swerved to avoid the first truck and the bodies falling out of it. Those in the second truck returned fire, their shots wild and few finding the armored hull of the Humvee. The Technical pulled over to the side with practiced skill, coming to a halt as the .50 in the bed of the pickup swung toward us.\n\nThwoosh\n\nA long white cloud streamed from the AT-4 Diaz carried. As soon as he fired, he dropped the now useless weapon and grabbed his rifle, sighting down the barrel to see if he was successful.\n\nBoom\n\n\"Hit!\" Diaz called, turning to engage those from the second truck. Another explosion followed as the fuel in the first truck exploded, turning it into a burning roadblock. Davis turned the .50 toward the second truck, repeating the process as we dealt with the last of the survivors. The shooting stopped after a moment, the smell of smoke, gunpowder and sweat thick in the air. \n\nI turned toward Diaz. \"Corporal take a few men and check...\"\n\n\"Drew,\" Tyler said softly, shaking my shoulder. The world came slowly back into focus, which, to my undying disappointment, happened to be filled with Tyler's face. \"Drew, you okay?\"\n\n\"I was hoping for someone a bit more attractive to come back to,\" I said, giving him a small smile. He returned the smile and playfully hit my arm. He looked to someone else and nodded before sitting on my right. I looked over to my left and saw Carl sitting there, looking worried. \n\n\"Are you guys okay? You look like you belong in a hospital,\" Sam asked, coming over and seeing us.\n\n\"The look you get when you're having a flashback is terrifying,\" Carl said. \"It's like you've been lobotomized. The light's on but nobodies home.\"\n\n\"How's that different from any other time?\" Tyler asked, receiving a smack on the arm for it. They ordered drinks and Sam topped me up while he was here.\n\n\"Glad to see you've returned to us,\" Sam said, pouring my drink. \"My nephew has PTSD as well, though nowhere near as bad as you. How many tours?\"\n\n\"Three,\" I said. \"Iraq, Afghanistan and Syria.\"\n\n\"Syria huh? Must have been recent then. Good to have you back with us.\"\n\n\"Thanks Sam, though I'm not sure that my coming back was the best thing sometimes.\"\n\nHe began wiping the bar, like all bartenders do when they're about to give sage advice. This was no different apparently. \"Problems at home?\" I nodded. \"Well, for what it's worth, you were meant to come back, regardless of what you think should have happened.\"\n\n\"It was fate?\" Tyler asked.\n\n\"Fate,\" Sam said. \"Nothing happens that wasn't meant to happen. Excuse me one moment.\" He moved down the bar to tend to his duties.\n\nI thought about what he said, about how it was fate that I was here. I was about to fall down an existential rabbit hole when I stopped and looked at my friends sitting next to me. Each one was looking at me in turn, expecting something from me like dogs begging for table scraps.\n\n\"How the fuck did you find me?\" I asked. Both of them laughed hard, Tyler nearly falling off his stool. \"Seriously though, what the actual fuck! I was looking for some privacy out here and now you two knuckle dragging chucklefucks have found me.\"\n\nMore laughter followed, each of them taking great heaving breaths to try and calm down so they could speak. Carl managed it first. \"Did you really think we'd be unable to guess where you'd gone? Your more predictable than an episode of Law and Order SVU.\"\n\n\"Yeah dude,\" Tyler said. \"You were bound to be within 100 miles and at a bar. The most difficult part of finding you was narrowing down the bars you could possibly be in, which wasn't too hard. Once we had it narrowed down to bars within walking distance of a hotel, we just had to drive around and look for your truck, which sticks out pretty well on its own.\"\n\nI looked back and forth at each of them, then hung my head. \"Fuck.\"\n\n\"Don't worry bud,\" Carl said. \"I don't think Becky has figured out exactly how easy it is to find you.\"\n\n\"She will,\" I replied softly. \"She's a smart cookie. She'll figure it out soon.\"\n\n\"I don't think that's her priority right now. She's been pretty occupied with Lauren lately.\" I shot him a quizzical look. \"She's been tearing into her about how this is all her fault and that she needs to fix this.\" He must have seen what I was gonna say and beat me to it. \"We've all told them both to chill and that it wasn't Lauren's fault.\"\n\n\"Goddammit.\" I took a big gulp of my drink, draining the contents of the glass and setting it down hard on the bar. \"I'm thinking I may have to return to the world of the normal before I'm ready.\"\n\n\"Why?\" Tyler asked, draining his drink.\n\n\"Because I can't let Lauren be Becky's punching bag. She has a mean streak in her and her sister shouldn't be the outlet for that wrath. What about Jeanna? Is she working on them or is she staying out of it?\"\n\n\"Jeanna is pretty much running damage control whenever she's home,\" Carl answered. \"It takes a lot out of her, but the angry sex is amazing.\" He stopped for a second and then smiled. \"On second thought, stay gone as long as she will keep this up.\" Tyler and I laughed while Carl finished his drink. Sam refilled us and we sat quietly for a minute.\n\n\"Is this really the most healthy way to deal with your issues?\" Carl asked seriously. \"I mean, this self destructive path can't be the answer to getting you two back together.\"\n\n\"I happen to disagree, good sir,\" I said, taking a drink. \"I happen to know from experience that this method is the best at this particular stage.\"\n\n\"What does this accomplish?\"\n\n\"Making me feel better about her. She tore my heart out like I was a human sacrifice. Am I supposed to just forgive that?\"\n\nCarl didn't look like he liked that answer. \"I think the only way you two will fix this is to talk it out.\"\n\n\"Thanks Mom,\" I chided. Carl shot me an angry glance. \"Listen, I know this won't get better until we talk it out. I'm just not ready yet, is that acceptable?\"\n\n\"Well, while you guys do your destructive things on your own, the rest of us are suffering. Think that over before you come back here tomorrow.\" Carl stood and turned for the door. Sam came over and before he could say anything I held up my hand.\n\n\"I got his drinks,\" I told him. He nodded and went to the computer to add them to my bill.\n\n\"Uh, Drew,\" Tyler said, \"Can I crash with you tonight?\"\n\n\"I guess,\" I said reflexively as I finished my drink. I then looked toward the door, which had stopped moving moments before. \"Let me guess, he was your ride?\" I looked to Tyler and he just smiled. I laughed to myself and went back to my drink. \"Some things never change,\" I said.\n\n***\n\nThere was a knock on the door, waking me from a sleep that I shouldn't have been able to wake from. I prayed it was just a terrible dream and turned over. Tyler had passed out in the chair, his feet up on the desk and unresponsive to the incessant knocking. I looked at the clock and really prayed it was either a dream or that the police had come for me.\n\n3:15 AM. Not cool world, not cool at all.\n\nThe knocking came again and I finally couldn't ignore it anymore. I stood on unwilling legs and crossed the room, grabbing my coat and making sure my smokes were in it. I looked through the peephole and saw Becky standing outside. She was wearing her coat with the hood up, the fur that lines it poking out around the edges and moving in the breeze. She reached up and knocked again, hanging her head for a moment. When she brought it back up, tears ran down her face. I opened the door, unable to see her suffering, even if I thought she deserved it.\n\nI stepped outside, flipping the latch so the door would stay cracked open and lit a cigarette. She waited a minute, obviously expecting me to talk first. Unfortunately for her, I was still mad at her, I was still drunk and I'd been woken up at 3 AM. Sorry sweetheart, your move.\n\n\"Andrew, I just wanted to say that I'm sorry.\" Tears streaked her cheeks, which looked like they were about to freeze in the cold night air. \"I... I made a mistake, and I just wanted to apologize for the hurt I've put you through.\"\n\n\"Well, you did make a mistake, and seeing as how your standing out here in the freezing cold at 3 AM, I believe you are sorry for what you did. What the fuck were you thinking?\"\n\n\"I... I thought that, well, since that night you and Lauren were together, I thought she had fallen for you and was trying to get with you again. I know it sounds stupid, but I freaked out. She denied it when I confronted her about it the next day, but I figured she would. I didn't think she would be honest with me after what happened, you know, not wanting all this to be her fault.\"\n\n\"It was never her fault,\" I said calmly. \"She was going through some shit and needed our help. I can't even remember which one of you suggested that Lauren and I have sex, but it surely wasn't me. I do know it was you who freaked out about it later, despite video evidence that you agreed and were smiling while agreeing to being okay with it.\"\n\n\"What did you expect?\" she said, more tears running down her cheeks. \"I know that I was okay with it then, but it still hurt to see you and her being so cordial afterward.\"\n\n\"Hold the fuck on. So you mean to tell me that after I had consensual sex with your sister, with all parties involved consenting, I was supposed to feel like shit and blow up at her like you did?\"\n\n\"No, that's not what I meant,\" she said. \"I just meant that you guys seemed so happy after that, it felt like you guys had planned it out all along.\"\n\nI was dumbstruck. Was I really hearing this? \"What!?\" I exclaimed a little louder than I meant to. \"Why would we plan that out? What possible reason would we have to want to hook up? I mean, I know she is your sister, so she has good genes, but I was more than happy with you. Why would I want to compromise us just for her?\"\n\n\"I don't fucking know!\" She cried, burying her head in her hands. \"I was just so scared and reacted horribly. I was scared I had lost you, first to the military, then to my sister. I'm still scared I might lose you. I wish I could take it all back, but I can't. I feel so stupid now, having broken us up and having turned the house into a battleground. Can you ever forgive me?\"\n\nI sighed, lighting a new cigarette before tossing the old one into the ashtray next to my door. \"Yes, I can forgive you.\" Becky smiled that smile that I love so much. \"Just, not right now.\" Her heart visibly sank and she hung her head. I reached out and lifted her head from under her chin. \"Look at it like this. You came out here to find me, presumably given my location by Carl, to talk to me and make things better. You have, but did you ever think that I didn't want to be found?\" Becky hadn't, judging by that look. \"It's late, it's cold and I'm still drunk. I love you, I really do. I never stopped loving you, even if I hated what you did to us, but right now I can't forgive you and have everything just go back to being normal.\"\n\nShe nodded and wiped the tears from her eyes. \"I'm so sorry for this. I hope you come home soon, I really do. I'm gonna head home now, since I know you won't let me stay.\"\n\n\"Your right, I won't. I love you, but I need time to sort things out, and apparently you do to. Go home and rest, then tomorrow start making things right with Lauren. She's your sister and you need to fix this thing with her before we can be better.\"\n\n\"There you go,\" she said, throwing her hands up. \"You need her and I to be back to normal before you can come back home and fuck her behind my back?\"\n\nI shook my head and tossed out my cigarette. \"No, but if you're still stuck on that then I'm just gonna go back to bed. There's no point in this if you're still hung up on your paranoia.\"\n\n\"What the fuck!\" She screamed. \"What does MY relationship with MY sister have to do with you coming home?\"\n\n\"If there is as big of a war zone as Carl and you have said, then me being there would straighten it right out, but only to my satisfaction. Nobody else wins if I have to fix it, I already know this and I don't want to go down that road. You go home and fix YOUR relationship with YOUR sister, then we can talk.\"\n\n\"Fuck you. You couldn't make things better at home, you don't know what goes on there, what with you being the patron of the month at that dive.\" She pointed to the bar I had been frequenting since coming here.\n\n\"I can, but I don't want to. Now, go home and fix things. When they're better then we can have a chat.\" I turned and headed back to the room, opening the door and flipping the latch back so it would fully close. I heard Becky's truck start a few minutes later, the sound fading out in about the time I fell asleep.\n\n***\n\n\"Well well well,\" Carl said, walking up and sitting next to me. \"Shocking I'd find you here, still.\"\n\nI downed the rest of my drink and ordered another before turning to Carl. I'd been tying one on pretty hard and was not in a mood for a lecture. \"Well, I've adopted this place as my home away from home.\" The sarcasm was so thick I could probably have physically held it.",
        "\"I figured,\" Carl said seriously. \"Listen, we need to talk. I just want you to think about...\" I cut him off with a raised hand.\n\n\"No lectures,\" I repeated. \"Unless you've come to drink with me or to tell me that Becky and Lauren are the best of friends once again, I'd appreciate being left alone.\"\n\n\"They're working on it,\" Carl said. \"They've been having mediated discussions, with Jeanna as the mediator. Things are improving and hopefully will be back to normal soon.\"\n\n\"Good to hear that progress is being made.\"\n\n\"Now you can come home and stop all of us worrying.\" Carl sounded like a parent admonishing their child. \"We've been worried about you, off somewhere pickling your liver and not giving a fuck. How the fuck are we supposed to get things back to normal if you're off going rogue?\"\n\n\"I'm sorry that you guys are worried, but everything is being dealt with. If Becky and Lauren are coming around like you say, then when they get their shit together, Becky and I will sort through our bullshit.\"\n\n\"Does your plan of fixing things involve drinking yourself stupid?\"\n\n\"Yes, as a matter of fact, it does at the moment. That is my professional opinion, in case you were wondering.\"\n\n\"Well I hope you guys fix your issues quickly, because I'm getting tired of it all.\"\n\n\"Really?\" I rounded on Carl quickly, venom dripping with every word. \"We aren't having 'issues'. She threw her fucking wedding ring at me and basically told me to go fuck myself. Things are looking pretty grim for Becky if they don't sort their shit out. Come find me when they're ready.\" I turned back to my drink, ignoring Carl as he stared at me.\n\n\"I didn't know she threw her ring at you,\" Carl said softly. \"Nobody ever told me what happened. I'm sorry bud. I'll... uh, I'll leave you to it.\" He stood, patting me on the shoulder before heading for the door. I thought about apologizing, but dismissed it. Carl would forgive me in time and I was less than willing to give a fuck right now.\n\n\"Sam!\" I called, lifting my glass. \"Whenever you get a chance.\"\n\n***\n\nTwo days later I returned, sitting in my customary spot near the end of the bar with drink in hand. The place was fairly quiet, being a weeknight, and Sam was able to sit and talk for a bit. We had grown close over the past week or so, talking about life and the crazy adventures we'd had. I told him of my time overseas, while he regaled me with stories of growing up in Maine. From what he told me of the winters there, I'd stick to watching it on TV.\n\nCarl and Tyler came and sat down next to me, one on each side, and ordered drinks. I wondered briefly if they only showed up here to harass me and get free drinks, but dismissed the notion. I knew deep down they kept coming back because they were worried about me, though I had told them to stop. Things were fine, I was just working through my problem as so many other had and will do. Can't they just give me some God dammed peace and quiet?\n\n\"Andrew, I know you don't want to hear it, but...\"\n\n\"Then why are you saying it?\" I asked, cutting Carl off.\n\nHe looked at me, seeing the pain and alcohol in my eyes. I saw him register that he wouldn't get through, the hurt in his eyes. He had probably come to admonish me again for drinking my problems away, but I was having none of it. He finished his drink and ordered another, sitting in silence and not looking at me. \n\n\"Drew, how goes the soul searching?\" Tyler asked, stealing a cigarette from my pack. He grabbed one for me as well, lighting it and handing it over.\n\n\"I think I'm making progress, though I suspect it will be for nothing.\"\n\n\"Why?\" Carl asked. \"Why go through all this if it's for nothing?\"\n\n\"Well, the best laid plans never survive first contact with the enemy. Once I compare what I have found against what Becky has found, things may turn drastically different than I expected.\"\n\nCarl gave a small laugh and turned to me. \"You wouldn't know what the hell she's thinking because you're not there. You don't here the fighting between her and Lauren while they try and work out their problems. You can't here her sobbing at night, wishing you would come home and tell her everything's all right. You wouldn't know how torn apart she is, because you're not there!\"\n\n\"Good!\" I nearly yelled at him. \"Then she can feel what she fucking did to me.\"\n\n\"Is that what this is all about?\" He asked. \"Are you punishing Becky for hurting you? Because if so, she's been punished enough. Now you're just being petty.\"\n\n\"Listen fuckstick, this isn't about punishment. This is about me finding out if she really wants us back together or if she's gonna stay mad about this forever and leave it hanging as a black stain on our relationship. If she can't admit that she was wrong and make amends to those who she wronged in the process then how can we progress further? I've already left a trail of destruction in my wake, we don't need one from her as well.\n\n\"That might be an understatement,\" Carl said. \n\n\"What, about my trail of destruction?\"\n\n\"Yes. It's more like Hiroshima after the bombing, though who cares right? As long as you're in drunken bliss, it's not your concern what happens.\"\n\n\"And who, pray tell, am I harming right now, aside from you?\"\n\n\"Becky, Lauren, Jeanna and Tyler for starters. I could continue with family members if you'd like.\"\n\n\"No need, I can see how my drinking is harming them by proxy, I guess.\"\n\nCarl stood, finishing his drink and looked at me, then to Tyler. He shook his head as Sam walked by. \"Sam, I'm sorry,\" he said.\n\n\"For what?\" The bartender asked.\n\n\"For this.\" I knew what was coming. He cocked his fist back and hit me square in the jaw. I gotta admit, though he doesn't look like it, he has some power behind him. I was nearly knocked off my stool, grabbing at the bar to prevent my fall. Fuck, that hurt. I grabbed the bar napkin from beneath my drink and spat blood into it, the metallic taste strange as it mixed with the residual whiskey flavors in my mouth.\n\nI looked back at Carl, who had paled slightly. I'm sure there was hatred burning in my eyes, though I didn't feel it in my soul. He had hoped to put me on the ground, that much I could see. When he had failed, he expected me to retaliate. I had no such intentions. Things were bad enough right now and I didn't need bad blood between us. I looked at Tyler, who sat there in shock at what had just happened.\n\nI could feel the rage starting to boil just beneath the 80 proof. I wanted so bad to hit him back, to make him understand what he had done, that there would be a retaliation. I knew, though, that it would only make things worse. It gave me some comfort to see the knuckles on his right hand had turned red, and were no doubt hurting him. He had caught me good and my jaw ached, but making this into a big deal wasn't going to fix anything.\n\n\"Well, now your drinking has hurt everyone, and you,\" Carl said, turning to leave. \"Think about that for a while.\"\n\nI looked at Sam, who stood there dumbfounded. He had been sure I was going to strike back, which would have necessitated him throwing out his best new patron. I think, at this point, I was keeping his bar in the green single handedly. I called his name, shaking him from his thoughts.\n\n\"Sailor Jerry please, Sam,\" I said, handing him my credit card. \"Leave the bottle.\"\n\n***\n\nIt took nearly a week, but I finally decided to head home. Carl had really knocked some sense into me, literally. My jaw had stopped hurting, to be replaced with my internal organs as my body fought to reject the vast amount of poison I was dumping into it. I hadn't checked my account, but I was sure I'd be working a lot of overtime to pay off the bills to Sam's bar. Tyler had been outside when I pulled up, sitting on the porch, in the freezing cold, smoking a cigarette and looking at something on his phone. \n\nHe didn't say anything to me when I got out of the truck, just grabbed my bag and slapped me on the back, that big smile of his radiating now that I was home. Carl, Jeanna and Lauren were sitting in the living room, with Becky off in some other part of the house. They all stood up and came to say hi.\n\n\"Sorry about the smack I gave you,\" Carl said. \"I figured if you wouldn't respond to words, maybe actions would help.\"\n\n\"Well, good thinking,\" I said, rubbing my jaw. \"I'd have never known you could nearly knock my ass onto the floor with that skinny ass frame of yours.\" Everyone giggled and Jeanna leaned her head on his shoulder. \"Definitely got a good arm on you.\"\n\nBecky had heard us talking and had come out of our room. She saw me and came running down the hall. Tyler hadn't been fast enough to move out of the way and had been shoved aside by her shoulder. She jumped into my arms, letting me spin her around. We shared a kiss and I held onto her as I addressed the rest of the group.\n\n\"What's for dinner?\"\n\nWe had Jeanna's famous spaghetti, which Carl might have actually been more in love with than he was with Jeanna. He had three plates, wolfing it down like a prisoner about to face the electric chair. We talked about what everyone had been up to since I'd been gone, leaving the stressful bullshit aside. There would be plenty of time to deal with that later.\n\nAfter dinner we went and sat in the living room, curling up with our respective spouses while Tyler and Lauren sat in the chairs. The TV was on, but nobody was really watching it, preferring to sit quietly until someone brought up what we were all thinking about.\n\nTime to fix all this mess.\n\n\"So Becky, I take it you and Lauren have worked everything out between you?\" I asked her.\n\n\"We have,\" Lauren said. \"It was rough, but we got down to the heart of the matter and are better for it.\"\n\n\"Yeah,\" Becky added, \"I understand that I freaked out over nothing and have done what I can to fix it. We're all good now.\"\n\n\"So, just so we're clear Lauren, no more sleeping in our bed. If you need to sleep next to someone, go invade Tyler's space.\" The others chuckled while Tyler protested.\n\n\"Why do I have to share my bed?\" He groused.\n\n\"Oh come on,\" Lauren said, \"You're just hoping that I'll share all this,\" she indicated her body with her hands, \"With you.\" The rest of us had a good laugh at that. \n\n\"Carl,\" I said, turning toward him. \"Thanks for knocking some sense into me. With that said, next time I will hit you back. I know how good your medical is, so I'm not worried there.\" He chuckled and nodded.\n\n\"Don't worry, only in extreme cases will I poke the bear,\" he said.\n\n\"Guys, I'm sorry I've been AWOL these last few weeks, I just had to let things settle out here. Y'all had to fix yourselves before I could come back, because I cannot be objective around you guys. I needed space to clear my head...\"\n\n\"And wreck your liver,\" Carl added.\n\n\"...Before I could come back and make sense of this. I hope that, in time, you'll forgive me.\"\n\n\"Of course,\" Jeanna said. \"Though we hate to admit it, you're like the glue that holds us all together.\"\n\n\"Not glue,\" Tyler said, \"he'd eat the glue. More like duct tape.\"\n\nThrough the laughter I reminded him that we were both Marines, and that he would probably beat me to eating it. This caused more laughter. It was good to see everyone laughing again. We talked for a while longer before people started turning in for th night. I stayed up for a while with Becky not wanting to leave my side. We cuddled in silence for a while, holding one another close and enjoying being back together.\n\nTrue, all was not just magically fixed, but some things could wait until tomorrow. Tonight was about a reunion. A reunion of love between my dearest Becky and I. She snuggled into my chest, her head resting in my lap and her hand tracing back and forth along my pants. I wanted so badly to take her, right here and now, damn who would possibly see us. I had other plans, however. Tomorrow I had some errands to run and some minor modifications to make to our bedroom. \n\n***\n\nBecky had gone out with Jeanna to get groceries, a task which I profoundly hated. While they were out I headed into town to find what I needed. A trip to the local hardware store got me an anchor bolt as well as a length of chain to attach to said bolt, which would then be attached to the ceiling. I then went to the only adult store in town.\n\nBeing the only source around to find adult related items, aside from the interwebs, had given them an advantage. They seemed to get quite a bit of business, judging from the lack of many available spaces in their considerable parking lot. I went in and was assisted by a kind young woman who reminded me of Lauren. She showed me where the outfit I was searching for was, assisted me with the appropriate size for Becky, and held it while I picked out a few more things for her. \n\nAll told, I left with the schoolgirl outfit, a few vibrators and one that had a remote control, all for a reasonable price. The lady had been skeptical at first of the person I was buying it all for, until I showed her a picture of Becky.\n\n\"Damn!\" she exclaimed. \"I might have to borrow her some time.\" She gave me a wink and a nudge.\n\nI smiled. I hadn't failed to notice that the Good-Looks-Gods had been kind to her. \"Good luck. If she'll have you, it won't bother me at all.\"\n\n\"Where might I find her?\"\n\n\"Trying to set something up already, huh?\" \n\nShe grinned, her face turning a little toward the red side. \"Just inquiring. You never know what fate has in store.\"\n\nI smiled, though her comment about fate had thrown me off a bit. \"Smokey's.\"\n\n\"What about it?\" She asked.\n\nI said no more on the subject. She was persistent, but I wouldn't divulge anything more. She kept pestering me about it while she helped me find toys that Becky might like.\n\nWhen I was on my way home, I sent a text to Becky, asking how their trip was going. She said they were out doing girl shopping and would be back in time for dinner. I tossed the phone into my cup holder and smiled, cranking the music up louder. My plan was coming to fruition with almost a concerning level of acceptability. I had thought this would take at least the better part of the day to get done, dodging Becky so she had no idea until she went to get changed after dinner, as she usually did. \n\nI got home and found Tyler playing video games. I stopped to watch on my way back to the bedroom, seeing him get mercilessly owned at some first person shooter. He swore as he got killed, his assassin running past him to find the next target. He hadn't heard me come in and I startled him.\n\n\"After three combat tours, I kinda expected better of you.\"\n\n\"Jesus, man,\" he said with a start, leaning back on the couch. \"Scared the hell outta me. Where you been?\"\n\n\"Shopping for Becky. Something special for tonight,\" I said, showing him the bags. His face became a confused mass when he saw the hardware store bag and the unmarked black bags. \n\n\"Where did you say you kept the earplugs?\" He asked.\n\n***\n\nBecky made meatloaf for dinner, not quite as good as Jeanna's cooking, but still fantastic nonetheless. Tyler told us about his upcoming interview at the refinery and Carl and I decided to set some time aside to coach him on what they're looking for. We cleaned up dinner and most people headed off to get comfy for the evening. I watched Becky head toward the room. If the sway of her ass was any indication, she knew I was watching and was hoping I would join her. \n\nIn good time, my dear.\n\nI gave her a few minutes and then went into the room. As I figured, she had taken the outfit and headed into the bathroom. I took the opportunity to get comfortable myself, removing my shirt and exchanging pants for shorts. The bathroom door opened, sending tendrils of light into the room around the shapely shadow of a female body.\n\nIf anyone else in the house was listening, they might have heard my jaw hit the floor. The schoolgirl outfit was the perfect choice, the extra small button up top was tied around her midriff, the lack of a bra all too apparent. The plaid miniskirt was so small that it barely covered her waist, let alone her ass and pussy. She wore a tight pink thong, showing off her ass cheeks when she turned around.\n\n\"Take a picture, it'll last longer,\" she said, sticking her tongue out at me.\n\nI picked my jaw up off the floor, smiling at her as she sauntered over to me. \"You like it?\" Becky asked, throwing her arms over my shoulders. \"I usually wear this for my husband, but he's out of town on business.\"\n\n\"Well, he sure is a lucky man,\" I responded, playing along. \"How he could ever leave you behind is a mystery, but I'm glad he does.\"\n\n\"What're you gonna do with that thing?\" She asked, running a hand down to my crotch. I leaned forward and took her hand, bringing around the pair of handcuffs I had waiting. Her eyes went wide as she realized there was a shift in the status quo.\n\n\"Use you as I see fit.\"\n\nI leaned down and clapped the handcuffs on her wrists, one at a time. She looked at me in shock before smiling at me. I sat her down on the bed, where she would be out of the way for the moment. I ran the chain I had bought up through the anchor bolt and back down between us. She was then attached to the chain so her range of motion was limited.\n\n\"Do you believe in fate, my dear?\" I asked her. She trembled at the sound of my voice, the menace in it, raw and on the surface for her to absorb. She gave a nearly imperceptible nod and a slight whimper, which I took to mean yes. \"Then everything that has happened was meant to happen. It was preordained and everything that has transpired to this point has done so to bring us to this inevitable conclusion.\"\n\nI took in the view before me. Her brown hair flowing down her back, framing her face and stopping just shy of the middle of her back. Her brown eyes shone in the light she had left on and accentuated the sexy schoolgirl outfit she wore. I had picked it out at an adult store a few hours prior, laying it out for her along with her favorite knee high boots and a very enticing letter. She had read the letter and had been getting dressed when I had come in. Just a bit too early. I leaned forward and kissed her lovingly.\n\nThat kiss melted away all her reservations. She knew beyond a shadow of a doubt that I'd never hurt her intentionally, but this was something new to her. I broke the kiss and circled around her, taking in the sight of her body wrapped in a schoolgirl outfit. When I came back to the front of her, I saw in her eyes that she was plotting revenge for this stunt.\n\nBring it.\n\n\"You've been a very bad girl, haven't you?\"\n\n\"Yes, sir.\"\n\n\"You need discipline, don't you?\"\n\n\"I do, sir.\"\n\n\"Good, don't go anywhere,\" I said, turning and heading into the bathroom. I grabbed my leather shaving strop and came back, seeing the look of lusty concern in her eyes. I twirled a finger, indicating she was to turn around. She did, bending over and knowing what was coming. I walked up behind her, placing a hand on one of her firm ass cheeks and giving it a squeeze. I ran my hand back and forth between them and leaned down next to her ear.\n\n\"Do you think you deserve a spanking?\"\n\nShe inhaled sharply, just the thought making her move involuntarily. \"Yes, sir. I've been real naughty.\" I gave her a light smack with the strop, her back arching at the unexpected blow. \"Yes, please!\" Another light smack came before I replaced my hand, massaging her ass gently. \"I've been so bad, I need to be punished.\"\n\n\"Yes, you have been,\" I said, giving her another smack. \"You must recognize your failing,\" smack, \"and be sure to correct it.\"\n\n\"I will sir,\" she whimpered, \"please.\" I rubbed her ass again with my hand, running my finger down to check the condition of her womanhood. Soaked would be an understatement. If this was any indication, I'd need a rain slicker and possibly an Ark to get through this.",
        "\"Yes, baby,\" she moaned as she felt my finger exploring. \"I'm so wet for you.\"\n\n\"I can tell, slut.\" I smacked her again with the strop. She jerked a bit, expecting another smack. I tossed it on the bed and reached around her, untying the tiny fabric that was supposed to be a shirt and exposing her beautiful tits. I massaged her nipples, making sure they were hard enough to cut glass with. She wiggled her ass against me, feeling my swollen cock as it tried to rip through the fabric it was contained in. \n\n\"Please, sir,\" she begged softly. \"Please give it to me.\"\n\n\"You think you deserve this?\" I asked, standing her up and turning her toward me. I dropped my shorts, letting my hardness stand at attention for her. She gasped and licked her lips, the lust nearly dripping off of her. Three weeks of pent up sexual tension was about to burst out of her. I was starting to wonder if she was going to break the handcuffs and maul me for my cock. She dropped to her knees and looked at me with those gorgeous eyes.\n\n\"Fuck my mouth,\" she said haughtily. \"Use my mouth like my pussy, please.\"\n\nI did.\n\nShe opened her mouth, letting me slide myself down her moist throat. She worked her magic, swirling and sucking, slurping and gagging on my member. She worked it like she hadn't eaten in a year, attacking it with all the gusto her current position granted her. She seemed intent on me cumming right here and now, but we had a ways to go before we got to that point.\n\nI worked myself back and forth, using her mouth like she had wanted. Like she deserved. She moaned and hummed around my cock, trying to get her hands down far enough to rub her pussy while we worked. When I was getting close I pulled myself out of her, backing up as she tried to lean forward far enough to get me back in her mouth. \n\n\"Please, keep going baby,\" she begged.\n\n\"Stand,\" I commanded. She did as she was told, awaiting her next instructions. I motioned for her to turn around and bend over the bed. She complied and turned her head to look back at me. Moving behind her, I knelt down and ran my fingers along the thin material of her thong, feeling how wet she was. I could have rang the garment out and filled a shot glass.\n\n\"Do you want me to lick you?\" I asked her. She was breathing heavily and nodded vigorously at my suggestion. I snaked my tongue out and licked along the silken fabric, she arched her back and moaned at the feeling of my mouth. I gave her a few more licks before I pulled the thong aside and went to work.\n\nFrom top to bottom and everywhere in between, my tongue worked like lightning. I lashed her clit a few times before plunging it into her depths and making her squeal. She worked her legs as far apart as she could, hoping to get me deeper into her. I kept it up a few moments longer before turning and sitting down, bringing her pussy down onto my face. I sucked her clit while inserting two fingers. She bucked wildly and cried out, cumming almost instantly, her exquisite juices flowing down my face. \n\n\"Fuck me baby, please,\" she begged as her legs trembled. \"I fucking need you.\"\n\nHow could I turn her down?\n\nI stood and rubbed my throbbing member across her swollen lips. She arched her back and moaned, her desire off the scale. I flipped the tiny skirt up onto her back and pulled the thong down to her knees, guiding my cock into her waiting pussy before she had a chance to move. She squeaked and threw her head back, her muscles clamping down around me. \n\nThere was no need to be gentle. She was soaked, so I wasn't going to hurt her and I began pounding her. She moaned loudly, gripping the sheets as I took her. We had forgotten all about the others in the house, lost in our own bit of paradise. I heard something hit the wall and started laughing, slowing my rhythm and making Becky give me a death stare. \n\nWhen I saw the look, I smacked her ass with my hand and rammed my dick home again and again, causing her to scream out and bury her head in the mattress. I felt her insides flutter as she approached another climax, her moans and cries growing to match. Her pussy clamped down on my cock as she came again. \n\nI rolled her onto her back, removing her thong and lifting her legs vertically. I reinserted myself as her body shuddered beneath me. I hit it faster and faster, determined to cum with her this time. I would not be disappointed. Her muscles contracted and it was just enough to send me over the edge. I pumped her full of my essence, filling her up and groaning as we shared in the mutual release. \n\nWe laid there for a long moment, her body still shuddered with aftershocks and her pussy dripped with globs of my cum. I stood her up and secured the chain so she was stuck in this position, her legs trembling beneath her. She panted hard as she recovered from her latest orgasm. She was tired, judging from her lack of speech or other such noises. I checked the clock and decided she had had enough.\n\n\"Are you going to behave?\" I asked her, standing behind her and caressing her wonderful breasts. She didn't say anything, just gave a sharp nod. I kissed her neck, working my way along her jaw line to her lips. She kissed me passionately in return, a further indication that she had gotten the point I wished her to see.\n\nShe had earned her reprieve, that much was true. She had been a more than willing participant in this little stunt I pulled, but I still worried what would come when she was turned loose. I moved to the nightstand, opening the top drawer and grabbing my most precious possession. I walked back over to Becky, standing in front of her and stared deep into her eyes, so full of love and barely contained power. I had no doubt she would get back at me for this, but it had to be done. \n\nI kissed her hard, letting all the passion I could muster flow through us. She melted into the kiss, returning it with gusto herself. If her hands had been free, she would have thrown her arms around me, though I doubt after the punishment her ass and pussy took that she would be horny again anytime tonight. \n\n\"I love you,\" I said. \"I hope the last hour or so has provided you pleasure, as well as a fraction of the pain I felt. I know you're already plotting something to get back at me.\" She nodded her head up and down vigorously. \"And all I can say is, bring it on babe.\" I reached up and slid the wedding band she had thrown at me back onto her finger, a symbol of my words to her that night our worlds nearly disintegrated. They rang in my head now as clearly as they had when I had spoke them.\n\n\"You may have quit on us, but I won't quit on us, I won't quit on you, even if you quit on yourself.\"\n\nShe smiled at me, the smile I had known and loved since I truly saw it that first night. Now that things had changed, I felt lost in a strange limbo of sorts. It took no time to readjust to her smile, that smile that could bring me to my knees, and wonder how I was even worthy to trod the same ground as her. The other side of it though, was one of betrayal. She had given up, and I had been trained over the years to reject that kind of failure. She did have several things going for her, to counter the more morose of the feelings, all of which involved sexual practices. \n\n\"I love you too,\" she responded. \"I'm not sure I fully understand why you whipped my ass, but since I'm leaking you out of me again, I can't complain too much. Let me down now?\" She asked calmly, \"My arms are going numb.\"\n\nI smiled at her, kissing her deeply. \"You can wait another few minutes.\" I turned on some music and walked from the room, towel wrapped around my waist, headed for the guest shower. I sung along softly, her curses echoing down the empty hallway behind me. \n\nNow you say it best, when you say nothing at all.\n\n\u2014\u2014\n\n\"Jesus,\" Tyler said as Becky and I walked out from the room. \"Did you really have to do that right now? I just got done eating, my food hadn't even finished settling when you two started your little tryst.\"\n\nBecky was positively glowing. \"Awh, did we wreck your after dinner rest?\" She asked with a smile. \"I thought you Jarheads could handle anything.\"\n\n\"It's not that,\" Tyler replied. \"I just don't wanna hear you two mauling each other.\"\n\n\"Jealous much?\" Lauren asked, smiling at Tyler.\n\n\"Kinda, though it's not like I can't go find some tail somewhere.\"\n\nLauren put her hand on her chin, looking deep in thought. \"There must be some poor woman who you haven't pulled the old 'dine and dash' on.\" \n\nWe all had a good laugh at his expense, but I happened to notice the look they were giving each other. What an interesting development. Could there be something that happened while I was gone that nobody mentioned? Possibly, or it's that nobody else knows...\n\n\"So, when is that interview of yours?\" I asked Tyler, sitting next in one of the chairs. Becky sat on top of me and, ever so subtly, rocked her hips back and forth. \n\n\"Monday morning,\" Tyler said. \"That leaves tomorrow for any coaching.\"\n\n\"Very well. Sage advice comes tomorrow, then you get the job.\"\n\n\"You seem so sure,\" Tyler said. \"How can you know?\"\n\n\"I don't. What I do know is that you have an impressive record, you understand the value of safety and you're a hard worker. I also happen to know a few people on the interview panel and have mentioned you to them.\"\n\n\"Great, so there's no pressure.\"\n\n\"Cheer up,\" Carl said. \"With an attitude like that, you'll never get hired. Just be yourself and everything will fall into place.\"\n\n\"I wish I shared your confidence,\" Tyler said. \"I think I need a drink. Who's up for Smokey's?\"\n\nWithout a word, five people stood and headed for the door, grabbing coats on the way out.\n\n\u2014\u2014\n\nIt sure felt good to be back. Becky played darts with the regulars, taking them for their money with that million dollar smile plastered to her face. Carl and Jeanna shot pool, occasionally joined by Tyler or myself, when we weren't seated at our table. People moved to and from the stage, taking turns singing karaoke and butchering songs both new and old. I had been drinking fairly heavily and was having fun watching Becky wind up and throw darks across the room. When she tossed, her tits and ass wiggled a little, which was probably making more people than just me quite happy.\n\nCarl came back and ordered us another round, taking one to Jeanna and leaving an extra one for me to take to Becky. I saw an opportunity to up her game and fuck with people in the process. She had been playing darts with a new face who had been paying as much attention to her ass as the dart board. I nudged Tyler and indicated with my head to look in her direction. He saw what was happening and looked at me, smiling.\n\n\"Are you gonna be an asshole?\" Tyler asked.\n\n\"Of course,\" I replied. \"When am I not?\"\n\nI finished my drink and grabbed the one Carl had left for Becky. She wouldn't know what was coming, but was amazing at improv and would see where I was taking this. I walked over and sat at a high top table next to them. Becky was focused on her game, paying me no never mind, while the guy she was playing took notice of me, probably worried that I was moving in on his game.\n\n\"I play winner,\" I said, bringing myself into the group.\n\n\"Whatever,\" the guy said. He stepped up and threw his darts. Becky looked at me and I winked, the only signal I could give her.\n\n\"Dammit,\" he said as his shots went wide. Becky stepped up and threw three bulls eyes. The new guy admitted defeat and took my place. I stepped up and smiled to Becky.\n\n\"Loser buys?\" I asked.\n\n\"Deal,\" she said, shaking on it. \"I hope you got money, because I'm thirsty.\"\n\n\"Whatever,\" I retorted smugly. \"Whiskey sour, so you can tell the barkeep.\"\n\nI threw first, missing the center wildly. Becky followed, a dead eye as always. This pattern repeated until I lost. Becky smiled and gave me her drink order as the new guy stepped up.\n\n\"Same deal?\" Becky asked him.\n\n\"Sure, though I'd buy you a drink anyway.\" I smiled at his attempt, pathetic as it was.\n\n\"You're sweet, but you have to throw 'em straight first.\" Becky said, indicating he should go. He threw like me, and Becky was a master. He didn't seem to mind having to buy a drink for her, and I knew she wouldn't mind getting a free drink. Win for me, but this was the moment I crushed his soul.\n\n\"Alright, new bet,\" I told her. \"Loser has to do whatever the winner says, within th law. No streaking or anything like that.\"\n\n\"Totally done!\" Becky said. \"Do you want to go first, or should I just whip you now and get it over with?\"\n\n\"Ladies first.\" Becky never took her eyes off me, throwing her darts and getting two out of three in the center. I knew I had lost this match before I even walked over here, but this would be worth it. Two of my darts hit the board, the third went into the wall next to the circular board.\n\n\"Ouch, this might be a new record for fastest win,\" Becky mocked, tossing her darts again without looking at her target, scoring winning hits. I threw just to throw, but I didn't have a snowballs chance in hell.\n\n\"Alright, now what should I have you do?\" Becky mused, looking him up and down. The new guy was looking impatient, obviously wanting to try his luck so he could exploit the situation. \"I know, kiss me.\" I looked at her strangely, like this was an odd request. \"What? Do I have cooties or something?\"\n\n\"No no,\" I played, \"I just... well... okay.\" I stepped in and gave her an amazing kiss, if I do say so myself. I could barely see the other guy out of the corner of my eye, his jaw on the floor. Becky and I kissed long and hard while he looked on in complete jealousy. When we finally broke the kiss, she looked at me and was a bit flushed.\n\n\"Wow, that was... wow. Wanna get out of here?\" I presented my arm for her to take and, together, we headed for the door. She leaned her head on my shoulder and whispered to me. \"You not only owe me drinks, but I need taken care of.\"\n\n\"Now?\"\n\n\"Now. I've been without you for three weeks, I fucking want you.\" We headed for the truck, climbing in and handing my phone to her.\n\n\"Text Carl and Tyler and tell them we'll be back for them in a bit?\"\n\n\"I'll do you one better,\" Becky said. She typed out something and put my phone in the cup holder. \"I told Jeanna.\"\n\n***\n\nBecky was laid out on the hood of my truck, the warmth from the running engine helping to stave off the frigid night. We had pulled off the main road and parked in the darkness along a little used service road, killing the lights. Any passing cars would have no idea we were here, unless they slowed enough to hear my truck running. I had pulled her pants down around her ankles, fitting myself between them and her upper body while I lapped at her pink folds. \n\nShe moaned and writhed beneath me, one hand pulling my head deeper into her while the other rested behind her head. I had been at it for a few minutes, and knew I only had a few more before the cold outweighed the pleasure. Challenge accepted. I plunged my tongue inside her as far as I could get it, receiving a cry of joy in response. When I extricated it, I replaced my tongue with two fingers. She arched her back, hissing in pleasure.\n\n\"Right there, that's it!\" She hissed, her hips bucking as I sucked on her clit. She rocked back and forth against my face and then arched her back high, crying out into the cold darkness. \"FUCK!\"\n\nWhen she came back to the world of the living, she smiled at me. I had extricated myself from between her legs and was smiling at her. She was flushed, her hair a disheveled mess and that award winning smile glued to her. Her eyes radiated desire in the moonlight that filtered through the trees and I could see that, despite my best efforts, she wasn't done yet.\n\nShe dropped off the hood and held up a hand, indicating I should wait where I was. She went to the back seat, removing a blanket she knew I kept back there and bringing it back to the front. She spread the blanket out on the cold ground, careful to avoid the few patches of snow that hadn't melted in the sunlight during the day. She knelt down and opened her mouth. I needed no other goading.\n\nPants down around my thighs, I let my fiancee work her magic. And magic it was. Her lips moved with measured purpose, sliding carefully up and down my shaft while her tongue swirled and wrapped around me. She knew exactly how to get me going, and how long I would last like this. \n\nShe had a similar problem that I had faced earlier. She was competing against the clock, trying to bring me to climax before the cold became too much for my exposed skin. She seemed to take up the challenge, much like I had. She worked me with equal skill and lusty fervor, bringing me to the brink in mere minutes. She had plenty of practice since we'd been together, and boy, did it show.\n\nShe looked up at me, her eyes reflecting the moonlight. It sent me over the edge. She took me to the hilt as my seed painted her throat, swallowing all I gave her. When I had finished giving her what she wanted, she stood and collected the blanket. I fixed my trousers and we loaded back up in the truck and headed back to Smokey's.\n\nTyler was outside smoking with a small group of people when we arrived, one of which was the guy Becky and I had been playing darts with earlier. The look he gave us as we walked back toward the bar, hand in hand, was one of anger and disappointment. He had no idea that he hadn't, in fact, been cheated, but was part of an inside joke that Becky and I had staged for the benefit of ourselves and our group. Tyler had to keep from laughing when he saw the look the man was giving me.\n\n\"Hey darlin',\" the man said as we passed, hands still locked together. \"Wanna play another round of darts?\"\n\nBecky gave him a genuine smile. \"No thanks, hun. I think I'm gonna go have the drink that he owes me.\"\n\n\"I owe you one too,\" he called after us as I opened the door for her. \"What would you like?\"\n\nBecky turned back to him. \"Have a tequila sunrise sent over.\" She gave him another smile and turned to walk with me back to our table. Once she was sitting with Carl and Jeanna, I went to join Tyler outside. I still had an opportunity to mess with this guy, as long as Tyler didn't become the unicorn killer of the night.\n\nI lit a smoke and patted Tyler on the shoulder. He smiled and nodded, partly a greeting and partly an indication of where the guy was. He may not have been completely in on what I had planned, but he had seen the man trying to hit on Becky and knew that jealousy mixed with alcohol can be a violent reaction.\n\n\"What's up Drew?\" Tyler asked. \"Where'd you guys go?\"\n\n\"Down the old mill service road,\" I told him. \"Man, she's a freak!\"\n\nTyler smiled, then laughed a little at something behind him. He must have seen the man's reaction change at my words that I had said more loudly than I normally would have. It was all I could do to drop hints to him. \"Nice,\" he said, giving me a fist bump. \"Gonna take her home?\"\n\n\"If she'll let me. Shouldn't be too much trouble, given that she seems to be an eager drinker.\"\n\n\"Well, I hope it works out. She sure is cute. What'd you guys do out there?\"\n\nI smiled as the man came around and sat on one of the benches by the door. He tried not to stare at us, but it was hard to do when he faced us. \"Laid her on the hood and tasted her, then she returned the favor.\" I gave Tyler a smile. \"Even if I don't take her home, whoever she goes home with will be kissing my dick by proxy.\" Tyler laughed then stopped for a minute, looking up and lost in thought. \"What?\" I asked him.\n\n\"Just wondering how many women I've taken home who did exactly what you just did.\" We both started laughing hard, doubling over and nearly falling down. I looked over at the man who had been playing darts with us. He looked at us like we were idiots, as most would if they saw us just laughing. Unfortunately for him, there was no way he hadn't heard our exchange and any plans he had of taking Becky out from under me and taking her home were dashed when he heard that. ",
        "He stood, tossing his cigarette into the butt can and walked inside. He wore a look of defeat on his face as he turned from us, barely visible from the side as the door shut behind him. Tyler and I started laughing again.\n\n\"What was that about?\" Tyler asked as we calmed our laughter. \n\n\"He was hitting on Becky when they were shooting darts. I went and 'stole' her out from under him, then we went for our drive and, well, you know the rest.\"\n\n\"I figured something was up when you were talking so loud,\" Tyler remarked. \"I just thought I'd play along and ask about it later.\"\n\n\"Good man, not being a unicorn killer.\" I clapped him on the shoulder and headed back inside. What I saw rooted me to the spot.\n\nThe man had gone and gotten Becky her drink, however he hadn't had it sent over. He brought it himself, and had thrown it at her. She was drenched, a look of pure confusion and outrage on her face while Carl had stood and was moving swiftly around the table. I started forward, seeing more people coming over as well. One of which was Keith, a good friend who stood easily a head taller than me and built like a refrigerator. He looked mad, about as mad as Carl looked and, I suspected, I did too.\n\nKeith made it to the table in a few quick bounds, getting to the assailant moments after Carl had. The two of them grabbed the man and began hauling him outside. My first instinct was to dropkick the bastard while my friends held him, but that would be cheap. Instead I followed them outside, with Becky and Jeanna right behind me. Tyler was coming through the door when he saw Keith and Carl coming at him like a freight train. Smartly, he held the door open for them.\n\nOnce outside, Keith and Carl tossed the man forward, letting him trip and fall forward onto his face before rolling onto his back. He stood up and looked at the assembled crowd, casting a venomous look at me. \"You,\" he said, pointing at me. \"Fuck you. I heard everything you said about her when you got back and she had gone inside. You're nothing but a low life douchebag.\"\n\n\"Did you enjoy that?\" I asked him. \"I thought it was well done, though I probably could have played it better if I had a bit more time.\"\n\n\"What the fuck are you talking about?\"\n\n\"It was all a joke,\" I told him. \"Well, all except what we did when we left here. That much was true and real.\" He looked at me like I had a dick growing out of my forehead. \"I've already locked her down, bro. She's my fiancee.\"\n\nBecky came out, walking right past our group and heading for my truck. She grabbed the blanket and wrapped it around herself before coming over to where we were. She walked right up to him and slapped him across the face. The smacking sound echoed in the darkness and was followed by a chorus of sound from the crowd. He raised his hand to hit her back.\n\nIt was the worst possible thing he could do.\n\nKeith was the first to respond, by virtue of being on the proper side. He grabbed the incoming fist and held it tight, his grip tight judging by the pain contorting the man's face. He looked at Keith, then looked at me as I came forward. I stared at him, seeing the fear in his eyes. He had to know that this wouldn't end well for him, but I can't imagine he thought it would end like this. \n\n\"You know,\" I said calmly. \"This wasn't going to end well for you. The only way this would end well is if you had just sent her the drink. Instead, you decided to throw it on her. Then, when brought out here, she responds with a slap and you were going to hit her.\" I let this sink in for a second before speaking again. \"Now, since you didn't actually strike her, I'll be lenient. Unfortunately, you won't get out of this easily.\"\n\nOne punch. It was all I could do to contain my rage and limit myself to one punch. This piece of shit was about to strike my Becky and I wanted to do far more damage than one punch could do. His jaw made a sickening crack as my fist connected, which was Keith's cue to release the man's hand. He fell to the ground, slowly writhing in pain. When he didn't get up right away, the crowd moved off, heading back into the warmth of the bar. Only our group and Keith still stood outside.\n\n\"Thanks for the assist,\" I said to Keith. \"He would have regretted hitting her more than he currently does if his blow had connected. Thanks for stepping in.\"\n\n\"No problem,\" Keith said, his tone resuming his normal, jovial tone. \"Becky is like a sister to me and I won' let anyone hurt her if I can help it.\" He turned to Becky, who was wrapped in the blanket and in Jeanna's arms. \"You girls okay?\"\n\nBecky nodded. \"Thanks, Keith.\"\n\n\"No problem, sis. If he comes back, he'll remember what happened and hopefully won't make the same mistake twice.\"\n\n\"One can only hope,\" Tyler said, turning to me. \"We should get going. I'm sure Becky is cold and I'm not sure how welcome we will be in there tonight.\" I nodded and shook Keith's massive hand before turning toward the truck. We piled in and headed home, with Becky shivering all the way there.\n\n***\n\nThe following day was Tyler's interview. We had sat up the night before, talking about what he should say and what points he should hit to present his strongest self for the interview. I was the only one up when he got up to leave. He was dressed nicely, wearing slacks and a nice button up shirt. He looked nervous as he sat down to join me for coffee, and I did what I could to alleviate his nervousness.\n\n\"Tyler, straighten up and walk tall. After all we've been through, three combat deployments and an innumerable amount of ammo expended by the enemy to kill you, you're intimidated by the HR department?\"\n\n\"Well, this is the first step on the rest of my life's journey,\" he responded. \"I don't want to start things off by not getting this job.\"\n\n\"Look, I've seen some of the people who have gotten hired. Let's just say that I'm surprised their actually considered sentient beings. With your experience and abilities, you'll do just fine.\" He saw Tyler smile a bit. \"Remember, safety, safety, safety.\"\n\n\"Got it, talk about strengths and safety, emphasize military service and answer their questions as honestly as possible.\"\n\n\"Good lad,\" I said, placing a hand on his shoulder. \"You'll do fine.\"\n\nIt was shortly before lunch when Tyler returned. He walked inside, hanging up his coat and heading straight for his room. Poor bastard looked like someone just kicked his dog out of a car window on the freeway. I'd never seen him looking that downcast before and asked him how his interview went.\n\n\"I need a fucking drink.\" Tyler went to the liquor cabinet, grabbing a bottle of vodka and taking it down the hall to his room. This was bad, very, very bad.\n\nThat evening we went back to Smokey's. We grabbed our usual table, putting our things down and getting drinks before we headed off to do our own things. Tyler sat at the table, pounding down drink after drink like a man on a mission. I bought us another round and sat next to him, hoping he would say something, anything, about what had happened. He simply handed me a twenty to buy the next few rounds with.\n\n\"What happened today?\" I asked, bringing the next round over to the table. He ignored me, drinking deep of the whiskey I had brought him. When he had finished his drink, far ahead of me, he rose to get another and nearly toppled over. I moved to steady him and he shot me a dangerous look. Tonight would be a rough one.\n\nWhen he went to the restroom, I went and talked with the bartender. I didn't need to try too hard for her to switch out the whiskey for something a bit lighter. She could see how messed up he was getting and knew it could only get worse from here.\n\nThe group had gathered at the table, chatting, drinking and flirting. Lauren was looking at Tyler with obvious concern and when I caught her eye I nodded my understanding. Tyler stood with the last bit of a drink and raised his glass.\n\n\"A toast,\" he slurred, swaying as he stood. \"To a successful interview!\" We raised our glasses, looking to each other to gauge the mood. Was he joking, serious or just completely wasted? He threw back the last of his drink and started laughing, sitting down and bending double. He gripped his side and was hit by a coughing fit. When he regained himself he looked from person to person, seeing our confused faces and smiled.\n\nD'you know how long it took to become that sad?\" he slurred. \"You guys fell for it hook, line and sinker.\"\n\n\"Wait, you mean your interview went well?\" Carl asked.\n\n\"Of course. Easiest interview I've ever had.\"\n\n\"You little bastard,\" Lauren said with a smile. \"And all the sad drinking?\"\n\n\"A simple ruse,\" Tyler replied, his eyes fluttering as he tried to focus on the real image. \"Not that I mind all the alcohol, I had to sacrifice my liver and sobriety tonight so as to pull this off.\"\n\n\"Fuck,\" I said softly. \"You got me.\"\n\n\"You're not going to throw a drink on him and have Keith haul you outside now, are you?\" Becky asked with a smile.\n\n\"Wasn't planning on it,\" I replied, smiling back at her. \"I would rather throw a drink down my throat and then haul Tyler outside.\" Everyone shared a laugh, turning their eyes back to Tyler. That asshole had pulled the wool over our eyes and got us good. \"You'll have to tell us all about it when we get home.\"\n\n\"If he's conscious,\" Jeanna remarked. \"The rate he's been drinking, he won't make it through another hour.\"\n\nCarl got up and got us another round, all of us except Tyler, who got a water.\n\n***\n\nThe next morning Tyler told us about his interview. He made it sound like it was a great success, with the interview panel basically eating out of his hand. If he was telling the truth, he was sure to get hired, unless he had something crazy in his background check. We were all excited for him, though Lauren was, by far, the most excited. It was a little uncharacteristic, but who was I to judge? It was another two weeks until he heard from them. He went outside to take the call, coming in looking sullen and downcast.\n\n\"Oh no,\" I said quickly. \"You're not fooling me this time.\" His sadness melted away instantly.\n\n\"Damn. How'd you know?\"\n\n\"Easy. You tipped your hand when you told us how well the interview went. Now I don't believe they didn't hire you.\"\n\nHis smile stretched ear to ear. \"Fuck yeah, they hired me! We're now officially coworkers!\"\n\n\"Hold it there, turbo,\" Carl said. \"We work at the same place, but maybe not in the same unit. They won't place you until your class is almost done.\"\n\n\"So fucking what?\" Tyler asked. \"I work with you guys now, that's enough for me.\"\n\n\"I know, I'm just saying.\"\n\n\"Don't try and bring me down,\" Tyler admonished. \"I'm riding the high right now!\"\n\n\"Fine,\" Carl said, throwing up his hands in defeat. \"Have your moment. It'll be good to have you working there.\"\n\n\"I suppose you'll want to go for drinks tonight?\" I asked.\n\n\"Duh,\" Tyler said. \"When do I not?\"\n\n\"Point taken.\" I couldn't help but smile. Things had not only gone back to normal, they had gotten better than they had been in a long time. Lauren seemed to be out of her funk, though I still had yet to get the full report. Tyler had gotten a job with us at the refinery, Carl and Jeanna were planning their wedding and Becky and I were back together again.\n\nThen January came around.\n\n***\n\nI received the notice in the mail, confirming my Department of Defense Short Term Contractor status effective 15 January, on the first of the month. To say that Becky wasn't happy would be to say that Montgomery made a minor tactical misjudgment with Operation Market-Garden. When she saw the letter, she flew into a rage.\n\n\"What the fuck! Why do you still have to go?\" She was in the kitchen, holding the letter and shaking it at me like I was a child who brought home a bad report card. \"I just got you back and now you're leaving again?\"\n\n\"I have to go, babe,\" I said more calmly than I felt. \"It was part of the deal.\"\n\n\"Damn your deal. Ryan coming out here was a disaster and you shouldn't be held to it.\"\n\n\"What happened while Ryan was here has no bearing on the deal. Just because he was here for a day and fucked our world up doesn't excuse me from my obligation.\"\n\nBecky was fuming, though in her eyes she knew I was right. \"That motherfucker came out here and wrecked our shit. If he hadn't broken up with Lauren then we wouldn't have had our fight.\"\n\n\"I know, babe,\" I moved around the kitchen island and took her in my arms. \"I know how upset you are with him and I can feel that if he came here again, you'd fuck him up. I'm pretty mad at him too, but that doesn't change my obligation to Captain Varren.\" She rested her head on my shoulder. \"I'll be taking vacation for this. 14 days of vacation. I'll be gone for about a week, probably running them through basic combat tactics, then I'll be coming home. We'll still have a week to be together before I have to go to work.\"\n\nShe looked up and smiled at me. \"What did you have in mind for that week?\"\n\nI smiled back at her, running my hands up and down her back a few times before letting them settle on her perfect butt. \"Oh,\" I squeezed her wonderful cheeks, \"I can think of a few things.\"\n\n***\n\n\"Staff Sergeant Anderson,\" Captain Varren said, setting down the paperwork he held. \"Good to see you again.\" He was a burly man who, despite his age, kept an impressive figure. The man was a walking advertisement for GNC and pre-workout products everywhere. His hair was thinning and grey, kept regulation short. His eyes consistently burned with an inner fury that could be channeled against an enemy in an instant.\n\n\"Captain Varren,\" I replied, setting my bag down on a chair in his office. \"Good to see you too. Got a room for an old vagrant?\"\n\nThe Captain smiled, standing and coming to shake my hand. \"I think I can find a spot for you for a few days. You sure you don't want a hotel room? Be more private, away from the insanity of the barracks as well as the junior enlisted.\"\n\n\"I appreciate it, but I'll stay here, sir.\" I said. \"It's easier to stay here rather than worry about trying to get on base in the mornings.\"\n\n\"Very well,\" he said, smiling. \"Here is your paperwork for CIF, draw your gear and get some rest. Tomorrow we start training, 0800 at the Horno MOUT town.\"\n\n\"What will the subject matter be, sir?\"\n\n\"Building clearing, insurgent searches and detentions.\"\n\nI nodded. \"I'll see you there, sir.\"\n\nLeaving his office, I stopped in to see First Sergeant Hayes. I knocked on his door and entered, seeing Weird Al's doppleganger sitting behind his desk. He looked up with some anger in his eyes, having not given me permission to enter. He smiled when he saw my face. \"Anderson, how the hell have you been?\"\n\n\"Good, First Sergeant. It's good to see you.\" I sat down in a chair. \"How's the family?\"\n\n\"They're well. My youngest just started first grade and the oldest is in third. How's Becky?\"\n\n\"Angry,\" I replied. \"She wasn't happy at all that I had to come here, but I'll make it up to her when I get home.\"\n\n\"Sorry to hear that. What can I do for you?\"\n\nI need a room, First Sergeant. Mind if I get a key for a few days?\"\n\n\"Wait one,\" Hayes said, picking up his phone. He dialed and spoke to the voice on the other end. \"Sir, Anderson needs a room, any objections? Yes, sir.\" He hung up the phone and stood, crossing to a lock box on the wall. He opened it with a key and grabbed a gold key from it labeled 232. \"Here you go,\" Hayes said, handing me the key. \"Are you sure you don't want a hotel? The barracks can get quite rowdy after hours.\"\n\n\"I'll be okay here, First Sergeant. It's only for a few days.\"\n\n\"Whatever you say. If you need anything else, you know where to find us.\"\n\n\"Thanks, First Sergeant,\" I said, shaking his hand. \"See you tomorrow.\"\n\nI left the Battery Office, heading up the stairs to my temporary room. It was just as I had remembered, with beige walls, light blue metal wall lockers and three metal beds with uncomfortable mattresses. Two of the beds were stacked into bunk beds while the final one sat across the room alone. I put my bag down on the single bed and sat down. I had spent many years in these barracks and being here, now, brought back all kinds of memories. \n\nI pulled out my phone and dialed Becky. She had been texting me and I had been responding when I could. She answered and we talked for a while, discussing my trip and the upcoming plan for the training I had to conduct. It was still early and the other Marines were still working, so we talked about whatever came to mind. Becky had spent the morning with Jeanna as they planned their weddings. \n\n\"What do you think about color schemes for the wedding?\" Becky asked.\n\n\"Babe, all I care about is the wedding cake.\"\n\nBecky chuckled and, though I couldn't see her, I knew she was shaking her head. \"Just the cake, not what you're going to wear?\"\n\n\"I'm wearing my dress blues,\" I responded. I thought it was pretty obvious, though apparently it wasn't. \"What did you think I was gonna wear?\"\n\n\"I figured you'd wear them, I just wanted to hear you say it.\" There was a smile in her tone. \"I do love the way you look in that uniform.\"\n\n\"Does it turn you on?\" I asked.\n\n\"Of course. What woman doesn't get wet around a man in uniform?\"\n\nI laughed. \"True. I can't wait to see you in your dress. Have you picked it out yet?\"\n\n\"Not yet. We're going to look at dresses tomorrow. I'm planning on getting one for the ceremony and one for the reception. Do you have a problem with that?\"\n\n\"No, but why would you want two dresses?\"\n\n\"The one for the reception will be more of a cocktail dress,\" she explained. \"It'll fit me better and weigh a lot less than the ceremonial dress. Plus, it'll be easier for you to take off of me later.\"\n\nI smiled and we talked for a bit longer before I heard voices coming from outside. I said goodbye and told her I would talk to her later. I grabbed my paperwork and went down to the rental car, heading across base to the Central Issue Facility.\n\n***\n\n\"Stop!\" I called, stopping the drill. It had been three days and these guys still weren't getting it. \"Tyler, Ryan, Wirth, come here.\" The three men came up and stood before me. \"Show them how to properly breach and clear.\"\n\n\"Aye Aye, Staff Sergeant,\" they replied and stacked at the door. Tyler in front, then Wirth and Ryan bringing up the rear. Ryan squeezed Wirth's shoulder, who, in turn, squeezed Tyler's shoulder indicating ready. Tyler then moved in front of the door, turning his back to it and giving it a hard kick. The door burst open as Wirth and Ryan moved inside. Wirth went left, securing the area while Ryan moved to the right. Tyler followed them in and went straight in the middle. Each called clear as they moved to the anterooms, clearing them as well before calling \"All clear!\" \n\nI watched through the window, seeing them move with practiced efficiency as they had on our last deployment. The more junior Marines watched as well, hopefully learning what they had, until now, failed to grasp. Some people would watch them perform this task and think it was good enough, but I knew better. Earlier I had heard several people grousing about running \"the same, stupid drills over and over.\" I shut it down quickly.\n\n\"Have you ever cleared houses in country?\" I asked an obviously junior Corporal. \"When was your last deployment?\"\n\n\"Ive never deployed, Staff Sergeant,\" he said, knowing an ass chewing was coming. \"I'm only asking because we've gotten the gist of what is required.\"\n\n\"As someone who has been on three tours, I can tell you from experience that downrange is no place to be honing these skills. Over there, the enemy will have the advantage when you use too little force to kick or hit a door and don't get it open on the first try. They'll blast right through the door and send you home in a pine box.\" The Corporal nodded, knowing he didn't have a leg to stand on. \"Learn as much as you can now, that way when you need these skills overseas, they're already ingrained in your muscle memory.\"",
        "\"Yes, Staff Sergeant. I see what you're saying.\"\n\nNow, the junior enlisted ran the drill again. We moved to a different building, with a different layout and different risks within. The drill would be run again and again, until I was satisfied. Captain Varren had given me authority to determine when to move on from this task. Those who performed well were sent on to another area, where Gunny Sanchez taught them about prisoner detention and search methods, another necessary skill to know.\n\nBy the end of the day, everyone was confident at clearing houses and had moved to work with Gunny. I took the time to set up for the final task the following day. Tomorrow was the final day of training here and would be the final test of everything these young men had been taught. I was working with contractors who were delivering the paint rounds for the life fire exercise tomorrow morning. Their rifles would be modified to take a 5.56 paint round, as opposed to live ammunition, allowing the Marines to shoot each other without inflicting lasting harm. Even though they were modified paintballs, they still hurt like a sonuvabitch.\n\nThe final day went well, all things considered. There were hiccups, as was expected, but the training was an overall success. Once we had returned to the barracks for the night, I sent Becky a text and told her I loved her. It was late back home, and though I figured they were at Smokey's, I didn't want to interrupt her night. I'd be flying home in two days and could talk to her tomorrow. I had changed into sweats and a sweater and was standing in the smoking post, nursing a whiskey and tea, when Ryan came up to me.\n\n\"Got a moment?\" He asked me.\n\n\"Of course, bud. What's up?\"\n\nRyan had a hard time meeting my gaze. \"I was wondering how Lauren was doing. Is she okay?\"\n\n\"Well, she is now,\" I said, trying to keep any anger from my voice. \"She was pretty broken up after you left. I knew she would be, but she only recently seemed to get better.\"\n\n\"I just wanted to say, again, that I'm sorry for what happened. I didn't want to hurt her, but the heart wants what the heart wants.\"\n\n\"I understand,\" I said. \"I wish you hadn't come all the way out there to handle that unhappy business, but I do commend you on having the stones to handle your business in person. How are you doing with your new girl?\"\n\n\"Danni and I broke up a while ago,\" Ryan said sadly. \"I caught her cheating and, though she said it was over between them, I can't forgive her for what she did.\" He was silent for a moment before looking into my eyes. \"I'm sorry I broke Lauren's heart, and I'm sorry you had to come out here to pay for that heartache.\"\n\n\"Damn, sorry to hear about Danni, man. Don't you worry about me having to come here, I made the deal, and I upheld my end of the bargain.\" I couldn't bring myself to mention that this was exactly how Lauren had felt when he had made the journey out to break up with her. I wanted so bad to chastise him and make it known that this was fate returning the painful gift he had given another. I just couldn't bring myself to it. \"Come on,\" I said, crushing out the cigarette. \"Let's go have a drink.\"\n\nWe drank and talked for a few hours. He was nervous about the upcoming deployment and needed someone to vent to. I took that role, feeding him drinks to loosen his tongue and let him get what he needed to off his chest. He talked, yelled and cried over the next hours, eventually passing out in one of the spare bunks. I went for another smoke, turning in shortly after that.\n\n***\n\n\"I've missed you,\" Becky said, standing before me in the living room. Carl and Jeanna were out running wedding errands, Lauren was out doing something with her friends and Tyler was in training at the refinery. We were all alone, and would be for a few hours. Becky had put music on the TV and slowly danced before me. She wore a cute blue dress that hugged her curves just right and left very little to the imagination. I was hoping that she would be losing it soon.\n\n\"I've missed you too, babe,\" I said. My eyes flashed across her form, picturing the pale flesh that so enraptured me, just beneath the thin fabric. She turned around, bending slightly and shaking her ass at me. I reached out and lightly smacked it, gripping it and fondling her butt as she turned to look at me. \"You know I love seeing you like this.\"\n\n\"Bent over and looking back at you?\" She asked in a sultry voice. She wiggled her ass again.\n\n\"Yes, though your wearing far too much clothing for it to have the proper effect.\" She smiled and bent further, the tight fabric of her dress rode up her round backside, staying up around her waist as she straightened up while still swaying her hips. \"That's better.\"\n\n\"No comment about my lack of panties?\" She asked.\n\n\"No, I would have made a comment if you were wearing them, because that's so unlike you.\"\n\n\"Am I that predictable?\"\n\n\"Only when you're horny.\" I reached out and cupped her cheek, eliciting a moan from her.\n\n\"You think I'm horny?\" She asked through the moaning. \"What makes you... mmm... think that?\"\n\nI ran my hand down a bit, reaching around and running my finger across her lips. They came back soaked with her fluids. \"Because you're wet.\" She turned to look at me and I presented my fingers to her. \n\n\"Mmm,\" she moaned as she sucked her fluids off my finger. \"And are you horny?\" She turned and dropped to her knees, crawling on all fours until her face was right in my crotch.\n\n\"See for yourself,\" I told her. She undid my belt and the button on my pants. Lowing my zipper, she shucked my pants from my legs and smiled at my erection, standing at attention for her. Becky winked at me and gave my hard-on a lick from base to tip, causing me to shudder. She giggled a bit at my reaction, swirling her tongue around the head before taking it fully into her mouth. \n\nShe worked my cock with lustful hunger. Gone was the practiced and measured Becky who took her time and reveled in seeing the pleasure she wrought with her sexual ministrations. This new Becky was in need. She had been without anything for a few days and had, no doubt, heard Carl and Jeanna through the thin walls at night.\n\n\"I can tell you... mm... missed me,\" I managed to say as she took my length down her throat.\n\nShe popped my dick out of her mouth and smiled at me. \"Every night I could hear Carl and Jeanna, the way she moans when he licks her and the way she screams when he fucks her, just, well, it turns me the fuck on.\" She went back to devouring my manhood, working to bring me to the brink. \n\nBefore I was granted the release I so desperately craved, she popped me out of her mouth and took the dress off. She climbed up onto the couch, knees resting on the back and pussy in my face. \"Lick me baby,\" she begged. I needed no other encouragement. \n\nI brought out every trick in the book, sucking the clit, flicking it gently with my tongue and plunging my tongue deep inside her. She moaned and bucked, grinding herself on my mouth while I worked. She grew louder and louder the closer she came to climax and when I thought she had had enough, I inserted two fingers while sucking her clit. She threw her hand against the back of my head and cried out as her juices flowed and her muscles clamped down on my fingers. \n\n\"I need you,\" she purred, climbing down my body and kissing me. She sighed approvingly as she tasted herself on my lips, lining herself up with my raging erection. She kissed me deeply as she speared herself on me, giving a slight squeak as she was penetrated.\n\nShe broke the kiss, staring into my eyes. I knew what she wanted, and I had no intention of giving it to her. She rode me like a bronc in a rodeo, trying desperately to get me off as fast as possible. I had to get her off at least once before I gave her what she wanted. She leaned back, placing her hands on my knees as she bounced up and down on me. I took advantage of this position.\n\nI began playing with her clit, rubbing it gently with my thumb as she worked her body. Her moans became louder and louder, her tunnel becoming more tight as she came closer to release. She reared up and let her self crash onto me, her orgasm taking her away. She shivered and mewled, slowly gyrating her hips and kissing my neck while she rode out the pleasure.\n\n\"Cum for me, baby,\" she said. \"I need to feel you cum inside me.\" How could I deny her?\n\nI tapped her leg and she moved, kneeling on the couch and draping her arms over the back. I stood behind her and guided myself in, moving slowly enough to tease her while still exerting pleasure on her. I picked up the pace and she began to cry out in time with my thrusts. It didn't take long until I was on the brink.\n\nI grabbed her hips and pulled her into me, filling her with my hot seed. She moaned and shook her ass as rope after rope flooded her. When I had finished, I pulled out and backed up, letting her turn around. She sat on the couch, my receding cock close to her face. She took it in her hand and licked it clean, taking care to not miss anything. When she was done she stood and, taking my hand, led me to the shower.\n\n***\n\nCarl, Tyler and I took a trip to San Diego in early march. Ryan and the rest of Bravo Battery were shipping out on deployment and I had no intention of not seeing Ryan off. Becky, Lauren and Jeanna had declined to go, still mad at Ryan for what he had done to Lauren. Though they had not joined them, they weren't upset at their going to see him leave. Getting on the naval base was easy. With the deployment of the USS Boxer they were letting civilians on to see them pull out, which saved them the time of having to deal with getting a temporary pass. \n\nThey walked down the pier, the massive hull of the Amphibious Assault Ship towering over them, the number 4 picked out in white against the stormy grey of the hull. Marines and Sailors hugged their family members and said their goodbyes, wishing them good fortune on their trip. I saw the men of Bravo Battery getting off the busses and moving down the sectioned off access path. Ryan hopped off the bus and shouldered his sea bag, falling in line behind the others. \n\nTyler and I pushed our way through the crowd, Carl following in our wake. We stood next to the small plastic yellow chains that separated the civilian area from the access way for those boarding the ship. Ryan saw them and moved over to talk to them. He stopped and smiled at them, a tear forming in his eye.\n\n\"Look at you assholes,\" he said, smiling at them. \"It's good to see you guys.\"\n\n\"Good to see you too,\" Tyler said, reaching out and hugging him. \"You be careful over there, okay?\"\n\n\"Remember,\" Carl said, \"Ask yourself what these two would do, and do that. They made it back, and so will you.\"\n\n\"Write much, write often, call when you can. Keep your head down and you'll be fine,\" I said. \"You'll be just fine.\"\n\nWe were all trying to keep the tears from flowing, to little success. We all hugged one final time before Ryan had to go. He turned and smiled through teary eyes. \"I'll see you guys in a few months.\" He turned back to the line of Marines streaming toward the gangway and fell into line. \n\nWe watched him head down the walkway and then up the gangway, saluting the Sailor at the top of the ramp, then turning to face and salute the flag at the stern. He then walked into the bowels of the ship and out of sight. We moved back, making space for other family members to come and see their loved ones.\n\nWe stayed until the ship departed, watching the Marines and Sailors as they manned the rails. Once the ship was fading into the distance most of the family members turned to leave, heading toward the parking lot in a tide of bodies. We stayed until most of the people had gone and the ship was an almost imperceptible dot on the horizon. We walked back to the car in silence, not wanting to voice the thoughts in our head.\n\n\u2014\u2014\n\nCarl and Jeanna were married in the spring. They had put in a ton of work to make it what Jeanna wanted, and it had all paid off. The ceremony was nice, with the families mingling and sitting next to one another. Jeanna's father gave her away, happy that she had found someone as good as Carl. Carl's parents didn't come, though my parents came, and therefore acted as his de-facto parents. I was best man, while Becky was maid of honor. When the ceremony was over, we went to a large reception hall, and partied long into the night. \n\nI had to stop Tyler from making an ass of himself, as well as keep him from ruining Jeanna's day. He ended up flirting with a few different girls, only one of which wasn't already married. Becky and I took a walk after the first dance, heading down a path that led to a small garden. We walked along the gravel path, hand in hand, without a care in the world. Nothing was said, we just walked along slowly. She would stop every few minutes to look at a flower or pull me in close and kiss me. \n\nWe came to a semi-secluded area with a few benches. The light was fading, the sun casting orange and purple shadows across the sky. Becky sat on my lap, her legs draped across mine, and laid her head on my shoulder.\n\n\"I love you,\" she said softly. Her hand began tracing little circles on my chest as she kissed my neck. \"I want to be married to you. I never want to give you up.\"\n\n\"I love you too,\" I said. \"We'll be married soon and you won't have to give me up again. I told Captain Varren that I was done contracting. You won't have to give me up again.\"\n\nShe smiled and rested her head on me. We enjoyed the moment, sitting together and watching the last rays of sunlight fade into night. The way back was lit by LED lights which lined the gravel path. Becky held my hand and stopped when we came to a trail that branched off the main path. \n\n\"We should check that out,\" she said. \"There might be something down there that would scare me out of my dress.\" She nudged me at the last words, as if trying to drop a hint. I looked at her and was about to lead her down the path when Jeanna came down the lighted path.\n\n\"There you two love birds are,\" she said. \"Come on, there's dancing to be done.\" I looked at Becky and smiled. She waited until Jeanna had turned her back and pouted at me. I knew she wanted to go have some fun down there, but this wasn't her night. It was Jeanna's, and Becky couldn't deny her a simple request like dancing. Fortunately, Becky enjoyed dancing with Jeanna almost as much as she enjoyed slinking off to dark and mysterious places with me.\n\nIt was no secret to me that she and Jeanna had had some sexual encounters. It was also no secret that they both really enjoyed it. Hell, technically I had Jeanna before Carl did, but that was so long ago, it's almost like it never happened. I was getting aroused as I watched the girls dancing together. The way they moved together was more like lovers in the throws of passion rather than bride and maid of honor. I finally made my eyes break contact and looked over to see Carl staring just as intently as I had just been.\n\nI went and put a hand on his shoulder, making him jump. \"You're staring so hard you're gonna bore a hole straight through her.\" He looked at me and smiled, standing up.\n\n\"It's just so mesmerizing, seeing those two move like that,\" he said. \"It makes it so hard to wait until tonight to have her.\"\n\n\"I know what you mean. The way she moves her body is just, unreal.\" We both stared at our women, watching their lithe forms twisting and turning as they moved to the quick rhythm of whatever pop song was playing. I left him there, watching his wife and my fiancee, and ordered us a few drinks. I brought him his and we toasted, going back to taking in the view.\n\nThe party went on until midnight, though most of the familial guests had left long before then. As the amount of people lessened, the more free those who remained became. Not having to worry about grandma seeing a certain side of them, Jeanna and Carl began to dance a little more lewdly, with others quickly following suit. Becky and I had just decided to take a breather when we saw Lauren drag Tyler onto the dance floor. \n\nIt wasn't like he was protesting much. Lauren was wearing a tight cocktail dress that had most of the male contingent still here ogling her wherever she went. They went out to the dance floor and she was grinding on him for a few songs, then they slow danced through a song. It was at the end of that song that the most bizarre thing I'd seen in a long time happened.\n\nShe kissed him.\n\nThey had been whispering to each other throughout the song, their heads close together while they swayed to the beat. Tyler's hand had strayed low on her hips, but that wasn't strange for the old horndog and she hadn't made a move to reposition his hand, as she had in the past. I figured this was just the alcohol she'd been drinking making her not care as much that he was grabbing her ass. My mind was blown when, after the song ended, she took his head in her hands and gave him one hell of a kiss.\n\nThey vacated the dance floor and Tyler came over, stealing my drink and finishing it. \"What was that?\" I asked him.\n\n\"What was what?\" he responded.\n\n\"That kiss. Since when does Lauren kiss you like that?\"\n\n\"Oh, that,\" he said. \"I think she's been drinking.\"\n\nSomething about the way he said it had me unconvinced. \"I've seen her kiss you before, mostly on the cheek. That was something else. That was... passionate.\"\n\n\"Who knows what's going through her head,\" he said, trying to deflect.\n\n\"I think she has a fever,\" Carl said, looking at me with a huge smile. \"And the only cure is Tyler.\"\n\nTyler turned beat red. I laughed at his reaction. \"Bro, it's okay to like her. She's quite the catch. It won't hurt my feelings if you wanted to date her.\"\n\nHe seemed to brighten up a bit. \"Are you sure? I know she's Becky's sister, which makes her your sister-in-law. I wouldn't want to do anything that would hurt your relationship.\"\n\n\"If you're referring to the incident with Ryan, that was different. I'm flattered that you're more concerned about someone other than you for once, but you have my blessing, if you want to date her.\"\n\nHe smiled at me and gave me a hug. \"I won't let you down,\" he said. \"I promise.\"\n\n\"It's not me you have to worry about letting down,\" I said. Lauren walked up and saw us hugging. She smiled at me and laughed.\n\n\"I can come back, if you guys need a minute.\"\n\nTyler turned to face her and, though I couldn't see him, the look she gave him told me they were beaming for each other. This had been something building up for a while and I hadn't noticed it. I felt a little bad, not taking a bigger interest in the well being of my little sister-in-law, but after what had happened, it was understandable. If this would make her happy, then who was I to interfere? Tyler was a good guy and, though he had a hard time showing it sometimes, he had a good heart. \n\n\"He's a good fit for you,\" I said to Lauren.\n\n\"I know,\" she said.\n\n***\n\nThe call came in the early evening, while we were preparing dinner. Becky called for me and tossed me my phone. I saw who it was and a cold chill ran down my spine. There were few reasons why Mrs. Ryan would be calling me while Ryan was on deployment, and none of them were good. To say I was terrified would be an understatement.\n\n\"Hello,\" I said, trying to keep the fear from my voice.\n\n\"Drew, it's Daniel's mother.\" She sounded sad, which wasn't helping me at all.\n\n\"Mrs. Ryan, what's up?\"\n\nShe broke down and started crying. I knew, in that moment, that my worst fears where realized. I sat down on the couch, obviously distressed by the look Becky gave me. The trembling voice on the other end of the phone began crying, the information she had called to convey being too much for her to speak. I could feel myself starting to be overcome by emotion as I heard her crying. ",
        "\"Take a breath,\" I managed to say. \"What happened?\"\n\nShe gave a sniffle and spoke. \"Danny, he was... he was killed.\"\n\nMy heart sank. I had hoped against hope that he was only injured, that this was something that he would recover from, even if not fully. He was gone now, another casualty of a war that had claimed so many of my friends. The dam broke and I dropped the phone, tears streaming from my eyes.\n\nBecky picked up the phone and put it on speaker, holding it between us. I could hear his mother crying on the other end of the line, as if saying those words had made it real. I thought of all the times we had spent together, all the memories we had made together while on our previous deployment. He had made major strides in performance and I thought he had gained enough knowledge to make it through this one. The Gods are fickle though, and they didn't have a reason for who they took and who they spared. \n\n\"What happened?\" I asked, finding my voice.\n\n\"They said he was killed trying to save another Marine,\" she explained. \"He was trying to drag a wounded man to safety when he was hit.\"\n\nI was devastated, but I smiled at the thought of Ryan out there, trying to save a friend. He would do it without a second thought, and he had paid the price for it. There was no other way he knew how to be. \"Your son was a good man,\" I said. \"There was no way he would leave an injured man to his fate, and in the end, he died doing what he was trained to do.\" She was sobbing again. \"I'm so sorry for your loss, and if you need anything, Tyler and I are here for you.\"\n\nShe kept on sobbing, and managed to squeak out a thank you. I knew she had heard me and I knew that she understood, even if she couldn't say it. She managed another thank you and the call disconnected. I could only imagine what she was feeling, having lost her son. Becky scooted in close and took me in her arms.\n\n\"He's gone,\" I said softly, my chest heaving. \"God dammit, he's gone.\"\n\n\"I know,\" she said, pulling my head onto her shoulder. \"I'm so sorry, babe.\"\n\nI dreaded telling Tyler. He was at work and would be crushed. It could wait until he got home. No need to wreck his world while he's in training. There would be drinking tonight, hard drinking. We would turn Smokey's into a somber place, as toast after toast was made in honor of our fallen brother. The others were just as devastated as I was at the news, learning of it when they came home. Tyler was the last to hear of it, and he took it the worst.\n\nHe had gone outside, not wanting to be around others. I understood and sat on the back porch while he vented his fury to the heavens. I had lost track of how many cigarettes I'd smoked, letting the cool night wind wash over my body as I drank directly from the bottle. Tyler raged in the back yard, using the axe to split firewood that didn't need to be split. He was swinging so hard that he was burying the axe into the large log and it required a great amount of strength to dislodge. \n\nHe was crying and yelling curses to the heavens. If the Gods could hear him, it was a miracle that they didn't strike him down where he stood. They really were fickle. When he had exhausted himself, he came over and took the bottle from me, drinking deep and then grabbing a cigarette from my pack. He stood there before me, sweat making his shirt stick to his chest.\n\n\"Why?\" he asked me. \"Why the fuck did it have to be him?\"\n\n\"I don't know,\" I responded, staring off into the trees. \"Of all the people, he was the best of us. He should have been here with us, not out there fighting for people who fucking hate us.\"\n\n\"I can't believe it,\" he said, sitting down. \"I mean, he went out trying to save someone else, and that's exactly what he would do, but I still can't believe it. Why are the good ones taken, while the likes of us get to stay and carry on?\n\n\"That's just the way it goes. We're the ones to keep carrying on, while others have to move on.\"\n\n\"I don't like it. It's fucking bullshit.\"\n\n\"I know.\" \n\nWe both sat silently for a while, smoking another few cigarettes before going inside to our women. \n\n***\n\nOur wedding was fast approaching. The arrangements had been made months ago for the venue, caterer, photographer and more. Becky, Lauren and Jeanna had been working hard to make sure our day was perfect. I went along for the cake tasting, and otherwise was keeping my distance. Becky and her retinue had picked out her dresses and, though I hadn't seen the ceremony dress, I had seen the one for the reception. It was beautiful, and it was almost inappropriately short. I knew, as did she from the sound I made when I saw the picture of her in it, that she would be wearing it more than just the one night.\n\nThe entirety of my preparations consisted of double checking mine and Tyler's dress blues, and gassing up the truck. I had been hesitant of letting Tyler wear his blues, but when Lauren had asked Becky, who seductively asked me, I tried to refuse. One night, I reminded Becky that using her superpowers for evil would throw the force out of balance and possibly bring about the destruction of the world. She simply pushed me back onto the bed and mounted my face, not that I objected.\n\nWhen I had gotten Becky off, she asked if I had changed my mind. I decided to test a theory and told her I was still unreceptive to the idea. She promptly began to go down on me. Now I knew I had her. After every act, she would ask me if I'd changed my mind. When I said no, she moved on to the next wonderful act or position. Only once I'd finished filling her with my seed, did I acquiesce.\n\nTyler and Lauren had begun officially dating shortly after Carl's wedding. Carl had expressed his concerns to me about it, knowing only one side of Tyler. I had known him for many years and had seen many sides of him. He could be a relentless pussy hound when he was drunk and lonely, but when he was in a stable relationship he was loyal to the end. Knowing both sides of the man, I would still keep an eye on him, for Lauren's sake.\n\nI dug out my uniform early along in the process, checking it for any major alterations. I had upgraded the chevrons shortly after my promotion, and only had to order some replacement medals for Tyler and myself. We were preparing our uniforms when our women came in to bother us. Lauren came in first, throwing herself at Tyler and wrapping her arms around him. They kissed for a moment before she dragged him back down the hallway toward her room. I watched the spectacle and shook my head. Young love was crazy, and those two embodied crazy.\n\nI chuckled and went back to detailing my uniform. \"What's so funny?\" Becky asked, leaning against the wall of the hallway. I looked over at my fiancee and couldn't help but smile.\n\n\"Those two are perfect for each other,\" I replied. \"Both young, crazy and horny as fuck.\"\n\nBecky sauntered over to me, her hips swaying seductively. \"What about us?\" She asked. \"Are we not perfect for each other?\"\n\n\"Of course we are.\" I put my hands on her waist and pulled her close to me. \"We're just not as crazy as them.\" She chuckled and kissed me, turning to look over my uniform when she broke the kiss. \"You ready to be married?\"\n\n\"Yes,\" I said confidently.\n\n\"Nervous?\" She asked.\n\n\"Not yet. I'm sure I will be, but as of now, I'm fine. I'm actually more worried about my uniform than the actual wedding.\"\n\nShe smiled and took me by the arm, leading me down the hall to our room and throwing me on the bed. She stood there, gazing at me with lust in her eyes. \"Are you nervous now?\" She asked.\n\n\"Petrified,\" I said.\n\n***\n\nWedding day arrived. The venue was at a small farm just outside of town. The altar was set up in one of the fields, with a small barn behind the assembled chairs for guests. The guests had taken their seats and were waiting for the wedding to begin. I watched through the small door that sat just to the side of the large sliding door that was used for equipment. Everyone waited expectantly, the music coming from the speakers set up around the area playing songs of love to keep them entertained while they waited. \n\nThe song that was on stopped suddenly, the DJ changing the song to begin the ceremony. The weeding planner stood by the door and, on queue, started sending the wedding party out in pairs. Tyler and Lauren walked down the aisle, then Keith and his girlfriend, followed by Carl and Jeanna. Each member of the party took their places on the side of the podium set up for the officiant. Then, I was shooed out the door. \n\nI've been on three tours of duty. I've been to the worst war zones of this generation, been shot at and blown up. I've had to sleep outside with enemy fighters in close proximity, and nothing had scared me as bad as I was now. I don't know why, but my heart was thudding in my chest so hard that I thought I was changing the beat of the music playing. My heart was pounding so hard that I couldn't hear the medals on my chest clinking against one another like I usually could. I took my place at the altar and waited as the music changed again.\n\nThe soft sounds of Keith Whitley started to play as the large sliding door opened. Standing before me was the most beautiful woman I've ever seen, her long white gown was exactly what I pictured for her. Everything about her was perfect, and much more than I deserved. Her father walked her down the aisle, tears in both their eyes. I couldn't take my eyes off her as they started to well up with tears.\n\nThe smile on your face lets me know that you need me\n\nThere's a truth in your eyes saying you'll never leave me\n\nA touch of your hand says you'll catch me if ever I fall\n\nNow you say it best when you say nothing at all\n\n*****\n\nThanks for reading. I have a few other projects in the works but haven't the slightest idea when they may be coming out. Please rate and comment. Thanks again to all who made his journey with me."
    ],
    "authorname": "Betrayer_of_Skalathrax",
    "tags": [
        "becky",
        "marine",
        "tyler",
        "carl",
        "jeanna",
        "andrew",
        "ptsd",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/carrying-on-ch-04"
}