{
    "title": "The Gift She Gives Ch. 16",
    "pages": [
        "Zheng had been in Los Angeles taking care of several business interests that he and his brothers had in the area when he'd gotten the urge to come to Canada and visit Vorhees Spa. Shu was still missing and he was hoping that someone at the spa knew where she might be, though he had been assured on the phone several times by Mr. Hughes that they had not heard from the female dragon since she'd left Minnesota. Something, though, had told him to come to Toronto and drive out to the spa even though it was late in the day. He figured it was partly due to the fact that he hadn't seen Vesper since she'd first come here almost nine months ago. He would check up on her, and then he would head to Zurich, where he had his next meetings already scheduled.\n\nHe had found Samir in the foyer talking to a young, pretty elf woman who looked at him with her huge, brown eyes, but remained quiet as the giant introduced the two of them. She did look somewhat familiar to him, and he thought that he might have seen her in Belarus, when they had rescued Alexandru. They had been about to head out to Vesper's home, something that he hadn't realized had been completed so quickly. They'd invited him to go with them, so that he could see Vesper, and he had agreed. It hadn't been until he was walking in between the two that he realized that there was a little girl clinging to the back of the elf. The woman's name was Natasha, he remembered suddenly as the little girl stared up at him with wonder in her eyes.\n\nShe wasn't fully elf, she had markings on her forehead that hinted at something else, something that he couldn't quite remember, though he knew he'd seen it before. But Zheng said nothing about her other than to ask her mother her name. Elarinya. They walked in easy conversation out of the spa and along the lit path through the woods towards the meadow that he knew existed beyond. When they saw the dark wood cedar siding of the little house nestled back against the trees, with a very quaint little child sized play house to the right of it, near a very tall snowman and several much smaller ones, he had to smile. This, of course, was where Vesper would live.\n\nLooking in the large, front window, he saw a partially decorated Christmas tree with twinkling lights, and he could barely make out Vesper standing, her body facing towards the right, towards the closed front door. Natasha walked up to the door and opened it quietly, walking in with her daughter while Samir and Zheng followed behind her. Zheng looked towards Vesper and saw that Mr. Hughes was near her, very near her, and he could tell she was in pain, but she wasn't stepping away, and Mr. Hughes didn't seem willing to either. Neither the angel or the ayperi said anything about their entry, their eyes were glued to each other, and Zheng frowned as he watched Vesper shrug her shoulders, and her head tilted ever so slightly. Her arms raised up towards the angel and he was suddenly shoved forward, by what, Zheng wasn't sure, had she pulled him towards her? Natasha gasped as the two came together in a brilliant, explosive kiss.\n\nA light filled the room, and everything went white and fuzzy as the four of them were pushed farther away, against the far wall of the hallway as whatever had hit the two winged creatures when they touched filled the room. The air sizzled and crackled and it took some time before the light filtered away and they were able to see what, if anything, was left of Vesper and Mr. Hughes. Zheng didn't see Vesper right away, but Mr. Hughes was standing, hunched over, trying to catch his breath as his body shook violently.\n\n\"Oh, my god. What did she just do?\" Samir whispered in shock, stepping forward just as Zheng moved in the same direction.\n\n\"Arc?\" Zheng probed gently, the angel looked in his direction. His face was red, tight, tear-stained, and he was breathing shallowly.\n\nMr. Hughes didn't respond, instead, he started tearing at his clothes as if they were on fire. They watched as his naked, tattooed chest was suddenly bare, and he was bent over again, tensed muscles telling them he must be in pain. Zheng saw the stumps of his wings on his back and frowned, he hadn't been aware that the angel had cut them off. No wonder Vesper had felt pain when she got near him. As he watched, the wings began to grow and slowly shift to their original shape. The tattoos seemed to be turning almost fiery red as they, too, came off, one by one. It must have stung because Mr. Hughes was trying to hold back groans as his body reacted to what he had just been put through.\n\nZheng looked behind him at the elf girl and saw that she'd taken her daughter down the hallway and was just walking back into the room and was walking right past both of them to the woman who was lying on the ground unmoving on Mr. Hughes' other side. She wasn't moving, Zheng frowned, sending Mr. Hughes a look as the man continued struggling with what was happening to his body.\n\n\"Is she alive?\" Samir asked, worry filling his voice as Natasha squatted down beside her friend to feel for a pulse.\n\n\"She's alive.\" Natasha said immediately.\n\nSamir stepped around his boss and picked up the ayperi. She was completely limp in his arms, but he could already see some changes to her from the contact with the angel. Her wings had become white and somewhere between a cross of the papery wings of a moth and the feathered wings of an angel. While he held her, she suddenly gasped loudly and long for air, her eyes jerking open, their now marbled gray depths wide, looking around her in shock. Zheng watched as she tried to raise her head, but wasn't quite able to.\n\n\"Vesper?\" Samir whispered.\n\nShe didn't respond, her body began to shake and she lost consciousness again. He frowned as Samir laid her down on her back on the couch he was closest to.\n\n\"Look at her skin, Samir.\" Zheng had looked down at where her lower abdomen had been exposed as she'd been moved around.\n\nSamir moved the shirt out of the way and they watched as wording similar in style to what had been on Mr. Hughes was burned into the skin of her chest and stomach. They couldn't tell what it said, but realized that Mr. Hughes had moved a little closer to them, and while he breathed in shallowly, hands on his thighs, still bent over as his body was healed, he leaned closer so that he could try to read what had been etched into the woman's skin.\n\n\"What does it say?\" Zheng asked, knowing by the frown on the angel's face that he wasn't very pleased.\n\n\"Grigory...Aidan...Anya...Cynric...and Fezekial. Repeated over and over.\" His voice was filled with disgust.\n\n\"Why their names?\" Zheng straightened as Vesper shifted again, but didn't come awake.\n\n\"They have all penetrated her in some way.\" Mr. Hughes frowned, closing his eyes tightly as he breathed through the pain. Feathers were starting to grow from his wings, but they weren't white, as Zheng had thought they would be. At least, not all of them.\n\n\"When she comes awake, what do you expect from her, Mr. Hughes? What is it that you desire most, as that is what it seems that she responds to?\" Zheng watched as the strange elf girl sat on the couch and put Vesper's head in her lap. As he watched, he realized that there was something a little different about this particular elf.\n\nShe was putting her hands on Vesper's forehead, and the top of her scalp, and her face was very concentrated as she looked down at the unconscious form of the ayperi. She didn't seem concerned, not in the way that Mr. Hughes was concerned, or Samir, for that matter. Hell, even he was a little nervous about what would happen with Vesper finally came awake.\n\n\"If she takes on my traits that I've displayed here on earth, she'll want to fuck.\" Mr. Hughes frowned as he looked at the two men in the room.\n\n\"And the ones you had before, the ones from your true nature?\" Samir asked, tensing at the thought of the woman they all knew to be a virgin having her first time in the midst of this situation.\n\n\"She'll want to kill.\"\n\nHis simple statement made Zheng's eyes widen as he looked down at the girl. Shaking his head, he refused to believe that that was what would happen to her. \"Is that truly what you wanted, though, Mr. Hughes? To fuck and to kill?\"\n\nMr. Hughes didn't answer, he'd started to shake again and had turned away from them and fallen to his knees. Natasha looked over and arched a brow in his direction, but didn't move away from Vesper. In fact, she wrapped her arms closer around the girl and put her cheek against the pale one below her, and started whispering in her ear.\n\n\"Did she pass out when Payton touched her?\" Zheng asked Samir and got a quick head shake in return.\n\n\"No. Nothing like this.\" Samir frowned.\n\n\"Zheng.\" Natasha's soft voice rang out and he turned towards the wood elf and nodded.\n\n\"Yes?\"\n\n\"You need to go outside and shift into your dragon self.\" She said as she rubbed a hand against Vesper's back in a circle.\n\n\"Why do I need to do that?\"\n\n\"Because right now, you're the only one of us that can fly, and she's going to wake up any minute and want to do just that.\"\n\n\"Fly? Why? Where does she plan on going?\" Samir asked.\n\nNatasha widened her eyes a bit and lifted her face to look towards the ceiling. They all knew, however, that that was not what she was implying. Vesper was going to fly into the sky. Vesper was going to try to go to heaven, she was going to do what they had all figured Mr. Hughes had wanted for a very long time. She was going to go home.\n\n~*~*~*~\n\nFor a period of her life on earth, Vesper had lived with her mother in eastern Kent. One of the things that she had enjoyed while living there were the walks that she took along the cliffs that overlooked the channel. She had always felt very much at peace on those walks, except when it would start to rain. She'd always had a fear that she would somehow be struck by lighting and thrown to the ground. This fear was always compounded by the fact that she wasn't quite the normal looking human, and were she to actually be electrocuted, some passerby could come upon her and find her out. So whenever there had been the slightest notion of rain, she would stay away from the cliffs and simply stare out at them from the small bedroom of the apartment in which she lived at the time.\n\nThis, this felt an awful lot like being electrocuted, and it had happened in her home, in the middle of her living room. She had forced Mr. Hughes into her embrace and she had kissed him, just for a split second only, for as soon as their lips had touched all hell had broken lose within her body and she had felt like she had caught on fire. Her ears burned with sound, voices surrounded her and she felt like they were chanting. It wasn't Gregorian, or Buddhist, or even Mozarabic. She wasn't quite sure, but some of the sounds were similar to the song that she'd heard Mr. Hughes sing several months ago on the roof. She certainly didn't feel the desire to touch herself this time, however. Pleasure was the absolute furthest thing from her mind as she fell to the floor and succumbed to the darkness that poured over her body from all directions.\n\nVesper didn't think she was asleep, but she knew she wasn't awake either. Everything was black, and when she felt her chest burning and her body starting to ache, she realized that she wasn't breathing and sucked in a much needed breath. Her eyes opened, filled with terror over what had just happened, and she looked up to see that Samir was holding her. Her body was beginning to shake and none of her muscles seemed to want to respond to what she wanted them to do. It wasn't long before everything was black again.\n\nShe knew she'd been lowered to something softer than the floor, and while she knew there was talking going on around her, all she could hear were the voices, the chanting. Who was chanting? Why? Couldn't they tell that whatever was happening inside of her body was more than she could handle right now? She wanted to throw up, she wanted to run away, she wanted to crawl into a ball in a corner and weep. Oh God, she moaned, shivers overtaking her body for a moment, she wanted the damn chanting to stop.\n\nThen she felt something different, a soothing something against her forehead and brushing through her hair. 'Vesper, his wings are growing back. Wait till you see them, they're white, but with splotches of dark brown here and there, it's definitely more masculine, I think. And his tattoos, they are fading away, my dear. No longer will you have to look upon him and see the names of those he has been with.'\n\nShe shivered again, it was Natasha, pushing into her mind, trying to help her sort through what was going on. Mr. Hughes was changing, he was healing. Good. That was good.\n\n'Samir is scared that you're going to need to have sex with someone, and he worries that Mr. Hughes will push for it, that he will want to take your virginity in a way that you shouldn't lose it. As if there is a right or wrong way, it doesn't matter. If it is with Mr. Hughes, it would be right no matter what.' She could almost sense the wood elf's chuckle.\n\n'Zheng is concerned, but not like Samir. He just wants you safe. For a dragon, he seems rather...collected, don't you think? Oh, you kissed him, how fascinating. Wake up, Vesper, and you can tell me how that happened.'\n\nVesper groaned again and turned in towards her friend. She knew that Natasha had started talking to the men in the room, but she couldn't understand what they were saying, she couldn't understand anything over the pounding echo of the chanting voices in her head, couldn't Natasha hear them? They reverberated in her ears and drowned out her own thoughts.\n\nThe blackness she was trapped in was overwhelming, and Vesper felt as if every nerve ending in her body was being repeatedly fired in random, uncontrollable patterns. \n\n'I think when you touched Mr. Hughes it made you go a little out of rhythm, Vesper. I'm going to do something to see if I can get you back.' Natasha's voice was there, as it had been before, barely audible in the corners of her mind and Vesper felt herself groan again.\n\nVesper felt Natasha's hands move to rest one on her scalp and the other over her heart, was her shirt raised? Why did it burn so much? The thought left her as soon as it came, as the chants were overwhelming her senses. But then a warmth seeped through her skin and she felt a funny popping sound inside before everything finally went silent. She felt Natasha's hands slowly slip away, and her heart could be felt beating within her chest, a chest that rose and fell more easily with every breath she took. Whatever the wood elf hybrid had done to her, it had stopped all the noise. Vesper had never been so grateful for Natasha as she was in that moment.\n\nNow that the chanting was gone and the nerves in her body were all operating as they should, Vesper slowly came aware of something else. What she wanted came to her at the same time as her eyes shot back open and she pulled herself to a sitting position. Mr. Hughes was the first person she saw, and she frowned. His wings were back, but they weren't like what she had thought they would be, they weren't completely white, they were more like a hen harrier hawk. That was weird. The wings made him look more maddeningly masculine, but the color was certainly not angelic. And they were massive. Taller than him as he stood facing her, shoulders drooped, eyes filled with worry, and he looked like he was having trouble breathing.\n\n\"Vesper.\" His voice was the voice of a man with a deep dark pain inside, and that didn't make sense, she had cured him.\n\n\"Get out of my way.\" She found her voice somehow as she pushed up onto her feet, feet that were very unsteady.\n\n\"Vesper-.\" He began again and she expelled a frustrated breath and pushed past him, knocking him over easily as he, too, was not quite ready to be moving about.\n\nShe had no choice, she was being called and Vesper knew she couldn't ignore it. Samir said her name, but she didn't hear Natasha say a word. Her friend already knew what she needed. Biting her lip, she pushed her front door open, surprised suddenly to realize that her house was still in one piece. Outside, she stopped, frowning when she saw the massive black dragon with yellow and gold scales mixed in sitting on its haunches, as if he was just waiting for her to appear, like he had known to expect her.\n\n\"You're not going to stop me.\" Vesper glared at Zheng, knowing who it was that had transformed.\n\nA large black head shook slowly side to side, the large round eyes focused onto her as she spread her wings and began to flap them to bring herself off of the ground. \n\n\"Vesper, don't-.\" She heard Mr. Hughes say as she flew away from the house and upwards into the sky. \n\nFor a while, Vesper flew on her own, knowing the point in the sky that she felt the urge to get to, knowing what she would find when she got there. Eventually, she peered down and behind her and spotted the dark dragon flying, rather lazily, a short distance away. He was keeping tabs on her ascent, but he was not trying to stop it. Good, she had no intention of being stopped. She had to get where she was going.\n\nWhat she hadn't expected to see was Mr. Hughes gaining on the both of them, and even at this distance, she could sense his anger, and his fear, about what she was doing. Turning back to look where she was going, she doubled her efforts and flew closer and closer to that particular spot in the sky. The chanting was back, slowly growing louder and louder until she felt a stinging heat surround her, and just as a light flashed and she felt herself sucked into some sort of vortex, Vesper closed her eyes and felt an immense feeling of relief fill her from top to bottom, and then she opened them, and was looking directly into the eyes of her mother.\n\n~*~*~*~\n\nWhen Vesper disappeared in the sky in front of him, Mr. Hughes cried out in desperation, screaming her name repeatedly as he tried to follow her through the opening that had been created for her. He had lost her, he began to shake as he tried to follow the receding heat and the chant that they had sung for her, but he couldn't get through. He had lost her. His eyes filled with tears. She had gone to where the angels lived, to a place that she thought she might never get to, and may well never leave.  \n\nHe felt the sobs tear out of his throat as he hovered in the area where she had disappeared, completely ignoring the dragon that was doing the same a short distance away. He knew he'd started screaming, he couldn't help it, she was gone. All of his fears about her wanting to have sex if they should touch had been unfounded, as had the fear that she would die from any contact between them. He had thought that if she had survived, they would have had to deal with a dominant sexual compulsion or a need to kill a nonhuman, as that had seemed to be what his entire existence had centered around. He had not expected this. He had not expected her to fly high into the sky and be called back to a place that had betrayed him so very long ago. A place that he had, at one time, wanted to return to. And now he had lost her to it.\n\nMr. Hughes felt his body go rigid as his muscles tightened and his voice filled the air with all of the heart ache and anguish of losing the person that he loved. Dear God, he had lost her, and he had no idea how he was going to learn to live without her. How did one go on in this world after having had their heart ripped out? He looked over at the dragon who was watching him quietly and shook his head. It didn't seem fair. Of all of the people he called friend, he had been the only one to never get attached to anyone. Zheng had loved and he had lost countless times over. As had Alexandru and Samir and even Anya. Though it had been a while since he'd been able to think of her as a friend, for she had yet to forgive him for not choosing her.",
        "How had any of them ever bounced back? How could he?\n\n\"I don't know how to do this! How do I do this? How do I live without her?\" Mr. Hughes frowned at the big dragon who slowly shook his head.\n\nHe stared blankly at where she had disappeared, his breathing finally evening out, his heart beating just a little bit slower than it had before. She was gone. Sighing, he let his wings slow down their frantic beating against the wind and felt himself start to lower slowly, his eyes finally closing as he thought about everything that had just happened. She had kissed him, she had pulled him to her, forced the touch. The regrowing of his wings had been painful as the bones stretched and formed, and then his feathers had come in, in colors and patterns that he had never seen before on an angel. But that had not been the only change. His tattoos were gone, they had burned off as if someone had held the flame to each and every one of them. The deep yearning inside of him to dominate had also disappeared, and the ache of knowing that he could finally give her something that she had desperately wanted filled him with despair.\n\nHe could tell that he was beginning to fall faster and faster towards the ground below, and didn't care. It didn't matter how hard he hit the ground, nothing would hurt more than how he felt inside. So many things had changed about him, both physically and mentally. He had a clarity about himself that he had never had before. Not when he was an angel in the service of his god, and not as this fallen creature trapped between heaven and hell. He was no longer Archimendes the angel of death, nor was he really Mr. Hughes, the owner of a sex spa for nonhumans. He could never be either one of these people ever again. They were gone. He was all that was left. And he didn't know what that was, not without her.\n\nOpening his eyes, he realized that he'd stopped flapping his wings all together, and his body had turned so that he was facing up to the sky above as he fell. He could see Zheng closing in on him, intent to keep him from actually hitting the ground and he frowned, he didn't want the old creature interrupting this. He just wanted to feel something other than the sick empty feeling that was burning a hole in his gut.\n\nThen, when he was almost to the tree line, he saw a spark of light some distance behind and to the left of the dragon that was quickly approaching him. Immediately, he jerked his wings into action and stopped falling mere inches above the trees beneath him. Zheng slowed, as well, and they both looked up to see what he had spotted. There, not far from the spot that he had lost her, was Vesper, at least he was pretty sure it was, she was a great distance above him. Her long, white hair was blowing in the wind around her, the long dress that she'd been wearing was fluttering, as well, giving her an ethereal look. Not to mention the fact that she had wings. Wings that looked to be back to normal, but with a little extra at the lower ends of the bottom two. He realized that the part of her that had been cut off had been healed somehow in what had happened to them.\n\nHe was moving towards her just as she was beginning to descend towards him. Mr. Hughes looked to see if the dragon was still there, but he figured Zheng knew that it was time to make himself scarce now, and he couldn't see the large beast anywhere. Licking his lower lip, he flew to her, knowing that he would never ever let himself fall away from her again.\n\n\"Vesper.\" He said in a somewhat broken voice, he didn't really know what else to say. What do you say when someone chooses to return from heaven?\n\n\"Arc.\" She smiled, her large eyes going wider as she floated towards him those last few feet.\n\n\"I thought I lost you.\" His chin definitely shook when he said that.\n\nShe shook her head slowly and moved her hands to place them on either side of his face.\n\n\"I found you.\" She said in a breathy whisper and moved her lips against his in the lightest of caresses.\n\nHer lips were warm and soft and he felt the whole of her body settle against the front of his, and Mr. Hughes wrapped his arms around her to hold close as he continued the gentle, chaste caress. He would not grope her, he would not demand more than what she was presently giving. If ever there was a time to take things slow, now was it. But he felt his body heat up, regardless, and he knew that the effect she had had on him since she had arrived at the spa was true, she aroused him in ways he had never been aroused in before.\n\n\"Can we go back now? I want Natasha to know I'm okay. And I think that Elarinya saw what happened, I want to make sure she's not scared.\"\n\n\"What happened when you went there, Vesper?\" He hesitated in saying yes, he wasn't quite ready to see anyone else yet.\n\nShe shook her head and smiled at him, \"I saw my mother.\"\n\nHe was surprised, he hadn't expected that. \"She was there?\"\n\n\"Of course she was, Arc. She saved so many people in her life, where else would she have gone?\" Vesper moved out of his grasp but kept her hands folded in his.\n\n\"What happened? What did she say?\"\n\n\"She didn't say anything.\" Vesper bit her lower lip as he looked at her with a brow arched.\n\n\"No?\"\n\n\"She hugged me, Arc. From my mother, that was all I needed. I needed her to hug me.\" Vesper told him, pulling on his hands a little so that he would start to slowly make his way towards her home, their home.\n\n\"Did you see anyone else?\" He asked, knowing in his bones that her mother was not her only encounter.\n\nVesper had turned so that she was flying beside him, but she looked over at him when he questioned her and nodded, \"Yes. I saw someone else, several someones.\" \n\nHe furrowed his brow when she turned her head and continued flying towards the house that he had built for her. He had done it to show her that he loved her. He had done it to prove that despite the fact that he was so incredibly wrong for her, that they were meant for each other. Deep in the dark recesses of his heart, there had been a little flame lit when he'd looked over the shoulder of the dragon and seen the sparkling light. Hope that the dream he'd had of being in love, of being with her was real, and that he could actually have what he wanted for the first time in his life.\n\n\"Vesper, we should talk about this before we go in.\" He urged as they landed on the landscaped walkway in front of the house.\n\nVesper turned to him again and put her arms around his shoulders, she had to get on her tiptoes and still she was not tall enough to quite reach her lips to his. He had to bend slightly to accommodate her as she pressed her lips to his again.\n\n\"We have a great deal to talk about, yes. But later. When we can be alone and I am not worried about my friends.\" She grinned before turning away and walking up to her front door.\n\nMr. Hughes followed behind her, his body heated and desperate for that time where he could be alone with her, for when he could finally touch her like he had wanted to for so long. He closed the door behind him and saw that she was already hugging Natasha tightly.\n\nThey didn't speak out loud, but he knew they were communicating. He had been shocked when the wood elf's voice had sounded in his head the first time. He hadn't realized that she had such a power, and he didn't think her brothers knew about it at all.\n\nNeither woman looked from each other for a while, but they were both smiling. Finally, realizing that they were causing a lot of curiosity in the room among the others with them, they stepped back from each other.\n\n\"Is Elarinya all right?\" Vesper asked aloud this time.\n\nNatasha nodded, \"Yes, she's fine. I checked on her and told her that you were okay. She's sleeping now. It's getting late. I was about to head to bed myself.\"\n\n\"Vesper, are you all right?\" Samir asked gently, he was standing near the entryway to the dining room, his hands in the pockets of his jeans as he watched the women greet each other.\n\n\"Yes, I am fine, Samir. Better, I think, than before. Thank you.\" Vesper looked at her friend and smiled.\n\n\"Perhaps we should excuse ourselves for the night. Maybe, in the morning, if you feel up to it, you can tell us how your...visit went.\" Zheng spoke up from beside Samir and Vesper looked at the handsome Asian man and nodded, her face bright with emotion.\n\n\"Yes, I think that would be best.\" Vesper said and approached the two men, hugging them in turn before walking them towards the door of her home.\n\nNatasha quietly slipped out of the room to disappear down the hall to sleep with her daughter, and Vesper walked slowly back towards Mr. Hughes. Her eyes sparkled with her happiness, she had a contended look to her that he hadn't seen before, not even when he'd shown her into the insides of her home that first time. There was a spark of something else, as well, something far more human, something carnal.\n\n\"Can I assume that you would like to not sleep on my couch tonight?\" Vesper grinned with mischief in her voice as she put her hands on his chest.\n\n\"We need to talk.\" And he didn't need her to get him more worked up than he already was, he could already feel something new and foreign coiling in his groin area and he wasn't quite sure how to deal with it yet.\n\n\"Yes. But not here. I want to change. I'm hot in this.\" Vesper indicated the heavy wool dress that she was wearing and he nodded and turned off the living room light.\n\nThey walked to the back of the house in the dark, him just a step behind her, still slightly afraid that if he wasn't close, then something would happen that would drive them apart again. Once they were inside her room, she walked over to her dresser and lit a candle and then a few more, creating a soft glow to the room instead of the stark brightness that it would have been covered with if she'd turned on the light switch. He sat down on the edge of the couch and bent to take off his shoes. He hadn't even noticed that he'd been outside without a shirt on, he'd been so incredibly hot. Now, though, he was very aware that he was bare chested.\n\nVesper went to her dresser and pulled out a thin, silk knee-length nightgown and set it on the edge of her bed and then began to unbutton the dress she was wearing.\n\n\"My mother hugged me and then she sort of faded from view, I don't know quite how to explain it.\" She began talking softly as she undressed.\n\n\"Underwear, too, please, Vesper.\" His voice was hoarse as he made the request, and she nodded.\n\n\"Then I saw Fezekial. He seemed a bit surprised to see me. They all did.\" Vesper slipped out of her panties.\n\n\"They?\"\n\n\"Oh, yes. There were a great many of your brothers there. They didn't seem to be expecting me, I think they had expected to see you. But there I was.\" She picked up the nightgown and slipped her legs through the middle hole before pulling it up her body and settling the spaghetti straps over each shoulder.\n\n\"What did they say?\" He wasn't just curious, he was slightly worried as to what the angels would have said to his ayperi.\n\n\"They love you very much, Arc. And when they realized who I was, what I was, well...they were quite jealous. You still have a friend in Fezekial, however. He was the first...though not the only one of them, to stand up for you and tell the others that I was not there for them, that I would not be shared.\"\n\nHis ears burned red at the thought of other angels touching her, and he couldn't control the way he tensed as he stood up. Jealousy was an ugly beast, and he didn't like having to feel it against his own kind.\n\n\"They didn't touch me, Arc. I promise.\" She walked towards him and put her hands on his naked abdomen.\n\nArc frowned down at her. He could see more of her skin now and was very thankful that the tattoos that had appeared on her earlier had only been temporary, for they were gone now. She was fully back to who she had been before they'd touched, and he was thankful for that. He, though, would never be the same.\n\n\"You must understand, angels were promised this. For a very long time, and you are the only ayperi in existence. I cannot trust that one of them will not attempt to have you.\" He explained to her, and she nodded. The way she was running her fingertips over the skin of his belly was making pinpoints of heat swirl inside of him.\n\n\"But I will only have you. And I can control angels, Arc. I will never be in any real danger from them. Ayperi might have been promised to angels, but we are the ones who have to allow it. And I don't, I don't allow it from anyone...but you.\" Vesper tilted her head up again and kissed his throat slowly.\n\n\"I want you, Vesper.\" He groaned and raised a hand to the back of her head.\n\n\"You do?\" She grinned wickedly and moved her hands up and against his small masculine nipples.\n\n\"As my wife.\" He frowned, making her eyes widen.\n\n\"Your wife?\"\n\n\"I would not have you as my concubine. I want you to belong to me, just as I already belong to you. I would have us married.\" He kissed her forehead as she moved in to hug him tightly.\n\n\"If that's a proposal, Arc, I wholeheartedly accept it.\"\n\n\"I just ask that the wedding happen very very soon.\" He whispered as he set his cheek against her scalp.\n\n\"Oh, dear. Don't you dare. Don't you dare tell me that you expect me to wait even one more day to give you something I have promised you for so long.\" Vesper gasped, her hands tightened around his shoulders as she looked up at him.\n\n\"What?\" Mr. Hughes shook his head.\n\n\"My virginity. I want you to have it.\" She grinned wide at the man whose face immediately reddened and his lower lip trembled slightly.\n\n\"Vesper, we can wait. We should wait. I don't want to rush us through anything. You don't have to expect that I'll make you do this now.\" He spoke slowly, he hadn't expected her to offer her body to him so soon, granted, he had hope to at least caress her tonight, but he had had no intention of going so far as to take her innocence.\n\n\"Arc, we are not rushing into anything. Really, we've been slowly headed in this direction for months. I want you, and now I can have you.\" She lowered a hand and cupped the back of one of his and guided it in between her legs, \"See, I am more than ready for you.\"\n\nHer last words came out filled with her passion and Mr. Hughes bent the fingertips of the hand she had placed between her legs and rubbed the petals of her pussy. He felt the cloth of her gown dampen and knew she was aroused. His body responded quickly, and he was enveloped by the urge to grab her up and toss her on the bed right now, with no preamble, but he stayed where he was.\n\n\"You really want this now, you don't want to wait until we get married?\" He prodded again, he wasn't too fond of the idea of her regretting tonight.\n\nVesper shook her head and smiled at him, backing away so that he had to let his fingers slide away from her womanhood. \"I am absolutely sure that I don't want to wait, Arc. But I do need to go to the bathroom and take care of a few things first.\"\n\nHe bit his lower lip and nodded, was he ready for this? Was he ready for his first time with this woman? Could he please her? Could he make love to her and not fuck her like he had always done to women in the past? He wasn't sure, and that scared him, but if she wanted him to try, then he would. He would do anything that she asked.\n\nHe watched as she disappeared into the bathroom and closed the door. Then he walked over to the bed and pulled the blankets and sheets down. He made sure the door to the room was closed and locked, and that the blinds and shades were closed at the two windows. Mr. Hughes had just stepped out of his socks when Vesper came back into the bedroom. She had removed the gown completely and brushed out her long, beautiful hair to hang around her body. She had used a bit of the salve that was made here at the spa, the goo that they used to help the women find more pleasure in both anal and vaginal sex. He could smell the distinct, erotic aroma as it wafted towards him. \n\nCan I assume that somewhere in this room, you have hidden the items you will need to make this night pleasurable for both of us?\" Her question made his body burn and he thought about what she was asking.\n\nThe wooden cocks that he had used on her before, the one that he had intended to use to break her hymen that first day that they had been together in a sexual way, that's what she was talking about. He wouldn't need anything with that long of a handle now, as he could get much much closer to her. He took a step towards her and put his right hand on the nape of her neck.\n\n\"I don't have anything in your home, Vesper.\" He said huskily before covering her mouth with his, tentatively pushing his tongue against her lips and pulling away just as she began to open for him.\n\n\"You don't?\" Vesper breathed out, her eyes a bit dazed as she looked up at him.\n\n\"I don't.\"\n\n\"Well, things might be a little disappointing then.\" She frowned, and he couldn't help the way the left side of his mouth lifted ever so slightly.\n\n\"I don't need anything, Vesper.\" He told her, moving his mouth back over hers a second time, this time plunging his tongue inside, his lips molding harder against hers as he hinted at the passion he felt for her.\n\n\"You don't need-?\" Vesper whimpered when he pulled away again.\n\n\"I don't need.\" He nodded and smiled wider at her.\n\n\"What are you saying, Arc?\" Vesper grew very still except her hands, they were shaking rather fiercely.\n\n\"My wings weren't the only things that grew when you touched me, Vesper.\" He smiled at her, one eyebrow raised as her face showed her shock.\n\n\"What are you saying, Arc?\" She demanded more forcefully this time.\n\n\"I haven't actually checked, Vesper, but I'm pretty sure I have a penis.\" Mr. Hughes spoke low in his throat and then chuckled when she gasped and immediately moved her hand to carefully cup the front of his pants, yes, he was pretty sure the thick, pulsating mass that she was inadvertently rubbing was, indeed, a cock.\n\n\"Oh, my God.\" Vesper gasped.\n\n\"Indeed.\"\n\n\"Let's see it.\"\n\n*****\n\nAuthor's note:\n\nI hope you enjoyed the chapter! I'm sure you know what to expect in the next one! I have had soooo many requests to proofread and I wanted to thank you all for your offers. It is really kind of you to want to take the time to proofread for me. However, the nature of how I write means that I need to edit, and then re edit, and then even after that sometimes I shift things up a bit. I've been a lot better about catching spelling mistakes, etc. If I should need a proofreader in the future, however, I have plenty of amazing readers to choose from!"
    ],
    "authorname": "sinagainChris12",
    "tags": [
        "ayperi",
        "dragon",
        "comet moth",
        "wood elf",
        "angel"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-gift-she-gives-ch-16"
}