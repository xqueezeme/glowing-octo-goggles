{
    "title": "Three Square Meals Ch. 104",
    "pages": [
        "*Sakura and Calara were both badly hurt the last time we fought the astral monsters,* John said to Alyssa as he left the bedroom. *I couldn't drag them in there again, not so soon after Terra... they need more time to recover.*\n\nHis blonde Matriarch was quiet for a moment, lost in thought. *If I can prevent us from being drawn into that sub-plane, I can keep the link going and I'll still be able to tap them for energy. I just need to figure out how to stop us from getting cut off.*\n\n*Have you worked out how you're going to create your own sub-plane?* he asked, walking down the corridor towards the Officers' Lounge.\n\nThere was a long pause before she replied evasively, *Athena and I are working on it...*\n\nSakura sprang out of the blue anti-grav field and nearly ran into him in her haste. \"Oh! Hey, John!\" She smiled when he caught her in his arms, but her eyes tightened with worry when she looked up at him. \"Are you sure sending me away with Calara is a good idea?\"\n\nHe nodded and placed his hands on her waist, drawing her close. \"Calara really needs some time with her Mom and you're the most powerful bodyguard I can send with her.\"\n\n\"But what about the nightmare!\" she objected. \"I should be here at your side tonight!\"\n\n\"Alyssa's going to tap you for energy, so you'll still be helping,\" he said with a reassuring smile. Reaching up to stroke her cheek, he continued, \"Last time we went to that sub-plane the two of you were badly hurt. I want to spare you both from that if I can, at least this time round...\"\n\nSakura shook her head, long raven hair swishing around her shoulders. \"But we'll be better prepared this time! We know how to create armour and weapons there now... it'll be much harder for them to hurt us!\"\n\n\"That's true... but there's also another reason I want to keep you away from this one. In a few days' time we'll be liberating worlds from the Kirrix and it's not going to be pleasant,\" John said firmly. \"I really need you refreshed and ready for then, okay?\"\n\nHer face fell, her expression filled with shame. \"Is this because I disobeyed orders on Khalgron?\"\n\nLifting her chin so that she was facing him again, John gazed into her eyes. \"Remember what happened with that little Trankaran girl? All those terrible memories stirred up by seeing her in danger? It's probably going to be a lot worse with Terran children.\"\n\nShe hesitated, then nodded, looking glum. \"Alright, I understand.\"\n\n\"No, I don't think you do,\" John said, his voice gentle and sympathetic. \"You've been dealing with a huge amount of stress recently; hell, it was only two weeks ago that you faced Mikaboshi! You need some time off, honey. You've been there time and again for me since you joined our family, but I won't risk you burning out. I love you too much for that.\"\n\nSakura hugged him tight and buried her face in his chest. \"I can't help feeling like I'm abandoning you when you need me,\" she mumbled, sounding wracked with guilt.\n\n\"Please don't think like that, it's not true at all,\" he said, running his fingers through her silky black hair. \"Calara really needs some time off as well, so this is for her just as much as you. I wish I could send Dana along too, but the research she's working on at the moment is important. When we do face the Kirrix again, I can always keep her on the Invictus to spare her from the worst of it. You're lethal in the Valkyrie and I'm going to really need you on top of your game, right in the thick of the action.\"\n\nShe pulled back to look at him, her expression now calm and accepting. \"You're right. The last thing I want is to let you down in combat...\" She smiled, then gave him a tender kiss. \"Thanks for looking out for me.\"\n\nJohn placed a hand on her shoulder and looked into her eyes. \"It's only fair to warn you that this isn't going to be an easy assignment. Calara's been avoiding planning the wedding for weeks, so Maria intends to make up for lost time. I'm going to need you completely focused on pretty dresses, guest lists, seating arrangements, the works!\"\n\nSakura giggled and nodded. \"I promise I'll do my best.\"\n\n\"Good girl,\" he said with a grin. \"I knew I could count on you.\" \n\nShe waved goodbye and John watched her jog down the corridor to her room, before he turned and headed into the Officers' Lounge. He found Alyssa and Lynette standing by one of the sofas, with the blonde holding up a grey officer's uniform and studying the older woman with an appraising eye. John's gaze was drawn to the dark-red mid-length dress that Lynette was wearing, the slinky material doing a spectacular job of showcasing her curvy figure.\n\n\"That fits you perfectly,\" he said appreciatively, his eyes lingering on the flare of her hips as he walked over to join them.\n\nLynette darted a glance at him and looked mortified, her hands moving self-consciously to the dress. \"I haven't worn anything like this since my twenties!\" After a moment's pause where she glanced down at the generous display of cleavage, she blushed and admitted, \"In fact, I don't think I've ever worn a dress like this!\"\n\n\"You look hot, stop fretting,\" Alyssa said, a sly smile on her face. She glanced over her shoulder at John and added, \"If you weren't being all weird about keeping things platonic, you'd ring her bell, wouldn't you, handsome?\"\n\nJohn saw that the brunette was watching him carefully as she waited for his reply. He cleared his throat and said, \"I wouldn't phrase it quite like that, but you do look very attractive, Lynette. As you've probably realised by now, Alyssa's passionate about fashion... she won't let you wear anything that isn't very flattering.\"\n\nThe older woman relaxed and gave Alyssa a look filled with gratitude. \"I'm sorry, this is all very new for me.\"\n\nAlyssa brushed her fingers down Lynette's arm in a playful but affectionate gesture. \"I know, but I promise you're in safe hands. You're one of us now, or at least you will be very soon, and it's my job to take really good care of you.\" \n\nLynette studied her for a moment and sounded surprised as she said, \"You really mean that, don't you?\"\n\n\"Absolutely,\" the blonde replied, with a warm smile. \"Just think of me and all the girls like long-lost sisters. We've got your back now, like a big loving family.\"\n\nA matching smile slowly spread across Lynette's face. \"I didn't realise how much I missed being a part of a family. It's a lovely feeling.\"\n\n\"No brothers or sisters?\" John asked, taking a seat.\n\nAfter a nod from Alyssa, Lynette sat down too, the dress revealing more of her shapely legs. \"I was an only child and I lost my parents several years ago.\" She gazed into the distance, a sadness in her eyes. \"I'm starting to realise just how much I sacrificed for my career. It's been... lonely.\"\n\nAlyssa leaned down and gave her a gentle kiss on the cheek. \"That's over with now. You'll never feel like you're alone again.\" She straightened and draped the uniform over her arm. \"I'll just make some alterations to this and you'll be all set for the meeting. I'll need to take in the waist and let out the bust a little. You've been... redistributed.\"\n\nLynette glanced down at her considerably perkier chest and blushed, then placed her hands on her rounded stomach. \"I don't think my waist has changed all that much.\"\n\nThe blonde trailed her fingers over the curve and grinned. \"That's just a temporary cum-belly. You've actually dropped six inches off your waistline.\"\n\n\"I can't believe the difference in just a day...\" Lynette marvelled, before glancing at John and giving him a pleading look with puppy-dog eyes. \"Please can I take a look in the mirror?\"\n\n\"Just indulge me for a little while longer,\" he said with a smile. \"I promise it'll be worth it. Besides, I need to strengthen your heart in preparation. The last thing I want is you dying of a heart attack.\"\n\nShe looked at him in shock, then laughed when she realised he was joking. \"Alright, I'll be patient.\" Looking at him curiously, she continued, \"When are you going to feed me again?\"\n\n\"I was originally thinking midday,\" he replied, eyeing the curve to her tummy. \"But that lot should last you until around four this afternoon.\"\n\nAlyssa laughed and nodded. \"Yeah, please wait. This poor uniform wouldn't be able to cope with you being fully loaded!\"\n\nJohn smiled at her, then said, \"There's actually another reason for delaying too.\"\n\n\"What's that?\" Lynette asked, looking at him curiously.\n\nHe met her hazel-eyed gaze and replied, \"I want to prove to you that I'm not just doing all this to turn you into a...\" He raised an eyebrow. \"I believe the term you used was 'puppet'?\"\n\n\"It was,\" she said solemnly. Looking at him in fascination, she continued, \"So how do you intend to prove otherwise?\"\n\n\"By getting you elected before I've fed you three times,\" John replied, his tone and expression open and honest. \"Then if you change your mind about joining us, you can still be the Fleet Admiral without feeling like you're under any obligation to me.\"\n\n\"You'd really do that?\" Lynette asked quietly. \"When you're this close to having someone you 'control' in charge of the Terran Federation?\"\n\nJohn shrugged and nodded. \"I'm not interested in ruling the Terran Federation by proxy, Lynette; I just want High Command to stop stabbing me in the back.\" He waved his hand at her body and added, \"I've been doing this to give you a makeover as a thank you gift, not to try and control you. Besides, it really doesn't work that way, all the girls have free will to make their own choices.\"\n\nLynette gave him a grateful smile, then reached out to hold his hand. \"You didn't have to make this gesture, but I appreciate it nonetheless. I believe that everything you've told me is the truth.\" She tilted her head to one side and continued thoughtfully, \"I have considered that I might be feeling this way because you're exerting some kind of insidious influence over me, but I honestly don't think that's the case.\"\n\n\"Like I said, you can still walk away if you choose,\" John said, making a show of removing his hand from hers. \"I think we're close enough friends now that you can see I'm a good ally for the Terran Federation.\"\n\nShe caught his hand again before he pulled it back too far. \"I haven't changed my mind,\" Lynette said, smiling as she interlaced her fingers with his. \"I trust you. I want to be a part of your... family.\"\n\n\"Phew!\" Alyssa said with a grin, putting her arm around Lynette and giving her a hug. \"I'd have been really disappointed if you stopped now. I want to see what you look like when the change is finished!\"\n\nThe older woman laughed and nodded. \"I must admit to being more than a little curious myself.\"\n\nJohn smiled at her, then relaxed in his chair. \"I suppose we better discuss how we want to handle the meeting this afternoon. Do you have any ideas?\"\n\nLynette responded with a decisive nod. \"I do...\"\n\n***\n\nLeader Mantaneus' squinted against the glare as he stared at his battered cruiser. Shafts of bright light from Ashana's yellow star arced down into the underground hangar and reflected off the silvery hull of his ship, making it gleam in the midday sunshine. As he watched, anti-grav cranes began to pivot, applying more force to the massive cylindrical object that was deeply impaled in the disc-shaped craft. A grinding squeal of tortured metal echoed around the hangar and the ancient onyx device was slowly inched out of the sundered Etherium hull. \n\n*We were very fortunate that our entire vessel was not destroyed in the impact,* he noted to the smaller Ashanath engineer standing beside him.\n\n*It was not good fortune that saved us,* Engineer Careti replied. *The inertial dampeners reduced the force of the collision by 43.829 MegaHeurons, preventing the entire vessel from being instantly obliterated.*\n\nA robed Ashanath glided up to them, his spindly hands folded into the voluminous sleeves of his white garment. *What was truly fortunate was that you managed to locate this missing fragment of the Legacy,* Councillor Talari said, inclining his head politely to them both. *My thanks for keeping me apprised of the recovery effort.*\n\nThey remained silent after that, watching as the long column of black metal cleared the outer hull of the Ashanath cruiser. When the huge cylinder finally swung free, it wobbled precariously for a second until it was restrained by several grav-hoists, then floated ominously in the air. The glistening black object was just over sixty metres long and despite having been involved in a high-speed collision, there wasn't even a scratch on its flawlessly smooth surface. It was obvious to anyone observing the extraction that this was a weapon of some kind and the yawning barrel seemed to be surrounded by a forbidding aura that sent a shiver down their spine. Unlike the gleaming silver ship, sunlight seemed to... avoid... the black object, as if shying away from its fearsome presence. \n\n*How can it have survived intact?* Leader Mantaneus marvelled, his big black eyes sweeping along its length. *Not just the crash, but the Drakkar torpedo attack as well... I was present at Ashana when we defended our homeworld from the invasion, I witnessed the calamitous explosion that crippled the Legacy.*\n\nCouncillor Talari turned to face him, the expression on his face unreadable even to another Ashanath. *It is a sinister relic from a bygone era, Leader Mantaneus. I fear its technological secrets are far beyond our ability to unlock...* He paused for a moment, then fixed the cruiser captain with an unblinking stare. *I trust that your absolute discretion can be relied upon regarding the retrieval of this device? All data regarding the Legacy is classified at the highest level.*\n\n*What device do you speak of, Councillor Talari?* Leader Mantaneus replied, sounding confused. *Our vessel was involved in a collision with a rogue asteroid...* \n\nEngineer Careti nodded, adding, *It was an unfortunate but not particularly remarkable event. Perhaps another sweeping of the space lanes around Ashana might be well advised?*\n\nCouncillor Talari gave them both a sweeping bow. *My sincerest thanks for your cooperation.*\n\nThey returned his bow and Talari walked away, his white robe rustling over the orange sand drifting over the hangar's deck.\n\n*Senior Councillor, we have completed the recovery operation,* Talari said to the leader of the Ashanath Collective. *The Quantum Flux Cannon appears to be fully intact!*\n\n*I thought that artefact was lost forever!* Ularean gasped, sounding elated. *I will inform JohnBlake immediately!*\n\n***\n\nAvery Gibson's hologram glowered at Jehanna. \"You're supposed to be my lead anchor! You're not much good to me gallivanting around on the Lion's ship!\"\n\n\"Just have Bill stand in for me for a few more days,\" Jehanna pleaded, wringing her hands together. \"Please, Avery...\"\n\nHe harrumphed and waved his hand dismissively. \"We got a brief bump in the ratings when Armstrong got shot in the arm, but I need you back on the screen. The sympathy boost is just about tapped out.\"\n\n\"Trust me, it'll be worth it! I'm being given unrestricted access to the Lion, the Lionesses, everything!\" she said, her brown eyes sparkling with excitement. \"I'm even working on new contacts in High Command... this is big, Chief, I promise!\"\n\nAvery wavered, conflicting emotions playing across his face. \"I-I think you're too close to this one, Jehanna... It might be better if you come back to the studio, so we can keep an eye on you for a while.\"\n\nJehanna gave him a playful grin. \"Avery Gibson, I've never known you to turn down the opportunity for an exclusive. You're not getting soft in your old age are you?\"\n\nHe threw his hands up in the air and rolled his eyes as he snorted, \"Fine! Have your extra two days, but you better be back in the studio by Friday, young lady! And the story you're working on better be dynamite!\"\n\n\"It'll be worth it, Chief!\" she exclaimed, her grin widening.\n\nHe nodded and grumbled, \"It better be...\"\n\nJehanna was about to end the call, but she hesitated for a second. \"I'm really glad you weren't hurt, Avery. Please wish Bill a speedy recovery from me.\"\n\n\"I'm glad you're safe too, Jehanna. You had us all worried there,\" he replied, his stern gaze softening. He coughed and made a shooing motion with his hand. \"Now get back to work! I'm not paying you to lounge around... you owe me a story!\"\n\nShe laughed and nodded, waving goodbye as she ended the call. Rising from her chair, Jehanna steadied herself with a hand on John's desk, unused to carrying such a heavy weight in her swollen belly. She ran her hand over the tautly-stretched skin, shivering with pleasure at the thrill that sent through her body. Knowing that she was huge with the Lion's cum was incredibly exciting and Jehanna couldn't believe she'd actually been able to live out one of her naughtiest fantasies. \n\nWalking out of the Ready Room, her eyes flicked across the Bridge to the blue-skinned Maliri sitting at the Int-Ops station. She was reminded of a much more recent fantasy, her mind drifting back to that zero-g orgy and those gentle blue hands that seemed to be everywhere at once. She smiled to herself, eager to speak to the enchanting alien woman again. As Jehanna walked up the ramp, she watched Irillith frowning in concentration and couldn't help wondering what was making the hacker look so frustrated.\n\n\"Hello, Irillith. What are you working on at the moment?\" she asked politely, as she stopped by the station.\n\nThe Maliri blinked in surprise at the interruption, having been so immersed in her work that she'd been oblivious to Jehanna's arrival. Irillith gave her a radiant smile and rose from her seat, then wrapped her arms around Jehanna in loving embrace. \"Welcome to the family,\" she said, her tone gentle and full of warmth.\n\nJehanna snuggled into the hug, feeling the taller girl's impossibly pert breasts pressing against her own. She felt her nipples harden in response to that deliciously soft contact and couldn't help letting out a low moan. Irillith pulled back in surprise at the intriguing sound, then gave her a knowing smile as Jehanna flushed with embarrassment. She ran her slender blue fingers over the dusky girl's curved tummy, her smile widening when she heard Jehanna groan in response. \n\nLeaning closer Irillith whispered softly, \"Tashana and I can't wait to get our hands on you again; we've never seen such a beautiful Terran before.\"\n\nJehanna gazed into those angular violet eyes, enthralled by the sensuous exotic woman. \"I-I feel the same way... about you.\"\n\nIrillith kissed the tip of her index finger, then gently placed it on Jehanna's flushed lips. With a sultry smile, the Maliri girl murmured, \"Tashana would be cross with me if I kept you all to myself. Let's wait for my lovely sister to return, then we can all play together...\"\n\nInhaling deeply, Jehanna nodded, then smiled as she blew out her breath. \"I don't know how any of you get any work done... there's far too many beautiful distractions aboard.\"\n\nThe Maliri laughed as she returned to her seat and glanced at the bank of holo-screens. \"It can be hard to keep focused sometimes.\" She glanced at Jehanna and added, \"You asked what I was working on... if this is my interview, it might be prudent for me to wear a suit of armour. I don't think John's quite ready for the secret of the Maliri to be revealed yet.\"\n\n\"No, this isn't an interview, I was just curious about you and your work,\" Jehanna quickly explained, then felt flustered at her lack of composure.\n\n\"Well, I spent this morning locking down Hangar Bay One, disabling all the security cameras and sweeping the place for hidden surveillance equipment. Now that's completely secure, I've been trying to decipher the Vulkat's technology archive.\" She sighed with frustration and waved a hand at her screen. \"If you guessed that an arachnid thinks in an entirely different way to a humanoid, you'd be absolutely correct... none of the decoding programs I've written so far have come remotely close to deciphering whatever this is written in.\" ",
        "\"Is Faye helping too?\" Jehanna asked, glancing at the corrupted data fragment on the screen.\n\nThe purple sprite flashed into existence beside them, her holographic image shaking her head. \"I can't even access the data!\" she exclaimed, pouting in frustration. \"My data ports are totally incompatible with whatever format the Vulkat use. We were very lucky that Irillith's data crystal was even able to store the archive dump... that's actually a very positive sign.\"\n\n\"Sorry, computers aren't really my forte,\" Jehanna admitted, as she tried to understand what they were saying. \"So, the problem is that you don't know how to read the Vulkat language?\"\n\nIrillith sighed and shook her head. \"Unfortunately, it's more complicated than that. I'm good at learning new languages, so it won't take me long to translate the Vulkat's once I've identified how it's structured, but I can't even read what's been written yet.\" When she saw the blank look of incomprehension on Jehanna's face, she paused for a moment to think of a suitable metaphor. \"Imagine for a moment that we're looking at a book full of Vulkat writing...\"\n\n\"Okay, I can do that,\" Jehanna replied with a smile. \n\n\"Well I'm still stuck trying to figure out how to open the book,\" Irillith muttered, giving the screen an angry glare. \"The Vulkat have a completely different approach to programming than we do.\"\n\nThe journalist nodded, finally understanding. \"So you're using your psychic abilities to try to... What was it you said? To think like a spider... so you can open the archive.\" Shaking her head in admiration, she added, \"It must be amazing to do the things all of you can do. When you stepped out of the screen on Weber's ship, I must admit that I-\"\n\nHer voice trailed off when she saw Irillith blush a dark indigo, the Maliri cringing with embarrassment. \n\n\"Did I say something wrong?\" Jehanna asked in alarm. \n\n\"No, it wasn't you,\" Irillith mumbled, then tapped her temple. \"Tashana's laughing at me and calling me an idiot.\"\n\nJehanna frowned and shook her head. \"You're not an idiot,\" she said firmly, reaching out to stroke the Maliri's toned blue arm. \"I think you're amazing.\" \n\nIrillith placed a hand on hers and gave her a grateful smile. \"Thank you, but Tash is absolutely right... I was being a block-headed fool.\" She chuckled with embarrassment and continued, \"I was so eager to get started on the data decryption, I just handled this as I would any other job, like I've done thousands of times before.\" Her eyes began to glow with a fierce violet light. \"My sister was just reminding me that I need to stretch myself...\"\n\nImmersing her mind in the cyber-realm, Irillith was suddenly surrounded by brightly coloured streams of data arcing across the Bridge. She poured her spirit form into the data jack on the console in front of her, then found herself standing on a silver-etched platform that she knew represented the Int-Ops Station. She ignored the glowing data towers rising from the floor, instead making a beeline for the port where the data-crystal with the Vulkat archive was currently inserted.\n\nIn a flicker of purple light, Faye zipped onto the platform and skidded to a halt beside her. \"What're you going to do, Creator?\" she asked in a hushed voice, staring at the bewildering array of indecipherable code that swirled around the data port. \n\nIrillith took a deep breath, her glowing spirit form's chest rising and falling as she exhaled. She didn't have to breathe here, it was simply a reflexive way of clearing her mind so that she could focus. \"I'm going to think like a spider,\" she replied, violet light spiralling down her arms and pouring into the data port.\n\nShe could feel her consciousness shift, fragmenting and becoming oddly discordant, her view splitting into eight separate sections that merged to provide a panoramic view of her surroundings. After that profound shift in perspective, she focused on the jumbled mass of Vulkat code, using her psychic connection instead of a bespoke program to attempt the translation.\n\nThe haphazard strings of data began to twist before her eyes, or more accurately, her mind began to shift, viewing the bizarre code in an altogether alien way. Then, as if a switch had been flipped, she began to make sense of the Vulkat data. In a sudden epiphany, Irillith realised that the Vulkat segmented their code into eighths, each part divided by a bewilderingly complicated index. Now that she could see the pattern, she realised it was eerily reminiscent of a spider's web, each data-read like a trapped fly tugging on the sprawl of code strands. By splitting her vision into eight distinct parts, her brain was now able to view the segments as one coherent, integrated piece of code.\n\nShe let her mind flow out of the Cyber-realm and back to her body, closing her eyes for a moment to shrug off the momentary surge of dizziness. As soon as it passed, Irillith stood and flung her arms around Jehanna, hugging her tight. \"You're a genius! Thank you so much!\"\n\n\"What just happened? Did you work out how to open it?\" the smaller girl asked in surprise, the Maliri hacker having only been distracted for what seemed like a few seconds.\n\nIrillith laughed and nodded enthusiastically. \"I figured it out thanks to you! Now that I understand how their code is written, I just need to write an application that can read the Vulkat data. You just saved me untold hours of frustration!\"\n\nJehanna grinned, delighted she'd been able to inadvertently help the gorgeous alien girl. \"It was my pleasure!\"\n\nThe Maliri nodded, her violet eyes sparkling with desire. \"It will be...\"\n\n***\n\nDana carefully angled her body as she soared through the air, the anti-grav generators built into the Paragon suit letting her control her ascent. She swept up the flank of the Invictus, her sky-blue eyes darting over the horrific damage to the aft of the battlecruiser.\n\n\"Damn... that's one fucked up ship,\" she muttered, frowning as she surveyed the charred remains of the engines.\n\n\"I'm really sorry I wrecked it,\" Faye said, her tiny holographic face looking chagrined.\n\nDana gave her a supportive smile. \"It wasn't your fault, Faye, no one blames you. It was those Kintark bastards that shot it up.\" Her broad smile faded and she winced as she saw the extent of the damage caused by the plasma fire. \"But the damage to the superstructure is worse than I thought. We'll need to chop out sections F429 to H472 and replace all the melted support stanchions with new ones. Do you think your boys can handle that?\"\n\n\"Of course!\" Faye chirped, grinning at the prospect. \"I'll start writing a custom program to handle the repairs.\"\n\nDana nodded, eyes roaming over the incinerated superstructure. \"Awesome, thanks. That'll save me a ton of time.\" \n\n\"Should I start configuring the Mass Fabricators to create the replacement sub-frame?\" the purple sprite asked.\n\n\"Nah, we can ask Charles for the replacements, they're just regular Heavy-grade type-D stanchions,\" the redhead replied, floating above the melted section of the hull. \"They must have shitloads of spares at Olympus.\"\n\nFaye perked up and said, \"I'll submit a request for the 87 we need!\"\n\n\"Thanks,\" Dana murmured distractedly, glancing down the length of the Invictus' pockmarked hull. \"We better check out that busted power regulator. I couldn't tell from the Damage Status display just how bad the damage was to all the nearby power couplings.\"\n\n\"The production run for the last Trankaran engine will be complete in 2 hours 36 minutes,\" Faye informed her friend, checking the status of the Mass Fabricators. \"The replacement parts for the power regulator are queued up next.\"\n\nDana engaged the thruster on her back and soared over the starboard side of the hull. \"We're slightly ahead of schedule on the repairs, so losing a bit of time rebuilding that section of the aft hull shouldn't be a problem.\" She glanced at the gleaming section of brand new armour plates on the topdeck. \"We just need to make sure John and Alyssa don't slack off with making all the armour plating we need.\"\n\n*I'll make some more after lunch,* Alyssa grumbled, her telepathic voice echoing through Dana's mind. *Speaking of which, it'll be the first time all the new girls will be joining us, so don't get distracted and pitch up late!*\n\n*Yes, Mom,* Dana said, smirking at the blonde.\n\nShe heard the familiar roar of retro-thrusters firing up and turned around to watch the Raptor glide out of the Invictus' Secondary Hangar. The gunship gained some altitude, the nose dipping as it slowly approached her. Dana spotted Calara and Sakura through the cockpit canopy, both girls grinning and waving at her, before the Raptor swung around and raced out of the docking bay.\n\nFaye's luminous eyes followed the departing ship as it left Olympus. \"I would've liked to have seen Maria again. Watching her interact with Calara has been absolutely fascinating; the bond between a loving mother and daughter is truly wonderful to observe.\" She looked wistful as she added, \"I just wish I could experience that personally.\"\n\n\"Yeah, me too,\" Dana said softly, watching the gunship soar away into space.\n\n***\n\nJohn greeted Irillith and Jehanna with a wave as he strolled down the ramp to his Ready Room. It was strange not to see Faye on the Bridge, her secondary avatar was usually a constant presence, but he knew she was very busy with managing the repairs and tutoring Helene. When the door slid open into his Ready Room, he found the aquatic girl sitting on the high-backed leather chair behind his desk. She was listening spellbound as Faye chattered away, the purple sprite pointing animatedly at a holographic Empire Map.\n\n\"And all this territory used to be called the Maliri Regency, but the Matriarchs changed the name to the Maliri Protectorate when John befriended them.\" Faye exclaimed, gesturing towards the huge expanse of stars that were overlaid in blue.\n\n\"He leads all those people?\" Helene gasped, her eyes flickering across the hundreds of sparkling lights that represented the systems in Maliri Space.\n\n\"Yep!\" Faye said proudly. \"He calls himself their Protector, but he's really their-\" Her eyes darted to John and she grinned at him. \"Hey, John!\"\n\n\"Hello, ladies,\" he said with a smile. \"Are you two having fun?\"\n\nHelene sprang from her chair and ran over to hug him, a beaming smile on her face. \"Faye knows everything!\" she exclaimed, darting a look of sincere gratitude at the elfin girl. \"I've learned so much already!\"\n\n\"It seems you were learning all about the Maliri,\" he said, stroking her back. \"Did Faye show you where Irillith and Tashana are originally from?\"\n\nShe nodded enthusiastically, turning to point at a yellow star deep in Maliri Space. \"They come from a world called Valaden in the... Epsilon Aquarii system?\"\n\n\"That's right, well done,\" he said, giving her an encouraging smile when Helene glowed with pride at his praise. \"We'll be visiting Valaden in a couple of weeks, so you'll be able to see it for yourself soon.\"\n\nFaye hopped off the desk and bounded over to them. \"I'll leave you guys to chat, unless you need me for anything else?\"\n\n\"Thanks for looking after Helene,\" John said, pulling her close for a peck on the cheek. \n\n\"I really enjoyed it. She's a good listener and a quick learner,\" she replied, flashing a grin at Helene. \"Any time you want to know more, just come and find me, okay?\"\n\n\"I will, thank you so much!\" Helene gushed, with an appreciative smile.\n\nFaye waved goodbye and the couple watched her leave the room, before turning to face one another. \n\n\"I'm sorry I interrupted your lesson,\" John apologised, leading the aquatic girl over to the sofas and gesturing for her to sit. \"I wanted to catch up with you and see how you were doing.\"\n\nHelene sat beside him for a second, then quickly changed her mind and threw a toned thigh over his legs, straddling his lap. \n\n\"How am I doing? I've been having an incredible adventure and experiencing so many wonderful new things,\" she breathed, her baby-blue eyes gazing intently into his. \"Thanks to you...\" \n\nJohn smiled at her and ran his hands over her hips. \"I'm really glad you decided to come with us. It's only been a couple of days, but it feels like you're already part of the family-\"\n\nHelene leaned forward to kiss him, silencing him as she moaned into his mouth. She entwined her fingers in his hair and pressed herself against his chest, deepening the kiss and flickering her tongue against his. John responded in kind, holding her close and enjoying the feel of her athletic figure as she writhed against him. \n\n\"I can't wait to join you, John,\" she gasped breathlessly, when they finally parted. \n\n\"Are you absolutely sure? This is your last chance to change your mind,\" he asked, studying her reaction.\n\nShe laughed gaily and hugged him tight. \"How can you even ask me that? I've never wanted anything more in my entire life!\" She gave him an adoring smile. \"You welcomed me into your home with open arms, then your family made me feel accepted and loved. When I woke this morning in the communal bed, I felt truly at peace for the first time in years; I'd given up hope of ever feeling that way again. If you'll have me, I promise I'll love you to the end of my days...\" \n\nJohn remembered Alyssa's cautionary warning that Helene was not a Terran girl and had grown up with entirely different customs. He decided to throw caution to the wind and reciprocate her earnest pledge. \"And I promise to love you too. I'll take care of you and keep you safe, giving you the kind of life you've only dreamed of.\"\n\n\"And lots of babies?\" she asked insistently, her blue eyes searching his.\n\n\"As many as you want,\" he replied, smiling back at her.\n\nHelene melted against him with a soft sigh, her lips seeking his for another kiss. John encircled her with his arms, holding her close and savouring the feelings of protectiveness she stirred up in him. The teal-skinned beauty was a girl of simple needs, wanting only to please her man and give him many strong, healthy children. He found her wide-eyed naivety quite endearing, as was her eagerness to please and her open sincerity. In only this short time, he'd been impressed by the sweet-natured young woman, whose curiosity about the galaxy was only matched by her willingness to work and learn.\n\nShe pulled back and her hand slid down between them to feel his thickening length. Staring intently into his eyes, she whispered, \"I want you to feed me again; remind me what it was like to carry that comforting weight in my belly...\"\n\n\"I want you,\" John said simply, making her flush with excitement at the intensity in his gaze. \"I'll do anything I can to make you happy.\"\n\nAs they started to strip off, the door slid open and Alyssa rushed into the room, a look of eager anticipation on her face. \"Is it alright if I watch, Helene?\" she asked, striding over to join the teal-skinned beauty. \"I love seeing this part...\"\n\n\"Of course, Alyssa,\" the aquatic girl replied, smiling at her warmly. \"I wouldn't be here if it wasn't for you and Jade.\"\n\nJohn sat down again, watching Helene drop to her knees and lick her lips as she eyed his throbbing length. Alyssa shimmied out of her dress, then patted John on the shoulder. \"Move forward a bit, I'll snuggle in behind you.\"\n\nJohn did as she asked, moving forward enough for her to hop over the back of the sofa and cuddle into him. Shuffling closer to Helene made his bobbing cock bump into her delicate nose and she giggled then reached for him with a teal-hued hand. The difference in their skin tones was readily apparent as she carefully wrapped her fingers around his shaft, highlighting her exotic alien nature. John could feel Alyssa's big breasts pressed into his back as she leaned against him, her chin resting on his shoulder as they both gazed down at the girl kneeling before him.\n\n\"Please take it nice and slow,\" Alyssa said to the aquatic girl, her voice catching with excitement. \"I want to enjoy every second of this...\"\n\nHelene glanced up at John for confirmation, and he nodded his approval, sharing a smile with her. \"I'd like that too.\"\n\nWhen she parted her lips and slowly approached the swollen head of his cock, he could feel his anticipation building, senses heightened as he longed for that initial contact. That first touch of her mouth against his skin was electrifying and he saw her lips quirk into a smile when Helene heard him respond with a moan.\n\n\"This is it,\" Alyssa purred in John's ear, loud enough for Helene to hear too. \"The final moment before she chooses to become part of our family.\"\n\nHe watched those bluish-green lips start to inch down his shaft, her tongue gently caressing the underside of his cock as she crept down his length. Helene's soft blue eyes were gazing up at him, an enchanting look of excitement and longing clear for him to see.\n\n\"She's making that choice, John,\" the blonde whispered, kissing his earlobe. \"Helene knows that she's putting her old lonely life behind her and choosing a future with all of us. The girls and I will love her like a sister and do everything we can to make her happy... but it's only you that can give her what she really needs.\"\n\n\"You're such a beautiful girl,\" John murmured, brushing his fingers through Helen's luxuriously soft mane of light-green hair. The colour reminded him of their dive on Oceanus, when bright sunlight had shone through delicate kelp fronds. \"You're going to give me gorgeous children, aren't you?\" \n\nHelene moaned with desire, her throat vibrating around his cock, as she eased all the way down his length. She paused for a moment when she reached the base, her lips tightening as she sucked on him for a few seconds, before easing back until only the head was in her mouth. Her blue eyes flashed with lust when she made eye contact with him, before she sank back down, repeating her previous journey.\n\nAlyssa hugged John tight, her breathing quickening to match his. \"That's it handsome. You just relax and let Helene show you just how much she wants this...\"\n\nJohn did as she asked, leaning back into the nude blonde's loving embrace. He watched Helene sliding up and down his cock, feeling his arousal building, as she put her heart and soul into making this as good for him as she possibly could. There was no guilt or worry nagging at him this time, as he could clearly see how willing Helene was. Her eyes flickered to Alyssa and the two girls shared an affectionate smile, or at least Helene tried her best with her lips stretched wide by his girth. \n\nThe smooth rhythmic stroking felt incredible and it didn't take long for Helene to bring John to climax. He groaned as he came, his quad flexing as it pumped the first blast of cum straight down her throat. Helene's eyes widened as she felt it, then immediately glazed over, her long eyelashes drooping as she went into a daze. John heard Alyssa's sexy moan in his ear, the blonde quivering as she joined him in a sympathetic orgasm.\n\n\"I can feel her!\" she panted, clinging tight to him. \"She's thrilled, John... she wanted this so much.\" \n\nHelene shrugged off the daze, her eyes sharp and focused once more. John brushed his fingers through her hair, holding her gently as his cock throbbed in her throat, pulsating to a steady beat as long jets of cum shot down into her stomach. Their eyes met and locked onto each other, a wealth of intimacy in that wordless communication, both of them understanding that their fates were now intertwined. \n\nWhen he was done, Helene eased back, letting his softening cock slide out of her throat and past her lips. She had a look of profound satisfaction on her face, which changed to awe when she glanced down at her heavily rounded belly. Her slender fingers tentatively explored her cum-packed curves and her expression shifted again, turning poignant as she remembered the last time her tummy was this size. ",
        "Glancing up at him, she said softly, \"I never forgot how wonderful this feels... but I'd given up all hope of ever feeling this way again.\"\n\n\"Come here, honey,\" John said, offering her a hand.\n\nShe let him pull her up so that she was sitting sideways across his lap, John putting one arm around her back, his other hand resting on her stomach. Alyssa moved too, sliding off the sofa to kneel in front of them, joining him in embracing the newest addition to their family.\n\n\"When we have a baby together, I'll be able to keep you both healthy and safe,\" John said, interlacing his fingers with Helene's over her tummy. \"You won't have anything to worry about, I promise.\"\n\n*And I'll be here for you too,* Alyssa said, her telepathic voice fluttering through Helene's mind for the first time. She placed her hand on top of theirs, lovingly stroking each of them in turn. *You're part of our family now. We'll all do whatever we can to make sure you're happy here with us.*\n\nA tear rolled down Helene's cheek as her eyes welled up, an expression of pure joy and tremendous relief on her lovely face. \"Thank you both so much.\"\n\nJohn smiled at her and shook his head. \"I should be the one thanking you. I couldn't be more honoured that you've chosen to make a life with me.\"\n\nShe gazed adoringly into his eyes. \"It was the easiest decision I've ever made.\"\n\nAlyssa hugged the couple as they kissed, smiling affectionately at Helene as she felt the girl's elation over their empathic bond.\n\n***#\n\n\"They won't be long,\" Jade said, smiling at the brunette sitting on the sofa opposite. \"John's just finished making the connection with Helene.\"\n\nLynette smiled, one hand on the gentle curve of her own cum-filled tummy. \"That was her third time?\"\n\nThe Nymph nodded, a gleam in her emerald eyes. \"Yes, she's one of Master's mates now. It'll be your turn next, then my sisters...\"\n\nTrying not to dwell on the increasingly arousing idea of being with John, Lynette asked, \"How are your sisters doing?\" \n\nJade's smile wavered, a flicker of sadness in her eyes. \"They're all in good health and long to be with their new master... but they have no memory of our lives on Lenarra. I hope that as John nurtures them as he did me, they will begin to regain those lost memories.\"\n\nRising from her seat, Lynette walked around to sit beside the Nymph. \"I'm so sorry for what my people did to yours,\" she said earnestly, reaching out to stroke Jade's arm.\n\n\"It happened many centuries ago, long before your time,\" Jade replied with a gentle smile. \"I appreciate the intent behind your apology, but you have nothing to be sorry for.\"\n\n\"Even so, I won't ever forget that you rescued me from Tartarus,\" Lynette said, gazing into those cat-like eyes. \"If there's ever anything I can do that might help you find more Nymphs, you only have to ask.\"\n\nJade gave her a look filled with gratitude. \"Thank you, I will.\" Her smile broadened as she continued, \"Only a few months ago, I believed that I was the last of my kind, but now I've been reunited with four of my lost sisters. I think that's ample proof that you should never give up hope.\"\n\n\"Wise words indeed,\" Lynette said, smiling at the kind-hearted Nymph.\n\nThe double doors to the Officers' Lounge swished open and Lynette quickly turned that way, looking forward to seeing John and Alyssa again. They were accompanied by three more women, only one of whom Lynette recognised. She smiled back at Rachel as the tawny-haired girl gave her a friendly wave, but her eyes were immediately drawn to the incredibly exotic women heading her way. One was an exquisite blue-skinned beauty, with snowy-white hair and beguiling angular eyes, while the other was a stunning teal-hued girl, who gazed up at John in adoration, one hand resting on her hugely swollen belly.\n\nJade gave the Terran admiral a light kiss on the cheek, then rose to her feet. \"I need to go and prepare lunch. It was lovely speaking with you again, Lynette.\"\n\n\"Likewise, Jade,\" the brunette replied, giving her a warm smile in return. \n\nAs Jade and Rachel disappeared into the kitchen, John, Alyssa, and the two mysterious girls walked over to join her on the sofas. \n\n\"Hello, Lynette,\" John said as he sat down, the two alien beauties sitting beside him. \"I'd like to introduce you to two special women. This is Helene...\" He put his arm around the teal girl, then he smiled at the taller, snowy-haired vixen. \"And this is Tashana.\"\n\nThey exchanged smiles, then Lynette said, \"It's very nice to meet you both.\" Unable to rein in her curiosity, she added, \"I've never seen people with your colouring before... I hope you don't mind me asking what species you're from?\"\n\nTashana glanced at John for confirmation and he stroked her shoulder as he said, \"It's okay, you can tell her. I want to show Lynette the same trust she's placed in me.\"\n\nThose enchanting violet orbs flicked to the brunette and Tashana's full lips curled up into a smile. \"Revealing our true appearance is a capital offence amongst my people, so I hope you understand just how much I'm trusting you to keep this secret...\" She took a deep breath, then continued, \"My name is Tashana Valaden; I'm the daughter of Matriarch Edraele Valaden... Queen of the Maliri.\"\n\nIt took a second for that to sink in, then Lynette's jaw dropped open in shock. \"You're a Maliri?! B-but... you're absolutely gorgeous!\"\n\n\"You were expecting us to be deformed, plague-ridden monsters?\" Tashana asked, with no small amount of amusement. \"I'm afraid the lurid speculation by the Terran holo-movie industry has been far from the truth.\"\n\n\"I just don't understand why your people hide behind armour?\" Lynette asked, staring at her in fascination. \n\n\"The Maliri were a Thrall species, Lynette,\" John said quietly. \"They were slaves of the last Progenitor who ruled this part of space ten-thousand years ago. When Mael'nerak was killed fighting another Progenitor, the Maliri withdrew to their borders and hid their appearance to keep their true nature secret.\"\n\nTashana nodded, then brushed her hair back, revealing a pointed ear. \"Look familiar?\"\n\n\"The same shape as John's...\" Lynette marvelled, shaking her head in amazement. \"I can't believe it... I never thought I'd find out the truth about the Maliri!\" \n\n\"Tashana wasn't exaggerating earlier; by Maliri law, telling you this should mean her death,\" John said, hugging Tashana closer. \"So it goes without saying that you mustn't tell a soul...\"\n\nLynette nodded, saying earnestly to the Maliri girl, \"I swear that your secret is safe with me. Thank you for trusting me with this!\"\n\nTashana nodded to her, then glanced at John with a twinkle in her violet eyes. \"If I may be excused, Baen'thelas, I'll help Jade prepare lunch.\" \n\nHe smiled at her playfully deferential tone. \"Sure, go ahead. Thanks, Tashana.\"\n\nLynette's hazel eyes widened even further as she watched Tashana walk towards the kitchen. \"The Maliri aren't just your allies, are they?\"\n\nJohn slowly shook his head. \"The Matriarchs of all their noble houses are connected to me... some more intimately than others.\"\n\n\"You rule the Maliri!\" she gasped, staring at him in utter disbelief.\n\n\"My official title is Protector, which is exactly what I've tried to do,\" John quickly corrected her. \"Protecting the Maliri from themselves as well as from outside threats. When the original Progenitor who ruled them was killed, their civilisation began to destabilise and collapse. Rachel can explain the details if you're interested, but the Maliri were facing eventual extinction, which I hope I've now managed to avert.\"\n\n\"So the Maliri fleet that helped defeat the Kintark at Terra...?\"\n\n\"They were flying through Brimorian Space, on their way to assist the Trankarans against the Kirrix... until I diverted them to Terra to save the Federation,\" he replied, gazing intently into her eyes. \n\n\"Incredible...\" she murmured, stunned by these revelations.\n\n\"I grew up in the Terran Federation and I've always been loyal to it,\" he said earnestly. \"My relationship with the Maliri Protectorate hasn't changed those feelings.\"\n\nLynette's eyes flickered to the teal-skinned girl sitting beside him. \"Are you Maliri too, Helene?\"\n\nShe shook her head and smiled. \"No, my people are called the Abandoned.\"\n\nStartled by the bleak name, Lynette looked quizzically from her to John. \"I've never heard of them before... who were you abandoned by?\"\n\n\"The Terran Federation,\" John said quietly, his face turning grim. \"Helene's people are the descendents of Terran colonists that were taken prisoner on the Callopean Shoals during the first Brimorian war. The Abandoned are a hybrid species created by the Brimorians... they were turned into an aquatic slave race, Lynette.\" \n\nHer mouth fell open and she gaped at him in shock. \"I would've heard something! That can't be true!\"\n\nAlyssa's cerulean eyes turned cold and hard. \"It is. I scanned Baledranax's mind before John incinerated him and I saw it all. The Brimorians traded the male colonists to the Kintark to be used as slaves, in exchange for gene-splicing tech. Then they genetically modified those Terran women so that they could be cross-bred; hundreds-of-thousands were experimented on, then raped repeatedly by Brimorians for years...\" \n\nJohn hugged Helene closer, gently squeezing her shoulder. \"Helene's from the fifth generation... From what she's told us of her people's birth rates, we suspect that there's billions of Abandoned living as slaves within the Brimorian Enclave.\"\n\nLynette looked appalled and sickened after hearing their terrible history. \"My God... I had no idea. How was this kept quiet?!\"\n\n\"Irillith found evidence of the cover-up when I asked her to scour the T-Fed military archives to find out more.\" His eyes narrowed as he continued, \"High Command has a lot of dirty little secrets, Lynette. Things can't continue the way they've been going...\" \n\nShe nodded slowly, her expression turning equally grim. \"Things are going to change, you have my word.\"\n\n***\n\nDana jumped onto the chevron-marked loading lift and hit the button, then grabbed a railing as the platform launched her up to the workshop in just a few seconds. The moment it came to a halt, she ran over to the vacant armour-equipping frame and stood in position so that the robotic arms could remove her Paragon suit. She glanced at the wall-mounted chronometer and winced, knowing she was already running late.\n\n*It's almost as if you wanted to get a spanking,* Alyssa observed, with no small amount of amusement.\n\n*That sounds like fun!* the redhead couldn't help grinning as she jogged over to her workbench. *I really was trying to be on time, I just got a bit distracted... When the power modulator exploded, it caused a shitload more damage than I originally thought. The superstructure will have to be cut away and rebuilt, and we'll need to replace all the power couplings for twenty-metres into the hull. It's a big fucked-up mess.*\n\n*If you need help from me or John, we can take a look at it later this afternoon,* Alyssa said amiably. *We should only be gone for a few hours.*\n\n*Perfect! I'll get the Mass Fabricators building the replacement parts while you're out.* Dana carefully scooped up a pair of tiny metallic devices, each one no larger than her thumb and a larger disc that was about the size of her palm. *Have you managed to make the changes to Lynette's uniform I asked for?*\n\n*We're all set, just waiting for you to get here...* the blonde replied impatiently.\n\nSprinting down the corridor to the grav-tube, Dana dived in, then floated up to Deck Two. When she burst into the Officers' Lounge, she saw that everyone was just getting up from the dining table, having already finished lunch. John and Alyssa were wearing their Lion and Lioness outfits, while Lynette was wearing the grey dress uniform of a Terran Federation admiral.\n\n\"Shit! Sorry I'm so late!\" Dana blurted out as she rushed across the lounge.\n\n\"Don't worry, I saved you some,\" Jade replied, gesturing towards the plate with a selection of cold-cuts and a mixed salad.\n\nDana gave her an apologetic look. \"Thank you.\" \n\nJohn smiled and asked, \"Did you bring the holo-projectors?\"\n\nShe nodded, walking over to join him. \"Yep! They're all done.\"\n\nLynette stood at John's side, her hazel eyes drawn to the objects the redhead clutched in her hands. \"How do they work exactly?\"\n\nDana raised her left hand to show the brunette the two small metallic strips. \"These containers house a swarm of microscopic holo-projectors which will rotate around your body, continuously projecting your old image on top of the real you.\" Stepping closer, she slid them into the slots that Alyssa had cleverly created in the jacket's epaulets. \"They'll take about five seconds to all float into position, then they'll follow you around in close orbit... so try to avoid any physical contact with anyone.\"\n\n\"What was the charming phrase you used when you briefed us on ours?\" Irillith asked, arching an eyebrow. \"Ah, I remember... no fighting or fucking.\"\n\nThe redhead blushed and glanced sidelong at Lynette. \"Yeah... try and avoid doing those.\"\n\n\"I'll bear that in mind,\" the admiral said, keeping a straight face while the others laughed. She glanced at the disc and added, \"What does that device do?\"\n\n\"This is what makes it all work,\" Dana said, looking proud of her creation. \"This disc contains a tiny power generator, which creates a localised energy field around you. That powers the anti-grav motors in the floating projectors and keeps them orbiting at the correct distance. Faye also built in a Virtual Intelligence, which monitors your activities and alters the projected images to match.\"\n\nThe purple sprite nodded enthusiastically. \"That way you can remove your hat and let your hair down, and the VI will adjust and compensate! I used the images we had of you when you boarded the Invictus last time as source material. I managed to cover most scenarios, but the VI will try to adapt to any really unusual circumstances.\"\n\n\"So try to avoid spilling drinks on myself, that kind of thing?\" Lynette asked, fascinated by the devices.\n\n\"Actually, the VI should be able to cope with that,\" Faye replied, looking thoughtful. She smiled as she continued, \"As long as you don't tip your drink all over the holo-projectors...\" \n\nDana frowned and glanced at the golden epaulets. \"Yeah, if the projectors get knocked out of the energy field, they'll drop like a stone. There's enough in those containers for three full sets, but once they're gone...\"\n\nLynette nodded her understanding. \"Will I be alright if I'm caught in the rain?\"\n\n\"You might get a few static shocks, but you won't get fried,\" the redhead said with a grin. \"Try and avoid getting caught in any hurricanes or torrential downpours though, the holo-projectors won't last in that.\" She slipped the disc into Lynette's grey jacket's pocket. \"Want to give them a try?\"\n\n\"How do I turn the device on?\" Lynette asked glancing down at her pocket. \n\nDana reached for her hand then slipped it into the pocket. \"Feel the indented button in the centre? Just press that twice.\"\n\n\"Why twice?\" the admiral asked curiously.\n\n\"To make it less likely it'll get turned off by accident,\" the teenager replied with a wink.\n\nTaking a deep breath, Lynette double-clicked the holo-control and John heard a barely-audible hum as the generator activated. After a short wait, her face seemed to flicker, then her appearance changed dramatically. The attractive woman who looked to be in her late-thirties was replaced by the much older and homelier face that had once belonged to Admiral Devereux.\n\n\"Oh, wow!\" Helene gasped, staring at her in shock. \"I can't believe how much you've changed!\" She glanced at John with wonder in her eyes. \"I know what you can do isn't magic... but it really seems like it!\"\n\nJohn met Lynette's pleading gaze and smiled as he pre-empted her request. \"No mirrors, at least not until tomorrow.\"\n\nShe sighed and reluctantly nodded, before glancing down at her watch to check the time. \"We better get going, the admirals should start arriving soon.\" \n\nRachel stepped forward and smiled at her. \"John's rewriting your genetic code to make these changes to you, so you'll need to avoid using DNA scanners. When we leave Olympus, we'll need to take a final DNA sample from you once your body stabilises, then Irillith can use that to discreetly update the T-Fed records.\"\n\n\"There'll be no trace I was ever there,\" the Maliri hacker said with a confident smile.\n\nLooking at the gathered girls, Lynette gave them a look of sincere gratitude. \"Thank you all for everything you've done. I really appreciate all the hard work you've invested in me.\"\n\nAlyssa hugged her, causing the holo-image to flicker for a second. \"That's just what family does for each other.\"\n\nWhen they pulled apart, Lynette swallowed the lump in her throat, then patted the blonde on the arm. \"Thank you...\"\n\nFaye waved to get their attention. \"Hey guys! Sorry to interrupt, but we've just received an urgent call from Senior Councillor Ularean!\"\n\n\"Thanks, Faye. I'll take it in the bedroom,\" John said, turning to head for the door.\n\n\"Actually, I've reconfigured the projection suite in here to accept incoming calls.\" Pointing at one of the sofas, she continued, \"If you'd like to take a seat over there, I'll route the call through.\" Faye hesitated for a second, before adding, \"Unless you want it to be private?\"\n\nHe gave her a grateful smile and walked over to the sofa. \"No, I don't have any secrets from you ladies. Here is perfect, thank you.\"\n\nAs John sat down, a holographic projection of the Ashanath councillor appeared before him, Ularean's big black eyes staring intently.\n\n\"I have wonderful news, JohnBlake,\" Ularean murmured in his emotionless whispery voice. \n\n\"It's good to see you too, Ularean,\" John said with a wry smile. \"What's the news?\"\n\nThe Ashanath blinked a couple of times, revealing how excited he was. \"We have found and retrieved the Quantum Flux Cannon...\" \n\nJohn looked bewildered as he replied, \"The one on the Legacy? But we watched it get blown up!\"\n\n\"We also believed it to be destroyed, but it survived unscathed,\" Ularean explained, his slim shoulders shrugging slightly. \"How, I do not know, but the explosion threw it well clear of Ashana. It does not appear on our sensors, so we had no way of detecting it... a patrolling cruiser actually collided with the device quite by accident.\"\n\nJohn nodded, lost in thought. \"If it survived the explosion that destroyed the original ship, I can see why the Drakkar torpedoes didn't damage it.\"\n\n\"That was our conclusion as well, JohnBlake,\" Ularean quietly agreed. After a moment's pause, he continued, \"Do you wish to return to Ashana to claim it? By rights, it belongs to you.\"\n\n\"Hang on a second,\" John replied, before glancing at Dana. \"What do you think? Can you find out what you need to know remotely?\"\n\nDana bounded over to join them, sitting on the seat beside John and greeting the grey alien with a broad grin. \"Hey, Ularean! Can you take some detailed scans, then send us the data?\"\n\nUlarean surprised them both by shaking his head. \"The black material has proven impervious to all our attempts at analysis. My apologies, Dana, we are unable to comply with your request.\"\n\nShe pouted in frustration, then gave John a regretful look. \"Sorry, it looks like we'll need to head over to Ashana to pick it up...\"\n\n\"Please can we have a look anyway, Ularean?\" John asked politely. \"I'm curious to see it again.\"\n\n\"Of course, JohnBlake,\" the Senior Councillor replied, his black eyes glancing to one side and making a gesture with one of his long-fingered hands.\n\nA moment later, a second image appeared adjacent to Ularean's head. It was a picture of an underground hangar with what was clearly the Quantum Flux Cannon suspended in the air by grav-hoists. The massive jet-black weapon looked menacing as it floated before them and John found its very appearance deeply unsettling. ",
        "Ularean gestured towards the image. \"As you can see, we carefully extracted it from-\"\n\n\"Oh shit...\" Dana groaned, clutching her head. She waved frantically at Irillith, \"Quick! Come here!\"\n\nThe Maliri girl dashed over to join her, sitting beside the reeling redhead. Alyssa reached out to place a hand on their temples, then made a psychic bridge between the two girls. \n\nIrillith breathed deep, relaxing as she let the blonde channel the schematics from Dana's mind to her own. In a brilliant flash of violet light, incredibly complex schematics flashed into existence before them, projected from Irillith's angular eyes. The telltale runic script made it abundantly clear that this was a Progenitor blueprint.\n\n\"Wow...\" Dana murmured, gazing in awe at the glowing projection. \"So that's how they did it...\"\n\nJohn turned to Ularean and gave him a profoundly grateful smile. \"Thank you, Ularean! That was perfect!\"\n\n\"Would you still like to claim the artefact?\" the Ashanath leader asked without pause.\n\nShaking his head, John replied, \"I think we got everything we needed. You can keep it with my blessing.\"\n\nThe grey alien bowed to him respectfully. \"Safe travels to you, JohnBlake.\"\n\nHe ended the call a second later, the hologram of his face and the underground hangar fading from view.\n\nJohn clasped Dana's hand and squeezed it gently, drawing her enraptured gaze from the weapon schematics. \"Good news?\"\n\nShe nodded, a look of disbelief on her face. \"That cannon is a fucking beast! I can't replicate it exactly, as I haven't figured out how to make the black metal Mael'nerak built it with...\" She leaned back in her seat, lost in thought for a moment before giving him a dazzling smile. \"... but I reckon I can make a Crystal Alyssium version!\" \n\n\"Why does the metal make a difference?\" he asked, his curiosity piqued.\n\n\"The barrel stress,\" Dana replied, before glancing up at Alyssa and giving her a grateful smile. \n\nThe blonde withdrew her hands from both girls and the blueprints faded away. \"Are you okay?\" she asked Irillith, brushing her fingers through her flowing white hair.\n\nThe Maliri blinked as the glow slowly faded from her eyes. \"You're getting so much better at that... it actually felt pleasant this time.\"\n\nGiving John her undivided attention again, Dana continued, \"Where was I... Oh right, basically, the Quantum Flux Cannon creates kind of a vortex in the firing chamber, which charges the projectiles when they're fired. The forces involved are incredible, but the Progenitors don't even bother to put a containment field around them, like we do for the artificial singularity in a Singularity Chamber. I'll need to make quite a few modifications, but I reckon I can create our own version without too much problem.\"\n\n\"Can we build it here at Olympus?\" John asked, looking hopeful\n\nDana gave him a rueful frown. \"Afraid not. It'll take me a little while to figure out how to make those changes, then building it will take some time too. We'll also have to refit the Invictus so we can mount it somewhere... we haven't got any hard points big enough to take it at the moment.\"\n\nTashana frowned, her beautiful face twisted in a mask of confusion. \"You've seen the Legacy before, when we saw it lift off from Ashana. Why didn't you recognise the schematics for that weapon straight away?\"\n\n\"That's actually a really good point,\" Dana replied, before pausing for a second to mull it over. She smiled at John and reached down to cup his quad. \"You must have pumped them into me since then...\"\n\nHe laughed, but he found he couldn't disagree. \"I wish I knew how that worked... I've got no conscious control over any of it.\"\n\nDana gave him a sultry look. \"I think the best policy is to keep me topped up as often as possible. That way we cover all our bases.\"\n\nRachel leaned over the sofa and hugged her lover from behind. \"You're insatiable! Leave some for the rest of us!\"\n\nFaye placed her hand on John's shoulder and said quietly, \"Just to let you know, Charles arrived a couple of minutes ago... He's waiting for you down in the Docking Bay.\"\n\n\"Thanks, Faye,\" he replied, getting up from the sofa. \"We better not keep him any longer.\"\n\nHe turned to look for Lynette, then realised that Helene was staring at him in astonishment. \"You okay, honey?\" \n\n\"What was that strange grey creature?\" she marvelled, her wide-eyed gaze making her look like she was doing an impersonation of the Senior Councillor, with his huge black eyes.\n\n\"That was Ularean, he's the leader of a species called the Ashanath,\" John explained, giving her a reassuring smile. \n\n\"Do you remember me showing you the Ashanath Collective on the Empire map?\" Faye reminded the startled young woman. \"Maybe this afternoon I should show you some pictures of all the different aliens. Would you like that?\"\n\n\"Oh yes!\" Helene exclaimed, looking thrilled.\n\nJehanna grinned at John and asked, \"Any chance you could set up an interview for me with the Senior Councillor? The High Council is notorious for declining contact with news media.\"\n\nJohn looked dubious as he replied, \"I can ask, but I'm not sure he'll be interested. Besides, the Greys are... laconic... to put it mildly. I'm not sure an interview with Ularean would make for particularly exciting viewing.\" \n\nShe shrugged, quite undeterred. \"Maybe they just need someone to ask the right questions...\"\n\nHe laughed and nodded. \"Alright, I'll ask him the next time we talk.\" Turning to look at Lynette, he offered his arm. \"Shall we?\"\n\nShe hooked her arm though his and they left the Officers' Lounge with Alyssa following close behind. Lynette was lost in thought as they descended in the grav-tube, her hazel eyes gazing off unseeing into the distance. \n\nJohn glanced at the brunette and asked, \"Everything okay? It looks like you've got something on your mind.\"\n\nLynette hesitated for a second, then replied, \"You mentioned that you'd included the Ashanath in your alliance, but I didn't realise the extent of it. Is Ularean a puppet too?\"\n\nAlyssa started giggling, while John gaped at the older woman in surprise. \"No, of course not! Ularean's a male Ashanath!\"\n\nThe brunette blushed and hastily said, \"I'm sorry, I struggle to tell the difference with the Greys. Ularean was so subservient towards you... I just assumed...\" \n\n\"We're friends and allies, that's all,\" John said firmly. \"If he seemed grateful, it's because we saved his homeworld from destruction by a Drakkar invasion fleet.\"\n\n\"And Rachel saved Ularean's life after he was stabbed by a Drakkar Warlord,\" Alyssa interjected, smiling at the admiral. \n\n\"The High Council know quite a lot about Progenitors,\" John said, as they reached Deck Nine. \"I had no idea what species I was from until they told me several months ago. They knew I was a Progenitor and asked if they could form an alliance with me... I suppose my idea of allying all the empires to fight the other Progenitor started with them.\"\n\nLynette had been listening attentively and she nodded when he finished. \"Thank you for the explanation. It's reassuring to hear you confirm that you're allies with them, without needing to install a puppet in control of their government.\"\n\n\"You're welcome,\" he replied with an understanding smile. \n\nShe hesitated before stepping out into the corridor, her face bathed in red from the anti-gravity field. \"Was that a Progenitor weapon that Ularean offered to give you?\"\n\n\"It was,\" John replied, offering her a hand as he stepped out of the grav-tube. \"The Ashanath found it on a wrecked Progenitor ship millennia ago, long before humanity had left Terra. It's an incredibly powerful weapon called a Quantum Flux Cannon. We saw the Ashanath use it to take out a Drakkar dreadnought during the Battle for Ashana.\"\n\n\"Are they able to... make more of them?\" she asked hesitantly, the concern in her eyes quite obvious.\n\n\"No, they just have the one,\" he replied, giving her a knowing look. \"As you probably heard, even Dana can't reproduce it yet, so you don't need to worry about the Terran Federation being left behind in the tech race.\"\n\nLynette's relief was obvious, then she raised an eyebrow speculatively. \"Is there any chance that we could have the schematics?\"\n\nHe laughed and shook his head. \"I think you can probably guess the answer to that.\"\n\n\"It was worth a try,\" she replied, smiling back at him. \n\nThey had congregated by the airlock door and John glanced at her as he reached for the DNA reader. \"Are you ready to make your dramatic return from death's door?\"\n\nShe nodded, a determined look in her eyes. \"I am.\"\n\nThe DNA reader flashed green, then the inner and outer airlock doors spiralled open, revealing Admiral Charles Harris waiting impatiently outside. His expression was tense with worry, but that was swept away by the broad smile that suddenly appeared on his face, when he saw John and his companions leaving the Invictus.\n\n\"Lynette! It's so good to see you again,\" Charles said, stepping forward and embracing her, catching her by surprise. \n\nJohn looked on in alarm as Lynette's holographic image flickered, but fortunately Charles was too close to her to notice that momentary disruption. Lynette gave him a warm hug in return, until John coughed discreetly into his hand. She glanced his way, noticed his perturbed expression, and her eyes widened as she realised how close she was to shattering their carefully constructed illusion. \n\nLynette stiffened up, then patted her fellow admiral awkwardly on the back. \"I'm still a little sore, Charles... my wounds...\"\n\nHe released her immediately and stepped backwards, his hands in the air and a distraught look on his face. \"I'm so sorry, Lynette! I can't believe I forgot.\" He looked at her as if she were made of glass and that he was concerned that he might break her, then winced with sympathy. \"I heard what happened to you. I really wish you'd told me what you were planning... then perhaps we could have done things differently. The last thing I wanted was to put you in harm's way like that.\"\n\nShe shook her head and smiled at him. \"Don't waste your time with regrets, Charles... we can't undo the past.\" Her smile widened and she glanced at John. \"Besides, everything appears to have worked out in the end.\"\n\nCharles relaxed, nodding his agreement. He followed her gaze and smiled at John, before noting with a hint of amusement, \"You're not bringing your full pride of Lionesses to the meeting?\"\n\nJohn shook his head and fell into step beside his old friend as they started walking towards the exit. \"If I brought everyone, it would look like I was making a show of force. I'm hoping to keep things friendly with High Command, rather than intimidate them into cooperation from the start.\"\n\n\"I think most of them will go along with you,\" Charles said cautiously. \"I know several admirals have handed in their resignations after you made that offer yesterday, but there might still be a few who cause trouble. Caldwell for one...\"\n\nAlyssa hooked her arm around Charles' and gave him a dazzling smile. \"Don't worry, I can be scary if I have to.\"\n\n\"Yes, we all saw what you did to Weber,\" he replied quietly. \"You're probably right; just having you there will be more than intimidating enough.\"\n\nJohn nodded his agreement, then glanced back at his pockmarked battlecruiser. \"The rest of the girls are busy working on other things, like repairing the Invictus.\" \n\nCharles' smile faded as he looked back at the battle-damaged warship, his eyes roaming over the plasma scarred armour. \"I was actually going to say something about that earlier, but what with the welcome to Olympus and Rachel healing me... I didn't get a chance.\" He frowned in disapproval and continued indignantly, \"You were supposed to be taking good care of my ship! I've never seen the Invictus so torn up!\"\n\n\"Your ship?\" John replied with a smile, raising an eyebrow. \"I'm sure I remember buying her off you.\" He waved away his friend's concern. \"Don't worry about the Invictus, we'll have her looking as good as new in no time.\"\n\nThe admiral shook his head, doubt in his eyes. \"You told me you'd be able to get her fixed in a couple of days, but just look at all that damage! You've lost three engines and the aft is a burnt-out wreck! It'll take you weeks to get everything repaired!\" He glanced back at the Invictus and added, \"I know you said you could fix this yourself, but just say the word and I'll supply you with as many repair crews as you need.\"\n\n\"Just leave it to us,\" Alyssa said, patting Charles' hand. \"Two days and we'll be done...\"\n\nCharles appeared less than convinced by her bold claims. \"This I'll have to see...\" \n\nShe winked at him, her beaming smile widening. \"Sure... as soon as we're done sorting out High Command.\"\n\n***\n\nThe Raptor raced through the banks of fluffy white clouds as Sakura began her final approach to Jericho. When the gunship finally plunged out of the cloudbanks, she had a spectacular view of the rolling green fields that surrounded miles of well-kept suburbs. \n\n\"Your homeworld reminds me of New Eden,\" the Asian girl said, smiling at Calara who sat beside her in the co-pilot's chair.\n\nThe Latina nodded, but she seemed distracted, lost in her own thoughts. \"Yes, we were both very lucky to grow up on Gaia-class worlds...\"\n\nSakura made sure she was following the glowing green guide-path that Calara had programmed into the Nav-computer, then glanced at her friend again. \"What's the matter? You've been quiet for the last half-an-hour.\"\n\nCalara turned to meet her inquisitive gaze, an anxious expression on her beautiful face. \"I'm worried... about you.\"\n\n\"About me?\" Sakura asked, blinking in confusion, before a flicker of shame shadowed her face. \"Did John say something before we left?\"\n\nNow it was the Latina's turn to look confused. \"No, he didn't say anything... He just told me he loved me and that I needed to hurry up with my packing.\" She reached across to hold Sakura's hand. \"Sorry, I didn't mean to upset you. I was just worried about my Mom... she tends to go a bit overboard when I come back to visit, but she honestly doesn't mean to be insensitive. I'm hoping she'll tone it down a little, now she knows a bit about you and what happened to your parents.\" \n\nSakura relaxed and shook her head. \"It's okay, I promise. I want you to enjoy your time with your mother, there's no need to worry about me. I'm just here to do my duty as a bridesmaid.\"\n\nCalara groaned and sagged back in her chair. \"Oh God... Mom's going to be a nightmare!\" \n\n\"I came prepared,\" Sakura replied, glancing back over her shoulder at the stack of guns and the pair of Ninjato propped up by the seats behind them. \"I can cover you if you need to retreat.\"\n\nThe Latina laughed, a lovely smile lighting up her face. \"I might have to hold you to that.\"\n\nIt didn't take long for the Raptor to reach Calara's family home, the big ranch-style house sprawling beneath them as Sakura manoeuvred the gunship over the landing pad. She carefully watched the monitors on the underbelly of the Raptor, feathering the retro-thrusters to bring them in for a gentle landing. As soon as they touched down, both girls worked as a team, powering off the engines and shutting down systems. \n\nSakura rose from her chair when they were done, then carefully scooped up her weapons and carry bag. \"Okay, I'm ready.\"\n\nCalara picked up her own bag, double-checking she had her gun belt and Quantum pistol. She paused for a second, looking slightly perturbed. \"Has Alyssa said anything to you in the last couple of hours? She's been awfully quiet since we left Olympus...\"\n\n\"She hasn't said a word,\" Sakura confirmed a moment later, before cracking a smile. \"Do you think she's up to something?\"\n\nCalara nodded, frowning with suspicion. \"It wouldn't surprise me.\"\n\n*Stop worrying your pretty little heads about what I'm doing. I want you two to have fun!* Alyssa said breezily, a playful lilt to her voice.\n\nThe two girls darted startled glances at each other for a moment, then Calara rolled her eyes. \"Alright, I suppose there's no backing out now...\"\n\nThey descended in the grav-tube, then walked through to the forward loading area, where Sakura slapped her hand down on the door release button. The loading ramp dropped down with the smooth whine of hydraulics, revealing an overjoyed Maria Fernandez, who was waiting for them at the edge of the landing pad. \n\nAs soon as the ramp touched down, Maria rushed up to join them, throwing her arms around her daughter. \"Callie! My darling baby girl, I'm so glad you could make it!\" She hugged her tight, making Calara drop her bag in the enthusiastic embrace. \"Mmm, I love you so much!\"\n\nCalara groaned as she returned her mother's fierce hug. \"Mom! I love you too, but come on... Sakura's here...\"\n\nUndeterred, Maria planted a great big kiss on Calara's cheek, then released her daughter and turned to beam a warm smile at her guest. \"It's so lovely to see you again, Sakura. I'm so glad you decided to come to visit.\"\n\n\"It's great to see you too, Maria,\" Sakura said, giving her a shy smile in return.\n\nThe Latina stepped closer and reached out to stroke the Asian girl's arm. \"I think it's only fair to give you plenty of forewarning... I plan to absolutely smother my daughter with affection over the next couple of days. Just let me know if it gets too much, okay?\"\n\nSmiling at Calara's groan of protest, Sakura met Maria's caring gaze. \"You don't have to worry about me. I wouldn't dream of asking you to change the way you are with Calara; I think you're wonderful with her.\"\n\nMaria gently stroked her cheek, giving her a look of heartfelt sympathy. \"No, my beautiful angel, you don't understand. I have no intention of stopping... I just want you to tell me when I can start pretending I have two daughters, then I can look after you too...\"\n\nSakura's eyes welled up and she leaned into Maria's maternal caress. \"It's getting too much...\" she replied, her voice thick with emotion.\n\nWrapping her up in a tender embrace, Maria smiled when Sakura melted into her arms, the Asian girl trembling as she leaned into her. \"I promise I'll take good care of you, angel.\"\n\nCalara hugged Sakura from behind and shared a loving smile with her mother. \"Thank you,\" she mouthed, as they both cuddled the overwhelmed young woman.\n\nWhen Sakura finally settled down, Maria picked up her bag and put an arm around her shoulder. \"Now, my darling girls, come into the house. We're going to have so much fun planning this wedding!\"\n\nSakura slipped her arm around Maria's waist and let out a happy sigh. \"That sounds like a lovely idea!\"\n\nCalara looked at her friend with a resigned expression on her face. \"I'm guessing the extraction plan's out?\"\n\nThe Asian girl giggled and nodded. \"Afraid so.\"\n\n***\n\nJohn fell back a few paces so that he was walking beside Alyssa as he followed behind Lynette and Charles, the two admirals talking quietly together.\n\n*How do you want to play this?* the blonde asked, glancing at him out of the corner of her eye. *Should I be discreet using my powers, or be quite blatant about it?*\n\nHe considered that for a moment, then shrugged. *I'm sure all the admirals have seen the Kintark video from Terra. They definitely know about Rachel's powers, but they probably saw you, me, and Tashana in action too. I don't think there's much point in keeping it secret any more.*\n\n*Shock and awe then?* she asked, with a gleam in her eyes.\n\n*How about wonder and amazement?* John countered, smiling at her. *Let's try not to scare the hell out of them from the start.*\n\nLynette and Charles stopped to wait for them by a set of double doors, which were guarded by a couple of fully armed and armoured soldiers. \n\n\"This is the holo-conference room we use for High Command meetings,\" Charles explained, gesturing through the doorway. There was a plush foyer inside, where three men and two women wearing admiral's uniforms stood waiting, watching them curiously. Beyond the five senior officers, another set of imposing double doors were set into the opposite wall.",
        "John recognised Charles' assistant, Lieutenant Adams, when he opened the second set of doors and walked over to join them. \"Admiral, High Command is in full attendance. Three admirals are currently deployed with their fleets, so they can't make today's meeting; they'll attend as a hologram instead.\"\n\n\"Thank you, Victor,\" Charles replied with a nod. He smiled at Lynette and gestured towards the door. \"After you, Admiral Devereux.\"\n\nShe smiled at him then took the lead, walking across the foyer then entering the main conference room. It was set up with a podium in the centre, then raised tiers of seating curved around the room in a semi-circle, like an auditorium. There were fifteen admirals in attendance, three more appearing as flickering holograms, and a number of conspicuously vacant seats were scattered around the room. Conversation petered out when the admirals saw who had arrived, smiles appearing on a number of faces when they recognised Lynette.\n\nAdmiral Eleanor Maybridge rose from her chair and walked over to greet the new arrivals. \"It's so good to see you again, Lynette! I was appalled when I heard what had happened to you.\" \n\nShe stepped closer to embrace Admiral Devereux, but Lynette held up a cautionary hand. \"Thank you, Eleanor. I'm afraid I'm still a bit tender at the moment... just recovering from my injuries,\" she said with a regretful smile.\n\nMaybridge nodded her understanding. \"Would you like to take a seat? We can begin the meeting now.\" Turning to look at John, she continued, \"As the longest serving admiral in attendance, custom dictates that I act as temporary leader until a new Fleet Admiral is elected.\"\n\n\"Thank you, Admiral,\" John replied, before putting his arm around Alyssa. \"I assume there's no problem with the two of us staying to watch proceedings?\"\n\n\"No, that's quite alright,\" Maybridge replied, smiling at them both in turn. \"I suspected you'd both be here...\"\n\nJohn and Alyssa stood to one side of the room as the older woman stepped up onto the podium to address the members of High Command assembled before them. \"Good afternoon, Ladies and Gentlemen. As the longest serving admiral in High Command, it falls on me to act as our interim leader until a new Fleet Admiral can be elected. There are a number of duties that I must perform in this role, the first of which is to recommend admirals to fill the vacant positions in High Command.\"\n\nShe glanced at the empty seats and sighed. \"Admirals Mishra, Weber, Turner, and Buckingham were all killed yesterday, and Admiral Petran resigned, leaving five places to be filled. To avoid any contention, I'm recommending that the most experienced admirals in the Admiralty who are not already in High Command fill their positions. That would be Admirals Ramos, Dubois, Wu, Schmidt, and Esposito... Does anyone have any objections to their appointment?\"\n\nHer question was met with quiet acceptance, none of the admirals opposing her choices. She nodded to Lieutenant Adams and he walked back through the double doors to speak with the waiting admirals in the foyer. They strode through to take their seats, looks of pride on their faces as they joined the ruling body of the Terran Federation.\n\n\"Welcome, all of you,\" Maybridge said with a warm smile. After waiting for the hand-shaking and words of congratulations to die down, she continued, \"Our next order of business is the election of a new Fleet Admiral. As you all know, we normally allow two months for campaigning during an election, but with the Terran Federation currently at war with the Kintark, I propose we enforce edict 748...\"\n\nAdmiral Caldwell rose from his seat and shook his head. \"I object! The war with the Kintark is over! There's no need to rush into appointing another Fleet Admiral!\"\n\nAdmiral Connor Malone flicked a glance at Charles, then stood and said curtly. \"I disagree. We have yet to establish surrender terms with the Kintark and we still have to deal with the Kirrix invasion. We need to appoint a new Fleet Admiral today!\"\n\nMaybridge glanced around the meeting room to see if anyone else wanted to say anything. When no one else spoke, she said, \"All those in favour of enforcing edict 748 please vote 'Aye'. All those objecting to the edict, vote 'Nay'. I will abstain unless I have to break a tie.\"\n\nThe admirals tapped the corresponding glyph on the holo-panels beside them, as Maybridge glanced up at the panel displaying the votes. There was no anonymity and the corresponding seats on the display were highlighted in red or green depending on the vote cast. The final vote showed 16 voting for the immediate election of a new Fleet Admiral and only 8 against. Edwin slumped in his chair, darting a furious glance at Connor, who gave him a playful wink.\n\nNodding with satisfaction, Maybridge declared, \"Edict 748 will be enacted. Please may I have your nominations for a replacement Fleet Admiral?\"\n\nCharles immediately rose to his feet and exclaimed, \"I wish to nominate Admiral Lynette Devereux! She was foremost amongst us in opposing Buckingham's descent into insanity, infiltrating his inner circle to minimise the damage he could cause. Then she put her life on the line in an attempt to contact allies for assistance against the Kintark horde. Her champion, the Lion of the Federation, has proven himself our stalwart ally time and again, saving Terra from destruction on no-less than two occasions. I can think of no finer candidate to lead us in these troubled times.\"\n\n\"Eloquently put, Admiral Harris,\" Maybridge said, smiling at him when he sat down. She looked around the auditorium. \"Does anyone else wish to nominate themselves or a colleague for appointment as Fleet Admiral?\"\n\nCaldwell glanced at his fellow admirals, deflating further when he saw the approving nods from many of those present as their eyes darted to Lynette. When Maybridge turned to look at him, he gave a slight shake of his head, realising that Devereux's appointment was now a mere formality.\n\nMaybridge waited for another minute, then turned her attention to Devereux. \"As it appears your appointment is to go unchallenged, I would like to offer the position of Fleet Admiral to you, Lynette Devereux. Do you accept this honour?\" \n\nLynette rose from her seat, a triumphant gleam in her hazel eyes. \"I gladly accept.\"\n\nAs she walked to the podium, Maybridge stepped down, then joined in the rousing applause for their new leader. John grinned as he watched Lynette, enjoying seeing the dedicated woman finally achieve her dream after three decades of military service. She gave the admirals a proud smile, acknowledging their applause with a grateful nod of her head.\n\nAfter waiting for the clapping to subside, she said in a clear, unwavering voice, \"Like all of you, I have dedicated my life to the Terran Federation, seeking only to serve for the betterment of humanity. I thank you for granting me this highest of honours, and pledge to you today, that I will commit my heart and soul to being the Fleet Admiral you and the Terran Federation deserve.\"\n\nHer short speech earned her a second round of applause, the admirals all able to hear the earnest sincerity to her words.\n\nShe smiled at them again, then raised her hand for quiet. \"We have a number of pressing issues that we must deal with today, but before we begin, there is a matter of urgency that must be addressed. I believe that we must root out all those who would bring shame to High Command, like Buckingham and Weber.\" Glancing at John and Alyssa, she continued, \"Lion, would you conclude the grim business you started yesterday? As Fleet Admiral, I grant you authority to scour this office of corruption.\"\n\nJohn stepped up to the podium and gave her a grateful smile. \"Thank you, Fleet Admiral.\" He turned to look at the admirals present and inhaled deeply before continuing, \"Yesterday I proposed an amnesty to the Admiralty, offering to let anyone retire with no repercussions for past misdeeds. I was pleased to see that only one member of High Command chose to take up my offer, giving me hope that you are the upstanding officers we need to guide the Terran Federation to glory.\"\n\n\"This is the moment of truth, Ladies and Gentlemen. As I announced yesterday, I want to make sure that those serving in High Command are the finest examples of humanity. There is no room here for those who've blackened their careers with heinous acts like torture, rape, or murder.\" He looked around at the admirals, noticing with concern that several were starting to look nervous. Hoping that they were just anxious because of the nature of the meeting, he continued, \"I'm giving you one last opportunity to resign, if you've done anything that might bring disgrace to this office... I urge you to leave at once.\"\n\nWhen no one moved, he gestured to Alyssa. \"Okay, go ahead.\"\n\nShe smiled at him, then closed her eyes as she gathered her will. The lights in the auditorium flickered as she drew more power to herself, swirling vortexes of energy rolling down her arms to gather at her fists. There were startled gasps from the men and women present, many of them leaving their seats to back away from the shocking display of supernatural power. When Alyssa's hands were shrouded in a nimbus of pure white light, she opened her eyes, revealing the shining radiance illuminating her gaze. She crouched down and placed her fists on the floor, unleashing the gathered eldritch forces in a pulse of psychic energy.\n\nThere were more startled cries as the wave of light swept out to encompass everyone present, shrouding the admirals in a glowing aura. John's eyes swept through the crowd, widening when he saw one of the new additions to High Command painted a dark crimson. Admiral Dubois raised his hands, staring in horror at the blood-red light that declared his guilt to everyone in the room. To John's surprise, he saw a flickering red cover Admiral Maybridge, who looked absolutely mortified that she'd been highlighted. She staggered backwards, before tripping over in her terror, as she gaped at her blood-red hands with disbelieving eyes.\n\n\"No, no, no...\" she stuttered in sudden realisation, her stricken face pale with dread.\n\nPierre Dubois fumbled for the pistol in the holster at his waist, yanking it out with a shaky hand and pointing it at John. \"I'm innocent! I didn't do anything!\" he screamed, his eyes wide with fright. \n\nAlyssa flicked her fingers and a glowing shield of hexagons appeared in front of herself and John. \"Want me to execute him?\" she asked offhandedly.\n\nJohn shook his head, his eyes fixed on the red-shrouded man. \"Put the gun down, Dubois, it's over...\"\n\nThe terrified admiral brushed the back of his hand over his forehead to wipe away the sweat. \"No! I'm leaving, you can't stop me!\" He started to inch towards the doorway, where the armed guards were covering him with their assault rifles.\n\n\"It's too late for that,\" John said quietly, shaking his head. *Take him alive if you can.*\n\nAlyssa made a casual gesture and a huge telekinetic hand popped into existence then lunged for Dubois. A shot rang out and John ducked instinctively as the bullet ricocheted off the sloped hexagonal shield, the round embedding itself in the ceiling. The glowing fingers clamped down on the admiral, squeezing him hard enough to make him drop the handgun with a cry of pain. \n\n\"Now, let's find out what you did...\" Alyssa said menacingly, as she beckoned to the telekinetic hand.\n\nDubois was lifted off the floor, then floated over to her, his shrill screams echoing around the room. \n\nSeeing that he was safely neutralised, John darted over to a distraught Maybridge, who was lying weeping on the floor. \"I didn't have any choice,\" she sobbed, her shoulders shaking with emotion. \"They made me do it...\"\n\n\"What happened, Eleanor?\" he asked sombrely, kneeling beside her. \n\nMaybridge was disconsolate with her grief, too shocked by what had just happened to respond. She seemed oblivious to him now, floods of tears rolling down her cheeks as she lay crumpled in a heap. John carefully disarmed her, taking her pistol from the holster, still shocked that this matronly older woman could have been involved in some kind of heinous crime. He glanced back at Alyssa, who was staring intently at Dubois, the admiral wriggling to escape from the glowing hand's implacable grasp.\n\nAlyssa's lip curled in distaste as she delved into Dubois' mind, uncovering his darkest secrets. \"He murdered his first wife... drowned her in his pool then made it look like an accident.\"\n\n\"She was cheating on me with the pool boy! The bitch deserved it!\" Dubois frantically protested, eyes wide with fright. \"But that happened before I signed up! You only said it was a problem if we'd done things during our military career!\"\n\nJohn darted a disbelieving glance at Alyssa, who rolled her eyes and shook her head in amazement at the man's audacity.\n\n\"Arrest him for murder,\" John said sternly to the two guards.\n\nThey moved forward to take the protesting admiral into custody, then glanced at Alyssa with a question in their eyes. She made a dismissive gesture with her fingers and the hand dissipated, letting Dubois drop to the ground with a thump.\n\n\"We'll take a quick break,\" Lynette announced to the admirals. \"Let's reconvene in fifteen minutes.\"\n\nThey began to disperse as Alyssa, Lynette, and Charles walked over to John. \n\n\"Let me take a quick look,\" the psychic blonde said, squatting down beside Maybridge. \n\nShe placed a hand on the crying woman's head, cerulean eyes starting to glow as she investigated the admiral's troubled mind. \n\nAlyssa's expression shadowed with sympathy and she knelt down beside the grieving woman to give her a hug. \"I'm so sorry, Eleanor.\"\n\nJohn looked at her questioningly as they stood, seeing the look of remorse in the blonde's eyes. \"What happened to her?\" he asked in a hushed voice.\n\nThey stepped away from the weeping admiral and Alyssa sighed as she cancelled the flickering red shroud that covered Maybridge. \"Eleanor had an affair with her commanding officer on her first posting. When she told her lover she was pregnant, he contacted her parents... the three of them then guilt-tripped her into getting an abortion; they said having a baby would destroy her career and her parents threatened to disown her if she didn't. Eleanor blames herself... she thinks she murdered her unborn child, that's why she got flagged as a killer.\"\n\n\"That must have happened over forty years ago,\" Lynette said softly, her expression filled with sympathy. \"I can't believe she carried all that guilt for so long...\"\n\nAlyssa leaned into John her eyes welling up. \"I didn't mean to dredge all this up for her again... I don't have any control over the way people feel.\"\n\nCharles patted her on the shoulder. \"Don't worry, we'll take good care of Maybridge. At the very least she needs grief counselling to get over what happened.\"\n\n\"Thanks, Charles,\" John said, giving him a grateful smile, before leading Alyssa away. He sat down on the far side of the auditorium and pulled her onto his lap. \n\n\"I was always so sure,\" Alyssa murmured, looking at him with deep worry in her eyes. \"Could we have accidentally killed innocent people?\"\n\n\"When have we used that ability to sort out the guilty?\" John asked her, already knowing the answer. \"The first time was in the Underworld, which was a cesspit of pirates and slavers. I know for a fact you didn't tag any of the slaves and we left about half of the merchants untouched. Then the second time was Tartarus... You know what the scientists and soldiers did there, torturing then killing all those poor aliens and Terrans they experimented on.\" He glanced over at Eleanor, as Charles and Victor helped her to her feet. \"Your conscience is clear, honey, I'm sure of it.\"\n\nShe nodded and cuddled into him. \"I don't want to make any mistakes, there can't be any doubt that it's bad guys we're taking out.\"\n\n\"We'll be going up against the Kirrix next, there's no moral ambiguity there,\" John replied, rubbing her back. \n\n\"What about the Brimorians though?\" she asked, looking up into his eyes. \"They turned the Abandoned into a slave race... does that damn the whole Enclave?\"\n\nHe paused to consider it for a moment. \"It's complicated... Right now, I'm not sure just how much the average Brimorian citizen knows about Helene's people. There's obviously a very hostile attitude towards Terrans at the moment, but does that extend to a hybrid species? It's pretty obvious just by looking at the Abandoned that they're closely related to Terrans.\"\n\n\"If Rachel's right and there are billions of Abandoned, regular Brimorians must know what's going on. You can't hide that many slaves, it's just not possible,\" Alyssa said, shaking her head. \"I'm not saying we go in and start nuking cities as payback, but any society that happily accepts slavery is a pretty fucked-up one.\"\n\n\"We'll just have to see how it plays out,\" John said, his expression bleak. \"But I'm going to free the Abandoned whatever it takes, even if it means declaring war on the Enclave.\"\n\nAlyssa gave him a sad smile. \"From what Jade said about the rest of the Abandoned that she met, they seem like nice people. It's so shitty the way they've been treated.\"\n\nHe nodded his wholehearted agreement. \"That's one of the reasons I want to help them so much. I really like Helene, she's such a sweet, innocent girl. It's horrendous that the Brimorians would abuse people like that; it feels so monumentally unjust...\"\n\n\"Now you're sounding like Sakura,\" she replied, her smile lightening. \"I better keep an eye on both of you when we confront the Brimorians.\"\n\nJohn was quiet for a moment, then looked into Alyssa's eyes with concern. \"That reminds me... I'm getting really worried about combat discipline. The girls are incredibly resourceful and I want them to use their initiative, but these solo-rampages have got to stop. First Sakura, now Jade... their hearts have been in the right place, but they've been putting themselves and the team at real risk.\"\n\n\"I did it too...\" Alyssa admitted, looking guilty. \"I disobeyed you over Niskera.\"\n\nHe nodded, agreeing with her, but remaining silent.\n\nShe sighed, then said remorsefully, \"You're not saying it, but I can hear your thoughts. You think I'm setting a bad example; basically giving the girls tacit permission to ignore your orders.\" Sounding contrite, she continued, \"I admit that I've sometimes just gone ahead and done what I thought was best... and in combat I've tried to stop you worrying about the girls by keeping you in the dark.\"\n\n\"Yes, like Sakura at Khalgron,\" he said, studying her face. \"But you don't need to do that. You have more than enough to deal with already, I don't want you shouldering any more burdens.\" He gently brushed her cheek with the backs of his fingers. \"You're growing into a very powerful, very capable woman, but I've had years of experience with battlefield command. If you think I'm making a terrible mistake, by all means warn me, but don't cut me out of the loop. Leave the command decisions to me, okay?\"\n\n\"Okay, boss,\" she replied with a smile, leaning up to give him a tender kiss. \"It'll be different next time we face the Kirrix, I promise.\"\n\nHe gave her a grateful smile. \"Good girl.\"\n\nThe admirals had started to return after being temporarily dismissed, so John helped Alyssa off his lap and they both stood up as Lynette walked over to join them.\n\n\"Eleanor's feeling better now, but I've excused her from the rest of the meeting,\" she began, before turning to smile at Alyssa. \"She wanted me to tell you that she's glad it all came out. She hasn't been able to talk to anyone about the baby she lost for over forty years, but the guilt still preys on her mind. This was a... relief... for her.\"\n\nAlyssa reached out to clasp Lynette's hand. \"Thank you for telling me... it means a lot.\" ",
        "Lynette gently squeezed her hand in return, then looked at John. \"Alright, let's get business underway. I believe we should start discussing what we're going to do about the Kintark.\"\n\n\"I agree, Fleet Admiral,\" he replied, sharing a smile with her. \n\nShe returned to the podium and stood behind the glass lectern as she waited for the admirals to return to their seats. The three holographic projections returned, with Admirals Kester, Morgan, and Zelig watching proceedings via the holo-cams recording the meeting.\n\n\"Welcome back everyone,\" she said, appearing calm and collected despite the dramatic recent events. \"I will choose a replacement for Admiral Dubois, but I'd like to take my time selecting a worthy candidate. For now, the most pressing matter we need to discuss is the Kintark Empire and the aftermath of the Battle of Terra. What's the current status of the Kintark forces in the Sol System?\"\n\nAdmiral Edwin Caldwell unclipped a holo-reader from his belt to check the exact data. \"We estimate there were initially over 2100 warships of corvette size or larger in the Kintark armada. 107 were still capable of combat when they surrendered, mostly consisting of cruisers and battleships. Their carrier groups and support vessels were obliterated to a ship, along with all of their strike craft.\" He swiped across the holo-interface and continued, \"We're still checking the wrecks for survivors, but have taken over 800,000 prisoners so far, shipping them to the internment camps set up on Callisto.\"\n\n\"Thank you, Admiral Caldwell,\" Lynette said, before eyeing the admirals in the audience. \"We need to make contact with the Kintark leadership and discuss an armistice. With Baledranax slain, who is next in line for Imperial succession?\"\n\n\"Norwood was the real expert on the Kintark,\" Caldwell said with a grimace. \"I saw the Hera during the battle, but he didn't try to make contact. I haven't seen any reports mentioning his capture.\"\n\n\"Norwood was there on the Hera's Bridge,\" John informed them quietly. \"He lived long enough to see all his plans ruined, but he didn't survive the battle...\"\n\n\"A fitting end to the Dragon March traitor,\" Lynette said, her eyes narrowing with anger. She paused for a moment, her anger turning to regret at the sheer numbers killed by Norwood's treachery. With a heavy sigh, she squared her shoulders and continued, \"The last intelligence reports I read on the Kintark Imperial line indicated that the next in line for succession would be Baledranax's brother.\"\n\nJohn shook his head. \"If you're referring to Kindralax, we killed him while liberating Federation prisoners from the Xen'Nuchek slave mines.\"\n\n\"Does everyone who crosses you share a similar fate?\" Caldwell asked, an edge to his voice.\n\nAlyssa gave him a predatory smile. \"Yeah, pretty much. There's been a few exceptions, but it's never too late to clean house...\"\n\nJohn placed a calming hand on her shoulder, then ignored Caldwell and turned to look at the Fleet Admiral. \"We can contact the Kintark homeworld and find out who's in charge that way; someone must have been ruling Kinta while the Emperor was leading the invasion. What High Command really needs to decide right now, is the surrender terms you want to demand from the Kintark Empire...\"\n\nAeri Malone rose from her seat, her hands clenched into fists. \"We lost a hell of a lot of good people yesterday! Those scaly bastards need to pay for what they did!\"\n\nThere was a loud clamour of agreement from most of the admirals in the room, sharing her sense of outrage and need for vengeance. \n\nJohn got up and walked over to stand beside Lynette so he could face the indignant admirals. \"I understand your desire for revenge... the atrocities the Kintark committed demand retribution. After what they did to Port Medea and Unity City, let alone the war crimes committed against the Dragon March fleet, they should face a harsh penalty.\"\n\nLynette studied him carefully for a moment. \"I sense your idea of a penalty doesn't include total subjugation and annexation of the Kintark Empire?\"\n\n\"You could go that route and would be fully justified in doing so,\" John replied, noticing that he had the full attention of the admirals. \"But you need to seriously consider the ramifications of that kind of action.\"\n\nAeri Malone frowned in confusion. \"What ramifications? It's not like we'll face any objections from the Ashanath, Trankarans, or the Maliri. The Brimorians will probably complain, but they'd object no matter what we did, so what's stopping us?\"\n\nCharles grimaced and replied, \"Sixty percent of the fleet defending Terra was destroyed or badly damaged. We don't have the manpower or fleet resources for total occupation of the Kintark Empire.\"\n\nJohn glanced at him and nodded. \"Exactly. The Kintark Empire hold as many worlds as the Federation; imposing Terran control over so many potentially hostile planets will require huge numbers of troops and transports. The Kintark also have extensive borders that will need to be patrolled... I'm just advising caution, so you don't bite off more than you can chew.\"\n\n\"And we still have to deal with the Kirrix invasion,\" Lynette said, her expression growing increasingly bleak. \n\nAdmiral Cartwright exchanged a worried look with her. \"The logistical difficulties in supplying both the planetary liberation fleet on the Kirrix border and an occupation force in Kintark Space will be... daunting... to say the least. We're talking about a two-front campaign at opposite ends of Terran Space.\" \n\n\"I linked up with Commodore Campbell's border fleet and our combined battle group will reach the closest of the Kirrix occupied worlds in four days,\" Admiral Nathan Zelig stated, his holographic face revealing his tension. \"According to the border sensor grids, the Kirrix have been flooding into Terran Space... I intend to focus on liberating the occupied worlds, but my forces are geared towards patrolling the border, not planetary invasions. We're lacking in troops and have inadequate medical facilities to deal with the sheer numbers of infested civilians we're likely to encounter. We'll definitely need reinforcements and logistical support...\"\n\n\"As soon as the Invictus is repaired, I plan to head to the Kirrix border,\" John said, glancing at Zelig's holographic image. \"I'll do what I can to help liberate the Outer Rim and thin out the Kirrix swarm, but I won't be able to stay to defend the border.\" \n\nAeri Malone grimaced with frustration. \"I know we have to repulse the Kirrix, but we can't let the Kintark get away with invading Terra! We need to make an example of them.\"\n\nLynette had a stern look on her face as she said, \"I have every intention of making sure the Kintark Empire give us fitting reparations.\"\n\nShe turned to the lectern and her fingers swept over the holo-interface until a glowing Empire Map appeared in the auditorium, floating above their heads. All voices went quiet as they studied the map, visualising just how difficult it would be to occupy the vast number of worlds in the Kintark Empire.\n\nJohn watched them for a while, then said, \"Just ask yourselves, what does the Terran Federation really need?\"\n\nAfter a brief pause, admirals began calling out suggestions.\n\n\"Resource-rich worlds!\"\n\n\"Colonisable planets!\"\n\n\"Room to expand!\"\n\nLynette had an acquisitive gleam in her eyes as she turned to the holo-interface and made some adjustments. Half the Kintark Empire that bordered Drakkar Space and the Unclaimed Wastes changed from Imperial red to Federation green. \"We can claim those worlds, then offer the current Kintark inhabitants the choice between Federation citizenship or free passage to the Kintark-controlled portion of their empire.\"\n\nJohn smiled and nodded his approval. \"That should dramatically reduce the numbers of planetary rebellions you have to deal with. We crushed the Drakkar at Ashana, so they won't be a serious threat along that border for years... long enough for you to rebuild your fleets.\" \n\n\"Would the Kintark leadership even consider such a huge loss of territory?\" Kester asked, his shrewd gaze appraising the redrawn map.\n\nAeri gave him a grim smile of satisfaction. \"The Kintark don't have any choice, we've got them by the balls!\"\n\n\"I'm convinced that the Emperor threw every spaceworthy ship he could muster into this invasion,\" John agreed, glancing at Charles. \"In fact, I wouldn't be surprised if you have more Kintark ships parked outside Olympus than they've got left in the entire Kintark Empire.\"\n\nCharles rubbed his chin thoughtfully, then glanced at Lynette. \"If their fleet asset situation is as dire as we suspect, the Kintark won't even have enough ships to patrol their borders. If they reject our territory claim, we could make them an offer they would find very hard to refuse.\"\n\n\"What have you got in mind?\" she asked him curiously.\n\n\"Repatriate the ships and crews we captured at Regulus,\" he replied, his moustache twitching as he spoke. \"It would give the Kintark enough ships to form a defensive fleet, but not enough to be a threat to us.\"\n\n\"And the Regulus prisoners weren't involved with the invasion fleet's war crimes...\" Lynette murmured as she considered his proposal. \"That's an excellent suggestion, Charles. Thank you.\" \n\n\"We stripped the heatsinks from those ships, so it'll take the Kintark a few weeks to make them all combat-capable again,\" Charles said with a smile. \"Which reminds me... we need to start salvage operations on what's left of their forces in the Sol System as quickly as possible. There's a wealth of Kintark heatsinks there, as well as the shield generators they acquired from the Brimorians.\" He glanced at John and added, \"I believe you captured the Hera. What do you want to do with it?\"\n\n\"That dreadnought is Federation property!\" Caldwell strenuously objected. \"You can't possibly be considering just letting him claim it?\"\n\nCharles gave him a helpless shrug. \"I'm just adhering to the privateer amendments to Federation salvage law. Civilian vessels aiding in times of war may stake a claim on any enemy ships that they can prove they were solely responsible for incapacitating. My hands are tied.\"\n\n\"Civilian vessel?! That's absurd!\" Caldwell balked. \"He's only just been promoted to Vice-Admiral!\" \n\n\"But we've never officially revoked his retired status,\" Charles calmly replied. \"I know for a fact we haven't been paying him salary for the last ten years.\"\n\n\"This argument is pointless, I'm not interested in the Hera,\" John said, shaking his head. \"Upgrading that dreadnought to match the Invictus' capabilities would take us months and I can't afford to waste that much time...\" Glancing at Charles he added, \"I'll speak to you later about a bounty.\"\n\n\"I'm sure we can arrange a suitable reward for capturing the Hera unscathed,\" Charles replied, winking at his friend.\n\nJohn smiled back, then turned to frown at Caldwell. \"While we're discussing salvage, what were you playing at with the Maliri?\"\n\n\"They were trying to cherry pick all the best salvage sites,\" Caldwell replied, lifting his chin obstinately. \"And they had the audacity to do it in our home system as if they owned the place!\" \n\n\"Don't you think they earned that salvage?\" John asked, his eyes narrowing. \"You can't have missed just how many Kintark ships they destroyed.\"\n\nCaldwell was stubbornly defiant as he replied, \"The Maliri escaped the battle unscathed, while Terran forces took the brunt of the damage in the fighting... we earned the best salvage rights the hard way.\"\n\n\"If it wasn't for them, you'd be dead!\" John snapped, finally losing his patience. \"I'd already granted them permission to take whatever they needed! Do you have any idea how embarrassing it was for me having to apologise for your behaviour? The Maliri had just proven themselves to be invaluable allies and you suddenly decide to start antagonising them! What the hell were you thinking?!\"\n\nCaldwell winced then started to reply, \"But-\"\n\nJohn shook his head. \"But nothing! Between the Invictus and the Maliri, we racked up at least 50% of the Kintark ship kills! You should have been thanking the Maliri for leaving so much salvage for the Terran Federation!\" \n\nTurning to address all of High Command, he continued, \"That Maliri fleet is heading to the Trankaran Republic now, to help them liberate their worlds from the Kirrix. But the Terran Federation were supposed to be the Trankaran's allies; it should have been you helping them! Kester's fleet is right there on the Trankaran border and has been left sitting there for weeks! If High Command had actually lived up to its treaty obligations and assisted the Trankarans when they asked for help, you could have spared millions of civilians from the horrors of a Kirrix invasion!\" \n\nThe admirals looked chagrined, no one who'd been part of that decision was able to meet his accusatory glare.\n\n\"The Maliri just proved how invaluable strong allies can be,\" John said, his steely-eyed glare challenging anyone to disagree. \"The Trankarans, the Ashanath, and the Maliri have all started cooperating to face threats like the Kirrix. I strongly suggest that you start thinking of the bigger picture, because you might find you need their help again. After the losses the Terran fleets just took against the Kintark, you're highly vulnerable to aggression from the Kirrix and the Brimorians.\"\n\nLynette nodded, her expression grim. \"I'm sure everyone is painfully aware that if you and the Maliri had not intervened, most of us would not have survived the battle. The Kintark would now be deciding how best to rape our worlds of all their resources and the Terran people would have been doomed to lives of slavery. We sustained appalling losses at Terra, because our fleets had lost technological parity with the Kintark, but I'm determined that we will not allow ourselves to fall into that complacent state again.\" \n\nShe held herself straighter and said in a determined voice, \"Our highest priority now is to rebuild our shattered forces, so that we can protect our borders and assist our allies. We've been given an incredible gift of new technology, providing us with stronger shields, faster FTL drives, more powerful reactors, quicker engines, highly advanced heatsinks, and much longer-ranged sensors. I propose we fully exploit this massive boon, accelerating the refit and upgrade programs currently underway at Olympus. In addition, I want us to undertake the biggest ship-building program the Terran Federation has ever seen!\" \n\nShe turned and swiped her hand across the holo-interface on the lectern. On an adjacent screen, a long list of capital ships began to scroll down, detailing the proposed start and completion dates for each new vessel's construction.\n\nShaking his head Charles said, \"We'll never be able to meet those construction targets. We'd need at least five times the drydock capacity Olympus has at the moment!\"\n\n\"I agree,\" Lynette said with a crafty smile.\n\nShe pressed more glyphs on the holo-screen and the holographic Empire Map faded away, to be replaced with a detailed view of Olympus shipyard. The schematics highlighted the current drydock area and the much larger area of the space station that was allocated to docking civilian traffic. As Lynette's fingers flew over the holo-interface, the entire shipyard was reallocated to construction yards and refit bays. \n\nCharles gave Lynette a worried frown. \"All the fees we receive from docking bays allocated to civilians and traders keep the station running. We break-even on operating costs because of them...\"\n\n\"Which is why I propose we also greatly expand Olympus, building a whole new layer purely dedicated to trade,\" Devereux announced, hitting more buttons and displaying a new set of blueprints Dana had created for the massive station. The six-armed shipyard doubled in size, now incorporating a lower layer that housed hundreds of docking bays allocated for civilian usage. \"If we're going to be working more closely with the Ashanath, the Trankarans, and the Maliri, there'll be a huge upsurge in trade and I intend to capitalise on it. We're in the middle of all those empires and the logical focal point for a massive trade hub.\"\n\nThe admirals gaped at the holograms in stunned silence.\n\nCartwright finally managed to stammer, \"B-but this will cost trillions! We'll never be able to afford it!\"\n\n\"Not with the current budget, no,\" Devereux agreed, swiping her hand across the holo-controls.\n\nShe brought up a detailed empire-wide budget forecast for the Terran Federation, which again plunged the room into shocked silence. As the admirals read through the budget changes, there were disgruntled murmurings that quickly escalated into howls of protest. Lynette glanced at John, sharing a smile with him as her proposed changes generated exactly the kind of outrage they'd both predicted.\n\nEventually she faced her audience again and clapped her hands together, the sharp sound like a gunshot in the auditorium, shocking everyone into silence. With quiet restored, Lynette leaned forward and said, \"We are facing a time of unprecedented danger to the Terran Federation. These budget changes fly in the face of establish budgetary protocol, but they are critical to our short and medium-term ability to protect our territory.\"\n\nAdmiral Hugo Chapman fidgeted with his glasses, then shook his head vehemently, ruffling his comb-over. \"The changes you're suggesting are preposterous! You're seriously intending to eliminate ALL military R&D?! Have you completely lost your mind?!\"\n\nShe glanced at him, unmoved by his tirade. \"I realise this directly affects your remit, Hugo. However, I assure you I am quite sane. Last year alone, we spent over 175 billion credits on military research! In the short term, the likelihood of your research teams being able to improve upon all the alien technology we've just acquired is miniscule. Therefore, we will cut them and divert the funding to areas where we will see more tangible results.\"\n\nBefore he could raise any further objections, an attractive middle-aged redhead interrupted him. \"Lynette, be reasonable... you're planning to shut down all our propaganda divisions?!\"\n\nAlyssa frowned at her. \"Here's a novel suggestion: instead of trying to convince people you're doing a good job, how about actually doing a good job!\"\n\nAdmiral Lina Van Den Broeck glared at her and in a voice dripping with condescension, she retorted, \"This isn't some game, young lady. Public approval has to be carefully managed. If the numbers dip too low, it leads to rioting, anarchy in the streets, and eventually planetary rebellion!\" \n\n\"People aren't stupid. If you improve their lives, they'll be more content; you can't trick them into being happy!\" Shaking her head in disgust, Alyssa added, \"This shit isn't rocket science...\"\n\nThe redhead scowled and was about to launch into a fiery rant, before Lynette cut her short. \"Lina, that's enough, Alyssa's quite right. I fully intend to increase spending on planetary improvements, focusing on infrastructure, public services, as well as research into crop cultivation and hydroponics. We've neglected colony development for far too long, particularly on the Outer Rim. A happy population is a peaceful and law abiding one.\" \n\nWhile the grey-haired admiral in charge of research perked up, Van Den Broeck shook her head in disagreement. \"This is a big mistake! Our recent efforts to raise public opinion of High Command have been wildly successful and-\"\n\n\"No. They've been almost completely ineffective,\" Lynette said sharply. Before Lina could protest, she pointed at John and continued, \"We've been enjoying an unprecedented boost in popularity due solely to TFNN's coverage of the Lion's victories, particularly the ones in conjunction with T-Fed forces. The public love a war hero and John's delivered that in spades. For the last several months, the Propaganda departments have been a huge money-sink with nothing to show for it. If we hadn't spent a single credit, we'd have still seen a meteoric rise in public opinion.\" "
    ],
    "authorname": "Tefler",
    "tags": [
        "cum inflation",
        "swallow",
        "deep throat",
        "psychic",
        "hacker",
        "new recruits",
        "nymphs",
        "orgy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-104"
}