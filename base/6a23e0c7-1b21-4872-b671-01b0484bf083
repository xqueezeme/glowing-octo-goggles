{
    "title": "TRC - Searching for the Sky Ch. 21",
    "pages": [
        "Welcome back!\n\nThis is my 50th publication here on Literotica! Woot!\n\nSome Femdom in this one, not really my thing but it fit the character, so I rolled with it.\n\nIt's curious, I saw some vids of FemDom porn a while back (researching art references for Ikuno) and in all of them I would have told these tall, muscular women to go fuck themselves with a sand-coated dildo if they treated me like that. However, when I wrote the part in this chapter I don't have that same reaction and I don't understand why. As I said... curious. \n\nFor those of you reading The Runesmith Chronicles for the first time I recommend going back and starting with the first book The Runesmith Chronicles (it's actually Oni and the Farmer but it's too late to change it here :P). Mostly so you have a better understanding of how things like the magic system works and what's going on as I often reference earlier chapters.\n\nI update my profile with news and current projects each time I submit a new chapter.\n\nAs always, don't forget to vote and don't forget to leave a comment! I may not respond to every one but I read them all and they are greatly appreciated!\n\nEnjoy!\n\nBlu\n\n-\n\nEdited/Proofread by - oldfart and 2muchdiggity\n\n-\n\nChapter 21\n\nKal was thankful for the woman's heads-up yesterday about clergy views on sex, or else he wouldn't have been prepared for Priestess Elden in the slightest.\n\nA young man appearing to be barely of age escorted him into her office. More than a half an hour passed before the mage heard her enter and turned in his chair to see who he was dealing with. Kal immediately understood the older priest's need for some relief after speaking about the woman. With her toned body, chiseled features, full red lips, and hair as black as night, the priestess was stunning. Her robes showed nearly as much skin as they covered, being open on the sides and draping over her breasts until the white fabric tucked into a wide, polished belt. Her lower robes were split up the side all the way to her thigh. The mage figured that she must have some means of keeping the fabric against her legs, magical or not, or a stiff wind would show the world her sex and bottom.\n\nThe girl at the other cathedral didn't mince words when describing the woman's attitude. Before he could even take in her beauty, the first thing he noticed was her look of disdain as she glared at him. Kal didn't like her one bit.\n\nHe sat quietly for another half hour, patiently waiting for her to acknowledge his existence. She busied herself about her office instead; looking through various books, making notes and sending out memos with her assistant, who acted completely terrified of her. In that time, he discovered that the undergarment she wore was a skin-tight strip of material that barely covered her beneath her robes. After the first glance, Kal kept his eyes securely on the priestess's face. She seemed to be keeping an unusually keen eye on where his gaze was directed. Every time he caught a glimpse of whatever treasures her robes might cover, he jerked his eyes away and found something else to look at. His willpower was really challenged when she leaned over to get a book from the bottom shelf of her personal library. The top of her robes fell away from her chest, taunting him to look at the light pink spot at the bottom side of his vision. No sooner did the opportunity presented itself than she turned and locked eyes with him.\n\nKal took a little bit of solace in the twin bumps now poking through the white fabric. He didn't know what aroused her, but it made him feel a little better.\n\nShe sat down and began penning another memo, giving him an excellent view of her cleavage. He wanted to look, but her eyes kept flicking from the paper to his face. She suddenly dropped her quill back into its well. \"You're trying my patience,\" she sneered.\n\n\"I imagine that isn't difficult.\" The mage mentally raged at his own pride and foolishness, snarky comments like that were not going to get him the map he needed.\n\n\"Get out.\"\n\n\"The priest in charge of the southern cathedral sent me here. He said I might be able to help you in return for a map of the Death Plains.\"\n\n\"The Lantaran Plains,\" she corrected. \"What made him think you might be of use to me?\"\n\n\"He took a keen interest in my trappings as an adventurer before making his recommendation.\"\n\nHer eyes narrowed, \"I see nothing of the sort.\"\n\n\"I have a bag of holding, my gear is stored there.\"\n\nA looked of surprise crossed the priestess's face before reverting back to a contemptuous snarl. Bags of holding weren't rare, but were still useful enough only those with power, money or extremely good luck had one. If some tragic incident befell the owner...\n\nShe sat back, her face softening slightly. \"During our autumn sweep of the plain's inner perimeter, a regiment of cavalry went missing, as did the two priests later sent to find them. A week ago, a shredded and bloodied piece of their robes was found by one of the outposts along the wall. You can join me and the two other adventurers I'm taking to investigate tomorrow morning.\"\n\n\"In return for my help, you will give me a map of the plains?\"\n\nHer nod was nearly imperceptible. \"I will give you the opportunity to speak with the cartographers\u2014\"\n\nKal stood quickly, interrupting her. \"Thank you for your time, Revered Mother. You said that a regiment of cavalry and two magic-users have been killed. I won't put my life on the line for mere 'opportunities.' If you cannot guarantee I will get the map I need then I believe our business is concluded.\"\n\n\"As you wish,\" she said with a dismissive wave. \"A whelp such as you would hardly make any difference.\" Picking up her quill, she went back to writing.\n\n\"Of course I wouldn't make a difference, you're looking for fodder to feed whatever has been killing your people, so you can observe it.\"\n\nThe woman's head snapped up, suspicion written across her face. \"Who told you such things?\"\n\n\"You did. You are gathering adventurers from outside the city instead of using soldiers or more clerics. You need people who are expendable.\"\n\n\"You knew this and are still willing to join me?\"\n\n\"I was willing,\" he corrected her. \"Without the map, I have no reason to assist you. I won't risk my life for nothing. I canhonestly say that if your expedition goes sideways, I would be very useful to have along\"\n\nThe priestess rolled her eyes. \"Big talk, but you hardly have more than a few summers experience. I doubt you are as indispensable as you make yourself out to be.\"\n\nKal looked down at a box identical to the one possessed by the priest from yesterday resting on her desk. \"Open that.\"\n\nThe priestess did as asked then hesitated for a moment, realizing what she had done. Glaring up at him, her expression showed her ire at obeying his command.\n\n\"I took down an underground slave trade in a city east of here. I also bested its leader who was in possession of enchanted armor and weapons.\"\n\nThe woman's eyes flicked to the box, her surprise quickly turning into a scowl. \"How much help did you have?\"\n\n\"One other, and she was there to keep the girls we rescued calm.\" Kal waited until she checked the box again before continuing. \"I'm not totally certain how your hierarchy works, but you must be able to use the spell where a huge column of flame pours down on your enemy.\"\n\n\"Flame strike, yes I know it.\"\n\nHe leaned over. \"I've stood in the middle of that spell and walked away without singeing a hair on my head. Ask yourself if someone who can do that will increase your chances of coming home safely if things go wrong.\" When she didn't react Kal stood up straight again. \"I'm staying at the Gilded Sword Inn by the southern entrance if you change your mind,\" he said before stepping around his chair and making his way toward the door.\n\nIf he were older, she might think he was a mage. Since that was impossible, he must have some artifact that protected him from one of the clergy's most powerful offensive spells. If she could get her hands on whatever that item was along with the bag of holding...\n\n\"Be at the western gate an hour after sunrise. You will need a horse and provisions for four days,\" she called out as her assistant opened the door for him.\n\nThe man turned and bowed. \"Thank you, Revered Mother. Please have an employment contract drawn up for me to sign in the morning. Have a wonderful day,\" he said before stepping out the door.\n\nElden ground her teeth together in anger after the door closed behind him. The glow from the box indicating that he actually waned her to have a good day only aggravated her even more. Her pride as a priestess demanded that she be in control of situations concerning those lower than her, yet somehow that man managed to put her in a position of weakness. She thought to use the map he needed against him, but his quick refusal to accompany her group caught her off guard. She never really gained the upper hand afterward. The realization that he left without being dismissed only made things worse.\n\nHer jaw was beginning to hurt from being clenched for so long. She needed to calm down, she needed to think. The priestess slammed the lid of the box down and pushed her chair back from her desk.\n\n\"Boy!\" she barked startling the young man by the door. Slipping a foot out of her white leather sandal, she put it up on her desk. \"Pleasure me,\" she growled, pulling the gusset of her panties to the side. She used her heel to brush a small piece of cloth away from a crystal orb embedded in the table.\n\nThe young man locked the door and turned around to see the air shimmer faintly as the soundproofing enchantment activated. The fear on his face as he approached contrasted sharply with the tent in the front of his robes.\n\nPointing at him, she flicked her finger upward. Blushing in embarrassment, he stopped and pulled his initiate's robes over his head. Taking a moment to fold them neatly, he placed them in the chair recently vacated by the other man. Dropping to his knees, he crawled the rest of the way over to her as she often demanded.\n\nThe priestess leaned back in her chair and let out a contented sigh as her toy's tongue began working over the folds of her sex. She didn't need him to get naked, Elden simply enjoyed seeing how hard she made him. Occasionally, the woman wondered how she got lucky enough to find such a submissive man who also sported a nice-sized cock. Not that she'd ever let him know that.\n\n\"Keep your hands off that tiny dick of yours, you'll be licking up any messes you make,\" she snapped at him. She smiled when she felt him nod without losing contact with her pussy. That 'tiny dick' was the only one that had been inside her for months and filled her wonderfully, though she was starting to get that itch again where he was going to spend an hour or two licking her bottom before giving her ass a thorough pounding.\n\nLetting a small moan escape her lips, she decided that this was exactly what she needed before dealing with the cartographers. Normally, none but the high priest, priestess or the King could get their hands on a map of the Lantaran Plains, but she knew the weakness of one of the cartographers. She needed to be very relaxed and calm when she went up to meet him.\n\nWith a growl, she grabbed her toy by the hair and pulled him harshly against her sex, suddenly angry again at the things she was going to do for that man.\n\n---\n\nCum bubbled up into the priestess's cleavage as the map-maker grunted over top of her, his prick unloading its contents into the tight channel made by Elden pressing her breasts together. As he withdrew, she plastered a fake smile of excitement on her face and looked up as she began rubbing his spend over her tits and neck. The man's cock tried desperately to come back to life as he watched. When her show was done and her breasts tucked back into the fabric of her robes, she held out her hand.\n\n\"Same time next week?\" he asked, giving her the scroll case containing the map.\n\n\"And the week after, and the week after...\" she said with a coy smile as she stood up.\n\n\"Maybe I'll convince you to spread those beautiful legs for me.\"\n\n\"Sorry, not going to happen. There's only one man who gets to do that,\" she said and quickly suppressed a moment of shock as she realized the truth of that statement.\n\n\"Just don't hold it against me if I keep trying,\" he growled appreciatively as he watched her make her way to the door.\n\nShe stopped and ran a finger up her thigh through the slit in her robes. Hooking the fabric she pulled it up, giving him the faintest glimpse of her ass before letting it fall. \"I'd be insulted if you didn't,\" she said, casting him a sultry look before stepping out the door.\n\nElden made it back to her carriage before letting out a howl of frustration. Three more times she'd have to suffer through that man sliding his dick between her tits and three more times she'd walk out of there wearing his cum like it was lotion. Even then he nearly didn't agree, demanding a couple of turns inside her sex instead. How was she supposed to know that the inner geography of the Death Plains was such a closely guarded secret?\n\nOnce her fit of rage was over, she directed the carriage driver to take them back to the western cathedral. Stitting back down, she saw her assistant staring at her, in shock from her outburst.\n\n\"Pull the blinds, cock out, lay down across the seat,\" she commanded.\n\nHe was so startled by the unexpected request it took a moment to get moving. Within seconds he was lying across the other seat with his robes pulled up and prick pointing toward the roof of the carriage, magical lights by each of the doors illuminating him instead of sunlight.\n\nSlipping off her panties she tossed them over onto his chest. \"Wet it.\"\n\nHiding his surprise at how soaked they were, he smeared her juices over his cock with the small piece of fabric until it glistened in the low light. Elden spun around in the carriage and quickly sat down on his cock. Getting him lined up as fast as possible was a necessity. Other times they played this game an inopportune bump had left one or both of them in a great deal of pain. If he was already pointed where he needed to go and they hit a bump, getting hilted so suddenly was still uncomfortable but in a fun way.\n\n\"Don't cum in me,\" she growled. The feeling of being stretched and filled was already relaxing her. Despite her lack of interest in the cartographer, she reveled her power over men. The look of adoration on his face as he fucked her tits had left her extremely aroused.\n\nThe young man groaned in frustration. He had yet to make it through one of these trips while abiding by his mistress's demand.\n\nIgnoring the gasps and groans of the man beneath her as he tried to maintain control over the bumpy city streets, she looked at the scroll case in her hand. Contrary to the small moans of pleasure escaping her from the feel of her assistant's cock inside her, she frowned at the nondescript brown tube. As much as she hated what she just agreed to, Elden couldn't shake the feeling it would be worth it in the end.\n\nShe smiled and leaned back as the carriage reached the small section where they were trying out using bricks for the roadway. She loved this part of the trip.\n\nThe young man beneath her groaned in despair and only a few seconds later he filled his mistress with his seed. Like every other time, she refused to move or even acknowledge that he had just cum, other than a grunt of disappointment when she felt the first spurt. He clawed at the seats of the transport as the head of his cock became extremely sensitive, the rough road beneath them keeping the stimulation at a painful level. As much as he loved his mistress, he hated this part of the trip.\n\n---\n\n\"So, are you going to the market?\" asked Ria from his shoulder. Her appearance still got a couple of occasional looks, but magic was much more common in Lantaris with the prevalence of the church and she didn't draw the crowds like in the smaller towns.\n\nKal chuckled, \"Are you so disappointed with me after last night that you're already trying to pawn me off on another woman?\" He immediately winced as she backhanded his earlobe.\n\n\"It sounded like she was looking forward to another night with you. If your trip to the plains runs long, then she might not get a chance. Besides, you haven't gotten to invite her to Telsin.\"\n\n\"I was thinking that I would avoid hoarding all of the women I sleep with in one place and here you are suggesting just that.\"\n\n\"I love you Kal, but you can be amazingly dense sometimes.\"\n\nThe mage sighed, \"Now what did I miss.\"\n\n\"The part where she won't be able to continue being a merchant after her father passes. When that happens, she'll be looking for someplace to settle down. Your city in the sky is going to need lots of people when things get moving, better to have them nearby already instead of crippling Telsin by taking half their population. I doubt she'll have to worry about it for a couple of years. From your description, her father was looking pretty spry.\"\n\n\"You have a point, but things won't be ready until months after I get back, maybe even years. Most of the trades are already represented, it won't help if I flood the town with people who have nothing to do. Granted, Telsin doesn't have a town merchant. That might be a great idea if it weren't for Perra doing all of the negotiating for the town.\"\n\n\"So... are you heading to the market?\"\n\n\"I was honestly looking forward to another night with you, but it seems you have other plans.\"\n\n\"Being big like that tires me out and it's exciting watching you with someone new.\"\n\n\"I have a feeling there's more to it than that.\"\n\n\"You're right, I'm worried about how my body is absorbing your seed. It's not going into my bag and I haven't noticed any increase in the will-o'-wisp's energy I have stored. You aren't the first of my masters I've played around with and that's never happened before. Anything they left inside me was automatically stored. Until we know more, you may have to go without the big me and you don't sound very interested in the smaller me.\"\n\n\"Give me time on that, it was one of my major hang-ups before. I just can't bring myself to imagine your tiny body wrapped around me, no matter how much it stretches.\"\n\n\"Don't like the idea of waking up to a good morning blowjob and seeing your dick running all the way through me and sticking out of my pussy instead of in?\"\n\nA young man passing by looked over at the sprite in shock. Kal took notice but kept walking. \"Maybe we should save this conversation for when we are alone and not walking down a busy street,\" he suggested.\n\nRia chuckled in embarrassment as she looked back and sheepishly waved at the man who had stopped and stood staring at them. \"Yeah, you might be right,\" Ria said, turning back around as they walked around a corner. She smiled wide and threw her hands up in the air in triumph. \"The market!\"\n\n\"We're just here to see what kinds of things we might find useful for the trip tomorrow. Besides, I need to get a new pack since you gave away the last one.\"\n\n\"Suuuure you are,\" said Ria, her voice dripping with sarcasm. \"You realize you just said that to your bag of holding. Right?\"\n\nKal refused to look at her as they made their way into the crowded bazaar.\n\n---\n\nJamus stared in the direction of the man with the sprite on his shoulder long after they were out of sight. He just couldn't shake the idea that he had seen him before.\n\nOne of the city folk bustling around him nudged his shoulder, mumbling an apology as they passed by and snapping the squire out of his reverie. Shaking his head, Jamus started making his way toward the inner city once again. He needed to get back to the Academy before noon or Sir Balthus might assign him to assist the soldiers on the outer wall again. He really didn't know how they did it, the job was insanely boring. Unfortunately for him, it was punishment, so he didn't even get paid for it.",
        "The clergy may be a lusty bunch because of the goddesses' teachings but the Order of the Lion's Shield was strictly military and frowned upon bending a scullery maid over a barrel of apple cider. Sir Balthus was kind enough to stick him on wall duty for a week instead of the ten lashes he was supposed to receive. He'd best not be late getting back. He didn't want to miss his opportunity for lunch before afternoon training and he especially didn't want to disappoint his master again.\n\n---\n\n\"What?!\" said the woman, dragging Kal by the arm to the back of the stall and out of earshot from her father. \"Like hell I'm going to take my panties off and give them to you out here in front of everyone!\" she said in hushed tones while glaring fiercely at the mage.\n\n\"I didn't say you needed to take them off. You can just say it out loud that you are giving them to me,\" said Kal, grinning wide.\n\nShe was disappointed yesterday when he didn't come find her and ecstatic a moment ago when he walked up to her stall. But she wasn't quite sure what to make of this game he was playing. Probably some silly thing about whatever was inside her undergarments belonging to him now. She certainly hoped not, or this tryst she was looking forward to was never going to happen.\n\n\"Fine, my panties now belong to you,\" she deadpanned.\n\nHe leaned in close making her breath catch in her throat. \"You can get them back them at the Gilded Sword Inn later tonight.\"\n\nThe moment of excitement from him being so close was shattered by confusion. \"Eh?\"\n\nKal turned around and began walking away. \"Ria, retrieve what's mine,\" he said.\n\nThe woman looked on as a small glowing sprite appeared on his shoulder facing back toward her. The tiny avatar waved a hand and the merchant's daughter let out a screech of surprise as things suddenly became very drafty down below. A small speck of light escaped from under the skirt of her bright purple dress and chased after the retreating man before diving into a pouch tied to his belt.\n\nAt first, she was furious the man just stole her panties, but her anger faded quickly. A few seconds later she walked over to help a customer. She quickly realized the light breeze on her sex created by her dress would act as a constant reminder of what was going to happen tonight. A secret smile crept onto her face, her day just got a lot more interesting.\n\n---\n\n\"Still not going to tell me your name?\" asked Kal, running a finger down the woman's arm as she laid on the bed in front of him.\n\n\"Nope,\" said the merchant's daughter, pressing her back into his chest and sighing contentedly.\n\n\"That's not fair, you know mine,\" he teased.\n\n\"It was an accident!\" cried Ria from her perch up on the headboard.\n\nKal and the woman chuckled for a moment before the woman shook her head. \"I'm still not going to tell you. As much as I appreciate you telling me about your hometown, I won't be taking you up on that offer either.\"\n\nKal stiffened slightly, this was unexpected. \"Why not?\"\n\n\"Because, 'Kal, Wizard of the Unflagging Cock,' if I were to come to your little town then I would end up sitting around waiting for you and when you finally arrived I would be just one of the women vying for your attention. I don't want that. I want a husband who only has eyes for me and won't look at another woman.\"\n\n\"There are other men in the town. Good men who...\" the mage trailed off as the woman shook her head again.\n\n\"Not after this, Kal. I could never live so close to you knowing I could have this and be able to settle for one of your neighbors.\"\n\n\"Surely I haven't made that much of an impression.\"\n\nThe woman smiled, \"Since my father and I went out on the road, all the men I've been with saw me as little more than a warm wet hole. In fairness, they were just cocks with a man attached as far as I was concerned.\" She turned her head so she could look at him out the corner of her eye. \"You have more women than you can handle, so it's not just my quim you're after. You've picked out a place for me in this town you are making, so I can be nearby and have a place to ply my trade. You want me. Even though you have all these women, you still want me, and for more than just warming your bed. That leaves an impression, Kal the Wizard, a very deep one.\"\n\nFeeling how tense he was behind her, she sighed heavily and threw her legs over the side of the bed. \"I suppose I've ruined things now,\" she said, standing. \"I brought some extra silvers, just in case. I'll get myself another room.\" Making her way over to the chair her dress was lying on, she picked it up and began figuring out which side was which.\n\nKal shared a quick look with Ria before bounding out of bed and wrapping his arms around her. She tensed for a moment then relaxed into him, tossing the dress over the back of the chair. \"I figured I'd made you mad,\" she mumbled.\n\nThe mage chuckled. \"I've been spoiled these last few years. Getting rejected isn't something I've had to deal with a whole lot. I think Telsin will be poorer without you, but it's your choice and I'll respect that. Come back to bed.\"\n\nShe hesitated for a moment before nodding. A short time later they had resumed their previous positions.\n\nThey laid there in silence for another minute before Kal spoke up.\n\n\"Wizard of the Unflagging Cock. I like that!\"\n\n---\n\nFiguring that this might be their only time together, the woman made full use of Kal's rejuvenation spell and his ability to heal her when she got sore. She woke him a few more times during the night for a little bit of fun and he did the same to her. By the time morning came, Kal was feeling a bit tired from lack of sleep. He still had enough energy to leave the woman sprawled across the bed, smiling as she dozed, her legs splayed out and sex dripping the proof of their morning tryst.\n\nHe picked up the horse he purchased yesterday from a nearby stable and headed toward the meeting point just outside the western gate. On the way, he wondered if he might be able to tie himself to the saddle and nap on the hoof once they set out.\n\nKal hoped for a boring start to this errand but that only lasted until he read his 'employment contract.' He immediately noticed a clause where if he were to die then his property would be remanded to the church, Priestess Elden in specific. Behind his back, he drew the spell to lift the ink off parchment and made some small changes to the document. Now, only what was left on or around his person after he died became the property of the church. Though he still didn't know if Perra's mark below his own on Ria's bag worked, the avatar had been instructed to gather all his items before returning to Perra. In short, nothing would be left for the church to claim and this wouldn't hand over his property back in Telsin either.\n\nThe priestess was livid when she noticed the change while being confused about how he managed to alter the document without her noticing. She calmed when he explained that it essentially protected his property back home, but she would get the items she wanted. Elden was none too happy about having her greediness called out in such a manner but couldn't respond without telling a bald-faced lie.\n\nThere was another small hiccup when she demanded oaths of secrecy, and he demanded one in return.\n\n\"You are not to tell anyone of my items or abilities. I don't want people snooping around in my affairs because of someone's loose lips.\"\n\n\"You certainly seem to think you're important, don't you,\" said one of the other adventurers the priestess spoke about. His dark gray cloak and the various daggers and throwing knives he sported marked him as a thief. The other person with them was a tall woman carrying a zweihander currently strapped to her saddle though the wide leather shoulder belt she wore looked to have attachment points its back for the scabbard. The large sword seemed at odds with the studded leather armor she wore. Kal expected someone using such a slow and heavy weapon to wear something more substantial but she appeared to favor the extra mobility of the lighter armor.\n\n\"Just trying to protect those I care about,\" he replied.\n\n\"Whatever,\" said the thief. \"I'll swear to both of your damn oaths if it means we can be done with this and I can be away from this god-forsaken city.\"\n\n\"The goddess has not\u2014\"\n\n\"Stuff it, priestess,\" snarled the thief. \"The oath I took was to help you with this problem and keep you safe until we got back to the city. It said nothing about being nice to you or having to listen to your religious horseshit.\"\n\n\"Hey,\" the fighter called out, getting everyone's attention though she was looking at the thief. \"The fuck are you doin'. You don't piss off the cleric.\"\n\n\"Normally you'd be right, but these fuckers were gonna cut off my hands and let me bleed to death.\"\n\n\"You were the one who got caught, the punishment here is well known,\" said the fighter.\n\n\"I'm still certain that the master of the thieves' guild set me up. Even so, let me pay a fine or do some jail time but fuck's sake you don't need to kill me over it.\"\n\n\"We need to be on our way,\" the priestess growled before turning to Kal, \"I don't have the patience or time to fool with this. I'll swear to keep your secrets safe as long as you do the same for mine.\"\n\nKal smirked, taking entirely too much pleasure in the woman's annoyance. \"Sounds good to me.\"\n\nAfter Elden gave her assistant some private instructions, that left the young man blushing fiercely, they finally set out. The priestess took the lead and set a trotting pace that would quickly eat up distance without tiring the horses too much.\n\nThe mare Kal purchased from the stables was well trained, but she was no Bonn. It did make him think that he might want to take some time to teach Sera how to ride a horse. He found he missed it now that he was on one for the first time in months. He was planning a short respite once he and the gorgon were away from Lantaris, he might be able to do it then.\n\nKal hoped for a boring ride to the wall around the plains and beyond. Midway between the wall and the city he stopped hoping for anything to be boring as it most certainly wasn't working.\n\nA scream of rage from behind brought the party to a halt. All four of them turned to see a man in a full suit of armor astride a warhorse barreling toward them at full gallop. Far off in the distance, another two horses could be seen following after him.\n\n\"What is this fool doing?\" wondered the priestess. Her answer came a second later when the man pulled his sword out, making his intentions clear.\n\nSighing heavily, Kal called to Ria as he dismounted. There was no way he was going to fight from the back of a horse. He hoped to make it through this trip without anyone discovering he was a mage but apparently hadn't been careful enough. The fighter also dismounted and unsheathed her sword as she prepared to defend herself. A tiny part of Kal's mind was impressed with how easily she handled the large blade.\n\n\"What the fuck is this?!\" the thief yelled at the priestess. \"You bring us out here just so your boys can have a little chase before they run us through?!\"\n\n\"He's not after you,\" said Kal, tossing his horse's reigns to the thief before stepping away from the others. The mage's heart thudded in his chest as he stared at the man coming toward him. There was a splotch of gold on the man's breastplate. If he was correct, it meant that he had a golden lion's head embossed on it.\n\nNot just a soldier, but a knight... fuck.\n\n\"Why the fuck would he be after you? You're here by choice.\"\n\nSighing again Kal glanced at the thief \"Because of this. Ria, I need my good clothes.\"\n\nThe sprite nodded. \"Stand still,\" she said. Throwing her arms wide, a stream of light shot from the pouch on Kal's hip before breaking into smaller motes that formed a rough sphere around him. The sphere collapsed into the mage. His current clothing turned into specks of light a fraction of a second before the sphere touched him, replacing his more common garb with his normal trappings including his vambraces and cloak. A final mote landed in his hand and turned into his staff, which he immediately commanded to coat itself in metal.\n\nHe gave the remaining points of light the chance to return to the bag before picking it up from the ground where it dropped during the change. By the time he stuffed it into his pocket, the staff was nearly coated in platinum, which was a good thing as the knight was almost upon them.\n\n\"Are you okay Kal?\" asked Ria.\n\n\"No,\" he answered, unconsciously wringing the staff in his hands. \"This isn't a slaver who happens to be a good fighter. This is a knight with years of training and experience. I'm not okay at all.\"\n\nShe kissed him on the cheek. \"Good luck,\" she said before flying off so he could concentrate.\n\nKal gripped his staff and took a deep calming breath.\n\nAs he approached, the knight quickly donned his shield and adjusted the horse's path to go past his target. Kal was disappointed but not surprised when the horse slowed slightly, allowing the man to push himself up and off the back of the animal. He felt his magically enhanced speed would have given him a large advantage had his opponent stayed on his mount. The knight took a couple of hopping strides as he hit the ground before dropping into a ready position as the warhorse continued past the mage.\n\nPeeking over his shield, the man approached in a crouch with his sword held off to the side.\n\n\"Right!\" Ria called out from above him.\n\nWith his enemy plainly in front of him, sprite's signal caught Kal off guard. Before he could react, a hoof slammed into his shoulder from behind, sending him careening into the knight.\n\nHis entire arm went numb from warhorse's strike and his strength rune flared to life as he gripped his staff one-handed and deflected the man's sword. The knight allowed the blade to swing wide as he put his shoulder into the back of the shield and slammed it into Kal's face.\n\nEven with the help of the strength rune that hurt, a lot. Luckily, the rune kept the blow from dazing him and he was able to knock away the sword a second time as it came around the shield to gut him.\n\n\"Right!\" yelled the sprite again and the mage threw himself to the side. The warhorse's hooves passing through the space his head occupied a moment ago. The knight followed, but a burst from the speed rune and a short hop backward took Kal out of the man's range.\n\nThe mage took a moment to assess as he poured more power into the healing rune on his back. This had started out poorly, but he was still breathing. He was also terrified, the man in front of him was far more dangerous than Kogen could have ever hoped to be and, near as Kal could tell, he didn't have any magic items enhancing his speed or strength.\n\nThe knight whistled and his horse pulled up beside him as he slowly approached the mage. Fighting the man was going to be difficult, fighting the man and his horse seemed impossible. Drawing a quick rune, Kal cast a simple illusion of a black curtain over the mount's head, making it stop in its tracks.\n\nSeeing this, the knight's eyes narrowed and he began making a ticking noise with his mouth. A moment later, the warhorse started moving forward again, responding to the clicking noise and differently pitched whistles. With barely a pause they resumed stalking the man in front of them.\n\n\"Fuckin' hell. He's a mage,\" whispered the thief. The rest of the party had moved a short distance away as the knight attacked. They now watched as the man and his horse slowly bore down on the fourth member of their group.\n\n\"Was a mage,\" the priestess corrected, seething. \"The Knights of the Order are not to be trifled with.\" Not only was that ass of a man a mage but now he was about to be killed and the knight would claim the right of victory on the mage's bag of holding.\n\nThe fighter studied the two men intently. The knight was very skilled but the fact that the mage survived their first exchange was equally impressive. Though she hated to admit it, she doubted she would have fared so well in his place. The woman ground her crotch into her saddle. It was really too bad she agreed to exile, she would have loved to spread her legs for the knight. She wouldn't mind the mage either but even if he survived the knight and his horse, the knight's friends weren't far away.\n\nKal circled around, trying to keep the man between him and the horse. The knight's control over the beast was impressive and the animal quickly realigned itself after a series of whistles and clicks from its rider. The knight suddenly lunged forward and the sword rang against the metal-coated staff. The mage was immediately back on his heels, retreating from the man's flurry of attacks. Unlike Kogen, the knight understood the staff's weaknesses and kept attacking at angles that made it hard to knock the blade away effectively.\n\n\"Right!\" came the call from above. While on the offensive, the knight had maneuvered the horse to flank the mage and a different whistle came from the man just before Ria's warning. Instead of dodging to the right, Kal threw himself straight back and watched as the man spun in a backhanded swing that would have taken his head off had he moved that direction. The surprise on the knight's face was fleeting as he stood up straight and stared at the mage.\n\n\"Where's your blue-skinned whore, farmer boy?\" said the knight, his voice sounding hollow as it echoed around inside the man's helm.\n\nKal was stunned speechless, he hadn't been expecting that.\n\n\"Did you not hear me, farmer boy? Where is that worthless cunt of an ogre you were fucking?\"\n\nThe mage gripped his staff tight as he tried to control his emotions. Despite wanting to punch the man in the face for talking about Ikuno like that, he knew that anger was his enemy right now. Kal had only met three knights and that was years ago, back when he went to see the oni after she helped him save his mother.\n\nKal glanced down at the man's shield. There was a hole in the middle of the Lion's forehead. Looking closely at the knight's armor, he saw that the lion embossed on the breastplate looked like it had been pounded flat then beaten back into shape with a sledgehammer. He knew this man, though for the life of him he couldn't remember his name. However, he did remember watching the fight between him and Ikuno from just inside Ikuno's cave. The knight was good back then but appeared to have improved significantly in the past few years.\n\n\"She's dead,\" answered Kal. Maybe that would sate his thirst for vengeance.\n\nInstead, the knight dropped back into a crouch. \"Then I suppose I'll have to take your head in place of hers,\" he said as he began advancing with his warhorse at his side again.\n\n\"Galen! Cease!\" came another voice Kal hadn't heard in years. The mage moved to the side as Balthus and his squire were came up from behind. He didn't think he was in any danger from the older knight, but after just being attacked he felt it was safer to be wary.\n\n\"Stay out of this, Balthus!\" Galen called out. \"The blue bitch is dead, so I'll have to settle for the head of her lover!\"\n\nBalthus reined in his horse next to the other knight and dismounted. \"No, you won't Galen. If the blue ogre is dead then your fight is over, your quarrel was never with this young man.\"\n\nStepping out of his stance, Galen flipped up the visor on his helm and crossed the few steps over to the older knight. Their noses were nearly touching when he growled, \"If you try to deny me my vengeance, I will have you up before tribunal.\"\n\n\"If you kill a man who has not wronged you and has not broken any laws then you will hang from the gallows before you get the chance.\"\n\n\"That bitch taught him to use magic!\"\n\n\"Murder is still murder, Galen. Yield, and return home. The ogre is gone, move on... Brother.\"",
        "The younger knight glared at Balthus for a few tense moments. Spitting in the older knight's face he spun on his heel and walked away. Kal dispelled the illusion over the horse's eyes as Galen strode back to where his horse waited. With an almost supernatural grace, he mounted his steed and nudged the animal in the direction of Lantaris's western gate. He didn't even spare a glance in the direction of the man he just tried to kill.\n\nWhen Kal looked back at Balthus, he was wiping Galen's spittle off with a handkerchief, which he then handed back to his squire. The older knight turned and looked him over with curiosity.\n\n\"Looks like you have quite the story to tell.\"\n\nKal glanced at the retreating knight then back at Balthus. \"As do you.\"\n\n---\n\nArdolan had been as shocked as anyone at Galen's reaction when Balthus's squire jumped up from his seat in the mess hall and ran over to his master, claiming that the boy with the blue ogre was the man he saw in the city earlier.\n\nShe had been working on the young knight for the past year now. Foremost in his thoughts was training to the point of exhaustion every day in preparation for a rematch with a large, golden-horned, blue-skinned woman he lost a fight with. No, lost wasn't strong enough. She toyed with him, then crushed him. Unfortunately, the damage caused by his defeat was as much to the man's mind as his body. The blue ogre broke something within the young knight, and she had been working to repair that damage as part of her duties to the Goddess.\n\nWhen Jamus made his announcement, Ardolan was trying to help Galen quell the constant thoughts that the other men in the room were whispering about him when he wasn't looking and still laughing at him for his humiliating defeat back then. Upon mention of the blue ogre, the young knight exploded into action. Pinning the squire against one of the nearby stone pillars, he demanded to know where Jamus had seen the boy. Afraid for his life, the squire hurriedly told Galen it was by the marketbefore mentioning the strangely glowing little woman he was speaking with. The young knight bolted from the room as though chased by demons, off to find this man and demand to know the whereabouts of his blue friend... before killing him. By the time he reached the entrance to the academy, thoughts of learning about the woman were already gone. It was more important to redeem himself in some small way by just killing the ogre's boy. That would stop them from whispering about him.\n\nThe Goddess's Agent found herself caught up in the maelstrom of Galen's emotions until a scene from that fateful day burst into the man's head. In it she saw a younger version of the man she had set the will-o'-wisp upon.\n\nRetreating from the man's mind, she returned to the scrying pool. Finding the man out in the woods by himself had been easy once she had an idea where to look. Here in the city with no direct connection to the Goddess, it was going to be nearly impossible. She didn't find him until the next morning when a cleric saw the man's glowing sprite at a stable. Even after the incident yesterday, she was still stunned to find the man had somehow lived. A few minutes of eavesdropping on his and the sprite's conversation and she knew Kal was on his way to the western gate.\n\nReturning to Galen, she found him sprawled out on his bed. He had fallen asleep in his armor, but not before rampaging about his room last night after not finding the boy. Ardolan entered the room and infused the young knight with the image of the glowing sprite and the impression that what he desired could be found to the west. Reaching down, her hand passed through the flesh of his arm, a fingertip stopping the signals going to and from the area. Within seconds he frowned in his sleep. A few more passed and he finally awoke, rubbing the numb area of his arm as he sat up. The Agent didn't have to wait long before her efforts bore fruit. Thanking the Goddess, Galen donned his sword and shield, then ran out the door towards the stables.\n\nArdolan watched with glee from the scrying pool as the young knight slowly caught up with his prey. Even when the small party made its way west toward the wall, she still knew that there was no escape for the man.\n\nShe nearly shrieked with joy when Galen's horse landed the first blow, then stood slack-jawed when the mage managed to dance away and square himself for another attack. It wouldn't matter much. It was easy to see that the knight was far more skilled, making it only a matter of time.\n\nAs Galen stalked the mage, Ardolan picked up a snippet of conversation from the other three. There were reinforcements coming to help her knight. That seemed odd, the knight hadn't spoken to anyone before leaving the barracks. Shifting the image, she saw that Sir Balthus and his squire were indeed coming to help.\n\n\"I am displeased, Ardolan.\"\n\nThe Agent spun around, coming face to face with the Goddess. Fear filled the woman at her deity's expression.\n\nWith a flick of the Goddess's finger, she shot up into the air and came to an abrupt stop just above the scrying pool. Invisible shackles clamped onto her wrists and ankles, holding her in place. She struggled briefly before remembering that such things were futile in Mother's realm. She controlled all things here. Resigning herself to whatever punishment the Goddess had in store for her, she turned her attention to the scene shown by the water below.\n\nThe Goddess sat down at the pool's edge just before the knight lunged at the mage. Seconds later, Ardolan shrieked in rage as Kal managed to escape unscathed yet again. To the Agent's surprise the second, older knight stepped in to halt the battle when he and his squire arrived then watched as Galen mounted his horse and started back toward the city. After exchanged pleasantries and a short conversation, Kal, Balthus, and the squire rejoined the other three. Another more heated conversation between them and the priestess and all six of them were on their way west again, toward the wall.\n\nThe Goddess looked up. \"I told you that this man was part of my plans for Elta to change the direction of my church. Not once, but twice you've attempted to have him killed. You have been working against my plans and desires for this world and therefore have betrayed me.\"\n\n\"Elta can't obsess over a man who's dead,\" snarled Ardolan. \"The fact that he is alive is hurting her.\"\n\nThe Goddess nodded. \"It is. But it's not killing her, thanks to the mage's woman. She will come out of this much stronger for her trials and much more prepared for those yet to come. You nearly ruined that.\"\n\nThe Agent's body sagged. \"I'm sorry,\" she said, closing her eyes in preparation for what was to come.\n\n\"As am I,\" said the Goddess. A flaming sword formed in front of the deity and streaked up into the other woman's chest, the smoldering embers spreading out from the blade and turning the Agent's body to ash in mere seconds.\n\nWith a wave, the falling remnants were swept up by a gentle breeze and deposited a few paces away, forming itself into the shape of a woman. Stepping over, the goddess kissed the figure lightly on the lips, breathing life into it. The outer layer of ash fell away, revealing a familiar face. The Goddess inspected the memories of her former Agent, erasing her hatred of the mage Elta's obsessed over. She also reduced her emotional involvement when it came to those two.\n\nThe construct's eyes fluttered open and she looked around in confusion.\n\nThe Goddess smiled. She was like a baby now, a blank slate. Unfortunately, there were things to be done and the deity didn't have the time to watch her grow into her own person. Placing a hand on the construct's head, she took Ardolan's modified memories and fed them into the woman before her.\n\nThe goddess kissed the woman a second time. \"Welcome back Ardolan. I trust you won't disappoint me again.\"\n\nThe woman looked down and ran her fingers over the place where the sword had pierced her. This wasn't the first time she had displeased her Goddess and been punished in such a manner. However, unlike in the past, this time the deity had left every excruciating moment of being run through and burned away in her memory. She had a distinct impression that next time the Goddess might not bring her back.\n\n\"No, Mother.\"\n\n---\n\nPriestess Elden was none too happy about the current situation. It wasn't just the added oath of secrecy Sir Balthus had demanded or the fact that he and his squire were now accompanying them as far as the wall. What really bothered her was how one of the instructors at the Academy was chatting with this young mage like they were long lost friends. Even more frustrating was that she couldn't order him away like she could if it were one of the church's clerics.\n\nThe church and the Order's ranks ran roughly parallel, it was expected that lower ranks would listen equally to a knight as they would one of the church's clerics. Elden's formal title was Abbess and she was next in line to assume leadership of the western cathedral but that only put her on par with the Order's 'Lords' who often managed portions of the King's land. Sir Balthus was an instructor at the Academy, which meant he had risen to the status of Baron and he currently outranked her. She wasn't necessarily beholden to follow his orders, but she would need a very good reason to disobey. Thankfully, he had only demanded the oath of secrecy. It was annoying after giving one to the mage earlier but overall wasn't a big deal. This mission wasn't shrouded in mystery or secrets, but the higher-ups still didn't want any more attention than necessary drawn to the missing soldiers and clergy.\n\nShe also fumed over how friendly the knight was being. The mage was an outsider with no connection to the church or the city and unworthy of such pleasantries. Worse yet, he was a user of heathen magic and not the pure power bestowed upon her by the Goddess. As if all that wasn't bad enough, the man was a monster-fucker! What idiot in their right mind would take an ogre as a lover?! It didn't matter if this woman was some kind of special ogre called an oni, he had still willingly fucked an ogre!\n\nThe priestess nudged her horse forward. She had no desire to listen to such talk.\n\nKal noted the priestess riding out of earshot while still listening to Sir Balthus.\n\n\"I am sorry for your loss,\" the knight was saying. \"You seemed quite smitten with the woman back then, and she with you. If I'm being honest, I would have liked to meet her again and discuss the style of combat she taught you.\" Balthus chuckled, \"Don't look surprised, young man. Ikuno and Galen's fight may have been brief but it is easy to see the similarities in how you move. I must say I'm impressed. Few can hold their own against Galen the way you did.\"\n\n\"That's high praise coming from an Academy instructor,\" said Kal, nodding towards the older knight's robes. \"I was hoping to end things with Galen quickly by telling him that she was dead. I wish you'd been able to tell me before now about all of the problems after his fight with Ikuno, I wouldn't have bothered.\"\n\n\"Is she not dead then?\"\n\nKal gave him a sidelong glance. \"Sort of?\"\n\n\"Come now, young man. You've piqued my curiosity.\"\n\nKal shook his head. \"I probably shouldn't be telling you this but of the people I've met so far, you seem to be the least likely to use what I say against me.\" The mage took a deep breath, \"Ikuno just looks like an ogre, she's actually very different. From what she told me, oni's are a kind of spirit given form by the magic that made the monster girls. Those spirits are effectively immortal but if their body is killed then they return to their home until they can create a new one.\"\n\n\"And something happened to your oni friend to cause this?\"\n\nKal nodded, his face turning somber at the memory. \"A lich tricked her into attacking me. She gave her life to save me from dying.\"\n\n\"Few people can say they've seen a lich and lived to tell the tale.\"\n\nKal smiled at the knight. \"He attacked her from the astral plane, so I never actually saw him. What I've learned about liches since then has given me the impression that this one is borderline incompetent by comparison to most. Then again, he wasn't a necromancer to begin with, so I'm not really sure how he became a lich in the first place.\"\n\n\"Perhaps I should stop asking questions, your tale keeps getting more interesting and we don't have much longer to speak,\" said Balthus, indicating the outpost they were approaching. \"I must admit to some curiosity as to what brings you to Lantaris. This surely is the last place a wizard would wish to be.\"\n\n\"The lich is still out there and I don't know if he understands Ikuno's 'death' is temporary. Regardless, I want to be there when she comes back in case he attacks her again. I've learned a lot about the magic he used to attack her. If I can drive him back to the material plane, I believe Ikuno and I can take him together. The problem is getting there. Her home is far to the east and the knowledge I need to get there quickly is...\" Kal nodded toward the plains.\n\nBalthus frowned. \"By rights, I should stop you. However, since you are entering the plains on the behalf of the church I suppose there's not much I can say if you decide to run off once your contract is fulfilled.\"\n\n\"I appreciate that.\"\n\n\"It looks like this is where we part ways,\" said the knight. The priestess had reached the outpost and was presenting their documentation to the guards for entrance.\n\nThe outpost was one of three along the wall that consisted of a wide and well-manned tower with a large gate through it. Another could be found on the western side of the plains while the last was roughly midway between the other two along the northern border.\n\nThe wall extending from either side was high enough to prevent a horse from jumping over and wide enough that soldiers and archers could patrol it. Kal understood that further away from these major outposts there were places where the wall was low enough a man could see over top.\n\n\"Farewell, Kal, it was a pleasure to see you again...\" The knight hesitated for a moment then gave the mage a thoughtful look. \"When you return with your blue lady-friend, consider sending me a message. As I said before, I was hoping to speak with her again someday.\" He held up his arm that had the runes for his magical shield which was wrapped in cloth. \"I would have returned but our trade back then turned out to be a double-edged sword.\" Kal had noticed the wrappings but assumed that with the church's dislike of other types of magic it was merely a matter of courtesy.\n\n\"How so?\" he asked, immediately curious.\n\nThe knight began undoing the strips of cloth and it was immediately apparent to Kal what happened judging by the scar tissue around the rune. \"Around a year after meeting you, a number of orc tribes banded together and were assaulting our northern holdings in search of men. Galen, Corrin and I fell into one of their well-laid traps. While fighting our way out, I was blocking the spells from their shamans when the rune began heating up. Lowering the shield would have been the end of us, they saw us as too much of a threat to be left alive. By the time we escaped, my arm looked like this. As you can see, I still have the blasted thing but it's unusable and I keep it wrapped to hide the scars.\"\n\n\"The ink failed, it wasn't high enough quality,\" said Kal. \"You were lucky it only burned. I've had them explode on me.\" The mage though for a moment, \"Would you be interested in another trade?\"\n\nBalthus chuckled, \"Ikuno appears to have taught you well. What would you suggest?\"\n\n\"A potion that drastically reduces the look of scars for a copy of the rune on your arm.\" He held up the vambrace with his own shield rune, \"This does the same thing as yours. As you can see, they are very different. I'd like to study how yours works.\"\n\n\"I find your proposition quite agreeable. I only regret that I can't get rid of the thing now that it's useless.\"\n\nKal smiled. \"I think I can help with that.\""
    ],
    "authorname": "BluDraygn",
    "tags": [
        "fantasy",
        "femdom",
        "monstergirl",
        "sfts",
        "trc",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/trc-searching-for-the-sky-ch-21"
}