{
    "title": "The Power of Love Pt. 03",
    "pages": [
        "This is Part three of this new tale. Those that are enjoying it I hope you like this part as well. I've wasted enough time in part two defending this story and stating that I hadn't read BreaktheBar's Font of Fertility before starting. I hope this part shows that to be true. Yes, I've since read it and yes, even I was surprised at the similarities. However, let me state here again this was a concept I came up with in my desire to tell a tale of polyamorous lifestyles that blended with some mind control and Harry Potter type magic. MY INSPERATION was Greek Mythology, Harry Potter, the legend of Camelot and its Druid Sorcerer Merlin Emrys. With just a hint of Starwars (yet to come), Elric of Melnibon\u00e9 and the Highlander movies and TV show.\n\nWhile I love hearing from my readers and love getting your feedback, suggestions, and what you like or dislike about the story. Any further \"Anonymous\" comments calling me a liar and thief will be deleted. Let me leave you with this thought There is a much quoted maxim by Christopher Booker \"There are only 7 major stories in the world.\" If that is true, then it makes sense that some people may have several ideas that seem alike.\n\nAs always, comment below, but be brave enough to use your name if you do. Like the story or hate it, tell me why. Don't forget to click those stars and send me feedback if you'd like to discuss things privately or make suggestions for the future of this story.\n\nXoxo\n\nLIZA\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI hurried next door and knocked on my neighbor's door. \"Thank God you're here.\" Polly's mom said, pulling me inside. \"I don't know what's going on, but you need to go stop Angus. He's in his man cave gathering all his weapons to go kill some young man named Nicoli.\"\n\nThat stopped me. Never in my life had I known Mister Tolliver to own weapons. \"What does that mean 'all his weapons'?\"\n\nPolly's mom Jean bit her lip, much like her daughters do when they are nervous. \"So... umm... okay, see, everyone in our family is a power of some sort, except Polly. Lindsey is an elemental, using heart magic to talk to animals. I'm earth based, I can grow anything. Angus, however, is the scary one. He is a genuine power not like you, not a seat of power; he is an ancient Battle Mage. Angus has been around since the tenth century BC.\"\n\nI was stunned. \"Well, that's interesting. So he's where exactly?\"\n\n\"Do you know what's going on?\"\n\n\"Yes, and after the party tonight, I promise we will all set down and talk about it. Polly has powers too. She, it seems, can learn fast and absorb information. It works better if she is close to a ley line.\"\n\nJean's eyes get big. \"She's a sorceress. We need to find her an excellent mentor.\"\n\n\"What do you mean?\"\n\n\"That's what a sorceress is Jason, you really need a better mentor yourself before you get yourself in a mess. A sorceress is essentially a student of magic who learns everything and then can do any of it. The more powerful they are, the better they are at it. If she needs a ley line connection, then she is a natural sorceress and needs someone who will help her learn natural or elemental based magic. You might need to move somewhere else back in the city.\"\n\nI smiled. \"That's going to happen, anyway. Seems I own an enormous estate right on a ley line. One here in town, too. Let me see what's going on with your husband and stop him before he goes to war with the entire Russian mob. We can talk about all the rest tonight after the party.\"\n\nJean nodded. \"He's in the man cave don't freak out too much.\"\n\nShe smiled like I didn't know what I was in for and she had been right. I entered to see my girlfriends' father in a Tartan Kilt and nothing else. Blue paint on his face and body and weapons everywhere. Not a game table or TV in sight, just weapons. Everything from what looked like a stone ax and sword all the way to an Ak47 and even a handheld rocket launcher. \"Jesus Mister, Tolliver, are you going to start world war three?\"\n\nHe looked at me and I could see the red angry glow of The God of war in his eyes. That was what Jean had meant by her husband was a Battle Mage. He harnessed the Anger and battle magic of Aries and used it to fuel his fighting. He looked pretty darn worked up.\n\nHe looked at me. \"You passed Judgement, I can feel that. What was decided?\"\n\nI held up my hands. \"All I have done so far is release Lindsey from the vow she made to him under the influence of a powerful date rape drug. I don't know if he is a mundane or a power yet; so I have to meet him before I can decide. What I know is your daughter needs healing and love, and that might not look like the type of love you are used to or want for her.\n\nBut I promised Polly that I'd help her, and I will. But you can't go running off armed to the teeth and kill this boy as much as you wish to. Not unless you want to have to fight the entire east coast Russian Mob Mister T.\"\n\n\"Why do you say that?\"\n\n\"Nicoli is the son of Andropov Bubanova, head of the east coast branch of the Russian Bravta.\"\n\n\"I could handle them, but you are right. It would be a war, and our neighborhood doesn't need that. What do you propose?\"\n\n\"I'm working on it, Mister Tolliver. Give me a couple of days. The first thing was to get Lindsey away from him and convince him to leave her alone. Then we can figure out retribution. But make no mistake, I'm upset about this too. He will pay for what he did to her and to the young woman last year. I promise when I'm done, he will never do this to another daughter anywhere.\"\n\nThen I took my life in my hands. \"Mister T, I'm going to ask a hard thing of you. Harder than not killing the little shit when he shows up to get Lindsey tonight.\"\n\nHis eyes narrowed. \"What are you going to ask that's harder than that, Jason?\"\n\n\"I need you to trust me with both your daughters. Polly, as you know, is the love of my life and maybe you don't know, but she is my Prime. I think I can help Lindsey, but to do so she will have to join my 'family' as well.\"\n\nThe big bear of a man looked at me. \"Before I answer that, answer me this. I know you love Polly and she loves you. How is this all going to work for you and her son?\"\n\n\"We talked, Polly and I. We both agree the only way it can work is if we keep no secrets from each other. She has final say on anyone we make a part of our 'family' her word for them, not mine. I give her all my first experiences and tell her about any experience I have to build power or as part of a judgement payment as soon as I can.\n\nThere are no secrets between the two of us and she is in charge of the women in our family.\"\n\n\"And she will be okay with her sister being in this 'family'?\"\n\nI shrugged \"Honestly, she suggested it. As long as she isn't present and vice versa. But honestly, Angus. I saw something on the video. Lindsey is a submissive personality; she needs a strong Dominant hand, or this will happen again. Or something worse.\n\nI can take her and give her what she needs in a safe, loving environment. Polly can help me.\"\n\nI lean toward him, \"surprisingly your older daughter has something of a Dominant streak in her with other women in our 'family'. I've already seen it at play today. And Lindsey needs what we can offer her. A safe, loving situation without the need to be in control herself.\"\n\nAngus looked at me and then nodded. \"I have no worries about you with either of my daughters, Jason. You were always a kind and loyal friend to them. I can see that you are growing into this unique position you've found yourself in.\"\n\nI shrugged. \"Hang around after the party and all of us will talk. I'll explain more then. For now, we need to talk to Lindsey. We need to deal with Nicoli when he comes to get her tonight. I promise you when the time of his retribution comes; I will make sure it is more than fitting and that you are offered the opportunity to witness it.\"\n\nWith that, he came out of his space with me and I saw his younger daughter trying to slip down the stairs and get away. So, I grabbed some magic, not realizing I was pulling from the energy he'd pulled for his 'battle' at the time, then making a mental chain with it, I hurled it at Lindsey as I spoke. \"Lindsey Tolliver, stop right there.\"\n\nThe chain of magic settled over her, binding her to me temporarily, and she stopped. Then she turned a glared at me. \"Let me go, Jason. You had no right to stop me or to break my connection to Nicoli! He loves me!\"\n\nSomething still wasn't right. My Proclamation should have set her free from this need to submit to her abuser. I expected her to be an upset, crying mess, not an angry, lovesick wildcat.\n\nI opened my senses and realized that while I broke the vow, there was something more tying her to him. A small silver mist formed a collar and leash around her neck, the leash leading off somewhere. I assumed something connected it to Nicoli. I told her father what I was seeing, and he cursed under his breath.\n\n\"Seems you were right for having me wait. That's compulsion magic. He must be a power, and that makes this your purview.\"\n\nI walked up to Lindsey. \"I had every right, Lindsey. I'm the Seat of Power of Love and Fertility and someone asked me to make a Judgement on your behalf.\"\n\n\"I didn't ask for a judgement and no one else should have.\"\n\n\"One was asked for, paid for, and given. But I can see that more needs done.\"\n\nI tightened the chain I'd created around her and then looked her in the eye. \"Lindsey, I know this isn't you. I can see the compulsion magic still attached to you and as soon as I see where the other end goes, I will free you. Until then, I've put you under my own compulsion spell that is stronger, and you will obey me.\n\nNow go change into a pretty party dress, remove as much of those piercings as you can and clean all that goth makeup off your face and get ready for your sister's birthday party.\"\n\nLindsey looked like she was trying to obey, but the other compulsion was at war with mine. I reached out with my magic and followed the line of the thin compulsion into her mind and then placed a block around that part of her mind for now, blocking his inputs from controlling her.\n\nWhen I did, she sobbed and fell to the floor. \"What's happening to me, Jason? He hurt me why do I keep obeying him?\"\n\n\"Because he used drugs and magic on you, little one. Now do as I say and go upstairs and get ready for Polly and my birthday party. We really want you with us there.\"\n\nI nodded to her mother and indicated she should help her daughter. \"She has some intimate piercings see if you can help her remove them.\"\n\nThe woman nodded and helped her daughter upstairs. Both Angus and I heard the rumble of a muscle car pull up and the honk of a horn. \"That's the little shite now. Ye be sure I can't carve him up?\"\n\nAgain I reached out and sensed not only a lesser power but three mundanes in the car. \"No, but his buddies might just need a bit of convincing to leave well enough alone. Three armed bodyguard types.\"\n\nAngus walked over to the closet and opened it, pulling out two aluminum baseball bats. \"Well Laddie, sounds like a good time for us then.\"\n\nI followed, watching as he pulled in red angry magic from the ley line beneath our feet and stepped outside to see the punk from the video standing beside the car. \"Where's my bitch?\"\n\nI allowed myself to twist some of that battle magic into my voice and project. \"Nicoli Bubanova my name is Jason Argonaut, Seat of the Power of Love and Fertility of the fourth District, and I have a Proclamation of Judgement against you on behalf of Lindsey Tolliver. Thru the use of a date rate drug and magic, you bound another lesser power to you against her will and used her as a sexual toy. I have found you guilty, and I proclaim that it dissolved your hold over her. You will remove your compulsion magic from her mind this instant.\"\n\nThere was again that crack of thunder and a flash of lightning. The doors of the muscle car opened and the three bodyguards stepped out. I could see the chains of compulsion magic on them as well. \"So you've placed your men under your power as well. That won't save you. Remove you magic from Lindsey or face further judgement.\"\n\nThe obnoxious shit laughed at me and jerked on the magical chain that was attached to Lindsey. I heard the door behind me open and Mrs. Tolliver trying to get her daughter to stop. I looked back and Lindsey was in a party dress, but her eyes were locked on Nicoli. \"Get in the car, you slut.\" He ordered and her feet moved. I yanked on the chain I had attached to her and she moved to my side. But her eyes stayed locked on him.\n\nI turned to him and felt my anger increase. I reached out into Lindsey's mind and grasped the collar of power that Nicoli had locked her in. Without a struggle, I snapped it into pieces. He screamed and clutched his head as the thread holding her to him dissolved. I walked over and pushed him with my powers until he was kneeling in front of me and I followed the thread from one of his men into his well of power.\n\n\"You Nicoli have refused to obey the judgement of a Seat of Power. Therefor I sentence you to the harshest Judgement I can think of.\"\n\nI reached my magic into his spirit and grasped his well of magic, cupping it in my eyes magical hands and yanked it out.\n\n\"I proclaim that in Judgement of your disobedience to a fair judgement made against you by a Seat of Power. You are no longer in possession of any lesser magical ability. I remove the magic from you by strength of my will.\"\n\nI put his well inside of me and felt it attach. His goons were now under my control. Nicoli screamed, and I felt something in his mind break. But I was still seething with anger.\n\n\"You have used your magic to compel this young woman and others to preform sexual acts for you to record. As further punishment, I sentence you to experience their humiliation, pain, and degradation for yourself.\n\nYou will take yourself and your video camera to a place where your body will be used as a sex toy. Once there, you will record and post the video of you setting a record. You will record men using you as their whore nonstop until you've set a new record of taking five hundred loads of cum at one time.\n\nFive hundred in your mouth and another five hundred in your ass. Then, after that is done, you will set up six months of encounters with anyone who wants to use you. The cost will be one dollar a use. You will record every act and post them on the same sites you posted the girls. Then you will get a tattoo put on your forehead that states you are anyone's dollar anal and oral whore.\n\nAnyone who gives you a dollar after that time you will service until the day you die. So I have proclaimed, so let it be done.\"\n\nThere was a clap of thunder and the compulsion sealed itself to Nicoli. I turned to see his three goons laying on the ground with broken bones from where Agnus had unleashed his fury on them. \"You will return to Mister Bubanova and let him know that any retaliation against this judgement will bring him under my wrath.\"\n\nWith that, I snapped their leashes of power from the well of magic and watched them drag themselves to the car. Nicoli stood looking pale and broken and climbed behind the wheel. I could see in his mind's eye he was heading home to get his camera and make his best gang-bang video yet. The one that would make him a star.\n\nSeven\n\n<p align=\"center\">~~~~~</p>\n\nI returned to my apartment to finish getting ready for the Party. It was almost time, so I was going to have to rush, and I knew Polly and Sara were going to demand answers from me. I motioned to the bedroom where Crystal was already sitting on the bed with a noticeable baby bump. \"Okay, that was fast.\"\n\nShe glared at me. \"Yes, my whole pregnancy will be fast, Jason. Fairies are only pregnant for six weeks. They give birth exactly six weeks to the second they are impregnated. So yes, I'm already showing. By the way, you need to apologize to your Prime.\"\n\nI looked at Polly, who shrugged. \"She's been going on like this since you left.\"\n\nCrystal sighed. \"Have you forgotten the additions you made to you vow of claiming? I told you it was dangerous that you would leave the two of you vulnerable. You've broken your vow to her. You vowed to give her all your sexual firsts. Except you made me pregnant before making her pregnant, so you have broken your vow and left her open to manipulation by any other greater power.\"\n\nBoth Polly and I jolted at that thought. \"I'm sorry, Polly. I didn't even think about that.\"\n\n\"I forgive you Jason I didn't think about it either, because I didn't want to give up my career before it got started.\"\n\nSara laughed. \"You don't have to give it up just because you become pregnant. You two are such human bound people. Do you really think Polly that you are going to be a physical therapist? You're the Prime of a Seat of Power. You are supposed to with him to advise him and help focus his magic.\"\n\n\"There wasn't anything about that in my Dad's manual.\"\n\n\"Umm... Master... About that...\" Crystal cringed. I looked at her. \"What about it?\"\n\nShe waved her hand and a much thicker book with the front removed appeared in her hand. \"I umm... might not have umm... given you the whole thing.\"\n\nShe handed it over to me and I could see the tight handwriting that I already recognized from the book I had thought was the whole thing my dad had left him. \"Why did you keep this from me, Crystal? Well, why did you, as Seraphina, keep this from me?\"\n\n\"If you had that you wouldn't need me and then I wouldn't have been able to get my fix.\"\n\nI just shook my head. \"If you had stayed around long enough, then you would have known that I would have taken care of any need you had. No, I wouldn't have let you keep stealing my power, but I would have done what I did anyway and remove your addiction.\"\n\nCrystal glared at me. \"You didn't remove my addiction, you just changed it so I need your cum instead.\"\n\nI got in her face. \"That's right, I did, and do you know why I did that Crystal, my knocked-up fairy servant? So, I could force you to be honest with me. If you'd been honest and helpful from the start, I wouldn't have had to force you to give me your oath or make you addicted to my cum.\"\n\n\"Then take it away now. You don't need it anymore you have my unbreakable oath of loyalty, don't you? So, the right thing to do is take away this addiction you forced on me.\"\n\nI thought about that and then smiled. \"You keep telling me that the rules don't apply to me anymore. That what I say is right is right and what I say is wrong is wrong. Well, I say you being addicted to my cum is right, so you're stuck with it.\"\n\nTruthfully, I was probably going to remove her addiction. She was right, and there wasn't a need for it anymore. But I wanted her to pay for her crimes against my bio-dad and me first. Before the conversation could continue, there was a knock on the door between my place and my mom's.\n\nI heard my sister Sara open the door and then the girlish giggles. Lindsey had finally arrived and was in a much happier place than when I'd last seen her minutes ago. I could feel her presence thanks to the residual connection I still maintained on her from the compulsion I'd placed on her. I could feel the confusion, anxiety and hurt that her ordeal had left her with, and I was determined that after the party I would do whatever it took to bring our happy, bubbly Lindsey back to us.\n\nAs soon as Polly heard her sister's giggle, she was out of the bedroom and moving to her sister. I looked at Crystal, whose head was still hung in shame. \"I forgive you for keeping this from me, Crystal. From now on to stay in my favor, you will hide nothing from me and teach me what I need to know.\"",
        "\"Yes, my Lord. Be careful, my Lord. I don't know who gave me my orders to take energy from your father and you, but it came from the Council of the Gods. One of them is your family's enemy.\"\n\nWhile that news didn't really shock me, it was a confirmation of what I was already worried about. I already had three people with Crystal that were under my protection, four if you counted Lindsey and one or more of the most powerful magical beings in creation were working against me.\n\nBesides finding more members for my \"family\" of powered women, I needed to really spend some time learning my powers limits and the Job they expected me to do. I needed to keep filling my energy well and spend some time really studying my father's manual. All while keeping watch for whomever was trying to destroy my family. So much for a relaxing summer vacation at home.\n\nAnd on top of that, I needed to understand how I did what I'd done to Nicoli. I'd not only removed his power, somehow I'd taken his well of power and added it to myself. Not to my well but in addition to my well. I could feel his energy inside me. I'd never heard of anyone who could do that. I really needed answers, but now was not the time tonight was about celebrating my life and the life of my best friend and Prime. Happy Birthday to us!\n\n<p align=\"center\">~~~~~</p>\n\nThe birthday party was, as always, on point. The only hitch was Dad. He came in, dropped off a present for me and one for Polly and then said he had to go he had a meeting he couldn't get out of. There was something about him. Something seemed off, but he was in such a hurry I didn't have time to even pick up on what it could be.\n\nThe upside to the party was watching mom work the crowd. Most of the people that came to this thing were our parent's friends, not ours, at least not since high school was over. While I couldn't hear what mom was saying, I focused on her mind and knew when she pulled each of her female friends aside; she was telling them what she was offering.\n\nThe women were at first surprised, but when the conversation continued a few minutes, they kept sneaking looks my way. I smiled at each of them and before they left, they each came up and gave me a kiss on the cheek before giving one to Polly. Each woman whispered a \"see you later this week\" into my ear and, from the color of Polly's cheeks, did the same thing to her. None of their husbands seemed any of the wiser.\n\nFinally, it was just the seven of us. My family and Polly's family and it was time to get serious. Knowing I might need her help, I called for Crystal and was surprised when she walked down the stairs and in from the kitchen. I'd forgotten she was full sized. Angus, Mom and Jean all gasped at the sight of a pregnant Fairy in our midst. \"Saints alive, Lad, what have ye done?\"\n\nI nodded my head. \"I know. In my defense, I didn't at the time. But it's not like anyone has been training me for this job my whole life.\"\n\nMy mom blushed at that. \"I'm sorry they warned me to keep you safe. I thought I was doing the right thing.\"\n\nI reached out and pulled her into a hug. \"I'm not blaming you, mom. I'm not blaming anyone, it's just the way it is.\"\n\nI looked around. \"We all need to talk about a few things. First being what happened to Lindsey at Homecoming and tonight and what is being done about it.\"\n\n\"Nico Broke me Jason, I'm not sure anything can fix me.\"\n\nI smiled at Lindsey, walked to her, and wiped the tear from her face. \"That's not true, but I need to remove the restraint I put on you now so you will understand what I'm trying to show you, okay?\"\n\n\"I don't want to go back to that angry woman Jason.\"\n\n\"I know you don't, but to do this right, I need to release you. Then after we all talk and you understand why what happened to you happened, I promise Lindsey I can help you be you again. The real you.\"\n\nShe looked at me. Searching for something. \"I don't know if I should trust you. I mean.\" She blushed.\n\nI smiled, my heart hurting for her. \"I know what you mean. You know you can, but you're afraid. You're broken, and it's hard to have hope after what you've been through. But fixing things that's part of my new Job you know.\"\n\nShe smiled and sighed. \"I thought you were just a sex god now. That's all Sara's been talking about.\"\n\n\"Well, it's a perk of the Job but honestly, all the Seats of Power are supposed to hear disputes and fights and wrongs, decided what needs to be done, put that into action and help those that come to them. At least that's the way I see it.\n\n\"Aye, a wonderful description of what some of your fellow Seats are like.\"\n\nI nod to my future father-in-law. \"To help you heal, I have to help you understand why this happened to you to do that you have to let me return you to how broken you are so we can decide together the best way to heal you.\"\n\nShe sighed and nodded. I dissolved the chain of compulsion I'd forged and the change was instant. The angry raving girl from earlier was back only now her anger freed of any compulsion raged uncontrolled at her abuser her and anyone else she felt wronged by.\n\nI looked at her and pointed to the smaller couch her parents were seated on. \"Lindsey, go sit between you mom and dad.\"\n\nProving my theory, she walked straight to the couch and sat between them. \"Fine, but I hate being here. I hate what Nico made me do and I hate these damn piercings.\"\n\nIt was the last statement that shocked me. I looked at Jean, who shrugged. \"I did what I could. There was enough of his control left that it was a fight to remove any of them and some of them are, umm, more permanently attached.\"\n\nI nodded. \"Then let's start with what we can fix. Angus, you may wish to slip into the other room momentarily. I need to have your daughter undress so I can see these permanently attached piercings and remove them for her comfort and healing.\"\n\nHer father stood and nodded. \"Aye, while I've obvious seen her when she was a wee lassie without her clothing on, it's not something I wish to be part of, not now that she's a grown lass. I'll just wait in the kitchen until I'm told to come back.\"\n\nOnce Angus was out of sight, I turned to his youngest daughter and to continue with my experiment. In my most authoritative voice, I looked at Lindsey. \"Lindsey, stand up and strip naked.\"\n\nWithout hesitation, the nineteen-year-old girl did exactly what I told her, too. With everything she had been through, you would think she would have ranted and raved or stalled. She didn't, she obeyed almost without thought.\n\nI almost wish she hadn't. Seeing the beautiful girl naked and the damage that Nicoli's cruel treatment had wrought against her made me wish I'd let her father go to war against him. I looked at the eight small rings in her outer labia, knowing that they were soldered in and the pain that had to have caused her angered me. That I knew he'd used them to lace her shut when he wasn't selling her to the highest bidder online caused me to wish I'd done more to him than the compulsion I'd placed upon him. Her beautiful full nipples also had larger rings in them also soldered shut so they couldn't be removed.\n\nAgain, as I was inspecting her, I caught brief glimpses into her memories and the things that were done to her. There had been a small silver chain that had gone through the rings on her outer lips just like the normal ribbon that she was laced shut with by Nicoli regularly they had then run the chain up and clipped them to the rings in her nipples and yanked causing pain when ever it entertained them.\n\nI used my magic and could see all the physical injury and the things that needed healed in her body it was her mind that worried me. The things he'd compelled her to do had changed and broken things deep in her psyche; things I didn't know if I could help heal or even if I should attempt to fix them. Yet I'd already knew I'd be trying. But first we'd start with restoring her to the unscared and marked body she had before homecoming.\n\nI looked over at my mother and sister. \"Can the two of you together work on healing the physical? I'll remove the piercings if you all will heal the damage done to her. Be through not all her pain is coming from the piercings. There's tearing, bruising and a raging infection as well. You fix those and I'll get our Lindsey back to her normal looking self.\"\n\nSara and Mom nodded, and I knew they'd go to work. I used a touch of my power to dissolve all the soldered bits so the piercings could be removed and had her mom and Polly remove them. While all that was going on, I also directed my power to remove the tattoo Nicoli had her get and then caused her hair to change back to her natural blonde and grow back to the length I remembered it being at Christmas time.\n\nOnce all that was done, I had Lindsey get dressed and then sent Sara to get Mister Toliver from the Kitchen. Once he returned and made a big deal over Lindsey looking like his little girl again, I directed the conversation where we needed it to go. \"I'm going to do an experiment now to show you all what I've discovered about Lindsey. Please don't interrupt me or make any comments until I say it's time to discuss things.\"\n\nEveryone nodded, and I looked at Lindsey. \"Lindsey, I'm thirsty go get me a glass of water from the tap.\"\n\nWithout a thought, Lindsey was on her feet and heading to the kitchen. As she went, she asked, \"do you want ice water from the refrigerator dispenser instead, Jason?\"\n\n\"No, just from the tap will be fine thank you.\"\n\nShe brought me back the water I asked for and I took a drink as she went and sat again between her parents. \"Oh, this is too warm. Would you mind taking it back and getting me some ice water from the refrigerator dispenser, Lindsey?\"\n\nShe huffed at me. \"I just asked you if that's what you wanted and you told me no. I'm not your slave, Jason. I'm never going to be anyone's slave again.\"\n\nI just nodded and went on. \"So I noticed as I watched the video and Lindsey's interactions with people tonight that she is something called a natural submissive. Some people have a strong will and are good at making their own decisions. There are others who are more likely to do just what they are told. It's why she was such a good girl all her life.\"\n\nI looked at Lindsey and then said. \"Lindsey, go in the kitchen and get me a glass of ice water from the refrigerator.\"\n\nWithout a thought, she was on her feet heading for the kitchen again. \"Do you want me to take the other glass back?\"\n\nI shook my head she went into the kitchen as we all watched and got me a glass of water from the fridge. Once she brought it back to me, I asked her if she would mind taking the old glass of water back and pouring it out.\"\n\nShe blew up since she had just asked me if I wanted her to take that glass back and sat between her parents. I smiled. \"See when she's asked to do something she resists, but if she is just told to do it, she will without thought. Even if she was just asked to do it.\" I looked her in the eyes. \"Lindsey, take both of my glasses into the kitchen and put them in the sink.\"\n\nAgain, she just went and did it. Her mom asked me. \"Are you using your powers on her?\"\n\nI shook my head. \"No, I'm not, watch.\"\n\nLindsey came back in the room, and I asked her. \"Lindsey, would you like to come sit with me and your sister?\"\n\nShe shook her head and went and sat between her parents. \"See I asked she said no. But if I tell her.\"\n\nI smiled at my neighbor's youngest daughter. \"Lindsey, come sit on my lap and let me cuddle you.\"\n\nShe got up and came and sat on my lap, letting me hug her close. I looked at her and rubbed her back. \"Why are you sitting on my lap Lindsey?\"\n\nShe looked confused. \"You told me to.\"\n\n\"Yes, I did, but why did you do it?\"\n\nShe was worried now. \"Because you told me too didn't you want me to sit on your lap and cuddle?\"\n\nI nodded. \"I did, but do you want to sit on my lap and cuddle?\"\n\nShe thought for a minute and then shook her head and started to get up. \"Not really.\"\n\n\"Sit down Lindsey and don't get off my lap until I tell you that you can.\"\n\nShe settled back on my lap as naturally as if she wanted to be there. \"This is the problem we find ourselves with. Because she is a natural submissive, she just naturally follows any command she is given. If asked to do something she will decide but if told to do it she just naturally does it. That's what made her so easy for her abuser to turn her into his sex slave. It's also what will make her easy pickings at university and the rest of her life.\"\n\nI watched as Jean Toliver came to understand just what I was saying about her youngest daughter. \"So what are you suggesting that we do, Jason?\"\n\n\"Angus and I have already reached a decision on what to do. I will help Lindsey heal her emotional damage from what happened to her earlier this year. In return, she will make a vow of loyalty to me and Polly as part of our new 'family'.\"\n\nAngus shook his head. \"Nay lad, that isn't what I agreed to. I agreed to give you both my daughters, but only you. We will make neither of them vow to obey the other one. I knew a wise man once who said 'No one can serve two masters.' I will give you both my daughters and I will expect them both to pledge their loyalty and obedience to you, but only to you. I will not allow you to cause either of them to divide their loyalty between two masters or a master and mistress as it were.\"\n\nI looked at Polly, and she nodded. \"He's right. My sister and yours, too, shouldn't make a vow of loyalty to anyone besides you. The rest of our new family should, but not them. Like me, they should belong to you and you alone. Anyone else in our genuine families too that makes a vow should just vow to you.\"\n\nI wondered who she was thinking of. I knew I'd ask her later, but for now, we needed to end all this. So I could keep my vow to my mother that I would make her erotic dream come true. \"I guess we agree then, Angus. Lindsey will become part of my new family situation and make a lifelong vow to obey me and only me.\"\n\nLindsey looked at me with tears in her eyes. \"Really Jason? You agree to take me as your own even after everything that I've done, all the disgusting things he made me do?\"\n\nI held her closer and wiped her tears. I couldn't fix her tonight I figured she was going to take a few days of work with lots of sex in between to keep trying to not just fill my tanks but to have extra power to fix her broken mind. I had a new thought too, but wanted to talk to Crystal about it alone later, after everyone else was asleep.\n\n\"Yes Lindsey. Nothing that evil boy did was your fault and the things you did for him weren't your fault, either. I'm going to heal all the things he took away and all the things he added to you just like we took away the tattoo and piercings. When I'm done, you will become mine and I will keep you safe and loved for all your life.\"\n\nThat caused Lindsey to sob, and I just held her and let her cry herself to sleep. I looked at her father. \"You'll need to carry her home and put her to bed. My schedule is going to be crazy for the next few days. We are moving into our new house. I have a date with Polly tomorrow and one with Sara the next day and in between I need to look for other women to add to my 'family' and try to fill up some of my well of magic before my thirty days are up. It will be Saturday before I can devote the time I need to fixing Lindsey.\"\n\nAngus nodded. \"Aye lad, and I've a boon to ask of you as well. In return for giving you my daughters, I ask an old-fashioned bride price for each of them.\"\n\nThis was unexpected, and I got the hint from his thoughts before he shielded them he wasn't talking about money but something else. \"What is it you want from me, Angus?\"\n\n\"Long before anyone in this room was born, I lost my head in a battle. The battle rage overtook me and I lost control of my magic and end up killing everyone on the field. This led to the powerful sorcerous queen losing all of her sons in the battle. She, in her anger and grief, cursed me to never having a son of my own to pass on my family name too.\"\n\n\"You want me to remove the curse?\"\n\nAngus shook his head. \"Nay Lad. The curse was just. However, I still want a son. So I'm asking you to use your magic to impregnate my wife and ensure that the child is a male that can inherit my magic so that there is a battle mage to continue the Toliver linage when my end comes.\"\n\nI looked at Polly's mother Jean and asked. \"You knew he was going to ask me to do this?\"\n\nJean nodded. \"I knew he had been thinking about it for years. We discussed going to other Seats of Power and asking for this, but none of them felt right. When we heard you had come into your own power, we discussed it again. If it was alright with Polly, then we agreed to ask.\"\n\nI looked at Polly, who also nodded. \"It was one thing we had talked about this morning before I came over after breakfast. I'm okay with it as long as I don't have to be in the room. I know that means less power for you, but I can't watch my mother have sex with you any more than watching my sister.\"\n\nI looked at the family that was almost as close to me as my own and knew I was going to do this for them. It wasn't a matter of if I would as much as when would I do this.\n\nI stood and walked over to Angus Toliver. \"I grant you your bride price, Angus Toliver. I will breed a son for you to carry on your family line and pass your magic to him if I can.\"\n\nAngus looked at me. \"You can I've done the research. Merlin gave me this scroll. It has the instructions. He said they would be easy for you to ken for ye self.\"\n\nI open the parchment and read it.\n\nI hope this helps you Jason Argonaut. You must take a small portion of the battle mage's battle magic and attach it to each child where a magic well is located within seven days of their conception. Honestly, you could probably do it later as a Seat of Power, but I'm telling you what I know for a fact will work as the High Priest of the Druids. I'll see you soon, but not soon enough.\n\nYour humble servant,\n\nMerlin, High Priest of the Druids and King's, Magician to King Arthur of Camelot and Sorcerer Supreme.\n\nP.S. Sometimes a mistake is not a mistake but necessary. Do try to remember that in the next few days.\n\nIt was interesting to me that the note was written to me personally as if the Sorcerer knew me already. So maybe there is some truth to the rumors that he lived backwards through time. Next he said children, not child, so I obviously was going to give Angus more than one son. Third was that Angus knew Merlin. I looked at the Mage. \"When did Merlin give you this scroll, Angus?\"\n\n\"Um... the first time I asked him about it. So about a thousand years ago.\"\n\n\"Thank you, that's interesting. Can you call up a small amount of your battle magic for me?\"\n\n\"Aye\" He held out his hand and a tennis ball sized mass of angry red magic sat on it. In my magic vision, I saw myself with a tiny melon baller about the size of a BB and scooped out that much, and then I attached that to the top of my magic well for safe keeping until later.\n\n\"Now if you would take your daughter's, my sister, and my fairy to your house to rest tonight. I will keep your wife and fulfill my boon to you and keep my word to the woman who raised me for the last twenty-one years.\"\n\nThe old mage nodded. \"Aye lad. I'll keep watch over yer Lass's tonight and Yer Wee folk too.\"\n\nEight\n\n<p align=\"center\">~~~~~</p>\n\nThey say power corrupts, and absolute power corrupts absolutely. They say no good deed goes unpunished. They say acting in anger leads to regrets. I say they are absolutely correct. What they forget to say is power corrupting isn't normally an instant thing its small things and a slippery slope to let nothing change your morals. It's even harder to control when everyone keeps telling you the rules don't apply to you. So that's what I blame for what happened next.",
        "As Agnus was moving to scoop his sleeping daughter up, I overheard Jean and him whisper. It wasn't meant for me to hear and I know why she said it, but I overheard it and it led me to a really poor decision made in anger.\n\nWhat I heard was Jean whisper in her husband's ear. \"For you I will do this but I won't enjoy it.\"\n\nHe stopped and looked into her eyes, and whispered back to her. \"Nay wife. Ye will. Ye'll not be denying ye needs for what you think is mine. Take yer fill then bring me home a son.\"\n\nHer declaration pissed me off. I was doing this for them, but I too had needs and I had very little time. I needed to fill up my well with power. Here the mother of the two women I'd vowed to take was going to deny me what was mine by right and by title. All because she didn't want to feel guilty around her husband.\n\nSo in my anger I did what I had promised myself I would never do without just cause. I reached inside and went to change her mind. The problem was, Jean was holding so hard onto her arousal level that I couldn't affect it. I would have to effect it another way.\n\nI could see her thought process and understood her reasoning, but I needed her arousal. For a couple of reasons, if I'm honest. The first I was the seat of the power of love and fertility. As that newly appointed Seat I needed to fill my well of power. This encounter should help me not cost me magic. Yes, doing the spell to make her pregnant and to make those babies have her husband's magical DNA would cost me magic. So, Jean should give me back what I was using and honestly, she should give me more than what I was going to be using.\n\nThe second reason was I wanted her to enjoy herself. Turns out I am a man who enjoys bringing women enjoyment. Probably because Sandra raised me to put others first, but I truly believed in the adage that the woman's pleasure should come first and often. I may be young, but I'd imbedded myself with all the knowledge of how to please a woman. I would not allow a woman to have sex with me and not leave fully loved and satisfied with the encounter.\n\nRemember that slippery slope I was talking about earlier? I'd already been in three people's minds and made changes tonight. I'd seen just how easy it was to get them to do what I want by making changes. I had changed Seraphina's by giving her a cum addiction before she became Crystal.\n\nThen I'd been in Lindsey's head and changed her to help heal her, and I wasn't done slipping into her mind. It would take a few more trips and changes to truly heal her.\n\nFinally, I'd been in Nicoli's bringing judgement and making sure he paid for what he'd done to Lindsey. So going into a mind and making changes had become almost normal by this point. The big difference, of course, was I had promised myself I wouldn't make unnecessary changes to people.\n\nChanging Jean's mind wasn't necessary, but I wanted to, and I remembered how easy it was. So I tried again to reach in and crank up her arousal. Again, she clamped down hard on it mentally and wouldn't allow me to change it. I knew she didn't realize I was trying to change it, but she was resisting the change.\n\nSo I thought about how I'd changed the security guys at my new estate. By slipping in through the cracks. That's what I needed to do here. If I couldn't up her arousal, what could I change?\n\nI looked inside her and where her arousal was being held in check at nearly zero, her anxiety level was through the roof. Maybe I could affect that first. If I could get her to give up control of something she saw as bad, maybe I could use that as the way to get control of everything.\n\n\"Mom, could you go get us all a glass of your perfect Sangria so we can talk about tonight and just relax a bit?\"\n\nMy mom, who was picking up on the anxiety rolling off of her friend Jean, nodded and went to pour us each a glass. I used that time to move over to Jean and behind her. \"Jean, you need to relax or this will not work. How about just for tonight you let me be the one to worry? Give me all your worries and let me carry them for you.\" I whispered into her ear as I massaged her shoulders. \"Look how tight you are from trying to hold on to everything. Just let go for a bit. I'll hold your worries and you just let me have control of them.\"\n\nThe whole time I'm whispering to her, I'm turning the same thoughts into her head like a light fog to slip past her defenses. She doesn't even realize I'm doing it. Telling her she's so tired of being in control of having to worry about everything. That it might be nice just for a little while to let someone else carry her burdens.\n\nSo she lets go over her control over her burdens and anxiety and lets me melt them away. I watch as I do that and her control over her enjoyment and arousal is fading away and I slowly change her thoughts to how she enjoys not being in control of being able to relax for the night.\n\nAs I push her enjoyment up, I also start slipping into her how good looking I am and how she wants to have the most enjoyable night of her life. That if she gets one shot at having sex with the Seat of Power of Love and Fertility that she wants to really know just how good a lover he can be. Polly had told her he taught himself everything there was to pleasing a woman, and she wants to experience that. Then I change from she wants to experience how good a lover I can be to she deserves to experience how good I can be and I watch as her resistance falls away and her arousal level climbs and I just keep pushing it up and up, until it can't go any higher. She's primed to have the most enjoyable night of her life and she desires to experience every once of pleasure I can give her. She's so aroused that she's soaked herself and it's still rising. I pull out of her thoughts and move into her physical body and turn up the pleasure sensitivity of all her erogenous zones.\n\nLittle known fact, there are thirty-one erogenous zones in the body. Of course, some of them are obvious, such as a woman's breasts, her nipples, her clit and pussy inside and out and, of course, her anus. But there are others that are lesser known. Behind the knee's, the neck, the scalp, fingers, palms and wrists, for example. Also, her ankles, toes and inner thighs, just to name a few. I increase the sensitivity of each and everyone. I plan to play both these women tonight like a sexual Stradivarius violin all night long. I plan to make them cum until they can't remember ever cuming for anyone but me.\n\nThen I reach into Jean and I turn back her internal clock to thirty and lock it. I tighten her sagging tits and ass back to fit and tone. I tighten her pussy to almost virgin tightness and I turn her metabolisms up so that she burns fat quickly and easily.\n\nI changed her body, making it practically immortal because I had seen one of her biggest worries was that she would age and Angus, who was all but immortal himself, would regret marrying her. It upset her to think of her getting old and him still looking fit and thirty-five. He had told her how he had several families throughout the ages and had always watched them grow up and old and die. This way with his girls tied to me. His Son's becoming Battle mages and his wife now made immortal he'd never have to lose another family. My gift to the couple that had been like second parents to me growing up.\n\nThen I command her ovaries to ovulate.\n\nI was already anticipating the fun I was going to have making Jean cum for me repeatedly. I was so focused on that idea that I wasn't really paying attention to what I was doing to her reproductive system. I instructed the egg that she just produced that it would become fertilized and split, giving her twin boys. Then I pulled out of her body, knowing she's dripping with her desire to have the sexual experience with me of a lifetime. I take a quick moment and reach into my body and turn my ejaculate into pure sperm to ensure that Jean is impregnated tonight.\n\nI turn to Sandra as she reenters the room and gives Jean her glass of Sangria. That's right, I did all the changes to Jean in less time than it took my mother to pour and carry three glasses of Sangria from our kitchen to the living room. Once we are all sitting and sipping our drinks, I turn to Sandra. \"Last chance, mother. Are you sure this is what you want? Me to become your lover and not your son? Because once that line is crossed it can't be uncrossed.\"\n\nAs the answer to that question, Sandra stands up and moves in front of me on the couch and pulls her party dress over her head, showing that she is completely naked under it. By completely naked I mean not only did she not have on a bra or panties. It appeared my sister had told my mother what I'd said I wanted my women dressed like she had on high heel fuck me shoes and silk thigh highs. But not just any silk thigh highs, Sandra was wearing expensive seam up the back thigh highs.\n\nHer pussy was completely bare and I could tell just from how smooth it was that my adopted mother had run to the spa and had a Brazilian wax done while we were out earlier. She climbed on my lap, straddling me, and took my face in her hands. \"I think this answers your question.\" Then she leaned forward and kissed me rhythmically, fucking my mouth with her tongue as she ground her perfectly bare and already soaked pussy against the hardening cock in my pants. That definitely left no room for doubt about how sure Sandra was.\n\nBecause of the changes I'd made to Jean's arousal level, she wasn't about to be left out she stood while Sandra was grinding on me and removed her own dress. The difference she had on panties and took them off, leaving her in thigh highs and her own party heels. Her own body was magnificent. Unlike Sandra, Jean had a well-trimmed triangle of strawberry blonde hair, just about the entrance to her cave of wonders, the hair there already soaked and fragrant with her arousal. Her green eyes were sparkling with desire and arousal. Her recently toned by magic body with no sag or extra fat. Jean looked like a slightly older version of her two daughters.\n\nThere was just nothing about her I found displeasing. If I was honest, I was looking forward to pleasing both women tonight, each for different reasons. And for a reason, that was also similar. Neither had been sexually pleased in a very long time. Sandra because her husband just hadn't cared to even make love to her in years. The man who I used to call father had been too wrapped up in his own life to even attempt to take of his wife's basic needs.\n\nJean, on the other hand, had a tougher experience. I had caught in her mind that Angus, like those warriors of his time, thought that sex weakened his battle magic and had refrained when there was fighting to do. But Angus had always taken it further. He limited his participation to once every couple of months. Not because he disliked the experience, but because he truly believed he lost some of his battle magic and power with each release. So he abstained more than he partook.\n\nNot only that, but as a man centuries out of time, he had learned nothing about modern techniques or sexual liberation. He had sex the way he'd learned it centuries ago. Thus, he took his wife in what we now called the missionary position and, with little to no foreplay. Jean wasn't even sure she'd ever even experienced an orgasm since she married him. To me, that was tragic and one reason I wanted to make her aroused and bring her pleasure. To give her something she might have never had otherwise.\n\nJean was now just as ready for me as Sandra was. So I lifted Sandra off my lap and suggested that we move our little group some place where we could all get more comfortable and explore the pleasures I planned to give them both through the rest of the night.\n\nWe ended up in Sandra's bedroom. Where I decided I was going to sexually torment the woman who used to be my mother for a while. I went straight to her dresser and pulled out four silk scarves. I tied one around each of my former mother's wrists and attached those to her headboard on either side so that she couldn't move her hands while she was sitting against the middle of the headboard.\n\nThen I took the other two scarves and tied them to her ankles. Which I then tied to her headboard as well, so that she was sitting with her hands tied out on each side of her and her legs spread in a sitting fashion. Feet flat of the bed showing me everything. It forced Sandra to sit at the head of the bed, her legs spread, showing everything and yet unable to touch herself or move. Sandra could see everything I was about to do to Jean. She would watch me wring every bit of pleasure from her friend and then plant the seeds that would impregnate her neighbor. I moved my mouth to that point just below my mother's ear, blowing across that spot that brings the tingles. \"Watch Sandra, watch as I wring every once of pleasure from Jean's body and know that when I'm finished with her, I'm going to do the same thing to you.\" I moved to my mother's other ear and continued. \"Just watch as I make Jean moan and cry and whimper with need as I bring her to the brink of release over and over before I let her fall over into the most mind destroying pleasure she's ever known.\"\n\nI went back to the other ear and placed a couple of light sucking kisses on her neck, causing Sandra, in her heightened state, to moan. \"You wanted to know what it was like to be taken by a veritable God of sex and fertility. Now you'll not only get to see for yourself, you'll get to watch Jean experience it. Then you'll get to experience it, but only after you are so filled with anticipation, you'll be begging me to give you everything she is about to get.\" She groaned, moved away to where Jean was standing at the end of the bed.\n\nI climbed off the bed and took Jean into my arms, pulling her now lush, tight body against mine. I leaned in, capturing her plump lips with my own kissing her soft and shallow at first, letting her arousal grow as the kiss deepened. Soon my girlfriends' mother was overwhelmed by the lust and arousal pumping through her body. Her slick channel cradling my hard cock as she worked herself up and down my shaft. Her mouth sealed tight against mine, our tongues in an all-out duel of passion.\n\nShe moaned as she ground harder against me. I tore my lips from hers, moving over to her neck where I started working my kisses up and down her slender neck from jaw to collar bone and up again. First one side and then the other.\n\nJean's hands were playing in the short hair and the nape of my neck and she was whining in need. Her hot, wet pussy scrubbing faster and faster up and down my shaft. Her need soaking us both and mixing with my pre-cum to make us a well-lubricated mess.\n\nI whispered in her ear. \"You tried to deny me your pleasure and arousal. Now you are going to give me every ounce. I'm going to soak it all in and turn it into the power I need and you will not be able to help begging me to give you more pleasure over and over until you can think of nothing else but the pleasure I alone can give you.\"\n\nShe looked at me, her eyes filled with need. Drunk with lust, and she said. \"Do it! Make me beg you for more pleasure show me what it's like to be fucked by a God of sexual pleasure and fertility. Make me want you!\"\n\nSo I went and sucked her hard nipples into my mouth, sucking hard and fast, sending her over the edge of her need and into pleasure. Her body arched up and her hands clutched me to her breast as she screamed. \"OH MY GOD I'M CUMMING ALREADY!\"\n\nHer mind tried to process how she could be cumming just from having her tits sucked, but with each pull of my suction against her breast, she lost her thought as another wave of orgasmic pleasure tore through her body from her over sensitive tits. I sucked hard for over five minutes on first one tit and then the other as wave after wave of orgasms washed over her, each stronger than the pulse before. Soon she was lost in the pleasure. Then, as I saw her slipping into the gray of being overwhelmed by her pleasure, I gentled and finally stopped sucking her tits and started kissing my way down her body.\n\nI trailed little sucking kisses down her belly and then down her legs all the way to her toes then up the inside of her leg back up to the back side of her knees where I placed little sucking kisses against this little known erogenous zone cause her arousal to build and build as I moved on and licked and sucked her cream off her inner legs and thighs right up to the outside of her pussy back up to her stomach.\n\nI tongue fucked her cute little belly button again, increasing her arousal and then I took her left hand in my hands and sucked on the tips of each of her fingers while rubbing my thumb across the pulse point inside her wrist. Then up her inner arm, I continued to suck and kiss. Across her collarbone and back down her right arm, ending at her right hand and fingers sucking on them as I caressed her right pulse point. By this point, Jean was groaning in arousal and I'm soaking it into my well of energy. I turn her over and start at the back of her neck. Rubbing, kissing and sucking my way down her back to those firm, plump, tight ass cheeks.\n\nI spread her ass and licked right down the center to her tight little brown pucker and started giving her a warm and enthusiastic rim job trying to push my tongue into her ass past her sphincter. She was bucking and groaning as her pleasure and lust built, and then I moved down the backs of her right leg, licking and sucking and kissing. Again, when I reached her right knee, I sucked and kissed the back of that knee. Then traveled down and sucked on each toe again before turning her back over and coming up the inside of her right leg.\n\nFinally, I arrived at her inner thighs once more and I planted myself between her legs, allowing my lips and tongue for the first time to touch the flower of her womanhood. Sucking on the outer lips and causing her pleasure to rocket up to almost exploding then I would pull away from her.\n\nAs she cooled off again, I licked her from asshole to clit over and over, listening as she begged me to let her cum. I took Jean to the edge of orgasm repeatedly. Each time just a little closer to the edge. Each time almost letting her cum and each time pulling back until she was a sobbing soaked mess of a woman begging me to give her pleasure. Begging me to let her cum and feed my magic with her release. Without warning, I latched my mouth onto her clit and sucked hard and fast. I thrust two fingers into her dripping pussy and found that area where I had her G-spot and A-spot meet and curled my fingers into each over and over, causing her to cum harder than she ever had. Her body was convulsing she's coming so hard and I was almost power drunk with the pleasure flowing from her into my magical well.\n\nSo lost in the power filling me, it took a minute for me to realize what was happening as I hear. \"I Jean Tolliver give Jason Argonaut Seat of the power of Love and Fertility of the fourth district all my Loyalty, my desire, my pleasure. I offer you all my devotion, my worship, my mind, my body, my spirit. I can not offer you my heart or love but everything else is yours for as long as I shall live.\"\n\nThe compulsion to answer her wraps around me. The age old vow demanding I complete the ritual and take what it was Jean offered. \"I, Jason Argonaut Seat of the Power of Love and Fertility for the fourth district. Accept your loyalty, your desire, your pleasure. I accept you worship, devotion, your mind and body and spirit. In return, I vow to protect and provide for you. As long as you live.\"\n\nThen I pull my hand and mouth off of her and line up my cock with her gushing hole and shove in. There is the crack of thunder as the vow was sealed. I just hoped that tomorrow I'm not fighting an angry Battle Mage. \"I seal this vow by giving you the one thing no man has given you: Sons to carry on your family line.\"",
        "Jean screams as my cock fills her tightened sheath and the overly sensitive nerves drive her to a continues orgasm that surpasses any she's ever had until now and it just goes on and on climbing high and higher as I fuck her and she is chanting repeatedly \"CUMMING,CUMMING, CUMMING MORE, CUMMING, CUMMING, NEVER GONNA STOP! KEEP CUMMING FOR YOU! MORE! TAKE MORE! GIVE ME MORE! FILL ME UP!\"\n\nFor twenty minutes this goes on until I can see she's on the verge of passing out from cumming and then I feel the aching pressure as my balls tighten and that tingle that shows I'm about to blow my load into her fertile womb. I look inside myself to make sure the cum I'm about to have is nothing but sperm no fillers, just pure 100% fertile sperm. Then I roar as the first blast jettisons from my pistoning cock and I press it firmly against the opening to her cervix and feel the second jet blast out just as the first floods her womb and connects with the egg I forced her to drop earlier. The wave of creation energy that hits is more than anything I've ever experienced before and I find myself cumming even harder. I'm lost in a Tsunami of creation magic and pleasure and realize that Jean is arched only her head and feet on the bed. She goes from this extreme arch to collapsing where she's convulsing under me so hard that I feel like I might be displaced.\n\nI hear Sandra above us screaming that she's cumming too, and in my mind, I hear both Crystal and Polly next door cumming just as hard as the rest of us. It's then that I look within Jean's body and realize the mistake I'd made earlier. Instead of calling one egg, I'd called two and commanded them both to split at the touch of my sperm, creating not one but two sets of twins within her body.\n\nJean Tolliver isn't giving Angus two male children, she's giving him four! Quickly I take the Battle Magic I'd gathered earlier and spit it four ways and insert it right into the children where magic lives, changing the magic with them to battle magic. Creating not two but four infant Battle Mages for Angus to raise and train.\n\nSeeing that Jean is still passed out from the pleasure I wrung out of her body, I picked her up and carried her to my sister Sara's room and laid her on the bed. I went inside her sleeping body and turned her pleasure and sensitivities back to normal levels and then withdrew, living her to sleep and recover from our very exciting encounter. Now it was time for me to clean up, return to my mother, and give her what I promised.\n\nNine\n\n<p align=\"center\">~~~~~</p>\n\nI reentered Sandra's bedroom to see tears running down her face. She saw me and begged. \"Please Jason, please don't tease me any longer give me that kind of pleasure. Give me everything you gave Jean. Please, I beg you. I'll do anything for one night like that, just one.\"\n\nI looked at the woman who raised me. The woman who wasn't my mother and yet was too. \"You want a night just like Jean had? Exactly like Jean had?\"\n\nWithout hesitation, she cried out, \"YES!\"\n\nI cocked my head to the side and reached into my pants at the foot of the bed and pulled out my cell phone and texted Polly to come over and up to my mother's room. She quickly texted she was on her way with a question mark. I texted back that I'd explain when she got here. Then I climbed up on the bed and untied Sandra. \"Polly is on her way, so we can talk about this, Sandra. I'm not sure you understand what happened here tonight. Not everything. More went on than just Jean receiving mind numbing pleasure.\"\n\nSandra looked at me and nodded. Polly entered, and I could see she wanted to know what that was earlier. \"I will explain about earlier in a little bit Polly right now I need you here as my Prime. In keeping with our agreement and I need to inform you that your mother of her own free will gave me her loyalty and everything but her love and heart tonight in the midst of our creating your brother's. I was compelled by the vow she made to accept her offer and fulfill the rest of the binding ceremony.\"\n\n\"I know. I felt her join us. I thought we'd agreed not to involve her, but I understand if she made the vow and you felt compelled to complete it, that is beyond our agreement. Does that mean you will be compelled to complete the binding to anyone who vows to be loyal to you? Because you have demanded that all our staff be bound by a vow of loyalty.\"\n\nI stopped and thought about the section on vows I had read earlier in my father's notes. \"No, it is a different vow I will place on them just loyalty not all the rest I think the family vow is the only one that compelled me to accept until I've reached my twenty-one limit.\"\n\n\"What did you bring me over here for, then? To tell me you made my mother part of our family?\"\n\nI shook my head. \"No, I brought you here because Sandra has asked that I give her the same night as your mother.\" I looked purposely into Polly's eyes, hoping she realized what I was saying. \"Exactly the same.\"\n\nPolly caught on to what I was saying and nodded. \"Does she know what she is asking or is it the aftermath of that massive pleasure overload talking.\"\n\nSandra left us talking and walked over to her dresser. She picked up a thick manilla envelope, the second one I'd seen in her hands today, and handed it to me. \"Unlike the last time, this one is not about your actual father or your inheritance. This one is about that lowlife who we called your father.\"\n\nThe tears on her face this time were from sadness and not a desire for pleasure. \"He didn't wait like he promised. We signed those at Christmas he wasn't supposed to file them after your sister's graduation. They were served to me while you all were out today. Congratulate me, I'm no longer Sandra Covington, I'm Sandra Dee Ballard again. Single and fancy free and thus by your own words to me, free to make my vow to you. Please don't deny me this, Jason. Please tell me you won't abandon me too. That this thing could be more than one night of pleasure.\"\n\nI looked inside Sandra's mind and thoughts and saw what she was thinking. Her husband of thirty years had abandoned her for a younger woman. Her daughter that she had nursed and raised was leaving with her adopted son. Who could have any woman he wanted why should he settle on a woman of almost fifty. She had so many regrets, the biggest being that she'd only had the one child of her own. I put my hand on her face and stroked her cheek. I looked at Polly, who nodded and stepped back. As we had talked about earlier, she would not require any member of our family to take a vow of loyalty to her, only those outside our natural, or, in my case, adopted, families.\n\nIf that is what you want, then Sandra, you may kneel before me and give me your vow however because of the unique nature of our relationship, I need an assurance that you realize your role as my mother is at an end. You will make a vow of loyalty and obedience, do you understand?\"\n\nSandra was already kneeling at my feet, her hands cradling my hard cock, rubbing her face on it, worshiping me and it. She nodded and, looking me in the eye, kissed her way up to the tip of my cock before speaking. \"I Sandra Dee Ballard, do vow to Jason Argonaut, Seat of the Power of Love and Fertility of the forth district all my Loyalty, all my devotion, all my worship. I give you all my love, my complete and total obedience, all my heart, all my mind, all my soul and spirit. I give you all that I am, all that I have and ever will be. I give you everything that is mine to offer you now and for all eternity.\"\n\nThe compulsion for me to complete and seal this vow was stronger than any other, probably because she offered me more than any other. She offered me her everything and in return asked only to be one of my family. I wanted to reward such loyalty, such over whelming trust and love with something special. So I did.\n\n\"I, Jason Argonaut, accept your vow and I offer to you my protection, my provision, a place in my life, my family and my house for all eternity. I further offer you the two biggest, most secret desires of your heart.\"\n\nI placed my hand over her chest, just above her heart. \"I offer you my undying love and the mark of my family, not as mother but as one of my most beloved.\"\n\nSandra gasped as my hand grew warm and when I pulled it away, a golden shimmering tattoo of a Celtic heart knot with my initials glowed upon the spot my hand had been. Then I reached down and lifted her to her feet. \"I also offer you a special place in my house as my breeding slut. After tonight, Sandra, your deepest wish will come true. You will bear for me a large family, for I will keep your womb young and fertile for all time and fill it with my children. Each time your womb is empty, I will fill it again for as long as you wish to have children.\"\n\nI laid my hand on her womb and it grew warm again. When I pulled it away, there was a small golden tattoo of a stork with a baby bundle in its mouth. Before that even registered, I reached into Sandra and rolled the clock on her age back until she was twenty-three years old at the peak of her fertility and commanded her to ovulate. Making sure not to repeat my mistake of earlier. Then, once the egg dropped, I command it to divide once my semen penetrated it, dividing into three identical female children.\n\nI lifted the beautiful young woman my former mother had become up and thrust into her as she wrapped her arms and newly toned legs around me and slammed into her, sealing our vow. The crack of thunder was loud as the vow sealed and Sandra screamed as she came from the initial thrust of my cock to the very top of her sheath. Polly suggested we move to the bed because if Sandra's impregnation was anything like Jean's had been, someone might get hurt in the backwash of power.\n\nI agreed and took Sandra to bed, Polly crawling up beside her, sucking on her tits. \"Just think, soon you'll be nursing a little one again Sandra.\" Sandra cried out and clutched Polly to her breasts as another deeper round of orgasms rocked through her and while the energy flow was adequate after the feel of all four of my women cumming at once, it felt like a trickle.\n\nAs I kept hammering into Sandra, causing her orgasm to continue to climb from one to another, each stronger than the last, I felt less than satisfied. So I did it again and reached into the mind of the woman I was fucking and cranked her beyond the top of her pleasure zone and yet the flow still felt weak in the Tsunami's wake of pleasure and Creative energy I had just experienced earlier tonight.\n\nWhich gave me a new thought. Earlier, it was like all four women had been connected. Polly, Jean, Sandra and Crystal. All now vowed to serve me. I wondered if I could do that on purpose and if it would increase the power flowing to me. So I reached into Polly's mind, something I'd told myself I'd never do, and I grabbed her pleasure center and tied it to Sandra's. Suddenly the power of pleasure doubled and Polly started screaming she was cumming as Sandra did.\n\nI wondered just how far I could push this new idea and reached out to Jean in the other room and tied her pleasure center to the two beside me. Again, the energy headed into me increased.\n\nSo I reached out to Crystal in the bed next door and tied her pleasure to them and suddenly all four of them were overwhelmed by pleasure. Polly told me later it felt like she was being fucked at the same time and speed I was fucking Sandra. She said she felt everything that Sandra felt even when my seed rocketed out of me and created my three beautiful girls in Sandra. Polly had felt the energy of creation not just flow through her, but as if she herself were being made pregnant.\n\nFor me, the output of that creation was so high that my wellspring of power overflowed and some kind of feed-back loop started and more and more power seemed to flow into me. Faster and faster and then there was a flash of golden-green light and standing at the side of the bed was the most perfect specimen of woman I'd ever seen.\n\nThis new arrival was beyond description and yet not. She was every woman at once and beyond all women at the same time. All I knew was that as I looked at her, my dick grew harder than it ever had and it filled my mind with lust and the urge to take this perfect woman and breed her.\n\n\"What have you wrought Jason Argonaut Seat of the Power of Love and Fertility of the 4th district? This new wave of creation magic called to me. I've never seen it's like before. So I ask you again. What have you wrought?\"\n\nHer voice was like every songbird singing at once, intertwined with every tree blowing in a breeze and every brook bubbling in the sun and every ocean crashing against the shore. \"Who are you?\" I asked her.\n\nShe looked at me and seemed to blink. \"I am Gia, Mother of ALL. Now tell me what have you done here, Jason Argonaut. This is a type of Creation energy I have never seen.\"\n\nI wanted her and couldn't think straight from the lust flowing through me. As I've already stated, my cock was harder than it had ever been before. I held out my hand to her. \"Let me show you what I have wrought here.\"\n\nShe laughed, and my lust turned to anger how dare she laugh at me. I was The Seat of the Power of Love and Fertility. Without even realizing I was doing it, I reached into her mind and shoved my thought into her mind, compelling her to obey me without question. \"I said come here. I was going to take you like the others, but now you will kneel like the bitch in heat you are and I'll take you like one. On your hands and knees, Bitch.\"\n\nShe cried out as her body dropped and in a flash of my magic, her green flowing gown was torn from her body. Sure enough, as she presented her ass and pussy to me, the dew of arousal was soaking her opening. I dropped behind her like a stallion who scented the heat of the mare and plunged into her. As I did, she screamed in exstacy as I shoved on every pleasure point I could find inside her. She cried out. \"HOW IS THIS POSSIBLE?\"\n\nThen she screamed in pure pleasure as I pushed on every pleasure center in her perfect body at once. \"IT'S YOU! EROS MY SON YOU ARE REBORN!\"\n\nShe started thrusting back against me, screaming for me to take her. \"JASON AROGAUT YOU ARE EROS GOD OF LOVE AND FERTILITY REBORN. I'VE FOUND YOU. FUCK ME! FILL ME! BREED ME!\"\n\nShe pulled off me and flipped us so that I was under her, where she then impaled herself on my super hard cock. She rode me like the wild stallion I'd compared myself to earlier and wrenched my head down to her ample breast. \"DRINK AND BE RENEWED!\"\n\nI latched on to her breast and was shocked when I sucked her nipple and my mouth filled with a warm liquid golden power that quickly infused my body with more power and energy than I could hold. At the same time, my cock exploded with cum, not as ropes or spurts but one continuous flow of pure sperm. More than was physically possible. \"YES DRAIN MY BREASTS! FILL YOURSELF WITH MY MILK AND YOUR POWER, EROS, AS YOU FILL ME WITH CHILD!\"\n\nOn top of the golden power flowing into me by Gia's breast, a virtual flood of creation magic overwhelmed me. I was screaming as I suckled at Gia's breast and the ocean of creation power I was drowning in. Polly later told me that Gia and I both were glowing brightly, her green and me with a rose gold color, and we were levitating about four feet above the bed, still connected, still fucking and the women were cumming constantly just like I was.\n\nFinally, I could take no more and I lifted my mouth off of Gia's nipple and screamed as power flowed out of my toes and fingers and mouth and even the ends of my hair. All the while still, my cum was flooding into the woman above me. Her stomach swelled with the amount filling her and then there was a flash and a boom like a bomb going off, only louder. Like standing directly under a jet as it broke the sound barrier a foot over your head. The mother of all sonic booms. Gia and I dropped to the bed, both of us completely spent and yet still glowing.\n\nThe woman I'd just forced to fuck me climbed off and looked at me from the side of the bed. \"What are you? Yes, Jason Argonaut, you are Eros, the God of Love and Fertility, reborn, but you are something new as well. Something I've never experienced before and that is not possible.\"\n\nA line from Alice's Adventures in Wonderland came to my mind and out my mouth.. \"'There's no use trying,' she said; 'one can't believe impossible things.'\n\n'I daresay you haven't had much practice,' said the Queen. 'When I was younger, I always did it for half an hour a day. Why, sometimes I've believed as many as six impossible things before breakfast.'\"\n\nJust then there came a sound like a large taser crackling and a glowing white doorway appeared in the middle of the room. Out of it stepped a man. He was dressed in a long gray robe. His hair was long and pure white, as was the beard that reached to his stomach. His skin was the color of fresh cream and his eyes pale blue. In his hand, he held a staff of beechwood with a large blue orb on it. He looked at me and sighed. \"What have you done now, Jason Argonaut?\"\n\nBefore I could answer, Gia spoke. \"It has begun, Merlin. The age of the awakening and a new era too, I think.\"\n\nOf course, this was Merlin. The greatest sorcerer ever would just happen to arrive in my mother's bedroom after something like this. He looked at the woman and his eyes got wide. \"Gia, you are with child?\"\n\nShe nodded once. \"Yes,\" she pointed at me. \"Eros has returned to me; the age of awakening has begun through Jason Argonaut and yet he is something more as well. Something new even to me.\"\n\n\"Gia, Jason has yet to get a full handle on being the Seat of Power of love and fertility for the fourth district and you've named and marked him Eros God of Love. There are those who would oppose his rise. There are those that already are opposed to him among your children. You must hide the mark and let me teach him to hide this magic until he learns what he must.\"\n\nShe nodded. \"Yes, I would hate to lose him so soon after just getting him back. I will lead my children on a goose hunt. You help him. Teach him what he needs to know.\"\n\nShe reached out her hand, and the mark on my chest shimmered and was gone. \"That should hold long enough for him to learn. Prepare him Merlin like you did that boy so long ago.\"\n\nMerlin frowned. \"That didn't work out so well Gia, remember.\"\n\n\"That fault wasn't yours, wizard it was the boy's character that was flawed. Jealousy is a lousy emotion. This one is better equipped emotionally now get him that way magically and every other way.\"\n\nMerlin nodded and said, \"Come with me, Jason, so I can show you what you need to know.\"\n\nI looked at Polly and Sandra asleep on the bed. \"What about...\"\n\nHe looked and smiled. \"They'll be fine. You'll only be gone a moment.\"\n\n\"You're going to teach me everything I need to know in a moment?\"\n\nMerlin shook his head. \"No, but where I'm taking you is a place outside of the time of this realm. The God's and other powers don't know of its existence and when I return you to those here, it will be as if no time has passed at all.\"\n\n\"Alright.\" I stepped over to the faint doorway that had closed behind him, reached out my hand and opened the door, stepping through. Merlin came right behind me. \"Umm, how did you do that?\"\n\nI looked at him and shrugged. \"What? I just opened the doorway.\"\n\n\"You shouldn't have even been able to see the doorway.\"\n\n\"It was right there, it was obvious.\"\n\n\"No, it should have been impossible for you to detect it, let alone open it.\"\n\n\"That's five times today I've been told something very easy to do was impossible. Two more and I'll even have the white queen beat.\"\n\nMerlin laughed and then slapped me on the back. \"Welcome to my place, Jason Argonaut. Welcome to Camelot!\""
    ],
    "authorname": "PreacherPorn",
    "tags": [
        "milf",
        "mother son",
        "mature",
        "older yonger",
        "breeding",
        "mind control",
        "magic",
        "nonhuman",
        "noncon reluctance"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-power-of-love-pt-03"
}