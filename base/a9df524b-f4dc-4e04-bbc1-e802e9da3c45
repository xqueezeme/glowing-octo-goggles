{
    "title": "Happy Birthday to Me Ch. 02",
    "pages": [
        "<p align=\"center\">Happy Birthday to Me - Chapter Two</p>\n\n<p align=\"center\">Ten minutes past midnight\nLeaning out of the window to see the dim light outside\nLost quiet rainy night kisses passersby\nOnce you whispered in the rain:\nHappy birthday my loved one</p>\n<p align=\"right\">Ten Minutes Past Midnight, Sally Yip</p>\n\n<p align=\"center\"> * * * * * * * * </p>\n\n\"Did Tom really do it with you seven times in one night?\" I leaned in towards Fan, my voice soft. I didn't want anyone overhearing us. The caf\u00e9 was noisy, but still. \n\nFan leaned in, her lips quirking into a smile. She had black rings under her eyes that even her makeup didn't hide. \"Every night Isabelle, I'm exhausted. Honestly, he just doesn't stop. The man's insatiable.\" She glanced around, lowering her voice to a whisper. \"He did it to me on his desk this morning at work. One for the road, he said. Honestly, he's so good, he just makes me scream my head off but I can see why his wife stayed in the States.\" She giggled. \"I'm actually relieved he's gone back to the States for a couple of weeks.\"\n\nThat was why Fan and I were having coffee. Tom had left at midday to catch a flight back to the US. Kam had gone to the airport with him, they were working on another client, Kam wanted all the time he could get with Tom before he left. My work was quiet, I'd asked David if I could leave early. So there we were, drinking coffee.\n\nFan shook her head. \"It's not like he takes anything, I checked, it's totally natural, he's just insatiable.\"\n\nI giggled. \"I wish we could average him and Kam out, Kam's always so tired.\" I was disappointed. It'd been two days since that wonderful night and nothing had happened since. I'd tried. Maybe tonight. I must have looked disappointed. Fan rested her hand on my arm. \n\n\"Don't worry Isabelle, they've been working hard, he's probably just tired and exhausted, be patient.\"\n\n\"I know,\" I said, \"but I do wish he was more like Tom.\" I looked at myself. \"I mean, I'm attractive enough aren't I Fan?\"\n\nFan smiled. \"I'd die to have a figure like yours Isabelle, I mean look.\" She gestured with her head at an American guy across the caf\u00e9 who was looking at us. Me. My boobs. No eye contact. Until he saw us both glancing his way. Then he smiled, still looking. My eyes met Fan's, we both giggled. \"See, that's what I mean Isabelle, everyone looks at you.\" She looked a bit more serious. \"You're not having a problem with Kam are you?\" Her hand touched mine. \"I'm not being nosey Isabelle, I like you, just, I know you don't know much about guys, so if I can help, just ask, okay.\"\n\nI nodded, touched. \"Thanks Fan. It's just, I love Kam, I know he loves me, but ...\" I blushed.\n\nFan giggled. \"You want him to fuck you more, right?\"\n\nI blushed even more, nodding my head. \"I try to encourage him, but honestly Fan, I don't know what I'm doing wrong, I mean, I'd die for Kam to do it to me seven times in one night.\" I almost shivered at the thought. Three had been heaven. And then... Nothing.\n\n\"I mean, a couple of nights ago we made love three times in a row and then ... nothing.\"\n\nFan squeezed my hand. \"Was there anything different? Did you do anything you don't usually do? Dress differently? Act differently?\"\n\nI must have blushed. Fan looked at me, tilted her head, giggled. \"See, you know something was different. Whatever it was, try it again... No, don't tell me ... Just whatever you did that got him excited, try something similar and see if it works.\"\n\nI nodded. Yes, I remembered Kam's excitement when I walked out of the apartment in that dress, how excited he'd got over that American's business card. Hmmmm. \n\n\"Thanks Fan, I will.\" I smiled. Tonight, after Kam got back for the airport.\n\nFan's cellphone sang. She looked at it. \"Mei-mei. Excuse me a minute Isabelle.\" Then she was on her phone chatting with one of her friends. I watched the passersby, idly sipping my coffee. It was fund trying to figure out what they did from the way they dressed and walked. Most just typical but every now and then, mixed in with the crowd, you see those girls, the ones who make you feel inferior. Perfect hair, perfect skin, perfect makeup, perfect boobs, long silky legs, tall and slender and good looking, all perfectly packaged in clothes that show them to glossy perfection. I saw one. \n\nShe had \"fuck me\" written all over her.\n\nShe was beautiful. She was the kind of girl I'd always wanted to be. Confident, sexy, self-assured, the sort of girl that made boyfriends stop talking to their girlfriends, husbands ignore their wives and turn their heads to look at. She was so comfortable displaying her body, so confident, so aware of her attractiveness and so natural in the way she carried herself. Her legs moved with a sleek smoothness, she exuded sensuality, she drew eyes like a magnet. Even mine.\n\nI envied her.\n\nWhat was it like to be her?\n\nShe looked the same age as me. Was she married like me? Or was she single? I watched her as she glanced over past Fan and I, waved, smiling, turning and walking past us, sitting down at a nearby table with a group of young men. All young and handsome, all flirting with her. I'd never flirted like that. I didn't know how to flirt like that. I'd never even had a boyfriend until I met Kam and Kam had swept me off my feet. I'd never flirted like that. I'd never had the courage. And now? It hit me like a blow.\n\nI was married.\n\nI might look good but I would never be able to flirt with other men like that girl. I would never do what that girl was probably going to do and fuck a drop-dead gorgeous guy just for the sheer physical pleasure of it. I'd never dress like her, advertising myself sexually, putting myself on display to attract men. I was attractive enough, I knew. Physically, probably more attractive than that girl I'd been watching. My boobs for example, were far better looking. Large, perky and firm, Seoul boob job gorgeous but entirely natural. No, it was all in the mind, I knew. I was as good looking as that girl.\n\nI looked at Fan, still talking. She wasn't as good looking as I was but she more than made up for it with her personality and her style. Her clothes as well. The clothes and the makeup made a huge difference. That and the attitude. I remembered again how excited Kam had gotten.\n\n\"What are you thinking about Isabelle?\" Fan interrupted my thoughts. She'd obviously finished her call.\n\nI made up my mind in an instant. \"Want to come clothes shopping with me?\"\n\n\"Sure, I'd love too.\" Fan squealed with excitement. \"What're we buying?\"\n\n\"Fan,\" I said, \"I want to do a total makeover.\" I looked at her. Two years younger than me and looking so pretty and sexy in her short little skirt and a top that was wild but stylish. \"I want to look sexy like you.\"\n\nShe clapped her hands. \"Yes! Come one, let's go, I know exactly where to start, we're going to work from inside out, okay Isabella. Lingerie first! Shoes. Dresses. Skirts. Tops. Come one!\" She was already on her feet, tugging at my hand. \n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\n\"More clothes shopping?\" Kam looked up as I walked in the door, laden down with a dozen bags.\n\n\"Just a few bits and pieces,\" I smiled, heading for the bedroom to unload.\n\nWell, more than a few bits and pieces. It took me half an hour just to pull everything out. Wildly sexy lingerie. A couple of new pairs of stiletto's. Skirts and tops, two new little black dresses, a couple more dresses, one or two rather more exotic purchases that made me blush to look at them. Those I tucked away immediately. I considered the clothes carefully. I stuck my head out the bedroom door.\n\n\"Honey, shall we go out for dinner? It's a bit late to cook.\"\n\n\"Sure.\" Kam was easy like that.\n\n\"Great, give me fifteen minutes.\"\n\n\"Take your time.\"\n\nI didn't. Five minutes in the shower combined with a quick shave everywhere just to make sure, my last Brazilian had been two weeks ago, not that there had been much to remove to start with. Five minutes to apply my makeup. Dressing was quick. The little black lace French-style panties I'd bought - or rather, that Fan had insisted I buy. I hesitated to call them panties, really, they were loose-legged lacey and slit to the waistband on either hip. Totally designed for easy access. \n\nMy pulse fluttered as I slipped them on, thinking of how Kam would like them. How easily his hand would slip inside them whenever he wanted. I slipped one of my new black dresses on over the top, a loose little backless one with a loosely plunging front and a hemline at mid-thigh. No bra. I wanted to tease Kam, excite him. I wanted three times in one night again.\n\n\"I'm ready honey, let's go.\" I was out of the bedroom before I could have any second thoughts, straight past Kam to the door where I slipped a pair of my new stilettos on. Kam's eyes almost burned into me as he watched me. As for me, I was totally aware of my braless state, my unrestrained breasts bounced rather more freely than usual as I fastened the straps on my shoes. \n\n\"You look great Isabelle.\" Yes! His tone said I'd been correct with my choice. Wait until he saw the panties. I was almost wriggling with excitement. \n\n\"Let's go to Il Casino.\" That was a really nice Italian restaurant that was close by.\n\n\"Sure.\" I loved the food at Il Casino, we'd been there a few times for dinner. We walked to the elevator holding hands. I snuggled up against my husband, enjoying his enthusiasm. He smiled down at me. \"I do like that dress.\"\n\n\"Mmmm, I thought you might.\" \n\nThe elevator chimed, the doors opened, we stepped inside, joining the half a dozen other occupants. A couple of the men eyed me surreptitiously. One eyed me openly. I felt myself blush. I blushed even more as I walked out of the elevator, my breasts quivering beneath my dress with every step I took. It felt so different with no bra beneath my dress. So exposed. My breasts felt free and unfettered, they bounced and quivered as I walked, my nipples rubbed against the dress's material. It was embarrassing and it was exciting all at one and the same time. I could almost feel the glances as I walked with Kam. I could see men glancing at me in the way that in the past I'd seen them glance at other girls dressed as I was. \n\nWe walked into Il Casino. Beneath my dress my nipples were swollen, aching, turgid with excitement, my body tingling. Kam kept glancing at me, I could see the excitement on his face. I smiled back. \n\nSeated at our table, tucked in at the back of the restaurant, I sipped my wine as Kam ordered for us. The food at Il Casino was wonderful, I loved Italian cooking. It was delicious, I enjoyed every mouthful. I enjoyed the way Kam looked at me all through dinner and dessert as well.\n\n\"Would you like another drink at the bar before we go home?\" I asked Kam innocently. \n\n\"Yeah, sure.\" Kam's surprise almost made me giggle. I'd never liked bars. I still didn't, but tonight I had a plan. I wanted to excite Kam. I wanted three times in one night again. I was willing to embarrass myself just a little to get what I wanted. I thought I knew what might excite Kam.\n\nHe walked me to the long curved wooden bar, helped me perch on one of the high bar stools, where I sat displaying a lot of leg. So much that I blushed. That short dress was short, I was very much on display. I knew that. Kam could see that. I could see that Kam liked that.\n\n\"Scotch on the rocks for me, white wine for her.\"\n\nI hadn't even noticed the barman. I was a little hesitantly looking around the bar, seeing if I was drawing any eyes. Yes, yes I was. I took my wine, sipping delicately as Kam talked about this new client, about how much business they could bring if he got them signed up.\n\nI leaned in toward Kam, enough that he could see down the front of my dress. \"Honey, don't look, but those guys over there, they keep looking at me. It's embarrassing, can we slip out and go home now?\"\n\nKam glanced sideways, smiled. He knew I was sensitive about being looked at. \"Let's finish our drinks first Isabelle, you can't blame them for looking, you look hot in that dress.\"\n\n\"Okay honey,\" I said, very meekly, sipping on my wine. They were looking at me again. Kam was looking a little surprised. Surprised but pleased. I eyed the small dance floor, my heart pounding. I wasn't sure about this. The bar was filling up. The dance floor was popular too. \"Would you like to dance?\"\n\nKam stood without a word, leading me onto the dance floor, taking me in his arms, slow-dancing with me. It was that kind of music, that kind of dance. I loved it, moving, swaying, gliding around the dance floor in Kam's arms. Those guys, the group at that table that had been watching me, they were still watching me, watching me as I circled the dance floor with Kam. Kam saw then watching me, I know. He danced me towards them, past them. Of course I didn't notice, I was too busy gazing adoringly up at Kam. With just the occasional glance around.\n\nAfter a couple of songs from the live band, Kam drew me back towards the bar. Our seats were still there with our drinks, but now there were a couple of guys there with drinks as well.\n\n\"Excuse me.\" Kam reached past them for our drinks.\n\n\"Oh, sorry, please...\" one of them said, slipping of the bar stool and offering it to me.\n\n\"Thanks,\" I said, lifting myself up onto it. I wasn't sure whether there eyes were focused on my boobs bouncing as I lifted myself up or my legs flashing as that short dress revealed then almost all the way up to my panties.\n\n\"Care for a drink,\" one of them said to Kam, gesturing to the barman, who just as quickly replaced Kam's scotch on the rocks and my white wine.\n\n\"Thanks,\" Kam said, \"don't we know each other? I think we met at the Trade Show earlier this year.\" He frowned. \"You're with Orchid Venture Capital?\"\n\n\"Yes, yes I am? I don't remember...\"\n\n\"Kam Leung. My wife Isabelle.\"\n\n\"Albert Xiaoming, this is my friend Harry Yan, he's at Dragon Capital.\"\n\nAlbert and Kam started talking financial stuff, sounding each other out, well on the way to each of them establishing yet another connection that might at some stage prove useful. Harry and I chatted, the social chit-chat thing, music, the latest Angelababy movie, nothing serious. Kam ordered a round of drinks for everyone after asking me if I wanted to go home. I did, but Kam was enjoying himself.\n\n\"Oh no!\" I smiled. \"I'm enjoying myself, would you like to dance again?\"\n\nBut Kam was too busy talking with Albert. \"Birds of a feather,\" Harry grinned, holding out his hand. \"Care to dance with me? If your husband doesn't mind?\"\n\nKam grinned. \"Isabelle loves to dance, go ahead.\"\n\nI did, with Kam. I'd never really danced much with anyone else. Harry led me onto the dance floor just as the music changed to some fast-moving Cantopop stuff. I guess those four or five glasses of wine had had their effect. I danced with Harry, not quite as energetically as the other girls on the dance floor, but energetically enough. Enough that my braless breasts were doing a little dance of their own beneath my dress. Harry's eyes kept dropping from my face to my boobs. With that loosely plunging front every time he looked he got an eyeful.\n\nOut of the corner of my eye I could see Kam watching me as I danced. Seeing him looking at me, I put on even more of a display, aware of Harry's excitement, enjoying Kam's attention. Glancing back to Harry, I caught him looking right down my dress front. He looked up, saw me watching him, he looked embarrassed. \n\n\"Sorry,\" he mouthed.\n\nI shrugged, grinned. \"You can look, just don't touch, okay.\" I was actually enjoying this.\n\nHe grinned. Laughed. \"Your husband's a lucky man Isabelle.\"\n\n\"He's going to think so later.\" I giggled. Oops Isabelle, you've been drinking.\n\nHarry threw his head back and laughed. \"As long as he's not the jealous sort.\"\n\n\"Relax, if he was, I wouldn't be here dancing with you.\" Not that I'd ever danced with anyone like this before, but there was a first time for everything.\n\nThe track ended, a new song started. Latin? Something South American? It was a different tempo, faster, Harry raised an eyebrow, questioning whether I wanted to keep dancing. I glanced across at Kam, saw him watching me. He nodded, keep dancing. I turned back to Harry, we melted back into the now crowded dancefloor. I made sure we stayed where Kam could see us though.\n\nMy eyes widened at the style of dancing. The close contact, the way couples danced together. Harry grinned, dancing with me, his arms on my waist as he danced behind me, our hips swaying together to the sounds of Latin music. I turned, turned, swaying in Harry's arms, my breasts almost touching him. I felt a little crazy, wild, excited. This was far more fun that I'd expected to have tonight. Harry looked like he was enjoying himself as well.\n\nAfter that song ended, Harry and I rejoined my husband and Albert.\n\n\"I need a break,\" I told Harry with a smile.\n\n\"Me too,\" he grinned, eyeing my breasts.\n\n\"Be strong, resist temptation,\" I told him, smiling. Wow, Isabelle. You're flirting. \n\n\"I need a drink,\" I told my husband as we rejoined them. I took Albert's seat, warm from his body.\n\nThe barman slipped me another chilled white wine. I sipped gratefully. Half a glass later, Kam asked me if I'd like to dance. With my husband? Of course. A nice slow romantic song, perfect for dancing in his arms. Dancing closely, his arms around me, mine around his neck, swaying with him. He was hard, I could feel him. Ohhh yes Isabelle, your plan was a success. \n\n\"Would you like to leave soon honey?\" He was grinding against me, I was melting. \n\n\"Another couple of drinks,\" he smiled down at me, one hand sliding down to my butt.\n\n\"Okay,\" I smiled.\n\nThe track ended, far too quickly. I didn't want to stop, I loved feeling how excited he was. I loved the anticipation, I loved knowing he was excited enough to take me when we got back to our apartment. He held my hand as we walked back to rejoin Albert and Harry.\n\n\"You can dance with Albert honey,\" Kam said, picking us his scotch. \"Otherwise he's going to feel left out.\"\n\nAlbert grinned, held his hands out to me. \"May I have this dance Isabelle?\"\n\nI smiled back, placing my hands in his. \"If my husband says you can, Albert.\"\n\n\"Permission granted,\" Kam chuckled. \"Another drink Henry?\"\n\nAlbert wasn't just a good dancer, he was magic. We floated over the dance floor to that slow romantic music, I didn't even have to think about our movements, his hands guided me, he held me with such assurance, so that I danced without a second thought. Danced closer and closer, in a dream, my hands around his neck, my body close to his, brushing his. Easing in against his. He was hard. I could feel he was hard, brushing against me. I did nothing, made no move to pull away. I continued to dance with him, feeling him press against me, rub against me, closer, harder, tighter, one of his hands on my butt now, holding me even closer.\n\nI half-closed my eyes, feeling him rubbing against me, feeling myself so wet, my clitoris swollen and sensitive, his shaft pressing against me through the dress and my panties, pressing and rubbing, rubbing.\n\n\"You're such a good dancer Isabelle.\" Albert's voice in my ear was soft, soft and gentle, his hand on my butt hard, hard and insistent.\n\n\"Am I?\" I didn't know. Maybe I was. Maybe he just liked rubbing his cock against me. Only Kam had ever done that before. Why was I letting Albert? Should I stop him? I glanced at Kam, saw him glance at us. Saw him smiled at me as I looked over Albert's shoulder towards him. After that dance was over, I had to sit down. My legs were jelly. I perched on the bar stool, Kam standing next to me, one of his hands on my leg halfway between my knee and the hem of my dress.\n\n\"You enjoyed that dance didn't you?\" Kam was smiling at me. A happy and excited smile.",
        "My smile back was weak, a little shaky. \"Albert's good but I'd rather dance with you honey.\"\n\nI finished of my wine, feeling rather less shaky by the time the glass was empty. What had possessed me to let Albert dance with me like that? I shook my head. But when Kam said to me, \"I have to go to the washroom honey, why don't you have one last dance with Albert and Harry and we'll go,\" I nodded. \"Sure, honey. I'd love to.\"\n\nAlbert took one of my hands, Harry took the other, leading me onto the dance floor. It was fun dancing with both of them, dancing between them, turning from one to the other. The dance floor was packed now, barely room to move, I found myself pressed between them, my back to Harry, my front to Albert, their hands on my waist and on my hips.\n\nMy butt pressed against Harry, feeling his hardness pressing against me. Albert pressed hard against me from the front as I swayed, arms raised, hands above my head. I closed my eyes, my swaying slowing, still dancing, feeling them both, remembering what Fan had said about doing it with two guys. If I was single, if I wasn't married, if I was dancing like this with two guys I could leave with them, do with both of them what Fan had done. The thought held me transfixed.\n\nI shuddered as Harry moved against my butt, blatantly rubbing himself against me. In front of me, Albert did the same, their movements concealed by the darkness and the crowd on the dance floor. I saw Kam returning, I saw him at the bar but I didn't want to move, I didn't want to ease myself out from between Albert and Harry. Not for another minute or two, not until the music ended.\n\nWhen it did, at last, I looked into Albert's eyes. \"I better go now,\" I said.\n\n\"You better,\" Albert smiled. \"It was fun dancing with you Isabelle.\"\n\nI smiled. \"With you guys too. See you again sometime.\" And with that I slipped away to join Kam and leave.\n\nI clung to Kam as we walked home, a little drunk, a lot excited. In the elevator to our apartment, I swayed into Kam's arms, pressing myself against him, kissing him enthusiastically. I couldn't wait to get inside our apartment. Kam could do it to me on the floor if he wanted too. \n\n\"You enjoyed yourself dancing didn't you Isabelle?\" Kam glanced at me as we stepped out of the elevator.\n\n\"Oh yes, it was fun,\" I smiled. \"Did you see those guys all looking at me?\"\n\nHe laughed. \"I think they were all getting hard just watching you Isabelle.\"\n\n\"They were so jealous of you,\" I smiled, almost wriggling.\n\n\"Jealous of me, and jealous of Albert and Harry dancing with you, you sure got them hard enough too.\" Kam grinned, opening the door to our apartment. \"Was that exciting for you? That they got so hard?\"\n\nI glanced at his face a little timidly. Was he upset with me? Jealous? He looked more excited than anything. I took a deep breath, thinking of the things we'd said three nights ago. How excited and eager he'd been.\n\n\"You didn't mind them dancing with me?\" I asked, cautiously.\n\n\"Noo,\" my husband shook his head, \"I love watching you dance Isabelle, especially in that dress; you look so hot, so sexy. I can't believe you wore that.\"\n\n\"I wore it for you.\" I smiled proudly.\n\n\"Everyone else enjoyed it too,\" he breathed. \"Albert and Henry got so hard looking at you, dancing with you.\" He eyed me. \"Did they rub themselves up against you? It looked like they were.\"\n\nMy heart pounded. I felt a little sick, more than a little nervous. \"The dance floor was so packed,\" I excused myself. \"I'm sure it was an accident.\"\n\nHe chuckled, shrugging his jacket off, undoing his shirt slowly. \"How hard were they?\"\n\nI giggled, still nervous. \"Really really hard,\" I admitted. \"And they kept looking down my dress.\"\n\nKam dropped his shirt to the floor, slipped one hand inside the front of my dress to cup my breast. \"Your nipples are all hard,\" he said, squeezing one so that I moaned. \"You liked them looking at you, did they see your nipples.\"\n\n\"I don't know,\" I gasped. Then, truthfully, \"probably.\"\n\n\"You liked showing yourself off to them didn't you,\" Kam breathed, removing his hand from my breast, peeling off his trousers and his boxers. \"You liked dancing with them, feeling those hard cocks rubbing up against you.\" Oh yes, he was hard. Hard and erect. Plan successful Isabelle. \"Tell me what you'd have done if I wasn't there. Tell me Isabelle.\"\n\nMy heart was pounding again. I was so wet. So wet and ready. Wanting Kam to take me. If it took a little story, I'd make one up for him. Make one up that would drive him crazy.\n\n\"I dance with them on the dance floor, dance between them, both of their cocks rubbing against me, one of them slips his hand inside the front of my dress, he's playing with my breasts, the other one has his hand under my dress, touching me, feeling how wet I am.\"\n\n\"Dance for me.\" \n\nI turned, swayed, felt Kam ease up behind me, one hand inside the front of my dress, the other holding my hip.\n\n\"His hand goes inside my panties, he slides his finger into my pussy, he fucks me with his finger, then they turn me round and swap, playing with my breasts, fingering my pussy, they're both so hard.\"\n\n\"Do you bring them back to bed?\"\n\n\"No ... no ... I'm so hot ... I want them ... the bar is so dark, it's so crowded ... they take me off the dance floor, lead me off to one side, there's an alcove there, for band equipment, it's curtained off, they take me inside there, there's a couple of bar stools there, they push my dress up to my armpits, bend me over the bar stools, it's under my stomach, I'm lying over them, I'm bent over them, one of them pushes his trousers down, he makes me part my legs for him.\"\n\n\"He doesn't make you, you spread your legs wide for him, you want him to fuck you.\"\n\n\"I want him to fuck me.\" I changed my story. \"I want his cock in my cunt, I spread my legs wide for him, he pushes his cock up against me, I can feel him, big and hard. He tells me he's going to fuck my cunt, tells me that I'm going to be a little slut for him and Harry, they're going to fuck me here and then take me back to Harry's and fuck me for the rest of the night.\"\n\n\"You tell him your married, you have to go home to your husband.\"\n\n\"He laughs, he laughs and pushes his cock all the way into my cunt and says I can go home after Harry and him have finished using my cunt. Then he fucks me, he holds me and he fucks me hard, I beg him to fuck me harder, I beg him to use my cunt. He does, his cock goes in and out, in and out, fucking me, fucking my cunt.\" My voice was breathless, almost sing-song as I pushed myself back against Kam, wanting him inside me. Wanting him to fuck me.\n\n\"He fucks me and fucks me until he cums inside me, jamming his cock all the way into me and cumming and cumming. As soon as he's done, Harry takes over and starts fucking me, my cunt's all wet, I'm making so much noise as Harry fucks me, I keep telling him ti fuck me harder and he does ... he does ... he does ... and then he cums in me too .. and just as he's cumming in me, you step into the alcove, you've been looking for me ... you see me bent over the barstools with Harry's cock jammed in my cunt, he's fucking me hard, you watch as he cums in me...\"\n\n\"What do I do then?\" Kam gasped.\n\n\"As soon as Harry's done, he pulls out of me, I look over my shoulder, I see you, I smile and tell you it's your turn, your turn to fuck my little slut-cunt, and you do. You step up behind me and take your cock out and HHHNNNUUUGHHHHHH!\" \n\nKam's hands gripped my hips, his cock rammed into me in a single hard thrust that buried him to the hilt inside my sex, jarring my body against the back of the chair he had bent me over.\n\n\"NNUGGHHH ... UUGHH ... UUGHHH ... NNUHH ...AAHHHH ... HNNNNGGHHH...\" \n\nKam pounded into me relentlessly, fucking me hard, jarring my body up against the back of the chair, pushing it across the carpet, half lifting me so that my feet dangled helpless in the air. I couldn't talk, I couldn't speak, the story I was telling driven from my mind by his pounding cock as he slammed himself into my channel. Again and again and again as I clutched at the chair arms, my head dangling, my hair falling around me so that I could see nothing.\n\nAll I could feel was the chairback on which I hung and Kam's cock ramming itself into my pussy with a relentless desire that held me transfixed.\n\n\"Take it you little slut,\" he groaned, his hands gripping my hips hard, holding me for his cock, \"your little cunt's so wet, so sloppy, you're filled with their cum, all wet and slushy and you love it, you love your cunt filled with their cum while I fuck you, you beg me to use you, to fuck you harder.\"\n\n\"\"NNUGGHHH ... UUGHH ... UUGHHH ...\" I couldn't speak. He was jolting my entire body, my breasts bouncing and quivering against the chairback as he pounded into me, his cock so hard as it slid within me. \"HNNNNGGHHH... NUUGHHHH ... NNUUNNGHHHH...\"\n\n\"You can't get enough cock,\" my husband groaned, pushing hard into me, pulling back until only his cockhead was inside me, then trusting inwards so that my hands clawed at the chair arms, my hips jarred against the chairback, my breasts bounced and quivered as I took that thrust. Took that thrust and the next and the next. \"You love being fucked Isabelle, you love being a little slut for me.\n\n\"I do UGHHHHH ... I aaHHUGHHHH ... I'm your SLUTAAAAHHHH ... FUCK MEUGHHH ... FUCK MY CUNTUGHHHHH...\" I loved it. I loved my husband fucking me. Fucking me hard.\n\nHe slowed a little, no longer fast and hard, now long slow slides, his hands still holding me firmly in place, his breathing fast and hard, as fast and hard as mine. I hung on the chair, toes curling, helpless, there for my husband to use. There for my husband to fuck. There for my husband to fill with his cum whenever he chose. His. His and loving every moment of his fucking me. Of his cock fucking my pussy.\n\n\"I fuck you and fuck you Isabelle, I take my time fucking your sloppy little cunt , your cum-filled cunt, you love it, you keep telling me you've only had three cocks so far, you want more ... more cocks...\"\n\nMy mind wrapped itself around what he was saying, just as my pussy wrapped itself around his cock, feeling him so hard in me, filling me with each slow thrust, his body jarring up against the backs of my thighs as he pushed hard into me. I knew I was going to be sore in the morning. I didn't care. \n\nI picked up the talking, my voice coming in gasps as he used me. \"You fuck me ... You fuck me while they watch ... Then you come in me and pull out of me and ask if either of them want to fuck me again...\"\n\n\"They do,\" my husband gasped, \"both of them want to fuck you again...\"\n\n\"Albert fucks me first,\" I gasped, \"after you finished with me, I'm so wide open and wet, his cock just slides into me, he fucks me, I'm so wet, so wet, he fucks me slowly, taking his time, like you're fucking me now... so slow...so hard ... he tells you I'm a good fuck ... he tells you my cunt is so tight even after all three of you have fucked me ... \"\n\nKam was fucking me harder now.\n\n\"I squeeze his cock with my cunt, squeeze him hard, I tell him I want him to cum in me again.\" I moaned, squeezing Kam's cock inside me, squeezing him as he eased back, relaxing as he thrust into me, then squeezing him again, enjoying his groan of pleasure. Now Kam was giving it to me hard again, I tried to talk as he fucked me, gasping, moaning, helpless. \"Albert's cock's so big, so hard, I want it I want it ... fuck me hard ... Use my cunt ... fuck my cunt ...\"\n\nI was getting mixed up now, forgetting about the story, just enjoying what Kam was doing to me. Wanting him to cum in me. Enjoying his enjoyment of me. I was his wife, I was Kam's wife, my body was there for his pleasure, for him to enjoy, for his cock to use. \n\n\"FUCK ... FUCK ... FUCK ... OH YEAH ISABELLE ... FUCK ISABELLE ... FUUUUCK!\"\n\nKam's cock rammed into me, thrust, thrust, drove hard so that I groaned, held high in me and he came. I felt him, felt him cum, felt his cock throbbing inside me, his cum spurting out within me. I moaned softly as my channel received his culmination, as I felt myself give him the satisfaction he sought. That felt so good, so good to give him his pleasure, so good to satisfy my husband's desire. Breathing hard, I hung on the chair as his body juddered against mine, feeling those last spurts within me before he held himself still, his urgency now satisfied.\n\n\"Stay like that,\" Kam panted as he stepped back away from me. \"I want to look at you.\"\n\n\"Huuuuhhhh ... huuuhhhh.\" I was still panting, gasping, limp from the pounding I'd just received, bent forward, hanging over the back of the padded leather chair. My little black dress was bunched up around my armpits, my panties were gone, disappeared, on the floor somewhere. My sex felt wide open, hyper-sensitive, needing more, wanting more. Wanting Kam's cock to keep fucking me. I could feel his cum inside me, beginning to ooze out of me, beginning to trickle down the insides of my thighs.\n\nI could hear Kam breathing hard behind me. I knew he was looking at me. Looking at me as I stayed bent over the chairback, my legs spread in a V, exposed from the armpits down. Obscenely exposed to my husband's eyes as I panted for breath. I felt so fucked. \n\n\"Was I ... was I good for you?\" I panted, my cheeks flushed. \"Did you enjoy me like that?\"\n\n\"Oh fuck yes,\" my husband breathed.\n\nHe was moving, his hands caressing my butt, my hips. \"Don't move,\" he breathed again.\n\nHe was kneeling behind me, his hands on me. I could feel his breath on my skin. Oh god, he was looking at me, looking at my freshly fucked pussy. I burned, burned with embarrassment and shame. Burned with humiliation. Burned with excitement, feeling a fresh flood of wetness within myself as I realized my husband's eyes were inches away from my pussy as I stood there with my legs spread wide.\n\nHis fingers brushed my inner thighs, his fingertips wetly massaging his cum into my skin, teasing my pussy. \n\n\"Nooooohhhh.\" I heard myself whimper with shame as his fingers massaged his cum out of my pussy, spreading it on my lips, onto my thighs. Ashamed of myself and of what my husband was doing to me as I was, I didn't move, I didn't resist. I stayed unmoving, exposed, letting my husband play with my body, feeling my own excitement rising until I was gasping for breath. I so wanted him to start fucking me again, all wet and messy as my pussy was. \n\n\"Ooonnngghhhhhhhhh!\" I jerked with shock as his lips kissed my butt. I jerked in physical reaction against the chairback as he suddenly plunged two fingers deep into my pussy. My fingers dug into the arms of the chair, my head jerked back, my body jerked. I felt those two fingers plunge into my pussy, stretching me around them. I heard my pussy take those fingers, I heard the wet squelching as they forced their way into me. My cheeks burned with shame, with embarrassment, with humiliation at what Kam was doing to me.\n\nI stayed where Kam had placed me, bent in a U over the chairback as his fingers moved and twisted inside me.\n\nI eased my legs wider apart, clutching at the chair, whimpering.\n\n\"You like that, don't you?\" my husband breathed, his fingers twisting within my sex, stretching me. \n\n\"Yes ... yes,\" I moaned into the chair, my hair falling down around my face. \"I like it.\"\n\nLike it? I loved it.\n\n\"Fuck Isabelle, you're a hot little fuck.\" I was on my back on the floor, eyes wide as he guided his cock to my cunt. Ohhhh Kam my darling my honey my love! He was hard, hard and ready to fuck me again, right away. I drew my knees back as he moved between my legs, moved over me. He was going to have me again! Yes! Ohh yes! His eyes burned down into mine.\n\n\"I am,\" I moaned, \"everyone says so ... Every guy that fucks my cunt tells me I'm a hot little fuck...\" I was extemporizing like crazy. Whatever worked. Whatever got my husband hard enough to fuck me again. Ohhh sweet heaven, heaven was calling my name, paradise waited for me. Paradise on the receiving end of my husband's cock.\n\n\"Every guy?\" he gasped. His cock had found me, he was easing the tip in and out of me where I was so wet, so messy. \n\n\"Yes,\" I gasped, \"Albert and Harry, they told you I was a hot little fuck, they want to come round and fuck me here, they want to fuck me in front of you...\"\n\nOhhh yes, Kam was in me. In me and wetly fucking me, his cock so hard again. So welcome.\n\n\"After work tomorrow, they're going to meet us down at the bar, you're going to take me down there, I'm going to wear one of my little black dresses with no panties, we'll meet Harry and Albert and I'll take turns dancing with all three of you, I'll tell them I'm not wearing any panties and they'll put there hands under my dress to find out for themselves, you'll watch them, all three of you will dance with me, you'll take turns, you'll hold me for them to finger my cunt...\"\n\nJesus. Ohh Jesus, Kam was fucking me harder now, fucking me down against the carpet, his hands pinning mine to the floor above my head. \n\n\"Go on...\" He gasped, \"go on... what happens next?\"\n\n\"You ask them,\" I gasped, \"you ask them if they'd like to come up here and fuck me.\"\n\n\"I do,\" my husband gasped, \"I do, they say yes, I ask you if you agree.\"\n\n\"I look at you,\" I gasped, \"I ask you if that's what you want, if you want to watch them fuck me.\"\n\n\"Yes,\" Kam groaned, \"Ohh fuck yes.\"\n\n\"I look at them, I tell them to come upstairs with me, I take their hands and we walk out, you follow us, I take them in the elevator up to our apartment, you open the door for us and let us in, I take them inside while you shut the door behind us, then you ask them where they want to fuck me.\"\n\n\"They smiled and tell me they want to fuck you on our bed, you lead them into our bedroom, we all follow you.\"\n\nOh god, I was in heaven. This was everything I wanted. Kam's cock was sliding in and out of me with a remorseless urgency, in and out, in and out, driving me half out of my mind. \"Uhhhhh,\" I gasped, \"uuuhhhh ... Kam ... oh Kam I love you ... I love you...\"\n\n\"I love you Isabelle,\" he gasped, \"what happens next?\"\n\n\"Ohhhh,\" I moaned, \"Ohhhhh.\" Where had I been? Fucked. No, with the story?\n\n\"They undress, both of them undress, they take all their clothes off, so do you, I stand there watching while all three of you undress, you ask them who wants to fuck me first.\" I remembered Kam's finger in my butt three nights ago, how excited that had made him. It had felt weird but not unpleasant, just weird and strange. \"Albert says no, all three of you will fuck me at the same time, he turns me round and pushes me down onto the bed, face down, then he pushes my dress up so you can all see my butt, he takes his cock and he works it into my butt.\"\n\n\"Doesn't it hurt?\" Kam gasped. I could feel his hand under me, his finger exploring.\n\n\"Yes,\" I gasped as his fingertip pushed into my sphincter. \"Yes\" as his finger pushed into me. I could feel his finger and his cock both inside me, his finger still, his cock fucking me. Ohhhhh fuck oh fuck oh fuck it was good. Kam, Kam, I love you I love you. I gazed up at his face, seeing his lust for me, hisdesire for me, enjoying that look.\n\n\"Ohhh yes,\" I moaned, \"Yes, it hurts, his cocks so big but it goes all the way up my butt, you can see it go into me, he was to work it in, I'm making all sorts of noises, you ask me if I'm okay, I tell you yes, yes yes...\" Kam's cock was moving faster again, I could feel his urgency. My cunt was enjoying what he was doing. My butt was kind of enjoying his finger as well, but more because it excited him. \"He keeps going until all his cock's in my butt and then he rolls onto his back so that I'm lying on top of him with his cock in my butt and he pulls my legs back so that you can all see my cunt.\"\n\n\"Ohhhh fuck,\" Kam groaned.\n\n\"You can see his cock in my butt and you can see my cunt and then Harry climbs on top of me and eases his cock into my cunt, all the way, until both of them have their cocks inside me and then Harry starts fucking me and fucking me and I'm squealing and moaning.\" Ohh yes, Kam was fucking me hard again now, fucking me so well. I liked this. \"And then Albert tells you to fuck my mouth while they fuck me and you kneel over me and slide your cock into my mouth and start fucking my mouth while they fuck my cunt and my butt.\"",
        "\"Ohhh fuck,\" Kam groaned, humping up and down wildly between my legs, his cock slamming into me now, \"all three of us are fucking you at the same time?\"\n\n\"Yes,\" I moaned, \"yes, all three of you are slamming your big hard cocks into me.\" Kam's finger was moving in my butt while his cock pounded wetly into me. \"Harder ... harder...Albert's fucking my butt hard now, he cums in me, you all hold me still while he finishes in me, then Harry rolls me onto his back and fucks my cunt hard while you lie there watching. You hold my hands up above my head while he fucks me, you hold me while he cums inside my cunt. After he finishes, I look at you and ask where you want to fuck me.\"\n\n\"Jesus,\" Kam groaned, \"ohh fuck Isabelle, I just look at you and then I start fucking your cunt while I jam my finger into your sloppy little butt.\"\n\n\"You fuck me,\" I moaned, \"you fuck me so hard, I'm full of their cum everywhere, my cunt, my butt, you can feel my butt so full of Harry's cum with your finger, my cunt's so wide open and wet for you, you fuck me and fuck me fuck me fuck me ...Ooohhhhh ... OOHHHHH ... UUGHHHHHH ... NNNUGGHHHHHH ... HHHNNNUGGHHHHH.\"\n\nKam erupted inside me, his body heaving against mine, thrusting, filling, spurting, his cum flooding me for a second time that evening. I groaned as he came in me, clutching at him and holding him, looking up at him eagerly as I felt his culmination, as I satisfied him again, as his cock flooded me with his creamy fluid. I loved it. I loved his cock. I loved my husband.\n\n\"I love you Kam,\" I breathed.\n\n\"FUCK FUCK FUCK TAKE IT IN YOUR CUNT,\" he groaned, every muscle straining, his head arched back, \"FUCKING FUCK YOUR HOT TIGHT LITTLE SLUT CUNT...\"\n\nHe collapsed onto me, not just breathing hard, he sounded like he'd run a marathon. I held him, cradled him, loving him, loving his cock inside me, loving his cum in me, wanting nothing more. I smiled with satisfaction at the ceiling. Twice in one night, that was good. \n\nMaybe if I encouraged him tomorrow night, made up another story for him? Something to excite him? I forgot all about Harry and Albert as I closed my eyes and held my husband close. Should I ask him about babies again? Maybe not yet. Give it some more time. Maybe a few months.\n\nA long time afterwards, I emerged from the bathroom, naked, intending to slip into bed when I heard Kam on the phone. Talking. Who would he be talking to at this time of night? I opened the door a little more.\n\n\"... this weekend,\" I heard my husband say, \"...you want us to come up to your place for a few drinks afterwards.\"\n\nHuh? What was he talking about?\n\n\"Yeah, no problem, we'd love to do that. See you Saturday night.\"\n\nKam came into our bedroom a couple of minutes later. \"Who was that?\"\n\n\"Albert,\" Kam smiled, \"he invited us to a big dinner his company's having, we're going as guests, we'll go round to his apartment for a few drinks afterwards, he lives upstairs.\"\n\n\"Ohhh, that sounds like fun.\"\n\nKam smiled. \"I thought you might enjoy it, you can wear one of those new dresses you bought.\"\n\nI smiled happily. Yeah, I could, And then afterwards...\n\n\"Come to bed honey,\" I said, throwing back the sheets. \"I've got this little story for you.\"\n\nKam flicked the lights out and slid in beside me. \"Yes?\" he said hoarsely. \"What story?\"\n\n\"It's about a company dinner that you take me to where you don't tell me that I'm the only girl there and I have to lie naked on the table and you all eat sushi off me...\" \n\nYes, I felt Kam's cock twitch. Third time, Isabelle! You go girl. Maybe this time he'd last long enough for me to climax?\n\nTo be continued - Chapter Three of Happy Birthday to Me coming soon!"
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "chinese",
        "asian",
        "young wife",
        "chloe tzang",
        "vanilla sex",
        "implied threesome",
        "lingerie",
        "little black dress",
        "asian wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/happy-birthday-to-me-ch-02"
}