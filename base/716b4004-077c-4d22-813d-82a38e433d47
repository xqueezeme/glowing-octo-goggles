{
    "title": "The Daring Dance Dilemma",
    "pages": [
        "The Daring dance dilemma is a sequel to \"A surprising Sunday service\"\n\n***\n\nMike was fucked. He knew it.\n\nHe kept telling himself it had been too good to be true. It was pure fantasy. It had to have been a dream, and he needed to let it go before it ruined his life.\n\nBut it had happened, hadn't it? The memories he had of her supple, complaint young body sweating under his were too vivid to have been just imagination.\n\nThe week following the incident had been the longest and most tortuous of his life. He had been hardly able to eat or drink in with the skin-prickling anticipation of her promise. The next Sunday he had almost physically dragged his family back to church. His wife, Carol had been overjoyed by his supposed newfound love of religion. He could not tell her that the plane of higher existence he had found was not in any sermon, but buried deep in the eighteen year old Rebecca Williams' ass.\n\nHe had snatched the first chance he had had to ditch his family after they had arrived, and fled up to the balcony where he and Becca had first initiated their tryst. But she was painfully absent. He waited up there for the entire service, retracing the steps of last week alone. He felt like there should been more evidence of what had been, for him at least, an Earth shattering event. The best he could find was a faded stain on the wooden floor behind the organ, where his seed had spilled out from inside her.\n\nNow, from his vantage, he could see her sitting the choir stalls, eyes ahead, never looking up at where he hid, appearing every bit as angelic as her reputation. The memories he had of her ass squirming up and down his rigid cock hardly seemed real. Only he knew her hidden, wicked side.\n\nOr did he?\n\nDid she regret what they had done? Had she told someone?\n\nThere was an actual, physical pain in his chest. Was it from sheer desire or utter terror?\n\nHe had actually looked around nervously at that point, half expecting the police to come storming up the steps to the church balcony and arrest him.\n\nA month had passed since then and his agonising had only grown worse. He was angry and confused. Every Sunday he returned to the place they had met, as he had promised her, and every Sunday he was bitterly disappointed.\n\nHe began to see her everywhere he looked. When he picked his daughter up from school, out in the street and at the store. She was in every flick of hair or perky bounce in every teenage girl he saw. Worst of all, she plagued his dreams, causing him to wake up tangled in sweat-soaked sheets with a hard-on he could have used to split wood.\n\nHe was growing concerned that Carol would figure out something was up. He somehow passed the turbulent nights off as stress-related nightmares, but he was unable to hide the changes that had come over their marital love-making. If anything, she seemed to appreciate the new-found vigour after nearly twenty years of married, vanilla sex. But how much longer would he hide that it was Becca's teenage body he squeezed tight against himself, Becca's tight anal passage he felt when he pumped his cock in and out, and Becca's beautiful young face he imagined as he emptied himself into his wife.\n\nDuring the day he fantasized about her constantly. Was it her coltish figure he saw jogging past his house on Saturday mornings? His imaginings grew so vivid he half expected her to be there, waiting under his desk in the mornings when he got to work. Kneeling, and ready to slide down his fly and devour his aching cock.\n\nJesus! He needed help.\n\nHe had more or less resigned himself to this new life of constant mental torture, hoping that it would dissipate with time, when he met her again.\n\nAs with the last time, he was utterly unprepared for her.\n\nHe had actually fought with Carol about it. She had volunteered him to be a chaperone at Sara's high school dance. He had been a lot sterner with Sara since he had become more aware of the depraved sort of men that were out there, waiting to take advantage of young women. Men like him.\n\nCarol had thought it would be a good way for the two of them to bond. Mike had known it would be a good way for him to stand around in a dark corner and watch horny little teenage creeps come up and try to get their grubby hands on his unsullied young daughter. The irony of this concern, in relation to his encounter with Becca the month previous, was not lost on him. Yet he knew that if any man did to Sara what he had done to Becca, he would chop the guy's dick off and choke him with it.\n\nCarol had dressed Mike up in his one and only, rumpled suit and he had driven Sara and her date, a chump with the worst haircut Mike had ever seen, to their dance.\n\nSara ran off as soon as she saw her friend Taylor. With their dates in tow, the four of them had disappeared before he was even out the car. It suited him fine.\n\nHe snatched a nametag one of the seniors, seated behind a table set up outside the gym entrance, proffered him. Then, pausing only to offer a few cursory greetings to the other parents on duty, he slipped inside the gym.\n\nA wall of bass hit him like he was stepping outside into a hurricane, and he took a moment to adjust, using the time to scope out all the possible dark corners of the school hall that he could lurk in.\n\nOnce he found one that suited, he resigned himself to staying there the whole night, doing his best to ignore the kids sipping from stolen hip flasks or returning from the bathrooms reeking of smoke.\n\nThe dance was, for the most part, organised and run by the seniors. They had handed out the name tags, and they were also dotted around the hall, helping to keep the horny teenagers from dry humping each other to death. They were easy to spot because, unlike the kids in Sara's year, dressed in overly flamboyant gowns and ill-fitting tuxedos, the seniors were attired in the school uniform, even down to the blazers and ties.\n\nMike leaned against a wall and allowed his unfocused eyes to pass over the gym. It was dimly lit, but near the dance floor, colored lights pulsed from some point high above the stage, casting the dancers into ever shifting spectrum of hues.\n\nTime passed slowly.\n\nMike could not have said how much had actually gone by when his ears suddenly pricked up. Had he just heard someone say Becca's name nearby?\n\nCurious, he casually slid along the wall he was leaning on, closer to where two boys were half shouting at each other over the music, not far from his reclusive corner. He recognised the two of them slightly. The gangly one with the pimples was Marcus, or Malcom? That was it, Malcolm.\n\nMike knew him because he had once been called into the school to meet with Sara's fourth grade teacher, as well as Malcolm's parents. It turned out that Malcolm had had a little crush on Sara and he had chosen to show his affection by pulling her hair, shoving her in the playground and calling her names. Mike did not like the kid, but he thought of him as fairly innocuous.\n\nThe other kid, Tyson Hess everyone knew. He was in Sara's year too, and, from what she told Mike, Tyson was a proper little asshole. If the parents of the other students could have taken a vote to kick one kid out of the school it would have been Tyson. But his parents were even bigger assholes, so everyone felt too bad for him to really fight to have him kicked out, even though he had been caught doing some pretty bad things.\n\n\"Bro, have you seen her tonight? I would hit that shit. Even in that prissy uniform. She is tight.\" Mike tuned into what Tyson was saying and immediately regretted it.\n\nHad he heard right the first time? Was the \"she\" in this poetic tale 'his' Becca? Mike whipped his head around the room almost as a reflex, desperately seeking out her sweet face. Sour disappointment boiled inside him when he failed to spot her.\n\nThe long-necked, spotty Malcolm replied, \"Like you have a chance, bro. She's the fucking ice queen.\"\n\n\"I don't know. I have heard some shit.\" Mike felt jealous heat creep up his neck. He knew Tyson was a proven liar and thief, but was there a chance Becca had been lying when she said he was her first? Why did it bother him so much? \n\n\"Come on,\" he had to tell himself, \"She is not my girlfriend. She is practically a kid. I should not care this much about who she does or does not date. I am a happily married man.\" He was, anyway, before he had met Becca.\n\n\"Oh yeah, what have you heard, Tye?\" Malcolm asked.\n\n\"My cousin reckons he has seen her with some college guys. Apparently she puts out if you know what to do. Say what you like, man, but I bet you I can get a piece of that, if I play things right.\"\n\nMalcolm gave a slightly effeminate laugh, \"Bullshit, man. Nobody in here has a chance. Fuck, if someone did they would award him a fucking presidential medal or some shit.\"\n\nMike nearly coughed when he heard this.\n\n\"Check it out.\"\n\nMike could not see what the kid named Tye had inside his jacket, but his friend seemed impressed.\n\n\"Woah!\"\n\n\"It's the good french shit. A client of my dad's gave it to him, but he's on the wagon right now, so he won't miss it for a while. I'm telling you, she is going to practically fall on my dick when I offer her some.\"\n\nThe pimply kid laughed, but looked nervous. With an even bigger, and more awkward laugh, Tye threw an arm around Malcolm's shoulders and pulled him towards a vacant table, cutting Mike off from the rest of the conversation.\n\nHad it been Becca they were talking about? Either way, Mike made a mental note to bust their balls sometime if he ever got the opportunity.\n\n\"Jesus, Becca.\" He moaned softly into the dark, \"What are you doing to me? \"\n\nHe nearly leaped a foot on the air when a voice, her voice, spoke in his ear, \"Hi, Mike.\"\n\nHe snapped around to look at her, suddenly right by his side. Where had she come from? Had she heard what he had said?\n\nHer grin was wide and her eyes sparkled with amusement. He felt like she had gut punched him, her beauty struck him so hard. She, like the other seniors, was dressed in uniform. But she somehow made it look both innocent and incredibly sexy at the same time. He wanted to rip it off her. She was in black leather shoes, black stockings and a grey skirt that ended above her knees. Her navy blazer covered a white shirt and tie, but could not hide his memory of her tumbler sized, up-tilted breasts.\n\n\"Becca?, he managed to croak out hoarsely. It was as if he was questioning her existence. He had half a mind to reach out and touch her to see if his hand would pass through her.\n\n\"Christ, Mike.\" She laughed, \"Are you okay? You look like you have seen a ghost.\"\n\n\"No, I...\" He stumbled over his words, she seemed to have that effect on him, \"I just wasn't expecting to see you again. Not after, you know...\"\n\n\"Oh my God, Mike. I am so sorry.\" She hid her embarrassed smile behind her hands, \"You probably waited for me on Sunday.\"\n\n\"No, I...\" But he couldn't lie. He just shook his head, an rueful smile creeping onto his lips.\n\n\"I am so sorry, Mike.\" He thrilled at the soft touch she placed soothingly on his elbow, \"I tried to get away. I really did, but that bitch Desiree suspected I was bunking my Sunday duties. I had to go back and pretend to be with the choir. Jesus. I have thought about you, like, everyday since then.\"\n\n\"You did?\" The boyish glee in his voice was positively cringe-worthy.\n\n\"You rocked my world, Mike,\" She said as she playfully elbowed his side. He looked around to see if anyone was watching them, but everyone seemed to be focused on their own conversations.\n\n\"God, Becca. I can't stop thinking about you. You're killing me.\" He nearly seized her by the arms in his confession, but stopped himself just short, all too aware of where they were.\n\n\"Aw, poor Mike,\" she made a playful sympathetic face, pushing out her swollen lips, \"Maybe I can help?\" He felt something brush against his crotch. He looked down and when he saw her hand cupping his already semi-hard bulge he jumped back, his head snapping around again to see if anyone had noticed. The hall was filled with milling students, teachers and parents. Practically everyone here knew him and if he were caught with Becca...\n\nHe did not even what to contemplate it.\n\n\"Relax, Mike. No one is watching,\" She stood on her toes to say into his ear in a throaty stage whisper. He felt the surge in his trousers when he felt her warm breath tickling the hair on his neck. She smelled of the fruit flavored gum she was chewing. He felt his self-control melting like an ice cube in a blast furnace.\n\nFor a moment her eyes narrowed then, after a quick scan of the room, her expression turned into a parody of a scheming cartoon villain. Mike suddenly had a sense for what all prey animals must feel moments before the jaws of a predator close around their throats.\n\nShe slipped a cool hand into his, saying only, \"Follow me.\"\n\nMeekly, he did just that.\n\nMike looked around as he was dragged forward, his eyes landing on where Sara was talking to a group of girlfriends.\n\nShe did not see him, but she was laughing, so she was clearly having a good time. She had also instructed him earlier in the evening that she would, \"like, literally die if you come anywhere near me,\" at any point during the entirety of the dance. For once, he was inclined to obey the wishes of his daughter. Besides that, at this point, if Becca had asked him to follow her into a cage filled with hungry lions he probably would have done so.\n\nAs they stepped out of the deep shadows Mike had been hiding in they both automatically released their hold on each other. There were plenty of other parent chaperones standing around or near to student chaperones, so it looked fairly natural that he and Becca should be walking off together in the direction of the stage. Perhaps it was coincidental, or perhaps they had both seen something notable and were moving to deal with it. Who could say?\n\nThe school gym have been turned into a Greek themed banquet hall for the occasion. Styrofoam pillars in the doric style had been carefully placed, and the brick walls had been covered up by by huge swathes of white fabric. Mike had no doubt that Becca had probably, in some large capacity, been responsible for organizing all of this.\n\nBecca led him to the front of the hall. There it ended in a raised stage, on which some low cost DJ was getting paid to do a job the shuffle setting in Mike's iPod could have done better. Seriously, even Mike thought the music was old and cheesy and that, as his family seemed all too eager to remind him, was his favourite genre of music.\n\nThey had just gotten to the front of the stage, when they were confronted by an enormous pair of speakers, one stacked upon the other. Mike could feel the beat of the terrible music in his chest. He could practically sense it seeping into his suit, devaluing it with each moment he stood there.\n\nUncertain of what to do next he stopped. Becca give him another reassuring smile and took his hand in hers once more, giving it a little squeeze. His head automatically snapped around yet again to see if anyone had noticed them, but the kids were all too wrapped up in each other and themselves, apparently, to see him and Becca.\n\nQuickly, she stepped into the narrow gap between the speaker and the wall. It was small enough that both of them had to turn sideways to get into it. When she reached the white, curtain clad wall she turned back long enough to give Mike a wink, before yanking it aside and revealing a door. She pulled a small set of keys from an inside blazer pocket, rapidly flicked through them and then fitted one into the door to unlock it. She grinned when she saw his impressed expression.\n\n\"There some benefits to being on practically every organising committee. Free rein of virtually the entire school,\" She said before she spun the keys with an unnecessary flourish and slipped them back into her side pocket. Then she was gone through the door, leaving him on his own.\n\nHe paused a beat, taking one last look around. There seemed to be no one watching. He did not have time for a final confirmation, however, because Becca's hand shot out and grabbed his tie, hauling him in after her.\n\nOff balance, he tripped into the room, accidentally shoving her back until she was pressed into a chain link fence. Worried he might crush her, he tried to push back off the fence, but Becca sank her hands into the hair at the back of his head and pulled him in roughly for a kiss. He resisted only at first, worried he was leaning on her too hard, but then melted into her sweet, fruit gum flavoured mouth. Somewhere, during the brief time she had been alone in the room, she had managed to ditch the gum, his tongue only finding hers, and nothing else.\n\nShe was too short, or he was too tall, and they had to tilt their heads awkwardly to maintain the fierce kiss. But his beast was awakened now, and he gripped her tiny waist and lifted her bodily off the ground, pinning her to the fence with his out-thrust crotch. She, in turn, raised her hands up and hooked her fingers into the wire links of the fence. Though he strained a little to keep her there, he found he could now kiss her with ravenous ease. Her hot, wet tongue swam in his mouth, her teeth and lips nipping playfully at his.\n\n\"God, she drives me wild,\" he thought, feeling his breaths coming deeper and heavier now. He could feel her heat through her panties, where his rigid cock was now pressing up against her unclaimed sex. He was unable to stop himself making short little thrusts against her. She responded by wrapping her legs around him. He could feel the heels of her school girl shoes digging into his ass as she pulled herself into him with matching eagerness.\n\nIt was all too much, too fast. \"I am going to come in my pants like one of these fucking schoolboys she has such disdain for,\" he realised. The feeling of growing dampness between them, as much from her as from him it seemed, was pushing him over the edge. With one huge effort he brought himself back from where he teetered, pushing them away from the fence. She remained wrapped around him, still furious in her lust, until he, fumbling blindly, found a box and dropped her, with a little bounce, on her backside, and managed, as best he could, to break the kiss.\n\nShe still had his bottom lip in her teeth when she growled out, \"What the fuck are you trying to do to me, Mike?\"\n\nAfter a hard glare she released his smarting lip. All he could do at that moment was shake his head.\n\n\"Stopping a girl just moments away from achieving her first decent climax in over a month is a very dangerous game to play. People have died for less.\" She tilted her head at a slight angle and said, with narrowed eyes, \"Is this some power trip? Do you want me to beg for it, Mike? Because I will.\" Her face changed, eyes widening and bottom lip protruding in mock abjection, \"Please Mike, please make my little pussy come like you did in church.\"\n\nHer words and pathetic expression suddenly made him laugh. He could not help himself.\n\n\"What? Stop being a jerk, Mike,\" She flared.\n\nHe let out a deep breath, saying, \"Sorry, Becca. It's just, this still feels, you know, wrong. As much as I love this, and I really do, you're practically a kid, and I am married.\"\n\nShe gave him a narrow-eyed stare, \"Jesus, you really are about as dumb as the rest of them. We've been over this, Mike. You don't have to feel bad. This the perfect situation for me. I do not have time for a boyfriend. They get all needy and clingy. They require time and patience and, quite frankly, I have my life and future career to put first right now. What I do need, however, is for someone attractive, this is you Mike, in case you haven't guessed, to fuck me or make come in some depraved way that fulfills the dark fantasies in my mind. They build up in there like thunderstorms, and I don't want to know what I will do if I cannot let the thunder and lightning out every once in a while. As for you being too old, if I were to choose someone my own age, like one of those puff-chested virgins,\" she swung an arm out to encompass the entire male population of the school, \"Firstly they probably wouldn't have a clue what they were doing, and secondly they would probably announce it in the school paper directly afterwards.\"",
        "Mike had to acknowledge that she was right. If he had done what he had with Becca in the church when he was a teenage boy he probably would have been unable to stop himself from bragging about it to everyone, including his own parents, his pastor, probably even her parents.\n\n\"So, you see, Mike, You're like the perfect guy. You're good looking, you can make me come harder than even my best dildo, and, best of all, you can't tell a soul or you would be deeply, impossibly, irrevocably, fucked,\" She tugged playfully at his tie while she spoke, adding, \"Your feelings about your marriage are up to you. Your wife seems really nice and I don't want to ruin that for you. But then, no one can ever know about this anyway.\"\n\nShe leaned back on the box she was seated on until she was resting on one elbow. Knowing the spellbinding power she had over him she allowed her free hand to gradually hike up her skirt.\n\nHe could see then that, what he had taken to be the standard school issue black stockings were, in fact, a pair of incredibly sexy thigh-highs. Another one of Becca's hidden rebellions, no doubt.\n\n\"You like them?\" She asked coyly. \"Sometimes I get so horny I can't wait to get home before I need to touch myself. Things go much faster if I don't have to peel pantyhose on and off each time.\"\n\nMike gaped openly.\n\n\"The skirt keeps it hidden, but it turns me on knowing how easily someone could find out.\"\n\nWithout warning she suddenly spread her legs, allowing them to fall either side of the rectangular box she was on,and exposing white cotton panties. They were already so damp they were almost transparent. She slid a finger down the centre of her panties, accentuating the deep fold in the material and making the pink skin beneath visible wherever it touched the material directly.\n\n\"Your wife never needs to find out about this, Mike. In three months I will be away at an out of state college and you will probably never see me again. This can just be a pleasant memory for you one day when you are sitting in your wheelchair in the retirement home, tugging at your tired, limp noodle.\" She plucked playfully at the material, almost exposing her moist slit completely. \"I'm feeling desperate here, Mike.\"\n\n\"Fuck!\" Mike kicked the box, jolting Becca enough to surprise her and elicit a short snort of a giggle. It only made him want her more. \"Alright,\" He growled, \"Jesus! Fuck! I'm only human, right? I'll do it, but on one condition.\"\n\nHer grin was wide, she was pulling the material of her panties tight against her skin with one hand and circling the almost imperceptible bulge of her clit with the other as she said, \"What condition would that be, Mike?\"\n\n\"This time you have to let me taste your pussy.\"\n\nIf it were possible her smile grew even wider, \"You see, Mike,\" She sighed theatrically, \"This is why we get along so well.\"\n\nHe needed no more of an invitation, he was already feeling the hunger for her overtake him the way rage overtakes a rabid dog. He gripped her spread thighs painfully hard with his hands, pressing deep indentations into her with his thumbs. He dropped to his knees until his face was inches from where her fingers were tracing whorls over the sodden cotton.\n\nHe was an automaton programmed for a single function. He could not have changed direction now if his life depended on it. Her hands were forced aside as he pressed his mouth into her. He felt the coolness of wet material mixed with the heat of her arousal beneath. He let out a wet sounding breath against her, feeling as if all the past month's tensions had just passed over him like a crashing wave and he could now rise to the surface and breath once more.\n\nHe wanted to rip the panties off her, but he knew it would be far more tortuous for her if he drew this out, and he wanted to torture her until she begged him to let her come. He shaped his tongue into a broad, flat blade and licked up and down the soft fabric in slow strokes. The taste of her had soaked into the panties and was now coating his tongue.\n\nBecca's head lolled back and she let out a low hiss, just audible over the pounding music. Mike nuzzled and pinched her through the material with his lips, relishing how he could send little muscle spasms through her.\n\n\"God,\" Becca groaned, \"Hurry, Mike, someone could come in here. This place is not exactly secret.\" Though he kept his lips firmly planted on her mound he allowed his eyes to survey the room. She was right. Although the door they had come in through had sprung shut, giving him an initial sense of privacy, the rest of the room they were in was not really a room at all. He could see they were in some kind of wire cage that had been built backstage to hold the more expensive AV and stage equipment. It was tucked into the wings and, although the stage curtains were drawn, there was little protection, should someone come backstage.\n\nHe broke contact with her for a moment to say, \"I thought that was what got you off?\"\n\n\"Don't fuck with me Mike, I need to come.\" Was her only response, but from the hooded expression in her eyes he knew he was right.\n\nHe used his index finger to draw a line up the fold in her panties. As he brushed the little covered protrusion she gave a small convulsion. He grinned wickedly as he teased it, \"I didn't hear a please in there. Just think, anyone could come through those curtains right now. What would you do?\"\n\nAs he spoke, and tugged at the little bud he could see the beautiful agony on her face. She was biting down on her bottom lip in that way that made him feel he was going to lose his self-control entirely.\n\n\"Please,\" Her voice came out small and high.\n\n\"I'm sorry,\" He was surprised at how much the role of torturer was inciting his lust, \"I didn't hear that.\"\n\n\"Fuck! Please Mike, I want to come with your mouth on me. Please. Please! Please!!\"\n\n\"Okay, sweet girl. But only because you asked nicely.\"\n\nThe sigh she let out seemed to hitch in her throat, as he peeled aside the sticky material, and kept it pinned out of the way with one hand, allowing him to place a soft kiss on her exposed folds.\n\nMike was in a haze of her succulent texture, her heady scent and the tang of her on his taste buds. He wished there was more surface area to his tongue so that he could cover every inch of her sex with it. He had to settle for exploring her secret folds and rippled undulations with the tip of his tongue. He made a point of finding her tiny little virgin entrance and circling it over and over until it was quivering. Then he let his mouth move up, leaving no part of her untouched by his tongue, until he found, once more, the little node at her core. As he brushed it her body bucked so hard the box she was on actually shifted.\n\nMike moved like he were oil being poured over her skin. He tongued her clitoris with reverential care. As he worked he felt the tension racking up in her body alongside the frustration that he would not yet let her climax. She was an overfilled water balloon filled to bursting, and Mike had turned the faucet down to a drip. Any one of those drops might be the one to bust her open, but as each one failed to do so her suffering increased exponentially.\n\nA desperate little hand slipped down and tried to join Mike's tongue, but he grabbed it and held it tight. His other hand still held panties aside. She cried out in frustration, cursing at him, begging him to finish her off. He responded by slowing his pace even more.\n\nFinally, when he had her stretched out and strained tighter that she could have been on the torturer's rack, he made the last touch that proved her undoing. It was just one of several hundred little prods he had made with his tongue, growing progressively lighter as she approached her climax. However, to her hyper-stimulated nerve centre it proved too much.\n\nBursting was an accurate way to describe what happened to Becca, as she arched up, lifted her hips and began to spasm and shake in erratic abandon. Mike tried to keep his face pressed into her, but was bucked back, feeling his teeth clack together with the force of it, narrowly avoiding biting his own tongue.\n\nShe pressed her hands between her legs as if she were trying to stem a leak and shuddered out a long and excruciatingly beautiful orgasm.\n\nAs she finally began to calm, laying back and spreading her legs once more, Mike leaned forward and began kissing her with the lightness of a landing butterfly. Each one, despite barely touching her, seemed to give her a fresh spasm, dragging out the death throes of her climax.\n\nMike had to fight to hold back his grin just so he could continue to use his lips on her. Finally, she seemed able to return to herself, although her body still gave little involuntary shudders that made Mike want to cheer with self-pride.\n\nHe wiped the back of his hand against his mouth and chin, still dripping with her juices and said, \"There, are you satisfied now?\"\n\nBecca collapsed back on the box, staring up at the ceiling, her legs still spread, allowing him the pleasure of a close up view of her glistening sex.\n\n\"Oh, Mike. Mike, Mike, Mike!\" She said, shaking her head, \"You have no idea. I am very satisfied. Oh, I am so happy that the church was no a fluke. You sir, have the touch. It's like you can read my fucking mind when you're down there.\"\n\nMike flushed despite himself, and was beginning to feel the shyness of the clumsy schoolboys she had no time for. He had tried everything with Carol, explored every inch of her in their 20 year marriage and, while she had enjoyed it and climaxed fairly regularly, it had never been like this.\n\nJesus! He felt so alive with Becca. With her he was not Mike Mitchell, the boring old family man. He was Mike Mitchell: Sex God!\n\nHe kissed her soft naked inner thighs, while she lay there, getting her breath back. After a short while she propped herself up on her elbows again and looked at her watch. She nibbled on the edge of her bottom lip, in that way that made him want to pant like a cartoon wolf, while she thought.\n\n\"We still have a little time before my next thing, Mike. I don't think anyone will have missed us yet. You think you got the energy to go a little more, old timer?\"\n\nMike growled and, for answer, pounced on her, planting a sloppy kiss on her lips, not caring that she might object. She did not, she met him with equal hunger, seeming to revel in her own scent and taste, smeared all over his face.\n\nHe gripped the box with straight arms, keeping his weight off her. He felt her hands playing with the buttons on his shirt, slowly slipping lower until they were fingering his belt. Suddenly one of them was wrapped hard against his shaft through the material of he trousers.\n\n\"Fuck!\" He breathed the word into her open mouth.\n\n\"I can still remember what it feels like to have you buried in me, Mike,\" Becca whispered, \"You're still the only guy who's ever been inside me. Does that turn you on?\"\n\nIt certainly did that. Mike found himself, once more, trying urgently to fight back his body's desire to jump straight to ejaculation. Suddenly he didn't care about what fuckface Tye and his fuckface little friend were saying. Even if Becca was lying, it was still him in this place with her, him making her come and him whose cock was now gripped tight in her fierce little fist.\n\n\"A little, I guess,\" He lied.\n\nShe squeezed his cock painfully, \"I'm baring my soul here, Mike. A little respect would be nice.\"\n\nHe laughed as he ran a series of small kisses along her jawline and down to her neck, \"Becca, you already know you turn me on more than anyone I've ever met. Do you really need me to say it. I have never cheated on my wife before, and probably never would except...\" He allowed it to trail off there.\n\nShe slackened her grip around him slightly and grinned, \"I do know, Mike, but a girl still likes a little acknowledgement.\" She rewarded him by beginning a slow up and down stroke on his cock through the fabric of his suit pants.\n\n\"You know,\" she began in her playful tone, \"I've been doing a little research since the last time we met.\" Her fingers began to unbuckle his belt.\n\n\"Research?\" He wheezed out, as she unhooked his trouser button and slipped her hand in to cup the head of his cock, which had been fighting its way past his elastic waistband.\n\n\"You know, a little light reading, a few tutorials and, oh yeah, a lot of porn.\"\n\n\"Porn? I thought was just for guys?\" Mike laughed, then oohed softly as her fingers began to playfully tug just on the exposed hood of his cock.\n\n\"You know what, Mike. You aren't far off. Porn is definitely not created with women in mind, but it did help me to see the kind of things guys like.\"\n\n\"And?\"\n\n\"You guys seem to like getting your dicks sucked.\" She looked at him with a glint of amusement in her eyes, seemingly waiting for a response.\n\nAfter a long silence Mike replied, deadpan as he could manage, \"Did you want me to respond? I'll stop you if you say something I disagree with.\"\n\nBecca rolled her eyes, and Mike almost winced as he was reawoken to the reality that she was still an actual teenager. Legal, sure, but completely off limits to him by the rules of polite society. She was still a teenager and he had her pussy juices smeared all over his face. There had to be something wrong with him that that thought nearly made him come into her palm as her fingers teased him relentlessly.\n\n\"Don't get wise with me, Mike. I have some new tricks I want to test out on you, but you need to behave.\" As she spoke, she removed her school blazer placed it on a nearby shelf.\n\n\"I swear, I will not say another word,\" Mike said as earnestly as he could, before closing his mouth and miming a locking motion with his fingers.\n\nBecca gave him another wicked grin. His fly had come down while she was gradually working her hands lower onto his shaft. She had tucked the band of his boxers under his balls, giving her hands the freedom to explore his entire length, which she did enthusiastically.\n\nSitting up, she gripped his shaft in both hands and used it to help her slide forward on the box she was straddling.\n\n\"Oof!\" Mike grunted at her unexpected roughness. But his protest died on his lips as she leaned forward and took him into her warm mouth. Looking down he could only see the top of her head, her long dark hair hid what she was doing, but it felt incredible. Mike felt her tongue squirming around him, responding to the changes in his breathing and the switching of his muscles.\n\n\"Shit, she is a fast learner,\" He marvelled. It made sense though, she was complete polymath in every other aspect of her life. Why wouldn't she be able to give him the best blowjob of his life on only her second attempt?\n\nHer head bobbed slightly, making her long tresses sway. He dug his fingers into the soft hair at the back of her neck and began to give little hip thrusts into her open mouth. He grinned to himself when he noticed the slick trail she had left behind her, across the top of the box.\n\nHe had done that to her.\n\nMike was truly content in that moment, he could have happily let Becca nibble and suckle the tip of his cock like that until he burst into her mouth. She, however, had higher aspirations.\n\nHe wrinkled his nose in displeasure as she broke away and looked up at him.\n\n\"Aw, poor Mike,\" she chided, \"Is it annoying when you want to come and the person going down on you keeps dragging it out? Well, payback is a bitch. Now, move back,\" her tone was commanding and he obeyed. She slipped off the box and dropped to her knees. Mike was thrilled, but still had the presence of mind to grab something soft, a costume from some old stage production no doubt, off the shelf beside him and give it to her.\n\n\"Such a gentleman,\" she said with genuine warmth in her smile, \"That's why I like older guys, Mike. They really don't make them like you anymore,\" as she spoke she readjusted herself, this time with the costume under her knees.\n\nMike enjoyed the compliment, but felt a pang a jealousy at her use of the plural, \"Older guys.\"\n\nOnce more, however, his concerns seemed to disintegrate from his mind as her top lip came to rest on his shaft and her mouth encircled his girth. She began to work again, this time with deeper, more forceful movements. Mike had to lean back against a shelf for support.\n\nShe sucked him in hard and deep, and then released him. Then she repeated it again, and again, as if she were building up to something. Each time she pulled back she eyed his cock determinedly, as if it were a fresh challenge for her.\n\nFinally, while she took a moment to pump his slippery shaft in her delicate pale hand, she spoke to him, \"Can I try something on you, Mike?\"\n\nMike looked down at her sweet young face and smiled. He pointed to his mouth and made the locking gesture again. She narrowed her eyes, saying, \"You are cheeky for someone who could have his dick bitten as easily as he could have it sucked.\"\n\nMike narrowed his lips and shrugged theatrically. Becca laughed, flashing those heart-stopping dimples again. \"Okay, Mike, you can talk,\" she relented.\n\nHe smiled widely and replied, \"Becca, short of your threat of biting me, I am your willing servant. Do unto me what you will.\" He offered her what he thought would be a comical bow, but ended up slapping his cock against her lips as he bent forward. He was rewarded with an impassive glare that only a true teenager can manage. Mike grinned sheepishly.\n\nBecca shook her head, but she did not stop massaging his length.\n\n\"I saw this in my, um, 'research material.\"\n\n\"Porn,\" Mike corrected her.\n\n\"Mikey, this need not end well for you.\"\n\nHe swiftly relocked his lips and this time tossed the imaginary key away.\n\nShe raised her eyebrows in acknowledgement before proceeding, \"I also tried it at home with one of my toys. It was harder than it looks, but I figure it might be easier with something a bit more flexible,\" she indicated what she meant with a sharp tug on his shaft that made his ass cheeks clench involuntarily.\n\nSuddenly her expression showed her to be the uncertain young woman she never seemed to be, as she looked up at him with her large, liquid eyes. \"You won't make fun of me if I do this wrong, will you?\"\n\nMike shook his head emphatically. She nodded, \"Yeah, I know you won't. That's why you're the man I want to try these things on, Mike. You're a great guy,\" her eyes flicked to one side before she added, \"When you shut your mouth, that is.\"\n\nMike just nodded in mock sadness.\n\n\"Okay,\" she gripped his cock by its base in both her hands, \"Here goes,\"\n\nMike was still uncertain what she was up to, until he saw her open her mouth wide, her soft pink tongue proding slightly. He moaned loudly as she took him in and he travelled deeper and deeper inside her. She had swallowed nearly half his length before he felt himself come up against the spongy resistance of her throat. He hissed through clenched teeth.\n\nWaves of discomfort and determination played across Becca's beautiful face as she strained to take him in even deeper. Digging her fingers into his ass cheeks, she pulled her face down hard onto him, holding him there for as long as she could, before releasing him and gasping for air.\n\n\"Shit, \" she gasped, as she wiped at a thick strand of saliva that had spilled from her lips, \"I forgot how goddamn big you are, Mike.\"\n\nMike was torn. He had never thought in his life he might get a chance to be deep throated by anyone, let alone someone like Becca. That was something that only male pornstars experienced, wasn't it? But Becca was so sweet and tender, he wanted to tell her not to suffer on his account. Anything she gave him was more than he could have dreamed of. This was in a different realm of possibilities. Something that, even in infinite universe theory, where every possibility was bound to happen, had to be extremely unlikely.",
        "Becca screwed up her face in concentration. Mike wanted to laugh. Her focused look of intent was adorable. She opened her mouth once more and began to swallow him again. He couldn't be sure, but he felt he went in a little deeper this time but, perhaps he was just inclined to be charitable, given the effort she was clearly putting in. She pulled off him again with a deep wet sound, strings of saliva still connected to his shaft.\n\nMike was about to tell her that she really didn't need to hurt herself, just feeling her mouth wrapped around him was already beyond his wildest fantasy, but she must have sensed his intention, because she held up a hand to stop him, while she regained her breath.\n\n\"Shut the fuck up, Mike,\" she said through heavy breaths, \"I know what you are going to say, but I don't just like to be good at things. I want to be the best. Now, you are going to stand there until I swallow this giant cock of yours and you are going to stop being such a fucking gentleman and enjoy it, okay?\"\n\nMike gave the only response appropriate to such a dressing down, and she seemed to appreciate the salute.\n\n\"Alright you fucker,\" she spoke directly to his penis now, \"You are going down.\"\n\nWith that she opened her mouth again, stuck out her tongue as a landing pad and took him in. Once more he met resistance at the back of her throat and once more she fought to draw him deeper. He might have pulled back, but suddenly her teeth were biting down on his shaft, almost to point of being painful. She strained, and he felt strained to watch her and then, with a slight gag she convulsed and he was suddenly through the barrier and deep in her throat.\n\n\"Fuck!\" He growled as she buried her nose in the curls at his base. He could feel her little pink tongue tickling his balls. She had taken his entire length inside her. She held him there a full ten seconds, which felt considerably longer for both of them, before releasing him.\n\nShe spat out thick ropes of saliva onto his seal-slick member and continued to wring her slippery hand up and down it while she took a breather. Mike was close now, teetering on the edge. It was beyond ordinary stimulation, it was a combination of the indecency of the act, her youth and innocent appearance, their proximity to danger and the abandon with which this sweet young woman was debasing herself for his pleasure. It was all too much.\n\nShe took him again, and he slipped down her gullet this time with hardly any resistance. As she did this she must have began to hum, he could not hear it over the music, but he could feel the small vibrations tingling his already overstimulated nerve endings.\n\nShe quickly worked out a rhythm, drawing him in deep and allowing him to fuck her throat, then taking a breather while she pumped his shaft in both hands. He hardly had time to appreciate this new found expertise, however. When she sucked him down for the fourth time he felt final shift in equilibrium from which there could be no return.\n\nIt was at that moment that, out of the corner of his eye, he saw the curtain at the edge of the stage twitch before a head appeared underneath it. Mike could no more have stopped himself unravelling inside of Becca's throat at this point than he could have reversed the rotation of the Earth. \n\nWhile this was happening he saw the head under the curtain resolved itself into a figure of a boy, swiftly followed by another. They crouched on the stage and looked around guiltily. Mike watched in horror as their eyes traversed the room apprehensively, passing right over where he and Becca were partially recessed behind shelves and the wire fence. Mike's eyes were taking this in, but his body was lost to the world. Becca was opening her mouth to suck him down again.\n\nAs he felt the constricting ring of her throat close around him, the first pulse of his orgasms travelled up his shaft like it was going to ring the bell at a fairground high striker. Becca was clearly not expecting it, and even tried to flinch back reflexively as she felt the first jet shoot down her throat. But he held Becca's head tight against his groin with both hands, and he shoved himself unapologetically as deep into her as her could. Partly it was to stop her crying out and alerting the boys to their presence, and partly he just could not stop himself fucking Becca's throat.\n\nHe felt her squirm, her nails clawing at his hips as he unleashed a pulsating torrent of seed into her. He was still mindlessly thrusting the final remnants of his ball-draining orgasm into Becca's throat, when the boys stepped into a patch of light and he could make them out clearly for the first time. It was Tyson and Malcolm again, those little fuckers.\n\nFinally he regained control over his body and released Becca. She regurgitated him in a stream of thick spit and semen. As she felt back and gasped at the air, clearly having over extended herself by the expression in her wide eyes and the flush to her cheeks, he ruefully observed that they had now left their mark on yet another floor.\n\nDespite everything, Mike still had the presence of mind to immediately grabbed Becca and pull her behind a locker, obscuring them from the two boys, who were starting to cast about nervously, clearly up to something they did not want to be seen doing.\n\n\"What the f-\" she began, suddenly looking furious. But Mike clamped his hand down on her mouth and held a finger to his lips. Her eyes flared with anger, but then cooled as she gathered what he was up to. Her eyes, if possible, went a little wider when she heard the voice of one of the boys virtually shouting, \"Did you hear something?\"\n\n\"Relax, Mal,\" the other voice, clearly Tyson said, \"No one is going to come back here. They think they have it blocked off, but I told you it was still possible to squeeze past those speakers. The pigs won't be patrolling back here.\" Both boys were talking loudly over the music, and it carried clearly to where Mike held Becca.\n\nMike breathed a sigh of relief as he heard their voices move away. He released his hold on Becca. He expected to see a grim expression after how far he had pushed her, but he was surprised to see dimples framing her wicked grin. By now he knew that expression meant trouble.\n\n\"That was too close,\" he whispered into her ear, then asked, \"Are you okay?\"\n\nBecca snickered, smoothing the front of his shirt with her hands. \"I'm fine, amd That was fucking hot.\"\n\nHe stared down hard at her, \"Are you nuts? I nearly choked you and we nearly got caught.\"\n\n\"And?\"\n\nHe frowned quizzically, \"And, what?\"\n\n\"And, was that the best blowjob of your life?\"\n\nHe groaned and stared up at the wire roof of their cage, \"You're going to kill me, Becca.\"\n\nShe place a hand on his cock. It was still hanging loose, and still, remarkably, hard. \"Answer me, Mike, or I'll keep going until you shout my name.\"\n\n\"Fuck, yes,\" He held her head between his palms and stared hard into her grey eyes, dark flecked with blue at their centre, before adding, \"You know it was the greatest blowjob of my life. Congratulations, you have officially mastered the art. You're still fucking crazy though.\"\n\n\"Mmm hmm,\" she turned her back to him and, hiking up her skirt, and squirmed the thin cotton covering her backside against him, \"And I am just getting started.\"\n\nMike felt panic rise. He was trapped here with a horny teenager, seemingly turned insatiable with lust, and two others who could ruin his life just by turning their heads.\n\n\"Mike, you do strange things to me,\" she purred, \"I need more. I want to feel you inside me again.\"\n\n\"Fuck! Fuck! Fuck!\" He growled through gritted teeth. He was already rigid as a post from the sliding into the shallow depression in the material between her ass cheeks, this despite the ache from his recent climax. But, even for them this was too risky. The cage they were in could be seen into on three sides and the locker they were backed up against could only cover them from a narrow angle.\n\nClenching his teeth with the effort, he placed his hands firmly on Becca's narrow, yet still pleasing plump backside. She cooed first, then pouted when he pushed her gently, but forcefully away.\n\nHe peered around the locker nervously. He quickly spotted the two boys at the back wall of the stage. They seemed to be scrutinising intently a particular spot on the wall. Malcolm had his phone out and was holding it up.\n\n\"Mikey?\" Becca rolled her hips playfully in his hands. Then, jealousy noting that his attention was momentarily elsewhere, also peeked around the locker. \n\n\"Those little assholes!\" She practically shouted, and Mike had to put a hand over her mouth again and draw her back behind the locker.\n\n\"Quiet!\" He hissed, \"Do you want to get caught?\"\n\n\"I don't...\" she began in her normal voice before relenting and talking again, just above a whisper, \"I don't care, those little pervs will have just as much to answer for.\"\n\n\"Calm down, just tell me what you mean.\"\n\nShe took a breath as she physically calmed herself before saying, \"This gym is a new addition to the school. No more than ten years old.\"\n\n\"So?\"\n\n\"So, it cost the school a shitload and, when they built it they took every chance they could save some money.\"\n\n\"I repeat my previous question,\"\n\n\"So, they simply built it backing on to the part of the school that was already there, not bothering to build new walls or close up parts of the old one. On the other side of this wall are the bathrooms. Specifically, where those assholes are standing, used to be a second storey window to let in light into the girls changing rooms. Rather than brick it off, the cheapskate school board simply had the glass at the back of the stage painted black.\"\n\n\"Oh,\" Mike said, lamely.\n\n\"These peckers aren't the first to try this, but the senior girls take turns guarding it, and covering up any new holes that appear in the paint. We have petitioned the school board a thousand times to have it closed off properly, but they always claim they don't have the money, and yet the school football team seems to get an equipment upgrade nearly every year.\"\n\nShe let out a long breath through her nose, \"Those bastards are taking advantage of the fact that no one is supposed to be back here to spy on the girl's changing room.\"\n\n\"Oh,\" Mike said, and then, with anger when he realised his daughter might be one of the girls in that changing room, \"Oh!\"\n\nHe moved brusquely out from behind the locker, before realising his erection was still protruding like a proud bowsprit. He quickly turned back, tucked himself back into his trousers and marched off again. He was about to shout something at the boys, when he realised the futility of it. He was trapped in the cage and it would be their word against his. He bit down on his lip angrily. Then he noticed the back of the cage also had an entrance only, unlike the one they had come through, it was padlocked. He turned back to Becca. The boys were too absorbed in their voyeurism to notice him.\n\n\"Have you got keys for the other door?\" He asked her softly. She nodded.\n\n\"Good, give them to me and then stay here. I can handle this. It is probably not a good idea for us to be seen together, even under these circumstances.\"\n\n\"What are you going to do?\"\n\n\"I don't know yet, but I am going to fuck with them in some way and make their lives unpleasant.\"\n\nThere was a little pride in the tight lipped smile she gave him as she handed over the keys, holding up the one he needed to open the lock. Quietly as he could, and immensely assisted by the music, Mike managed to open the door and slide out onto the backstage planking. He was close enough to hear them now. Malcolm was speaking in his whiny nasal voice, saying, \"I thought you said it would be a sure thing. Why are we wasting time back here?\"\n\nTyson replied, \"It takes a little time to take effect. Just chill, man. This is too good an opportunity to waste. It'll look suspicious if we hang around. Just let it happen, we can go back and reap the rewards later, okay?l\n\nWhatever they were talking about, Malcolm did not look impressed, \"I don't get it, what are we supposed to see? The top of chick's heads while they pee?\"\n\n\"Fuck off, Man. This shit is hot. I swear, I've been in here a bunch of times and I have seen stuff you wouldn't believe.\"\n\n\"Oh yeah, like what?\"\n\n\"Let's just say it would blow your mind. Now keep that camera up, one of these chicks is bound to show us her ass.\"\n\nMalcolm was still grumbling to himself, \"I still don't see how this is better than internet porn,\" when Mike reached over and snagged the cellphone out of his hands.\n\nMalcolm yelped in surprise and they both whirled around.\n\n\"Oh God! Oh Jeez!\" Malcolm whined, \"Shit, he found out, Tye. I told you. I fucking told you.\"\n\nTyson was less rattled and he narrowed his eyes, and said, \"Shut the fuck up. I swear to God...\"\n\nMike didn't let him finish, he interrupted, \"Well, well, well, what have you little jerk offs been up to?\" He made an overt gesture of checking the phone and flicking over to the last recorded video. For the first few seconds it showed an empty toilet stall. The lighting was poor and fair portion of the screen was blocked out by the black paint on the window. Then, a blonde head, visible only from almost straight down, entered the stall. Mike watched only as far as to when she reached under her voluminous pink skirts, obviously to take down her panties, before he stopped the video. Malcolm was right, there really was nothing to see of the girl, but the top of her head.\n\nSadly and slowly he shook his head. \"This is pretty bad, boys.\"\n\nMalcolm flapped his lips in an attempt to say something, but Tye thumped him hard in the chest.\n\n\"What are you doing here? No one is supposed to be back here,\" Tyson spat out at him.\n\n\"I'm keeping my eye on the two of you. You look like you are up to no good.\"\n\n\"Shit! He knows,\" Malcolm blurted before Tye elbowed him again.\n\n\"Shut the fuck up! He knows nothing, he's just a nosy bastard in the wrong place.\"\n\nMike was glad he was having that effect on at least one of them, he struggled to take his serious side seriously himself, but something about the force of their reaction nagged at him. He put it aside, telling himself that, like all teenagers what they feared more than anything was humiliation.\n\n\"Now, now Tyson.\" He saw Tyson's slitted eyes widen a fraction at this, \"Yes, that's right, I know who you are. I know you too, Malcolm. I even know your parents. Who are they again, Kevin and Cindy, am I right?\" Malcolm swallowed so hard Mike could see his Adam's apple noticeably bob up and down.\n\n\"To be honest, they seem like nice folks, and I would hate to be the one to tell them their son is a sexual deviant who gets his kicks out of spying on girls sitting on the toilet.\"\n\n\"I'm not... I didn't...\" Malcolm sputtered.\n\nMike silenced him by holding out a hand, \"I'll make you a deal. I'll hang onto your phone for now and, if I find out you have been up to any other funny business I will be sure to show your parents what is on here.\" Mike looked at Tyson then, \"I'm afraid I've never met your parents, but I am sure the school principal, or possibly even the police, ar perfectly capable of communicating this to them.\"\n\nMike felt himself growing into his new badass role. Something about being deep throated by a gorgeous high-school senior seemed to bring out his heroic side.\n\n\"If, on the other hand, I hear over, let's say,\" he pretended to think a while, \"the next week or so that you two have been good boys I will make sure this gets back to you. It's drive formatted, obviously, but still usable,\" Mike waggled the phone in front of them.\n\nThey each looked to the other for an indication of what to do next. \"Capish?\" This sounded lame even to Mike's ears, but he was fully invested in his role now.\n\nTyson reacted finally and slowly nodded his head. \"C'mon, Mal,\" he said, \"let's get of here.\" While his actions might have made him look cowed, the vehement hatred his narrow eyes told a different story.\n\n\"Wait, no,\" Malcolm was visibly sweating, \"My phone.\"\n\nThrough clenched teeth Tyson hissed, \"There is nothing important on there. You hear me? Nothing really serious, just let it go. This guy knows nothing.\"\n\nMike smiled casually, \"That's right, Mal. I know nothing, unless I see you two again that is.\"\n\nAs Tyson dragged Malcolm away Mike again felt a strange tugging in the back of his mind when he saw that worry painted across Mal's face. Kids take their communication pretty seriously these days, but Mal seemed unusually concerned. Maybe he was just a nervous kid?\n\nHe did not have time to really consider it because, soon after they had slunk back under the curtain they had come from, Mike felt Becca's arms wrap around him from behind.\n\n\"Smoothly done, Officer Mitchell,\" The hair on the back of his neck stood on end as he felt her hot breath in his ear. \"What are you going to do with the evidence?\"\n\n\"Fuck if I know. Here,\" he held it over his shoulder to her, \"You take it. Maybe you can slip it back into his locker or something. I just wanted to scare the little punks, and I think I did that. Do me a favor though, before you do, make sure you download a shitload of gay porn onto it and hide it everywhere you can think of. Make it his background. Make it the picture that comes up when his mom calls him. That really ought to make him think twice.\" She took the phone and slipped it inside the pocket of the blazer she must have retrieved from the shelf after he had left her.\n\nMike continued, \"Those assholes deserve all the punishment we can give them, I heard Tyson bragging that he could have you simply by offering you some of the champagne he has snuck into the dance.\"\n\n\"Ha!\" She sounded genuinely amused, \"Why would I want anything to do with those pissants when I have a real man.\" then she laughed, \"Did they really sneak champagne in here?\"\n\n\"I'm not sure, I didn't actually see, but it sounded like it. We should probably do something about it...\" He trailed off as he saw the wicked grin growing on her face. She was playing with his tie now, drawing herself in closer to him with each passing moment.\n\nWhen she got in close enough, she stood on her toes and gave him a chaste peck on the lips, saying, \"You know, it turned me on something fierce watching you get all bossman like that. When are you going to talk to me like that?\"\n\n\"Only when you've been a very bad girl.\"\n\nShe blew softly into his ear and cupped his balls and rapidly growing hard-on and said, in a breathy whisper, \"And am I not being a bad girl now?\"\n\n\"Fuck, Becca, I can't. We have to get back out there.\"\n\n\"I think they can spare us a few more minutes. I'll tell you what,\" As she spoke she moved back towards the cage, towards a ladder built into the back corner he had not noticed until then.\n\n\"You can go back to the dance and watch a bunch of awkward teenagers ineffectually grope at each other on the dance floor or...\" As she spoke she slipped her hands under her skirt and, in a single swift motion, and shimmy of her hips, dropped her soaked panties to her ankles. Casually she stepped out of them, bending to pick them up, before tossing them underhand to him to snatch out of the air. \"...Or you can follow me up this ladder and enjoy the view all the way to the top.\"\n\nHe was still gaping, clutching the damp material in his hand, when she began to slowly, and deliberately, to climb up the ladder. His own body betrayed his best intentions, his nostrils flared to take in the hot, musky perfume seeping out of the panties he clenched tightly in his fist. It scrambled his mind and turned his core to liquid fire. He took another moment to breath in her scent even more deeply and then hastily stuffed the panties in his inside jacket pocket.\n\nMindlessly he followed after her. At the base of the ladder he looked up and caught her looking down at him, waiting. She gave him a wink and a grin, and then she began to climb again. With every unnecessarily bouncy step up he caught a glimpse of that perfect naked backside. His eyes fixed upwards, he was drawn inexorably up like he was caught in a tractor beam.",
        "When he reached the top, she was waiting for him on top of a metal gangway that ran above the stage. It was obviously constructed to give people backstage access to the over head lights, the curtains and the scenery backdrops. He could see evidence of these, obviously from previous productions. Tonight, it seemed the only thing in use up here were some colored lights that occasionally blinked on and off or changed hue, as part of the hall's disco effect.\n\nAs he came up to her level, Mike took in first her sensible schoolgirl brogues, then her stockinged legs. As he rose up he deliberately and cunningly, as he believed, aimed his head so that, it slipped under her skirt. Before she had fully realized it, he was kissing his way up her thighs, while still he was still half perched on the ladder.\n\nShe gave nervous giggle as he came to the nexus between her legs, completely unobstructed now that he had her little cotton panties stuffed inside his jacket pocket. His tongue brushed over her lightly, tasting her again. Then her thighs locked down on his head. He still flickered out his tongue, but she placed both hands on his head and, using her body weight, to push him down and herself away, she took a step back from him.\n\nWhen he looked up and gave her his best puppy-dog eyes she shook her head and smiled, saying \"I like your commitment, Mike, but we are moving onto better things.\" Then, she took his tie in her hand and tugged him up the last rungs to the gangway in a way that led him to end up on all-fours.\n\n\"Come, boy.\" She commanded. He hardly needed to pretend to pant like an obedient dog, in her hands he was one.\n\nMike padded forward two steps, then thought better of it as the grating he crawled on hurt his knees, and stood. He walked behind her, still being led by his tie. When he saw her disappointed expression he brushed her cheek with a finger and said, \"Don't worry, one of us is going to be down on all fours soon. It just won't be me.\" She arched an eyebrow at his presumption, but he saw a smile tugging up one corner of her mouth.\n\nShe led him out into the centre of the gangway. He groaned, he really should have know by now. They were high above the stage, and behind a row of bright lights. The curtains were only open a few feet, to allow the DJ extra room for his equipment, but Mike could see a dance floor writhing with dancing teenagers. He swallowed down hard. Could he really do this?\n\n\"I took her anal virginity overlooking a full church congregation,\" he argued with himself internally, \"If there is a hell I am already going there, so this can hardly make it worse.\"\n\nHe was rescued from himself, however, by Becca's decisive orders, \"Take off your pants, Mike.\"\n\n\"Uh,\" Mike rummaged around his mind for words to say.\n\nBecca gripped his belt, still loosely fastened from earlier and yanked it sideways, springing it open.\n\n\"Don't fuck around, Mike. I need to ride that dick right now. You just have to lie there. Capish?\"\n\nMike blushed, \"Shit, she had heard,\" he mentally kicked himself. He was already so wound up in her web he had no chance and, besides, his pants were already halfway down. Timidly he allowed himself to be pushed down backwards until he sat on the hard metal grating of the gangway.\n\nBecca stood up and kicked at his dress shoes, saying, \"All the way off, Mike.\"\n\nHe used his toes to shove off the shoes and then, with no small assistance from her, he removed his trousers and boxers completely. He still had on his socks, shirt and jacket, but the rock-hard appendage that always seemed to get him into so much trouble was now completely unfettered.\n\n\"Good,\" as Becca spoke she kicked off her shoes too. She then placed one of her small, stocking clad feet on his shaft and pressed down forcefully. Mike cursed as he felt the pad of her forefoot reform itself around the cylindrical shape of his cock.\n\nShe stuck out her tongue and bit down on it, beginning to slowly slide her foot up and down his length. Mike had never considered himself a foot-fetish guy, but he was fast beginning to revise that opinion.\n\n\"So, Mike,\" she said playfully, \"I think you've been lying to me.\" Mike gave her a wide eyed look of innocence that was almost entirely genuine.\n\n\"Last time when I told you I was saving myself for marriage and that you could only fuck my ass, you acted like you would just barely tolerate the inconvenience.\" Mike did his best to hide his smile now, he knew where she was headed.\n\n\"From my 'research',\" here she actually made the air quotes, \"I found out that a lot of guys really like anal. In fact, most guys spend their whole lives begging for it. You have a pretty good poker face, Mike.\" Mike shrugged noncommittally, resisting the urge to make a bad pun on \"a good poke-her face.\"\n\nShe was putting most of her weight on him now, making him squirm with a delicious combination of pleasure and discomfort.\n\n\"See! There it is again, naughty man.\"\n\n\"What do you want from me,\" he finally gasped out. All around him was the thump of music and the staccato firing of shouting teenage voices. He could see them clearly if he turned his head through the gap in the curtain. Was his daughter down there?\n\n\"I want to hear you ask me politely this time. I don't want to feel like I am the only fucked up one here.\"\n\n\"Please,\" he begged like a man dying of thirst asking to lick the dew off a muddy boot, not at all bothered that she had so easily turned the tables on him.\n\n\"Please, what?\"\n\n\"Please may I fuck you?\"\n\n\"And where would you like to fuck me?\"\n\n\"Your perfect, tight little teenage ass,\" The words came out in a sudden rush that, to him at least, sounded almost like a whine.\n\nBecca released her pressure on him, and said, \"There, was that so hard?\" then, looking down at him she giggled, \"Apparently it is.\" Mike now regretted he had not made the terrible poker pun earlier.\n\nSlowly she knelt down, her thighs warm on either side of his hips, and then began to hike up her skirt. Mike's breath caught when the skirt was raised to reveal her bare, hairless mons. It made her look even younger and more exposed. Mike felt some shame, but a far bigger effect was the feeling of stretching in his already overstuffed cock. He was definitely going to hell for this, but he was pretty certain by now that it was worth it.\n\n\"Wait,\" he said in a cracked voice. She gave him a very surprised look.\n\nHe was pretty surprised himself, as he was pretty certain all the blood in his brain was currently serving other, more urgent needs in his body.\n\n\"Here,\" managing to sit up and scrabble around he slipped off his jacket and slid it under his butt so that it stuck out on either side. As way of explanation he added, \"My ass already feels like its been in a waffle iron on this stuff,\" he banged a hand down on the grating below them, \"I can't imagine what it will do to your knees.\"\n\n\"Such a gentleman,\" She said as she resettled herself on her new cushion and placed both hands, one atop the other, on his chest. She looked like a cat who was about to be given a bowl full of cream.\n\nShe nestled her crease on to his shaft like it was a rail and she the locomotive. Then, with a little buck of her hips she tested it out by sliding up and down once in a languid stroke. She was still wet and slippery, and she moved over him with ease. It seemed to please her, it certainly pleased him.\n\nHappy with her new mode of transporting herself to higher realms of pleasure, she began to slide over him. First she rolled her hips in shallow little thrusts then, when as she grew more confident, and more aroused, she lengthened her horizontal pistoning.\n\nMike placed his hands under his head and arched his back slightly, feeling a build up of air in his lungs as he fought the urge to shout her name. Now each thrust brought her unbroken entrance over the mushroom head of his cock, teasing him with the possibilities, and sending flashbangs of pleasure through her.\n\nFeeling emboldened by the fierce lust in her expression as she gazed down at him, Mike reached out and flicked her tie away over one shoulder then, ignoring the top button, he began to pluck open the other buttons on her shirt to just below her navel. He needed to bare her newly budded chest, but he knew they had to be ready for a quick getaway too.\n\nSoon the white shirt was gaping. \"Fuck!\" He had to say aloud when he caught sight of the red, lacy demi cup bra that both framed and pushed up her small, proud breasts.\n\nThe sight forced him close his eyes for a second in an effort to reset his overloaded visual cortex and experience the sight anew.\n\n\"Do you like it?\" Becca asked, her hand raised to tweak one of the hard little nipples that peeked over the shelf of the virtually non-existent bra-cups.\n\nMike nodded vigorously.\n\n\"I like to feel the rough fabric of my shirt on my nipples. It keeps me in constantly aroused. Plus, it looks super cute.\" She looked both playful and proud as she gazed down at her chest, which was bobbing slightly with each twitch of her hips. Mike dumbly nodded his agreement again.\n\n\"I'm glad I finally have someone to appreciate it. God, if my parents knew I spent my pocket money on racy lingerie they would kill me.\"\n\nAll Mike could think was, \"Shit, she still gets pocket money?\" If anything the realisation only made him want to suck those peaked little nipples more desperately.\n\nBecca teased him cruelly, however, sliding close and pushing out her chest so that her ripe nipples were almost in his mouth, before sliding away again, leaving him straining like a collared hound.\n\nAlready Mike had to hold himself back with everything in his arsenal. He could so easily let go and send another surge of his seed spilling out over his own abdomen, but he knew, if he held on, he might once more pierce her perfect tiny anus, and that was worth suffering through anything, even this exquisite torture.\n\n\"I'm so close Mike,\" Becca cooed, \"Look at all those people down there. Just think, if something went wrong with the lights, if one of them happened to look up at the wrong time, they could so easily see us. We're out here, completely exposed. Doesn't that turn you on?\"\n\nMike had to admit to himself that it kind of did, but not like it did her. As she spoke he could see the flush rising in her cheeks. He could actually feel her making him slicker with each pass, he was so slippery now she had to hold onto the railing on each side to stop herself slipping off.\n\n\"God, I have to cum with you inside me, Mike. Are you ready?\"\n\nMike grabbed her supple little ass as it flexed and squeezed and nodded, uncertain as to whether or not he had actually started drooling with anticipation, or whether he was imagining it.\n\n\"K,\" she said through panting breaths, \"Lie still.\"\n\nMike obeyed.\n\nShe raised herself into a squatting position. One hand fumbled with his slippery cock, while the other held up her skirt. She had to pause to tuck a wave of thick dark hair, that fell across her face, behind her ear, before repositioning herself.\n\nShe was the picture of erotic perfection, in her fantastical mixture of school girl uniform and very adult lingerie, hovering as she was with her tiny asshole over his huge cock. She looked up to give him a sweet smile that nearly stopped his heart. She was lit by neon glow, the side of her face and hair alternatively turning yellow, blue, green and red as the lights besides them shone on the dancers below.\n\nTentatively she nestled his hood into the small depression just below her spread pussy. Carefully, ever so carefully, she lowered herself down onto him. Like last time, he truly began to doubt she could fit him inside her. His shaft bent and she bit down hard on her lip. Twice, after much straining and concentration, he popped free of her guiding hand and Becca had to start again, each time in a fit of giggles.\n\nMike just lay back and marvelled at her perfect beauty. Finally, leaning slightly forward so that Mike had to support her by placing his hands on her shoulders, she gritted her teeth and pressed, pressed and pressed, before piercing herself onto him in a sudden drop. She squeaked and Mike couldn't help but throw back his head, eyes closed and let out a roar. It felt incredible. His cock was being wrung out like a wet dish towel by her clinging insides.\n\nSuddenly reawakening to the situation he opened his eyes and saw her covering her grin with one hand. They both looked around nervously, but neither the DJ or the crowd below seemed to have heard his feral cry.\n\nBecca removed her hand and, still smiling, waved a finger in front of his face, mouthing, \"No , no, no.\" Mike was barely aware though. He was inside Becca's ass again and it was every bit the heaven he remembered it to be. He felt as if he were in a mold that had been cast around him, squeezing him so tight that motion was impossible.\n\nEnlivened with sensations, as if he had suddenly woken up in the body of some all powerful god, he reached for her, raising her skirt from where she had let it fall so that he could see where he was sunk into her. The tight ring of muscle bulged around him, clearly straining to encompass his girth. He could actually see a wet trail down from her inflamed pussy, now visibly puffy with arousal, to where they merged.\n\nHe was still only partially inside her, but Mike knew that if he lost concentration for even a second he would detonate inside her. He placed his elbows on the deck besides him and held out his palms. She placed her hands in his to push against them and slowly, like climbing down into a cold pool, she lowered herself onto him.\n\nIn this way she sank until the hair at base of his shaft was tickling the sensitive skin around her anus. They paused there a moment, him trying desperately not to shoot blast after blast of hot semen into her, and her to take in several deep breaths as she prepared herself.\n\nTestingly, he helped her to rise up slightly, then sink again.\n\n\"Are you okay?\" He asked. She nodded, and gave him a reassuring smile. Then, resettling herself on her knees cautiously, she pushed him back from here he was propped up on his elbows and kissed him deep and hard. As her tongue squirmed in his mouth and he fought to keep up with her ferocity, she began to rock her hips. He felt the clinging tug of her bowels with each little movement.\n\nThen she moved past him, resting her weight on her hands just beyond his shoulders, arching her back and finally offering her hard nipples to his tongue. He did not hesitate, opening his mouth wide and slurping in most of one small, tender breast. He used the flat of his tongue to run roughly over her resistant nipple. She whimpered and used one hand to lift his head off the metal grill and nurse it to her aching breast.\n\nAs she worked him in and out of her ass he suckled insatiably at her nipples. Impossibly, they seemed to grow even harden under his intense assault. Becca, still tight to the point of almost being uncomfortable, was finally dilated enough by arousal to impale herself, repeatedly without visible signs of discomfort, on his shaft.\n\nAs she moved, the gangway Mike lay on shook and bounced, swinging on the wire cables that suspended it. If Mike were capable of processing anything outside of their shared bubble of pleasure, it might have concerned him that something could go wrong, or that someone might notice that the lights above the stage had begun to shake.\n\nThe noises Becca was making were largely incomprehensible but, eventually, as he felt the tightness growing in her like a crossbow being wound up for release, she began to repeat over and over, \"I'm going to come. I'm going to come. I'm going to fucking come!\"\n\nMike bit down on the inside of his cheek so hard he tasted blood as he hung desperately from the edge of his self-control. The face of the cliff he clung to was crumbling and each bounce of her little round backside rent the earth with deep cracks, and threatened to calve the entire wall down, him with it, leaving him broken and scattered amongst the rubble in his ultimate release.\n\nSuddenly her nipple ripped free of his mouth with an audible pop, as she rocked back violently. She fell away, landing with her hands on either side of his knees, her knees spread wide and her small backside pistoning up and down. The hard sharp thrusts made her breasts jounce in the tenuous hold of her bra cups. Mike was mesmerised by the graceful, yet tortured movement of her body and the agony of pleasure stretching her face into what could have been taken for pain, heartbreak, or ecstasy. From the torrent of garbled sounds and cursing he knew it had to be the latter.\n\nMike heard the rattle and clang of the platform he now rode. The lights were visibly shaking and clinking. Someone had to notice soon, but Mike was stretched beyond the point of caring.\n\nIn a final effort, she took her weight on one hand, allowing the other to clutch desperately at her apex of her slit. Her flat hand was plucking in furious circles around her swollen clitoris, whipping it up into a frenzied state. Each circle dynamically shifted her taut folds, making her small entrance gasp at him with the same desperation as her mouth.\n\nAs she drew closer to her peak she began slam herself down on Mike with increasing force, shaking the gantryway to its very rivets. In the back of his mind Mike should have been worried that their slender support might not be up to this onslaught. Yet he had no will left to stop her. Becca, meanwhile, had attention only for her throbbing nucleus of bliss.\n\nMike was barely a part of it anymore, he was a shipwreck survivor, clinging to the slippery rocks, waiting for the final breaker that would plunge him into the depths. Then, it was as if the water around Mike had drained away and he was perched atop a rock surrounded by dry ground. The ocean of euphoria had drawn back into a single giant wave, curling high above him. Its shadow blocked out the light and it was falling, falling, falling.\n\nIn that perfect moment, time seemed to slow for Mike, it was as if he could feel the final degradation of whatever there was inside him that was holding him back.\n\nSomething burst deep in his core. Yet, when it came forth, it moved with the pace of flowing lava, giving him time to take in everything.\n\nAs he watched, Becca's grimace began to ease, and a peaceful look of contentment came over her. The muscles in her neck and jaw relaxed, and a small smile began to tease across her lips.\n\nMike took in her fingers, curled inwards and caught in the instant of sliding over her clitoris. Droplets of her wetness hung suspended in the air, having been flicked outwards by the rapid motion of her hand.\n\nHe had time to take in the dancers below, swimming through gelatinous time, caught mid-gyration.\n\nHe had time to notice the light fixed closest to them was now at a strange angle. In his stretched moment of time, Mike could see a nut making its final turn off it's bolt, slipping and releasing the heavy light from the frame that held it to the gantryway. It struck Mike as funny, in that instant.\n\nAs Becca planted herself deep on his shaft, her belly muscles knotted and her whole body came forward, ever so slowly forward.\n\nThe jet welling up inside Mike breached his urethra.\n\nAs the first drops from the wave that had loomed over him so large finally spattered his skin it was as if the time spell broke and Mike was hit with a physical force every bit as powerful as that imagined colossal wave.\n\nBecca slammed down onto him, crying out his name. Her legs involuntarily tried to close on her hand where the chain reaction she had begun had reached is zenith. She bucked forwards, her free hand slamming into Mike's chest, just as he arched himself up off the grating.\n\nHis body was almost painfully wracked into distortion by the force of the climax, he held his back and hips arched, lifting Becca a foot off the deck, as he spurted an unrelenting series of hot streams into her, his legs and back shaking with the effort of his locked muscles.",
        "Becca was barely hanging onto Mike. She was still uncontrollably clutching at her spasming sex, further inflamed by the heat now flooding into her back entrance. As she shuddered out her climax Mike barely felt her finger nails digging deep enough into his chest to draw blood.\n\nSo rapt were they in their shared moment of fusion that they barely even registered the loud crash and cries from the crowd below as the light they had shook loose from its mooring came crashing down on the stage far below them.\n\nBecca was still descending from the heights, when Mike first began to realise something had gone wrong. It was then that he began to process what he had taken in in the moments before climax. He whipped his head around and down and saw the crowd on the dancefloor shoving back from the stage, while the DJ was looking up, terrified, the shattered light now a smoking, sparking wreck in the centre of his crushed laptop.\n\nWorst of all, was the sudden, deafening, absence of music that now filled the hall. It was only interrupted by the cries and screams of panicked teenagers.\n\n\"Shit!\" Mike practically yelled. \"Shit! Shit! Shit!\"\n\n\"Mike, just give me a moment to catch my breath - \" Becca began to pant into his ear.\n\n\"Move!\" Mike spat at her, \"We have to fucking move! Right now!\"\n\nStill dazed by their encounter, Becca was slow to react, \"What? Why?\"\n\nMike did not want to waste time explaining things. He pulled himself up using the railing. He had to lift Becca with him, as he was still buried in her ass, his dick not yet relaxed. His legs were rubbery when he stood, but hers actually collapsed as he tried to set her down.\n\nA small part of Mike, the only part that was not screaming \"I'm fucked! I'm so fucked!\" Felt a little pride that he had just made a girl come so hard she couldn't stand straight. But the rest of him was already desperately looking for an escape route.\n\nHe was still so hard, he had to physically lift Becca up again to slide her off his shaft. Her body seemed to want to cling to his, and released him reluctantly and with a huge, and sudden slop of trapped semen. This too fell through the grating and must have splashed down somewhere on the stage below. More damning evidence to ensure Mike would lose everything and probably end up in jail.\n\nMike was scrambling now, trying to grab up his pants and jacket, and finding it impossible with the two of them standing all over it in the narrow space. Becca, meanwhile, had been mentally slapped into awareness by his sudden panic. She looked over the railing for the first time to see the devastated scene below.\n\nShe snapped into action, springing back so that Mike could finally gather up his clothes. \n\n\"Come on,\" Mike said, \"Let's get down the ladder before someone comes to investigate.\"\n\n\"It's too late,\" Becca was looking down and Mike followed her gaze, two teachers were already mounting the stage near the DJ's booth and turning towards the ladder.\n\nMike and Becca were still somewhat protected by the remaining bright lights, but not for long. When someone thought to turn on the huge fluorescent lights above the gym they would have no chance.\n\n\"Fuck! Is there another way down?\" Mike asked as he leapt and hopped his way back into his pants.\n\n\"No, there is only one ladder...\" She paused a moment just as Mike heard the first clang of a foot on a metal rung.\n\n\"Wait. I think there is something!\" She shoved him forward, in the opposite direction from the ladder, towards, what looked to Mike, like a blank wall.\n\n\"Where is it? Where is it?\" Becca spoke to herself as they moved down the gangway. As she moved she intermittently pushed Mike and worked on resecuring her opened shirt and straightening her crooked skirt.\n\n\"What are you looking for?\" Mike could feel the panic rising. This was bad. This was really bad. They could have killed someone. There were going to be serious consequences. Everyone he knew was bound to find out what they had been up to up here. Becca's dad would probably neuter him, kill him and have his corpse taxidermied so that he could use it as a target on the firing range.\n\nCarol would do worse.\n\n\"Aha!\" Becca exclaimed, snatching at something hanging off the side of the railing. Looking back, Mike could see the teachers had not yet made it up to the gangway, but they had to be getting close. He and Becca were now on the far side of it, in a dimly lit section that would have made it hard for them to be seen, at least for now.\n\n\"Here,\" Becca thrust something that felt like a complicated set of nylon straps.\n\n\"What is it?\" He asked\n\n\"A harness they used to lower in Tinkerbell for the Peter Pan production last year. I knew they wouldn't have taken it down yet. No one does anything in this school unless they receive a direct order.\"\n\nStill not understanding how this would help them in their present situation he sputtered, \"So?\"\n\n\"So,\" Her voice was starting to sound angry, \"You put it on and I lower you to the stage below. Sure, Tinkerbell was played by a 90 pound girl, but I am sure the rig has to have a wide safety margin. Get in.\"\n\nMike looked over the side, eyes wide, \"You want me to go down on this fucking thing?!\"\n\n\"Yes, or we are both fucked.\"\n\n\"What about you?\"\n\n\"Your concern is sweet, but trust me, I can handle this. I, at least, can explain why I am up here. I have keys, remember. You have no chance. Go now, or we both lose everything,\" she added before giving him a shove that nearly sent him toppling over the rail.\n\nThere was a clang behind them, and they both turned to see one of the teachers now stepping up onto the gangway.\n\n\"Go!\" She ordered, slapping at him in frustration. He suddenly realised there was no time to fiddle with the harness or put on his shoes. These he dropped over the railing. Then, feeling terror burning white hot behind his eyeballs, he stepped up onto the railing and swung one leg over. Then, sticking his arms into the harness and trying to hold as many of the straps as he could in his hands for safety, he swung out into empty space.\n\nIf his bladder were not still in its post orgasmic shut-down, he probably would have peed himself.\n\nFor a second he dangled there, high above the dark stage below. Then he caught a glimpse of Becca fiddling with a set of levers attached to the railing he had not noticed. She gave him a sad look before saying, \"It's such a pity.\"\n\n\"What?!\" He hissed as writhed with mounting terror in his loose harness high above the black depths below.\n\n\"You didn't get to fuck me on all fours like you promised.\"\n\nFlabbergasted, he began to respond, \"You are seriously fucked u...\" when she decided to flip the lever she held and he dropped with stomach-lurching suddenness, his last syllable extending into a high pitched wail.\n\nHe felt certain that he was about to break both his legs, or even die from the impact as he fell into blackness. Each passing instant he had time to consider what it would sound like when his own bones disintegrated, how it would feel when the landing liquified his internal organs.\n\nInstead, a little after he had become certain of his impending death, he felt the harness suddenly jolt, nearly yanking itself off his shoulders and out of his hands as he slowed almost to a stop. A brief time passed, as he swung pendulously from the rope, dropping at a more measure pace now, until he struck the ground without warning. He stumbled, but he had not landed hard after all, he had just not been ready for it and it nearly sent him rolling across the floor. He was able to catch himself though and, taking a moment to fumble around blindly for his shoes, he slipped them on, bent low and scurried towards the front of the stage.\n\nHe dropped to his belly and lifted up the edge of the heavy curtain to peek into the hall. The room was in chaos. Students were still running around, clutching each other, one or two of them were even crying. The teachers and chaperones were frantically trying to corral the kids out the emergency doors. They all looked shocked and far too busy to notice him sliding out from under the curtain, the same way Tye and Malcolm had gone, and dropping down to the floor below. He had chosen his spot fortuitously, as he found himself mostly hidden behind one of the large speakers.\n\nSuddenly realising he was in the clear. He dusted himself off, checked his fly to make sure he had left nothing hanging out, and then stepped out boldly into the melee. Immediately he began holding out his arms, waving and guiding students in the way he saw there other chaperones doing, as if he had been there the whole time. He was having about as much effect on the milling crowd as the others.\n\nHe kept looking up to the dark space above the stage where, even now, he knew Becca had to be. He felt a little relief that he could make nothing out through the shadow and the remaining three lights still in place. He knew he could do nothing to help her now, and he felt increasingly guilty about that. But, given what he knew of her boldness, authority and intelligence, he suspected that if anyone could wriggle out of the trap she had stepped into for him, it was her.\n\nJust then the gym lights finally flickered into life and the room was suddenly bathed in harsh fluorescent light. Suddenly cheap dresses and suits as well as badly made-up, partially smeared and tear streaked faces were all around him, the illusion cast by the dim lighting shattered. Now there were only gawky, panicked teenagers where once there had been confident young adults.\n\nMike was tall, standing half a head taller than most of the others in the room. It wasn't surprising then that one girl, looking more desperate and dishevelled than the rest, caught his eye from across the room and came shoving and bustling towards him. Her round face was blotchy and streaked with mascara from tears. Mike didn't recognise her until she was nearly upon him. It was Taylor, the friend Sara has disappeared with when they had first arrived, what suddenly felt like a long time ago. Clearly the incident with the light had seriously upset her. Mike had half a mind to tell her to pull it together, no one had actually been hurt and everyone was freaking out over nothing.\n\nShe was yelling at him though, before he could open his mouth, \"Mr Mitchell! Mr Mitchell! You have to come right now. We've been looking for you everywhere.\"\n\nMike felt a sweat break out on him at the thought that people had noticed his absence. Had they noticed Becca was gone too? Did they know? It had to be impossible.\n\nTaylor had him by the arm and was tugging him insistently. \"You have to come! It's Sara! You have to come now!\"\n\nMike was still trying to think of excuses he could make without incriminating himself, when his mind flicked back to the mention of Sara's name. His Sara. Was she in trouble? Suddenly Mike was no longer being pulled along by Taylor, he was running beside her, shoving people out of the way as they made their way to an exit. The fear he had seen in her eyes, and dismissed as the overreaction of a teenage girl, now spurring him into action.\n\n\"What is it? Is she okay?\" He demanded, as they shoved through into the foyer and then into the cold night air.\n\n\"I don't know. She is, like, really out of it. I think she's really sick or something.\"\n\nMike cursed himself for being away, seeing to his own pleasures while his own daughter had apparently needed him. He became aware that he was crushing Taylor's arm. She kept looking down at his hand, the discomfort registering plainly on her plain face. Obviously intimidated by his sudden aggressive manner she did not register any complaint. Realising this, he immediately released her and jogged besides her as they ran alongside the outside of gym, through the parking lot. He cast about desperately among the many figures that were now wandering aimlessly outside the gym\n\nThen, under the light of one of the parking lot lamps he saw them, three figures. One was a teacher of Sara's he vaguely recognised, the second was a girl he did not know, but she kneeling down and waving a hand ineffectually over the face of the third figure, who lay prostrate on the ground. Mike felt a spike of terror as he saw it was Sara. She looked dead.\n\nHer skin was pale, her bangs matted at the front. He took her to be lifeless from the limp way she was spread across the ground, half in some bushes. Her dress, which he had paid far too much for, was torn. One shoulder strap was gone and it hung down, revealing a padded white bra.\n\nMike felt desperate anger course through him. He rushed over, and nearly choked out tears of relief when he saw her head move and her eyes open slightly before closing again. He nearly threw a punch at the male teacher, simply for want of someone to lash out at.\n\nSensing his anger, the teacher took a step back and held up his hands defensively.\n\n\"What the fuck happened?!\" Mike demanded. Both of the two girls with him were too taken aback by his fury and cursing to say anything. The teacher did his best to calm him, replying in an unhurried voice, keeping his hands up in a calming gesture.\n\n\"It's okay, Mr Mitchell. She seems to be alright. She is breathing and her pulse seems to be normal.\"\n\n\"Are you a doctor?\" Mike spat the man. He didn't even look at him, he was kneeling besides Sara now, holding her clammy hand and trying to see into her nearly closed eyes. He could tell now that she was breathing, but she looked terrible, almost unrecognisable as his daughter.\n\n\"I am sorry, Mr Mitchell. It seems like maybe she, like a few of the other kids here, was drinking. At least that is what I can gather. It is something we can talk about at a later time though, perhaps you should take her home?\" The man's tone was questioning as he looked around nervously. No doubt the parents and students were starting to notice the miserable little tableaux. Mike could not have cared less, he was intent on Sara.\n\nLooking again, he could see a wetness to her mouth and dress. Her could smell it now too. Clearly she had been sick.\n\n\"This is bullshit. She wouldn't. She couldn't. He enfolded her limp hand in both of his and spoke to her, \"Baby, it's dad. Are you okay? Can you talk?\"\n\nThe teacher tried to speak to him again, saying, \"Mr Mitchell, She will probably be okay, but I really think you should take her home.\" No doubt the man was considering the image of the school. \n\nMike was felt himself about to rise up and punch the man when he felt a small hand on his shoulder. He glanced sideways and saw it was Becca. She had obviously got out of the situation he had left her stranded in atop the gangway.\n\nIt was astonishing the immediate calming effect her presence had on him. He felt as if she were the adult in this situation, and that with her arrival suddenly everything would be resolved somehow.\n\nBy her composure, she did not look like someone who was in trouble or about to be expelled. He wanted to ask her what happened after he left, but that would have to wait. He knew he could have been mad at her for dragging him away from the dance when he should have been looking after his daughter, but any chance of that evaporated when she gave his shoulder a subtle squeeze and said, \"I came as soon as I heard. What happened?\"\n\n\"I don't know,\" Mike replied, his voice cracking, \"Something happened to Sara. This asshole,\" he pointed to the teacher \"Thinks she is drunk, but she would never do something that idiotic. She knows better.\" But even as he said this he caught the look that passed between Taylor and the, as yet, unnamed girl.\n\n\"What is it?\" He demanded.\n\n\"Uh,\" Taylor hesitated.\n\n\"Spit it out,\" Mike spoke more gruffly than was strictly necessary. When he caught Becca's eye she shook her head a touch, but without reproach. He sighed, took a deep breath and tried again, \"Please if you know anything about what happened to her, I would really appreciate it. She is my daughter. I need to know what happened.\"\n\n\"She did drink,\" the girl Mike did not know suddenly blurted.\n\n\"Ruby!\" Taylor scolded.\n\n\"I'm sorry, but she did.\"\n\n\"That's not what happened.\"\n\nMike was about to shout out, \"Well, what the fuck did happen?!\" but he felt rather than saw Becca's continued attention on him. He breathed again before prompting, \"No one is going to get into trouble here.\"\n\nWhen the teacher looked like he was about to protest, Mike glared him down, the man's half raised hand fell back limp to his side.\n\n\"Go on,\" Mike urged.\n\n\"It was just a stupid dare. There was some kid going around with a bottle, offering a drink to some of the girls. No one was taking anything, but then Sara dared me to. I said I would if she went first.\"\n\n\"But then you chickened out,\" Ruby added.\n\n\"You did too,\" Taylor snapped back, \"Besides, she only took a sip. It was hardly like she could be drunk.\"\n\n\"Did you see anything else?\" Mike was digging his nails into his palm hard enough to draw blood, in his attempt to remain collected.\n\n\"Not really, we kind of went off in different directions after that.\"\n\n\"You were making out with Tony Harper, you mean,\" Ruby muttered, loud enough for everyone to hear.\n\n\"Ruby!\" Hissed Taylor.\n\n\"What?\" She protested, then, completely misreading the interest of the people around her added, \"He was Tricia's date. She is going to be so pissed.\"\n\n\"Girls, focus!\" His barked command stopped Taylor's retort. Mike felt the string that tethered his patience fray to its final chord.\n\nAfter a hateful look at Ruby, Taylor continued, \"Sara went to go and find Finley. That was the last time I saw her until the bomb, or whatever went off in there.\"\n\nIt took Mike a moment to remember that Finley was Sara's date, the one whose haircut seemed designed to emphasise his large and oddly shaped head.\n\nTaylor continued, \"We were near the door when it happened and we just ran out here. I lost Tony, but found Ruby and together we tried to call Sara.\"\n\nRuby joined in again, adding, \"We thought she might be in the bathroom or something, we wanted to tell her to get out. Only, she didn't pick up. Instead we heard something ringing nearby. We thought we saw something in the shadows. When we got close somebody ran off, crashing through the bushes, but we could still hear the phone, and we saw Sara's shoes sticking out and ran over.\"\n\nRuby finished, \"I saw Mr Davies and Mr Jones, they were trying to organise the kids who had run outside, so I called them over,\" She nodded her head in the direction of the man Mike had nearly punched twice. \"When I told Mr Davies what happened he ran off in the direction we saw the figure going. He hasn't come back yet.\"\n\nThe man, who by process of elimination, Mike deduced was Mr Jones, cleared his throat and added, as if to justify his presence, \"One of us had to stay and look after the girls. You know, to be safe.\" By his skeptical tone Mike guessed he did not believe the story about the mysterious figure in the bushes. To him Sara was just another dumb teenager who drank too much at a dance.\n\nMike decided to ignored the man entirely, before he lost all restraint. Instead he prompted, \"And Frodo?\"\n\n\"Finley,\" Taylor corrected, gathering his meaning.\n\n\"Whatever. Where did he go? I am going to kill that little turd.\" Mike growled, half rising and looking around, as if the boy might be standing nearby.\n\n\"Hold on,\" Becca spoke softly, but it gave him pause. \"Who gave her the drink?\"\n\n\"Ugh,\" Ruby gave a disgusted look, \"It was a bunch of dweebs I don't even know their names. One of them kept bragging about this fancy champagne he stole from his dad. He kept trying to get us to drink it. We all told him to get lost, but Sara said we should taste it, to see what all the fuss was about.\"\n\nThe subtle change to her story was not lost on Mike, but he decided not to acknowledge it for expediency's sake.\n\nInstead he looked up and, in the moment he met eyes with Becca, he knew they were coming to the same conclusion. His interest in Finley was gone in a instant. He had a good idea who was responsible for this now, and seeing the suspicion confirmed in Becca's look of realisation was all he needed.",
        "She must have seen the murderous rage spreading across his face, because she risked one last contact, taking his hand and lifting him up.\n\n\"Mr Mitchell,\" Even at this time she was able to keep up the pretence, \"You need to take Sara to a hospital.\"\n\n\"But...\" he began to argue, already planning the slow and painful way he would kill Malcolm and Tyson, even if he had to do it here in the school parking lot with a thousand witnesses.\n\n\"Now! She needs medical help, you don't know what they gave her,\" Neither of them were in any doubt any more that Sara had been drugged by now. When Mike was about the speak again, arguing he needed to help catch those little punks, Becca gave him a little shove and insisted, \"Go! I will handle this. They won't get away with it. Trust me.\"\n\nMike looked at her. He knew from the perspective of the others he should have no reason to believe a high school girl could do any such thing, but Mike knew Becca now. He knew that if she said she was going to do it she would, and better than anyone else could. He gave her a grim nod, squeezed her hand once, and then stooped to pick up his limp daughter.\n\nIf the teacher or the two girls caught the strange familiarity of the exchange, they gave no indication.\n\nThe next few hours passed in a blur for Mike. He could hardly remember bundling Sara into the back seat of his car, or the drive to the hospital. He remembered his panicked call to Carol, but not the words he said to her, nor those of the doctors and nurses he spoke to in the hospital.\n\nThe worst part of it had been the tedious hours he spent in the waiting room, anticipating the worst. Would Sara be okay? Had they poisoned her? Had they raped her?\n\nHe felt sure the hospital furniture would splinter under his white-knuckled grip, while he allowed all his rage and self-recrimination boil away violently inside himself over the sleepless hours that followed.\n\nIt was better when Carol arrived. She had dropped their son, Jack, off at her parent's house for the night. They sat side-by-side, hands intertwined fiercely in a way they hadn't done since they first started dating, back in college.\n\nThere was no recrimination from Carol. She was wonderful like that, and Mike wondered what she would have done if she knew the full story of where he had been. As he sat there he grew more and more uncomfortable in the realisation that he had had no chance to wash. If he could still smell Becca on him, surely his wife would notice it at any moment.\n\nThe girl seemed to have invaded his every pore. His skin still felt tacky in the places where their mingled fluids had dried.\n\nChrist, he still had Becca's panties in his jacket pocket! When he shifted in his seat he occasionally got a powerful waft of her rich scent. Even worse, each time it came he felt a renewed stirring in his groin, despite the fact that his oblivious wife was still clutching his hand. A hand which, he realised with burning guilt, had so recently been used to spread Becca open while he tongued her little clitoris to orgasm.\n\nHe really was an asshole.\n\nEventually a nurse came to let them know that one of them could go in and sit with Sara. She was not awake yet, but her stomach had been pumped and she was now sedated, but stable. Carol did not even have to ask, Mike nodded and she rose to follow the nurse. He was left behind, mired once more in his own dark thoughts.\n\nCould he have done something to prevent this? He had seen the boys with the champagne and could have confiscated it as he was supposed to. At the time he had thought it was silly, reminding himself of how he had been as a teenager. He had done some underaged drinking and to him it had not seemed like something worth ruining a kid's life over. If only he could have divined their true intentions.\n\nHe also might have followed Sara all night from the shadows, but he could not do that forever. She had to be able to make her own good choices. \n\nHe kept coming back to his decision to follow Becca backstage. That was where he had betrayed his family, and left his daughter to those wolves. But even that was not entirely true, if he had not gone with Becca he would not have knocked the light off the platform. The dance would not have ended so abruptly and Sara's would-be rapists might not have been disturbed before they were able to do the unthinkable.\n\nThat, at least, the hospital had been able to confirm, to Mike's immense relief. If she had actually been violated he was not sure what he would have done. He suspected that murder might have been the least of it, given mind-splitting rage he felt even contemplating the possibility. \n\nMike buried his head in his hands, it was all too much to consider. Deep down though, he felt the guilt had to lie with him.\n\n\"Mr Mitchell?\" The voice was one he did not recognise. It was a man's voice, and it sounded like it needed confirmation of his identity before it would proceed.\n\n\"Yeah,\" He said, slowly looking up. He saw the speaker was a uniformed policeman. He also had a female partner behind him. Mike visibly flinched back when he saw the figure accompanying them. It was Becca.\n\nShe looked tired. He could see dark rings were under her eyes. She looked even younger than he remembered, but perhaps that was the oversized sweatshirt and jeans she wore. Despite all this, she was still so beautiful it hurt to look at her.\n\nFuck! Did they find out what he and Becca had been doing? Had she told them everything?\n\n\"Mr Mitchell, I am sorry to disturb you right now, but we wanted to talk to about what happened last night.\"\n\nMike felt trapped, he wondered if he should run, but he could not leave Sara and Carol now. They needed him.\n\nHe risked a look to Becca, feeling a cold sweat breaking out on his body.\n\nIn the uncomfortable silence the policeman tried again, \"First of all, I just wanted to let you know that we have just had confirmation from the hospital that yourn daughter was drugged with GHB.\"\n\n\"It is a date rape drug,\" the female officer interjected.\n\nThe male officer nodded. Mike expected to be taken aback, but actually found he appreciate their forthright approach. The man continued, \"We wanted to go over some details with you but, for now we wanted to let you know that we have taken two suspects into custody for the attack on your daughter. We are charging them with attempted rape, amongst other things.\"\n\nMike gaped like a landed fish, \"How?\" Was all he managed to get out.\n\n\"It all happened pretty quickly, largely due the assistance of Miss Williams, here,\" the female officer said, pointing a thumb over one shoulder at Becca, who had not yet met his eyes, \"She just finished signing her statement a little while ago down at the station, and asked if she could come down here with us to check up on her friend, your daughter. You both have a lot to thank her for.\" Becca visibly blushed when Mike's dumbfounded look fell on her.\n\n\"You see,\" The cop went on, \"She was right by the stage when the light fell, and was the first one up there. She was there even before the teachers and saw at least one suspect climbing down a rope that formed part of the stage set up.\" He looked to Becca, who nodded in confirmation.\n\nThe man, who was consulting a notebook continued, \"By the time we had arrived on the scene you had already left with your daughter, but Miss Williams was there to explain what she had seen. Her story was confirmed by the two teachers who claim they also saw someone climbing down from the platform above the stage. We might not have known the two incidents were related if not for Miss Williams.\"\n\nMike stayed quiet. He also had no idea how the two incidents were related, and he had been the cause of one of them. He felt sure that if they looked at his face now they would immediately be able to tell that it had been him climbing, or falling, down from the gantryway.\n\n\"Miss Williams then indicated to us that she had heard one of the suspects drop something in the vicinity of the stage, as he ran away, but had not had a chance to look for it. \" Mike was puzzled by this, but said nothing. \"We searched the area and found a cellphone which must have been dropped during the escape.\"\n\nMike's look shot back to Becca, who shifted a little uncomfortably.\n\n\"We found some pretty damning stuff on there, I won't go into all the details, but the suspect will probably be on the hook for a lot more than what they allegedly did to your daughter,\" Mike was very aware of the careful way the officer was phrasing the accusations.\n\nMike began a question, he needed to hear the identity being confirmed, but the officer preempted him, saying, \"The phone belongs to one,\" he consulted his notes again and read off the name, \"Malcolm Richardson. Do you know the boy?\"\n\nMike nodded slightly, but added nothing more. This seemed to be enough for the policeman, who continued, \"Well we brought it to him, ostensibly for what happened with the light, but really because Miss Williams informed us of a rumor she had heard about him and another boy going around offering girls, your daughter included, a taste of a champagne bottle they had with them.\"\n\nThe female officer added helpfully, \"This was confirmed by two friends of your daughter, who were also witnesses.\" Mike knew she had to mean Ruby and Taylor.\n\n\"The kid broke down and told us pretty much everything the moment he sat down in the interview room. He was able to give us the location of where they had tried to dispose of the bottle, in the bushes not far from where your daughter was found. The bottle was broken, but I am sure we can still pull prints off it. The boy blames it all on Tyson Hess,\" Mike was unsurprised when the police officer had no need to consult his notes to recall that name. \"Richardson said Hess came up with the plan alone, he was just going along with it out of fear.\" Mike could hear the dubiousness in his tone.\n\nThe man continued, \"Either way, it looks like both boys are in a heap of trouble. When your daughter is feeling up to it, we would like to take her statement but, to be perfectly honest, it seems pretty open and shut. We have all the evidence and, almost as important, we have the eyewitness account of several of Sara's friends, as well as this young lady here.\" Again he referred to Becca, who visibly colored under the scrutiny of the three adults.\n\nThe female officer spoke again, saying, \"From what Richardson suggests, The Hess boy got the drugs during a road trip he took south of the border with his pot-dealing cousin. He crushed them up and put them in the champagne with no good intention in mind. We suspect he was too dumb to know anything about dosage strength, because, from what the hospital just told us, he might have caused your daughter to overdose even on the small amount she imbibed.\"\n\nThe male officer held up his hands and said, \"Obviously we still have some loose ends to clear up. For one thing, the Richardson boy admits to everything except nearly killing the DJ with the light. He says has no clue how his cell phone ended up where it did. He, uh,\" The officer looked a little sheepish as he added, \"He said it was you who took the phone off him.\"\n\nMike schooled his face not to react.\n\nThe officer continued with a small smile, \"But we have the account of Miss Williams here, who says she saw you in a corner on the other side of the room right before the incident. We also have,\" He flipped through his notes again, \"A Miss Taylor Leone who places you in the hall, helping to organise the evacuation, just moments after the incident.\"\n\nThe man sighed before continuing, \"He's in deep this boy and I have a feeling that he is going to accept the first plea bargain we offer him and admit to everything, the light incident included, so I wouldn't worry about your involvement, Mr Mitchell. We would rather you focused on helping your daughter get healthy again.\"\n\nMike gave his most earnest nod.\n\n\"And that's it,\" The officer finished, \"As I said, We owe pretty much everything to Miss Williams and her vigilance. Without her we would not have caught those kids as fast as we did. Not that they would have got away, mind you, they are not exactly master criminals.\"\n\nAfter the police officers concluded there was little else to say. Mike unenthusiastically answered some more clarifying questions. He was wary of disturbing Becca's delicately constructed tissue of lies, so he kept his responses nonspecific and vague. He reinforced their misapprehension that he had had no involvement in the events and sought to play only the part of the aggrieved father.\n\nIt took only a few questions to satisfy them, then they sat in awkward silence while the officers waited to see if they could speak to Sara. Eventually Carol came out and met the officers. After a brief discussion between Mike, her, the police officers and the medical staff, it was agreed that they could talk to Sara briefly. But, only if Carol were present. Mike didn't fight it, he felt he probably should be there for Sara, but Carol was the lawyer after all and therefore the best person to be with her during the interview. He would have plenty of time to give Sara after this all calmed down. He would make sure of that.\n\nOnce everyone left the waiting room it suddenly felt very empty. It was almost a shock to realise he was now sitting alone with Becca again, separated by the vast chasm of the two vacated chairs the police officers had left. He resisted the urge to go to her.\n\nFor a long moment they sat in awkward silence. Finally Becca spoke, \"I am really sorry about what happened to Sara.\" There was a heart-wrenching sincerity in the hoarseness of her voice.\n\nMike took a deep breath before replying, \"Thank you, and, thank you for what you did.\" He furrowed his brows and asked, not a little bemused, \"What exactly did you do?\"\n\nBecca gave a small smile that only brought out the dimple on one side of her face. Mike saw that, but followed her gaze down to the toes of high-top sneakers, which she was twisting into the dull hospital carpet.\n\nShe began the tale slowly but sped up as it unfolded, \"So, After you and I realised that it had to be Tyson and Malcolm behind this I decided to make sure they would have no way of getting out of it. I also realised we needed someone to take the heat for what we did backstage. Who better than a couple of date-raping psychos?\"\n\nThey both looked away at this, neither willing to meet the other's eyes.\n\nBecca continued, \" After you left with Sara I went back into the hall, under the pretence of helping to sweep the gym for stragglers, or people hiding, and hid the phone close to where the harness you came down on lay. Then I simply waited for the cops. When they came to talk to me I made sure I was standing near the two teachers who nearly caught us,\" Here he found it adorable that she still had the modesty to blush, \"They overheard what I said to the policemen and confirmed it, as I suspected they would. They even backed up some details that I knew they could not have seen, given how far away they were and how bad the light was. After hearing my account they were suddenly one hundred percent convinced about the build and height of the escaping figure. Strangely enough, he looked nothing like you and bore a strong resemblance to a certain Malcolm Richardson.\"\n\nShe took a breath before continuing, \"Malcolm can deny that is how it happened, but the way I see it is that if he doesn't agree to that order of events the only other option is that he was in the bushes with Tyson and Sara. He claims that, after you confronted him, he got scared and backed out of his and Tyson's little rape pact. He says he went and hid in the boys' bathroom and it was Tyson who went off to go and find Sara. He knows nothing of what happened after that.\"\n\nShe must have seen Mike practically grinding his teeth in anger, because she held up a placating hand and added, \"Malcolm is a minor, and can't really get much worse than is already coming to him anyway. This way at least he takes some heat for the the light incident. Besides, I'm inclined to believe that Tyson was the real poisonous influence here, don't you?\"\n\nMike seethed a moment before giving a reluctant nod.\n\n\"Tyson is over eighteen, he has repeated a few years, no surprise, so he is going to face the full extent of the law. With Malcolm singing away like a canary there is no way he is going to get off. That, as far as I can figure it is a win. Or as close to one as you can get in a fucked up situation like this.\"\n\nMike shook his head in admiration. \"Thank you,\" he repeated, \"You really are a marvel, in every way.\" He meant it more sincerely than he had meant anything in a very long time. He saw a flash of her dimples again, but her gaze did not raise up to meet his. Not immediately anyway, when it did, she seemed a little taken aback by the pained expression he now wore.\n\n\"What?\" She asked, that shyness he did not associate with the Becca he knew, in evidence again.\n\n\"I appreciate everything you've done for me. I cannot tell you how much. You saved me and helped serve out justice to those assholes. I probably should regret the things we did together, but I simply can't. You are the most amazing, incredible, delightful person I have ever met and I,\" He felt strangely choked up, before he struggled on, \"and I wish that I was twenty years younger and unmarried, because then I could let myself fall in love with you.\"\n\nShe looked uncomfortable now, sucking in her bottom lip and looking anywhere but at him.\n\nHe ploughed on, before he could lose his nerve, \"I can't... We can't do this anymore. It's not just the age thing, or the marriage thing. My daughter could have been raped or killed. That is on me. I seem to be on a path to self-destruction and you are my kryptonite. I could drag my whole family down with me. I could drag you down with me, and I would hate myself even more if I did that.\"\n\n\"Mike,\" She was clearly trying to sound playful, \"Are you breaking up with me?\"\n\nHe let his silence be his confirmation. He let his head hang dramatically, knowing that it was the right way to end it. He had only to wait for her to storm off tearfully and leave him to his morose self-contemplation.\n\nAs ever, she surprised him. Suddenly she slumped down in the chair next to his. Her hand reached out and lifted his chin so that they were once again staring into each other's eyes. With her, each time they did this, it seemed as intimate as when he was deep inside her again.\n\n\"Oh, Mike.\" She shook her head and made a small tutting noise with her tongue, \"You really aren't too bright, are you.\"\n\nHe had no way to answer, his mind was too confused by her response.\n\n\"You had nothing to do with what happened, Mike. You did everything you could to protect your daughter. Sometimes shitty things happen, and the sins you commit are entirely unrelated. This is not the end, Mike. I do not accept that. What we have is something remarkable. I'm new to the whole sex thing, but what we have seems like the kind of thing most people only read about in books. As I said, there are no strings to this, and I agree there can be no future. But there is still now. I still want you, Mike, and I intend to have you. We will just have to be a little more careful.\"\n\nMike started to open his mouth, but she darted forward and placed her hot open lips on his, hungrily lapping at him with her tongue. Then, just as quickly, she drew back and curled up on her chair, cat-like in her pose and smugness.\n\nMike was once again, speechless in front of her.\n\nShe grinned her wicked grin once more and added, with a small pat to his cheek, \"You're mine Mike, you know that. I'm going to take what I need from you, and you are going to thank me for every second of it.\"\n\nThen she stood, placed one last kiss on his forehead and sauntered out of the waiting room. Helpless to do anything else, Mike watched the sway of her small, perfect, denim clad bottom as it disappeared down the corridor.",
        "He really was fucked, and he knew it."
    ],
    "authorname": "QSQuinn",
    "tags": [
        "anal",
        "teenager",
        "teenage",
        "voyeurism",
        "older man",
        "younger woman",
        "exhibitionism",
        "school dance",
        "public"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-daring-dance-dilemma"
}