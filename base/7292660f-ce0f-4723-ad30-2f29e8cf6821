{
    "title": "Return To Point Hollow Ch. 04",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n***\n\nPart 17 - Power vs. Power\n\nCharles Westbrook stabbed down with all of his power amongst the chants, the heat and light of the torches, and the incredibly foul stench that polluted the air.\n\n*GRAB!*\n\nI grabbed Westbrook's wrists and hands, desperately trying to stop the knife from penetrating the chest of the helpless girl lying on the alter. Westbrook was pushing will all of his physical power and will power, and I felt the evil of the demon working inside him, against me. All of my strength was not enough; the knife was lowering. I was losing...\n\n* * * * * * * * * * * * * *\n\nThey'd made a mistake. By tying the noose directly behind my neck, I knew that I had one very slim chance. I pivoted, doing an 'about face' so as not to shift my weight too much or leave the stone. I lined up with the one remaining torch by the fireplace, took a deep breath, tightened my neck muscles as much as I could by leaning forward against the rope, and totally committed myself by pushing myself backwards off the stone.\n\nSure enough, it began descending. But as I swung forward, I pushed my legs out straight, and caught the staff of the torch between my boots. The torch came with me as I swung back, and as I went forward, I tried to twist hard to get the torch into the fireplace. My back was screaming with pain, but I managed to get the torch into the fire. When I pulled back out, it was lighted!\n\nThe rest was easy. I doubled myself, my legs lifting up. My core was aching and my back was still screaming, but I got the torch high enough to light the rope of the noose. It burned through quickly, and I began falling. Dropping the torch on the stones, I executed a dynamite parachute landing fall, and was relatively unhurt.\n\nOnce on the ground, I worked my body and legs through my arms so that they were in front of me. I got the noose off, but knew I had to find something to cut the bonds on my wrists. I picked up the torch, knowing this would hurt, but...\n\n\"Come! This way!\" called out a woman's voice. I looked up. In the doorway was a young blonde woman, wearing a frilly electric blue dress that was standard ballroom wear in the 1880s. Her face seemed to be in shadow as I threw the torch into the fireplace and ran to her to unloose my bonds. \n\n\"Come, we must hurry!\" she said, taking my hand and not untying me. We ran together out of the house and across the front yard, towards the trail next to the River. It was odd; her hand on mine seemed warm, like a loving caress. But I still couldn't see her face. \n\nWe ran at the top of our speed. I was running as hard as I could, just to keep up with her. I could hear the chants of the Satanists, and heard Westbrook scream something about my crowbar.\n\n\"Go!\" the girl said as we reached the edge of the copse of trees. I ran on, my hands still tied. As the torches flared up to blinding brightness, I smelled the most foul stench I'd ever had the displeasure to smell, and I thought I saw something taking form right in front of me.\n\nI ran past the form and grabbed Westbrook's hands just as he was stabbing the knife down, and a desperate battle for a girl's life versus a demon's liberation began...\n\n* * * * * * * * * * * * * *\n\n\"In nomine Patris et Filii et Spiritus Sancti...\"\n\nI heard Father Romano's words. They cut through the sounds and the light and the evil I was fighting. I pushed up harder... and I began winning.\n\n\"NOOOOOOOOOOO!\" Westbrook screamed as I pushed his hands and the knife to the top of his reach. Then I began wresting it from his hands. As I did, the torches dimmed back to their original level, and the fetid odor, while still very present, lessened.\n\n\"DAMN YOU, TROY!\" screamed Westbrook as I took the knife from him. \"Get him! Kill him!\" The chanters were about to rush me. Almost without thinking about it, I grabbed Westbrook, and with one motion I whirled him over my head, and flung him into the onrushing sycophants!\n\nThe front row of people fell back as Westbrook's body crashed into them. I turned and grabbed my crowbar, now armed and ready for personal combat. Despite the bonds on my wrists and the pain in my back, I felt strangely calm and confident with my crowbar in my hands. \n\nAs Westbrook sank to the ground, the others readied to attack, screaming \"Get him!\" and other ugly, personal epithets. They began to advance...\n\n\"TOWN & COUNTY POLICE!\" yelled a voice. Suddenly, Officers were pouring into the clearing from all directions, led by Lt. Commander Teresa Croyle. They began making arrests. A lot of arrests.\n\nTeresa hurried up to me. \"Are you all right?\" she asked as she tried to untie my hands. Seeing that was not working, she brought out her short sword and easily cut my bonds. Other Officers were untying Mary Gabriel. Officers and medics were attending Father Romano and Dr. Mickelson.\n\n\"I'm... I'm all right.\" Father Romano said as Teresa went over to him at my direction. Teresa insisted that he let the medics make that decision. Then we all looked at Dr. Mickelson. He was unconscious, and being tended to by the medics.\n\nI looked over at the others. They were all being arrested and carried away... except Dr. Westbrook. He was still lying on the ground, being tended to by medics. I saw that they were giving him CPR, and I inwardly realized that he was now beyond their help. Instead of the demon being liberated, Westbrook had now joined his cousin Westboro and that demon in whatever Hell that had spawned them.\n\nAnd then, I looked up. To the north, I could see the moonlight seeming to emanate from the yard. And then I saw her, standing there.\n\n\"Wait!\" I called out as she turned away. \"Come back!\" I ran to the trail's entrance, but instead of Point Hollow, I was seeing a trail leading up to a stream, a faintly pastel bridge crossing it, a bench on the near side next to it. The girl was walking to the bridge, and the meadow beyond. \"Wait!\" I cried out again. She turned to me. \n\n\"You have freed me, Iron Crowbar!\" she said, her voice haunting, and seeming to ring throughout my head. \"You have released me from my curse to be damned to remain at Point Hollow! Farewell, and bless you!\" I felt a sense of desperation as I began to run out of the copse of trees to follow her...\n\n*KA-POW!*\n\nA bolt of lightning shot out of the sky and hit the yard right in front of me, knocking me back. I felt electricity pouring through me, but it was strangely not painful. I realized I was lying on the ground, on my back. Others were rushing out of the copse of trees.\n\n\"STOP!\" I yelled. \"Don't move! Don't come over here!\"\n\n\"What is it, Commander?\" Teresa yelled as I struggled to my feet. \"Were you hit?\"\n\n\"No.\" I called out. I went forward, and saw the scorched mark on the ground. I drove my crowbar into that spot, and it just stood there, marking the location.\n\n\"Get sonar!\" I yelled. \"I want the ground right here investigated!\"\n\nMy Officers, led by Lt. Cmdr. Croyle, also approached. They may have thought I was crazy. At that moment, they may have been right. \"What are we looking for, sir?\" Lt. Rudistan asked as he approached me. \n\n\"Evidence of a crime, Mr. Rudistan. Evidence of a crime.\" I replied. \"We are looking for bones, for a person buried right here.\"\n\nFor a moment, no one moved. I yelled out \"What are you waiting for? Sonar!\"\n\n\"YOU HEARD THE MAN!\" yelled out Teresa Croyle. \"Let's go! Get sonar and search that spot! Rudistan, do whatever you have to do, but get Commander Troy to medical attention!\" Officers got their rears in gear, and activity began anew...\n\nPart 18 - Aftermath\n\n2:00am, Sunday, October 6th. I was at my Police SUV, which somehow had moved up to the end of the drive at the front of the house. Teresa was making her report.\n\n\"Everyone here,\" she said, \"everyone except you, that is... is reporting that they were standing at their posts, then woke up realizing they were lying on the ground... and that it was two hours later. We found Commander Ross near the entrance to the property. She was still unconscious, lying on her side. You said that you were being TASERed, but remember seeing her being thrown out of the car and landing on her side. That would make sense; she has a concussion, and her ribs are hurting though none are broken. She's at the Hospital now, trying to get out of there while the doctors are trying to keep her there. My money says she'll win that one.\" I vigorously nodded in agreement.\n\n\"Next,\" Teresa said, \"the medic that looked at you said there is a burn mark on your back, right at the spot where your bad vertebrae are... but there is no damage to your trenchcoat, shirt, or the 'girdle' you were wearing. I don't how you got TASERed, but whatever hit your back passed right through everything without leaving a mark.\" I nodded.\n\n\"They found the rope hanging from the ceiling, the noose on the floor, the weights and the rock blocks you described.\" Teresa said. \"They think your SUV was driven up here by Westbrook with you unconscious in it. Your badge and gun were inside, sitting on the seat. Why they didn't take them, I don't know, but they didn't.\" I nodded.\n\n\"Mary Gabriel seems to be physically unharmed.\" Teresa said. \"But she was admitted to the hospital, and I suspect someone in your wife's line of work will be needed to talk to her. She was hysterical, and was sedated.\" I nodded.\n\n\"Father Romano was beaten up pretty badly, but should be okay.\" Teresa said. \"He said he and Dr. Mickelson were taken from the Biology Building, were knocked unconscious after being put in a black van, were taken to a dark, windowless room, and the perps tried to get him to tell what Mickelson had told him in confession. But he didn't break.\" I nodded.\n\n\"Dr. Mickelson was rushed to the hospital.\" said Teresa. \"He was beaten very badly, but Dr. Morgan thinks he'll recover... physically. No bets are being taken on his state of mind. He's been mumbling and softly ranting a lot, and he's not coherent.\" I nodded.\n\n\"Dr. Charles Westbrook... is dead.\" Teresa said. \"Martha thinks he had a heart attack when you stopped him from stabbing that girl to death. We've arrested all the sycophants, there were sixteen of them, and we are interviewing them now at County Jail. Most are talking pretty freely. Lawrence Evans and Gary King have been separated from them and are in isolation and suicide watch. Lawrence is almost demonic himself right now. We're keeping King separate because you, Father Romano, and many others are saying he and Lawrence were helping Westbrook kidnap people and leaving others, particularly you, hanging.\" I nodded.\n\n\"We're going to ask you to get in front of a camera again and repeat your entire story, in the morning.\" Teresa said. \"I'm sure you understand that it's a bit fantastic, and we want to hear it again when you're calm, and the adrenaline levels are down.\"\n\nI chuckled. \"Yeah, I get that.\" I said. \"Any sign of the FBI?\u2028\n\n\"No one on the other side of the State Line.\" Teresa said. \"We haven't contacted them yet, though Tanya is leading the Detectives in the questioning at County Jail, so I'm sure Jack Muscone must know.\"\n\n\"It's all right if he does.\" I said. \"He's one of the good guys. Don't say anything to anyone else----\"\n\nJust then Chief Moynahan came up, accompanied by Lt. Rudistan, who was carrying my red crowbar. \"Well, Commander Houdini,\" said Rudistan with the most jovial of grins. \"Want a job with the Circus? As an escape artist?\" I chuckled. The Chief did not.\n\n\"I may need that job,\" I said, \"after the Chief is finished with me.\"\n\n\"How are you feeeelinnnng, Mr. Crowbar?\" asked the Chief.\n\n\"My neck is stiff.\" I said. \"And the soreness all over is going to set in in a few hours... when the adrenaline wears off.\"\n\n\"Sir,\" said Lt. Rudistan, \"we used sonar on the spot you marked. There are bones, human bones, about three feet down, and they're being excavated now.\" He handed me back my red crowbar. It felt warm to the touch, but not as hot as the red crowbar with which I engaged the Slender Man in personal combat.\n\n\"How did you know?\" asked Teresa. \"And whose bones are they? Oh, and what were you chasing after when you went running to the yard, right before the lightning hit?\"\n\n\"You didn't see it?\" I asked, looking around. Everyone shook their head, no. I said to Teresa: \"You remember what you told me about when you were on the operating table, about the meadow and the bridge?\" Teresa nodded, and I said \"The girl I told you about, that led me out of the house and to Westbrook in time to save Mary Gabriel... she was crossing that bridge. I was seeing it as clearly as I'm seeing you now.\" Teresa nodded. \n\n\"And to that end,\" I said, \"I believe that the bones you've found are those of Nellie Blye Westbrook, who was slain in 1882 in a similar ritual to what they tried to duplicate tonight...\"\n\n* * * * * * * * * * * * * *\n\n7:00am, Sunday, October 6th. I was in my office, wolfing down the breakfast that had been brought to me from the 24-Hour Diner, and washing it down with Jerome Davis's Navy coffee. I'd just gotten a few hours of sleep, and did my three S's, then given my statement for the second time. It matched the first statement from the night before.\n\n\"I don't remember a thing.\" said Cindy. \"I was in your SUV, we'd just gone past the gate checkpoint... and I woke up in the E.R., being examined by doctors.\"\n\n\"That's what doctors do.\" I said whimsically. \"What I don't understand is why I wasn't affected. I remember being TASERed, seeing them throw you out of the car... then waking up with a noose around my neck.\"\n\nCindy said \"I'm going to remember that whenever I don't want to do sit-ups. Do you realize how hard it is to do what you did?\"\n\n\"I'm glad I didn't think about it when I was doing it.\" I said. \"It's like the story of the five math problems.\"\n\n\"What story is that?\" Cindy asked.\n\nI said \"There was a college student who arrived late for a test. There were three problems on the chalkboard in front, and two problems on the chalkboard on the side wall. He solved the first three problems easily enough, but couldn't get the two on the side board. When time ran out, he handed in what he had, then asked if he could have more time for the other two, and the professor agreed.\"\n\nI continued: \"He was working on the problems in his room that night, and he solved one but just couldn't solve the other one. There was a knock on his door, and it was his professor, who said 'You came in late, and I didn't realize it when you asked for more time. After I put up the three problems, I told the class that there were problems that were impossible to solve, and I put two examples on the side board. They weren't part of the test.\"\n\nI finished: \"The student then showed the professor that he'd solved one of them. And he later told people 'Do you think I ever could've solved that if I had known it was supposedly impossible to solve?'.\"\n\nCindy smiled. \"My father would love that example of positive thinking. And I'm glad you felt the same way about it.\" I shook my head vigorously in disagreement.\n\n\"No.\" I said. \"I was acting in sheer terror; I knew I had to stop Westbrook from killing that girl. That was my motivation...\"\n\n\"And for your own life, of course.\" she said.\n\n\"I never thought of that.\" I said. \"In truth, it didn't matter. If I'd died, I'd have failed in my duty. If I lived and had not stopped Westbrook, I would've failed in my duty. Saving that girl was all that mattered...\"\n\n* * * * * * * * * * * * * *\n\n11:00am, Sunday, October 6th. We assembled in Classroom 'E'. I'd texted ADA Savannah Fineman and she was present... as was DA Miriam Walters. Jack Muscone and Melina Allgood were the representatives of the FBI.\n\n\"Well, it's a mixed bag.\" said Lt. Jerome Davis. \"Some of the people we arrested were survivors of the chemical attack the other night. The ones that talked about it were in general agreement in their stories. What happened is that Guru Stevens was leading a Release of the demon ceremony, but there was no sacrifice involved. All they remember is that he had been burning incense on a pentagram at the Ritual Tree, when smoke began filling the woods, and they didn't remember anything else until they woke up in the Hospital.\"\n\nJerome: \"Two people would not talk to us: Lawrence Evans, and Gary King. Evans was almost rabid last night, and out of his senses, but seemed to have calmed down when he woke up this morning. But he immediately asked for a lawyer. Gary King lawyered up as soon as he was brought in last night.\"\n\n\"Did they get representation?\" I asked.\n\n\"Yes sir.\" said Jerome. \"Chip Blake, of Gresham & Mason, came in. He tried to say he was representing all of them, but I told him only two people had asked for lawyers, and until the others asked, we did not consider him their representation. Even so, he talked with Lawrence and Gary, and they immediately invoked when we came back in the room.\"\n\n\"You're on shaky ground, having done that.\" said Miriam Walters. \"If Blake said he wanted to represent all of them, then you're obligated to accept that.\"\n\n\"We'll see about that.\" growled Sheriff Griswold. \"And it doesn't matter; the others made their statements after being Mirandized and waiving their right to silence in giving their statements.\"\n\n\"That might fly with Judge Watts.\" persisted Miriam Walters. \"But Judge Nance will throw out all the charges and release every one of them if it's assigned to him... and it likely will be. It was a mistake---\"\n\n\"Ms. Walters!\" I said loudly. \"We'll burn that bridge when we come to it! Right now, I just want to know what happened out there.\" Walters glared at me, but stopped talking.\n\n\"So, Lt. Davis,\" I said, \"did any of the survivors say who else was out there? There were seven participants unaccounted for on the night Stevens was killed. Were any of them the ones that were there last night?\"\n\n\"We asked them about that, and asked the ones we arrested last night if they'd been there the previous time.\" said Jerome. \"We got a lot of 'I don't know' and 'I don't remember' out of them. We might have to offer some of them deals to get them to say more, but I think most of them really don't know, especially about the night Guru Stevens and the others were killed.\"\n\n\"Okay.\" I said. \"Keep working on them. Show each one pictures of the others, see if their eyes flicker or light up. Those that we know were at the Guru Stevens event, let them know they can be charged with murder, see if that puts the fear of God into them.\"\n\nI then looked around the room. \"Tell me about the toxicology.\" I said.\n\nTanya Perlman took that up: \"Sir, your blood test came up clean. Not even any painkillers for your back. Mary Gabriel had been injected with a tranquilizer, but it was mild and she has no physical aftereffects. Martha said the Dr. Westbrook had no drugs in his system, and that he died of a pretty standard heart attack.\"\n\nTanya: \"About half of the arrested students last night had traces of typical drugs in their systems: cocaine, codeine compounds, probably oxycontin there, marijuana. But no hallucinogens like the first night. And no residual chemicals found that suggests a gas attack or anything like that.\"\n\n\"What caused that foul stench that so many of them described?\" asked Chief Moynahan.",
        "\"We don't know, sir.\" said Tanya. \"We found no sulfur or other chemicals that give of those kinds of odors. That part is unexplained.\"\n\n\"Harumph.\" I said, then realized everyone heard me.\n\n\"You have an ideeeeaaah, Mr. Crowbar?\" asked the Chief.\n\n\"Nothing I'm willing to say out loud, sir.\" I replied. I did not want to say that that smell was the stench of Hell itself, and of the demon that was so nearly liberated onto this earth. I'd be considered to be a fool if I said that out loud...\n\n\"I have one question.\" said Melina Allgood. \"Why those particular people? Why them in this cult? What was it about them that caused Westbrook to want them in his group?\"\n\nI paused for a moment, then said \"Most of those people were down on their luck in some way. They all were psychologically weak, and Westbrook used that to dominate them and bring them into his fold. Some were into it wholeheartedly, some maybe not so much, or not realizing fully what was going on...\"\n\nPart 18 - The War At Home (and the Solution)\n\n5:00pm, Sunday, October 6th. I was sleeping on the sofa at The Cabin, lying on my side. When I opened my eyes, I was looking right into the face of a handsome Police dog. \"Hi, Bowser.\" I said sleepily, causing him to wag his tail. \"Are you watching me sleep?\"\n\n\"Yes, Daddy.\" said Carole, who was working on something along with Tasha and Marie on the floor. \"Bowser is making sure you're o-kay.\"\n\n\"That's good.\" I said, rising to a sitting position. My back ached as I reached out to pet Bowser. \"You're a good dog, Bowser.\" Bowser wagged his tail vigorously in agreement.\n\n\"Supper will be ready in a minute.\" Laura said. She, Paulina, and Molly were setting the table. \"Everyone will be here by six o'clock, so if you want to clean up, go do that now.\"\n\n\"Okay.\" I said. I headed upstairs, followed by the redoubtable Bowser.\n\nThe hot shower was very refreshing. Afterwards I shaved and put on some clean clothes. Then I heard banging in the attic room, followed by shouting. I decided to go upstairs and see what the boys were doing. Bowser did not attempt to follow.\n\nIn the attic room, a section of the railroad had collapsed, and Jim was haranguing Ian about it. It seemed Ian hadn't ducked enough when crawling under it. Ian was in tears, partly at the damage he'd accidentally done, but more at being yelled at by his older brother.\n\n\"Okay, Jim.\" I said quietly. \"That's enough. There's no need to yell at your little brother.\"\n\n\"Dad, he messed up this whole section!\" Jim complained. Ross nodded vigorously in agreement.\n\n\"Stuff happens.\" I said. \"Tornadoes damage towns. Yelling at your brother isn't going to magically fix it. Just help Ian start rebuilding it better than it was, and drive on.\" Jim nodded, and the boys got to work.\n\nGoing back to the main floor, I saw that Edward and Stephanie Steele had arrived, as had Franklin Washington and his wife Susie, Theo Washington and his wife Nareese, Teresa and Todd and their boys, and Cindy, Callie, and Betsy.\n\nDinner was hamburgers, hot dogs, 'fixins', and soft drinks and iced tea. Everybody ate well. Afterwards, people talked in groups. I had Theo and Franklin come out on the back deck with me. I started a fire in the pot, as it was getting chilly outside. I sat down in my place, with Franklin in the chair to my right and Theo in the chair in my left. I noticed that Tiger Mom and walked up the deck rail, and was now supervising, i.e. watching us.\n\nTheo said \"I've asked Franklin to fill you in on some stuff going on, sir.\"\n\nI said \"You guys know I don't want to get into your business, at least not a way to cause you any trouble. So with that in mind, what's going on?\"\n\nFranklin said \"It's D.A. Walters, Commander. \"Paulina doesn't want to believe Walters's actions are racially motivated, but I think they are. Walters was going to demote Paulina along with Gregory, to intentionally embarrass Paulina. She told several people that, people she thought she could trust, but a couple of them spread the word.\"\n\n\"Let me do something I normally hate,\" I said, \"and bring up a 'hypothetical'. If Paulina was all-white, do you think Walters would've acted differently? By that I mean, was Walters trying to do this to Paulina to keep Paulina down politically, while boosting up her crony Savannah Fineman?\"\n\n\"I think that's what Walters was hoping everyone would believe.\" Franklin said. \"And someone was also trying to leak to the Media that Walters was elevating me to chief ADA so it wasn't a racial thing. But there is no 'chief ADA', and I've also heard something else... when Walters decided to demote all of us to DDAs, she was not going to come back and promote me and Savannah, as someone leaked to the Media. Her real intent was to help Savannah win the Solicitor race, then she'd hire outsiders as ADAs over both me and Paulina. And if Savannah loses the Solicitor race, Miriam makes her the ADA over Paulina, and someone else over me.\"\n\n\"I'll also add this.\" said Franklin. \"Walters has not had a one-on-one meeting with Paulina since you put Peter Blassingame away. Not one. She meets with the rest of us individually every so often, but not once with Paulina for weeks.\"\n\n\"Hmmm.\" I said. \"That's a lot of intrigue. And people accuse me of creating drama in my MCD group.\" I glanced at Theo, who chuckled and exhibited his 'movie-star-handsome' grin.\n\n\"No sir.\" Theo said. \"We know you're not a racist, sir, and whatever you do is in the best interests of the Police Force and all of us. And I have friends here and there, too. I've been told that Walters and Public Health Officer Beth Paige are good friends, and both have political ambitions. They're also friends with Susan Weston, who is now on the Council. Susan Weston hates Captain Perlman with a passion. And what I've heard is that they've got a plan. I don't know what it is, but they're up to something.\"\n\n\"I see, said the blind man.\" I said. \"But who would Walters put in as ADA over you and Paulina?\"\n\n\"The name I've heard whispered around is Jenna Stiles.\" said Franklin. \"Another name that I've heard... is Gwen Munson, of Prodder, Ryder & Reems, P.C.\"\n\n\"Okay, then.\" I said. \"Please say nothing of this conversation to anyone, anyone at all. I'll see what I can find out. In the meantime, what are you going to do, Franklin?\"\n\nFranklin said \"You remember when Judge J.B. Stone was sent down to Coltrane County?\" (Author's note: 'A Case of Revenge', Ch. 06, among other places.) \"Well, we're getting that judicial slot back. And I've been considering running against Judge Harry Nance. If you know someone who could run as Magistrate Court Judge, you might want to have them run. I've heard that Judge Folsom is going to have you submit all warrant requests to the Magistrate Court instead of the Superior Court judges, which is more in line with how most of the State and Nation does things like that...\"\n\n* * * * * * * * * * * * * *\n\nAfter most of the guests had left, Cindy and Teresa came out on deck to talk with me. Teresa brought Scotch and three glasses, and poured us all a generous libation.\n\n\"To the new score.\" Teresa said. \"Iron Crowbar 2, Evil Spirits 0.\" She was also referring to the Slender Man encounter at Point Hollow.\n\n\"I'll drink to that.\" I said as we all clinked our glasses and sipped the Scotch. Well, I might've downed mine and poured another.\n\n\"Where's Betsy?\" I asked.\n\n\"The girls are having a lovefest with Bowser and Buddy.\" Cindy replied. \"So... now can you tell us what really happened with this case?\"\n\n\"Sure.\" I said. \"Just between us and the crowbars, though. Some of this is too strange to be discussed publicly in a Police Station.\" My Angels nodded their assent.\n\n\"As I've said before,\" I said, \"this case was in two parts. First was who murdered Guru Stevens and those others earlier in the week. And then the whole Westbrook saga, leading to the events of last night.\"\n\nI continued: \"If Lawrence Evans is to be believed, which is sketchy enough, there were at least seven more people at the Point Hollow scene than the six that died and twelve others that lived. Who were those people? I can't prove it, but I believe they were undercover Federal Agents.\"\n\n\"The Rovers BAU?\" gasped Cindy.\n\n\"Very possibly.\" I said. \"Or another unit working for or with the Rovers team. My reasoning for that is this: they apparently weren't affected by the chemicals that incapacitated the others. I can say that because they're likely the ones that injected the neurotoxins into Stevens and the others, then they hauled the 12 others across the State Line to sleep off the drugs that had knocked them out.\"\n\n\"Why did they leave them alive?\" Teresa asked.\n\n\"The slightly more accurate question is why Stevens and his people were killed.\" I replied. \"They were killed because the killers knew they'd been arrested earlier, and that several people, including Jack Muscone for Tanya and Melina for me, investigated them, especially Stevens, to make sure they weren't undercover agents.\" (Author's note: 'Balance of Power', Ch. 02.) \n\nI said: \"The problem is that someone is watching Jack's people in the FBI Office in the City, and possibly here. I suspect those people are the Swamp Frogs that control the Rovers BAU team. When they saw that Muscone was looking into Stevens, they just had him and everyone who was arrested with him killed the next time he took them to Point Hollow, either believing them to be a threat, or just simply as a precaution.\"\n\n\"Was he undercover?\" asked Cindy.\n\n\"I don't think so,\" I replied, \"but I don't know for sure. If he was, then that information was hidden from not only the FBI, but from Melina, who has, shall we say, 'enhanced' capabilities to find things out.\" Both of my Angels nodded.\n\n\"So while I can't prove it,\" I said as Teresa poured more Scotch into our glasses, \"it ties in with the second part of all this: Dr. Charles Westbrook. But let me go back to the beginning... 1882. Nellie Blye Westbrook was 18 years old. Someone in the family, possibly her own father, murdered her in a Satanic ritual. The demon was released, and he destroyed that property's ability to grow crops. The shrieks heard in Point Hollow were Nellie's, as well as others that died in the Hollow.\"\n\n\"Fortunately for Sophie Westbrook,\" I continued, \"she was not a virgin, so the Cult had to find another one, at least 18 years old. They found Mary Gabriel, and they followed her around to make sure she didn't go off and have sex with some guy, and thus ruin their plans. But she noticed them and made complaints to the Campus Police.\"\n\nI went on: \"Guru Stevens was part of the cult group that was using that website. I don't know if it was started by Westbrook, or if he came into it later, but he basically took it over. Stevens knew the Release was coming soon, and went to the Hollow to try to release the demon himself. But he either didn't know the full story, or he'd been told alternate facts... fake news.\"\n\n\"So Bettina's involved.\" Cindy said with a great deal of snarkiness.\n\nI chuckled. \"Sometimes I wonder. Sometimes I wonder. Anyhoo, Stevens and his gang were killed. They were in the way. Of whom? Of the Federal Agents that had been tracking Westbrook for years, and were hoping to finally catch him in the act this time. Of course, if I'd allowed it to be done their way, Mary Gabriel would be dead, Father Romano and Dr. Mickelson would likely be dead, and we'd have, pun not intended, one Hell of a mess on our hands.\"\n\nI finished up: \"I'll add that Westbrook probably has murdered other women in his quest to release the demon, and that is why St. Louis became too hot to hold him. The FBI had been after him for years, with probably several BAU units assigned to go after him... by Executive Assistant Director Dr. Robin Isley. She wanted the citation for Westbrook's capture on her wall, and didn't care who died to get it.\"\n\n\"Wow.\" said Teresa. \"Can I beat her head in, for putting Father Romano in danger?\"\n\n\"No.\" I said. \"I've got dibs. For what she said about Tanya.\" Teresa nodded.\n\n\"Well,\" Cindy said, \"you're right that we likely will never be able to get proof of the murders, unless Melina or Laura can dig up something we can't. But what you said about Westbrook and the rituals and all that... again there's no proof, but it somehow rings true...\"\n\nPart 19 - Federal Issues\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded MILF reporterette at 7:00am, Monday, October 7th, from the weather station overlooking Point Hollow. \"We are bringing you continuing coverage of the horrific events that occurred at Point Hollow Saturday night!\"\n\nBettina: \"The Police made over a dozen arrests after a cult group attempted to perform a ceremony that involved killing a young woman in a ritualistic sacrifice. The attempted murder was stopped by Police. Dr. Charles Westbrook, who was the first cousin of the late Pastor Raymond Westboro, died of an apparent heart attack after being manhandled by Police attempting to arrest him.\"\n\nBettina: \"Police Chaplain Alberto Romano and University Biology Professor Mickelson were kidnapped and beaten by the Cult members, and were rescued at the Point Hollow site. Father Romano is recovering from minor injuries, while Dr. Mickelson remains hospitalized. A young woman, who was kidnapped with the intent to be the sacrificed person, was rescued and is reported to have no physical injuries.\"\n\nBettina: \"Channel Two News has learned that the Town & County Police refused to work with the FBI on the case, despite the FBI's offers and requests to assist in the investigation. Reached for comment, Sheriff Antonio Griswold said that the FBI made a number of 'insincere' actions and statements regarding the case. He also stated that murder is a State crime, and not within Federal jurisdiction.\"\n\nBettina: \"And now let's go to trusted reporter Lester Holder with news on the Board of Inquiry. Lester!\"\n\n\"That's right, Bettina!\" said Lester Holder. \"Lawyers for the NEA, the powerful Teacher's Union, has appealed the stay issued by Judge Rodney K. Watts which ended a Board of Inquiry convened to determine if Commander Donald Troy committed Police brutality in beating up several persons who allegedly assaulted Fire Chief Warren Davies and another person. Those persons are being defended by the NEA's lawyers. Judge Watts stopped the Board of Inquiry proceedings after Commander Troy and the Police Captain's Union sued, citing anti-Police bias on the part of lead Commissioner Finneran.\"\n\nPenis Holder: \"The appeal accuses Judge Watts of delaying a ruling in order to, quote, 'run out the clock' on the legality of Boards of Inquiry, which will be replaced by Boards of Inquest in January under the guidelines of the new Town & County Charter... which were written by Commander Troy. Commissioner Finneran has announced his candidacy for the position of Inspector General, which will oversee the Boards of Inquest. KXTC has formally endorsed Commissioner Finneran for the Inspector General position. Back to you, Bettina!\"\n\n\"Thank you, Lester!\" said Bettina. \"And finally, the Town & County Council meets tomorrow night, and sources tell Channel Two News that the Council will debate Police Department structural changes. The Police are making yet more changes, even after the recent passage of the new Charter, but in a statement to KXTC Sheriff Griswold stated that they will not consider dispersing Detectives to the Precincts. As usual, Commander Donald Troy refused to respond to repeated requests by KXTC for comment...\"\n\n* * * * * * * * * * * * * *\n\n\"I can't respond to what they don't ask for.\" I said as we drank coffee in the Chief's Conference Room.\n\n\"They leave recorded messages on Captain Thompson's inbox, calling at 4:00am.\" replied Commander Cindy Ross. \"At this point, it's 'static'. Nobody cares.\"\n\nLt. Commander Teresa Croyle said \"Bettina made a huge effort to not mention your name in the Point Hollow rescue, Commander.\"\n\nCaptain Tanya Perlman replied \"I guess she doesn't want Commander Troy to have that citation on his wall.\" I chuckled at that.\n\nI said, pointing at the Sheriff, \"I'm wondering who this guy is, and what he did with Sheriff Griswold. Statements to the Press, Sheriff? To Bettina?\" Everyone chuckled, and the Sheriff's mustaches quivered just a little bit.\n\n\"Har.\" growled Griswold. Then he said \"There comes a time when we just have to say something to those Press bastards, and my ass is the one farthest up the flagpole. So I sent replies to a couple of Bettina's questions, even though they are questions obviously meant to create divisions and pit sides against each other.\"\n\nCindy asked \"Should I read a racial component in them having Lester Holder give the segment about the Board of Inquiry?\"\n\nI replied \"I am sure Bettina and KXTC would love to create that, but it's an uphill battle. None of the NEA-hired perps were black, Finneran is white, and there's just no racial 'there', there. It seems to me that they're positioning Penis Holder to be the anti-Police reporter, maybe to take Bettina out of that role, and maybe to slightly divert Holder out of exclusively race card issues.\"\n\n\"Sheriff,\" Tanya Perlman said, \"Don stopped Dr. Westbrook, the TCPD has been in front of this case from the beginning, but why take those shots at the FBI?\"\n\nI came to the Sheriff's rescue, and interjected: \"Because it's not over with them, yet.\" I said. \"They're still going to come in and try to take away all the people we've arrested, and Isley is going to try to salvage what she can from it.\"\n\n\"That's Iron Crowbar thinking, there.\" said the Sheriff...\n\n* * * * * * * * * * * * * *\n\nAfter their introductions, Catrina Pierce and Meredith Peller began their Fox Eight News report.\n\nMeredith: \"The Town & County Police broke up a Satanic cult ring, interdicting a ritual ceremony where the cult's leader, Dr. Charles Westbrook, attempted to murder a young woman as a sacrifice. The attempt was stopped by TCPD Commander Donald Troy, who physically prevented Westbrook from stabbing a knife into a young University college student, whose name we are withholding.\"\n\nCatrina: \"The Police report that Dr. Charles Westbrook was the first cousin of former First Baptist Pastor Raymond Westboro, who was allegedly the Consultant of Crime and the leader of a massive crime syndicate. Dr. Westbrook, who died of a heart attack at the scene of the crime at Point Hollow, had been a Professor of Psychology at two schools in Missouri, and was being investigated by the FBI for cult activities, as well as the murders of two women in Missouri.\"\n\nMeredith: \"And this just in: a set of human bones found on the Point Hollow property have DNA markers that lead Police to believe that the recovered remains are those of Nellie Blye Westbrook, who disappeared in 1882, and was still considered an active case by the University Campus Police. It is the oldest missing persons case to be successfully solved in this State's history, and credit is being given to Commander Donald Troy for finding the remains as well as suggesting that they were those of Nellie Blye Westbrook.\"\n\nCatrina: \"Police Chaplain Alberto Romano is also being praised by the TCPD for his actions during this crisis. He was kidnapped along with Dr. Mickelson of the University's Biology Department, and was commended for remaining calm during the situation and doing what he could to protect Dr. Mickelson. Commander Troy also issued a statement saying that Father Romano's faith and courage were a large reason for the successful interdiction of the criminals's actions.\"\n\nMeredith: \"And in other news, lawyers for six persons arrested by the TCPD for allegedly assaulting now-Fire-Chief Davies and a friend have filed an appeal to Judge Rodney K. Watts's stay of the Board of Inquiry into allegations of Police brutality. The Police Captain's Union and Commander Troy filed a lawsuit against the Board of Inquiry, after lead Commissioner Silas refused to recuse Commissioner Finneran despite being shown clear evidence of Finneran's bias against the Police...\"",
        "* * * * * * * * * * * * * *\n\n\"That was very nice of you to say that about Father Romano.\" said Teresa as we sat in my office and watched to begin the Angels Meeting.\n\n\"It was true.\" I said. \"Chaplain Romano's presence at the Biology Building and remaining calm may have prevented something really wet happening to Dr. Mickelson. And I'm telling you guys... I was losing that battle with Westbrook over the knife, and then I heard Father Romano praying, and suddenly I felt new energy coming into my body. Credit where due, people. Credit where due.\"\n\n\"How are Father Romano and Dr. Mickelson?\" Tanya asked.\n\n\"Father Romano is fine.\" said Teresa. \"He led Mass at the Catholic Church yesterday, and the other priests prayed over him. He's a bit bruised up still, but he'll be fine physically, too.\"\n\n\"Unfortunately,\" I said, \"I cannot say the same for Dr. Mickelson. Dr. Yates said his mental faculties were badly diminished by his experiences at Point Hollow. It is possible that he'll have to be committed to nursing-home-type care.\"\u2028\n\n\"The Asylum?\" Cindy asked, wincing.\n\n\"Probably University Hospital, since he's a tenured professor at the School.\" I said. \"But I suspect and fear that his days as an active professor are done.\"\n\n\"So what's going on with the FBI?\" Teresa asked. \"Is Jack Muscone going to be all right?\"\n\nTanya said \"I don't know, but I'll say this: he was at home with us all weekend, and he seemed happier and calmer than he's been in months. Jennifer and Tiffany loved the time they got to spend with him, and Pete was happy about it, too, I think---\"\n\n*KNOCK!* *KNOCK!* *KNOCK!* *KNOCK!* \n\nThe door opened, and Detective Julia Rodriguez looked in. \"Sir, Ladies,\" she said, \"Arthur Young is turning. He wants to talk about the World Outreach Church, in exchange for a reduced sentence.\"\n\n\"Let's go, then!\" I said happily. \"Let's make this happen before the FBI gets here...\" Everyone scrambled, not asking what I meant by that...\n\n* * * * * * * * * * * * * *\n\nI'd texted both Paulina Patterson and State Attorney Jenna Stiles, who came down to the Station. We'd also brought Arthur Young to Headquarters from County Jail, and his attorney, Mr. Gibson Stelling, was with him. Jenna had the power to sign a plea deal that would be binding in all jurisdictions in the State.\n\n\"I was a member of World Outreach Church.\" said Arthur Young. \"I got involved with Dr. Westbrook' group, more like a cult group, trying to raise the demon. At first he, Dr. Westbrook, said we were trying to bring Jesus back to earth, and then he said we were trying to raise the spirits of The Revelation. I actually believed it. But over time it became apparent that the spirit he wanted to raise was one of the most evil demons in Hebrew and Christian lore.\"\n\n\"What was Brother Terence Ballard's role in that?\" I asked.\n\n\"Ballard was a gangbanger in his youth.\" said Young. \"He was about to get busted down hard, then he copped a plea and ratted out his drug distributors for a light sentence, then founded the World Outreach Church and claimed to have found Christ and turned his life around. It was all a sham; he and the highest officers of the church were running drugs and arms, using the church to launder the money, and even having the church be neutral grounds for drug transactions between gangs.\"\n\n\"You have proof?\" I asked.\n\n\"Yes.\" said Young. \"Two years ago I found some seemingly small anomalies in the church's finances. I brought it to Brother Ballard's attention, and he said he'd look into it. He came up a day later, thanked me for finding the anomaly, said he was hiring a forensic accounting firm to find out more, and that my services doing the books were 'on hold for now' were his words. But I had made a lot of copies of the books, and later came up with the laundering scheme. I just left the church and kept the materials.\" \n\nHe nodded to his lawyer, who brought out a sheaf of papers from his briefcase, and handed them to Jenna Stiles. Young then said \"I've got the accompanying jump drives with that data in a safe deposit box. I'll hand that over after I'm sure I'm going to get the deal and walk away from all this.\"\n\nJenna Stiles said \"This looks good, enough to start.\" She and Paulina signed the plea deal.\n\n\"Okay, here's what you need to do.\" I said. \"You need to drive over to Westphalia, and turn yourself in to the SBI at their Headquarters, there. Try to do so to SBI Inspector Britt Maxwell personally, then Lt. Norm Chow, but turn yourself in to them. And you all need to be prepared to fight the FBI like hell to prevent them from taking you into Federal custody. If they succeed in getting you into Federal custody, you won't have a shot in hell of getting a plea deal of any kind, and you might even end up dead. Okay? Go.\"\n\nJenna was about to ask questions, but I said harshly \"We'll talk later! You're running out of time! Go! Now!\" Paulina whispered something to Jenna, who nodded. Arthur Young was quickly outprocessed, and left with Jenna Stiles.\n\n* * * * * * * * * * * * * *\n\nAnd he left just in time. Twenty minutes later, at 9:05am, three black Federal Government vehicles drove up to Police Headquarters. They were denied entrance to the gated employees parking lot, and had to park in the visitors parking lot on the right/north side of Headquarters.\n\nEntering through the front doors were EAD Robin Isley, with two FBI Special Agents I did not know as her bodyguards. SAC Bob Rovers, and Special Agents David Rovers and Peter Page also came in.\n\nWhat they did not know was that Assistant Director Owen Lange and Supervisory Agent Melina Allgood, who had been in one of the other black cars, were being permitted in from the jail side, and would be brought through the Interrogation Rooms. SAC Jack Muscone was not part of the entourage.\n\n\"We're here to see your Police Chief.\" said EAD Isley to the Duty Desk Sergeant.\n\n\"Yes ma'am, if you'll wait here, I'll call him.\" said the Duty Desk Sergeant.\n\n\"We're the FBI.\" Isley said. \"Take us to him. Never mind, I know the way. Come on, guys.\" She attempted to walk past the Duty Desk into the rest of Headquarters. Four heavily armed and armored Police Officers blocked her way.\n\n\"The Chief has ordered that you're not to be permitted past the front lobby, Dr. Isley.\" said the Duty Desk Officer. \n\n\"Is that so?\" Isley said sarcastically. \"Then call your Chief, and tell him that I am ordering him to come down here.\"\n\n\"Ma'am,\" said the Duty Desk Sergeant, \"you don't give orders here.\" He made no move to pick up the phone nor the radio.\n\n\"Looks like you have a problem, Dr. Isley.\" growled Sheriff Griswold as he came up behind the armored Officers, wearing an armored vest himself. \"You see,  *I*  am the law enforcement authority for this County. Not you, not the FBI, not the Federal Government in any way. And this Police Headquarters is off limits to you, solely on account of your goddamn bad manners.\"\n\n\"Do you know who I am?\" Isley said threateningly.\n\n\"Oh, we know who you are.\" I said, coming up next to the Sheriff, also wearing armor. I was also carrying a red crowbar, and aching to use it. \"What you don't know, because I don't display all my accolades on my wall, is that I have a few friends in high places, too. So we don't really care who you are. You are unimportant.\"\n\n\"Look.\" said Isley. \"I'm here in the hopes of reaching a peaceful understanding, and possibly restoring the cooperation between our entities that you had before. We're not the ones fully armored and doing the obstructing.\"\n\n\"But you know full well,\" I said, \"that Rovers and his BAU people are not welcome in my County, yet you ratchet up the agitation by bringing them in here? Unlike Bob Rovers, we are not idiots here, Dr. Isley.\" Rovers (both of them) looked at me hatefully.\n\n\"All right.\" said Isley. \"Sheriff, will you take me to see your Police Chief?\"\n\n\"Sure.\" said the Sheriff. \"But only you. The rest of these Agents will have to wait here in the lobby, or they can sit in the waiting room or the Press Room.\"\n\n\"Don't do it, ma'am.\" said David Rovers, who was probably the smartest of the Federal Agents in the room. \"They might murder you once you're inside and separated from us.\"\n\nIsley turned to Bob Rovers and said \"If anything happens to me, call in our assault teams, and erase this building from the face of the earth, along with everyone inside it.\" With that, she followed me and the Sheriff into the hallway past the Duty Desk. \n\nAs we walked to the Main Conference Room, Isley looked into Vice and then MCD, and saw that all of the Detectives were wearing armored vests over their civilian clothes. They were ready for an armed assault, and would fight back savagely if the balloon went up.\n\nWe went into the Main Conference Room. To Isley's surprise, Owen Lange and Melina Allgood were already there and seated. The Chief was at his usual place at the near end of the table, and to his left was Commander Cindy Ross, wearing an armored vest. I sat down to Cindy's left, and the Sheriff sat down to my left rather than the end of the table.\n\nIsley remained standing. \"So, Commander Troy, you managed to kill Dr. Charles Westbrook, destroying years of work by Federal Agents to bring him in and punish him for his crimes.\"\n\n\"So you'd rather Mary Gabriel be dead and Westbrook alive?\" I asked harshly.\n\n\"I'd rather they both be alive.\" Isley said, trying to avoid my trap.\n\n\"I'm happy with the result that happened.\" I said. \"An innocent young girl's life was saved. And I didn't kill Westbrook; he had a heart attack and died all by himself, so sorry. I don't think you give a damn about the girl, since all you care about is getting another citation on the FBI's wall, particularly yours.\" Isley stared daggers at me. I stared right back.\n\nShe took a document out of her pocket and said \"This is a Federal warrant for all of the persons arrested at Point Hollow to be turned over to the FBI's custody. The names are listed.\"\n\n\"Is that soooooo?\" growled the Chief. He passed the document to me.\n\n\"Well,\" I said, \"Mr. Arthur Young is no longer in our custody, but that of the SBI after we reached a plea deal with him. He's ratting out World Outreach Church. You'll have to fight the State to get custody of him. They're already in Court to block your Federal order, issued by Judge Ruth B. Taney, and likely illegal in the first place.\"\n\n\"It's not illegal.\" said Isley. \n\n\"We'll see.\" I said. \"But the SBI will be busting World Outreach Church, yet another citation that won't be appearing on your wall, Dr. Isley.\" Her eyes were smoldering by now, knowing that I knew we'd taken away another 'win' from her and the FBI. \n\n\"It doesn't matter.\" she finally said. \"We're taking over the cases. The scope ranges from the City to out of this State, to the west of Point Hollow, specifically. We're imposing Federal jurisdiction over it. You locals will have to step aside.\"\n\n\"Let it go, Crowbar.\" said the Sheriff. \"Trust me on this one. Let them have the prisoners, and wash our hands of this.\" Sheriff Griswold was the only man on the face of this earth that could've told me that and not had his ass handed to him. I did look back at him skeptically, and he patted me on the shoulder. I just shut up, shaking my head.\n\n\"I have to say,\" said Robin Isley, trying to have the last word, \"that all of the praise I heard about this Police Department... was wrong. You're crap. Over a decade of FBI work by many Agents was flushed down the drain with the death of Dr. Westbrook, at your hands, Commander Troy. Your mismanagement of this case is some of the worst I've ever seen.\"\n\nIsley: \"And I will be holding the praise of you by Muscone and Lange against them. There will have to be a restructuring of this division. And consider yourself to no longer be an FBI Consultant, Commander Troy. You'll find your access to the FBI's data cut off.\"\n\n\"Big whoop.\" I said. I took out my FBI Consultant card and flicked it across the table at her. \n\nTo my surprise, Melina jumped up and intercepted it. She then said \"Would you guys give me a moment alone with EAD Isley?\"\n\n\"What the hell?\" asked a stunned Isley. \"I have nothing to say to you, Supervisory Agent Allgood.\"\n\n\"Fine.\" said Melina. \"I'll do the talking, then.\" She looked over at us and said \"The rest of you should leave. Now.\" I got up to go, followed by Cindy and the Sheriff, and then Owen Lange. The Chief was the last to leave the two women alone...\n\n* * * * * * * * * * * * * *\n\nThe Sheriff and Cindy were in my office, having coffee as we talked. Chief Moynahan was in his office, having called County Jail to prepare to turn the prisoners over to the Federal Marshals that had arrived at County Jail when Isley had arrived at Headquarters. AD Owen Lange was in the Chief's office with him.\n\n\"I trust you like you trust me, Sheriff.\" I said. \"So why are you letting them take the prisoners? We might yet find out from one of the survivors of the Stevens incident that there were undercover FBI Agents there.\"\n\nThe Sheriff shook his head vigorously in disagreement. \"As brilliant as you are, Crowbar, you'll never get that to trial. The FBI would fight you all the way. As to the rest of it: you did right, you saved that girl, and the world is no poorer for the death of Charles Westbrook. But what are we going to charge the rest of them with? They can all say they didn't know Westbrook was going to try to murder that woman, that they were just practicing a religious ceremony, albeit a demonic one. Let the FBI waste the Federal Government's money on them.\"\n\n\"Isley was taking every shot at you that she could.\" Cindy said. \"What's with that?\"\n\n\"I think she is truly angry that Westbrook died.\" I said. \"She wasn't lying in that the FBI has spent millions going after Westbrook, and he was just too good for them. And then he comes to Point Hollow, and the TCPD ends his string of murders in the name of releasing demons. She's trying to blame me for his death, too, but that's not gonna fly.\"\n\n\"What do you think Melina is saying to her?\" asked Cindy. I just grinned.\n\n\"Dr. Isley is about to find out that true power does not accumulate from the number of citations upon one's wall.\" I said...\n\n* * * * * * * * * * * * * *\n\n\"You're not going to have a job with the FBI much longer, either.\" snarled Robin Isley as she and Melina squared off in the Conference Room.\n\n\"Yeah, right.\" said Melina. \"In the immortal words of M.C. Hammer: 'you can't touch this'. I'm not even going to discuss it with you...\"\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was Melina's cell phone, and she answered it. Then she handed it to EAD Isley and said \"It's for you.\"\n\nIsley took the phone and said angrily \"Hello? Who is this?\" Her eyes widened in shock, then resignation as she listened for a long minute. \n\n\"Yes, Mr. President. I understand.\" she finally said...\n\nPart 20 - Council Intelligence\n\nThe door to the Conference Room opened and EAD Robin Isley rushed out as if fired out of a cannon. She went to the Chief's office, knocked on the door, and went on in. A moment later, she, the Chief, and AD Lange came into the hallway and the door to the anteroom of my office.\n\n\"I'm still taking custody of the prisoners.\" said Isley.\n\n\"Yes, we're giving them to your Federal Marshals nowwww.\" said Chief Moynahan. \"Commander Troy, would you escort Dr. Isley to the Duty Desk, please.\"\n\n\"Yes sir.\" I said dully as I got out of my chair. Cindy noticed what I had in my hand as I went out of the office.\n\n\"It's too bad we've gotten off to such a bad start, Commander.\" Isley said as we walked down the long hallway. \"I hope we have opportunities to repair the damage, and work better together in the future.\"\n\n\"That makes one of us.\" I said quietly. As we neared the corner of the hallway and the duty desk beyond I stopped and pointed. \"Right through there.\" I said. I turned as if to go back to my office.\n\n\"Fine.\" said Isley. But as she was about to walk forward, she found her path blocked... by a red crowbar across her chest.\n\nLooking at her sideways, I said \"One more thing. If you ever call my Captain of Operations within my hearing what I was told you called her...\"\n\n\"Are you threatening me?\" Isley said, her voice rising. \"I'm a Federal Agent----\"\n\nI jammed my crowbar into her neck and pushed her against the wall, choking here. \"Yes, I'm threatening you.\" I growled. \"Make of it what you think you can. But I swear to God that if you say that about Tanya Perlman again, I will kill you. Do you understand?\"\n\nIsley was making choking sounds, and her hands were reaching behind her back. Then Melina came around the corner and jammed her own gun into Isley's side.\n\n\"Don't even think about drawing that gun.\" Melina said to Isley. \"The Iron Crowbar is being very nice to you right now. But if you want things to get ugly, just go for that gun.\"\n\nI removed the crowbar from Isley's neck, and she sucked in lungfuls of air. \"Now get out of my Police Station.\" I snarled. \"And don't come back.\" Isley made like a drum and beat it out of there as fast as she could go.\n\n\"You want this back?\" Melina said as we walked down the hallway together, holding up my FBI Consultant badge.\n\n\"I... I dunno.\" I said.\n\n\"Please, take it back.\" said Owen Lange, coming up the hallway. \"We need you... to fight against people like Isley.\" I took it back, knowing I could always give it up again later...\n\nThe Chief and Sheriff then came out of my office. \"I just got a call from Mayor Allgood.\" said the Sheriff. \"The Council's Committee of the Whole is meeting at 11:00am, to discuss the Intelligence Branch, and he wants you and Captain Perlman there, along with us.\"\n\n\"Let's make like trees and leave, then.\" I replied.\n\n* * * * * * * * * * * * * *\n\n11:00am. The Committee of the Whole assembled in the private Council Chamber. Cindy, myself, Sheriff Griswold, Chief Moynahan, and Captain Tanya Perlman also were there.\n\n\"We-ell, Commander Troy.\" said Reginald B.F. Lewis enthusiastically as I came in. \"I guess you now know how it feels to be lynched, to have a noose put around your neck and hanged... like so many black men in this Nation in the past.\" There were gasps of shock at Lewis's rudeness.\n\n\"Put the race card back in your pocket, Lewis.\" I replied. \"And tell everyone how happy you are that I survived.\"\n\n\"You won't hear me saying that.\" said Kelly Carnes menacingly. \"I wish you'd died.\"\n\n\"Don't listen to Carnes, Crowbar.\" Our Sheriff growled. \"Her words are... unimportant.\"\n\n\"You got that right, Sheriff.\" I said. We sat down in the chairs against the (left) side wall.\n\n\"Okay, let's get started.\" said Mayor Allgood, tapping his gavel. \"Shall we hear from Captain Perlman first?\"\n\nTanya drove her wheelchair past the far end of the table but to one side, so that her PowerPoint presentation could be seen on the projector screen in front of the back wall. \"Thank you, everyone.\" she said cheerfully. \n\nAfter going through the basics of her proposal, Tanya said \"The recent case of cult rituals and deaths at Point Hollow are a perfect example of how the Intelligence Division would work. While our Detectives did very well mining data, it would've been even faster and more efficient if the dedicated Intelligence Division was in place.\"\n\n\"So this proposal adds another Lieutenant slot, and just more overhead.\" said Susan Weston disdainfully. She deeply hated Tanya Perlman; Weston had been a Precinct Captain with the TCPD until she'd drawn the ire of Your Iron Crowbar over her treatment of then-Lieutenant Perlman. (Author's note: 'Case of the Paper Trail'.)\n\nTanya did not even bother to reply to Weston, so I spoke up: \"Yes, it adds another slot, but it will be filled in slowly, over time. Lieutenant Mary Milton will make the lateral move, but will continue to oversee Vice with Detective Sergeant McGhillie until the Intel Branch is fully filled out.\"",
        "\"So this will present opportunities for Uniformed Officers to be assigned to MCD and Vice?\" asked Reginald B.F. Lewis craftily.\n\n\"It'll give the Uniformed Officers opportunities to get on the Detective track earlier.\" said Tanya. \"And it'll give us chances to evaluate them for better opportunities overall.\"\n\n\"And when this is implemented,\" continued Lewis, \"the Detectives can be dispersed to the Precincts?\"\n\n\"They already are.\" said Tanya craftily.\n\n\"What?!\" Lewis almost shouted as others gasped.\n\n\"Oh, their desks are still at Headquarters.\" Tanya said. \"But with Intel Officers looking up data for them, the Detectives will be out in the field, all over the County... from Point Hollow to the Observatory to McGill Lake to Junction Station, investigating the crimes that perps are dumb enough to commit in our County.\" There were some chuckles at that, and even Reginald Lewis took it in stride with a grin... but Susan Weston looked hatefully at Tanya.\n\nMalinda Adams spoke up: \"Isn't this just a desk job for women to be trapped in, while men get the MCD opportunities?\"\n\n\"I don't think Detectives Julia Rodriguez and Joanne Warner would agree, ma'am.\" said Tanya adroitly. \"And men will be in the Intel branch. Senior Detective Christopher Purvis is our financial crimes guru, and he'll be part of Intelligence as a leader.\" \n\n\"So a man is in charge, once again.\" said Malinda Adams.\n\n\"I would not recommend you call Lt. Mary Milton a man in her presence, Ms. Adams.\" Tanya adroitly replied. \"Nor me, for that matter.\" Reginald B.F. Lewis began laughing at that.\n\n\"You're as tricky as the Iron Crowbar, young lady.\" said Lewis. \"I think I misjudged you in the past. I apologize for that.\"\n\n\"Accepted.\" said Tanya. \"And it's always a compliment to be compared to the Iron Crowbar so favorably.\" she said with a look in my direction. There were more chuckles, though Kelly Carnes now had the look of deep hatred on her features...\n\n* * * * * * * * * * * * * *\n\n\"It's a done deal.\" said the Sheriff as we walked back to Police Headquarters. \"Tanya did a magnificent job in there.\"\n\n\"Yes sir.\" said Cindy. \"The vibe was very positive... except for Susan Weston.\"\n\nI said \"Susan Weston wouldn't take any positive action towards Tanya even if Tanya did something to earn the Medal of Valor.\" Everyone nodded in agreement, though none of us realized just how prescient my prediction would be...\n\nPart 21 - Epilogue\n\nOn Tuesday, October 8th, the Council voted 8-2 to pass the new Police Intelligence Branch. The dissenting votes were Kelly Carnes and Susan Weston.\n\nLater that day, Appellate Judge Leahy heard the arguments by the NEA's lawyers and the Police Captain's Union Rep and Mike G. Todd. In less than two hours he sent the case back down to Superior Court Judge Patrick R. Folsom, with an order to proceed within a week's time. Leahy was deeply Leftist, very activist, and a friend of the powerful Teacher's Union.\n\nOn Wednesday, the World Outreach Church was raided by a joint operation of the City Police and the SBI. Narcotics and guns were found, as well as more evidence of money laundering. A Federal Appeals Court judge overturned the warrant to remand Arthur Young into the FBI's custody, and his testimony was devastating. The SBI and City Police got the praise; the FBI was left out in the cold.\n\nThe others that the FBI took into their custody were never heard from again. While the FBI put out word that they'd been put in Witness Protection, Melina did some checking months later, and could find no evidence of that. She would tell me that she believed the survivors of the Guru Stevens attack were murdered so that they could not suddenly remember who murdered Guru Stevens and those with him, and I agreed with her on that.\n\n* * * * * * * * * * * * * *\n\nThe remains of Nellie Blye Westbrook were turned over to the Town & County's custody. I contacted University President Sidney P. Wellman to make funeral arrangements. There is a small cemetery on Campus, behind the University Chapel, next to the trail that leads towards the Mountain Nest from the old parts of the Campus. In the 1800s, students who died at School were buried there rather than be sent home. There had not been a burial there since the Railroad was laid through Town in the 1840s... until now.\n\nA surprisingly large number of University students attended a funeral mass held in the University Chapel by Father Romano. Then the Army ROTC Rangers acted as pallbearers and escorted Nellie's coffin to the University Cemetery, where she was buried and a tombstone with her name placed there. Nellie Blye Westbrook was, at long last, resting in peace.\n\nPoint Hollow remained a haunted place, and the weather station on the bluff above recorded electrical discharges in the Hollow several times every year. But reports of a woman's screams became fewer and fewer; indeed; it was as if they'd stopped altogether...\n\n* * * * * * * * * * * * * *\n\nOn Saturday, October 12th, Laura and I took Carole, Tasha, and Marie to Daniel and Melina Allgood's home on the mountainside. I brought in a box with a hole on top and put it on the floor as Daniel got his iPhone out to film the event.\n\n\"This is an early birthday present for you, Patricia.\" I said to my niece-by-marriage, who would be four years old in December. \"Go ahead, open it.\" \n\nPatricia took off the lid and squealed in surprise. A beautiful all-white puppy was looking up at her, and as soon as she and Patricia laid eyes on each other, it was love at first sight. Carole helped turn over the box, and the puppy clambered out and padded over to Patricia and began licking and sniffing her. Patricia began laughing, and soon peals of laughter could be heard as she tumbled over, with the puppy sniffing at her and continuing to play.\n\n\"She's one of Bowser's daughters.\" Carole told Patricia. Indeed, she'd been the first born puppy of Bowser and Sadie Mae's newest litter. Sadie Mae was owned by Dr. Childers, who lived next door to the Mountain Nest.\n\n\"And she's had her shots.\" I said. \"But she hasn't been spayed. That'll be for you to decide.\"\n\n\"What are you going to name her, Patricia?\" Melina asked her daughter.\n\n\"Dorothy.\" said Patricia happily as she petted Dorothy. When asked why, she said \"I don't know. She just looks like a 'Dorothy' to me.\" And Dorothy, Daughter of Bowser, she became. She would be part of the Allgood family for the next fifteen years...\n\n* * * * * * * * * * * * * *\n\nAs everyone else played with Dorothy until the pup got tired and took a nap, Melina and I talked on the back deck, which had a very nice view of the Town below us and to our southwest.\n\n\"What did you do to get Robin Isley to back down?\" I asked. AD Owen Lange had told us what he'd told Jack Muscone: that the threatened OPR on Muscone had been dropped. Rumor was that Dr. Robin Isley was going to transfer to be the EAD of the FBI's Science and Technology Branch, but that was not yet a done deal.\n\nI continued: \"I thought for sure she was going to rip through Muscone's Region like a tornado... or a demon released at Point Hollow.\"\n\n\"Hmmpf!\" Melina snorted. \"She can't touch me, and she knows it. But I was a bit worried about what she was going to do to Jack, and to Owen Lange. Jack loves Tanya Perlman, and he practically worships you; and Owen Lange has really come to respect you and your abilities. They need you... and you need them too, Don.\"\n\n\"So how did you save them?\" I asked.\n\n\"Lange was probably safe, anyway,\" said Melina, \"but just to make sure, I had a few of the 'right people' have a one-way conversation with her. And it did not hurt that Charles Westbrook died. It was really embarrassing for several BAU units that failed to track him down for years, only to have a local Police Force stop him completely and bring him into custody... dead, but still very much in custody. And they didn't even get a chance to talk to him. And let me add my own congratulations to you for saving that girl and stopping Westbrook. No telling how much damage he could've done.\"\n\n\"It would have been ver-ree bad.\" said a voice behind us. We peered over our shoulders to see Carole standing there.\n\n\"Carole,\" I said, \"are you being impolite and listening to conversations that do not concern you?\"\n\n\"No, Daddy.\" said Carole. \"It concerns me since I saw that pain-ting. But the demon went away, and Nellie crossed the Stream into Heaven. And she's very happy.\"\n\nMelina was giving us a 'WTF?' look. I was just taking it in stride. \"Okay, Fussbudget.\" I said. \"But don't be impolite like that again. You are not a spy.\"\n\n\"No, Daddy.\" Carole said. \"Jim is going to be the spy, like Mommy. I'm going to be the Iron Crow-bar, like you are.\" Needless to say, Melina was giving us more looks.\n\n\"What are your cousins Dan and Patricia going to be when they grow up?\" I asked Carole, with a sideways look at Melina, who was listening with rapt fascination.\n\n\"Dan is going to be a pollll-i-tish-un like my brother Ian.\" said Carole. \"I don't know what Patricia is going to be. I can't see that...\"\n\n* * * * * * * * * * * * * *\n\nAmber Harris took her tray from the line and went into the dining hall. Seeing Betty Morelli, she went over and sat down opposite her.\n\n\"Haven't seen you in a while.\" Betty said. \"Pregnant women get their own cells.\"\n\n\"I can barely turn around in it.\" Amber said. \"You were pregnant in prison, weren't you?\"\n\nBetty's eyes flickered slightly, realizing Amber knew a lot about her. \"Yeah. I pretty much was locked up in the prison infirmary. That prison was tougher than this one.\"\n\n\"What happened to your baby?\" Amber asked.\n\n\"My parents claimed her.\" Betty said. \"I got to hold her for thirty minutes, then they took her.\"\n\n\"You know...\" started Amber, who then finished: \"you know your parents have died.\"\n\n\"Yes.\" said Betty.\n\n\"Do you know what happened to your baby?\" Amber asked.\n\nBetty's eyes became evasive. \"I guess DFACS got her, and she's in the system somewhere.\" Then she got up and took her tray. \"And I don't want to talk about it anymore.\" She walked away, leaving Amber to contemplate this new information she'd elicited from Betty for the first time...\n\n* * * * * * * * * * * * * *\n\nFBI Supervisory Agent Martin Nash came up to his office in Harrisburg, Pennsylvania. The State Capitol of Pennsylvania, built upon the Susquehanna River, seemed almost like a prison compared to the City or even the Town & County.\n\nUpon entering his office, it took a second for him to realize someone was in the room. He almost gasped in surprise. \"Dr. Isley?\"\n\n\"Hello, Martin.\" said EAD Robin Isley, who was sitting in the chair in front of his desk. \"How's Harrisburg?\"\n\n\"It's okay.\" said Nash. \"Pennsylvania is a nice State. And it's a fresh start for me.\"\n\n\"Have a seat behind your desk.\" Robin Isley said. Nash did so. Isley said \"Listen, how would you like to get back to the City? And as Special Agent In Charge?\"\n\n\"What, is Jack Muscone leaving?\" Nash said, straight-laced as ever.\n\n\"Maybe not of his own accord.\" said EAD Isley. Then she said \"It's contingent upon a couple of things. I may stay where I am, or be transferred to Science and Technology. And Muscone has better protection than I realized.\"\n\n\"Oh.\" said Nash. \"Look, I'm fine where I am, Dr. Isley---\"\n\n\"How would you like to find McGinty's Materials?\" asked Robin Isley. \"If you do, you get to learn their contents. You'll have tremendous protection.\"\n\n\"Uh, that's why I'm in Pennsylvania now.\" Nash said. \"I played with fire, and got burned.\"\n\n\"Martin, let's quit playing games.\" said Isley. \"Do you believe Donald Troy has McGinty's Materials?\"\n\nNash exhaled, having to commit to a decision. He finally said \"Yes. I believe he has them. Where? I have no idea.\"\n\nRobin Isley nodded. \"I'm not asking you to do anything wrong, illegal, or unethical. But I want to transfer you to my team. Your mission, should you choose to accept it, will be to find McGinty's Materials and take possession of them... and in doing so, strip the Iron Crowbar of the power he has in possessing them...\"\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "drama",
        "horror",
        "iron crowbar",
        "mystery"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/return-to-point-hollow-ch-04"
}