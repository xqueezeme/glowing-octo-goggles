{
    "title": "The Twelve Zenati Pt. 17",
    "pages": [
        "Authors note: Hello everyone. The last chapter was from the brother's point of view, and this chapter will be predominantly from the girl's point of view. As a warning, I am letting you know that the first part of this chapter overlaps with the last chapter but is from Marcella's POV and therefore will deviate from Noah's thoughts. I am as always grateful to David and Kate for being my second sets of eyes. I hope you continue to enjoy this series. ~ellie. \n\n*****\n\n There were very few times that the guards let the five of them interact together. They were the bad girls in the facility. Guarded day and night for crimes against their families as they were indoctrinated back into the way of life that made the Twelve Tables so successful. Each of them had been forced here against their will, but of the five, Marcella was the only one who didn't have to do time in the drying-out facility, before starting rehab. She didn't have a drug problem, even though she had been accused of it by her father and the family doctor, her uncle. He was the predator who preyed on her, ruthlessly. He was the reason for all her troubles now, and it had been his injection of the contraceptive rods into her arms, once he had moved beyond simple molestation to full penetration, that had sent her father off the deep end again, after keeping to his bargain for so long not to harm his family.\n\nDuring her time at the Battaglia facility, Marcella had lived for the interaction with the other bad girls at meal times, when the guards gave them a little bit of space to talk like normal people. Not that they ever did talk like normal people. Nik was the leader of their little band of misfits, and she ruled them, even during these small times of relative freedom.\n\n\"I'm leaving soon,\" Nik whispered during one breakfast. \"But first, I need help with a few things,\" she whispered. Then, with malicious glee, as she pointed out her arch enemy, a short, curvy woman sitting a few tables away, who she called the 'fat cow', she told them of her plans for the woman, without the details of when she would put her plan into action. Marcella had thought it was all just talk. They had no rights, no freedoms, no privacy in this place. There was no way that Nik could attack another woman and escape the facility.\n\n\"What happens when you escape?\" one of the other older girls asked. \"They'll track you down easy enough. Our last names ring bells everywhere.\" She rolled her eyes at the total lack of privacy that belonging to one of the twelve families afforded them. \n\n\"I have a whole new identity already in place, passport, money, credit cards... It's in a safe deposit box under that name, too. I just have to get to the bank, and abracadabra, Veronica Donati disappears, and I get to plot my revenge on the people who did this to me.\" \n\n\"Shit! Seriously?\" another of the girls asked. \n\n\"I have access to the computer lab for school. I can set up email accounts for us all under assumed names. Then, when we get out, we can just change the passwords to claim them, and Nik can give us some tips on what we need to create a whole new life away from the prying eyes of these clowns,\" another said.\n\nMarcella couldn't believe what she was hearing, but she wasn't about to let the opportunity pass her by. On the spot, she came up with a name, and for the following few days before Nik made her attempt at freedom, and all hell broke loose, she had fantasised about Stevie West, who she was and what she would do with her life, with the freedom that she craved so badly.\n\nStevie would be the free spirit that she had never been able to be. Stevie would grab every opportunity she came across and live her life to the fullest. Stevie would travel the world, seeking adventure and fun. Stevie would not get stuck protecting her mother and sisters or working hard to emancipate herself from the archaic laws that had put her here in the first place. It was a futile thing to try to do, and Stevie wouldn't bother. She would just pack a bag and disappear and let everyone else look after themselves, like she should have done a long time ago. \n\nExcept Marcella hadn't done that. Once created, and perfected to be a real living identity, Stevie had lived in a padlocked courier bag for the last four years. Now, however, because of that advice, when she needed Stevie the most, she could take on that identity and live that life she had created for herself. She could walk away from everything wrong in her world and never look back. Only she couldn't, not yet. Even as Stevie, Marcella had one last thing to accomplish for her sister. She'd already sent a message to Vinnie that she wanted to renegotiate terms, and she needed to make the rendezvous time with the second messenger. If she could find Hermione's and confirm Olivia's story, that would be great. But if she could also take down the Mistress, and maybe some of the other sadistic bastards who had frequented the place at the same time, then her work here would be done, and she could escape into a carefree life as Stevie. She wouldn't have to care about anyone but herself, and what adventure she wanted to go on next.\n\nShe looked at herself in the floor-to-ceiling, mirrored cupboards of her hotel room. Stevie definitely didn't care about corporate image or impressing people. She wore what she wanted. She showed off her scars with pride, instead of hiding them to avoid questions. Stevie also read trashy romance novels. She grinned and picked up the paperback that she'd purchased while doing a little shopping first thing this morning. Stretching out on the couch in the cool air-conditioning, she relaxed and sighed at having the freedom to do what she wanted when she wanted. The chlorine from her earlier swim had gotten to her and made her sleepy, however, and she was almost in a doze when the door to her room was flung open and she swung her head around to see the last person she had expected to be standing there.\n\n\"Hello Stevie,\" Noah grinned at her.\n\nBreaking free from the lazy haze that had surrounded her, she made a break for the balcony door to escape from his condemnation for leaving the hospital when she had promised to stay. If he thought she would go with the Battaglia quietly, he could think again! He caught her in a few large strides and bound his arms around her, despite the fact that she was fighting against him with all her might. Her feet left the ground and she kicked back at him, but he might as well have been made of stone for all the reaction he had to her attempts to hurt him enough to drop her.\n\n\"Not even a hello, when I've gone to so much trouble to find you and make sure you're safe?\" he asked, his breath warm against her ear as he spoke in low, calm tones. \n\n\"Let me go, Noah!\" she hissed, his arrogant, teasing tone infuriating her all the more despite his breath on her neck. \"Why are you here? What do you want from me?\" she spat, still struggling against him, albeit only a token gesture because she knew she couldn't win a physical battle against him.\n\n\"I need to know you're safe and well,\" he said calmly. \"You left the hospital with a severe concussion on a hot and humid day. I was concerned that you might not be looking after yourself properly. Have you been drinking enough water, Stevie?\" She gasped as he used her alias again, breathing it into her ear with his deep rumbling voice \"By the way, I like the new look you have. Are you planning on keeping it? It takes years off your age. Did they card you when you booked a room, Stevie?\"\n\n\"I can look after myself,\" Marcella spat, blushing deeply at his words. \"And you can stop calling me Stevie. How did you find me?\" she demanded angrily, disappointed that her disguise hadn't even lasted one day when she had worked so hard to make it a reality after what had happened at the facility, and to Nik who had made it pretty far before they caught up to her. Her mistake had been going to the bank to retrieve her identity. Marcella had carried hers with her always, although she'd had to make a risky trip back to the apartment in the early hours of the morning to retrieve it before making her escape.\n\n\"By chance, actually. I was looking for someone else when I saw you here. I almost didn't recognise you. This is quite the disguise. I think I might like getting to know Stevie better,\" he chuckled. \"I'm sure that every other red-blooded male who saw you by the pool this morning thought the same thing,\" he teased.\n\n\"Who else is here?\" she asked as her mind whirled with the fact that he had just paid her a compliment, and her blush grew deeper despite her self-talk that she wasn't some stupid airhead that he could flatter into submission. \n\n\"No one. We tried to do the right thing to look after you and keep you safe. Anthony banished Apollo and sent the Battaglia men packing, did you know that? No, you wouldn't, because you didn't bother to stick around to find out that you can trust us to look after the people we care about.\" His voice rose in anger, and she calmed in the face of it. The anger she could deal with. The anger she was used to. The flattering, caring persona that he was trying to adopt was upsetting her resolve, and almost making her wilt in relief at what he had said about the Battaglia men leaving. \"We aren't the enemy here, Marcella. We never have been.\"\n\n\"So, what do you want then?\" she tried, again, to wriggle from the arms that banded tightly around her.\n\n\"I want to talk to you, and I want you to listen for a change. No one else is coming, no one knows I am here. I told Xavier and Dom that I needed to take off for the afternoon after the drama last night and searching for you all morning. They don't know that I found you. They are all looking outside of the city and covering the transport routes. You're a high priority, because of the involvement from other Tables in your accident,\" he explained, although something was off in his voice, and she tried to turn in his arms to see his face.\n\n\"Who were you looking for, here?\" she asked suddenly. \"You said you were looking for someone else.\"\n\n\"Someone who could help me with something I need to get done. It's a personal matter,\" Noah said abruptly, not offering any detail or even a name. \"Will you stop trying to run for a few minutes and talk to me, or do I need to tie you to a chair to make that happen?\" he asked.\n\n\"Do I have a choice?\" she hissed, hating the threat he used but assuming that he would finally let her go once she agreed to talk to him properly. If nothing else, she would be able to see his face and gauge how much of what he said was lies.\n\n\"Yes, you always have a choice. We can sit comfortably on the couch and talk like reasonable people, or I can tie you to a chair and talk until you have heard me properly, instead of assuming you know me and what I want,\" he grumbled close to her ear, making a small shiver finally run down her spine. There had always been an attraction between them, and she had wanted to explore it. Not any more though. She gave guys one chance. If they rejected her advances, there was no second bite at the cherry. \n\n\"Fine, I'll talk,\" she practically barked as she tried to mask the feelings that he brought out in her with his proximity and breath on her neck. She tilted her head away from his mouth as she squirmed for freedom in his arms again. \"Just put me down. I don't have anywhere else to go now, anyway.\" \n\n\"I think we need to build trust, don't you?\" he asked, tightening his grip on her wrist, which he had seized as he let her go, and she yanked her arm away, trying to dislodge his grip. \"The offer to tie you to a chair still stands, if you dislike my touch so much,\" he smirked at her.\n\n\"I bet you'd like that, wouldn't you? Having me all tied up and at your mercy?\" The anger in her voice dissipated as she took a different approach to deal with him. She looked up at him with hooded eyes, and her voice turned into a husky purr as she tried to gain the upper hand in the only way she had open to her now. \"I bet you'd like to punish me for running away, too. Tell me, Noah, what's your weapon of choice?\" she purred, moving closer while using her hypnotically sexy voice. \"Do you like to tie women up and use a crop or cane? Or are you more of flogger and whip man? Do you make them call you Master while you punish them for their crimes?\" She was about to kiss him, but he started laughing. Laughing at her! How dare he laugh at her like this? She was so furious that she was lost for words, and humiliation flared in her features, bright and red hot.\n\n\"Sounds like that's what you want, Stevie,\" he continued to chuckle. \"You will have to do better than that to distract me. I just want to talk to you and make you an offer. Whether you take it or not is up to you but, at this point, it is probably the best offer that you will get, from someone who is in a position to help you deal with the problems you are facing,\" he said all too reasonably in the face of her humiliation and fury.\n\n\"Fine, talk.\" She threw herself back into the couch, petulantly. Noah was the only problem she had to deal with now! She was humiliated and hurting from his rejection of her advances for a second time, despite his words. Mortified, she continued to listen to him chuckle, refusing to meet his eyes or acknowledge his next words. \n\n\"Okay then, here's how I see it and you can correct me if I am wrong,\" he began. \"You don't want to go back to Perth yet, for two reasons. First, you haven't finished what you set out to do for Olivia, and secondly, because to come up here and accept our goodwill to help your sister, you had to reclaim your family name and everything that came along with that, including your bargain with Apollo Martino. That's why you asked me to pretend to be dating you in the beginning, so your father wouldn't tell him. True?\" He paused so that she could argue the facts if she wanted.\n\n\"Close enough.\" She waved her hand in agreement. She didn't care what he thought, anymore. She just wanted him to leave her alone. She sighed because she knew that, to get him to leave her alone now, she would have to confirm or deny what he was saying, so she tried to explain. \"When I came up here, I had concerns about my mother, and what Papa might do to her if I didn't do as he asked and come home after identifying Olivia as a fraud,\" she said, in a resigned voice. \"I didn't even consider Apollo. We'd moved on, or so I thought. We still saw each other on our birthdays, or at least spoke on those days, but that's it. We were friends who had once shared a close bond. He doesn't want to marry me. It was probably just some weird alpha-male way of trying to protect me from your family.\"\n\n\"I think you're wrong about that, but while you stay in Darwin, you won't have to deal with him,\" Noah said. \"Anthony has banished him, and he will face a panel at the Battaglia with the evidence that we sent them. You may not believe he would hurt you, but from the other witness statements, not just Val and Fab, he looked angry, and he threw your arm up as he let it go, causing you to stumble and pushing you further than you might otherwise have gone.\"\n\n\"I guess that could have happened,\" she said. \"I never believed Apollo would just straight up push me in front of a car, but an accident like that, where he didn't mean to do it or even realise how far I would stumble,\" she shrugged. \"Maybe, but it was an accident. I still don't believe he did it on purpose, no matter what else he did to get banished.\" \n\n\"Okay, back to the first reason you're still here. Olivia, I know you well enough now to realise that you stayed in the city because you have something going on, and you need to be here. You're biding your time until you can pull it off and had hoped to hide out here for a few days. True?\" He paused again and looked at her as if he expected a similar response to his last statement, but that only served to make her angry again.\n\n\"Why do you even care what I do? Why can't you just leave me alone and let me do what I have to do for my sister?\" She reefed her wrist from his grip, but he quickly captured the other hand, pulling her to his lap, and as she raised her other hand to fight him off again, he took hold of that one too and wrapped his arms tightly around her as she continued to fight the contact. \n\n\"Well, that answers that question,\" he said, adjusting how she sat on his lap to a more comfortable position once she had calmed a little. \"But I need you to listen to me. I haven't even made my offer yet!\" He sounded as if he was struggling to remain calm and that made her fight him all the more to make him lose his usually-unbreakable control. They struggled again, until she found herself pinned beneath him, but instead of threatening to tie her to a chair again, as he gained the upper hand he seemed to stare into her eyes, his expression unreadable before his lips descended to crush hers in the most forceful meeting of lips that she had ever experienced. \n\nMarcella was stunned. She forgot that she was fighting him, fighting for her independence and freedom. There were just his lips and the soft, tentative touch of his tongue along the seam of her lips, seeking entrance to her mouth. No way was she giving in like this. Him subduing her and making her submit. Was this why he had rejected her advances? Was he such a fucking control freak that he couldn't handle it when a woman made a move on him? Fuck that! She tensed up, determined to resist the overwhelming urge that she had to kiss him back. Fuck him!\n\nJust as suddenly as it had started, the kiss ended, and she was sitting up, facing him again with his hands wrapped around her wrists so that she couldn't slap him for the unprovoked kiss. She seethed at the loss of free will she had felt in that moment. It would serve him right if she had kissed him earlier, even after he had laughed at her. That would show him what she thought of his need to control every fucking situation.\n\n\"Are you ready to listen to me now or should I get the chair?\" he asked with a smug smile. \n\n\"Fucking asshole!\" Marcella raged inwardly. Determined to take her power back, and not sparing another second to think about the consequences, she lunged forward and kissed him, this time deepening the kiss on her terms. Noah retained his grip on her wrists, pulling them behind her back, making her body meld flush against his as she kissed him, and he obligingly kissed her back for long moments.\n\n\"Fuck!\" he whispered, as she leaned back breaking the kiss.\n\n\"Not right now, but finish what you need to say to me and then we'll see,\" she said haughtily, flexing her wrists to test his grip on her, and his determination to have this conversation. \"Maybe I'll be the one tying you up,\" she warned.\n\n\"Let the games begin,\" he chuckled under his breath. \n\n*****\n\n\"Do you think that she was right?\" Vivienne asked as Gideon drove her home to spend some time with Olivia, to sort out fact from fiction and try to understand Marcella better. \"Do you think that she has dealt with everything that happened to her as well as Imelda claims?\"\n\n\"Does anyone ever completely get over a childhood like that?\" Gideon questioned in return and sighed. \"Looking at it from a non-professional point of view, the woman has her shit together. She's proven she's a tough lawyer who's not intimidated easily by powerful men. She doesn't trust anyone, except maybe you, but that's understandable, and if that's the only chink in her armour, then I would have to say yeah, Imelda has a point. She's hardly the basket case that I would expect from reading your report.\"\n\n\"You can't live like that, though, never trusting anyone,\" Vivienne sighed, knowing that writing that report, and sharing it with the brothers, was a betrayal of her friend, but she had been so shocked by what she learned that she had wanted nothing more than to protect her friend from any more hurt, regardless of the consequences. \"Marcella hated being in the hospital near the doctors. Olivia had always said Marcella didn't like visiting her because it was in the clinic, but I didn't understand. She never said why. Then I made her stay in the hospital...\"",
        "\"If she wanted you to know, she would have told you. You can't second-guess every decision you have made about her. You did what you thought was right, at the time. You've been her friend, even when she was pissing everyone else off.\" Gideon reached out and placed a comforting hand on his wife's leg.\n\n\"Not a very good friend. I didn't listen to her, not properly. I'm a doctor, for goodness sake. This is my speciality! I should have seen the signs,\" Vivienne said and began to tear up, at a total loss with the disaster she had made of today, not only for herself but for the man she loved and his brothers.\n\n\"In the beginning, Olivia was the victim, not Marcella. None of us looked properly into Olivia's past, even though we all guessed that it wasn't good from the way her parents refused to acknowledge that she had been found alive. We just assumed that all the real damage to her psyche was done by Royce. I think that this discovery bothers us much more than it bothers Olivia, or Marcella. They have dealt with it already, and we have to come to terms with the fact that real evil exists in the world and that even the people we love are not immune.\" Gideon tried his best to console his wife, knowing that she would be blaming herself for the lecture they had all received on interfering in other people's lives uninvited. \"I was pretty hard on Noah today, and he didn't deserve it. I need to go find him. Are you going to be okay?\" he asked, as he pulled up in front of their apartment building. \n\n\"Sure, I'll be fine. I'm going to go and keep Olivia company like Genesis suggested and actually listen to her this time, if she decides to talk about everything,\" Vivienne gave a sad smile, her eyes still glassy with unshed tears. \"I won't push any more or investigate things on my own. I will just listen and support,\" she vowed.\n\n\"That's not in your nature. You care too much. Just run things past me before you do anything, okay? I will do the same for you. Keep your phone on,\" he smiled as he spoke and leaned over to kiss her. \"Don't ever stop being you and caring about the people that you love. I love you just the way you are.\"\n\n\"Go find Noah and make sure he knows how much we love him,\" she said when the kiss broke and Gideon stepped out of the car. She hurried indoors, knowing that he would wait to make sure that she was safe, and made her way up to Genesis' apartment where Olivia waited.\n\n\"Olivia?\" Vivienne called out as there was no answer to her knocking. \"I don't have a key to this apartment. You have to come open the door.\" She knocked again. \"Olivia?\"\n\nThe door cracked open slowly, and Vivienne could see Olivia peeking through the opening, making sure that it was who she thought it was before she opened the door wider. \n\n\"Is something wrong?\" Vivienne asked, concerned by the fearful look in Olivia's eyes as she opened the door. \n\n\"I'm... It's just... It's different... being here,\" Oliva tried to express how she was feeling. \n\n\"I'm sure it is. You've been in a private hospital for the longest time,\" Vivienne said with understanding. \"Would you like to show me around your new home?\"\n\n\"Okay,\" Olivia said uncertainly, closing the door and leading the way into the living room. \"I only got here late last night, so I haven't really explored without Genesis here. So, this is the living room and through here is the kitchen. Would you like to see our bedroom?\" she asked, still sounding uncertain.\n\n\"No, that's fine. How about we have a cup of tea and a chat? It must be strange for you, moving in here without Genesis being able to spend time with you because of everything that's happening at the moment.\" Vivienne moved into the kitchen, determined to help Olivia find the cups and teabags. \"Do you know where he keeps everything?\"\n\n\"Not really, but I can find the cups at least,\" Olivia said, opening one cupboard. \"And this is the pantry. I guess that's where the tea bags would be.\" She sighed. \"How did I get this useless? I've been here all morning and I haven't even thought to look for anything, and now that we're in here, I'm starving. Maybe I could make you something? I haven't always had someone looking after every single thing in my life. I can do stuff on my own.\"\n\n\"I know you can, sweetie, but you were very badly injured, don't forget. No one expects you to get out of the hospital and be Wonder Woman,\" Vivienne smiled. \"What do you feel like? Maybe Genesis has ingredients for something simple, like pasta, or we could call for takeout?\"\n\n\"I'm more of a heat-and-eat kind of girl. Mama didn't like anyone but Jessa in the kitchen with her. I was too little, and Marcella argued with her too much. At least, until they left, and by then Mama didn't want any help by the time I got home, in the afternoons. I never really learned to cook,\" Olivia admitted.\n\n\"Me neither,\" Vivienne said sadly. \"My mother died when I was too young to have helped her, but we had a cook, so I didn't really need to help in the kitchen. I preferred to study, anyway, so it was never something I learned to do. I can make a mean cheese toastie, though, if you're interested. I'm sure there must be bread and cheese in this kitchen,\" she laughed lightly, trying to ease the anxiousness that she could hear in Olivia's voice.\n\nTrue to her new resolve, she didn't push Olivia to talk about her family, even though she had touched on the subject. Instead, she helped Olivia find some bread in the freezer, and cheese and butter in the refrigerator. They talked about food and kitchen basics as they made toasties, frying them in a pan with way more butter than was good for them. The finished product, however, was crisp and golden, and exactly what Olivia had felt like.\n\n\"Thanks, Viv,\" Olivia said, sipping her glass of cool water. \"At least I know how to make something that doesn't come out of a can or get microwaved now.\"\n\n\"Maybe we should take a cooking class together, to learn the basics. Gosh knows I could use it. This is the best thing in my recipe book,\" Vivienne smiled. \"Maybe we can talk Marcella into coming with us,\" she suggested with a small laugh.\n\n\"She's gone,\" Olivia said quietly. \"She won't come back this time.\"\n\n\"Why do you think that?\" Vivienne frowned. Imelda had told them that Noah had found her. Surely, he would bring her home again.\n\n\"Because the Battaglia came, and she was already hurt and weak. She couldn't stay in the hospital. They always came for her when she was hurt or sick and couldn't defend herself, but she got away this time. She won't come back now,\" Olivia said, emphatically.\n\n\"Olivia, Noah found her today. I am sure that he will try and convince her to come back,\" Vivienne said gently, unsure of what Olivia was implying. \"The Battaglia were sent away. They never got to see Marcella while they were here. The Zenati would not have let them take her if she didn't want to go with them.\"\n\n\"Is that what they told you?\" Olivia asked doubtfully. \"Marcella never wanted to go, but they still took her. She won't let Noah take her anywhere, either. She's stronger than they realise. That's why she is so mad at Genesis. She thinks he made me accept him as my Master when Remy died, and he took me to the clinic, even when I said I didn't want to eat or drink or move anywhere. I love him, and I understand why he did it that way, but she is mad at him and mad at me for letting him treat me like that. I'm not as strong as her, though. I never was.\" She knew her thoughts were coming out wrong and as jumbled as they were in her head, but if anyone could understand her, it would be Vivienne. \"Genesis never understood why she kept wanting to take me away from him and this city, but I did.\"\n\n\"She still wants to help you, Olivia. She will come back to make sure that you are safe,\" Vivienne said, clinging to the one thing she was sure of. \"You are the reason that she came here in the first place. She won't leave with the investigation still going on.\"\n\n\"Maybe, but she won't come back here,\" Olivia said, lifting her arms, indicating the building they stood in. \"She won't come back to where they can find her again.\"\n\nVivienne heard the conviction in Olivia's voice and sighed sadly. She hoped that Olivia was wrong, but she had a bad feeling that Olivia knew her sister better than any of them thought she did.\n\n*****\n\n\"Let's make sure I understand what you're proposing,\" Marcella said, flexing her hands which Noah still held, though his grip had loosened a little.\n\n\"Okay,\" he nodded and moved sideways to adjust the uncomfortable position he was in, sitting on the couch, facing her. One long leg was bent to curl underneath him, and he could feel the tell-tale beginning of pins and needles urging him to move and stretch it out. He let go of one of her wrists as he turned fully and leaned back against the couch, stretching both legs before him.\n\n\"You will keep your family off my back and looking in other directions if I tell you why I stayed in the city?\" she questioned cautiously.\n\n\"And,\" he prompted.\n\n\"And if I let you help me with whatever that might be?\" she continued. \"You will let me be in full control and follow my lead, without taking over or making snarky judgemental comments.\" She raised one eyebrow at him.\n\n\"I will follow your lead and let you be in full control, without taking over, but there may be a little snark. I am sure there will be times when I just won't be able to contain it,\" he chuckled. \"I'm only human, Marcella, and you are, after all... you. I will, however, try not to say anything out loud, unless we are alone. Continue,\" he encouraged.\n\n\"In return for your assistance with what I am trying to achieve, and keeping the watchers at bay, you will expect equal time from me, where I help you with your plans under the same conditions,\" she finished.\n\n\"Where I am in control, and you follow my lead without judgement or snarky comments,\" he extrapolated.\n\n\"What happens if I choose not to accept your proposal?\" she asked, narrowing her eyes at him.\n\n\"Then I let the people looking for you know where you are and the name that you are using so they can take you back to the hospital and treat you like a weak, fragile girl who needs looking after,\" he smirked, knowing that this was exactly what she wanted to avoid. Her independence was important to her, as was her reputation for being a tough bitch and a ballbuster in her career.\n\n\"So, you're essentially blackmailing me into letting you in on my plans,\" she accused.\n\n\"Blackmailing is a bit harsh,\" Noah replied and put his hand to his chest as if she had just wounded him. \"I'm just giving you an alternative to the inevitable. I found you easily enough. It won't take much for Gideon to track you down, especially because Vivienne is so upset about your disappearance. People care about you, Marcella. They won't stop looking until they know you're safe,\" he said, seriously. \n\n\"That's where you come in? You tell them that I am safe and we are what? Taking a time out from the world to recuperate from the accident?\" She rolled her eyes.\n\n\"I won't even tell them that I am with you. I'll admit your disguise is pretty good; even I almost didn't recognise you. I will let my family know that I am spending a few days here and that you aren't here, but if you show up, I will let them know. Now that Dom is healing, it's not so urgent that I am there, and Papa can handle the AFP for a few days and let me know if there is anything that needs my immediate attention,\" he said as if he had given it a lot of thought. \"I've been pulling triple duty as a lawyer, Oracle and my own role on the Table for weeks now, and no one will begrudge me a few days off.\"\n\n\"What if it takes longer than a few days?\" Marcella asked, considering what he was saying. She didn't trust him, but she could see the advantages in being able to move around more freely. Her 'get out of jail free' card was blown now that he knew about her well-prepared secret identity. Rationally, she knew that she had little choice but to trust him. If she went back, the chance of her getting away on her own to make the rendezvous would be slim at best.\n\n\"How long do you think you'll need?\" he asked, furrowing his brows to hide the triumph that he felt now that she had just admitted that she had a specific plan in the works.\n\n\"At least a week, maybe two,\" she said, considering his question thoughtfully.\n\n\"That length of time will be harder to manage to stay under the radar. Not impossible, just harder. We may have to consider posing as a couple. Anyone looking for you, not just the family but the AFP or the Suebi, will be looking for a woman on her own, not a couple, or husband and wife,\" he mused.\n\n\"You're pretty recognisable. I doubt that you could fly under the radar.\" Marcella rolled her eyes, not believing that she was even having this conversation.\n\n\"Who says you're the only one with a disguise?\" Noah challenged, rolling his eyes at her. \"Superman only needed glasses to become Clark Kent.\" He grinned at her, feeling the tension in her arm relax as he continued to hold it.\n\n\"You want us to live as a couple while we're in disguise and hiding out from everyone who may or may not be looking for us?\" she asked, shaking her head incredulously.\n\n\"Think about it. It makes sense, seeing as you are going to let me help you do what you need to do. No one will be looking for a couple, and Stevie is going to be a lot safer with a man in her life. Every player in the casino was checking you out today. Having me holding your hand will stop a lot of those idiots hitting on you,\" he said, pulling a face as if he had just tasted something disgusting.\n\n\"I can't believe that I am even listening to this bullshit, right now,\" Marcella blurted.\n\n\"It's your choice, Marcella. You can either trust me to do what I have said I would, or we can head back to the hospital, and you can go it alone with even more security around you.\" Noah sighed as if in frustration and let go of her wrist. \"I'm offering you a chance to do what you want without taking such big risks. If anything goes wrong, I will call in the cavalry, but if everything goes right, you get what you want, with the added bonus of having back-up that will do your bidding without anyone interfering with your plans.\" He stood, stretching his legs and walking a few steps away but positioning himself so that he could grab her if she tried to bolt from the room. \"Personally, I think that I would like hanging out with Stevie. She seems like a cool chick.\" He put his hand into the pocket of his cargoes and fished out his phone before looking at her as if expecting a decision.\n\n\"Full control? You'll put it in writing?\" she asked, finally taking in the way he looked today. Gone was the usual suit and tie, and in its place, he wore casual loose-fitting cargoes and a collared polo shirt. He looked so different from his every-day, professional persona that she did a double take before gaining control of the situation again. She realised that she didn't have a lot of choice but to accept his offer, and now that he had let her go, she didn't feel as trapped by his appearance in her room. She stood and moved toward the table where she had left the phone, she had purchased that morning.\n\n\"Yes,\" he agreed. \"But I expect full disclosure if you want me to write it up as a legal contract, and give you lawyer-client confidentiality.\"\n\n\"I'll be the lawyer, and I'll write up the agreement. A nondisclosure agreement will do just as well as any client confidentiality agreement. You're the one who proposed that I would be the one in control and you will be the one doing what I want, remember,\" she chided him. \"Or was that all bullshit? I find it hard to believe that you could ever play back-up. I doubt you were even a good wingman for your brothers.\"\n\n\"I am an excellent wingman, and I have a great reputation for client care.\" Once again he clutched his chest as if she had wounded him. \"Just remember that you are setting a precedent for how I will act when I am in control. Think carefully about what you ask me to do, because it may come back to bite you,\" he warned. \"I was serious about the equal time for you to help me, where I am in control, once you've achieved your goal.\"\n\n\"Shit,\" she cursed silently. She'd almost forgotten that part of the deal. To be under the full control of a Table man filled her with trepidation, but once again, she didn't really have many options. However, once she found Hermione's and made things right for Olivia, there would be nothing holding her in this city with these people, and she doubted that Noah would try to follow her once she truly disappeared. He had no real interest in her, except that she was Vivienne's friend and Olivia's sister, which made her important, in some way, to his brothers. If she accepted his proposal, she would have a week or two to consider her escape plan, so she sat at the small table in her suite and invited him to sit with her as if she was conducting a client meeting at her law firm.\n\n\"Okay, let's negotiate you being my bitch for the next two weeks,\" she smirked, having resolved to come up with an escape plan before he could enforce his turnabout rule.\n\n*****\n\n\"I know that I am probably the last person you expected to find at your door, but could I come in, please?\" Emma asked Olivia, who had opened her door only a small amount, despite Vivienne being with her. \"I'd really like to apologise for what happened yesterday.\"\n\n\"Why? You have nothing to be sorry for,\" Olivia asked in confusion. Emma had done nothing wrong. She had been the one who had been emotional and refused to talk when they had gone shopping. The other woman was the one who had every right to be upset, considering what was happening with Dominic. Olivia opened the door wider in invitation. \"How is Dominic today?\" she asked, as Emma stepped into the apartment.\n\n\"He's gone back to work already, if you can believe that.\" She rolled her eyes. \"Noah came in with this big plan of his, and they went into one of their little huddles and sent me off on an errand to get me out of the way. By the time I came back, they had moved Dominic into their war room on a recliner, despite my protests,\" she grumbled. \"Then they kicked me out until later tonight, when they promised he'd be back in bed for dinner.\"\n\n\"Gosh, what's going on with Noah? I know that Gideon and Genesis were really worried about him earlier this morning,\" Vivienne asked as they walked back into the kitchen area, trying not to give away too much of the drama that she had caused between the brothers. \n\n\"Can I get you tea or coffee?\" Olivia asked, looking around once she realised where she had led her guest.\n\n\"Tea would be lovely, thank you. I haven't been able to get a decent cup at the hospital,\" she said as if relieved by the offer. \n\n\"I'm not sure how much better the tea I make will be, but it will be fresh and hot,\" Olivia said nervously as she went into the pantry. \"I only moved in yesterday. I'm not even sure what Genesis has in here.\"\n\n\"Would you mind if I had a look?\" Emma asked. \"I've been sitting most of today, and I have far too much energy to just sit again now. I know it's rude, but I just can't help doing things for myself in the kitchen. It's my most favourite room in the house.\"\n\n\"I guess,\" Olivia said, stepping back and letting Emma inspect the large pantry.\n\n\"Oh, thank God,\" Emma said a few minutes later, emerging from the pantry cradling a bright orange box labelled with T2 and smiling widely. \"Lead me to your kettle,\" she grinned.\n\n\"I'm so sorry about yesterday, Olivia,\" Emma said as she bustled about the kitchen, investigating the space by opening random cupboards.\n\n\"There's no need to apologise. Are you looking for something in particular? I have a cup for you on the bench,\" Olivia said, still sounding uncertain.\n\n\"I'm sorry,\" Emma apologised again. \"I just can't help myself. I'm so nosy about how other people set up their kitchens and homes. Do you cook much?\"",
        "\"We were just talking about our lack of skill in the kitchen,\" Vivienne laughed. \"Neither of our mothers were able to teach us much.\" She purposely glossed over why that was.\n\n\"Well... that works out well then,\" Emma grinned. \"Junie and the other ladies are making all of us younger wives attend the Christmas baking day at the end of next month, and as you are both now part of the Zenati family, you'll be on my team. There are so many different types of Christmas treats, depending on where you come from and your family background, that it will be more like a bake-off between the generations than anything else. Not that I am competitive or anything,\" she grinned. \"So, between now and then, we'll be getting together to compare and refine our family recipes for biscotti, pizzelle, cuccidati, you know the basics.\"\n\n\"My grandmother used to bake the best fig and almond biscotti,\" Vivienne said. \"Maybe I can get the recipe for you.\"\n\n\"That would be awesome! Once Dominic is back on his feet, and the girls and I have our get-togethers, you have to come. There are no more excuses about being new to the family. Just like the men all work together, so do we,\" Emma said.\n\n\"What sort of work?\" Olivia asked, unsure if she should be included. It wasn't like she and Genesis were even engaged, let alone married like Vivienne and Gideon.\n\n\"Well, a variety of things really, mostly family related. We get to know the larger context of the family, and all of those who come to the annual gathering, which is only two weeks away. We do quite a bit of charity work, though we just follow the lead of Junie and the other ladies. It's good though, because it gives us a feel of the charities that we will continue to support when we take over the reins of the family. Mostly, we organise family celebrations and gatherings, although we still follow Junie's lead for that at the moment, as well,\" Emma sighed. \"It can be a little frustrating at times, being the understudy.\"\n\n\"I don't think... I mean Genesis and I aren't, well...\" in the face of the force of nature that was Emma Zenati, Olivia struggled to put her thoughts into words.\n\n\"Oh, sweetheart,\" Emma said, as if apologising again. \"I know that I am jumping the gun again in your case, but I have no doubt that you and Gen will be the next to marry. Unless, of course, Noah works his magic on your sister sooner than we all think.\" \n\n\"What? No,\" Olivia said, shaking her head and almost laughing at the idea that Marcella would ever consider marrying anyone, let alone one of the men from the twelve families. If Apollo couldn't convince her, she doubted that Noah would have any chance at all. \"That won't happen,\" Olivia giggled.\n\n\"From the little bit that I overheard, I think he intends to try to get her to come back. We just have to give them some space to work things out for themselves. There's more going on than anyone realises, I think, but if I have learned anything about Noah lately, it's that he is a strong and determined man when he decides to do something. So, I wouldn't be so sure that she won't be back, and be back with him,\" Emma grinned.\n\n\"Even I don't think that's very likely,\" Vivienne said seriously in the face of Olivia's giggles. \"She has a lot of trust issues when it comes to men.\" She didn't add that that it was men of the Tables that she didn't trust.\n\n\"Ooh well, I bet you Noah and Marcella will come to the family gathering together, as a couple. If they do, you have to join my baking team against the older ladies. If they don't, I will come here and give you both cooking lessons, twice a week for the whole month of November.\" She smiled slyly at them.\n\n\"I could use some personal cooking lessons,\" Vivienne laughed. \"What about you, Olivia?\"\n\n\"Win or lose, I think we will get them,\" Olivia giggled shyly.\n\n\"No interference by anyone. Not you or me or Olivia or any of our partners on our behalf. We give them the next two weeks, until the gathering, to work things out for themselves,\" Emma stipulated.\n\n\"That won't be hard, Marcella left, and Noah is the only one who knows where she is at the moment,\" Vivienne sighed sadly. \"I can't even call her because we kept all of her personal belongings when she was admitted to hospital.\" It was no wonder that she had run when they had treated her like a prisoner with no way to leave that room.\n\n\"Then the bet is entirely about whether Noah can convert his professional courtroom skills of persuasion into his personal life,\" Emma announced with a smile. \"And I am betting that he can.\"\n\n\"Okay, I'm in,\" Vivienne said. \"But I would have helped you with the bake-off, anyway.\"\n\n\"Olivia?\" Emma inclined her head.\n\n\"I'll have to check with Genesis. I don't know when my next hearing with the AFP will be. They still don't believe my story and are constantly asking for further information. It's like they think I knew what Remington was doing, but I didn't. He didn't tell me anything about his business,\" she sighed.\n\n\"Oh, honey, this will help you keep your mind off all of that. Trust me, Noah and Armando won't let them arrest you. Who knows, you might even enjoy getting to know the rest of our little group. Beverley, Orlando's wife, is hilarious, honestly. She's as mad as a hatter, but she has a heart of gold. It will be fun, I promise,\" Emma said. \"I tell you what, the girls and I will work out a schedule and come and give you a few basic lessons in the time left before the gathering. You'll see how much fun you can have with us. In fact, I will call Bev right now and organise the first one.\"\n\nBefore either Vivienne or Olivia could say no, Emma swept them along with her plans. The truth was that she needed a new project, and it seemed that the sisters were as good, if not better, a cause than much of the charity work they did. These women needed to know what it was like belonging to a happy, loving family that trusted each other, and as she couldn't help Marcella until Noah had worked his magic, she had decided to concentrate her energies on Olivia. It was a far better use of her time than sitting around the hospital while Dominic got straight back into work, even though he would need further treatment for a little while yet.\n\n*****\n\n\"Are you ready for this?\" Xavier asked Dominic. \"They're on their way up.\"\n\n\"You have no idea,\" Dominic grinned evilly. \"Thank you for not making me stay in that bed and miss all this,\" he said, sincerely. Noah needed space to do what he needed, and Dominic was going to make sure that he got it. He knew how hard it was to come to terms with the fact that the woman that you love may never be yours. He had believed that Emma would always belong to his brother until the Table had been named and he discovered how easy an intimate relationship with Xavier could be. It wouldn't be that easy for Noah though, and he felt for him. They'd grown so close since he had been diagnosed, and he knew that Xavier and Emma felt the same. He had no problems doing what Noah had asked of them. He just wished that he could do more.\n\n\"Thank Noah. Personally, I wouldn't mind letting Emma wrap you in cotton wool and coddle you for a few more days. You only came out of surgery yesterday, Dom. No one expects you to be Superman. We better make this quick, before she comes back from her little mission and demands to do that coddling,\" Xavier chuckled.\n\n\"I'm allergic to cotton wool, and it's not like Hector is letting me out of his sight anyway, now that I've moved in here.\" He added his own chuckle to Xavier's. \"Emma will be fine. She knows what's going on.\"\n\n\"Knowing and liking you pushing yourself to be involved are two different things,\" Xavier warned as the main members of their Table slowly started filling the room, including Gideon and Genesis, who naturally looked around for Noah and frowned at seeing Dominic within their midst.\n\n\"Great, make yourselves as comfortable as you can get. This room isn't really set up for large gatherings like this, especially when Dom insists on sitting on his big-ass throne like a king,\" Xavier chuckled, hoping to lighten the mood. \n\n\"Where's Noah?\" Gideon asked quietly as he came to stand beside Xavier, confusion showing in his voice.\n\n\"Give me a minute, and I'll explain to everyone at the same time,\" Xavier said, the authority of his position entering his voice. He raised his voice over the quietening murmurs of the men he led and launched into the reason they had all been gathered here. \"If you could all hold off on asking questions until I am done, that will speed this up immensely. I have had the same meeting with Anthony and Gianni today, who are, at this moment, filling in their own Table.\" He paused and looked around the room as the men finally fell silent and looked at him, expectantly. Rather than continuing on, he looked to Dominic.\n\n\"It will take some time to recover fully, but I am well enough, already, to be able to contribute and take back my position from Noah, who has requested a leave of absence,\" Dominic began and held up his hand as murmurs began around them. \"In his absence, I will be resuming most of my duties, with support, and Armando will take over his legal duties with the AFP, Olivia's case in particular. Noah has ensured that Armando has all the files and information needed, should anything occur in his absence.\" He looked at the shock on Genesis' face, but his cousin eventually nodded, not arguing the statement.\n\n\"Noah is undertaking a sensitive project for us, and for that reason, he will be out of communication with everyone except myself and/or Dominic. If you see him in the public sector at any time over the next week or two, we ask that you ignore him. Turn and walk in the opposite direction if at all possible. Not to do this may put his life at risk, so think carefully before taking matters into your own hands.\" These men could all be emotionally driven at times, particularly Gideon, who would be the most likely to break this rule if Xavier hadn't put it in terms of life and death. \"Orlando, we are asking both yourself and Claudio to pull back your watchers at this time, too.\"\n\n\"Papa will blow a gasket!\" Orlando blurted.\n\n\"No, he won't. For the next week, two at the most, Noah is off the grid,\" Xavier said and looked at them all. \"We expect that you will inform the seconds not to approach him if they see him. It's important that you trust us about this and do as we ask.\"\n\n\"What about Marcella?\" Genesis asked. \"I heard that he located her earlier today.\"\n\n\"We have eyes on her, but dragging her back would serve no purpose at this time, except to prove that we are yet another Table that will imprison her as we tried to last night. She is more resourceful than perhaps anyone gave her credit for,\" Dominic said shortly. \"Thanks for going out to pick up my phone and wallet for me, Val.\" He nodded his head at his brother, who grinned back.\n\n\"She has been given the option to return, if she so chooses, but I believe that she has declined that offer, although I am sure she will be in contact with her sister eventually. She still has concerns about the investigation being conducted by the AFP.\" Xavier took over answering the unasked questions. \"We're still assisting the AFP, in conjunction with the seers loaned to us by the Tatar people, and this is a highly sensitive and volatile undertaking. We expect everyone to continue with the investigations they have been assigned to and to liaise with us each day by email, if not in person,\" he continued, moving onto other business. He planned on talking to Genesis and Gideon privately at the end of the meeting regarding his wife's project involving Vivienne and Olivia.\n\nThe conversation went on, with each man discussing what discoveries they had made, if any, over the last few days and plans for the near future. Dominic watched the interplay between Genesis and Gideon. He and Xavier would have to talk to them again before they left about giving Noah space to deal with his issues on his own, and in his own way. They couldn't afford to send them on dubious errands out of state, not that Genesis would leave Olivia, but they needed to find some way to make them back off and give him the space he asked for, regardless of what happened before his departure.\n\n*****\n\n\"I thought that we agreed that you'd wear the fuck-me heels?\" Noah drawled, looking over Marcella as she reappeared in a short, flowing dress and casual slip-on shoes.\n\n\"That wasn't part of the agreement,\" Marcella almost snarled. \"Forgotten who's in charge already?\" she goaded him.\n\n\"In my head, it was part of the agreement,\" he complained. In his mind, there were a lot of benefits that were part of this agreement that she probably would correct his thinking on. He only had to deal with it for a week, possibly two, and then he could correct her thinking instead, he thought smugly.\n\n\"You'll do,\" she said flippantly, after overtly letting her eyes travel from his face, down his body and back again. \"Let's go and make this look legit then.\"\n\n\"Anything you say, Shnookums,\" he gave her a sly grin as he spoke.\n\n\"Shnookums is definitely off the table,\" she growled.\n\n\"Better than some of the names that I could call you right now,\" he growled in return. \"Let's go, sweetie-pie. Without my real name to pull strings, we don't have much time before the stores shut,\" he smirked, determined to come up with the perfect pet name for her by trying out as many as he could this evening.\n\n\"This name calling thing goes both ways, don't forget, poodle,\" she countered as she gave him a fake smile and batted her lashes at him.\n\n\"Poodle?\" he queried, running a hand through the messy waves of his hair. Normally he would have styled his hair into submission with product, but this was the casual disguise that he adopted from time to time. \"Says the girl with out of control curls,\" he chuckled.\n\n\"Because you're a dog, expecting me to wear fuck-me heels when you have blackmailed me into this agreement,\" she snarled at him and hated that her words only made him chuckle more.\n\n\"But a poodle?\" he asked, between snickers.\n\n\"Oh yes, a small dog, who thinks he's bigger than what he is.\" She let her eyes drop down to his belt. \"All bark and no bite,\" she quipped smugly.\n\n\"Oh, trust me. You couldn't be more wrong about that,\" he waggled his eyebrows. \"But I won't bite you. Unless you ask me to, of course. You're the boss, after all.\"\n\n\"Okay, let's go,\" Marcella commanded, and they left the suite, heading toward the entrance through the populated parts of the casino. No one gave them a second look. Maybe Noah was right and being part of a couple took away much of the scrutiny she had been enduring when she had gone for a swim earlier. She hated that he was right most of the time, and her mood darkened. Fucking Noah, coming to find her. Why couldn't he have just left her alone?\n\nAs they approached the lobby, Noah took advantage of the moment and took Marcella's hand in his. They were posing as a couple after all. Her hand felt so small and delicate in his, and it would be easy to forget what a tough bitch she could be when she felt it was needed. Ever the gentlemen, he went to help her into the passenger's side of the car, but she stalled and narrowed her eyes at him before snatching the keys and moving to the driver's side. He chuckled at her antics and slid into the passenger's seat, wondering if this would be the ride from hell.\n\n\"I take it that you have a place in mind to shop, then,\" he said, once she was situated and had adjusted the seat and mirrors to suit her much smaller frame.\n\n\"I'm sure you won't have any trouble playing navigator and telling me where to go,\" she grumbled, seeing her error now. It would have been easier just to let him drive, but she hadn't been able to resist testing his resolve to let her take the lead.\n\nThey drove in relative silence, apart from the occasional instruction from Noah to turn here or go there. When they finally pulled up to a small shopping village, she was surprised. She had expected that he would have wanted to head into the city. She was even more surprised by the quaint little jewellery shop and its unusual array of sparkling pendants, bracelets and rings.\n\n\"Choose one,\" he said magnanimously, sweeping his arm over the display case.\n\n\"Isn't that your job?\" she asked in return, raising an eyebrow in challenge.\n\n\"I would, but somehow I doubt that anything I chose would be suitable, so I am just cutting down on the rejection due to time constraints,\" he shrugged.\n\n\"I'd like to see what you'd choose. You choose three, and I will choose three, and then we can compare before I decide,\" Marcella said, pushing Noah to be part of this process. It was his idea, after all, and he didn't need to act like buying her a ring was the last thing he wanted to do. She felt a small sting from his nonchalance. The kiss they had shared had obviously affected her way more than him. Still, she was in charge, and she could have a little fun with this. She could make his life extraordinarily difficult this week and take her revenge for his rejection of her. Kissing was one thing, they had never had trouble with that. It was when she tried to take it further that he continually backed off. \n\nThe buying of the ring, something that he should be in full control of, would be irritating him, she had no doubt, and she smiled as the small man behind the counter assembled the six rings that they had chosen for her to inspect. While the rings she chose weren't exactly over the top ostentatious, they looked gaudy and unrefined next to the three beautifully-designed rings that Noah had chosen. All them had similar carats of diamonds, but it was the simplicity of the design that set them apart. She tried on all six, studying her hand and feeling the weight of the rings.\n\n\"That one may catch on your clothes, or other things, if you aren't careful,\" he said of one of the rings, being practical about the process. Marcella hated that he had chosen so perfectly for her. Her small hands looked awkward with the larger rocks that she had chosen, but the small stones, banded by smaller ones, again seemed to sit better. She was continually drawn to a ring that she thought had an onyx stone. Its blackness was surrounded by brilliant white diamonds, as well as along the top of the band. It was an unusual shape, and when she went back to try it on the third time, she caught the small smile that Noah was trying to hide.\n\n\"Can you tell me what the stone is? It's black like onyx, but something is just a little different, like it's too shiny or sparkly to be onyx,\" Marcella asked, genuinely curious, despite Noah's obvious pleasure that she liked a ring that he had chosen.\n\n\"Black diamond,\" the salesman informed her.\n\n\"Seriously?\" she asked, gazing at it again. \"That's a shame,\" she sighed, remembering that Vivienne had told her that the Zenati men gave their wives-to-be a black diamond engagement ring. It would be far too obvious if she chose that, and she had no intention of continuing the charade once she had what she needed from this agreement.\n\n\"Why is that a shame?\" the salesman asked, in dismay.\n\n\"Oh, a close friend of mine got engaged and married recently, and she has a black diamond engagement ring. I want something unique to me. I mean, who wants to be called a copycat on the best day of her life, right, hunnybunny?\" She snuggled into Noah's side and was surprised to feel his hand wrap around her waist.\n\n\"If you don't mind me making a suggestion or two, I have a few rings that I think you will find are quite unique,\" the salesman offered. He went to a different counter, bending down to obviously lift a drawer from its slot, before bringing it to them and placing it before them to have a look. Noah raised an eyebrow at her, after a cursory look, and gave her a half smile.\n\n\"Your suggestions?\" Marcella asked the salesman, curiously.",
        "\"Certainly.\" He picked up a pearl and diamond ring and placed it on the ring pad before her. \"The style is a little off-centre, but it is balanced to the eyes. The setting is held by a slimmer band, which suits your petite hands,\" the man said before immediately selecting another from the drawer. \"This is one of my favourites, but probably the least traditional-looking.\" He held up the second ring rather than placing it on the ring cushion. \"It's black gold, and the infill is fire opal and, as you can see, the upper arm of the twist is infilled with diamonds. It's truly stunning and changes colour slightly in direct sunlight.\" He moved the ring around slightly, to demonstrate, before placing it on the cushion for her to try on.\n\n\"Black gold, it looks so... matte. I would have expected gold of any description to be shinier,\" Marcella said distractedly as she placed the ring on her finger and wiggled it, watching the colours change.\n\n\"This one,\" he began, without responding to what she said, as he held up the third ring. \n\n\"I think this is the one,\" she said, barely glancing at the new ring, before going back to examining the ring on her finger. \"Now I just have to get goofy pants here to get down on one knee and ask me to marry him properly,\" she giggled to the salesman girlishly.\n\n\"They all want a grand gesture these days,\" Noah shrugged and the salesman's expression sympathised with him. \"I'd do it right here and now, but there aren't quite enough witnesses. I'd like the world to know we're getting married!\" He wrapped his hands around her waist and pulled her to him, lowering his head to kiss her, before she realised his intention. \n\n\"Happy brides-to-be would hardly be pushing their fianc\u00e9 away,\" he whispered in her ear as she placed her hands on his chest. \n\n\"I'm sure that the world doesn't care about whether we get married or not,\" Marcella giggled girlishly, again. \"Lucky for you, I do,\" she laughed and pulled him down to kiss her, this time allowing him to deepen the kiss.\n\nNoah stepped back from the kiss after a moment, cognizant of the salesman watching them and waiting for Marcella to either take off the ring or for him to pay for it before their public display of affection went any further. He was beginning to see her moves to take control, not only of her plans that he would now be a part of, but of all their interactions. If he kissed her, she bristled and pulled away but then, almost immediately, came back at him with a kiss of her own, one she initiated and controlled. He was both irritated and thrilled by this insight into her thinking, and he began to consider how to work it to his advantage.\n\nTaking a platinum card from his wallet, he handed it to the salesman, who took it with eager relief. Then he took Marcella's hand and studied the ring. It was beautiful, not what he would have chosen, but this whole situation was not what he would have chosen. He gave a small laugh and kissed her hand, brushing his lips across her knuckles, smiling wider as she looked at him in surprise.\n\n\"Will we have him box the ring up, so that I can ask you properly?\" he asked. \"Some sort of grand gesture?\" he teased.\n\n\"No, I think I will just wear it. I don't want to take it off now that I have it.\" Marcella batted her eyes at Noah. \"I'm sure that I will hear many women's hearts shattering into a million pieces once we walk out of that door, and I am looking forward to it.\"\n\n\"As long as you tell everyone that it was the most romantic proposal ever,\" he chuckled. \"Although having an actual story to tell them would be better. I have an idea, trust me?\"\n\n\"No,\" she laughed. \"Besides, it's my turn to...\" She turned to eye the salesman before continuing, \"make plans.\"\n\n\"No arguments from me. It was just a suggestion of something that I thought you might like, rather than going straight back to StarCity,\" Noah said, holding up his hands in a gesture of surrender. \"Maybe another time.\"\n\nMarcella narrowed her eyes at him. Noah was far too amenable. Even with the agreement, she had thought that he would chafe at having to give her the lead on all things. They had stipulated the lead with her plans, but she was taking control over all their interactions and had expected him to rebel, at least a little, but he was being far too calm about the situation. It made her curious as to why and what he had been about to suggest.\n\n\"Sure, you can tell me about it over dinner,\" she said with a little too much flippancy, and he raised an eyebrow at her again. There was something else going on with him, she was sure of it now. She just had to find out what.\n\nThe sales clerk provided Noah with the receipt and an empty ring box, in case they changed their mind about the grand gesture he had in mind for proposing publicly. Then they left the store and walked back to the car in silence.\n\n\"Would you like me to drive?\" he asked when they were a few steps from the car. He was working out quickly tha, if he wanted something, he had to make it either her choice or her idea, or she would just shut him down. It was going to be a long two weeks unless he learned how to play her game. He didn't mind too much, however, because, as he had warned her repeatedly, she was setting a precedent for what would happen when he was finally in control of this game that they were playing.\n\n\"Sure, you can even choose the restaurant that you are taking me to for dinner,\" she said magnanimously. \"Just not anywhere, please. We might bump into people we know.\"\n\n\"Okay,\" he drew out the word, surprised by her sudden acquiescence on the driving and dinner. He opened the passenger's side door for her and held it open while she looked at him.\n\n\"Thanks, but I am not an old lady or an invalid. I can manage a car door on my own,\" she murmured testily.\n\n\"How do you feel about Indian food?\" he asked, realising that he didn't know a great deal about her preferences as they usually ate in the same locations.\n\n\"I like Indian food,\" she said, as if the choice was of no consequence, and once again, they travelled in silence, until Noah pulled up at a small suburban restaurant.\n\n\"Madrina would sometimes order takeaway food from here. It was her secret indulgence, but she didn't fool any of us, and it became a thing as we got older. When we were in big trouble, we picked up some curry and took it home for her to soften the consequences,\" Noah explained.\n\n\"Did it work?\" Marcella asked, surprised by this insight into his past.\n\n\"Not as often as we would have liked it to,\" he laughed. \"We got in trouble a lot, and a woman can only eat so much Indian food.\" He was pleased that she laughed with him as he guided her into the restaurant, and they were shown to their seats by a waitress in a dazzling sari.\n\n\"What about you? Did you have tricks for getting out of trouble?\" he asked, wondering if she had managed to avoid some of the abuse she had been exposed to as a child.\n\n\"I guess kids all have their own tricks. I'm not prepared to give mine away just yet. I still use them from time to time,\" she winked and studied the menu. \n\n\"Probably a good thing. I believe Stevie has a wild, bad-girl side that I am looking forward to seeing,\" he chuckled again.\n\n\"And Freddy North doesn't? There must be a good story to go along with the fact that I am not the only one at this table with a secret identity,\" she challenged.\n\n\"When I'm Freddy, I don't have to worry about the responsibilities that come with being born into a family like mine. I can just kick back, relax and go with the flow,\" he said easily. \"I just assumed that's why you had one.\"\n\n\"True, I'm more of a free-spirit when I am Stevie,\" she said softly. Not that she had ever had the opportunity to become Stevie before now, but she had daydreamed about it a lot. Once Noah had dropped the professional clothes and demeanour that he always wore like battle armour, he could be quite charming, she thought. \"She doesn't get into nearly as much trouble as Marcella does, though. In fact, she avoids trouble at all costs, and you, Freddy, I have no doubt, are trouble personified. Even Madrina calls you the trouble maker,\" she teased.\n\n\"That's where you have it wrong. Noah is the troublemaker. Freddy, just like Stevie, tries to avoid trouble at all costs. Hence my offering you help, so we can both avoid any more trouble. We've both had enough lately, don't you think?\" Noah asked, one eyebrow raised.\n\n\"And what trouble have you been in lately?\" she asked and instantly regretted it. She had been the cause of most of the troublesome situations that Noah had had to endure recently.\n\n\"Let's just say that neither of us are angels and leave it at that,\" he chuckled.\n\n\"Tell me some of the trouble that you and your brothers got into as kids?\" she asked, knowing she was tempting fate, but she could make up at least one story from her childhood or tell him something that Olivia did.\n\nNoah talked about growing up on the station south of Darwin, as well as coming to stay with Madrina when they went to high school and college. He told more about his brother's antics than his own, and she reciprocated by telling a modified version of one or two happy occasions with her older sister Jessa.\n\n\"You see, the problem was not getting out of the house that night. It was getting back in, in the middle of the night. Olivia woke up screaming, and my father came rushing in, and we were busted,\" she said, her voice trailing off with the remembered consequences of that amazing night. He didn't press her on it, though. Instead, he redirected her thoughts.\n\n\"And, here, I thought that Jessa was the quiet, angelic one of the three of you,\" Noah chuckled as they stood and left the restaurant. \n\n\"You would,\" she said and rolled her eyes, but her good humour remained. Marcella couldn't believe the change in Noah and how easy it had been to just be in the moment with him, like they were on an actual date. Why couldn't he be like this all the time? Whatever guard he'd had up around her in recent weeks seemed to have dropped, and he was back to being the super-sweet guy who had picked her up at the airport and flirted with her, until she made a move on him for more than just flirting. \n\nShe realised, as she got into the passenger's side of the car without even thinking twice, let alone taking control of the situation, that she had lost her edge from earlier. She needed to gain it back, and she knew just how to do it. Her gender had always been her best tool in her arsenal, some might say weapon.\n\n\"This is nice,\" she said softly, reaching out to graze her fingertip over the collar of his polo shirt once they were on the road again and he couldn't do anything but drive. \"I'm so used to seeing you in suits and you cross-examining me, that it's nice to see the more relaxed side of you.\"\n\nFeeling a shiver run down his spine at the tickling feel of her fingers, Noah smirked at her obvious attempt to get one up on him again. He decided to give as good as he got. His hand moved from the stick shift to caress the hem of her dress that half covered her thigh, enjoying the contrast between fabric and skin as much as the almost-imperceptible gasp that his touch elicited.\n\n\"You have probably worn Chanel and Prada as often as I wear a suit. I must say that I liked the casual look on you today too,\" he said, noting that she had relaxed after his initial touch. He left his hand where it was as the car continued on in cruise control. After a few minutes, Marcella looked down at his hand, but didn't remove it from her leg. 'Interesting,' he thought, and the arrogant smirk reappeared on his face briefly before he schooled his features again.\n\n\"Well, a girl has got to compete with Armani and Hugo Boss in the legal world,\" she laughed, being on safe ground in this topic at least. His hand felt huge on her thigh and covered most of the exposed skin above her knee. \n\n\"I would bet that even your underwear is designer label,\" he grinned, pushing the conversation into territory that he was sure she didn't want it to go into. He felt the muscles in her thigh move, as she curled her toes. He squeezed her thigh, emboldened by the fact that she had not asked him to move it, just to see how she would react.\n\n\"You're one to talk,\" she murmured. Then, refusing to be the first one to concede a point in this bizarre game, Marcella turned slightly in her seat and ran a finger from his collar down his chest to the logo emblazoned there. \"And don't bother telling me that you don't know the brand or that it came with a suit, because I don't believe you.\" Turning her body further toward him had made her skirt rise higher on her thigh. Noah's hand followed her dress' hem and, in a caressing movement, rose higher up her thigh. Marcella drew in a sharp breath. \n\n\"Something wrong?\" Noah asked belatedly, stifling the small laugh that crept into his voice.\n\nMarcella had considered ending their teasing game until she caught that laughter in his voice. He was laughing at her again! Upping the stakes, she ignored his hand and stroked her own over his chest, finding herself surprised at how muscular his chest felt. While many women spoke about being attracted to men based on their eyes or ass, broad shoulders and a well-defined chest were what did it for her. She let her hand linger over the soft material of the shirt covering his chest as she spoke. \n\n\"This is nice, but nothing feels as good as the pure silk of a business shirt, does it?\" she suggested, purposely using a soft purring voice, just like the voice she had tried to use on him earlier.\n\n\"You have a very bad habit of avoiding my questions,\" he said and gave her thigh a quick, light smack, before curling his fingers around the soft flesh of her inner thigh and giving her leg a squeeze. \"Perhaps I enjoy the feel of pure silk against me in the form of a woman wearing lingerie,\" he countered, continuing the conversation as if he had never rebuked her.\n\n\"I do not avoid your questions,\" she replied, feigning innocence while letting her hand trail down his body, satisfied with the fact that his breathing had begun to increase and she knew that she was affecting him far more than he was affecting her. Her eyes glanced quickly at his groin, and she smirked. After seeing his large bulge, she knew that she was winning this small battle, despite how aroused she felt. \n\n\"Liar,\" he growled, smacking her thigh lightly again. \"Be careful,\" Noah continued, his voice ominously low. \"If you act like a naughty little tease, I will treat you like one.\"\n\n\"You wouldn't dare,\" she challenged, caught up in the scene they were creating and aroused enough to wish that he would, as she lowered her fingers towards his groin, skating over the muscles of his abs before walking their way over his zipper.\n\nNoah braked hard, then pulled off to the side of the quiet street.\n\nMarcella snapped back to reality, stunned by the speed at which the game she had been playing had gone pear-shaped, and knew that if she backed down now, she would never get the upper hand on him again. She froze in indecision.\n\nThere was no indecision in Noah. She had pushed him far enough, it was time to put up or shut up. He undid her seat belt, pulled her awkwardly across the centre console and across his lap. Opening his door widely, to accommodate her head and shoulders, he lifted the hem of her dress and spanked her bottom hard. Surprised that his hand spanked bare flesh, he looked appreciatively at the lace thong before spanking her again, eliciting a tirade of curse words from the sexy woman.\n\n\"Stop!\" she screamed, flailing her legs around as his free arm tried to hold them in place.\n\n\"I'll stop when you admit that you like to tease and have no intention of following through on it. All that fucking teasing, touching my neck and shirt. You're a flirt at heart and need someone to take charge and make you put up or shut up! I'm only human, Marcella! There are only so many times I can walk away from you flirting and teasing me the way you do!\" He punctuated his words with more spanks to her increasingly-rosier cheeks. \n\nHer mind rebelled. What the fuck did he know? But the fact was, it was true. Ever since his first rejection of her, she had tried to get under his skin, with no intention of following through. She hated the way that he seemed to be able to read her mind. His sweetness at the restaurant and his large hands on her thigh had only increased her need to get a reaction from him. No matter how much she had treated their bantering like a game, she realised that she wanted this, wanted Noah. Finally, with tears making her perfect make-up run, she cried out, telling him what he wanted to hear. \n\n\"Okay I admit it, I like it. I wanted to push you over the edge so that you would lose that fucking arrogance, the cool control that you exercise over everything. Guess I won, huh?\" Marcella hung her head, feeling her precarious position as her muscles relaxed and he gently caressed her sore ass. She fully relaxed over his lap for a moment, preparing to fight her way back to her seat. She could feel his hard-on pressing into her belly, which only served to arouse her even more. If he was hard, then he couldn't claim that he wasn't interested in sex with her. Would he still reject her, and more importantly, would she make good on her revenge by rejecting him? \n\nNoah could smell her arousal. He was surprised. He would have thought that she would have been a top, given her past, and had made peace with that fact. He had moved on to considering how he would negotiate fucking her so they would both be satisfied. He would never have guessed that she had such a submissive side hidden behind the tough-bitch, professional woman persona she radiated at the world. His cock was hard and throbbing as he looked down on the beautiful woman in such a vulnerable position, and his heart skipped a beat. She was his one, and now, more than ever, he wanted to make that a reality. But going too fast could ruin it all. He didn't want to be just another guy she fucked and left before she became invested in the relationship.\n\nOpening the door had triggered the dome light and both reading lights, filling the car with bright light. He caressed the bright, rosy pink skin of her bare ass before his hand slid between her thighs, his fingers grazing over the lacy thong just to feel how wet she was. Her heated whimpers rose up to his ears, and he continued to tease at the folds, pulling her thong up to add further sensation. He pushed her panties to the side as his fingers entered her, and he felt her moist heat.\n\n\"Once again you haven't answered me properly.\" His free hand smacked her ass again, making her squeal and buck. \"You're a big tease, aren't you?\"\n\nMarcella whimpered, and began to struggle against him to get free. Her senses were returning, and she needed to get out of this position, before he pushed his advantage any further.\n\n\"Answer the question, Marcella,\" he said sternly, but didn't raise his voice as he continued to tease her.\n\n\"Yes, I was teasing you,\" she snarled angrily, despite the thrill of pleasure running up her spine and filling her tummy with butterflies.\n\n\"You need consequences, Marcella. You need a man who can treat you the way that you deserve to be treated when you push too far, don't you?\" He pressed her with his words as his fingers moved in and out of her tight wet pussy. \"Super bitch by day and a naughty tease, who needs to follow through on her promises, at night,\" he smirked, knowing she couldn't see him and enjoying her struggles as she both writhed in the pleasure that she felt and squirmed with her need to move from his lap, and his dominance.\n\nMarcella whimpered, feeling humiliated at being made to admit her private desires to Noah, of all people. She felt herself bending to his will but still refused to answer him. Not that it mattered much, seeing as how he seemed to be able to read her mind. Even so, she still didn't want to admit to her deepest desires. She was strong, and she could resist him. Just like she had resisted every other man who had tried to control her in the last six years. She would take the orgasm building in her belly as her due, and he could enjoy a night with his own hand on his dick.",
        "Noah was beyond pleased, despite her guilty silence. His fingers continued to work on her as the thin material of her thong stretched and rubbed at her swollen clit. He felt her thighs tremble moments before she cried out and arched up, her muscles stiffening in the moment before she came over his hand. He withdrew his hand and wiped it over the back of her skirt. The dress would be ruined now. He smirked at the angry tirade that would probably ensue later and would give him another excuse to punish her and further his exploration of her.\n\nMarcella was mostly dead weight as he moved her back to her seat like a rag doll. Then, Noah swung the door shut, put the car in drive and sped away before she had a chance to put her seatbelt on. \n\nThey rode in silence for several kilometres, as Marcella tried working through what had happened. Noah was hard. She could see the magnificent lump inside his cargoes and wondered if he wore boxers or went commando. She pulled her eyes away from temptation and stared at the dark beyond the headlights, as the heat of her spanking slowly eased. She remained wet and in need. She squirmed, knowing that Noah would notice. Noah's bright, intelligent eyes noticed everything. Marcella pondered breaking the silence, but how? What would she say? How could she wrest back control from him after that? She stole another glance at his cock. \n\n\"Just in case you have any doubt about how to affect me, Marcella,\" Noah growled and pulled her small hand and positioned it over his hard-on. He rubbed her hand along the long bulge and tried wrapping her fingers around it, through his pants. She was glad that he was hard, glad that she wasn't the only one in need. Glad that she wasn't the only one crumbling under the months of flirting and teasing they had both been trading. She worked the flap covering his zipper. If he could take an orgasm from her then fair's fair, she thought, with a malicious grin.\n\n\"Stop!\" Noah commanded, as if he had read her mind again. \"Not while we're driving. Do you always have to live so fucking dangerously and take such big risks? Can't you feel how close to losing control I am?\" He turned his intense gaze on her, briefly. \"If me losing control was the aim of your game, then congratulations. What just happened proves how out of control I am around you,\" he almost shouted at her. \"Caress me if you like, now that I have shown you how you affect me, but you stay buckled in your seat, for fuck's sake!\" He let out an explosive breath, and Marcella smiled in triumph. \n\n\"Winners are grinners,\" she said cockily, even though she didn't feel quite so cocky inside. She wanted him on her terms, and it was obvious that he wanted her. So why had he been holding back? And how long had he been holding back for?\"\n\n\"I said close to losing control,\" he smirked at her. \"Maybe hold off on that little victory party of yours because, from where I am sitting, I definitely won round one of your little game.\"\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "runaway",
        "blackmail",
        "rules",
        "family",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-17"
}