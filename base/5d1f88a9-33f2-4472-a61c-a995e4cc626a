{
    "title": "On a Slippery Slope Ch. 05",
    "pages": [
        "Sunday dinner with my family is a carbon copy of many in the past, except this time Angie and I keep exchanging little glances and secret smiles, both of us thinking about what we experienced just a few hours earlier. From time to time I force myself to think about something else or join in the conversation when I feel myself starting to lubricate. I am certain Angie is doing the same thing.\n\nAt the first opportunity, we excuse ourselves and retreat to my apartment so we can watch at least one of the unedited videos of my first encounters with the twins. Angie has her work clothes with her so she can spend the night.\n\nI let her choose and she decides to watch the first one because it features the leg slings that she has yet to experience.\n\n\"Let's play with ourselves but not touch each other tonight. I want to save that for Tuesday when we have all new unedited material,\" she suggests. I agree with her.\n\n\"Would you like to borrow a vibrator or dildo?\" I ask.\n\n\"I think I'll just use my fingers. It'll be like old times,\" she responds. \"Can you imagine if we had known then what was in store for us?\"\n\n\"Oh Lord! Our little brains wouldn't have been able to deal with it,\" I answer with a smile as I hit the play button.\n\nWe are both enthralled. I have watched this video countless times, but with no editing we are being treated to a lot of material that was cut from the copy I was given.\n\nThe first surprise is both twins entering the room together. They are naked and both are sporting impressive erections. My strip tease must have sparked their interest.\n\nOne of the men fastens my restraints while the other retrieves the cat o' nine tails from its hook on the wall. While that twin begins to run the silken ropes over my body, the other is taking measurements with a cloth tape close to where the ropes are tracing my skin.\n\n\"Well, shit!\" I exclaim. \"That's how they did it.\"\n\n\"Did what?\" Angie asks.\n\n\"The arch they built for me fits like a glove. I couldn't figure out how they got everything exactly right. I had no idea there was more than one guy in the room and the tape just felt like one of the ropes on the cat. I'm impressed.\"\n\n\"They built an arch for me too,\" Angie offers, \"and it also fit perfectly, but they never had an opportunity to measure me.\"\n\nI am five-five while Angie is three inches shorter. All our height difference is in our legs. The rest of our bodies are the same size and we have been swapping clothes for years. The only difference is that a knee-length dress on her exposes more leg on me.\n\n\"No,\" I tell her, \"but they have precise info about me and were probably able to study you on the sly to make an accurate estimate of the difference in our height.\"\n\nSuddenly we are distracted when one twin leaves the room and the other, presumably Connor, buries his face between my thighs and makes me cum. Twice. We then get a good view of his face as he lies alongside me and finger fucks me into another orgasm. He is not wearing a condom. Angie and I are now squirming on the sofa.\n\nWe watch, fascinated, as Connor gets out of bed and quietly departs just as Brian enters. Both men are still fully erect but Brian has put on a condom. I notice that they leave the door slightly ajar to avoid making noise. The edited version of the videos only shows the doorway when I enter the room and much later as I leave it to search for my stalker.\n\nOne camera captures Brian's face perfectly as he slips his body underneath the spreader bar that is holding my legs wide apart. It is like an all-new video as we watch him ease his magnificent cock into my pussy and slide his arms under my shoulders. Angie pulls the hem of her skirt up out of the way and slides a hand down inside her panties. Glancing over at her with a heavy lidded smile, I do the same. Within seconds we are working on our pussies with experienced fingers.\n\nBrian fucks me for a long time and his face is visible throughout most of our encounter. Toward the end, when he is pounding himself into me and my nipples are dancing to his rhythm, his face contorts as he loses control. My screams in the video compete with the muffled cries in my living room as Angie and I each clamp a hand over our mouths and cum within seconds of each other.\n\nWe are only vaguely aware that Brian is now kissing me and I am eagerly returning his kiss. Moments later, when I become aware of my surroundings, I stop the video.\n\n\"Oh God that was good,\" exclaims Angie, her fingers still moving very slowly inside her panties.\n\n\"I'll say,\" I respond breathlessly. \"I needed that. I wanted to do it at the dinner table, but I thought my parents might think that was going a bit too far.\"\n\nAngie starts to laugh and I join her, both of us responding to the mental picture that forms in our heads. Soon we are laughing uncontrollably and rolling about on the sofa like a couple of kids.\n\nWe decide to have a glass of wine and calm down before we watch the second video. Later, when I hit the play button, Angie is fascinated by all the anal activity that Brian has initiated. Then Connor fucks me with the butt plug in place. She cums twice before I use the safe word, forcing Connor to withdraw his cock and remove the plug. Moments later he carries me across the hall to place me on the bed. I hold back on my orgasm so I can cum as I watch him explode inside me several minutes later.\n\n****\n\nMonday starts out as a drag but then Brian and Connor, one at a time of course, find reasons to appear in our office spaces. Connor searches me out and identifies himself. From the way he is acting, I conclude that he's the one who fucked me on Saturday night. Later in the day, Angie reports the same suspicion about Brian.\n\nBut then we decide we aren't sure. Are they checking us out after they fucked us, or checking us out before trading places and fucking us this coming weekend? We are certain they will swap the next time, so we change our minds. And then change them back again. The only thing we know for sure is that one of the twins has not yet had the pleasure of doing Angie. Whoever he is, he must be ready to burst into flames by now.\n\nBrian drops by for coffee the following morning and Connor makes an appearance in the afternoon. We are happy to see them, but our attention is riveted on the videos we're certain to find in our mailboxes when we get home. But there is nothing of note in either box. Tuesday has let us down.\n\nWednesday is a different story. We see no sign of Brian or Connor during the day, but our mailboxes are stuffed with goodies when Angie and I get home from work. We are on the phone together within seconds. We each have a video and a note. My note says the usual and tells me that I know what to wear. Angie's makes a point of telling her to skip the underwear. We are both told not to masturbate on Friday and to show up at seven sharp Saturday night.\n\n\"Wanna watch this stuff tonight?\" Angie asks a little breathlessly.\n\n\"Oh, I don't know. I had all that scheduled for last night. Tonight I have other plans,\" I reply, grinning into the phone.\n\n\"No you don't, you liar!\" squeals Angie.\n\n\"Well, let me check my calendar again. Oh my, I was looking at the wrong week. I can accommodate your request after all.\"\n\n\"Bitch!\" she says with a laugh. \"I'll stop by the deli on my way over.\"\n\nAngie arrives in record time; her face flushed with excitement, and drops a grocery sack on the kitchen table. Returning to her car, she reappears moments later with her overnight bag.\n\n\"I brought my work clothes for tomorrow. I doubt I'll be going home tonight,\" she says, smiling broadly at me.\n\n\"I doubt it too,\" I reply, smiling back at her, struck again by how beautiful she is, particularly when she gets excited. Just looking at her is getting me aroused.\n\nWe take our time with dinner, deliberately talking about everything except the videos and what they will incite later in the evening. Eventually I can't stand it anymore.\n\n\"Go jump in the shower,\" I tell her. \"I'll join you in a couple of minutes.\"\n\nI don't have to tell her twice. She's off like a shot. I throw the remnants of dinner in the trash, unfold the sofa bed, strip off my clothes and step into the steamy enclosure. As usual, this is foreplay for us and we are soon in a fever pitch but careful not to take things too far.\n\nWe dry off, make a few passes with the hairdryer, and put on our nighties. She is wearing pale yellow to set off her olive Mediterranean skin. I have chosen green.\n\n\"Which one should we watch first?\" I ask.\n\n\"I don't know. Let's do what the twins apparently do and flip a coin.\"\n\nI fish around in my purse and come up with a quarter.\n\n\"Call it in the air. If you are right, we watch your video first,\" I say and flip the coin high in the air.\n\n\"Tails!\"\n\nI let the coin fall to the carpet and we both peer down at it. Tails it is. I hold out my hand for her video which she retrieves from her overnight bag. Setting the system up only takes a few seconds so we are soon sitting side by side on the sofa bed with our backs against the cushions. I hit the play button.\n\nAngie is standing near the middle of the room, staring at what the twins have prepared for her. I recognize the bondage arch. It is identical to mine except it has not yet been modified to provide the small vibrator above the recesses for her knees. I suspect that the twins wanted to test it on me first. Based on the results of my encounter with the little nub, her arch has probably been modified already in preparation for Saturday night.\n\nIt is the other device that captures my attention. The twins have found an authentic gynecological examining table somewhere, complete with the little stool the doctors sit on before they roll up between a patient's legs. But this one has a peculiar looking addition. It looks like a gate which has been swung out of the way on massive hinges attached to one side at the end of the table. I lean forward to study the contraption. Out of the corner of my eye, I can see Angie studying me, obviously interested in my reaction.\n\nA flat plate has been welded to the topmost bar of the gate. An enclosure that resembles a Quonset hut is fastened to the plate. A small camera is mounted on top. A heavy steel rod protrudes from one end. One of the wall-mounted cameras suddenly zooms in on the device and I realize that a large dildo has been attached to the end of the rod.\n\n\"Oh, my!\" I exclaim when I realize I'm looking at a horizontal fucking machine. From somewhere in the building, Angie's twin activates the machine and the large cock moves slowly back and forth with a stroke of six or seven inches. The machine stops, having provided enough of a demonstration for Angie to get the picture. I get the picture too. That thing is going to fuck her brains out later in the video.\n\nThere is a small table near the machine that has a mask, a cat o' nine tails, a hand towel, and a tube of lubricant. I note that there is no butt plug but say nothing to Angie.\n\n\"Remove your clothing,\" orders The Voice, and Angie begins the sexiest strip tease I have ever seen. She struts around the room examining the table and the arch, slowly undoing one button at a time until her dress falls open to reveal her red bra and panties. She slowly peels the dress off her shoulders and tosses it aside. Sashaying up to one of the cameras, she looks up into the lens with a radiant smile and unhooks her bra. Perfect breasts with alert nipples dominate the screen.\n\nTossing her bra in the general direction of the dress, she struts back into the middle of the room, turns toward one of the cameras, and eases her panties down over her elegant legs. As I had done, she gracefully steps clear and leaves them where they are. Then she does an astonishing thing.\n\nTurning to face a different camera with her feet about eighteen inches apart, she puts the middle finger of one hand in her mouth, then removes it, slides the hand down her stomach, and eases the finger inside her pussy.\n\nI'm about to go wild watching her. I can only imagine what her twin was feeling, knowing he had won the toss, or whatever, and would soon be fucking her. Whatever he was thinking, The Voice did not utter a word.\n\nAngie slowly removes her finger, brings her hand up to her pouting lips, and slips the finger into her mouth.\n\n\"You little slut,\" I whisper. Angie just smiles at me.\n\nAfter removing her finger, she struts back over to the table, picks up the tube of lubricant, squeezes a generous blob into her hand and turns to the large dildo at the end of the fucking machine's shaft. After smearing lube on the appendage she spends half a minute giving the large cock a hand job, smiling all the while up at each of the cameras in turn.\n\nApparently satisfied that she now has everyone's attention, she wipes her hand on the towel and strolls back to the little stool. Placing one foot on the seat, she slowly unbuckles the strap around her ankle, removes the shoe, and sets it aside on the table. Repeating the process with the other shoe, she hooks one finger through the straps of both and struts back across the room to drop them on top of her dress.\n\nAngie had just taken a full four or five minutes to disrobe. At most, it had taken me two minutes and I thought I had done a pretty good job of holding the twins attention.\n\n\"Get up on the table, place your feet in the stirrups, and put on the mask.\" directs The Voice. There is more distortion than usual which leads me to believe that her twin is having trouble talking. Angie does as she's told and is soon lying on the table just as she would be in the doctor's office except she is completely naked and undraped. When she is comfortable, she lifts the mask up, winks at the camera, and puts the mask back in place.\n\nI pause the video and give the remote to Angie. It's her show.\n\n\"Un! Fucking! Believable!\" I exclaim. \"What a performance! I can't believe your twin didn't have to jerk off watching that.\"\n\n\"He didn't,\" Angie replies, as she restarts the video. \"I can assure you. You'll see in a few minutes.\"\n\nSeconds later we see her twin enter the room, naked and fully erect. He approaches the table and begins to restrain her with ropes I hadn't noticed before. I was too focused on the fucking machine. He lashes her feet to the stirrups and her hands to either side of the table. A wide belt, similar to the one I experienced the first time, is fastened across her waist. Angie is now at the mercy of her visitor.\n\nHe wastes no time. Pulling the stool into place, he sits down, and buries his face between her thighs.\n\n\"He went straight for my clit,\" Angie interjects as her image on the screen immediately cries out. \"I was so amped up I think I came in about thirty seconds.\"\n\nIt seems like a lot less than that to me as I listen to my friend vocalize her arousal and watch her body involuntarily buck against the restraints as an explosive orgasm takes control of her body.\n\nAngie's twin gives her no rest, launching her immediately into another short climb toward a second orgasm. She is crying out continuously now and throwing her head from side to side, long hair flying, her legs still shaking from the aftershocks of her first climax. Seconds later, she cums with a shriek.\n\nThis time her twin allows her to come down slowly, licking the insides of her thighs and gently stroking the backs of her legs. When her breathing returns to something near normal, he rises from his stool and swings the fucking machine into position on well-oiled hinges.\n\nThe mechanism is more complex than I first thought. It is mounted on rails and has several adjustment knobs that he uses to line up the tip of its cock with Angie's pussy. Extending the dildo to the end of its stroke, he energizes the camera on top of the housing, gently makes contact with her, and then slowly pushes it all the way inside by moving the entire apparatus forward. Angie lets out a low moan of pleasure.\n\nAs the lubricated cock disappears inside her, I notice a raised nub on top of the shaft directly above the synthetic testicles. Angie pauses the video.\n\n\"See that little thing on top of the cock?\" she asks. I nod my head, having just figured out why it's there. \"I saw it when I was lubricating the dildo and almost climaxed on the spot when I realized what it was. You won't believe how good that thing feels until it's your turn on the table.\"\n\nThe camera perspective is unique. We can see Angie's pussy facing the camera, the insides of her thighs, about six inches of the steel shaft, and the back end of the dildo that is now buried inside her. My forty-six inch TV screen is completely filled with that image.\n\nWe watch in fascination as the large cock finishes entering her and the little nub parts the protective hood to make initial contact with her clit. Then the machine slowly begins to do its job, withdrawing until only the tip of the dildo remains inside her pussy and then advancing forward again, picking up a little speed with each stroke and softly bumping the nub against Angie's clit.\n\nNeither of us is a stranger to being fucked, but until the videos featuring the twins, we've never watched it happen to us. That's exciting enough by itself, but what we're watching now is one of the most remarkable things we have ever seen. Porn movies show cocks fucking pussies, but nothing like this.\n\nOver the next minute or two, the cock continues to pick up speed. Angie's moans, cries, and yelps increase in volume and accelerate along with the moving shaft. Soon the cock is fucking her at something like the speed I experienced on the horse, far faster than a human male, but with the added stimulation of her clit by the little nub.\n\nAngie cums with a loud wail but the speeding cock continues to pound into her pussy and she cums again within seconds.\n\n\"Oh my God!\" she exclaims as she pauses the video and begins to rub her fingers up and down her slit. I don't know what took her so long; I've been doing that for a couple of minutes now.\n\n\"I think it was about here that I went into some sort of coma,\" she continues. \"I wonder how many orgasms I had.\"\n\nWe don't find out the answer to that question because we can't tell where one orgasm stops and the next one begins. We do know that the machine fucks her for another couple of minutes and then slows to a stop just as Angie and I cum together side by side on the sleep sofa. Each of us is clamping a hand over our mouths so we can listen as Angie's screams fade into sobs on the video.\n\nOne or both of the twins has a sense of humor because the word 'INTERMISSION' appears on the screen. Angie pauses the video so we can both recover.\n\n\"Holy shit!\" I whisper as I try to slow my breathing down. \"I hope they use that thing on me Saturday night.\"\n\nWhen our breathing finally slows, Angie restarts the video. The first image is a shot of the empty table with the fucking machine once more pulled off to the side. From somewhere off-screen, Angie lets out a sharp cry.\n\nAnother camera takes over and this one displays Angie draped across her arch, strapped and cuffed into place. Her hands are fiercely gripping the handles on the far side. Her twin is wielding the cat o' nine tails, and as we watch, he strikes again.\n\n\"Harder,\" she orders, pulling her face free of the arch. The twin complies, lashing her with more force several times.\n\n\"That would be it for me,\" I declare. \"I'd be screaming the safe word like crazy.\"\n\n\"I loved it,\" she replies. \"Watch what happens next.\"\n\n\"Harder,\" demands Angie on the video again, and the whip comes down with more force.\n\n\"This is just about perfect,\" Angie says, pointing at the image on the screen. \"He is working right on the edge of what I can tolerate.\"\n\nThe twin continues for a minute or two as the camera zooms in to focus on her bright red little ass while she squirms and wiggles with pleasure. Even with her face buried in the arch, her cries are clearly audible over my new sound system. A moment later, she pulls her face clear of the arch one more time.",
        "\"Harder!\" she cries. \"Harder!\"\n\nHe does as she demands, but only strikes her a few more times before Angie lets out a piercing cry and has a thunderous orgasm, bucking and struggling against her restraints. The lashing stops immediately and her cries quickly taper off to erratic sobs and hiccups, her face now pressed once again into its opening in the arch.\n\nHer twin sets the cat aside on the table and quickly steps in behind Angie's widely spread legs. He is stiffly erect and very clearly ready for the final act. Pressing the head of his impressive cock against the entrance to her pussy, he slowly eases inside her hot wetness.\n\n\"Oh yes! Yes! Fuck me,\" the televised Angie demands.\n\nFor several minutes he fucks her in every way possible. Short strokes, long strokes, and a variety of penetration angles make me wonder if this might be Brian since the technique was a near copy of the way he fucked me at the end of my first encounter. From the sounds Angie is making, she couldn't care less which twin is providing the service.\n\nEventually her twin abandons all attempts at creativity, grasps her firmly by the hips and begins to pound his cock into her pussy at a furious pace. Angie announces her approval with a series of sharp yelps as she rockets upward toward another spectacular orgasm, finally going over the edge as he lets out a guttural roar, flooding her pussy with several intense contractions. He slows his pace, then stops altogether and falls forward, his torso resting lightly on her back. As he kisses the nape of her neck, the screen goes blank.\n\nAngie and I are squirming side by side on the sofa bed, each highly aroused by what we have just seen. I pull a pair of vibrating bullets out of my bag of goodies and give one to her. In less than a minute we are screaming once again into the palms of our hands as we cum together, our bodies shaking in unison.\n\n\"Oh God,\" I whisper when I can breathe again. Angie can't talk yet, so she just reaches out to give my hand a squeeze. A minute or two later she recovers.\n\n\"Do you realize we have one more video to watch? That was clearly edited down to the important stuff, so I doubt we've been sitting here more than a half hour. And we've already cum twice,\" she announces.\n\n\"I want to watch it, but let's have a glass of wine and rest for a while,\" I offer. Angie accepts and I get up to pour the wine.\n\nFor the next few minutes we relax, talking idly about Angie's experience. Before we know it, our glasses are empty. I take hers, set both aside, get up to insert my video into the home theater system, and press the play button.\n\n\"I love horseback riding!\" Angie shouts when she sees my oil drum, saddle and dildo on the screen.\n\n\"The closest you've ever been to a horse is the merry-go-round at the county fair,\" I respond, giving her shoulder a playful shove.\n\n\"I know,\" she says \"but I can already tell I'm gonna like it.\"\n\nAfter that she is speechless for several minutes while she watches what happens to me on the horse. I'm speechless myself. I remember grinding my pussy into the little bump on the saddle as the machine fucks me and I have a vague recollection of zoning out after a couple of orgasms. I do not remember having several more before my twin stops the machine and unclasps my cuffs. I remember being airborne when he picks me straight up off the dildo, but watching him astounds me. He is incredibly strong.\n\nAngie is moaning softly, her hand in between her thighs. When the camera view changes to show my punishment, she stops and reaches over to take my hand.\n\nMy punishment is quite tame compared to Angie's but I enjoy watching it for the first time, remembering the sensations of the silken cords striking my ass, the slight stinging sensation very pleasurable. My orgasm surprises Angie and then I remember that her bondage arch has not yet been equipped with the little vibrating nub. I pause the video and explain it to her.\n\n\"You told me Saturday night that you liked the whipping. I'm glad you allowed it to continue. It doesn't have to hurt much to be pleasurable. I just happen to like it a little rougher. If you want, I'll be happy to spank you sometime.\"\n\n\"We'll see,\" I reply, blushing furiously because I have thought about her spanking me a lot since the night I did it to her. To divert her attention, I resume the video.\n\nThe butt plug fascinates her. We own one, but haven't used it, so she really has no idea about what to expect. While my twin is fucking me, I try to explain to her how extraordinary it feels to be fucked with the plug in place. But in the end, we both know she has to experience it for herself.\n\n\"I want to do it now,\" she announces hoarsely. \"I can't wait until tomorrow night. Since my twin didn't do anything anal to me Saturday night, the other one might not go so far as to use the plug. He'll probably just do that bowling ball grip thing.\"\n\n\"Are you sure?\"\n\n\"I'm sure and I prepared before I came over here tonight, just in case we decided to do something really naughty.\"\n\n\"Then I'll trade you,\" I offer. \"We'll use the plug and I'll fuck you with the strap-on. If you like it, you have to finger fuck me, or something, and then you can spank me.\"\n\n\"It's a deal!\" she squeals, delighted with my proposal. \"But what if I don't like it?\" she continues with smile.\n\n\"Trust me. You'll like it.\"\n\n\"We don't have a bondage arch. How can we do it?\" Angie asks.\n\n\"Why don't we just bend you over the dining table?\"\n\n\"That should work,\" she says as her breathing quickens. \"Can we please get started?\"\n\nI take her hand, draw her to her feet, and lead her into my dining alcove.\n\n\"Find a comfortable position and I'll be back in a jiffy,\" I tell her.\n\nI am back in less than a minute with our new butt plug, strap-on dildo, and a tube of lubricant. Angie's torso is lying across the table with her outstretched hands grasping the edges on either side. She has removed her panties. I raise her nightie above her hips and then decide to prepare her by using the bowling ball grip technique with a well-lubricated thumb. She loves it and cums in less than two minutes.\n\n\"Oh God!\" she cries as her muscles clench rhythmically around my fingers and thumb. \"You weren't supposed to do that!\"\n\n\"Who says?\" I say in response as I begin to ease the plug into her ass. \"Try to relax. This may be a little painful for a second or two. The more you relax, the more comfortable you'll be.\"\n\n\"I trust you,\" she replies and then tolerates the intrusion better than I did the first time around.\n\nI have practiced strapping on the dildo a few times just for fun, so I quickly have everything in place. The dildo is smaller than the twin's cocks, but not by much. I smear on a generous coating of lubricant.\n\n\"I can't feel anything with this, so you'll have to tell me if I'm hurting you or not fucking you the right way.\"\n\n\"Just do it,\" she says breathlessly.\n\nI ease the dildo into her pussy and she immediately lets out a low growl. I pause, thinking I might have hurt her.\n\n\"Don't stop!\" she orders as she pushes back against me. The dildo is now all the way in so I begin to move. Angie cries out immediately but I can tell it's a cry of pleasure so I move faster. In less than a minute I am fucking her fast and hard and she is on her way to a spectacular orgasm. Moments later, she cums with a muffled shriek, her mouth pressed against the table top. I slow to a stop, withdraw the dildo, and then gently remove the plug. Angie starts to sag toward the floor as her knees buckle. I catch her just in time but can't hold her weight so I ease her down onto the floor and then lie down by her side.\n\n\"Unbelievable,\" she whispers, \"Fucking unbelievable.\"\n\nTwenty minutes later she has me on my back in the middle of my bed. Her hot little tongue is darting around my pussy, setting my nerves on fire. I cum with both hands clamped over my mouth, my body quivering with pleasurable spasms of release.\n\nAngie lies by my side while I recover. We hold each other for a while and then she makes an announcement.\n\n\"It's time. I want you to cum while you're being spanked, so I'm going to put one of the bullet vibrators inside you. You'll lie across my lap just like I did with you before. I'll spank you only as hard as you allow. It will help you cum if you rub your pussy against my thigh.\"\n\nI have fantasized about this ever since the night I spanked Angie, so I don't hesitate. I lie across her legs while she slips the vibrator into my pussy and then I do a couple of test moves against her thigh. It all feels good.\n\n\"You have been a very naughty girl tonight,\" she declares as she administers the first slap, \"so you will be severely punished.\"\n\nIt takes a couple of minutes to determine how much I can tolerate and still feel pleasure. Soon Angie finds the sweet spot and I am hurtling toward what I know will be an astonishing orgasm as I grind my pubic mound into her thigh.\n\nI cum with a scream into the bedclothes. Angie eases the slapping until her soft fingers are merely brushing my skin. Soon we are lying side by side, holding each other in our arms as we drift off into a deep sleep.\n\n****\n\nThe rest of the week is a blur. We are busy at work but still see Brian and Connor on several occasions, exchanging knowing smiles with them each time. One of them is in for a real treat when he gets to fuck Angie on Saturday night. We spend a lot of time trying to speculate about which one it might be. We are no closer to an answer when the weekend arrives.\n\nSurprisingly, the twins ask us out to dinner Friday night and we accept. The meal is great and so is the company, but neither Angie nor I can wrap our heads around the notion that we are sitting across a dinner table from two guys who are going to fuck us senseless tomorrow night but we have no clue which one we'll be with.\n\nSaturday morning arrives. Angie and I meet for breakfast and decide to do our preparations for tonight at my place. We both know what to do, so the only nervousness we feel is just anticipation of the unknown things that will be done to us by the twins. Before we know it, we are approaching the entrance to our bondage site, each of us fairly quivering with excitement.\n\nAs before, we are directed to different rooms. As I had hoped, I draw the examining table with its wonderful fucking machine. My bondage arch is nowhere to be seen, but there is a new feature. A double bed has been placed at one end of the room. There are no visible restraints.\n\nOver the next thirty minutes or so, I have the full oral treatment and then get fucked half to death by the machine. As usual, I forget how to count, so I don't know how many orgasms I have. When I am released from the table, my twin carries me over to the bed and gently places me in the middle. I feel his naked body next to mine as he joins me.\n\nThe second half of my encounter with this twin is sheer bliss. He makes love to me like I've never experienced before. Unrestrained, I am free to touch him but I keep the mask in place. He uses his fingers, lips, and tongue to explore every inch of my body. By the time he enters me I am vibrating with desire.\n\nOur foreplay took so long that we both cum quickly. I fall into a light sleep with him by my side. I do not feel him leave the bed.\n\nAngie is calling my name. I remove the mask and orient myself in the room. I rise to my feet and cross the room to the door. Angie is standing in the hall, naked and beaming from ear to ear. I feel cum leaking out of my pussy and hurry back inside to grab a towel. We finish cleaning up in the bathroom and then get dressed.\n\nOn the way home Angie tells me that there was also a bed in her room. Her twin made her lie on the bed while he gave her a delicious orgasm with his lips and tongue. Then she got to go for a pony ride and had the same experience I had, her legs dangling, helplessly being fucked by the machine into a state of near unconsciousness. She was lifted her off the horse just as I had been and was carried back to the bed. Her experience mirrored mine, her twin making love to her gently but thoroughly.\n\nAngie stays at my place where we talk late into the night about what we experienced. We know that something has changed in our relationship with the twins but can't figure out exactly what it is. We'll just have to wait and see.\n\n****\n\nOn Wednesday the twins ask us out for drinks and we accept. We gather around a table in the pub, drinks in hand. As usual, I study the twins very carefully, trying to detect some differences in their appearance. Angie is doing the same thing. I am making some headway and perhaps she is too.\n\nMidway through our second drink, Brian invites Angie and me over to their house for dinner on Friday night. Connor is nodding his head in agreement. Once again we accept, but I find myself wondering why they keep asking us out but only on double dates. When it finally dawns on me, I excuse myself to go to the restroom, knowing Angie will follow my lead. When we are inside, I turn to her.\n\n\"They're giving us opportunities to learn how to tell them apart,\" I begin. \"That's why we keep getting the double date routine. And it's working. I can see slight differences; a mole here, a small scar there, and some mannerisms that differ slightly.\"\n\n\"I thought that might be what they're doing,\" Angie replies, \"and I can now tell them apart too. That doesn't help me figure out which one is fucking me when I'm blindfolded, and I don't really care, but it's nice to know the difference the rest of the time. I just wish Brian would ask me out.\"\n\n\"I know that you mean. I've developed a little thing for Connor. I love you dearly, but it would be nice to go out on a regular date and have normal sex afterwards.\"\n\n\"I agree. Let's bring the subject up Friday night and see how they react,\" Angie suggests and I concur.\n\nWhen we leave the pub, both of us find videos in our mailboxes. But there is no note. I don't expect one. It takes time for the twins to invent new restraints and set up an encounter.\n\nI grab my work clothes, a nightie, and my little bag of goodies and head for Angie's apartment where we spend the evening watching ourselves get fucked and wearing out our pussies. As good as the videos are, we are not able to tell the twins apart unless we can be close to them in person.\n\nNonetheless, Angie is convinced that Bryan was her guy. I am a little less certain that Connor was my twin. We both acknowledge that trying to determine who is fucking us is fun, but it's probably a futile exercise. The reality is that both men are wonderful at the bondage thing and neither of us really gives a damn who is doing us in those rooms.\n\n****\n\nFriday arrives and we appear on their doorstep on time. The twins turn out to be wonderful cooks and we have a really nice dinner. Both guys are charming and witty. During the evening, I confirm my ability to tell them apart. \n\nAfter dessert and coffee, Angie and I exchange a pre-arranged signal.\n\n\"Okay guys,\" Angie begins, \"we have something to discuss with you.\"\n\n\"We both love the bondage encounters,\" I continue, \"but we'd like to have a more normal relationship with you when we aren't doing that.\"\n\n\"If you agree, and would be so kind as to ask us out individually,\" Angie says, \"we'll accept.\"\n\n\"Can you tell us apart yet?\" asks Connor.\n\n\"Yes,\" we answer in unison. Our hearts are now in our throats. We are taking a risk here. We have discussed the possibility that we'll each be asked for a date by the wrong twin. Connor looks at me and I nearly faint from the uncertainty.\n\n\"Carla,\" he says, \"If you'd do me the honor of having dinner with me tomorrow night, I'd be very happy.\"\n\nAngie must have been holding her breath because I hear her exhale loudly as Brian makes a similar overture to her.\n\nWe can hardly contain ourselves, smiling broadly as we accept their offers, knowing what will happen to us tomorrow night.\n\n****\n\nAngie knocks on my door Sunday morning and we go out to breakfast.\n\n\"Well?\" I ask her.\n\n\"It was absolutely perfect,\" she declares with a grin. \"We had a couple of drinks, a nice dinner, then went to my apartment and fucked like rabbits for the rest of the evening. How about you?\"\n\n\"The same,\" I answer with an equally wide smile. \"That's the first conventional sex I've had in months. I had almost forgotten what it feels like, but now I'm wondering when we'll get notes in the mail. I don't want to give that part up.\"\n\n\"Me neither,\" she responds. \"Do you think they'll pair up with us like on the dates, or will they continue to flip a coin, or whatever?\"\n\n\"I don't know and, strange as it sounds, I don't care which twin does me during the bondage routines. Dating Connor and being fucked senseless by either twin in one of those rooms are two entirely separate things.\"\n\n\"I know. I feel the same way. And I imagine the twins would agree. Why on earth would they voluntarily stop screwing both of us?\" Angie responds. \"That doesn't make any sense at all.\"\n\nI agree with her and say so.\n\n****\n\nUnexpectedly, we both get notes in the mail on Friday giving us our usual instructions.\n\n\"I can't believe they have come up with something new this quickly,\" offers Angie.\n\n\"I don't think they have. I suspect they are trying to let you catch up with my experiences. You haven't had the bed with the slings and they don't know we have already used the butt plug and the dildo on you. I think you'll get both tomorrow night.\"\n\n\"But you won't get anything new,\" she responds, apparently worried that I won't enjoy myself.\n\n\"Doesn't matter. A second round with any of the machines and a half hour or so strapped to my arch will serve nicely.\"\n\nAs usual, we disregard the prohibition against masturbating and have a grand time viewing the most recent videos, playing with ourselves, and pleasuring each other. Our disobedience will surely result in delightful punishment when we admit our indiscretions.\n\nWhen I enter my room on Saturday night, the double bed is gone. I suspect that Angie's has been removed as well. I conclude that they were a one-time thing so the twins could show us they have intentions that go beyond bondage. Now that we are dating them normally, they have other opportunities to express their emotions. I suspect that all future bondage encounters will be devoted purely to creative restraint, pleasurable punishment, and vigorous fucking. Lovemaking and tenderness will be consigned to our other lives.\n\nMy room contains the arch and the horse from my previous session. I am very pleased. Both devices provide incredible pleasure. One change has been made to the assortment of accessories that usually are positioned on the side table. My butt plug has been replaced by a long slim dildo, perhaps eight inches in length and an inch or so in diameter. It has no testicles but it does have a flared base similar to the butt plug. Clearly it was designed for anal use. My knees go weak. I understand the purpose of the dildo and I know how it is going to be used. Unlike the butt plug, it is not a passive device. I will experience a new form of anal sex within the hour.\n\nUnlike my first horseback ride, I am told to undress completely. Soon I am naked and straddling the device with my legs dangling and my breasts heaving in anticipation. Over the next few minutes I enjoy several explosive orgasms.\n\nAs before, my twin lifts me clear of the horse and then guides me over to the arch where I receive a pleasurable spanking. Between the spanking and the little vibrating nub, I have another wonderful orgasm. Afterwards I am subjected to bowling ball grip finger fucking and cum again quickly. \n\nI know what will happen next. My twin slowly inserts the dildo into my ass and spends a couple of minutes fucking me with the instrument. I have never experienced anything like it. ",
        "Surprising me, he eases his cock into my pussy. Grasping the dildo by its flared base, he begins to move. With both the dildo and his large cock thrusting into me simultaneously, I have several spectacular orgasms from the double penetration, crying out continuously into my arch. They are unlike any I've enjoyed in the past. As usual, I lose count. When it's all over and my twin has left the room, I am unable to stand for several minutes.\n\nEventually, I recover enough to clean myself up a little and then go looking for Angie. As before, she is naked and leaning against the wall outside her room. Cum is dribbling down the inside of her thighs. Her eyes are closed and she has a beatific smile of satisfaction on her face. I know she had a wonderful time because I could faintly hear her responding to her twin throughout much of my encounter with mine.\n\nWhen she recovers enough to talk, she tells me she experienced everything with her legs in the slings that I enjoyed during my first bondage session. Then her twin sat on the side of the bed, placed her across his lap, and spanked her with considerable force. Afterward she was given the full anal treatment on her arch, including the butt plug. Like me, she couldn't walk for several minutes after it was over. She is unable to tell me how many orgasms she achieved.\n\nOur evening ends with a quiet dinner in our favorite restaurant. We know it may be quite a while before our next bondage session. The twins will need some time to prepare. We are not dismayed. We'll date our twins normally and enjoy each other with our videos until we are summoned for the next go round.\n\n****\n\nTo be continued...\n\nI encourage readers to vote and comment. Constructive thoughts, suggestions, and criticisms are always appreciated."
    ],
    "authorname": "mindventure",
    "tags": [
        "masturbation",
        "girl on girl",
        "fucking machine",
        "whipping",
        "spanking"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/on-a-slippery-slope-ch-05"
}