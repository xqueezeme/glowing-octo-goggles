{
    "title": "Clans of Luteri Bk. 02 Ch. 05-07",
    "pages": [
        "Hey, Everyone. I don't know what to say about any delay with the previous chapter. I see it is not on pending status as I'm submitting this and I'm a little worried. I'm hoping it will post as usual. Here are three chapters. I didn't know if anyone saw the issue with the truce band in chapter 2. It's amazing what you see after you read something repeatedly. Sorry about that. -Harp\n\nChapter Five\n\nKane was walking fast down the passage just in front of her, a grin stretching his face, close to laughter, glancing behind himself. He'd only just escaped Aslin on the stairs from their rooms, one of her slippers striking him hard on the back. She was right behind him. But she wouldn't run, not inside a place, no, that wouldn't be proper, and he did laugh. He saw the safety of Tavishi Hall in front of him.\n\nHis clan still treated the Corsaire like she was fragile, rumors of her awful treatment with the savages of Alveria making them reluctant, and Helene guarded Aslin's feelings aggressively. His oath's Alverian manners hadn't help to dispel the impression that she was too tender to tease. It wasn't healthy, and he was determined to change it. Kane glanced back again.\n\nAslin was beautiful, furious at him, still in her nightdress, her dark hair all around her loose, fanning behind her with her speed, her fastest walk. He'd had more fun than he could remember, deliberately provoking her, waking her abruptly and rubbing her every wrong way he could think until she had grabbed her slippers for weapons and lunged at him as he ran out of the door. \n\nShe was in no mood that he would escape after all her efforts, her intentions entirely violent. He taunted her through the bond, goading her more in case she faltered at the threshold. \n\nShe made a deep, sharp noise behind him and he prudently increased his speed.\n\nHe barely made the hall. She was right behind him. He exploded into it laughing and ducking as the slipper meant for him flew over his head and hit Garit with a solid smack before falling to the floor, whose hand went up to to shield himself as he protested the sudden assault. \n\nKane darted, taking the seat next to Garit as if he'd always been there as Aslin swept like vengeance into the room, her face flushed, her eyes black and snapping with temper, her hair settling mussed and long down to her hips and all around her. Those scary eyes locked on him and he put one leg out in case he needed to retreat farther for his own safety as every eye in Tavishi Hall turned to her and silence descended.\n\nAslin stopped her advance abruptly, seeing them, her feet bare. Those eyes roamed the hall, everyone startled, frozen, some with utensils hovering near their mouths. She drew a breath, straightening her back, her hands going to her dress to smooth it. She looked down, realizing she was in her nightdress, and her eyes flew back to his, glaring. \n\n\"Are you so hungry, Corsaire?\" Kane said lazily, taking up Garit's cup of cavash, sipping at it as the man gave him an indignant glance and retrieved it from him. \"You might want to put your clothing on first.\"\n\n\"What is that you have on, Aslin?\" Garit said tactlessly, looking her down and up. The man could be relied upon for this, he wasn't very bright. \"Do you sleep in a dress? Isn't it itchy and hot? Doesn't it ride up and bother you when you move in your sleep?\"\n\nAslin's face began to work. Kane felt her trying very hard not to laugh, glancing at him desperately. She abruptly turned back around and walked straight out, her own hand clapping over her mouth, the muffled brays of her laughter coming from down the hall, the giggles and breathless huffs receding. But they'd seen it, heard it.\n\nEveryone relaxed, a few leaning and peering to the doorway to make sure she was not going to return. When Kane looked around, he saw interest, speculation. Kane smiled to himself, satisfied. Tavishi wouldn't fear to tease her now. \n\nKane turned and brought his hand to Garit's shoulder.\n\n\"I want to thank you for taking the blow that was meant for me. There aren't many who would stand strong in the face of that degree of wrath.\"\n\nLaughter in the hall. Garit looked confused, which was not unusual. \n\n\"What did you do to Aslin?\" Garit asked him, people hanging on every word, more laughter.\n\nKane shook his head sadly.\n\n\"It doesn't take much to bring a Corsaire to violence,\" he instructed the man solemnly to more general laughter. \n\nThe laughter doubled as a hand descended from nowhere and smacked him on the head, Kane failing to duck it. He shook his head to get his hair out of his eyes, looking up. Helene was glaring at him. \n\n\"Don't you try to blame this on Aslin. She is the gentlest, kindest, most\u2014,\" Helene began, stopping as more laughter rose around them considering the evidence to the contrary that had just appearing in front of their faces as she continued, glaring around in general, \"civilized person and you would tempt anyone's patience with your teasing and your smart mouth, Kane. I should know as your sister, nobody would believe the things I endured from you in our childhood...\"\n\nShe went on some more as Kane got up, hunching his shoulders against the abuse, looking for food. She trailed after him, still bleating. \n\n\"...that time you sewed my pant legs together and shouted fire, waking me. Are you even listening to me?\" she finally said as he brought his food back, sitting.\n\n\"Well, I can hardly help from hearing you, given you are shrieking and following me like a bad odor,\" he complained.\n\nShe gaped at him, entirely flushing. \n\n\"I didn't know fish was for breakfast,\" he said, mimicking her face, crossing his eyes.\n\nHelene turned, grabbing and upending a tureen of cider on his head. It was luckily not too full but it was cold and wet and Kane leapt up, shaking his hands, cider flying around him as his neighbors protested.\n\n\"Look what you've done, Sister,\" Kane said in disgust, pushing his wet hair back. \"You don't love me at all? Now I have to brave the Corsaire to change my shirt and she won't have calmed yet, it takes at least an hour of brooding and nasty glances.\"\n\n\"If you're done,\" his father spoke, humor under it, from the main table amid general laughter, \"offending the women of Tavishi clan, Kane, you'll find a new shirt in my rooms. I wouldn't spare you from your oath's vengeance or your sister's, but I need you to take three men and ride out toward Minsk again, see if you can find the boy.\"\n\nBrendel. Mina had come into the hall two nights ago to say the boy was gone. Tavishi had people out since then but they hadn't found him yet. Everyone knew his fascination with ships. Minsk always drew young curious Luterians. Kane sobered, nodding, grabbing a piece of bread on the way. \n\n#\n\nAslin was sitting in Tavishi Hall speaking to Helene. Bache had already expressed his amusement at her expense and given her back her slipper. She gathered Helene had defended her. She was grateful, entirely embarrassed by her display. \n\nThey all looked up as Kane and three other men swept into the hall, coming straight to Bache.\n\n\"Corsaire found him,\" Kane said to his father.\n\nAslin stood, looking around as Tavishi warriors rushed grimly toward the stables. She went to Kane.\n\n\"What's happening?\"\n\nHe pulled her to the side and out of the way. \n\n\"It's Brendel, the boy,\" Kane said. \"He went alone to Minsk to see the ships. He was taken by Corsaire. They have him and will be at the gates soon.\"\n\n\"I don't understand. Isn't it good he was found?\"\n\n\"If Tavishi had found him, yes.\"\n\nHer stomach dropped.\n\n\"What will Corsaire do?\"\n\n\"They will beat him to blood while we watch.\"\n\n\"Beat him!\" she exclaimed. \"But he's just a child!\"\n\n\"He's a boy old enough to make the journey, and it's only his youth that ensures they will return him at all. You knew this, Aslin. Nobody remembers who did it first, but once that started, the other did the same but a little worse, and then there was no stopping it.\"\n\n\"I'm going with you.\"\n\n\"Saddle Ilian then. Nobody else can go near her still,\" Kane said as she turned and walked with him. \n\n#\n\nAslin rode out of the courtyard with Tavishi warriors, seeing Mina already running down the main road of the village toward the gates. When they arrived at Tavishi gates, Corsaire were just gathering, a whole thick group of riders on warhorses, their clothing and leather black with blue swirls where Tavishi were in browns and golds. Tavishi stopped inside the gates in a line on their horses. \n\nRuthe dragged Brendel from between two horses and put him on his knees in front of the gates, a Corsaire man aiming at him with an arrow. Mina pressed herself to the gates.\n\n\"Brendel!\" she cried, Luk moving behind her in case he had to hold her. \n\nThe boy was filthy as if he'd been rolled in the dirt, tear tracks the only clean thing on his face. Ruthe had him by the collar, grinning down at him, his eyes cold. \n\nAslin pushed Ilian forward, dismounting and dropping the reins. She ran to the smaller gate, unlocking it impatiently and pushing hard on it. Nobody tried to stop her. She ran to the boy, Ruthe stepping back. The Corsaire archer immediately lowered his bow. She raised the child to his feet and took his hand, putting him behind her.\n\n\"What do you think are you doing!\" she said to Ruthe. \"Are you mad?\"\n\nRuthe laughed.\n\n\"Good afternoon, pretty cousin,\" Ruthe said cheerfully, stepping back to see her, smiling at her. \"You look well. I hope you're coming to visit soon. Corsaire miss your presence. Your father sends his love, if we were to see you.\"\n\n\"I am taking the boy home. You will not stop me,\" she declared. \n\nRuthe shrugged, and then bitterness crossed his features.\n\n\"I hope you will be as concerned when Tavishi do the same, Aslin. They beat Finel at the Corsaire gates last year and he was younger than this pup.\"\n\n\"I assure you nobody will beat any child of either of my clans while I can stop it,\" she cried, glaring at him, furious. \n\nRuthe grinned at her again, his eyes sweeping her.\n\n\"It's good to see your Corsaire fire, cousin. I hope the Tavishi appreciates it. It would be a shame to waste it on a man who could not understand its beauty.\"\n\nRuthe's eyes slid to Kane, who was sitting on Shaol behind the gate, all of the Tavishi warriors without expression.\n\n\"Take the Tavishi boy, then,\" Ruthe continued, turning and getting on his horse. \"Don't forget Corsaire, Aslin. There are those who crave your company, and I wouldn't mind a meal with you.\"\n\nShe didn't answer, still glaring. Ruthe flattened his lips, giving a great whistle. As one, Corsaire turned and left. Aslin grabbed the boy's hand, marching him to the gates and through them. \n\nMina ran through the tall horses, going to her knees, throwing her arms around him. The boy put his head on her shoulder, not so proud now she was there. \n\n\"I'm sorry, Mother,\" he choked. \n\nAslin went to stand in front of Shaol, glaring at Kane.\n\n\"Yes, Aslin,\" he said wryly, seeing it. \"We'll return the gesture if we find any wandering Corsaire whelps. We could hardly do otherwise now they have.\" He turned to Brendel. \"If your mother can bear to have you out of her arms, I'll take you back on Shaol if you'd like, Brendel.\"\n\nBrendel's face lit up and Mina smiled, releasing him and wiping her eyes, straightening. She gestured her permission. The boy ran to Shaol, who held still as Kane leaned down very far and grasped the boy's hands, pulling him up in front of him, the boy's eyes going round as he went up and up.\n\n\"Are you well, Brendel?\" Kane asked, looking down at him when the boy was on the horse. \"Corsaire clan did not abuse you too much?\"\n\n\"No, Kane,\" the boy said bravely. \"They didn't take me to Corsaire Hall at all. They brought me straight here when they found me.\"\n\n\"Well, I think you've already had the consequence for your actions, even if it was only the threat of a beating. Others will have more to say about it, but there will be no other punishment if your mother agrees. I believe you understand now why it's important to stay in the protection of your clan.\"\n\nKane looked at Mina, who nodded. Then he looked down at the boy, whose eyes were on Aslin like she was magic, shielding him by herself from Corsaire warriors. Kane laughed softly, his eyes going to her, lingering. When they got back, Tavishi unsaddled their horses and she unsaddled Ilian, men going to the boy and talking to him about his error and telling him he was brave. \n\nWhen she got to the hall, Kane came to her, drawing close to her. She stepped away, frowning lightly up at him. He cocked his head at her.\n\n\"Did I do something wrong, Aslin?\"\n\n\"You cannot approve of this practice, Kane. You cannot think this is right.\"\n\nKane sighed and raked his hand through his hair.\n\n\"I snuck away to see the ships in Minsk when I was younger than Brendel. I wanted to see more of the world and I was restless to always be protected so carefully, the son of the High Lord.\"\n\n\"You told me. You were made to muck the stables.\"\n\n\"Evidently that wasn't enough, because I did it again a month later,\" he said ruefully. \"And that time I was caught by Corsaire.\"\n\n\"What happened?\" she asked, already dreading the answer. \n\n\"Corsaire kept me for three days and three nights without telling my clan. They put me in the dark and the cold and filth of the Corsaire dungeon and didn't feed me well. Before I was returned, they took me to the Corsaire High Lord's hall and stripped me bare and humiliated me in front of Kavini and Ruthe. On the morning of the fourth day, Kavini brought me to the Tavishi gates and personally beat me to blood while my mother and father and my clan watched. I was scared and shamed and I hadn't been struck before, not by a grown man, and it hurt. I cried. No, I don't like the practice, Aslin.\"\n\nAslin was staring up at his face.\n\n\"My father did that to you?\" she said.\n\nHe took her hand.\n\n\"And we've done as bad to them, Dutul. I don't want you to hate Corsaire for it. They are your clan. It's good what you did today. It's what our fathers intended when they made the match, that you would be loved by both clans and help us to be more peaceful with one another.\"\n\nHe pulled her closer, and this time she yielded, putting her arms around his neck. She sniffed at him.\n\n\"Why do you smell like cider?\"\n\n\"It doesn't matter. But you can tell that Corsaire dog Ruthe your cousin when you visit them next that I like your fire just fine and to keep his opinions to himself,\" he said.\n\n\"Am I visiting them?\"\n\n\"Of course, Corsaire, whenever you want. They are clan to you. They will want to see you. Do you want to go soon?\"\n\n\"I don't know how I feel after what you've said, after what he did to you,\" she replied, angry at her father on his behalf now.\n\nKane put the back of his fingers on her cheek. \n\n\"Corsaire have not attacked us since you came here, Aslin. Tavishi have not attacked them. We haven't declared peace between us, not yet, but it's the most we've had since I remember. They could have taken Brendel to the Corsaire Hall first and humiliated him before bringing him to Tavishi gates. It's what is usually done. I believe your father thought you might stop it, if that helps. I don't think it surprised Ruthe when you shielded the boy from the beating.\"\n\nShe took a deep breath, releasing it. She looked down, feeling strange.\n\n\"I would like to see my father, Kane. Just for a small time.\"\n\n\"Don't feel badly for it, Aslin. He's your father and they're your clan. Stay as long as you like, although I do hope you'll come home to me before too long. I miss you when you're not next to me in your bed.\"\n\n\"Why do you always call it my bed?\"\n\nKane shrugged, looking puzzled himself.\n\n\"I don't know. I guess we just think the women have the bed and put the men in it if they want them.\"\n\n#\n\nAt dinner in the hall that evening, Aslin's eyes followed Mina and Brenden. The boy looked well\u2014cleaner, certainly\u2014and was being greeted by everyone.\n\n\"Where is Brendel's father, Kane?\" Aslin leaned in to ask him quietly. \"Is he dead?\"\n\n\"No. Brendel's not oath-born, Aslin. I know who his father is and it wouldn't take many questions for you to learn his name. But unless Brendel's father makes an offer and Mina accepts his oath, he has no claim on the boy, and neither of them want that.\"\n\n\"I'm sorry. I shouldn't have asked,\" Aslin said quietly, averting her eyes.\n\nKane shrugged. \n\n\"Luterian women don't conceive often, but sometimes it can happen unexpectedly and we're happy to have the boy.\"\n\n\"But he won't know his father.\"\n\n\"Look at him, Corsaire.\"\n\nAslin looked. Mina had gotten a plate and was talking with the people she sat with. The boy hadn't made it to the table yet, surrounded by clan warriors who were teasing him, his face flushed, and then the boy was laughing. A man reached out and tugged his ear, an affectionate gesture, the boy sending him a worshipful glance.\n\n\"He will know he isn't oath born, yes, but he will never be shamed for it, nor his mother, and it doesn't make him less valuable to us. Ruthe of Corsaire was not oath-born either, and he will lead Corsaire clan one day. There are no orphans here, Aslin. If a child loses both its parents, it is fostered and loved like any other, and I would defend Mina and Brendel with the same strength of my body I would give to shield any of my clan.\"\n\n#\n\nKane looked at Aslin's face, watching her watch Brendel. There had been no word from Kavini regarding what he might have learned about how Aslin had been taken to Alveria.\n\nThen Kane saw Dute put his arms high above his head and stretch, giving an exaggerated yawn that got everybody's attention, and Kane abruptly returned to his plate, paying close attention to eating, not looking at Aslin. \n\n\"I am going to bed,\" Dute announced in general. \"Does anybody have a dress I could wear?\"\n\nKane glanced at her briefly. Aslin was looking at Dute. There was silence in the hall, everybody pretending they weren't listening, but there were sly glances. Aslin's eyes roamed the hall, narrowing.\n\n\"I don't, Dute,\" Stole answered after a pause. \"My dress is still wet from wearing it to bathe, you know.\"\n\nMuffled laughter, innocent faces. They paused again, being kind, letting Aslin get the rhythm of it. Kane ate.\n\n\"Why would you wear a dress to bed, Dute?\" a man leaned over to say to him, concerned.\n\n\"Afraid of the sight of my own nipples,\" the man answered solemnly, wiping his hands.\n\nLaughter, a little louder. Another pause.\n\n\"I accidentally spotted my own ass the other day when I turned around too fast,\" Moren contributed tragically. \"I ran away but it followed me.\"\n\nOutright laughter this time. They were just getting started, but they paused again for her, more sly glances. Aslin was sitting straighter, red creeping into her cheeks. He saw Helene's glare at Dute, which Dute ignored.\n\n\"It seems to me,\" Aslin said into that pause to nobody in general with a sniff, loud enough, \"that some people's asses, judging by the wooliness of their chests, would provide a kind of natural sleeping garment, like a pelt.\"\n\nSurprised silence in the hall. Dute turned to Moren.\n\n\"Did she just say to you that you have a hairy ass, Moren?\" Dute asked him.\n\nMoren glanced at her and then back at Dute.\n\n\"I think she did, Dute,\" he said, dissolving into laughter as Dute did, the whole hall erupting. Kane took his next bite, grinning.\n\n#\n\nA week later, Aslin was trying to get her dress on. She had wrapped one of the loops incorrectly at one point early and was trying to avoid having to go back and start over, but no matter how she tugged it failed to fall right. She blew out her breath, feeling a surge of annoyance, beginning to unwrap the whole thing with jerky motions. \n\nKane was watching her from the bed, leaning back on it although he was dressed, his hands behind his head, evidently finding her entertaining. She felt another surge of annoyance.",
        "\"Although I'm not complaining, I thought you were trying to put it on and not take it off, Corsaire,\" he commented. \"If you keep going backward you'll be back in bed with me soon, which I also wouldn't mind.\"\n\n\"I am putting it on,\" she seethed. \"But I've wrapped it wrong and I have to do it over.\"\n\nHe got up and came to her, taking over as she blew out her breath again. He did it quickly. \n\n\"You're quite good at that, considering you learned how to do it in reverse,\" she muttered irritably.\n\nHis glance at her was startled, searching. \n\n\"Are you well, Aslin? You seem upset.\"\n\nShe narrowed her eyes at him, suspicious, but he wasn't mocking her. \n\n\"I'm fine,\" she snapped, frustrated at herself to be angry with him when he hadn't done anything, turning to find her slippers. \n\nShe couldn't find the second one. It was under the bed, she imagined, having crept under there by itself, evidently. She scowled and got on her knees on the carpet and reached under, looking just in time to see Kane's head tilting, his eyes on her bottom. She felt the slipper in her hand and pulled it out, straightening on her knees, glaring at him before she stood up. She was breathing a little fast. \n\nHe came to her, putting the back of his fingers against her cheek. His fingers came around, finding that place on the side of her neck that soothed her, rubbing it gently. She felt herself relaxing.\n\n\"Hai, hai, Aslin. What troubles you?\"\n\nShe looked down at the slipper in her hand, realizing. The last time was in Alveria, at Jaime's estate when she was trapped in the room. She must have had it again on the ship, her eyes going up, counting the weeks. She had no idea what she'd done. She had no clear memory of that time. Although Miss Stram had briefly explained it would happen monthly when she had first gotten it, Aslin's had always come less frequently, every three months, exactly. Because she was Luterian, she supposed.\n\nShe looked at Kane and felt herself flush. They were married. She didn't know how she was supposed to handle this in Luterian society, but he should know she wouldn't be doing sex with him for a time. She took a deep breath. \n\n\"I'm sorry, Kane. I always feel this way before my\u2014.\"\n\nShe gestured vaguely, hoping he would just guess what she meant. She didn't even know what Luterians called it. His brows were crooked. She waited. \n\n\"Your what, Corsaire?\"\n\n\"My curse,\" she finally said, flushing again.\n\nHe frowned at her.\n\n\"You're cursed, Corsaire?\" he said carefully. \"I didn't know you believed in them, or in\u2014What are they? Witches? That's an Alverian belief, isn't it?\"\n\n\"Not that kind of curse,\" she said impatiently, giving it the Alverian name. \"My malison, Kane.\"\n\nHe was still staring at her. She stared back, willing him to understand. Maybe she should talk to Helene.\n\n\"I don't know what you're saying, Aslin.\"\n\n\"My time,\" she said under her breath, leaning in. \"My...woman's time.\"\n\nHe looked confused that her voice had dropped so low, glancing around them.\n\n\"We're alone, Aslin,\" he said. \n\nShe stared at him, and more, and his eyes finally lit.\n\n\"You're to bleed?\" he said, sounding pleased.\n\nShe wrinkled her nose at his description, said so loud, her face still flushed, glad he understood now, glad they didn't have to talk about it anymore. \n\n\"Yes. I will see if Helene has supplies,\" she said, feeling a headache coming, closing her eyes, rubbing her temples. It was always awful. She hated it. \"I'll stay in the rooms, I never feel well. You will probably want to leave me alone for a few days. Five, at least, actually.\"\n\nKane was quiet. She looked at him. He was gazing at her with the strangest expression on his face. She touched the bond. He immediately opened it. \n\nExcitement. And he was...shy. Shy? She stared at him.\n\n\"What?\" she said.\n\n\"I will leave you alone, Aslin, if you want it. But you're my oath. I'd be honored to witness it.\"\n\nShe peered at him. Witness it? In what way? She was abruptly annoyed again.\n\n\"What do you mean?\"\n\n\"I could be here with you, if you would allow it. I wouldn't trouble you,\" he said, his eyes careful again. \n\nHe felt hopeful through the bond, like he was asking her for something he wanted. \n\n\"Why would you?\" she said, utterly perplexed. \n\n\"I would enjoy seeing Shai's grace on you, Corsaire,\" he said, coming to her, one hand going to her back and his other hand going to her lower belly, rubbing firmly. It felt good. She hadn't realized how tense she was there. \"Don't Alverian men celebrate this with their oaths?\"\n\n\"Of course not. It's disgusting,\" she answered, frowning at him. \"Wives hide it and their husbands avoid them until it's over.\"\n\nHe was shocked. She felt it through the bond.\n\n\"Why?\"\n\n\"Because it's messy, Kane,\" she cried, embarrassed again to be talking about it. \n\n\"I wouldn't know, Aslin. It would be my first time with you, if you let me,\" Kane said, his hands going to her head, his thumbs rubbing her temples. Her head dropped back a little in relief. \"I won't press if you want to be alone, but I would be grateful for it. I could help with the discomfort a little. I understand there will be some pain in your belly and your breasts will swell and be sensitive.\"\n\nHis eyes went to her breasts as she felt herself flush again to hear it described so bluntly, although his feelings were entirely desiring. \n\n\"I had it on the ship,\" she said.\n\n\"I wondered if you did. I don't remember, though. Do you?\"\n\nShe shook her head. He had wondered about it?\n\n\"I had it before in Alveria,\" she pointed out.\n\nWhat he was doing felt good, his hands on her neck and then her shoulders as he rubbed them, too.\n\n\"I know. I smelled it on you at the time,\" he said quietly. \n\nShe flushed, pulling away from him.\n\n\"You hardly need to say so,\" she said indignantly, although she didn't feel any disgust from him.\n\n\"Don't you remember I didn't sleep with you, Corsaire?\"\n\nShe did remember now. He'd left Jaime's estate until it was over. She had thought she'd gotten lucky.\n\n\"You left.\"\n\n\"I didn't. I stayed away from you and slept in the next room.\"\n\nThere was still not disgust through the bond, despite what he said.\n\n\"I don't understand.\"\n\nHe was a little embarrassed himself, and shy again. He gestured. \n\n\"It was not my right to be there for it, Aslin. That's for the one gives you his oath. I didn't know I had.\"\n\nShe stared at him. Luterians were so strange. Well, they did worship a goddess. She went to the wardrobe, pulling out her cloak. It was cold, winter coming, and the Tavishi Hall was drafty. She sensed he was waiting. For her answer, she realized. She made a face. \n\n\"You're welcome to be with me while it's happening, Kane, if you want to so badly, but I still don't know why you would,\" she said, not looking at him.\n\nWhen she turned around he was smiling. He came and took her face in his hands and kissed her. \n\n\"Thank you, Aslin. I'm honored. It's sacred for Luterians, Shai's grace on you, bringing the blood from your body that isn't hurt, preparing you for the possibility of a child. A man witnesses it for his oath, if she allows it. You will be fertile a week or two after, and I will know that too, from your smell.\" \n\nHe buried his face in her throat, snuffling at her. She pushed at his shoulders.\n\n\"Don't do that.\"\n\nHe pulled back and grinned.\n\n\"I have heard a woman can be irritable before her grace, Aslin. Can I get you anything?\"\n\n\"No, thank you. I haven't started yet.\"\n\n\"You will today, I can smell it on you now.\"\n\n\"Stop saying that.\"\n\nHe leaned back. His eyes were on her face, appraising. She frowned at him. \n\n\"Are you hungry? I have heard it can make a woman hungry. I could go down and get food for us and bring it back here.\"\n\nShe eyed him. She looked away. She was a little hungry, yes. She looked back at him and smiled a little.\n\n\"All right,\" she said.\n\n#\n\nKane was on his back beside her in the bed, a book on his lap. It was the second day of her grace, the strongest day, he'd been told. She was so secretive about it. She wouldn't let him look at her while she cared for herself. He didn't want to press, but he was curious. And aroused. \n\nShe was in a wrap, just come from a hot bath, lying on her side. He had hauled the water up for her, getting help from Colit, stopping him on the stairs on the way up with the buckets to say she was shy about bleeding, being raised Alverian, and asking him to stay quiet so she didn't know he was there. The man had nodded and smiled at him, leaving the buckets outside the door, clapping him on the shoulder. \n\nAslin was awake, but she hadn't moved in over an hour, and she was quiet. They'd said it was not a pain that a woman would feel so badly she'd yell with it, like birthing, but that it was achy and uncomfortable. \n\nKane set down the book, which he hadn't been reading, and curled up behind her. He brushed her hair from her face. She closed her eyes, liking it, he could tell. He caressed the small hairs at her neck and she sighed. His hand came around her slowly and he set it on her lower belly, rubbing there firmly. She allowed that, too, said it felt good. He let his hand slide up and cup her breast, rubbing her nipple with his thumb through the wrap.\n\nShe sat up immediately, pushing his hand away.\n\n\"I am not having sex with you right now, Kane,\" she said indignantly.\n\n\"I know,\" he said soothingly, pulling her down again. \"I wouldn't ask, I know it's not the time.\" \n\nShe lay down reluctantly, turning on her back. His eyes went to her breasts. They were swollen larger, the nipples puffy, very sensitive, and would hurt too much if he weren't careful. He felt a surge of desire. He wanted this. His hand returned to her breast, his thumb brushing her nipple. He heard her breath catch and her hand came down over his, ready to push it away.\n\n\"I could help you in another way,\" he said, squeezing her nipple gently. \n\n\"How?\" she said, her breathing a little rough. \n\n\"I could ease the pain in your belly, Corsaire, relax you,\" he said, baring her breast under the wrap. \n\n\"You're my oath. I would like to do this for you, if you'll let me.\"\n\n\"Do what?\"\n\nHe took a swollen nipple into his mouth. She tasted different, a warning-away smell that sent his cock surging to have her under his hand anyway. Persuasion. The Corsaire was all about persuasion. He was gentle with her nipples, very gentle as they tightened, hardening. She sighed again, offering them, liking it.\n\nHis hand went to her leg, running slowly up her thigh. Hers came over it immediately and stopped him.\n\n\"What are you going to do?\"\n\n\"Just touch you, Aslin. I won't go inside you. I wouldn't.\"\n\n\"But I'm\u2014it's disgusting, Kane,\" she said.\n\n\"Not to me,\" he said, touching the bond.\n\nShe opened it. She felt his desire, he knew she did. He felt her ambivalence, her shyness, a feeling bordering on shame. She felt his indignation at that. She was staring at him. He waited. She slowly withdrew her hand from his, lying back. He felt a surge of elation, running his fingers up her thigh slowly as she spread her legs a little. \n\nHe slipped his fingers under the garment she wore. She tensed and he bent his head, licking her nipple, and the other, sucking gently until she relaxed a little. The padding was against his knuckles as he touched her pussy lips, pushing his fingers in gently, her legs spreading a little more.\n\nHer scent filled the room, not smelling like injury blood at all, not coppery and full of pain but a rich, full smell that curled in his gut. On his fingers it was different than when she was wet with arousal, less slippery, more sticky, his fingers finding her clit and rubbing, still sucking her breasts very gently, alternating between them. \n\nShe closed her eyes. She was breathing fast as he pleasured her, her warning-away scent now mixed with the familiar smell of her arousal, heady. \n\nHe raised his head to watch her face when she climaxed, feeling it with her, his cock jumping, her eyes still closed, arching and crying out softly, her cheeks flushing. He felt a wave of feeling. He was pleased she let him do this. It was an intimate act for Luterian couples. \n\nHer pulses slowed under his fingers and stopped. He slowly withdrew his fingers. She immediately closed her legs and opened her eyes and looked at his hand, as if the blood on it bothered her, and he decided, reluctantly, that putting his fingers in his mouth to taste it probably wouldn't please her. \n\nChapter Six\n\nRuthe stopped on the edge of Corsaire lands, expressionless. Kane was waiting alone on Shaol on Tavishi side facing him, also expressionless. After a week at Corsaire Hold, everything dark blue and black, Kane's colors looked foreign and strange, the golds and browns. \n\nThe Corsaire warriors with Ruthe stopped like a line had been drawn beneath their horses' feet, everybody ignoring each other. Aslin didn't stop, riding Ilian into Tavishi territory, smiling at Kane, touching the bond. Kane gave no outward indication, but he opened it, and his greeting through the bond was a caress. He had missed her.\n\nAslin turned and smiled openly at Ruthe, at Cort and Shalin and Bren. \n\nCort didn't talk much, a taciturn man who had lost his oath several years earlier, but Shalin could juggle and walk on his hands, showing her in the courtyard, while Bren reduced her to helpless laughter with his jokes. \n\nRuthe had asked her about Ilian. After that, she had spent a great deal of time with Ruthe and Ilian, learning Luterian whistles, Ruthe complaining that Kane hadn't taught her yet\u2014she couldn't exactly explain they'd been busy with other things\u2014and Aslin was learning how to ride better with just her legs.\n\nShe and her father had spent a whole day together. They had taken a long walk in the woodland, cold, winter coming, and come in to sit in front of the fire in Corsaire Hall, talking, everyone leaving them alone. \n\nOn her last day here, Mani and Lorita, both dark-haired and pretty, had taken her to the common bathing rooms, huge baths, different from Tavishi, the water hot, diverted, a constant flow that kept it clean. They had stripped in front of her, laughing when she was shy to do the same. \n\nThe women seemed to think her education in Alveria had been lacking, and they talked about women's bodies and men's bodies and sex until she was thoroughly shocked. They had given her the names for all the complicated parts between their legs, actually showing her, saying what purpose they served. Then they talked about different things they knew how to do with men\u2014Lorita was Jesup's oath, and Mani had Eon's. They were so natural about it, and so unafraid, that Aslin relaxed a little, becoming curious. \n\nWhen they were done bathing and making her blush and laugh, Lorita had braided her hair, taking a long time, and then Mani had rubbed her shoulders with oil, a pleasant scent. Lorita had gotten a razor and the oil and explained what she was going to do and why. Aslin had been doubtful, but Lorita did it first to herself, very careful, then Mani. Aslin had tried it, and then it had seemed like she might as well do the whole thing. Now she wasn't so sure, but they had given her a special razor to take with her. \n\nWhen they had gone back to the Hall, all three of them, nobody had asked where they'd been all day, although Aslin had caught Bren staring at her. He had looked away and then glanced at her again, his eyes lingering. Then she'd caught the look her father had given to Ruthe, indicating Bren with his eyes, and when Bren had left the Hall shortly after that, Ruthe had followed.\n\nAt her smile at them, Ruthe's mouth quirked and Shalin winked at her, his face never moving. Bren nodded at her briefly, almost imperceptible, and Cort made a small gesture with his fingers, Kane seeing all of it and pretending he didn't notice. Then the Corsaire men turned and gone back the way they had come.\n\nOnce she and Kane had ridden a into Tavishi territory, Kane stopped them under the trees. He got off Shaol and came straight to her, pulling her off Ilian and into his arms, Aslin dropping the reins. Kane backed them away as Ilian turned her head, her ears back. When they were a safe distance, he kissed her. \n\n\"I have missed you, Corsaire,\" Kane said. \"Did you enjoy your visit with your relatives?\"\n\nShe nodded, very happy to see him. \n\n\"What have you done to your hair?\" he said, looking at it.\n\nAslin grinned, her hand going up to touch the rows and long braids that came from it and hung below her waist, blue beads that clacked when she shook her head.\n\n\"Lorita did it. It took a long time. Do you like it?\"\n\nHe turned her around, looking at it.\n\n\"It's very pretty. Corsaire women do this. I've seen it at festival. What else have you done different while you were with your relatives?\"\n\nJust what she hadn't really wanted him to ask just yet. Aslin felt a stab of nervousness. He felt it from her, narrowing his eyes. He suddenly looked at her ears, feeling the lobes.\n\n\"What have you done?\" he demanded, looking down at her, turning her around again with his hands. \"Did you pierce your belly button?\"\n\nShe stared.\n\n\"Pierce? No!\"\n\n\"Your nipples?\"\n\n\"What?\"\n\nHe was teasing her. \n\n\"Tavishi have heard rumors about Corsaire women. You didn't pierce\u2014,\" he said, raising his brows.\n\nShe waited for him to finish.\n\n\"Never mind,\" he said after a moment. \"What is it, then?\"\n\n\"Nothing, Kane. It's something Corsaire women do. They showed me.\"\n\n\"It's perverted, isn't it?\" he concluded, amusement through the bond, more teasing. \n\n\"It's not perverted,\" she objected, but she wasn't sure it wasn't and he felt that, too.\n\n\"Tell me,\" he insisted, looking at her all over as if he would see it. \n\n\"You'll just have to find out.\"\n\n\"I'll find out right now, Corsaire,\" he said, his fingers going to her ties. \n\nShe pushed his hands away, feeling his determination, pursing her lips and giving in.\n\n\"It'll grow back, Kane, if you don't like it. I don't have to continue to remove it.\"\n\nHis eyes went to her head and then straight down. He grinned at her lazily, but she felt his sudden intense interest, then a strong wave of desire from him. His hand went to her hip.\n\n\"Not all of it, I hope? I do like the color.\"\n\nShe shook her head, flushing.\n\n\"I left some...in the front,\" she said, her lips twitching.\n\nHe narrowed his eyes at her.\n\n\"So you were playing with your sex parts with Corsaire women, were you?\"\n\nShe felt her cheeks go hot.\n\n\"We were bathing, Kane!\"\n\n\"In the same tub?\" he said, laughing.\n\n\"No, in the baths. They have large ones, underground. They're hot and there is plenty of room.\"\n\nHe was suddenly curious.\n\n\"Only women bathe together?\"\n\nIn truth, she wasn't sure, a couple of comments Lorita had made making her wonder if perhaps the men were usually there and had stayed away because she was there, knowing she was shy. \n\n\"I was only there with Lorita and Mani,\" she said carefully. \n\n\"Did they touch you?\" he said, humor building, his feelings suddenly entirely salacious.\n\nShe looked at him, confused.\n\n\"Yes.\"\n\nHis eyebrows went up, amusement through the bond as well as lust. He sensed her confusion at his reaction and smiled.\n\n\"It's nothing, Corsaire. Tavishi have heard that Corsaire women like to relax one another, but I'm unsure if it's true.\"\n\n\"It is relaxing,\" Aslin answered. \n\nHe was trying not to laugh, shaking his head. \n\n\"What are you talking about, Kane?\" she said, beginning to feel cross. \n\n\"How did they touch you?\" \n\n\"Lorita braided my hair,\" Aslin answered. \"And Mani put oil on my skin.\"\n\nHe was trying harder not to laugh. \n\n\"Is that right. Where did she put the oil?\"\n\n\"My shoulders.\"\n\nKane gave in to it, laughing.\n\n\"What is funny, Kane?\" she said indignantly.\n\n\"Nothing, Corsaire,\" he said, finally getting it under control, although she felt it bubbling underneath. \"Did you not feel the tiniest bit excited by what they did?\"",
        "She was staring at him, not understanding. He stepped closer to her, the back of his fingers going to her cheek. She leaned into him as he bent, kissing her. It was slow and deep, sensual, her belly tensing, her nipples tightening. By the time he was done, her cheeks were warm again and she was breathing faster. \n\nHe leaned back, looking at her steadily. \n\nShe suddenly knew what he meant. She was shocked, and then she remembered all their talk, and then she remembered looking at them. But a woman\u2014. She realized, and felt the blush begin in her cheeks and radiate outward. And she had felt warm, yes, excited, a little...when they talked about it, and\u2014. She swallowed.\n\n\"I didn't know, Kane.\" \n\nHis amusement vanished and she felt his regret.\n\n\"I was teasing you, Aslin, and I shouldn't have. They would never do anything to endanger your bond. They were women to whom men of their clan have given their oath?\"\n\nShe looked down, nodding, feeling stupid and ignorant. He raised her chin and now his regret was much deeper.\n\n\"That is who usually instructs the younger. The women of your clan know you've been shamed and they see it and they want to help you and I just undid their efforts. You didn't do anything to feel badly for and neither did they. It sounds like they were gentle with you, telling you things about yourself and your body like they would any young woman of their clan who didn't know those things yet.\"\n\nShe glanced at him quickly and away.\n\n\"Yes,\" she said low, feeling a little better.\n\n\"Then it's not my business. But I would like to see what you have done. And feel it,\" he said.\n\nShe smiled a little. \n\n\"It's supposed to\u2014,\" she gestured, \"increase what you can feel in the area.\"\n\n\"Is that right?\" he said softly, stepping closer, his hand coming down her back and to her bottom. \n\nShe dropped her eyes, looking at him again. She smiled a little more.\n\n\"And they have special cloths, for...after,\" she said, smiling wider.\n\n\"That's sensible,\" he said.\n\nShe bit her lip, hesitating. She leaned forward a little. \n\n\"They showed me how to\u2014,\" she said, gesturing again, \"myself.\"\n\n\"What?\"\n\n\"That,\" she said, her voice going lower.\n\nKane looked around, grinning. \n\n\"We're alone, Aslin.\"\n\nHer chin lifted.\n\n\"They showed me how to do that to myself, although I haven't done that yet and I'm not sure I will ever do that.\"\n\n\"Again, the word 'that' is a very general descriptive term\u2014,\" he began.\n\n\"Touch myself,\" she said, and then blushed. \n\nHe was staring at her and she felt his astonishment.\n\n\"Have you never pleasured yourself, Aslin?\"\n\nShe reacting to his surprise. She frowned at him and then spoke a little defiantly. \n\n\"Miss Stram discovered me once without my shirt when I first began to get breasts and she switched me very badly for it and then she tied my hands to the rails of my bed for a week when I went to sleep so that when I was in bed I wouldn't be tempted to touch myself inappropriately. She was very clear I wasn't to do that, not ever. She said that it was evil and would lead to sickness and everyone would know I had done it, but Lorita says she lied and it's not true.\"\n\nKane was feeling so many things that she sensed, mostly outrage and disgusted puzzlement.\n\n\"Do Alverians do this to the boys as well, Aslin? Tie them to beds so they can't touch their own bodies?\"\n\n\"How would I possibly know the answer to that, Kane?\" she said.\n\nThey stared at each other. \n\n\"I'll ask Jaime,\" Kane said.\n\nAslin scoffed.\n\n\"Jaime is Alverian, Kane,\" she said. \"I doubt he would want to talk about it with you.\"\n\n\"Why not?\"\n\n\"Because it's not something Alverians talk about.\"\n\nAnd there was the circle. Kane had fallen headfirst into the Alverian maze of talking about sex. Yes, that made no sense whatsoever.\n\n\"That doesn't follow any logic, Aslin. How do you know Jaime doesn't want to talk about sex if sex is something you don't talk about?\"\n\nShe stared at him. He tried again more slowly.\n\n\"How did someone tell you enough about sex for you to understand what they meant when they told you not to talk about sex but without telling you about it first because they couldn't speak of it either?\"\n\nShe shook her head.\n\n\"I'm not Alverian,\" she protested.\n\n\"No, but you understand their logic,\" he accused. \n\n\"It doesn't mean I have to agree,\" she said. \"I'm Luterian.\"\n\nHe stared at her blankly and then pulled her close, putting his arms around her.\n\n\"You're right,' he said, his chin on the top of her head. \"I am arguing with the wrong person.\"\n\n\"I think you miss Jaime.\"\n\nHe drew back. \n\n\"I do. But I missed you more, gone for a whole week. So let me ask you. Do you want to go straight to Tavishi or would you agree to stay out here with me for a few days, just the two of us? I know it's getting cold, but I have things for camping and provisions on Shaol. I promise you will be comfortable enough.\"\n\nStay in the wilderness with him just to do so? Aslin was immediately interested. Like in books?\n\n\"I would like that very much,\" she said, excited.\n\nHe smiled, feeling her response, pleased by it.\n\n\"I have never been to the Tavishi territory north of here, nor has my father. Our northern territories, Corsaire and Tavishi, are too close there, too exposed, bordering on Duellan land above us. I imagine neither Corsaire nor Tavishi have gone there for hundreds of years. But you and I are not enemies, Aslin. We are protected by oath and bond. We can go there. We will see territory no Luterian has seen since the feud began over three hundred years ago.\"\n\nShe could feel his curiosity. \n\n\"What do you think will be there?\"\n\n\"There is a place I want to take you. We would go a little east and then north, camp whenever we want, and reach it the next day.\"\n\n\"What place?\"\n\n\"I want to surprise you.\"\n\n\"All right,\" she said. \n\nHe grinned back and kissed her, happy.\n\n\"Thank you, Aslin.\"\n\nAs they rode, the wind was cold, autumn yielding the last leaves, but when she pulled up the hood of her cloak, she was warm, the wool cloak enveloping her. They rode for a couple of hours, tall trees, going on the edge, at one point, of a tall mountain, the drop to her right. \n\n\"Are you well, Aslin?\" he called from in front of her, looking back.\n\n\"Yes.\"\n\nIlian was surefooted and heights had never scared her. Kane stopped them not long after, pulling things off of Shaol. He gave the horses grain as she explored the area. \n\nIlian gave a short call, nasal. Shaol joined her, the same sound, his head up. Kane froze, looking at her. \n\n\"What is it?\" Aslin said.\n\n\"Snake. Come here, Corsaire,\" Kane said. \n\nThe horses broke their stillness and began ranging the area, Kane pulling her next to him. They watched Shaol and Ilian eagerly search the rocks and shrubby bushes, and then Ilian's ears came back, her eyes lit with rage, and she struck with her front hooves, missing when one hoof slid across the surface of a rock, the metal edge scraping, the snake breaking cover to rush away, as large around as Aslin's wrist. She pressed closer to Kane, trying to get higher, and he laughed, his arm coming around her from behind.\n\nShaol saw it, immediately coming over, the snake missing its strike, stomping on it, short angry cries. When he was done, both horses stood over the mess and looked at it, their heads close, Shaol snorting, Ilian's tail swishing. Aslin smiled to see them, stepping off of Kane's large boots.\n\n\"They are in agreement,\" she observed.\n\n\"The snakes can't kill an adult horse, but the bite is painful and foals are vulnerable to their venom, as are we. Are you hungry?\"\n\nThey sat and ate, the wind chilly. She looked at Kane's profile. \n\n\"How did the feud begin?\" she asked him.\n\nStrange that she'd never thought to ask before. \n\n\"Corsaire killed a Tavishi woman, Penal. She was riding on Tavishi land with her cousin, Ashe. Ashe never returned\u2014dead, probably, defending her. Penal's body was found on Tavishi territory near our western border, a Corsaire arrow in her back. Penal was oath to Betran, a Tavishi warrior. When he found her, Betran went mad with grief and killed a Corsaire woman, Anore, in revenge, a terrible crime that shamed my clan. But the Tavishi High Lord at the time, Onid, would not give Bertran to Corsaire to torment and execute, so Corsaire declared feud against Tavishi for Anore's death.\"\n\n\"Why did Corsaire kill Penal in the first place?\"\n\n\"Nobody knows, Aslin.\"\n\nAslin looked around herself and then at the path still leading farther into the mountains.\n\n\"How much farther?\"\n\n\"We'll stop before dusk,\" Kane said, looking up at the sky. \"I want us camped and warm before the temperature drops.\"\n\nThey rode all afternoon, the country higher than she'd seen before, mostly evergreens, coming up to a plateau leading to deep woodland, huge trees all around them, the horses' hooves muffled in the dense underbrush. As they passed into it, Kane appeared to be searching the surrounding forest and then to see what he wanted. \n\nHe stopped Shaol, dismounting and dropping the reins. Aslin watched as he went to a massive dead tree, ranging its perimeter, twice as wide at the base as he was tall, the top open and the interior hollowed out in its trunk, a jagged opening on one side. He pulled out his dagger, which he had traded back for her new one he had given her, and went inside the great trunk. He came out in a moment with several piles of dead branches and leaves in his hands, going back and pushing more out. \n\n\"Here's our inn, Corsaire,\" he said. \"Let me clear out the current occupants.\"\n\nThere were spiders, evidence of a nest Kane carried out that she didn't look at too closely. She peered in when he was done, the space tidy. Kane had put a blanket down on the ground, another that he hung with rope in front of the entrance for warmth. He made a fire in front of it as she unsaddled Ilian, and then he took care of Shaol. They completely freed the animals from their dressing and the packs. Kane put the packs in the hollow log. They fed the horses grain. \n\nAslin sat in front of the fire and watched Kane sort things. He came back with travel rations, dried fruit and nuts and meat, hard bread. \n\n\"It's good,\" she said, trying it.\n\n\"It gets old after a week or so. I could hunt, but we're not here long.\"\n\nThe sun began to dip low, Shaol and Ilian standing next to each other for warmth. Aslin was sitting, relaxed, staring into the flames. The smells were strong, the forest darker around them with the setting sun and the brightness of the fire.\n\n\"Let me show you where you will sleep tonight,\" Kane said, getting up and holding out his hand. \n\nHe stopped at the entrance to their shelter, taking off his boots. His manner, the way he looked at her, said he was not thinking about sleeping. She took off her slippers and put them with his boots, hers considerably smaller. The shelter was wide, tall enough for Kane to stand easily, dry and relatively clean, fragrant. It was already warmer than outside. Kane had brought candles, going out and getting a stick from the fire, setting them on rocks he brought, lighting them.\n\n\"Are you warm enough, Aslin?\" \n\nShe nodded, taking off her cloak and rolling it, placing it for a pillow. When she straightened, Kane pulled off his cloak and set it on the ground over the blanket, the wool soft. He pulled off his clothing except for his pants. She wandered the small place, exploring it, glancing at him as he made the bed more comfortable. He sat down in it, his body strong, the candlelight highlighting the angles of his face, the muscles of his back and shoulders shifting with his movement. \n\n\"I have been thinking all day about what your Corsaire cousins have done to you,\" he said. \"Will you show me?\"\n\nAslin nodded, not quite looking at him, unbuckling her knife and setting it aside, her hands going to the ties of her dress. When she unwrapped the dress from her breasts, he immediately stood in one motion, approaching her, staring. She laughed to have surprised him, looking down. Her nipples were red, tip and areola.\n\n\"Corsaire women rouge them, evidently. They insisted before I left, although I still can't see why,\" she said. \n\n\"That's all right,\" Kane said, his voice husky, still looking at them. \"I can see the reason for it just fine.\"\n\nHe undid the string of her pants, letting them drop. She stepped out of them, aware of the neat patch of black hair in front, of how naked her sex was underneath it. Kane walked around her, his fingers trailing on her shoulder, then across her belly. He faced her. He reached for her braids, lifting them, running them through his fingers, the beads clacking a little in the space.\n\nHe met her eyes and backed her up with him, reversing her, taking her braids in his fist, wrapping them around his wrist once and pulling straight down, the pressure increasing. She yielded as he went down with her, both to their knees. Kane didn't let go of her braids, pulling her back now until she sat and then lay down. When her head was on the ground, he released her and drew back, straightening, standing over her, his hands going to his pants. He drew them off, returning to kneel in front of her. \n\nAslin was nervous, lying on her back, her legs together. He put his hands on her knees, sitting back on his heels, slowly drawing them apart, his eyes between her legs. She closed her eyes, letting him. There was a long silence. \n\n\"It will grow back if you don't like it, Kane,\" she told him, nervous. \n\n\"I like it, Corsaire,\" he said, his voice husky. She jumped as he touched her inner thigh, running his fingers gently over her sex, feeling her, her breath catching. \"Your skin is like warm silk on your pussy.\" \n\nHis thumbs came and spread her, opening her more. She felt so exposed, squirming a little. \n\n\"Give me your hand,\" he said. \n\nShe reached out, wondering what he was doing. He took her hand and pulled it down, resting it on her sex. She pulled her hand away, closing her legs. Kane spread her knees again, touching the bond. She opened it. He took her hand and brought it down again. She let it rest there, her heart pounding.\n\n\"When someone hurts you for doing something, your body remembers it,\" he told her. \"You feel the fear because your body thinks pain is coming.\"\n\nKane was entirely aroused, watching her hand. She felt her outer lips, running her fingers lightly over them. The skin there was very soft. He drew her knees wider. She felt the area with her fingers, complicated, locating what she knew was there. She felt the entrance to her channel, a little wet, then higher. Her breath caught again when she touched the tender places above that. \n\n\"You are very sensitive there, Corsaire. When we are young men they teach us that some women are more aroused inside of them, others more there, but you like both.\"\n\nHis hand was suddenly there with hers, his fingers. He touched her entrance, pushing in a little, her breath hitching. His finger was wet when he brought it back to the sensitive nub, swirling all around it, pleasure coming that he felt through the bond.\n\n\"Do that,\" he said, his breathing deep.\n\nShe copied him, his hand withdrawing, getting her own wetness on her finger and swirling around the tenderness, small slow circles like he had done, feeling the swollen place, hard under her fingertips. He continued to watch her hand. Her breathing came faster, the pleasure increasing.\n\nHe bent to her nipples, sucking and tugging and then biting. She cried out, rising to his mouth, her fingers moving, finding the right pressure. She closed her eyes, the pleasure in her nipples going between her legs. She felt herself pulse against her fingers, a surge of sensation. \n\nKane came back on his knees and put her legs outside of his, spreading her wider. She was breathing, pumping her hips slowly, her thighs trembling, the pleasure under her fingers increasing. She felt him at her entrance, felt him slowly push into her, good, compensating with her fingers for the change, finding the hard nub again. \n\nHer legs spread wider as he slowly thrust into her, holding her hips, lifting her, the angle bringing him right to that spot inside her, rubbing. He began thrusting faster. \n\n\"Open your eyes,\" he said, his voice deep with need as she did, looking back at him. \"Make yourself come. Rub your little cunt, Corsaire.\"\n\nHe said that and Aslin arched, her knees coming up toward her chest, her feet leaving the floor as she began to climax against her own fingers, clamping on him. He began pushing into her harder. Her breath caught and then she was coming, her fingers moving, his sex making her come harder.\n\n\"That's it,\" he grunted, thrusting into her deeply. \n\nShe strained. Kane felt it, she knew, his hands on her hips, watching her. She cried out, arching, fast pulses around him. The pleasure washed through her and finally slowed, small spasms. She withdrew her hand, her back finding the cloak again, breathing quickly, looking back at him, surprised. Kane brought himself down, his body on top of hers, her feet finding the floor. He was on his elbows, still in her. She was sensitive, every move he made making her breath stutter. \n\n\"I have made myself less useful to you,\" Kane said, his breathing deep. \n\nShe felt his restraint and squirmed under him, holding his eyes. He stared straight back at her, pulling out and pushing deep, his pleasure coming to her. She shivered, part too sensitive, part pleasure. He began thrusting into her gently and then he straightened his arms. He leaned back, dragging her closer, still gentle and slow. The pleasure came, rising again. He began to increase his thrusts, going deeper.\n\n\"You could keep your pussy naked if you like, Corsaire,\" he said, grunting, looking down where there were meeting, his voice when he was very aroused, when he was close. \"I like to see your little cunt quiver with your pleasure. I like to see my cock in you.\"\n\nHe propped himself on one arm and reached down and took her nipple between his fingers, squeezing hard. His thrusts became faster, more rough. It felt so good, her pleasure going to him. Kane cried out and began to come, the bond wide open, making her climax with him. She writhed with it, feeling his pleasure, her own, noises she made that she didn't hear. His mouth came down on hers, kissing her deeply. She buried her hands in his hair, whimpering into his mouth over and over, the pleasure flowing through them as he emptied into her. \n\n#\n\nThe fire was fascinating to watch, the whole area dark now. Kane was behind her. She was leaning against his long form, one of his hands curled at her hip, his other arm across her shoulders. She was completely content at this moment, Ilian and Shaol nose to tail, side-by-side, drowsing. Aslin breathed in the smell of the fire, of the forest, the pleasant scent of wood, clean and fresh.\n\n\"I want to stay out here forever,\" she declared.\n\nKane chuffed laughter behind her.\n\n\"You wouldn't say so for long, Corsaire. You'd be glad for a hold after a week or two.\"\n\nAs if summoned by his words, a long slow wail went up from far away, mournful and deep, full of such longing, nothing she'd ever heard before. Aslin sat up quickly, looking around. Ilian raised her head. Shaol did, both animals tensing, Shaol pawing the ground. \n\n\"What is that?\" she said, tense.\n\nShe looked at Kane, who hadn't moved. He was staring far away into the distance where the sound came from. \n\n\"It's the wolves,\" he said as another took up the long cry, a third joining, harmonizing and trailing.\n\n\"What are they doing?\"\n\n\"Singing to Shai,\" Kane said distractedly, his eyes still distant. \n\n\"Kane?\" she said.\n\nHe looked at her. For a moment his eyes weren't him and another looked out of them. Aslin leaned toward him, her breath catching, feeling a wave of longing. She reached out and touched his face. Then Kane focused on her. ",
        "\"They're far in the mountains, Corsaire, no danger to us,\" Kane said, her hand dropping. He pulled her back to him again. \"But I'm glad you like the wilderness. I want to take you places.\"\n\n#\n\nAslin woke in the deepest night. It was dark, completely dark. She was curled up face-first in Kane's chest, his arms around her. She raised her head to look up through the hole at the top of the great hollow log they slept in, seeing a sky so dark blue it was almost black, too many clouds for stars. \n\nThere was a noise right outside, stealthy. She looked at the covered opening. Something large. She didn't worry about wolves, Kane said they were far away, but she suddenly thought of bears.\n\n\"Kane?\" she whispered.\n\n\"Yes,\" he grunted. \n\n\"There's something outside.\"\n\nThere was a long silence.\n\n\"There are two somethings,\" he said sleepily.\n\n\"Are you sure it's the horses?\"\n\nShe leaned back to look up at his face. He opened his eyes a little to see her.\n\n\"There is no predator in Luteri larger than the one that has got his hand on your backside right now, Corsaire. We'll protect you.\"\n\nThis made her feel better. She turned in his arms, pressing against him behind her. She hadn't brought her nightdress, not wanting Corsaire to tease her for it. Kane gathered her to himself, his body hard and reassuring, pulling the blanket more securely around her. She settled in, fitting to him again.\n\n#\n\nIn the morning after breakfast, they broke camp and Kane led them deeper into the mountains. The ground was still misty, a deep hush. They were riding next to each other when Kane leaned across her, pointing. A deer was gazing at them over its own shoulder not far across the forest floor, freeing when it saw them, its legs hidden in large ferns, a delicate face under stubby antlers, its neck thick with fur, strong haunches, stocky. \n\nIt was light brown, the color darker at its shoulders, its bottom a flash of white under a band of black. She looked at its black eyes, long ears, white in the tufts, white in an almost perfect circle around its nose.\n\n\"We will be near the northwestern border of Tavishi lands soon,\" Kane said to her. \"The place I'm looking for is a bit east of that. It's not far now.\"\n\n\"Will you tell me where we're going?\"\n\n\"Not yet, I think\u2014,\" Kane began, and then he stopped Shaol, turning his head sharply, his eyes scanning.\n\nShaol felt Kane's tension, his ears coming up. Aslin stopped Ilian next to him. It was very quiet. Kane ducked and slid like liquid off of Shaol, coming to Ilian, reaching for her.\n\n\"Be quiet,\" he said softly.\n\nShe got off carefully. Kane took Shaol's reins, leading him quickly, Aslin bringing Ilian behind him. He headed them into thick cover, low hanging branches and ferns that obscured the horses from the path. Kane squatted, pulling her down with him.\n\n\"Stay here,\" he said under his breath. \"Be still, Aslin.\"\n\nShe nodded. He left. She didn't see him anywhere. She was just wondering where he was when he reappeared beside her, startling her.\n\n\"I couldn't see how many or their colors. But nobody should be here. This is Tavishi territory. I need to see who they are, where they are, so we don't walk into more of them blind. But I can't leave you alone here. It's not safe.\"\n\n\"What about the horses?\"\n\n\"They know. They will hide. They'll fight if they are discovered,\" Kane said. He looked at her. \"I didn't anticipate this, Aslin, or I would never have brought you here. I want you to listen. If I tell you to run a certain direction, whether you're on foot or riding, go as fast as you can where I say. Don't question it. Do not double back to me. I'll find you. Do you understand?\"\n\n\"Yes.\"\n\nHe looked at her for a long moment. Then he leaned forward, still speaking very quietly.\n\n\"He won't come unless it's absolutely needful, Aslin. But if he does, it's important Ilian doesn't bolt. If she does, I might hunt her. Tie her to something if you need to.\"\n\nHer eyes had gotten wide.\n\n\"Okay.\"\n\nHis eyes were searching her face. \n\n\"He would never hurt you, mi dutul.\"\n\n\"I know that.\"\n\n\"Keep low and quiet,\" he said, taking her hand. \n\nThey didn't go far, but it actually took quite a bit of time of sneaking and stopping and listening. She did her best to be quiet, not to distract him. She knew he saw things she didn't, heard things. Smelled things, she suspected. They got to the edge of an outcropping overlooking a small valley. She crouched down low just as he did.\n\n\"Stay here,\" Kane said, his words little more than a breath.\n\nHe went out, getting on his belly and going to the edge. He watched for awhile and then came back.\n\n\"Duellan clan,\" he said low. \"We have to get to Tavishi Hold.\"\n\nThey heard it. A Luterian horse, enraged. It had to be Shaol, and then she knew it was, Ilian's cry joining his. Kane cursed. He got to his feet and put his fingers to his lips and whistled very loud, Aslin looking around nervously after all their sneaking. He grabbed her hand, running with her through the brush to the path. \n\n\"Follow me. Keep your head down. If Duellan find us, keep riding down the path and hide when you're clear,\" he had time to say before Shaol's broad chest was suddenly looming in front of them, Ilian behind him. \n\nShe ran to Ilian, mounting, keeping herself low in the saddle as Kane turned Shaol. Then Ilian was running after Shaol, the path going down. She was wondering if Duellan clan would find them when a man showed up around the bend on a warhorse directly in their path, coming the opposite direction. The Duellan man had blonde hair, his colors yellow and black. \n\n\"Go!\" Kane cried to her, drawing his weapon.\n\nEverything happened so fast. Shaol threw himself at the other horse, both partially rearing, meeting him chest for chest, the horses shrieking. Shaol's teeth sank into the other horse's shoulder as Ilian ran by them. The Duellan raised his weapon over his head and slashed at Kane. \n\nThen she was past them, Ilian running down the trail. The path took a sharp turn, Ilian slowing briefly. Aslin concentrated on staying on her as Ilian leapt a log across the path, sailing over it, landing, Aslin jolting forward and then back as Ilian ran again. She kept herself low on the horse.\n\nHer heart was pounding, looking behind her, but the path was empty. Kane. Her mind wanted to scatter, terrified, remembering the Duellan warrior. She forced herself to breathe. She had to believe Kane wouldn't be hurt, that he would come for her. She needed to hide. She was afraid she would meet another Duellan warrior on the path. \n\nShe began to scan the forest they passed for a place, but she didn't see anything. Finally the shoulder of the path fell away ahead to her left, a decline, another downed log making up part of the path, a huge network of tree roots disappearing into shadows. She slowed Ilian and turned her, guiding her down the steep slope, leaning back until they reached the bottom.\n\nIlian jumped the last of it, Aslin looking around. She slid off the horse, taking the reins, leading her into the dark shelter under the roots, the path above almost overhanging where they were hiding. Ilian came around in front of her, side on, her ears up, until Aslin was pressed against the hillside. The horse's head turned constantly, watching everything.\n\nThey waited. Aslin tried to quiet her breathing, which sounded very loud to her. She tensed when she heard hooves on the path above them. They slowly got louder, riding fast, and then louder, and then they were right above them, thundering. Ilian becoming a statue, her head up, and then the sound slowly faded, Aslin's heart racing. \n\nThen she heard it, her body flushing with fear. The hooves came back, a trot, then closer, the horse walking now, the heavy tread of a Luterian warhorse. They slowed and stopped. The sound of boots hit the dirt above her.\n\nShe felt Kane touch the bond, near. She opened it, so relieved, beginning to push past Ilian. \n\nKane sent her a sharp surge of warning. She retreated until her back was to the dirt wall again, her hand going to her waist. She drew her dagger. Boots walked slowly on the path above them. Not Kane. She imagined the Duellan warrior looking at the fresh tracks in the grass on the shoulder. \n\nShe pressed against the dirt, all of her senses straining. Ilian was soundless. The bond was still open, the flavor of Kane's feelings focused, alert. \n\nThe boots above her stopped for a long moment. Then they ran and a moment later the warhorse was pounding away from them down the path. She felt Kane's tense waiting, his surge of aggression, killing rage. Kane closed the bond. There were sounds down the path, a Luterian warhorse, then the sound of steel on steel. A man yelled, cut off quickly. Aslin was breathing hard. Kane was fighting. \n\nThen there was nothing. She waited. There was a thud in front of Ilian, the horse snorting and lunging.\n\n\"Stach, Ilian,\" Kane said irritably, turning her nose with his hand, and then he was there, taking her dagger from her hand and putting it back in its sheath, his strong arms, her body melting into his with relief. \n\n\"You did well,\" he said, releasing her, taking her hand and bringing her to Ilian. \"We have to go. There's too many of them and they're alerted. There's a place. Duellan won't know about it. We have to ride fast.\" \n\nShe led Ilian back to the path, Kane giving a sharp whistle. Shaol came, Kane mounting. They were riding again, riding as quickly as they could on the terrain. Kane suddenly cut into the woods, leaving the path, slowing the horses. They went up an incline toward the face of the mountain, Shaol sometimes forcing his way through thick brush, pushing his way through.\n\nAt last Shaol broke into a small clearing set low in the landscape, difficult to see. Kane looked all around and then he dismounted, motioning to her. She got off Ilian. Kane took Shaol's reins and began to walk along a thin cleared path running along the side of the mountain, the face going straight up on their right. She followed, hearing hooves in the distance. Riders on the path they had left. \n\n\"There it is,\" Kane said ahead of her.\n\nShe looked. She didn't see anything until they were almost on it. A long tall crack showed in the side of the mountain, as wide as a man lying down, overhung with bracken and leaves. \n\n\"Gather dead wood. We'll need fuel.\"\n\nThere was plenty on the ground. She gathered it and brought it to Kane, who bound two bundles with twine, linking them and throwing them over Shaol's shoulders.\n\n\"Follow me,\" he said, taking Shaol's reins and leading him into the crack in the mountain. \"Don't fall behind.\"\n\nChapter Seven\n\nThe cave's floor was dirt at first, hard packed, but then it became rock, uneven. Past the entrance, it was quickly dark, and within steps it was pitch black, no relief from it. As Aslin followed the sound of Shaol in front of her, it began to get cold. Her cloak was on Ilian, but Aslin was afraid to stop. She didn't know how far he was ahead. The cold made her hands ache and she thought that if she could see, her breath would be misting all around her. \n\nThe realized her eyes were wide in the dark, trying to see. She began to shake with cold, hunching her shoulders, her hands clenching, shivering.\n\n\"Stop there, Aslin,\" she heard him say somewhere in front of her, his voice low, still sounding loud in the place. \n\nAslin stopped, moving closer to the horse, so cold, tucking against her great shoulder, Ilian's chin resting on her chest. She heard Kane moving, heard him open a flap on the packs on Shaol's back. Then there was the sound of more flaps, the clank of buckles. He cursed under his breath. She heard him move to the wall at her left, his footsteps, and then the clatter of small things. Kane's footsteps again. Something dry. \n\nClacking, a sputter of sparks lighting the darkness, and another, again and again, Ilian tossing her head. \n\nSince they were stopped, Aslin found her way around the horse by touch, going to the packs on Ilian's back, pulling her cloak out. It was such a relief to put it on, still shivering, her hands achy and numb with cold. She blew on them, pulling them into the sleeves.\n\nA small flame appeared, very bright in the surrounding space, and then it got larger, and at last it became a torch and she could see the side of Kane's face, his shoulder, his hand holding it, the rest of him in deep shadow. The walls sprang to life around her, rough and black. He walked to her.\n\n\"Good, you got your cloak. The flint was still here, I couldn't find it in the pack. We've got a ways to walk. There'll be a place for fire when we get there and I'll get you warm.\"\n\n\"Won't they see the smoke if we make a fire?\" she said, still shivering, her breath misting in the torchlight.\n\n\"You're an intelligent person, Corsaire,\" he said, walking to Shaol's head and grabbing the reins, leading him. Aslin grabbed Ilian's reins and followed. \"Put your hood up, you'll be warmer. They will see it, you're right, but they know we're in the area anyway. Where we are going, where it will come out, they can't reach unless they know where the mouth of the cave is. If they already know that, they'll come anyway, smoke or not. If they don't, they will never chance upon it. The cloaks will protect us some, but we'll need heat in this place.\"\n\nThe walls around them were wet as they walked forward, the passage wider now, torchlight dancing over the walls, glistening. She realized it wasn't water she was seeing. It was ice, and as they walked it began to coat the walls and corners, thickening until they were walking through a circular tunnel of smooth white, the horse's hooves crunching the ground they walked. Neither Shaol nor Ilian seemed cold, although their breath misted and they sometimes blew out great breaths. \n\n\"Where are we, Kane?\" she asked quietly, her voice still seeming loud. \n\n\"Where I had intended to bring you. I've always wondered about it. It's on Tavishi maps. I knew roughly where the entrance was, but I'm glad I found it so quickly. It's the Tavishi shrine to Shai.\"\n\n\"This is a shrine?\" she said, looking ahead at the strange tunnel they walked through, the passage almost completely round now, the white ice on the walls thick. \n\n\"Yes. It's a place Tavishi clan don't tell others. You can come here because you are Tavishi. And because you are Tavishi, you will keep it a secret, Aslin, for your honor and mine,\" he told her.\n\n\"I will, Kane. I swear it,\" she promised. \n\n\"I didn't mean to sound like I doubt you, Aslin. I don't. I just wanted you to know it was a serious thing so you didn't reveal it lightly. You weren't raised Luterian.\"\n\n\"Why is there ice when it's so warm above?\"\n\nWell, it wasn't warm, but it wasn't like this. \n\n\"It's an ice cave. The cool air can't escape, and the warm air can't get in, so it just gets colder. I'm told there's a large cavern ahead. Inside, at night, Shai's light shines into the cave through a fissure onto the ice and the walls and ceiling glow. I've heard it's a wondrous thing.\"\n\n\"People come here to worship the Goddess?\"\n\n\"It's a place Tavishi come to visit Shai and speak to her, to possibly learn answers to questions, or to unburden a deep hurt or shame. I wanted to bring you here so you might know her a little, if you want. I thought it would be good for you to meet her in one of her houses, since you have been away from Luteri for so long.\"\n\nThis was obviously important to him, considering they were currently surrounded by Duellan clan who wanted to kill them and he was talking about it. She hesitated.\n\n\"I've never been very religious, Kane,\" Aslin said, not wanting to offend him.\n\nShe was a little nervous that he would want her to pretend, given that Shai was the one thing\u2014the only thing, it seemed\u2014that all Luterians seemed to be in agreement on. She hadn't met one yet who didn't talk about the goddess as if she were real, Kane included.\n\nKane laughed.\n\n\"Nobody preaches Shai in Luteri, Aslin, not even the Priestesses who love her. Our relationship with her is personal, outside of clan or family or oath. Maybe you will meet her here. Maybe you won't. But that's for you to understand, not me.\"\n\n\"Don't we have to get back to Tavishi?\"\n\n\"Yes. But we can't just break cover and run, Aslin. They've had too much warning. They will look for us in the surrounding area, thinking they will find us, that we are maybe still running. We need to slip through them from behind when they're spread out. We have grain for the horses. We will be warm enough. We'll stay here for a time.\"\n\n\"Will we be able to get away?\"\n\nKane stopped ahead of her and cleared Shaol, turning to her with the torch, raising it and looked her down and up.\n\n\"Your confidence in me is overwhelming, Corsaire,\" he said indignantly. \n\nAslin blinked. She opened her mouth and closed it. \n\n\"I didn't mean it that way, Kane,\" she said, conciliatory. \n\nHe didn't answer, turning and grabbing Shaol's reins up again, leading him.\n\n\"I guess you'll just have to hope, then,\" he muttered ahead of her, still sounding disgruntled. \n\nHer mouth twitched. She couldn't catch up with him. There wasn't enough room. For the next few minutes he didn't talk to her. More time passed. Yes, he was still disgruntled.\n\n\"Is it far?\" she finally asked.\n\nSilence.\n\n\"A little,\" he said shortly.\n\nStill upset with her. They walked, only the crunch of ice under the horses' hooves. \n\n\"My Corsaire cousins told me things I could do to pleasure a man,\" Aslin told him casually. \n\nSilence. She sighed.\n\n\"Of course, it may be things Corsaire don't tell others. I wasn't raised Luterian, it's difficult for me to judge. Never mind\u2014,\" she said.\n\n\"What did they tell you?\" \n\n\"Will you forgive me? I am confident in you. The situation just seemed a bit desperate for a moment.\"\n\nSilence.\n\n\"Will you tell me everything they said?\" he returned.\n\n\"I can't believe you're bargaining, Kane. Yes, everything.\"\n\n\"I forgive you, Corsaire,\" he said, and laughed.\n\nIt felt like they'd been walking for hours when the passage began to get lighter around them. Ahead the circular tunnel narrowed into a tall and narrow and high slit, with light shining through it, the craggy rock at the opening showing in gradients from white to dark blue as the light shining into it from behind radiated outward, creating the impression of overlapping folds. \n\n\"Does it remind you of anything, Corsaire?\" Kane said as he approached it. \n\nAslin's brows raised. She approached behind him, going through it, just wide enough for the horses. It spilled them into a wider passage, stronger light ahead of them. \n\nKane moved into the cavern, moving aside after the entrance and waiting for her. He set the torch into a slot at the entrance. Aslin walked through, staring, her eyes wide. \n\nThe ceiling above them was lit in streaks, patterns of luminous color shining through the ice from above with the strong sunlight, everything gradients of blue, from the dark blue rocks around them to an iridescent light blue yielding to white light where the fissure opened. The rocks seemed translucent, the shine refracted everywhere off of crystals, as if they had walked into the center of a large jewel with all its facets. There was a small shore under the fissure, water beyond that, a shallow lake. \n\n\"It's so beautiful,\" she said, awed.\n\n\"I always wanted to see it,\" Kane said, his voice as quiet in the space. \"There are stories of this place among Tavishi. I never thought I'd stand here.\"\n\nThey led the horses into the space. Kane began to unburden Shaol, setting the wood down. She unsaddled Ilian, patting her, removing her bridle. To their right the ground went up to a level space with a huge pit for fire, a place to sit carved around it.\n\n\"You were very brave today, Ilian,\" she told the horse, coming next to her, running her hands over the horse's neck and passing under her head, tall as she was. ",
        "She heard a muffled snort from Kane. Ilian turned her head and leaned into Aslin's chest, Aslin scratching her cheeks, planting a kiss on Ilian's eyebrow, moving to her ears, scratching behind them, marveling at her long lashes. \n\n\"I don't think I've ever seen a rider lavish so much affection on a Luterian horse that enjoyed it so much,\" Kane said, shaking his head.\n\nAslin scoffed, pulling Ilian's forelock from in front of her eyes. It was always falling there. She began to braid it, the horse not caring. She would get a tie from her hair and use it. She glanced at Kane over her shoulder.\n\n\"You can't deceive me,\" she said. \"You feel the same about Shaol.\"\n\n\"You would know, Aslin,\" he said, glancing at her sidelong as he set the packs on the ground, his changing eyes, an acknowledgement of the bond that brought a tingling wave of excitement in her body.\n\nShe suddenly felt shy and pleased. She glanced at Kane, smiling, looking away. She looked at him again. He straightened slowly, staring at her. His eyes narrowed and he smiled lazily, looking her down and up. \n\nShe froze. He touched the bond and for a moment she considered refusing, given the look in his eyes. She opened it. Oh, yes. \n\nHe began to walk toward her. \n\n\"But we just\u2014,\" she protested, turning to face him. \"It's cold, Kane.\"\n\n\"If I make a fire, will you take your clothing off?\" he asked her, arriving, sidling up to her, one hand coming around her waist and then down to her bottom, pulling her against his lower body.\n\nHe moved his head away sharply as Ilian came swooping in, her teeth clacking. Kane danced to evade the horse, grinning, backing himself away quickly, bringing Aslin with him. When he was out of range, he pulled her against him again.\n\nHe was in one of his moods, already hard, she could feel it. He would be relentless until she gave in and he reduced her mindless pleasure. Another long wave of excitement went through her, crawling across her lower belly. He bent and put his hands behind her head, grasping the braids, tilting her, smelling her throat as she exposed it, relaxing in his grasp, as likely to do that as kiss her. His mouth moved up to her ear, speaking low.\n\n\"You have been driving me crazy almost the entire way here. Your smell changes to me when you're aroused, Dutul. I will always know when you want me to touch you, when you are thinking about sex. Not just what I smell between your legs but all of you. It calls to me, makes it so I can't think of other things.\"\n\nAslin flushed. Ever since she promised she would tell him, she had been remembering all the things that her Corsaire cousins had said. It would be so embarrassing to talk about it. But it also made her feel excited. She could feel she was already wet, squirming a little. She couldn't seem to stop thinking about those things once she started. He pressed against her harder, smelling her, she knew. \n\n\"What are you thinking about that has gotten you in such a state?\" he wondered aloud, entirely predatory, removing her cloak. \"Is it telling me what your Corsaire cousins taught you?\"\n\nShe nodded, her cheeks hotter, squirming a little again.\n\nShe jumped when his hand went under her tunic dress and straight between her legs over her pants, cupping her there. \n\n\"You're wet, Corsaire,\" he said, pressing on her. \"And I haven't tasted your naked little pussy yet.\"\n\nHis hand went to the string of her pants, tugging the tie open. She tried to catch them but he pushed them down. It was so cold. Kane pulled off his cloak and grabbed her hand, walking her up the slope to the fire pit. He tossed his cloak on the edge of the seats, a ring of smoothed rock around it. He jumped into the pit, put his hands at her waist and lifted her down. He brought her to the edge and lifted her onto it, sitting her over his cloak. He began to pull up the bottom of her tunic dress, sliding it out from under her.\n\n\"Kane\u2014,\" she objected, pushing it down.\n\nHe got her knees, pushing them up. She collapsed backward on the cloak as he spread her legs, and then spread her more with his fingers. He bent and began running his tongue very gently all over her clitoris, that's what Lorita had called it. It felt different, naked, nothing between her and his mouth. She pulsed on his tongue, already wet, already very swollen and sensitive, crying out. \n\nYes, they had told her about this, and her Corsaire cousins had said Kane would want to\u2014and then they had said that he would\u2014and he might\u2014. Aslin came, crying out and arching, no way to stop herself, Kane's tongue the center of all sensation, her legs spreading more. She strained, the pleasure quick and very intense. She flinched away from his tongue, sensitive. \n\n\"I was going to wait but I can't, Corsaire,' Kane said, his hands going to his pants, unfastening them, his eyes still between her spread legs. \"I have to rut you.\"\n\nHe said it matter-of-factly, but the lust through the bond was so strong that she was immediately pulled in two directions, arousal and aversion. She didn't know what he meant by it, she was far too sensitive for him to\u2014. \n\nHe dragged her closer to the edge abruptly, cold on her bottom even with the wool, pushing her knees to her belly and spreading her, bringing himself over her. She was trapped under his weight, feeling him against her entrance. She didn't even have time to protest before he thrust into her, the way slick but too fast, opening her.\n\nShe cried out, closing her eyes at the sensations as his hips met her. The angle in this position was too much. He increased his motions, rubbing directly on that place in her. She couldn't get away from it, entirely pinned, her voice high, pushing on his shoulders. \n\n\"I can't, Kane,\" she whimpered, writhing under him. \"Please\u2014.\"\n\n\"I know, Corsaire,\" he said in sympathy, a surge of hot lust from him. \"It's going to get worse.\"\n\nHe was grunting with every thrust, more rough than he'd ever been with her, painful now the sensitivity was so high. She could feel every bit of him. His hand dug between them, finding her, rubbing there, too. She couldn't say words. She was pushing at him helplessly, her eyes still closed, whining. \n\nThen it wasn't pain anymore, it was pleasure, and she was coming, Shai, she was coming so hard. She went rigid under him. It wasn't going to stop and she couldn't move to ease it. She clamped on him, giving a series of sharp, high cries, all she could do, the pleasure huge. \n\n\"I love fucking you,\" he said, still stabbing deeply. \n\nHe stopped thrusting and pulsed hard in her, throwing his head back and crying out, coming with her, sharing all of it, his release as intense as hers. She closed her eyes again, overwhelmed, waiting through his surge, her body locked under him, and the release finally came when he pushed into her again, still pulsing. Her sex contracted around him over and over, making him cry out again. \n\nShe slowly became aware of how cold she was, bare on her bottom half, her knees coming down as Kane released her gently, panting over her. He drew out carefully as she winced. He arranged his clothing and pulled her up by her arms. He grabbed the cloak past her, wrapping it around her and lifting her, sitting himself, putting her on his lap and putting his forehead against hers. \n\n\"I will make you a fire when I can move, Corsaire,\" he said, his breathing still fast. \n\n\"Okay,\" she said, hers still fast as well, feeling as if she'd been mauled, her body heavy and languid and warm now, limp satisfaction.\n\nHe grinned, feeling it from her. \n\n\"I sometimes don't even know what to do with what I feel for you,\" he told her.\n\nHe bent and kissed her, sweet and slow, her hands going to his hair. When he pulled back, he looked at her for a long moment.\n\n\"Fire,\" he said, reminding himself, lifting and depositing her.\n\nHe went and got her cloak. She stood and traded with him, shivering. He pulling her cloak around her securely, lifting the hood. He got out of the pit and brought back the wood as she went and got a soft cloth her cousins had given her. She came back and sat on the edge.\n\n\"How long will Ilian live?\" Aslin asked, the question she had been readying when he had assaulted her.\n\nKane was clearing a place in the sand in the fire pit, throwing several rocks to the edges.\n\n\"Luterian horses live about sixty years. Shaol is eighteen. How old is Ilian?\"\n\n\"Seven,\" she said, feeling a sense of relief. \"What are Duellan doing on Tavishi land?\"\n\n\"Mining,\" he said. \n\n\"What?\"\n\nHe got out and got the wood bundles, dropping them into the pit. \n\n\"They are mining the caves on the ridge that spans Tavishi and Corsaire lands for precious stones. Who knows how long they've been doing it. Neither Tavishi nor Corsaire have defended our territory in the north for over three hundred years. We've been too busy fighting each other. Duellan know that and obviously are taking advantage of the situation.\"\n\nKane went into his pack.\n\n\"There's the flint,\" he said to himself.\n\nHe pulled dry moss from the pack, going to get the torch. \n\nShe watched him make the fire. Aslin huddled in front of it, putting out her hands. He came next to her, sitting with her, putting his arms around her when she leaned into him. She felt him wince away from her a little. She sat up.\n\n\"Take off your cloak,\" she demanded.\n\n\"I'm fine, Aslin, I'll take care of it in a moment,\" he said. \n\nShe looked at his face and he sighed, standing and taking off the cloak. She stood with him and saw it immediately, the slash in his shirt, and all the blood rushed from her head.\n\n\"It's shallow, Corsaire,\" he said, reaching out to steady her. \n\n\"You're bleeding,\" she said, her lips numb.\n\n\"I tend to do that when I'm cut,\" he said as she lifted his shirt, the slash on the flesh of his side under his arm, blood under it. \"It's not deep.\"\n\nAslin stood and went to her pack for the water and a clean cloth.\n\n\"I don't have anything to bind it,\" she said, coming back to him. \n\nShe cleaned it, her hand shaking. His came down over hers. \n\n\"It's just a scratch, Aslin. It doesn't need binding. It will heal quickly.\"\n\nShe swallowed, shaking harder.\n\n\"You could have been killed,\" she said. \"They could have killed you, those men.\"\n\nHe cupped her face. She felt her eyes fill.\n\n\"They didn't. Don't cry, Aslin.\"\n\n\"I can't help it,\" she said, sniffing loudly.\n\nHis mouth twitched.\n\n\"When you cry you snuffle like a very small pig.\"\n\nShe drew away, eyeing him.\n\n\"It's hardly polite to say so,\" she said, sniffing deeply again.\n\n#\n\nKane woke. It was deep night. He was glad he did. He looked to see Shai's light shining through the fissure, the color like nothing he'd imagined, luminous and silvery, the whole place glowing the most delicate white, motes hanging in the shine. It was mystic, strange and beautiful. He would wake Aslin to see it. He came up on his elbow, his eyes on it, feeling a sense of awe, even longing. He looked down. \n\nAslin was naked, pressed to him behind her, dark hair over her pale shoulders, her body molded to him. \n\nThe Corsaire was soft and silky all over her body, everything about her arousing him. He leaned down and smelled her, his cock stirring a little, but he had exhausted himself. He had missed her while she was gone for the week, keeping himself busy, thinking about her as he lay in her bed alone. He ran his fingers \n\nalong her shoulder to wake her. She opened her eyes. He tilted his head to see her face, but her eyes didn't see anything around her. \n\n\"Aslin?\"\n\nTo his surprise, she drew out of his arms, getting to her feet gracefully, naked. He stood, reaching for his cloak, approaching and leaning to see her.\n\n\"Aslin?\" he repeated.\n\nShe was walking, still naked. Kane followed her, putting his cloak on, the air bitterly cold. It was like she was still asleep. She didn't seem cold at all. She walked to the edge of the underground lake on the shore, directly under the luminous rays streaming in through the fissure, her body looking sculpted in the strange light, long dark hair falling down to mid-thigh, black and blank eyes. She looked up at the fissure, its shine lighting her face oddly. \n\nKane came behind her, shuddering with cold. She wasn't even shivering. He drew his cloak around her shoulders from behind anyway, her body almost hot. He tipped his face to the side to look at hers. Her eyes were still open and unseeing, her face calm. Kane touched the bond, curious.\n\nShe immediately turned in his arms as the bond opened and light hit him, filling his mind. Shai. It was Shai, Shai's light. Kane was struck by it, going rigid. He couldn't move. Her arms slowly came up around his neck, her eyes as blank. \n\nLust hit him through the bond, overwhelming, urgent, his cock surging and hardening against her belly. Then he could move, his mouth coming down on hers, all he could think about. He needed to be inside her, needed to fuck her. He dropped the cloak, pulling her down with him. \n\nHalfway down, her hands went to his shoulders, rolling on top of him, pinning him, her body strong. She moved her hips, finding his cock and pushing herself onto him, her whole lower body moving in sinuous waves, her pussy clamping on him. Kane cried out in shock and pleasure. \n\nHer hands came down on his arms like bands and he couldn't move them. She was thrusting on him. He cried out again, the sensations beyond pleasure, bordering on pain it was so keen. \n\nHer lower body moved but her upper body was still, her arms straight, her hands still holding him. She was climaxing as he began to spend in her, his cock pulsing, his head stretching back, the tendons in his neck showing, his shoulders trying to leave the cold rock under him, unable even to thrust as she took it from him. It went on forever, coming and coming, an endless exchange of pleasure, lost in it. \n\nHis chest was heaving, trying to get his breath, staring up at her. It was Aslin but it wasn't. \n\nThe pleasure slowly faded. She released his arms and he could move again. She reached her hand slowly, touching his cheek, a caress of such acceptance and knowing that his head fell back, his eyes closing, his breath choking out once, tears coming to his eyes and rolling from the outer corners, cold by the time they rolled down his cheeks. \n\nShe left him, withdrawing from him and standing up. He came up on his side, freezing, watching as she walked back to the fire, back to their blankets, and climbed in, lying on her side and closing her eyes. \n\nKane sat up, shuddering in reaction, pulling the cloak up around himself. He looked up through the fissure until he stopped shaking so hard and his breathing evened. Then he got up, walking to join her. He looked at her for a long moment and then lay beside her, her body very warm. He pulled her to himself.\n\n\"You're hands are cold, Kane,\" Aslin complained sleepily. \n\n\"I'm sorry, Corsaire,\" he said, his voice husky, curling up behind her, watching the light again. \n\n#\n\nKane was distracted in the morning, quiet through breakfast. Aslin felt strangely sore from sleeping on the ground despite the blankets and her cloak.\n\n\"We will need fuel, more wood for the fire,\" Kane said. \"I will take Shaol and go and gather it and bring it back. Will you be all right here alone?\"\n\n\"Yes. Are you well, Kane?\" she asked, worried by his manner.\n\n\"Yes, Aslin. Just a dream.\"\n\nShe watched him disappear down the passage, Shaol following. Aslin looked around. Evidently they were going to stay here for longer if he were getting more wood. She wandered around, the cavern huge, gradients of blue, dark places on its edges.\n\nShe went back to the fire, taking out their provisions and neatening them, repacking. She took the blankets and shook them. She cared for Ilian's tackle. Not having anything else to do, she brushed Ilian a second time and then returned to the fire, feeding it more wood, idle. Surely Kane would be back soon. \n\nShe went to the edge of the water, putting her fingers in and smelling, wrinkling her nose. It smelled strongly of minerals. She began to explore the chamber again, crossing to the far side, a deep area that rose onto a small plateau where the ceiling became low, much of it in shadow.\n\nShe saw something against the far wall there, long and large. She approached it, going up the slope, bending down, peering. It was a bundle of something, the cloth around it looking old, dusty. She looked closer. Her eyes were drawn to something next to it and she saw a hand, blackened and gnarled.\n\nAslin cried out, backing away. She lost her balance on the slope, falling on her hip, crying out again with the pain, scrambling backward. She got up and retreated as Ilian came straight to her, the horse circling her, looking for the threat. Aslin backed away until she was against the far wall, Ilian standing in front of her watchfully. Aslin stayed there, shaking, her eyes fixed on the dim shape across the cavern. \n\nKane was pulling her against himself. He was breathing hard. She turned her face into him, closing her eyes, very grateful he was there. \n\n\"What is it?\" she said, her voice muffled. \n\n\"What is what, Corsaire? I felt you frightened. I was almost back. I couldn't get here fast enough. There's nothing here. What are you afraid of?\"\n\nShe pointed into the dark recess all the way across the cavern. He looked and then left her, walking across to it. She saw him see it, saw him go to it. She followed, keeping her distance. \n\n\"What is it?\" she repeated, not looking at it. \n\n\"A man's body, Aslin, preserved in this place.\"\n\nShe came closer as he went and squatted over it. Kane pushed back the figure's hood, making a sound of pity. Aslin looked away. She was very glad she hadn't seen the dead man's face before.\n\n\"He was Tavishi. There haven't been Tavishi here in over three hundred years,\" Kane said in wonder. \"The cold prevented him rotting. His wounds killed him.\"\n\nKane picked up an arrow next to the figure.\n\n\"Duellan,\" he said softly. \"He was shot by Duellan and wounded and he came here for shelter like we did, and then he died here. But who was he?\"\n\nShe watched, wincing, as Kane went through the man's tattered clothes, dust and fibers drifting up, his pockets. Then Kane froze, picking up the man's hand on the far side of him, the whole arm lifting. Aslin watched, grimacing. He pried something from the fingers. Aslin could hear them pulled away, sounding like dry grass crackling. She shuddered. Kane looked at it for so long that she came closer to see it. \n\n\"What is it?\"\n\n\"Penal,\" he said softly.\n\n\"What?\"\n\nHe looked up at her. She looked at his hand. He was holding an oath bracelet.\n\n\"Tavishi say that when Penal was found dead three hundred years ago, she was missing her oath bracelet. Betran claimed she had it when she left him the day before. Tavishi didn't understand why she would take it off. This is Penal's oath bracelet, Aslin. She was here, with this man, and not long before she died. It has her bloodline written on it, Bertran's bloodline.\"\n\nKane stood, still looking at the bracelet. He slowly put it in his pocket, his eyes on the figure at his feet. \n\n\"This must be Ashe, Penal's cousin, who rode with her that day, whom Tavishi assumed died defending her. We never found his body. But I don't understand what they were doing in the north, why they were here. Tavishi found Penal by the western border between Tavishi and Corsaire territory, a Corsaire arrow in her back.\"\n\n\"Could Corsaire have killed her here and brought her body back?\"\n\nKane picked up the Duellan arrow again, turning it in his hands.\n\n\"I don't think both Duellan and Corsaire would have been hunting them together. Ashe and Penal were here at the shrine,\" he said. \"Ashe was wounded by a Duellan arrow and died here. Penal must have left her oath bracelet here as a message to any who might find it, left it with her cousin's body, with the Duellan arrow, in case she was taken or killed by Duellan, so Tavishi would know.\"",
        "Silence. Aslin stared at his profile. Kane was so still, looking at the dead man. She asked the question.\n\n\"Is it possible Duellan clan killed Penal and not Corsaire?\" she asked him.\n\nKane was silent, and then he answered.\n\n\"If Ashe were mortally wounded here by Duellan and brought Penal here for her safety, he would have wanted her to try to get back to Tavishi before she ran out of food. But if Duellan were alerted, and if she were on foot with no protector against Luterian warriors, I wouldn't like her chances. Duellan would have pursued her. If they were the ones to kill her, Aslin, and if they deceived Tavishi, then they were the cause of three hundred years of feud. Betran killed Alore of Corsaire clan in retaliation for Pelar's death.\"\n\nKane looked up at her, his eyes lit with intense emotion. \n\n\"Ashe and Penal must have come to the shrine like we did and discovered the mining. They were seen and pursued to keep the secret of it, and Duellan clan wounded Ashe as he was trying to protect her. Ashe brought her here and died, and she left her bracelet and ran for Tavishi lands. She was killed by Duellan before she reached there and they put a Corsaire arrow in her back to make Tavishi think otherwise. And this secret has lain here with her bracelet and her cousin's body for three hundred years, waiting for someone to learn it.\"\n\nKane's eyes turned to the cave wall as if he could penetrate it with his eyes and see the ridge of mountains that lay across the Tavishi and Corsaire border to the west.\n\n\"Duellan clan have become very rich with their ruby stones over the past three hundred years. If they know we've learned their secret, they will fear Tavishi will attack. They might decide to attack first. Duellan clan is larger than Tavishi. Duellan have more warriors. We have to get back to warn them, Aslin.\"\n\n\"Why are Duellan so many, Kane? Don't all Luterians have the same number of children?\"\n\n\"Yes. The other three clans all have more people than Corsaire or Tavishi, Aslin. I suppose you didn't notice because you're not used to it. Tavishi Hall is much emptier than they should be, and it is the same with Corsaire.\"\n\n\"Because of the feud?\" \n\nKane nodded, looking down at the arrow again.\n\n\"We've lost so many Tavishi warriors that there were times, before I knew you, living in the blackest part of my hate, when I would wander through Tavishi Castle and see more faces of the dead than the living. I knew all of them. Loved many of them. And I have missed a few of them so badly I have sometimes wanted to join them.\"\n\nHe took her hand, leading her back to the fire pit. Aslin stepped wrong, following, wincing a little.\n\n\"Did you hurt yourself?\" he said immediately.\n\n\"It's nothing. I fell and bruised my hip,\" she said shakily. \"I've never seen a body before.\"\n\n\"Let me see.\"\n\n\"It's nothing, Kane,\" she repeated as he hauled her over by her arm to the blankets, pulling her down.\n\nHe knelt beside her, pushing her tunic up impatiently, untying her pants and pulling them down, turning her on her side. She looked. It was just beginning to go blue and purple, the size of a saucer plate. She winced when he touched it. He leaned forward and his eyes roamed the whole area, intent.\n\n\"What is it?\" she said anxiously.\n\n\"You have the nicest, plumpest bottom,\" he said, grinning at her, cupping her butt cheek. \n\n#\n\nTwo days later, they emerged from the crack in the mountain and into dawn light, misty and dim, the relief of warmth, relatively so, Aslin's eyes slow to adjust. Kane was wary, dropping Shaol's reins and scouting ahead while she waited. He came back after a long time and nodded. She mounted Ilian.\n\nAslin followed carefully as he led Shaol through the brush, finding small paths. A few times he had them stay still, and once they stayed in deep cover for a long time, Kane tense.\n\nThey didn't see any Duellan that day. They ate in the saddle, only stopping briefly to stretch and for necessities. She was tired and sore from riding so long by the time afternoon came, and when the light began to fail, she was cold again even with the cloak. All the muscles in her thighs and stomach were sore. Kane still led them as night fell. She kept herself upright, the stars bright above them, following Shaol's huge rear end, which she had entirely memorized, although she could barely see it anymore. \n\nKane finally dropped back beside her.\n\n\"There are quite a few Duellan in front of us, Aslin,\" he said to her quietly. \"I don't know how many. They'll have scouts. We'll go through them, but it will be slow. I know you're tired. Stay alert, and be ready to run if I say.\"\n\nAslin shook off her sleepiness, nodding. The next few hours were a haze of stopping and going, waiting in a place for a long time before going to the next place and waiting more, sometimes getting off Ilian to lead her. She saw the gleam of firelight once far to their left, but it disappeared quickly behind a rise. She did what Kane said and stayed quiet. At last Kane had her mount Ilian, the night very dark all around them, and led them straight without stopping.\n\nIlian wasn't moving. Aslin opened her eyes, not realizing she had closed them. Kane's hands were at her waist, pulling her off, her muscles protesting. She couldn't walk, her legs turned shaky. He picked her up and set her down somewhere soft and she curled up, only waking when he drew her into his arms a little later. \n\nKane woke her at dawn. She'd slept on her hip and it hurt. She chewed on rations in the saddle, no longer liking them. Kane had to help her into the saddle she was so stiff. \n\nBy late morning, she recognized the plains below them, saw the place ahead they had been before they had taken the mountain road to the shrine. \n\nThe distance was deceptive, and it was early afternoon before they were riding on the same plains, the horizon flat as the mountains behind them receded. \n\nShe and Kane were riding next to each other, the horses in their loping gallop, when Shaol began tossing his head, going sideways. Kane turned him around the way they had come. Kane's face was tense. He looked where Shaol looked. Aslin turned Ilian, joining him. \n\nShaol was frozen, his ears up, his gaze fixed on the horizon of the grassy plain. It was flat and empty, but Aslin began to hear it. The horses both suddenly gave a series of sharp short grunting cries, their front hooves crashing onto the ground. \n\nShe recognized the sound. Horses, many horses, a low rumbling coming and then the ground was shaking lightly before the thin line of them appeared. Luterian horses, she realized, running on the plain in the far distance. Slowly, banners with the tiny symbol of a torch appeared. \n\n\"Duellan,\" Kane said. \"They gathered their warriors while we were at the shrine. We rode through them last night, but I couldn't tell their number.\"\n\nAslin's eyes ranged. There were so many of them. She'd never seen so many Luterians. \n\n\"They attack Tavishi,\" Kane said, turning Shaol around and coming next to her. \"Ride to Corsaire Hold, Aslin! Don't stop.\"\n\nThe ground thundered as the line of Duellan clan got larger, eating up the distance between them. She couldn't look away. She and Kane were going to die. They couldn't possibly get away.\n\n\"Ride, Aslin!\" Kane cried, and then he whistled. \n\nAslin's frozen position broke, looking at Kane, feeling Ilian gathering herself. Aslin went with the motion as Ilian turned straight around on her haunches, gathering herself, no command on Aslin's part, and sprang away, gaining speed. She was running, then faster, running like Aslin had ever felt her run before. \n\nAslin was leaning over her neck, staying on the horse, Ilian's hooves pounding hard, stretching her neck, the horse blowing under her. \n\nAslin looked back for Kane, sensing he wasn't with her, but instead she saw Shaol pounding away in another direction entirely, parallel to the coming line, his saddle empty. Panicking, she looked for Kane, scanning the flat plain receding behind her. She found him. He was standing where they had been, just standing there facing what was coming. He hadn't moved. She cried out in terror.\n\nShe tried to slow Ilian to return to him, but the horse ignored her. She realized. The whistle had been a command Kane had given Ilian, who had never taken a command from him before. She suddenly knew what it would be. To run until her rider was clear, to defend her. That command did not include turning Aslin around and heading her straight into a line of enemy warriors. \n\n\"Kane!\" she cried, the wind taking her voice.\n\nAslin looked wildly at the ground, wondering if she could throw herself off the horse, but Ilian was running too fast. \n\nShe cried out again as a man came out of the tall grasses ahead and to her left, on foot. A scout, she realized, Duellan colors. They saw each other at the same time. Ilian startled and then lunged across the distance between them. The Duellan man drew his weapon, Ilian slowing abruptly and attacking, straight for the man, a cry of fury from the horse, the man yelling, turning to try to run at the last moment. Then Ilian was on him, her head darting forward, her teeth sinking into his shoulder as the horse picked him up and shook at him. \n\nThe man cried out again, his feet leaving the ground. He fell under Ilian's metal-ringed hooves, sharp and deadly, his weapon flying out of his hand, the horse rotating in her place and stomping on him, bringing her front hooves down over and over while Aslin clung to her back, trying not to look, Ilian screaming in rage. \n\nWhen the man didn't move anymore she clacked her teeth at the mess that was left and snorted, and then she turned. Aslin leaned forward as she leapt over the body, off again, running. \n\nAslin looked back and cried out again, recognition and then longing. \n\nKane wasn't there anymore. In his place was a great wolf the size of Shaol, huge, muscles running under his coat. He was so beautiful that she ached, his long thick fur multicolored, banded with black, white, gold and brown. The wolf heard her through the bond that never closed between them, turning his head and looking at her across the distance, a wind coming across the plain and flattening his fur against his side. \n\nThe wolf greeted her, wordless, powerful, Kane and not-Kane, the other part of him who loved her. Aslin realized she was crying. She wanted them with her so badly. Then the animal faced the oncoming line and his face crinkled, baring teeth as big around as her thigh, his snarling clear even from where she was. Ilian gave a short blare at the sound and put on more speed away from it. \n\nAslin watched as the wolf launched himself gracefully straight toward the line of Duellan clan as she cried out in terror again, his shoulders working, going faster, covering the distance effortlessly. They were still close enough that she saw the men in the front line see him, slowing their horses, the whole line drawing away in a wave and trying to flee, Luterian horses actually bolting in terror. \n\nThe wolf rose in a great leap into the center of them, engulfed by them, his great shoulders, men screaming, his head turning in every direction, his jaws snapping. Then he was gone, Ilian running down a slope, the ridge obscuring her vision.\n\nAslin cried out again and closed her eyes, the image in her mind, feeling desperately for the bond. He was still there, protecting her, savage rage and bloodlust, battle in her mind. Ilian ran, carrying her away from them. \n\nAslin opened her eyes and looked in front of her. She clenched her teeth and keened, leaning forward.\n\n\"Run, Ilian!\" she cried, signaling her, the horse taking her commands again, Aslin's eyes fixed on the horizon, the line of Aspen trees she imagined in the far distance. \n\nCorsaire. Her clan."
    ],
    "authorname": "semiosis50",
    "tags": [
        "victorian",
        "werewolf",
        "non-human",
        "nonhuman"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/clans-of-luteri-bk-02-ch-05-07"
}