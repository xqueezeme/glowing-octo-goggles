{
    "title": "Thorne Ch. 11",
    "pages": [
        "Note: Once again I thank you all for your patience. I also wish to thank Jean and donalde for beta reading and to mostera1 who bounced ideas with me. \n\n*\n\nBarb continued to stare at the phone for several minutes before deciding against making her phone call. She wasn't in the mood to hear what a selfish bitch she was. A few minutes later, she was looking at the phone again. Suddenly she wanted to hear a friendly voice. She ran down the list of her so called friends and none of them jumped out at her as someone that she could really talk to. She already knew what most if not all of them would have said, \"stay married, have the kid and spend his money.\" That would have been an option, but the fact that she would have to be physically with Thorne forever stopped her. That was why she didn't choose the option of living with him as he mate. The fact that she would be expected to take care of the baby was the other reason that made that choice unattractive.\n\nShe lay on the bed and closed her eyes. She wondered if there was any way that she could get out of having guards. There wasn't. Thorne took the issue of her safety seriously even though they weren't together per se. It brought home the fact that no matter what happened they were tied together. She weighed her options and decided that all she could do was learn to accept that she would never be truly alone as she wished. That decision made, she went back to thinking about her family.\n\nIt still galled her that things seemed to have happened so easily for Leon, Kevyn and Louise. When she thought about it, it had always been that way. Even Leon who had been a drug addict seemed to have led a charmed life.\n\n\"Why is that?\" she asked the air. \"Why do I have to struggle so much?\"\n\n\"Why do you think that is?\" the voice asked. \"What is the fundamental difference between you and your siblings with the exception of your brother Gene? And he's even seen the light- I'm not talking about personality per se- I'm talking about character. We both agree that you are not like them and that isn't a bad thing- it's what you do with those differences that count. Think about the things that your parents tried to teach you. Were you even listening when they tried to teach the importance of sticking together as family? What did your father always tell you? At the end of the day, knowing that you have people that love you is what counts. The knowledge that your family loves you can get you through anything. Do you remember him saying that?\" \n\nBarb didn't reply. She had the feeling that she wasn't expected to. \n\n*****\n\nAlmost a week passed and Thorne still hadn't called his mother. He always found something else to do. He had two more days before his next appointment with Eustace and one more day before Noel was going to be leaving. Felix had managed to tie up his business affairs early and Noel was eager to be on his way.\n\nThe club remained closed, but was watched in case any stray hunters remained. Not going to the club was giving him more time to think than he liked. Finally, he decided to get the unpleasantness over with. Once again he found a reason to procrastinate. He called to check in on Olivia and the others. It wasn't a long conversation and was over in less than two minutes.\n\n\"Fuck,\" he swore and dialed his mother's cell phone number. It rang four times before she answered it. He was almost positive that she was debating whether she wanted to talk to him or not. He guessed that like him, she wanted the unpleasantness to be done with.\n\n\"Mother, this is Thorne.\"\n\nHe heard the uncertainty in her voice when she replied.\n\n\"What's wrong? Is Noel alright?\"\n\n\"Noel is fine,\" he replied ignoring the fact that she hadn't asked about him. It was only fair he supposed. He hadn't called her once during the issue with the hunters. \n\n\"Oh- then what do I owe the pleasure of this call?\" Samantha asked. The slightly sarcastic tone of her voice suggested that she considered the call anything but a pleasure.\n\nHe had planned to talk to her on the phone but somehow it didn't feel right. Ignoring the sarcasm; Thorne continued.\n\n\"Are you at home or on one of your trips?\" he asked.\n\n\"Home,\" Samantha replied after a brief hesitation. \"Why do you ask?\"\n\n\"We need to talk. I was going to do it over the phone, but I think that we need to speak face to face.\"\n\n\"I'm about to leave, can it wait?\"\n\n\"When will you be back?\" Thorne asked sensing the lie. \"I only need an hour or two of your time.\"\n\n\"Well- can you come now?\" Samantha asked. \"I really was on my way out.\"\n\n\"I'll be there in a few minutes.\"\n\nBefore he left, he went to tell Noel where he was going. His announcement was met with surprise. Next he checked on Barb and let Adrianna know that he was leaving. He couldn't help but notice that she seemed much happier now that her mate was with her. He made a final check around the house and vanished to his mother's home.\n\nThere was a suitcase next to the door, but he knew that she had put it there to give the illusion that she was leaving. He decided not to confront her about the lie and to get straight to the point of his visit. Samantha sat on the couch watching him and knew that he knew that she really wasn't going anywhere. She relaxed slightly when he ignored the suitcase and sat in the arm chair across from her. Thorne took a moment to look at his mother. He could see why his father had been smitten with her. She was stunning with her green eyes, dark hair and clear porcelain skin. She was tall, willowy and graceful- the kind of woman that his father had always fancied. It came to him that Barb was as physically beautiful as his mother was but in a different way. And like his mother she was self-serving and cared little for what others thought and needed. He grimaced at the thought. He was like that too- he was more like them than he cared to think. It was something that he needed to work on. It would never completely change, but...\n\n\"What did you want to talk about?\" Samantha asked uncomfortable with his assessing her.\n\n\"I wanted you to know that I am seeing a therapist,\" he said in a matter of fact tone of voice. \"I know how father felt about them- I even felt the same way, but I have come to believe that sometimes they are necessary.\"\n\nSamantha was speechless. Of all of her sons, Thorne was the last one that she would have suspected of going to a therapist. Noel she could see, but Thorne?\n\n\"What prompted this?\" she asked genuinely interested.\n\n\"You,\" he replied. \"All of my life, I've blamed you for the way that I am. While it's true that you are partially responsible- I bear some of the responsibility as well. I allowed how I felt about you to dictate my behavior toward a certain type of woman. That in turn led me to make decisions that will affect me and others for eternity. \n\n\"What are you talking about?\" Samantha asked now curious.\n\n\"Do you really need for me to say it?\" Thorne asked. \"Fine, then I'll say it. You never loved father or us. You made a good show of it, but the bottom line is that you were more concerned about money and appearances than you were about four children who needed their mother. Yes I admit that we wanted for nothing in the physical sense, but you emotionally starved us. I don't hate you, but I sure as hell don't like or respect you...\"\n\n\"Then why are you here?\" Samantha asked. \"Why don't you continue to do what you've been doing- ignoring me?\"\n\n\"Because there is now more than just me involved,\" Thorne replied. \"And I'm not talking about Noel although god knows he is a big part of this.\"\n\nHe gave her the condensed version of his meeting Barb and the resulting pregnancy.\n\n\"She isn't the only one that I have treated wrongly,\" Thorne said, \"but she is the only one who I impregnated.\"\n\n\"A grandson?\" Samantha whispered in disbelief. \"You have a mate?\"\n\n\"Yes and it is because of my son that I am here. I am making you aware of him and to let you know that I will not stop you from being a part of his life if you wish. But- we need to reach some kind of understanding as to what our relationship is. We need to find a way to get along if only for his sake.\"\n\nSamantha stood up and walked around the room for several minutes. \"What about your mate? Will you stay with her?\"\n\n\"Are you asking if I love her?\" Thorne asked.\n\n\"Yes.\"\n\n\"No I don't love her,\" Thorne replied, \"and I won't pretend that I do. We are together only because of decisions that we both made.\"\n\n\"But... a child needs his mother....\"\n\nThorne laughed, but it was a laugh without humor. \"Really? We seemed to have been raised without you. I don't remember you attending many of our school or social functions. One of the servants usually went in your place. At any rate, she loves me no more than I love her. After the child is born she plans to move away. As I said, she will have access to him just as you will. She and I will also have to work on a way to get along for the sake of the baby.\"\n\nSamantha was shocked. Thorne a father and mate? Of all of her son's he was the one that maintained that he wanted neither of those things. She knew that he wasn't lying when he said that he didn't love the woman, but the child was a different matter altogether- he loved this child. Once again she was reminded that Thorne's emotions-when he had them ran deep. She was curious about the woman and asked about her.\n\n\"Her name is Barbara Yancy Simpson,\" Thorne replied. \"She moved from Pittsburgh, Pennsylvania to find a rich husband. She started actively hunting here in California when her sisters wouldn't set her up with one of the Sinclaire males. What else do you need to know about her?\"\n\nSamantha was silent. She knew exactly what Thorne was thinking.\n\n\"Is she beautiful?\" Samantha finally asked.\n\n\"She is,\" Thorne conceded.\n\n\"And there is no way in which you can remain together? Your father and I....\"\n\n\"Lived a lie,\" Thorne interrupted. \"The difference between me and him is that he loved you and you took advantage of that love. You had children because the fates decreed it, but if not for that; none of us would have been born. Do you deny this?\"\n\nSamantha blanched. Here she had thought it was Noel that could see into her, it was Thorne. It explained why he had always been so cold to her. Noel saw what she was, but it didn't matter. She had hated the wrong son. Now she could admit it. She hated Noel because she thought that he knew the real her.\n\n\"No, I don't deny it,\" Samantha replied. \"I never wanted children, but how do you say it? Karma is a bitch. The fates gave me what I wanted but at a price- the four of you. Since we're being honest, what else do you think you know?\"\n\n\"Do you really want to have this conversation?\" Thorne asked coldly.\n\n\"Why not?\" Samantha asked her tone just as cold. \"Isn't the point of your little visit to clear the air for the sake of your son? So let's hear it. What do you think you know?\"\n\n\"You are an ungrateful, unfaithful bitch,\" Thorne hissed. \"Do you really think that your house staff cared enough about you to keep your secrets? Your treating them like shit didn't help. You didn't want father any more than you wanted us. And before you try to tell me that the staff lied or that it was just gossip, I saw you not once but twice! Would you like me to tell you who I saw you with? No? I'll tell you anyway.\"\n\n\"Thorne...\"\n\n\"What?\" Thorne shot back. His green eyes blazed with anger as he looked at the woman he was supposed to love. \"Don't you want to hear any more? Too fucking bad! I'm going to tell you anyway. I was ten years old when I found out that you were being unfaithful. Father was out of town on a business trip. I remember the day as if it was yesterday. He came to our room just before he left to say good rest. He wasn't a cruel man then. He was even tolerant of Noel and his leanings toward art. He promised to bring us a treat from wherever it was he was going. I remember laying there unable to sleep because as excited as I was about the treat; I didn't want father to go. \n\nThe idea that something bad was going to happen to him crossed my mind and I needed you to reassure me that all would be well. I waited until I thought that it was dark enough to go to your room. I wanted to read with you because it would calm me. I knew that you would probably say no, but I decided to try anyway. I went through the secret passage that we had had found one night while playing- it led directly to your room...\"\n\n\"Thorne-don't...\"\n\n\"I heard you laughing and then I heard a male's voice. At first I thought that it was father that he didn't have to go away after all. I was so --happy and relieved. Father was safe-my fears were groundless. When the male spoke again, I realized that it wasn't father. It was Jonathan Willows from across the way. At first I thought that I was mistaken- why would he be in your bedroom? I watched as he knelt between your legs and did things to you that weren't for a child to see. I watched you writhing on the bed like a paid slut...\"\n\n\"You shouldn't have....\" Samantha broke in weakly.\n\n\"I shouldn't have what?\" Thorne roared, \"Sought the comfort of my mother? Is that what you were going to say? Were you going to tell me that I shouldn't have left my bed? That I was too old to have such fears? The second time,\" he said his voice quieter, \"was in the garden. You thought that we were gone for the evening, but I didn't go. I wanted to stay home and read. I saw you with your legs splayed open and giving yourself to someone who wasn't your husband! I didn't know that particular male, but it wouldn't have mattered if I had. I now understood what you were and are.\"\n\nThe color had drained from Samantha's face. She had no idea that her indiscretions had been witnessed by any of her sons. She hadn't been concerned with the household gossip- who would have believed them, but Thorne hadn't been one to tell tales. Even when he could have lied he never did. What she wanted to know was why he hadn't said anything.\n\n\"What good would it have done?\" he asked. \"You had father wrapped so tightly around your fingers that he wouldn't have believed me. From that very first time I saw you cheating on father, I decided that I hated women like you and my so called mate is a version of you.\"\n\nThere was a pregnant pause as mother and son looked at each other. Samantha was the first to break the silence.\n\n\"But yet you're here telling me about your mate and child. I don't understand.\"\n\n\"I didn't want you to find out about him from someone else,\" Thorne replied. \"I also didn't want to deny him the opportunity to know his grandmother. As I said, if you want to be a part of his life; then you and I must come to some kind of understanding as to our relationship is. It will never be a normal relationship- it never was. I called you mother because I had to, I will still call you mother because that is what you are if only in the physical sense. I don't want you to say later that I didn't give you the opportunity to interact with your grandchild. I also don't want to teach him the things that I've done. I want to be able to teach him to respect all women no matter what they are. Right now- I can't do that.\"\n\n\"What is it that you want from me?\" Samantha asked. \"Do you want me to apologize and beg for forgiveness because you are having a child?\n\n\"I don't want or need your apologies,\" Thorne replied. \"It's much too late for that. The question is how involved do you want to be in the life of your grandchild? The issue of respecting you is my issue and you need not concern yourself with it.\"\n\nSamantha found it ironic that she had been thinking about grandchildren not long before Thorne's call. She supposed that she could look at it as an opportunity to do something right as she could no longer tell herself that she hadn't done her children harm. She had done them irreparable harm without realizing it. She now understood why Thorne had never been impressed with the lavish gifts that she equated with love. She looked at Thorne who was watching her with anger and dislike. Hatred was only a breath away. She realized that he had actually been more sensitive than Noel had been and that he was telling the truth when he said that he really didn't consider her his mother. Who had he considered a mother? She wondered.\n\n\"What do you need from me?\" she asked again.\n\n\"Nothing,\" Thorne said. \"I need nothing from you for myself. I only need the answer to the question I asked. If you choose not to be involved in the life of my son, then there is nothing else to say. I will continue my sessions with Eustace Matthews and move on.\"\n\n\"Will I meet your mate?\"\n\n\"Why would you want to do that?\" Thorne asked.\n\n\"I should meet the mother of my grandchild at least once don't you think?\" Samantha asked.\n\n\"Again, why would you want to do that?\" Thorne repeated.\n\n\"Because... I want to meet my grandson,\" Samantha replied. \"Thorne, I know that I wasn't a good mother; but I did love you and the others...\"\n\n\"Then why did you hate Noel so much? What did he do to earn your hatred? Even though he knew how you felt about him; he was concerned for you. He loves you even now although he knows that you didn't and don't love him.\"\n\n\"Noel,\" Samantha said after a long silence, \"reminded me of your father in a way that you or your brothers didn't. Your father knew of the indiscretions, but looked the other way because as you know; appearances were important to him- especially where the Sinclaires' were concerned. That's why there were no repercussions for my indiscretions. But I felt that whenever Noel looked at me, he was silently judging me like your father did. It felt as if he could see every lie I told and every vow that I broke. Maybe he did and didn't realize it, but it was you who saw me as I truly was. It was you that was never impressed with the expensive gifts and trips to wherever you wanted to go. I'm only just realizing that my hatred was for the wrong child.\"\n\n\"He knew,\" Thorne murmured. \"He knew that it was me that you should have hated, but he said nothing. He took your hatred upon himself just as he took the abuse that father heaped upon him once you began your affairs. I suggested that he also see Eustace Matthews or someone else of his choosing. He needs it just as much as I do. So tell me mother, how does it feel to know that you've fucked up at least two of your sons?\" Thorne asked bitterly.\n\n\"So all of this is my fault?\" Samantha asked angrily. \n\n\"Noel? Yes,\" Thorne replied, \"although I will take some of the responsibility. It's as you told me before, on some level I knew what was happening and chose not to see it. You on the other hand, witnessed it and did nothing. You could have called me, but you didn't...\"\n\n\"And I suppose that you would have come running?\" Samantha asked sarcastically. \"You left as soon as you could and never looked back. You abandoned your brothers. You were only here that night of the fight by coincidence. You stayed for as long as you did afterwards out of duty and for the sake of appearances. Why didn't you take Noel with you when you left?\"\n\nThorne hesitated in answering. It was a valid question. Why hadn't he taken Noel with him? Then he knew- Noel wouldn't have gone. After the fight with the Sinclaires, he had been almost obsessive about Samantha's safety. But that didn't explain why he didn't at least make the offer.\n\n\"Yes I would have come,\" Thorne said. \"And yes, I left as soon as I could because I could no longer watch the lie that you and father lived. That is why I cannot and will not stay with a woman that I don't love and who doesn't love me even though there is a child involved. Humans do it all of the time don't they? As far as why I stayed after father and the others died, I will admit that it was for the reasons that you stated. It was one of the few times that I cared about appearances. If it hadn't been for Noel, I would have left sooner than I did. I will also admit that I was at a point in my life where I didn't want to be bothered with anyone and unfortunately that included Noel. I wish that I had done things differently- there are many things that I wish that I could do differently.\"",
        "\"Even your child?\" Samantha asked not sure of what she was hoping for.\n\n\"Out of everything that's happened since I met my supposed mate, the conception of that child is the one thing that I don't regret. That I will never have another mate is inconsequential. As you know; I never wanted a mate to begin with.\"\n\nSamantha heard no lie as she listened to Thorne's reply to her question. She had to admit that while Thorne was many things, he wasn't a liar. If he didn't want the child, he would have seen to its care and that would have been the end of it, but here he was; confronting her because of him.\n\n\"I would still like to meet the mother of your child,\" Samantha said.\n\nThorne started to make a snide comment, but caught himself. It would be counterproductive and it was time to start changing old behaviors. With his son in mind, he tempered the tone of his voice and his comment.\n\n\"I'll talk to her about it. But you didn't answer my question- do you want to be a part of my child's life?\"\n\n\"If I say no?\" Samantha challenged.\n\nThorne shrugged his broad shoulders in response. Samantha inexplicably felt hurt. What had she expected him to say? He had just told her that he was there only because of his son. Did she really think that he would try to convince her that she needed and should be a part of the child's life? She realized that to some degree that she had been expecting just that.\n\n\"Mother, what you decide to do is up to you,\" Thorne said. \"It's no skin off my back if you decide not to be involved, but if and when he asks why he doesn't know you; I'll tell him the truth.\"\n\nSamantha looked away undecided. She couldn't very well ask to meet the child's mother and then not at least see the child. But-did she want to get to know the child? She didn't know.\n\n\"May I have time to think about it?\" she finally asked.\n\n\"You may,\" Thorne replied.\n\n\"Thank you- Thorne, I'm sorry that you saw the things that you did. You're right- they were things that no child should see. I will also concede that I was far from the ideal mother and mate. Like you, I am beginning to have a few regrets. I won't apologize- as you say it's too little and far too late for that. I'm also not going to tell you that I'm going to change who I am just because of a grandchild.\"\n\n\"I'm not asking you to change anything,\" Thorne replied as he stood to leave. \"Think about your involvement and let me know.\"\n\n\"Thorne- wait- what about Noel? Is he really alright?\"\n\nThorne realized that Noel hadn't told their mother that he was leaving and wondered why.\n\n\"He's fine,\" Thorne replied. \"Still fucked up, but he's much better.\" He wanted to add 'no thanks to you', but didn't. It came to him that for a while at least; he was going to have to consciously monitor his responses. \"Damn,\" he thought, \"this is harder than I thought it would be.\"\n\n\"Tell him-never mind,\" Samantha said rethinking what she was going to say. \"I'm glad that our family and the Sinclaires are getting along again.\" She said changing the subject. \"Together we were formidable.\"\n\nThorne sat down again. He hadn't planned on bringing the topic of their families up, but since Samantha mentioned it...\n\n\"Tell me about that night again,\" he said. \"Something about it doesn't feel right.\"\n\nSamantha went through the story again and agreed with Thorne.\n\n\"Something doesn't add up and I don't understand why Noel doesn't remember being there.\"\n\n\"He's tried to remember the fight, but whenever he thinks about it or the Sinclaires; he gets terrible headaches,\" Thorne replied. \"The interesting thing is that all of us were in the same house while this hunter thing was going on and he didn't have a headache. I asked him about it and he said that he finally came to the conclusion that he wasn't ready to remember.\"\n\n\"Do you think that the Sinclaires betrayed us?\" Samantha asked.\n\n\"Honestly? No,\" Thorne replied. \"After working with Ethan, I just don't see it. I also have to admit that it felt good to work with him, but even if it hadn't; our families are forever connected because of the child. Do you think that they betrayed us?\"\n\n\"No,\" Samantha replied after a moment. \"Someone did, but it wasn't them. Steven Sinclaire and your father were too good of friends and allies for that. I still remember the day that your father came home so excited because he and Steven had talked. He was amazed that a family as influential and as powerful as the Sinclaires would want to ally themselves with us. Why do you think that Noel can't remember being at the fight?\"\n\nThorne took a moment to think about his response.\n\n\"Maybe it's because he had been through enough of an emotional and physical beating. Maybe it was his mind trying to protect him and maybe it's because he knows who the betrayer is. He remembers being with you because that's what he wants to remember. He didn't want to go to that fight, father forced him to go. But at any rate- the Sinclaires and Blackwell families are once again united. Do you understand what that means?\"\n\n\"Our homes are their homes and vice versa and we will always defend each other,\" Samantha replied. \"Have you and Ethan decided on an official reunion date?\"\n\n\"No,\" Thorne replied. \"We haven't even talked about that night yet. We've been too busy with the aftermath of the hunter situation.\"\n\n\"I have a request to make,\" Samantha said after a brief hesitation.\n\n\"I'm listening,\" Thorne replied.\n\n\"I know that we are at odds as mother and son, but I am still a Blackwell and would like to do my part in this alliance. I would like to attend the reunion dinner.\"\n\nThe request surprised Thorne. But then again it didn't. The one thing that he could say about his mother was that she took the alliance between the families seriously and did whatever she could to keep it intact with the exception of being faithful.\n\n\"I'll let you know,\" he replied as he once again stood to leave.\n\n\"Thank you,\" Samantha said with a nod of her head.\n\nThorne vanished from Samantha's to the club. He wanted to do some more thinking.\n\n*****\n\nBarb hung up from talking to the realtor. She liked the condo, but she didn't like the price which she knew had been jacked up. Her mistake she realized was listing that she was a first time buyer. The thing was that of all the condos she had looked at online, this was the one that she really liked and wanted. She decided to call the realtor back later and tell her that she knew that the price had been raised and to make a counter offer.\n\nShe looked at the phone again. The need to hear a friendly voice persisted. In fact, it seemed stronger. She again went through her list of supposed friends and again realized that there was no one that she really wanted to talk to. Her concern was that one of them would show up on her doorstep just as she had done with Kevyn or that they would start asking her for money. There was one 'friend' in particular that she wanted to avoid-Janelle Clemens whose main claim to fame was that she was a direct descendent of the famous writer Samuel Clemens. She and Janelle had made an agreement that dated back to high school. \n\n\"If one of us is lucky enough to find a rich man or win the lottery, we share the money,\" Janelle said. \n\nFor good measure, she wrote the agreement out, signed it and then had Barb sign it. As time passed, Barb had forgotten about what she considered a childhood promise. It came back to bite her on the ass several years later when Janelle mentioned it during one of their weekly dinners out.\n\n\"I still have that piece of paper,\" she said.\n\n\"What paper?\" Barb asked.\n\n\"You know the one,\" Janelle replied a miffed that Barb had forgotten. \"The one that we signed saying that if one of us gets rich that we wouldn't forget the other.\"\n\nBarb remembered being stunned. As she thought about it, she wondered if the paper would hold up in a court of law. It was something that she needed to look into. While she was at it, she wanted the papers that Thorne had drawn up looked at as well. The problem was that she didn't know any lawyers except for one- Joseph Richardson. She thought of what little she knew about him and thought that he would be honest with her. After thinking about it, she decided to give him a call.\n\nA few minutes later, she was talking to him surprised that he answered his own phone.\n\n\"Hi Barb, what can I do for you?\" Joseph asked in a businesslike manner. \n\n\"Ummm,\" Barb stumbled. She had expected a warmer greeting than what she had gotten. \"Two things actually.\" \n\nShe told him about the agreement with Janelle.\n\n\"You say you were in high school when you did this? What grade were you in?\"\n\n\"Seniors,\" Barb replied.\n\n\"Well.... It could go either way,\" Joseph replied. \"Do you have a copy of that agreement?\"\n\n\"No,\" Barb replied kicking herself for not taking the offered copy. \n\n\"All I can say is that if your friend decided to hold you to that agreement, she might have a case. The thing in your favor is that you were both young. Hope that she doesn't pursue it. What was the other thing?\"\n\n\"I have some papers that I need looked at,\" Barb explained. \"I want to make sure that there aren't any hidden loopholes- can I send them to you?\"\n\n\"Do you have a fax machine there?\" Joseph asked.\n\nBarb got Joseph's fax machine number and faxed the papers while they were on the phone.\n\n\"Got it... is there a number where I can call you back?\" Joseph asked. \"Your number shows as private.\"\n\nBarb gave him the number, hung up and debated as to what to do next. She called the real-estate agent and confronted her on the price of the condo. She was about to give the woman the 'do you know who I am?' speech and stopped herself. She was remembering that the name dropping was part of what led her to Thorne. After arguing with the woman for thirty minutes, the price was dropped to a number that Barb was happy with. \n\n\"I'll call you tomorrow,\" she told the disgruntled woman and hung up. \n\nShe played on the internet for several minutes before she decided to call Gene. In spite of his changes, he was still the one who would understand what she was going through better than any of the others. She checked the clock and did a mental calculation of the time. It was almost midnight on the east coast but it was the weekend.\n\nShe wondered if he would be home although she didn't know where he would be if he quit drinking. She dialed his number and was about to hang up when Gene's groggy voice came over the phone.\n\n\"Gene? It's me Barb- did I wake you?\"\n\n\"Oh hey... it's alright; I hadn't been to sleep long. Is everything okay?\"\n\n\"Yes... no... I don't know- why are you in bed so early? You always stay up late on the weekends.\"\n\n\"I used to but since I'm not drinking there isn't that much to do,\" Gene explained, \"so what's up?\"\n\n\"I... nothing\"\n\n\"Come on sis,\" Gene coaxed, \"you didn't call me at midnight for nothing so talk to me.\"\n\nNow that she had him on the phone, she didn't know where to start.\n\n\"I just wanted to hear a friendly voice,\" she replied.\n\n\"Still having a rough time?\" Gene asked.\n\nBarb sighed in response. \n\n\"Have you talked to the others yet?\" Gene asked.\n\n\"No- are you still thinking about moving to Florida?\" Barb asked changing the subject.\n\n\"I was, but I don't think I will,\" Gene replied. \"Dana and I are still talking, but I think if I moved to the same state she might feel pressured.\"\n\n\"I can see your point, where are living? Are you still at Leon's?\"\n\n\"No... I moved into the house as soon as it was finished- mom would have loved it. I hope that you and the others will come to see it. But back to the moving thing, I'm seriously thinking about moving out your way.\"\n\n\"Why?\" Barb asked surprised. She was under the impression that Gene hated California.\n\n\"What do you mean why?\" Gene asked surprised at the question. \"All of you are out there aren't you?\"\n\n\"Well yes but what about your job? And where will you live?\" She asked fully aware that Gene didn't know about the Sinclaires or the vampirism.\n\n\"Kevyn told me that she still has that little place that you were using,\" Gene replied. \"As far as a job goes, Patrick is going to help me out there.\"\n\nBarb felt a surge of anger that she quickly squashed, but the jealousy showed.\n\n\"How nice for you,\" she said trying to keep her tone light. \"When is this move supposed to happen?\"\n\n\"I haven't decided yet,\" Gene replied. \"You sound like you don't want me to come.\"\n\n\"It isn't that,\" Barb said. \"It's just that- why is it that everyone seems to be getting breaks except for me? Think about it- Kevyn moves out here, gets married and then divorced. She goes back to school and who does she meet? Her professor who happens to be a member of the wealthiest families in the world. Then Louise, she moves out her and within weeks what happens? She meets a member of the same family and marries him. Then you all come out here and Leon gets a job offer and marries someone who wasn't as she appeared! The same thing with Juliette- she marries someone who I thought was nothing but a hotel manager and he isn't! Now there's you!\"\n\n\"Green never was a good color on you,\" Gene said softly. \"Have you ever considered the possibility that things came to them because they weren't looking for them? Let's start with Kevyn- she moved to California without a job and took care of some elderly woman for room and board. Lonnie or whatever the hell is name was her worst mistake. She took a job at a nursing home and started classes for nursing school. She wasn't looking for Patrick when they found each other. \n\nLouise- Louise in my opinion is the one who deserves every good thing that comes her way. She took care of mom without any help from me, you and Juliette and she never complained. She probably knew that it wouldn't so any good. I should have been the one organizing mom's care so that Louise could have some semblance of a life; but I didn't. She also went to California not looking for anyone. Leon helped Louise and yes he fucked up with the drugs, but Barb; he came clean. He swallowed his pride and tried to make things right. But not only that, he worked his ass off at the steel mill. He worked for everything that he has. Juliette? I don't know what to tell you except that she loves her kids and she worked hard to provide for them. But once again, she didn't go to California with the idea of finding someone. When she met Hans, she though the same thing that you did.\"\n\n\"You were as bad as I was,\" Barb snipped.\n\n\"Yes I was- I was actually worse in a lot of ways and I freely admit that,\" Gene replied. \"There are nights when I think about the things that I did and I can't believe that it was me. I have no excuse except to say that I was greedy, insecure and a drunk. As a result I almost lost everything, but I'm confused about something; don't you have what you wanted?\"\n\nBarb didn't know how to answer the question so she avoided it.\n\n\"When will you decide?\"\n\n\"Soon, I'll be fully vested in a few weeks so if I decide to come, it will be after that. This place- Pittsburgh I mean has bad memories for me and I'm not talking about mom and dad, well; maybe in a way I am. The one thing that they always wanted for us to remember that family means everything and to be honest with you, I miss you guys. Part of the reason that I came back here was because I was ashamed. I thought that I hated California, but I don't. I used to see it as the place that completed my downfall, but it isn't. It was the place where I started my life over again.\"\n\n\"What about Dana?\" Barb asked.\n\n\"I'll leave Pittsburgh either way. If Dana and I don't reconcile then so be it. Maybe I'll have a chance with someone else. Barb, I can only understand so much of what you're going through. I'm here to offer you whatever support that you need- in fact if you want me to come sooner than in a few weeks; I'll do it. If you want me to be with you when you decide to talk to people; I will. That's what Leon did for me and I can't tell you how much that helped. If you want to practice what to say with me, that's fine too. I'm here in whatever capacity you need me to be.\"\n\nThe offer almost surprised her and unexpectedly touched her. She chalked it up to pregnancy hormones and continued the conversation.\n\n\"Gene, was I wrong? I mean was I wrong to want the things I wanted?\"\n\n\"Sis,\" Gene said after a long pause, \"it sounds like you're looking for validation for your actions and I can't do that. Wrong is wrong. It's not the wanting things that's the problem- it's what you do to get there. Believe me-I'm not judging- I'm in no position to do that, but one of the things that I did and still do is to look back at my past.\"\n\n\"What good does that do?\" Barb asked. \"Why can't I just say that I'm sorry and be done with it?\"\n\n\"No apology is better than one that isn't meant,\" Gene replied quietly.\n\n\"What do you mean by that?\" Barb snapped irritably.\n\n\"I mean exactly what I said,\" Gene replied. \"You want to take the easy way- you think that if you say I'm sorry that everything will be forgotten. That's kid shit- if you don't mean it than don't do it. Everyone will see through it- think about the times you've tried that in the past. Did it work?\"\n\nWhen Barb didn't reply, he continued.\n\n\"It doesn't work, I know from firsthand experience and so do you. Whether you decide to change or not is up to you- only you know what if anything needs to change, but Barb- you need to fix things with the others.\"\n\n\"Have they said something to you?\" Barb asked ready to be angry if they had.\n\n\"Not a peep,\" Gene replied. \"We talk about other things, but you've never come up unless I ask and then I get some vague response. I'm getting my information from you.\"\n\nBarb hadn't realized that she was being so transparent with her phone call. \n\n\"So how is the pregnancy going?\" Gene asked.\n\n\"It's going,\" Barb replied. \"I guess I might as well tell you that I'm leaving after he's born. I can't and won't stay here.\"\n\n\"What about the baby?\"\n\n\"He's staying with Thorne- he'll have plenty of help.\"\n\n\"Are you sure about this?\" Gene asked.\n\n\"I'm sure,\" Barb replied. \"As soon as he's born I'm moving to Hawaii. I just bought a two bedroom condo there. I know that I sound cold hearted, but Gene; I never wanted this baby. Isn't it better that I step back instead of pretending that I want and love him? I'm doing what's best for both of us.\"\n\n\"How does Thorne-that's his name isn't it? How does he feel about this?\"\n\n\"He's glad to see me go,\" Barb confessed. \"He doesn't care about me in the way that a man is supposed to care about his woman and to be honest; I don't care about him like that either. This baby is the only thing keeping us together -if you even want to call it that. And don't start with the once you see the baby crap- it won't work.\"\n\n\"I wasn't going to say anything like that,\" Gene replied. \"What I was going to say is this- whatever it is you decide to do, make sure that you're at peace with it. Some decisions are irrevocable and the outcomes can't be changed no matter how much we may want them to be. Make sure that you're not acting on pure emotion and really think about what you're doing. Are you positive that you and the baby's father can't work things out?\"\n\n\"I'm sure,\" Barb replied, \"And I don't want to try to work things out with him. It's enough that I'm not giving up my parental rights.\"\n\n\"I see,\" Gene mused, \"the old hedging your bets- so what is it that you need from me?\"\n\n\"A friendly voice I guess and-some advice from someone who's been there. How did Kevyn react to your confession?\"\n\n\"Saying that she was upset is an understatement. Furious is a better word for it and then she was sad and disappointed. I'll be honest with you, I preferred the anger. You have to decide what it is you're sorry for and if you feel the need to apologize- do it. No one is expecting you to grovel at their feet, but they do expect an honest apology and a promise that you'll start acting like what you are and that's family. Let me ask you something, do you miss us at all?\"",
        "Barb's mouth went dry. Gene had just asked a question that she hadn't thought about whether it was by choice or not. Did she miss them? \n\n\"I- I guess a little,\" she finally said.\n\nThe little voice inside of her head whispered,\" how hard was that?\"\n\nBarb ignored the voice and concentrated on what Gene was saying.\n\n\"That's a start,\" he remarked. \"Start there and move forward. No one is expecting a big production of it. All you have to say is I'm sorry and I miss you.\"\n\nBarb, however; remained unconvinced. Nothing was that easy- especially for her.\n\n\"Shut up,\" she muttered before the voice had a chance to speak.\n\n\"Sis?\" Gene called, \"is someone there?\"\n\n\"No... I was just muttering. Look, I've got to go; I have a phone call coming through.\" \n\nShe switched to the incoming call surprised that it was Joseph.\n\n\"I read through the documents and I don't find anything wrong with them. In fact, the terms are extremely generous.\"\n\n\"How do I know that you're not lying?\" Barb asked knowing that she was taking a chance that she was offending him.\n\n\"You called me,\" Joseph replied curtly. \"If you had any questions about my integrity, why did you call me?\"\n\n\"I didn't know anyone else,\" Barb replied and then tried to back pedal on her question, \"and you have to admit that it's a reasonable question.\"\n\n\"It would have been a reasonable question if you had asked me about my relationship with your mate before sending me the papers,\" Joseph retorted. \"Is there anything else?\"\n\n\"No and I'm sorry if I offended you- how much do I owe you?\"\n\n\"Nothing,\" Joseph replied. \"Consider it family helping family.\"\n\n\"So there are no loopholes for him to slip through?\"\n\n\"There are no loopholes,\" Joseph replied. \"As I said, the terms are very generous.\"\n\nBarb thanked Joseph for his time and hung up. She jumped when the baby moved. It was something that still startled her and she found the feeling less than pleasant. She frowned when she thought about how Louise must be acting about her pregnancy and felt a stab of anger.\n\n\"Why do you do that?\" the voice asked. \"She isn't responsible for how you feel about or react to things. You are. Why does it even anger you that she's happy with her life? Why are you so concerned with what she and the others have? You got what you wanted didn't you? Look at it- you're even having a child that you won't be responsible for. What more do you want?\"\n\n\"I don't know,\" Barb muttered more to herself than the voice.\n\n****\n\nGene hung up; lay awake for several minutes before he decided to get up. The phone call with Barb had taken less than thirty minutes, but it had left him concerned. It was time that he found out exactly what was going on between his siblings. He knew that someone would still be up. That was the one thing that he hadn't understood- how did an entire family live on a night schedule? Even the children with the exception of Juliette's three lived on a night schedule. The next question was who he was going to call. Finally after much debate, he decided to call Kevyn. He wanted to make sure that she was serious about the use of her condo.\n\nPatrick answered on the first ring.\n\n\"Gene? Is everything alright?\"\n\n\"I'm good,\" Gene replied quietly. He had never taken Patrick up on his offer to call if he needed to talk. \"I wanted to talk to Kevyn, but while I have you on the phone- I never thanked you for helping me-you didn't have to do that.\"\n\n\"We're family aren't we?\" Patrick asked. \"And like most families, we had our differences and issues although I daresay that our issues are well-different. The important thing is that you're doing well- have you given any more thought to moving out here?\"\n\n\"That's part of what I wanted to talk to Kevyn about- is she around?\"\n\n\"She's in her office studying- I'll go get her. Gene- if you decide to move out here, you're welcome to stay here with us if Kev's condo is too small or you just want to be around people. We have plenty of room.\"\n\nGene was momentarily stymied. He hadn't realized that until Patrick made that offer, he wasn't sure if all had really been forgiven. If Patrick was making the offer, then Kevyn had truly forgiven him. It was then that he understood his reluctance to move; he was waiting for proof of that forgiveness.\n\n\"Thanks,\" he said recovering. \"You have no idea of how much I appreciate that.\"\n\n\"No thanks are needed,\" Patrick replied. \"Hold on, I'll go get Kevyn for you.\"\n\nA few minutes later, Kevyn was on the phone.\n\n\"Hey Gene! What's up?\"\n\n\"A couple of things, but I'll start with the easiest thing first. Is the offer of your condo still open?\"\n\n\"Sure-are you coming?\" Kevyn asked excitedly.\n\n\"I think so,\" Gene replied. \"I just wanted to make sure that I had a place to stay.\"\n\n\"Of course you do and I know that Patrick told you that you could stay with us too so when are you coming?\"\n\n\"Is two weeks too soon? I have to give notice and close up the house...\"\n\n\"Two weeks is fine,\" Kevyn replied. \"Do you need help with anything?\"\n\n\"No, I'm good,\" Gene replied.\n\nHe wasn't going to take anything other than his clothes and personal items. There was a part of him that was hedging his bets and it was that part that he was listening to. If things were as they seemed, then he would make more permanent plans.\n\n\"I'm glad that you're coming,\" Kevyn said, \"and the others will be happy as well, but why did you change your mind?\"\n\n\"That's the other thing that I wanted to talk to you about,\" Gene replied. \"Part of the decision involves Dana. We're talking, but she may never trust me enough to give me another chance. That makes moving to Florida not a good idea. The other reason is Barb. I talked to her not long ago-Kev what's going on over there? I ask you about Barb and you really don't say anything other than as far as you know she's doing fine. I talked to her a little while ago and she wanted to know what you said about her.\"\n\n\"What did she say?\" Kevyn asked.\n\n\"Nothing, that's the problem,\" Gene said, \"And neither are you. Now I want to know what's going on and don't pass the buck by telling me to ask Barb.\"\n\nGene could tell that Kevyn was thinking about how to respond and waited. As he waited for her response, his mind swirled with what could possibly be wrong that no one was talking. \n\n\"Gene,\" Kevyn finally said. \"I know that you're feeling out of the loop and I'm sorry about that. But...\"\n\n\"But what?\" Gene interrupted his temper flaring.\n\n\"It isn't something easily explained. I have a suggestion and if you don't like it, I'll tell you what you want to know now. My suggestion is that we wait until you get here...\"\n\n\"Tell me what's going on,\" Gene insisted.\n\nKevyn took a deep breath and began at the beginning leaving out anything pertaining to vampires, hunters and wolves. When she was finished, Gene was silent for several seconds.\n\n\"Damn,\" he muttered. \"I knew that she believed that we were abused, but she really did all of that?\"\n\n\"She did,\" Kevyn confirmed. \"If you don't believe me call her and ask her. I doubt that she'll lie to you. The thing is that we've tried to show her how much we want her to be a part of this family, but she keeps slapping us in the face and we're tired of it. She acts as if we're in some kind of competition about who has the most money or that we've wronged her somehow.\"\n\n\"So you haven't written her off?\" Gene asked.\n\n\"Of course not!\" Kevyn exclaimed. \"We just placed the ball in her court. No one is asking for a big formal apology-in fact we're not asking for an apology at all. All we want is to get along as mom and dad would have wanted us to. We don't even have to talk about the past if she doesn't want to.\"\n\n\"Does she know this?\" Gene asked.\n\n\"How can she know if she won't talk to us?\" Kevyn asked. \"Even when we were together for a family gathering she barely spoke to us and when she did, it was accusations about how she was mistreated. But here's the thing that really gets me,\" Kevyn continued. \"Of all of us, Lou is probably the most forgiving but it's her that Barb really seems to hate. I don't understand it.\"\n\n\"Well,\" Gene said. \"From her perspective she's had to work for everything. I know this because she told me. If it makes you feel any better, I'm now on that list of people who's had good fortune fall into their lap. She ran down the list of which you were on the top followed by Lou.\"\n\n\"We've had to work,\" Kevyn retorted. \"Lou more than the rest of us. She took care of mom and worked at a full time job. In effect, she put her life on hold. In my opinion, she deserves every good thing that comes her way. Barb is just going to have to get over it and decide whether she wants to be a part of this family or not.\"\n\n\"I agree with you,\" Gene said, \"I'm just telling you what she sees. What about this man of hers?\"\n\n\"Thorne? What about him?\"\n\n\"Is he really going to let her go after she has the baby?\"\n\n\"I don't want to say too much about their relationship-if you want to call it that,\" Kevyn replied. \"Any questions that you have about that need to go to Barb.\"\n\n\"I knew that you would say that,\" Gene said dryly. \"She says that they don't love each other.\"\n\n\"That-that much is true,\" Kevyn conceded albeit reluctantly. \"Do you want us to send the jet for you?\"\n\n\"Nah-that's okay,\" Gene said, \"but a pick up at the airport would be great.\"\n\n\"We can do that- just let me know when you're coming.\"\n\nThey talked for a few more minutes about Leon, Nadine, Hans, Juliette and the kids before hanging up. Gene looked at the phone for several minutes after he hung up. Kevyn hadn't told him everything. He could tell by the tone of her voice. He could have pushed it, but decided not to only because Kevyn was right- they could talk about things when he arrived.\n\nUnable to sleep, he went to his laptop and began writing his letter of resignation. When that was done, he did a search of the AA meetings in the area where Kevyn's condo was. He had decided that he was going to stay there whether he wanted to or not. Once he was working, he would assume the rent and would be totally self-sufficient. The last thing he did was to write an email to Dana telling her that he was moving and that he hoped that they would continue to talk. He reread the email, saved it and then logged off. Thinking of nothing else that he could do; he went back to bed.\n\n*****\n\nThorne sat in his office tapping his fingers on his desk. He replayed the conversation with his mother in his head. He noticed that not once did she apologize for her behavior even though he said that he didn't want or need one. She apologized that she had been caught which told him one thing- she wasn't sorry that she had done it. She was embarrassed that he knew about it, but she wasn't sorry. The thing that had surprised him then and it did now was that his father knew about the affairs. Somehow that knowledge changed his view of his father. What kind of male would allow his mate to fuck around and not do anything about it? He would have killed both of them. \"One who appearances meant everything,\" he answered. \n\nHe couldn't help but imagine how his father must have felt when he found out. He found himself getting angry at the thought but the image of his father was forever changed. While he had once considered him a hard man, he now thought of him as weak. Another flash of understanding hit him. His father was the way he was because of his mate. For whatever reason, he couldn't control her so he became hard, cruel and overbearing with them. Ironically, instead of getting angry at his mother, he became angry at his father. After all, she only did what she was allowed to do. That understanding in no way diminished what she did, but he understood the dynamics of his parent's relationship a little better.\n\nThe next thing that he thought about was his mother and Barb meeting. He wasn't fooled- he knew exactly why his mother wanted to meet Barb. He could almost hear the sparks as they flew when they met. That the two women wouldn't like each other he had no doubt, but his mother had made a reasonable request. The question was would he grant it? If he did, he would have to be sure to inform both women that they needed to be on their best behavior and that the evening wasn't about them.\n\nThe next topic on his list of things to think about was Noel. They would get together for one last time before he and Felix took off. Thorne felt guilty that Noel had taken the brunt of his mother's hatred when it hadn't shouldn't have been directed at him. He still believed that Noel would benefit from talking to someone and planned to bring it up again before he left for parts unknown. The one thing that he hoped would happen was that their mother would at least apologize to Noel. Would it happen? He doubted it, but one could hope. Then there was the issue of Noel's memory. Maybe Noel was right. Maybe he wasn't supposed to remember what happened yet but what about the reuniting of the families? What would happen if the families reunited and the Sinclaires were really the traitors?\n\n\"They aren't,\" Thorne muttered. \"It was someone else.\"\n\nHe turned his thoughts from the riddle of who betrayed them to the woman who was his mate. She would always be kept safe, but other than that his obligation to her was over. He thought about her request to sleep with other people and wondered if that was how it happened with his parents or had his father caught her as he had. The difference was that he didn't really care what Barb did once she had the baby. He wasn't concerned with how it looked to the Sinclaires-they had their own issues. Thinking about Barb reminded him that he needed to go check on her and he wanted to talk to the baby. He found her in the kitchen making something to eat. He looked around wondering where Adrianna and Cheung were.\n\n\"They're outside,\" Barb said answering his question before he asked. \"I needed some alone time.\"\n\nThorne sat down at the table and waited for her to finish what she was doing before he spoke.\n\n\"We have some things to discuss,\" he said a moment later. \"I already know that you've decided to maintain your parental rights and I have no problem with that.\"\n\n\"But?\" Barb asked.\n\n\"There are no buts,\" Thorne replied. \"I'm just making sure that we're on the same page. Do you have any questions regarding our agreement?\"\n\n\"I just can't show up whenever the mood strikes- is that what you mean?\" Barb asked testily.\n\nThorne bit back a sharp reply and nodded. \"Did you have the papers looked at?\"\n\n\"I did and according to my attorney they're fine- not that it's any of my business; but where have you been?\"\n\n\"I'm going to answer your question only because it pertains to you and my child,\" Thorne replied. \"I've been seeing a therapist.\"\n\nBarb started to laugh but stopped when she saw the look on Thorne's face. He was, she realized serious. She didn't know what to make of his announcement so she waited for him to continue.\n\n\"I have always said that we are where we are is partly if not mostly my fault. However, I will not assume responsibility for any of the decisions that you made that also brought us together. Those are for you to deal with or not as you see fit. My reasons for seeking counsel as are follows- I allowed my mother to color my view of women such as her and you. Be that as it may, that didn't give me the right to treat you or any other woman like you and her as I did. I need to make peace with my mother just as I need to make peace with you for the sake of our son and in order for that to happen, I need help.\"\n\nBarb was speechless. Like Samantha, hearing that Thorne was going to a therapist was a shocker. It also gave her pause. If he could admit and own up to his part in the mess they were in, why couldn't she? \"Because I'm not entirely wrong,\" she thought to herself.\n\n\"No you aren't the voice whispered- but you are still responsible for the choices that you made.\"\n\n\"I've apologized before and I'll apologize again,\" Thorne said. \"I am sorry for the way that I treated you. My issues with my mother had nothing to do with you and I should have made you go home with your family that night. The one thing that I am not sorry about is that a child was conceived. I admit that it wasn't under the right circumstances and it is largely because of him that I seek help.\"\n\nBarb knew that she was staring, but couldn't help it. The man sitting across from her was sincere in what he was saying- he always had been, but this was different. She knew beyond a shadow of a doubt that the Thorne that she knew was just beneath the surface and that she would be wise to remember that. \n\n\"What will you tell him about me?\" Barb asked curious.\n\n\"The truth,\" Thorne replied without hesitation. \"Just as I will tell him the truth about myself.\"\n\nAt this, Barb did laugh. She didn't believe it.\n\n\"You're going to tell him what a cold hearted bastard you are?\"\n\nThorne waited until she stopped laughing and tamped down his anger. \n\n\"Haven't I done everything that I said I would do?\" he asked his tone cool. \"Have I ever lied to you about anything?\"\n\n\"No... but you didn't tell me everything either.\"\n\n\"True, but I will ask the same question that I asked before- would you have believed me if I told you the real reason that I wanted you? Would you have believed me if I told you what I really was? No and do you know why? It's the same reason that you ignored every warning that you were given and allowed yourself to be used not just by me, but by another man. You saw dollar signs-you sold yourself. Are you going to deny anything that I just said?\"\n\nHer silence was his answer.\n\n\"Look, we could go around and around about this until hell froze over and it wouldn't change anything,\" Thorne said. \"What we need to be talking about is how we're going to get along for the sake of our child. We also need to begin preparing for his arrival. If I'm not mistaken, Gretchen will be here on Wednesday... what?\" Thorne asked when he saw the look on Barb's face. \"Did you think that I was so busy that I wasn't keeping track of your appointments?\"\n\nThat was exactly what she had been thinking. \n\n\"I suppose that you'll want to be here?\" She said snidely. She already knew the answer- he had been there for every single appointment no matter what else had been going on. That also meant that he would be present for the birth. \"Fine,\" she said when he didn't react to her sarcasm.\n\n\"One more thing,\" Thorne said. \"My mother has asked to meet you.\"\n\n\"Why?\" Barb asked. \"It isn't as if we're one big happy family.\"\n\n\"Agreed,\" Thorne replied. \"I didn't give her an answer, but you will be meeting her at the reunion dinner. There's no getting around that.\"\n\n\"There is if I'm not there,\" Barb replied.\n\n\"Let me explain a few things to you...\"\n\n\"What?\" Barb exclaimed when Thorne explained about the alliance. \"You can't be serious!\"\n\n\"I am very serious,\" Thorne replied. We take our alliances very seriously. The fact that you are related to the Yancy's alone makes you a part of this alliance. The fact that our child is a Blackwell trumps even that. The only way for you to get out of this alliance is to sign off on your parental rights to the child and to declare yourself single. But let me explain something to you, if you decide to do this and you are in need of safety, it would be well within our rights to turn you away. Also if you decide to take part in this and you receive a call for help and ignore it; you will no longer be considered part of the alliance.\"\n\nBarb was beginning to see that she wasn't as free as she thought she was. The idea of basically disappearing and reappearing at will was quickly being blown to hell. She was going to be tied to her family whether she wanted to be or not.\n\n\"May I ask a question?\"\n\n\"You may ask whatever you wish,\" Thorne replied. \"I won't and can't lie to you.\"",
        "\"Would you really turn me away if I said no to this?\"\n\n\"It would be within my right to do so,\" Thorne replied. \"But your refusal to participate wouldn't change the fact that you are the mother of my son. Do I suggest that you participate? Yes I do. There's a storm brewing and all of us need to know that we can find safety with someone that we trust.\"\n\n\"So you think me moving far away from family is a bad idea,\" Barb said with a hint of a challenge in her voice.\n\n\"Do as you like,\" Thorne said with a shrug. \"You know as well as I do what the issues are. But understand this- you are responsible for whatever decision you make.\"\n\n\"You really don't care do you?\" Barb asked oddly hurt.\n\n\"I never pretended otherwise,\" Thorne replied. \"My only real concern aside from the hunter issue is the safety of the baby and by extension you only because of him. I will keep you posted on when the reunion dinner is. You will have until then to make your choice. Is there anything else that we need to discuss?\"\n\nBarb couldn't think of any questions, but decided to have her say.\n\n\"Do you really think that a little hand holding with your shrink is going to change who and what you are? Do you seriously think that a child is enough to make you change? You can sit here all you want and try to tell me that you're going to be a good daddy, but it won't last. You'll hire someone to play the part of mommy or you'll dump him on someone from the family when you get tired of him. Do you as you say deny what I'm saying? Thorne Blackwell- you are every bit as selfish as I am! The difference between us is I can admit it!\"\n\n\"The difference between us,\" Thorne said calmly, \"is that I'm willing to do whatever I need to so that I can be a good father. Will I change entirely? No nor do I want to. I am who and what I am, but some change needs to happen. As far as we are concerned, we don't have to be together in order for you to be a good mother if you choose to be. I am fully aware that you never wanted children; but you're having a child. You don't see this as an opportunity to become a better person- you see this as a way to get what you want. You know, I'm done talking about this. We've talked about it before and I'm tired of it. If you'll excuse me, I need to set up a time to talk to Ethan. I'll be by in about an hour to speak with our son.\"\n\nFor just a second, Barb entertained the thought of telling him no. But what would it accomplish? Absolutely nothing other than to piss him off. She saw that he was watching her as if he was waiting for her to say something.\n\n\"Are you reading me?\" she asked suddenly.\n\n\"No,\" Thorne replied. \"I don't need to. If I'm reading you, you'll know it. Are there any further questions?\"\n\nWhen she didn't answer, he nodded and walked away. Barb sat at the table for another ten minutes before going to her room. She showered, put on her pajamas and settled in to wait for Thorne's arrival. As she waited, she thought about what Gene said. It wasn't long before things that others had said to her began to haunt her. The baby within her moved and then settled. Something about that movement made her realize that she was truly on the way to being alone and not in the way that she wanted.\n\n****\n\nLouise hung up from talking to Kevyn excited. Gene was coming! As far as Kevyn knew, he was going to stay at the little condo which meant that it would need to be cleaned and restocked. Kevyn was going to call the others to see if they wanted to contribute to the redecorating of the condo. Kevyn was sure that Gene wouldn't appreciate the peach/pink color of the walls. She would call the manager in the morning and get permission to repaint the walls and to make any other changes. She didn't anticipate any issues as the improvements would be to his benefit. The old furniture would be taken to the Salvation Army or good will and would be replaced with all new furniture that Leon would pick out. \n\nShe and Nathan would be in charge of the food for the cleaning party and for Gene's cabinets. She couldn't believe that they would finally all be in one place. Her hope was that Gene's arrival would trigger something in Barb. She opened up her laptop, carried it to the bed and looked through the new recipes that Nathan had entered for her. Gene unlike Nathan and the other men wasn't a lover of spicy food. They would make some casseroles and divide them into single serving containers so that Gene wouldn't have to cook-he would have other things to take care of. The phone rang while she was looking through the recipes but Nathan answered it before she could move. Judging from the sound of the conversation, he was talking to Hans. A moment later he walked into the bedroom carrying the cordless phone.\n\n\"It's Juliette,\" he said as he handed her the phone. He kissed her forehead and left her to talk privately.\n\n\"Kev says that you and Nathan are in charge of food, do you need me to get you anything?\"\n\n\"I'm looking through some recipes as we speak,\" Louise said. \"I was thinking of having a welcome party here on the beach- what do you think?\"\n\n\"I'm up for it if you are,\" Juliette replied. \"How are you feeling by the way?\"\n\n\"I feel good- did I tell you that I can feel the baby moving?\"\n\n\"No, but isn't it a wonderful feeling?\" Juliette asked and then went silent. She was thinking about Barb. \"Lou, I'm going to call Barb. I know that she says that she doesn't want to hear from us, but I don't care.\"\n\n\"I was going to call her too,\" Louise said. \"I was going to ask her if she wanted to help us get the condo ready for Gene. But why don't you call her? Somehow I don't think that she wants to hear from me although I was going to call her anyway.\"\n\n\"I can do that,\" Juliette said, \"but while I have you on the phone; tell me about this turning thing. Hans wants me to do it, but I wanted to talk to you first. Do you think that it's really necessary?\"\n\n\"I think,\" Louise said after careful thought, \"that Hans is right. I don't know when or even if things are going to get bad again, but we need to be ready. I know that Kevyn was thinking about it long before this whole thing happened so she'll probably do it. I don't know how far this thing is going to spread so I'm glad that Gene is coming.\"\n\n\"That's another question that I have,\" Juliette said, \"What are we going to tell him?\"\n\n\"The truth when it's time. We'll let him get settled first and then we'll have to tell him if only to keep him safe. There's no way that we can keep it from him.\"\n\n\"He won't believe us,\" Juliette said.\n\n\"Probably not and we may have to show him, but back to Barb, will you call me after you've talked to her?\"\n\n\"Sure-I'll call you later, Celeste needs me for something.\"\n\nLouise hung up, looked at the phone and almost picked it up. She was going to call Barb herself but thought better of it. She didn't want to ruin any chance that Juliette had of getting her to help.\n\n\"She'll come around,\" Nathan said from behind her. \n\nThat he thought that surprised Louise. Nathan hadn't sugar coated his dislike for her sister.\n\n\"Sweetheart, it's true that I don't like her- well part of her anyway. She's rude, impulsive and I detest the way that she treats you and the rest of your family. That her own child who is still within her knows that he isn't loved or wanted says something. On the other hand-we've all seen the person that she could be. That Barb I like. I think that she will always be as she is, but it is possible for her to change to some degree if she chooses to. If she does, our slate will be wiped clean and she will be welcomed into our home.\"\n\n\"Really?\" Louise asked surprised although she didn't know why.\n\n\"Really,\" Nathan said kissing her temple. \"Anyone is capable of change if they choose to do it. Look at my family, Leon and Gene. All of them received a second chance so why not her? She only has to take it. Why are you surprised?\"\n\n\"I'm not sure,\" Louise said. \"I shouldn't have been. Thank you...\"\n\n\"There is no need for that- you never need thank me for anything; your being my mate and the mother to my child is thanks enough. It is I that should be thanking you.\"\n\nHe took the laptop from her lap and sat it on the floor. \"Allow me to thank you,\" he murmured his voice low as he moved closer to her and kissed her. \"Lie back,\" he said as he gently pushed her back. When she was lying on her back, he rested his head on her stomach smiling as he listened to the rapid, but strong heartbeat of their child. After a moment, he kissed her stomach and with a thought undressed her while he remained dressed. Seeing where he was headed, Louise raised her shields.\n\nNathan took his time massaging and kissing her legs until Louise whimpered with impatience. He was going to tease her a little longer, but then the scent of her arousal assailed him. His clothes felt too tight. He had to remove them. Now naked, he moved down so that his face was mere inches from her glistening mound. He inhaled deeply and then paused. Her arousal had always smelled sweet to him, but it was sweeter yet. He wondered if it tasted any different. Unable to wait any longer, he moved closer to her, opened her vaginal lips and slowly touched her opening with his tongue.\n\nHe moaned at the taste of her. Her taste had indeed changed. It was stronger and sweeter than the last time he had sampled her. The fluid running from her had thickened in consistency. It had to be the pregnancy- it was the only thing that he could think of. His next thought was that he had a few more months to enjoy the sweet nectar that was pouring out of her.\n\nHe pulled back to examine her. Her clit was already pulsing and he hadn't even touched it yet. Louise was shaking in an attempt to hold off. To give her time, he waited until she was no longer shaking before he touched her with his tongue again. Each taste acted as an aphrodisiac. His cock swelled and hardened. Just the pressure of the mattress against it brought exquisite pain/pleasure to his dripping cock. Her moans seemed to reverberate through his body amplifying the sensations in his cock.\n\nHe knew that she had her shields up because if she didn't, he would have been on the floor. Then he felt her hands on his head as if anchoring him in place. He felt her shields drop one notch and then another. He placed his hands on her hips and held on before he gently touched her clit with his tongue. His ass cheeks tightened in an attempt to hold off on coming before she did. He didn't have to worry. Louise lowered her shields once more, froze and then screamed as she raised her hips forward while pulling Nathan's head tighter against her. Nathan held out for as long as he could before he ground against the bed seeking relief. He held Louise closer to his mouth and drank from her as a muffled moan escaped him. There was no stopping the orgasm that was sweeping through him so he let it come. Even afterwards he was still hard. \n\nNathan let go of Louise's hips and waited for her to release his head. As soon as she did, he moved so that he was positioned above her. He bore his weight on his arms as he slowly slid into her. They both gasped at the contact. Their breathing which had slowed was once again ragged and fast. He had barely gotten the length of him in before Louise came again with him following seconds later.\n\nAfterwards, Louise dozed with her head resting on Nathan's shoulder. As she slept, Nathan planned. He didn't believe that they had as long as they hoped. He couldn't explain the feeling. There was nothing to support it. The danger wasn't imminent- Louise would have felt it; but it was coming.\n\nThe phone ringing roused Louise from her sleep. Juliette was calling her back.\n\n****\n\nBarb looked at the caller ID on her phone and answered it. She had been expecting a call from someone- but she didn't know from whom. If she had to guess, she would have said Louise.\n\n\"Hey Juliette,\" she greeted. \n\n\"Hey- how are you doing?\" Juliette asked. \"We've been thinking about you.\"\n\n\"I'm fine- is this about Gene coming?\"\n\n\"You know already?\" Juliette asked.\n\n\"I knew that he was thinking about it- when is he coming?\"\n\n\"Two weeks- he's going to stay in that little condo that Kevyn and then you used to live in...\"\n\n\"Not good enough to live in the big house?\" Barb asked and then regretted it.\n\n\"For your information,\" Juliette said tersely, \"Kevyn and Patrick invited him to live with them and he refused. Now let me tell you why I'm calling other than to check on you. We're redoing the condo- it needs to be painted and we're putting new furniture in and redecorating it. We wanted to know if you were interested in helping.\"\n\n\"Why didn't Louise call me?\" Barb asked.\n\n\"Why does it matter who called you?\" Juliette asked.\n\n\"I was just curious,\" Barb replied. \"In the past she was the one who called me. Why not now?\"\n\n\"Do you want to hear the truth?\"\n\n\"Everyone else has told me their version of the truth so why not you too?\" Barb asked her tone curt.\n\n\"Barb- Louise didn't call you because she thought that you would say no because it was her calling. For reasons that only you know, you seem to harbor more resentment toward her than any of us...\"\n\n\"That isn't true!\" Barb objected.\n\n\"It is true,\" Juliette said quietly. \"It isn't something that started recently, it's always been there. What I don't understand is why. She's the one who always saw the best in you. Since we're talking about this, why do you have such hard feelings toward her?\"\n\n\"I didn't think... What do you want me to do for Gene?\" Barb asked changing the subject.\n\n\"Louise and Nathan are handling the food end of it. Leon, Patrick and Hans are taking care of getting rid of the old furniture. Kevyn, you and I could go shopping for paint and the furniture.\"\n\n\"What about Nadine?\" Barb asked.\n\n\"She's made herself available to help wherever she's needed. We thought that we could all meet for dinner and make plans. Everyone is coming to our house tomorrow night if you want to come. Thorne is invited too.\"\n\n\"Do it!\" The voice whispered urgently. \"Take that first step.\"\n\n\"W-What time?\" Barb whispered not believing that she was really going to say yes.\n\n\"You'll come?\" Juliette asked shocked.\n\n\"I'll come, but I can't speak for Thorne. What time did you say?\"\n\n\"Is six alright?\"\n\nBarb hung up and stared at the phone. Was she really going to go? She would, but only because of Gene. In her mind he remained the only one who understood her even though he had changed. And what about Louise? Was Juliette right? She opted not to think about it. Just agreeing to meet everyone for dinner was a major concession. She already knew that Thorne wouldn't go with her- it would give the appearance that they were a couple. As an afterthought, she decided to mention it anyway. She didn't want him accusing her of doing anything underhanded.\n\nShe walked by his office, started to knock and then decided to wait until he came to talk with the baby. She had seen and heard enough from him for the time being.\n\n****\n\n\"She's coming!\" Juliette exclaimed when she called Louise back. \"She's really coming!\"\n\nLouise sat up and looked at Nathan who was as surprised as she was. \n\n\"I told her to be at our house by six- she doesn't think that Thorne will come, but isn't it great?\"\n\n\"That's good news!\" Louise said as she settled back into Nathan's arms. Thank you for calling her. Is she alright?\"\n\n\"She seems to be-Lou- she asked you didn't call her.\"\n\n\"What did you say?\" \n\n\"I told her the truth,\" Juliette replied. \"Of course in typical Barb fashion; she changed the subject.\"\n\n\"But she's coming and that's huge,\" Louise replied. \n\n\"True,\" Juliette conceded. \"I told her six- is that okay with you?\"\n\nJuliette and Louise talked for a few more minutes about the dinner and then hung up. Louise now understood something. Gene's moving to California wasn't a coincidence. He was needed. He was the main reason that Barb was coming. The reason, Louise decided didn't matter. How Barb felt about her at that moment didn't matter. The only thing that mattered was that all of them would be together under one roof if only for an evening. It was a start.\n\n****\n\nThorne finished his phone call with Ethan and debated as to what to do next. They would meet in three night's time to clear the air between them. At that time they would decide on when to formalize their alliance. By his calculations, Barb should be in her room and waiting for him. He rose from his chair and closed the office door behind him. As he made his way to Barb's bedroom, he ran into Adrianna and Cheung who were off duty for the evening. They exchanged a few words and he continued on his way.\n\nAs he expected, Barb was propped up on the bed and waiting for him. Neither of them spoke as he approached the bed and sat down. Thorne didn't look at her as he placed his hands on her belly and began to gently massage it. Then he bent down and kissed it. The baby moved in response and then stilled.\n\n\"Hello little one,\" Thorne said softly. \"I am sorry to disturb you if you were sleeping, but I wanted to wish you a good rest. I suppose we need to start thinking of a name for you since we know that you are male. Maybe we can have your cousin Celeste visit with us so that you can communicate your like or dislike of the name we choose. Would you like to speak to your cousin again?\"\n\nBarb's heart jumped at the mention of Celeste's name. She didn't hate the little girl; it was more dislike coupled with fear. That a child had partly been her undoing was a hard pill to swallow. She startled when Thorne once again kissed her stomach, whispered 'good rest' and moved to stand up.\n\n\"My brother Gene is moving to California,\" she said abruptly. \"The family is getting together to get his place ready and-there's a dinner tomorrow night at Juliette and Hans's house to make plans.\"\n\n\"Are you going to help with this?\" Thorne asked.\n\n\"Yeah-I am,\" Barb replied. \"You're invited if you want to come along. It's at six.\"\n\n\"I will come,\" Thorne said surprising her. \"Let me explain why.\" He continued. \"The ultimate protection of you and our child falls upon me. I will be accompanying you any place that you need to go. Having said that, I want to make something clear- this does not make us a couple. It is what any male would do for his mate who carries his child.\"\n\n\"Don't feel obligated!\" Barb snapped.\n\n\"We need to start thinking of names for the baby,\" Thorne said changing the subject. \n\nBarb was surprised for the second time in a few minutes.\n\n\"We?\"\n\n\"Yes us,\" Thorne replied. \"He is your son too and you should have a say in what he is named. I was serious about inviting Celeste here so that he can participate in his naming.\"\n\n\"We don't need her...\"\n\n\"You are afraid of her aren't you?\" Thorne asked. \"I see it in your face and your heart rate just sped up.\"\n\n\"She's a creepy kid,\" Barb finally replied.\n\n\"No she isn't-she's a powerful little girl who is going to be a formidable woman. What makes her creepy to you is that she can read you- you have no secrets when she is around and she frightens you.\"\n\nThat was it in a nutshell Barb thought to herself. \n\n\"Is there anything else that we need to discuss?\" Thorne asked.\n\n\"No,\" Barb replied softly.\n\nAfter Thorne left, Barb lay awake for a long time thinking.\n\n****\n\n\"Do you really think she'll come?\" Leon asked Juliette for the fourth time.\n\n\"For the last time,\" Juliette snapped, \"we'll know when she gets here and don't ask me about Thorne either- the same answer applies. \n\n\"Fine,\" Leon grumbled and went in search of Nadine who as of yet hadn't spoken to Rachel or Katrina yet. He would give it a little more time before he brought it up again. The scar from the fight with Harry was almost gone, but she still flinched when she saw it. As a result, he still wore a bandage over it when they made love. Wearing the bandage wasn't a big deal; but he hated seeing her distressed and it proved that she needed to talk to someone. He decided to give it one more week. If she hadn't talked to either Katrina or Rachel by then- he would bring it up.",
        "At five-fifty five; everyone was waiting for the doorbell to ring. At six on the dot; it rang. Celeste happened to be the one closest to the door opened it. She looked up into the face of her aunt who looked back at her with an unreadable expression. Juliette stepped behind Celeste and put her hands on her shoulders.\n\n\"Come on in, everyone is here,\" she invited.\n\nJuliette stepped back taking Celeste with her. Barb walked by the little girl without speaking to her or sparing her a glance. Thorne however stopped, bent down and opened his arms to her. Celeste stepped into his arms and hugged him back.\n\n\"How are you?\" Thorne asked as he kissed her cheek.\n\n\"Fine-how is Aiden?\"\n\n\"Aiden?\" Thorne asked. \"Who is Aiden?\"\n\nCeleste stepped back so that she could look into Thorne's face.\n\n\"The baby- that's his name,\" Celeste said and giggled at the expression on Thorne's face.\n\n\"He chose his name?\" Thorne asked flabbergasted. \"When did he do this?\"\n\n\"He just told me,\" Celeste replied.\n\nThorne was speechless. The more he was around the Yancy family, the more he wondered about their background. All of them with the exception of Barb seemed to have some kind of strong psychic ability. Gene he didn't know about as he had never met him. He was beginning to understand that he was an ally to not one strong family; but two. He made a mental note to ask Ethan what he knew about the Yancy's when he met with him.\n\n\"So his name is Aidan,\" Thorne said. \"Is there a middle name?\"\n\n\"No,\" Celeste replied. \"He just wants to be called Aiden.\"\n\n\"Why Aidan?\" Thorne asked himself.\n\nHe looked up to see Barb watching them and kissed Celeste on her cheek.\n\n\"Do you remember what I told you?\" he asked holding her by her arms. \"I told you that your power is yours to share only if you choose to share it. I also told you that if you ever need anything from me, it's yours. I and my son are in your debt. We'd better go in; I think that they are waiting for us.\"\n\nThorne took a seat next to Barb after he helped her into her chair. He seemed oblivious as the other males catered to their mates. He caught Barb looking at him from the corner of her eye and ignored her. Apparently she hadn't believed him when he told her that he wasn't going to pretend that they were the happy couple.\n\nWhen she thought no one was looking, she stared at Celeste who caught her, stared back and smiled at her. Instead of returning the smile; Barb looked away. After the dinner dishes were cleared, the planning for Gene's arrival began. Thorne watched as the Yancy siblings with the exception of Barb good naturedly teased each other. It brought back memories of his brothers.\n\n\"So Barb,\" Kevyn said, \"what would you like to do? I'm sure that Louise wouldn't mind an extra pair of hands in the kitchen.\"\n\nLouise looked at Kevyn and then at Barb and waited for a response. Several seconds passed before Barb said anything. It was obvious to everyone watching that she was trying to make a decision. If she said no, she would be proving Juliette right. Saying yes would prove that she had no real ill will toward her youngest sister.\n\n\"Sure, why not?\"\n\n\"Great,\" Louise said. \"We'll talk before you leave and exchange ideas...Do you still remember grand mom's rice pudding recipes? She had two or three. I meant to copy them, but I never did. I looked for the notebook that mom kept, but I couldn't find it.\"\n\n\"I-I have them,\" Barb confessed. \"I took mom's notebook when we packed up the house.\"\n\nAll of the Yancy's looked at her. They knew that she had taken items that she considered valuable, but the notebook didn't fit into that category. She had never shown any real interest in the old family recipes. No one had asked where it had gone assuming that either Louise or Kevyn had it.\n\n\"Is it where you can easily get to it?\" Louise asked seeing Barb's embarrassment.\n\n\"I... yes...\"\n\n\"I'm glad that one of us has it,\" Kevyn said. \"I had kind of forgotten about it until now.\"\n\nBarb was actually surprised when no one jumped on her about having the notebook. In truth, she had taken it because she thought that one of the others- namely Louise would want it. Looking back on it, it was a mean and childish thing to do.\n\n\"So why did you do it?\" The voice asked.\n\nThe evening ended with the men insisting that the women weren't going anywhere without them.\n\n\"We've only got two weeks!\" Kevyn exclaimed. \"We'll get more done...\"\n\n\"Either we accompany you or the condo stays pink,\" Patrick said. \"And besides, it isn't that big. We can have it ready within a week. So I guess you ladies need to decide when we're going shopping.\"\n\n\"This is Tuesday,\" Louise said. \"We have an appointment with Gretchen tomorrow at nine- Barb when is your next appointment?\" \n\n\"Ten on Wednesday, but I don't know if Thorne is free...\"\n\n\"I'm free,\" Thorne replied. \"But may I make a suggestion?\"\n\n\"Go for it,\" Leon said.\n\n\"Since the ladies are concerned about the time element, I suggest that we go to one of our warehouses. Surely between all of us there will be suitable furniture that Gene will be happy with. I'm sure that we also have dishes and other things needed for the kitchen too.\"\n\n\"Ummm Thorne,\" Patrick said, \"Great idea, but you're kind of missing the point. They want to go shopping.\"\n\nThorne understood. The women wanted things to be as normal as they could be for as long as it lasted.\n\n\"Soooo how about eleven pm on Wednesday?\" Kevyn asked. \"We can call the stores and make the appointments.\"\n\nThe discussion went on for several more minutes with Barb not participating. She was feeling very uncomfortable. She had half hoped that one of them would have jumped her for taking the notebook. That way she would have a valid reason for not being involved with them.\n\n\"Okay,\" Kevyn said, \"we'll meet at the kitchen and appliance store at eleven- does that work for everyone?\"\n\nAfter the meeting broke up, Louise went to Barb.\n\n\"I'm really glad that you came.\"\n\n\"But?\" \n\n\"But what?\" Louise asked. \"I'm glad that you came. All of us are. It'll be good to have all of us together again.\"\n\nBarb walked away without responding. She was ready to leave. If she stayed any longer, she would say something that she would regret.\n\n\"Finally,\" the voice said. \"You are learning.\"\n\nThorne was waiting for her by the front door. \"Wait here,\" he said and slipped out.\n\nHe pulled the car up to the front, got out and went back into the house for her. He was going to tell her that the baby had picked out his name, but changed his mind when he saw the expression on her face. The other thing was she would accuse him of unilaterally naming the baby after telling her that she would have a say. Hell, he didn't even have a say, but he had no problems with believing Celeste. He had no problems with Celeste period. \n\n\"What were you two talking about?\" Barb asked as soon as she was in the car.\n\n\"Who?\" Thorne asked. He had talked with several people that night.\n\n\"You and my niece,\" Barb snapped. \"What did she say about me?\"\n\nThorne rolled his eyes and sighed before answering her.\n\n\"Not that you'll believe me, but she didn't mention you. Should she have?\"\n\n\"Then what did she say?\" Barb insisted.\n\n\"We talked about the baby,\" Thorne replied. \"I also promised her protection and that if she ever needed anything, it was hers.\"\n\nThorne reconsidered his decision to tell Barb about the baby's name. Her reaction was going to be the same no matter when he did it.\n\n\"There's something else,\" he said glancing over at her. \"We don't get to choose the baby's name- he's already chosen it.\"\n\n\"He did what?\" Barb asked obviously not believing him. \"Who told you that? Celeste? Do you believe everything that comes out of her mouth?\"\n\n\"Tell me Barb,\" Thorne said coolly, \"tell me of one instance where she's lied. She knew about you didn't she? She knew when you were thinking about harming our son didn't she? Give me one good reason as to why I should doubt her.\"\n\nBarb sat back in the seat. She couldn't come up with one single time when Celeste had lied even before Thorne. The girl couldn't even utter the slang for behind without blushing.\n\n\"What's the name?\" Barb asked.\n\n\"Aidan- it's Gaelic for fire.\"\n\nThere was no conversation between them for the rest of the ride home. When they arrived, they were met at the car by Adrianna and Cheung. Barb didn't acknowledge them when they spoke to her. She went straight to her room, shut the door and lay on the bed fully dressed. Realization was dawning. Nothing in her life had turned out the way that she had envisioned it.\n\n*****\n\nThorne sat in his office waiting for Eustace to show up. His appointment was as eight and the appointment with Gretchen was at ten. He could have changed his appointment to better suit Eustace's schedule, but to his way of thinking; he was paying Eustace a shit load of money so he would just have to deal with it. \n\nEustace appeared just before eight, sat down and made himself comfortable. \n\n\"Tell me what happened,\" Eustace said skipping the formalities. \"Wow,\" Eustace murmured when Thorne was finished. \"And no apology?\"\n\n\"Not unless you consider saying I'm sorry that you saw that an apology,\" Thorne replied. The bottom line is the only thing that she's sorry about is that I saw her. That knowledge forces her to take a look at the part that she played in our lives. Poor Noel got fucked all the way around and part of that is my fault. I knew that he was catching hell from our father and I left him there. I was so anxious to get away that I closed my eyes to what was happening to him. That's something that I can't lay at my mother's feet.\"\n\n\"If you could go back, would you have done anything differently?\" Eustace asked.\n\n\"I would have stayed in my bed.\" Thorne said quietly. \"Maybe if I had done that, things might have turned out differently. I might have taken Noel with me when I left. If I had, maybe he wouldn't be so fucked up.\"\n\n\"So it all comes down to a little boy who needed his mother and got much more in the bargain,\" Eustace said.\n\n\"Partly,\" Thorne replied. \"I could have gone back for him. I could have sought counsel sooner, but like many things; it takes a major event in one's life to initiate change. My major event is my son. I won't sit here and tell you that my goal is to have a mother-son relationship with my mother. That isn't going to happen. I won't tell you that I have or am going to change my views on women like her, but-I will say that I understand that they deserve respect as anyone who is living does.\"\n\n\"Where does that put your mate?\" Eustace asked. \"Isn't that part of the reason that you're together?\"\n\n\"Yes and I take my share of the responsibility for that,\" Thorne replied. My mate and I have reached an understanding. After the baby is born she is free to go wherever she wishes. She will be financially taken care of and she will be protected. I am not shutting her out of the baby's life- how active she is in it is up to her.\"\n\n\"Thorne,\" Eustace said, \"Do you not feel anything for this woman? After all the fates put you together.\"\n\n\"Yes they did,\" Thorne agreed, \"but only after we made stupid and irrational decisions. You and I both know that had either of us made different decisions, we wouldn't be together. The only good thing that came out of this mess is my son.\"\n\n\"What does your mother have to say about this?\"\n\n\"She had the gall to say that a child needs its mother,\" Thorne replied angrily. \"After what she did to us she had the nerve to say something like that.\"\n\n\"You're still angry.\"\n\n\"Damn right I am!\" Thorne yelled. \n\n\"Have you considered that maybe she only now understands the ramifications of her actions?\"\n\n\"You're defending her?\" Thorne asked.\n\n\"Not at all,\" Eustace assured him. \"I'm just pointing something out. You said that she didn't know that you knew about her infidelities. In her mind, she was doing you no harm.\"\n\n\"What about Noel? Can she say that about him? She let an emotionally unstable vampire roam the streets! And do you know why? She wanted to be rid of him! She had people to care for him- she didn't have to see him unless she chose to, but yet she put him and others in danger! She could have called me...\"\n\n\"Would you have gone?\" Eustace interrupted. \"By your own admission you said that you knew something was happening but you did nothing. Why would a call from your mother have mattered? Wouldn't you have accused her of pawning Noel off on you?\"\n\nThorne started to deny it, but didn't. Eustace was right.\n\n\"What I see going on is a whole lot of guilt about something that can't be changed. I'm sure that you and Noel have talked about your leaving and he's made his peace with it- you haven't. Your mother's guilt or lack of it is her issue-not yours. Your focus needs to be on preparing for the arrival of your child and the fact that you in effect are without a mate except in name only. As far as the relationship with your mother- you're right in saying that it will never be what it should have been and it's unrealistic to think otherwise. Now that the cards are on the table- you have to decide how to proceed. As far as your mate-the same goes. All of you have to remember that the most important thing here is the child. If you can agree on that, then everything else will fall into place.\"\n\n\"So now what?\" Thorne asked.\n\n\"You start working on those relationships,\" Eustace said. \"Your mother and your mate do need to meet at some point. It's better that they do it under controlled circumstances than by accident. I would also suggest that this meeting occur sooner rather than later. The other thing is this- I'm sure that you're realizing how difficult it is to change old behaviors. It's going to take continued conscious effort on your part to change them. You will fuck up- the important thing is that you don't dwell on it- acknowledge it, apologize and move on. When do you think your mother and Barb will meet?\"\n\n\"It will have to wait,\" Thorne said. \"Ethan and I are meeting in a few days to discuss renewing our alliance. Once that's done, I'll arrange a meeting between Barb and my mother. I have a question that doesn't pertain to me; why would someone remember events differently than what happened?\"\n\n\"That would depend on what the event is and the person. My first guess without knowing the details is that whatever the real memory was- it's too painful. The mind has stepped in to protect the person. He or she may or may not ever recover the original memory. Now, I must go. Gretchen has a nine o'clock appointment. Given what's happened, I don't let her go anywhere alone. If I'm not mistaken, we'll be back here at ten.\"\n\n\"That's correct,\" Thorne said standing. \"When is our next appointment?\"\n\n\"Call me when you have the meeting between your mate and mother set up. We'll meet before then and again afterwards. In the meantime, we can have our next appointment by phone unless you want to meet face to face. But this is what I want you to work on- your own guilt about your brother. I know that he's leaving soon- talk to him again.\"\n\n\"Phone works for me,\" Thorne replied. \"How about Saturday night after my meeting with Ethan?\"\n\n\"That's fine; call me when your meeting is over.\"\n\nIn a flash Eustace was gone. Given how the week had filled up, Noel postponed his departure for another week. As of yet, they hadn't decided on when they were going to spend an evening together. Thorne left his office and went to Noel's rooms where he was working on the portrait of the eyes. As far as Thorne could tell he hadn't added features, but was adding more depth to the eyes.\n\n\"Which Yancy do you think it is?\" Thorne asked from behind him.\n\n\"I have no idea,\" Noel replied. \"I only know that she's beautiful, but then all of the Yancy women that I've met are. I also know that she's the one that keeps me grounded. So how are things?\"\n\n\"As good as can be expected,\" Thorne replied. \"Thanks for waiting to leave.\"\n\n\"No problem,\" Noel replied. \"We need to talk anyway and things are still kind of crazy. So when are you free?\"\n\nThey sat aside Sunday evening for their visit and to talk about the new club whose plans had been tabled. After Thorne left Noel's rooms, he went to his own. It occurred to him that he hadn't been with a woman since the last time he and Barb had been together. He was surprised to find that he was alright with it. To him it was another confirmation that either the fates had indeed fucked up, they had been playing games or a combination of the two. He stretched out on his bed, closed his eyes and rested until it was time for the appointment with Gretchen.\n\n****\n\nTen o'clock had arrived and Gretchen was examining Barb.\n\n\"Things look good- are you still taking the prenatal vitamins and the folic acid?\"\n\n\"Yes,\" Barb replied without looking at Thorne.\n\n\"Are you exercising or taking walks?\"\n\n\"Yes-I'm doing some Tai Chi stuff.\"\n\n\"Good, how are you sleeping?\"\n\n\"No problems there,\" Barb replied.\n\nGretchen went down her list of questions and was satisfied that mother and baby were at least doing physically well.\n\n\"We need to discuss the preparations for the birth,\" Gretchen said. \"I know that we have some time, but I want to get started on the Lamaze training. I have an assistant- her name is Monica that teaches the class. You have two options, you can take the class privately in which case Monica can come here or you can join a class. Either way you Thorne will need to be present. Which would you prefer?\"\n\n\"Which one did Louise choose?\" Barb asked expecting to hear that she had chosen the private class.\n\n\"She and Nathan are taking the classes that will be held at my office,\" Gretchen replied. She only gave Barb the information because Louise had given her permission to do so. \"There are four other couples in the class and there's room for three more.\"\n\nThorne leaned back against the wall and listened. He already knew which option Barb would choose- the most expensive one. He wasn't disappointed to find that he had assumed right. He also knew that it was more than a money thing. Whether she knew it or not, Barb was jealous of Louise. He knew that she harbored feelings of resentment and Jealousy toward the others- but it was toward Louise that she felt it more keenly. Like Juliette and the others, he wondered why.\n\nAfter the exam was over and the night for the classes selected, Thorne called for the car so they could meet the others. While he waited for Barb to change clothes, he wondered at what point he should bring up the subject of her turning. He already knew what she would say. She still hadn't completely embraced the idea of her immortality. She sure as hell wasn't going to go for the idea of becoming vampire. But still- he would be remiss if he didn't at least broach the idea with her. If she said no then that would be the end of it. Whatever happened as a result of her decision was on her.\n\n\"I'm ready,\" she said a few minutes later.\n\n\"Are you sure that you're up for this?\" Thorne asked thinking that she looked tired.\n\n\"I'm good, let's go.\"\n\nThorne made her wait by the door and then came back for her. As he helped her into the car, he bent down and kissed her cheek. Barb looked at him in surprise. In all of their time together he had never given her the kiss of protection.\n\n\"Anyone who is watching -whether they be friend or foe is now aware that you are under my protection,\" he explained. \"Anyone who seeks to harm you will be found and punished. I do this because you are the mother of my child.\"\n\n\"I got it,\" Barb snipped when she got over her surprise, \"we wouldn't want people to think that we're together would we?\"\n\nThorne helped her in and shut the door without responding. She understood.\n\n****\n\nGene reread his letter to resignation for the fourth time before he finally hit submit. It was done. In two weeks his life in Pittsburgh would be over. His sponsor had already given him the number to the local AA organization closest to where he would be living. He would call them in a day or so to see if he could be set up with a sponsor before he left. If that were the case, he'd call him and introduce himself and arrange for a meeting. Next he reread the email to Dana. Satisfied that it conveyed everything that he wanted it to, he sent it. What happened or didn't happen between them was now up to her. He logged onto the company's travel website to look for a ticket. Even with the discounts the price was steep. He thought about taking Kevyn up on her offer of sending the jet and changed his mind. He found the cheapest flight and bought a one way ticket. The last thing that he did was to check his accounts. He would roll over his 401k when he got to California. That way he would be fully vested. ",
        "After he was finished his business, Gene walked around the house that had been completely redone. By the time he was finished his tour, he was crying.\n\n\"Mom, dad- I don't know if you can hear me; but I'm sorry.\"\n\nHe was struck by the profound sense of relief he felt. It was as if the final weight had been lifted from him. He now knew beyond a shadow of a doubt that he-Eugene Victor Yancy was going to be fine. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampires",
        "black woman",
        "white man",
        "pregnancy"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/thorne-ch-11"
}