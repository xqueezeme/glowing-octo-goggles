{
    "title": "Unexpected Threesome Ch. 15",
    "pages": [
        "Those of you who are both writers and readers will know that comments left by readers do make a difference to your motivation. I had been lacking inspiration to finish two more chapters of this story until I received the following lovely comment from a reader by way of a PM.\n\n\"I miss your writing! I miss Karen and Kate, Greg and Ned, and Ellen (of course!). They've become friends through your gifted prose. Don't wait too long!\"\n\nI do wish I could find some ideas for Karen and Greg because they (with Kate) are my favorites. But in the meantime it did motivate me to finish this chapter of this story. Thank you to the reader concerned.\n\n*****\n\nThe next week in Fare passed quickly as Issie and Ellen did their diver's certificate.\n\nOn those days Amy wasn't entitled to a one on one, I was careful to make sure we had a reason to spend the afternoon ashore while the others were doing the course. No one had said anything, but I just wanted to make sure there was no reason for any jealousy to creep into the equation. I was increasingly finding that open communication and ensuring everyone felt fairly treated were both critical to making the relationships on board the yacht work.\n\nDuring this time, Ellen also took the chance to get herself tested for STI's and when that came back with an \"all clear\" it was one less complication in the personal interactions on the boat.\n\nOnce they got their diving certificates the girls were pretty keen to give it a go. The next day Ellen and I were back at the dive shop hiring the two extra sets of gear we'd need if the four of us were going to dive at the same time.\n\nWhen we got back to the yacht, the extra two sets were loaded aboard. By the time the four humans were added on top of that, the poor RIB tender was clearly overloaded. Fortunately we didn't have far to go and the harbour was calm. I just hoped the gendarme didn't intercept us first.\n\nOnce we were anchored, gearing up in the small space was no easier. Still we got there even if we did decide that easing ourselves into the water was safer than the usual backflip; since if we misjudged our coordination the RIB would certainly capsize. The only thing that really seemed strange at the time was Ellen turning to the other girls just before she put the regulator in her mouth and saying something like...\n\n\"OK girls, don't forget about the incompressibility of water.\"\n\nThe waters of Fare harbour quickly reminded us of why this was such a great dive spot. The coral was absolutely beautiful, the water crystal clear and we'd timed the dive to avoid any currents. Amy had the GoPro running collecting footage for YouTube and the Blog page; the girls happily allowing - indeed encouraging and playing to - the sort of sexualised filming with a David Attenborough background that one might question the political correctness of these days. They certainly enjoyed the attention and consequential sponsorship the sites attracted. And fortunately the former didn't seem to verge into the creepy very often.\n\nIssie made sure Amy was in front of the camera as much as behind it, having Amy swim over the camera while she got what seemed to me obscenely close shots of her impressive cleavage and down her bikini-bridge with the sun sparkling on the water surface over her.\n\nI hadn't being paying much attention and had drifted ahead of the girls while we passed over a sand patch between the coral groups.\n\nSuddenly I felt a hand come up between my legs and cup my manhood, quickly followed by a multitude of hands grabbing me around the waist and hips. Before I knew it I had been turned face up and one of them fully deflated my compensator vest so they could force my back down onto the sand. \n\nBy the time the tank on my back touched bottom, the erection that had exploded with the first manhandling of me, had been exposed by my swimmers being pulled half way down my thighs. Mind you, it was way more than the cupping of my cock that had exploded it. In these sensitive times I need to choose my words carefully least they be confused with more emotional words, but when you suddenly realised you're about to be pack sexually mugged by your three gorgeous, scantily dressed lovers, the surprise isn't the erection, it's that you're not leaving a trail of premature cum through the water before they even start.\n\nThree female bodies were standing straddling me offering me delightful views of their taut bikini crotches; one of them bending down undoing the strap securing my tank around my waist to fully expose my torso while the others were struggling to take their fins off.\n\nAll three of them initially sat on me. Amy's breasts floated right over my field of vision as she stroked my hair and face and pinned my arms by my side while the others played with various parts of me and all three rocked back and forwards on my torso; presumably arousing themselves.\n\nThen I felt one of them shuffle back until whoever it was had herself sitting over my hardened cock. As it was embraced by the warm feeling of a half circle of flesh I first recognised it was being pushed into the lady's crease and shortly thereafter that what I was feeling was in fact nakedness.\n\nIssie's distinctive olive skinned hand circled around Amy's flank and exposed her right breast by pulling the bikini top aside and tweaking her nipple; which apart from anything else let me know it was Ellen sitting over my cock. I watched in fascination as the nipple hardened to Issie's touch; growing to poke out from between the fingers that surrounded it. Amy's previously tightly tied bikini top went slack, then suddenly floated off from her body and drifted down. Its tie strings flicked teasingly in the air flow from my regulator until it partly cover my face, the strings a tangle over my facemask as Issie's arm moved further around to play with the other nipple.\n\nI've always found those two flimsy strings that circle the otherwise naked back of a beautiful woman holding on her bikini top extraordinarily seductive; that little bow which requires nothing more than the slightest tug to release it, so tempting. In this case Issie would have had to work around the tank and compensator. Still, a little jet of sexual pleasure shot up my shaft at the mental image of Issie sitting behind her and pulling the knots to let the top float down on my face like that.\n\nAmy relaxed backwards into Issie's embrace. Immediately Issie's other hand circled her left flank and slid seductively into Amy's crotch. I saw Amy try to bend her arm around her own back to try and reciprocate Issie's pleasuring of her. But after two or three repositionings you could sense she was becoming frustrated with the discomfort of it. She gently removed Issie's hands from the various places on her body she had invaded and stood up to turn around. Before I realised what was happening, Amy had taken Issie's hand to induce her to stand too and they were intimately embracing each other. Right over my face.\n\nWith a half turn overlap, each of them had a thigh pressed firmly into the crotch of the other rubbing it gently up and down. I watched as Issie mashed Amy's breasts and Amy responded in turn. Then Issie ran her hand down Amy's stomach and slipped it inside her bikini bottoms; the bulge of its presence moving down into her crotch where she obviously felt out Amy's clit.\n\nAmy in turn ran her hand down Issie's flank until she came to the side tie knot on Issie's pants and pulled it, then moved around to pull the other one; untangling the cords to let the pants fall away trailing their strings behind them to play in the flow of bubbles out of my regulator before landing across my neck.\n\nNow I watched as Amy separated the lips of Issie's crease and felt out her clit; running her finger back and forwards across it; Issie visibly opening her legs wider apart to give Amy easier access. At the same time Issie started using the back of the hand that she had down Amy's pants to try and pull them down. But Amy stopped her; instead guiding Issie's hand outside her bikini bottoms to where Amy quickly pulled aside the gusset to revel her impressive mound bulging out from where it was pinched by the leg elastic. Typical Amy; she just has thing about sex in bikinis. \n\nThat didn't bother Issie who quickly slid her fingers back inside the crease she'd been feeling up and back up against Amy's clit. I'd ceased to exist for these two. Their legs straddled my head and upper body, the flow of air from my regulator burbled up into their crotches and rolled up their bodies, the view through my face mask was filled by the sight of each of them feeling up the other, but they were so engrossed in their sexual play it was as if I wasn't there.\n\nThat's not to say I'd forgotten Ellen either. After all, she was the one riding my cock; even if it was externally. Once Amy had released my arms as she stood up and dragged Issie up with her, my hands had instinctively moved up to Ellen's breasts where I'd started playing with her nipples through her bikini top. Through the frame of the other girls' legs I looked at her. She was deep in concentration as she pleasured herself on me. Her action was more like a rocking movement with just little short jerks of movement.\n\nOf course, Ellen's last pre-dive message to the girls to not forget the incompressibility of water had told me the minute they'd laid their hands on me that this had always been a preplanned assault; one of those little conspiratorial games they occasionally laid on me. And with her medical training, she had always been concerned about the consequences of a tightly sealed male appendage pistoning seawater into the innermost workings of the female body. Now I suspected the rocking movement was intended to minimise chaff in an environment where the lubricating fluids of her body might be diluted by the water. Ellen was ever the practical one.\n\nThrough her facemask I watched as Ellen opened her eyes and looked down at me. Her eyes scanned the sight of the other two girls fingering each other in front of her and I could see her mouth break into a wide smile as the corners of it showed themselves outside the diameter of her regulator. She rolled her eyes at me in response to the flagrant display of BOB (bi on the boat) behaviour.\n\nAs she cast her eyes down to where my fingers had raised her nipples into towering peaks pushing out the material of her bikini top, it seemed her arousal had hit a new high as the smile dropped from her face, her eyes closed and a stream of bubbles suggested to me she'd let out something of a groan. She started pushing down harder on my shaft; rocking more vigorously, whatever concerns she might have had about friction. \n\nDirectly above me, Amy seemed to be going through her own sexual highs. I could see Issie now had a couple of fingers in her sex and Amy was rocking back and forwards to multiply the effect of whatever Issie was doing to her. It was as if Amy suddenly decided she was overdressed for sex as she exchanged Issie's buddy regulator for her own and frantically pulled at the buckles of her combined compensator and tank harness to cast it off; dropping it behind Issie next to my waist. Followed quickly by her facemask. Amy has always been a funny one as to how she's dressed for sex; it's important to her to look sexy and feel sexy. Bikinis help her do that; clearly scuba tanks and facemasks didn't.\n\nWe were only at 4 metres depth. Still, as any experienced diver will tell you, even a free assent from that depth can kill you if you don't get it right. But I knew Amy was the most experienced diver of all of us - she had some sort of rescue diver certificate - so I trusted her judgement in a way I might not have with the others.\n\nShe seemed to be in some sort of sexual frenzy. The fingers of one hand she had buried as deeply into Issie's sex as Issie's were in hers. But as the other hand freed itself of the task of removing the tank, instead of returning to playing with Issie's nipple, she wrapped around Issie's bum and drew their bodies together; desperately dry humping their mounds together as she brushed her nipples rapidly against Issie's.\n\nI could see Amy's upper thighs start to quiver as she approached an orgasm before she suddenly squatted slightly and froze, her legs tensed and the deep reverberating noise of her orgasmic cry and the accompanying rush of bubbles from her regulator came through the water like a distant whale song.\n\nOf course, with Amy, that's not the end of the matter, just the start. Over the next couple of minutes she cycled through quivering and tensing as she went through a couple more orgasms; all the while she was working furiously at Issie's sex and clit while brushing her nipples with her own, trying to bring Issie to one too. And all as I looked straight up from between their legs.\n\nBut it was Ellen who went next. She'd been pressing down harder and harder with her rocking motion. Ellen's nipples have always told me when she's about to go. They respond quickly and generously to being felt up, but at the peak of her arousal they go like sizable rocks; growing and hardening just that little bit more. Even through her bikini top I could tell the moment was close.\n\nShe's less demonstrative than the others. Through her orgasm she just bent over me; slipping her head between Issie's legs to press her whole torso down on my chest.\n\nI saw Amy look down at Ellen and it seemed to make her work even harder at bring Issie to a climax. A few moment later she was rewarded as Issie tensed, straightened and pushed her crotch hard against Amy's; bringing her thigh up between Amy's to press against her mound.\n\nBut Amy was clearly now distracted. As soon as Issie seemed to have settled down, Amy bent down to grab Ellen's shoulder. To say she physically pulled her off me might be overstating it. But Amy's urgency to remove Ellen and mount me herself was palpable. As Ellen stood slowly up - bearing in mind both she and Issie still had their tanks on their backs - Amy basically threw her into Issie's arms, dropped Issie's reserve regulator from her mouth and free dove in nothing more than her bikini bottoms onto my hips; picking up a regulator from her own previously discarded tank as she passed it. I had to admire her diving expertise and chutzpah.\n\nWith her mound still bulging from beneath where her bikini gusset had been pulled aside, she lifted my shaft and slipped it into a shallow penetration as she sat on me cowgirl style. In this her stance was helped by the fact my back and bum were supported about a foot off the sand by the tank on my back. So instead of having to knell, she squatted, her thighs spread wide open and her feet wide apart, giving me, with a lift of my head, a panoramic view of her lady parts, open to me like a flower in bloom. \n\nAmy's intentions were obvious to me from the last time we had sex on the ocean floor. With her g spot having a shallow location, she started to use the tip of my manhood to rake firmly against it; all without creating the sort of piston like seal that would be of concern to Ellen. Her hand firmly grasped the base of my shaft, controlling its angle and depth of penetration, while she leaned back to open the angle; bouncing up and down gently to get the movement she wanted.\n\nI knew my job was to use the easy access I had from her open presentation to stimulate her clit with one hand while playing with her nipples with the other. And while I might describe it as a 'job' and Amy certainly had an expectation I would perform my allotted task, the fact was, it was an enjoyable pleasure.\n\nAll the more so because Amy rewards such dedication with numerous climaxes. And the view of my shaft dipping in and out of her sex was pretty good too.\n\nBut of course, that wasn't the only view I had. Right above me Ellen and Issie were standing straddling me. Ellen had come into Issie's arms when she was thrown there by Amy with some uncertainty. While this was the most full on BOB experiment I was aware of the girls indulging in, Ellen as a newbi was less imbued with the idea than the other two.\n\nIssie had been fairly quick to touch up Ellen's already projecting nipples and took only slightly longer to slide her hand through her crotch which had become covered by the gusset of her bikini as she'd stood up.\n\nEllen had reciprocated with a little more hesitation. All the more so since Issie was completely naked whereas all Issie's touching up had been through Ellen's bikini. But Ellen's bikini didn't stay on her body for long. I watched as Issie ferreted around her back and under her compensator to release first the lower tie of her top and then the neck one; pulling it away to leave it fluttering down through the flow of air from my regulator onto my chest.\n\nIssie played with Ellen's naked nipples for a while - even taking the regulator momentarily out of her mouth to suck them, before slowly sliding her hands down Ellen's flank to pull first one and then the other of the string ties to her pants for them to join her top on my chest. It occurred to me my torso was starting to look like a women's locker room laundry basket; with five bikini parts strewn across it.\n\nAnd so I was soon once again watching as two of the girls fingered each other right above me. They seemed more reluctant to penetrate each other's sex this time. Ellen was using a long finger sliding motion on Issie - very similar to what I do. On the other hand I watched as Issie bent her finger and flickered Ellen's more prominent clit with the tip of her finger; which apart from anything else gave me a less obstructed view of Ellen's rather delightfully large engorged clit.\n\nOf course, I didn't permit my voyeurism to let me neglect Amy, who was still bouncing on top of me; my hands never resting from their allotted tasks with her clit and nipples. I'd sort of lost count on her orgasms. In any case it was hard to tell the difference between one and the constant state of ecstasy she's in between them anyway. Those whale like noises were still coming through the water and she was blowing air through her regulator like you wouldn't believe.\n\nAnd I wasn't the only one watching Amy's display. When Amy and Ellen had changed places, Issie had turned herself around so that she was now over my head facing towards my feet. She'd now bent herself around Ellen's shoulder and even as she kept intensely fingering her, Issie's eyes were firmly on the action between Amy and myself. \n\nIssie has always been quite openly a voyeur. We've several times found her after I'd been having sex with one of the other girls staring down a hatch with her fingers down her pants or slumped post orgasmically next to it with a giant wet patch in the gusset of her bikini. And she was now clearly getting off on what she was seeing. Issie climaxed to Ellen's fingering fairly quickly, but I doubt it was entirely Ellen's handiwork that did the job.\n\nThe only problem with Amy's rather exuberant reaction to sex is that it's difficult to know when to stop. It can't be my climax because I know that is being reserved for Issie and the other two have been careful not to overstimulate me; even if I was close to being overwhelmed visually. If it was simply Amy's, she would have been off me shortly after she mounted me. All you can really do is wait for her to burn herself out from sheer exhaustion.\n\nBy the time she had, Issie had finally brought Ellen to a climax and had another herself; more or less just watching Amy since Ellen's fingering of her had become rather uncertain after Ellen's climax.\n\nAmy signalled it by flopping down on my chest like a dead woman, arms spread out wide and with me still in a shallow penetration of her. Issie waited, staring down until a completely spent Amy literally crawled off me, moving to the side dragging her air tank slowly with her and dramatically rolled over and lay down spreadeagled and face up on the sand.",
        "I just lay there feeling like some temporarily vacated Sybian machine, my erection waiting the next user, while Issie moved into position. But then what man wouldn't dream of being a well-used Sybian machine.\n\nWhat would happen with Issie was as predictable as had been Amy's approach. As Ellen went down and sat next to Amy, leaving us with a two person audience as Issie and I completed this whole episode, Issie brought me into a slow, open and ungripped full penetration into her body. Then, brushing all the bikini parts carelessly off my chest to float off on the tide, she lay down on me, wrapping her hand around my back as I embraced her in return.\n\nIssie's action then was one of squeeze and release, squeeze and release. It was all a trick she'd learned back in her native Italy so she could have sex with her then boyfriend while frolicking in the ocean - even with friends nearby. To all the world it looked as though they were just have a bit of a cuddle and a pash. After all, what can be happening if there's no rocking and rolling?\n\nWell, with the drawstring of his pants undone and her bikini pants pulled to the side, it turned out quite a lot. I'd found out before that the action was very stimulating - at least how it was done by Issie. \n\nAnyway, Issie wasn't trying to hide anything from anyone. She might not have wanted her innermost body parts to be pumped full of sea water but there was no reason a bit of rocking and pubis mashing couldn't be added to the mix.\n\nAfter all the foreplay that had gone before, the fact was my balls had been on the point of boiling over for some time. It did take much for that first sensation of the inevitability of my impending climax to make itself known.\n\nMoments later an intense gush of pleasure surged up my shaft as I sprayed Issie's cervix with my seed. And then another, and another. Which, in the other part of the trick she taught herself, induced a climax in her.\n\nShe lay on top of me for a moment, enjoying a post coitus cuddle, then slowly climbed up off me; releasing my still hard shaft from the embrace of her body. Then like a lot of these encounters there was that \"what do we do now\" moment. \n\nWhen Issie had hurriedly pushed the bikini parts off my body, she'd sent them in the opposite direction to where Amy and Ellen were sitting. They'd felt a bit inhibited about walking around us to get theirs so had just sat there watching as their clothing started drifting in the tide.\n\nNow it was over there was an almost comic flurry of activity as the girls chased down their tops and bottoms; some of which were now partly buried in the sand as a result of all the movement that was occurring. I could sit watching in relative amusement and a little bit of sexual frission, as three nearly or completely naked women - except for their diving gear - swam around finding and picking up the items, shaking out the sand and trying to tie them back on their body. For Ellen's and Issie's pants that wasn't too hard.\n\nBut now Amy had her tank back on her back, all of them found it impossible to tie their tops back on, since the knot had to be under the tank. One by one they gave up and following Issie's lead, tucked them in their pants for the rest of the dive.\n\nIt's funny isn't it? I'd just rooted the three of them, played with their nipples and watched them sexually engage with each other and yet I found it quite exciting to be diving with them topless; completely distracted by the spectacle. I was also amused that none of them balked at being videoed like that.\n\nAs we got back to the RIB they climbed into the boat equally topless; staying that way until they were de-geared and even, Issie didn't bother until she was back on the yacht and Amy only started tying her on as her breasts bounced on the way back.\n\nOnce back on the yacht I was attracted to what the girls were giggling about as they reviewed the footage they'd taken, only to find Amy had set the camera up on a coral head before the girls pounced on me. The whole thing had been filmed. I could shrug my shoulders. The camera angle was from low between my legs. While it gave a great, and somewhat flattering shot of my cock and balls between their use by the girls, with facemask and regulator, the only thing that really identified it as me was the colour of my speedos. And black is not that distinctive.\n\nFor the next two weeks in Fare all seemed to be going well. Whatever issues of jealously and uncertainty the girls had been feeling seemed to have settled down. Yes, there was a second day when a dive turned into an orgy, but this time when two of them put on string tie pants instead of their usual slightly more provocative \"fuck me\" bikini bottoms, I sort of guessed it was going to happen. But on the whole their collective sexual demands had started to subside as their sense of security within the arrangements increased. Not every girl was demanding sex every day. Some even forewent their one on one days.\n\nThen, just when I thought all the issues had been cleared, everyone was happy and comfortable and the boat had settled into a nice routine, Issie laid it on me.\n\nIt was her one on one day and, with the others ashore for the afternoon, we'd just finished a passionate love making session. Perhaps her revised script for that should have alerted me to the fact something was amiss.\n\nNormally Issie would ride me exuberantly; usually cowgirl style as she leaned back and rubbed my shaft against her g spot. Normally she'd find multiple orgasms for herself before tightening her grip on me and giving me my climax. This day had been different. From the outset, she pulled me over on top if her and held me tightly around the neck, maintaining a contact with almost the full length of our bodies. All I could do was try and grind my pubis against her clit on full penetration at the end of every stroke, while rubbing my chest against her nipples as I moved about on top of her. She'd left me just enough movement to occasionally kiss down her neck and across the top of her breasts; but for the most part my head was firmly captured by the elbow she had wrapped around it.\n\nIt was a lot more intimate than Issie's usual love making style. It was almost like pulling me on top somehow surrendered herself to my dominance in a very un-Issie like way; more like the \"make beautiful love to me\" requests I sometimes got from Amy and Ellen. She'd been quieter too; mournfully moaning and intimately lifting herself against my weight to brush against me, rather than the unconstrained crying out and vigorous bouncing that accompanied her usual routines.\n\nAs she'd climaxed she pulled my head against her cheek and my butt firmly up to maintain my full penetration of her while her contractions had pummelled my shaft, then released it and encouraged me to thrust vigorously as I'd found my own release.\n\nEven then she'd just pulled me down and held me in a vice like grip; eventually letting me roll us both over so I didn't have to worry about crushing her under my body weight. Yet still, it felt as though she wanted to capture me in the intimacy of the moment; her covering me like a blanket substituting for the choke hold she previously held on me.\n\nSo there I was under her, the residue of my erection still penetrating deeply into her body. I was even enjoying that sensation of feeling the edge of the bell swimming in the pool of cum and juices that were flooded up against her cervix. But really, there'd been not the slightest inkling of the bombshell she was about to drop.\n\n\"Ned. I need to go home. I'm going to book a ferry to Papeete and fly out from there.\"\n\nIn that moment, the mood changed; almost to one of panic.\n\n\"What happened? Is anything wrong? Is everyone alright back home?\"\n\n\"Everyone's fine. No, it's nothing like that.\"\n\nHer voice was quivering and she was starting to tear up in a way I'd never seen her do before. I was starting to feel a bit emotional about the prospect of losing her myself.\n\n\"Clearly this has been a big decision for you. Do you want to talk me through what's behind it?\"\n\n\"Ned, I've practiced this speech in my head a hundred times, but it's still going to come out a jumble of crazy thoughts. I suppose you'd call it an epiphany. \n\nI've fallen in love. Deeply in love. The sort of love that makes you want to have it forever. I'm in love with you, with Amy and with Ellen; with the whole incestuous family thing we've got going here. I'm in love with the feeling of being in love.\n\nThat's caused this maternal instinct to explode inside my head. It's made me realise I want to settle down; to have a husband and children and the whole domestic thing. I'm thirty and not getting any younger.\n\nIf I thought I could somehow bubble wrap what we've got going here, add children to it and make it last forever, even when the trip is over and we've all retired to the shore, I'd be more than willing to commit myself to it. If I thought I could just keep you as my husband when we get ashore, I'd grab that too.\n\nYou've made me want to have children. And if those children turned out like you, if they were your children, I couldn't think of anything nicer. I've even toyed with going off the pill and getting pregnant to you without telling you; that's how strong my feeling are. Although I wouldn't actually do that.\n\nBut none of that's going to happen. Real life doesn't work like life at sea on a yacht. To think I can make anything like that work once we get ashore is just crazy thinking. Even if you were willing to marry me and have children with me, they'd have a father who was twice the age of their mother. We always said this was an arrangement for the duration of the trip. We always knew it couldn't go on.\n\nSo what it comes down to is that the very thing that has triggered all these feelings, the love, the intimacy and the sex are basically what's forcing me to realise I have to give it up.\n\nI know I could just see out another year of this bliss and then go home; but I'd be a year older. My biological clock has suddenly started ticking and I can't make it go away.\n\nI'm not stupid. I don't expect to go home, instantly find the man of my dreams and have a child to him. I wish it could happen, but that's not the way life works. It will take time. But every year I spend out here is a year gone, another group of men committed to another woman. I feel like I'm in a race and I'm already starting at the back of the grid.\n\nI hate it. I hate giving up what I have here. I hate giving up your love. I hate giving up the sex. I hate giving up the whole family thing we have on the boat. I'm going to curl up and die the day I leave.\n\nBut I have to. I need to get out on the race track and start competing. It scares me; scares me witless. But it's not going to go away. You know me. When I'm faced with something, I don't ignore it or put it off. I face it, confront it and deal with it. And deep in my heart I know I have to deal with this earlier rather than later.\"\n\nAs she'd been talking Issie had lifted her head off my chest to let her look down at my face. Tears had been streaming out of her eyes and landing on my own cheeks. Now her eyes were burrowing deeply into mine, looking, waiting, for my reaction.\n\nBut I was left speechless; confounded and overwhelmed by a sense of impending loss. Issie might not have been the most attractive of the three, but she was the one I was closest to. More than the others, she was the one I confided in and shared my innermost secrets with. Because of her forthrightness and forcefulness, she was also the one I had almost ceded control of the boat to. She instigated most actions on the boat and was the one who most influenced decisions. I had almost become lazy about such things in her presence.\n\nI had no entitlement to be righteous or hurt about it. She wasn't betraying us and clearly was feeling as much a sense of loss and regret as I was. And while selfishly I might want to talk her out of it; that's all it was - selfish. What she was saying was rational. In a way it was consistent with what I had always told the girls - look to the future and recognise that, as much as our love is real, the rest of your life lies elsewhere.\n\nI almost felt like telling her I'd father her a baby and marry her if she wanted. But that wasn't really in her best interest. It was clinging to what I had. She was a quality catch in the meat market of life. She could do much better than an old fart twice her age and I owed it to her to release her to find that. But the words that would both properly reflect my grief at the prospect of losing her, while not selfishly tempting her into staying were refusing to form on my lips.\n\nOnly the tears welling in my own eyes gave her an immediate insight into my feelings and I just hoped they were enough to bridge the time gap before my brain could formulate the right response.\n\n\"Issie, I'm dying inside the hear that. It will kill me to lose you as much as it pains you. You're my special girl. You always have been even before this got so intense.\n\nBut what you're doing is exactly what I've always said you should. Look to the future. I'm so pleased you want to be a mother. You're going to make a great one. I so hope it works for you.\"\n\nMy voice was breaking up. This couldn't be a long speech.\n\n\"It would just be selfishness if I was to even try and talk you out of it. I'm not going to do it even though I want to. But know I love you and always will.\"\n\nIssie dissolved into heaving, sobbing tears and collapsed onto my chest as I failed to hold back my own grief. We lay there silently for an hour; not wanting to discuss the details until we found more courage to confront the situation. It was only the sound of the others arriving in the RIB that made us get up.\n\nAmy and Ellen took one look at us both as they came aboard and wanted to know what had happened; thinking only a death could cause such misery. Soon we were all crying as they alternately hugged Issie and sat there wallowing in their emotional pain. Bit by bit the details started to emerge. There was a ferry in a week that linked with a plane out. Issie hadn't yet booked, but seats were available and she was determined to be on it.\n\nThey begged Issie not to go. They looked to me to do the same; leaving me to explain why I shouldn't and wondering if they'd ever forgive me. But her mind was set. They should have known Issie better. Dinner that night was eaten in a mournful silence. There was no sulking with Issie. Periodically one of them would put her hand over Issie's and just look into her eyes as if that would somehow change everything. Then tears would fill both their eyes and the group would descend into silence again.\n\nSomewhere during the evening Amy and Ellen said Issie would get me to herself every night until she left; a parting gift of intimacy and sex.\n\nSo it was that we bunked down together that night; for one of the few times in months I had only a single woman to share it with. I was uncertain what Issie would want. Did she want to start the emotional divorce? To ease herself out of it instead of going cold turkey in a week?\n\nIt was the opposite. Issie wanted sex before we fell asleep, during the night and in the morning. The sort of intimate, high contact sex that had preceded the talk that got us here. It was beautiful sex; meaningful, moving and with a sort of connection that one rarely feels in life. Orgasm counts ceased to matter; the human contact was everything.\n\nIn the early days of our sexual relationship Issie had wanted to sleep with me penetrated in her. It was something we'd mastered, but was always limited by how long you could sleep in one position; and occasionally brought to an end by a wet dream on my part. At the time I'd thought of it as something that was trying to lay a claim on me; mark me with her scent and impregnate me with her couplins. And it probably was.\n\nNow she wanted to do it again. But this time was clearly all about intimacy. More intimacy, closer and more intense intimacy. For most of that week we'd have sex before we went to sleep and an hour later I'd be awoken as my night erection was introduced into her body. We'd drift off to sleep in each other's embrace, intimately joined through our sexual organs. Somewhere we'd separate. I'd wake up, maybe having turned over and have her snuggled into my back with an arm around me. She'd sense my wakefulness and tease me into sex again. We'd fall asleep, she swallow my night erection into her body again. In the morning she'd seek sex; sometimes a second time.\n\nIf I woke to a wet dream, which I did twice while asleep and penetrated into her, she'd tell me she'd climaxed too.\n\nGive or take a bit, that was the week that passed all too quickly. It was like our bodies were joined. Far from preparing ourselves for our separation, my body started to yearn for her; become addicted. This wasn't going to be easy.\n\nThe day arrived and we all travelled into town to deliver her to the ferry. The tears flowed freely. Issie, Amy, Ellen and me all had no inhibitions about it. As it pulled away Issie reach a hand over the rail of the ferry holding mine until it was a case of let go or be dragged into the water.\n\nShe was gone. It was over. Yes, there'd be letters, messages and even some skype. But that's not the same as having the person. I just hoped she found what she wanted. She deserved it.\n\nAmy and Ellen had backed off the sex during that last week; leaving me to Issie. But we hadn't been back on the yacht for an hour before the comforting arms had become a comforting intimacy. An intense sexual intimacy as if that could somehow take the pain away. It didn't. It took a lot more episodes of intimacy before it faded; as if our new constituted family need to rebind through sex and lots of it before a new equilibrium could be reached. Like was the case with Issie, it wasn't the high activity multiple orgasm sex, it was sex with lot of body contact, hugging and cuddling.\n\nIndeed maybe for the first time I felt we shared real threesomes - instead of what I normally thought of as sequential pairs with a watcher - as the three of us cuddled into a single ball and my shaft moved back and forwards between each of their sexes with nothing more than a 30 degree turn of my body.\n\nBut we got there. By the end of a week we were no longer going around with long faces. There was still a sense of deep loss but a joyfulness returned to the boat which had been missing during that week. We'd managed to exchange happy memories for a fear of the future.\n\nBut I think we also came away feeling closer to each other than we were before. That was nice.\n\nThe happiest - no let me reword that - the logically best outcome for Issie might well have been for us never to see her again. Or if we did for us to fly to Italy for the christening of her first baby. But that's not how it worked out. A year later, and after the yacht was back in Australia, Issie came back into our lives. But that's a whole different story."
    ],
    "authorname": "Joanmcarthy",
    "tags": [
        "threesome",
        "threeway",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/unexpected-threesome-ch-15"
}