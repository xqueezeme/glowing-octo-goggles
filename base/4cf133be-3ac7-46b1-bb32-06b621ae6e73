{
    "title": "Life is a Soap Opera Act 02",
    "pages": [
        "This is the second part of Gabriel and Bailey's tale. If you haven't read the first part, you might want to check it out. As with the first part, there is more romance than sex, so if you're looking to get off quickly, this is the wrong story for you. Enjoy!\n\n*************** \n\nAndy woke up on Saturday morning promptly at six o'clock. He had never needed an alarm clock. Rolling out of bed, he threw on a pair of jeans and a t-shirt then went outside to feed the animals. He played fetch for a little while with Bucky, the family's black lab.\n\nWhen he smelled bacon, he went inside. Joanne was in the kitchen. He walked up behind her and grabbed a handful of her backside. She playfully swatted his hands away and prepared two plates.\n\nHe poured a glass of milk for himself and orange juice for his wife. After nineteen years of marriage, they had their morning ballet down to a fine art.\n\nThey sat next to each other on the benches that lined the table in the kitchen. This was their time. Ordinarily, on a Saturday morning, the twins and any number of their friends would be sleeping over. Being teenagers, they usually stayed up late and slept in. During the week, he would have left for the shop by now and Joanne would be going to work.\n\nBut not on Saturdays.\n\nLater in the morning, the family would all do their usual chores, whether it was cleaning the house, caring for the animals, tending the garden or doing yardwork. Then they'd have dinner together before the girls inevitably went off to do something with their friends.\n\nThey had a comfortable routine. And it was coming to an end.\n\nA part of him felt a little bitter. After all, these were his girls. They were his life. Everything he did&mdash;good, bad or indifferent&mdash;was all for them. They were his pride and joy.\n\nDespite the times when he didn't like them very much or when they made typical boneheaded teenage decisions, he loved them more than anything. They had him wrapped around their pretty little fingers, and he knew it. But he would have it no other way.\n\nNow it seemed that they were moving on. Or at least taking their first steps. He knew this day was coming. He had prepared himself for when they would leave and never come back to live under his roof. He even looked forward to it.\n\nBut it just seemed too soon.\n\nWhen they were at Gabriel's, everything they talked about made sense. He didn't like the idea of the girls driving into town every day at seven in the morning, going to school, working and then coming home, some nights after dark. As any father did, he feared for their safety. He worried about the times when they were out of his sight.\n\nTo him, they were always four years old, their hair up in pig tails, running around the yard in their Easter dresses. Or they were the newborns he rocked to sleep at night after being born in this very house. He never thought of them as young women.\n\nBut that's what they were now. And he had to accept it. He didn't have to like it, but he had to live with it.\n\nHe knew that an hour on the road each way wasn't good. Nor was it cheap. If he could afford to buy them new cars that got better gas mileage and he knew weren't going to break down, he would have. If he could rent an apartment in town, they could live some place safe, but he and Joanne simply didn't have the money.\n\nGabriel MacKenzie did. Try as he might, Andy couldn't bring himself to dislike Gabe. He was polite and kind. He was smart, handsome and financially secure. He was also only four years younger than Andy. And he was pursuing his daughter.\n\nStill, Bailey could do worse. Like that Mahoney kid who kept calling. Seedy, unkempt and rude, the only other prospect in Bailey's life was definitely not the kind of boy a father wanted for his daughter.\n\n\"It's not like they're leaving for good,\" Joanne interrupted his reverie. She had always been adept at reading his mind.\n\n\"I know,\" he said softly. \"I just didn't expect it to be like this...\"\n\n\"Like what?\"\n\n\"Them moving in with some guy.\"\n\n\"He's not 'some guy',\" Joanne snorted. \"Gabriel is the kind of man who comes along once in a blue moon. And you know it.\"\n\nAndy knew she was right. Part of him was jealous of Gabriel. He seemed to be everything Andy wasn't: rich, good-looking, with a big house and a job that wasn't dirty.\n\n\"You don't like that there's another man in Bailey's life,\" Joanne got straight to the heart of the matter.\n\n\"It's not that. I just&mdash;\"\n\n\"Bullshit.\" Every now and then, people need a verbal smacking around. Andy knew he was due. And he knew whenever it was his wife doing the talking, she was always right. \"You don't like that Bailey has someone in her life and you're afraid that she won't need you anymore. It's okay to feel that way. But you know what? No one else will teach her to hunt or take her out for her first four-wheeler ride. And no one else will let her dance on his toes and carry her around on his shoulders. Because that was you. You're always going to be her daddy. And both of the girls are going to love you like no one else.\"\n\n\"I just didn't think I'd have to let go so soon.\"\n\nJoanne's eyes softened and she smiled wistfully. \"That's the point of raising kids, Andy. We did a good job. They're smart and hard-working. They're going to college and with a little bit of luck they'll be able to make a better life for themselves than we could give them.\"\n\n\"Couldn't she wait until she was older before she got serious about a guy? And why Gabriel? Why would he be her first serious boyfriend?\"\n\n\"How old do you want her to be?\"\n\n\"Thirty?\"\n\nJoanne, pushed their plates back. \"Bailey is her Daddy's girl. When all those other boys were calling April, you were the one who took her out for dinner and over to Billy Bob's for miniature golf. Do you remember when April had her first date? You and Bailey spent all night changing the oil and rotating the tires on that old Buick. You've always been the man in her life because ... well, because all the other boys were chasing April.\"\n\nShe took her husband's shaking hands in her own.\n\n\"You're not losing her, Andy. Look at me. She's always deserved better than any of the boys around here and you know it. It's okay for you to not like Gabriel. That's what daddies do.\"\n\n\"It's not that I dislike him...\"\n\n\"I know, honey.\" She put her arms around him. \"Does this ring a bell: Once upon a time, there was a shy girl who lived on Parsons Street. When she was a sophomore in high school, a boy started calling on her. He was a senior and drove a '73 Camaro that was too fast and too pretty for her daddy's liking. His hair was too long and he didn't say 'sir' or 'ma'am' and his grades weren't very good. The first time he came to pick her up, the girl's father was cleaning his .30-06 in the living room. But that didn't stop the boy. He swept the girl off her feet and they fell in love, even though he knew he wasn't good enough for her daddy. Does that sound familiar?\"\n\nAndy smile ruefully.\n\n\"They're going to be okay,\" Joanne said, kissing him on the cheek. \"Even if Gabriel and Bailey don't work out, they're always going to be our girls. No one who comes by to take them out will ever be good enough for you. But you know what? My Daddy came around. And so will you.\"\n\n\"I know,\" he wiped his eyes and squeezed his wife. He gave her a loving kiss. \"My little girl just had better not come home knocked up. You know I'm a better shot than your father.\"\n\nThey both laughed and held on to one another. Everything was going to be all right.\n\n\"Want to go for a ride in the Camaro?\" he asked, forcing a smile.\n\n\"Not a chance, Big Boy,\" Joanne retorted. \"I'm not limber enough to work around the shifter anymore!\"\n\nShe let out a surprised yelp when Andy scooped her up in his arms and carried her to their bedroom. A long time ago, it had been his parents's room. It was where the girls were born and before that, on a night when his folks were out to dinner, it was where the twins had been conceived.\n\n************* \n\nA little while later, the four girls showed up after spending the night at Morgan's. April and Morgan were in the used Oldsmobile Andy had bought for the twins to share. Bailey and Kimmy were riding in Gabriel's expensive Lexus sedan. Andy had to suppress his envy, but he appreciated how generous Gabe was with is home and his things.\n\nThe foursome piled into the house and began going through April and Bailey's room. They packed up boxes of clothes and much to their father's delight, left many of their personal things in their room. He didn't want them suddenly and totally moving out.\n\nJoanne squeezed his hand, knowing how hard it was for him to watch his daughters taking some of their things away.\n\n\"Gabe invited everyone up to his house for dinner,\" Bailey gave her dad a hug. He found that he didn't want to let go. \"He wants to talk to everyone and their parents. And I think he wants Mom to cook.\"\n\nAndy looked a little surprised.\n\n\"He says he doesn't know his way around the kitchen,\" she shrugged.\n\n\"Then it's a good thing you'll be around to fatten him up a little,\" April teased and Andy couldn't help but frown.\n\nAfter packing up their things, the girls were back in the cars and headed over to Kimmy's to get her things as well.\n\nLater in the afternoon, Joanne coaxed him out of his funk and they drove up to Gabriel's house along with Morgan's parents. They talked idly. All four were happy for the opportunity Gabriel was offering. Even together, they couldn't afford to pay market value on any apartment or house that was even remotely close to being clean and safe. And here the teenagers were: moving into four thousand square foot house in a gated community that was worth more than all of their property put together.\n\nThe girls had already arrived. They were getting settled in. Even though he had been there before, there were parts of the house Andy hadn't seen. Bailey took him by the hand and gave him the grand tour of everything except for Gabriel's room and the master suite. He truly was amazed at how some people lived, and he was a little ashamed that he couldn't give that to his daughters.\n\nJoanne and the other moms were in the kitchen preparing dinner. After being given a list, Gabe had dutifully gone to the store and filled his pantry with groceries. The girls were upstairs claiming their rooms and moving in. The men were downstairs, watching TV and talking.\n\nTo no one's surprise, Gabriel was the perfect host. He had a healthy stock of beer in the fridge, a nice selection of wines but also soft drinks and bottled water around. His house was immaculately clean, unlike what Andy expected out of a bachelor pad.\n\nHis exercise equipment was broken-in but also well-maintained. His landscaping was the envy of the neighbourhood. More amazing, he did all the work himself. Of course, he had been off work for over a year so it wasn't like he didn't have any free time.\n\nAndy and the other girls's fathers started talking NASCAR. Gabe only knew a little about racing, but when the conversation turned to football, he jumped right in. Being a Steelers fan knocked him down a peg or two in Andy's book, but he couldn't fault anyone rooting for their home town team. For someone who didn't have a job doing \"real\" work, Gabriel managed to impress Andy with the depth of his knowledge on a variety of subjects, but also in his willingness to defer to other people's expertise instead of making up bullshit trying to impress them.\n\nWhat truly won Bailey's father over was the vintage car in the garage. On top of his Lexus, Gabe kept up a BMW 3-series coupe that had belonged to his mother, but his pride and joy was a 1970 Buick Skylark GS 455 convertible. It was candy apple red with a black top and racing stripe. Covered in chrome and obviously hand-polished, it looked fast just sitting in the garage. It wasn't the car itself that Andy appreciated, it was how the car was cared for.\n\nAndy believed that you can tell a lot about a person in the way they take care of the things that are important to them. His own shop was spotlessly clean, the tools meticulously maintained and cleaned. Andy watched out for the men and woman who worked for him and was rewarded with loyal people surrounding him and a well-deserved reputation for good work and reliable service.\n\nAs he looked around Gabriel's house, he saw things that were in their place. Gabriel paid a handsome price for high-quality tools and fixtures, but also did his best to keep everything in good, working order. In listening to the way Bailey&mdash;and more importantly, April&mdash;talked about Gabriel, Andy realised that his daughter would always be put first and would be treated well. As the four men talked muscle cars for a while, Andy recognised that of all the boys to show an interest in his girls, Gabe was the best he could hope for.\n\nThe age difference bothered him a little, but the double standard of older men with younger women soon rendered that a non-issue. He saw that Gabe would never do anything to hurt Bailey, even if they broke up. He appreciated the other man's generally positive outlook on life and that he had made something of himself. In getting to know Gabriel, Andy found out that his family had never been wealthy and that he and his brother both had to earn everything they had gotten. And that counted for a lot in their town.\n\nA little while later, dinner was ready and the thirteen of them sat down to eat. There weren't enough seats in the dining room, so some people spilled over into the living room. Andy and Joanne ate with Gabriel, who was full of show business stories, often involving his brushes with more famous actors or bloopers from the TV shows he had been on.\n\nWhen the meal was done, Gabriel wanted to talk to everyone. Along with the parents, Gabriel laid out some common sense rules for living in his house and he even had a rental agreement that would protect him (and the girls) for the rest of the school year. They talked about expectations and responsibilities. The bills were divided and a due date established for the rent.\n\nThroughout the night, Andy was both impressed and relieved at how mature his girls had become. Somehow, a few of the lessons he and Joanne tried to teach them had sunk in.\n\nHe was also relieved to know that Gabriel wouldn't be there for much of the time. His job in New York combined with some other jobs his agent had found would take him away. Andy didn't want Gabriel and Bailey moving too fast, and he certainly didn't want people to think that she was \"shacking up\" with a guy twice her age.\n\nWhen the evening was over, the misgivings Andy had before were almost gone. He was saddened by his girls moving out&mdash;even part time&mdash;but he knew that it was the best thing for everyone. They promised to come home on the weekends, for a good Sunday dinner if nothing else. Gabriel was getting house-sitters and the girls were getting a nice safe place to live and the parents were getting a little piece of mind.\n\nJoanne held his hand for the entire ride home. None of the adults spoke as they realised that their daughters had just moved out of the house.\n\nThat night as he fell asleep, Andy was unsure if he liked the silence that had come over his home.\n\n******************* \n\n\"Do you really have to go?\" Bailey asked, snuggling up to Gabe.\n\n\"I'm afraid so,\" he replied. They sat on the couch watching the beginning of the Fontana race and the Sunday night football game on the split screens. With Monday being a holiday, the other girls were out on the town.\n\nApril, Kimmy and Morgan had invited Gabe and Bailey to come along, but they declined. Partly because they wanted some time alone. And partly because at heart, they were both homebodies.\n\n\"Work calls,\" he said, kissing the top of her head.\n\n\"I'm going to miss you,\" she said softly.\n\n\"Let's not talk about that now,\" Gabe said firmly. He had an early flight on Wednesday morning. She would be in class or at work most of the day on Tuesday and they had promised to drive out to her parents's house on Monday for a Labor Day cookout. They knew they only had a little bit more time together and they wanted to make the most of it.\n\nThey sat in silence for a little while longer. The night before was torture for Bailey. Though they were under the same roof, he was downstairs in his bed and she was upstairs in the bedroom she shared with her sister. She and April had been roommates since ... well, their conception ... and had on occasion shared a bed, especially during particularly nasty thunderstorms.\n\nAs much as she loved her sister, April was no substitute for Gabe. Bailey craved the feel of his arms around her. Not for the sexual feelings he stirred within her, but for the comfort and safety she felt when they were together. She missed cuddling up with him and listening to his rhythmic breathing and the gentle beating of his heart.\n\n\"I want you to do something for me while I'm gone,\" Gabe said.\n\n\"Like what?\"\n\nHe tapped her on the shoulder and she sat up. He went into his bedroom and came out a minute later carrying an envelope. She took his hand as he led her to the master bedroom.\n\nIt was neatly made up. It was more than clean; it was sterile. As if no one had been in it for a long time. In the center of the room was a hospital bed with a plush chair and ottoman beside it. Bailey could imagine Gabriel sleeping in the chair next to his mother's bed as he cared for her.\n\nUnconsciously, he stopped at the doorway. Taking a deep breath, Gabriel stepped in. She dutifully followed.\n\nGabe handed her the envelope.\n\n\"There's a thousand dollars in there,\" he said quietly. \"I want you and the girls to remodel this room.\"\n\n\"Why?\" Bailey asked.\n\n\"Because I can't do it,\" Gabe replied. \"I can't stand to change anything about this room. But I know I have to. This was Mom's house ... and now she's gone. I can't ... I need to move on. I've changed a lot of things around the house, but this room ... her room ... I just don't have it in me.\"\n\n\"What do you want us to do?\"\n\n\"I want you all to make it into a bedroom I won't be afraid to move in to.\" Bailey wrapped her fingers around his as he spoke. \"Put the pictures and other sentimental stuff in the spare room upstairs but everything else can go. Give it to Goodwill, send it to your folks ... I don't care. When I come in here, all I can see is Mom lying in the bed with the paramedics trying to revive her ... I have lots of good memories of this house. Like the party last month. Mom would have loved to be there. She'd have liked you. I want to keep those, but forget all the bad ones.\"\n\n\"Okay,\" she whispered. Bailey pulled him close. They stood there sharing the maudlin moment.\n\nThen she tugged at his hand and led him back through the living room to his bedroom. In the back of her mind, Bailey had already decided that she was going to spend the next three nights in Gabriel's arms. She would have plenty of opportunities to be by herself over the next few months and she wasn't about to waste what precious little time they had left together.\n\nThe only question was how far she was willing to go before Gabe went back to New York.\n\nThey left the lights on in the foyer for when the other girls came home. She threw her arms around him and they held each other. His touch was comforting, even though she felt she should be comforting him.\n\nHe leaned in to kiss her, but she pulled back.\n\n\"Can I spend the night with you?\" she whispered.\n\n\"Of course,\" he said.\n\n\"I'm going to go change,\" Bailey said as she slipped out of his arms. \"I'll be right back.\"\n\nShe bounded up the steps and went to her room. Sifting through the dresser, she put on a pair of short silk pajama bottoms and threw on a matching button-down top. She left her bra and panties on and pulled her hair back into a pony tail. She brushed her teeth then went back downstairs.",
        "Gabe had also changed. He was wearing an old t-shirt and his familiar pair of workout shorts. Bailey blushed as he devoured her with his eyes. She turned out the lights and closed the door.\n\nBailey stepped into his arms and they kissed tenderly. Candles were lit on the nightstands next to the bed.\n\nHis hands went to the small of her back and his lips lingered on hers.\n\nShe giggled, breaking the tension.\n\n\"What?\" Gabe said, perplexed.\n\n\"You're so cute when you're obviously frustrated.\"\n\n\"What do you mean?\"\n\n\"I know you want to grab my ass,\" Bailey said, biting his earlobe. \"And I know you want to feel my tits. It's okay ... I want you to.\"\n\nShe pressed her body against him. Her belly brushed against the bulge in his shorts and the tingle started between her legs.\n\n\"I don't want to rush you,\" he said softly. \"I don't want to rush us.\"\n\nBailey smiled inwardly and kissed Gabriel long and hard. Bailey knew she was glowing. She licked her lips, \"You don't know how much that means to me.\"\n\n\"And when you do that&mdash;\" he said as Bailey sucked on the side of his neck \"&mdash;It makes me want to rape you.\"\n\n\"It wouldn't be rape.\" Her voice was so soft she wasn't quite sure she had said the words.\n\nHis nose brushed hers. She could feel his breath on her lips. Bailey knew she had to do something to keep from mauling him right there.\n\n\"Lay down on the bed,\" she instructed. \"Face down.\"\n\nGabe reluctantly complied. She straddled his cute little butt and bent over to kiss the back of his neck. His skin erupted in goosebumps. Her breasts mashed flat against his back as she nibbled her way over to his ear.\n\n\"It's going to kill me when you leave on Wednesday,\" she said softly. \"I love the way you hold me. I love the way you kiss me. I love that you've never tried to rush me into the sack.\"\n\n\"You don't know how hard that's been,\" he said, his voice slightly muffled by the pillow.\n\nBailey giggled. It was hard on her, too. She kissed the nape of his neck one more time, then took a deep breath. \"Gabe, I don't want to make love before you leave. It's not that I don't want to ... because I do! But I want it to be right. I want it to be the right time. And I want to know that you're The One.\"\n\nShe lifted her hips as Gabe rolled over on his back. His cock was hard and she settled down on top of him. He looked her in the eyes. \"I want you, Bailey. But I'll wait as long as you want to. We can do as much, or as little, as you want and I'll be okay with that. I love waking up with you; that's what I'm going to miss the most when I'm away.\"\n\nLeaning over, Bailey kissed Gabe, \"Just because we're not going to be making love doesn't mean we can't do other things.\"\n\n\"What other things do you want to do?\" he asked with a mischievous smirk.\n\n\"Let's start with you feeling my tits again.\" Bailey thrust her chest into his waiting hands. She gasped at his strong touch. \"Unbutton me.\"\n\nEver so gently, Gabe opened her top as if it were a delicate Christmas present. She rolled her shoulders and silk blouse fell away.\n\nAs Bailey leaned forward, she pulled Gabe's head toward her chest. He buried his face between her cleavage. She moaned softly as he kissed and nibbled her skin.\n\nHer fingernails dug into his scalp. She almost creamed her panties right there. His hands brushed her bare shoulders for the first time.\n\nGabe's fingertips caressed her gently, causing her hairs to stand up on end. Shivers ran the length of her body.\n\nShe hated to, but she pulled her chest away from Gabriel's eager mouth. Her hands tugged at his shirt. He lifted up off the bed just enough to pull the t-shirt over his head, then flung it across the room.\n\n\"Open me up,\" she whispered.\n\nWith a deft touch, Gabe's hands went to her back. With one apparently well-practiced motion, the clasp sprung open and her breasts seemed to explode out of her bra.\n\nHungrily, Gabe suckled on her nipples. She cried out with pleasure.\n\nHis teeth dug into her skin. His hands cupped her breasts.\n\n\"Oh, jesus, Gabe!\" Her hands wrapped around his head and she pulled him to her. Their hips started to grind together.\n\nBailey had never known such bliss. In her wildest imagination, it was never this good.\n\nHe alternated between her nipples, taking great care to appreciate the rest of her breasts as well.\n\nHer body jerked wildly every time he licked her areole. It was as if he had hooked up a wire between her breasts that went straight to her pussy.\n\nShe was soaked. She never lost consciousness of the cock that was pressing between her legs.\n\nThe room started to spin as Gabriel sucked harder. His firm hands cupped her tits and also her ass.\n\nBailey's body was transformed into a lightning rod that absorbed pleasure. It shook her from head to toe.\n\nWhen she could take it no more, Bailey began to buck her hips against him. He met her thrusts with equal enthusiasm.\n\n\"Oh, god!\" she screamed. Bailey began to hyperventilate.\n\nShe felt lightheaded.\n\nGabe squeezed a little harder. He sucked a little faster. His teeth seemed a little sharper.\n\nAll the while, Bailey dry-fucked him until she came. In one big, earth-shattering orgasm.\n\nBabbling incoherently, she was reduced to a writhing mass of flesh. Her body pressed against him. Her skin was covered in sweat.\n\nHe rode out her orgasm, bringing her down slowly. But he never stopped moving.\n\nEven as she collapsed on top of him, Gabe's hands massaged her breasts. They ran the length of her shoulders and down her arms. He breathed gently in her ear.\n\nShe didn't black out, but it took a long while to come down. Into Gabriel's loving embrace.\n\nThey cuddled for a long time, neither one speaking.\n\nIt felt so good to feel his skin against hers. It felt so natural.\n\nHer fingernails raked his chest causing his nipples to harden. His arm was draped around her shoulder. His other hand took hers.\n\n\"How are we going to give this up?\" Bailey wondered.\n\n\"Who says we have to give it up?\" Gabe asked.\n\n\"I don't know if I can stand not being with you every night.\"\n\n\"After you hear my teeth grinding, you might want to sleep in another room,\" he teased.\n\nBailey looked up at Gabe in the flickering candle light.\n\n\"I can't believe you think I'm pretty,\" she said softly.\n\n\"I don't think you're pretty,\" Gabe looked back at her lovingly. \"I think you're beautiful.\"\n\n\"Why?\" Bailey whispered.\n\n\"Because you are.\" His hand went to her chin and he drew her lips to his.\n\n\"Even if I'm fat and dumpy?\"\n\n\"Stop that, Bailey,\" his voice was stern.\n\n\"Mom says you must like girls with a little bit of meat on their bones.\"\n\n\"I like girls who look like God made them to look,\" Gabe said firmly. \"Do you feel fat?\"\n\nShe nodded fearfully.\n\n\"Then what are you going to do about it?\"\n\n\"I&mdash;\" She stopped, unsure of where this was going.\n\nGabe took a deep breath. \"Here's the thing, Bailey ... and I'm sorry if this comes out the wrong way. I don't do pity and I don't like it when people feel sorry for themselves. Maybe it's the guy in me. If you're unhappy about something, either do something to fix it or shut up.\"\n\nBailey was a little taken aback by his words.\n\n\"Get up,\" Gabe said as he pushed Bailey back. He took her by the hand and they climbed out of the bed. Leading her across the room, he stood her in front of the mirror on the back of the door to the bathroom. Her hands instinctively went to cover her belly.\n\nStanding behind her, Gabe took her arms and pulled them down to her side.\n\n\"I love your body,\" he whispered in her ear. In the dim light all she could see was the pooch on her belly. \"I think you are sexy and beautiful. I love your curves. I love how soft your skin is. I love feeling you against me.\"\n\n\"You don't think I'm tubby?\" Her eyes flicked up and met his in the mirror. She could see the desire in his gaze.\n\n\"I think that everyone was made to look a certain way,\" Gabe said. \"I don't believe in fad diets or pills, and I don't believe in plastic surgery. I think that if someone eats a reasonably balanced diet of moderate portions and does a fair amount of exercise, they will look the way God intended them to look. Some people are skinny and other people aren't. That's the way we were made.\"\n\nShe had to remind herself to breathe. As Gabe spoke, she saw that he really didn't care if she thought she was fat or not. He wanted her anyway.\n\n\"If you don't like this,\" his hand went to her belly. \"Then get on the Bowflex three times a week for half an hour. Or do thirty minutes on the treadmill. Or join one of the adult soccer leagues here in town. But I want you to know this, Bailey: You shouldn't do it for me. You shouldn't do it because you're afraid of the way other people look at you. Do it for yourself. You'll feel better. You'll be stronger and have more energy. This country isn't overrun with diabetics because of genetics; it's because there are lots of fat, lazy people who won't quit smoking, eat too much junk food and don't exercise.\"\n\nBailey brushed the tears out of her eyes.\n\n\"Can I tell you about one of my fantasies?\" Gabe kissed her on the side of the neck. She had to bite her lip to keep from crying out. \"This may be getting way ahead of where we are right now, but ... I think about you and I making love. You're laying on your back...\"\n\nShe rolled her head to the side as he kissed his way down to her shoulder.\n\n\" ... I enter you...\"\n\nA gasp escaped her lips.\n\n\" ... You want to kiss me, but you can't...\"\n\nHe reached around and cupped her heavy breasts in his hands.\n\n\" ... Your hands try to pull me down to you...\"\n\nShe could feel his cock pressing between the cheeks of her ass.\n\n\" ... But your belly is in the way...\"\n\nGabe caressed her stomach.\n\n\" ... Because it's full with our baby...\"\n\nA shiver ran down her spine.\n\n\" ... Your breasts are big and swollen...\"\n\nBailey couldn't help it. She cried out. In her own mind, she had nearly this exact same desire.\n\n\" ... We make love long and slow,\" he whispered, biting gently on her ear. \"That's what I want, Bailey. I want you big and fat with our child. If you're happy and healthy, I don't care how you think you look. You'll always be beautiful to me, sweetheart.\"\n\nShe turned and wrapped her arms around him. She started to cry softly. They were tears of joy. Knowing that Gabriel would accept her for who she was. Not how she thought she looked.\n\n\"Stop crying, Bailey,\" he said with a slight laugh. \"Crying girls make me horny.\"\n\nShe pinched him a couple times. Then once more for good measure. Bailey let Gabriel lead her back to the bed.\n\n\"I'm sorry if I freaked you out just now,\" he said as they settled under the sheets. Neither had put their tops back on.\n\n\"Don't be,\" she said, wanting to take the rest of their clothes off. But her considerable willpower asserted itself. \"I like the thought of having your baby, Gabe. I also like that you would want me to mother your child.\"\n\n\"Let's not get too far ahead of ourselves,\" he replied and she knew that his level head was an asset to them as a couple. \"We've got a ways to go between where we are now and us having a child. That's just a fantasy and sometimes, fantasies are better left unfulfilled.\"\n\n\"What do you mean?\"\n\n\"I also have this fantasy about you dressed up as Lynda Carter and making out with Gabrielle Union ... Hey! No tickling!\"\n\nThe pair of them wrestled around on the bed for a while, laughing and playing. She wasn't stronger than he, but Gabe let her win anyway. It devolved into a kissing and grope session with her laying on top of him. Bailey found that she liked the way Gabe touched her, even when he was stealing a feel or smacking her across the backside.\n\nThey lay there for a long while, holding one another in the candlelight.\n\n\"I want you to promise me something, Bailey,\" Gabe said, his voice suddenly serious.\n\n\"What?\"\n\n\"If you meet someone at college ... and you hit it off with him,\" his voice got soft. \"I want you to ... you know ... I don't want you to think that you have to wait around for me.\"\n\n\"What's that supposed to mean?\" she asked, a little perplexed and also a little angry.\n\n\"I'm your father's age,\" he said.\n\n\"Oh, don't start that again,\" her voice hardened.\n\n\"What do you see in me, Bailey?\"\n\n\"I see someone I'm falling in love with.\" She lifted her head and kissed him. \"I'll make you a deal: I'll get over how fat I am if you'll get over how old you are.\"\n\n\"Oh, so I'm old now?\" The words were barely out of his mouth as Bailey assaulted him with a shower of tickles. She kissed him again.\n\n\"I don't care how old you are, Gabe. I'm not going to look for someone else because I've got you. I'm going to have that baby of yours,\" she vowed. \"You're not getting rid of me that easily.\"\n\nGabe smiled, resigning himself to the fate he had chosen. And the one she had chosen, too. Bailey knew that there was nothing orthodox about their relationship, but that didn't matter to her. She was following her heart, foolish or not. In his eyes, she saw that he knew it, too.\n\n\"You're thinking it, aren't you?\" she asked softly.\n\nHe only nodded.\n\n\"Say it.\"\n\nTaking a deep breath, Gabe closed his eyes. When he opened them, he smiled gently. His hand caressed her face.\n\n\"I love you, Bailey Crawford,\" he whispered.\n\nShe lost herself to his gaze. Leaning over to kiss him, she cupped his face. His arms wrapped around her and they held each other for the rest of the night.\n\n\"I love you, too, Gabriel MacKenzie.\"\n\n************* \n\nBailey was still asleep when Gabe left. He had an early flight and woke himself up early. He didn't bother to shower; he would clean up once he got back to New York. Instead he dressed quietly and gathered his things. \n\nGabe watched Bailey sleeping. She looked so content and beautiful. Her chest rose and fell with each breath. He brushed her hair out of her face and she smiled in her sleep. Pulling the sheet over her, Gabe kissed Bailey on the cheek and whispered, \"Good-bye, my love. Miss me.\"\n\nThe previous two days had passed too quickly for his liking. They spent Monday at her house for Labor Day. He got to know her parents a little better and did all the proper oohing and aahing over her dad's antique Camaro, which was almost show-quality. She had to go to class and work on Tuesday. He treated all four of his housemates to a nice dinner out then returned home and snuggled on the couch with Bailey.\n\nThey spent both nights together in his bed. Although they never went any further than heavy petting, the night before, instead of watching each other masturbate, they touched and explored one another's bodies until they both came. She was a quick learner and very sensual, things Gabriel appreciated and enjoyed.\n\nHe couldn't believe how good she made him feel. Since Jeannie moved out, Gabe felt old. He was divorced and in a rut. His mother's death left a void in his life that he was just now getting over.\n\nHis chance prom date changed all that. Bailey rejuvenated him. He remembered what it was like to be eighteen again. Instead of going through the motions every day, he seemed ready to jump back into life. Unfortunately, that meant he would be going back to New York while his lover stayed in his home.\n\nHe reasoned that it was a small price to pay, at least in the short term. He was getting back to something that he loved. And now that he had someone in his life to share that with, Gabe returned to work with a vigor and energy he hadn't felt in years. He just needed to find a way to maintain his budding relationship with Bailey over the long distance between his house and Central Park West.\n\nAs he retreated out of his bedroom, he set his iPod in the docking port on the clock radio. In a little while, it would rouse her to \"Leaving On a Jet Plane\" because he didn't want to say good-bye in person. He didn't know if he could stand to leave her if he had to look into her big brown eyes. Around the house he had left dozens of notes and cards for her to find over the next few weeks. Until they could see one another again.\n\nThe airport shuttle was waiting for him in the driveway. He got in and didn't dare look back.\n\n************** \n\n\"Hey, Lo, when's your girlfriend coming to visit?\"\n\nGabe only shrugged. Chuck laughed. Mitzi climbed up in his arms and cuddled up to her godfather. She immediately reached for one of the brownies on Gabe's plate.\n\n\"Only one, honey,\" Teri said in her \"mommy\" voice. \"You should invite her up for Thanksgiving.\"\n\n\"I'm thinking of going back to Mom's for Thanksgiving.\" Gabe slipped a second brownie into Mitzi's little three year-old hands. That was just one of the many reasons Chuck and Teri's kids adored him.\n\n\"What? And miss Big John trying to burn his house down again?\"\n\n\"I think I'd prefer to be five states away when he goes near the turkey fryer again, thank you.\" They three adults shared a hearty laugh. \n\n\"You should bring her here, Lo,\" Teri said, her voice getting serious. \"You haven't seen her in . . . what? Six weeks? Fly her up and show her the town.\"\n\n\"I don't think she's ever been on a plane before,\" Gabe said. \"Heck, I doubt she's even left her state.\"\n\n\"All the more reason to get her to come visit you,\" Teri insisted.\n\n\"I don't think she'd want to hang out all day while I'm at work.\"\n\n\"Now you're just making excuses,\" his friend said. \"Don't make me smack you around again.\"\n\nGabe sighed. Since returning to New York, he had thrown himself into a number of projects. He returned to The Sun Also Sets full-time. He also did a few weekend jaunts to conventions and some commercial or voice-over work on the side. He was reading for a new play that was in development and slated for the fast track to Broadway.\n\nNo matter what he was doing, though, there seemed to be an empty space in his life. And he knew what it was. He missed Bailey. Every now and then, he found himself thinking, \"Bailey would like that\" or \"I wish Bailey were here with me right now\", and Gabriel realised that a long-distance relationship was harder than he first thought.\n\nThey talked every day, usually in the evenings when they could use their free night and weekend minutes. She was working hard at school; community college often gets a bad rap, but it was still tougher than high school. In addition to her work-study job, Bailey picked up a couple of shifts as a waitress to make a little more money. She told Gabe that her parents were stretched pretty thin and any help the twins could provide would be immensely helpful.\n\nGabe thought about sending them some money, but decided against that; their family was too proud to accept anything resembling a handout. The girls were already living in his house and driving one of his cars for rent that was far less than he could have gotten at market value.\n\n\"I've got an idea,\" Teri said as Chuck came by to pick his daughter out of Gabe's arms to get her ready for bed. \"Here's what you're going to do . . .\"\n\n***************** \n\nThe butterflies in Bailey's stomach were working overtime. She tried to remember to chew her gum as the plane ascended. Her ears popped and she looked excitedly out the window as the ground receded. \n\nIn her hands, she clutched the letter Gabriel had sent her along with the plane ticket. It had some very specific instructions about what she needed to do and wear. Or not wear as the case may be.\n\nHer bosses had let her take off for a long weekend and she didn't have classes on Friday. April and Morgan had enviously driven her to the airport before returning to the house. Bailey was listening to the iPod Gabe left for her.\n\nThe flight was direct into JFK. After landing, Bailey's eyes were wide at the size and scope of the place. She was unused to the bustle of all the people. The sounds and constant motion were alien to her small-town experiences. The people were dispassionate and robotic. It was a far cry from the friendly and familiar setting of Washington County. She was both excited and a little bit scared at the same time.",
        "Following the signs, she picked up her suitcase and looked for the limo driver. He was holding a placard that read \"MacKenzie\" and he politely took her bookbag and luggage. Out on the curb, the driver put her things in the trunk of the Town Car and opened the back door for her.\n\nFriendly and professional, he gave Bailey the grand tour of New York, pointing out the sights to the obviously-overwhelmed young woman. The trip into Manhattan went by quickly.\n\nThe limo stopped near the Museum of Natural History at an upscale apartment building. A doorman helped the driver unload Bailey's bags. She offered to tip both, but they declined, saying it wasn't necessary.\n\n\"Miss Crawford, Mr. MacKenzie told me to give you this when you arrived,\" the doorman handed her an envelope. \"Would you like assistance with your bags?\"\n\n\"No, thank you.\"\n\nHe nodded and pointed down the hallway. \"Take the elevators to the fifth floor, then turn left and it will be the third door on the right.\"\n\n\"Thank you, Paul,\" she said reading his nametag.\n\n\"You're very welcome,\" he replied with a slight bow. \"And welcome to New York.\"\n\nLike his house, Gabe's apartment was clean and in order. The envelope contained a key and some more instructions. It smelled of his sweet cologne.\n\nGabriel had a large space for being a single guy. There were two bedrooms, a living room, one full bath, a kitchen and a third bedroom he used as a small office. Posters and mementoes lined the walls. It felt very much like Gabe.\n\nWhere the house had been his mother's and Gabriel just lived there, the apartment reflected more of his personality. He displayed lots of pictures. She recognised Chuck and Teri, as well as a few famous people whom Gabe had worked with in the past. There were knickknacks on the shelves and tables. She smiled when she saw several pictures of herself in frames around the apartment.\n\nIn the foyer, there was a red rose laying on the floor next to a card with her name on it.\n\nWelcome to my home, Bailey. Leave your things here and go into the bedroom. XOXO, &mdash;G.\n\nShe went to the master bedroom and found another flower and card in the middle of the bed. The covers were turned down. She opened the card.\n\nTake your clothes off and lay them on the dresser. Get in the bed and call me. I love you. &ndash;G.\n\nOnce she was naked, Bailey lay back on Gabe's bed. It smelled like him. The mattress was soft and the sheets enveloped her. She closed her eyes for a second, imagining making love to Gabriel in his bed.\n\nHer nipples were standing straight up as she reached for the phone and dialed his cell phone number. True to her word, she had never programmed it into her phone or told anyone else how she got it. She had it memorised.\n\nThe phone rang twice and then she heard his voice. \"Hello, Bailey.\"\n\n\"Hi,\" she said, content to hear him speak. Knowing he wasn't five states away anymore.\n\n\"Did you do what I told you?\" he asked. She could hear people talking in the background.\n\n\"Yes,\" she whispered.\n\nHe lowered his voice, \"Are you naked?\"\n\n\"I am.\"\n\n\"Hold on,\" he said. Bailey heard him talking to someone else, then she heard a door close. \"Sorry about that. Are you in bed?\"\n\n\"Yes.\" Indulgently, she cupped one of her breasts.\n\n\"I want you to touch yourself,\" Gabe told her. \"I want you to cum in my bed . . . like I did this morning. Right where you are . . . right now . . . I lay there this morning thinking about you. Think about that, Bailey. And think about this: When we get home tonight, I'm going to go down on your pussy . . . I'm going to eat you out in my bed.\"\n\nBailey's breathing became ragged at the sound of his sexy voice. She could hear the undercurrent of desire as he spoke. \n\n\"After you cum, go into the kitchen.\"\n\n\"Okay.\" \n\n\"And, Bailey?\"\n\n\"Yes?\"\n\n\"I love you.\"\n\nShe purred as she began to stroke her clit. \"I love you, too.\"\n\n***************** \n\n\"Bailey!\" Gabriel waved her over. \n\nHer skin was still a little flush. She thought she reeked of sex, having been explicitly forbidden from showering or putting on lotion or even washing her hands.\n\nShe threw herself into his arms. Gabe spun her around, laughing. Bailey was oblivious to the stares of those around them. She kissed him hard, unleashing eight weeks of pent-up frustration on to his tongue.\n\nGabe finally managed to extract himself from her grasp, even though she knew he didn't want to. With his arm around her waist, Gabe gave her a tour of the set, introducing her to the actors and staff of the show.\n\nEveryone was friendly to a fault, especially Lori Craven, one of the show's main stars. She welcomed Bailey to the studio and told her that she was also a small town girl. Lori seemed very down-to-earth for someone making a gajillion dollars on TV and in movies. Bailey tried not to seem too starstruck, but Gabe only laughed at her and continued the tour.\n\n\"We thought Gabe made you up,\" the show's feisty head writer told her. Bailey instantly liked her. She was smart and sassy and wasn't afraid to tell things exactly as they were. Or give her best friends down the road about something.\n\n\"Would I do something like that, Rose?\"\n\n\"I don't know, Gabe. Would you?\" the other woman taunted. \"You'd been celibate for so long, there was a pool in the writer's room that you'd gone gay. Not that there's anything wrong with that.\"\n\n\"Celibate?\" Bailey asked incredulously. \n\n\"Ever since the divorce, Gabe stopped dating,\" Rose said, obviously enjoying a chance to get under his skin. She took Bailey by the arm. \"Girl, when your boy showed back up, we were going to all pitch in and get you a big fruit basket. You're the best thing to happen to him in a long time. He's got his smile back and we owe you!\"\n\nAll Bailey could do was blush.\n\n\"Chuck and Teri vouched for Bailey,\" Gabe said with a mock pout.\n\n\"Best friends don't count. Chuck and Teri would help you hide a body,\" Rose said, her eyes twinkling. \"Helping you make up a girlfriend would have been child's play to them.\"\n\nRose leaned in to have one final, private word even though she spoke loud enough for Gabe to hear. \"Don't let him go, young lady. He's a keeper!\"\n\n\"I know,\" she whispered back. Rose winked and left them to continue their tour. \n\nGabe was so animated. Back home . . . well, home to her . . . Gabe always seemed to be a little guarded. Aloof, even. She recognised it in herself; around unfamiliar people, both she and Gabriel were introverted and quiet. However, when among friends, they let their hair down. As a matter of professional survival, Gabe had developed an outgoing public persona that could hobknob and schmooze with the best of them, even though he hated it.\n\nIt was hard for her, being in a big city around lots of people who knew about her, but to her were strangers. As Gabriel shared this part of his life with her, she sensed that the people he worked with accepted her because a friend of Gabe's was a friend of theirs. Despite all the stories of showbiz backstabbing and personal/professional jealousies, Bailey sensed The Sun Also Sets was one big family . . . now that prime backstabber Montana/Milton Morehead was gone and that her/his producer-conspirator David Barnes was killed at a place called Der Waffel Haus in a freak accident involving a taxidermied swordfish, a skateboard and some legwarmers.\n\nGabriel led her back to his dressing room. The show's head wardrobe and costume director was laying out some clothes for the next week. He introduced her to Bailey.\n\n\"You're the envy of the set,\" Tawny giggled and that made Bailey blush some more. \"We had a bet on who would be the first one to get Gabe to ask them out . . . looks like we all lost.\"\n\n\"Go on, get out of here,\" Gabe gave he a mock scolding. The other woman winked at Bailey then left.\n\nAs soon as the door shut, they were all over each other. Bailey's heart fluttered as she melted into Gabriel's arms. They kissed hungrily. She pawed at him, realising how much she had missed his touch over the past two months.\n\nHe pulled back for a second and reached for her hand. He sucked on her fingertips and smiled mischievously.\n\nA jolt ran through her body, both from the sensitivity of her fingers and the knowledge that he was suckling on the same hand that had been touching herself not an hour before.\n\nHer pussy was soaked. One of the reasons was that she was around Gabe for the first time after a long drought. They both knew what the other reason was.\n\nGabe's eyes glanced over towards the clock on the wall. \"It's about that time, isn't it?\"\n\n\"Yes,\" she moaned. Two weeks ago, when Gabe called and invited her to visit him in New York, he told her that he wanted her to masturbate three times a day for him: once when she got up, once before dinner and once before bed. She was all too happy to comply, even though she didn't quite understand why he would ask her to do that, and he often called to make sure she kept the schedule.\n\nNow, not only was she hot and bothered from her earlier session, her body was responding to the Pavlovian conditioning brought about by her timed self-pleasure, and she had a feeling Gabe wasn't going to get her get off until later. Surely he was reveling at the success of his secret evil plan to torture her.\n\n\"Spread your legs,\" Gabe whispered. He was beginning to assert himself as being in control of their sexual encounters. Bailey willingly surrendered to him, knowing that he wouldn't cross the boundaries she set.\n\nHe lifted her skirt, his fingertips brushing her legs. Bailey had to bite her lip to keep from screaming. Gabe's movements were slow, as if he was deliberately trying to draw this out as long as possible.\n\n\"Oh, god, Gabe!\" A shudder ran through Bailey's body as his hand cupped the bare mound of her pussy. \n\nHis middle finger brushed the nub of her clit and she cried out. She could feel her excitement beginning to drip down her legs.\n\nHer labia were surely swollen. He played with her pussy for a few seconds, its slickness coating his fingers.\n\n\"Good girl,\" he whispered in her ear. \"You follow instructions well.\"\n\nShe smiled to herself, delirious with pleasure. She appreciated Gabe's praise, but also having him touch her again after so long.\n\nHer toes started to curl up when he stopped suddenly.\n\nBailey whimpered in frustration. He had just gotten her going!\n\nGabriel kissed her behind the ear. \"I've missed you.\"\n\nShe groaned as he withdrew. \"You're killing me, Gabe!\"\n\n\"That's the idea, sweetheart,\" he smirked. Before she could move, he opened the door and led her back out into the hallway. \n\nHer face was red. Her heart raced. And at that moment, she would have done anything Gabriel asked of her.\n\n***************** \n\nThe sexual tension between them was palpable for the remainder of the night. They held hands and sat as close to each other as they could.\n\nWhile it was still light out, Gabe took her on a tour of Manhattan. Using the same limo driver that had picked her up at the airport, they drove around the island. They toured Little Italy and Chinatown. Downtown, he showed her Wall Street and Trinity Church. The driver dropped them off in Times Square. From there, they walked to Sardi's, a famous haunt of Broadway actors.\n\nThe restaurant was definitely unlike any place Bailey had ever been before. Many of the men wore coats and the women cocktail dresses. Gabe was in a nice pair of pants and a dress shirt, and per his instructions, she wore a nice blouse along with her skirt. Still, she felt under-dressed.\n\nAs she looked at the menu, her jaw dropped at the prices. She anticipated that things would cost a little more in New York, but she didn't expect the least expensive thing on the menu to be $15. Gabe told her to get whatever she wanted; he was buying and she deserved nothing less than the best. Even if she felt a little guilty for spending more on one meal than her whole family usually spent when they went out.\n\nThey talked for a little while, catching up and the like. Her hands lingered on his arm, as if she didn't quite believe that they were together again. Throughout dinner, she caught Gabriel's eyes lingering on her with more than fondness.\n\nHis desire mirrored hers.\n\nThe tingling between her legs never went away. The fabric of her skirt brushed against her bare pussy and ass. She remembered Gabe's hungry touch. And she was looking forward to the fulfillment of his promises for the coming night.\n\nHe asked about her family and how school was going. She updated him on the bedroom remodeling project. As their meal ended, both felt the tension level rise.\n\nAs they stood outside the restaurant waiting for their car to pull up, Gabe whispered in her ear, \"I'm gonna make you cum so hard, you pass out.\"\n\n\"Promises, promises.\" Bailey barely managed to get the words out, she was shaking so badly.\n\nThey stumbled into the car. The ride back to his apartment only took a few minutes, but to Bailey, it seemed like an eternity. Gabe's hand rested on her knee, his fingers intertwined with hers.\n\nWhen they arrived at his apartment building, Gabe tipped the driver and the two headed inside.\n\n\"Have a good evening, Mr. MacKenzie?\" the doorman asked politely.\n\n\"Very good, Paulie,\" Gabriel replied. Bailey slipped her hand into the crook of his arm. \"How's your daughter doing?\"\n\n\"Just getting over the flu,\" the other man replied. \"Thank you for asking.\"\n\n\"Tell her I hope she feels better.\"\n\n\"I will. Have a good night, Mr. MacKenize. Miss Crawford.\"\n\nBailey waved politely as the elevator doors closed. In an instant, she was all over Gabe. His hands groped her breasts. Hers went straight to his ass.\n\n\"I want you to fuck my brains out tonight,\" she gasped between kisses.\n\nHis only reply was to kiss her harder. They pulled apart when the short elevator ride ended. Holding hands, they raced down the hallway. No one else was around and she tugged at his shirt as he fumbled with the lock.\n\nThe door opened and the two fell into his apartment. Their clothes littered the floor on the way back to his bedroom. Neither bothered to turn any lights on. The sheets were rumpled where Bailey had been on the bed earlier.\n\nGabriel was only wearing a pair of boxer shorts. Bailey's skirt was around her ankles. She kicked her heels across the room.\n\nHer hands grasped at his hair, her fingernails scraping his scalp. Gabe cupped her breasts, which were now freed from her bra.\n\nBailey pushed him back on the bed so he was sitting on the edge.\n\nHis face was level with her breasts. Bailey's nipples crinkled up as his mouth descended on them. \n\nGabe's hands reached around and grasped her ass.\n\nShe loved the way he touched her. He was both desperate and gentle at the same time.\n\n\"Right there!\" she gasped. \"Oh, god, Gabe . . . I've missed you so much.\"\n\nHe mumbled something incoherent, but she knew what he meant. Gabe continued to worship her breasts for several minutes. Her pussy was soaking wet; it was time for her evening masturbation session.\n\n\"You look fantastic,\" Gabe pulled his face out from between her breasts. He tugged at her hands and she fell on to the bed beside him. They cuddled together. She was nude. He had only a pair of boxers on.\n\n\"I've been working out,\" she said proudly.\n\n\"You have?\"\n\n\"Yes,\" Bailey lay back and stretched. \"I've lost ten pounds and dropped two dress sizes. April and I spend half an hour working out or walking every night.\"\n\nGabe's hands ran all over her body. She still felt very self-conscious. If she were around anyone else, she would not have wanted to be without clothes. But she knew Gabe loved her regardless of how she looked and that he thought she was the most beautiful woman in the world, even if she didn't.\n\n\"Get in the middle of the bed,\" he whispered. She started to protest as Gabe slipped out of the bed, but she obeyed nonetheless. She watched his cute backside as he moved around the bedroom. He lit a pair of candles and drew the curtains to keep the morning light from shining too brightly.\n\nShe splayed herself out on the bed for Gabe to see. He couldn't keep his eyes off of her. He stood beside the bed, as if debating what he wanted to do next.\n\nHe took a deep breath. \"Bailey . . . did you mean what you said earlier? . . . About, you know . . . making love?\"\n\n\"I didn't mention anything about making love, Gabriel,\" she said with a wicked smile. \"I said I wanted you to fuck my brains out.\"\n\n\"I thought you wanted to wait.\" His eyes met hers. They did not stray to her chest or between her legs.\n\nBailey sat up on the bed. Her heavy breasts jutted out from her chest, with just a little bit of sag. \"I said I wanted to wait for the right guy. And I've found him. I want you, Gabe. I want you to make love to me. I want you to be my first lover. I want to give myself to you. Will you have me?\"\n\n\"I . . .\" Gabe's voice trailed off. He shook his head, as if willing his disbelief away. \n\nHer heart leaped into her throat. Was he going to say no?\n\nGabriel stood and walked to his closet. He reached for two bathrobes and held one out to Bailey. She took it and they both covered up. Her insecurities, which Gabriel had done so much to bring down, slowly began to reappear.\n\nShe mutely took his hand as he led her out to the living room. He turned a light on and they sat on the couch. Her hands trembled.\n\n\"Are you sure?\" he asked softly.\n\n\"I've never been so sure of anything in my life,\" she replied.\n\n\"Why me?\" he whispered.\n\n\"Because you love me,\" she said simply. Bailey put her arm around his shoulders and kissed his cheek.\n\n\"That's what I'm afraid of,\" he admitted. \"I've missed you so much these past two months. I lie awake and night and wish you were here with me. You make me feel young again, Bailey.\"\n\n\"Do you want me?\"\n\n\"Yes . . . Good heavens, yes! But&mdash;\"\n\n\"But nothing, Gabe,\" she interrupted. \"This is what I want!\"\n\n\"Are you sure you're not making a huge mistake? Why do you want me?\"\n\n\"I'm not a girl, Gabriel,\" she said firmly. \"This isn't about puppy love or infatuation. I can make up my own mind! I love that you've never rushed me. You ask my permission before doing anything. You are the perfect gentleman. You make me feel special. And I can't stop thinking about you. I dream about you. I want to wake up next to you every day.\"\n\n\"If I make love to you tonight, I don't know how I'll be able to put you on that plane on Sunday,\" Gabe looked her in the eyes. \n\n\"We'll figure something out,\" Bailey said with a rueful smile. \"What's wrong?\"\n\n\"I don't have any condoms,\" he said sheepishly.\n\n\"You don't need one,\" she giggled in his ear. \"Mom put me on the pill last month.\"\n\n\"I haven't had a . . . um, test . . .\"\n\n\"That's okay,\" Bailey said reassuringly. \"I trust you. I haven't had one, either.\"\n\n\"We could go to the all night clinic&mdash;\" he was interrupted by Bailey punching him in the shoulder.\n\nThe two shared a nervous laugh.\n\n\"Gabe,\" she sighed. \"I love you. I've been in love with you since prom. And I want you to be my lover tonight. We'll figure out the rest later.\"\n\n\"I love you, too, Bailey,\" Gabe flashed her a resigned smile. \"I just don't want you to regret this.\"\n\n\"Then don't let me regret it.\" There was a sultry tone in her voice.\n\nGabriel took a deep breath and let it out slowly. He stood and extended his hand. Drawing Bailey to her feet, Gabe picked her up in his arms. She nuzzled up to his neck.\n\nHe flipped out the light and carried her back down the hallway to his bedroom, stopping at the doorway.\n\n\"Last chance,\" he warned. \"Once we go in, I'm not going to stop . . .\"\n\n\"You don't ever have to stop, Gabe. You can do anything you want to me. Anything.\"\n\n\"Don't tempt me, sweetheart. I just might take you up on that.\"\n\n\"You talk a big game, mister,\" Bailey teased with her arms wrapped around him. \"I'm going to have you begging for mercy when I'm done with you.\"",
        "Gabriel stepped into the bedroom. The candles were still flickering. He set her down on the edge of the bed. \n\nBoth shed their robes. Bailey reached out and pushed his boxers down over his hips. Her mouth began to water.\n\nFalling on her back, Bailey's eyes lingered on Gabriel's body. His shoulders were broad and strong. His arms muscular. His stomach free of the middle age paunch that most men sported. And his handsome face. \n\nHis smile made her heart melt and her knees weak.\n\nGabe crawled into bed next to her as she pushed the sheets down. He leaned over and kissed her gently. \n\nHer nipples grew hard instantly as his hand cupped her breast. \n\nShe tilted her head back, letting Gabriel control their pace and intensity. Her hands roamed his body. He explored her as well.\n\nKnowing that they were going to make love seemed to take some of the tension off the two. Both knew that they no longer had to keep their desires under control. They were free to give themselves fully to one another.\n\nBailey relished the feeling of Gabriel's body pressing against her. Her heart began to pound a little harder. \n\n\"Make love to me,\" she said softly. \"Please, Gabriel.\"\n\nGabe pulled back and looked lovingly at her. She spread her legs as Gabe got on his knees between them. \n\nShe could see the passion . . . the lust . . . the love . . . that burned in his eyes.\n\n\"You are so beautiful, Bailey Crawford,\" he said. She loved hearing him say her name.\n\nHer eyes fell from his eyes to his cock. It was hard. For her.\n\nReaching out, Bailey pulled Gabriel down on top of her. For the first time, their fully naked bodies rubbed against each other. \n\nBailey's hand went between Gabe's legs and she stroked his hard cock. It felt both natural and a little forbidden for her. She was no prude, but nor was she particularly worldly. His was the first cock she had seen in the flesh. And what glorious flesh it was.\n\nShe loved that he was hard for her. She loved that she could use it to tip his considerable self-control. \n\nAfter years of masturbating to fantasies of boys and men, Bailey finally had a real live cock in her hands. During their two month separation, she realised that Gabriel MacKenzie was the perfect man for her. Not because he was handsome and wealthy. Not even because he was polite and kind.\n\nThey connected. Despite the differences in their ages and their backgrounds, she felt as if he were a kindred spirit. He knew how she felt. He was a fellow introverted, ugly duckling when compared to his brother. He knew what it felt like to be ignored&mdash;invisible&mdash;and how much it meant for someone to pay attention, even with a simple gesture such as holding hands.\n\nGabe's lips left a trail of sloppy kisses across her cheek. He nibbled on her ear. She stroked him, drawing a gasp.\n\nShe squealed with delight as Gabe sucked on the side of her neck and bit her collarbone.\n\nHe was on his knees in front of her. She felt him take his cock in his hand and cried out when he brushed it against her clit. \"Do that again!\"\n\n\"Do this again?\" he teased. A chill ran through her body.\n\nHer sex pulsed with desire. She could feel the blood flowing into her swollen labia.\n\n\"I love you, Bailey,\" he whispered in her ear. His weight pressed down on her. Her breasts were mashed flat against his chest.\n\nShe spread her legs in anticipation.\n\nThe head of his cock paused at the entrance to her pussy. Gabe was tumescent, the largest she had ever felt.\n\nBailey bit her lip as he pressed forward. Her maidenhead held for just a second, then gave way as Gabriel entered her.\n\nShe cried out as he filled her with his length. His girth caused her eyes to tear up. \n\n\"No, Gabe,\" she sobbed and he pushed forward with his hips. \"Don't stop . . . please . . . don't . . .\"\n\nWhen he was fully inside her, he paused. She managed to open her eyes enough to see the concern on his face. \n\nHer body was covered in sweat. The searing pain receded as her sex stretched to accommodate him.\n\nGabe kissed her face gently and whispered soothingly in her ear. \n\n\"Are you okay, sweetheart?\"\n\nShe could only nod. The pain was slowly replaced by pleasure. Her pussy was raw after this first invasion.\n\nHe slowly began to move inside her. Grinding his hips in a small circle, Gabe explored the limits to her tolerance.\n\nHis eyes met hers. She lost herself to his loving smile. She gave herself to this man. Her lover.\n\nBailey began to grind her hips against him. They slowly began a dance with their bodies, trying to anticipate which way the other was going to move.\n\nHer arms pulled him down and she kissed him deeply. The maddening lust was gone. Instead, they made love slowly and gently.\n\nThe sex between her legs throbbed, and not always in the good way. But she knew that he would never hurt her. That the discomfort would soon give way to ecstasy. \n\n\"Cum inside me, Gabe,\" she whispered in his ear. He drew in a deep breath and the look of concern returned to his face. \n\n\"Are you sure?\"\n\n\"Yes . . . It's okay,\" she replied. \"You won't hurt me.\"\n\nHer fingernails dug into his shoulders as he pulled back and thrust slowly back into her.\n\n\"Again,\" she said softly. \"Again!\"\n\nBailey's head began to spin as she felt her lover gently pick up his pace. He didn't last very long, but that didn't matter to her.\n\nShe heard him grunt and her hands went to his face. His mouth enveloped hers and their tongues dueled.\n\n\"Oh, god, Bailey!\" he moaned. \"I'm going to cum . . . I'm cum . . . I'm cumming inside you!\"\n\nWith one final stroke, Gabe buried his cock inside her and she felt her pussy flood with warmth.\n\nGabriel collapsed on top of her. His breath was hot against her neck. She kissed him gently on the cheek.\n\n\"I love you, Gabe MacKenzie,\" she pulled him close.\n\nHe didn't respond for a long time. Instead, he kissed her shoulder and her neck. She giggled with delight as he nibbled right behind his ear.\n\nShe felt so content right there. In that moment, she was closer to him than she had been to anyone else in her life. Their lovemaking wasn't the thing of fairy tales or fireworks, but she would have it no other way. She was with the most important man in her life. \n\nIn giving herself to him, she realised that he was giving himself to her as well.\n\nThey were naked and bare for each other. Physically. Emotionally. Spiritually.\n\nHe lay inside her unmoving for a long time before speaking. \"And I love you, Bailey Crawford. I love you with all my heart.\"\n\nRunning her hands through his hair, she wished that this feeling would never end.\n\n\"Am I squishing you?\" he asked, slowly pulling back. Their bodies were covered in a thin sheen of perspiration.\n\n\"No, you're okay,\" she said and pulled him back down against her. Gabe kissed her gently. \"I'm a big girl. . . . And you're a big boy!\"\n\n\"You go on thinking that,\" he said with a loving laugh. \"And don't let Chuck tell you otherwise.\"\n\n\"You'll always be perfect for me,\" she said giving him one more kiss.\n\nThe pair cuddled in bed for a while longer, whispering sweet things in each others's ears.\n\nWhen their heartbeats had slowed to a regular pace, Gabe pulled back and rolled off to one side. She fell into the crook of his arm.\n\n\"Thank you,\" he said quietly.\n\n\"For what?\"<br/>\n\n\"For making love to me,\" he replied.\n\n\"All I did was lay there,\" Bailey giggled. \"You did all the work.\"\n\n\"Thank you for letting me have you,\" Gabe corrected himself.\n\n\"You can spend the next fifty years showing your gratitude,\" she grinned.\n\n\"Only fifty?\" he asked, and they kissed and giggled some more.\n\nAfter a few minutes, Gabe crawled out of the bed. Bailey's legs were a little wobbly so he carried her to the bathroom and stood her up in the shower.\n\nThey took turns washing each other. Before they were rinsed clean, Gabe shut the shower off and filled the large jacuzzi tub, a luxury for any New York apartment.\n\nShe lay back in his arms under the warm water, reveling in the feel of his body against hers. He held her for a long time. Neither spoke; they simply wanted to be close to one another.\n\nBailey loved the feel of his strong arms around her. She dozed off in the tub, held by the man she loved.\n\nGabe roused her a few minutes later. They dried off and he put a bathrobe around her shoulders. While she went into the kitchen to fetch something to drink, Gabe hastily changed the sheets on the bed.\n\nReturning with a cup of hot tea, Bailey stood at the door and admired her handsome lover. \n\nThe votives had nearly burned themselves out. The pair shed their robes and climbed back into the bed. \n\nGabriel pulled the comforter around them and Bailey fell asleep in the arms of the first love of her life.\n\n****************** \n\n\"Does she even know how pretty she is?\"\n\n\"She doesn't have a clue, Rose,\" Gabe said. Together they watched Bailey talking and laughing with Teri. The young woman was glowing; it probably had something to do with all the sex she and Gabriel had earlier in the day, but she truly was a beautiful girl.\n\n\"And you say her sister is prettier?\" \n\n\"Drop dead gorgeous.\" Gabe took a long pull of his margarita. \"It's kind of a self-fulfilling prophesy for Bailey. Her sister doesn't have to try; April can wake up and put on a sack cloth and still turn heads. So Bailey never got noticed. Low self-esteem led to body image issues and that led to some weight gain and then she was in that vicious cycle.\"\n\n\"Kind of like you.\"\n\n\"Very much like me,\" he said thoughtfully. \"They're built differently and it takes a while to understand that just because she doesn't look like Jessica Alba, that doesn't mean she's not pretty.\"\n\n\"Maybe a change of scenery would be good for her,\" Rose suggested.\n\nGabe started to respond, but stopped. \"I don't know that she'd leave her family.\"\n\n\"Not even to be with you? Or get away from her sister?\"\n\n\"Getting her to split up with her sister would be like pulling teeth,\" Gabe said. \"It was hard enough to get her to come up for this weekend by herself.\"\n\n\"You'd think they'd have sibling issues.\"\n\n\"Not those two,\" Gabe shook his head. \"April and Bailey are inseparable. If it were me and Michael, we'd be at each others's throats twenty-four/seven, but they still share a room at Mom's house. I've got two empty bedrooms and they're both sleeping a queen-sized bed in the upstairs bedroom. It must be a twin thing.\"\n\n\"So what are you going to do?\" Rose finished off her drink.\n\n\"I have no idea. Ask me on Monday.\"\n\nGabriel topped off Rose's glass of wine and went back to where Bailey and Teri were sitting. A dozen or so other people mingled around the deck. Some more people were inside the house. The party was Teri's idea. Ostensibly, the purpose was to celebrate Gabe's return to the show, but really she wanted to introduce Bailey to Gabe's friends and let her see a little bit of the world he lived in.\n\nIt meant a lot to Gabe that his friends liked Bailey. In hindsight, he realised that they had been trying to warn him about Jeannie for years; he was just too boneheaded to see the light until it was too late.\n\nThey all seemed to come away impressed with his new girlfriend. She was smart without being arrogant. She was friendly in a way that was refreshing to the brusque and hardened New Yorkers. They also liked that she didn't seem to be awed by Gabe's celebrity, nor was she obsessed with his money.\n\nHe knew she was afraid of what they would think of her. After all, she was seventeen years his junior and fresh out of high school. She was also&mdash;in her mind&mdash;overweight and pudgy, from a family that was poor and unsophisticated, and she thought of herself as a little too country for these \"city\" folks.\n\nGabe knew she didn't have to worry. People are people, and the ones from New York went to work to make a living just like the ones from Washington County. It helped that many of them were transplants who moved from Iowa or West Virginia or Mississippi to the big city following their dreams. Like Teri and some of Gabe's other close friends, they were from small towns just like her. Heck, even he wasn't a native New Yorker. Gabe called a bunch of places \"home\" during his lifetime. Some were small towns, some were big cities and the rest were in between.\n\nSitting down next to Bailey, he listened to the tail end of another embarrassing story about himself.\n\n\"&mdash;so there we are, covered in mud and Gabe says, 'I wanted doughnuts . . . not the whole chicken'!\"\n\nThe people around them erupted into laughter. Bailey giggled and looked lovingly at him.\n\n\"I see my 'friends' are doing everything they can to embarrass me,\" Gabe grinned.\n\n\"I just want her to know what she's getting in to,\" Teri said with mock defensiveness. \"She thinks the sun rises and sets around you and we just have to correct that.\"\n\n\"You let her worship me, Teri&mdash;\"\n\n\"You mean the way my kids do?\"\n\n\"&mdash;Because the sooner she finds out the ugly truth, the sooner she'll take off with half my stuff,\" Gabe snorted.\n\n\"The only way I'm leaving you is if you cheat on me,\" Bailey shot him a wicked smirk. \"And then I'm taking all your stuff.\"\n\nThat drew a hearty laugh from Teri and the others.\n\n\"You're going to fit in nicely around here,\" Rose said with a friendly smile. \"We wouldn't let just anyone move in on our Gabriel, now would we? Not after what that bitch Jeannie did . . .\"\n\nBailey's eyebrow shot up. Gabe could tell she wanted to ask more, but she would be content to have that conversation in private.\n\n\"It's too bad Ariel left for that prime time show on that other network,\" Rose continued. \"She could tell you some stories about Jeannie that would make your skin crawl . . .\"\n\nThe group piled on with the sort of catty vindictiveness that you'd expect to see on a soap opera, not from its actors off camera. Gabe appreciated his friends coming not only to his defense, but trying to make Bailey feel better about herself and welcome her into their circle.\n\nFor the remainder of the night, Gabriel sat close to his lover. They held hands and kissed. The others looked on jealously.\n\nBeing around his friends, Gabe loosened up. Having a few drinks in him didn't hurt either. After a while, they got to singing and acting out scenes from plays and TV episodes long passed. Bailey joined in the fun and Gabriel found out she didn't have a half-bad voice herself.\n\nPart way through the night, he found her panties hurriedly stuffed into the pocket of his pants and a shy blush on Bailey's face to match.\n\nThey left the party in a cab that took them from Chuck and Teri's house in Brooklyn back to his Upper West Side apartment.\n\nHis head was swimming, partly from the alcohol. Partly from being in love.\n\nThey got through the door with most of their clothes on. Teri had introduced Bailey to her friend Captain Morgan, and the two hit it off right away. Like Gabe, she was an affectionate drunk.\n\nFalling into bed together, Gabriel and Bailey made love until they fell asleep, exhausted.\n\n************* \n\nWhen Gabe awoke, he was alone. The sun was up and Bailey was nowhere to be found. He slipped on a robe to ward off the morning chill and padded out to the living room. The hardwood floors creaked as he followed the light. Bailey was sitting on the couch, her chemistry textbook in her lap.\n\n\"Can I get you anything?\" he asked.\n\nShe looked up and flashed him a loving smile. She had her reading glasses on and her hair pulled back. Her robe hung over her shoulders but he could still see traces of her voluptuous curves.\n\n\"No, thank you,\" she replied, putting her pencil down. \"Are you hungry? I can make you breakfast.\"\n\n\"Do we have time?\" Gabe looked up at the clock, a frown on his face. \"We've got to get you to the airport soon.\"\n\n\"I know.\" There was a resigned look on her face.\n\n\"Why didn't you wake me earlier?\" he asked. \"I'd hate to sleep through the morning before you left.\"\n\n\"You looked so peaceful,\" she said softly. \"I didn't want to disturb you. I watched you sleeping, you know.\"\n\nGabe blushed, wishing he had woken up first so he could wake her with a special kiss.\n\n\"I'm sorry I left you alone in bed,\" she continued. \"But I've got this chem test tomorrow . . .\"\n\n\"That's okay, sweetheart,\" Gabe sat down next to her. She put her book and binder away as he took her in his arms.\n\nThey held each other for a long time before Gabe led her back to his bedroom and they made love one more time. Then they showered and dressed and he took her to the airport.\n\nThere were tears in both their eyes as she left him to go through airport security before catching her flight. She promised to call as soon as she landed and he promised to come to her house for Thanksgiving dinner in three weeks.\n\nAll the while, Gabriel's heart fluttered with a mixture of desire and love. He had fallen for Bailey, and fallen hard. She was everything Jeannie should have been. When she was gone, a part of him felt lonely. But he knew it wasn't for long and it definitely wasn't permanent.\n\nUntil he saw her again, whenever he wanted to feel her presence, all he had to do was think back to the meandering doodles in the margins of her chemistry folder he had seen by accident. In her flowing, bubbly teenage handwriting, she had written over and over . . . in anticipation of their future . . . as if taking it for a test drive . . . her new signature.\n\nBailey Crawford MacKenzie\n\n******************** \n\nJoanne surveyed the work going on in her kitchen. Though small and cramped, it was cozy and familiar. Throughout the day, relatives arrived, all of them bearing food. \n\nEveryone who wasn't helping either got out of the way or soon found themselves with a task to complete. It was a finely choreographed dance that everyone seemed to know by heart. After all, they had been gathering like this for as long as anyone could remember.\n\nThe men were either in front of the television watching football or out in the garage shooting the shit and telling lies about the 8-point bucks they had just barely missed since gun season opened. The women watched the kids and prepared the food.  \n\nWhen they turned twelve, April and Bailey were initiated into the Thanksgiving task of helping make supper. They had jobs to do, especially since it was their family's turn to host the meal. Aunts and uncles and cousins and everyone else would be coming by for the large family gathering. In their family, the Thanksgiving meal was a bigger deal than Christmas since many people traveled in December.\n\nBoth girls were superb cooks, having learned at the hands of their mother, aunts and grandmothers. Joanne saw to it that Bailey was given some of the more important tasks, such as basting the turkey, both because she was the celebrity of the family and because Joanne had a hunch that there might not be too many more Thanksgivings with her around.\n\nSince meeting Gabriel, Bailey seemed to step out of her sister's shadow. She moved and spoke with a new confidence that could only be attributed to her beau's affection. Gone was the shy, insecure young girl. In her stead was a vibrant, beautiful woman.\n\nWhere she had been happy lingering in the background before, now Bailey didn't mind being in the spotlight. Especially as the family asked about her famous boyfriend. News of the romance had spread like wildfire throughout Washington County. It wasn't so much a scandal as it was a fairy tale come to life.\n\nGabriel had come back for the entire week of Thanksgiving. Joanne knew he and Bailey were sleeping together. In fact, she encouraged it. She saw in her daughter the same feelings she had for Andy all those years ago. She knew it was right.\n\nOnce, Joanne's sister had asked if she had any reservations about Bailey seeing someone who was twice her age.",
        "\"I did at first,\" she admitted. \"But I asked myself three questions. One: Is he a good person? Two: Does he treat Bailey well? And three: Does he make Bailey happy? The answer to all three is yes. Their situation is not one that I would have chosen for my daughter, but she has to live with it and when you see them together, you'll see that they're in love.\"\n\nHer big worry was the distance between them. They say that absence makes the heart grow fonder, but too much absence can spell disaster. The good news is that between cellular phones and the internet, they weren't as far away as they might have been fifteen years before, but that still didn't put them in the clear.\n\nBailey's visit to New York was a life-changer, though. When she returned, Joanne knew that her daughter was committing herself to Gabriel for the long-haul. It helped that she was living in his house and there were constant reminders of him around.\n\n\"So where's your guy, Bailey?\" one of the cousins asked.\n\n\"He'll be here soon,\" the other girl replied. Bailey had spent every night with Gabriel since he had arrived. This morning, Bailey and April drove home in their Oldsmobile. They said he would be on his way a little later.\n\nBy late afternoon, all of the family had arrived. The crowd outdoors had grown and was playing horseshoes or on their guitars. Someone on TV was giving out six-legged turkeys to football players. There was a murmur of excitement when Gabriel's Lexus pulled on to the property and parked in the long row of cars in the front lawn.\n\nHe got out and was immediately mobbed by people rushing to introduce themselves.\n\n\"There will be a quiz later,\" Joanne winked as she went to help him bring in a couple bottles of wine.\n\n\"Just flunk me now,\" he laughed.\n\nJoanne watched carefully as he walked over to Bailey and gave her a big hug and kiss for everyone to see. She appreciated that he was willing to show his affection publicly; it wasn't too much, but it also demonstrated that he wasn't ashamed of her, something the last boy who came calling couldn't say of himself.\n\nGabriel went outside to join the men; he was certainly no asset in the kitchen.\n\nThe other women fawned over Bailey for landing such a catch. And for the first time she could remember, Joanne saw a flash of jealousy in April's eyes at the attention her sister was getting.\n\nA short while later, dinner was served. As the host, Andy said grace then Joanne invited everyone to dig in. There was more food than the family could possibly eat, but they tried their best anyway.\n\nGabriel and Bailey sat on the couch next to one another. Some of the cousins, especially the girls, were immediately smitten with Gabriel and he had a small audience eating out of his hand. He told stories and sang songs and was generally charming. Joanne joined them once she went through the line.\n\n\"So why did you take so long to get here?\" one of the cousins asked.\n\n\"I had some business to take care of this afternoon,\" Gabriel shrugged.\n\n\"Where?\" the inquisitive girl asked.\n\n\"At the Cold Nights Shelter,\" he said blankly.\n\n\"What were you doing there?\" the girl continued. Bailey's eyes were wide. Joanne's, too.\n\n\"Helping get ready for Thanksgiving dinner,\" Gabe said patiently.\n\n\"But dinner is here.\" He clearly had the six year-old confused.\n\n\"Not for everyone,\" he said with a sad smile. \"Some people don't have families on Thanksgiving. So to give them a place to go, the Cold Nights Shelter has a dinner where everyone is welcome.\"\n\n\"Where is your family?\"\n\n\"Maddy, why don't you go get some salt and pepper from the kitchen?\" Joanne asked. She flashed an apologetic smile at Gabriel. \"Sorry, she's a little too curious for her own good.\"\n\n\"It's okay,\" he replied and went back to his meal, though he got quiet and slipped back into the shy introvert April and Bailey talked about&mdash;the one she had never seen&mdash;for a few minutes.\n\nA little while later, when the kids had finished and the adults were on seconds&mdash;or thirds as the case may be&mdash;Joanne sat down next to Gabriel and Bailey. \"So what were you really doing at the Cold Nights Shelter?\"\n\n\"Helping them get ready for Thanksgiving dinner,\" his eyes grew distant. \"It's something Mom started us doing when I was thirteen or fourteen . . . Did you know we used to be homeless?\"\n\nJoanne shook her head, surprised at the things she was learning about the man in Bailey's life.\n\n\"After Dad left us, Mom tried her best,\" he said wistfully. \"We were out in San Diego, living out of an old Toyota Corolla station wagon. I was nine; Michael was eleven. It wasn't so bad; if you're going to be homeless, southern California is the place to do it. Mom was working, but we didn't have any money to get a house or apartment that wasn't in gang territory or out in the middle of the desert. We lived in the car for about a month until there was space at a family shelter.\"\n\nWhen Joanne looked over at her daughter, Bailey only shrugged. This was news to her as well.\n\n\"They helped us get on our feet. They got me and Michael in school and they found Mom a better job,\" he continued. \"Four months later, Mom saved up enough to get an apartment and we moved out of the shelter. She never let us forget it . . . being homeless with nothing but the clothes on our backs. So every year after that, we spent Thanksgiving and Christmas at the city mission where ever we were helping make dinner for people who had less than we did. She didn't want us to forget where we came from. Oh, don't give me that look; I'm no cook and you know it. Mostly I put cookies on plates, mop floors or wash dishes to stay out of the way.\"\n\n\"You should have told me,\" Bailey said softly. \"I'd have gone with you.\"\n\n\"Thanks, sweetheart,\" he gave her a heartbroken smile. \"But I needed to do this by myself today. . . . I haven't gone back since Mom had her stroke. I called Michael and he was at the homeless shelter in Montgomery . . . And in a way it was like the three of us were together again.\"\n\nJoanne reached out and squeezed his hand. Gabriel smiled meekly.\n\nBailey gave him a sweet kiss on the cheek, then got up to help clear the dishes. Joanne and Gabriel talked some more. She was continually impressed at how considerate and thoughtful he was. She also appreciated that Gabriel&mdash;the TV star&mdash;would spend his Thanksgiving holiday making someone else's dinner with no fanfare or publicity. He could have used it as a photo op to grab some more headlines (\"Soap opera star who took girls to prom does good deeds!\") but instead, he just showed up as a guy named Gabe to help people who were less fortunate for a few hours.\n\nAs the evening wore on, some people started to leave. The rest settled in front of the television to watch Christmas Vacation. Little Caleb was asleep on Gabriel's lap while his sister snuggled up on his side and the dog curled up at his feet. It seemed that the entire family had welcomed Gabriel as one of their own.\n\nSome of the men were still outside telling lies to one another when Joanne led Bailey back to her bedroom.\n\n\"You've got quite a guy there, honey,\" she said.\n\n\"I know, Mama,\" her daughter replied, a dreamy smile on her lips.\n\n\"Bailey . . . April's gonna stay over with Aunt Stephanie and Uncle Mark tonight. They need someone to watch the kids tomorrow,\" Joanne patted the mattress on the bed and the two sat down. \"I want you to invite Gabriel to stay here tonight.\"\n\n\"You what?\"\n\n\"I want you two to stay here tonight,\" Joanne repeated. \"I know you two are sleeping together and your daddy . . . well, he just pretends not to know. You'll have yours and April's room all to yourselves tonight.\"\n\n\"Why?\"\n\n\"Because tomorrow, I'm gonna get your daddy up early and make him go shopping with me. I wanna hit all the early bird sales,\" she said, a conspiratorial glint in her eye. \"Bailey . . . four generations of Crawford women have made babies in this bed . . .\"\n\nHer daughter's eyes got wide.\n\n\". . . And since there aren't any boys still carrying the Crawford name, there probably won't be any more,\" Joanne paused to run her hands over the hand-carved posts and intricate woodwork. The frame and slats had been replaced and rebuilt several times over the years, but the sturdy mahogany head- and footboards were constant for over a hundred years. \"I want you to make love to Gabriel right here tomorrow morning. I know you're on the pill and you're too young to be havin' babies, but I want you to feel what the rest of us did when we made love to our man in the family bed.\"\n\n\"You weren't too young,\" Bailey whispered.\n\n\"Yes, I was,\" Joanne said. \"I was eighteen when I got pregnant and I had no business being a mommy then. Don't get me wrong; you and April are the best thing that ever happened to your daddy and me. But we shoulda waited until I finished college and your daddy got through trade school. We woulda had so much more to give you girls . . .\"\n\n\"Oh, Mama!\" The two shared a tender hug.\n\n\"Gabriel loves you more than life itself,\" Joanne lovingly cradled her daughter in her arms as she had so many times before. \"And I know you love him, too. That's why I want you to have him in this bed. Pretend like you're makin' a baby like the rest of us Crawford women. . . . We've got to stick together, you know.\"\n\n************* \n\n\"Hey, Jimbo, come check this out!\" one of the guys in the shop yelled.\n\nAndy didn't bother to look up from his desk. He was balancing the books for the end of the month. Business was good; a little slower than he'd like, but even in a tough economy, car repairs aren't things people usually put off. He was also thankful that his job wasn't one that could be outsourced to Bangalore or shipped overseas to Shenzhen.\n\nHe did notice that more and more people were paying with credit cards instead of cash, and he was doing fewer minor repairs. It seemed that folks were waiting until major things broke instead of bringing their cars in for regular maintenance. It wasn't smart for the car owner, but it was good for his business.\n\n\"What is it?\" the other boy sounded annoyed. He'd been working on an alternator all morning and was having a heck of a time getting it back in.\n\n\"Come look at this Skylark!\" the first mechanic said. \"And check out the babe that's driving it!\"\n\nNot bothering to look up, Andy chuckled. Twenty years ago, he would have been the one with one eye on the job at hand and the other eye on the lookout for girls.\n\n\"Hurry up! She's coming this way . . . Wait . . . she's pullin' in . . . Holy crap! It's Bailey!\"\n\nHis eyes wide, Andy walked out of his office into the shop. Sure enough, his daughter was behind the wheel of Gabriel's gorgeous Skylark convertible. She was just turning the corner but he could hear the distinctive rumble of a big American V-8.\n\n\"When did she get hawt?\" one of them asked to no one in particular.\n\n\"She's always been hot,\" Andy said, a little more defensively than he'd have liked. \"You boys just never noticed.\"\n\n\"What were we thinking?\"\n\n\"You were too busy chasing her sister,\" he snorted. \"You all had your chances and now she's found herself a TV star.\"\n\nAndy couldn't help but smile as his daughter pulled to a stop in front of one of the garage's empty bays. Her hair was pulled back to keep it from blowing in the wind. In the warm spring air, it was no surprise she would be driving topless . . . er, with the top down.\n\nShe got out to the admiring gazes of the guys who worked in his shop. Last summer, their eyes would have been squarely fixed on the car. Now, they were ogling the girl, too.\n\nEven Andy noticed&mdash;disapprovingly&mdash;that the young men who worked for him were eyeing his daughter. These were some of the same boys who never would have given her the time of day before. He knew what changed: Bailey was more confident. She stopped wearing baggy clothes that covered up her curves. She put on a little bit of make-up and dressed better. She felt pretty because Gabriel had convinced her that she was. There was a new spring in her step, a broad smile on her face and a twinkle in her eye.\n\n\"Hi, Daddy,\" she smiled, seemingly oblivious to the stares of the other mechanics at the garage. The younger guys who worked for him were a year or two ahead of the twins in school. Over the years, he'd had over two dozen young men come through his shop and these boys were no different. They had come up through the vo-tech school and would either move on and open up their own shops soon, or they'd move away once they realised that doing business in Washington County was going to be a lot tougher than they thought. \n\n\"Hi, Pumpkin,\" he said as she gave him a big hug. Since school started, he found that he really missed his daughter. Even if she hadn't been living away, he would still be seeing less of her. In their second semester of college, both girls were taking a full load of classes and working two jobs to try and save some money for the next year's tuition.\n\n\"Do you like my new car?\" she asked, smiling sweetly.\n\n\"Your new car?\" his eyebrow shot up.\n\n\"Gabe sold it to me,\" she said.\n\n\"How much?\"\n\n\"A dollar,\" she replied.\n\nAndy frowned. First of all, Gabe's Skylark was worth closer to twenty thousand dollars. Second, he didn't like the idea of being given things for free; Andy Crawford was a proud man, and disdained even the notion that his family might be accepting a handout. And third, he was jealous that Gabe had three cars that he could simply give away if he wanted. \"Just a dollar?\"\n\n\"Well . . . I had to tell him I loved him, too,\" Bailey blushed.\n\nHe did his best to not roll his eyes or make a face. He didn't like the idea of his little girl telling anyone other than he or his wife that she loved them. But he knew there was no avoiding this. Gabriel MacKenzie was Bailey's first love. And Andy was just going to have to live with it.\n\n\"Do you?\" Andy asked despite himself. \"Do you love him?\"\n\n\"Yes, Daddy,\" she replied with that dreamy smile. \"You know I do.\"\n\nWith a sigh, Andy led her in to the office while the guys gathered around the car. He noticed that their eyes lingered on Bailey's backside as she walked past.\n\n\"I need your help, Daddy,\" she batted her eyes at him. \n\nAndy knew he was in trouble whenever she did that. \"What do you need, Pumpkin?\"\n\n\"Well, I need insurance,\" she said. \"And I need you to look at the car to see if anything is wrong with it.\"\n\nThat second part was a lie. If his other things were any indication, Gabriel had certainly taken care of the car. And Bailey knew enough about cars to tell if it was in good shape or not by herself. Still, he appreciated that she would come to him.\n\n\"I've never had to buy insurance, so I was wondering if you'd go with me to get a policy on the car,\" Bailey continued. \"Then I thought we'd put the car up on the rack and take a look at her.\"\n\nAndy looked over at the clock on the wall. It was early afternoon and business wasn't going to pick up. Besides, the guys in the shop didn't need him to finish the jobs they were assigned.\n\n\"Shouldn't you be in class right now?\" he asked with a frown.\n\n\"School got cancelled today,\" his daughter said. \"A water main broke down on Fourth Ave last night so BCC closed down. We might be out tomorrow, too.\"\n\n\"Okay, let me get my jacket.\" On his way out the door, he stopped by to say something to Mike, one of the older guys who worked for him. Many years ago, he had also been a graduate of the Washington County vo-tech school, but he didn't have the ambition or the business acumen to run his own shop. He was a hard worker who could figure out just about anything, so Andy kept him around to help mentor the younger guys and run the shop when he was away. Over the years Mike had become a good friend and trusted confidante.\n\n\"I'll be back in a little while,\" Andy said. \"Make sure Einstein gets that tranny put back together today. Mrs. Salyers will be by to pick up the car in the morning. And tell Jimbo that he may have to drop the front shock out of the Prelude to get that alternator back in it. How are the brakes coming on the Taurus?\"\n\n\"They're shot. I've got pads and shoes, but we're going to have to order a new master cylinder.\"\n\n\"They grow up fast, don't they?\" Andy quietly changed the subject.\n\n\"That they do,\" the other man replied.\n\n\"Don't be smilin' like that, Mikey. Your little girls are gonna grow up before you know it.\"\n\n\"That's what I'm dreading.\" The two men stood there watching the guys flirting with Bailey and wondering why they had never seen the beautiful young woman she had become. Andy shook his head as Mike supportively clapped him on the shoulder.\n\nBailey offered her dad the keys, but he declined; Andy knew she was proud of her car and he was just happy to have some time with his daughter. She fired up the engine and revved the big block a few times to show off.\n\nThe insurance agent was the only one in town; he also doubled as one of the county's four lawyers. They got a full coverage policy. Andy balked at the cost of insuring an \"antique\" car, but Bailey proudly not only said she wanted a separate policy, but that she would pay for it. \n\n\"Why do you think I've been working two jobs?\" she asked. She was keeping her grades up, so Andy had no choice but to acquiesce.\n\nShe learned all about auto insurance: liability, collision, comprehensive, bodily injury and the like. When they emerged from the office, she had her new policy in hand and beamed with pride at accomplishing something on her own. \n\nAndy was of two minds about this. He and Joanne raised their girls to be independent and know how to take care of themselves, but on another level, he realised that this was one less thing that Bailey would need him for.\n\nBailey drove him back to the house where they had dinner with her mom. Joanne was as a surprised as he at the new-for-her car, but she said nothing. Then Bailey changed into a ratty pair of jeans and old sweatshirt and the two of them drove back down to the shop, which was closed for the evening.\n\nThey put the car up on the lift and gave it the once over. Andy was glad to get some alone time with Bailey. Especially since he knew she really didn't need him for any of this. Even though he knew it was a young woman under the car with him, he could only see the nine-year old girl who did more rolling around on the creeper than actually helping when it was time to change the oil. He knew things were about to change when Bailey dropped the bombshell on him.\n\n\"Daddy, how do you know you're in love?\" \n\n\"You just know, Pumpkin,\" he said, not liking where this was going. Gabriel and Bailey's romance was progressing predictably. He went back to New York after the holidays and was working regularly. Bailey had gone to visit him a couple of times and he was coming back for long weekends with increasing frequency. The girls were still living in Gabe's house and they were doing well in school. \n\n\"When did you know with Mama?\"\n\n\"The moment I first saw her,\" Andy said. His smile became wistful as his memory drifted back to a time all those years ago. He also slowly took a step or two from denial towards acceptance. \"Just as you knew you were in love at prom.\"\n\nHis daughter blushed.\n\n\"Bailey, I'm only going to say this once because I know you don't wanna hear it, and it really ain't none of my business,\" he drew in a deep breath. \"Are you sure about Gabriel? He's a nice guy, but he's a lot older than you. And he's your first boyfriend . . . Is that really the best thing for you?\"\n\n\"I don't know, Daddy,\" Bailey said softly. \"We've talked about that a lot . . . I mean, the age thing. He keeps trying to talk me out of being interested in him . . . it's like he's trying to keep me from getting hurt.\"\n\n\"Is it working?\"\n\n\"No,\" she replied. \"I keep trying to figure out what it is . . .\"",
        "\"He's a nice guy, Bailey,\" Andy said. \"He's got everything going for him. Gabriel's smart, good-looking, famous and rich. And he's got my little girl's heart. I know I should be able to find something wrong with him, but I can't. Even the fact that he's my age doesn't bother me because I see how good he treats you.\"\n\n\"I'm glad you think so.\" She drew in a deep breath before speaking. Her voice was so low, he could barely hear her. \"Daddy . . . Gabe asked me to move to New York with him.\"\n\nAndy tried not to look devastated.\n\n\"I haven't said yes,\" Bailey said quickly. \"He just asked . . . he doesn't want the distance to break us up.\"\n\nThe two had dropped all pretense of working on the car. Andy took his daughter's hand and led her back to the office. They sat in the chairs opposite his desk. Neither spoke for a long time.\n\n\"I don't want you to go,\" he said softly.\n\n\"Then I won't.\"\n\n\"No . . . it's not that, Pumpkin,\" Andy sighed. \"I don't want you to go because I miss you already. I hate that you're living in the city. I hate that I don't see you and April every day. I feel like I'm missing out on this part of your lives. But I know that it's the best thing for you. You have a nice place to live in a safe neighbourhood and you don't have to drive an hour each way.\"\n\nBailey reached out and took her father's hand.\n\n\"That night . . . when Gabriel called and told us you were in that accident . . . I thought your mom and I had lost you,\" his voice was barely audible. \"I didn't ever want to let you out of my sight again. But that's not practical. You're a big girl now . . . no, you're a woman now . . . and my little girl has grown up. You and your sister going to college is the next step in your lives . . . and getting married and having a family is next after that.\"\n\nAndy looked into his daughter's eyes and saw tears. He had to stop and wipe his own away. \"If you love Gabriel, and you're sure about it &hellip; you should follow your heart. It pains me to say that, but it's the right thing to do.\"\n\n\"Thank you, Daddy.\" Her voice shook. \"I love you.\"\n\n\"I know, Pumpkin. I love you, too.\"\n\n**************** \n\n\"Are you ready?\"\n\n\"As ready as I'm every going to be,\" Gabe took a deep breath.\n\n\"Close your eyes,\" Bailey said. The other three girls giggled. Bailey took one hand, April the other. He heard the French doors open and then they led him in to the master bedroom of his mother's house. They took a few steps. \"Okay . . . one . . . two . . . three!\"\n\nHe felt as if he were in an episode of While You Were Out. The only things missing were Teresa Strasser and Andrew Dan-Jumbo.\n\nGabriel's jaw dropped when he saw what they had done to the room. Nearly everything he had left in the room was gone. After turning the girls loose on the room, he hadn't checked in on the project. Bailey gave him a couple of updates of the most generic kind (ie&mdash;\"We're almost done painting\" or \"We picked up an end table the other day\"), but other than that, no one said a peep.\n\nWith the spring semester over, he came home for a week-long vacation from the show. April and Bailey were taking summer classes and would continue living in the house. They were both doing well, bringing home A's and B's. After pestering the people in the financial aid office, they had secured scholarships that would cover most of their tuition for the summer and the next year. Joanne and Andy were helping out with their books and the girls had each saved up some money from their jobs.\n\nMorgan and Kimmy were moving back home for the summer. Both were having difficulty at school. Morgan's problems were financial; she simply didn't have enough money. Her parents made too much to qualify for need-based aid but not enough to actually pay for college. Kimmy, who was already the wildest of the foursome, had found that without parents there to make her get up for class and without professors who would hunt her down and make sure she did the work, she was struggling to keep her grades up.\n\nIn the back of his mind, Gabe knew that there was only a 50/50 chance that all four girls would be back in the fall. That made this time with his \"prom dates\" all that much more special.\n\nThe girls had painted the walls in bright colours. New built-in cabinets framed the television and there was a new canopy bed in the middle of the room; Gabe later found out it had been built by Morgan's father. Pictures covered the walls. Not so many that they were smothering, but enough to trigger memories. Gabe walked around the room in silence, looking at each of the careful touches the girls had put into the room. He could still feel his mother's presence, but it wasn't overwhelming. The furniture had been re-arranged and some pieces brought in from other rooms to make it something new.\n\n\"I love it,\" he said softly. \"You guys did a wonderful job. Thank you.\"\n\nGiving each of the girls a hug, Gabe made sure he let them know how much he appreciated the work they put in to the project. He set up the autotimer on his camera and the five of them posed for a picture, their first together since prom night a year before.\n\nAs the girls filed out, Bailey took his hand. She led him to the walk-in closet which was empty save for two items. Hanging over the back of the door were two bathrobes, one blue, one pink.\n\n\"When we're here alone, this is all we are going to wear,\" she said, batting her eyes at him. Before Gabe could jump her, she wiggled out of his grasp, winked and went to get ready for dinner.\n\nHe treated the four girls to a nice meal at a restaurant they normally would not set foot in. They talked about anything and everything. The girls told embarrassing stories about Bailey. Gabe dropped names and shared the latest showbiz gossip making the rounds in New York City.\n\nWhen the meal ended, Bailey drove back to his house with him, the other three returned to their parents's houses.\n\n\"We really appreciate you letting us live here,\" Bailey said as they went into the living room.\n\n\"Well, I appreciate you girls bringing a little bit of excitement back to my life,\" he said taking her in his arms. \"I was in a rut and you got me out.\"\n\nThey kissed tenderly, happy to have her in his arms. Her body felt so soft, her skin so smooth. Gabriel savoured the touch of his lover against him. \n\n\"Take me to your bed,\" she whispered.\n\n\"No,\" he left a sloppy trail of kisses across her cheek. \"I'm going to take you to our bed.\"\n\nPicking her up in his arms, he carried her to the newly-remodeled bedroom. Stepping over the threshold, he walked over to the bed as she nuzzled up against his neck.\n\nAs he set her down on the mattress, Gabe noticed that the bed was somehow just the right height for him. Bailey pulled his shirt out of his pants and he began unbuttoning her blouse.\n\n\"I love you, Gabe MacKenzie,\" she moaned as he cupped her breasts. She had his belt unbuckled and soon his pants were on the floor as well. Bailey lifted her hips as Gabe pulled her skirt down and flung it across the room along with her panties.\n\nShe fell back on the bed, splayed out for him to see. He took her in with his eyes. \n\nBailey's breasts stuck up in the air. They still sat up high on her chest, although they were heavy enough to be showing the first signs of sag. Her nipples were hard, the aerolae crinkled around them. She had slimmed down a little more, her time on the elliptical and Bowflex paying off. Bailey would never be as slim as her sister, but Gabe didn't care.\n\nHe loved her big round breasts and wide hips. He even liked the cute little pooch of her belly. It was who she was, and he never wanted to lose that. Her eyes twinkled in the moonlight shining through the windows and her dimpled smiles made his heart melt.\n\nShe spread her legs showing off her neatly trimmed pussy and swollen labia. Her clit was engorged with excitement. The abstinence forced on them by the distance&mdash;and the daily masturbation sessions&mdash;had taken a toll on her, too.\n\n\"And I love you, Bailey Crawford,\" he leaned over and kissed her. His cock rubbed against her pussy, making it even harder.\n\n\"We're going to stay like this for the next two days,\" Bailey decreed and he was in no mood to argue. \"It's going to be just you and me. No clothes. No trips out. We're going to sit around the house, hold each other and when you get your strength back, you're going to fuck my brains out.\"\n\n\"I like the sound of that,\" Gabe smiled. \"Are you sure April won't be back early?\"\n\n\"I'm very sure,\" she purred. \"She'll be gone until Monday when classes start. Now come here and relieve some of my tension.\"\n\n\"Yes, ma'am,\" he laughed and fell on to the bed with her. \n\nBailey pushed him on to his back and began to kiss her way down his body. He moaned when she nibbled on his collarbone.\n\nGabe's cock twitched in her grasp and she began to stroke him.\n\n\"That feels so good, Bailey,\" he whispered.\n\n\"I'm glad you like it,\" she purred. \"I've got a surprise for you.\"\n\n\"What is it, sweetheart?\"\n\n\"I'll be right back.\" Rolling over on her side, she reached for the remote control. The TV came on and Bailey activated the built-in DVD player.\n\n\"What's this?\" \n\n\"You'll see.\"\n\nGabriel gasped when he saw the custom title screen of the DVD. It was a picture of them taken when she visited him in New York. She hit the \"play\" button and the first scene started.\n\nShe was sitting on one of the couches in the living room wearing a casual outfit.\n\n\"Hello, Gabe,\" the Bailey on the TV said. \"I just wanted you to have something to remember me by when we're not together. I love you.\"\n\nBailey blew the camera a kiss then the screen faded. \n\nIn the bed, she could hear Gabriel's breathing get heavier.\n\nWhen the image faded back in, Bailey was laying in the bed in the guest room. She was nude. Her hair was pulled back and her legs were spread wide, showing off her neatly trimmed pussy.\n\n\"I wish you were here,\" the TV moaned as Bailey began to caress her body.\n\nLooking over at Gabriel, Bailey saw his eyes fixated on the television. His face was flush with excitement. He jumped slightly when she leaned over to kiss him.\n\n\"Watch me, Gabe,\" she whispered. The sound of soft moaning filled the room from the speakers. \"Watch what I do when you're not here . . . Three times a day. Just like you told me to.\"\n\nHis eyes flicked away from the TV just long enough to meet hers. They smoldered with desire.\n\nShe looked away and resumed kissing his body. Her hand went back to his cock which was rock hard. He cried out when she bit each of his nipples gently.\n\nAnd he couldn't help but groan when her lips trailed across his stomach and down to his cock.\n\nBailey stroked him a few times as the video continued to play. She glanced over at the TV and saw that she was fondling her breasts for the camera. \n\n\"I wish you were here,\" the TV said, as if on cue. \"I wish you were here to stick your big cock in my mouth!\"\n\nJust then she enveloped the head of his cock between her lips. She saw his eyes roll back into his head and he clenched the sheets between his fingers.\n\nSmiling to herself, she began to work his cock with her tongue. What she lacked in technique and experience, she more than made up with enthusiasm and a fair amount of natural talent.\n\nBesides, she knew that most guys subscribed to the belief of \"There's no such thing as a bad blow job\". At least that's what Kimmy had told her.\n\nHer head bobbed up and down on his cock. Each time she took him a little deeper. Gabe grunted with pleasure when she hit just the right spot. Her pussy became slick as she thought of taking his cock inside her once she was done with him in her mouth.\n\nShe could hear herself moaning a little louder on the TV. \n\n\"I'm so wet for you, Gabe,\" she was saying. \"I want your cock inside me right now!\"\n\nBailey looked up again and saw that his eyes were still glued to the television and she resumed the assault on his cock.\n\nAlternating between stroking him with her hand and sucking with her mouth, Bailey brought him to the edge several times. His knuckles were white as he resisted pushing down on her the back of her head and thrusting up into her mouth.\n\nShe heard herself moaning a little louder and knew the scene was about to end. \n\n\"Oh, god, Bailey,\" Gabe groaned. \"You are so fucking hot . . . I can't . . . I can't hold it much longer . . .\"\n\nA little faster and harder, Bailey worked his cock with her hands and mouth. She nibbled along the soft bottom of him and around the head.\n\nWhen she knew that her on-screen orgasm was imminent, Bailey cupped Gabe's balls and squeezed.\n\n\"Fuck!\"\n\nShe felt his balls contract and his head flared in her mouth. Instead of swallowing, she pulled her head back and pointed his cock at her chest.\n\nThe first spurts of cum came out with more force than she expected. Several drops landed on her cheeks and chin. The rest poured out on to her breasts. \n\nGabriel thrashed about on the bed. Unconsciously, he began to buck his hips against her.\n\nBailey milked him until he was pumping dry.\n\nThe only sounds in the room were Gabe's laboured breathing and the moans coming from the television. Bailey reached for the remote and paused the DVD. \n\nIt was a few minutes until Gabriel recovered.\n\n\"Oh, my god,\" he gasped. \"That was the hottest thing I have ever seen.\"\n\n\"That was just the first scene.\"\n\n\"There's more?\"\n\n\"Of course,\" she giggled. \"I've had lots of time. It gets better, too.\"\n\n\"I don't know how it could get better, sweetheart.\" \n\n\"You'll just have to wait until you get back to New York and watch the rest.\" She hadn't let go of his cock and it seemed he was coming back to life. Bailey pressed her body against his. Gabe reached for her, trying to pull her in for a kiss, but she pulled away.\n\nHe looked puzzled until he saw her wiping her face with her fingers. She wiped the cum away, then sucked on her fingertips. He moaned.\n\n\"Sorry about that,\" Gabe said as she made sure all the cum was off her face. His hands went to her chest and he massaged the remainder of his spunk into her soft skin.\n\n\"Don't be,\" Bailey giggled. \"I wanted you to cum on my tits.\"\n\n\"Why, sweetheart?\"<br/>\n\n\"Don't all guys like that?\"\n\n\"I guess,\" Gabe shrugged. \n\n\"Don't you want to cum on my chest?\"\n\n\"I'd rather cum inside your pussy or your mouth,\" he replied. \"Where did you get that idea?\"\n\n\"That's what they do in all the videos.\"\n\n\"What videos?\"\n\n\"All of Daddy's porn movies,\" Bailey blushed. \"They all end with the guy shooting all over the girl's face, tits or ass.\"\n\n\"I love it when you talk dirty,\" Gabe pulled her close.\n\n\"I love it when you make me feel dirty,\" Bailey said as she swung her leg over Gabe's hips. His cock was magically back to full mast. \"I love it when I can turn you on. I love it when you take me and when you pull my hair and slap me on the ass.\"\n\n\"You do?\" he seemed to breathe a sigh of relief. \"I was afraid of being too rough or nasty with you.\"\n\nBailey closed her eyes and bit her lip as she lowered herself down on his cock. Gabe reached up and she thrust her chest into his hands. \n\n\"Gabe, you can be as nasty as you want with me,\" she moaned as she took his full length inside him. \"I trust you and I want to please you. . . . Because I know you want to please me, too. If anything, I want you to be rougher with me. I love feeling your weight on me. I love it when you do me doggie style and I really love it when you throw me down and take me.\"\n\n\"You do?\"\n\n\"Yes, lover,\" she leaned in and kissed him lovingly. \"Not all the time . . . but I love to think that I turn you on so much, you can't wait to have me. I like that you don't do it all the time and that usually you're the perfect gentleman . . . but sometimes, I want you to lose control and fuck me into next Thursday.\"\n\nThey held each other for a long time. Every now and then, one of them would move, just to keep his cock hard. She straightened out her legs and they lay together, cherishing all the time they had.\n\n\"So how much porn do you watch?\" Gabe tried to sound nonchalant, but he couldn't hide the laughter in his voice.\n\n\"Down boy!\" Bailey began to tickle him. He tickled her back and soon they rolled over. \n\nGabe moved his hips a little faster and pushed into her a little harder.\n\n\"I've missed you so much, Bailey,\" he said, looking into his lover's eyes.\n\nShe looked lovingly back at him. \"I've missed you, too.\"\n\nThey kissed tenderly. He could feel her breasts against him. Her body was so soft. Her pussy was soaked and he moved in and out of her easily.\n\nIn his mother's bedroom . . . no, it was his bedroom now . . . Gabriel and Bailey made love long and slow. All the while, they shared their secrets and desires with one another. They spoke of their hopes and dreams with the understanding that neither would hold the other to any promise made in bed.\n\nIt allowed them to explore the limits of their desires. Through their shared fantasies, they grew closer.\n\nWhen they grew tired, Bailey pushed Gabriel over on his back and rode him until they both came. Gabriel rubbed her clit as she ground her hips against him. She nearly passed out in his arms and he was glad April had gone home, lest she hear Bailey's screams of ecstasy.\n\nHe fell asleep inside his lover and they held each other throughout the night. When they awoke, Gabriel and Bailey made love again and again, never leaving the house. And never far from the other's comforting touch.\n\n**************** \n\n\"Gabe, we have to talk,\" Bailey said, setting their plates down on the table.\n\nBoth were wearing their bathrobes to ward off the evening chill.\n\n\"About what, honey?\" he poured two glasses of filtered water. They sat at the table and started their meal. \n\nBailey only picked at her food. \"About next year . . . about me moving to New York with you.\"\n\nHis head shot up, his eyes wide.\n\nShe took a deep breath. \"Gabe . . . you know I love you.\"\n\nHe frowned. \"But . . .\"\n\n\"I can't move,\" she said softly, hoping he wouldn't be angry. \"I'm not ready.\"\n\n\"Bailey . . . I&mdash;\"\n\n\"No, wait,\" she held up her hand. \"A part of me wants to. You have swept me off of my feet and you're the perfect gentleman. But I'm a small town girl. It's been hard enough moving to the city to go to college. I don't know that I'm ready for New York. And I don't know if I can leave April and my folks.\"\n\nHe didn't say anything for several long moments. He didn't look angry, which was good.\n\n\"I also . . . I mean,\" Bailey paused to gather her thoughts. Even though she had rehearsed this conversation over and over in her mind, she was drawing a blank. \"I know you and I have a lot going against us. There's the age and the distance thing . . . but I want to make 'us' work and I know you do, too.\"\n\nShe fidgeted for a second.\n\n\"However . . . if we don't work out . . . if something happens, I need to know that I can make it on my own,\" she didn't dare look him in the eyes. \"I at least want to finish at BCC. If I moved to New York with you, what would I do? I'm sure I can't afford college there. And I don't want you supporting me, either.\"\n\n\"I understand,\" he said quietly, and she got the feeling that he did. \"Bailey, I miss you . . . you can't know how much I wish you were with me all the time. But I don't want to rush you or rush us. At the same time, I wonder if you'll still want me in four years when you graduate.\"\n\n\"Oh, Gabe . . .\"\n\n\"People do a lot of growing up from the age of eighteen to twenty-one,\" Gabe said, his voice even. \"What if you decide you want someone else? I wouldn't blame you. I can't leave my life behind. And I know I can't ask you to give up who you are or leave your family.\"\n\n\"I won't want anyone else,\" her voice began to quiver.\n\n\"How do you know, Bailey?\" For the first time she could remember, she saw fear in his eyes.",
        "\"I don't know,\" she whispered.\n\nNeither spoke for a long time.\n\n\"We've lasted through my first year of college,\" Bailey smiled weakly. \"We can make it three more.\"\n\n\"I know, Bailey. You don't know how much you've changed my life. All for the better.\" He reached out and took her hands. \"I will do whatever I have to in order to make 'us' work. I will fly home every weekend if I have to. I will bring you to New York. I just want you in my life.\"\n\n\"I want that, too,\" she said. \"I'm sorry you have to wait around for me&mdash;\"\n\n\"Don't be.\"\n\n\"&mdash;And I know that I want you in my life, too,\" she smiled weakly. \"I will do whatever I have to for 'us' but I have to make sure that I'm doing the best thing for me, too. And right now, that means going to school and getting my degree.\"\n\nThat much was true. Despite her judgment being clouded by love, she was level-headed enough to know that her future was dependent on finishing college rather than landing a sugar daddy. When she looked in his eyes, she saw that Gabe knew it, too.  \n\nHe shocked her by standing suddenly. He extended his hand and Bailey took it.\n\n\"We've got the rest of this week before I go back to New York,\" Gabe said, drawing her to her feet. \"I'll be home again in two weeks for your birthday and then I want you to come see me once the summer session is over. We'll figure out the rest later.\"\n\nBailey smiled with relief. This had gone a lot better than she had anticipated. Of course, in her mind, she had run through all of the worst case scenarios, up to and including him throwing her out and them breaking up.\n\nWithout another word, Gabriel led her back to their master bedroom, the meal forgotten. \n\n**************** \n\nThe next six months passed in a blur.\n\nGabe returned to New York to work. His part on the show was expanding and he was working nearly every day, a blessing in his business. In the evenings, he did some voice-over work and a few small off-Broadway projects. As soon as shooting ended on Friday afternoon, he made time for Bailey.\n\nRacking up frequent flyer miles left and right, Gabe went to see her at least every other weekend. When he was in college, there was a guy in his dorm who was carrying on a long-distance relationship with his high school sweetheart. When Gabe asked how he could stick with her over the distance, Keith simply said, \"You have to want to.\"\n\nAnd that was that. Both Gabriel and Bailey wanted to make their relationship work. There was an implicit understanding that their circumstances weren't permanent and luckily he had the means to make the time between visits as short as possible.\n\nNeither Morgan nor Kimmy returned to the house in the fall. Due to the tough times, Morgan turned to the Navy for help. With promises of assistance for college, a healthy signing bonus and less of a chance at being sent to Iraq than the Army or Marines, she left at the beginning of August for the Great Lakes Naval Training Center in North Chicago, her first trip so far away from home.\n\nKimmy dropped out of school because she partied too much. She kept in contact with April and Bailey, but she had different priorities in her life. At first, Gabe was willing to let her stay in the house if she could hold down a full-time job, but the twins both said that one of the original preconditions for living away from home was staying in school. They hated to turn their friend away, but neither would be deterred from their primary focus: being the first people in their family to graduate from college.\n\nHe was also reluctant to continue taking their money, but both girls insisted. Like their parents, neither of them wanted to be considered freeloaders or taking something they didn't earn. Everyone knew they weren't paying market value, but it made them feel better so Gabe didn't argue. Besides, he was putting all their money in a savings account and was going to return it to them as a graduation gift.\n\nOn a couple of long holiday weekends, Bailey came to see him in New York. She got to know his friends and even talked about looking for a summer job there.\n\nGabriel was in love and it sickened everyone around him (in the good way). All of his phone conversations that ended with, \"Love you\" usually brought rolled eyes and gagging sounds from his friends who were always ready to ride him about robbing the cradle. Still, he knew that without exception they were happy for him and they liked Bailey.\n\nHe set up a webcam in the study at his house and every night he and Bailey stayed up talking or even watching TV \"together\". He made sure to write a thank you note to Al Gore for inventing the Internet and sent a bouquet of flowers to John McCain showing his gratitude for coming up with the Blackberry.\n\nThe one thing he missed was holding Bailey at night and waking up with her in the morning. Even if she was asleep, she was always touching him. It might just be her hand on his hip, or her foot intertwined with his, but they always in contact with one other, and he missed that. Of course, he also missed the sex, but the cuddling was the hardest thing for him to give up.\n\nIt helped a little that Bailey had made him the DVD. Actually, there were four of them. Loaded up with short scenes, often only ten minutes or so long, Bailey had filmed herself masturbating for him. She said the borrowed the video camera from her folks and thanks to Morgan's mad video editing skillz, they put the files on some DVDs for him to watch. She made sure to moan and groan for the camera; she wanted to entertain him as much as herself. She showed of a wide variety of toys and ingenuity and no two scenes were alike. There was even one of her in the hot tub.\n\nGabe was only allowed to watch once scene per night and often he called her as the video was playing. He let her know what he was doing and often their conversation devolved into some down and dirty phone sex. For a girl who had seemed so shy and innocent when they met, Bailey turned out to be quite a firecracker. She had a wicked sense of humour and was sexually adventurous. \n\n\"Just because no one wanted to do it with me doesn't mean I didn't think about it,\" she said when Gabe asked her once. \n\nLike a lot of couples, Bailey's folks had a small collection of porn and a few sex toys that they used to spice up their marriage. They probably assumed that everything was well hidden, but the Crawford house wasn't that big, and the girls found the stash, mostly out of curiosity at first.\n\nBailey liked to talk dirty, especially when she knew it was going to get Gabe all hot and bothered. And of course, he didn't mind at all.\n\nAs the fall semester came to a close, things were moving along nicely. He went to see her for Thanksgiving again, this time at a cousin's house. They talked about her whole family flying to The Big Apple for New Year's and to visit with Michael and his family.\n\nDespite the distance between them, Gabriel felt that the two of them were in a good place.\n\nOne morning, on one of the last shoots before the Christmas break, Gabe was talking with Celeste and Jeffrey about a nice place to vacation. Both recommended the Caribbean. Lori suggested a cruise and Rose butted in to tell him he should take Bailey to a secluded cabin in the Poconos where they could \"hump each other like rabbits\". A lively discussion ensued.\n\n\"Gabriel!\" one of the interns called. \"Gabriel . . . Someone's been trying to get you all day!\"\n\nHe reached for his cell phone and didn't see any missed calls. \n\n\"Who is it?\" he asked. He looked up at the clock and saw he wasn't due for his next scene for a few minutes.\n\nThe intern reached into a pocket, pulled out a slip of paper and read the name that had been hastily scrawled on the back. \"Joanne Crawford . . . I think she's called everyone from the mail room to the programming VP's office.\"\n\nGabe frowned, wondering why Bailey hadn't called him on his cell.\n\nFlipping through his contacts, Gabe first dialed the Crawford house. Maybe she wanted to help him surprise Bailey over Christmas and didn't want to go through her daughter. There was no answer. He left a message on the answering machine.\n\nThen he called his mother's house. No answer there, either. He called Bailey's cell phone; it rolled into her voice mail.\n\nWith a frown, Gabe went back to his dressing room and dialed April.\n\n\"Hello?\"\n\n\"April! It's Gabe. I&mdash;\"\n\n\"Oh, thank God!\" Immediately, Gabriel knew something was wrong. April's voice was shaking. \"You need to call Mama. Do you have something to write with?\"\n\n\"April . . . April, calm down. What's wrong?\"\n\n\"You have to talk to Mama,\" the other girl insisted. \"She's been trying to reach you all day.\"\n\n\"Why didn't you call me?\"\n\n\"Because I only have your number at the house!\" Gabe could tell she was nearly in tears. \"Mama left a message at your apartment, but I told her you wouldn't be there until later. That's when she started calling the studio. Bailey's the only one who has your cell and she won't tell any of us what your number is!\"\n\nOh, dear God, Gabe thought. He kicked himself for going to such lengths to protect his privacy. He had call block on all of his phones and just then remembered that he had sworn Bailey to secrecy about his cell phone number. \"What's wrong, April? You have to tell me.\"\n\n\"You need to talk to Mama,\" she repeated.\n\n\"Okay, give me her number.\" Gabe searched for something to write with. His hands were shaking. Something had to be very, very wrong for April to be rattled so badly. He took the number down. Before calling it, he told one of the producers he was running a little late.\n\nThe phone rang three times before, Joanne picked up.\n\n\"Hi,\" he said, trying to keep his voice under control. \"It's me. Is everything alright?\"\n\nBailey's mother breathed a sigh of relief. \"Gabriel . . . Can you come home right now?\"\n\n\"What wrong, Joanne?\" He felt the blood draining out of his face. The room began to spin.\n\n\"It's Bailey, Gabriel,\" she said softly. \"We had to take her to the hospital . . .\""
    ],
    "authorname": "HLD",
    "tags": [
        "drama"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/life-is-a-soap-opera-act-02"
}