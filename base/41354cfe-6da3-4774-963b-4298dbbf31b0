{
    "title": "A Handyman's Memoir Ch. 26",
    "pages": [
        "Lee and I only saw each other occasionally over the next few weeks. Summer is a busy time at a hospital emergency room, and her schedule was crazy. Her two daughters were around more I think, but since I couldn't see their camp through the trees I'm not sure how much they were there. Occasionally I'd see one or both of them paddle by in a kayak \u2014 they always went slowly and checked my place out thoroughly. If I was outside they'd give me a good looking over, but always from a distance.\n\nOne evening I had fallen asleep reading a magazine on a chaise lounge in the gazebo on the dock. It was getting dark and no lights were on in the camp, so it looked like I wasn't home. I woke to the sound of young girls voices and giggling, and I turned my head as Becka and Emma were emerging from the little trail between our camps. There were two other girls with them, all four wearing bikini tops and shorts. Their voices were faint, but I could hear Becka and Emma describing the sex they had witnessed at my Memorial Day party. They walked across the yard to the back porch and peered in through the screens. I could almost hear the echo of one of Penny's monumental orgasmic screams as Becka and Emma described the scene to their friends. \n\nAnd then, in the fading late evening light, they walked towards the dock, and me in the gazebo. I could hear them more clearly as they got closer, telling their friends about the wild and intense fucking Ron and Mary were doing out here, and how it was all lit up for all to see. I closed my eyes and pretended to be asleep as they walked up to the dark gazebo and peered in through the screen. Becka let out a short scream when she saw me, and I opened my eyes. They all looked stunned.\n\n\"Oh hi Becka, hi Emma,\" I said, pretending to wake up. \"What brings you guys by? Everything OK?\"\n\n\"Yeah,\" Becka said quietly. \"Sorry, we didn't think you were home. We were just...\"\n\n\"Oh, that's cool,\" I said. \"Mi casa su casa, right?\" They obviously had no idea what the crazy sex maniac was saying. \"My house is your house. It's an old Spanish saying \u2014 it means you're welcome any time. How're you guys doing?\"\n\nI got up and walked out the screen door into the twilight, realizing too late that I was wearing nothing but my underwear again, this time a pair of small, too-tight, thin silk boxer shorts that showed off my prominent bulge quite nicely, if I do say so myself. Some air escaped quickly and audibly from one of the friends mouths as she got a look at me. \n\n\"Gettin' buggy,\" I said as I slapped a mosquito off my neck. \"You guys wanna sit on the porch and have a beer?\"\n\nBecka and Emma looked very unsure, but their friends quickly agreed and we made our way inside.\n\n\"Have a seat,\" I said. \"I better put on some shorts \u2014 I need a little more coverage with four attractive women around.\" They all glanced at each other and two of them stifled a giggle.\n\nI put on some proper shorts, turned on some music and the twinkle lights, and returned with five beers.\n\n\"Oh sorry,\" I said, \"do I need a shirt?\"\n\n\"No,\" one of the friends said quickly, and the others all stifled a quick giggle again. There were lots of big, unsure eyes darting around.\n\n\"So, I'm Steve,\" I said, extending a hand toward the friends. \"I haven't met you guys before.\"\n\n\"I'm Katie. Nice to meet you Steve.\"\n\n\"Hi Steve, I'm Lacy.\"\n\n\"Nice to meet you guys,\" I said. \"So, you've heard only good things about me I hope.\"\n\nThey both tried to hold back their laughter, but failed and got very red-faced with embarrassment.\n\n\"Ah, I'm guessing you heard about my Memorial Day party,\" I said. They both nodded sheepishly, trying hard not to smile.\n\n\"Well it was fun, I'll tell you that,\" I said, and they burst out laughing. Becka and Emma did too.\n\n\"Well good,\" I said to Becka and Emma, \"you're finally able to laugh about it. That's a step in the right direction. You know, having a great sex life isn't deviant or criminal or anything. It just makes life better. This past month you've been treating me like I'm some kind of wacko or something. I'm just a regular nice guy.\"\n\n\"Sorry, it was just kind of shocking,\" Becka said. \"But our mom's been talking to us about it.\"\n\n\"Oh good,\" I said. \"Your mom's great. You're lucky to have someone like her. My mom was totally uncool. How about you guys,\" I said, looking towards Katie and Lacy. \"Are your moms cool about sex and stuff?\"\n\n\"Mine is,\" Lacy said. \"She's kinda wild actually.\"\n\n\"Mine's not cool at all,\" Katie said. \"I'm nineteen and she still thinks I'm like, twelve.\"\n\n\"Well, it's tough for a parent, especially with girls and pregnancy and everything, ya know? I was talking to your mom about it after the party incident. It's not easy on them.\" We all took a swig of beer. \"So you guys were like watchin' in the woods huh? That musta been quite the sight to see. I know if I was your age I woulda been right there with ya. I'd probably still be talkin' about it ten years later,\" I laughed. \"So Emma, you're the quiet one. Quiet people are usually the most observant \u2014 I'd love to know what you saw, since I was inside and didn't see it myself.\"\n\n\"You want me to tell you what I saw?\" she said with big, questioning eyes.\n\n\"Yeah,\" I said. \"It might help break the ice between us, so we're not all so tense with that hangin' over our heads, ya know? Wait a minute, let me grab some more beers \u2014 that'll help. You guy's get high? I got some decent weed if you want.\"\n\nWhen I was inside I sent a quick text to Lee.\n\nYOUR GIRLS ARE @ MY PLACE\n\nWITH KATIE AND LACY\n\nNOT SURE WHAT TO TELL\n\nOR HOW 2 PROCEED \n\nWe cracked open fresh beers and passed around the pipe. I didn't press Emma to tell me anything \u2014 she needed a little loosening up first. When she finished her second beer she was ready.\n\n\"So who were those three women,\" she asked, out of the blue.\n\n\"Which women?\" I asked. \"At the party you mean?\"\n\n\"Yeah, there was two in here and one out there,\" she said, gesturing to the gazebo.\n\n\"There was quite a few folks inside too,\" I said. \"They're all friends of mine. Let's see, out in the gazebo, that was Mary and Ron. Ron's wife was in the bedroom with... a variety of people, but mostly with me. Mary's gorgeous, isn't she? She's like a playboy model. And here on the porch, that was my friends Penny and Carol. If there was just one guy with them that was my old friend Mark. The tall dark haired woman, that's Carol, she painted this porch for me. She's an awesome artist. I don't know if you guys are into art at all, but she teaches erotic art over near the university.\"\n\nMy phone vibrated with a text from Lee.\n\nTEACH THEM HOW BEAUTIFUL IT CAN BE \n\nBE GENTLE\n\n\"Did I mention that you've got the coolest mother in the world?\" I said.\n\n\"Was that from her?\" Becka asked.\n\n\"Huh? No...\" I said, pocketing my phone.\n\n\"So that woman painted this?\" Emma said, standing and looking at the marshland scene and the blue sky and clouds on the ceiling.\n\n\"Yeah, it's awesome isn't it? You should see the orgy mural that she painted at a friends house. It's a mind blower.\"\n\nThe girls were all mesmerized and hanging on every word I was saying.\n\n\"Penny and Carol, are they lesbians?\" Emma asked.\n\n\"No no, they're bi-sexual. You know what that is?\" I asked. She nodded. \"You all know what that is?\" They all nodded except Katie. \"No Katie?\" I asked. She shook her head, looking a little embarrassed.\n\n\"It's much more common amongst women. It's when a woman likes to have sex with men, but also with women. So like if you were in a three-way, with a guy and another girl, if you didn't touch the other girl sexually and just let the guy fuck you, you'd be a heterosexual. But if the guy fucked you, and you also licked the other girls pussy and she licked yours, you'd be bi-sexual. Trust me, being bi-sexual is so much more fun for a woman. It opens so many more doors to pleasure that weren't there before. Almost all my women friends are bi-sexual. In fact I think all of them are.\"\n\nThe girls were stunned at my frankness, but the beer and weed were keeping them loose.\n\n\"What about our mom?\" Emma asked with a sly grin.\n\n\"See, what did I tell ya,\" I said with a laugh. \"It's always the quiet ones you gotta watch out for.\" The girls all had big eyes, waiting with bated breath for my answer. \"I don't know if I should talk about her sex life with you. Let me ask you this Emma. Do you want me telling her whether you're a bi-sexual or a heterosexual when I see her tomorrow?\"\n\n\"How would you know?\" Emma asked.\n\n\"We're all gonna have sex tonight aren't we?\" I said. There was a quiet gasp from all of them.\n\n\"I know I am,\" Lacy said. She was out of her bikini top in a flash and straddled me on the futon. Her face was a foot away from mine, and with a wide smile she announced, \"I'm bi-sexual too.\" Her blue eyes twinkled, and we kissed passionately.\n\n\"Shit Lacy!\" Becka said.\n\nLacy broke off our kiss and said, \"Oh come on, you know you want to. You've been talkin' about him for weeks.\" She moved her hand to my crotch and her eyes got bigger. \"Wow, he's big!\" she announced.\n\nShe wiggled herself back on my legs and started undoing my shorts. The other girls weren't quit sure what to do, so they just watched their horny friend.\n\n\"Oh fuck!\" she said as she pulled out my mostly hard cock.\n\n\"We should go inside,\" I said. \"We're kinda on display here and I got in trouble with the neighbors a few weeks ago.\" I winked at Becka and she smiled.\n\n\"Look at this Beck,\" Lacy said, holding my cock where she could see it. \"You were hoping he had a big one.\" Becka blushed crimson red.\n\nI slipped off my shorts and walked naked into the living room holding Lacy's hand. The look on the others faces was priceless.\n\n\"Somebody bring the pipe in and I'll fill it,\" I called out.\n\n\"Come on everybody, what the fuck!\" Lacy called out. \"It's not like this shit happens every day ya know. Get your asses naked!\"\n\nThey all filed in, and Becka was the first one of the three topless. Lacy's shorts were off and she was naked, her ever-so-slightly plump body looking wonderfully soft and squeezable.\n\n\"So at your parties does everybody just walk around naked all the time?\" Lacy asked.\n\n\"Yup, sometimes for a whole weekend,\" I said. \"It's really nice, you feel so much more natural.\"\n\n\"Come on! We want to feel natural, don't we?\" she asked the others. She walked over and took off Katie's top, and then Emma's.\n\n\"My God! You guys are so beautiful!\" I said. They smiled shyly. \n\nKatie looked kind of scared, so I said, \"OK, I've got a personal question, but it's important. Have you all had sex before?\" They all nodded except Katie.\n\n\"Katie, no?\" I asked. She shook her head no. \"OK , that's cool. Don't worry, nothings gonna happen you don't want to happen, OK? You trust me?\" She nodded yes. \"Good. You can get involved in anything you want here, or you can just sit and watch. It's all cool. Maybe you'll learn something.\" She smiled sweetly, and looked more relaxed.\n\nI filled the pipe, handed it to Lacy and went to the refrigerator. When I turned around with five fresh beers in my hands the girls were all naked, walking around like it was pretty normal.\n\n\"Awesome! Damn you guys look hot!\" I said. \"Doesn't it feel nice to just wander around naked?\"\n\nWe sat around the living room in our birthday suits and they got used to the feeling. Once we'd all caught a fresh buzz Lacy made the first move, straddling me and kissing me again. My cock jumped to attention, and she slithered off of me onto the floor between my legs.\n\n\"God this is huge!\" she said, and she took a little of it in her mouth. \"Come here Beck, help me.\"\n\nBecka slowly moved toward us. I could tell it was a big step for her, getting this involved with her older neighbor, a guy who was also having sex with her mother.\n\n\"You know what I said to Katie goes for you guys too, right?\" I said to her.\n\n\"I know,\" she said, looking me square in the eyes, with a sweet smile.\n\nMaybe it was the weed, but she seemed to be moving in slow-motion. She dropped to her knees and Lacy aimed my cock at her as her head moved forward and her mouth opened.\n\n\"Oh Becka!\" I moaned as she took control and proceeded to give me one of the most sensual blow-jobs ever. It was heavenly, and she was a complete natural.\n\n\"Shit Beck!\" Lacy said as she watched her and saw the way I was responding. \"You been practicin' or somethin'?\"\n\n\"You're gonna make me cum baby!\" I said breathlessly when I could take no more. She was unrelenting, and I flooded her sweet mouth with my seed. She wasn't a swallower yet, so she let it all flow out over her bottom lip as she continued her slow assault. \"Oh God!\" I moaned.\n\n\"What the fuck!\" Lacy said in a whisper as she witnessed one of the sexiest things she, or anyone else, had ever seen.\n\nBecka finally let my cock slip from her mouth and Lacy immediately started kissing and licking the mess off her chin and mouth. As soon as she tasted my cum her passion level shot up, and after a sloppy kiss she tackled Becka to the floor and started her own assault on Becka's sweet young body, sucking on her tits while two fingers disappeared in her pussy.\n\nI tried to gather my dazed senses, and looked at Emma and Katie who were standing by the dining table, watching the sexy show. Emma met my gaze, and she took Katie's hand and walked toward me. They sat down on the futon, Emma close to me and Katie down near the end. I gave Emma a soft, sensual kiss, and she immediately responded with heavy breathing and a barely perceptible hand on my sticky, half-soft cock. Her big sister was writhing on the floor with Lacy's head between her legs, and she moaned when my mouth went to one of her lovely, firm tits.\n\nAs I worked on her small, tender nipples and massaged the surface of her soft pussy, her moaning reached a fever pitch. I could see Katie out of the corner of my eye quietly move closer to us until she was right up against the side of Emma. Without stopping my assault on Emma's tits I slid my hand onto Katie's belly, and then slowly up onto her own lovely tits. I could feel her heart beating through her chest.\n\n\"Have you ever touched a girl Emma?\" I asked quietly as I nibbled on her nipple.\n\n\"No,\" she said. Her blue eyes were dark and she was breathing heavy.\n\nI took Emma's small hand and placed it on Katie's chest. Katie moaned and her breathing shortened. We massaged her small, warm tits, our two hands moving as one, and then I slid Emma's hand down Katie's heaving belly onto her downy soft pussy hair. Our ten fingers intertwined and slowly explored as Katie's legs opened.\n\n\"Kiss her Emma,\" I whispered.\n\nEmma leaned over and kissed her, and I could feel Emma's fingers sliding into Katie's pussy. She moaned deeply into Emma's mouth. I left Emma's hand to explore on its own, and slid my body off the futon.\n\nBecka was still on her back, greatly enjoying Lacy's pussy licking.\n\n\"Have you ever tasted a girl Becka?\" I asked. She shook her head no. \"Lie down Lacy,\" I said. She laid on her back, and I couldn't resist taking her soft tits into my hands and mouth. \"Your tits are so beautiful. Come here Becka, turn around. Like this...\" I said as I positioned her over Lacy. \"Sixty-nine, my favorite position.\"\n\nLacy dug in to Becka's wide open ass, and I got her a pillow for her head. Becka explored slowly, kissing her friends thighs and softly licking a wet pussy for the first time. After a minute or two she was digging in and Lacy was loving it.\n\nI made a quick trip to the bedroom for a pack of condoms, and when I came out it was a beautiful scene \u2014 two pairs of beautiful young girls, exploring and moaning. I tossed the condoms on the futon and squatted between Katie's legs, massaging her thighs as Emma fingered her pussy.\n\n\"You're such a beautiful woman Katie,\" I said. \"Is it OK if I kiss you down there?\" I gestured towards her pussy, and she nodded between moans.\n\nI kissed from her knees all the way up both inner thighs, teasing her mercilessly. Finally I reached my target, and Emma withdrew her fingers. I licked up the length of her wet pussy and her legs spread wide.\n\n\"Fuck!\" she said, and her body shivered. I started slow but quickly worked up to my best tongue work. Her moans turned to screams and she came hard and uncontrollably, scaring herself a little I think.\n\n\"That's one of the most beautiful orgasms I've ever seen Katie,\" I said, smiling at her from between her legs.\n\n\"Oh my God!\" she said breathlessly with a growing smile. She looked like she had just learned a wonderful secret.\n\nI looked at Emma and she nodded and spread her legs, her hand gently rubbing her pussy. I shifted over to her and repeated my performance almost exactly, the only real difference being the taste of their sweet young pussies. Emma didn't cum as easily \u2014 perhaps the expectation overwhelmed her senses a bit \u2014 but when she did it was another beautiful sight. Her legs rose up off the floor and squeezed my head tight as her body convulsed for a very long time. Sweet Katie even took Emma's tit in her mouth during her orgasm, which surprised Emma.\n\nMaybe it was hearing her sister cum that triggered it \u2014 Becka came hard on Lacy's mouth seconds later, screaming out and grinding hard on Lacy's face.\n\nLacy looked up at me, her face glistening with pussy juice. \"Fuck me Steve,\" she said quietly.\n\nBecka got up and hobbled to the futon, sitting exhausted next to her sister and hugging her. She reached across Emma and held Katie's hand. I slipped on a condom and picked Lacy up off her back and positioned her on all-fours in front of me. I licked her ass and slid my cock a few inches into her tight, wet pussy.\n\n\"Oh God!\" she said as her friends huddled close on the futon watching us. The temperature in the room seemed to go up as they all knew things were escalating.\n\n\"Oh it's fuckin' big!\" Lacy said as I thrust in halfway. A few more thrusts and I was balls deep. \"Holy shit!\" she yelled. \"I fuckin' love it!\"\n\nShe fucked back into me with youthful abandon, screaming freely and often.\n\n\"Oh my god! I'm gonna cum!\" she yelled. Her arms gave out and she whimpered as her body convulsed, her head down on the rug with her arms out to her sides like a rag doll. I let her hips go when she was done, and she rolled onto her side in the fetal position, still whimpering. \"Fuck!\" she said quietly.\n\nI was still on my knees with a hard cock. Becka slipped off the futon and positioned herself on all-fours in front of me, just as Lacy had. I kissed her ass and pussy, and she squealed when my tongue found her asshole. She looked back at me with big eyes. I slipped into her pussy a few inches and her eyes closed. The corners of her mouth curled up seductively, and I pushed in and started a slow fuck, working in an inch at a time. Her big eyes opened and her smiling mouth opened.\n\n\"Oh yeah, fuck me Steve!\" she said as our bodies became one. Our rhythms matched so perfectly, and her sensuality was so overwhelming, I felt like I was with the most naturally sexual young woman I had ever come across. Then I remembered the insanely great blow-job she had given me and I almost lost it.\n\nIt was all I could do to focus on making her cum, but focus I did, and she came like the beautiful creature she was, with a whimpering laugh, like she was having the best time ever. It was perfect.\n\n\"God Becka, you are somethin' else,\" I said as I tumbled into her arms, both of us giggling.\n\nEmma walked over to us and I rolled onto my back, beckoning her down onto my still hard cock. She stepped over me and slowly squatted. The condom was well lubricated with pussy juice so I was able to work my way in, but holy cow was she tight. Her sister sat up and encouraged her when she thought I wouldn't fit. She hugged Emma, and even fondled her tits which Emma liked. It took her mind off my big cock and helped her relax, and she slid most of the way down.",
        "\"Fuck!\" Emma said quietly.\n\n\"Nice huh?\" her sister said. \"Your gonna be spoiled now. Little Tyler's not gonna cut it.\" They both laughed.\n\n\"You got a boyfriend Emma?\" I asked.\n\n\"Sorta,\" she said.\n\n\"Do you fuck him?\"\n\n\"A few times,\" she said breathlessly.\n\n\"How did you do it? Like this?\" I said, sliding my full length up into her.\n\n\"No...\" she panted, \"he was... on top...\"\n\n\"Next time you're with him push him down and do him like this. He'll love it,\" I moaned. \"Want me to show you how to blow his mind?\" She nodded yes. \"Here, put your knees on the floor. Now I'm just gonna lie still, and you fuck me with your hips.\" I guided her hips up and down with my hands. \"Hold the rest of your body still, and sorta detach your hips and pivot them up and down. Yeah, that's it baby. Holy fuck! You're a natural.\" She giggled through her panting breaths.\n\n\"FUCK!\" she yelled at the top of her lungs as she got the movement going. Her hips were a blur of youthful energy and we were both quickly reaching the boiling point. We both bubbled over together and Emma shrieked as her white hot pussy convulsed. I let out a caveman yell and pumped up into her, hoping the condom was holding together.\n\nHer sweaty young body melted on top of me, and she laid there breathing heavy as my cock shrunk inside her. \"So now you guys know why it was loud here Memorial Day,\" I said, and they giggled. \"Be honest \u2014 did you want to come over and join us that night?\" \n\n\"Yes,\" they both said, \"but then mom showed up.\"\n\n\"Maybe the three of you can come to the next party,\" I said. \"That'd be pretty wild, right?\"\n\nThey looked astonished at the thought, and didn't say anything.\n\nI looked up at sweet Katie, sitting on the futon alone. \"Katie you're not ready are you sweetheart,\" I said with a warm smile. She shook her head a little. \"That's cool. You'll know when it's right.\"\n\n\"You don't want your first time to be with all of us watching you,\" Becka said as she stood and sat next to Katie and embraced her. \"I wouldn't want that either. Maybe you can come back and have Steve all to yourself.\"\n\n\"Any time Katie. You know where to find me,\" I said. She smiled and looked excited at the thought.\n\nWe sat and talked and all walked around naked for an hour or so, the girls feeling very sure of themselves. Even Katie was very relaxed and happy.\n\n\"I guess we should go,\" Becka said after a while. \"I'm working at the coffee shop early tomorrow.\"\n\n\"OK. I'm really glad to finally get to know you two,\" I said to Becka and Emma as they all put on their clothes. \"And you two, I'm really glad you came,\" I said with a wink to Katie and Lacy. They both giggled at my pun.\n\n\"I'm glad we 'came' too,\" Lacy said, and they laughed.\n\n\"Are you gonna tell our mom about this?\" Emma said, not looking at all worried.\n\n\"She already knows,\" I said. They looked surprised. \"Like I said, you've got the coolest mother in the world. The only downside is, now that she thinks of you as adults you need to act like adults. But that's cool, you guys'll have no problem with that.\" They both gave me a kiss with an unspoken 'thank you for believing in me' look in their eyes.\n\n\"We probably shouldn't make too much of a habit of this, but you all know where to find me,\" I said as they left.\n\n\"Mi casa su casa?\" Katie said as she was about to walk out into the black night.\n\n\"That's right,\" I said with a smile. I hugged her and whispered in her ear, \"Any time sweetheart.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nHalf an hour later there was a knock at the door. I switched on the outside lights and saw an older Toyota Yaris in the driveway. I opened the door and it was Katie, looking shy.\n\n\"Is it OK?\" she said quietly.\n\n\"It's better than OK.\" I said, and I pulled her into my arms and kissed her.\n\nShe walked in and immediately started stripping.\n\n\"You're not wasting any time,\" I said with a smile.\n\n\"Just getting 'natural'. I never realized how much I love being naked,\" she said as she dropped her shorts and stepped out of them.\n\n\"It suits you,\" I said, admiring her petite form. Her nipples were rock hard, accentuating the jiggly handfuls on her chest.\n\n\"Is anyone gonna miss you at home?\" I asked.\n\n\"No, I'm on my own tonight,\" she said with a little grin.\n\n\"We've got all night? Oh Katie, you just made my day,\" I said, and I embraced my little naked visitor.\n\nI turned down the lights, took her hand and led her to my bedroom, and we made sweet, sweet love all night long. She wanted me to teach her \"everything,\" and I did my best, but we both agreed she would need to come back for many more lessons. She left at dawn, reluctant to put on any clothes. \"Wouldn't it feel sexy to drive home naked?\" she said with the cutest little smile. I convinced her it probably wasn't a good idea.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nI slept 'till noon and was getting ready to go out on a job when Lee walked out of the woods. She had her scrubs on and was about to head out for a long evening shift at the hospital.\n\n\"There's my favorite sex maniac,\" she said when she saw me eating lunch on the porch. \"You had quite a night last night.\"\n\n\"I did,\" I said. \"How do you feel about it today?\"\n\n\"It's weird, I'll tell ya, but good,\" she said. \"Ally was right \u2014 it's like suddenly my girls and I are all adults, and can talk freely. It was scary thinking about it last night at work, but after spending the morning with the girls it feels right. They're kinda awesome, aren't they?\" Her eyes were misting up with pride.\n\n\"They are,\" I said. \"And like I told them last night, you're the coolest mom in the world.\"\n\n\"So I guess Lacy taught them some new things. She's always been the wild one. Her mother is too, you'd probably like her,\" she said with a wink. \"It seems my daughters are suddenly more experienced with women than I am. Maybe you can help me with that sometime? Invite Chrissy and Ally over again?\"\n\n\"Absolutely, that'd be fun,\" I said. \"Or maybe Penny and Mary, they're the experts.\"\n\n\"Penny and Mary?\" she said. \"Jesus, how many women do you have?\"\n\n\"They're all just good friends,\" I said. \"Penny and Mary were here Memorial Day. Penny was here on the porch and Mary was out in the gazebo.\"\n\n\"Oh shit, they really are experts. I've never seen women enjoy sex more than those two. They were inspirational,\" she laughed, and we watched a big barge pass by on the canal.\n\n\"You know, it's really quiet around here at night, you really should close your bedroom window once in a while. Did Katie make it out of here walking upright this morning?\" she asked with a sly grin.\n\n\"Oh no!\" I said. \"You guys could hear?\" \n\n\"Yeah,\" she said. \"The girls were really happy for her. They told me all about it.\"\n\n\"Did they know she was coming back here?\" I asked.\n\n\"No, she surprised them,\" she said. \"Well, I gotta run. I don't know if you've got anything left in the tank, but I'll be home around ten. I'll be tired, but a nice slow fuck sounds delicious right about now.\"\n\n\"I'll have a glass of wine poured and ready for you,\" I said.\n\nShe kissed me on the cheek and disappeared into the woods."
    ],
    "authorname": "riverboy",
    "tags": [
        "older man",
        "co-ed",
        "college girls",
        "female bisexual",
        "first time lesbian",
        "fffm"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-handymans-memoir-ch-26"
}