{
    "title": "Talla's Temple Ch. 25",
    "pages": [
        "\"Adjudicate.\"\n\nSonja was in full kit. The woman must truly enjoy the long orange robe that split at the front to bare her blouse and scant orange bottom. She wore it as often as she could, even when there were no cases before her. The iron circlet, however, was set aside on her desk as she busied herself with paperwork.\n\nShe glanced up only long enough to identify who stood before her.\n\n\"Marissa,\" she said. \"You have a charge to file?\"\n\n\"Yes, Adjudicate,\" Marissa replied coolly. \"A charge of Monogamy.\"\n\nSonja stopped in mid scrawl to glare at Marissa and then take in the two women who flanked her.\n\n\"Are you certain?\"\n\n\"I tracked a girl two days ago to a location in the woods,\" Marissa explained. \"Where I presumed she met a man. Today, the three of us spotted the same woman at the same location and witnessed her Serving the man.\"\n\n\"Was it the same man?\"\n\nMarissa twitched.\n\n\"I did not see the first encounter, but I judge it likely.\"\n\n\"Judge?\" Sonja mocked lightly. \"Interesting word.\"\n\nMarissa gulped.\n\n\"A charge of Monogamy requires two encounters,\" Sonja explained in a dry voice. \"You did not witness the first encounter. Did they have sex the second time?\"\n\n\"Oral penetration, Adjudicate.\"\n\n\"Sufficient for the charge,\" Sonja said.\n\nShe cocked her head to the side and looked up at the ceiling.\n\n\"Do we know the young man?\"\n\n\"I followed him,\" one of the women at Marissa's side offered.\n\nSonja thought for a moment.\n\n\"Bring her tomorrow morning, then,\" she said. \"Fetch him as well. It's possible I can get her to confess, in which case he may as well be here.\"\n\n-----------===================-------------\n\nIt would probably speed things up, the Queen of Sweetness thought, if we could simply dress the Adepts up like Initiates. Adepts of Pussy, provided they kept their genitals covered, could pass a low-ranking women of some Endowment Discipline without much trouble -- at least as long as no one recognized them.\n\nThen the Goddess could at least have attendants who were allowed to know that she was pregnant.\n\nIn the meantime, there were several girls clad in white sitting outside the Goddess's chamber, watching the Queen of Sweetness remove her clothing.\n\nObedient to the last, all six of the Initiates and Virgins stripped off their own clothing out of respect for their superior's nudity.\n\nWell, that's where it would fall apart, wouldn't it? There would be no mistaking an Adept of Pussy for an Initiate of Point once the underwear was off. They'd have to shave -- frequently -- to pull off that ruse.\n\nShe raised her arms in the air so that the fully armoured guards could assure themselves that she hid no weapons in the pits of her arms or tucked under the flesh of her breasts.\n\n\"Thank you, Highness,\" the lead guard said with a bow.\n\nThey hadn't laid a hand on her.\n\nShe recovered her red skirt and blouse and refastened them, watching the jealous eyes of those around her. 93 upgrades, she thought at the gathered whites. How far away are you from me?\n\nHer blouse appropriately attached, she passed through the doors to meet her superior.\n\nOnce the doors closed, she checked the room.\n\nBesides the Goddess, only two other women were present this particular evening.\n\n\"How fare you, Imminence?\"\n\nThe woman in black looked up with a sigh as she approached.\n\n\"Well enough, I suppose,\" she said, patting her belly. \"To what do I owe the pleasure?\"\n\n\"You haven't heard?\"\n\nThe Goddess shook her head.\n\nSweetness slid a folded sheet of parchment across the black desk. It was promptly opened.\n\nShe knew when the woman in black hit the important part of the sheet. That was when her eyes closed and she whispered a curse.\n\n\"With Zhair'lo, I presume? It doesn't say.\"\n\n\"I checked, yes.\"\n\nShe looks exactly like I looked when I saw it, the Queen thought. As if someone took her favourite piece of clothing and set it on fire.\n\n\"There's nothing we can do.\"\n\n\"There are a lot of things we could do,\" the Queen corrected. \"Not a one of them would be a good idea.\"\n\n\"We'd reveal ourselves,\" the Goddess agreed.\n\nShe looked at the note again.\n\n\"When was this?\"\n\n\"Today.\"\n\n\"No, I mean the first encounter,\" she clarified distantly. \"You need two for -- um - this charge.\"\n\nEven a Goddess, the Queen noted, had trouble using the word Monogamy except as a curse.\n\n\"Two days ago, I believe.\"\n\n\"Also during the heat bell?\"\n\nThe Queen nodded.\n\nThe Goddess touched her chin with the back of one finger, as if trying to probe a lost memory.\n\nShe shook her head.\n\n\"No. Couldn't be.\"\n\n-----------===================-------------\n\nZhair'lo was staring at his ceiling. There was enough moonlight that he could make out the fuzzy shapes of its beams.\n\nWhat was he supposed to do now?\n\nEvery ache and pain, every twitch he felt was a sign of his impending death. Fear, in the middle of the night, was a unmanageable beast with a life of its own. It grew legs and rampaged through one's mind, pointing out every reason for its growth and not a single idea that might cause it to wane.\n\nShould he really leave Gern? Could he?\n\nWorse yet, he could feel Talla again. Whatever had been broken between them was forged again by their meeting. The distance was too great to get more than a general sense of her sadness, a kind of fog of misery that misted over both of them.\n\nShe pulled at him. She pushed him away. Her emotions were no more stable than his. At least she was safe. He had to content himself with that much. He was the one in danger.\n\nWas he really in danger? He hadn't noticed anything until she'd mentioned it.\n\nThere, what was that unsettled feeling in the pit of his stomach? Was that the beginning of his body falling apart?\n\nIt's nothing. It's nothing, he told himself.\n\nUnconvinced, he rolled over. It was a long time before he fell asleep.\n\n-----------===================-------------\n\n\"I didn't think I was vague,\" the blonde Sorceress said.\n\nAbundance's tone was light, but neither of the women in front of her were fooled.\n\n\"You were not, Mistress,\" Shanata said, her face gone to stone as she stared at the floor.\n\nAtreya raised her eyebrows.\n\n\"Vague?\" she asked.\n\n\"Our Mistress asked me to deliver a message to the girls working in a particular dorm,\" Shanata said. \"To be clear on the dangers of Monogamy.\"\n\n\"And?\" Atreya prodded.\n\n\"I delivered that lecture, quite thoroughly,\" she continued, deadpan. \"I even -\"\n\nShe gulped and paused.\n\n\"I even took Talla aside -- I could tell it was her -- I took her aside and warned her specifically that she'd been seen.\"\n\n\"Shanata -\", the Sorceress scolded.\n\n\"I know, Mistress,\" Shanata said, her voice beginning to crack. \"But I felt that I owed it to her.\"\n\n\"And even with that warning,\" Atreya put in, \"she went back to him anyway.\"\n\nThere was silence at this statement. None of the three women could imagine what would possess a woman to take a risk like that when she knew she'd already been caught. What kind of stupidity was that? They'd had such high hopes for Talla, after her spectacular upgrade. And the poor thing had already been through so much.\n\n\"And what of Zhair'lo?\" the Sorceress asked.\n\n\"What of him?\" Shanata replied.\n\nThe woman in green sat down and brushed her hair back with both hands. She quickly tied it back in a sloppy ponytail.\n\n\"Why the two of them?\"\n\n\"Maybe the quadruple upgrade did something to them,\" Shanata said. \"Who knows?\"\n\nAtreya winced at this, one of her hands twitching toward the place where a whip had once traced a line across her chest.\n\nShanata's eyes lit up.\n\n\"I could tell her to make that argument -\"\n\n\"You are forbidden to warn her in anyway,\" Abundance said. \"You know the rules better than anyone.\"\n\nShanata stopped.\n\n\"True,\" she said. \"But I can go tomorrow, to her trial.\"\n\n\"Really, Shanata?\" the Sorceress asked. \"By what right?\"\n\n\"Sisterhood,\" Shanata replied, adding somewhat flippantly, \"the real kind.\"\n\nAtreya choked indignantly.\n\n\"When did this happen?\"\n\n\"When I warned her.\"\n\nAbundance took a breath and stared at the ceiling a moment.\n\n\"Very well. You may go,\" she said. \"It's not like I can stop you. But you are not to speak to her beforehand, and you won't get to say your piece until after she's been interrogated. I don't know what you hope to accomplish.\"\n\n\"Mistress,\" Shanata said with a sharp bow. She gave a half-nod to Atreya as she turned and left the room.\n\n-----------===================-------------\n\nBy breakfast, Zhair'lo was nowhere near ready to run from Gern. He'd spent most of the night wrestling with sleep. In the manner of many insomnia inducing problems, it did seem less urgent in the morning and his anxiety was further soothed by the mundane arrival of breakfast on the table in front of him.\n\nWhat did he need if he were to run? His primary concerns, if he really wanted to strike out on his own, were food and shelter. \n\nHe looked at the building around him with its wooden beams and stone walls. He could build something from wood, if he could take an axe with which to chop down trees. He could build a roof if he had access to straw.\n\nAnd what of food? He could live off the land, possibly. They'd never taught him how to hunt, but with a ration of wheat flour he could make bread and he was certainly capable of cooking and cleaning anything he might catch. He'd need to take a pot to cook in.\n\nPot. Axe. Flint. Bow? He'd never spent any time using a bow. Maybe he could take one from somewhere and learn how to use it. If seeing someone do it counted as training, then he knew how to loose an arrow.\n\nHe might even be able to hit something.\n\nHow soon could he leave? He munched on his breakfast, unaware of anything around him.\n\n\"Zhai?\"\n\n\"Huh?\"\n\nHe blinked his eyes and shook his head at the boy sitting across from him.\n\n\"Zo'kar?\"\n\nZo'kar gestured to the leather backpack on the floor by his feet. \"Just got the assignment last night. Came over this morning.\"\n\n\"Horse training?\"\n\n\"That's what it said,\" he confirmed, looking around the room. \"Nice place. But pretty gods damned far from town.\"\n\n\"'bout half a bell from the Temple,\" Zhair'lo remarked idly.\n\n\"Don't catch an awful lot of long skirts out here, I imagine.\"\n\n\"No. No, we don't.\"\n\n\"How much longer are you here?\"\n\n\"I don't -\"\n\n\"Until he gets a new assignment,\" a booming voice intruded on the conversation.\n\nZhair'lo straightened, clearing all rebellious thought from his head lest it show on his face.\n\n\"Master Harzen,\" he said. \"This is Zo'kar.\"\n\n\"Don't I know it,\" the large man said, settling down on the bench beside Zo'kar. \"Welcome to my farm, young man.\"\n\n\"Thank you, sir,\" Zo'kar said, sitting up straight.\n\n\"What did you do in town?\"\n\n\"Roofer all my life, sir.\"\n\n\"Zhair'lo took care of the last roofing problem we had,\" Harzen remarked. \"But we'll get you up there if we have any problems. Meanwhile, get yourself settled in. Zhair'lo will show you to your room -- it's the empty one right across from his.\"\n\n\"Yes, sir,\" the two young men chorused.\n\n\"Have you had breakfast?\"\n\n\"Before I left, sir.\"\n\n\"Good,\" Harzen remarked and stood up again. \"Off you go, then. Get out to the stables as soon as you're unpacked.\"\n\nZo'kar blew out of a breath when Harzen was out of sight.\n\n\"Big guy,\" he remarked.\n\n\"Wait'll you see the horses,\" Zhair'lo warned.\n\n-----------===================-------------\n\nNothing had seemed right all morning. She'd long since gotten over the surprise of swallowing more than a mouthful of semen. That was furthest from her mind. She could feel Zhair'lo out there, as she'd felt him all night.\n\nHe either wasn't running or he was very calm about it if he was. There was no sign of the kind of stress she'd felt from him on other occasions. He was preparing, probably. She knew what set of skills he had to rely on but she didn't know what he would do with those skills. Could he really live off the land or would he just starve to death?\n\nIt was nearing lunch time and still no sign of his departure. There was no sense that their link was fading as it always did when the distance between them increased. That was a bit frightening, but also strangely reassuring.\n\nIf nothing else, it meant that she could find him if she had to, once he found a place to live outside the city. That brought a smile to her lips as she folded blankets for the children.\n\n\"Talla,\" someone whispered.\n\nShe turned to see an extremely pale faced Adria.\n\n\"What?\"\n\n\"Some people - at the door.\"\n\nTalla felt her stomach drop. The look on Adria's face told her more than she wanted to know.\n\n\"For me?\" she croaked.\n\nAdria nodded, biting her lips.\n\nTalla looked to the door, an unwillingness deep inside her trying to hold off the inevitable.\n\nThere they were. Two of Form's enforcers in their darkest, heaviest leathers. Even at this distance, she could see that one of them held a black scroll in her hand.\n\nWhat was it Shanata had said of black scrolls? The words came back to her: \"You should endeavour to avoid them in the future.\"\n\nMaybe they weren't really here for her. Maybe it was just to ask her a question about something else, something that had nothing to do with Zhair'lo or Tina or anything else she'd done wrong.\n\nThey were both staring at her, waiting with the patient confidence of a stone wall very slowly tumbling down on the people beneath it.\n\n-----------===================-------------\n\nTina was running pointless errands, the sort that they gave to a girl when they didn't have a longer term assignment ready for her. It was a hot miserable day and she mostly kept her eyes on the ground so that fatigue didn't make her stumble and look stupid.\n\nSome familiar noise nagged at her; that certain sound made by the all-serious marching style of women wearing heavy leather armour. It was the kind of sound that would always bring a chill to her. She stopped to look up.\n\nYes. There they were. Two of Form's finest with their gorgeous faces and lifeless expressions. One of them carried, most frightening of all, one of the dreaded black scrolls in her hand. Tina relaxed a bit when she noticed that they already had their victim with them. It meant that they weren't coming for her.\n\nShe froze as she met the eyes of the suspected criminal.\n\nTalla.\n\nPale faced and nearly as expressionless as the guards, she trotted obediently between them.\n\nDid her eyes plead with Tina's, even for a moment? Tina couldn't say.\n\nTalla didn't turn her head to track Tina. Maybe she didn't dare. She just kept pace with the guards and passed through into Form's triangle.\n\nTina watched her go.\n\nHer shift was almost up. Chances were that Talla would leave Form after - whatever it was -- and go back to Endowment. Tina would wait for her there.\n\n-----------===================-------------\n\n\"How many upgrades you done?\"\n\n\"Same as you I think,\" Zo'kar said. \"Four.\"\n\nThey were walking out to the stables, where Zhair'lo had been directed to take Zo'kar. Harzen's instructions weren't complicated. \"Show him what you do,\" the old man had said.\n\nZhair'lo had actually done five, counting Talla, but he wasn't concerned about that.\n\n\"How do you feel?\"\n\nZo'kar gave a start.\n\n\"Feel?\"\n\nZhair'lo waved his hands in denial. He hadn't meant the question in the emotional sense.\n\n\"Y'know, overworked?\" he asked. \"Doing so many upgrades night after night?\"\n\n\"I don't think so,\" Zo'kar replied. \"Feels like I could do 'em forever. You?\"\n\n\"Oh, fine,\" Zhair'lo said. \"They're just giving me a break and I wondered if you were having problems.\"\n\n\"Not because of me,\" he told Zhair'lo with a smile. \"I could spray those girls every night, two at a time, if they asked me to.\"\n\nZhair'lo laughed.\n\n\"I wonder if that would work.\"\n\n\"What?\"\n\n\"One source, two destinations.\"\n\nIt was Zo'kar's turn to laugh.\n\n\"What? Just put them side by side on the altar and try to get them both? I -\"\n\nHe was making a gyrating motion with his hips to simulate his proposed technique when he was interrupted.\n\n\"Zhair'lo M'han!\" a firm voice called out from behind them.\n\nBoth boys turned to look for the speaker. They found themselves facing a pair of women in heavy leather armour.\n\n\"Mistress?\"\n\n\"You are Summoned to the Temple on urgent business,\" the same woman went on. \"You are to accompany us immediately.\"\n\nThe two boys looked at each other a moment.\n\n\"Later, then,\" Zo'kar said.\n\n\"Yeah. Guess so.\"\n\nZhair'lo marched off with the women bracketing him.\n\n-----------===================-------------\n\nTalla was standing in front of that nasty table again. The tall, narrow room was empty of other suspects, just as it had been when she'd been pulled in here along with M'lis, Adria and five other girls. Was it common for this place to be empty? Why all the benches if no one ever sat in them?\n\nIt didn't matter.\n\nAt least this time she wasn't dripping with cold rain. The shivers she tried to control were entirely those of fear.\n\nThere was the woman in the orange robe and iron circlet, sitting behind her desk. There were the two guards who had brought her here, still standing on either side of her and one step back. There were the four Virgins in knee length skirts along the back wall.\n\nSo familiar.\n\n\"Talla,\" the woman said carefully. \"Do you understand how our society is held together?\"\n\n\"Mistress?\"\n\nShe pursed her lips.\n\n\"We are assigned men to Serve,\" she explained. \"And we Serve those ones, and only those ones. Men are kept docile because they know it is never long before another women comes to their bed. They do their work; we do our work. We keep them entertained with sexual variety and satisfy our own needs.\"\n\n\"When you step out of those assignments -- when you select for yourself which men to Serve -- you do great damage to the fabric of our society. The randomness which assures each of the men that they will eventually stumble upon women whom they find greatly attractive is broken by such behaviour.\"\n\n\"It makes men ... restless. A situation we can ill afford if you have ever studied history.\"\n\nHer eyes narrowed to meet Talla's.\n\n\"It is important that you do not lie to me, Talla,\" the woman said coldly. \"I will know, first of all. And second, it will count against you.\"\n\nTalla gulped, not daring to break eye contact. Shanata had seen right through her once. The women of Form clearly had some ability to tell lies from truth.\n\n\"Yesterday, during the heat bell, did you meet him this young man Zhair'lo in a place to the southwest of the city?\"\n\nTalla's stomach dropped. She knew!\n\n\"Yes, Mistress,\" she choked out.\n\n\"And performed Service upon him with mouth and tongue.\"\n\nThey'd been watching? How?\n\n\"Yes, Mistress,\" she stammered.\n\n\"Three days ago, did you also meet with the same boy at the same location?\"\n\nDammit, dammit, dammit! They knew everything!\n\n\"Yes, Mistress,\" she admitted.\n\n\"And Served him on that occasion.\"\n\nIt was a statement. She lowered her eyes.\n\n\"Yes, Mistress.\"\n\nThe Adjudicate sighed.\n\n\"This is a worse crime than merely seeking out a man of your preference. You have engaged in Monogamy, one of the worst offences known.\"\n\n\"It will become known among other men that Talla prefers just one of them. The others of his age will become jealous at your preference, especially with that body of yours, and wish to take his place. They will seek to injure him to achieve this goal and attain possession of you.\"\n\nThe Adjudicate let that sink in a moment.\n\n\"A possession, Talla,\" she repeated. \"Is that what you wish to be? A token? A piece of clothing? A thing to be hung on a wall?\"\n\n'That's not how it would be!' she wanted to shout out. 'He's not like that!'\n\nBut she remained silent. The wall covered with coiled whips and the knowledge that this woman had the authority to use them were enough to keep her from arguing.",
        "\"No, Mistress,\" she said meekly.\n\n\"Good,\" the older woman responded. \"Women are not to be possessed. We are free beings; beings of strength -\", she flexed her arms without unfolding her hands, \"- beings of intellect. We drive this society and maintain its health and happiness as we have done quite successfully for centuries.\"\n\nShe paused again to observe Talla.\n\nTalla looked straight over the woman's head and gulped.\n\n\"The crime is Monogamy,\" she called out formally, \"to which the accused has freely confessed.\"\n\nIt was louder than necessary, really, given that all eight of the room's occupants were within a few steps of her. Talla waited. The next thing that the Adjudicate was going to do was tell her what her punishment was.\n\nBut ... nothing.\n\nThe Adjudicate merely looked at her in a somewhat unpleasant fashion, as if waiting for something else to happen. Was Talla supposed to say something?\n\nShe swallowed reluctantly but was saved the embarrassment of trying to speak when a door to her right clicked open. Was there going to be an audience? Was that part of the punishment -- to have people watch her and add to the humiliation? The Adjudicate wasn't reacting.\n\nTalla didn't want to turn her head. She didn't want to see who was coming to watch her suffer under the whip. But her eyes, unbidden, veered to that side of the room. When she saw who was coming, her entire head turned in shock.\n\nShanata?\n\nThat just made her feel stupid, not embarrassed. Here was the one person who had come yesterday to warn her against doing what she did and taken a risk to give that warning. And what had she done with Shanata's sacrifice? She had gone ahead and done the stupid thing anyway and exercised insufficient caution while doing it, in spite of the warning.\n\nFailure. I failed Shanata.\n\nLips pursed together, Shanata came and stood next to her.\n\n\"Identify yourself\", the Adjudicate said, all formal.\n\n\"Shanata, daughter of Entek out of Marletta.\"\n\n\"Shanata out of Marletta. By what right do you stand here?\"\n\n\"The convicted and I are sisters,\" Shanata said. \"We shared the kiss.\"\n\n\"Very well, Shanata, sister of Talla,\" the Adjudicate said. \"You have something to say in the defence of the convicted.\"\n\nThat's why Shanata was here? To defend her? But she'd already been convicted. She'd confessed. What else was there to say?\n\nShanata folded her arms defiantly, orange drapes of cloth from her elbows rearranging themselves to align with those hanging off her hips. It was only then that Talla noticed what her sister and former teacher was wearing. She had never seen Shanata dress this way. She hadn't even known the woman possessed such clothing.\n\nThis was the formal wear of a teacher in the dorms outside the Temple. It spoke of delicacy, knowledge and power. It meant that the woman wearing it didn't have to do any manual tasks at all. While it's floating panels of orange fabric did not cover the important parts of her body any more than the bikini top and bottom, it gave Shanata an aura to match that of the Adjuciate.\n\n\"There are a number of factors which should be considered before a sentence is pronounced,\" Shanata enunciated.\n\nTalla watched out of the corner of her eye as Shanata ticked off her fingers, one at a time.\n\n\"First, Zhair'lo was both Talla's first Conduit and Virgin's Choice, and that inappropriate affection is common in such cases.\"\n\n\"As we are well aware,\" the Adjudicate said. \"Go on.\"\n\n\"Second, by Zhair'lo's transfer, Talla received four upgrades,\" Shanata stated. \"This unprecedented experience was painful for both of them. The shared experience may have contributed to building an unusual emotional bond between them.\"\n\n\"A bond that it is our duty to break,\" the Adjudicate declared.\n\n\"Third, the receiving of that quadruple upgrade was an extraordinarily painful experience for Talla,\" Shanata said. \"It is quite possible, and should be taken into consideration, that it may have addled her wits for some time afterwards.\"\n\n\"You're arguing mental incapacity?\"\n\nHer voice was incredulous.\n\n\"No,\" Shanata replied, \"merely that her judgement may have been impaired in a way that we did not detect.\"\n\n\"My records show that she was recently given a Strength upgrade -- an Extraordinary,\" the Adjudicate answered back. \"If you were worried about the effects of her quadruple upgrade, why did you pile on more?\"\n\n\"Perhaps this court needs a reminder,\" Shanata put in stiffly, \"that there are serious dangers in carrying a large number of Abundance upgrades without the Strength upgrades to back them up. It was the medical judgement of a physician of Sweetness that led to that upgrade.\"\n\nThat was cold. It was all Talla could do not to glance at the breasts of the Adjudicate. That pair was even smaller than Talla's.\n\n\"Very well. Do you have any further defence?\"\n\n\"Only that the court be reminded that this girl joined the Temple less than one moon ago and has undergone a considerable amount of pain and disorientation,\" Shanata concluded simply.\n\n\"We are not without mercy,\" the Adjudicate said. \"However a crime of this magnitude can not go unpunished.\"\n\n\"No,\" Shanata agreed with a twist of her lips. \"Of course not.\"\n\nThe iron-crowned woman turned to Talla.\n\n\"Do you have anything to add in your defence?\"\n\nHer throat was dry. She wasn't sure she could speak, never mind form sentences.\n\n\"No, Mistress,\" she croaked out.\n\nThe Adjudicate waved a hand at one of the Virgin girls behind her. This one stood and dislodged one of the heaviest whips from the wall. This was brought and laid on the desk in front of Talla.\n\n\"I will now explain to you how you will be punished for this transgression against the very orthodoxy of the Temple,\" she intoned as she stood and took the whip in her hand.\n\n\"You will do exactly as you are told. You will follow the script I lay out for you perfectly. Deviate from it and you will feel the barbs of this whip. Do you understand?\"\n\n\"Yes, Mistress.\"\n\nThe Adjudicate turned to look at Shanata.\n\n\"I am -- required to leave now, sister\" Shanata told Talla.\n\n\"Thank you, sister,\" Talla blurted out, trying to hold her composure.\n\nShanata marched out. When the door clicked, the Adjudicate began her instructions.\n\n-----------===================-------------\n\nEvery step he took in the wake of the two armoured guards was a step that brought him closer to Talla. She was near and she was frightened. The more he walked, the more determined he became of her fear.\n\nThe guards led him up a set of stairs to a doorway and silently indicated that he should enter the room beyond. It was a small and simple wood walled office. From his left, the space was dimly lit by rays of sunlight shining through small slits in the wall. On his right, it overlooked a lower floor full of rows of wooden benches. The back wall was covered in dark brown curtains.\n\nA very pretty woman wearing a long orange robe, her jet black hair held tightly by an iron circlet, sat behind a small desk with her hands folded together. She smiled in a way that frightened all nine hells out of him.\n\n\"Zhair'lo, is it?\" she asked, pushing one of the two glasses on the desk toward him.\n\n\"Yes, Mistress,\" he replied.\n\n\"Close the door behind you and have a seat,\" she said cheerfully. \"Have a drink. I understand it was a long walk.\"\n\n\"Mistress,\" he said with a nod.\n\nThe door closed with a smooth click and he sat on the small wooden stool in front of her desk, taking the glass in his hand. She took a deep draught from her drink and so he did the same. Ice cold water mixed with some sweet, clear fruit juice. It should have been refreshing. Instead, it made him feel dizzy, burned down his throat and weighed heavily in his stomach.\n\nThe woman took a breath and cocked her head at him somewhat sadly.\n\n\"My name is Sonja,\" she said. \"I am an Adjudicate here in the domain of Form. It is my duty to correct the behaviour of those who have, shall we say, gone astray of the law. Do you understand?\"\n\nZhair'lo gulped and nodded.\n\n\"Sorry. Couldn't hear you.\"\n\n\"Yes, Mistress. I understand.\"\n\n\"You have fallen in the way of some very unfortunate events,\" she went on with a shake of her head. \"Not your fault, of course, but here we are nonetheless.\"\n\nNot his fault? What did she mean?\n\nSonja stood at this point and walked over to the balcony on his right. She swept her robe backwards so she could put her hands on her bare hips. Even in his frightened state, Zhair'lo was shocked by the sight of her body. He'd never seen a woman built like that. Every step -- every movement -- showed muscles twitching in her thighs and calves. Her stomach rippled and her smallish breasts, tightly covered by her small orange top, were a distant second to the muscles of her chest. Her arms were just as strong as the rest of her. He watched her triceps flex as she turned her wrists.\n\nShe could shatter his body if given the excuse and probably chew up the pieces without losing that smile on her face.\n\n\"It's a curious thing, really,\" she said while peering out over the room below. \"The laws of the Temple don't allow us to punish men for any crime that doesn't harm women. We leave all other matters to your brothers.\"\n\n\"In fact,\" she went on as if discussing a legal curiosity, \"you would be in a greater degree of trouble for refusing a woman's Service than you would for accepting it -- at least from our point of view.\"\n\nA heavy sigh, then, as he watched the muscles in her chest flex and relax. She turned to face him, leaning on the ledge with her ankles crossed and her stomach muscles tense to hold her upper body in perfect posture.\n\n\"But you see, here we are,\" she said with a wave at the room below and behind her. \"Talla should not have done what she did. It is one of the gravest crimes in which a woman could involve herself.\"\n\nShe glanced at the ceiling, pursing her lips in what Zhair'lo thought was a transparently false attempt to appear thoughtful.\n\n\"What good would it be for you if each woman Served only a few men, or a single man?\" she asked. \"It would never balance. Some men would be Served more, some less, some rarely at all. How would that be? Oh, the unfairness and the jealousy. It simply wouldn't do.\"\n\nShe peered at him.\n\n\"And you wouldn't want that, would you?\" Sonja asked. \"The same woman every night? How boring, right? Think of all the blondes, the redheads, the brunettes. Think of all the things you'd be missing. Sure, someone like Talla has large breasts, larger than mine even. But what else is out there? What about muscular women -\" she peered at him playfully and flexed a bicep, \"or those women with the muscles inside.\"\n\nSonja looked down at the small triangle she had made with her fingers over top of the scant material of her bottom. She met his eyes and raised her eyebrows.\n\n\"There are women in my Division who can do things with their mouths -- well,\" she made another theatrical pause, \"you'll see in due time.\"\n\n\"But again, none of this is your fault,\" she repeated. \"It was Talla's offer -- her repeated offer -- that is the problem. It is that which we must correct.\"\n\nAnother pause for a pretend moment of thoughtfulness as Sonja touched her chin with a finger. Her voice and manner turned stern.\n\n\"All the same, of course,\" she said. \"I do wish to -- let us say -- discourage you from making future arrangements with Talla. Just for the sake of propriety, you understand?\"\n\nShe stared at him, narrowing her eyes.\n\n\"You understand?\" she repeated, a little more loudly.\n\n\"Yes, Mistress.\"\n\n\"Good,\" she said, standing up and letting her robe fall back around her body. \"Come along, then.\"\n\nShe opened the door and led him out.\n\nThey went back down the stairs he had just come up and turned to go through a set of large oak doors that had been closed when he'd gone by them.\n\nHe found himself trailing Sonja's orange robes through an absolutely cavernous wooden hall full of empty benches and narrow strips of sunlight. The sense that he was closing in on Talla became quite acute, so much so that he hadn't really taken stock of the room he was in.\n\nA chill went through him. He suddenly had a notion that he'd been here before. But he hadn't. He was remembering Talla's memories. Things were missing from those memories, things Talla had desperately tried to hide. He knew what this room was for, but why was he here? If they weren't allowed to punish him, then -\n\n\"Stand here,\" Sonja said as she stepped to the side.\n\nTalla.\n\nThere she was, standing in front of that table that he knew all too well from her memories.\n\nHer eyes met his, cold and lifeless. He knew the eyes were lying. She was frozen with fear, right up to the muscles in her face. She felt a lot, even though her face showed nothing. He knew that because, at this distance, he was inside her head.\n\nThey stood facing each other for an eternity, uncountable and nameless emotions bouncing back and forth between them.\n\n'I'm sorry,' he said into her mind.\n\n'Me, too,' she answered.\n\nSomething was pressed into his hand as a movement at the corner of his vision caught his attention.\n\nSonja was holding a whip. It was the nastiest thing he had ever seen: a coiled snaked with sharp barbs along every centimetre of its length. Zhair'lo looked at it in horror. She was going to hit Talla with that! That wouldn't leave those red rashes and lines of blood that he had seen on Talla's friends -- it would rip her skin entirely!\n\n\"It's the most amusing thing, really,\" Sonja said as she touched a finger to one of the barbs and retracted it with a twitch. \"We're not allowed to punish men, but we are allowed to make it very clear to them what the consequences are of breaking our rules.\"\n\nZhair'lo was sweating now. She was going to torture Talla as both punishment for her and an object lesson for him. But Sonja didn't realize what was really going on. No one -- and that included Zhair'lo and Talla -- fully understood what the mental link between them was. Regardless, he knew that he would feel every bit of pain she caused Talla.\n\n\"So the choice is up to you.\"\n\nChoice, what choice did he have? To leave or to stay? That seemed unlikely. He looked at her, waiting for an explanation.\n\nShe nodded at his hand and, compelled, he looked down.\n\nHe held the handle of a whip there, its thin tail extending to the ground.\n\nHis eyes widened in shock.\n\nOh, nine hells, no!\n\n\"Zhair'lo,\" Talla said stiffly, no longer meeting his eyes but looking straight over his head to the entrance of the dark hall. \"You have to.\"\n\nSonja beckoned to the girls in white who sat along the back of the room. Two of them came forward and stood next to Talla.\n\nZhair'lo watched, holding the whip in his hand, as Talla slid her skirt off and handed it to the attendant. Her little pair of white underwear, a match for what still lay in his dresser back at the farm, was next to go. One Virgin attendant folded each garment and handed it to the other.\n\nTalla's top went next. His heart skipped, seeing those beautiful breasts revealed. He felt the skin on his forehead becoming warm, threatening to sweat. His breathing sped up. What was going on?\n\nNaked, Talla turned her back to them and leaned over the table. Her wrists were fastened down.\n\n\"Well, then,\" Sonja said as she approached Talla. \"Here we are.\"\n\nShe touched one of the barbs to Talla's flesh. Zhair'lo flinched as he felt Talla's pain. Sonja dragged that barb across Talla's rear, making a light, red streak across both cheeks. Zhair'lo bit his lip. He didn't need to see Talla's face to know how that felt.\n\n\"When I tell you to strike, you will strike here,\" she said, indicating the line she had made. \"If you do not, I will.\"\n\nShe took two steps back and stood with her hands on her hips.\n\n'Do it,' Talla thought at him. 'She really will hit me if you don't.'\n\n'I'm sorry', he beamed back at her.\n\n\"Raise your whip,\" Sonja instructed. \n\nNine gods, she was still smiling.\n\n'No,' he thought, frozen to the spot.\n\nSonja raised her whip.\n\n'Do it,' Talla insisted. 'You have to.'\n\nZhair'lo raised hand and held it back behind his shoulder.\n\n\"Now!\" Sonja commanded.\n\n'Do it!'\n\nHe tensed, his arm driven forward against his will, a machine like a miller's wheel doing only what the laws of motion insisted it do.\n\nCringing in preparation, he heard it crack off of Talla's tender pale skin only a moment before he felt searing pain shoot through his own body.\n\nGods! The pain!\n\n\"Again!\"\n\nHe breathed through the pain, pulled his arm back and lashed out a second time. He refused to watch where it struck her body, refused to let her see -- through his eyes -- what he was doing to her. This was worse than the upgrade. He hadn't understood the dangers back then. It hadn't really been his fault.\n\nBut this.\n\nThis he had seen coming. He had seen her memories of what the Temple did to those who stepped out of line. He'd seen M'lis's bleeding ass. He'd seen Adria being struck. And even then, he'd consented to one more dangerous meeting. And now she was suffering, and so was he.\n\nBecause as that second strike seared across her rear, he felt every inch of her pain as if it were burning a path through his own body. He wobbled dangerously, dizzied by the mesh that held their minds together.\n\n\"That won't do, Zhair'lo,\" Sonja said. \"Again, and harder, or I'll see to it myself.\"\n\nTalla begged him to do it again. He knew that he had to. She certainly believed that this was no idle threat. As he raised the whip a third time, he felt the mesh shiver.\n\n'No. No you don't,' he demanded.\n\n'We don't both have to suffer,' she replied.\n\n'I won't -'\n\n\"Again! Now!\"\n\nJarred by the interruption, he lashed out, striking Talla's cheeks harder than before. Agony swept through his body, starting in his own rear and lighting up his spine like some kind of anti-orgasm.\n\nTalla used the pain - used his own involuntary recoil -- to rip at the mesh.\n\n'I won't let go!'\n\n'You must!'\n\n'No!'\n\n\"Again!\"\n\nHis heart was going to kill him. Breathing had become short and erratic as the beating of his heart throbbed in his ears. His stomach was nearly ready to turn, tensing up every muscle he had from his rib cage down to his groin.\n\nWithout any other option besides watching the red lines across Talla's skin become large and brutal tears, he raised the whip and struck her a fourth time.\n\n'Let go!' she demanded, using the pain to force them apart.\n\n'Never! I won't abandon you!' he declared.\n\nBut he was losing the battle and he knew it. It was like climbing a rock wall during a earthquake. Every tremor loosened his grip a little bit more. It might have been possible to hold on, but someone was stepping on his fingers at the same time.\n\n\"Again!\"\n\nEven though he was looking away, he could see the telltale flash of red that told him blood was trickling from the wounds he was inflicting. He struck again, madly, determined to see this thing through and come out the other side before Talla could shake him from his hold.\n\nPain. Oh, gods, such pain as he had never felt. And his mental fingers, losing their grip, Talla stepping on every one of them in an effort to free him from having to share her burden.\n\n\"Again!\"\n\nIt came so close on the tail of the last blow.\n\nThere was a moment of intense agony, an instinctive urge to run away that he fought like a bucking horse, and then a sudden disconnection that felt like a thing dying, like a small animal having its life taken with a quick snap of its neck.\n\nZhair'lo shook his head, utterly disoriented. There was Talla, bent over the desk in front of him, bleeding in thin little rivulets, and he felt nothing. She'd done it. She'd broken the mesh, disconnected from him completely.\n\n\"Enough!\" Sonja called out, stepping between him and Talla.\n\nEnough? Gods damn it. They'd only had to hold on for one more.",
        "\"There, you see?\" Sonja said.\n\nShe touched a finger to Talla's cheek and held it up to him, a drop of blood poised on the tip.\n\n\"I trust that we will never have to repeat this exercise, young man?\"\n\nHe nodded. His eyes were stung with tears he hadn't noticed shedding.\n\n\"Understood, young man?\"\n\n\"Yes, Mistress.\"\n\n\"Good.\"\n\nShe must have made a gesture to one of the guards. He found himself gripped by the elbow and led away.\n\nWhat was wrong with him? Was it anxiety? His heartbeat was completely messed up. It was pounding in his ears and throbbing all the way down to ... what in the nine hells? This could not be happening. How could it be possible, after some like this?\n\nDelirious with what he was certain could not be lust, he was shoved onto a bench by the guard.\n\n\"Yours, Vunja,\" the guard declared before leaving and slamming the door shut behind her.\n\nHe was in a very small room, sweating and breathing laboriously. There was a woman in front of him. Young woman in a very short skirt. He barely saw her. Brown hair, complexion like a very milky chocolate. Very expressive, large eyes. His vision was blurry and distorted. Maybe her eyes were normal and his were the issue.\n\n\"Don't worry,\" she said very softly. \"My name is Vunja. I know what your problem is and I can fix it.\"\n\nShe knelt at his feet and began unlacing his leathers.\n\n\"Nuh-no,\" he protested weakly.\n\n\"Yes, yes,\" she said, pushing his hands away with ease. \"You can't resist.\"\n\nHis hands weren't working properly. It was all he could do not to fall over sideways.\n\n\"There we go,\" she said, undressing him at last.\n\nHer mouth found his thoroughly erect penis. How could he aroused after what he'd just done to Talla? He was horrified at his own rebellious body.\n\nI should be in mourning, he thought, not fucking some stupid girl.\n\nBut he didn't have the coordination to stop her. He was nothing but erratic heartbeats, blurred vision and an incomprehensible erection. \n\nSome time passed. Zhair'lo couldn't be certain how much. She was a wonder with her tongue and he hated her for every second she licked and sucked at him.\n\n\"That a boy,\" she said as she stroked him. \"I'm just what you need. I'll make you feel all better in just a minute.\"\n\nShe glanced over his head for a moment. Did she nod her head? If he didn't even understand his own body right now, how could he understand hers? Vunja stood up and started removing her clothing.\n\nPart of him was eager to watch her take off her little skirt. The rest of him was angry at that part. \n\n'What Discipline is she?' he wondered. 'Must be the one with the legs. Her muscles are so strong.'\n\nShe wasn't wearing anything under the skirt. She tossed off her top.\n\nNo breasts, he thought fuzzily. Not like Talla. Or maybe like Talla was when I met her. I can't feel Talla anymore. Talla is gone.\n\nVunja straddled him on the bench, setting his erection against her entrance.\n\n\"Everything will start feeling better right now,\" she said. \"Vunja will fix everything for you.\"\n\nWith that, she slid his manhood up inside her.\n\nHe remembered nothing after that but sheer, dark ecstasy.\n\n-----------===================-------------\n\nHer eyes red despite her refusal to cry, her throat dry and choked with the effort of denying her emotional turmoil, Talla stood at attention in the otherwise empty little room the Adjudicate used for her office.\n\nThey'd applied salve to her abused rear the moment Zhair'lo had been taken out of the room. It had stung horribly, but it had stopped the bleeding. She bitterly told herself that they cared more for their flooring than they did for her health.\n\nAt least she'd saved Zhair'lo the worst of it. They couldn't be together anymore, could they? So why bother hurting him? Every time she'd torn at the mesh, it meant a little less pain was going through to him. Until they got to the end, and she'd broken their bond, and they couldn't use her to hurt him anymore. That was the only victory she'd salvaged.\n\nThey hadn't returned her clothes yet. Probably wanted to make sure the salve stopped up the bleeding. Form didn't want women walking around with bloody clothes, did they?\n\nThe door slid open behind her and closed again.\n\n\"I trust,\" the Adjudicate began, \"that we have made clear how horrible we view the crime of Monogamy.\"\n\n\"Yes, Mistress,\" Talla replied, lifeless as she could manage.\n\n\"Good.\"\n\nThe Adjudicate moved past her desk to the wall behind it. There were brown curtains there that she slid open. She looked downward into whatever room was beyond and gave a slight nod to someone there.\n\n\"Come,\" she said in a kindly voice. She waved Talla forward. \"Observe your young man.\"\n\nTalla carefully walked around the desk to obey. Much like the window on the right side of the room, this portal also looked down on to the main floor, but into a much smaller room.\n\nShe gasped.\n\nIt was Zhair'lo.\n\nHe was in the throes of passion with a small, muscular girl riding astride him.\n\nHer mouth hung open as she watched him grasping at this girl's back, her hair, her legs. How could he? Just moments ago ...\n\nShe tried to pull away, but the Adjudicate grabbed her by the back of the neck and forced her forward, pressing her bare chest against the unfinished wooden ledge.\n\n\"You see how men are? Is this beast worthy of the devotion you wanted to give it?\"\n\nThe slim girl gave a quick glance up to the window before she leaned over and attached her mouth to Zhair'lo's ear. A moment later and Talla watched as his right hand flashed through the air and struck the girl's ass.\n\n\"Oh!\" she screeched in pleasure. \"Again!\"\n\nTalla felt the tears rising in her eyes; the tears she had locked up and refused to shed through all the lashes of the whip. Mere physical pain could never have forced her to show weakness. But this ...\n\nZhair'lo's hand struck again.\n\nOver and over, the skinny girl begged for him to spank her. Over and over, he did it, his head buried in the crook of her neck. Perhaps he was biting her, too. Talla would never know.\n\nAnother sly look up at the window. The Adjudicate nodded and closed the curtains.\n\n\"Yes, well,\" she said to Talla. \"I think the point is taken.\"\n\nShe thumped on her desk.\n\n\"She's ready now,\" the Adjudicate called out.\n\nA Virgin attendant came in to the little office and stood beside Talla, offering her folded up clothes. Talla didn't care. What was nudity now, after that? She took the clothing anyway. If she walked around naked, they would bring her back and whip her again as they had M'lis and Adria.\n\nHow could you? she thought. How could you do that?\n\n-----------===================-------------\n\nHe woke up with a pounding headache.\n\nWhat the hell time was it? Where was he?\n\nWhen his vision cleared, he recognized the room immediately. It was the same one they'd tossed him in on the night he'd upgraded Talla. It wasn't morning though. He remembered the angle the sun had made through the windows. It was afternoon, maybe early evening. How long had he slept? What had happened?\n\nMemories came flooding back. Talla. The whip. Horrid memories. There'd been a feeling like he was going to die. Then a girl who promised to make it better. It got blurry after that.\n\nStill lying down, he closed his eyes and searched for Talla, like a little boy poking his tongue at the place where his baby tooth used to be.\n\nNothing. She'd torn the mesh. He hadn't been able to hold on through the pain. If he'd just been a bit stronger, fought just a little harder ...\n\nGods damned bitches, he cursed. What have you done to us?\n\nHe stood up, dizzy and with a throbbing in his head, but he stood.\n\nI will get you for this, he swore. I don't know how, but I'll get you for this.\n\nHis clothing was still on. They hadn't stripped him this time. He wobbled to the door, braced himself while he found his centre of gravity, and knocked with the side of his fist.\n\nThe door opened.\n\nA woman he had never seen before, wearing light leather armour, appeared.\n\n\"You're awake, then,\" she noted. \"Let's get you out of here.\"\n\nHe wanted to reply but felt like retching. Stomping on the urge to vomit, he merely frowned at the woman and gave her a nod.\n\n\"Come along,\" she said, waving him to her side.\n\nShe paused a moment and held up her hand, preventing him from passing through the doorway. A large group of men and women, all wearing armour, was marching by at great speed. They made a considerable entourage and carried several more people on stretchers.\n\n'Fighters,' Zhair'lo thought. 'But whom do you fight?'\n\nHe and his guard watched them go by before resuming their walk.\n\n'Whom do you fight?' he asked again. 'Because I have a sudden desire to meet them.'\n\n-----------===================-------------\n\n\"Talla?\"\n\nShe looked up, wondering who would be calling her.\n\n\"You don't look well.\"\n\n\"Tina,\" she acknowledged.\n\nThe two girls looked at each other for a moment. Both faces were a bloodless white, but at least Tina's had some expression. Talla might as well be dead.\n\n\"Come with me,\" Tina said.\n\n\"I want to be alone,\" Talla replied.\n\n\"No,\" Tina told her, hooking her arm. \"No, you don't.\"\n\nTalla didn't care. She would go with Tina if Tina cared so much. Or, if Tina wanted to take her to a bath and hold her head underwater, she would go along with that, too.\n\nShe was vaguely aware that she was being led through the Temple into Endowment's triangle; down the long and mostly empty streets that led to Tina's apartment.\n\n\"There's something I need to show you,\" she said to Talla as she pulled her up the stairs.\n\nTalla couldn't muster the effort to shrug. Shrugging would mean that she cared enough to let someone know that she didn't care at all. Wasn't it more sensible never to shrug at all?\n\nTina closed the door behind Talla and stood up on her bed to take something off the wall.\n\n\"Here,\" she said, handing Talla a bent piece of metal.\n\nTalla recognized it. It was the one truly awful thing in Tina's entire collection of possessions. The presence of Tina's clothing from previous ranks was merely odd. This thing was distasteful.\n\n\"Ugly thing,\" Talla remarked with a frown.\n\nIt was the work of some horrible craftsman attempting to twist a piece of metal into the shape of a Strength medallion -- the roofless house inside the circle of Endowment.\n\n\"It was a gift,\" Tina said with a breath.\n\nTalla perked up at this.\n\n\"A gift?\"\n\n\"From a young man,\" Tina added sternly.\n\nTalla choked.\n\n\"You had a young man, too, didn't you?\" she asked Talla.\n\nTalla nodded, tears burning fresh in her eyes.\n\nTina swallowed.\n\n\"And they caught you today?\"\n\nTalla lost it, then, and felt her body begin to shudder with uncontrollable sobs. Tina embraced her as waves of denied emotions racked her body. She felt, distantly, Tina's tears falling over her.\n\n\"How could he?\" Talla sobbed. \"How could he?\"\n\nTina gulped.\n\n\"They made you watch him with someone else, didn't they?\"\n\n\"What? How did you know?\"\n\nTina took Talla's face in her hands and forced their eyes to meet.\n\n\"It's a thing they do,\" Tina said. \"To break you apart. To make it so you never want to go to him again. I don't know why he went along with it. I don't know why -- why mine did either.\"\n\n\"You've been through this,\" Talla said.\n\nTina nodded.\n\n\"They're so wrong,\" Talla said as her eyes dropped and she started putting the pieces together. \"They hurt us. They hurt him. They -- they're just so wrong.\"\n\n\"Yeah, they are,\" Tina sighed and shrugged. \"But what are you going to do about it?\"\n\nTalla's eyes, red and brimming with tears, rose to meet Tina's.\n\nThere was ice glinting behind that water.\n\n-----------===================-------------\n\nZhair'lo trudged, rucksack over his back, toward his new assignment. He carried his gloves and working leathers a few other articles of clothing. Inside his cleanest shirt, wrapped up carefully, was a small white piece of white cloth that, though it didn't truly belong to him, was his most prized possession.\n\nHunters, the assignment scroll had read. Lyric's Camp, Sector Two.\n\nThey were going to teach him how to use a bow, were they? \n\nFine and good.\n\nHe would learn how to use a bow. He would become a gods damned Master of the bow. He would make them regret it.\n\nThe path he followed went upwards and peaked off at a rocky outcrop. From that vantage, he could see most of Temple laid out on its hill, from the low wall of its main gate to its highest point farther to the north.\n\n\"I'm not going to run away,\" he said aloud to that triangle. \"I'm not afraid of your rituals or what they might do to me. I promised to get those girls out and I will.\"\n\n\"And after that, I don't care if doing your upgrades kills me. If staying here and dying young is the cost of destroying you, I will gladly pay it.\"\n\nEND OF BOOK 1\n\nI'd like to extend my gratitude to Mahanamatashi, a volunteer editor who faithfully edited every single chapter of this story.  Also to Ken Scades who provided some very helpful critiques of my writing. \n\nThanks also to all of the people who sent me a private or public note with critiques and helpful advice \u2013 even those who just kept reminding me to write with their enthusiastic desire for the next chapter.\n\nPlease feel free to drop me a line to let me know what you thought of it, who your favourite characters were and if I forgot them, anything like that.\n\nCheers,\n\nXavier."
    ],
    "authorname": "xtorch",
    "tags": [
        "magic",
        "temple",
        "medieval",
        "mystery",
        "mesh",
        "telepathy",
        "punishment",
        "crime",
        "separation",
        "vengeance"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/tallas-temple-ch-25"
}