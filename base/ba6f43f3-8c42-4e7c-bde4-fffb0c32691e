{
    "title": "The Reluctant Journey Ch. 12",
    "pages": [
        "Dutari couldn't have been gone ten minutes before he returned to Malia's ugly cell. She was absolutely terrified. Before she could react in any way he spoke. \n\n\"Don't worry girlie, I'm just getting equipment set up.\" He laughed coldly. He dragged in a small narrow bench and set down a briefcase style toolbox on top. He opened it to reveal a shiny set of assorted pliers with several pairs of scissors and clamps included.\n\n\"No! Please!\" She begged. Her tear production probably doubled on seeing the torture devices. He smiled and added what looked like a long screwdriver and some power tool that she assumed was a welding device to the collection. \n\n\"I promised you options. I'm a man of my word.\" She continued to beg, her words blending together until they were incomprehensible. \n\n\"Mmm.\" He moaned appreciatively, kneeling close to her face. \"I love screamers.\" He brought his hand to her face and she strained with all her might against the restraints to get closer to the wall. He laughed again, the most evil sound she'd ever heard. \"There's nowhere to run girlie.\" She clenched her eyes closed to get away from his sordid, evil face. Thankfully he just laughed again and stood up. \n\n\"I'll see you again in about twenty minutes. Think things over. Tick tock girlie.\" He was still laughing as he left her in the room once again. \n\n-----------------\n\nAs soon as Tristan's text came through Cain saw red. He was on the move. He was instantly on a helicopter that took him directly to unit 118. Fuck the 'guards' of the unit. Fuck keeping the people living in the unit in the dark. He would deal with the repercussions gladly. Right now he was going to get Malia away from Dutari safely. Then he was going to tear all of the three asshole's limbs from their bodies. \n\nUnfortunately the rage he was feeling was not nearly all encompassing. There was plenty of room for a dark, cold fear to cloud his mind. His imagination provided a soundtrack to accompany the sick pictures on his phone. He could hear Malia screaming for someone to help. He knew Vincent Dutari enough to know that the sick fuck would only get off on those pleas. \n\nUpon hearing the helicopter Blake Denizen tried to make a run for it. Cain had men on the ground waiting for him. He was tackled and dragged back into the building before the helicopter landed. Under different circumstances Cain would have been entertained. Tonight he was looking for answers. \n\nAs soon as Cain entered Blake's tiny, pretentious office the weasel was inconsolably begging. He was sitting in an office chair in the middle of the cramped room with two soldiers flanking either side. As Blake tried to stand the man on his right forced his shoulders down harshly. Blake looked very scared, as he should be. If there was more time Cain would love to drag out that fear and pain, but there was no more time. Malia was in trouble and he was here to find out where she was. \n\n\"Where is she?\" He bellowed in Denizen's direction. \n\n\"What are you doing here Malcolm? I will have you arrested. You're going to jail you crazy motherfucker-\" He was cut off by Cain's fist. Blood spewed from Denizen's newly broken nose. He looked shocked as he brought his hand up to his face and screamed in agony simultaneously. \n\nCain kneeled to Blake's level. \"No fucking games Denizen! Where is Malia?\" His voice was cold and menacing. As Blake didn't speak quickly enough for Cain's liking he began to punch his face like a piece of meat. It was like he was in a daze when Finn grabbed him from behind and pulled him back. \n\n\"Cain! We need him.\" He yelled into his ear like it wasn't the first time he'd spoken the words. Cain shook his head in an attempt to clear his thoughts. He nodded and Finn let him go. Denizen was groaning and clutching his face in pain. \n\n\"Denizen, I'm going to ask you one more time and then I'm going to cut my losses and kill you. You speak now and you just might make it to trial.\" \n\nDenizen looked up at Cain through swollen slits. He pointed to the top drawer of his desk. Cain opened it and Denizen motioned to a tri-folded paper on top. It gave him an address. Cain all but sprinted from Denizen's office and back into the helicopter. Unfortunately he would have to leave his soldiers to handle Blake which meant he would, indeed, make it to trial. But Cain promised himself that the punishment would be extensive. \n\nCain had taken the helicopter within ten miles of the property address listed on the page, not near enough to be conspicuous. As the SUV that had raced the rest of the way came to a halt, Cain jumped out quickly. There was a frantic energy coursing through his entire body intuitively telling him he needed to hurry. Finn had directed the team of soldiers to surround the seemingly abandoned building. Cain knew the importance of a tactical approach, but it grated his nerves to wait even a second. Luckily Finn was extremely competent and quick. The team silently and effectively stormed the building.\n\nCain's stomach sank when a soldier gave Finn the 'all clear'. The building was abandoned. She wasn't here. Now he was too late to save her. Malia would be tortured, probably to death. Cain felt all of his energy and body heat drain with the resignation. \n\nA sudden hand gesture caught Cain's eye. Cain quickly moved over to where the man stood. Cain looked down at where the soldier was motioning and his heart jumped in his chest. There was a hidden door cut out in the floor boards. He motioned the soldier to stand back, then reached down and slowly lifted the heavy wooden door. It inevitably groaned in protest as it went up, despite Cain's attempt at silence. The stairway that was uncovered was dark and empty. The soldiers filed down with Finn and Cain bringing up the rear. \n\nThe basement was mostly dark, with tunneling halls that led to small cell-like rooms. It looked more like an abandoned infirmary than a prison. Cain didn't need the sudden outburst of noise from the soldiers in front of him to know that someone was in the hallway. His eyes had picked up the light at the end of the dark hallway like a beacon in a storm. Dutari and Lutz were restrained before they had the chance to fight back. As viciously angry as Cain had been when he'd received the pictures was how disinterested he felt in Dutari and Lutz at the moment. He wasn't looking for retribution right now. He wanted to find Malia, to make sure she was okay, to do what he could to comfort her. \n\nCain didn't rush to the lit up end of that hallway. He was both looking forward to and dreading what that lit cell would hold. He barely saw the restrained Vincent Dutari as he walked next to him. He looked into the room the soldiers had pulled Lutz and Dutari from moments earlier. There were two plastic chairs and a card table full of beer bottles and fried food. Cain's head twisted towards Dutari instantly. \n\n\"Where is she?\" His voice had never held more authority or menace before. Vincent looked back at him pale-faced and terrified. The piece of shit always had been scared of anyone that wasn't helpless in a fight against him. He was full of confidence when his opponent was restrained, or a woman. Cain didn't have time to work up to a substantial anger before Vincent was motioning to another room with his head. Cain walked around the corner and saw that there was another room emitting light in this hall. Cain walked to the door hoping for the best but visualizing the worst. \n\nThere was a small square window in the top of the door that offered a view into the small room. He saw her instantly. She was tied to a narrow cot, spread-eagle on her stomach. Cain tried the door, but it was locked. He yelled for a key and wasn't surprised when Finn brought it to him personally. He felt dangerous right now which was no doubt prevalent to his men. Cain had enough composure to thank Finn. Finn simply nodded, always understanding to Cain's less friendly moods. Cain unlocked and opened the heavy wooden door. Finn stayed in the hallways as Cain walked in. He was instantly met by frantic sobbing. \n\n\"Please! No!\" Malia pulled at the restraints which looked to be made of leather. Her voice was as desperate as he'd heard anyone's before. Her aggravated motion caused the bleeding welts on her back to seep. He saw a familiar torture setup on a bench in the corner and his stomach flipped. Cain realized she couldn't see him, she thought he was Vincent here to torture her more. He was momentarily stunned by the enthusiasm she used to beg him not to hurt her. He would never hurt her. He would spend the rest of his life making sure no one hurt her. Finally he found his voice as he took a step towards her, into her line of vision. \n\n\"Malia.\" His voice was scratchy with emotion, but she must have heard him because she stopped struggling. \n\n\"Cain?\" She sounded completely vulnerable and unsure. \n\nCain was surprised by the tears he felt running down his face. He walked to the head of the cot and kneeled by her head, completely visible to her now. \n\n\"Yeah baby, it's me.\" His voice was weak with the effort it took to contain himself. \n\nMalia began to cry even harder. Did she think he was in on torturing her? His gut twisted at her negative reaction to seeing him. Cain finally composed himself enough to bring his shaking fingers up to her wrist restraints. It took a lot of effort for him to release the buckle. She was still crying, breaking his heart with her lack of trust in him. He hadn't given her any reason to trust him. She'd said she loved him, he didn't deserve it, and he hadn't reciprocated it. He'd all but kicked her out to find someone else to give her love to. However, it still felt like a knife in his chest that she should feel like he would ever be involved in hurting her like this. He worked the other wrist restraint free and moved down to release her legs. He avoided looking at her back. Surprisingly the brief glance when he'd walked in the door filled him with a deep grief rather than the expected fury. He hadn't done this to her, but he also hadn't kept her safe. Denizen had only done this to Malia because of him. She hadn't done a thing to the men that hurt her. It was completely his fault that she'd been hurt. She didn't move as she was released from the leather cuffs. She just cried harder into the mattress. Cain didn't know what to do once he'd gotten all of the restraints off. She wouldn't want him to comfort her, not when she thought he was responsible for having this torture inflicted on her. He was responsible, it made him feel sick. Cain just sat back on his heels and watched her, his heart breaking more and more as she fell apart. He felt completely and utterly useless. \n\n-----------------\n\nMalia had thought she didn't have any tears left, but when she heard that door open behind her she found out differently. She realized that the will to live was very much instinctual and without the opportunity to fight and/or give flight, all she had left were her tears. She knew it wouldn't make a difference to Vincent, but she couldn't control it. \n\n\"Please! No!\" She heard herself begging him. Her voice was raw from crying and sounded as terrified as she felt. Giving her time to contemplate her upcoming torture was the cruelest thing that had ever been done to her. Malia's thoughts since Vincent had left the cell had centered around visualizations of burning flesh and missing appendages. As soon as she heard the door open all of those thoughts came to the surface to cause a fear that went deep into her marrow. She didn't want to die. She didn't want to leave her family, her new friends, Cain. \n\n\"Malia.\" She stilled. Had she heard his voice simply from thinking about him? She couldn't decide if that was the best gift or the cruelest punishment she could receive right before her death. \n\n\"Cain?\" Oh how she wanted him there, but it just seemed too much to ask for. He wasn't her hero. He didn't want to be with her. \n\n\"Yeah baby, it's me.\" His voice was full of emotion as was his face when he walked into her view. \n\nIt wasn't really him. She was hallucinating from extreme stress. Cain would have been furious when he walked in. Cain would have murdered Vincent for taunting him with the pictures. She hadn't heard any kind of gunshot in the hall. Would she be able to hear through the door? It was a moot point because Cain would never have used those words to greet her. He didn't call her his baby. If he used a pet name it was something sarcastic or demeaning, like 'little girl'. She realized that she was full on sobbing now. She wanted him to be there with all of her willpower, so he was there. But things didn't work that way. She could make him her knight in shining armor in her mind all day but that didn't save her from the evil plans of Vincent Dutari. The mind was a powerful thing and this was one hell of a final scene from hers. \n\nThe tears running out of her eyes were obscuring the gorgeous vision, ruining whatever little time she had with him. She thought it strange that tears would affect a hallucination but she'd never hallucinated before so she wasn't sure how it worked. \n\nWhat if he was actually there? \n\nNo, she refused to hope for that much. She would be grateful for whatever she could get. Just as she tried to begin to control her emotional outburst Cain began to unbuckle her from the disgusting bed. Of course her fantasy would extend to him saving her, it was what she'd wanted more than anything. It felt so real, she couldn't feel the leather around her wrists anymore. \n\nNo!No!No! This wasn't real. \n\nShe couldn't take the devastation when the disappeared and Vincent showed up to replace him. He released her ankles while she continued to break down. She couldn't look at him, it would be too painful. \n\nEventually Malia ran out of tears once again. If she were to get out she would more than likely be dehydrated from her countless stints of crying. She didn't try to move her arms or legs, it would probably ruin the dream of her freedom. She couldn't keep from looking for Cain though, if it was a hallucination she would make the most of it. He was still there, looking at her. He looked tired and very, very sad. He was kneeling about four feet from the side the bed. He didn't say anything. Why wasn't he saying anything? \n\n\"Cain?\" She asked again. \n\n\"Yeah?\" He barely choked out. \n\nWhat was there to say. If he wasn't really there, than it wouldn't make a difference what she said anyway. But if he was there what would she say to him? What was the last thing she wanted to say to Cain Malcolm?\n\n\"I love you Cain.\" She spoke clearly and simply. It was the truth. It always had been. \n\nHe frowned and looked confused. \"You do?\" \n\nShe nodded. Of course he wouldn't believe her, he hadn't the last time she had told him either. \n\n\"Then why are you crying?\" He finally asked, his voice still gruff with emotion. \n\nMalia inhaled deeply and let the calmness his presence brought overwhelm her. He looked impatient waiting for an answer. She smiled weakly. \"Because you're not really here. And I wish more than anything that you were.\" She expected him to disappear now that she'd acknowledged his imaginary status, but he only kneeled there looking even more confused. \n\nHe seemed lost for words and it took him a while to respond. \"Malia I am here. I'm right here. You're going to be okay.\"\n\n\"Please don't.\" She interrupted. \"It's okay that you aren't here. At least I get to see you before he comes back.\" \n\nCain looked shocked by her words. A solitary tear ran down his beautiful face. Malia frowned. This wasn't how she wanted to see him. \"Malia he isn't going to come back. I know that he hurt you and I wasn't there to stop him. This was all my fault. But he won't ever come back to hurt you again. I'm so sorry sweetheart.\" \n\nNo, this wasn't what she wanted to hear. She didn't want him even more guilty. He always had a burden of guilt to carry and she didn't want him to feel any more guilt from her. Was it possible to have a happy ending to this terrible nightmare? Malia finally tested her arms. She was free from the bed frame. She could move. She looked down surprised at her wrists. They were red and chaffed but unbound. She closed her legs and wasn't stopped by any restraints. \n\nMalia's elation was instant and intense. \"Cain?\" She asked yet again. \n\n\"I'm here Malia. I'm right here.\" \n\nShe wanted to go to him. She wanted him to hold her. She started to push herself up into a sitting position but was stopped by the sudden pain the movement caused in her open seeping back. \n\nHe jumped up and came closer. He knelt again, very close now to the edge of the bed. \n\n\"Malia don't.\" He placed a gentle but restraining hand on her shoulder. Malia brought her hand up to his cheek, feeling stubble as she caressed his face. \n\n\"You came to save me.\" She attempted to memorize all of his features in that moment only to realize she already had. His deep brown eyes were so comforting to her because they had become familiar somewhere down this crazy journey they'd been through together. She knew his face but she also knew that she would never get tired of looking at it. \n\n\"No.\" He answered. She was confused, for a second she didn't remember what she had last said. He continued. \"I'm the reason you're here at all. You have every right to be angry with me, to hate me.\" He looked guilty and still so sad. \n\nMalia cinched her brows in confusion. \"No Cain, you're not. You had no part in this. This was the doing of some evil men, only they are responsible.\" \n\nHe shook his head adamantly. \"Malia I-\" \n\n\"Cain!\" She stopped him. \"You are not to be guilty over this, do you understand me? You saved me. Could you just accept that you're the god-damned hero for once?\" \n\n\"I'm no hero.\" He said solemnly. \n\n\"You're my hero.\" \n\n\"You deserve more than someone like me.\" \n\nShe smiled and continued to slowly stroke his face, assuring herself that he really was there. \"I don't deserve to get what I want? Because I want you Cain. I don't want someone else. I love you.\" \n\nHe frowned down at her. He brought his hand to her face and gently stroked her face from temple to chin. \"I love you Malia. I don't know what I would have done if-\" \n\n\"Cain,\" she interrupted again, \"I'm going to be okay. We're going to be okay.\" She smiled. She was suddenly elated, the emotion amplified because it had been so long since she'd felt anything even remotely positive.\n\nCain slowly kissed her, especially gentle in all of his movements. It wasn't a kiss of lust, it was so much more than that. It was everything she needed to know. He looked down at her, studying her again. \n\nFinally he seemed to come out of a daze. \"I need to get you to a hospital.\" His face was so concerned it was comical. \"What the hell is wrong with me.\" He stood and went to the door. Malia had forgotten about the pain. She was safe now. Cain loved her. Malia smiled and dozed off. \n\n-------------\n\nMalia's elation wasn't strong enough to withstand the physical pain the medics reawakened. there was no getting around moving to transfer her to the stretcher. As Malia stood she felt stickiness on her back that made her dizzy when she remembered the cause. Her muscles strained in protest under her own weight. Malia willed them to support her and looked down at her feet. That was when she saw the blood dripping down from her open back. She felt all of the heat leave her face right before she passed out. \n\n-------------\n\nMalia moaned with discomfort. She tried to prevent the encroaching consciousness from grasping her, but it was a losing battle. The first face she saw was her father's. He was smiling gently at her. She never thought he'd looked so old. \n\n\"So blood's still an issue for you princess?\" Malia smiled weakly and nodded. He laughed lightly. She thought it was a defense mechanism for him; if he laughed he couldn't cry. It didn't work, a solitary tear ran down from the inner corner of his eye. Most of her grogginess wore off at seeing her always composed father cry. He closed his eyes to prevent a breakdown. ",
        "\"We were so scared Malia.\" Tears began to well in her own eyes. She looked around and sure enough she was in a hospital room and hooked up to an IV. So she was hydrated enough to cry again, great. \n\nShe suddenly felt guilty that when her life depended on it she had wished for Cain to rescue her. When Cain had kidnapped her she'd wanted her parents to come for her. She'd subconsciously clung to the idea that her dad was supposed to be her protector, even into her early adulthood. But when she'd thought it was all over she hadn't called out for her daddy anymore, she'd hoped and prayed Cain would save her, protect her, love her. Malia had never really understood why mothers and fathers of the bride cried at their daughter's wedding, it wasn't like they would never see each other again. Now she understood it like an epiphany. In a lot of aspects she was replacing them. She loved her mom and dad, they'd been constantly by her side her entire life, but she loved Cain too in a new completely different way. She wanted to be by his side for the remainder of her life. She wanted to be in a family with him, to create their own. \n\nHer dad cleared his throat and wiped away the tear. \"They gave you pain medicine, for your back.\" He clenched his jaw, but withheld any further signs of the rage he felt. \"Something I've never heard of, but everything they told me about it coincides with their claims that it isn't addictive. New-age shit, you never can tell.\" \n\nMalia just nodded. She wasn't in any pain. No pain at all. In fact she couldn't feel her toes. The thought made Malia burst out laughing. \n\n\"Yeah they said you'd be a little loopy for a while because your body isn't accustomed to the stronger medications they use.\" \n\n\"I can't feel a thing!\" Malia giggled. Her father looked uneasy about her reaction. She looked at her hands up close and giggled. \n\nMalia's head cleared less than a minute later. She was feeling disoriented. The medicine's effect wasn't like anything she'd experienced before. The giggly feeling lasted only a short period, followed by complete lucidity. It was worse than being totally loopy from the drug because she could tell she was acting strange, she just couldn't stop it. Malia frowned as soon as she could stop laughing. \n\n\"Where's mom?\" She chose to ask instead of asking about Cain. Her father wouldn't take kindly of her choosing to know about him over her own family. \n\n\"She went to get something to eat with the boys and Olivia. I told her to bring something back for me. We didn't want you to possibly wake up and be alone.\" \n\nMalia felt a huge wave of sadness wash over her. She also felt her mental facilities begin to fail her again. She started sobbing, loudly and quite obnoxiously. Her father was stunned. \n\n\"They'll be back soon princess.\" He patted her shoulder consolingly. \"What's the matter?\" \n\nMalia willed her mouth to close but didn't have enough control to succeed in the small task. \"I'm alone. I'm always alone.\" She said between sobs, \"Cain said that he loved me but he's not here, I'm still alone.\" Her speech was stuttered and broken but regrettably coherent enough for her father to get every word. He waited for her to compose herself again. Thankfully the sobbing stopped as quickly as it had come on. Malia took a shaky breath. \n\n\"What is wrong with me?\" She blushed at her revealing mess of an outburst. \n\n\"It's the medicine. It amplifies the emotional centers in your brain and can cause enhanced emotional responses. They said as a side-effect it was fairly rare and mild but more likely in your case.\" Malia nodded. He'd spoken very stoically, lacking the compassion he'd had before her emotional scene. They were both silent for a moment before Jack spoke again. \n\n\"Your mother didn't want me to talk about the boy,\" he said irritably, \"but since you brought it up,\" he paused. \"She thinks we should give him a chance. I think he's little better than the bastards that put you in here.\" \n\nMalia gasped in surprise at his strong statement. \"You don't know him.\" She argued. \n\n\"I don't need to.\" He argued back. \"I know everything I need to know about him!\" \n\nShe was silent as she took several deep breaths. \n\n\"I love him Daddy.\" She answered a minute or so later in a soft voice. \n\n\"Malia,\" he groaned, \"You don't have anyone else to compare him with.\" \n\nShe shook her head. \"It doesn't matter because I'm not unsure about a thing. I love Cain, I know I do.\" \n\nHer father looked at her for a moment. \"And him?\" \n\nShe frowned. \"He said that he loved me too.\" \n\nJack finally spoke again as Malia studied her fingernails. \"He's been here almost constantly for the past three days.\" \n\nMalia's eyes jumped to connect with her father's. \"I've been unconscious for three days?\" \n\nHe nodded. \"You had a concussion, they gave you a drug to prevent any swelling in your brain. That was when they discovered your reactions to their drugs were stronger than normal. The drug usually only affects someone for maybe a day, making them very drowsy. However, you were unwakeable for three days now. Not from lack of trying.\"\n\n\"Cain's been here?\"\n\n\"Damn persistent jackass wouldn't leave.\" He looked comically grumpy. \n\nMalia giggled, but prevented another laughing outburst just barely. \"Can you try to be nice to him Dad? He kind of saved my life.\" \n\n\"Saved your life?\" He was instantly infuriated. If she hadn't been drugged she might have realized how her words would sound to her dad. \"He was the reason you were there in the first place!\" \n\n\"No he wasn't. Cain had nothing to do with what Vincent did to me. He wasn't part of what he was planning on doing to me. The only fault of Cain's was the fact that he took me from the unit in the first place, and you already said you would let him try and make up for that. I would say saving me is a pretty good start.\" \n\nJack looked at her strangely, a mixture of pride and confusion. \"You've changed.\" He said simply. \n\nMalia nodded. She didn't pretend to not know what he was talking about. \"Yeah, I have.\" \n\n\"I don't like the idea of losing my baby girl,\" his brow cinched with emotion, \"but I'm so proud of the young woman you've become.\" He hugged her tightly and Malia started to cry again, albeit softly this time.\n\n\"That's such a cheesy line dad.\" They both laughed. \n\nHe sighed as he let her go. \"I suppose I should call the boy. He had to be pulled out by his friend and brother so he would clean himself up and sleep. Tristan brought flowers when he came,\" He pointed over to the window ledge, \"the friend brought balloons with a stuffed bear.\" Malia shifted in the bed, intent on walking over to the window covered in flowers. \n\n\"Don't.\" Her father ordered in his doctor voice. \"I'll bring them to you.\" He walked over to the window and retrieved a vase of yellow and white roses with daisies mixed in, the arrangement was beautiful. Jack set the vase on her side table and Malia grabbed the small white card. \n\n'There aren't enough words nor is there enough space on this card to convey to you what I feel for you, sweet Malia. Wake up so I can try damn it. -Tristan' \n\nThe words and handwriting were perfect as per the norm for Tristan. Malia picked up the small white stuffed bear that had three balloons tied to its small wrist. This card was printed with a simple 'get well soon' and signed 'Finn'. Her father brought her more flowers which surprised her because she didn't know many people. Malia read card after card. A lot of the staff members at Milan manner sent her beautiful flowers and cards as did Cain's grandmother Kate. There were sunflowers with a card that read \n\n'When you're ready come down to the second floor and see me. -Gwen'. \n\n\"Why is Gwen at the hospital?\" Malia asked quickly. Her dad looked taken aback for a moment. \n\nFinally he answered her. \"When you were taken from that house Gwen was in the hall the intruders entered through. They shot her,\" Malia gasped, \"but she is fine, she'll make a complete recovery.\" Her dad added on. \n\n\"I need to go see her.\" Malia moved to get up again. Jack placed a firm restraining hand on her shoulder. In her state it didn't take much to physically overpower her. \n\n\"She is stable and on another floor Malia. You can visit her in the morning when you have the doctor's permission.\" His voice was authoritative again. Malia threw her head back into the pillow and sighed exaggeratedly. Malia didn't have long to sulk before her mother and siblings entered the room. Upon seeing her awake their greeting was expectedly chaotic. Her brothers wanted gory details. Her mother scolded them for their inappropriate questions. Olivia asked how she felt with the crazy strong medicine. The chaos was comforting and thankfully didn't allow any more embarrassing, noisy outbursts. One unfortunate side-effects of the excitement filled reconnections was that it drained Malia's energy ver quickly. She fell asleep waiting on another visitor she desperately wanted to see. \n\n----------\n\nIt was so dark. Malia was in a hallway or a tunnel, but it was pitch black. Her feet were cold as they ran along the concrete floor. Her hands occasionally slid along the wall as she ran but it was slimy and cold. She could hear someone or something behind her, moving much more quickly. She tried to yell for help but wasn't able to produce any sound. Whatever was behind her was getting close. She could feel warm breath on her neck. She tried to move faster but her legs weren't obeying her. Then she heard a distinctive whistle through the air. She screamed and woke herself before the whip could make contact. \n\n\"Malia! Malia!\" She heard someone calling her name and stopped screaming. It was a dream. She realized this room was dark, but not pitch black. once her eyes adjusted she could make out Cain easily. He pushed her hair behind her ear and 'sshhed' her gently.\n\n\"Cain!\" she said excitedly, though her voice was still groggy from sleep. He was close enough she could pull him into a hug by his neck. She pulled him off balance halfway into the bed on top of her. He made a sound between an 'oof' and a choke. \n\n\"Oh, sorry,\" she laughed as she released his neck. He stoop up again, hurriedly removing his weight from her chest. \n\nHe looked concerned. \"Are you okay?\" \n\nHer back should be hurting from the force of Cain's weight, but she didn't feel anything. \n\n\"I'm fine.\" she smiled. His face seemed to have gotten even more perfectly handsome if it were possible. She probably was biased considering the new stubble and dark circles under his eyes. \n\n\"You were screaming.\" He frowned down at her. \n\n\"Oh,\" she answered stupidly, then remembered the dream. It amazed her how thoroughly his face could chase away her nightmares. Nonetheless, upon recalling the dream she shivered in disgust. \"It was just a dream.\" \n\nHe was still frowning. She wanted to see him smile. It seemed like it had been so long since she'd seen him show any sign of happiness. He didn't smile though, he just stared at her frowning. She brought her hand up to his face to feel his stubbly cheek, which was really move of a short beard than five-o-clock shadow by now. \n\n\"Did you give up on shaving my love?\" She smiled giddily. He looked confused and brought his own hand up to his jaw. Before he could say something sad she continued. \"\"I like it. You look like a very rugged, very sexy, lumberjack.\" He smiled and her mission was complete. That face would be the face she would remember when she was old and senile. \n\n\"Jack told me you were a little out of it.\" \n\nShe made an offended sound. \"I'm not out of it! I just missed you.\" She changed her tone to a more serious one. \"I thought I wouldn't get to see you again.\" Unfortunately this statement brought his frown firmly back in place. \n\n\"Malia, I need to know what those bastards did to you.\" He spoke through gritted teeth. \n\nShe frowned. \"I only really saw Vincent. Mr. Denizen, the unit council leader, came in. He was in charge. He told Vincent to-\" She took a shaky breath, \"He told him to break the skin with the..with the whip.\" She began to have another very emotional, medicine-induced outburst. Cain held her through her sobbing, making consoling gestures and sounds. \n\n\"Please Malia, don't cry.\" He ran his hand over her hair as she sobbed into the crook of his neck and shoulder. \"You're killing me here sweetheart.\" He pleaded. \n\n\"I'm sorry.\" She sniffled. \"I can't help it. It's the medicine.\" She knew that if she tried to tell him what happened again it would only cause another negative emotional response. So she should just get it all out of the way. If she didn't tell him he would think the worst. Malia cried through the sentences, but told him everything. \n\n\"Cain can you just lie up here with me?\" She asked once she finally stopped crying. He looked unbearably sad and guilty but tried to smile and complied as she scooted to the far edge of the hospital bed. He wrapped his arm around her and her head rested on his bicep. Every inch of her side pressed up against his in the single bed. She had never been more comfortable.\n\nHe was very quiet and she worried that he was feeling guilty again. \"What did you do to Dutari and Denizen after I passed out?\" \n\nHe waited a moment before answering her. \"I don't want to upset you again Malia. We can talk about it later.\" \n\n\"That bad huh?\" She smirked. \"I wont loose any sleep hearing about any pain you put them through.\" \n\n\"Is that what you want?\" She looked up to see his questioning face. \"For me to have them beaten or tortured?\" He looked hopeful. \n\nShe thought about it for a moment. Waiting for Vincent to come back and knowing that he would bring indescribable pain and probably death was the worst thing she'd ever had to endure. She wouldn't wish it on anyone, not even Vincent himself. \"No.\" She answered surely. \n\n\"Damn. That's what I thought you would say. To tell you the truth, I haven't done anything to them. Yet.\" \n\nShe intertwined their fingers as she listened to him speak. \"Nothing?\" She asked.\n\n\"No. I've been here.\" He said it unsurely. \n\nMalia smiled. \"Is it absolutely awful of me to be pleased that you've been worrying about me?\" \n\n\"Yes. Yes it is.\" He smirked. \n\nShe laughed and nuzzled into his neck. The room was quiet and dark, it was surprisingly peaceful for a hospital room. There was so much that needed to be discussed between the two of them but she didn't have any motivation to talk about anything right now. She laid next to him and listened to his deep breathing as he fell asleep, then she joined him in blissful unconsciousness. \n\n--------\n\nCain was confused for a moment when he woke up in an unfamiliar room. He had fallen asleep cuddled next to Malia. His arm was asleep under the weight of her head. \n\nCain felt like he was running on borrowed energy. The last three days had been the longest of his life. Even when the doctors had assured him that Malia was fine and would make a full recovery, he was a mess. When Tristan had been unconscious from hypothermia so many years ago the guilt had been insufferable. But when Malia was unconscious it hadn't been guilt that had tormented Cain, but an overwhelming sense of vulnerability \n\nIt hadn't helped his mood or energy level that he'd been forced to spend every waking hour in close proximity to Jack Yates. Malia's mother had turned out to be very pleasant. She had the same sense of humor as Malia as well as a kind heart she tried to hide behind an impressive outward strength. Her father, however, was proving to be and overbearing ass. Cain hadn't had a father figure for a long time, other than his occasional meetings with Eli McAllister, and he wasn't relishing Jack's patronizing attitude. He treated him like an unruly teenager and the ensuing power struggles between them reminded him of his less than idyllic adolescence. \n\nSpending all of his time worrying about Malia and fighting with Jack, Cain hadn't had time to deal with his prisoners. He hadn't been lying when he'd told Malia that he'd done nothing to Dutari, Lutz, and Denizen. Denizen had been brought back to Milan manner instead of a jail holding cell, apparently under McAllister's order, though Cain hadn't spoken with him himself. For three days they had resided in his basement cells with no food and minimal water. He'd done nothing to them nor for them. They hadn't been on Cain's mind long enough for him to decide what he should do with them. He didn't know what Eli McAllister would allow him to decide. The general of the army couldn't condone him murdering three men out of revenge, but why hadn't he had the men transferred to a government jail? Cain didn't know if he still had a job or was going to get arrested any minute with the way he'd bombarded the unit and abused Denizen. He should be more worried, but knowing Malia was okay was too much of a relief to feel too much negativity at the moment. \n\nHe shifted beside her, moving his arm from underneath her head, and he went back to sleep. \n\n----------\n\nGwen woke up from a dreamless sleep. She was surprised that she hadn't had a nightmare about the shooting. It was probably due to the heavy medication she'd been receiving. The room was dim, but not dark. She immediately saw Tristan sitting next to her bed, asleep and snoring. Jeez no wonder she'd woken up. \n\nShe smiled to herself. He was still here in the hospital with her. It felt like she was too lucky, like it was all a dream she was going to wake up from. Considering she'd just had two bullets removed from her body the feeling was disorienting and surprising to her. Maybe the drugs were too strong. \n\nTristan and Jack had talked to her for hours about what had happened. Then she had to repeat everything word for word to Cain. Luckily Tristan had been in the room or she wasn't sure she would've been able to make it through, Cain still intimidated her greatly. The entire ordeal had exhausted her and she'd fallen asleep. She wanted to talk to Tristan about more personal matters but she also desperately wanted to avoid it.\n\nWhat was going to happen now? Was she supposed to just go back to her cleaning job? Was she going to be able to compartmentalize her life into work and personal life while she was in the same place for both? She didn't think she would be able to have a romantic relationship with her boss. She knew she wouldn't feel okay quitting her job and freeloading off of Tristan. What would her coworkers think? She wouldn't be able to blame them. Sleeping her way to the top was not what she wanted to tell her grandkids someday. She had no idea how to avoid it though. She could work for him or she could not, but she didn't have a choice as to whether or not to have a relationship with him. She wanted to be with him. She just hoped her dignity wouldn't be the price. \n\nTristan frowned in his sleep. He was so beautiful. His hair had a slight curl that was longer than it usually was and his face was covered in dark stubble. His arms were crossed over his chest and his legs were stretched out. She wanted to get up and go over to touch him. As soon as she moved her arm to get up pain shot through her shoulder. When she took a deep breath in from the surprise of the pain she started to cough uncontrollably, which caused more pain everywhere. She was able to grab a box of tissues off the side table before she started coughing up blood. Tristan was up and hovering over her before she got control of the cough. \n\n\"I'll call the nurse.\" He started to move but she grabbed his wrist. \n\n\"No, no. I'm fine. I promise.\" He looked reluctant to stay. \"Please, just stay with me.\" \n\nHe scowled at her. \"Don't do that.\" \n\n\"What?\" \n\n\"You can't use that against me, not if this is going to work between us.\" \n\n\"Can't use what against you?\" Gwen was genuinely perplexed. He paused for a minute and just looked at her sweetly. ",
        "\"You want to know a secret?\" Gwen nodded. \"All you have to do to get me to do whatever you want is ask me the way you just did. If you use that against me the playing field is going to be completely skewed in your favor for the rest of our lives.\" \n\n\"The rest of our lives?\" Gwen nervously bit her lip. \n\nTristan smiled, his face lit up and he didn't look the slightest bit tired anymore. \"Exactly.\" \n\nShe smiled. \"And what is my incentive to comply with your request?\" \n\n\"You want to discuss incentives?\" He grinned and she laughed. \n\n\"Exactly.\" \n\n\"What is it you want, sweetheart?\" \n\nShe looked at him seriously. \"I want to make love to you Tristan.\" The self-reflection and over analysis had went out the door, but she didn't regret it in the least. She knew exactly what she wanted and she had every intention of making it happen. None of the consequences were deal-breakers. She wasn't sure she would ever come across something that would be a deal-breaker when it came to Tristan. \n\nHis expression lost all of its amusement suddenly and she felt a twinge of nervousness in her gut. He moved his hand to her chin and tilted her head up. Her unease dissipated when she realized he wasn't unamused because he was rejecting her. His eyes were deliciously lustful as he looked down at her. He looked slightly dangerous in the most confusingly arousing way. He leaned down and kissed her slowly. It was just as amazing as she'd remembered from before being interrupted by the construction team. She wanted every part of him. She wanted to give every part of herself. She raised her arm to grasp around his neck only to wince in pain again. He immediately stopped and pulled back. \n\n\"As much as I would love to fulfill your request, and I would love to...desperately. You are in no shape for such...amorous activity.\" Tristan looked like he wanted to contradict himself and continue their activity very badly. She knew him well enough to know that he would not follow through on his desire. He would wait until she healed completely, and probably wait a little longer to ensure her complete health. He was a gentlemen to a fault sometimes. \n\nShe sighed. \"As much as I hate to admit it, you're probably right. My arm really hurts when I move it, and the the coughing up blood thing wasn't especially relieving.\" \n\n\"The doctor said that might happen because they had to remove a little of your lung.\" Tristan assured her. \n\nShe nodded. The silence was awkward. She didn't know what to say now. She felt very vulnerable and uncomfortable. She knew it was unreasonable but she inevitably felt rejected and very undesirable. \n\nTristan studied her face carefully. \"What are you thinking?\" \n\nShe shook her head. \"Nothing.\" She was sure her cheeks were bright red by now. \n\n\"Are you embarrassed?\" He sounded surprised and slightly amused. \n\nHer immediate response was to deny it, but for some reason she didn't. \"I..I..maybe I..No.\" Okay so she wasn't going to win a medal for bravery. \n\nHe frowned at her and in continuance with her cowardice she looked down at her hands in her lap. He sighed heavily and sat on the side of the bed. She looked up at him when she felt his weight suddenly shift the mattress. \"Gwen, we didn't get to talk as much as I would have liked before. I know that we said that we were going to move slowly but I think that that was pretty much shot to hell. Um..pardon the very unintentional pun.\" He sounded and looked distraught. \"I was terrified, more than a casual, take-it-slow, somewhat-boyfriend has any right to be. I want to have the right to feel concerned for you. I want to know the answers to the forms I had to fill out when you were admitted. I don't want to have to look you up like an employee. What I'm saying is, that I don't want to take it slow, not at all. However, you were just shot twice and took about ten years off of my life, so as much as I would love to have my way with you, it will have to wait until you have the normal amount of holes in your body.\" \n\nGwen giggled at the very uncharacteristic racy remark. \"Wow, my gentleman suitor seems to have been replaced by an uncivilized rake.\"\n\nHe grinned. \"If your delicate sensibilities are shaken now my lady, just wait a fortnight or so. I predict you shall be positively shocked.\" \n\nShe laughed and her self-consciousness melted away. \"I don't want to take things slow either.\" \n\n--------\n\nMalia got to visit Gwen two days after she woke up. They spent at least an hour talking about their respective series of events. Malia was going stir crazy and it didn't help that upon arriving at Gwen's room she found out that she was preparing to leave the hospital. \n\n\"You get to go home?\" Malia asked outraged. \n\n\"Yeah.\" Gwen smiled. \"Tristan influenced them a little. I will still have to stay in the basement of the manor with all of the hospital equipment. You don't get to leave?\" \n\n\"No.\" Malia grumbled. \"Cain influenced them too, only in the other direction. I'm fine, but he doesn't want to rush anything.\" She sulked. \"But I'm very happy for you.\" Malia tacked on, smiling sincerely. \"How are things with Tristan going?\" \n\nGwen smiled. \"He's very diligent.\" \n\nMalia giggled. \"I bet.\" \n\n\"Once I heal completely I think he'll ease up a little, but right now he's kind of, maybe a little bit overbearing.\" She said it guiltily. \n\n\"It must be in his blood.\" Malia grumbled. \n\nGwen laughed. \"I can imagine. Cain was very distraught when he spoke with me. It was by far the most out of control I've ever seen him.\" \n\n\"It scared him. I get that. But he can't be scared forever. I can't stay locked up in the hospital forever so he's sure nothing will ever happen to me. Plus I hate hospitals.\" Malia's face paled as she looked at the bandage covered wound on Gwen's shoulder. \n\nGwen nodded. \"I can understand where they are coming from though. If the situation had been reversed, if Tristan had been shot..I don't think I would be quick to get over that.\" \n\nMalia thought about Cain being tortured in her place. It was hard to imagine anyone overpowering him and she knew his pride would never let him give into something like that. He would have acted more honorably. The mental pictures made her uneasy. \"You're right, like always. But Cain can't get his way anymore. I am leaving this hospital with or without his permission.\" \n\n\"Uh oh.\" Gwen smiled. \n\nMalia grinned back. She hugged her friend gingerly to avoid hurting her. \"I'll see you soon, back at home.\" \n\nGwen looked slightly worried. \"I hope you know what you're doing.\" \n\nMalia laughed. \"Why start now?\" \n\n--------------\n\n\"Finn I need to ask a favor.\" Malia had been waiting to get him alone for hours. \n\n\"Yes?\" He looked justifiably suspicious. \n\n\"I need to get out of here and I was wondering if I could go to your house for a while?\" \n\n\"My house?\" He raised his brow. \n\n\"Yes.\" \n\n\"What about Cain?\" \n\n\"What about him?\" \n\n\"Malia\" he said with a warning tone. \n\n\"Finn, please. Will you please help me get out of here? I need to talk to Cain, but I can't do it here. Your house is the only place we ever really communicated semi-successfully.\" \n\nHe frowned and stared at her for a moment. \"Okay.\" He agreed finally. \"But we have to hurry. He wont be gone long.\" \n\nMalia grinned. \"Thank you Finn, I owe you.\" He just grunted in response. \n\nGetting out of the hospital was surprisingly easy. Malia had envisioned a spy-like sneaking out scenario, but she was able to be discharged simply by asking. She even charmed the nurses and doctors into speeding up the process. She was out in thirty minutes. She was surprised to find out Finn did not only drive black SUVs, his own vehicle was a dark blue pickup truck. Though they'd been weaning her pain medication for days, she started to feel the wounds on her back during the long drive to Finn's secluded cabin. He got a phone call during the drive that she imagined was from Cain, because he looked at the phone and sighed before ignoring it. It rang several more times after that. Malia's stomach started to turn. Was this such a good idea? Most definitely not, but she'd already gotten the ball rolling. \n\n\"Do you think he'll come after us?\" she finally broke the silence. \n\n\"Us?\" Finn smirked. Her head shot over to face him accusingly. He laughed lightly. \"I thought you two were in a relationship of sorts? You sound almost scared Malia.\" He was clearly enjoying himself at her expense. \n\nShe bit her lip nervously. \"I'm just not sure of what his reaction will be.\" \n\n\"Well, he's not going to be happy.\" \n\n\"Yeah, that's what I'm worried about.\" \n\n\"I thought you had a plan?\" He sounded more unsure than amused. \n\n\"Of course I do,\" Malia defended, \"I'm going to reason with him.\" \n\nFinn sighed heavily. \"Shit.\" \n\n----------------\n\nMalia only got to pace Finn's living room for twenty minutes before Cain showed up, flinging gravel with his motorcycle. She was too cowardly to meet him outside. Cain stomped up the stairs and flung open the front door without knocking. Malia felt like sneaking out the back door. He was very mad at her. But that wasn't an excuse for him to play dictator, especially a coddling benevolent dictator. She wanted things to go back to the normal they were becoming when they'd been at the cabin before. She needed some kind of balance in power. She had renewed most of her strength when he confronted her in the living room. Unfortunately, Finn spoke first. \n\n\"Careful with the door there killer.\" \n\nCain glared at him in response. \"You seem to have turned off your phone.\" \n\n\"Damn signal out here.\" Finn shrugged. \n\n\"Bullshit.\" Cain growled. He turned to Malia.\" What the hell are you doing out of the hospital?\" He was yelling now. \n\nOkay she could handle this. She took a deep breath. He interrupted her. \n\n\"Come on Malia, I'd never pegged you as stupid before.\" \n\nShe frowned. \"Excuse me? Are you kidding me right now.\" All of her unease melted away into annoyance. \"You are completely unreasonable!\" \n\n\"I'm unreasonable? You snuck out of the hospital behind my back!\" He stood right in front of her now. \n\n\"I didn't sneak out, they let me out. You know, the doctors, the people professionally trained to determine who needs to be in the hospital and who doesn't!\" \n\n\"You knew exactly what you were doing Malia.\" \n\n\"Yes. Yes I did. I was making my own decision. As for me going behind your back, I'm sorry that that was necessary.\" \n\n\"Necessary?\" He said it like an expletive. \n\n\"Yes! You would never have let me leave that hospital room!\" \n\n\"Malia, don't be ridiculous.\" At least he wasn't yelling now. \n\nShe took a breath and tried to calm herself. \"Cain, I know that you've been through a lot recently. But I refuse to let you bully me around. Finn said that I could stay with him until I get on my feet.\" She noticed that Finn had left the room, she couldn't decide if he was being polite or a coward. \n\n\"The fuck you are!\" he was yelling again. \n\n\"Cain!\" she yelled back at him. \"I love you! But I am not going to follow you like a soldier damn it!\" \n\n\"Malia, you are going to be my wife and the mother of my children and you will damn well obey me!\" \n\n\"What?\" She didn't have the breath to yell. \n\n\"You heard me!\" He grabbed her shoulders and pulled her up to meet his forceful mouth. \n\n\"Cain? You can't...I wont...\" He kissed her again. \n\n\"I most certainly can and will marry you my love.\" \n\nShe frowned at him. \"I wont obey you.\" She sounded sulky. \n\nHe laughed. \"What's new?\" \n\n\"And I hope you don't consider that a formal proposal.\" \n\nHe grinned. \"I think this is going to be fun.\" \n\n---------------\n\n\"Jack.\" Cain called across the library. \n\n\"Cain.\" Jack replied stoically. Being in such close proximity recently hadn't done well for mending their relationship. \n\n\"I needed to speak with you about something.\" Cain inwardly cursed himself for not starting with the question as he'd planned. He would never admit to it, but Jack made him more nervous than anyone since his own father. \n\n\"Yes?\" Jack looked up from a large book that sat on the table in front of him. \n\nCain sat across from Jack at the antique table. \"I want to ask for your daughter's hand in marriage.\" He knew his face would betray nothing, but his palms were sweaty, clasped firmly underneath the table. \n\nJack frowned slightly. \"Have you already asked Malia?\" \n\n\"Yes.\" Cain answered unenthusiastically. \n\n\"And she said yes?\" \n\n\"It was implied.\" \n\nJack arched his brow. \"Than why are you asking my permission Cain?\" \n\nDamn it, he didn't want to do this. \"Jack, I've lost most of my family either through death or alienation. Your daughter has reminded me of the importance of family. I don't want her to have to choose between marrying me and being a part of her family because I'm not confident that I would win that battle. I'm not noble Jack. I make mistakes all the time and I've hurt Malia repeatedly and you will never know how much I hate myself for that. But I do love her. I want to marry her and have a family with her.\" Surprisingly Cain felt his face heat up during his spiel and his eyes became watery, though, thankfully, he didn't shed a tear. \"Cain, I would be honored to have you as a son.\" Jack replied just as seriously as he'd started. \n\nCain looked confused. \n\n\"As much as I hate to admit it, you are a good man. You are more noble than you give yourself credit for. You saved my daughter's life and you stood by her side. I could see it then. I knew that you two loved each other. And even though you're bull-headed, a pain in the ass, and much too prideful for your own good, I wont stand in my daughter's way.\" Jack stood and Cain followed suit. \"Welcome to the family Cain.\" The two men shook hands and Cain could tell an alliance of sorts was formed. \n\n------------\n\nCain was surprisingly calm as he walked into Eli McAllister's office. His actions in dealing with Blake Denizen were enough to have him demoted if not arrested. He just couldn't bring himself to care, probably because he couldn't bring himself to regret it. Obviously he didn't want to be arrested as it would take him away from his brother, fianc\u00e9e, and new family. But he wasn't sure if he would care much about losing his job. He had plenty of money, he would have more time. \n\n\"Cain,\" Eli greeted him with a one-armed hug. Cain was surprised. \n\n\"Eli,\" He said stupidly. \n\n\"Please sit Cain.\" Cain complied and Eli sat behind his desk. \"I called you here to formally apologize for the actions of former unit director Blake Denizen. Cain if we would have known he was so involved in a personal vendetta against you, something would have been done. I am taking full responsibility as I was the one who took the phone call he made enquiring disciplinary action against you, I should have investigated. I'm sorry Cain.\"\n\n\"General McAllister, permission to speak freely?\" \n\n\"Of course, son.\" \n\n\"Aren't I in trouble here?\" Cain was confused. \n\n\"In trouble?\" \n\n\"Yes. I violated Denizen's civil rights in the, um, methods I used to interrogate him.\" \"The bastard deserved it as far as I'm concerned.\" Eli smirked, \"Besides, civil rights aren't what they used to be. Under the new order the government probably had more power than it should, but until that changes I have the right to interrogate my men anyway I damn well see fit. You were acting under my order.\" Eli smiled at him. \n\n\"That sounds awfully shady.\" Cain frowned. \n\nEli shrugged. \"Cain, the government isn't what it used to be, yet. It's going to reach an equilibrium in power eventually, but right now? Not so much. So, while I still have the power to do so, I'm validating all prior interrogation tactics on your part. How about you thank me and enjoy it?\"\n\nCain nodded. \"Yes, sir. Thank you sir.\" Eli was right, a lot of work needed to be done. Cain realized his time as a general wasn't up yet. He had a personal obligation to make sure those freedoms were given. He would make it his mission to see every unit freed and successfully integrated back into society. It wouldn't be easy, but what life mission was? Cain had a lot of hard work ahead of him but with a clear purpose he felt ready to take on the task. He felt rejuvenated. \n\n------------\n\nGwen was going crazy. Every night she staying in the hospital bed in the basement she would think about Tristan. He'd offered to sleep in the basement with her, in another bed of course. Though she'd been tempted, she insisted he stay in his current bed. The bed in the basement wasn't nearly as comfortable as Tristan's would be. Every time she thought about his bed she got very nervous. It had been three long weeks and she couldn't take it anymore. Gwen felt fine, yet Tristan insisted she still needed more time. Not if she had anything to do about it. \n\nBy the time Gwen reached Tristan's closed door she was slightly winded do to her recent lack of physical activity. She opened the door before her nerves got the best of her. The room was surprisingly dimly lit. Tristan immediately looked at her from the couch in his living area. He had been reading. \n\n\"Gwen, what are you doing up here?\" He moved quickly to get up, but she held up her hand. \n\n\"No, stay there.\" she walked over to him after closing the door. As she'd been meticulously planning for days, she had had time to ask Malia to bring her her cream silk robe that came to right above her knees. She was very proud of it. It was the only article of clothing she had on and she nervously fidgeted with the tight knot at the waist. \n\n\"Gwen?\" He repeated when she just stood there in front of him stupidly. She couldn't get the damned knot undone. Her hands weren't working on the slippery material from the sweat that had collected on her palms. She clumsily pulled the garment over her head with some difficulty. She imagined the scene looked quite funny, but Tristan wasn't smiling when she looked down at him. He looked at her everywhere. She mounted his lap to avoid getting even more nervous, though what she felt when she lowered herself onto him didn't exactly calm her nerves. Electric excitement flashed through her in equal parts as pure unease. She wasn't sure she could follow through with this. \n\n\"Not that I mind or anything, but what are you doing?\" His voice was deeper than usual and his eyes were darker. \n\n\"If you have to ask I'm probably not doing it right.\" Gwen's own voice surprised her, it was huskier as well. \n\nTristan gave a cynical laugh. He grabbed her hand and moved it down to the crotch of his pants. She gasped when she felt him underneath his pants. \"I beg to differ.\" His expression was between a smile and a wince. \"But I meant, why are you up here tonight?\" \n\nShe turned her wrist and grabbed the hand that had encircled her own. She moved his hand slightly up and between her legs. Though she gasped when he made contact, she was able to speak. \"This is why. I can't stand it anymore.\" She knew he could feel the hot wetness there. It had been a constant inconvenience for almost three weeks now, every time she thought of him. \n\nHis smile had disappeared completely. His brows were cinched together tightly. His hand moved seemingly without the consent of his mind. She let go of his wrist to cling to his shoulders with both of her hands for balance. \"Are you sure?\" He asked quickly, in almost a growl. She nodded shakily. His thumb found her clit and her spine instinctually arched as she hissed out a breath. \"Ohmygosh.\" \n\n\"You're so fucking beautiful.\" His usually eloquent voice sounded so sexy when he was out of control. He kissed her harshly and passionately and his hand that wasn't busy moved up to her breasts. \n\nShe couldn't concentrate and it was amazing. Finally she made her hands work the buttons of his shirt. After fumbling for a while his own hands came up and ripped the shirt open, popping every button off. She smiled and finally felt his exposed chest. He was so hard and defined. With his hand out from underneath her she sank down onto his lap and ground against him. She could feel his thick erection pulse through his thin pants. She grabbed his face and kissed him for all she was worth. ",
        "He groaned and flipped her quickly so her back was pressed into the couch and he was looming over her. Her legs clung to his thighs keeping them locked close together. He grabbed her wrists harshly and pinned her arms above her head. \n\n\"Jesus, Gwen.\" He hissed when their mouths disconnected finally. They both breathed harshly and looked into the other's eyes. \n\n\"Tristan, please.\" She whimpered, needing him to continue. \n\n\"Are you okay?\" He huffed out barely. \n\n\"No! I'm about to explode. Tristan, please!\" \n\nHe smiled. Instead of answering her he kissed her. He kissed her nose, the corner of her mouth, her chin. As he moved down her neck she shivered and giggled, though her laughing ceased when he reached her breasts. He sucked in her right nipple, biting it gently. He moved up to the white scar on her shoulder. He kissed all around it and gently covered it with kisses. He moved down slowly until he got to her second scar, where he repeated the process. Her legs where spread wide around him when he finally moved all the way down to her pussy. He'd released her arms when he'd started descending and her hands shot to his hair. She didn't know whether she wanted to press his head into her center or push him away from her. As his tongue moved over her clit the furthest thing from her mind was pushing him away. \n\n\"Tristan!\" Her hands wouldn't stop clinching and releasing, luckily she'd let go of his hair to cling to the cushion of the couch. \n\n\"Come for me baby.\" His voice was so deliciously rough.\n\n\"I don't know...I think..\" She mumbled. His tongue felt amazing. The sight of his head between her legs was the sexiest thing she'd ever seen. \n\n\"Let it go sweetheart.\" He growled. \n\nShe couldn't hold back anymore. Gwen came violently. It was the most exhilarating thing she'd ever felt and Tristan enjoyed watching every second. He held her through the entire thing. \"That's it baby.\" He smiled and kissed her temple. \n\n\"Are you okay?\" He asked once she finally caught her breath. She nodded and smiled up at him. He looked like he was going to argue with her but she kissed him before he could. Surprisingly it didn't take long before her arousal began to build again. She needed to feel him inside of her. Her fingers moved to the front of his black pants. She undid the button easily enough but couldn't move the zipper. Before she could get too frustrated he moved his hands down and unzipped himself. She pulled at his pants and boxer briefs until his erection was exposed. She couldn't see it with Tristan still above her, now alternating between kissing and nipping her collarbone and shoulders, but she could feel that he was big. As her hand wrapped around him he groaned and paused mid-nip. He was so long and thick and hot. The skin was so smooth. As she moved her hand up she could feel a bead of liquid from the tip, she spread it down with her hand. The noises he was making were exciting her. Before she got to play more, he stopped her by grabbing her wrist. She started to pout, but stopped when she felt him press against her opening. \n\n\"Are you ready?\" It sounded like it was killing him to ask. It was definitely killing her to wait. She nodded quickly. He began to slowly push into her, gritting his teeth the whole time. Sweat formed at his brow and his expression was one between intense concentration and almost pain. The stretch was uncomfortable for her at first. He was so big. He stopped and she braced herself for pain, but he didn't move forward. He kissed her again and his hands were on her breasts again. Only when she relaxed from his distractions did he press into her quickly and completely. The whimper she made was lost in his mouth as he kissed her. He stayed there deep inside her for a moment, allowing her to get used to the foreign feeling. Her hands moved to his tight ass and he started to move slowly. He groaned, the sound so excitingly primitive as were the motions he made. She couldn't help moving up to meet his thrusts, egging him on until he was moving deeper and quicker. The sensations changed, the pain gradually fading being replaced by a foreign kind of pleasure. The newness of the feelings he caused in her was exhilarating and highly arousing. \n\n\"Gwen, come for me.\" He groaned, the words so deep that she almost didn't understand him. She moaned in answer, unable to form words. \n\n\"Tristan.\" She finally got out. Once she said it it seemed to be on repeat. \"Tristan, Tristan, Tristan...\" His thumb was between their bodies quickly and he found her clit immediately. She came as requested. She made high pitch noises that would have embarrassed her otherwise. \n\nShe could feel when Tristan's control completely dissipated. He thrusted so fast and unrestrained that it hurt slightly, but knowing that he would feel the same ecstasy he'd just given her made the pain strangely pleasurable.\n\n\"God, you're so...fucking..tight..\" He groaned in completion, spurting inside her. \n\nA few moments of heavy breathing later he kissed her passionately and then he surprised her by lifting her as he stood. He slid out of her as he stood. He started walking into his bedroom completely naked. She finally realized that they'd just had sex for the first time on a couch, it should have been more uncomfortable but she hadn't thought anything about it the whole time. He held her with one arm underneath her ass and used his other hand to flip back the blankets. He dropped her onto the bed, grinning like a teenager as her breasts bounced. She laughed. \n\n\"Tristan Malcolm!\" \n\n\"I told you that you would be positively shocked my lady.\" He gloated teasingly. \"Are you okay?\" He asked seriously. \n\nShe nodded. \"I'm more than okay stud.\" He grinned at her again. \"Are you okay?\" She asked. \n\n\"Baby I'm so far past okay.\" He smiled. \n\nThey laid next to each other uncovered and completely nude. It wasn't awkward like Gwen had feared it might be. She leaned up on her side to look at him. Her hands instinctively moved to his chest, circling his flat dark nipples until they stood up. His body was so different from her own. His taunt olive skin was dusted with course dark hair. Her fingers moved along the lines of his muscles, going from his pectorals to his abdominals. She circled his navel lazily and moved down to his hips. She looked up at his face to find him completely relaxed and looking at her through slitted dark eyes. She sat up beside him and continued to move her hand down his muscular thigh closest to her. Her fingers stilled when they came in contact with the thick jagged white line. She traced around the silver prosthetic, gently grazing the old scar.\n\n\"Does it hurt?\" She asked gently looking into his eyes. \n\nHe shook his head gently. \"Not at all.\" His voice was honest and steady, he didn't feel bad for himself and Gwen knew he didn't want her pity. \n\n\"Do you ever get angry?\" She asked softly. \n\nHe looked contemplative. \"Sometimes.\" He answered, looking somewhat ashamed of his honesty. She nodded in understanding. \n\n\"Sometimes I forget that you wear prosthetics, you're very coordinated and graceful.\" \n\n\"Sometimes I forget too. When I'm dreaming I'm running and playing sports again in high school, sometimes I wake up and I don't remember the accident ever happened. Sometimes I can still feel my legs, like they're still there.\" He said it as a fact, but it made her sad. She hugged him tightly, pressing her naked body up against his. \"Don't feel bad for me baby.\" He stroked her hair as silent tears fell down her face. \n\nShe looked up at his with excess water still in her eyes. \"I love you Tristan. I always have.\" She sank back into his embrace. \n\nHe kissed her temple. \"Than marry me Gwen.\" She didn't move. She was stunned. She didn't know what to say so she just nodded. He laughed and tilted her chin up to kiss her. \n\nWhen she finally came up for air she asked, \"Can we take a shower now?\" He laughed and chased her into the bathroom. \n\n------------\n\nCain looked absolutely delicious coming out of the steamy bathroom with a towel wrapped low on his defined hips. Malia was on her stomach on the bed with her head propped on her hands, completely naked. She watched a bead of water slowly drip from his collar bone down the center line of his abdominals to be caught in the white fluffy towel. She hoped she wasn't drooling. His grin as he leaned against the door frame told her she might be. It was surreal to think that this beautiful, sexy man was her fianc\u00e9. It was even more surreal to think that he would be her husband by the end of the week. \n\n\"I thought you wanted to wait until the wedding night?\" He taunted, moving closer to her like a jungle cat stalks its prey. \n\n\"Who says I'm here to see you?\" She taunted back. \n\nHe smiled. \"This is my bedroom, and you're bare-assed naked. You'd better be here to see me little girl.\" Surprisingly she'd grown to like his go-to term of endearment.\n\n\"Well, maybe I did come to see you. Don't got getting a swollen head about it.\" She sulked. \n\nHe rolled his eyes exaggeratedly. \"really Malia, you make it too easy.\" She looked at him confused. He pulled his towel off. \"Too late, the head, and everything else is already pretty swollen.\" \n\nShe laughed. \"Such a cheap shot.\" He shrugged and closed the distance between himself and the bed. Him standing at the side of the bed brought her face in alignment with the swollen piece of anatomy in question. She knew he expected her to flip away from him and his aggressive stance of masculinity. Instead of giving him his way, she proved him wrong. Quickly she leaned forward and licked his cock from base to time like an ice cream cone. His gasp of surprise and pleasure cause a strong tingle of arousal to course through her whole body. \n\n\"Jesus, Malia.\" He groaned. \n\n\"You're probably right, we should wait for our wedding night.\" She got up off of her stomach as if to leave. She was promptly tackled from behind back onto the bed. Cain lifted his weight a little so he wasn't crushing her, but she was effectively facedown, pinned into the mattress.\n\n\"Too late now little girl.\" He growled into her ear, sending goosebumps trailing down her arms and legs. He sounded predatory. The effect would have almost been frightening if he hadn't added on to his words, \"Am I hurting you?\" in a concerned voice. She knew he would release her if she said yes. That was the last thing she wanted. She maned an appreciative sound for an answer to his question. Her back had completely healed in the past month, only leaving the faintest of think white lines that could be made invisible with a laser treatment in the future. She didn't know if she wanted them gone. As painful as the memory was, it was the catalyst of her current relationship with Cain. Through the whole experience, since she'd been taken from the unit, Malia had changed. She'd grown up, she'd fallen in love, and nothing could ever make her wish away the events that had gotten her where she was now. \n\nCain nibbled at her neck and ears from behind, making her giggle and fight. Eventually her squirming proved to be too much for his restraint. He pushed into her from behind roughly. She yelled out, he grunted. He pulled up on her hips until he had her at a better angle and he quickly shoved a pillow underneath her hips. His thrusts were quick and powerful, shaking her entire body with the force. It felt different from this angle, each inward thrust caused a burst of sensation and she was shocked when she felt a climax approach so quickly from penetration alone. \n\n\"Cain?\" She didn't know what she was asking of him. Her mind was going in all directions an nowhere at all. \n\n\"Malia.\" He grunted in answer. \"Come on baby..I can't wait much longer...Please sweetheart, come for me..\" His voice was shaky and pleading and all it took to send her over the edge. \"Yes.\" He answered as he heard her moan and felt her muscles tense around him. Her climax brought him over with her as he thrust deeply into her and gave her everything he had. \n\nWhen they caught their breath, Cain withdrew from her and flipped Malia over onto her back. He kissed her softly and sweetly. \n\n\"You know I love you right?\" She smiled and nodded. \n\n\"You know I love you more right?\" \n\nHe smiled. \"Not a chance little girl.\" \n\n***************\n\nWell that's it folks. It was a fun run while it lasted and I hope you enjoyed. It's crazy to think that I started this a little over a year ago on a whim. I hope that maybe I've improved since then. Thanks for sticking with it and thanks so much for all of your wonderful comments along the way, the encouragement is what kept me writing. I hope to maybe go in other directions on the site, something definitely a little more planned out in the future. But I will always have a soft spot for this story I think. I hope you liked it. \n\n-Darlin92 "
    ],
    "authorname": "Darlin92",
    "tags": [],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-reluctant-journey-ch-12"
}