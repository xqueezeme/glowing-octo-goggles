{
    "title": "Firekeeper",
    "pages": [
        "\"Wake up, Claire. We're home now.\"\n\nHot breath brushed against her neck, sending a shiver down her spine. Her eyes flickered for a second then fully opened, her body now moving though still clogged with sleep. She had been carried into a large room, enormous compared to the last one, illuminated by wreaths of flame suspended in the air below the ceiling. Fresh spattering of blood covered the walls, shining in the light.\n\nAlong the far wall three beds had been lined up in a neat row, the middle bed twice the size of the end two. All three were covered in black sheets and blankets, each embroidered with distinct delicate silver scrollwork. Other than the beds, the room was sparsely decorated, with only an enormous table stretching along the entire length of one wall and a single strip of metal holding flimsy pieces of clothing. Obviously meant for her, though she wondered how such sparsely-designed garments passed for clothes.\n\nClothes? Those are just left-over fabric scraps from a quilting party.<br> \"Come. Let's get you fed.\"\n\nThaltos continued to carry her in his arms, leading her to the table. Made of a mammoth slab of dark stained wood, it was piled high with almost every dish she could have imagined. Steaming platters of roasted meats, whole coked fish and endless bowls of fresh fruits were scattered over the dark surface. The smell alone snapped her mind fully awake and made her stomach growl.\n\nHe stopped just inches from the table, cradling her in his arms as he used his foot to pull out one of the elaborately carved chairs. He set her down gently, pushing the chair back in so her bare chest brushed the edge of the table. Thaltos turned and pulled the chair next to her, settling in and leaning one elbow of the table.\n\nHe grinned at her. \"Are you awake yet?\"\n\nShe smiled and nodded. \"It's kind of hard not to wake up. Your voice is so loud.\"\n\nHis smile widened. \"I apologize. I cannot help to volume.\" His eyes flicked to the table. \"I'm going to venture a guess that you're hungry, especially after the way Darrow tortured you last night.\"\n\nShe blushed and looked away, hoping to avoid that subject.\n\nHe softened his smile. \"What would you like?\"\n\nShe scanned the layout of food for a moment, overwhelmed by the amount of choices she had. She decided it was best to start slow and reached out to pull a monstrous bowl of cherries towards her. The bowl was piled high with ripe fruit, each piece a deep burgundy red and sumptuously plump.\n\nExcited and starved, she plucked one of the cherries from the bowl turning the stem in her fingers to watch it spin. Thaltos cleared his throat, breaking her concentration. She looked up to see a pained look on his face, as if he wanted to tell her something but wasn't quite sure how to say it.\n\nOh, boy. This can't be good.\n\nShe lowered the cherry out of her sight, concerned. \"What?\"\n\nHe sighed heavily. \"Before you eat, there is something you need to know. A disclaimer, if you will.\"\n\nShe carefully set the cherry on the table, turning her full attention to him. Something in her gut twisted, alerting her that what he may say might not be good.\n\nThaltos took a deep breath. \"This food, all of it, is made from this place. Every single piece was harvested from somewhere in Hell, meaning it belongs to us.\"\n\nShe nodded silently, the knot in her belly twisting tighter.\n\n\"That means any person or creature that ingests this food also belongs to Hell. You eat that cherry, Claire, and you can never leave here. You eat anything off this table and you belong to us for eternity.\" His gaze never faltered, though she could see a flicker of pain flash through his eyes.\n\nShe sat back in her chair, staring at the small piece of fruit. She'd waited patiently for a bombshell to be dropped and he didn't disappoint. Her mind spun in circles, weighing the options. She could refuse the food and starve, but still have a chance to get out of here. Or she could eat and be bound to this shithole forever. Two easy, wonderful options to pick from.\n\nAh, decisions, decisions. Eeny, meeny, miney, mo...\n\nWhile her brain ran around like a headless chicken, her stomach had other ideas. Three days devoid of food had left her body ravenous and irritated, an issue her innards were determined to address. Her stomach rumbled painfully, making her wince at her sudden discomfort. The painful emptiness halted any further debate, her body making the decision for her: Eat or die, and damn the consequences.\n\nHer mind made up, she reached out and picked up the cherry from the table, holding it by the stem as she tilted her head back and opened her mouth wide. She bit down gently, pulling the stem free as she sliced through the juicy flesh. Deliciously sweet with the perfect amount of tartness. No wonder people would sell their souls for this. Forcing her fear down, she swallowed what was left of her pride along with the cherry, spitting the pit into her hand.\n\nShe looked up to see him smiling at her, his night-colored teeth shining in the light of the flames. \"Good girl.\"\n\nThaltos reached over and plucked another cherry from the bowl. Reaching over, he dangled it just above her head. She recognized the game instantly and tilted her head back, opening her mouth so he could feed her. Placing the fruit on her tongue, he held it still so she could bite the sweet flesh, pulling slightly to detach the stem.\n\nShe giggled as she chewed the fruit, her thoughts turning to why she had ever questioned wanting to leave. She had three loyal - albeit demonic - lovers who had sworn to pleasure her and make her happy. She had an endless supply of delicious food, a warm bad and no worries. Why had she ever wanted to leave this place? She must have been crazy. Or drunk.\n\nSwallowing the cherry, she looked down at her hand, inspecting it for the tiniest brand or marking. Nothing had changed. Her flesh remained as rosy and warm as ever. She stared at it, confused. Shouldn't there be some kind of tattoo that solidified her pact? Some evil-looking burn that showed she belonged there?\n\nShe looked back at Thaltos, a giant question mark on her face. \"I don't feel any different.\"\n\nHe chuckled. \"You're not supposed to. That's the design of it. Anyone who unknowingly ate any of this food wouldn't know they were bound here until they tried to leave. Evil, I know, but that's how this place is set up. For a person who's not supposed to be here, this world is full of traps.\"\n\n\"That's cruel.\" She popped another cheery in her mouth.\n\nHe shrugged. \"I don't make the rules. I make deals.\"\n\nShe smiled, twisting another fruit in her fingers. Now comfortable with her surroundings, Claire's natural playfulness and curiosity started to come out. She leaned forward, cupping her chin in her palm. \"What kind of deals? Just soul trades? Or do you do something more?\"\n\nHe smiled. \"Mostly soul trades, but I have a very specific clientele. Mine must be, shall we say 'wealthy' enough, to pay the price. They need to have some form of payment large enough for me to do business with them.\"\n\nHer eyes widened a bit. \"Really? What kind of payment do they need?\"\n\nHe sat back in his chair, lacing his fingers together across his muscled chest. \"Nothing out of the ordinary. Any human soul can be bartered, but the quality of the soul determines the quality of the deal. The soul of a murderer or an addict can be traded, but you won't get much. A virgin soul like yourself always offers the best bargain.\"\n\n\"Huh. That explains why my grandmother was so intent of keeping me a virgin.\" She lowered the cherry, dropping her hand to the table.\n\nThaltos waved a clawed hand. \"No, that was simply one of the rules of your grandmother's faith. The fact that it kept you a virgin is supply luck. It was your parents who made the deal, my dear. Your grandmother would have killed herself before even coming near us.\" His lips twitched up in a tiny smile.\n\nShe scoffed. \"You're right. Nana would have pulled out the shotgun on my parents if they hadn't already left the house.\" She looked back at him. \"What's going to happen to them?\"\n\nThaltos shrugged. \"Not sure. I make deals but I'm not the one who enforces them. I suppose, unless they've have done something horribly wrong, your parents won't be collected until their deaths. When that is, I do not know. But they should be safe until they have to face whatever god they believe in.\"\n\nShe chewed her lip. \"They're Satanists.\"\n\nHe resumed his comfortable position. \"Ah, then they're fucked.\"\n\nYes they were. That was a fact that Claire had long ago accepted. They had bartered her soul off -- true, it was for a good reason -- but there was noting she could do to help them. Her soul belonged to Thaltos, Darrow and Silthos. Her parents, when they died, belonged to Satan. Whether any of them liked it or not.\n\nSuch is they way of making deals with the devil.\n\nShe shrugged again. \"And I don't suppose there's anything I can do to help them? No bargain I can make?\"\n\nThaltos offered a sly smile. \"Not unless you offer to suck the old demon off.\"\n\nThat comment made her playfulness come out in full swing. Moving as fast as she could, she whipped her hand out and forced the cherry into his mouth, silencing his words. The look of stunned alarm on his face was priceless. She fell back into her chair, clutching her stomach as she burst out laughing. She struggled to catch her breath as she laughed, managing to crack her eyes open to watch him.\n\nThaltos sat in the chair watching her, a wicked smile on his lips. He had swallowed the cherry, pit to stem, and was now watching her with humorous eyes. He stood suddenly, his towering height casting a shadow over her body.\n\n\"You want to play, do you?\" He reached down and scooped her out of the chair, laying her body over his shoulder. \"Fine then. We'll play.\"\n\nShe cried out, a mix of surprise and joy. Playfully, she beat her fists lightly against his back. She kicked jokingly, and laughed as he played along, offering pseudo-angry growls and jostling her gently to calm her down.\n\nHe carried her to the row of beds, making a beeline for the enormous middle one. She'd noticed its size before and now realized it purpose. Thaltos and the others were colossal demons, but each of the smaller beds could easily hold them. The middle bed was meant for two people: one of her captors and herself.\n\nThaltos stopped at the edge of the bed, tossing her off his shoulder so she landed on the soft mattress. She squealed as she was engulfed by the soft blankets, cried out again when he reached up and pinned her hands against the bed. He leaned over, pressing the bottom half of his torso against her thighs.\n\nHe grinned at her, his black teeth shining. \"Oh, yes. We can play.\"\n\nShe smiled innocently, biting her lip to add effect. \"What kind of games are we playing?\"\n\nHe growled softly. \"You will see.\"\n\nAt that moment, more thin strands of inky blackness crept out of the shadows of the room, stretching down the slick walls to the bed. They wrapped gently around her wrists, holding her tight but never squeezing hard. Thaltos let go of her hands, watching her being bound with a broad grin. The free ends of the shadows twisted around the frame of the bed, tying her in place.\n\nFalling to his knees at the edge of the bed, Thaltos reached out and gently gripped her hips, dragging her forward until her ass hung over the edge. She looked down at him to watch, not worried about what he was going to do but curious to see it happen. Thaltos gripped one leg and gently lifted it over his shoulder, mirroring what his brethren had done earlier.\n\nHe looked up at her, an ecstatic grin on his face. \"Darrow did say I needed to taste you. What do you think?\"\n\nThe question threw her off for an instant. \"I don't know. I've never...tasted myself before.\"\n\nHe shot her a sinister smirk. \"You'd better be worth the effort I've been through to get you. I paid a handsome amount to your parents for this.\"\n\n\"I promise I am.\" She made her voice as innocent and playful as she could, watching the sparks of joy flick through his eyes.\n\nIn all honesty, she wanted this. Demons as they were, each of them promised to give her all the pleasures and happiness she desired; so far, two of them had given her a good taste of her future life. Darrow had shown her pleasure and Thaltos had shown her kindness and respect. She wondered briefly what Silthos could offer her, but brushed the thought aside. She was with Thaltos now, so her focus should be on him.\n\nThaltos reached out and dragged one clawed finger down her cheek. \"I need you to promise me something else.\"\n\nHer smile faltered. \"Yes?\"\n\nHis smile kicked up a notch. \"You must promise not to tell the others I did this. Usually we perform in front of each other so someone can verify a claim. By doing this alone, I'm setting myself up for some serious shit-talking when they get back.\"\n\nShe giggled. \"Cross my heart. They won't hear a word from me.\"\n\nHe grinned at her. \"That's my girl.\"\n\nWithout another second of hesitation, he stood and kissed her. His mouth was hot and tasted of fiery spices, but his lips were soft and forgiving. The kiss was firm and determined, yet gentle. Not once did he force his tongue between her lips or crush his mouth against her own. He simply held her down, letting their mouths meld of their own accord.\n\nSecond later he broke away from her mouth, his lips continuing down her jaw to her throat then her chest. His tongue, thick and black with veins of red, flicked out to tease her breasts. He gave delicious attention to each, licking and suckling them until her nipples hardened and her back arched. He laughed when she bit her lip, sucked harder when she let out a soft gasp.\n\nHe wrapped his lips around one of her stiff nipples, dragging a shocked gasp from her throat. She caught herself, not wanting to make too much noise and alert anyone close by. Bad idea, since Thaltos wanted to hear her cries. He sucked harder, running his tongue around in a circle over the hard tip. Claire groaned, thrusting her chest forward so he could continue. He obliged, kissing and sucking each of her breasts until she began churning out soft whispers for more.\n\nHis mouth left her breasts, replaced by his warm hands. They massaged her tender skin while his mouth traveled south, kissing every groove and rise of her ribcage. He kissed her belly, his tongue dipping into the soft indentation of her bellybutton before continuing down. Her breath hitched in her throat. She knew where he was heading and her body was screaming for it. A few more inches and she'd on the first-class train to Wonderland. Just a little lower and she could --\n\n\"Hey! We're back! You guys were taking a long time to get here, so we -- What the fuck, Thaltos? You were supposed to wait for us!\"\n\nSilthos' annoyed voice brought them both back from the brink of insanity. Groaning in frustration, Thaltos pulled his mouth away from her skin and stood, looking over his shoulder. Both Silthos and Darrow were standing near the table, looks of envious anger on their faces.\n\n\"Relax, you two. I barely touched her.\" he waved his hand towards her, causing the shadowy binds on her wrists to retreat. \"You came back just as I was getting to the good part.\"\n\n\"That's still cheating.\" Darrow's eyes narrowed. \"We agreed to do this together. Don't fuck it up because of your curiosity.\"\n\nThaltos turned fully around, cocking his head to on side. \"Weren't you the one who pleaded with me to taste her? I was only following your advice, Darrow.\"\n\nDarrow opened his mouth to object, but saw he had no argument and remained silent. Silthos' face also softened, though his eyes remained hard and filled with jealousy.\n\nHer binds now gone, Claire managed to push herself up and began scooting back to the wall. She herself hadn't done anything wrong - her body was theirs, after all -- but she still wanted to put some distance between them in case a war broke out. Her back pressed against cold rock as she pulled her knees to her chest. She wrapped her arms around her legs, pulling them tighter as she watched.\n\nSilthos' fiery eyes flicked to her. \"Well, at least we know she's recovered from Darrow's induction.\"\n\nThaltos nodded. \"Yes, she's fully recovered now. The girl's a strong one. I don't think we'll have to worry about exhausting her too much. She can take a good amount of teasing before she caves.\"\n\n\"Hopefully she'll be the same way when we break her in,\" Darrow snorted. \"The last thing I want is some weakling human girl the faints at the sight of a cock.\"\n\n\"The three of us have been standing around her naked for the past twenty four hours, and you're still concerned?\" Silthos shot him a curious look. \"I think the girl's fine with that. Why you're always so worrisome, I'll never know.\"\n\nI don't know, either. Maybe he's insecure.\n\nCurious now, Claire peered at each demon's body, studying them closely. Perfectly muscled, none of them would have a problem winning any Mr. Universe competition. The thin wisps and swirls of color that crawled along their skins made their bodies all the more beautiful.\n\nHer gaze travelled lower, inspecting each of their cocks with an expert eye. Years of being raised Catholic meant that she had never been indoctrinated into the mechanics of sex. What she did know came from sneaking glances at human anatomy books or hushed whispers with her adolescent friends. She learned more about the human body by talking to her friends than from any sex-ed class.\n\nShe scanned each phallus slowly, taking in every curve, line and vein. Each was a good eight inches long and as thick as an overstuffed sausage. Any of them would put even the most talented porn star to shame. She wiped her earlier thought from her mind: none of them, especially Darrow, had anything to be insecure about.\n\n\"I just want to make sure we got a good one,\" Darrow snapped. \"Those hard-ass Catholics are notorious for sending us paranoid prudes who faint at the mention of sex. I'm just trying to-\"\n\nSilthos snarled at him. \"You and your damn deal worries. We have we they gave us and she looks fine. She's already let you devour her, so I doubt she's scared of sex. We can lead her if she stumbles a bit, but other than that, she's a good exchange. Stop complaining just because we didn't trade for an Italian supermodel.\"\n\nDarrow snorted and turned away, although Claire could see his eyes flicking back to her every few seconds to scan her naked body. Silent though he was, he couldn't help himself to look for evidence of Thalto's betrayal. None was found, so her turned his gaze elsewhere.\n\nSilthos returned his gaze to Thaltos. \"You barely touched her?\"\n\nThe old demon nodded. \"You two barged in just as I was about to start.\"\n\nBright orange eyes flicked to her. \"And the girl? Can she verify that?\"\n\nThaltos peered over his shoulder at her. \"Claire? Would you care to tell Silthos what happened?\"\n\nShe stared at them for a moment, unsure of what to say. Truthfully, she wished the demons would just fight it out themselves so she wouldn't have to save their asses from each other. That idea was impossible, she knew. She figured that since she was stuck here with them, she might as well work with them. Her grandmother, as zealous as she may have been, had taught her a few good rules for life. The first one being that honesty was the easiest way out.\n\nSlowly, she nodded. \"You got here just as he was about to devour me. Beyond that, nothing happened.\"\n\nDarrow snorted. \"And how we know she's telling the truth? For all we know, Thaltos could have ripped her open and she's just covering for him.\"\n\n\"WILLYOU STOP!\" Silthos wheeled on his companion. \"I've nearly had it with your constant whining and your conspiracy theories! For all we know, you could be a brain-sucking alien from another galaxy and the girl could be a banana slug!\"",
        "The blast from his friend's rage nearly knocked Darrow off his feet. He stared at Silthos with wild eyes, as did Claire, but she was surprised to see Thaltos looking concerned as well. Clearly, an eruption from Silthos was not a common occurrence.\n\n\"She's still clean. I can smell it on her.\" Silthos snorted at Darrow, tiny wisps of black steam twisting up from his nostrils. \"She is a human, but she's been more than compliant so far, so I trust her.\"\n\n\"But she's human!\" Darrow roared. \"How can you trust her over me?\"\n\n\"She's not the one making trouble.\" Silthos stood back and crossed his arms. \"The only hassle she's given us was making us wait for eighteen years so we could collect her.\"\n\n\"Still, the girl is-\"\n\n\"ENOUGH!\" Thaltos' roar made the walls tremble and her bed shake.\n\nBoth younger demons whipped around, looks of fear and shock on their faces. Claire back up another inch, pressing her spine against the wall. None of these creatures was very happy -- two of them looked about ready to start a war - and she wanted to make sure she was well out of harm's way.\n\n\"Both of you be silent. I am the eldest of this group and the one who started the deal over the girl. That alone gives me precedence over the two of you to claim her.\" Calmed now, Thaltos' voice returned to normal. \"However, we made a mutual agreement that we would share her and that her breaking was to be a mutual event. Your constant bickering hasn't made this process any easier.\"\n\nSe watched as the other two hung their heads. Even in Hell -- a place of misery, torment and sadness - a complex hierarchy had been created to establish who ruled over whom. She guessed that, at least in this small group, Thaltos was the leader who separated the fights and dolled out the responsibilities. Darrow was at the bottom of the ladder, seething in anger, jealousy and paranoia. Silthos was the stable middle ground who watched the fireworks.\n\nInteresting.\n\n\"We will do this as we have agreed. We will each pleasure equally until she decides that she's ready. Until then, we do what she asks within reason.\" He shot her a small wink. \"Claire is still a virgin, which means she's open to all of us. Just because you ate her first does not mean she's yours, Darrow.\"\n\nThe young demon snorted and looked away, grumbling to himself about the unfairness of the deal and secret meeting between herself and the others.\n\nUh oh. Somebody's a conspiracy theorist. I wonder what he knows about Roswell.\n\n\"Now then,\" Thaltos continued with a calm tone. \"Since we're all here and on the same page, may Claire and I be allowed to finish what we started?\"\n\nSilthos shrugged. \"I don't have a problem with it. Darrow, what do you - never mind. Just go for it, Thaltos.\"\n\nHe stepped to the side and pulled a chair from the table, spinning it around and sitting in the polished wood seat. Crossing his arms over the top of the chair, Silthos rested his chin on his hands and waited patiently for the fun to start.\n\nThaltos demon smiled and bowed his head. \"Thank you. At least someone here has some manners.\" He shot an annoyed glance at Darrow.\n\nHe turned, refocusing his attention on Claire. Looking up, she watched as he slowly made his way towards her, a confident, warm smile on his lips. She returned the smile and scooted back down to the edge of the bed. Thaltos knelt down onto the floor, reaching his hands out to grasp her legs once again. Watching his hands draw closer, she pulled her legs back quickly, tucking them against her chest. She chewed her lip nervously, still unsure about this whole thing.\n\nTaken aback by her uncertainty, Thaltos looked up at her with confusion and concern. His hands stopped instantly, his confusion making it impossible for him to move. No doubt her expression had caused him to second-guess his previous enthusiasm.\n\nShe gave him a wily smile, adding a child-like giggle for effect. She stretched one of her legs out, resting her calf on his broad shoulder. \"Joking.\"\n\nHis face broke into a wide smile. \"Silly girl. Don't play too many games with us or we may start to play back.\" He reached out again, this time grabbing her other ankle and hauling it over his shoulder.\n\nHe inched forward, placing gentle licks on the inside of thighs. She leaned back on the bed, throwing her arms above her head to relax. No shadowy binds appeared to hold her; the first time must have been in case she struggled or tried to escape. She scoffed silently. Why would she do that? It's not like she had anywhere she could run to or someone she could call. Even if she did manage to escape, she wouldn't get far.\n\nHis kisses became more intense and frequent, wiping any mention of rebellion from her mind. She leaned her head back and closed her eyes, enjoying the mixing sensations of tender kisses and warm breath on her skin. A shiver rushed up her spine. After being raised by her straight-laced grandmother, she shouldn't be enjoying this as much as she was, but there was no stopping her raging hormones, no matter how strict her upbringing.\n\nFinally, after agonizing minutes of his delicious kissing, Thaltos' tongue finally made contact with the tender lips of her sex. She jerked slightly, the pleasure catching her by surprise.\n\nShe heard his muffled chuckle as he swiped his tongue a second time. Her back twitched, a deep groan escaping her throat. A slight smile cracked her lips, a giggle working its way through as well. His next lick was stronger, causing her to settle deeper into the bed and sigh softly.\n\nThaltos repositioned her legs a final time, inching closer until his lips were pressed firmly against her sex. Following his lead, she crossed her ankles at the nape of his neck, locking him against her. Finally close enough to work, Thaltos licked the entire length of her pussy, the tip of his tongue pushing down gently on her clit. She bit down on her lip as a bolt of lightening raced up her spine. She let out a satisfied groan, begging him to continue the only way she could at the moment.\n\nHe didn't disappoint. He flicked his tongue against her sensitive nub over and over again, occasionally pausing to run a delicious circle around it before continuing the torment. She let out a sharp laugh that ended in a high-pitched squeak. Her hands twisted into the soft bed sheets, desperately searching for something to hang onto.\n\nHis tongue teased her expertly, drawing out a litany of moans and squeals from her throat. Another burst of giggles escaped when he forced his tongue into her sex, twisting it around to tease her insides. She rolled her head to one side, biting her lip through a sinful smile. This was exactly what she needed to ease her uncertainty about the three of them. The more relaxed she was, the more compliant she would be for them.\n\nSince Darrow, her acceptance of her own sexuality had skyrocketed. Her body, with its newfound freedom, could now seek out new sources of pleasure that she would have never imagined before. And they had given her free reign to seek it out. She could ask to be ravaged whenever she wanted, demand to be devoured at a moment's notice, finally reach for the moon.\n\nTake that, Nana. I can finally come whenever I damn well please.\n\nThaltos continued to move his tongue around inside her. While not as long as Darrow's, his tongue was thicker and far more agile, along him to do tricks she'd never thought possible. He massaged her tender flesh, twisting and flicking his tongue here and there so he could hear her squeals of excitement. She obliged willingly, giving him the best sex-fueled moans she could muster.\n\nSeconds later, he pulled his tongue from her pussy and wrapped his lips around her clit, suckling at the tender nub. Her body twitched, now fully alight with raw nerves. Moving quickly, he slid his hands under her hips and lifted her body higher, pressing his mouth harder against her sex.\n\nOne hot hand moved slightly from supporting her hip, repositioned to cup one firm ass cheek. A single clawed finger moved, slipping into the warm space between and pressed gently against her tight hole. It circled the puckered surface slowly, an experimental touch meant to test her boundaries.\n\nShe jerked sharply, a whimper of surprised worry emanating from her lips. As excited and sexually explorative as she was, Claire didn't feel that adventurous. She'd heard horror stories from her friends about their first time trying it, how much it burned and the hours of sitting on bags of frozen peas. No, that was an experiment left for a later date, maybe when she was more experienced and comfortable with her new lovers. She pulled her knees up, squeezing the cheeks of her ass together to signal her answer.\n\nThaltos obliged, pulling his finger away and cupped her hip once again. He refocused his efforts of her sex again, this time barely scraping her clit with his teeth. Her body twitched, the fire inside her not a full-blown bonfire. She writhed impatiently, her soft whimpers turning into begging moans. He nipped the tender nub gently, sending a final cluster of sparks racing up her spine.\n\nShe exploded, a plethora of multi-colored embers erupting behind her eyes. Her fingers clawed at the sheets, her back arched as far as it could go. She held back her cry, the sound caught in her throat by the force of her climax. She crumpled into the bed, a heap of sweat, flesh and exhaustion.\n\nLetting her down gently, Thaltos unwound her legs from his neck and stood, a broad smile on his face.\n\n\"You weren't lying, Darrow. The girl is delectable.\"\n\nShe turned her head, her eyes flickering open to see Darrow's expression change for an instant. A snide smile, one of pride at being correct, crossed his lips before disappearing into the vast chasm that was his jealousy.\n\nOh, well. You can't please everyone.\n\nGroaning, she collapsed again, letting her body settle in the thick softness of the blankets. She closed her eyes to rest, listening to her lover's discussing their next move. She hoped they would let her sleep again. All this new sexually experimentation was wearing her out.\n\nThaltos made his way back to his companions, clapping Silthos on the shoulder. \"You have two opinions, now. I think you can trust that the girl is good.\"\n\n\"I can see that she is, at least for enjoying her own pleasure.\" His voice was low, thoughtful. \"But I wonder how she is at pleasing others.\"\n\nThaltos sighed. \"Silthos, not now. The girl's tired. Give her an hour before you start that. I'm fairly sure she doesn't even know how it's done.\"\n\nShe heard his footsteps as he made his way toward the bed. Her heartbeat picked up, her thoughts turning to what he could possibly be planning. Her gut, meanwhile, sensed something unpleasant and began to twist itself into a tight knot.\n\nHis footsteps grew louder. \"No. I want to try her now. I want to see if she's as talented as she is willing.\"\n\nShe winced at the sound of the bed next to her being dragged across the floor. Daring herself to look, she cracked open one eyes to see Silthos towering over her, a wicked smile on his face. She swallowed fearfully. That smile looked so menacing and vindictive it was as if he wanted to see her killed.\n\nHe reached down and gently gripped her shoulder, pulling her up and twisting her so she was forced onto her knees. Her stomach finally twisted itself into a loop. She sighed internally - she knew what was coming and was terrified to fail. If she did, who knew what they would do to her.\n\nSilthos stepped forward, his cock now just inches from her face. Brick red and heavily veined, it stood out like a damn flagpole. The thing was nearly a foot long and as thick as her wrist. Even knowing his intentions, Claire suspected that even Silthos knew she couldn't swallow the whole thing. At least she hoped he knew. One clawed hand slipped around the back of her head, nudging her closer to the monstrous pole of flesh.\n\n\"Come on now, Claire. Just try,\" he cooed to her. \"You don't have to swallow it, just do what you can. I want to see how much teaching you're going to need.\"\n\nTaking a deep breath, she nodded and closed her eyes. Nervous as she was, Claire knew that being compliant was the easiest was to finish this quickly. The faster she did it, the faster she could go to sleep.\n\nOpening her mouth, she flicked out her tongue and caressed the smooth skin at the tip. His flesh tasted of sea salt and honey, an intoxicating blend for any palate. She swallowed and inhaled slowly, giving herself a silent pep talk before trying again. She licked harder this time, watching how his cock twitched at the contact.\n\nShe transitioned slowly, giving herself time to accommodate his massiveness. She inched closer, wrapping her lips around the plump head of his cock before returning to teasing his flesh. Silthos, for his part, stayed in time with her movements, never trying to push her or demand more speed.\n\nFinally, after making herself comfortable with his size, Claire opened her mouth wide and slipped her lips over the head of his cock. She leaned forward, going down as far as she could before pulling back to a comfortable spot. She closed her eyes as she began to move, rocking her head back and forth with a slow rhythm. In a moment of curiosity and bravado, she worked to flick her tongue against his skin, testing the boundaries of her movements.\n\nAbove her, Silthos groaned and twisted his claws into her hair. \"Oh, yes. She's a good one. She doesn't need any training at all. She's got this down to an art!\"\n\nShe sighed to herself in relief. She'd passed another test, which meant there was less of a chance that she'd be neglected or tortured by any of them. Wanting to ensure her safety and position, she continued her teasing, pulling back on his cock so she could suck on the head.\n\nSilthos barked out a sharp laugh. \"Yes, that's it! Good girl. You're a bit talented for a virgin, aren't you? I wonder where you could have learned this.\"\n\nIn truth, this was her first time give anyone a blowjob. Hell, Thaltos was the second person to give her oral. She didn't have any family secret or any prior knowledge of the skill. Nor did she ever read about magical techniques in magazines. All she was really doing was making her best guess and watching his reactions. So far, that strategy seemed to be serving her very well.\n\n\"Ah! Yes, that's good. Right there. Oh, I can imagine a thousand demons who would give a hundred souls to have you.\"\n\nSilthos groaned again, his hands tightening in her hair. As she continued to suck him, Claire wondered distantly how many times he'd ever been pleasured by a human. Once, maybe twice? There was no way she could tell, and it was far too early in their blossoming bond to ask. But by the way he was groaning, she guessed that she was probably in the top ten of his favorite blowjobs.\n\nHot breath fluttered against her back, making goosebumps rise on her flesh. She felt Silthos' hands shaking as he tried to hold back from forcing her down farther. His growls worried her. Did they mean he was satisfied with her craft, or that he was angry at losing his control? She couldn't tell and she was too frightened to look up to find out. Instead, she numbed herself to any outside distractions, trying to keep her pace steady as Silthos fought to keep himself in check.\n\nHis cock twitched in her mouth, signaling his impending release.\n\n\"Silthos, no.\" Thaltos' voice interrupter her thoughts. \"Not yet.\"\n\n\"Why not?\" he growled through gritted teeth. \"She's fucking fantastic!\"\n\n\"I said no.\"\n\n\"I'm almost there.\"\n\n\"We haven't claimed her yet. As long as she's a virgin she can't be stained by any of our bodies, and that includes fluids. You've found the answer to your question and she exhausted. Let her go so she can sleep.\"\n\nWith an infuriated roar, Silthos stepped back and separated them into tow separate beings. Claire let his cock slide from her mouth, silently relieved that she wouldn't have to swallow anything. She remained on her knees, her eyes flicking to all three demons, seeking instruction.\n\nThaltos stepped forward, moving around Silthos to push the bed back into place. \"She's done for the night. She'll rest for now and eat again when she's hungry. Until them, we'll leave her alone and let her sleep.\"\n\n\"Damn it,\" Silthos growled. His cock was still as solid as steel, making him stare at it with a pained expression.\n\nThaltos reached out and scooped her up into his arms, repositioning her so he could flip the sheets back. \"Did she answer your question?\"\n\n\"Yes,\" he groaned, still staring at his cock.\n\n\"Then go relieve yourself. Once we've broken her in, you can come in her mouth all you like.\" He gently placed her onto the soft mattress, flipping the sheets back over her shoulders.\n\nGrumbling to himself, Silthos stormed over to a shadow-filled corner of the room and began to stroke himself furiously. The strands of shadow had returned, wrapping around his limbs and pulling him into the darkness even as he continued jerking off. Darrow followed suit, stepping into the shadows and disappearing within seconds.\n\nThaltos adjusted the blankets around her, checking to see if she was comfortable. She yawned, her sudden exhaustion taking her by surprise. She wriggled her body into the blankets, finding a warm spot to settle into. She rested her head on the soft pillow, watching him as he worked.\n\nHe flashed a smile at her. \"You did wonderful tonight. No complaints from any of us, and that's a good thing. It means you're in no danger to be traded out or forgotten.\"\n\n\"Unless Darrow thinks I had something to do with the Manhattan project,\" she smiled.\n\nHe threw his head back and laughed. \"That wouldn't be beyond him to suggest such a thing.\" He returned his gaze to her. \"He's just anxious, that's all. We've waited so long to claim you and he's impatient that I'm making us do it by the books. He'd rather claim you now and have the ability to go wild.\"\n\n\"I know a few people like that. Some students at my high school would sneak into the teacher's room and look at the grade books to see if they passed the test.\"\n\n\"Good. Then it's not an isolated incident. I'll have to tell Darrow he's got like minds in the human world.\" Thaltos shook his head. \"He's always been a bit suspicious of others. Nothing to be concerned about, but enough to irritate some folks.\"\n\nShe yawned again. \"Why's he so mistrustful?\"\n\n\"It's a long story, so I'll give you the major points. He was able to claim a girl on his own a few years back and had a hell of a time experimenting with her. Unfortunately, his prize was sneaking off with one of his close friends who ended up laying a false claim over her. She was expelled and handed over to the Catholics as a witch, Darrow was left consort-less and no one trusted the other demon again. It was a lose-lose situation all around.\"\n\n\"Oh.\" She flicked her eyes away, ashamed for judging him so harshly.\n\n\"It knocked his level of trust down a good bit. He's just worried that you might do the same.\"\n\nShe shook hr head. \"I wouldn't.\"\n\nThaltos smiled. \"I know. It's just going to take him some time to learn that.\" He reached down and ruffled her hair. \"But that's a lesson that can wait.\"\n\nShe nodded, settling into bed and closing her eyes. Thaltos' warm hand stroked he hair, the heat making her even sleepier. Her mind began to drift away into the fantastic world of her dreams, a blankest of shadowy darkness consuming her mind ad relaxing her body. The instant before she lost consciousness, she heard Thaltos' soft whisper, warm, reassuring word that promised pleasure and comfort all at once...\n\n\"You're' ours now, Claire. All ours.\"\n\nI know these stories are supposed to come from my imagination (and trust me, they do. I don't know why, but they do), but I'm willing to take suggestions. I think reader input is incredibly important to the production of a story. So if there's something you really want to see in the next few chapters, tell me in the comments section and I'll see if I can make it happen.",
        "Yes, I am that kind of a person to let you do that. I love you, too. "
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "demon",
        "oral",
        "blow job"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/firekeeper"
}