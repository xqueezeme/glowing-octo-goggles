{
    "title": "The Cam Girl",
    "pages": [
        "--------------------\n\nPrologue\n\n--------------------\n\nMackenzie cursed under her breath. The rain had soaked her feet as well as the lower part of her stockings. She put away her flimsy umbrella and went to the ticket machine.\n\nThe station was very busy, as morning rush hour was upon her. Most people barely gave anyone or anything a second glance, as they went about their business. A group of school boys were the exception, failing to be even remotely subtle as they ogled her.\n\nDream on. Mackenzie thought, sighing. She knew why they were staring at her, but chose to ignore it as she did whenever it happened. Her clothes always did that.\n\nGetting her ticket from the machine, Mackenzie stated to descend the steps that led to where the barriers were. She queued up behind a man wearing a suit. He was completely drenched from top to bottom, his curly hair dripping onto his suit jacket. Well, I could be worse off, then... Mackenzie reflected, suddenly thankful for her flimsy umbrella.\n\nThe soaked man passed the gates, as did Mackenzie shortly after. They were both headed for the same platform.\n\nMackenzie seated herself, waiting for the train to arrive. By the corner of her eye she could still see the school boys talking excitedly amongst themselves, even pointing at her, from across the tracks. Oh, for fuck's sake!\n\nShe turned her head away from the pathetic display. To her left were the stairs she'd come from. Quite a few people were still descending towards the platform, however what caught Mackenzie's eye was an old lay at the top of the stairs, with two heavy looking bags on either hand. She appeared to handle them well enough but she needed to help herself up with one hand, forcing her to try and lift the two bags with only one hand, which was proving to be impossible.\n\nNo one helped her.\n\nJust as Mackenzie began to lift herself to go and assist her, the soaked man passed right in front of her. He went up the stairs and exchanged a few words with the old woman, who nodded gratefully. He turned himself around, grabbing both bags as he accompanied her pace down the stairs.\n\nAs he did so, Mackenzie got to look at him for the very first time. He was a tall young man with slightly tanned skin. His face looked as if it had been chiselled for hours, his jaw line well defined, his cheek bones protuberant. And as the old lady told him something during their descent, his face showed nothing but a permanent pleasant smile.\n\nThe train arrived. Mackenzie felt quite self-conscious as she followed the two people she'd been snooping on.\n\n'You don't have to carry all of them, dear.' The old lady told him.\n\n'It's nothing. Do you have someone to help you with taking this home?'\n\nDespite his best efforts to hide it, he couldn't quite conceal that English wasn't his first language. Italian, she guessed. She sat down in one of the chairs of the carriage, keeping an eye on the two of them standing next to the door with the bags near their feet.\n\n'My son is waiting for me at the station I'm getting off at, don't worry.' She assured him. 'Where in Italy are you from?'\n\n'The accent?' He asked her, looking disappointed in himself for not hiding it better.\n\n'The accent.'\n\n'How do you know I'm not just a son of immigrants?' He asked, amused.\n\n'Most people that are exaggerate their accent, they don't hide it. And no one from these parts helps out an old hag like me.'\n\nHe blushed before replying.\n\n'I came from a small community near Naples.'\n\n'Beautiful place, I went there on my honeymoon.'\n\nThey exchanged a few more pleasantries until the old lady left at her stop. The man leaned back against the subway's wall, running a hand through his moist hair. When he leaned, his white shirt tightened against his body, revealing a very broad and toned torso. Up close now, Mackenzie could see the sawdust like stubble, as well as the brown fading into green in his eyes.\n\nMackenzie found herself licking her lips.\n\nShe managed to stop doing so, but not from looking his way.\n\nAs the next stop was reached, the train slowed down, and the man looked back at her. Blushing, Mackenzie looked away quickly. She waited a moment before looking again. He hadn't looked away either, making her feel like a creep. He smiled, though. He flashed her with a dazzling sweet smile that seemed to suit his face. Mackenzie felt herself return the smile.\n\nThe doors opened and, still with a half-smile, the gorgeous figure turned, exiting the train. It started moving again and Mackenzie sighed, unsure of what that had been about.\n\n--------------------\n\nPart 1 of 4 | \"All the other colours are just colours, but purple seems to have a soul \u2013 when you look at it, it's looking back at you.\" |\n\n--------------------\n\nJarno ducked quickly beneath a building balcony, as the skies began to water again. &quot;Goddamnit!&quot; His watch showed him it was 7:30 PM. A few passers-by opened their umbrellas and continued their paths, not noticing or caring about his annoyance.\n\nIt had been a long, tiring day. Meetings and interviews had maintained him occupied throughout. All he wanted was a hot shower and a good night's sleep back at his hotel room. The downpour that had soaked him during the early hours of the morning did nothing to improve the outlook of a very boring day.\n\nHis clothes had dried, but the late afternoon rain was looking as though it wanted him wet again. Jarno wondered if it would be best to make a run for it or just attempt to wait it out until the rain went away.\n\n'Today is just not your lucky day, is it?'\n\nThe voice came from underneath one of the umbrellas, whose carrier had stopped just in front of him. Jarno recognized her instantly. It was the girl from the subway. Of course he'd recognized her instantly. She was shorter than him, her eyes level with his shoulders. Her clothing choices were a bit bold, a low cut white vest covered by a blue shirt (which highlighted her large breasts), a patterned above-the-knee skirt, as well as some black stockings. It was odd, yet strangely alluring.\n\nHer most noticeable feature, though, was the purple hair. It was a deep dark purple, reaching below her shoulders. And now that he was close to her, Jarno realised her eyes were dark blue and had only seemed purple due to the combination with her hair.\n\n'It's still an ongoing experience...' Jarno replied, friendly.\n\n'Well, you are getting wet again, here.' She said, failing to hide her amusement.\n\n'Your concern is touching.'\n\nShe shrugged with a sideways smirk. God, she looked adorable!\n\n'They don't call me a people person for nothing...'\n\n'Who calls you a people person?'\n\n'Uh, people.'\n\n'But of course.' Jarno conceded with a mock bow.\n\nFidgeting with the umbrella between her fingers, she appeared to have decided to make him beg for it.\n\n'Where are you heading to?' He asked her, conceding.\n\n'Home.'\n\nJarno snorted, closing his eyes momentarily. When he reopened them, she was smiling innocently.\n\n'People person, was it?'\n\n'Yep.'\n\n'Anyway, would you happen to be going anywhere near the Hilton?'\n\n'Not really.' She replied, leaving him not knowing how to respond for a beat. 'But, uh, if you wanted to kill some time, I may help you with that.'\n\n'What do you have in mind?'\n\n'Want to go for a walk?'\n\nJarno thought about it for a few seconds. His desire for a bath and some sleep had been very quickly overshadowed by the desire to be around the force of cuteness and awkward humour that was this purple haired girl.\n\n'I'd love to.'\n\nHe got underneath her umbrella, having to lower himself to her height so that they were both covered from the rain. He also placed his arm around her shoulders to balance himself. Well, he'd also wanted to do it to be close to her, but since that sounded a little creepy even to himself, he would pick the first reason if she asked. She didn't though, but smiled knowingly at him.\n\n'Thanks for the lift.' He said, as they started to walk through the crowds of people. 'I'm Jarno.' He pronounced it as it was meant to be, \"Yarno\".\n\n'Don't mention it. Nice to meet you, name's Mackenzie.'\n\n'Mackenzie?' Jarno tested the name. As he suspected, the pronunciation wasn't too good and she laughed.\n\n'Sorry, you probably hate having people do that...'\n\nHe did, but he felt there was very little Mackenzie could do to make him stop smirking at her.\n\n'Don't worry about it.'\n\n'You can just call me Mac, if you prefer.'\n\n'I'll try to keep practicing Mackenzie.'\n\n'So, where are you from?' She asked.\n\n'Italy. And you?'\n\nAs soon as he had said it he felt like an idiot. Obviously from here, you idiot...\n\n'It's not that obvious, actually.' Mackenzie laughed, understanding his mistake. 'I'm from Toronto.'\n\n'Canada?'\n\n'That's right. I've been living here for almost seven years.'\n\n'Was it difficult moving here?' Jarno asked, interested. Her voice was soft and smooth, and he was enjoying listening to her speak about herself.\n\n'At first. I came alone, so it was a bit lonely at the beginning, but I've made a few good friends.'\n\n'Sounds like you enjoy living here...'\n\n'I do. This is home for me now.' Mackenzie said, whilst guiding them across a zebra walkway, before looking at him. 'Do you have anywhere to be, or can I get you for myself for a while to grab a bite?'\n\nHe looked back into her eyes, feeling as if he would do anything to be around her for as long as he could.\n\n'Not really. I'm yours for the next couple of hours.'\n\nMackenzie seemed amused by something.\n\n'This way.' She said in a slightly raspy voice.\n\nLeading the way, Mackenzie guided Jarno through the streets, edging away from the main street they were on to more secondary ones, through a path she seemed familiar with. It wasn't too long of a walk, despite being forced to wobble together slowly under the umbrella.\n\n'Over there.' Mackenzie pointed towards a small corner diner. It was a cosy little place that reminded him of something off a stereotypical American movie. &quot;Mike's Diner&quot; was what the sign above it flashed, as the night descended on them.\n\nThey got away from the downpour by entering through the door. As Mackenzie closed her umbrella, Jarno looked around. The place had a rustic, old school feel to it, with all the American movie style of furniture, just as he suspected when viewing it from the outside. It was also quite close to a full house.\n\nMackenzie had identified a vacant table and guided him to it. They sat down at their booth, Jarno looking around in wonder.\n\n'What do you think?' Mackenzie asked, smirking.\n\n'It's pretty awesome, not gonna lie...' Jarno confessed.\n\n'Looks like I got you a new regular, Mike!' She beamed at a middle-aged man passing by. He was quite obese. Well, that would be understating it. He was the fattest person he'd ever seen, with more double-chins than he could count, and neatly cropped blonde hair.\n\n'You shall forever have my gratitude, honey.' He said, stopping with a notepad and a pen in front of their booth.\n\n'Don't tell me I'm getting the privilege of being served by the boss himself?' Mackenzie asked him, with a playful look on her face.\n\n'I saw you get in and just had to come serve my best customer. And I also saw that hand there, fella!' The man pointed at Jarno with the pen. 'One complaint from the lady and they'll never find your body.'\n\nJarno felt himself blush at being called out, but eased again as he noticed Mackenzie was looking at him with an amused expression.\n\n'Yes, sir.' He said.\n\nMike laughed loudly.\n\n'Hey Robbie! Ya hear that? I'm a sir, now!'\n\nSomeone behind the counter shouted: 'I'll greet you as Sir Porkshop from now on!'\n\n'We've been over this, Robbie: it's either Sir Fat Ass or nothin'! He turned back to Mackenzie. 'What's the order then, for you and pretty boy here?'\n\n'Mike, I want you to give us the greasiest, biggest, most likely to shorten our lifespans considerably, burgers that you've got.'\n\n'So, the usual?'\n\n'Are you questioning my life choices?'\n\n'Will you be wanting large fries with that?' Mike asked, still not prying his eyes away from the pad he was writing on.\n\n'Do you really need to ask that?' Jarno put in, trying to keep a straight face.\n\nThe large man shot him a quick look, before telling Mackenzie: 'He's gotten himself a point.' He started to leave but first gave him a rough pat on the shoulder. 'Still on the negatives though, pretty boy.'\n\nAfter he left, Jarno could tell Mackenzie was enjoying the show.\n\n'I think you've passed the test.' She said, her hands up her sleeves next to her face which hung sideways. It was her cutest pose yet, which was saying something.\n\nStill on the negatives apparently.' He managed to say in a normal voice.\n\n'I never said it was his test.'\n\nHe didn't know what to respond to that, and, not wanting to blush yet again in front of her, Jarno changed the subject.\n\n'This seems like a friendly place.'\n\n'It is.' She smiled genuinely, looking around. 'When I got here I didn't really have anyone, and Mike helped me out. I would have been very hungry in those first weeks if it wasn't for him.'\n\n'Why did you move here?' Jarno asked. What had been the motives behind her going here if it had been so difficult at first?\n\n'My parents kicked me out.' Mackenzie curtly said, a shadow passing across her face.\n\nRegretting asking it instantly, Jarno squeezed her hand to comfort her.\n\n'I'm sorry I asked.'\n\n'It's not your fault I have assholes for parents. It's okay.'\n\nMackenzie closed her fingers around his hand, a smile making its way back onto her features. Once more, Jarno felt slightly overwhelmed by her beauty. It was the eyes, he thought. He felt a strange serenity transmitted by the two dark blue dots in front of him.\n\nTheir food arrived just then. Mike gave him a glance but said nothing as he placed their orders in front of them. Mackenzie hadn't been lying about the burgers in her order description: they were both disgusting and delicious looking at the same time. He took a bite.\n\n'What's the verdict?' She asked him, as she bit down on her own burger.\n\nJarno made a show of chewing, carefully placing his food back down on his plate, before looking at her with a neutral expression.\n\n'I can almost feel my lifespan shortened by a few months with the first bite.'\n\n'That's how you know it's good!' Mackenzie laughed, reaching over for two fries. 'Now, come on! I've told you my life story leading up to here. Now it's your turn...'\n\n'Alright.' He considered how to begin. 'Well, I was born in the middle of a very pretty nowhere in Italy. It was a cool place to grow up in, but since I was fifteen I've been living in the UK for my job.'\n\n'What's your job?'\n\n'I, uh...'\n\n'What?' Mackenzie was intrigued by his hesitation.\n\n'I'd rather not say.' He muttered apologetically.\n\nShe leaned forward.\n\n'Are you a hitman?' Mackenzie laughed, making him chuckle as well. 'Crack dealer? Professional thief? Come on, dude, give me something...'\n\n'Yeah, yeah... Very amusing. It's not that it's bad, it's just that you'll treat me differently, maybe. And I'm enjoying you at ease and natural for now...' Jarno admitted.\n\n'Are you?' She asked mischievously. 'Are you enjoying me?'\n\n'Yes. Are you enjoying me?'\n\n'Yes.'\n\nThe simple word made him feel lighter.\n\n'Would you mind if I didn't say what I do, either?' She continued after a pause.\n\n'Why?'\n\n'It's like it is with you: it's not bad, I'm just not sure if you'll treat me the same after you know...'\n\nJarno wondered what she could possibly fear from her secret, feeling curiosity fill him. Then he realised those were probably the same feelings that had gone through Mackenzie's head about him, which made him feel slightly hypocritical.\n\n'Okay.' He simply said. 'There is something I need to ask you, though, and if you say no it will seriously scar my opinion of you.'\n\nMackenzie looked puzzled. Jarno signalled her to lean forwards, as he did the same.\n\nHe whispered: 'Do you like Tarantino movies?'\n\nHer unrestrained laughter was one of the sweetest sounds he'd ever heard in his life.\n\n///////////////\n\n'No way!'\n\n'I'm telling you.'\n\n'How can you think the first season of Digimon was better than the second?' Mackenzie asked.\n\nThey were walking from Mike's Diner back to her house, as Jarno had insisted on making sure she got home well. The rain had stopped whilst they were having dinner.\n\n'It had the original characters!' Jarno replied.\n\n'The second had the original and new ones...'\n\n'Alright, this will convince you: I watched the second one in English but the first in Italian.'\n\n'Sounds promising... Go on.' She commented, as she walked next to him.\n\n'In the Italian version they obviously recorded the lines with every actor during a few days, getting all the material they needed. And afterwards, they realised there were a few lines missing.' He shot her a glance.\n\n'Oh dear...'\n\n'There is one particularly memorable scene in which an eight-year-old boy suddenly goes through puberty and his voice goes all Tommy Lee Jones for a line before instantly returning to its normal high pitched self.'\n\nMackenzie giggled, stopping on her tracks. Jarno realised they were next to a building doorway, meaning they were probably at her place, and so stopped as well.\n\n'That does sound better than the version I saw... You'll have to show it to me.'\n\n'You got it.' He smiled.\n\nThey stared at each other for a moment.\n\n'So, did you enjoy not getting wet?' She asked.\n\n'I did. I was looking forward to not getting wet again sometime soon.'\n\n'Well, they predict better weather for the coming days...' Mackenzie flashed her trademark sideways smirk, which indicated she wasn't going to make it easy for him.\n\nHe put his hands inside his pockets, knowing it made his shirt tighten around his well-defined six pack. It made him feel vain, but he noticed her shift her eyes there quickly.\n\n'I'm rubbish at this, but I'm trying to ask you on a date.'\n\n'&quot;Rubbish&quot;?' Mackenzie smirked.\n\n'I've been in England for five years, shut up.' He replied good-naturedly.\n\nThe sentence was barely out of his mouth, before hers was on his. He felt one of her hands in his hair, pulling him to her. Mackenzie kissed him with enthusiasm, parting his lips with her tongue. Jarno was about to take his hands off his pockets and grab hold of her, when she let go of his lips.\n\nOpening his eyes again, Jarno saw her beautiful blue eyes inches away from his, her nose grazing his. There was determination all over her face.\n\n'We've already been on a date, just now.' Mackenzie informed him, with a whisper. 'That was how you asked for a second.' He felt her place a piece of paper in his pocket next to his hand. Then she stepped back, and turned her back to him, walking home.\n\nFeeling himself open-mouthed, Jarno closed it and realised the paper had her phone number.\n\n'I'll call you.' He managed to gasp out.\n\n'You better.' She replied, not looking back. Jarno noticed her amused tone, though, just as the entrance door to her building shut behind her.\n\n///////////////\n\nDespite his best efforts, Jarno couldn't wait too long before calling her. Not only was he in the US for a limited time, but he thought that playing difficult to get was a terrible idea, especially since it was perfectly obvious that Mackenzie knew he was interested in her.\n\nSo, less than twenty-four hours after Mackenzie had kissed him next to her door step, she received a phone call.\n\nThey arranged to take a sightseeing trip around the city, Mackenzie serving as a makeshift tour guide for him as they wandered through places she knew to be of interest. There were moments when they would pass by locations she clearly had no back story for, but that didn't stop her from getting around the issue.",
        "'This is a very historically memorable place.' Mackenzie told him, for the third time that day, as they passed a square with a monument in the centre for the third time.\n\n'What is the back story to this one?' Jarno asked, looking forward to see what the explanation would be this time.\n\n'Well, uh, this was where the Battle of Little Budapest took place.'\n\n'The Battle of Little Budapest?'\n\n'Yes, you see,' She started, apparently satisfied with the back story she was about to present. 'in 1745 the Hungarians and Slovaks were upset with each other and decided to settle their differences by battling in the New World, thus avoiding the destruction of their home soil.'\n\n'A particularly impressive feat when you consider that neither country existed in 1745...'\n\n'Hey, don't destroy my story with all this talk of facts and making sense!'\n\n'I'm sorry, you're right. So, who won that great Battle of Little Budapest?'\n\n'It was a long and destructive battle.' Mackenzie pressed on. 'But eventually the American natives got upset at these European powers squabbling on their land, and so they were the actual winners because they got in when the other two were tired.'\n\nTheir casual stroll ended up taking them towards a quiet park on the city centre where they found a great spot to lie down on the grass, right next to the shore of a small pond. Jarno loved these sorts of moods, just lying down with only the sound of the water in his ears.\n\nThe sound of water and the sound of Mackenzie's voice, of course. They were next to each other, both with an arm under their heads as they looked at the surprisingly blue sky.\n\n'Okay, now that I've done my job as tour guide, it's your turn.' She said, after they enjoyed their surroundings for a bit.\n\n'My turn for what?'\n\n'To share.'\n\n'Share what, exactly?'\n\n'Stuff from your end of the world.'\n\nJarno smiled, still looking at the blue sky.\n\n'What do you want to know?' He asked.\n\n'Let's do this by parts, then. First up, why do you care so much about soccer?'\n\n'It's a really entertaining sport...'\n\n'Yes, with its 0-0 results...' Mackenzie remarked.\n\n'I've seen 0-0 draws that were way more entertaining than your Super Bowl finals.'\n\n'Blasphemy.'\n\n'It's not our fault you guys have the attention span of an excited dog unless there's a point scored every five seconds... And there's also the World Cup.' Jarno turned to his side, looking at her.\n\nFocusing on the conversation would prove much more difficult now, he was sure. Mackenzie was dressed casually, with faded jeans and a very loose fitting a grey top. Her purple hair cascaded behind her head, as she lay face up with her eyes closed, letting the sunlight bathe her skin.\n\n'Oh yeah, that thing we pretend to care about every four years but never win... Anyway, what about that dance thing you guys have once a year, full of weirdoes?'\n\n'The dance thi- Ah, the Eurovision!' Jarno laughed. 'Basically each European country selects a song to play and we vote on them afterwards... There are usually some \"wacky\" songs there.' He conceded.\n\n'I've seen the videos.' Mackenzie said, turning to face him. Her eyes seemed more alluring than ever. '\"Wacky\" doesn't even begin to describe them...'\n\n'It's part of the charm of it. The best part of any Eurovision event is the really weird songs. Sometimes they even do well. My first time watching it was when Finland won, and it was beyond epic.'\n\n'What happened?'\n\n'I was 11 or 12, and a group of grown-ass men dressed like demons sang \"Hard Rock Hallelujah\"... Do I need to say more?'\n\n'Oh yes, that does sound good!' She laughed, pulling a few strands of her hair back with her hand.\n\n'And then we get to the voting process, and everyone gets a little mad, because Armenia votes for Azerbaijan, and Azerbaijan votes for Georgia, and Georgia votes for Russia, and Russia votes for Estonia, and Estonia votes for Latvia, and Latvia votes for Lithuania...' Jarno said, watching Mackenzie's amused smile become bigger with each passing country.\n\n'So why do you watch it?'\n\n'Because we watch all this, proclaim that the Eurovision isn't what it used to be, but then a new edition comes and everyone believes this is the year for us to win it, and we restart the whole process again every time.' He explained with a mock serious tone.\n\nMackenzie giggled, and once the sweet sound reached his ears, Jarno couldn't stop himself from leaning in and gently pressing his lips to hers. Just like before, he felt the softness of her lips more than any other feeling. Unlike before, though, Mackenzie didn't rush it, merely following his lead and melting into him.\n\nThe kiss developed, as they now used their tongues. It was still very subdued, though, more caring than needful, their movements smooth. Jarno felt the sweet taste of Mackenzie on his tongue, and felt as if he would be hard pressed to find anything that was better flavoured.\n\nNevertheless, he had to come back up for a proper breath of fresh air, nearly forgetting to breathe in his excitement. Mackenzie appeared to have the same issue, gasping for breath as well, once the kiss ended.\n\nThey stared at each other, and Jarno felt warmth wash all over him as Mackenzie flashed him her beautiful smile. Just as quickly as it came it disappeared, replaced by a frown.\n\n'What's wrong?' Jarno asked, concerned.\n\n'Nothing's wrong, I just...' Mackenzie replied, sighing. 'I'm not sure this is what you want.'\n\nJarno studied her face, silently asking her to elaborate.\n\n'You're the deep and meaningful kind of guy.' She finally told him.\n\n'What's that supposed to mean?' He questioned her, more intrigued than offended, truth be told.\n\n'That despite how hard you're trying to be impulsive and carefree, you're not quite as convincing as you think.'\n\n'I thought I was making a good impression.'\n\n'You are. But I won't. You think that deep down I'm going to be just as deep and meaningful as you, and in the end you will be disappointed.'\n\n'What if I've actually seen through that? What if I know that's not you but still want you all the same?' He questioned, turning the tables on her.\n\n'So, following that logic, you want me because I'm a slut?' Mackenzie asked, raising an eyebrow. She did it in such a way he couldn't tell if she was upset.\n\n'You're not a slut.'\n\n'I'm not romantic and I'm certainly not a virgin. Aren't you wondering how many people I've been with?'\n\n'Five, seventeen, fifty-five... I don't care. I just think you're weird and pretty hot.' Jarno said, truthfully.\n\nThat took her aback, her eyes widening.\n\n'Good answer. If I didn't know you were all deep and meaningful, I would have thought you were just trying to get in my pants!' She laughed.\n\nJarno smiled. He was getting addicted to her laugh, he realised. It seemed to be the expression that made her face be at its most gorgeous.\n\n'Are you free tomorrow night?' Mackenzie asked, after her laughter subsided.\n\n'I am. What do you have in mind?'\n\n'Dinner, at my place. You bring some take-out. And... we'll both tell each other about our jobs.'\n\nSurprised by her decision, Jarno considered it for a moment. It clearly meant a lot to Mackenzie for him to know about what she did before things went further, just like it had meant a lot for her to check if he knew she didn't share his more romantic nature. And he would be lying if he said he wasn't curious. I'll have to tell her about mine. But I think I trust her enough to tell...\n\n'Deal.'\n\n'Deal.' Mackenzie repeated, looking relieved at his acceptance. She started getting up. 'Now, come on, get up. There's another marker of the battle of the Hungarians and Slovenians over that way.'\n\n'Slovaks.' He replied, getting up and following her.\n\n'What?'\n\n'The Battle of Little Budapest, according to you a few minutes ago, involved the Slovaks, not the Slovenians.'\n\nWalking by his side, she looked at him amused.\n\n'A guy that actually listens to my incoherent gibberish... I'm kind of impressed. I don't even pay attention to what I say, never mind someone else.'\n\n///////////////\n\nKnocking on Mackenzie's door, Jarno waited nervously. There was the sound of someone making their way towards the door. As it opened, he saw that it wasn't Mackenzie.\n\nThe two girls matched in height, but that was where comparisons ended. Whilst Mackenzie had a big bosom and a curvy body, this girl was thin as a stick, with quite small breasts. Her top didn't cover her stomach, where Jarno could see the outline of a six pack and a piercing on her bellybutton. Blonde hair just about failed to reach her shoulders.\n\nShe was very hot, yet Jarno felt there was a much bigger allure to Mackenzie.\n\n'Why, hello there...' The blonde girl greeted him, leaning against the door with a sultry gaze.\n\nNow, even though he knew Mackenzie had a much bigger allure, Jarno wasn't completely immune to her.\n\n'Uh... hi. I'm looking for Mackenzie.'\n\n'That would be me.' She lied, with a mischievous grin.\n\n'He's met me before, doofus!' Came Mackenzie's voice from somewhere inside the house.\n\n'Well, you can't blame a girl for trying!' She called back. 'So, ridiculously hot, European and bringing food. Now, I see why you're in such a hurry to get me out of the house.'\n\n'Hailey...' Mackenzie warned her, appearing behind her.\n\n'Don't worry your pretty head about it, I get it, I'm going.'\n\nShe did start to leave, shooting Jarno a sideways smirk, before giving him a playful slap on his butt. 'You kids play nice, now...' Hailey called as she started to descend the stairs.\n\nTurning back towards the woman he was actually visiting, Jarno commented.\n\n'She's subtle.'\n\nThe last word barely got out when he saw what Mackenzie was wearing.\n\n'Yeah, subtle would be the word. What?'\n\n'You look beautiful.'\n\nHer blush was the only response. She was wearing a white and blue patterned strapless dress, which gave him a great amount of cleavage to view, and ended just a few inches above her knees. Her lower left leg had a tattoo which showed a few mock-slashes, as if done by claws, making it seem like blue fish scales were underneath Mackenzie's skin.\n\nAlso, she was barefoot, which made him think of some sort of lake fairy.\n\n'Come on in.' She whispered to him.\n\nIt was a cosy apartment. The entrance led to the living room. It had a nice sitting area next to a tall window, with two comfy couches pointed at a TV set. The kitchen was to the left and on the far left he could see the doors to two bedrooms.\n\nMackenzie had prepared the area around the couch for their dinner, as they both sat down facing each other, the lower part of her dress rising and exposing a larger \"slash\" tattoo where the mermaid-like scales were even larger on the top of her right thigh. She opened the contents of the bag Jarno had brought on the coffee table.\n\n'Chinese?' The purple haired girl commented, surprised. 'I was kind of expecting you to bring pizza...'\n\n'Racist.' Jarno replied, in a tone of mock indignation, making her laugh.\n\nThey chatted freely. Apparently, Hailey was Mackenzie's roommate for about six years. They were best friends, who'd been lucky to find someone trustworthy to share an apartment with.\n\nAs their food quickly disappeared and the wine was slushed down, Mackenzie started to get visibly nervous. Jarno understood completely, as he felt the same way as well.\n\n'Well, I guess we can't post-pone it now...' She whispered.\n\nHe took hold of her hand gently, caressing it.\n\n'Hey, I've had the pleasure of listening to the weird things you can come up with the last two days. I really like you, and I doubt there's anything that can change my mind.' She looked genuinely moved. 'Besides, I have an idea of how to make this easier.'\n\n'What?'\n\nReaching into the back pocket of his trousers, he got a notepad and a small pen. Mackenzie eyed him curiously as he wrote something down on one of the pages, before ripping it from the note block and bending it on itself. Then he handed the block and the pen to her, much to her confusion.\n\nWith the folded paper between his fingers, he put them at her eye level.\n\n'I wrote my job in this piece of paper.' Jarno told her, watching understanding reach her eyes. 'Do the same in your piece of paper, fold it, and then we'll switch papers at the same time.'\n\nWithout looking away from him, she did as he asked, putting the items he'd given her on the coffee table when it was done. They were now only holding their respective papers. Jarno handed her his. She took it, but hesitated before handing hers. Gently, he took her hand in his and smiled reassuringly. He felt her fingers open up and her paper being deposited in his.\n\n'In 3...' He said.\n\n'2...' Mackenzie replied.\n\n'1.' They said together, and unfolded their respective secrets.\n\nJarno read what had been written in Mackenzie's loose handwriting. He wasn't quite sure what he was looking at, though.\n\nMackenzie laughed.\n\n'Seriously?' She asked him. 'Racing driver?'\n\n'Yeah...' He muttered apologetically.\n\n'Why didn't you want to say? What's so bad about that?'\n\n'During the past few years I've become sort of known, and uh... There are few things as bad as people constantly kissing your ass. Trying to impress you. Trying to become your friend, just so that they can say they're your friend.' He sighed. 'I liked you with your weird sense of humour and how little you cared about impressing me.'\n\nShe had her mouth slightly parted, surprised by his confession. There was nervousness too.\n\n'Now it's my turn, I guess.' She said, running a hand through her purple hair.\n\n'I'm going to be honest, I don't actually know what this means...'\n\n'Oh...'\n\n'What do you mean with being a \"Cam Girl\"?'\n\nSwallowing hard, Mackenzie looked down for a moment, before gathering up the courage to continue.\n\n'As a \"Cam Girl\", I go online and I strip naked for an audience. They pay tips and I give them \"rewards\" like sucking on dildo, using a specific butt plug or cumming.'\n\nJarno digested it for a moment.\n\n'Do you like doing it?'\n\n'Yes.'\n\n'What do you like about doing it?'\n\n'I... like the idea of exposing myself to someone I don't know. That this stranger is getting pleasure from seeing me. That I can tease and seduce him without this person ever managing to actually have me. It's empowering, in a way. I'm doing exactly what I want with my body and I'm exploring my sexuality in a way that a lot of prudes would hate.'\n\n'Is this why your parents kicked you out?' Jarno asked her, connecting the dots.\n\n'Yeah... I was doing it for a few months when my mom spied on my computer when I wasn't home and found some of my cam girl stuff. We had a fight and she had these demands of what her daughter should behave like and I told her to take a hike.' Mackenzie said, the note of sadness at the memory plain to hear. 'I had a friend who was renting a place back here and I took a chance. Like I told you, it wasn't easy at first, but I managed.'\n\nIn the wake of their mutual discovery of the other's secret, they were silent for a little while, processing it.\n\n'So,' Mackenzie spoke first. 'what are you thinking?'\n\nJarno observed her attentively. Her brow was furrowed, as she waited to find out his reaction. It was completely obvious to him that the girl in front of him was apprehensive about his reaction and he could understand why. Most guys would have reacted angrily or even have been disgusted at her. In fact, it was likely that Mackenzie had faced some of those types of guys, since he recalled her saying she preferred to get it out of the way quickly as a general rule.\n\nSince he prided himself of not being like most other guys, Jarno knew he didn't feel like that. But he genuinely didn't know what to make of it. He'd never been with a woman quite so easy-going about her sexuality, and he wasn't sure if it was good or bad that that excited him somewhat.\n\n'I'm thinking this is something that's become an issue in your relationships.'\n\n'Yeah...' She agreed, looking concerned with where the conversation was going.\n\nThat's when it hit him. The thought of this incredible girl being kicked out of her own house, with enough difficulties to grant her the need to depend on the kindness of a diner owner, just because of being judged for exploring her sexuality in the way she wanted, made him feel sad for her.\n\nAnd for once he knew exactly what to do next. Grabbing her face with both hands, Jarno kissed Mackenzie.\n\nShe let out a surprised whimper and took a few seconds before she responded. Pulling back, Jarno kept his hands stroking her cheeks until she reopened her eyes.\n\n'Ever since I saw you on that subway station, I've wanted to kiss you.' He whispered, never breaking eye contact with her beautiful blue gaze. 'And everything you've said and done since has only made me want to be around you even more. This secret doesn't change that.'\n\nThere was a quick succession of images on Mackenzie's face. Surprise turned into delight, and just as quickly turned into the feral determination. Before he had time to process these changes, she pounced on him, smashing her lips against his and clawing at his hair with her fingers.\n\nHer tongue made its way inside his mouth, and Jarno was quick to react, letting his body go into autopilot, as he pressed the beautiful girl to his body using his arms on her lower back. Mackenzie had her knees on the couch whilst he was sitting, which meant she was standing higher than him, her hair cascading down to cover their faces.\n\nThe small hands that were in his hair switched to unbutton his shirt with haste. As soon as his torso was exposed, Mackenzie made a point of flattening her hand against his muscled abdomen. Jarno felt her moan against his mouth. Then he was pushed back onto the couch armrest.\n\n'Hey!' He complained, fearing he'd fallen off for a moment.\n\nMackenzie just grinned mischievously. Never looking away from him, she removed his shoes and socks, before pulling on his pants. Then, in one swift movement, she uncovered his penis by pulling his briefs down. They both gasped, due to the sheer excitement they were feeling.\n\nJarno could see the young woman lick her lips hungrily whilst looking at his stiff member, before going on all fours in front of it. The view of her heart shaped butt covered by her dress, as well as the ample cleavage and her piercing gaze, coupled with Mackenzie's hot breath over his cock nearly made Jarno come there and then.\n\nIt didn't improve when, with sensual slowness, Mackenzie stuck out her tongue and ran it from the base of his cock up to the tip. Jarno tensed up completely during the travel of her tongue, before moaning audibly when she finished with a flick. All the while, she was smiling up at him.\n\n'You're incredible...' He sighed, looking at her in wonder.\n\n'Not so bad yourself, mister.' She replied.\n\nAbout to ask her to see her naked, Jarno cried out instead as Mackenzie opened wide and took the head of his penis inside her mouth, sucking hard before letting it pop out again. Grabbing hold of the base of it, she went down on it again, bobbing a few times before going back up again.\n\n'Yummy...' The beautiful girl told him, before rubbing his stiff cock against her cheek with a sigh.\n\nThe sight of Mackenzie rubbing her own face with his sticky penis, whilst leaving a few quick kisses on it, was inflaming him to an extent he couldn't believe to be possible. He'd wanted to have her to himself for quite some time, he realized, and now she was very willingly giving him the blowjob of his life with a look of sweet innocence on her face.\n\nHer lips wrapped around his shaft again and Mackenzie caressed Jarno's hard flesh with her wet tongue, never looking away from him. It was getting really intense and his eyes started to wander towards her glorious backside which moved up and down with her movements on his dick.",
        "'You are so good at this...' He told her.\n\nMackenzie slipped his cock from her mouth, and ran her tongue down his shaft before licking his balls. She took them in her mouth and used her hand to stroke his shaft. Using a swirling motion on his testicles, she continued to tease him, before letting go of them with a light \"pop\".\n\n'I know.' She said.\n\nThen, she hovered just above his cock, before taking him into her mouth. Her eyes were closed now and her hair fell all around Jarno's lap, as inch by inch she descended. The head of his penis hit an obstacle, but rather than stopping, Mackenzie relaxed her throat muscles and let him further in until her face was on his groin.\n\nJarno let out an animal like growl. The head of his cock was tightly encased and the sensations were glorious. Mackenzie went back up and Jarno pulled her hair back with one hand, resting it on the back of her head. He was worried she wouldn't like it, but the girl whose purple locks he was holding merely looked up, winked, and closed her eyes again.\n\nMackenzie made loud wet slurping noises as she began to vigorously bob up and down. Jarno felt his legs tremble at the intense pleasure he was experiencing every time she devoured his cock, to the point where he felt a familiar tingling sensation. Without warning it got overwhelming, and he felt his cum travel through his member as he unleashed it onto Mackenzie's mouth.\n\nShe gave out a surprised grunt and a light gurgling sound as his cum filled her mouth, but continued her ministrations. Apparently, keeping all of it in her mouth since Jarno couldn't feel her throat muscles contracting. In fact, she even squeezed the base of his cock, milking him dry.\n\nOnce he was spent, Mackenzie slowly went up on his shaft. When she reached the very tip she loosened the pressure, letting the cum amassed in her mouth escape and dribble down his manhood. Then she licked and sucked on it, until all of the gooey mess was back inside her mouth. Making a show of swallowing, she stuck her tongue out and licked her lips with a smirk.\n\n'Oh my God...' Jarno mouthed.\n\n'No, I'm just human.' The purple haired girl replied.\n\nThat was the trigger for Jarno. He pounced on her, pushing her onto her back and kissing her for all he was worth. He parted her lips as well, but felt her hesitate when his tongue entered her mouth.\n\n'What's wrong?' Jarno asked, concerned he'd done something wrong.\n\n'Nothing.' Mackenzie replied. She was smiling, which relieved Jarno, but she also looked puzzled. 'It's just that you used tongue...'\n\n'So?'\n\n'You'll get cum in your mouth.'\n\n'It'd be kind of hypocritical of me to have a problem with tasting my own cum if I wanted you to taste it.'\n\nMackenzie looked at him with an indecipherable expression.\n\n'Bedroom.' She told him. 'Now.'\n\nShe was making a move to get up, but Jarno had other ideas. Scooping her up in his arms, he lifted her off the couch. Mackenzie yelped in surprise, before a wicked grin adorned her face.\n\n'Which door?' He asked.\n\n'Right.'\n\nShe started to plant sloppy kisses on his neck, as they both went towards her bedroom. Closing the door behind him, Jarno focussed on what he wanted to do to her. First things first, he was naked and Mackenzie was not. He meant to fix that.\n\nThere were words of protest from Mackenzie when she wasn't allowed access to his neck anymore.\n\n'It's your turn to stay still now.' Jarno replied.\n\n'Stay still? Oh, you really don't know me well, do you?'\n\n'Then let's see about getting to know you better...'\n\nHis meaning was made clear when he grabbed a hold of the base of her dress and slowly pulled it up, revealing more of her naked skin as it travelled upwards. Mackenzie lifted her arms and Jarno pulled it clean off. He gasped.\n\nShe had gone commando, her entire body exposed to him now. She was pear shaped with wide hips. Her belly was devoid of any muscles, but she wasn't fat. Not even remotely. Up above, her breasts were incredible, large in size, and with not as much sag as their size would have you believe. The nipples were small and standing proud.\n\nRight below her breasts was a massive tattoo resembling a piece of jewellery, in the shape of an owl with its wings spread out, black with a few details like the eyes in red.\n\nPlacing a hand on it, Jarno walked around her, admiring, and letting his hand trail across the smooth skin underneath. The entire time, Mackenzie was looking at him with the most innocent look she could muster.\n\nHe circled her for an entire circumference, before stopping behind her. He had seen correctly. Starting at her shoulder blades and ending at her arms, just above the elbows were two realistic wings. Realistic in shape, at least, since they were lined in black and filled with the colours of the rainbow from one end to the other. \n\nThe naked beauty in front of him was craning her neck backwards to try and see what he was doing. Jarno placed both hands on her hips and started to move them until they were just below her chest. Then, he gave into the urge he'd been fighting for the last minute and grabbed her boobs.\n\nMackenzie moaned as he played with them, testing their weight, mashing and unmashing the globes. He stretched his fingers, trying to cover as much of the soft flesh as possible. Her nipples were poking the palms of his hands and he suddenly couldn't bear to not be using his fingers on them. So, he used them.\n\nHis fingers pulled Mackenzie's nipples away from her. She let out a long moan and let her head fall on Jarno's shoulder, which exposed her neck to his lips. He didn't let the opportunity slip and kissed away.\n\nIt was an incredible sight to him, knowing he could affect her this way with his touch. Emboldened by this notion, Jarno let his right hand wander down slowly past her bellybutton and onto the apex of her thighs. He felt around, feeling short of breath as he teased and massaged the skin around her sex.\n\nMackenzie gasped with his actions.\n\n'Oh, good boy...' She cooed.\n\nIt sounded to him almost like she was dealing with a dog, and so, playfully, he plunged two fingers inside her without a heads-up.\n\n'Agh...'\n\n'I'm sorry, I didn't catch that, I was a good what...?' Jarno asked, making his voice neutral.\n\n'A good boy.' She replied. 'A good big boy.' Reinforcing the point, she grabbed his penis, which had regained its rigidity once more.\n\nNot wanting to be outdone, Jarno removed his fingers, which were now covered in Mackenzie's juices, and put them next to her mouth. She opened and tried to lick them, but he bit her earlobe. She gasped, surprised.\n\n'Keep your lips pressed together.' She obeyed and he smeared the wetness on them. 'Lick your lips.' Jarno watched her do it, and only then did he stick his fingers into her mouth, giving her a proper taste of her pussy. Mackenzie sucked greedily.\n\nWith a hard shove from her butt, Jarno fell back onto the bed, suddenly.\n\n'Oh my...' She said, turning and eyeing him hungrily. 'I think I'm proving to be a bad influence on you.'\n\nMackenzie climbed onto the bed and went up his body on all fours until she was face to face with him. She parted her lips and Jarno reacted, loving the fact that he could taste her juices on them. Her movements were fluid and exciting, making him crave for each peck and each travel of her tongue inside his mouth.\n\nBiting down on his lower lip, Mackenzie tugged on it before releasing it. She smiled just a few centimetres away from his face as she ground her mound over his stiff erection and began to move from side to side. Jarno smiled back in wonder.\n\n'Normally I'd ask you to eat me out as well, but I'm way too horny right now. I want that amazing cock of yours in me, now.' Mackenzie hissed. 'We'll need to use a condom, though.'\n\n'Okay.'\n\nShe reached forward to her bedside table and grabbed a condom from a packet. Her breasts dangled in front of his face, and Jarno couldn't resist sticking out his tongue and running across the vale between them. Feeling her shudder, he grabbed hold of the condom from her hands and flipped them both, until he was the one standing over her.\n\nJarno placed the condom's wrapper against her lips. Between her teeth and his fingers, they ripped it open. Throwing the wrapper aside, he placed the condom over his penis, before resting it against the wetness of Mackenzie's pussy. Lowering himself until his weight was resting on his arms, Jarno kissed her softly.\n\n'Ready?'\n\nShe nodded.\n\nJarno took a deep breath and thrust his hips forward, causing Mackenzie's eyes to turn back in her head and a loud moan to escape her throat. Reopening them, she looked at him with passionate intensity.\n\n'Fuck, that's awesome!' She gasped.\n\nHer entire body was pressed up against his. It was as though every inch of her skin was rubbing against his, and not just their groins. Most striking of all was the way Mackenzie was looking at him, with pure lust and wickedness.\n\nAlmost out of their own accord, Jarno's hips started to rock back and forth, driving his cock in and out of the sweet confines of Mackenzie's pussy. She pressed her lips together and the only sounds escaping from her were muffled groans. They were already as close as possible but he still wrapped his arms around her, not quite believing his luck of actually being inside this incredible woman.\n\nThey were managing to move in perfect synchrony, much to Mackenzie's credit, Jarno was sure. She knew exactly what she was doing, and he was reaping all the benefits.\n\nMackenzie was gasping and moaning, maintaining the most incredible sultry eye contact with him. The blue eyes that stared at him were made to look purple due to her loose purple hair behind her head as well as the lighting (or lack of it) in the room. If she kept looking at him, he knew it wouldn't be long before his cock exploded inside her.\n\n'Yes, Jarno.' She whispered, as they screwed each other silly. 'Nice and hard.'\n\nNow, that was definitely too much, and Jarno had to use every shred of self-control he had to control the pre-orgasm sensations he felt. For starters, he slowed his movements, going deeper instead. He also let his head fall to her neck, to stop her looking at him with those incredible eyes.\n\n'You are too sexy for your own good, you know that?' He asked her, slightly out of breath.\n\n'I do. Whenever I have an Italian stud on top of me, they always say tha- Agh!' Her reply was cut short by Jarno's teeth on her earlobe. 'Oh, that feels so good, baby... Fuck me, fuck me, fuck me.'\n\nAnd he did. Beginning to gather momentum, Jarno was grabbing her body greedily at her back. Mackenzie was now sounding quite wild as well, which made him go back to hovering above her to look at her. When he did, he watched her mouth hanging open as well as her eyes wide open with desire. He felt like kissing her or touching her large breasts but he was hypnotised and could do nothing more than thrust into her with increasing speed again.\n\nHer hands were like steel on his bum, and Jarno was certain she was enjoying the feel of his muscles there, contracting every time they moved into each other.\n\n'Are you close?' Mackenzie asked, her voice needy and her hands tightening their grip. 'I can't last much longer, Jarno.'\n\n'Me neither, I'm really close.'\n\nSteadying herself against his relentless love making, Mackenzie was watching him with glee. It was driving him crazy. His orgasm approached like a runaway train, but he was determined to have her be the first one to succumb.\n\nA sudden high pitched long yelp escaped Mackenzie's throat, and suddenly he felt her back lift off the bed, clutching his bare back with her nails, sure that she was leaving marks. There was also the matter of the muscles in her pussy contracting around his penis, tugging on it.\n\n'Oh, yes! I'm cumming!' She informed him, unnecessarily. 'Come on, cum for me, Jarno. Cum.'\n\nThank God, he thought. He couldn't have held it together for much longer. Abandoning his restraint, he felt his balls tense, and suddenly the biggest amount of pleasure he'd ever felt in his life coursed through him, and he came. Hard. Mackenzie's contracting muscles were inviting him to fill her up, were it not for the condom he was wearing. Jarno wished he were actually filling her. Without the unintended consequences, of course.\n\n'Good boy.' Mackenzie whispered, twisting and shaking with the aftershocks of her orgasm. Despite not feeling his cum inside her, she had undoubtedly felt his throbbing. 'That's it, let it all go. Good boy...'\n\nThey were both breathing heavily onto each other's shoulders as they crashed back down to Earth. Out of the blue, Jarno felt the muscles around his slowly softening cock contract and felt his over-sensitive member complain, removing himself from inside Mackenzie and onto his side. He took the opportunity to remove and tie the condom, throwing it on the ground.\n\nMackenzie was giggling alongside him.\n\n'Got too much for you?'\n\nHe half laughed, half grimaced.\n\n'I don't think I'll be able to cum again for the next few days...'\n\n'Hopefully not that long, I want to fuck you again before that.'\n\nJarno turned his head. She had already done the same, so they were laying on their backs, recovering, looking interestedly at each other.\n\n'You're incredible, Mackenzie.'\n\n'I love the way you say my name. It makes it kind of exotic.'\n\n'Mackenzie, from the exotic jungles of Toronto...' He said in a mock deep voice.\n\nShe gave a hearty laugh, before kissing him softly. It was a lot softer and more languid than before, now that they were contented and not desperate to get in each other's pants.\n\nOne of her fingers traced his now limp cock, before continuing the path up his chest, resting her stretched arm across his chest. Jarno shifted slightly and placed his arm under her head. Mackenzie snuggled into his shoulder.\n\n'You put on a good show, Jarno.' She told him, making a funny mouth movement with his name. 'But I'm not fooled. You were holding back there for a minute until you were sure I was gonna cum, too.'\n\n'Yes. Is that bad?'\n\n'On the contrary, it's good. Just what a deep and meaningful guy would do...' She teased.\n\n'Hmpf...'\n\n'You don't like being deep and meaningful?'\n\n'Sometimes it's not all it's cracked up to be...' He replied, cupping her breast with the arm that was behind her head.\n\n'I dunno. Doing shallow and meaningless things is much more fun with someone who's deep and meaningful...'\n\nShe snuggled closer to him, closing her eyes, and missed the intrigued smile Jarno had on his face.\n\n--------------------\n\nPart 2 of 4 | \"A woman is dangerous when she is armed with beauty and a sense of humour, as she becomes irresistibly addictive.\" |\n\n--------------------\n\nIt was an awakening similar to every single other she had ever experienced and yet it felt very different than any other to Mackenzie. The light of the morning sun was coming through the blinds and the rush hour traffic noises reached her window as per usual, but she knew better.\n\nShe tried to move her hand to touch the hot naked Italian who would be next to her. She couldn't. Her hand was kind of restrained by the bed sheet.\n\nFrowning, Mackenzie opened her eyes with laziness. Jarno wasn't by her side. He'd woken up before her and had wrapped the sheets around her like a burrito, to keep her warm. Judging by the muffled noises coming from the kitchen, he'd also busied himself with breakfast.\n\nClosing her eyes and letting her head fall back down onto the pillow again, Mackenzie sighed. Somehow, making breakfast after having sex with someone for the first time seemed to her a very Jarno thing to do. Not for the first time since meeting him, she was almost sure she would end up being a bad influence on him.\n\nFor the meantime though, Mackenzie stretched with a yawn and pushed herself to the other side of the bed. She inhaled deeply on the pillow Jarno had used. He had a very noticeable scent, which had found its way into the pillow. It was a sweet scent and... manly. Was it his natural scent or perfume?\n\nGroaning, she pulled the covers off of her and got up. Her reflection in the mirror had her hair in full \"just fucked\" mood, and Mackenzie smiled at it. Jarno would enjoy the view. Not just the hair, but also the fact that she would go out as she was. Butt naked.\n\nWith one hand on the doorknob, she stopped. On second thought...\n\nShe picked up Jarno's white shirt from the back of her chair. She brought it to her nose. It was the same scent as the pillow. Did it pass from him that easily? Mackenzie sniffed the skin around her shoulders, then her hands, and then her own breast she'd grabbed with her hand. The slightest hint of his fragrance was present and that made her smirk with naughty glee.\n\nPutting his shirt on her, Mackenzie walked back to her mirror as she buttoned it up. With her arms by her side, she evaluated. It looked as if she were wearing a low cut dress, were it not for the oversized sleeves. Her pussy was just about covered from view but easily accessible if she wanted to tease him. She rolled her eyes at her own reflection. Of course I want to tease him!\n\nHer gaze lingered on the mirror. Maybe... She undid the top three buttons. Her cleavage was visible now. Much better. In fact... Pushing a hand under the shirt, Mackenzie pinched her nipples until they were hard. Now, they were plainly visible pushing against the soft fabric.\n\nSatisfied with herself, she left the room.\n\nSlowly, the young girl made her way barefoot to the kitchen. She couldn't help but stop and lean against the wall, admiring the scene in front of her.\n\nFirst things first, Jarno was only wearing his briefs. They were grey, though Mackenzie's interest in them wasn't the colour, but the way they hugged his butt. She felt the urge to squeeze it in her hands again. Or maybe bite it.\n\nHis back was turned to her, obviously, and she was afforded with a nice view of his back. It would take her forever to admire the lines his muscles produced there. Racing driver, Mackenzie remembered from their mutual secret exposition the previous night. Jarno probably had to keep himself buff for a living, she deduced.\n\nThat wasn't really the whole reason why she'd stopped and stared. As Jarno busied himself with the pancakes he was making, he was shaking and humming along to a playlist which his phone, placed on the table, was playing. It was on a low volume and he was singing quietly to himself, but Mackenzie identified the song from an Axe commercial.\n\n'Just the thought about seeing you would blow my mind<br> That's the sweetest touch of love<br> I was about to give up but you came just in time<br> With your sweet touch of love.'\n\n'Good morning.' Mackenzie spoke softly. Even so, Jarno was caught by surprise, turning quickly.\n\n'Oh hey... Jesus, that shirt looks so much better on you!' He gasped, and she saw his eyes travel all over her body.\n\n'I dunno, it looks really good on you...' She purred at him, swishing her hips to one side provocatively, as she brought her thumb to her mouth with an innocent smile.\n\nMackenzie wasn't a rookie. She knew exactly which buttons to press. And Jarno's face turned into the needful mask she hoped it would. Slowly he approached her, until he was standing just in front of her.\n\nThen, he did something completely different than what she expected. Grabbing hold of her arms, Jarno started to make her move and twirl to the sound of the upbeat song that was still playing in the background. His infectious grin and the fact that it was so different from his natural shyness made her laugh and she let him lead her.\n\nOne little kiss to let me know, girl. The deep singer's voice continued, and Jarno pecked her quickly on the lips, before spinning her in his arms. They were soon moving their bodies closer and closer, until they had their foreheads pressed, eyes close and there was just the slightest of hip movements. When the song faded out, he gave her a nice long kiss.",
        "'You're full of surprises, you know that?' Mackenzie asked him, her arms still around his neck.\n\n'Right back at you. Now, come on, sit down.'\n\nShe did as he asked, and took her usual seat at the kitchen table. Jarno brought what he'd been preparing. In front of her appeared some delicious looking pancakes, a variety of syrups and Nutella, as well as some freshly squished orange juice.\n\n'It took me ages to find the juice squeezer, so you nearly had some of last night's wine.'\n\n'I had a juice squeezer in this kitchen?'\n\n'That would explain it...' He muttered to himself, amused.\n\nTaking a bite of the pancake in front of her after coating it in cherry syrup, Mackenzie made an impressed face at Jarno.\n\n'This is really good!'\n\n'Thanks for the tone of surprise.'\n\n'Learn to take a compliment, dude.' She stuck out her tongue at him. 'Okay, I was little excited last night, but now I want to know something...'\n\n'What is it?'\n\n'Racing driver. Like what kind of racing? Nascar?'\n\n'God, no...' Jarno replied, making a face.\n\n'I know you're new here, but you should probably be careful to who you say that too. Murders have been committed for less than that in the south...' Mackenzie smirked, taking a sip of her glass.\n\n'Noted.' He smiled. 'No, I'm a Formula 1 driver.'\n\n'Wait. Like, \"the\" Formula 1? Like Schumacher style F1?'\n\n'Yes.' He kept his expression blank.\n\nShe eyed him with curiosity, understanding why he didn't wish to share the information with her previously.\n\n'You thought I'd go all gold digger on you...' Mackenzie told him, with a slight smile playing her lips.\n\n'A bit.' Jarno confessed with a little shy smile, obviously relieved she wasn't hanging it against him. 'I've had some weird experiences. It's better here in America, you don't really pay that much attention to F1, so I can walk around much more relaxed.'\n\n'Oh, the perils of being a star...' She teased him, sarcastically.\n\nHe narrowed his eyes playfully.\n\n'You'd have a face full of orange juice if you weren't wearing my shirt.'\n\n'Well, you're not wearing anything, so play nice or I'll do it to you.'\n\n'And what would your roommate feel about making a mess in the kitchen?'\n\n'It would become two against one, and we'd force you to do the clean-up.'\n\n'I am a much bigger \"one\"...' He raised an eyebrow, amused.\n\n'Oh, trust me, you wouldn't know what you were getting into.' She replied, continuing to put pieces of pancake into her mouth. 'The biggest sporting activity I do is walking around the house, but Hailey is a complete fitness addicted pile of muscle. She could take you.'\n\n'She doesn't look that threatening.'\n\n'She was more clothed than usual. Still you obviously noticed her six pack. You couldn't take your eyes off her belly yesterday.'\n\n'What?' He reacted embarrassed, blushing a little. 'I wasn't-'\n\n'Yeah, you were.' Mackenzie giggled at his nervousness. 'That's a damn sexy belly. You should see it when it's squirming, when I make her cum.'\n\nThe expression on Jarno's face was exactly as she'd hoped. Confusion followed by disbelief. There was also the slightest trace of a smile.\n\n'You and your friend have... ah...'\n\n'Have what?' She asked, trying to keep a look of sweet innocence.\n\nHe was about to say something but thought better. Instead he gulped down the rest of his orange juice.\n\n'Besides making her cum, do you two do anything where you end up cumming as well?'\n\n'We do.' If you want to play this game, I'll go along...\n\n'Such as?'\n\n'Such as sucking the girls,' Mackenzie grabbed her voluptuous breasts. 'such as licking my pussy,' She pressed her hand over the end of the shirt, over the apex of her thighs. 'such as fucking me with a strap-on...'\n\n'Do you prefer a strap-on or the real thing?' Jarno asked her, with a look of polite interest. No way this isn't making him hot!\n\n'I usually like to feel the real thing, especially when it throbs. But Hailey can go longer than any man.' She replied, trying to remain equally collected.\n\n'Interesting.'\n\nThey had leaned forward, both smiling mischievously.\n\n 'You know, I'm just jealous because she's gotten a chance to taste you, and I haven't yet...' He told her.\n\n'Whose fault is that?'\n\n'Yours. You pushed me onto the bed before I got the chance.'\n\n'Oh, it was, actually... Not that you complained too much at the time.' She teased.\n\n'I was a little preoccupied with the hot naked lady on top of me.'\n\n'Lady? You must have me confused with someone else...'\n\n'Trust me, I don't.'\n\nTheir faces were now just a few inches apart.\n\n'Would you like to get your taste now?' Mackenzie asked invitingly.\n\n'I would love to. But I can't...'\n\n'Why not?' She pouted and used a little girl voice.\n\n'I have a meeting with sponsors in an hour and a half.'\n\n'So you've been teasing me, knowing you wouldn't be able to follow through with it?'\n\n'Yep.' Jarno smiled, getting up from his chair and collecting their dirty dishes, before putting them in the washing machine.\n\nThe whole time, Mackenzie watched open-mouthed with the corners of her mouth creeping up inch by inch. 'You asshole! I'm a really bad influence on the deep and meaningful guy!'\n\n'It's a nice new experience.' He replied, winking at her.\n\nJarno walked back to her bedroom, followed by Mackenzie. She didn't follow him inside. Instead, she leaned against the back of the couch, hands behind her back, as he started to get dressed again.\n\n'A meeting with sponsors?' She asked him.\n\n'Yeah. Our main sponsor is an American multinational, so that's actually why I'm in the US.' He informed her, as he buckled his belt. 'Also have a couple of interviews tomorrow...'\n\n'Interviews?'\n\n'Two of those. One's for a sports magazine, the other is a talk show.'\n\n'Is the talk show live? Which channel?'\n\n'It's going to be live on some channel...' Jarno replied evasively as he tied his shoelaces.\n\n'You can either tell me or I'll just find it later.' Mackenzie told him.\n\n'If you can find it, why would I tell you?'\n\nShe narrowed her eyes at him. He was still leaning forward from his sitting position after putting on his shoes, the faintest of smiles on his face. It was perfectly obvious what the shirtless handsome man in her room was waiting for, but Mackenzie still hadn't shaken off her teasing mood.\n\nSo, instead of returning his shirt back, she pulled her long purple hair off her shoulder and smirked sideways at him.\n\nJarno chuckled to himself and dropped his gaze, before slowly standing up and making his way to her, standing just a few inches away. Mackenzie didn't move at all, looking up at his face.\n\n'Despite how much better than me you look in that shirt; I think the general public would frown at seeing me topless in the streets of New York.'\n\nMackenzie made a show of looking up and down his naked torso. 'They don't know what they're missing.' She sighed. 'Fine. Get it off me, then.'\n\nHe was momentarily surprised, but it quickly vanished. One by one Jarno undid the buttons, until Mackenzie was standing in front of him with her breasts bared. He seemed hypnotised by them, which made her giddy with excitement.\n\n'Turn around.' She said, making him look up with curiosity. 'Do you trust me?'\n\nHe turned his back to her as she took the shirt off.\n\n'Well, that never worked before...' She muttered dryly, making him laugh. 'Arm.' She asked him, and he understood giving her his left arm. Gingerly, Mackenzie directed it towards one of the sleeves. The process was repeated for the other arm.\n\n'Turn around again.'\n\nJarno stood in front of her with his open shirt. Languidly, Mackenzie traced a finger from his neck to his bellybutton, watching the path as if there was nothing more interesting. She felt him hiss quietly. Pretending nothing had happened, she buttoned him from bottom to top.\n\nWhen she was sure he wasn't expecting it, she started tucking his shirt into his pants, taking care to grab and caress his butt and his hips as she did it, as well as the top of his pubic hair. She tweaked the shirt to make him more presentable, and then she looked up into his eyes again.\n\nThere was fire in his brown-green eyes, and before Mackenzie had time to make a remark about it Jarno kissed her fiercely, parting her lips with ease. It was so unexpected, that her feet lifted from the floor and she started toppling backwards on the back of the couch. He caught her, though. His big strong hands were on the small of her back with an iron grip as he pressed himself, and Mackenzie felt her giggles muffled into his mouth as he tasted her.\n\nDid we go through all that trouble dressing up just to get naked again? Mackenzie wondered idly. Not complaining...\n\n'When I said play nice, I meant while I was away.' Came Hailey's voice.\n\nBoth of them jumped in surprise, and Mackenzie nearly fell back once again if Jarno hadn't caught her by an arm. She steadied herself and looked at her roommate. Hailey had a wide knowing grin plastered on her face as she closed the door behind her and headed toward the kitchen. 'Hey, we had a juice squeezer?'\n\nJarno laughed quietly.\n\n'I'm beginning to see how you're friends...'\n\n'She's one of a kind.'\n\nHis hand went from her arm to squeeze her hand.\n\n'I'm not sure how free I'm going to be today and tomorrow, but I'll call tonight and we can set something up. Sound good?'\n\n'Sounds really good.'\n\nHe was about to step away when his eyes travelled downwards again.\n\n'That's really distracting me...'\n\n'Who was the one who wanted his shirt back?'\n\nJarno pecked her lips.\n\n'Bye.'\n\n'Bye.'\n\nHailey was clearly leaning against the same wall Mackenzie used before (obviously staring into the living room instead of the kitchen) since Jarno gave her a raised eye brow as he passed her.\n\n'See you around, lover boy!' The blonde girl cooed.\n\n'Bite me.' He told her over his back, his tone friendly.\n\n'Don't tease me like that unless you're ready to follow through!'\n\nBefore he'd closed the door behind him, she could see Jarno blushing. Then there was quiet. For far too long. Hailey was never quiet this long. Looking at her, Mackenzie noticed she was staring at her with a strange look.\n\n'What?' She asked.\n\n'You look very inviting...'\n\nThe fact that she was naked, legs spread, sitting on the back of the couch had slipped Mackenzie's mind.\n\n'Well, I was in the middle of something when you showed up...'\n\n'Let's finish it between us, then...' Hailey approached her, standing where Jarno had just been, and kissed her.\n\nMackenzie returned the kiss for a few seconds before putting a hand on her friend's chest and pulling her away.\n\n'Thanks, but not right now.'\n\n'What do you mean, not right now?' Hailey looked at her as if she'd gone mad.\n\n'He was just here.'\n\n'And?'\n\n'And I just don't feel right doing it right after he was here.' Mackenzie mumbled.\n\nHailey looked at her attentively. She didn't seem upset, just intrigued. After a few seconds she just laughed and went back to her room, shaking her head.\n\n'Oh God, Mac... You have got it sooooooo bad!'\n\n///////////////\n\nMackenzie typed away on the keyboard, searching online for what she was after. She was looking for a new sex toy to use for her blowjob shows. Her previous one was good, but it was boring her slightly, having used it so often now. The pages of her favourite online sex shop were flashing before her eyes as she tried to find something suitable.\n\nTheir collection of butt plugs distracted her for a while as she looked at each item with interest. Pony Play Butt Plug... It was a rubber butt plug with fur on the other end that imitated a horse's tail. Mackenzie twitched her nose. Not really my style.\n\n Next thing to catch her eye was the \"50 Shades of Grey Anal Vibrator\". She shook her head with a smile. Well, they're cashing this for every penny they can get... Out of curiosity, she clicked. It actually looked interesting enough. Smooth silicone, seven pulsing patterns, waterproof and almost four inches wide. Maybe. She saved the link for later.\n\nThe only other item to interest her was a black penis-shaped plug, which had a very interesting size. She added it as well.\n\nMackenzie moved her search towards the \"Actor Replica\" category. It gave her an extra feeling of naughtiness to know someone actually had the shape of cock in real life that she was sticking inside her. She didn't know any of the names, though. With all due respect, most male porn actors weren't particularly attractive. Not the straight ones, anyway.\n\nScrolling through the pages, she tried to find a good dildo. Too small. Next. I don't like the shape of the head. Next. Not quite there. Next. There we go.\n\n'Why, hello Spencer Reed...' Mackenzie muttered to herself. It was very realistic looking, a few veins and creases that looked incredible. The head was bulbous and smooth; the testicles had a nice volume to them, and just above eight inches long with a base that let it be suctioned onto a surface.\n\nOut of amused curiosity, Mackenzie searched \"Spencer Reed\". Gay. Not only did they look better, homosexual porn actors also apparently had very nice dicks as well. Jarno's had a really nice one, though. It wasn't quite as big as this monster, but he had nothing to be ashamed of. And he made me cum twice.\n\nShe realised she was staring blankly at the monitor with a dazed smile. An idea struck her, and Mackenzie opened a new tab. \"Jarno\", she wrote. It was at this point the fact that he hadn't revealed his last name came to her. The suggested results presented a few options and she clicked the first one. \"Jarno Trulli\". F1 Driver... Was this it? No. Jarno Trulli, as it turned out, was a former F1 driver who was now forty-one years old. Handsome, actually, but not her guy. Are all Jarno's sexy in Italy? She'd do some research on it later.\n\nRight now she was writing \"Jarno\" on the search tab again. She added \"F1\". There were only two results now: Trulli and Merlo. She tried Merlo. The face of the man Mackenzie made love to appeared on the screen, deep in conversation with someone to his right, who was in racing overalls like him. Found you.\n\nFor a moment she thought about finding out more about him, but, strangely, Mackenzie felt it wasn't fair somehow. I'll send him my chat room link first. She decided. Then, I'll snoop around. There was something she needed to know, though...\n\n\"Jarno Merlo Talkshow USA\".\n\nIt didn't take her long to spot it. There was a national TV network with a panel show on the previous night which had included him. Setting the laptop aside, she used her television's time warp function to see if she could watch it now. She could.\n\nOh, wait. Mackenzie got up from the sofa and went into Hailey's room.\n\n'Do you mind if I watch something on the TV or does the noise disrupt your show?'\n\nHailey was sitting on her bed, a camera and laptop in front of her, the only piece of clothing on her being a pink loose fitting top.\n\n'No problem, I won't hear anything with my music play- Joel86! Thank you so much for the tip!' She squinted at the screen. 'And your prize is... 10 spanks.'\n\nMackenzie approached the bed, sitting sideways on the edge of the bed. 'Go on, all fours.' She responded to her roommate's inquiring gaze. The blonde girl got on all fours, butthole directed towards the camera.\n\nPressing her hand softly on her friend's butt cheek, Mackenzie read a few of the comments and smiled. Lots of excited voices for her arrival.\n\n'Don't get too excited, I'm just here to punish this bad, bad girl.'\n\nHailey was about to reply something innuendo-like back, Mackenzie knew, so she slapped her bum hard. Her friend yelped. The purple haired girl wasn't concerned: they'd done this a thousand times and she knew when it was too painful or not. She applied the other nine spanks in irregular intervals, keeping Hailey on her toes, listening to her excited noises.\n\nMackenzie put a hand on her upper back to stop her from getting back up. Getting her face nearer to Hailey's bottom, Mackenzie pushed her cheeks apart and dribbled onto the mid-section, watching happily as her spit travelled slowly down from her roommate's butthole to her pussy lips, passing over the clit hood piercing there.\n\n'This is a little preview for our girl on girl show tomorrow.' She winked at the camera. 'And this as well.' She slapped the tight butt one more time.\n\n'You bitch...' Hailey called out to her as she exited the room, when she tried to sit her sore ass back down.\n\nClosing the door behind her, Mackenzie settled back on the couch, making herself comfortable, and started playing the show.\n\nAs the intro began and the host made his presentation to the audience, Mackenzie realised this was a familiar show to her. At least a couple of times there was someone she liked on it, and so she'd watched it then.\n\nIt was a panel show with a host and four guests. There was a main guest of sorts who had the privilege of being the only one to be interviewed one on one by the host half-way through, after a few panel topics were discussed between the host and the other three guests. After the one on one interview, the main guest joined the panel for about twenty minutes, and then the show ended.\n\nThe first part wasn't too interesting, as Mackenzie realized Jarno would be the main guest (and thus, not participating in the first panel discussion). She fast-forwarded the discussions, until his introduction.\n\n'Ladies and gentleman, my main guest this week is the youngest man to win a Formula 1 race in history, and has just completed a big money move to Ferrari. Please welcome, Jarno Merlo!'\n\nApplause followed, as Jarno appeared. He was in a grey suit with his curly black hair looking better than ever. His expression was the shy genuine smile that seemed to suit him. Both him and the host walked towards chairs, slightly away from the rest of the panel.\n\nThe host was good, Mackenzie realised. Somehow, he managed to coax Jarno away from being too shy. In fact, the young Italian was even making the audience laugh on a few occasions.\n\n'It's safe to say most of us here aren't avid followers of F1. But even we know that Ferrari means something.' The host said, stretching his arms to the audience, who murmured in agreement.\n\nJarno took a deep breath. 'It's awesome.' He said with a look of comically exaggerated enthusiasm, drawing laughs from the audience. 'Growing up I visited the Italian Grand Prix quite often, and seeing a Ferrari winner there is just the most incredible experience as a fan. These are people who really feel the sport, and it's a huge honour I've been awarded.'\n\nIt was clear from the way he said the words that he meant them. His excitement and pride were obvious to behold. The interviewer moved on, giving a brief summary of his career. Apparently, Jarno had started driving F1 cars when he was seventeen, which meant that he was placed in a weird situation.\n\n'So basically,' Jarno explained. 'to drive in this sport, you need what we call a super license. To get one you don't need to be of any age, at least not at the time, you just have to do a certain amount of miles in an F1 car. So,' He added with an ironic smile. 'I was allowed to drive a car with around eight hundred horsepower but not a Toyota Prius because I wasn't old enough to qualify for a license!'\n\nThe audience made a surprised grunt, mimicked by the interviewer.\n\n'Wait, so after the race, when you had to go back to the hotel...?'\n\n'I'd have to ask for a lift, yeah.' Jarno replied, drawing laughs.\n\n'So, let me just paint a picture.' The host said, making a show of entwining his fingers, which made Jarno make a show of leaning forwards as if to listen more attentively. 'You thrash your teammate in a race. There was a team briefing. Everyone has left except you and your teammate. How does that request go?'",
        "Jarno paused and laughed. 'Something along those lines happened, actually!'\n\n'No way!'\n\n'Oh yeah, it was in a Grand Prix I had a really tough, up-close and personal kind of battle with this guy, and I ended having to go \"could I get a lift into town, mate\"?'\n\nEveryone laughed with glee. As if out of the blue, the presenter said he was about to show a video of Jarno's first race win. It was an onboard camera from his car, as he fought with another car. Jarno explained it was the last two laps of the race, and it was a straight fight for the win.\n\nIt was really exciting and even Mackenzie, who had no interest in the matter, found it impossible to take her eyes away from the duelling cars. Jarno was all over him, constantly going side by side with the other driver, until with one daring move he went on his inside. The other driver squeezed him to the wall and Jarno just missed it by a few inches at nearly two hundred miles an hour. They arrived at the corner, and, in payback, the Italian gave his competitor a slight shove.\n\nThe transmission stopped, focussing again on the two men in the interview.\n\n'Wow...' The interviewer said, whilst spontaneous applause swept the room. Jarno blushed and smiled just as Mackenzie expected he would. 'Thank you.' He mouthed quietly.\n\n Then, it was time for the final part of the show, the twenty-minute debate with the rest of the group. Mackenzie smiled. Usually the main guest just gave a nod before joining the panel, but Jarno went to each of them individually, giving a handshake to the men and a kiss on each cheek to the women, before taking his seat. How very European...\n\nIt was obvious from the start what the objective had been when they organized the guests. The conversation largely turned around issues surrounding the USA, which meant the other guests could make due if the main guest wasn't knowledgeable, and gave him the excuse to not speak much.\n\nHowever, Jarno appeared to surprise the other people around the table by participating quite actively. Though, she could tell he didn't mean to. He just couldn't resist.\n\nFirst, the other male guest, an old man who kept spewing on and on about how the country was losing its core ideals of family, whatever the fuck that meant. The camera focussed on Jarno during a portion of the speech, and Mackenzie laughed. He was increasingly furrowing his brow, and a slight quirk was featuring in his lips as if he couldn't quite believe someone could speak such nonsense. There a few quiet laughs from the audience at this.\n\n'It's all about good traditional values.' The old man was saying, looking directly at the host. 'I'm one of the founders of an organization to fix this mess. Our motto is \"Family Values\". Do you know why we chose \"Family Values\"?'\n\n'\"We're racist, sexist and homophobic\" was already trademarked?' Jarno asked, dryly.\n\nThere was a silent pause. Then, everyone started laughing. The host placed his right hand over his mouth to try and rein in his laughter.\n\n'No.' The old man replied unnecessarily, clearly irritated.\n\n'It wasn't trademarked? And you let that opportunity pass?' Jarno shook his head sarcastically. Everyone laughed again, much to the displeasure of the old timer.\n\nThe topic changed and somehow, Jarno and the woman to his left, a thirty-something book author, were discussing relationships.\n\n'I think it's sweet that there are people out there who feel like they don't have to rush into having sex until they found someone special.' She told him.\n\n'I agree. Your first time should be with someone who you care about, and who cares about you. However, I do hope that those who do it, do it for the same reasons you find sweet about it and not because they've been told they're immoral or sluts if they don't.' He replied.\n\nThe old man chose this time to jump in. 'I would say that there are a few people who would argue that a woman with her virtue is more appealing.'\n\n'Excuse me?' Even the host was stunned.\n\n'Well, you know, once that gift is given, a woman has no more gift to give anymore.'\n\n'Excellent point, sir.' Jarno broke the silence, his voice filled with icy sarcasm. 'Certainly personality, intelligence, a sense of humour, life goals, loyalty, independence, passions, mutual interests, and just, you know, an overall personal identity can't count for much if they don't come with an intact hymen, am I right?' He added the last part conspiratorially to the author, who was shaking with laughter.\n\n'I mean,' He pressed on with his ironic monologue. 'this explains why the divorce rate is so high! Because, obviously, once a virgin woman has had sex with her husband, the virginity ship sails away,' The host lost it with Jarno's hand movements on the phrase \"sails away\". 'and she has nothing left to offer the husband.\n\n'It must be hell for those poor guys,' He turned to the actress, who was trying to suppress her laughter. 'having to repeatedly have sex with non-virgin women.' She lost it at that. Jarno pressed on, as if fighting back tears. 'It just breaks my heart to think of what those poor bastards must go through...'\n\nThere was a storm of applause, as the actress pretended to console him by rubbing his shoulders. The host tried to push on, failing miserably to avoid embarrassing the old man. Even after the excitement had died down, Mackenzie couldn't help but notice that the actress was still holding Jarno, flashing him a clear \"you're gonna get it later smile\".\n\n'Bitch, get off.' Mackenzie heard herself mutter. Jarno didn't seem to notice the advance, focussing on the panel discussions, and gently un-entwining himself from her grasp.\n\n'Well everyone,' The host said to the camera a few minutes later. 'That was our show! Thank you for watching, and we'll see you again next week, goodbye!'\n\n///////////////\n\n&lt;You'll be happy to hear that you look rather handsome on camera as well. You know, in an \"eight-year-old kid wearing a Batman costume\", kind of handsome. ;) Mac&gt;\n\nJarno looked at this phone, grinning from ear to ear.\n\n&lt;Why, Mackenzie, complimenting my appearance? Are my devilishly handsome looks all you care about me? I was hoping my humility and sense of understatement would have played a part. Mr. J (just because you brought Batman up :P)&gt;\n\nA minute later, as he lied down on his bed from a busy day, Jarno heard his phone ping.\n\n&lt;Take a compliment, good sir. Besides, don't tell me you smiled at me in the subway because of anything other than my looks. Mr. J, huh? I might just have to go look for a Harley Quinn costume... That was a late reply, were you busy with blondie? Mac&gt;\n\nHer reply left him unsure whether she was joking or not. Jarno took a moment to decide on the right words. Blondie? Oh, the actress...\n\n&lt;Blondie doesn't hold a candle to you, and worse, I doubt she knows anything about the Battle of Little Budapest. Promises, promises, Harley... 3:)&gt;\n\n&lt;Poor Blondie, clearly History textbooks are much better in Canada... :) I fulfil my promises, Mr. J. Have I struck gold on fantasy Harley?&gt;\n\n&lt;As enticing as Harley is, I was hoping to have Mackenzie as company tomorrow. Are you free?'&gt;\n\n&lt;I can be. But if you enjoy my company so much, search for \"IaniteWannabe\" sometime after eleven tonight. Talk to you later, lover boy. Mac x&gt;\n\n&lt;You have my curiosity. I'll make sure to search it. Jarno x&gt;\n\nFeeling much more relaxed from his day, following the exchange of messages with Mackenzie, he ordered some room service to have dinner. The warm meal, eaten whilst he was sitting on the bed, meant that he was in a relaxed mood. Too relaxed, in fact. After having his eyes closed for a few seconds, nearly two hours had passed according to the bedside alarm clock.\n\nDamnit! It was 11:45 PM.\n\nQuickly booting up his laptop, Jarno reached for his phone to look at what he was meant to search. \"IaniteWannabe\". He wondered what she was referencing, but typed the words into the search browser. Clicking the first link, a new page opened, revealing a streaming website, which prided itself in being \"the best cam show site in the world\".\n\nAs the page formed up, a video started buffering until it was showing Mackenzie smiling, sitting cross-legged with only some purple panties and a black t-shirt on.\n\nJarno waited a few minutes, merely enjoying the show, to get himself situated with how Mackenzie worked. Although she'd said that these sessions were about stripping naked and cumming for an anonymous paying audience, he quickly realised that this cold description didn't quite do it justice.\n\nFor starters, the vast majority of the time she was merely chatting with the people in the \"room\". A string of messages appeared to the right of the screen, which Mackenzie read and replied to. Quite a few of them even seem to know her likes and hobbies. These conversations even went in the most unexpected of places. Like video games, or animes, or the fact that some people engaged in rape fantasies.\n\n'Here's the thing: creating non-consent scenarios in your head because you find them hot doesn't mean you want to get raped! Like, duh...' Mackenzie said. 'The idea of giving up control to someone during sex and the idea of having sex with multiple people are two ideas that have been around and increasingly accepted. So, why isn't adding the two together acceptable? Kind of bullshit to me...'\n\n&lt;Some people don't like the idea of giving other's control, even in sex. Down to personal preference, and stuff...&gt;\n\nThe message appeared on the side, the first of a few replies to what Mackenzie had just said. Since the stream was late by a couple of seconds, she was silent for a while until she read the first one.\n\n'Absolutely, if you don't like it, it's cool. Just don't make those who do like it feel bad because you don't.' The purple haired girl was casually twisting the end of her t-shirt between her fingers. 'Anyway, it's not really my cup of tea.'\n\n&lt;What, giving control or the non-consent thing?&gt;\n\n'The non-consent thing. I mean, come on dude, are you new here?' Mackenzie laughed. 'You guys know a few spanks turn me on.'\n\nThere was a loud pinging noise. It came from the website itself, but she'd clearly gotten it in her computer as well. A tip had just come in, indicating that thirty tokens had been received, the subtitle \"show breasts\" visible underneath it.\n\n'Thanks for the tip! Come on guys, we're nearly at the goal!' With that she pushed her t-shirt all the way to her shoulders, exposing the large breasts Jarno had been playing with the previous day, as well as the elaborate owl tattoo. Mackenzie used her hands to caress them, jiggling them, pinching the nipples, and even managing to lick her left nipple by pulling on it.\n\nReaching the goal, as Jarno found out when he surveyed the information below the video, was one of the ways in which cam models could organize their shows. Basically, there was a board filled with numbers from ten to eighty, which represented tips that could be made. Each number, when tipped, gave a prize for Mackenzie to fulfil (such as showing her breasts, like just then). By having every number tipped, the board was cleared, which granted the biggest prize to the entire audience. This session's prize was \"Anal Cum Show\".\n\nOnly five numbers were still left to be filled, due to him joining late. Still, at least he wouldn't miss the actual show.\n\nMackenzie continued her chat with the audience, which seemed to have a much better knowledge of her interests than Jarno. Apparently, she made a few drawings in her spare time, which he would have to ask her about later, and had a keen interest in anime shows. Her anime ramblings left him none the wiser but he found her excitement as well as that of a few viewers to be quite endearing.\n\nAlong the way to the goal, the tips fell one by one. \n\nThere was the one where Mackenzie sucked her toes. Strangely arousing. \n\nThere was one where she pulled her panties aside, fingered herself for a few moments, and tasted herself on her fingers. \n\nThere was one where she went on all fours and parted her legs, giving the camera an unobstructed view of her pussy and asshole.\n\nInstantly after doing this, came another one which was very timely, since her ass was already in place when she gave herself ten spanks.\n\nFinally came the last one: fingering her butt. It was quite timely, since it helped her to stretch the muscles there for the main event. Mackenzie turned around and got hold of a large pink dildo with a suction base, which she made a show sucking with great skill. Then, turning back to her original position, her ass pointed to the camera, she started to press it into her bottom.\n\nHer rose bud fitted it in without many constraints, as the beautiful girl on his laptop screen clearly was accustomed to it. Mackenzie moaned freely as she impaled herself on her toy, the hand that wasn't holding it finding its way to her swollen clit.\n\nThen, letting it pop free, she placed the dildo on her bed, standing straight up, and went off camera in search of something. On her return it appeared, the vibrating magic wand.\n\nLowering herself back down onto the pink dildo, Mackenzie let herself bottom out on it with a sigh. Then, she clicked a button on the wand until a faint buzzing noise could be heard through her microphone. She pressed the wand to her clit, and started to ride the dildo using her legs.\n\nUnlike before, the purple haired girl was no longer in a chatty mood. Once the main event started, she became an entirely different performer. And performer was the right word. She appeared to have decided to act as though she were merely masturbating and the more than five thousand people watching weren't known to her, just getting a sneak peek of something they may not have been intended to watch. It was all fantasy, and it worked brilliantly.\n\nThe look on her cute face as well as the soft squeals that escaped her lips as she rode the dildo were making him feel his cock fighting against the restraint of his pants. It occurred to him he was probably meant to masturbate as he was sure the other viewers would be doing, but Jarno wanted to enjoy this first experience of Mackenzie's cam show without distracting himself.\n\nMackenzie suddenly stilled, the massive shaft all the way inside her and spasmed wildly, as if electricity was shooting through her. Her orgasm looked very pleasing, and she took several moments before, in slow motion, she let go of the wand and popped the dildo out of her ass.\n\nShe giggled at a few of the comments left by viewers, and stayed for about twenty more minutes to casually chat with those who stayed despite her having already orgasmed, and gave the camera a kiss before logging off.\n\nEven after the smiling beautiful girl was no longer in view, replaced by a \"Cam Offline\" sign, Jarno found himself staring at his laptop screen. There were questions floating around in his head. Should he care that literally thousands of people had seen the body of the girl he'd made love to the night before? Did he have any right to care? What was he feeling following this?\n\nIt was much too late to be thinking about these questions for now, so Jarno got into some comfortable pyjamas and went to sleep.\n\n///////////////\n\nAs soon as he passed the door to Mike's Diner, it was clear to him that the large man didn't really have too much trouble getting by. Once more, the place was packed. There wasn't just one type of person visiting either, but a very diverse set of people from all ages. Including a certain girl with purple hair he saw standing out as soon as he surveyed the room.\n\nMackenzie was sitting in one of the diner's corners, at a little corner booth that looked only big enough for two people. Her hair was arranged in cute looking pigtails, a white t-shirt with an anime character stamped on it over her torso, and a short skirt and black school girl leggings on her legs.\n\nIt was only now that Jarno realised she had been dressing more conservatively the previous days. Was she doing it to seem more \"normal\" to him? He hoped not. The fact that she was a little \"out there\" was one of the major reasons he found her to be so alluring in the first place.\n\nHer gaze was on the movement in the streets outside, and she only noticed him when he was close. A smile adorned her lips.\n\nJarno felt the familiar warm feeling inside him as he returned the smile and sat down next to her. He traced a finger on her cheek absent-mindedly and kissed her.\n\n'Hi.'\n\n'Hi.'\n\nThey stared at each other. Then they both gave out little laughs.\n\n'So, how was your day?' Jarno asked.\n\nMackenzie appeared to consider replying something sarcastic, but didn't. 'It was good. I had some prep work to do. What about you? How was your day, darling?' She reinforced the final word with a British accent.\n\n'It was... pretty boring. I had my final meeting here, before I have to go back home.'\n\n'You're leaving?'\n\nHer question was made with a tone of disappointment that made Jarno feel several feet tall.\n\n'The day after tomorrow.'\n\nJarno could tell this clarification didn't make her any happier. It was depressing him as well. But it was inevitable. The new season was starting and being away from the factory was not an option he could take. Thinking about not seeing this amazing girl for months was soul crushing even though he was still right next to her.\n\n'Did you enjoy the show last night?'\n\nHer change of topic left him silent for a beat. Maybe she didn't want to spoil the mood by talking about their future... Making sure he stopped overanalysing it in his head, Jarno moved along as well.\n\n'You were in it, of course I did.'\n\n'Flattery will only get you so far...'\n\n'How far?'\n\n'Pretty damn far in this case.' She whispered back conspiratorially.\n\n'Okay, what if I said: you were in it naked, of course I did...?' Jarno asked playfully.\n\n'That would be even better.' Mackenzie smirked with mischief. He was much happier to see her like this. Enough to make him reconsider bringing up himself leaving again.\n\n'Please, Mac, I've just eaten.' Mike said with an air of queasiness as he stood next to them and their display of intimacy.\n\n'Which of the fourteen meals you take a day have you just eaten?' Mackenzie turned to him, without any trace of malice.\n\n'Third dinner, most important meal of the day.' He replied, without any trace of being upset. 'What are you and pretty boy gonna get?'\n\n'Steak of the house for me, Mike.' Mackenzie ordered.\n\n'Same for me.' Jarno followed.\n\nMike paused to look at him.\n\n'Do you always just agree with everything she says?'\n\n'When I don't I quickly get told why her opinion is the right one, so I just don't bother anymore.'\n\nThe diner owner laughed, as Mackenzie protested. 'Hey! I mean, it's true, but hey!'\n\n'Second point for pretty boy...' Mike muttered to himself, amused, as he walked back to the kitchen.\n\n'You're growing on him, it's quite frightening, actually.' Mackenzie commented with a raised eyebrow.\n\n'I can't turn off my charming personality whenever I wish.' He replied with a fake smug look. 'It is both a blessing and a curse.'\n\n'Clearly.'\n\n'Do I detect a note of sass?'\n\n'Would I ever do such a thing?'\n\n'Yes.'\n\n'Scoundrel.'\n\n'Weirdo.'\n\nShe flashed him with a strangely shy smile.\n\n'I'm going to ask you something, but it's not going to mean what you think it means.'\n\n'Shoot.' He said, going with the flow as he often did when in her company.\n\n'Do you want to come over to my place after dinner?'\n\nJarno took a moment before replying.\n\n'So, it's not going to mean what I think it means...' He paused, with an intrigued expression. 'Should I be offended that you assumed I would assume something dirty out of that?'\n\n'I said it wasn't what you would think, you were the one who assumed I would assume you were assuming something dirty. Which makes you the dirty one.' Mackenzie stuck out her tongue to him.",
        "Jarno was finding her quite endearing at the moment. 'What did you mean, then?'\n\n'Like I said, I've been doing prep work all day. For my show. I was wondering if you wanted to see the show live this time.'\n\n'Live, as in being in your room as you do it?'\n\nMackenzie nodded, her expression giving nothing away.\n\n'Why?' He asked. 'Does it excite you to have someone in your bedroom as you do it?'\n\n'I don't know, never done it before.'\n\nThe response floored him. She's never asked someone to watch her. Reigning in his enthusiasm, Jarno managed to continue in a normal voice.\n\n'I'd love to see it live.'\n\n'It's going to be different than the other one.'\n\n'Different how?'\n\n'Hailey is going to be on cam with me.'\n\n'Oh.'\n\n'She's a cam girl, as well.' Mackenzie explained, confirming Jarno's suspicion.\n\n'I figured she would be, to be comfortable enough to be on cam with you like that.'\n\n'Well, regardless of her job, she is a huge sex hound, so I'd say she would do it even if she wasn't camming.'\n\nJarno let the sentence sink in.\n\n'You have told her, right? About me seeing, huh... the both you doing... stuff?'\n\n'She doesn't mind.' Mackenzie snorted. 'Understatement of the century. She practically started jumping up and down at the idea of showing off in front of you...' She raised an eyebrow at Jarno's flush. 'Come on! Don't tell me you didn't notice! Hailey hasn't been exactly subtle about wanting to jump your bones...'\n\nJarno grunted, hoping the purple haired girl didn't notice his excitement at her words.\n\n'You know you can just fuck her if you ask her.' She continued.\n\n'What? You're okay with that?' He asked, stunned.\n\nMackenzie shrugged. 'I'm fucking her; why would I have a problem with you doing it? She's ridiculously hot and I can't testify that she wiggles nicely when she's cumming.'\n\nThis girl was such a contradiction. On one hand, she confessed to him that she'd never previously asked anyone to watch her cam show. One the other hand, she urged him to have sex with her best friend. Who she was also having sex with. Did she not feel jealous about sharing him? If she only cared about him as a fuck buddy she wouldn't. This is fun. This is pleasant. Stop overanalysing it, he told himself.\n\n'I just want to be with you.' Jarno said, truthfully.\n\nMike appeared with their orders, which distracted Jarno from Mackenzie's intrigued stare.\n\n///////////////\n\nThe blonde girl let her hands grab fistfuls of purple locks, pulling forcefully on the other girl's head until it was tipped back completely, before flattening her tongue over the exposed throat. She explored every inch, until the pale skin was covered in her saliva. Then, she hungrily invaded her friend's mouth, drawing a muffled moan from her.\n\nAs Jarno watched the two beautiful women going at it from just a few passes away, he couldn't quite believe to have been given a chain of events that would lead to him experiencing this.\n\nFollowing Mackenzie to her home, Jarno had witnessed as the gorgeous girl and her roommate set up the camera in Hailey's room. Throughout the entire prepping, Hailey kept wiggling her butt in front of him, as well as giving a few pulls on her top to expose her abs. She also made sure to leave a few suggestive comments hanging in the air.\n\nOnce everything was set up and the time for the start of the show was reached, Mackenzie directed Jarno to sit down on a chair alongside the camera.\n\n'Enjoy the view.' She whispered to him. 'You know; you can jerk off if it gets too tight in there.' He felt her trace her fingers over his penis. Behind her, Hailey was watching them intently; looking right into Jarno's eyes as she seductively sucked one of her fingers into her mouth.\n\n'I'll just stick to watching for now.' He replied. Mackenzie shook her head with a smirk and Hailey made a childish pout.\n\nThe show began, and their online room was quickly filled with people, who, as he'd been told by Mackenzie, had seen the announcement for the GG (Girl on Girl) session one month ago.\n\nJust like Jarno had witnessed the previous night on his computer, the cam girls spent the first few minutes just chatting with their audience about the most mind-bogglingly varied themes. It was quite obvious why the two women had gotten to be such good friends, since they seemed completely at ease with each other. So much so, that at one point Jarno felt a little awkward, as though he were intruding on a private moment. They were broadcasting said private moment to literally thousands of people, so he reassured himself it was probably just in his head.\n\nDing, ding! The first tip rolled in. \"Hailey and Mac: Kiss\". And so the enticing spectacle of the two girls in heat had started.\n\nGasping for breath they parted. Mackenzie's neck was shining from the sweat and saliva there. She took one look at him, wearing what he was fully aware to be a cartoon like open-mouthed stare, and she stifled a smirk by biting her lip. A knowing look was also on Hailey's face. He was quite annoyed to get caught being so worked up at the sight of two girls kissing like a horny teenager, but couldn't help himself. He'd also noticed the blonde girl had a tongue stud.\n\nFrom that point onwards the tips rolled in at a steady pace. And every time they did, a new prize was awarded, completing a list very similar to the one Mackenzie had used at her anal show.\n\nAfter their display of tongue mashing there was a tip for \"Mackenzie Doggie\", which turned out to be her going on all fours and removing her skirt and panties, affording the camera with a view of her shaved pussy and butthole. Jarno was enjoying looking at the delicious goods on display, musing excitedly that he'd been buried in one of them.\n\nHailey, of course, teased him further by parting her friend's butt cheeks, before biting down on one of them. Mackenzie yelped and Jarno groaned.\n\nThen, it was Hailey's turn to remove clothing. She took off her shirt. Her pale small breasts were there for Jarno to behold and he was very much loving it. They were very perky, tear drop shaped, and her nipples were tiny and shooting straight out erect, both adorned by small piercings. Above them was tattooed a blue anatomically correct heart with equally blue wings, a few drops of blood dripping from it.\n\nHe felt a sudden urge to grab the perky tits, but Mackenzie was the one who did it. That didn't satisfy her for long, though, and suddenly she started to nurse on the blonde girl.\n\n'Oh, that feels so good, Mac. I guess, with all that practice...' Hailey moaned, licking her lips at Jarno. It was obviously said to inflame him, as a muffled laugh escaped from Mackenzie's closed lips. Hailey's arms, he now realised, almost didn't have any of her pale skin left. Betty Boop was on her top left arm with skulls and fire on the forearm, and a naked fifties pinup girl on the top right arm with a set of roses on that forearm.\n\nJarno's cock was actually hurting from how hard it was against inside his pants. He really wanted to help ease some tension, but refused to masturbate in front of them. Not because he thought they would mind. On the contrary. He just didn't want to give Hailey the satisfaction of winning that particular battle of wills.\n\nSuddenly, and much too soon for Jarno, the board of tips was cleared by the viewers. He was expecting the goal to be something like Mackenzie's show, but instead he read on the screen what it said. \"Strap-On Show\". \n\nA mental image of Mackenzie sitting in her kitchen wearing only his shirt popped into his head. Such as sucking the girls, Her hands on her enormous boobs. Such as licking my pussy, Her hand over the end of her shirt. Such as fucking me with a strap-on...\n\n'Okay, guys, you know the drill.' Hailey told the audience. 'You have two options: either this lovely lady gets to fuck me,' She put an arm around Mackenzie, which made both their boobs jiggle. 'or she gets to fuck me. So, go and vote!'\n\nJarno noticed that where the original goal had been written were now the two goals described by Hailey. From what he gathered, people could give tokens to their favourite goal and the first to reach five hundred tokens would be the one the girls would perform.\n\nAs they gave everyone time to tip generously, Hailey and Mackenzie were no longer concerned with putting on a show for Jarno or teasing him. They'd gone into full-on erotic mode, mashing their bodies together. The blonde girl was lying on top, slowly humping their privates together. Jarno could see that her legs were also inked up, but couldn't really tell what the design was.\n\nTheir display reminded of Jarno of Mackenzie's show the day before. Somehow by focussing on making it feel good for each other, without worrying about how excited the audience was, made the spectacle even better for everyone watching.\n\nThe pinging sound of tips filling the room mixed with the soft moans from the bed. Tongues were sucked, breasts were thoroughly pawed, and pussies received oral attentions, and all the while Jarno felt his knuckles turn white as he fought the urge to grab Mackenzie right there and then and fuck with her. And, if he was being honest with himself, so too did he want to do that with Hailey.\n\n They shifted themselves until they were in a 69 position. Mackenzie's face and Hailey's rear were staring right at him. The purple haired girl smiled at him. Jarno felt himself grin back like an idiot and, never breaking eye contact, she started to lick all around her friend's pussy.\n\nHailey was shaved and there was \"tink\" noise when Mackenzie's teeth bumped against the clit hood piercing he now noticed for the first time. Her small tight butt had just as much appeal as Mackenzie's curvy one. Her slit was quite thin, but it was giving way with ease to the tongue that was assaulting it.\n\nSuddenly, Mackenzie bit down on the blonde girl's clit, and Jarno nearly came for two different reasons. First of all, because he could see that his lover's lips were glistening from her friend's juices. And also because Hailey let out an animal like growl and arched her back, revealing a swarm of tiny bats on her lower back.\n\nAs if on cue, one of the objectives reached its token target. \"Use Strap-On on Mackenzie\" had won.\n\n'Yes, I'm gonna get you back for that, you bitch!' Hailey shouted, jumping from the bed to get the strap-on, Jarno assumed. Mackenzie licked her lips and winked at him.\n\n'Have we convinced you to join in yet?' She asked him, after moving closer to him so that the camera didn't pick up on the fact that there anyone in the room with the two women.\n\n'Ask me again in a little while...' He replied.\n\n'In a little while, you may not be this hard.'\n\nHer hand pressed his cock, over his pants.\n\n'Trust me, staying hard isn't going to be a problem.'\n\n'Good, I may want a midnight snack...'\n\n'Mackenzie! Stop getting distracted and get your ass over here!' Hailey commanded. Jarno managed to not stare like an idiot, but it was close. She had put the strap-on on, and it was quite the sight. It was large realistic looking dildo, with a light skin tone, just like her. 'We've got a show to do.'\n\nDistancing herself from Jarno again and going back into camera shot, Mackenzie went on her hands and knees until she was face to face with Hailey's fake cock. The blonde girl waited, resting on her knees.\n\nGrabbing the cock with a hand, Mackenzie wanked it up and down, with a look of polite amusement. Then, never looking away from her friend's eyes, she slowly pushed it past her lips and kept going and going, until she was at the strap-on's base, before going back for air, gasping.\n\nShe slobbered, sucked and licked the fake cock in such a way that Jarno felt sorry for Hailey for not actually feeling Mackenzie's prowess with a cock. He himself could testify to how good it felt.\n\n'That's good enough, sexy. Turn around.' Hailey ordered Mackenzie, who complied, spinning around to face the other direction. The blonde girl instantly cupped her friend's voluptuous rear in her hands. 'Such a good tushie...'\n\nWithout warning, she removed the hands and slapped both cheeks hard. Mackenzie whimpered but before it was out of her lips, Hailey plunged forward, burying herself in her pussy to the hilt. The whimper turned into an animal like growl, which made the hairs on the back of Jarno's neck stand on end.\n\n'I told you I'd get you back for that bite!' Hailey said, with visible glee.\n\nThe sight of the two women engrossed in their love making was an erotic sight unlike any other Jarno's mind had ever fantasized about. Mackenzie gave herself up to Hailey completely, growling like a wild animal as she went backwards and forwards on her knees, not content with merely letting her friend have her way with her. Hailey kept her hands on her friend's butt though. Just like him she seemed fascinated by Mackenzie's breasts, feeling them up occasionally.\n\nThey were at it for quite some time, making all the right movements and noises for their pleasure, as well as the audience's. Which included Jarno, watching in the same room. He was feeling his pants becoming tighter again, as his stranded erection begged to come out.\n\nMackenzie was getting close, he realised. Sweat covered her face, her hair was a complete mess and her eyes were narrowed in concentration... or deliriousness. He wasn't sure. Hailey grabbed hold of the camera and, avoiding getting Jarno in frame, filmed the dildo going into the depths of the purple haired girl's pussy.\n\n'Get it out...'\n\nIt was barely audible and Jarno took a moment to understand Mackenzie was addressing him.\n\n'Get it out, please...'\n\nHe didn't need any clarification as to what he was meant to get out. But there was no way he could show himself on camera. If nothing else, his sponsors and his team bosses would kill him.\n\n'They won't be able to tell it's you.' She continued whispering to him, shifting with Hailey's thrusts. 'They'll just see a dick. How many dicks do you think there are on the internet? Please, I want it...'\n\nHailey had put the camera back in its place and was listening with some curiosity to the exchange. Her small breasts were jiggling wildly as she ploughed into Mackenzie.\n\nFeeling as though he were in a dream that couldn't possibly be unfolding in reality, Jarno got up and unbuckled his belt, never looking away from Mackenzie's elated face. His cock was released and stood rock hard right in front of her face for one brief moment before instantly being engulfed into her inviting mouth.\n\n'Oh yeah, we forgot to mention...' Hailey told the audience looking directly at the camera and making sure the blowjob was in shot, yet never stopping the movement her hips. 'We have a guest here with us today. Mac's found herself a boy toy!'\n\nJarno snorted at Hailey's description of him, but didn't really dwell on it. Mackenzie's mouth was way too distracting, doing just as good of a job as before. After a couple of hours of teasing, his cock was finally finding some release and his senses were overwhelmed.\n\nMackenzie moaned with increasing intensity, as the cock in her mouth coupled with the dildo in her pussy seemed to be tipping her over the edge. Hailey leaned forward until her boobs were mashed against her friend's back and she was humping her like a dog with quick movements.\n\n'Come on, baby...' She cooed to Mackenzie. 'I know you're nearly there. Your juiced are running all over your legs. And it's not just me. Everyone at home is looking forward to see you cum with that nice thick cock in your mouth while I'm fucking you...'\n\nHer words finally tipped Mackenzie over the edge, as she tensed completely and shrieked wordlessly. For a moment she tensed her jaw as she shook, but fortunately she realised what she was doing and took him out of her mouth, grabbing him firmly against her cheek as her body twitched with the aftershocks.\n\nHailey soothingly rubbed the sides of her friend, staying buried to the hilt in her pussy. Her chin was resting on Mackenzie's shoulder blades, but her eyes were completely locked on the cock that was just a few inches away.\n\nSlowly returning to normal, Mackenzie softly kissed the rock hard shaft that was against her face, leaving a trail from the base to the tip before finally releasing him and turning her head back as much as she could to share a deep kiss with Hailey.\n\nShe also whispered something to the blonde girl, which was inaudible to Jarno. Whatever it was made Hailey look delighted and ask something he didn't hear either. Mackenzie just nodded, removing herself from the strap-on with a wet noise and laying down on her back to the side.\n\nBusy watching her, Jarno froze in place when he felt Hailey's hand wrapping around his erection. His first instinct was to push her away but then he noticed Mackenzie looking at him intently. She was struggling for breath a bit still, but her eager nod in his direction was unmistakable. She wanted to watch Hailey blow him...\n\nIf Hailey had noticed his initial reservations she hid it well. Her hand travelled up and down, as she interestedly watched Jarno's foreskin covering and uncovering the head of his cock. He gasped loudly when the squishy sound provoked by Mackenzie's saliva on it reached his ears.\n\nThe blonde girl appeared to understand he could not last very long having been tended to by her friend as well as their show for quite some time, so she got down to business quickly, engulfing him with a giggle, which gave him a weird yet pleasing sensation in his cock.\n\n'I don't think you're gonna last very long, lover boy.' Hailey grinned up at him, coming up for a few seconds before plunging back down again, her small hand gripping the base of his shaft. Jarno had been worked up by the two girls for a long time but he tried to relax himself because he wanted to enjoy Hailey's mouth a little longer before he couldn't hold it any longer.\n\nNow he knew Mackenzie was right: Hailey was good. Really, really good. She was yet to experience her own orgasm, seemingly taking pleasure in giving first Mackenzie and now Jarno their own orgasms without any concern for her own. His eyes travelled down her face to her breasts and belly. That's a damn sexy belly. You should see it when it's squirming, when I make her cum. Mackenzie's words rang true at that precise moment. And her tongue stud was touching him in all the right ways.\n\nThe sudden realisation that his lust for Hailey was overcoming him made him glance concerned to what Mackenzie would make of all this. But he needn't have worried. The purple haired girl seemed to be having the time of her life, watching Hailey's blowjob with interest.\n\nCatching Jarno looking at her, she smiled with glee and got on her knees next to her friend. Getting underneath Hailey's chin, Mackenzie stuck out her tongue and made contact with his balls.\n\n'Fuck!' He cried out, quickly following it up with a moan as she sucked his scrotum into her mouth. Hailey hadn't stopped working on his cock either and the combined efforts of both friends were making his self-control slip completely.\n\nHailey's tongue just didn't stop in place. It was constantly sliding around his head, teasing from different angles. With a loud slurping sound, she pulled him from her mouth, a string of saliva connecting his penis and her lips. He could tell she was deliberately avoiding breaking it as she flashed him a fake innocent smile. It was move straight out of a porn movie, but her flawless execution of it would have left many porn stars jealous.\n\n'Liking everything so far, stud?'\n\nJarno nodded quickly, feeling a little ridiculous and making Hailey giggle.\n\n'Let me know when you're about to go off. I want to try something.'\n\n'Okay...' He replied with a groan as she put him inside her mouth again. Though only his waist was picked up by the camera, he suddenly remembered that it probably wasn't a good idea to speak while it was on.",
        "During the exchange, Mackenzie never stopped sucking on his balls, which now felt completely drenched. Maybe he was exaggerating the feeling in his mind, but his senses were too overwhelmed. In fact, it only took Hailey four bobs of her head to put Jarno to the point of no return.\n\nHis nails dug into the palms of his hands and he barred his teeth, yet he managed to give the blonde girl two warning taps on the shoulder.\n\nShe quickly got off and pushed Mackenzie from her oral pleasuring of his bollocks until she was also staring right at Jarno's penis where Hailey's right hand was jacking him off furiously. Both girls were grinning up at him, their cheeks pressed together.\n\n'Go ahead, lover boy! Come on! Cum all over our faces...'\n\nThe words coupled with the image of both girls looking at him with their mouths open wide was the last straw. With a deep-throated bellow, he felt himself erupting. His hot seed splashed against Hailey's face before his cock was directed at Mackenzie and hit her as well. Hailey's hand made his rock hard member shoot both her and her friend in equal amounts.\n\nAn incredible amount of sperm was covering the two beautiful faces before Jarno was finally out. They took a deep breath at the same time, the liquid travelling down to their necks as they did so. Looking to each other they giggled, before making sure the camera was getting a good view when they fell onto each other's lips.\n\nTheir arms wrapped around each other and their different sized chests pressed together. His cum was being rubbed and smeared across their skin. It was an incredible sight Jarno knew he'd never forget in his life, as he let himself pop out of shot into his chair again.\n\nMackenzie was the first to break the kiss and began kissing, sucking and nibbling her way across Hailey's face, not letting a single drop of Jarno's seed remain there. Her mouth then moved to her friend's neck, before descending further to her petite chest, where her tongue moved over the erect needful nipples.\n\nNot for the first time that day, Jarno felt an urge to nurse on Hailey's small perky bosom. Though completely different from Mackenzie's large one, it certainly had an irresistible appeal to it. He felt a little disloyal for his thoughts, but he remembered that the girl with the purple locks had been the one to insist on him doing this, and judging by her enthusiastic response after his orgasm she hadn't changed her mind.\n\nNow, Hailey was the one to push her friend backwards, and repeat all of the kissing, sucking and nibbling. Very soon there wasn't a single evidence of Jarno's gigantic orgasm on either of them. They were still moving together, though.\n\nIt was unmistakable from where he was watching that Hailey was grounding her pussy on Mackenzie's. The blonde girl had given both of the other two incredible orgasms, so she was understandably craving her own release.\n\nMackenzie raised one of knees. 'On my thigh, please. I'm way too sensitive there, baby.'\n\nHailey shifted her position and humped her friend's leg with abandon. She kept her eyes shut tight, as she mewled with her building pleasure. Mackenzie took her nipples between her fingers and pulled on them.\n\n'That's it, babe.' She cooed to her friend. 'Hump that leg. You've earnt it today! You fucked my little pussy so well...'\n\n'Agh!' Hailey croaked out when a pleasure spike hit her.\n\n'And you got to blow the stud you've been craving since you met him. Didn't you?' The blonde girl didn't respond, still focussed on her humping. 'Didn't you?' Mackenzie asked again, pulling harder on the nipples.\n\n'Yes!' She reacted loudly.\n\n'And he came all over you. You loved the taste of his cum, didn't you?'\n\n'Yes!'\n\n'But you still want him to fuck your pussy...'\n\n'Oh, yeah...' Hailey sped up her grinding, and Jarno felt the hairs on his neck stand on end again as the squishy sound of her wetness on Mackenzie's legs reached his ears.\n\n'You want him to cum right up there when he's buried in you, huh?'\n\n'Yes! Yes! Yes! Fuck!'\n\nHailey's entire body rocked the both of them, as she shook with the aftershocks of pleasure that coursed through her, until she finally slumped back onto her friend.\n\n'So that was different than usual, but I think you guys aren't complaining are you?' Mackenzie asked the audience, looking into the camera.\n\nThe chat section clearly agreed, as Hailey purred like a content kitten.\n\n///////////////\n\nMackenzie couldn't stop giggling.\n\n'You're dancing...' She told him for the forty-third time in the past hour.\n\n'Very astutely observed.' Jarno replied, his arms at her waist, feeling happy.\n\nIn the morning he would have to go and catch his plane, but tonight, by Mackenzie's suggestion, they'd gone to a club. They had spent every second of their time on the dance floor, glued to each other and drinking freely. Almost freely. Jarno didn't want to spend five hours of flight hungover so he'd stopped buying drinks about an hour before.\n\nMackenzie had not, and since he was almost sure she was one shot away from being sick, he told her they should go home and sleep.\n\n'Noooo... Aren't you enjoying this?' She slurred the words slightly and ground her crotch against his not too subtly.\n\n'I am enjoy-'\n\n'Your hands on my body, me caressing you... On second thought, you're right, let's go home, I want to fuck your brains out.' Without any hesitation, she pulled him to the exit, before pulling over a cab and tumbling in.\n\nIt was potentially the weirdest cab drive of Jarno's life. First, Mackenzie had greeted the cabbie with a grin so large he must have thought his body would be found at the bottom of a river, after being decapitated. Then, she had not so silently insisted on getting in Jarno's pants. And when that hadn't worked, she made sure she described in detail what she would do once they were home.\n\nOnce the cab stopped in front of her building, she actually skipped across the pavement to the front door. Jarno paid the man and apologized for the spectacle.\n\n'No worries, man. Sounds like you're in for a ride, dude!' He told him, with a grotesque smile.\n\nFeeling slightly uncomfortable, Jarno helped Mackenzie up the stairs, before closing her apartment door behind them.\n\n'Okay, sex me up.' Mackenzie said, leaning against the wall in what she obviously assumed was a seductive pose.\n\nOh, Christ...</span></p>\n\n'Okay, Mac, come on, we need to sleep...'\n\n'We can sleep once we're dead.' She informed him, clumsily grabbing and kissing him. The taste of gin met him, slightly too intense. Not wanting to have to bother with arguing with someone who was completely pissed, he discreetly moved the both of them into the bedroom.\n\n'Where's your sleeping clothes?' He asked, sitting on the bed.\n\n'I don't have them.' She grinned at him, even though he knew she had a sports bra and shorts to sleep with. 'I like being naked. Do you like me being naked too?'\n\n'I like you all the time.'\n\n'Aww, you're so sweet... I think you've earned a nice reward.'\n\nHer hands tried to reach for his belt but he pulled them away.\n\n'Stop.'\n\n'Why?'\n\n'Because you're drunk, Mac.'\n\n'No, 'm not.' She slurred.\n\nHe sighed. 'I bet you can't even tell the time right now.'\n\n'Yes, I can.' She turned to her alarm clock. 'I'm not drunk, dude.' She informed it.\n\nTrying his best to stifle his laughter, Jarno covered his face with a hand. 'That, uh, that was very literal, honey.'\n\n'Thank you. Can we fuck now?'\n\n'No!'\n\n'What's the problem with me being drunk?'\n\n'You probably won't even remember it tomorrow morning.' Jarno told her, not understanding why she was making his refusal seem petty.\n\n'But you will. Besides it's not like you're not sure if I really mean it when I say I want to fuck you! It's not like I've been a nun around you every other time.' Mackenzie petulantly told him.\n\n'Mackenzie, say whatever you want. I am not going to have sex with you tonight.' He said, no longer playful.\n\nIt seemed to shake her out of her drunken playfulness. Jarno turned and began to undress himself until he only had his boxers on. When he looked back Mackenzie was still in the same spot, looking at some far away point in the corner of her room.\n\n'You're not going to come back. That's why I wanted to fuck you tonight.'\n\n'What?' Jarno asked, confused.\n\n'Deep and meaningful people only fuck someone like me to have a nice story to tell about an adventure. We both know there's not going to be a next time.' Mackenzie told him, not sad or emotional in any way, but in the dispassionate tone drunks used when they were unknowingly emptying their true thoughts. She was swaying, unable to maintain her sitting position for long.\n\nHe kneeled in front of her, so that she was looking slightly down at him.\n\n'You're not a story for me to tell, Mackenzie. First opportunity I get I am coming straight back here to knock on your door, because quite frankly I can't get enough of you.'\n\nHer eyes searched his face for a few seconds before she giggled.\n\n'Did you just tell me you're in love with me?' Mackenzie giggled some more and let herself fall down on the bed. 'Oh man, I'm way too drunk to remember it tomorrow...' She looked up, her over-the-top excitement back. 'Are you sure I can't at least blow you or something?'\n\n'Sleep.' Jarno told her, smiling at her.\n\n'Fine.' She mumbled, before taking all of her clothes off and lying her head on her pillow. 'C'me 'ere...'\n\nConcerned for what she would try to pull Jarno complied wearily but needn't have worried: she buried her nose in his neck and instantly fell asleep.\n\n--------------------\n\nMid-Point\n\n--------------------\n\n'Give me one more.'\n\nThe barman eyed her wearily. Mackenzie was almost sure he was taking in her clothes and wondering if she was actually over twenty-one, and therefore allowed to drink. He appeared to prefer not to know and gave her another shot.\n\nShe looked at it, using her index finger to absent-mindedly trace the top of the shot glass. It was a shaky image, probably because she was quite over her usual drink count. Maybe even more than when she went dancing with Jarno.\n\nNope, not thinking about him. He was the reason she was drinking away her evening today. Fuck him, fuck him coming back today, fuck him. Stopping her fiddling with the glass, she took it and drained it in one gulp, grimacing as it went down. And fuck me for getting Prince Charming fantasies like a stupid little girl.\n\nOne month after dancing drunk with Jarno, Mackenzie wasn't sure what had come over her for the time he'd been around. Her mind convinced her it was absolutely impossible to be a future there. That any reasonable attempt at something more with him was a stupid na\u00efve idea.\n\nOf course the fact that sex with him had been amazing had clouded her judgement. She could tell this, now that she wasn't blinded by his closeness, his kisses, his caresses... Snap out of it!\n\n'Another!' Mackenzie ordered again, a note between her fingers. The note was removed and another drink was placed in front of her.\n\nJarno had confided in her that he'd had a high school sweetheart of sorts. Mackenzie could imagine two inexperienced Italian teenagers slowly learning how to please each other and falling in love. It annoyed her. That kind of man wasn't going to give up that lifestyle to adapt to hers.\n\nWhat was she expecting? The next time he had a gala she would be his plus one? The F1 driver and the slut. Wouldn't that have made for a dent in his public image. A dent he'd never take. He'd had an out of character adventure and would now move on.\n\nMaybe in a few years' time, when he would be happily married, to some swimsuit model or actress, he and his wife would share with each other, after a fun night at a fancy dress party, their early dating alternative relationships and Jarno would mention the tattooed cam girl with the torrid romps and the blowjob with her tattooed and pierced friend. And the wife would giggle, stunned by his audacity and make drunken love to him.\n\nAnother glass drained, another grimace. Instantly a fresh one was placed alongside the empty one.\n\n'Good, you're learning.' She informed the barman, searching for money.\n\n'Actually, it's an offer from the guy over there.'\n\nFollowing his finger, she saw a random twenty-something smiling her way. The wild sleazebag follows the scent of sad looking drunk girl...\n\nShe grabbed the barman's arm. 'Give it back to him. Then, bring me a drink I'll pay for.'\n\n'Do you want me to tell him something?'\n\n'Tell him I'd sooner have the dicks of the three guys next to him in my mouth than the drink he offered.'\n\nHe laughed, shaking his head and returned the drink to the man, who looked stunned at her. She flipped him off and he angrily left the bar, as Mackenzie returned to her silent musings.\n\n Mackenzie had kept receiving texts from Jarno for a while, talking about mundane things and just showing polite interest to not appear sleazy, or like he was fucking her and leaving, she'd guessed.\n\nShe was sure of this right to the day where she'd opened her front door and saw him again for the first time since that drunken dance. Today.\n\nHey was the only thing he told her before he kissed her, and she stiffened in surprise, wide-eyed. I've missed you was the second thing out of his mouth. Jarno appeared to take her stunned, speechless self as something he'd expected from his surprise appearance.\n\nShe eventually found her voice and they ended up going for a walk, his hand taking hers along the way. Mackenzie realised they'd never done that before and that just overall he was behaving much chummier than the last time they'd met.\n\nThe new shot glass appeared and she took it instantly.\n\nAs they had sat down outside a small coffee shop, Mackenzie was assaulted by a concern she'd also had just after he left. She remembered the drinking and the dancing, and how she wanted him to fuck her. She had a few disperse images of him refusing (because of course he did, the cock blocking shit, served her right for thinking fucking deep and meaningful was a good idea), but was almost certain they'd talked about something more but couldn't find it in her brain.\n\nHer concern for what she could have possibly said during those minutes had fuelled the days after he was gone. There hadn't been a chance to try to ask him what it was, because she'd slept through the morning and found only a note saying he'd waited as long as he possibly could but that he'd had to leave or miss his flight.\n\nJarno being back, his behaviour and the forgotten conversation suddenly clicked and made sense. She'd seen it before, the \"nice guys\", smugly wanting to \"save\" her. It hurt her more than she was prepared to admit that Jarno was in that category. Her stupid mind had tricked her into believing a hopeful stupid fantasy. A fight ensued very easily after that, as she lashed out in anger with herself and him.\n\n'What do you think this is, Jarno?' She'd asked.\n\n'This...? What this is?'\n\n'Yes, what do you think is happening here? That I'm going to see the error of my ways and give up on camming because of you?' Her tone was harsh; she was angry with herself for only realising then how much she liked him. It had created a blind spot for something Mackenzie should have foreseen.\n\n'I didn't think anything about the future!' He reacted, his brow furrowed, perplexed at the change in mood.\n\n'Because let me tell you,' Mackenzie had continued, ignoring him. 'this is not the first time someone's tried to \"save\" me.' She made a gesture with her fingers. 'Do you think you're the first person that I've fucked like that? Do you think you're the first person I've fucked with Hailey?  That you're so special, huh?'\n\nHe seemed lost for words, but growing fury came to his aid.\n\n'That last night when we danced you told me that...'\n\n'Let me guess.' She cut him off. 'I either told you that I just had to have you or that I wanted one last fuck with you because you'd never return. Maybe both. I was trying to get laid, of course I said that!'\n\nThe lie came easily; such was her anger.\n\n'So, what, you're going to be camming in your sixties?' He'd asked scornfully.\n\nMackenzie leaned forward feeling her face form a scowl of pure rage.\n\n'That's right! And I'll be the best sixty-year-old woman fucking herself for the pleasure of an anonymous audience in the world!'\n\nShe got up and stormed out.\n\n'Mac, wait-' Jarno followed and she'd felt his hand on her arm.\n\n'Do not fucking touch me!' Mackenzie shouted and he let go instantly, as if he'd burned himself touching her. 'We're done.'\n\nWhen she turned to leave, Jarno just stood there, watching her retreating form.\n\n'Give me another!' She grunted angrily, back in the present.\n\nThis time the barman looked as though he might argue against it, but, before he could say something, someone put an arm gently across Mackenzie's shoulders and spoke.\n\n'I think that's enough drinks for now, thank you.' Hailey told him.\n\n'No, they're not...' The purple haired girl slurred.\n\n'I'll let you have another one if you can walk on your own.'\n\nMackenzie opened her mouth and closed it again.\n\n'You win this round.' She told her friend, throwing an arm around her to have her take some of her weight.\n\n'See you around, Vic.' Hailey told the barman. 'Thanks for letting me know she was here.'\n\n'Anytime, H.' He replied.\n\n'You traitor, Vic...' Mackenzie muttered under her breath, making him chuckle. 'We're gonna go home and fuck.' She informed Hailey.\n\n'Not while you're drunk.'\n\n'Yes, we are!' The purple haired girl said angrily and way too loudly, her friend's words reminding her much too annoyingly of Jarno's. 'We're gonna go home and you're going to put your strap-on and fuck me!'\n\n'Shhh!'\n\n'I could help you girls out with that if you want, sweetie.'\n\nIt was one of the men Mackenzie had said she'd rather blow than take the angry twenty-something's drink.\n\n'Touch her and I'll break your fucking fingers, fuckboy!' Hailey snarled at him, causing him to take a few steps back.\n\nThey left the bar and walked along the pavement and Mackenzie started to giggle.\n\n'You're so badass!'\n\n'And don't you forget it.' Hailey replied, kissing the other girl's cheek as they went home.\n\n--------------------\n\nPart 3 of 4 | \"Love never dies. It fizzles out maybe but it stays there in your heart buried by emotions controlling you.\" |\n\n--------------------\n\nThere were two very distinct noises as the two girls entered the apartment. One of them groaned as she shuffled her feet towards the couch, falling inelegantly onto it with a groan. The other followed behind, closing the door, and happily skipping along to the kitchen, humming contently as she poured herself a glass of water.\n\n'What are you so fucking cheerful about?' Mackenzie complained, her voice muffled against the couch.\n\n'Wow, Miss Sunshine enjoyed her workout...' Hailey replied.\n\n'What normal person enjoys a workout?'\n\nHailey's reply was to push her onto the floor, taking the vacated space on the couch. She stretched out, with a look of contentment that annoyed Mackenzie.\n\n'You are the laziest shit I've ever known, Mac. One run, that I've had to practically drag you to do, and- Bitch, get off! Bitch, get off! Bitch, get off!'\n\nAlthough Hailey's screeches were meant to sound furious, they came out in a weird unnatural laugh, as Mackenzie had gotten back up and started to tickle her friend under her armpits. The blonde girl tried to buck her off without success, until finally managing to restrain the other woman's arms. They were now with their limbs locked, stuck to each other.\n\n'Nice view...' Hailey commented, her face just under Mackenzie's chest, a large amount of skin visible since she was only wearing a sporty black top.",
        "'Thanks.'\n\n'Your boobs are so good, they're annoying me.'\n\n'Oh, don't give me that! That six-pack seems like a very nice compensation.'\n\n'I had to work for this six-pack, you just happened to naturally grow those melons. In fact, coming to think of it, that's another example of how lazy you are.'\n\nMackenzie started to protest and raised a hand as if to reinforce her point. It was a mistake, since that meant Hailey now had a free arm. She pinched one of the purple haired girl's nipples with just a little too much strength. When Mackenzie gasped and lifted herself slightly to get away, Hailey used both arms and legs to push her over the back of the couch.\n\nFlat on her back, Mackenzie saw Hailey's head appear from the top of the couch with an innocent smile.\n\n'No mercy.' She said. 'Also, you stink. Go shower.'\n\nGrunting and getting herself back up, Mackenzie heard the sound of her roommate turning on the TV on her way to the bathroom. She took off her sweaty clothes, feeling the muscles of her legs ache with each movement. The shower was warm and cosy and she spent way too much time under it before finally drying herself.\n\nGoing into her room, she opened her drawers. She still wanted to go out before going to sleep and so she put on jeans, leather boots and a long-sleeved shirt. Mackenzie had just picked up a beany when she heard Hailey.\n\n'Mac! Mac!'\n\nMackenzie ran back into the living room, thinking something important was happening.\n\n'What is it?' She asked, looking around.\n\nMerely grinning, Hailey pointed to the television screen.\n\nAn image of Nascar cars racing around an oval track appeared. A newsman was narrating it.\n\n'... it was a very close finish in the end, with victory for Tony Stewart. The big talking point after the race was the incident between Greene and F1 driver Jarno Merlo, who was announced as a last minute participant.'\n\nTwo cars were shown in a reply close together. Jarno was in front of the Greene guy, who made an overtaking move that looked straight out of a bumper car track. It ended with Jarno hitting the wall, and Greene continuing without any problem.\n\n'Although unhurt, Merlo was furious with his opponent and launched a complaint with the race director, who took no action. And that didn't leave Merlo any happier, as you could tell by his post-race interview.'\n\nJarno appeared on the screen, looking very menacing indeed, no trace of the natural friendliness Mackenzie had known him to have.\n\n'Basically I've gone to the stewards and they see nothing wrong with shoving someone at two hundred miles an hour into the wall, so there you go...' He muttered with anger.\n\nOne of the men with microphones asked a question. 'John Riley, Greene's team boss said that his driver did nothing wrong, and that you were and I quote \"witnessing real racing for the first time and being out of your depth\". What's your response?'\n\n'John Riley isn't fit to clean any Formula 1 team bosses' shoes, let alone lead an F1 team, so I couldn't give two shits what he thinks.' Jarno replied, with a look of disgust.\n\nThere was stunned silence, before the next question. 'It was always going to be difficult coming into something as different as NASCAR for someone used to circuit racing, wasn't it, Jarno?'\n\nHe turned his eyes towards the man questioning him and stared for a few seconds.\n\n'There are some differences. For example, attempted murder here is called healthy racing. I guess they're so used to using 100% of their brain to turn left, that they neglected to leave some function for common sense.' His tone was humourless. 'Excuse me.' He left, leaving the journalists begging for more questions behind.\n\nThe images continued with an interview with Greene, who was smugly suggesting that the sport was too much for an F1 driver.\n\nHailey whistled.\n\n'Holy shit, lover boy has a dark side... Yummy. Does he, like, growl when you fuck him?'\n\n'Not in my experience.' Mackenzie replied, going to back into her room.\n\n'And, uh, when did you last experience it?'\n\nEven inside her room, Mackenzie could hear the mischief in Hailey's voice.\n\n'I don't kiss and tell.'\n\n'Yes, you do. We always do. Why aren't you coughing it up?'\n\nHaving picked up her beany in her room, Mackenzie went back into the living room again. Her friend was somewhere between amused and annoyed.\n\n'Not for a while.' She told her.\n\n'Why not?'\n\n'It was just a fun casual thing and now it's over.'\n\n'Oh come on...' Hailey scoffed.\n\n'What?'\n\n'The two of you have got it so bad for each other.'\n\n'Had. And now it's over.' Mackenzie completed with finality.\n\n'Bullshit.'\n\n'No, it isn't.'\n\nHailey looked at her with her head tilted slightly to the left.\n\n'Okay, then tell me this. How many guys have you been with since the last time with him?'\n\n'That... That doesn't mean anything.'\n\n'How many?'\n\nMackenzie sighed. 'None.'\n\nHailey smiled triumphantly.\n\n'And there you go. In fact, I think you haven't had sex with anyone but me since you and lover boy stopped doing it.' When Mackenzie blushed guiltily, the blonde girl continued. 'You know, I like you Mac, but I'm not sure I want to fill the sexy Italian's shoes...'\n\nThe other girl just stared.\n\n'Fuck you.' She said, walking out of the apartment and smashing the door behind her.\n\nA couple of hours later, she was heading back home from a walk that had led her to aimlessly travel through the city looking at the windows of a thousand different shops. Mackenzie had also considered eating at an Italian place, but since she was irrationally annoyed at the country for the moment, she went into a Korean place instead.\n\nThe walk had done her good, but it also made her curse herself. The look of surprise on Hailey's face when she'd told her to fuck off, for example. They were always teasing each other with comments like the one her friend had thrown at her; why did she react like that this time?\n\nMaybe because it struck her a little too close to home. Ever since her argument with Jarno, she'd started to crave some relief, and had satisfied it with Hailey, both on and off camera. She'd done so many times before after breakups, but never for this long. And that was the problem. First and foremost, Hailey was her friend, not her lover. They had fun together, but they weren't a couple.\n\nIn the previous weeks, Mackenzie had begun to wonder if she hadn't been imposing herself a little too much on her friend. Although she was most likely joking, Hailey's words had concerned her. She needed to abstain from fucking the blonde girl. Ideally, she could find someone else to fuck, but until then her horniness would have to be kept in check.\n\nAs she collected her thoughts, Mackenzie realized she was almost home again. She looked at her watch. 11:30 PM. Midnight snack at Mike's diner? Absolutely. Or maybe you're a wuss who's delaying having to talk to Hailey again... The thought came from her usually quiet conscience. She shut her down like she did most times.\n\nJust five minutes later, she was looking at the place. It still felt like the nice refuge from confusion that it felt when she first entered it years before. From what she could tell it was mostly empty which suited her just fine, since her first priority was some peace and quiet. Entering the diner, those hopes were very quickly extinguished, as she saw Jarno in a corner booth, looking out the window with an empty gaze.\n\nMackenzie felt her feet completely frozen in place. Jarno was oblivious, appearing lost in thought. She could just leave. Leave and avoid a conversation she didn't want to have. Leave and never know what they had to say to each other (if anything). With slow, slightly unsure steps she walked towards him.\n\nSomething about her movements attracted his attention, and he turned his head towards her. His expression changed to one of surprise, before going back to something she couldn't identify.\n\n'Hey.' She greeted.\n\n'Hey.'\n\nThat's it?</span></p>\n\n'Wasn't expecting to see you here.'\n\n'Yeah, well... It's been a long day and I felt like cheating my usual eating habits. This seemed like the best place to do it.' He said, taking a bite out of the burger in front of him. He was laying down, with his feet on the seat across.\n\nSo,\" I'm not here for you\", is that the subtext, Jarno?</span></p>\n\n'You couldn't find another place to eat junk food in the city of New York?' Mackenzie asked him, raising an eye brow.\n\n'Maybe I just enjoy Mike's company.'\n\n'Really? Does he enjoy yours?'\n\n'I don't know, it's difficult to tell which of his grunts are happy grunts...'\n\nMike hurriedly passed past the both of them that exact moment with his hands full of dishes. 'I heard that, pretty boy.' He said without looking. 'And they ain't happy grunts.'\n\n'No, Mike, don't go.' Jarno said in a calm tone, also not looking at the other man. 'I think we have something too special to break up this way.'\n\nLowering the dishes behind the counter, Mike grabbed with one hand a dessert and as he headed to the table that ordered it, flipped off Jarno with his free hand on the way.\n\n'Oh, well. Guess I'll have to find somewhere else to eat food that'll give me heart burn.' He told Mackenzie, as he chewed.\n\n'It appears so. Would you mind if I sat down with you on your last visit?'\n\nA momentary look of surprise crossed his features. Mackenzie didn't know why she'd asked it either. He removed his feet from the seat in front of him. 'Please do.' He gave her a shy sideways smile.\n\nSitting down, Mackenzie saw him up close for the first time in months. On TV his beard had seemed less bushy than it was in person. His smile seemed less at the ready than before and his bigger facial hair seemed to give him a \"troubled-hot-guy\" look. She preferred him in the carefree, clean-shaven version. But, damn, he's still such nice eye candy!\n\nThey were staring at each other. What was he thinking?\n\n'I'm sorry but I gotta ask... NASCAR? You?'\n\n'I know.' He grimaced. 'It's a long story.'\n\n'I have time.'\n\n'Okay, then it's an embarrassing story that I'd really rather not tell.'\n\n'Oh.' Well, that was unexpected.\n\n'What are you having?' Jarno asked, effectively changing the subject.\n\n'I dunno. Just thought I'd come in here for a midnight snack.'\n\n'Want to share a dose of bacon, eggs and fries?'\n\n'Wow, you're really going all out on cheating your diet.' Mackenzie grinned.\n\n'I try my best. Or worst, in this case.'\n\nHe called Mike over with a hand gesture and ordered. As he was ordering, Mackenzie's stomach decided to grumble in protest. She blushed. When Mike went back behind the counter, Jarno pushed his half-eaten burger to her side of the table.\n\n'Go ahead, eat the rest of mine while we wait.'\n\n'That's okay, I can wait.'\n\n'You're hungry and I'm just full with a sweet tooth. Go for it. If I had cooties you would have caught them by now!' He added in an annoyed tone, looking out the window.\n\nWithout looking away from him, Mackenzie took a bite out of the food she'd been offered.\n\n'That was a strangely inoffensive way of saying \"you've had your tongue in my mouth\"...' She muttered dryly.\n\nJarno gave a small laugh, looking back at her.\n\n'I guess so. So, what have you been up to?'\n\n'Hmm, not that much. I'm sure you've been living a more exciting life than me...'\n\nHis look didn't change.\n\n'I'd still like to know.'\n\nShe regarded him for a few moments.\n\n'Not much is different. Except, uh, that I've been kind of practicing my drawing again.'\n\n'Again?'\n\n'I used to draw all the time, growing up, and I kind of stopped doing it for a while. I missed it.'\n\n'Cool.'\n\n'I think so too. I've been saving up for a while now to get enough to start in college next year. I mean, there's also a couple of pre-admission tests I'll have to go through, but I'm confident.'\n\n'That's great, Mac!' Jarno beamed at her.\n\nShe felt herself blush under his attention.\n\n'Anyway, what about you? How's the first season of being an F1 superstar going for you?'\n\nMike arrived with their food just as Mackenzie ended the rest of Jarno's meal. Once he was gone, Jarno responded.\n\n'It's going okay.' He said with a shrug.\n\n'Okay?' Mackenzie asked, lifting an eyebrow. 'You gave an interview half a year ago when you were drooling about joining that team, and now you say it's \"okay\"?'\n\n'It's been better than thank okay.' Jarno smiled, lifting his open hands in surrender. He sighed as if he was too embarrassed to say it. 'I won three of the first five races and I'm leading the championship.'\n\n'Holy shit! Congrats!'\n\nHe bowed his head slightly as they continued to devour their recently arrived food.\n\n'You're so shit at taking compliments.'\n\n'Thank you.'\n\n'Well, at least you took this one well...' His eyes narrowed playfully. 'There's something else that's happened. My dear parents got in touch.'\n\nHe furrowed his brow, which Mackenzie assumed to mean he'd understood what potential talk they'd had.\n\n'What happened?'\n\n'They said they wanted me to cease my life of common prostitute and go back home where they will find someone selfless enough to want to marry a girl as worn out as myself.'\n\n'Holy fuck...' Jarno whispered, looking horrified.\n\n'Oh, don't worry. They do this phone call once a year. It's almost a tradition by now.'\n\nShe could tell he wanted to comfort her but thought better of touching her. Well, she had told him not to touch her the last time they saw each other, and he seemed to take the advice to heart. That thought made her go back to the fight and that this was the first time they were together since. It was a rather unpleasant memory.\n\nJarno seemed to settle for a half-smile. 'Some people aren't worth it.'\n\n'Don't worry. I've known my parents are worthless for a long time. I'm not upset about it.' She replied.\n\nThey finished the rest of the meal in silence. It should have felt awkward, but for some reason Mackenzie felt completely at ease during their wordless moment at the table.\n\nThey called Mike over to pay.\n\n'I got it.' Jarno said, pulling out his wallet.\n\n'No, we're splitting.' Mackenzie protested.\n\n'Don't worry, I got-'\n\n'We. Are. Splitting.'\n\nThey looked at each other for a few seconds. Mike kept quiet.\n\n'Mike.' Jarno called.\n\n'Yeah?'\n\n'We'll split what we got since Mac arrived. But what you got me before she came I'm paying for alone. Including, that burger she ate, since it had my cooties.'\n\nHe looked at her innocently, and Mackenzie felt the corners of her lips quirking up.\n\n'Do I want to know what that means?' Mike asked, as he took Jarno's credit card.\n\n'No.' Jarno and Mackenzie replied in unison.\n\n'Alright, then.' The diner owner said, going away.\n\nThe two of them left the diner together and walked side by side. Mackenzie figured he was walking her home, and felt a little annoyed but didn't say anything.\n\n'Hey, how's Hailey, by the way?' Jarno asked her.\n\n'Oh, she's her usual shy, subdued self. Been over the moon lately because her channel's been having some really good views.'\n\n'That's nice for her.'\n\n'She's still annoyed that she didn't get to fuck your brains out, by the way.'\n\nHe let out a small laugh. They both stopped. They were at her building. Unlike the first date, Jarno hadn't been caught out by the sudden stop, having seen it coming. Though, just like before, they both sat there smiling softly without knowing exactly what to do.\n\n'It was really nice to see you, Mac.'\n\n'It was nice to see you too.'\n\nHis lips pressed against her forehead and Mackenzie felt herself close her eyes, feeling his warmth.\n\n'I'll see you around.' Jarno whispered, and started to walk away.\n\nMackenzie gasped inaudibly, struggling to catch her breath. She opened her eyes slowly and saw his retreating form. Call him back. Call him back. The urge was strong but she steeled herself and took a deep breath to regain control. No. You know what he did to you. Shakily, Mackenzie started to climb her stairs.\n\nJust as she was searching for her keys, her phone started ringing.\n\n'God fucking damnit!' She muttered to herself. She picked it up and looked at the caller ID. She kept looking at it for quite some time, before looking to her left.\n\nYep. That's definitely it. Jarno was a few feet away, looking at her with his phone pressed to his ear.\n\n'Hello.' Mackenzie picked up, feeling rather silly.\n\n'I was an asshole.' His voice reached her ears through her phone's speaker. 'When you told me you were camming, you said it had been an issue with other people, and I did the exact same thing because I was a complete asshole. I'm sorry, Mackenzie.'\n\nHe spoke quickly, his emotion clear. She took a deep breath and leaned against the railing of the stairs, feeling suddenly exhausted. Something finally made sense to her.\n\n'That's why you entered that race you hate, isn't it? To have an excuse to be here?' No reply came from him, as he remained still with his phone in hand. 'I mean, what is it? Do you feel guilty?'\n\n'Guilt didn't make me join a stupid race across the world, Mackenzie. I missed you. That's why I came.'\n\nA very long silence established itself between the two of them, as a massive array of internal struggles went through Mackenzie's head. Jarno was waiting patiently for her. He saw, after quite a bit, some sort of resolution passing through her mind.\n\n'Thanks for calling.' Mackenzie told him, not looking at him, but looking instead to the bottom of the stairs of her building. 'I don't suppose you're anywhere nearby...'\n\nSince she wasn't looking, she had no idea what his face looked like when he said: 'You'd be surprised.'\n\n'Would you mind stopping by my place, then?'\n\n'Okay. I could drop by in a couple of minutes.'\n\n'See you in a bit, then.' She told him, hanging up.\n\nPatiently, Mackenzie waited until his footsteps reached her ears. Jarno came into view, as he climbed the steps, and she went to the top one. When he was just two steps below, looking up at her with a look of amused curiosity, she grabbed the sides of his face and kissed him hungrily. Her tongue slithered through his mouth for the first time in months and she felt herself moan.\n\nJarno recovered from the surprise quickly and kissed her back with fervour, though he was letting her lead. After what seemed like forever the kiss just naturally ended, the both of them regaining their breath with their foreheads and noses pressed together.\n\n'I think I kind of missed you too...' Mackenzie muttered dryly.\n\n'You are incredible, Mackenzie.' He whispered to her, holding her sides tenderly, his thumbs softly caressing her through her clothes.\n\nShe smiled, feeling the heat of his body against hers, as well as his distinctive scent filling her senses. Then, she remembered she couldn't have all the fun she wanted.\n\n'I'd love to ask you to come upstairs and have some fun but unfortunately I can't...'\n\n'Oh?'\n\n'I'm on my period.'\n\n'That's okay, Mac. I'm sure we'll find some time to-'\n\n'But I can offer you a night's sleep in my bed.' Mackenzie offered, feeling instantly childish and tracking back. 'If you want to. I figured it would be better than a cold hotel bed...'\n\n'Do you want me to? Sleep next to you?'\n\nShe opened her eyes and noticed Jarno was watching her. You know what, I do. She realized. I want to sleep next to this hunk of a man tonight, damnit! Annoyed at herself for blushing, Mackenzie nodded shyly.\n\n'I'd really like that too.' He replied, flashing her with the sweet smile she'd gotten used to from him.\n\n'Come on.' She grabbed hold of his hand and opened her building door with the other.\n\nThey made their way through her apartment door, tiptoeing, as Mackenzie explained to him, to avoid waking Hailey up in case she was in her bedroom. She was, and so they silently got into Mackenzie's room where they got ready for bed. It was in a casual comfortable silence that they stripped in front of each other to their underwear."
    ],
    "authorname": "DinaParker69",
    "tags": [
        "threesome",
        "voyeur",
        "romantic",
        "exhibitionism",
        "lesbian",
        "bisexual",
        "tattoos",
        "internet",
        "true love",
        "spanking"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-cam-girl-1"
}