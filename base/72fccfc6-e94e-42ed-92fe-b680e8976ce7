{
    "title": "Houseguest Nightmare",
    "pages": [
        "Just a little fun story.\n\n*****\n\nMy life turned to shit the day Claire came to stay with us.\n\nOkay, okay, maybe she had it rough. Only married two years and her husband ran off with another woman. Hey, get over it, shit happens. When she first arrived, Josie and I were both sympathetic but after awhile her constant droning on the faults of the male species became more than irksome, at least, to me.\n\n\"Men don't know how to make love to a woman...\"\n\n\"Men only think with their dicks...\"\n\n\"Men only need a hole to stick their cocks into...\"\n\nWell, maybe there was a little truth to that. I had to admit when Josie and I got married five years ago, we didn't stray too far from our bedroom. But I didn't marry her just to have a steady piece of ass... Nah, no way. As a matter of fact, we'd slowed down to only three times a week now, often for only a half hour at a time.\n\nAt 28, Josie works as a therapist for a marriage counselor. She's good at her job of marriage mending. Sometimes in bed, she tells me one of her stories (no names of course), after which we'll role play the couple and fantasize a happy ending. It's really hot. \n\nJosie isn't one of those tall statuesque model types. Quite the opposite, she's short and stocky. But men do notice her, the way she wobbles her ass and sways those firm torpedo tits. Her slim waist accentuates her oblong breasts and ample ass. Yes, I love having those powerful legs wound around my butt while I'm sliding in her tight hole... No kids yet, but we're thinking about it.\n\nAnd Claire? She's a younger clone of her sister. And yes, they both come by it honestly. At 46, their mother Carol has the same great shape. In fact I have to be careful I don't sneak up behind the wrong woman when we're visiting. I did that once, rubbing my hardon in the crack of Carol's ass. My face is still stinging.\n\nAnyhow... I digress. Where was I? ... Oh, yeah, this is about Claire. She followed Josie everywhere, whimpering and blubbering about her failed marriage. Even when Josie was doing the vacumning, Claire never stopped, just prattled louder. They stayed up late, yakking, drinking wine or whatever else was available.\n\nMeals were particularly difficult. Claire never stopped whining. Worse, Josie nodded at some of Claire's assessment of men. She'd give me that 'just like you' look. Since there were two against one, I made myself scarce, mostly hiding in the study.\n\nAnd then it got worse. Josie's older sister, Anne, began coming over after work and staying for dinner to lend support to Claire's rant. She had the same low opinion of men as her sister, calling all men 'cunthounds', who couldn't wait to stick their thingy into a strange pussy. She'd stay until after dinner, then go home to put her two toddlers to bed... Now there was three against one.\n\nDuring the two weeks since Claire arrived, sex with Josie was at ground zero. I have to tell you, abstinence doesn't work for me. I was walking around with a permanent semi hardon. Whenever we did manage to get to bed at the same time, she would push me away if I made a move on her. Finally one night I grabbed a handful of ass.\n\n\"No, John, we can't. Claire's in the next room... she'll hear us,\" she whispered.\n\n\"So what?\"\n\n\"It'll make her feel worse.\"\n\n\"I feel a lot worse than she does,\" I rebutted.\n\n\"Tell you what honey. If you can be real quiet, I'll suck your dick,\" she promised.\n\nCould I refuse? Not likely. But getting a blow job was only a consolation prize compared to sliding in and out of her tight pussy. \n\n\"Swallow it all?\" I whispered hopefully.\n\n\"Mmmm...Hmmmm...\" she agreed as her cheeks hollowed.\n\nI lasted all of thirty seconds before my cum bathed her tonsils. Nobody could give a blow job like my Josie.\n\n\"There, that'll hold you for awhile,\" she giggled.\n\nI spooned her and we fell asleep. As usual, she wore her flannel pajamas so I wouldn't attempt to poke her during her slumber.\n\n--\n\nThree days later, we again got to bed at the same time. I pulled her into me and ran my hand down the inside of her PJs, down the crack of her ass, running a finger around into her tight pussy hole. She pushed me away.\n\n\"No, John, we can't,\" she whispered, \"Claire heard us the other night and she feels really bad.\"\n\n\"Why would SHE feel bad?\" I quieried.\n\n\"It reminds her of the relationship she had with her husband... Bear with me, honey, she's starting to respond to my therapy.\"\n\n\"I'm going to need therapy real soon too. Why don't we grab a blanket and have a bit of nookie in the back yard?\" I suggested.\n\n\"No way. We did that a few years ago when your mom and dad were visiting. The neighbors are still talking about it,\" she reminded me.\n\n\"Are we going to have to rent a motel room?\" I asked in desperation.\n\n\"No, silly. Tomorrow's Saturday. It's supposed to be a nice day so I'll send her out to cut some flowers in the back yard. You can lean me over the kitchen table while we watch for her through the window.\"\n\nWell, the best made plans never work. It rained all damned weekend, the next weekend too... However, it did seem that Josie had calmed Claire down considerably. Our mealtimes became more pleasant and there was less ratcheting about the evils of men. Two weeks after my blow job, I figured it was safe to broach the subject.\n\n\"Claire, how would you feel if Josie and I had sex tonight?\"\n\nHer face turned purple and she started to choke. \"That's all you men ever think about, isn't it? ... Just fuck, fuck, FUCK...\"\n\n\"Claire, we love each other and haven't been together for a month,\" I reminded her, trying to remain calm.\n\n\"Go ahead, you bastard,\" she screamed, \"Stick your soft little weeny into my poor sister.\"\n\nHuh? ... Soft? Little? Was she talking about me? Is that what Josie told her? Claire ran bawling to the bathroom and locked herself in.\n\n\"See what you've done,\" Josie railed, \"she was coming along nicely until you opened your big mouth.\"\n\n\"You're taking her side again, Josie,\" I raked, \"The only therapy that bitch needs is a big hard cock to fuck her brains out.\" \n\n\"How can you be such an insensitive asshole?\" Josie seethed.\n\n\"Insensitive? Me, insensitive? Me, the husband who hasn't had a piece of ass for a month?\"\n\n\"I'm beginning to think Claire's right,\" Josie yelled, \"Men like you think a fuck is the only thing a woman is good for.\"\n\n\"You got that right... men like me,\" I growled as I reached for my bomber jacket.\n\n\"Where the hell are you going?\" she shrieked.\n\n\"I've had it, Jo. I'm going out to find a woman to relieve my condition,\" I loudly reported.\n\n\"John...\" was the last word I heard as I slammed the door.\n\nIt was about a mile to the neighborhood pub and I managed to quick step it there in about fifteen minutes. Jake, the bartender saw me come in and reached under the bar for a bottle of the good stuff. I held up two horizontal fingers and he poured it.\n\n\"Trouble with the missus again?\" he asked.\n\n\"Same old shit, different day... My balls have turned from blue to black. If I don't get some pussy soon, they'll fall off,\" I quaffed my drink in one gulp, then slammed the glass down for a refill.\n\n\"That bad, eh?\" he sympathized, pouring three fingers this time. \"Sorry, no strays in here on Monday nights. The horny marrieds don't show up 'til Thursdays.\"\n\n\"Just my luck. That's the nights I'm squiring Josie and Claire around shopping... Well I've about had it. I'm going to kick her bitch sister out on the street.\"\n\n\"That might be a mistake,\" Jake shook his head, sadly, \"I had similar situation with Tiffany about four months ago.\"\n\n\"Do tell,\" I remembered his wife Tiffany, a tall vivacious blonde with a killer figure. She worked in his bar as a server, a tease if there ever was one. Men dropped in for a drink just to ogle and have a little risque conversation.\n\n\"Her mother, Nora, came to stay with us,\" Jake continued, \"The bitch never liked me, claiming Tiffany married a low-life and that she could have done much better... I took the constant denigration for two months before I finally decided to boot her mother out.\"\n\n\"So it worked out after all?\" I queried as I tossed back the rest of my drink and pounded my glass down for another.\n\n\"No... When I threw her mother out, Tiffany went with her,\" he looked miserable as he refilled my glass, \"I hadn't heard from her for two months until I got a divorce application in the mail last week.\"\n\n\"Jeezus, I'm sorry, Jake,\" I empathized.\n\n\"Yeah, shit happens,\" he replied, looking like his dog just got run over.\n\nWell, that wasn't exactly my situation. I didn't hate Claire or Margo, I just wanted to resume sexual relations with my wife without interference. I drained my glass and thought about it some more. Another drink and I was still thinking about it... Fuck it, I wasn't going to end up like Jake. It was time to take control. I'd go home and ravage my wife, in front of Claire if need be.\n\n\"That's the last of the good stuff,\" Jake said as he drained the bottle into my glass.\n\n\"You think Tiffany's found someone else?\" I probed.\n\n\"Don't know,\" he lamented, \"I'm still hoping she'll smarten up and come home.\"\n\n\"Maybe you're better off without her, Jake. There's no way I'd let Josie get away with that shit.\"\n\n\"Yeah, maybe you're right,\" he responded doubtfully.\n\nThat little exchange got me thinking. Was something going on in my marriage? Josie liked to fuck almost as much as I did. Surely she could have made a better effort to get us alone?\n\nI tossed back the last drink, then threw some bills on the counter and left.\n\nIt took me a lot longer to walk home. I kept bumping into lamp posts and stopping to have conversations with some trees. The house was dark when I finally unlocked the door. I kicked the front door shut and stripped off my clothes on the way to our bedroom.\n\n\"Honey, I'm ho-ome,\" I announced as I noisily swung the dimly lit bedroom door open until it smacked against the wall stop, \"And guess what I'm going to doo-ooo.\"\n\n\"No, you're naa-aught,\" she chimed in return as she hiked her pajama bottoms up higher, holding onto the elastic waistband with both hands.\n\n\"Yes, I aa-am,\" I insisted as I grabbed her pajama bottoms and yanked them off. I grasped an ankle in each hand and spread her open, pulling her up to cock level. She tried to squirm away... not too forcefully, I noticed.\n\nI pushed my meat into her slippery hole and began my ride. She tried to remain passive but it didn't last long.\n\n\"Oh, God,\" she screamed, \"Yes... do it... I need it... fuck me... fuck me... deeper... yesssss... right there... I'm gonna... CUU-UUMMM.\"\n\n\"ME TOO-OO,\" I grunted as we both hit the trip wire at the same time. Damn, that felt good, my first piece in too long. I pulled her ankles together and held her there while we both came down.\n\n\"Jeezus, what a load,\" she chortled, \"Let me up before I leak all over the bed sheets.\"\n\nShe ran for the washroom, cupping her hand under her leaking pussy. I tried to lay down but the room started to spin so I hung onto the bedpost instead.\n\nA few minutes later she came back wearing only her pajama top. She crawled up on the bed and buried her face in a pillow, her ass pointing out at me. Whaddaya know... surprise, surprise, she wanted more.\n\nNow, I'm not like most men when I get smacked. On the contrary, when I'm drinking good scotch, I'm almost priapismic. I got up behind her and again pushed into her. She took a huge gulp of air into her lungs as I sank to the bottom.\n\nShe felt a lot tighter in this position. We got into a rhythm as she rocked back against my thrusts. Suddenly, she froze and her cunt muscles tightened... She came.\n\nThat was good because she was going to get lot more before I unloaded the second time. She groaned and pushed her ass back at me, indicating she wanted to resume. I complied and we again found our rhythm. It only took a few minutes before I felt her cunthole clench again.\n\n\"HAAAAAAAAH...\" she exhaled as her juices began to leak onto the bed.\n\nI thought of getting a towel but it felt too good to pull out of that spongy muscular pussy hole... so I didn't.\n\nAfter a few seconds she bashed back at me, inviting me to resume. We got out of sync for awhile when she started to push back faster than I was thrusting. I took the hint and picked up the pace.\n\nHer whole body began to tremble and shake as she climbed to her next orgasm. With her head still down on the pillow, her hands reached around me and grabbed my asscheeks, leveraging her backthrusts to get me in deeper.\n\nHer next orgasm didn't stop as she gushed her fluids onto me and the bed, bucking, almost jumping as she keened and held onto my ass to get more. I couldn't hold it any longer and pulled on her hips as hard as I could, throbbing my juices into her depths, her pussy gripping my cock like a vise.\n\nMaybe it was my long deprivation but it felt like the best fuck I'd had in a long time. She rose on wobbly legs and navigated her way to the washroom. Again, I tried to lay down but the room insisted on spinning so I propped myself up against the headboard and promptly passed out.\n\nI awoke in the morning, flat on my back with Josie sucking my cock.\n\n\"Aren't you afraid Claire will hear your slurping?\"\n\n\"Nope, she left early this morning for home. She's gone back to hurry the divorce through.\"\n\n\"What? I thought she wanted him back?\"\n\nShe stopped slurping for a moment. \"I had a very long talk with Claire after you stomped out of here last night. I convinced her it was time to look for another man, one with a bigger and harder cock than her soon to be ex-husband... any more questions?\" she asked as her mouth went down on my cock again.\n\n\"Yeah, uhh... what did I do last night?\"\n\n\"Don't you remember doing me in this bed?\" she asked.\n\n\"Yes, but I'm talking about the second time...\" I protested.\n\n\"Let's just say Claire left with a big smile on her face this morning,\" Josie let out a horse laugh, then did a leg over and sank down on my meat.\n\nI decided to stop asking questions. I might get an answer I could actually understand.\n\n--\n\nWe were back in the groove, never missing a night for the next week. It was marvelous. At least, it was for me, though I noticed Josie walking with a funny gait.\n\nOne day after work, I decided to stop by Jake's Bar to see if he had another bottle of the good stuff. The bar was crowded and I soon found out why. Tiffany was there, dressed in a tutu and a tight blouse, wobbling her ass on top of those long perfect legs, flirting with all the men while she served them drinks.\n\nI sat down on the only barstool available and signalled Jake with two horizontal fingers. He nodded and grabbed my bottle from under the counter. Tiffany came behind the bar and picked up another tray of drinks, kissing Jake on the cheek. On her way back to the tables, she turned to me and gave me a smile and a wink.\n\n\"What happened,\" I asked Jake as he poured me another drink.\n\nHe leaned over the bar and whispered in my ear. \"She caught her mother fucking some low-life sewer rat, even lower than a bartender.\"\n\n\"Say hey,\" I raised my glass in a toast, \"Problem solved.\"\n\n\"Damn right,\" he firmly avowed, \"I took your advice and won't allow her mother back in the house so your drinks are on the house tonight.\"\n\nI got stinko again, though not quite as bad as the last time. Josie and her sister, Margo, were preparing dinner when I whispered into Josie's ear that I needed a quickie before dinner. She just smiled and gave my cock a squeeze as I ran to our bedroom and stripped out of my suit, then laid back on the headboard and waited. She came into the darkened bedroom and mounted me... But something was wrong. My cock didn't feel like it was in familiar territory and her grunts didn't sound like Josie's either. I reached over and turned the bedside lamp on.\n\n\"Margo, what the hell are you doing?\"\n\n\"Claire was right... so big... so full... don't stop... need to come... oh God... cumming... cumming... CUUMMMMIIINNNNG.\"\n\nI felt her pussy clench as her juices poured down my dick. Her big tits separated from my chest and she moved back a bit, her hands clasped behind my neck with her body trembling. She was sliding her clit back and forth across my pubis with my rock hard cock still inside her.\n\n\"Margo...\"\n\n\"Please, John, no questions... I need more... just fuck me... please... please...\" she began humping me again.\n\n\"Margo, we can't...\"\n\n\"Oh, yes, John... right there... you're in my sweet spot... fuck me, John... fuckme... fuckme... FUCKMEEEEEEEEE...\"\n\n\"Margo, we've got to stop...\"\n\n\"No, John... Please, not yet...\" she flipped off me and stuck her ass in the air, \"Doggie... and don't spare the horses.\"\n\nWell in for a penny, in for a pound... I mounted her and slammed my cock into her depths and ravaged her sopping cunt. \n\n\"Yessss... perfect cock... perfect fuck... so deep... so full... cumming... AAAAAAWWWWWWWWWWWWWW...\"\n\nNo way was I going to stop now. I grabbed her hips and picked up the pace. I'm sure the slap-slap of flesh on flesh reverberated throughout the whole house as she came again and again... Finally after about twenty minutes of sweaty fucking, I released my load... I gave that ass a good slap and she pitched forward, her body so tired, she fell asleep almost immediately. I covered her with a comforter and went back to the kitchen. Josie was sitting at the kitchen table with a smile on her face.\n\n\"What the hell was that all about?\" I racheted.\n\n\"Just a little John Therapy,\" Josie laughed, \"No harm done.\"\n\n--\n\nLife went back to normal, three times a week. After several months, Josie informed me that Claire had a new man and things were getting serious.\n\nA few months later, after a Saturday afternoon play date in our bedroom, Josie sprang another one on me, \"John, my older sister Anne is having some trouble in her marriage. Uhh... I was wondering if she could visit us for awhile...\"\n\n\"No way, I'm not going through that shit again.\"\n\n\"Please, John, their marriage is in trouble. Their sex has become stale and they're drifting apart. He's talking divorce... Please, just for a little while.\"\n\n\"OK, but I'm not going without, regardless of how she feels. As far as I'm concerned if it bothers her, she can come into our bedroom and watch... Deal?\"\n\n\"She'll be here tomorrow,\" Josie giggled.\n\nAnd so it went. Anne listened through the bedroom walls to Josie's noisy enthusiasm for a few nights before she got curious enough to come into our bedroom. We put on a show for her; oral, 69's, pussy fucking in every position, even some anal.\n\nAnne sat on the edge of the bed, naked, drooling and playing with her clit while she watched me pleasure Josie. On the fifth night, Anne was laying on her back beside us, fingering herself as Josie and I humped in the missionary position.\n\n\"Time for some John Therapy,\" Josie panted, pushing me off. \n\nFar be it for me to resist. Anne spread herself and willingly accepted my dick. Yep, her body felt just like my Josie, her cunt a little different though.\n\nThe next night, Anne and I did it all, most of which she'd never attempted with her husband, some of which she'd never even heard of. Saturday, Josie went shopping and I took a blue pill and fucked Anne all afternoon.\n\nSunday, Anne went back to her husband. She introduced him to a lot of new sex. Her story to him was that she watched us perform from inside our closet. Happily for her, he dropped the divorce.\n\n--\n\nFour months later, Josie and I were laying in bed after a particularly satisfying sexual session. \n\n\"We just received an invitation to Claire's wedding,\" Josie announced.\n\n\"Really? ... Big wedding?\"\n\n\"Five bridesmaids; myself and my four other sisters... Mother will give Claire away.\"\n\n\"Why didn't your mother remarry after your dad died? Maybe she would have got lucky and had a boy?\"",
        "\"She dated for awhile but none of her boyfriends were suitable. It's kind of sad, you know, she and my youngest sister, Darlene, live alone in that big old house. To make matters worse, Darlene is a very serious college student and rarely has time to spend with mom. The only time mom feels happy is when Anne brings the children over.\"\n\n\"And how's Anne's marriage now?\" I asked as I began licking the tip of one of her torpedoes, getting her ready for Round Two.\n\n\"Fabulous, they do it as often as we do,\" she moaned as I mauled her ass cheeks, \"She's really grateful to you for introducing her to all that different sex.\"\n\n\"And all your other sisters are happy too,\" I asked rhetorically as I switched my attention to her other torpedo.\n\n\"I meant to talk to you about that,\" she gasped as my forefinger slid down her ass crack to find her anus.\n\n\"Margo is having trouble with her latest marriage.\"\n\n\"Yeah, I've heard about Margo's two previous marriages. After a couple of years, she gets bored and finds another cock. Her first two husbands divorced her.\"\n\n\"Her latest husband is deathly afraid she's going to find another man. He loves her dearly and doesn't want to lose her, so I suggested a compromise, one they both think is a great idea,\" she shivered as my tongue snaked down her body, searching for her treasure.\n\n\"What kind of compromise?\"\n\n\"She'll come over for a weekend every month and get a strange cock... yours,\" she panted as I latched onto her clit, \"You won't be disappointed, apparently she's very talented in bed.\"\n\n\"Josie, have you gone crazy? Am I going to end up fucking all your sisters?\"\n\n\"As a matter of fact, Alice and her husband are having a little trouble too. She wants children but he's shooting blanks. They're not keen on the idea of an anonymous donor, so they've selected you... You know, like sort of keeping it in the family. You could manage that, couldn't you? It would only be every year or two.\"\n\n\"Getting pregnant isn't so easy sometimes,\" I warned her,\" It may take quite a few fertile times before it's successful.\"\n\n\"That wouldn't be so bad, would it?\" she chuckled, \"I'm sure you'd both enjoy it...\"\n\n\"That only leaves Darlene,\" I observed as I pushed my hard member into her tight pussy.\n\n\"Yes, Darlene's having a difficult time. She's a serious student and hasn't time for dating,\" Josie grunted as she slammed her pubis into mine. It wasn't long before I fired a volley to match hers. \n\n\"John,\" she panted, coming down, \"Do you think it's time for us to start our babies?\"\n\n\"You know I'd like that but we can't afford it on only one salary.\"\n\n\"I wasn't planning on quitting my job,\" Josie replied, \"Mother would love to babysit the children.\"\n\n\"Not likely. This place is too small for children and your mother too.\"\n\n\"We'll move into mom's house. She has lots of room. After all, we six girls were raised there. Her house is fully paid for so there's only the utilities and upkeep...\"\n\n\"That wouldn't solve anything,\" I replied as Josie resurrected my cock with her pussy muscles, \"We'll still have to pay rent.\"\n\n\"Mom doesn't need money. Dad's insurance left her plenty. She wouldn't get in the way, I promise,\" she smiled as she again began humping against me.\n\n\"You're kidding... what's she going to think when she finds out I'm banging all of her daughters?\" I asked astonished.\n\n\"She be very happy knowing that her girls are contented,\" Josie said. \"She was the one who made the suggestion after talking to Claire and Anne. They're both very happy now and mother is elated.\"\n\n\"Josie, why the hell are you doing this?\"\n\n\"Cuz you scared the shit out of me when you walked out of the house that night. I thought you WOULD find some bimbo to match your voracious libido and I'd lose you forever...\" she paused, a tear rolling down her cheek, \"John, don't get me wrong, I love having you inside me, but I can't take the pounding from your big cock every night...\"\n\n\"C'mon, Josie, it's only seven inches...\"\n\n\"Closer to eight,\" she corrected me, \"And as thick as my arm. I get too sore. This way, if I do some careful scheduling, we can still have our three times a week... Deal?\"\n\n\"This is a dangerous game, Josie, what happens if I fall in love with one of them? I mean, look at Darlene, she's a beautiful young chick,\" I said warily.\n\n\"Oh John, she's been in love with you since her mid teens. It would be really nice if you loved her too. You'd make us both very happy.\"\n\n\"Well... maybe... I guess...\" I stammered. \n\n\"I'm so glad you married me, John,\" she cooed as she wrapped herself around me, \"You're taking such good care of my family.\"\n\n...We moved into her mother's house the next month...\n\n--\n\nAnd so began my life with the six sisters.\n\nAnne's husband resumed the affair with his secretary, so she felt entitled to came over a couple of times a month and get some strange too.\n\nClaire's new husband turned out to be a pervert. His fantasy was to have another man fuck his wife, then have her tell him about it. They both enjoy it and have wild sex for weeks.\n\nOf course, Margo showed up at least once a month to get her bit of strange. She now has two cocks in her life and doesn't need more.\n\nIt took Alice four months to get pregnant the first time. I suspect she was enjoying the sex too much and stayed on the pill longer than necessary.\n\nAnd Darlene? She's an absolute animal in bed. She had the tightest cunt of all of the sisters. When the other sisters weren't around, I alternated between Darlene and Josie, three nights a week for each of them.\n\n...I was a very happy man...\n\nFOUR YEARS LATER...\n\nJosie and I had two children before she decided her ass was getting too big and had her tubes tied. She's worked very hard to keep her body in shape. After all, she didn't want her sisters to look more attractive than her.\n\nAnne, Margo, and Claire still come over at least one night a month to get a good workout.\n\nAlice has two children and claims she wants a third. She comes over a few days a month during her 'fertile' time. She's not fooling me, I know she's on the pill.\n\nDarlene graduated and got a good job not too far from home. She claims she loves me and doesn't want to move out of our house, and yes, she's still an animal in bed.\n\nTheir mother, Carol, was ecstatic at having so many grandchildren. Lately, she's been staring at my crotch, probably wondering why all of her daughters are so enamored with my equipment.\n\n--\n\nThe day of Carol's 50th birthday, my relationship with their mother changed. Her daughters were all out shopping and even though Carol didn't let on, she was anticipating a surprise birthday party.\n\nAfternoon turned into evening and Carol's spirits sagged.\n\n\"They've forgotten,\" she lamented as she flopped down beside me in her terry cloth bathrobe.\n\n\"But I haven't,\" I said as I wound an arm around her and kissed her on the cheek.\n\nStartled, she tried pushing me away, \"What the hell are you doing?\" she asked, surprised.\n\n\"I want you to have a memorable birthday,\" I cooed, slipping my hand inside her robe to play with one of her breasts.\n\n\"No... mmff...\" she protested as I kissed her full on the lips. My tongue searched for hers as I gently squeezed her breast. Her breathing quickened.\n\n\"No... please,\" she whimpered when she broke the kiss, \"We can't do this.\"\n\nMy hard cock popped out from between the folds of my bath robe.\n\n\"Oh, my God,\" she stared at it, \"No wonder...\"\n\nMy hand slid in between her thighs as I kissed her again. She clamped her legs together, trying to impede my progress but it was too late, my fingers had already reached her heat. Two of my fingers stroked her clit as she gasped in my mouth. Her legs parted slightly to give my better access. She was getting wet.\n\n\"I want to give you MY OWN birthday present,\" I said as I rolled onto the floor and pulled her down on top of me.\n\n\"No... this is wrong,\" she whimpered again, \"What will my daughters think?\"\n\n\"They'll think you're still a woman, a woman with needs like theirs,\" I said as I lifted her ass with one hand and began rubbing my cockhead in her hairy gash. My cockhead found her treasure and pushed into her. She was surprisingly tight.\n\n\"Oh, Jeezus... It's been so long,\" she gasped, settling down on my full length.\n\n\"Please forgive me, Harry,\" she pleaded, looking toward the ceiling, \"I promised I'd never have any other man but I'm so very needy...\"\n\nShe shucked her robe and leaned over. My hands surrounded her torpedoes and I alternately sucked those long nipples while she rode my cock.\n\n\"I'm going to come, Harry, as hard as I've ever come in my life,\" she promised, pumping up and down.\n\n\"YESSSSSSSS...\" she screamed, clutching my cock with her powerful pussy muscles, \"FUCK... MEEEEEEEEEEE...\"\n\nShe was a little too fast for me, I didn't come.\n\nSuddenly, the lights went on and her six daughters yelled out in unison, \"HAPPY BIRTHDAY, MOM...\"\n\nCarol froze and her face turned red as a beet, \"How could you do this to me, your own mother?\"\n\n\"Six years of celibacy is long enough,\" Josie whispered in her ear, \"We all know how much you liked having sex with dad, we could hear you screaming in your bedroom. Now it's time to enjoy yourself again.\"\n\n\"That doesn't make it right,\" Carol moaned.\n\n\"It makes it right cuz you're part of the family,\" I reminded her, \"And you need me as much as do your daughters.\"\n\nMy cock was still nestled in Carol's deepest recesses and I repeatedly clenched my PC muscle to give her a throbbing sensation. The look on her face betrayed her renewed lust.\n\n\"God forgive me,\" she groaned, \"You feel so good in there, I'm going to come again...\"\n\n\"Yesss,\" Josie urged, \"Let OUR cock throb his copious load into you. Feel his jets as he empties his balls...\"\n\n\"Oh, God yes,\" Carol whined, \"I DO need him... such a magnificent cock... making all my chicks so happy... so good to have a man again...\"\n\n--\n\nSo there you have it. The family insisted I quit my job so I could conserve my energy. I'm now the handyman, looking after the estate. Carol, Darlene, and Josie are live-ins while the other four sisters come over regularly for a little afternoon delight.\n\n...And I love every minute of it...\n\nTHE END"
    ],
    "authorname": "IraBumblefield",
    "tags": [
        "loving wife",
        "neglected sisters",
        "horny mother",
        "polyamory"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/houseguest-nightmare"
}