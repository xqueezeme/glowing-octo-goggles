{
    "title": "Three Square Meals Ch. 138",
    "pages": [
        "Alyssa slipped her arm around John's and admired his reflection in the mirror. \"I have to hand it to Mael'nerak, the man really knew how to make an impression. You look magnificent.\"\n\nJohn glanced down at the beautifully tailored suit, with its high neck and stylish lines, then gave her a self-conscious smile. \"There's certainly no fading into the background wearing this... but are you sure it says 'benevolent protector' not 'tyrannical overlord'?\"\n\nShe turned to face him and stroked his cheek. \"It's your smile that makes all the difference. I think it says 'handsome prince'... but I freely admit to being more than a little biased.\"\n\nHe laughed and gave her an affectionate kiss, then gestured towards the door. \"We better head up to the Bridge.\"\n\n\"It's okay, Dana volunteered to land us on Genthalas,\" Alyssa said, accompanying him through the bedroom and into the Deck Two corridor. \"We can go straight to the airlock and disembark as soon as the Invictus touches down. I know you don't want to keep Edraele and her girls waiting a minute longer than you have to.\"\n\n\"That was very thoughtful, thank you,\" John replied, as they walked towards the grav-tubes. \"I can't believe it's been a month since we last saw them. So much has happened since then; saving Terra, the Kirrix campaign, defeating Larn'kelnar, rescuing the Kintark from the Brimorians... the list seems endless.\"\n\nAlyssa nodded and gave his hand a supportive squeeze. \"Don't forget you also met your parents, found out the truth about Kyth'vindathys, and finally confronted your guide. You've been through a hell of a lot personally, John... you're not the same man who left Maliri Space four weeks ago.\"\n\nHe nodded in agreement as they stepped into the red anti-gravity field. \"I know... and it's a huge relief to finally be back home. With a bit of luck, we can avoid any trouble for the next few weeks and take a well-earned breather.\"\n\n\"You probably need a vacation more than the rest of us combined,\" Alyssa said softly. \"I know you want to help Edraele deal with the new matriarchs, but I'm sure she wouldn't mind if you took some time off too.\"\n\nJohn considered it, then shook his head. \"I know I should be reeling after everything we've just been through, but I actually feel better than ever. Getting rid of my guide seems to have given me a new lease on life. First I want to focus on stabilising the Maliri Protectorate, then we need to start making preparations for the Progenitor War.\"\n\n\"I'll make sure the girls get a good rest, so we're all raring to go,\" Alyssa said, leaning into him. \"We'll need to be on top form when we start hunting for Kythshara and the hyper-warp gate.\"\n\nSlipping an arm around her shoulder, he asked with concern, \"Are you sure you're okay being separated from me until then? I don't want you feeling like you've been abandoned.\"\n\nShe hesitated for a moment, then shook her head. \"I'd love it if you joined us on vacation, but I understand that you've got some important stuff to take care of. Besides, the last few weeks have been incredibly stressful and I could really use some time to unwind. I'm actually looking forward to just kicking back and relaxing with Calara and the girls... it should be good fun.\"\n\n\"I thought I'd spend a couple of days with the Maliri, then I'll come visit you,\" John explained, as they reached Deck Nine. \"I'd also like to talk to Helene when she wakes up and I've promised Jade some time alone with her sisters.\"\n\nAlyssa gave him a fond smile. \"That would be lovely, but there's no pressure. Me and Jade have been hogging you all to ourselves; now it's Edraele's turn to get some TLC.\"\n\n*I agree, Master,* Jade chimed in. *I want you to focus on enjoying your time with the Maliri without worrying about us. You've done so much for me and my sisters this past month... please believe me when I tell you that we're all feeling extremely satisfied.*\n\n\"And my girls are all loved up after your orgy, so we're good too,\" Alyssa agreed as they walked along the corridor to the airlock. \n\nJohn placed his hand on the DNA scanner next to the inner airlock door, then watched it flash green as the device recognised his genetic code. \"Thanks, both of you. With Genthalas becoming our new base of operations, we'll be seeing a lot more of Edraele and the Maliri. I'm concerned about being able to give all of you the time you deserve... so please bear with me while we try to find a happy medium.\"\n\nThe blonde leaned in to give him a reassuring kiss. \"You don't have to worry about a thing. Your trio of faithful matriarchs will be in constant communication, helping to smooth out any teething problems. If any of our girls needs some special attention, we'll just let you know!\"\n\n\"Alright, sounds good,\" he agreed, hugging her gratefully.\n\nA flash of movement caught John's attention as he looked over Alyssa's shoulder, the view through the airlock's porthole changing from the blackness of space to the gleaming gold of Genthalas station. The Invictus glided into a huge docking bay, retro-thrusters flaring brightly along its hull as Dana slowed their speed. John felt a slight tremor beneath his feet as the battlecruiser touched down, the warship coming to rest in what would be its new base of operations for the foreseeable future. \n\nAlyssa pulled back and gave him a dazzling smile. \"They're eagerly awaiting your grand entrance, Baen'thelas.\" \n\nJohn reached out to activate the outer airlock door, which spiralled open at his touch. He stepped out into the hangar and froze when he saw the vast crowd assembled to witness his triumphant return to Genthalas. As soon as he appeared there was a collective intake of breath, the endless sea of Maliri women gazing at him in starry-eyed wonder. His gaze swept over the adoring faces and John spotted many of the white-haired engineers amongst them, all equally entranced by the man that had made such a profound impact on their lives.\n\nThe thousands of Maliri gathered in the hangar stood as still as statues, all except for one, who stepped forward as soon as she laid eyes on him. The Maliri Queen glided forwards, her regal pace steadily increasing until Edraele threw decorum aside and broke into a run. \n\n\"John!\" she gasped, throwing herself into his open arms.\n\nHe twirled Edraele around, thrilled to be reunited with her once again. \"I've missed you so much!\" he exclaimed, holding her tight. \n\nEdraele trembled as she clung to him, returning the hug just as fiercely. \"Oh, John... being apart from you has been awful! Please don't leave me for so long again!\"\n\n\"I won't, honey,\" he said, rubbing his matriarch's back to soothe her. \"I'm here to stay now.\"\n\nShe pulled back to give him a loving smile, her beautiful purple eyes now misty with unshed tears of joy and relief. They kissed and Edraele seemed to melt in his arms, the statuesque Maliri letting out a soft moan as his lips brushed against her own. The audience had been holding their breath as they watched, and seeing John in such a passionate embrace triggered a collective sigh of longing. John couldn't miss it with his sharp hearing, but he just smiled and continued to enjoy the intimate moment with the elated monarch. \n\nEdraele looked quite flustered when they separated, although her eyes were sparkling with joy. \"I didn't want that kiss to end, but I mustn't be selfish and keep you all to myself. I'm not the only one who's been desperate to see you again...\"\n\nTurning, she gestured towards the group of four beautiful young noblewomen that had approached while John was distracted. He broke into a broad grin at the sight of Tsarra Perfaren, Leena Ghilwen, Valani Naestina, and Nyrelle Aeberos, the quartet of lovely matriarchs that were all pregnant with his children. They beamed back at him, looking resplendent in all their matriarchal finery, the long robes showcasing their shapely figures. He suddenly noticed the rounded tummies that the clinging material emphasised rather than concealed and his jaw dropped open in shock.\n\nStepping closer he held out a trembling hand to Tsarra's swollen belly and paused an inch away. \"May I...?\" he asked, his voice catching.\n\nShe was staring at him in fascination and her smile widened in encouragement. \"You don't need to ask my permission, John. Of course you can touch me.\"\n\nHe stroked the soft curve, gazing at her gravid stomach in awe. Seeing the visible confirmation of her pregnancy felt like being hit over the head with a sledgehammer. Before him was visible proof that he was going to become a father... and not just once, but four times over. Holding out his other hand he caressed Leena as well, then switched to stroke Valani and Nyrelle, letting his fingertips reverently trace over their curves.\n\n\"That feels wonderful,\" Nyrelle murmured in a hushed voice.\n\n\"We're so glad you're back,\" Valani said softly, placing her hand over his. \n\n\"I'm going to be a father...\" John whispered, tearing his eyes from their prominent baby bumps to gaze at them in wonder.\n\nLeena nodded, smiling at him fondly. \"Yes... and you're going to be an amazing one at that.\"\n\n\"We're all so lucky to be sharing this experience with you,\" Tsarra agreed, looking at him with adoring eyes.\n\nJohn stood there in stunned silence, overwhelmed by feelings of love and protectiveness for the Young Matriarchs.\n\nAlyssa watched their interaction with delight, then led the rest of the girls out to join Edraele and the Maliri. \"That's the last time I let you be primary matriarch; it's only been two minutes and you've broken him already!\" she joked as she hugged Edraele. \"Hello, gorgeous.\"\n\nThe Maliri Queen wrapped her arms around the blonde and returned the enthusiastic greeting. \"Welcome home, Alyssa.\"\n\nRachel approached John and the Young Matriarchs, her professional curiosity piqued by the quartet of pregnant noblewomen. \n\n\"I thought Maliri gestation was the same as a Terran's?\" she mused, equally captivated by the expectant mothers. \"With a nine month pregnancy, the four of you should all still be in your first trimester. None of you should be showing for at least two more months...\"\n\nThe four Maliri matriarchs shared mischievous grins then burst into fits of giggles.\n\n\"We prepared a huge banquet and gorged ourselves just before you arrived,\" Valani confessed, her teal eyes sparkling with glee.\n\nNyrelle patted her rounded tummy. \"I'm so stuffed!\"\n\nTsarra squeezed John's hand in apology. \"I'm afraid you'll still have to wait a few more months until we're visibly pregnant.\"\n\nJohn chuckled in appreciation. \"Whose brilliant idea was this?\"\n\n\"Mine,\" Kali admitted, walking forward to join the group. She looked at him with concern. \"You're not upset with me, are you, John?\" \n\n\"Of course not... quite the opposite,\" he replied, pulling her into a hug. \"You really fooled me, you little minx!\"\n\nShe laughed with delight and hugged him back. \"We all know how much you like giving us full tummies. I thought you might like a preview of how we'll all look a few months from now,\" Kali gushed, pulling back to watch his reaction.\n\n\"I must admit it was a shock... but in a good way,\" John replied, giving her an appreciative smile. He turned to look at the rest of the Young Matriarchs. \"I knew that the four of you were pregnant, but actually seeing you like this... it made it all feel so real.\"\n\n\"John, their pregnancies are real,\" Calara cooed, stroking Leena's rounded stomach. \"Your baby is growing inside her tummy...\" \n\nThe Young Matriarchs were soon surrounded by broody Lionesses, along with five Nymphs who fawned over their Master's mates. John spotted Luna standing behind the scrum of maternal females, the assassin watching him wistfully as she kept a respectful distance. \n\nHe made a point of striding over to embrace her. \"Aren't you pleased to see me, Luna?\" \n\nShe swooned in his arms, letting out a breathy sigh. \"Of course... I missed you so much, John. But it wasn't my place to draw your attention away from the matriarchs.\"\n\nJohn frowned in disapproval as they hugged and glanced at Edraele over her girlfriend's shoulder. *How long has Luna been feeling like this?*\n\n*For a few weeks now,* the Maliri Queen replied. *When we sent Almari and Ilyana away with the fleet, I think Luna started to feel a bit isolated; she's the only woman on Genthalas that you've chosen for motherhood who isn't a matriarch. I suspect that being surrounded by such esteemed company has left her feeling a little insecure.* \n\nNodding his understanding, John pressed his lips against Luna's ear and whispered, \"I missed you too, Luna... and I'd really like to thank you for taking care of Edraele while I was away. Would you spend an evening with me sometime this week? Just the two of us...\"\n\nThe former assassin's yellow eyes were like saucers as she pulled back to gaze at him in disbelief. Biting her lower lip, she blushed and nodded enthusiastically. \"I'd love to!\"\n\nEdraele watched with delight as her girlfriend seemed to blossom in John's arms, Luna's confidence restored to full bloom. After telepathically thanking him for his kindness, she turned her attention to Irillith and Tashana. The twins were fussing over Nyrelle, but they seemed to sense their mother's inquisitive stare and both turned to make eye contact with her.\n\nEdraele glided over to her daughters, trying to hide her anxiety as she gave them a warm smile. \"I'm so glad that the two of you have returned home. I dearly hope that we might be able to spend some more time together, whenever you're free to do so.\"\n\nThe twins exchanged a glance, then Irillith stepped forward to hug her. \"You've changed so much, mother... and I'd really like to get to know the new you.\" \n\nTashana nodded as she embraced them both. \"Perhaps we should simply put the past behind us and all start afresh?\"\n\n\"That would be wonderful... thank you,\" Edraele replied, flooded with gratitude and relief.\n\nAlyssa waited until they separated, then spoke to John and her two fellow matriarchs. *Shall we wait before we do all the formal introductions? I'm sure Jade would love to be here with her sisters and I think it'd be nice if Helene could be a part of it too. Besides, we do have quite an audience...*\n\nJohn glanced at the crowds of watching Maliri and smiled. *That's a good point. Why don't we hold a party so everyone can really get to know each other? Maybe in a couple of days' time? That'll give me a chance to deal with the highest priority issues here, like speaking to all the new matriarchs.*\n\n*A party sounds like a fantastic idea!* Edraele eagerly agreed. *Your safe return is something we should celebrate.*\n\n*I couldn't agree more, Master!* Jade enthused, sounding just as thrilled. *Alyssa's right though; we should wait until Helene has recovered, then she can meet the Maliri at the same time as Jehanna and my sisters.*\n\n*Sounds good to me,* John said, before turning to face the spectators. *Why don't you update the girls about what we're planning and I'll say a quick hello to our audience.*\n\nAs the three matriarchs spread the word about the party, John walked closer to the vast gathering of watching Maliri. The crowd was densely packed and dozens of rows deep, which meant that most of the women at the back weren't able to see him clearly. John held out his arms and shrouded his body in a soft blue glow, causing gasps of wonder from the onlookers. He slowly rose into the air until he was floating serenely dozens of metres above them, the massive audience gazing up at him in awe.\n\nFor a moment he wished that he'd been wearing a suit of Paragon armour, so that he could use the speaker system in the suit to address the crowd, then John remembered that he had an alternative solution at hand. Tapping into sound and air runes, he projected his voice, enhancing the volume so that he could be heard throughout the sprawling hangar.\n\n\"It's wonderful to see all of you here this evening! Thank you for making me feel so welcome on my return to Genthalas. There are lots of familiar faces before me, and so many more of you that I haven't yet had the privilege of meeting... but hopefully that's something that I can rectify in the coming weeks. Queen Edraele has generously invited me to consider this my new home, so I'm afraid you'll have to get used to me loitering around the station.\"\n\nThe Maliri were thoroughly spellbound, hanging on his every word. They all laughed at John's joke, their faces alight with excitement at the prospect of him being nearby for the foreseeable future.\n\n\"I know how hard you've all been working to refit our fleets and I just wanted to say how much I appreciate that effort. Upgrading our ships will save countless Maliri lives and for that you have my eternal gratitude. The safety of our people is paramount to me and I consider the supporting roles that many of you have here at the shipyard to be amongst the most valuable in the Protectorate.\"\n\nThe white-haired Maliri engineers had heard John express similar sentiments before, but there were also many thousands more women present who had only recently arrived at Genthalas in the past month. To hear such effusive praise from an impossibly handsome male, was the absolute highlight of their lives so far. \n\n\"I wish I could reward each of you personally for all your sterling efforts, but I'm somewhat outnumbered and I fear it would take me a lifetime. Instead, I'm planning some major changes for the Maliri Protectorate on your behalf... major changes that should see all of your lives greatly improved for the better. The first step we've taken towards this brighter future was to cease the unending conflict between the Noble Houses and bring all of you together as one people. I expect that many of you never imagined a day when you'd be standing between women from House Valaden and House Loraleth without ducking for cover...\"\n\nHe paused for another round of laughter from the audience, the tens-of-thousands of Maliri smiling affectionately at the women from those Houses. Ever since the fleet refit program began, the engineers had worked in mixed shifts, with prior House affiliations discarded in favour of project efficiency. Edraele's white-haired wards had smoothed out the whole process, acting as a calming influence between the once-bitter rivals. \n\n\"This isn't some temporary truce... this is the way it will be for our whole empire going forward,\" John declared solemnly. \"Now that I've healed the rifts between the Houses, my next step will be to reunify the Maliri living on the homeworlds with those living in exile on the border stations. It's long past time to encourage the males to return home and end this destructive division of our people. Together we can rebuild the Maliri Empire to its past heights and glories... then greatly surpass them!\" \n\nThe quiet attentiveness of the crowd was shattered as they reacted to this news, the enthralled audience exuberantly cheering and applauding his impromptu speech. John smiled and waved at the jubilant Maliri, then dropped down to land gracefully next to his matriarchs and their girls.\n\n\"Shall we say our goodbyes, ladies?\"\n\nThey exchanged fond farewells, with the Maliri waving off the Invictus crew as they walked back to the ship. Edraele and her wards stayed with John, all except her faithful bodyguard who strode over to join Alyssa at the battlecruiser's airlock.\n\n\"Where's Luna going?\" John asked in surprise.\n\n\"She volunteered to escort my honoured guests to their new accommodations,\" Edraele explained, watching the assassin enter the ship. When the Maliri Queen saw John's raised eyebrow, she continued, \"I asked her to stay here, but Luna insisted. When she's satisfied that your girls are settled and have everything they need, she'll rejoin us.\"\n\n\"Was she just being thoughtful or is this down to what we discussed earlier?\" John enquired, watching the former assassin stepping through the airlock.",
        "\"A little of both, I think,\" Edraele replied quietly. \"Which reminds me... thank you for asking Luna to spend an evening alone with you. She's thrilled at the thought of having you all to herself.\"\n\n\"I enjoy her company... and I want to show how much I appreciate all the support she's given you.\"\n\nEdraele nodded in agreement with his sentiments. \"She's been so loving and attentive... I honestly don't know how I would've coped without her.\"\n\n\"I'm sorry the last few weeks have been so hard on you,\" John apologised, stroking her cheek. \"Why don't we retire to your quarters... then I can show you how much I appreciate you too.\"\n\n\"Whatever my Lord desires,\" Edraele murmured, giving him a coy smile as she linked arms with him.\n\nThe crowds parted for John and his entourage of white-haired matriarchs, with every Maliri onlooker fervently wishing that they were one of his chosen few.\n\n***\n\nAlyssa glanced at Jehanna as the girls all walked towards the grav-tube, the dusky reporter lost in her thoughts. \"Are you okay? You seem... unsettled.\"\n\n\"That was incredible...\" Jehanna murmured, her voice filled with awe. \"I've seen John captivate a Terran audience before, but the Maliri really do adore him.\"\n\n\"You can't blame them... he is quite the handsome devil,\" Irillith said, her lips quirking into a wistful smile.\n\n\"Especially in his new courtly clothes,\" Tashana agreed, letting out a dreamy sigh. \n\nJehanna turned to study the starry-eyed twins and was about to ask them a question, but she hesitated, unsure how to broach it.\n\nTashana noticed her indecision and gave her a quizzical look. \"Is there something troubling you, Jehanna?\"\n\nNibbling on her lower lip, the reporter slowly nodded. \"The Queen... she's very beautiful.\"\n\nThe twins shared a glance and smiled. \"She is.\"\n\n\"But Edraele doesn't look a day older than either of you... which I assume is because John fed her and rejuvenated her body. Isn't that weird?\"\n\nBoth sisters paused to consider that for a moment, before Irillith quietly replied, \"The mother we knew before John changed her was... not a nice person. The dramatic change in Edraele's appearance is a helpful reminder that she is not the tyrannical, sadistic monster we once knew.\"\n\nJehanna shook her head. \"No, I mean... doesn't it feel weird that John is sleeping with your mother?\"\n\nTashana smiled in understanding. \"The Maliri outlook towards coupling with a male is quite different to Terran culture. The males are outnumbered twenty-to-one, so a certain sense of... practicality... is called for among the females of our species. It's not uncommon for a male to bed sisters from the same House or a matriarch and her daughter... though not at the same time.\"\n\n\"So you really don't feel the slightest hint of jealousy?\" the reporter marvelled. \n\nAs the twins shook their heads in reply, Alyssa stroked Jehanna's back and gave her a knowing smile. \"How do you feel about John bedding Edraele?\"\n\nJehanna couldn't help blushing furiously and darted an embarrassed glance at the Maliri sisters. \n\nIrillith slipped an arm around her waist and gave the flustered girl a seductive squeeze. \"Perhaps we should discuss it later. What do you think, Shan?\"\n\n\"Mmmhmm,\" she purred, giving her sister a coy look as she also embraced Jehanna. \"That sounds like an intriguing idea.\"\n\nThey reached the Command Deck and Alyssa smiled warmly at their guest as they stepped out onto the Bridge. \"So where to now, Luna?\"\n\n\"Edraele has prepared the Summer House for your arrival,\" the assassin replied, turning towards the twins. \"I hope that will be acceptable?\"\n\nTashana clapped her hands with excitement. \"I haven't been there in decades!\"\n\n\"That's perfect, thank you!\" Irillith gushed, looking equally delighted.\n\nPleased by their reactions, Luna faced Alyssa again. \"Please take us down to Valaden... I'll give you the precise coordinates.\"\n\nAlyssa nodded and bounded up the illuminated steps to the Command Podium, then sat at the XO's station. She powered up the Invictus' engines and the white battlecruiser lifted off from the docking bay, before reversing smoothly out of Genthalas. The ship pivoted under her expert hand, bringing the bow around to face the beautiful green and blue House Valaden homeworld. Engines blazed brightly as the Invictus set off towards the Maliri planet, the warship moving swiftly despite its huge size. \n\nAll the girls except for Jade and Helene were up on the Command Deck, with everyone watching as their blonde pilot closed the distance to Valaden. Following Luna's coordinates, Alyssa partially orbited the planet, then entered the atmosphere above the southern continent. It was presently night time in this hemisphere, their destination on the same longitude as Melfalas, the Valaden capital city. The northern continent was far more populated than the south, clearly evidenced by the scattering of twinkling city lights compared to the darker lands below.\n\nAs they descended, Alyssa glanced over at Luna. \"Is there somewhere we can park the Invictus, or do we need to take the Raptor?\"\n\nLuna gazed away into the distance as she spoke telepathically with her matriarch. A few seconds later, a guidance beacon activated, transmitting a flightpath to the descending battlecruiser. \n\n\"There's a designated landing zone waiting for us,\" Luna explained, gesturing to the glowing green lines. \"Just follow those down and you can land on the surface.\"\n\n\"Will do,\" Alyssa acknowledged, altering course slightly to align their ship with the course plotted by the guidance system.\n\nThe sky was cloudless, giving them a clear view of the landscape below. Rolling hills surrounded a broad valley, the lake at its centre shimmering as it reflected the spectral radiance of the full moon. There was a spark of light near the shoreline, the brightness intensifying as the Invictus began its final approach. All eyes were riveted to the holo-screens and there were several gasps as they got their first clear look at their destination. \n\nBefore them lay a magnificent palace, consisting of soaring towers and delicate crystalline domes. Constructed from the same glittering golden material as Genthalas, the palace seemed to shine majestically, illuminated by the welcome glow from a thousand sparkling lanterns.\n\n\"Holy fuck!\" Dana exclaimed, gaping at the spectacular estate in wonder. \"That's your summer house?!\"\n\nRachel shook her head in disbelief. \"It makes my father's mansion look like a derelict shack!\"\n\n\"House Valaden has always been the wealthiest and most powerful noble House in the Maliri Regency,\" Irillith explained with a wry smile. \"With all due respect to Henry Voss, he's merely a wealthy citizen of the Terran Federation. As Matriarch of House Valaden, Edraele is the uncontested ruler of over a hundred star systems with access to almost limitless resources and riches.\"\n\n\"It's so beautiful,\" Calara marvelled, as she stared at the majestic building in the centre of the beautifully tended grounds. \"Your mother has exquisite taste.\"\n\n\"Actually, Edraele didn't construct the Palace of Saelihn Immanthe, she inherited it,\" Tashana explained, as she studied the ancient building. \"It's thousands of years old.\"\n\n\"Saelihn Immanthe...\" Irillith murmured, glancing at her sister. \"That can't be a coincidence, surely?\"\n\n\"It's certainly possible that the palace could date back to that time...\" the Maliri archaeologist acknowledged, a thoughtful expression on her face. \n\n\"What is it?\" Calara asked, looking at the pair curiously.\n\n\"The name roughly translates to 'Unrivalled Sovereignty',\" Irillith explained, gazing at the elegant structure. \"But in ancient Maliri, the meaning is slightly different and closer to 'Where she rules alone'.\"\n\nTashana nodded, tearing her eyes away from the palace to look at the rest of the girls. \"Saelihn Immanthe has been carefully maintained by a long line of matriarchs because the palace is so beautiful, but it's more practical to rule from the larger palace in Melfalas. Considering what we now know of Valada and how she was cut off from Mael'nerak ten-thousand years ago, this could actually be her original seat of power after she was abandoned.\"\n\n\"I wonder if Valada left anything interesting behind?\" Irillith mused. \"There could be Progenitor archives hidden in the lower levels.\"\n\n\"We should definitely see what we can find while we're there,\" Tashana eagerly agreed.\n\nThe glowing flight path led down to what looked like a depression located on the outskirts of the palace gardens. As the Invictus descended, they could see that it was actually a subterranean docking bay, with more than enough space to accommodate the white battlecruiser. Alyssa touched down in the centre, landing without so much as a tremor, then began powering down the engines.\n\nShe rose from the XO's chair and smiled at the girls gathered around the Command Podium. \"Let's go take a closer look.\"\n\n***\n\nEdraele led John by the hand as she sauntered into her bedroom, her entourage of matriarchs sweeping in behind them. She glanced at him over her shoulder, purple eyes hooded behind long lashes as she gave him a sultry look that added steel to his thickening shaft. Turning at the bed, she crossed her wrists behind his neck and gazed lovingly into his eyes, then leaned in for a tender kiss. Her full lips were soft and warm, slowly parting to invite further exploration with his tongue. \n\nThe Young Matriarchs weren't idle as the couple kissed and after a rustling of robes being hastily discarded, five sets of hands roamed across John's body. They unfastened his jacket and peeled it from his body, being careful not to interrupt either him or the Maliri Queen as he was divested of clothing. When he was naked, the hands returned to caress him, appreciating the strength and power of his masculine physique.\n\nEdraele smiled as they ended the kiss, then stepped back so that her handmaidens could remove her own ceremonial garb. \"How may we serve you, my Lord?\"\n\nJohn paused to admire the six nude Maliri, all so alike with their identical gorgeous bodies, flawless azure skin, and long flowing white hair. That they all looked so similar stirred something primal deep within him, but that was tempered by knowing each of the lovely women personally, and having developed strong feelings for them all. \n\n\"Well to start with, I'm going to need lots of kisses,\" John said with a playful smile, pulling Tsarra and Leena into his arms and kissing each in turn. \n\nThey beamed at him, then began softly brushing their lips against his neck and throat.\n\nHe hugged them close, relishing the feel of their warm skin against his own. \"Then I plan to show my devoted matriarchs just how much I missed them.\"\n\nEdraele closed the distance and reached out to boldly encircle his shaft with her deft fingers. \"You're going to be spending so much time inside adoring Maliri...\" she crooned, her eyes burning with desire. \n\nHis lusty harem enticed him to lay down on the bed, where John was quickly surrounded by nubile, blue-skinned vixens. Wherever his hands roamed, he was able to explore mouth-watering curves, their lovely bodies an enticing contrast between toned muscles and velvety soft skin. Edraele cradled his head in her lap, massaging John's temples as her wards eagerly embraced him. Valani and Nyrelle took turns leaning over to give him kisses, while Tsarra and Leena caressed his muscular chest, the quartet murmuring loving words as they smothered him in affection. Kali wasted no time in straddling his waist and he was soon buried deep inside the exquisite wet heat of her body, her gloriously tight pussy clutching him in a snug grip.\n\nIt felt like he was floating in a sea of bliss, thoroughly immersed in all the love those wonderful girls could give him. John relished every moment, losing himself in their intoxicating sensuality as he reconnected with the mothers of his children... and the women he planned to impregnate.\n\n*Welcome home, John,* Edraele whispered, gazing down at him with a radiant smile.\n\n***\n\nLuna led Alyssa and the crew out of the docking bay via a gleaming golden tunnel, which ran in a straight line for a hundred metres before ending in a wide flight of marble steps. The staircase curved around as it ascended, opening out into a broad hallway inside the palace. If anything, the interior was even more impressive, the high-arched walls decorated with intricate scrollwork and complemented by ornate but tasteful furniture. High overhead were delicate crystal chandeliers, their cheery illumination making the luxurious palace feel welcoming rather than intimidating. \n\n\"Wow...\" Sakura murmured, her eyes like saucers as she gaped at all the splendour on display.\n\nThe rest of the girls were similarly awed, except for the twins who shared a grin, having seen it all many times before.\n\n\"If you think this is impressive, just wait until you see the rest,\" Irillith declared, striding across the spotless polished floor and beckoning the others to follow.\n\nThey accompanied her to the end of the corridor, which opened out into a grand hallway that was large enough to house the Raptor gunship. A solitary Maliri waited for them there, the older woman immaculately dressed in a demure robe.\n\n\"How wonderful to see you again, Yelamha!\" Irillith exclaimed with a warm smile.\n\nYelamha had been standing calm and composed as she waited for their arrival, but when she saw the twins, her eyes widened in surprise. She couldn't help staring at their snowy-white manes, astonished that both sisters had grown out their hair to such scandalous lengths. \n\n\"You haven't changed in thirty years,\" Tashana added, greeting the servant with a cheerful wave. \n\nShaking herself out of her shocked state, Yelamha stammered, \"M-mistress Irillith, Mistress Tashana, you look so... different.\"\n\nLuna stepped forward and said, \"Yelamha, this Terran is called Alyssa and speaks with the same authority as Queen Edraele. You will defer to her instructions for the foreseeable future.\" Turning to Alyssa, she continued, \"Yelamha is the senior servant at Saelihn Immanthe and will ensure that all your needs are catered for.\"\n\n\"It's nice to meet you, Yelamha,\" Alyssa said with a friendly smile.\n\n\"And you, Mistress Alyssa,\" the head servant replied, inclining her head respectfully. \"If you should need someone to attend you, press the runed panels on the wall. If you wish to speak with me personally, simply press the runes twice.\"\n\n\"Will do, thanks.\"\n\nGesturing towards the sweeping staircase that flanked the grand hall, Luna said, \"Let me escort you up to your new bedroom and you can all get some rest. It's late and you must be tired.\"\n\nDana stifled a yawn and nodded. \"I must admit, I am pretty beat.\"\n\nLuna gave her a sympathetic look, then led the way over to the flight of steps and up to the third level. There was another impressive hallway at the top of the staircase, which led to a solitary set of double doors.\n\n\"The layout has changed,\" Irillith noted with surprise. \"All the best bedrooms used to be on the third floor.\"\n\nGiving them a coy smile, Luna glided over to the doors, which opened silently at her approach. There were gasps from the girls as they set eyes on their new bedroom, the scale of it dwarfing the Observatory aboard the Invictus. The room was immense and it was quite obvious that all the rooms on this floor had been merged together to create one vast bedchamber. The new master bedroom was dominated by a huge bed formed from hexagonal mattresses, with the central hexagon surrounded by six others.\n\nLuna activated the holographic control panel at the edge of the bed and explained the functionality, the beaming smiles from her audience growing wider and naughtier by the second. She then pressed one of the runes and ceiling panels slid back above their heads, revealing a magnificent crystal dome. The view of the stars was breathtaking, the Valaden night sky a beautiful tapestry of colourful nebulas amidst the black background of space.\n\n\"Will this suffice for your new accommodation?\" the former assassin asked Alyssa with a raised eyebrow.\n\nShe laughed and gave Luna a hug. \"It's amazing! Please thank Edraele for being so thoughtful.\"\n\n\"I shall,\" Luna replied, smiling with satisfaction. She darted a longing glance at the door, then added, \"Do you need anything else?\"\n\nAlyssa shook her head and smiled indulgently. \"We won't keep you from John any longer. Thanks Luna, have a wonderful evening.\"\n\nLuna's yellow eyes sparkled with anticipation as she waved goodbye to her guests. The former assassin then sprinted for the exit to board a waiting shuttle, her hasty departure accompanied by knowing laughter from the girls.\n\n***\n\nJohn lay on his side, spooning behind Edraele, the Maliri Queen reclining back against him with her thighs spread obscenely wide. He pistoned in and out of her at a slow but steady pace, enjoying the erotic gasps and moans from his post-orgasmic matriarch. Those weren't the only lewd noises in the bedroom, as Nyrelle and Valani were busy suckling from her engorged nipples, while Tsarra lapped eagerly at Edraele's exposed clit.\n\nLeena snuggled in closer from behind, pressing her soft breasts into John's back as she whispered in his ear, \"Are you going to make her cum again, John?\"\n\n\"I think so... she's been such a good girl,\" he agreed, kissing his matriarch's shoulder and drawing another sexy whimper from the exhausted Maliri monarch. \n\nThe door slid open and Luna burst inside, her eyes wild with excitement. \n\n\"I'm sorry I'm so late! I was worried I wouldn't make it back in time!\" she gasped, then sighed with relief when she saw they were all still in bed together.\n\n\"I missed you, honey,\" John said, greeting her with a warm smile. \"Come and join us.\"\n\nLuna was already stripping off her clothes and she was as nude as the rest of them by the time she reached the bed. She paused to take in the erotic tableau, unsure where to fit in as John was already surrounded by statuesque blue females. Kali in particular drew her attention, the youngest of the Young Matriarchs nuzzling John's quad, her tongue lovingly caressing his taut sack. \n\nKali looked up and smiled languidly at the assassin. \"He's been making love to us for hours. His balls are packed full of delicious cum...\"\n\nKneeling at the top of the bed, Luna grinned when she saw the state of Edraele. \"How many times have you climaxed, my love?\"\n\n\"Nine... maybe ten?\" Edraele moaned, her thighs trembling with the adrenalin rush.\n\nJohn caressed her belly, stroking the bulge his cock made in her toned abdomen. \"I was about to fill Edraele up so she can give Kali a good feed. We need her at the peak of fertility before I put a baby in her tummy.\" \n\nLuna bit her lip at that incredibly arousing thought, her soft moan echoed by all the Maliri there. \n\n\"Unless you'd like to feed my matriarchs for me instead, Luna?\" John asked, making eye contact with the horny woman.\n\nShocked, Luna hesitated and shook her head. \"I-I couldn't possibly... it should be Edraele.\"\n\n\"Don't be silly,\" Edraele said as she carefully untangled her limbs from John. \"He wants you just as much as the rest of us.\"\n\nShe groaned as John helped her slide off his cock, then Edraele sprawled on the bed, letting her tired muscles recover after all the activity. John offered Luna a hand and she blushed as he helped her manoeuvre into the position her lover had just vacated.\n\n\"There you go,\" John murmured in Luna's ear as she lay back against his chest and he encircled her in his arms. \"How does that feel?\"\n\n\"Like I'm flying...\" she whispered, the excitement plain to see on her beautiful face as she leaned back to make eye contact with him.\n\nHe gave her a tender kiss, then nodded gratefully to Tsarra when she lined up his throbbing cock with the last girl in his Maliri harem. Her pussy was already slick with arousal and Luna gasped as the broad head spread her open then pushed inside. John tilted her head back so that he could watch her face, savouring the look of ecstasy as she took every inch he had. Her pupils flared as the Young Matriarchs continued where they left off, stimulating her erogenous zones with moist tongues and nimble fingers. ",
        "\"That's it, gorgeous... come hard for me!\" John urged her as he watched Luna react to the overwhelming stimulation. \n\nHer back arched and she cried out in pleasure, a huge orgasm rocking her scrumptious body. John began to move, driving into her with long strokes, which kept Luna reverberating at that same plateau over and over again. \n\n\"You're all mine, Luna,\" he growled in her ear as he held her close. Placing a hand on her quivering belly, he continued, \"I'd get you pregnant right now if I didn't need you to protect Edraele. I can't wait to see you give each other a loving kiss... with my baby growing in your womb.\"\n\nShe gasped, placing her hand over his as she bucked wildly against him, her hips rolling frantically to match his thrusts.\n\n\"My sexy, deadly Maliri assassin... I'm going to tame you, turn you into a doe-eyed mother for our beautiful children...\"\n\nLuna's eyes rolled back in her head, her entire body convulsing as she was wracked by a second mind-melting climax. Seeing her react so dramatically pushed him over the edge too and John cried out with pleasure as he pumped long blasts of cum into her womb. Kali gently sucked his balls as he climaxed, intensifying the sensations as his quad flexed with each spurt. Feeling Luna's tummy swell to take his massive load was another huge turn on and John sagged back into Leena's loving embrace, his mind blown by the titanic release.\n\nIt took some time for him to recover, the sound of quiet feminine moans rousing him from his post-coital stupor. John glanced across the bed at the source of those alluring noises and saw Luna cradled in Edraele's arms, with Kali hungrily slurping away between the assassin's splayed thighs. Edraele was whispering loving words in Luna's ear, the well-sated woman now sporting a euphoric smile.\n\nHe made eye-contact with Kali as she lapped up his cum, the lovely young woman appearing in his mind as they formed an active connection. Her indigo eyes glittered with excitement as she filled up her tummy, her expression a heady mix of elation and anticipation. \n\n\"I know exactly how you feel,\" he murmured as he reached over to affectionately stroke her long white hair.\n\nBy the time all the girls had been fed, John could barely keep his eyes open. Edraele and Luna were flanking him, their fingers lovingly intertwined across his chest. \n\n*How's she doing now?* John asked, stretching before wrapping his arms around them both. \n\n*The happiest I've ever known her...* Edraele replied, her voice profoundly satisfied.\n\n*They're all wonderful girls,* he said, giving her a grateful hug. *Thank you for finding them all for me.*\n\n*I love them all so much,* she agreed, letting out a contented sigh.\n\n\"Thanks for the incredible welcome home, ladies,\" John said quietly to his jubilant bedmates. \"Same again tomorrow night?\"\n\nThey giggled at his joke, then he felt gentle kisses on his arms and shoulders, the Maliri showing their heartfelt appreciation without words. Feeling truly loved and treasured, he dozed off for a blissful night's sleep.\n\n***\n\nIt was quiet on the Bridge of the Aphrodite, the night shift going about their tasks in silence as if they were respecting the late hour, despite the crew being in space. The elevator doors opened and Lynette Devereux walked onto the Command Deck, her gaze immediately drawn to the battleship's Command Podium.\n\n\"Fleet Admiral on deck,\" the security chief declared, rising from his seat to give her a rigid salute.\n\n\"At ease,\" Lynette replied, returning the wave of salutes.\n\nThe Commanding Officer of the Aphrodite turned in her chair to greet Lynette with a respectful nod. \"What brings you to the Bridge, Fleet Admiral?\"\n\nFleet Intelligence had given her a dossier on Rear Admiral Tamar Kahale, the report indicating that she was an officer that believed in firm discipline and strict adherence to Federation protocols. Despite having a rather stern reputation, Tamar had the kind of round face and twinkly eyes that made her seem instantly likeable. \n\n\"Just checking on our progress,\" Lynette replied, glancing at the holographic System Map that floated in the centre of the Command Deck. \"Are we ready for departure?\"\n\nTamar gave her a curt nod. \"The Aphrodite was ready to ship out at 16:00 hours, but some of our escorts were still taking on board munitions. The fleet is now prepped and we'll be making the jump to hyper-space in four minutes, as soon as we reach the outskirts of Alpha Centauri and are clear of any gravity wells.\"\n\nGiving her a disarming smile, Lynette walked up the illuminated steps. \"Relax, I'm not concerned about the delay; I know you run a tight ship. Do we have an ETA for the Outer Rim yet?\"\n\nTamar eased back in her chair. \"We should arrive at Brecken's World in four days' time at 21:00.\"\n\n\"Excellent, thank you,\" Lynette said graciously, standing beside the dark-haired Rear Admiral and looking out across the Bridge. \n\nA holographic map of Alpha Centauri floated in the centre of the Command Deck, revealing the military installations and warfleets gathered in the star system. She gazed at the massive six-armed shipyard that dominated this area of space, and couldn't help worrying about leaving Charles behind on Olympus. Unfortunately, there was no question of bringing him along with her on this jaunt to the Outer Rim, meaning that they'd be separated for the better part of the next two weeks.\n\nTamar cleared her throat and asked quietly, \"Fleet Admiral, may I see you in my Ready Room for a moment, please?\"\n\nLynette nodded. \"Yes, of course.\"\n\nLetting the Rear Admiral lead the way, Lynette followed Tamar to the private room adjoining the Bridge. As soon as the door had closed behind them, Tamar turned to give her a worried frown.\n\n\"May I speak freely, Fleet Admiral?\"\n\n\"You want to know why a fleet of our most advanced warships is being sent to the Kirrix border,\" Lynette stated, rather than asked.\n\nStartled, Tamar nodded in agreement. \"We're on the brink of war with the Brimorians... why aren't we assembling with the rest of the fleets to protect our border against further Enclave encroachment?\"\n\nLynette sighed. \"Have you got anything to drink?\"\n\nTamar walked over to the cabinet behind her desk and produced a bottle of rum and two tumblers. She poured out the amber liquid, then handed one of the glasses to the Fleet Admiral.\n\nAfter taking a sip, Lynette raised her glass in thanks, then sat on one of the sofas. \"We're on a peace mission, Tamar. Resentment against High Command has been simmering beneath the surface in the Outer Rim for decades and the Kirrix invasion has made the situation ten times worse. I have compelling reasons to believe that if we're unable to diffuse tensions in those colonies, they are highly likely to instigate a rebellion and try to secede from the Terran Federation.\"\n\nSucking in her breath, Tamar's brown eyes widened in alarm. \"Are you planning to use this fleet to suppress the revolt before it spreads?\"\n\nSlowly shaking her head, Lynette replied, \"As I said earlier, this is a peace mission. We're going to use every diplomatic option available to us to soothe tensions in the Outer Rim. Under no circumstances will I be ordering your fleet to execute a planetary bombardment... am I quite clear?\"\n\n\"Crystal clear, Fleet Admiral,\" she replied, calming considerably. After a moment's pensive thought, Tamar continued, \"But what if we can't dissuade them from rebelling using diplomacy... what then?\"\n\nLynette grimaced and took another sip of her drink. \"Let's just make sure that doesn't happen.\"\n\n***\n\nThe doors to the Fleet Command Centre at Braoimdh Nautica clanged open, making everyone inside jump in fright as the obnoxious sound echoed around the huge room. The heavy portal was designed to open automatically and it took impressive strength to override the safety inhibitors. The brawny source of that cacophony stalked into the military facility, heading directly for the Brimorian in charge.\n\nShoal-Commander Moichnea quailed as the ruler of the Enclave marched towards him. \"Deep Lord Athgiloi! I was not expecting your glorious presence-\"\n\n\"What was the meaning of your last report?!\" Athgiloi interrupted, his tone scathing. \"What's happened to the invasion armada?!\"\n\n\"I... d-don't know, Deep Lord,\" Moichnea stammered. \n\n\"Put me through to Shoal Master Kaelotegh immediately!\" the Deep Lord demanded. \"I want a status update on the siege of Kinta; he should have captured the Imperial homeworld by now.\"\n\nMoichnea hesitated, his gills trembling with anxiety. \"We're unable to reach him, Deep Lord. Our last communication was with Shoal-Commander Olbhugh from fleet Ungumoth five hours ago. He reported that the planetary conquests along the border are proceeding as scheduled, but he was no longer in contact with the rest of the Armada. It's been over 24 hours since anyone's been able to establish a comms connection with the Retribution from the Depths.\"\n\nAthgiloi glowered at his subordinate, trying not to show his worry at the loss of contact with the leader of the Brimorian Armada and his Enclave flagship. \"Why wasn't I informed of this?\"\n\n\"We attributed the signal disruption to an unresponsive comms beacon located along the invasion corridor,\" Moichnea explained in a rush. \"Shoal Master Kaelotegh's last update stated that he'd met only minimal Kintark resistance, so we concluded there was no need to raise an alarm.\"\n\n\"And?\" Athgiloi snapped impatiently, folding his arms across his chest. \"Was the comms beacon defective? How long until it's replaced?\"\n\nMoichnea's fins drooped, and he lowered his gaze. \"I don't know, Deep Lord. The comms beacon on the border has also stopped responding and now we've lost contact with Shoal-Commander Olbhugh.\"\n\nAthgiloi snorted in derision. \"Let me see a Sector Map of the border.\"\n\nThe Shoal-Commander hurried to activate the representation of the stellar region that served as a boundary between Kintark and Brimorian territory.\n\n\"There... that one!\" Athgiloi barked, pointing at the icon representing the nearest Brimorian fleet to the border. \"Send orders for Fleet Broimedha to advance into Kintark territory and inspect the closest comms beacon. If it has malfunctioned, have them deploy a replacement and re-establish contact with the invasion armada.\"\n\n\"What shall we do if we're still unable to reach Shoal-Commander Olbhugh or Shoal Master Kaelotegh?\" Moichnea asked tentatively.\n\n\"Then inform me immediately,\" Athgiloi growled, looming over the officer. \"And I do mean me alone, Shoal-Commander... do not inform the Deep Pool. Am I understood?\"\n\nThe nervous Brimorian nodded repeatedly. \"Understood, Deep Lord.\"\n\n***\n\nJohn awoke from a deep sleep, feeling that familiar sensation of being flanked by supple female bodies. When he opened his eyes, it took him a moment to get his bearings, until he recognised the opulent furnishings in Edraele's private suite and the tangle of slender blue limbs draped across his body. He was moved to see that all seven Maliri women had fallen asleep touching him, as if they were making sure he wouldn't leave them during the night.\n\nEdraele's eyelashes fluttered open and she gave him a warm smile. *Good morning, John. Pleasant dreams?*\n\n*Athena was a lovely hostess,* he replied, gently stroking her back. *After all the drama yesterday, she was very keen to celebrate my victory over the guide.*\n\nA pained expression crossed Edraele's beautiful face. *You've endured so much recently... I'm so sorry I wasn't able to do more to help. It's been awful knowing how much you were suffering, especially when I've been unable to offer you any real comfort.* \n\n*That's not true, Edraele,* John said, hugging her closer. *You've been nothing but supportive.*\n\nShe looked at him with sympathy. *I felt all your pain, John. Your heartache when you were ignored by your mother, the anguish when your father turned on you, then the terrible grief when you lost Faye... what use were mere words in the face of such tragedy?* \n\nHe gave her a tender kiss. *I knew how much you cared... and that meant everything. While things were going to hell on the Invictus, you stayed strong, never wavering when I needed you the most.* \n\nEdraele let out a forlorn sigh and laid her head against his chest. *That's very kind of you to say, but we both know that my rule in your absence has been a spectacular failure. I should've predicted what would happen when the matriarchs' daughters found out about their plans for immortality. Instead of maintaining stability in the Protectorate and keeping the Maliri focused on preparing for the Progenitor war, my lack of foresight has left you with yet another disaster to resolve.*\n\n*Sarinia bears sole responsibility for instigating that bloodbath. I don't blame you in the slightest, so there's nothing to be gained by burdening yourself with self-imposed guilt. Trust me, I know what I'm talking about,* John said with a look of sympathy. He carefully untangled himself from the slumbering Maliri, then offered Edraele a hand. *We'll deal with the matriarch situation this morning, but first I need a shower... and I don't like showering alone.*\n\nGiving him a grateful and very relieved smile, Edraele took his hand, then clung tightly to John as he levitated them above their sleeping bedmates. \n\n*Easier than clambering over everyone,* he explained, setting them down on their feet once they'd cleared the bed.\n\n*You're so much more relaxed about using your psychic abilities,* she noted, studying him in fascination.\n\nHe shrugged self-consciously. *I realised that they're a part of me and nothing to be afraid of. It's how I use my abilities where I need to exercise caution.*\n\n*An interesting philosophy and one I agree with,* Edraele concurred, nodding her approval.\n\nWith their hands still clasped, she led him towards one of the walls, which slid apart to reveal a concealed en suite bathroom. John smiled when he saw the Terran-style shower instead of the traditional Maliri design.\n\n*Showers aboard the Invictus were a much more sensual affair,* she murmured, leading him into the cubicle. *Once I experienced that, I couldn't go back to the Maliri version.*\n\nThey embraced as hot jets of water sluiced down on them, sharing a loving kiss as the soothing warmth eased the aches in their muscles.\n\n*May I have the pleasure of servicing you, my Lord?* Edraele murmured, her hand reaching down to caress his quad.\n\n*You may,* he replied with an indulgent smile.\n\nJohn stood over Edraele as the Maliri Queen sank to her knees before him. He leaned against the wall with one hand, the other gently cupping Edraele's head as she effortlessly engulfed the head of his cock. Her throat constricted around his shaft as she took him to the hilt, then she sucked eagerly, determined to milk his balls of every drop.\n\nHe made no attempt to hold back, rocking his hips to help Edraele bring him to climax as quickly as possible. Watching her through lust-filled eyes, John revelled in the moment, savouring the spectacular sight of the stunning Maliri beauty on her knees as she worshipped his cock. He pulled back to allow her a deep breath, then sheathed himself in her welcoming throat for the final stretch. The orgasm rushed upon him and John let out a wordless cry as he pumped his heavy load straight down into her hungry stomach.\n\nEdraele had started with her knees demurely pressed together, but she was forced to part her thighs to make room for her bulging belly. She frantically rubbed her clit as she swallowed, making muffled groans of pleasure around the pulsating shaft that stretched her throat. When he'd finished, the Maliri Queen looked as if she were heavily pregnant, her abdomen obscenely swollen with several pints of rich semen. John offered her a hand and helped Edraele to her feet, where they embraced again under the running water.\n\n\"I've been longing to feel this for weeks,\" she murmured, running a hand over her hugely rounded tummy. \n\n\"I'm sorry I was away for so long,\" John said, placing his hand on hers. \"I never want to be apart from you like that again.\"\n\nLetting out a contented sigh, Edraele relaxed in his protective embrace and smiled as she listened to his idle thoughts. He couldn't help comparing her rounded blue tummy to those he'd given Irillith and Tashana on so many occasions and marvelled at just how stunning she looked at that moment. John saw the knowing look Edraele was giving him and suddenly remembered that the Maliri matriarch was reading his mind. He flushed with embarrassment and was about to apologise, when she silenced him with a kiss.\n\n\"You care deeply for my daughters and I love you all the more because of it. You should never feel embarrassed about your relationship with Irillith and Tashana when I overhear your intimate thoughts... the three of us are all quite at ease with the situation.\"\n\n\"I'm not sure how... but I'll happily take your word for it,\" John said, giving her a wry smile. Shutting off the shower, he let the air flows dry his body. \"Quickly changing the subject... have all the matriarchs arrived at Genthalas now?\"\n\n\"All except Vestele Waephyra,\" Edraele explained, before switching back to telepathy as they returned to her bedroom. *She's still alive, but completely unresponsive. I've attempted to contact her homeworld but to no avail, so I still have no idea what happened to Vestele or her daughters. I would've dispatched a fleet to investigate, but I thought it prudent to have all our forces at hand for your return, so they'd be available should you quickly locate the hyper-warp gate.*\n\n*I appreciate your caution, but we won't be in a position to search for Kythshara for at least a couple of days. How far away is Vestele's homeworld?*\n\n*It will take a refitted ship 28 hours to reach Waephyra from Genthalas.*\n\n*Okay... send a fleet to investigate. We need all the matriarchs in good health and singing from the same hymn sheet.* \n\nShe acknowledged his order with a nod. *A fleet will depart within the hour.*\n\nJohn glanced around for the suit that had been stripped from him the previous evening, but saw no sign of the outfit. *Ah damn... I got so caught up with our celebrations last night, I didn't even think about bringing a fresh set of clothes with me.*\n\nEdraele glided over to another section of the wall, which peeled apart before her, revealing broad racks full of clothing. There were scores of the long dresses favoured by the Maliri hanging there, but several of the clothing rails held distinctively masculine apparel. \n\n*You should be able to find something suitable for any foreseeable occasion,* she said, her purple eyes sparkling. *I consulted Alyssa for your precise measurements, so everything should be a perfect fit.*\n\nJohn was touched at all the effort she'd gone to and gave her a grateful smile as he trailed his hand over the clothes rails. The formal Maliri suit that Alyssa had made for him was hanging there too, freshly cleaned and ready to be worn once again. *That was really thoughtful, thank you.*\n\nShe inclined her head graciously, but wasn't able to hide the smile of delight at his earnest gratitude. Edraele's smile broadened as John handed her the white shirt he'd worn the previous evening. \n\n*It's become something of a tradition now,* he explained, helping her with the buttons.\n\nJohn smoothed the shirt over her swollen belly, sending a shiver down her spine at the thrilling touch.\n\n*I can see why...* she murmured, swooning in his arms.\n\nAfter a quick kiss, John dressed in casual clothes. *Let's go make breakfast for the girls. While we're preparing their food, we can discuss what we're going to do about the new matriarchs.*\n\nWith a fond glance at the cluster of serene Maliri cuddled together on the bed, John and Edraele left her bedroom. When the door had closed behind them, they were finally free to revert to normal speech without fear of waking her wards.",
        "\"I've informed the matriarchs that you'd like to hold a council meeting later today,\" Edraele explained, as they walked hand-in-hand along the hallway. \n\n\"There were nineteen matriarchs originally, weren't there?\" John asked, following the Maliri Queen into the kitchen. \n\n\"That's correct. The Young Matriarchs and I were unaffected by Sarinia's actions, but thirteen matriarchs from the other Noble Houses were caught up in the slaughter. With Vestele Waephyra still unaccounted for, Emandra Holaris is the only one of the elder matriarchs known to have survived. Sarinia Baelora has been confined to her quarters, leaving ten other Houses that are now ruled by newly ascended matriarchs.\"\n\n\"What can you tell me about them?\" John asked, glancing around the kitchen to get his bearings.\n\nEdraele opened a refrigeration unit, and knowing that he planned to prepare a Terran breakfast for the Maliri, began handing him the relevant ingredients. \"Four were the youngest daughters of their Houses, all overlooked in the fighting by their mothers and sisters who fatally underestimated them. Those young women all lack confidence and leadership skills, having been neglected and bullied for most of their lives.\"\n\nJohn's expression shifted to sympathy. \"I'm glad they survived at least. What about the others?\"\n\n\"Four are the eldest daughters of their Houses, all groomed for succession since birth. They're as arrogant, manipulative, and selfish as their mothers were before them. The last two matriarchs were the second-in-line to House Kayden and the third-in-line to House Lesandoral.\"\n\n\"What are middle daughters like?\" John asked, as he started cracking eggs into a greased frying pan.\n\nEdraele leaned back against a worktop as she thought back to her own long-dead siblings. \"They tend to be even more spiteful than the elder daughters. There's an assumption amongst noble families that the eldest daughter will eventually replace their mother, which adds an air of insecurity and desperation to the younger sisters. I bore the brunt of some incredibly cruel torments by four of my five sisters, but the eldest, Ityria, spent most of her time trying to appease our mother.\"\n\nJohn paused and frowned. \"Didn't you tell me that Falihna burned her to death?\"\n\n\"You've got a good memory,\" she said, stroking his arm. \"It's actually quite ironic. My eldest sister devoted her life to pandering to Falihna's whims, but Ityria was the only daughter that my mother murdered.\"\n\n\"What happened to the rest of your sisters?\" John asked quietly. \"I don't think you've ever told me.\"\n\nEdraele gazed into the distance as she cast her mind back nearly a century. \"Falihna had grown increasingly unstable, the growth of her brain tumour accelerating with her relentless use of Pyrokinesis. Shortly after she immolated Ityria, my mother was no longer able to bear the pain from her agonising migraines and shot herself in the head. With Falihna's heir apparent reduce to smouldering ashes, it was left to me and my sisters to fight over leadership of House Valaden.\" \n\nShe frowned, lost in the awful memories. \"Believe it or not, I was motivated by revenge for the torments I'd suffered, rather than any real thirst for power. The worst perpetrator was Silverin, who had been tortured by our elder sisters for decades, until I was born and became the youngest sister. When Silverin was no longer the target of abuse, she became a sadistic monster, taking delight in making me suffer instead.\"\n\nShivering involuntarily at the dreadful memories, Edraele's voice dropped to a hushed whisper. \"I poisoned my three eldest sisters with a particularly nasty toxin that dragged their agonising deaths out for hours. I attacked Silverin when she tried to escape and we fought viciously until I managed to overpower her... then I shackled my tormentor while she was unconscious. I kept her alive for a fortnight, slowly flaying the skin from her flesh with a neural lash until she died of a heart attack from the excruciating pain.\"\n\nJohn paused and reached out to cup Edraele's face. \"That wasn't you, remember? It was the old version of Edraele Valaden that was responsible,\" he insisted firmly. \n\nThe troubled Maliri nodded and leaned into his hand. \n\n\"Do you want me to erase that memory?\" he asked with sympathy. Lowering his hand to her cum-filled tummy, he gently caressed her. \"Just say the word and it's gone.\"\n\nEdraele considered that for a moment, then shook her head. \"The memories are grotesque, but they help me understand why my predecessor became such a cruel and sadistic monster.\" \n\n\"Let me know if you ever change your mind,\" John said, leaning over to give her a comforting kiss, before returning to cooking.\n\nAfter watching him for a moment, Edraele said softly, \"You used to be far more reticent about using your psychic abilities for mental manipulation. Is this due to your recent change in perspective?\"\n\n\"I still don't like altering personalities and I hate the thought of doing it against someone's will,\" he clarified. \"But I don't like seeing any of you suffering, so I'm willing to make exceptions if it's something you really want. I put Alyssa through a lot of unnecessary pain by not erasing some of her worst childhood memories and I'm not going to make that mistake again.\"\n\nEdraele cuddled him from behind, the curve of her tummy pressing against his back. \"My daughter was inspired when she started calling you Baen'thelas.\"\n\n\"Maybe so... but it's tragic that I've had to intervene in so many lives,\" John said with a heavy sigh. \n\nShe lovingly kissed his shoulder. \"The galaxy has always been a cruel and unforgiving place. Your interventions have been a shining spark of light in the face of overwhelming darkness... and should be celebrated for the glorious triumphs that they are.\"\n\nHe leaned back and nuzzled her head affectionately. \"Now that's a matriarchal pep-talk. Are you taking notes, Alyssa?\"\n\n*Please accept my humblest apologies, mighty Baen'thelas,* Alyssa fawned sarcastically. *In the future, just let me know precisely how much smoke you'd like me to blow up your ass.*\n\nHe laughed and shook his head in amusement. *What happened to dialling back the teasing?*\n\n*That's when I'm primary matriarch,* the blonde explained airily. *Now that I'm reduced to a supporting role, acerbic one-liners seem far more appropriate.*\n\nJohn rolled his eyes, then turned to kiss Edraele. \"Can you wake your girls? Breakfast is nearly ready.\"\n\nShe nodded and sent out the call to her cohort of wards, then watched as he deftly sliced up a couple of melons, carving the delicious fruit into palatable chunks. They had just set the table and laid out breakfast when Luna and the Young Matriarchs arrived, the Maliri freshly showered and dressed.\n\n\"Take a seat, ladies,\" John said, pulling out a chair for Luna and kissing her before she sat down.\n\n\"Oh, this smells divine!\" Valani gushed, inhaling deeply as she entered the room.\n\nKali went straight to John and stood on tiptoe to kiss him. \"Good morning!\"\n\n\"Morning, honey,\" he replied, giving her a tight hug as he returned the kiss.\n\nHe received similar affectionate greetings from the rest of the Maliri, then held out a chair for Edraele. Once she had sat down, John took his own seat at the head of the table. \"No standing on ceremony. Tuck in before it gets cold.\"\n\n\"What exotic delicacy is this?\" Nyrelle asked, slicing off a piece of the steaming food and moaning as she tasted it.\n\n\"French toast,\" John replied, watching with a smile as they all savoured their first bite of the meal. \"The main ingredients are egg and slices of bread, but I added just a little vanilla extract and a pinch of cinnamon to some syrup... and voila.\"\n\n\"It's truly delicious. Thank you for preparing breakfast for us,\" Tsarra said, giving him an adoring smile.\n\n\"You're quite welcome,\" he said, reaching over to squeeze her hand. \"But that's the last Terran dish I'll be cooking for the next few weeks.\"\n\n\"Oh, I'd love to cook for you!\" Valani exclaimed, looking thrilled.\n\nNyrelle nodded eagerly. \"We all would! We should take it in turns to be fair though.\"\n\nJohn laughed and shook his head. \"I'm not asking you to cook all my meals for me. I'd love to discover more about Maliri cuisine and learn any recipes you'd be willing to teach me.\"\n\nThis sparked another burst of excited chatter, with all the Young Matriarchs immediately volunteering to share their culinary expertise. Edraele watched them with an affectionate smile, which she turned on Luna as she reached out to hold her hand.\n\nAfter the initial excitement was over, John glanced around at the four expecting Maliri and asked, \"So how have the pregnancies been going so far? Have you suffered from morning sickness or any other problems?\"\n\nLeena shook her head and smiled as she placed a hand on her flat stomach. \"No, nothing like that. I haven't experienced any unpleasant side effects.\"\n\n\"We've all been feeling great,\" Tsarra said with a reassuring smile.\n\nJohn saw a wistful look on Kali's face and beckoned her over. She sprang from her chair and grinned as she sat on his lap, snuggling into him.\n\nStroking her stomach, he said, \"I know how eager you are to get pregnant, but would you mind waiting for just a couple more days? I'd like to enjoy making love to you for a little while longer before we put a baby in your tummy.\"\n\nShe let out a happy sigh and kissed his cheek. \"That sounds wonderful.\"\n\n\"Which part?\" Nyrelle asked, raising an eyebrow and grinning.\n\n\"All of it, obviously!\" Kali enthused, beaming with anticipation.\n\nJohn gave her a kiss, then offered her a forkful from his plate, which made the House Loraleth matriarch even happier.\n\n\"And how are you girls coping with being matriarchs?\" he asked the young Maliri noblewomen.\n\n\"Oh, that's been no problem at all...\" Valani murmured, watching wistfully as he fed Kali. \n\n\"Really?\" John asked, genuinely surprised.\n\nNyrelle nodded in agreement with her girlfriend. \"Valani's right, it's been easy. After Edraele taught us how to intimidate our planetary governors with ominous threats, we've had no trouble keeping our Houses under control.\"\n\nKali swallowed her mouthful of food and looked up at him. \"I honestly don't know what my mother used to get so stressed about. Shaedra always seemed to be in a perpetual state of anxiety, along with lots of dark brooding and ugly outbursts of anger. It usually only takes me a couple of hours to deal with House administration, and that's including the logistics of the fleet refits, then I'm free to spend the rest of my time with the girls.\"\n\nLeena burst into a fit of giggles. \"I know why! It's because you're not spending hours plotting the downfall of all the other matriarchs. My mother used to have that down to an artform!\"\n\n\"Don't forget all the scheming,\" Nyrelle interjected with a grin. \"That's very important too!\"\n\nJohn noticed that while Tsarra Perfaren was smiling, it looked rather forced, and she clearly didn't find the subject quite as amusing as the rest of the Young Matriarchs. \"Are you alright, honey?\"\n\nShe nodded and leaned back in her chair, her expression pained. \"I was just remembering what it was like being a matriarch before you arrived and turned the Regency upside down. I can't even begin to describe how stressful it was, knowing that House Perfaren was surrounded by hostile matriarchs, all eager to tear chunks out of my territory. I lost so much sleep worrying that I might fall for one of Edraele's notorious ruses and House Valaden would conquer half my systems.\"\n\n\"I'm really sorry, Tsarra,\" Edraele said softly, giving the young woman a look of sympathy.\n\nTsarra waved away her apology. \"It's not your fault, you were a very different person back then.\" She turned to look at John and continued sincerely, \"I can't thank you enough for intervening to end the Maliri House warfare. I'd started biting my nails I was such a nervous wreck, then you came along and rescued me from that nightmare.\"\n\nJohn patted Kali's bottom. \"Sorry, honey... I think it's Tsarra's turn now.\"\n\nKali pouted playfully, then slid off his lap to make room for the House Perfaren Matriarch. She leaned over to hug Tsarra after she sat down and said quietly, \"I'm so glad he rescued you. You're a wonderful friend... and I'm very lucky to have you in my life.\"\n\nWhen they separated, Tsarra leaned back into John's welcoming arms and gave him a fond smile. \"Do you see what happens when you run around saving people? Now I'm forced to live an idyllic existence, with sweethearts like Kali boosting my self-esteem.\"\n\n\"You have my sympathies,\" he said, before spearing a chunk of melon with his fork. \"Can I offer you some fruit to atone for my part in your gruelling new life?\"\n\nHer green eyes sparkled with joy as she opened her mouth to accept his offering. \"Mmm... delicious! I'll forgive you if I can finish the bowl...\"\n\n\"I'm left with no choice but to capitulate to your outrageous demands,\" John said, smiling as he continued to feed her. Turning his attention back to the rest of the matriarchs, he continued, \"I was just talking about the new matriarchs with Edraele before you arrived, and I'd like to hear your views on the current situation. What do you think about what happened?\"\n\nThe Maliri exchanged glances, then Leena turned to face him. \"Are you asking how we would've reacted if we'd been in their position and received Sarinia's transmission?\"\n\nJohn nodded, curious to hear their thoughts. \"Yes, exactly.\"\n\nEmotions flitted across Nyrelle's face as she quietly replied, \"I wouldn't have had a moment's hesitation in assassinating my mother and sisters, especially if it meant having a chance to be intimate with you.\"\n\nValani nodded in agreement. \"Absolutely. I'd never aspired to becoming matriarch, but if I'd seen Sarinia's message and knew what was at stake, the only thing that would've mattered to me was seeing my mother and sisters dead.\"\n\n\"I know I would've reacted exactly the same way they all did,\" Leena said softly.\n\n\"What about you, Kali?\" John asked the cheerful young Maliri noblewomen.\n\n\"I would've choked the life out of Shaedra with my bare hands,\" Kali admitted, her expression grim. She tilted her head to one side as she studied him. \"Why do you ask? Are you planning to punish the new matriarchs for what they did?\"\n\nJohn slumped back in his seat and blew out his breath. \"I must admit, I'm feeling conflicted about how to handle it. I think it's appalling that they murdered their own families to become matriarch, but I'm starting to realise that I forced their hands by not fully understanding Maliri rules of succession.\"\n\n\"You were raised as a Terran, you shouldn't blame yourself for a lack of familiarity with the customs of the Maliri nobility,\" Tsarra said, looking up at him with sympathy.\n\nHe grimaced, unwilling to absolve himself of blame. \"Ignorance of your culture isn't an acceptable excuse, not when I'm making decisions that affect your entire civilisation. The Maliri are my responsibility now and I can't afford to let anything like this happen again.\"\n\n\"You've claimed the Maliri, John,\" Edraele quietly reminded him, making eye contact across the table. \"Our culture is whatever you decide it should be.\"\n\nJohn gazed back, feeling the crushing burden of responsibility her words evoked... as well as the seductive desire to cast that burden aside and act however he saw fit. She was right of course; as the Progenitor that had claimed their species, the Maliri would not only accede to his every whim, but they would also cheer him on as they did so. To rule with that kind of absolute authority was as tempting as it was terrifying, knowing that wielding such power would inevitably lead to fundamental changes in his own personality.\n\n\"That's... not what I want,\" he said slowly, looking around at the spellbound matriarchs. \"I just want to protect the Maliri and see that you all survive the Progenitor War.\"\n\nLeena smiled and shook her head. \"That's not quite true, John. You banned torture, outlawed assassinations, encouraged trade, and ended the hostility between Noble Houses. You've been reshaping the Maliri into your vision of a benevolent society from the moment you came to power.\"\n\n\"We share Edraele's vision for the kind of utopia you're seeking to create,\" Valani said earnestly. \"Everything you've implemented so far has led to overwhelming improvements in Maliri society. The main reason my planetary governors have fallen into line is because they can see how much House Naestina has benefitted since I became their matriarch... enacting policies that you insisted upon.\"\n\n\"My Fleet Commander actually praised me for accomplishing more in the last two months than my mother achieved in the last fifty years,\" Nyrelle confided with a self-conscious smile. \"I was touched that she would say something so complimentary, but truthfully the credit goes to you for everything we've accomplished so far.\"\n\n\"I know you were reluctant to lead, but you've never been just a figurehead to us,\" Kali said, gazing at him reverently. \"You're a good man and a gifted leader. You inspire me to do the very best that I can for our people.\"\n\nJohn swallowed around the lump in his throat, unaccustomed to such effusive praise. \"I care about the Maliri and I want to improve your lives... not leave behind a legacy of death and destruction.\"\n\n\"You already rescued us, Baen'thelas,\" Tsarra said softly, kissing his cheek. \"Now you're saving our entire civilisation.\"\n\nHe caressed her cheek and gazed into her eyes. \"Some treasures in the galaxy are so precious that they should be protected at all cost. I love you, Tsarra... I love all of you.\"\n\nTsarra swooned in his arms, the look she gave him one of utter adoration. After gently kissing her, he glanced around at the rest of the Maliri and saw they were all gazing at him with similar expressions of rapture.\n\nEdraele's eyes glowed with an enchanting purple light, her lovely smile just as radiant. *Thank you so much... that was wonderful.*\n\n***\n\n*You're welcome,* Alyssa replied with a knowing smile.\n\nThe Maliri Queen let out a blissful sigh. *They're all just lighting up for him... it's so beautiful to see.*\n\n*He can't help himself,* the blonde said, stretching languidly as she basked in the glorious morning sunshine. *Just go with it and get used to being drunk on eldritch energy for the next few days.*\n\n\"You look very pleased with yourself,\" Calara noted, walking over to join her girlfriend and reclining next to her beside the pool.\n\n\"John's working his magic on Edraele's girls,\" Alyssa explained, rolling onto her side and placing her hand on the Latina's bare stomach. \"Did you finish everything?\"\n\nCalara nodded and smiled. \"Yep. I'm all yours now.\"\n\nThey shared a tender kiss, then cuddled together on the comfortable divan.\n\n\"Would you care for another drink?\" the Maliri serving maiden asked, lowering a tray of fluted glasses filled with brightly coloured fruit punch.\n\n\"Thanks very much,\" Calara said gratefully, taking two glasses. \"Sorry, I don't know your name?\"\n\n\"I'm Naesala,\" the Maliri replied, smiling warmly at her guest.\n\nCalara returned her smile. \"Thank you, Naesala.\"\n\n*It's so strange seeing Maliri with short dark hair,* Alyssa noted as she accepted one of the glasses, her acquisitive eyes locked on Naesala as the serving girl moved on to the next group. *Hmm... I've decided I don't like it. I think I'll have to ask John to give the staff a new look.*\n\nCalara laughed and rolled her eyes. *You're so bad...*\n\n\"Would you care for a drink?\" Naesala asked, presenting her tray to the next two Terran teenagers.\n\n\"Yeah, cheers!\" the redhead replied, taking two glasses and handing one to her girlfriend. \"This stuff's amazing!\"\n\n\"I'm so glad you like it, Dana,\" Naesala said, looking genuinely pleased. \"Can I get you anything else?\"",
        "\"Nah, I'm still stuffed after that yummy breakfast. Thanks though.\"\n\nRachel smiled and kissed her hand. \"See... vacations aren't so dreadful, are they?\"\n\n\"This place is pretty awesome,\" Dana grudgingly conceded. \n\n\"How are you coping being away from the Engineering Bay?\" the tawny-haired brunette asked. \"Are you having any trouble switching off from your research?\"\n\n\"No. I'm totally fine,\" the redhead replied a little too hastily. She glanced down at her gorgeous sun-kissed body. \"It does feel weird wearing a bikini without John here to drool over us.\"\n\n\"Nice attempt at deflection, babes,\" Rachel purred, putting down her glass and rolling over to seductively caress her girlfriend. \"It sounds like I need to distract that brilliant mind of yours...\"\n\nDana tried to protest, but the words died on her lips as the brunette untied the bows on her hips and parted her supple thighs.\n\nIrillith twisted on her divan to study the majestic architecture of the palace. \"Mother's made a significant number of changes to Saelihn Immanthe recently.\"\n\nTashana smiled as the redhead's soft moans echoed around the pool. \"Yes, changes for the better...\"\n\nHer sister smirked. \"That's not quite what I meant.\"\n\nRolling onto her side, Tashana gazed into her twin's angular eyes. \"The last time I visited the Summer House was with father.\"\n\nIrillith's breath caught and she embraced her sister. \"Our last trip with him. Oh, Shan...\"\n\nAlyssa watched the twins with concern, making a mental note to speak with John. She turned to face the rocky pool as Sakura crested into the inlet, riding on Marika's back. \"How was the lake?\"\n\n\"It's incredible under there!\" the Asian girl gushed, sliding off the Nymph's back and giving her a grateful hug. \"You should take a look for yourself when you get the chance. There's so many colourful tropical fish and the coral reef is gorgeous!\"\n\n\"Maybe later,\" the blonde replied, still not entirely comfortable with the idea of being under all that water.\n\n\"Alyssa?\" Marika asked, drawing her attention. \"How much longer will Helene be asleep? We'd love to show the lake to her.\"\n\nThe other Nymphs bobbed up in the water, their gills rippling as they awaited Alyssa's answer.\n\n*Based on her level of fatigue, I estimate she'll need at least another fourteen hours to recuperate fully,* Rachel informed Alyssa telepathically, her mouth pre-occupied at that moment.\n\n\"We think she's going to wake up later this evening,\" Alyssa informed the concerned Nymph. \"If Helene still hasn't stirred by then, I'll ask John for help waking her.\"\n\n\"How is Master doing?\" Neysa asked, folding her arms on the edge of the pool and resting her chin on them. \"We know he thoroughly enjoyed himself last night and again this morning.\"\n\n\"You know John. He's working diligently to give the Maliri all the attention they deserve,\" Alyssa replied, winking at the Nymphs. \n\n***\n\nJohn sat behind Edraele's desk with the Maliri Queen on his lap, stroking her swollen tummy as she reviewed the incoming messages on the comms interface.\n\n\"That feels divine, but you're making it very hard to concentrate,\" Edraele murmured distractedly.\n\n\"Do you want me to stop?\" he asked, slipping his hand inside a slash in her dress and circling her navel with a fingertip.\n\nShe shivered with pleasure, but managed to shake her head. \"No... please continue.\"\n\nAs he absentmindedly caressed her, Edraele found the relevant message and expanded the attached document. The holographic display projected a map of the Maliri Protectorate, showing the most probable invasion vectors overlaid with defensive countermeasures.\n\n\"Incredible...\" Edraele murmured, gazing at the sector defences in fascination. \"If I didn't know otherwise, I'd assume that Calara had been developing these plans for years. The way she uses these stellar hazards to funnel prospective enemies into concentrated defensive strong points is inspired.\"\n\n\"She's very gifted,\" John agreed, eyeing the materiel Calara had requested and her prioritised build order. \"Will you have any trouble ramping up production on Genthalas to build everything she needs?\"\n\nThe Maliri Queen quickly scanned through the list. \"We can begin fabrication immediately... but the sheer volume of components Calara has requested will likely take months to complete. Are you sure you want to cease all new ship production, even for vessels that are already half-constructed?\"\n\nJohn paused to consider it for a moment. \"Calara's adamant that we must locate and capture Larn'kelnar's marooned fleets as our highest priority. If we are able to locate a hyper-warp gate and bring back those ships, then focusing Genthalas' manufacturing facilities on constructing mines and gravity-well generators will give us our best shot at decisively defeating a Progenitor invasion.\"\n\n\"And if you're unable to acquire those thrall vessels, what then?\" Edraele asked with a worried frown. \"Wouldn't it be sensible to construct as many warships as possible, just as a precaution?\"\n\nHe grimaced and shook his head. \"If we're forced to engage in a war of attrition against a thrall armada while fighting at a huge technical disadvantage, our casualties will be horrific. We'll take so many fleet losses, we'd never be able to hold off another Progenitor attack... if we even manage to survive the first one.\"\n\n\"We can't just place all our hope in recovering Larn'kelnar's fleets,\" Edraele protested, her frown deepening.\n\n\"I'm not,\" John said, giving her a reassuring squeeze. \"My primary objective is to support Dana in finding a way to mass-produce warships that are more powerful than thrall vessels. When we have the tech advantage, the Progenitor War will take a very different course. Until she's had a chance to develop that research and we can start building those ships, we're just going to have to cobble together the best defences we can muster.\"\n\n*Calara thinks it would be a wise precaution to recall all the Maliri fleets,* Alyssa advised them. *She wants the fleet personnel on standby to crew captured thrall ships as quickly as possible.*\n\nJohn drummed his fingers on the desk. \"Can you give me a status update on all the Maliri fleets that are outside the boundaries of the Protectorate?\"\n\n\"Of course,\" Edraele replied. \"The four fleets we dispatched to intercept the Brimorian invasion have destroyed their targets and are already on their way back to Genthalas. House Valaden's first fleet under Lilyana is en route to the Brimorian border, where we were planning to intercept the last Kirrix dreadnought and liberate the Abandoned prisoners from the Brimorian slavers.\"\n\nHe shook his head. \"We can't afford to wait for the Kirrix fleet to show up. I want Lilyana to launch an immediate attack against the Brimorians as soon as she arrives at the border. Free the Abandoned prisoners, then bring them back to Maliri territory.\"\n\nEdraele paused for a moment, then inclined her head as if listening to another conversation. \"I've given Lilyana your orders. Almari is asking if they should take steps to shut down Brimorian comms along the border before they initiate an assault?\"\n\n\"To keep Maliri involvement in the attack a secret?\" John surmised, his question quickly answered by a nod. He thought about it for a few seconds, weighing the benefits of diplomatic deniability. \"I know we could crush the Enclave, but I don't want to deal with the Brimorians right now. Ask Lilyana to proceed with a covert attack, as long as it doesn't cause excessive delays, or put her fleet at undue risk.\"\n\n\"Orders acknowledged,\" the Maliri Queen confirmed with a smile. \"My second fleet under Fleet Commander Amlaril should be fully refitted with crystal Alyssium plating by now and patrolling the Ashanath border with the Drakkar.\"\n\n\"We need those ships back here as well... but I don't want to leave the Ashanath undefended. Do you know how the Collective's fleet repairs are progressing?\"\n\nEdraele ruefully shook her head. \"I can send telepathic orders to Amlaril, but she's unable to respond in kind. The only way to receive a status update from her is over the comms network.\"\n\n\"Dana's already reverse-engineered the Vulkat psychic comms device,\" John said, tapping a finger on his chin. \"We should send that schematic to the Ashanath over standard comms and start constructing one on Genthalas. By the time the Ashanath have built one for themselves, Dana will have had time to complete her new ship designs, and we can transmit those along with any new tech we want to give them.\"\n\n*I could just pop into the Ashanath Command Network and say hello,* Alyssa volunteered. *It'd be nice to see Senior Councillor Ularean again and I can find out how they're getting on with repairs.*\n\n*That's a good idea, but I still want you to rest,* John said in a tone that brooked no argument. \"I'll give Ularean a call right now and find out how the Ashanath are doing. Edraele, would you mind putting me through?\"\n\nHis Maliri matriarch initiated the secure call, then snuggled into him as the comms broadcast was routed across the Terran Federation to the Ashanath Collective. When the call was finally acknowledged, Edraele slid gracefully off his lap to move out of view. Senior Councillor Ularean appeared on the screen, his large grey head filling most of the display. Black eyes stared at John, the Ashanath leader blinking rapidly. \n\n\"JohnBlake, this is a pleasant surprise,\" Ularean said in his eerie, whispering voice. \"I hope that all is well with you and your lovely associates.\"\n\n\"We're all fine thanks,\" John replied, smiling at the startled Ashanath. \"How are your people faring? Are you fully recovered after the recent trouble with the Drakkar?\"\n\n\"We are indeed. Our fleets have been repaired and the losses replaced. The heroes that sacrificed themselves to defend Ashana have been honoured, their likenesses standing in the Park of Remembrance.\"\n\n\"They fought very bravely,\" John agreed, inclining his head with respect. \n\nUlarean nodded, then looked at him quizzically. \"I assume that you did not contact me to ask after our rebuilding efforts. Is there another purpose to this call, JohnBlake?\"\n\n\"There is,\" he admitted. \"The one responsible for instigating the Drakkar attack has been defeated.\"\n\nEyes widening in astonishment, Ularean's tiny mouth fell open. \"You were victorious?! That is marvellous news!\"\n\n\"He's paid for his crimes,\" John said quietly. \"But there are dozens more just like him.\"\n\nUlarean's elation crashed to despair an instant later. \"Dozens more?!\"\n\n\"I'm afraid so,\" John said, his expression bleak. \"Have you finished assisting your guests with their refit?\"\n\nThe Ashanath Senior Councillor was silent for a long moment, digesting the dreadful revelation that there were many more Progenitors posing a threat to the Collective. He telepathically informed the High Council, sparking a frantic burst of panicked conversation. \n\n\"Ularean?\" John prompted him. \n\n\"I a-apologise, JohnBlake. I am just o-overwhelmed,\" Ularean replied, his voice modulator warbling as it tried to interpret his terrified thoughts. \"Yes, we have c-completed the work for our honoured guests.\"\n\nJohn leaned forward and said quietly, \"I originally planned for them to patrol your territory while we rotated out more... guests... to the Ashanath Collective for further assistance. With the battlefield broadening, we've had to change our plans, and I need to recall Amlaril to help with our next campaign. We'll be sending you schematics for a psychic comms device, and once it's up and running, Dana will be able to transmit new ship designs and tech blueprints. I want you to use the materials we sent to begin construction of those vessels as quickly as possible.\"\n\n\"The Collective greatly appreciates your generosity and benevolence,\" Ularean replied, giving him a respectful bow.\n\n\"We know the Drakkar already threw everything they had at Ashana, so we shouldn't be leaving you exposed to further raids,\" John said, with a pensive frown. \"You should also be safe from the... wider conflict... but there are no guarantees. I'd advise you to treat the new shipbuilding program with the utmost urgency, just in case.\"\n\n\"I understand, JohnBlake,\" the Senior Councillor said, looking suitably sombre. \"We will make the appropriate preparations.\"\n\n\"I'm sorry to be the bearer of bad news,\" John said with regret. \"Take care, Ularean.\"\n\n\"There is no need to apologise. On the contrary, I greatly appreciate your warning,\" Ularean said inclining his head in gratitude. \"Goodbye my friend... and good luck.\"\n\nThey ended the call and John slumped back in his chair. \"That went well... but I feel bad about scaring him like that.\"\n\nEdraele brushed her fingers through his hair, gently comforting him. \"Ularean knows what we're facing and understands what's at stake. At least now the Ashanath are forewarned so that they can defend themselves to the best of their ability.\"\n\nJohn closed his eyes and let the tension drain out of him with Edraele's soothing touch. \"True.\"\n\n\"I've contacted Fleet Commander Almaril and ordered her to return to Genthalas,\" the Maliri Queen added. \"She should arrive in approximately four days time.\"\n\n*I've updated Dana,* Alyssa informed him. *She'll send out the schematics immediately, then discuss advanced warship design with Calara. Between the two of them, they should be able to come up with some huge upgrades over the current Ashanath saucers.*\n\n\"Thanks, ladies. It feels like we're making the right move recalling all the fleets,\" John noted, before rising from his chair. \"With that out the way, I can focus on the matriarch situation. I think it's time I visited Sarinia Baelora.\"\n\n\"Would you like me to accompany you?\" Edraele asked, standing beside him.\n\nJohn stroked her rounded stomach and smiled. \"I think you might give her a bit of a shock if you turn up looking like this. It's probably better if I speak to Sarinia alone.\"\n\nEdraele slipped her arm around his and they walked back to their bedroom to get changed. He paused by the racks of clothes, struck with indecision about what to wear.\n\n\"I thought I'd put the Mael'nerak suit on for the Council of Matriarchs, just to add a bit of grandeur to the occasion, but it seems like overkill for meeting Sarinia,\" he mused aloud, looking towards Edraele for some guidance.\n\nShe reached for the jacket and handed it to him. \"Wearing that will be a fitting reminder that you're the ultimate authority in the Maliri Protectorate and her fate rests in your hands. I don't think you can be overdressed under those circumstances.\"\n\n\"Yeah, good point,\" he agreed, stripping off his casual clothes. He brushed his hand across her stomach and added, \"You can keep the shirt. It looks much better on you anyway.\"\n\n\"I had no intention of returning it,\" she replied, her eyes twinkling as she passed him a spare dress shirt.\n\nJohn chuckled as he dressed, slipping on the shirt, then fastening up the trousers and jacket. Edraele smoothed out the collar and nodded with satisfaction at his appearance.\n\n\"You look like a man who's claimed the Maliri for his own,\" she said, planting a soft kiss on his cheek.\n\nHe paused and clasped her hand. \"Thanks for this morning. You and your girls did a wonderful job of making me feel completely at ease in your company. I thought it might take me a few days to settle in, but it really has felt like being welcomed back to a loving home.\"\n\n\"Everyone's reaction has been completely genuine. We're all overjoyed to have you back again,\" she replied, giving him a fond kiss. \"Luna is waiting for you outside my quarters; she'll lead you to the suite where Sarinia is being confined.\"\n\n\"Brilliant, thank you,\" John said, returning Edraele's wave as he left her bedroom. \n\nLuna greeted John with a smile as he emerged from Edraele's quarters. \"It's this way,\" she said, gesturing towards one end of the corridor.\n\n\"Thanks,\" he replied, the two falling into step with each other.\n\nThey walked together in silence, their long strides eating up the distance as they headed towards the luxurious guest suites where the new matriarchs were all residing.\n\nJohn studied the enigmatic assassin. \"You were very quiet during breakfast this morning. I don't think you said a word.\"\n\nLuna's yellow eyes flicked his way and she met his curious gaze. \"You were discussing pregnancies with the Young Matriarchs, then asked for their views on the old matriarchs being murdered by their daughters. I didn't feel comfortable contributing to either conversation, not when their opinions were more valid than mine.\"\n\nJohn came to a halt, reaching out for Luna's hand to stop her too. \"I want you to stop thinking that way, Luna,\" he said firmly. \"I'm always interested in your opinion... and coming from a different perspective it's just as valuable to me as theirs.\"\n\n\"But... they're all matriarchs and I'm just-\"\n\n\"No,\" John interrupted. \"You're all Maliri that I've pledged to start a family with... and that makes you equals in my eyes.\"\n\nHe saw the scepticism in her gaze and knew that Luna still wasn't quite convinced.\n\n\"Still don't believe me? Alright, close your eyes and tell me who do you think I care more deeply about: you or the new matriarchs?\" John placed his hand over her heart and saw Luna inhale sharply, a contented smile appearing on her face as their connection resonated deep inside.\n\n\"Me,\" she replied, slowly reopening her eyes.\n\n\"Are you sure?\" John teased her. \"They lead Noble Houses and you're 'just an assassin'. Surely the fact that you and I have been intimate wouldn't make any difference to how I feel about you?\"\n\nLuna blushed and bit her lip. \"I'm sorry... I didn't mean to doubt you.\"\n\nJohn leaned in to give her a reassuring kiss. \"You, Edraele, the Young Matriarchs... you're all striving to help me make the Protectorate a better place. You have different roles, but you're all equally important. The only reason that you're not expecting yet is because I couldn't bear the thought of you losing our child if you were injured in combat. That's why I haven't got the Invictus crew pregnant yet either, so if it helps, think of yourself as being equal to them.\"\n\nHer eyes widened in astonishment. \"Really?!\"\n\n\"Of course. You're very important to me, Luna, and not just as a prospective mother of my children. Rumour has it that you're the finest swordswoman in the Maliri Protectorate... so I'm hoping that you'll agree to be my new instructor.\"\n\nLuna's face lit up with excitement. \"I'd love to spar with you, John!\"\n\n\"First session tomorrow morning?\" he suggested, sharing an eager grin with her.\n\n\"Yes, definitely!\" she gushed, throwing her arms around him.\n\nWhen they set off again, Luna seemed to bounce along at his side, an extra spring in her step. It was lovely to see how happy she was now, buoyed up with confidence and a new sense of purpose. Distracted as he was by the assassin, John didn't realise they'd reached Sarinia's quarters until his guide came to an abrupt halt.\n\n\"The suite assigned to House Baelora,\" Luna said in her rich melodic voice. \"I'll wait for you here.\"\n\nJohn nodded to her in gratitude, then pressed his hand to the rune beside the door, triggering a soft chime within.\n\n\"You may enter,\" a female voice intoned.\n\nThe crystal doors spiralled open, giving John his first look at the mastermind behind the slaughter of two-thirds of the Maliri nobility. Sarinia Baelora was a striking woman, her beautiful face complimented by her unusual golden-tinted eyes, the first he'd seen in that exotic shade. She held herself with the confident bearing of someone born to rule, radiating authority in her matriarchal robes.\n\n\"Baen'thelas!\" Sarinia gasped, her refined composure shattered in an instant, the Maliri staring at him in open-mouthed astonishment. \n\nJohn entered the suite, moving at an unhurried pace. \"And you must be Matriarch Sarinia Baelora?\"",
        "With eyes like saucers, she managed a choked reply. \"Y-yes, my Lord!\"\n\n\"If you were trying to get my attention, Sarinia, you certainly succeeded,\" John said, studying the noblewoman as he approached. \"I think it's about time we discussed your recent actions.\"\n\nUnable to tear her eyes from him, Sarinia gestured to the chairs set up in the lounge. \"I've been eagerly awaiting your return for just that reason, my Lord.\"\n\n\"Eagerly awaiting my return?\" He raised an eyebrow as he took a seat. \"Didn't Edraele warn you how I reacted when I found out what you'd done? You murdered your mother and four sisters, Sarinia... then incited a massacre that claimed the lives of at least ten matriarchs and 41 noble daughters. Can you give me one compelling reason why I shouldn't execute you for your crimes?\"\n\n\"I would be far more useful to you alive than dead, Baen'thelas,\" Sarinia replied, her eyes glittering as they reflected the light. \"Kali told me that you are currently engaged in multiple wars with numerous deadly enemies. You need gifted administrators leading your Houses; women with the intelligence and expertise to provide you with all the personnel and resources you require.\"\n\n\"I already had them in place,\" he noted dryly. \"Until you conspired to slaughter thirteen of my matriarchs.\"\n\nShe shook her head and gave him a condescending smile. \"With all due respect, my Lord, those wizened crones were long past their prime. After centuries of bitter rivalry, the old matriarchs were more obsessed with seeking revenge for ancient grudges than ruling the star systems under their control. For the last fifty years my mother left the administration of House Baelora in my hands, while she focused all her energy on plotting to increase our standing in the House rankings.\"\n\nJohn was surprised at how much that resonated with everything the Young Matriarchs had told him only that morning. They had joked about the amount of time their mothers spent scheming against the other matriarchs, but that seemed to be the case across all Houses.\n\nSensing that she had piqued his interest, Sarinia pressed on. \"I also know that your Queen had a fractious relationship with the old matriarchs. As Matriarch of House Valaden, Edraele was brutally effective in maintaining her position at the top of the rankings, but those victories came at a high cost to the lesser Houses. My mother was not alone in despising Edraele and centuries of visceral hatred cannot be simply brushed aside.\"\n\nShe sat forward on her chair, speaking eloquently and with passion. \"I've had the pleasure of meeting Queen Edraele and she's a remarkable woman... truly an inspired choice to lead the Maliri on your behalf. She'll have no trouble forging strong alliances with the new matriarchs, now that their interactions are unburdened by historical grievances.\"\n\n*Impressive, isn't she?* Edraele noted. *Do you see how she interjects flattery to make her manipulation more palatable?*\n\nJohn had noticed, but didn't react to the telepathic commentary. \"I'm willing to admit that you might have made Edraele's life easier in dealing with the matriarchs, but that in no way justifies your actions.\"\n\nSarinia locked eyes with him and gave John a knowing look. \"I daresay that I might have made your interactions with the matriarchs far more pleasant too. My mother was bitter, spiteful, and cruel... hardly an appealing woman, and certainly not worthy of someone like you. The thought of being intimate with Gaenna to rejuvenate her must have turned your stomach... let alone the prospect of bedding that malevolent old hag to sire an heir.\"\n\nHe was unable to deny that point either and hesitated, unsure how to reply. John's main bone of contention with the old matriarchs was that they were responsible for inflicting centuries of horrific abuse on both their daughters and their subjects. Restoring their youth had felt like rewarding them for those monstrous actions and was a conundrum that he'd been dreading, but now he no longer had to compromise his morals for political expediency. As much as he was appalled by the slaughter Sarinia had instigated, there was no doubt that the new matriarchs were considerably better people than the women they were replacing.\n\n\"I've seen the Young Matriarchs and know why they found your favour; each is in the fresh bloom of youth and breathtakingly beautiful,\" she murmured, her voice dropping to a seductive purr. \"Now, instead of just five lovely Maliri maidens to carry your heirs, I've provided you with ten more untouched beauties, all of them desperate to be part of your legacy... and share your bedchamber.\" \n\nSarinia rose from her chair and slipped the robe from her shoulders, letting it pool at her feet. \"I'm sorry, my Lord... I misspoke. There are eleven of us willing to serve you in any way you desire...\"\n\nJohn stood as well and slowly approached the Maliri noblewoman, watching as her breath caught with feverish anticipation. \"You're a very beautiful woman, Sarinia.\"\n\n\"Thank you, my Lord,\" she whispered, gazing at him with genuine adoration.\n\nHe caught Sarinia by surprise when he didn't gather her in his arms, and stepped to the side instead, his gaze sweeping over her naked azure body. Moving around behind her, he saw that her back was covered in a latticework of scars dating back over a century, each one detailing a dreadful history of vicious torment. \n\n\"So much pain...\" he murmured, lightly tracing her scars with his fingertips. \n\nSarinia trembled uncontrollably at his delicate touch, her eyelashes fluttering at each gentle caress.\n\n\"I'm so sorry for what you've endured, Sarinia,\" John said, withdrawing his hand. \"You're as much a victim of this despicable culture as the other noblewomen I've met... all of you suffering decades of torture and sadistic cruelty.\"\n\nShe shivered, suddenly feeling self-conscious as Baen'thelas looked at her with profound sympathy rather than lust. \n\nJohn returned to his seat and gestured towards her robe, a pair of glowing telekinetic hands carefully lifting it back into place. \"Please cover yourself and sit down, Sarinia.\"\n\nShe blushed and refastened her robe, embarrassed that her brazen attempt at seduction had been so firmly rebuffed. \n\n\"I can see how much you've suffered at Gaenna's hand, but that doesn't excuse your crimes. The one rule I insisted upon when I claimed the Maliri was no more assassinations; an edict that you knew Edraele had enacted, but you wilfully ignored.\" \n\n\"So you wish to make an example of me and show the other matriarchs that you aren't to be trifled with?\" she asked, looking at him speculatively. \"I'm willing to submit to any punishment you deem necessary... but wouldn't it send a stronger message if I was disciplined for defying you and then became your most loyal servant?\"\n\n\"It's not about defying my authority. The matriarchy has held themselves above the law for millennia, but in the society I want to build, the same rules should apply to everyone. The Maliri people deserve to live in an Empire that values justice for all.\"\n\nSarinia couldn't help laughing and shook her head. \"The chattel are so far removed from power that they won't even notice the change of matriarchs! Nobody cares what happens within the nobility except other nobles!\" \n\n\"I care about your victims,\" John said, his brow furrowing with anger. \"I could've understood you seeking revenge against your mother after everything she did to you, but you also murdered four of your sisters in cold blood. How can I forgive that?\"\n\nSarinia looked him in the eye and asked plaintively, \"What other choice did I have? I couldn't stand by and let a tyrannical monster like my mother rule House Baelora forever. I would've spared my sisters if I could, but Myrdina, Lieralia, and Rosanae would have all turned on me the moment Gaenna had drawn her last breath. As for Tehlariene, Queen Edraele established a precedent for eliminating all members of a Noble House except for the youngest daughter. As much as I cared for Tehlariene, why would I throw my life away for hers?\"\n\nStudying the deceptive noblewoman, John tried to evaluate if she was being truthful with him now. He had noticed a flicker of genuine remorse in her eyes when she mentioned her youngest sister. \n\n\"You really did love Tehlariene, didn't you?\"\n\nCaught off-guard, Sarinia looked away, unable to meet his probing gaze. \"She was... not suited... for life in a noble family. My sisters tormented her relentlessly, but she was too weak to stand up to their bullying.\"\n\n\"If you cared about her, how could you poison her like that?\" he asked quietly. \"Tehlariene trusted you and you betrayed her. She died terrified and in agony... sacrificed for your political ambitions.\" \n\nA tear rolled down Sarinia's cheek, John's accusations cutting her to the quick. She tried to answer him, but her reply died on her lips as she remembered her sister's final accusatory stare.\n\n\"Do you want to know the real reason why Edraele spared the youngest daughters of the rival Houses she eliminated?\" John asked the shaken noblewoman. He continued without waiting for an answer, \"The brutal nature of Maliri society corrupted those matriarchs, who then ruined their elder daughters, twisting them into another generation of sadistic fiends. The youngest daughters bore the brunt of all that abuse... so Edraele spared them, because they were the only true innocents in those noble families.\" \n\nJohn leaned back in his chair and let out a heavy sigh. \"Aside from Tehlariene, there's at least eight more innocent victims that need justice for what you've done. I wanted to rescue the youngest daughters myself... to save them from all the bullying and abuse, and give them a good life under my protection. By inciting that bloodbath the way you did, you denied me a chance to help them... all just to secure your position as matriarch.\"\n\nSarinia looked at him in horror, realisation finally sinking in that she'd deeply upset the one man that she would've done anything to impress. \n\n\"I-I'm so sorry,\" she stammered, overwhelmed by a sudden deluge of shame and guilt.\n\n\"I know you are... now,\" John said, watching the distraught noblewoman as tears of grief and remorse streamed down her face. \"But that won't bring back the innocents that paid the ultimate price for your ambition.\"\n\nJohn sighed and rose from his chair, then walked away from the weeping House Baeloran matriarch.\n\nTurning at the door, he said quietly, \"I'll return this afternoon. While I'm gone, I want you to think about how you betrayed Tehlariene... and if there's any way you can atone for what you did to her.\" \n\nHe left Sarinia's suite to the sound of her broken sobs.\n\n***\n\nGovernor Lucyna Novitsky walked into the cockpit of the battered freighter, her searching gaze coming to rest on the bearded man in the pilot's seat. \n\n\"What's goin' on, Cap'n Glasbey?\" she asked the stout merchant. \"Why the delay?\"\n\n\"Can't be helped, Guv'nor,\" he replied, gesturing to the monitor. \"Brecken's World flight control is pullin' their hair out. This place is busier than a worm-girl brothel on payday.\"\n\nLuce leaned against the co-pilot's seat and studied the map of the starport below. There were a dozen landing pads in the facility, but every single one of them was occupied with bulky freighters. The local system map was just as active, with scores of civilian vessels waiting in low orbit for their turn to land at the starport. By far the most alarming sight was the trio of Terran Federation assault cruisers floating ominously above the planet's surface.\n\n\"T-Fed warships?\" she grunted, trying not to sound alarmed. \"Ain't they a bit late to the party?\"\n\nCaptain Glasbey chuckled and nodded. \"Yep, but I don't think they're 'ere to fight bugs. They're escorts for the supply convoy; dumped a load of troops in Valley Falls to help unload them cargo haulers.\"\n\n\"Right...\" Luce muttered, trying to resist the urge to sigh with relief. \"Any idea how long 'til we touch down?\"\n\nThe merchant sucked air between his teeth. \"Gonna be at least another... four or five hours, I reckon. You might as well get your 'ed down for a bit. I'll give you a shout when we've got the all-clear.\"\n\n\"Thanks, Cap'n,\" she replied, patting him on the shoulder. \"I might just do that.\"\n\nShe left the cockpit feeling greatly relieved. There was nothing illegal about a planetary governor visiting a neighbouring planet, far from it in fact. However, Luce had the strong suspicion that all those civilian vessels in orbit weren't just merchantmen here for lumber. It looked like Governor Vaughn's clandestine planetary conference was a lot more popular than he'd led her to believe.\n\n\"I hope you know what you're doin' Stefan...\" she muttered, flopping down on the bunk in her quarters.\n\n***\n\n\"How did the meeting with Sarinia go?\" Tsarra asked, looking at John with concern.\n\nHe sat on the chaise longue opposite, with the rest of the Young Matriarchs seated nearby as they waited for their Queen to finish getting ready.\n\n\"She did her best to justify what she'd done and tried to talk her way out of trouble,\" John replied, running his fingers through his hair. \"I think by the end, she finally began to realise just how much I disapprove of the nobility slaughtering each other.\"\n\n\"I think deep down, she was once a nice person,\" Kali said sadly. \"But her mother has been torturing her for over a hundred years and that kind of relentless cruelty has a horrible way of wearing you down.\"\n\nJohn nodded, his expression grim. \"I know... and I'm determined to end that cycle of abuse.\"\n\n\"What are you going to do with Sarinia?\" Leena asked, reaching over to stroke his hand.\n\n\"I honestly don't know,\" he admitted. \"Sarinia's just as much a victim of Maliri society as all the rest of you, but I can't just forgive what she did. Dozens of women died because of her scheming, all just to solidify her position as a new matriarch. She's clearly a very intelligent woman, but I don't think I'd ever be able to trust her.\"\n\n\"I know you'll make the right decision,\" Valani said sincerely, giving him a supportive smile.\n\nHe returned the smile, but it felt strained. \"No pressure then.\"\n\nEdraele chose that moment to glide gracefully from her bedroom, dressed in a magnificent robe that was as regal as it was flattering. Her outfit was reminiscent of formal matriarchal robes, but the intricate design set her apart from the five young women waiting with John in her sitting room.\n\n\"You look gorgeous,\" he said in a hushed voice, staring in admiration at the Maliri Queen as she graced him with a beatific smile.\n\n\"You both do,\" Nyrelle said, watching the couple with wide eyes as John and Edraele kissed.\n\nThe rest of the Young Matriarchs were quick to add their agreement, gathering around to marvel at the exquisite tailoring of their clothes.\n\n\"Have our guests gathered for the Council of Matriarchs meeting?\" John asked over the chatter.\n\nEdraele inclined her head. \"They have indeed.\" Turning to her young wards, she continued, \"Would you go to the council chamber and join the new matriarchs please, my darlings? Your presence will calm any tensions until John makes his grand entrance.\"\n\n\"We'll try to discourage them from clawing each other's eyes out,\" Tsarra said with a wry smile.\n\nThe five Young Matriarchs left Edraele's suite, giggling together as they discussed how the new arrivals would react to seeing Baen'thelas for the first time.\n\nJohn took a deep breath and tapped a forefinger against the back of his clasped hands. \"Perhaps we should go in together, Edraele?\"\n\nEdraele shook her head and gave him a reassuring smile. \"Don't be nervous, my love. Just think of this as an opportunity to meet some of the finest breeding stock the Maliri Protectorate has to offer. After all, it's only a matter of time before they'll all be carrying your heirs.\"\n\nHe threw a startled glance in her direction, then broke out into a grin. \"Aren't you supposed to be calming me down, not making me more jittery?\"\n\n\"I couldn't help myself,\" she confessed with a grin. \"I can see why Alyssa finds it so hard to resist teasing you.\"\n\nJohn chuckled and faked a groan of disapproval. \"Come on... we might as well get this over with if you're just going to torment me out here.\"\n\n\"I promise I'll be good from now on,\" Edraele said, reaching out to squeeze his hand. \"Before we leave, someone wants to see you.\"\n\nThe door to her suite opened and Luna entered, accompanied by his green-skinned Nymph.\n\n\"Hello, Master,\" Jade said with a grin. \"I'm glad I arrived just in time.\"\n\n\"Jade!\" John exclaimed, pulling her into a hug. \"This is a lovely surprise. What brings you up here? Is Helene okay?\"\n\n\"Helene's fine, but still sleeping at the moment. I left Marika and Neysa watching over her,\" the Nymph explained, unable to hide a flicker of concern. She broke into a smile and continued, \"As for why I'm here, there are two reasons. I thought you might need my help with feeding all those new matriarchs for the first time.\"\n\n\"Good point,\" John said, darting a glance at Edraele. \"We'll add them to your network as soon as we've discussed everything in the meeting.\"\n\n\"The sooner the better,\" Edraele agreed. \n\nTurning his attention back to Jade, he asked, \"What was the second reason?\"\n\n\"Alyssa asked me to give you this...\" Jade replied, handing him an ingot of Crystal Alyssium. \n\nJohn took the sparkling white ingot and gave the Nymph a grateful smile. \"Ah, thanks for this, Jade. I was so eager to see the Maliri again, I forgot to bring it with me.\"\n\nHe focused his will on the psychically responsive metal, applying more energy until it began to sluggishly respond. It was obvious that the bar had been shaped many times before.\n\n*It's already twenty-shaped,* Alyssa explained. *I thought I'd save you a bit of time.*\n\n*Thanks, beautiful,* he murmured, focusing intently on the design in his mind and pushing the metal to conform to that new image. \n\nAs the globe of metal rotated in the air, it began to thin, forming a delicate lattice in a tight curve. His matriarchs knew what he was making, but they were both impressed by the spectacular glistening tiara that took shape in front of their eyes. When it was completed, John placed it on Edraele's head, the bands slipping through her soft white mane of hair to hold it in place.\n\n\"There... now you really look the part,\" John said with satisfaction. \n\nJade nodded enthusiastically. \"He's right, you look amazing!\"\n\nEdraele bit her lip with excitement, then twirled around and swept back to her bedroom to take a look in the mirror. John leaned against the doorframe and watched as she stared at her reflection, turning from side-to-side to admire the way her tiara sparkled in the light.\n\n\"I love it!\" she gushed, a bloom of dark blue to her cheeks. \"I'll treasure this forever!\"\n\n\"Now you're officially my Eternal Queen,\" John said with an indulgent smile.\n\nShe let out a happy sigh and gave him a toe-curling kiss. \"I'll have to thank you properly later, Lord Baen'thelas,\" she purred, her eyes glinting with arousal.\n\nJohn paused, his brow furrowing. \"That reminds me... what name should I use around here? You and the Young Matriarchs seem to call me by whatever strikes your fancy at the time.\"\n\n\"I suggest you use Baen'thelas as your formal name with the Council of Matriarchs and our people as a whole,\" Edraele advised him. \"The ancient Maliri resonates deeply with us and adds a certain gravitas that feels sublime whenever it's spoken. When the matriarchs get to know you better, then you could suggest they be more informal and use your Terran name.\"\n\nHe shrugged and nodded his agreement. \"Sounds like a workable system to me.\"\n\nJade slinked past and stretched out on the bed, a mischievous gleam in her eyes. \"I'll wait here until you want to use me, Master.\""
    ],
    "authorname": "Tefler",
    "tags": [
        "swallow",
        "cum inflation",
        "shapeshifter",
        "psychic"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-138"
}