{
    "title": "The Seeker Ch. 09 - Final",
    "pages": [
        "Dear readers, \n\nFirst off, I apologize for uploading the wrong chapter. I realize I frustrated many of you, and I'm very sorry! I hope you give this last chapter another try. \n\nI am completely, eternally grateful for your continued support. The fact that so many of you have followed along and encouraged me to keep up this story is overwhelming, truly. When I started this, I never would have imagined that I would have gained so much support along the way. \n\nI apologize for making you wait so long for this final chapter. I struggled for a long time on how I wanted to leave Laiyla and Venlen, and I ended up making several changes before I came up with a resolution I was happy with. I felt I owed it to Laiyla to give her a measure of peace and chance at a normal life, and I couldn't decide how to go about doing that while keeping them together. \n\nSome potentially bad news: This is the final chapter for Venlen and Laiyla. As such, the following is nearly all plot, with a very, very small amount of steamy action. So I apologize for those of you who had hoped they would go out with a very smutty bang... They do not. \n\nFor those of you following my other story, I've just started to include songs that have inspired me along the way, so if this story had a soundtrack, it's listed below. Finally, I've included an epilogue at the end that starts off Adrika's story. Please let me know if you'd like to read more, as I plan to come back to the unfinished pieces of this story and begin working on hers. After, that is, I finish Ivy and Hunter's story. \n\nThank you again, and I hope you enjoy! \n\n***** \n\nSoundtrack \n\nBundy, by Animal Alpha, from album Pheromones \n\nBleed It Out, by Linkin Park, from album Minutes to Midnight \n\nThe Way You Like It, by Adema, from album Adema \n\nInside the Fire, by Disturbed, from The Studio Album Collection \n\nThe Noose, by A Perfect Circle, from Thirteenth Step \n\nGone Away, by The Offspring, from Ixnay on the Hombre \n\nHemorrhage (In My Hands), by Fuel, from The Best of Fuel \n\n(Don't Fear) The Reaper, by Blue Oyster Cult, from Agents of Fortune \n\nExorcism, by Clairity, from Alienation \n\nWolves, by Down Like Silver, from Down Like Silver \n\nShadow of the Day, by Echos, from Shadow of the Day \n\nBeautiful Girl, by Junge Junge, Kyle Pearce, from Beautiful Girl - EP \n\nSweet Dreams (Are Made of This), by Marilyn Manson, from Smells Like Children \n\n... \n\nComing awake was like breaking through the surface of warm, black water. There was no pain, and for a moment, Laiyla wondered if the good Goddess had taken her life after all, despite what Eila had said to her in the autumnal clearing she somehow knew would be her final resting place. But then a cool cloth was placed on her forehead, and thin, feminine fingers brushed through her hair and down her cheek. They were not the thick, calloused fingers she had expected, and her eyes fluttered open in confusion. \n\nShe blinked. She couldn't process the reality of the gentle face smiling down at her, framed by golden hair the color of sunflower petals. \"Mom?\" her voice came out as a croak, rough as sandpaper, and she coughed. But of course, it wasn't her mother. It was the Fae who had raised her when she had been hidden away, far from the clutches of Lystra, her malevolent grandmother, a Seeker like herself. \n\nVanessa beamed. \"There you are.\" Her voice was silken honey, and it coated Laiyla's skin in liquid warmth. Laiyla couldn't help but smile back. \"Am I... is this... Am I dreaming?\" Speaking hurt her throat terribly, and a cup was lifted to her lips. She sat up and took it, tilting it back until water dribbled out the corners of her mouth and ran down her chin. It was sweet nectar. Laiyla drank until her stomach hurt. \n\n\"No honey. You're not dreaming. How are you feeling?\" \n\nLaiyla thought about the question. She felt strangely good. Nothing like the weak, bloody mess she had been when she... \n\n\"Oh God,\" the words a strangled sob as memories flooded her. Damien, what he had done, how her body had been ruined and wrecked and... \n\nHer hand flew to her belly, relief flooding her senses when she felt a small fluttering beneath the tiny swell there. \"She's fine,\" Vanessa breathed, adding her own hand over Laiyla's. \"You're both going to be just fine.\" \n\n\"Mommy!\" a little voice cried happily, a miniature combination of Vanessa and Len, her adopted father, barging through the thick wooden door and running into her mother's arms. Vanessa hoisted the girl onto her lap, brushing back strands of golden red hair. \"Braelen,\" Vanessa crooned. Eyes the color of fire, and just as fierce, lit up as the girl smiled at Laiyla. \"Meet Laiyla. Laiyla, meet Braelen, my other daughter.\" She emphasized the words other, and Laiyla didn't miss the meaning. Blood or not, she would always be Vanessa's daughter. \n\n\"We took care of you while you were sleeping,\" Braelen told her proudly. \"Me and Patrick. We took good care of her, didn't we mama?\" She looked up at Vanessa's loving face, snuggling into the crook of her arm. \"You did,\" Vanessa told her approvingly. \n\n\"Thank you,\" Laiyla smiled. \"I feel wonderful, so you must have done a very good job.\" The girl beamed. \n\n\"Go help your father with dinner,\" Vanessa said, putting her down gently and patting her behind before Braelen ran off. Vanessa looked after her for a beat before turning back to Laiyla, smiling. \n\n\"How am I here, Vanessa? The last I remember,\" she frowned, trying to think, but it was all such a blur, such a nightmare. She never would have imagined she would wake up here. \"I thought I was dying. Did you come looking for me? Did Len find me?\" \n\nVanessa shook her head. \"You were brought here. He didn't think you'd want to wake up in that awful place. He wanted you to feel safe.\" She trailed warm fingers down Laiyla's cheek. \"Loved.\" \n\n\"Who?\" Laiyla asked, but she already knew. \n\nVenlen. Venlen had brought her here. \n\nVanessa peered at her with knowing, sad eyes. She reached down and took Laiyla's hand in hers, rubbing her thumb lightly over the inside of her wrist. \"He carries such guilt. I don't know what he did to you, but I will never forgive him. I'll never forgive either of them.\" \n\nLaiyla looked down at the bare skin Vanessa was brushing her fingers over. Bare skin. \n\n\"But he's trying.\" She gave Laiyla a small smile. \n\nLaiyla groped around for the familiar feel of his presence, but there was nothing. She felt relief. Relief, and a tiny, almost imperceptible measure of regret and loss. \"The bond. He broke it.\" God, her voice sounded so small. Vanessa nodded. \n\n\"Where is he?\" she willed strength into her words, afraid of the answer but determined to face it. \n\n\"Not here.\" Vanessa squeezed her hand. \"He'll come back, but Len will meet him first, at the edge of town. If you're not ready, he'll stay away. For a while.\" She looked pointedly at the swell of Laiyla's belly. \"Not forever.\" \n\nLaiyla's hand flew to it protectively. \"I won't go back there.\" She hated the quiver that crept into her voice. \"I won't bring her back there.\" \n\n\"No,\" Vanessa said thoughtfully. \"No, you won't. Even if he would try it, and I don't imagine he would, none of us would allow it.\" \n\n\"Us?\" \n\nVanessa gestured to the closed door, and Laiyla registered the sound of voices in the room beyond. She swung her legs over the side of the bed, and with an arm wrapped around her middle, Vanessa helped her up and led her to the door, pushing it open in front of her. \n\nLaiyla gaped. It seemed as if all the women of the village were gathered together in the small, cozy living space. The room fell silent as a sea of smiling faces turned toward her, kind, understanding eyes filling with tears. A memory flashed through her mind, of these same women gathering around her, combining forces to send her to another world. At the time, Laiyla had felt like she was being banished. Now she understood, knew better. \n\nIt had been the ultimate act of love. \n\n... \n\nVenlen sat on the roughened edge of a boulder, tapping his foot impatiently. He was waiting for the male Fae, Len. Sensing his apprehension, the chestnut gelding whinnied and stomped beside him. Wind, Laiyla had called him. He rubbed the horse's mane absentmindedly when the giant thing nudged him in the shoulder. He was early, he knew he was early, but it didn't matter. He was done waiting. Done waiting for Len. Done waiting for her. \n\nHe had promised he would stay away, if that was what she wanted. After nearly a week without her, he knew it had been a promise he was unwilling, and unable, to keep. He wouldn't be able to stay away. God help him, he knew he should, knew she needed time and space, but after six, endless days without his fierce little Fae nestled safely in his arms, he couldn't stand it another second. \n\nHe had hated leaving her. Hadn't wanted to let her out of his sight. Severing the bond had crushed him. For three days, he hadn't spoken to a soul. Amlen had brought prisoner after prisoner before him, men and women who had helped Damien commit unspeakable, horrendous crimes against his pregnant Fae, and piece by piece, inch by inch of flayed and scorched skin, he fed his inner monster and helped quiet the demons raging inside his mind. \n\nExcept for Malich. He had arranged something special for the guard who had collared and chained her. After discovering the motherfucker's propensity for taking pre-adolescent boys and girls into his rooms, Venlen had severed the man's dick, had made him watch while he filleted the lost appendage and had made him eat it, bite by forked bite. Afterwards, he had watched, grim satisfaction reverberating deep within his bones, as his dogs had torn the rest of him to bloody shreds and licked his bones clean. \n\nVenlen spotted movement on the path ahead. Fucking finally. He stood and untied Wind from the thick branch next to his perch. He moved them both forward and met Len in the middle. Len's face was a study in placidity. He could read nothing. \n\nThey stopped several yards from each other, each man carefully regarding the other. \n\n\"Well?\" Venlen asked, impatience creeping into his tone. Len was silent for another moment. \n\n\"She has the protection of the entire council. If she changes her mind, or if you even look at her in a threatening way, you'd have to kill every one of us before you'd touch her again.\" \n\nThank Christ. \n\n\"I don't need your threats, old man. I'm the one who brought her here, or don't you remember?\" \n\nThe male Fae was silent. His black hair gleamed in the moonlight, eyes like blue crystal flashing momentarily. His features softened the smallest bit. \"Let's go then,\" he sighed, turning his silver-white mount back toward the direction of the village. \n\nIt was a two-hour ride back to the small cottage where he had left her. They travelled in silence, listening closely to the night sounds as they went. The deadly, pink-eyed creatures still plagued the woods outside the city. Venlen had gotten nowhere trying to discover what they were or where they had come from. He'd had more important issues to consider, but he knew it was something he'd have to handle, and soon. Amlen still held a stronghold on the castle and the city beyond in his absence, but he suspected an attack from the south was imminent. \n\nHe saw a line of smoke ascending into the night sky before the cottage came into full view and felt a flutter of excitement at the sight of the lighted windows. Close. He was so close, he could feel her, even without the bond. \n\n\"Wait here,\" Len instructed before dismounting and climbing up the rickety steps to the heavy door. He closed it behind him, and Venlen sat seething at having been made to stay behind. He gripped the hilt of the longsword at his belt, itching to eliminate anyone standing between him and his Fae. \n\nFinally, the door opened, and there she was. The light from inside the cabin silhouetted her momentarily before the door was gently closed, and she was gently bathed in moonlight, her honeyed skin nearly luminescent in the charged air around them. \n\nShe was so small, so fucking vulnerable. Even as her green eyes stared him down fearlessly, he could see the damage there, the thing his bastard of a brother had taken away, something she would never get back. Her sense of safety, the belief that the world was ultimately a good place, was gone forever. All the healers in the world would never be able to fix that, to heal that wound. \n\nBut he could try, couldn't he? \n\n\"Laiyla,\" he said softly, and reached out to touch her. She flinched back, as if expecting him to strike her, and he backed up a step, frowning. He hated that look on her face, hated that he had helped put it there. Had made her fear him. \n\n\"I'm so sorry,\" he breathed. \n\nShe glared at him. He watched her eyes darken and start to glisten. \n\nHe never could have expected the next words that came out of her mouth. \n\n\"Thank you.\" \n\nHe tilted his head in question. \"What?\" \n\n\"You didn't have to bring me here. You didn't have to...\" she trailed off, her fingers lightly touching the inside of her wrist. \"You didn't have to. But you did. Thank you,\" she repeated. \n\nHe nodded. \"It's over. You know that, right? It's over, keonai mouv.\" \n\nShe nodded, and he watched as a single tear fell down her cheek and clung to her chin. She swallowed. Opened her mouth. Closed it. \"I won't go back there,\" she said, her voice shaking. \n\nHe shook his head. \"I won't ask you to.\" \n\n\"Then what?\" She sighed deeply and crossed her arms over her chest. She was wearing a dress the palest shade of green. It clung to her curves and fell just past her knees. He looked down. She was barefoot. \n\nHe shrugged. \"Stay here. Come back to the city. Wherever you go, you'll be provided for. Food, shelter, clothing. A job, if you want. My men will watch you, from a distance.\" He paused. \"I prefer to have you close. But Laiyla,\" he said, his voice deepening. \"No matter what, you are mine, and she is mine.\" He looked down at where her palm cradled the soft curve of her belly. \"I wish I could, but I can't let you just walk away. I won't hurt you. But I'll be with you. As often as I can.\" \n\nHe watched as her throat worked. She swallowed hard. \n\nShit. Did that really need to be said? \n\nYes. Because she had to know. He wasn't a good man, and she should have no illusions about that fact. He had severed the bond. That was about as much as he was willing to give, as far as he was willing to go. It didn't change the fact that she belonged to him. \n\n\"Do you understand that?\" \n\nShe nodded, silent. \n\n\"Good girl.\" He stalked forward, backing her up until she was against the stone wall of the cottage, boxing her in with a hand on each side of her head. Without giving her a chance to think about it, or to say anything, he leaned down and crushed her mouth with his, satisfied when her lips opened to his probing tongue. He wove his fingers through her dark hair and pulled, lifting her face to his. His palm cupped her cheek, his thumb grazing along her jaw. His knee pushed between her legs, the thick length of his cock pressing into her hip. He caught her lower lip between his teeth and tugged gently as his hand slid up her thigh under the thin material of the dress and cupped her sex. \n\n\"You're already wet for me,\" he whispered against the delicately pointed shell of her ear, slipping a finger through her slick folds. He felt her shudder and tried to turn her head away. \n\n\"No,\" he growled, gripping her chin to turn her face back to his. \"You will not hide from this. Do you hear me?\" Her breath hitched as his thumb circled her clit. \"You won't hide from me.\" \n\nIt was like igniting a fire, like bringing her back to life. She brought her hands up to his chest and shoved, and out of sheer surprise, he stepped back. \"What-\" \n\n\"You did this to me,\" she seethed, her flat palms moving to shove him back another step. \"You brought me back here. You practically handed me to that sick fuck, and then you left me there to fucking rot! I hate you.\" Her lips curled up in a snarl, fierce viridian eyes narrowed and trained on him like a wolf on her prey. \"He broke me, Venlen.\" Her voice cracked, a strangled sob caught in her throat. \"He fucking broke me, and you let him.\" \n\nHe shook his head, holding his palms out to her in surrender. \"I'm sorry,\" he said softly, as if afraid he might spook her. \"I'm so fucking sorry, Laiyla.\" \n\n\"You don't get to be sorry, Venlen,\" she retorted, the fight already seeping out of her. He stepped closer, and she didn't move away. She shrugged. \"I'll go with you. But it's only because I have nowhere else to go.\" \n\nHe nodded, snaking an arm around her shoulders and his other behind her waist, drawing her to him. She rested her forehead against the solid wall of his chest and took in a shaky breath. She was unraveling, and part of him wanted that, wanted her to come undone in his arms, so she would know that she could, that he would be there, that he wouldn't leave her again. Her little hands grabbed fistfuls of his shirt and clenched and he felt the first of her tears soak through as he stroked his fingers through the length of her dark hair. He pressed his lips to the top of her head, holding her tight as she sobbed against him, until she reached the bottom of her well of desperation and finally fell silent. \n\n\"Go say goodbye,\" he told her. \"I'm taking you home.\" \n\n... \n\n\"You'll come back,\" Vanessa told her, a statement instead of a question. \"After she's born. You'll come back so I can meet my granddaughter.\" \n\nLaiyla bit her lip, fighting the hot tears that threatened to escape. Hadn't she cried enough already? She nodded, not trusting herself to talk. Vanessa grabbed her hand from across the wide oak table and squeezed. \"I always knew you were meant to do something special. Something important.\" She smiled sadly. \"Your mother knew it too.\" \n\nBraelen squirmed and shifted in Laiyla's lap, the girl having taken to her instantly. She'd imprinted on her, apparently. The little Fae with fire in her eyes had been stuck to her like glue. \n\n\"She's special too,\" her little voice said, putting a small, sticky hand to the swell of her belly. Her mother had made cinnamon bread, and crumbs stuck to the side of her lips as she smiled up at Laiyla. Something wise beyond her years looked out at her from behind the bright amber red of her pupils. \"You keep her safe, aunt Laiyla,\" she said seriously. \"She's important.\" She said each syllable slowly, her tongue curling around the word. Laiyla stared at her, transfixed. \n\n\"I will, pumpkin.\" Braelen regarded her carefully for a moment, then nodded once, apparently satisfied. \"Good.\" \n\nVanessa chuckled and Laiyla tore her gaze away from the flames to look back across the table. Vanessa was looking over her shoulder, where Venlen sat on the sofa across from Len, seemingly in a staring contest. \n\n\"Is he a good man?\" she asked, turning back. \n\nLaiyla shook her head. \"No.\" \n\n\"But you'll still go with him.\" \n\n\"Yes.\" \n\nVanessa just nodded, seeming to understand. \"You always have a home here, honey.\" \n\nLaiyla looked around the little room, still crowded with the women from her village who had gathered to see her off. Since that first morning, there had been a steady rotation of what Vanessa had called Watchers. They took turns weaving familiar pearlescent energy into her still-healing body, and Laiyla wondered more than once if Eila had belonged to the same group of powerful women. Most of them held steaming mugs of tea, chatting and casting not-so-subtle glances Venlen's way. ",
        "\"She'll grow up under the sun,\" Vanessa said. Braelen's head rested against her chest, heavy eyelids drooping. Laiyla tilted her head. \"What?\" \n\nYears ago, when Venlen and his army had first attacked the royal family, Lystra, Laiyla's grandmother and the only other known surviving Seeker, had put a curse on the men who had threatened her and destroyed her son. She was corrupt and dark, power hungry to an extreme. It had dirtied her soul. Lystra had hooked them to the moon, condemning them to live in eternal night. Indeed, Laiyla's only glimpse of sunlight since being taken had been during her visits to the clearing, with Eila. Miraculous pockets of time with her friend and protector, a woman far more knowledgeable and wise than Laiyla had realized when she had been alive. \n\nVanessa's eyes gleamed. \"You didn't really think that old bag had anything over us, did you?\" She gestured to the women surrounding them. \"It's a simple fix. And you need a tan.\" \n\n... \n\nLaiyla swept her fingers through Wind's tangled mane, wondering if the gelding had ever felt the sun on his chestnut hide, or if he had been with Venlen from birth. The horse whinnied happily, snorting and trotting ahead occasionally. It was all just so familiar, the way Venlen's arms circled around her to hold the reins at her front, her head and back resting against the solid wall of his chest. For weeks, they had traveled this way as they crept closer to the grim fate awaiting them all at the castle gates. And here she was again, little difference besides the sun that now heat the back of their necks and made vibrant colors of the forest around them come to life. \n\nShe'd been so na\u00efve, so stupid not to think of the trap they might be walking into. She'd cast a wide net in the very beginning but could sense nothing out of the ordinary. Instead of delving deeper, reaching into minds and searching for malevolent plots, she had accepted Venlen's judgement. It had been a foolish decision. Had he really trusted his brother so blindly? \n\nAnother thought occurred to her, one that made her sick to think too much about. What if it had all been some sort of test? Had Venlen knowingly walked her into a dangerous situation in order to tempt his brother into making the wrong decision? To test his loyalty? \n\nHad she been used as bait? \n\nShe tried to push the thought aside. What did it matter now? Damien was dead. He had died at her hand, the promised dagger singing as she plunged it deep into his black heart. All that pain, all the endless, disparaging pain... It was over. \n\nVenlen gathered her hair in his big hand and swept it to the side, his breath hot against the bare skin of her neck. He pressed kisses to her nape, clutching her side with one hand, the reins in the other. His tongue grazed the delicate shell of her ear. She shuddered, and she wasn't sure if it was from fear or anticipation. \n\nThe man at her back was an enigma. His cruelty was devastating. He had taken her, picked apart her life piece by piece, slowly destroying everything she had once held dear. He was possessive, obsessed. His tenderness was equally matched with his brutality. She had no illusions about his dichotomous character. He was a dangerous, deadly man, with a dark past, and a monster hiding behind his devastating black eyes. \n\nHe may have released her from the bond, but the child growing in her belly tied her to him just as effectively. He would never let her go, not while she had his child, and she wasn't sure if that knowledge was terrifying or comforting. \n\nBack in the castle, in the dungeon, and in her darkest moments, excruciating pain taking her to the very edge of sanity, she would call out for Venlen. And when he came to her, a ghost returned from the grave, as she lay in a pool of her tormentor's blood, she had crawled into his arms, had asked him to hum the old Oden mourning song as she drifted off into oblivion. In his own dark and twisted way, she knew he loved her. \n\nBut did she love him? Could she love him? Her time with Damien had left her empty, shattered. Her world had fractured at his merciless hands. But when she looked at Venlen, inexplicably, part of that empty, broken place was filled. \n\nHe was whispering, his breath against her neck drawing shivers from her tensed body. He told her he loved her, that she was so brave, that she was beautiful, that he would keep her forever. \n\nHe told her he'd never let her go. And she knew he never would. \n\n... \n\nThe remainder of Laiyla's pregnancy passed in precarious quiet. Her new home, a modest but comfortable two-story cabin, was a full day's ride from the castle. An expansive orchard flanked one side of the house, ripe apples ready for the picking hanging from every branch. A small garden, growing mostly roots and potatoes at this time of the year, stood in the backyard next to a large gazebo. A comfortable oak chair sat to the side, a perfect spot to read when the sun was high in the sky. \n\nAnd finally, the thing that delighted Laiyla the most, was the lake at the back of the house. Venlen had made them a canoe, and they went out often, rowing to the very middle of the lake where the water was dark and endless. They would stop and let the craft drift lazily, and she would lay down, her head cradled in his lap, his hands stroking through her dark hair. She soaked up the rays of the sun like it was water, like it was air: Necessary to live. After being in the darkness for so long, she treasured her time in the light. \n\nBack in the forest, back where she belonged, Laiyla began to collect the fractured pieces of her life. With her Seeker abilities, she reached out to the vegetation around them, turning the garden into a thriving, living thing, each plant sprouting perfectly and deep into the season. Laiyla collected what she needed from the garden and took whatever meat Venlen had hunted that day, creating dishes that nourished them both and spoke to her soul. She thought of Sonya when she made soups, attempting and failing to recreate some of the mute cook's best dishes. \n\nOccasionally, Venlen would have to leave the cabin, to go back to the castle where he was now King and ruler of Prevaria. He had left Amlen in charge in his absence, but there were still times his presence was required. He would spend the time looking over reports from his troops, studying how each village was fairing, deciding if he should adjust the tariffs depending on the success or failure of their crops. The dark creatures were an increasingly worrying problem, and both Venlen and Amlen sensed an approaching war. One of the distant lands had sent the dark creatures, and soon, whoever had sent them would follow. \n\nAmlen had proved to be a surprisingly adept surrogate ruler, although his diplomacy in delicate matters left much to be desired. The man was as large and as mean-looking as any self-respecting ogre, and Venlen could hardly blame him for scaring away some of the more cowardly villagers who came to seek favors or employment from the new King. \n\nOne person who did not seem to be particularly fearful of his giant second-in-command was Prudence, his brother's preferred Oracle. Shortly after the initial castle invasion, the girl had been found unconscious, beaten and bloodied in an alcove near where Laiyla had been kept. After regaining consciousness in a dungeon cell, she had requested an audience with the new King. Venlen had listened, furious, as she had described to him how Damien had ordered the creation of the collar that had cut Laiyla off from her magic. She had described how all his brother's Oracles had come together to create an illusion of placidity when Laiyla and Venlen had first come before Damien. Neither Laiyla nor Venlen had sensed or felt anything suspicious or dangerous because of it, and it had prevented either of them from reaching further into any minds. \n\nPrudence had begged Venlen for her death then, and he had initially refused out of anger. He had planned on subjecting her to the same torturous, painful end as the rest of Damien's twisted court, and had no intentions of allowing the girl any choice or control in the when and how of it. Weeks later, when Laiyla and Venlen were just settling into life at the cabin, Laiyla had brought up the blonde-haired girl who had saved her back at the castle, wondering what had happened to her. Venlen had made her go over the story in detail, recounting how Prudence had carefully cleaned her wounds, using healing balms and poultices to remove the worst of the pain, before sending warm, healing light to the barely-surviving fetus in her belly and removing the collar around her neck. \n\nVenlen had not forgiven Prudence, nor would he ever. But he had been unwilling to personally torture and kill the woman his Fae felt such fondness for, so he had delegated the Oracle's fate to Amlen. The first time Venlen had witnessed Prudence on the arm of his surrogate, he had raised an eyebrow, but finding Amlen unwilling to discuss the matter, had let it go. The girl was wise enough to stay out of sight when Venlen was around, and he declined to spare further attention to the issue. \n\nDuring his absences, Venlen would order a dozen or more specially-trained and carefully vetted men to watch over Laiyla and the cabin. They were instructed to stay out of sight, but Laiyla always knew they were there. She was obsessive about knowing who and what was in her surroundings, casting her net at regular intervals and venturing outside often to speak to the trees. The trees were undoubtedly better at relaying helpful information than Venlen's men were, and Laiyla found immeasurable comfort in pressing her palm up against the rough bark of the Mother tree just two yards from the front porch. The strange, machine-like creatures had, so far, stayed far away from Laiyla's small slice of Prevaria, and the Mother tree always pressed warm reassurances back into her hand. \n\nThe nights during Venlen's absence, when she was alone with her thoughts and memories in the suddenly too-big cabin, were always the worst. Laiyla had come to a certain, uneasy acceptance of her need for her former captor. During those long nights, plagued with nightmares and terrors that threatened to drown her, Venlen's presence seemed a prerequisite for her continued sanity. He made his trips as efficient and infrequent as possible, hating the harried, desolate state he would find her in upon his return. She would sleep for days after his return, exhausted from sleepless nights spent chasing her demons. Wrapped up in his thick arms, the heat from his chest pressing into her back, his soothing hum reverberating through her, she would finally slip into darkness without fearing the shadows, the babe in her belly calmed by the stroke of a strong hand against its mother's skin. \n\nDespite everything, Laiyla managed to find pleasure in the simplistic way of life around the cabin. During her morning runs, she would imagine what their lives would be like once the baby was born. Venlen had told her that he was delegating more and more, leaving the majority of his royal responsibilities to Amlen and the close circle of men Venlen had grown to trust to advise and assist the giant commander. \n\nIt was becoming too easy to visualize a time when the three of them would live together, hidden away there in the cabin, like any other normal family. She would catch herself daydreaming about a future free of darkness, filled with laughter and love and light, and would reprimand herself. Whatever it was between her and Venlen, it would never be the warm, easy love of a normal relationship. \n\nTheirs was something far more twisted, a shadowed, torrid need for each other that bordered on desperation. Venlen called it love, and as much as Laiyla had come to hate the word, maybe it was. If love was a spectrum, maybe what they had could be plotted somewhere along the darker end. \n\nShe was hardly surprised when, two months after arriving at the cabin, Venlen returned from one of his trips with a priestess and a witness. Vanessa and Len had arrived shortly after, and they had been married in the orchard, a crown of flowers sitting atop her head, just like the ones her mother used to bring her. True to his character, Venlen had never asked for Laiyla's hand in marriage. He had simply gathered the requisite materials, arranged the ceremony, and made her his. A perverse part of her was glad he had done it the way he had. Given the choice, she wasn't sure she would have said no, and she couldn't have lived with herself for saying yes. \n\nAdrika was born on a clear, crisp Autumn night. The air smelled like falling leaves, hints of apples from the orchard nearby carried gently through the open window. A small army of midwives gathered around the Fae girl, hands stroking sweat-soaked skin, words of encouragement whispered into delicately pointed ears. Venlen crouched at the side of the bed, his fingers crushed by a delicate hand half the size of his own. \n\nLaiyla's body, as familiar as it was with pain, handled the labor well. Breathing heavily, she followed the instructions spoken by the women around them, pushing with all her strength when required and breathing deeply during short breaks, and soon the tiny infant was pulled from her body and placed, writhing and wet, onto her naked chest. The creature was quickly warmed and dried, Laiyla's tears drenching the precious new skin where she nuzzled it, and mother and daughter were bundled together for the newborn's first meal. \n\nVenlen's hand shook as he reached out to touch sacred skin, his black eyes glittering as he stroked the soft hair atop the unbelievably aromatic head of his daughter. His daughter. The thought drove all air out of his chest. On his knees, he worshipped the tiny halfling resting in his wife's arms. He wondered if it was his imagination, or if her honey colored skin was truly awash with a gentle, ethereal glow. \n\n\"You see it, don't you?\" Laiyla asked softly, her voice breaking with emotion. \"Do you see?\" \n\nVenlen reached up and swiped the damp hair from Laiyla's sweat-soaked forehead. \"Yes, keonai mouv,\" he answered hoarsely. \"I see.\" \n\nLaiyla let out an anguished cry and began to sob. Venlen, keeping one hand atop his daughter's head, stroked Laiyla's hair and hummed softly. More than anything, he wanted to comfort his Fae. More than anything, he wanted to tell her everything was going to be okay. \n\nBut it wasn't true. \n\nThe infant, the precious girl with emerald-flecked midnight eyes, was already pulsating with pure, potent energy, an explosive fusion of her mother's Seeker abilities and her father's dynamic powers. She was perfection personified, born into a world that would inevitably seek to destroy such a beautiful creature. \n\n\"You'll tear them apart,\" Laiyla said, a calculated calm tempering the violence in her words. Venlen looked up into cold viridian eyes, unsettled by what he saw there. \"If it means you must tear the whole fucking world apart, you'll do it. You'll do it to them before they can do it to her.\" \n\nVenlen nodded and climbed up on the bed with them, sending the midwives away. As if trying to use his big body as a shield, he wrapped his arms around Laiyla and the child, pressing soft kisses to the top of each small head. \"I will,\" he whispered, the feel of a petite hand grasping his finger shattering through him with an impact of a lightning strike. \"I promise you, keonai mouv, I will,\" unsure, even as he said it, that it would ever be enough. \n\nAfter all, the Gods themselves hadn't been able to stop him from dragging Laiyla into hell with him. \n\nAll he could do was hope that the devil would have better luck. \n\n... \n\nEPILOGUE \n\n19 Years Later \n\nRi! Come back NOW! \n\nDespite the urgency she felt behind her mother's words, Adrika giggled breathlessly and continued down the dirt path that lead to the small stone jetty a couple of miles away from the cabin. She had plans to spend the day with Patrick, and she may or may not have thwarted her parent's attempts at keeping her indoors during this particularly chilly autumn day. Cognizant of her father's men hot on her tail, she navigated the rocky ground flawlessly, dancing across the rooted ground like it was the easiest thing in the world. \n\nEventually, the guards her father seemed obsessed with keeping around her at all times began to slow and tire, and by the time she made it to the little stone outcropping by the side of the lake, she had all but left them in the dust. She had no doubt they would find her soon, but it wouldn't take her and Patrick very long to make the short swim out to the little island where her best friend had promised to throw her a special birthday picnic. \n\nShe couldn't wait. Although almost nine years her senior, Patrick had been her best friend since she had been old enough to walk. At five years old, she had brought him a bunch of lavender and, with a deadly serious expression on her little face, had proposed to him in marriage. Patrick had gracefully taken the aromatic bundle from her and clasped her little hand in his much larger, boyish one. \"When you're old enough, Ri, you won't want to marry me. But if you do, it'll be my turn to ask you.\" \n\nAdrika blushed at the memory, the wind nipping at her cheeks doing nothing to calm the angry red splotches across her honeyed skin. He had been fourteen years old, and some of the village boys had fallen over themselves, laughing at her youthful antics. He easily could have broken her heart by laughing along and dismissing her altogether, but instead, he had been kind, and thoughtful, and serious. \n\nWell, she was older now. And she still very much wanted to marry the older, handsome boy. Like her mother, she was an impossibly short Fae, even for a halfling, and his slim, athletic frame towered over her by almost a full head. His dark skin was offset by startling, glacier blue eyes, and the hard lines of his jaw was softened somewhat by his full, sensuous lips. To Adrika's fiercely jealous dismay, her childhood idol had quickly become insanely popular among the girls of the village, but he had yet to settle down with any of them, although he dated often. \n\nBut today, he had told her he had something important to talk to her about, and he was throwing her a special birthday picnic in their special, secret place. Butterflies fluttered their wings irritatingly incessantly inside her belly as she reached the stone jetty and burst through the treeline, the net she effortlessly towed behind her alerting her that her father's men were no longer anywhere close behind her. Seeing a dark figure crouched by the edge of the water halfway across the jetty, she rushed forward. \"Hey!\" she called out, \"We should hurry, my parents are -\" \n\nShe stopped short, her feet skidding across the smooth surface of an especially large rock, her breath catching in her throat, as an unfamiliar man unfolded up into an intimidating height in front of her. It wasn't the first time she had run into strangers out here. The jetty wasn't unknown, especially among the village sweethearts looking for a private place to whisper sweet nothings to each other. But as her dark, emerald-flecked eyes drank in the sight of the imposing form currently blocking her way, she felt a horrible sense of foreboding and knew that every inch of this broadly shouldered, heavily muscled male was dangerous, perhaps deadly. Maybe even more so than her own, widely-feared father. \n\nThe man, and it was a man, not a Fae like her mother, or a Dwarf or Elf or halfling like her and Sonya, had dirty blonde hair that was cut in an almost militaristically short style. His eyes were the oddest color she had ever seen, a light color that almost looked pink. A distant part of her mind registered a warning she had heard about pink eyes, but it was overshadowed by her examination of the rest of his strangely handsome face. A large, ugly scar ran along one sharply defined cheekbone, a disfigurement that should have detracted from his attractiveness but somehow added to it instead. His full, severe lips were parted and curved up in a malicious smile as he watched her take him in. Her face, already red from the exertion of her run, flushed deeper, even as ice ran through her veins and settled like a heavy weight on her chest. ",
        "\"Sorry,\" she mumbled, \"I thought you were someone else.\" \n\n\"Patrick.\" His voice was deep and melodic and sent a shiver up and down her rigidly straightened spine. The name was a statement, the implications of which were terrible and impossible, and an invisible hand gripped her throat and constricted her airway. His smile deepened at the look of horror on her heart shaped face. She struggled to find her voice, her mind struggling to make sense of her best friend's name on this stranger's lips. \n\n\"Who are you?\" she croaked, and found herself crouched into a defensive stance, her hand itching and already seeking out her mother's dagger of its own accord. She had to get out of here, she had to find Patrick before it was too late. If her father's men weren't too far behind, she could backtrack enough to get to them and - \n\n\"We have a lot to discuss, Adrika,\" the man murmured lazily, his strangely colored eyes dropping to her mouth. \"We'll talk on the way. Come.\" The man had the audacity to hold out a massive hand, and Laiyla noticed another thick scar cutting across his palm. \n\nAdrika snarled at the proffered appendage and took a step back. \"I'm not going anywhere with you,\" she hissed. \"Where's Patrick? Who are you?\" \n\nThe stranger chuckled. \"My name is Killian. Patrick is safe... For now.\" \n\nIcy fire flicked at her skin, understanding buried so close to the surface she could almost touch it. \"For now?\" she asked tentatively, just as an awful, dread-inducing whirring sound came from behind her. Out of the corner of her eye, she saw a large, dark creature, crouched on all fours, ready to pounce. \n\nKillian's smile deepened. His nearly-pink eyes darkened. Understanding slammed into her. The creature stepped closer. Adrika stood frozen, white hot terror ripping through to her core. \n\nShe knew who this man was. She had heard her father talk angrily about him to her uncle Amlen. \n\nThis was Prince Killian, Kill for short. Dark rumors claimed the man lived up to his name with deadly accuracy. Eldest son of King Jax, heir to the throne of Karmora. \n\nLand of the South. Home of the dark creatures. \n\nPrevaria's greatest enemy. \n\nAdrika's palm curled around the hilt of her mother's dagger. Her defensive crouch deepened, eyes hardened, jaw set. \n\nReady to die, the halfling pounced. \n\n***** \n\nDear readers, I can't thank you enough for following me all the way to the bitter end. I hope the end of Laiyla and Venlen's story provided sufficient closure, although I decided not to give them a perfect HAE. I would like to focus on finishing my second story, so if you've begun to follow Ivy and Hunter, you can look forward to many additional chapters. \n\nI do plan to come back to Adrika and Killian, although I'd like your feedback on the start of their story and if you'd even be interested in hearing more from them. I really am so grateful for everyone who took the time to read this story through to the end. Everyone who provided me with feedback throughout the way helped me develop and shape this story. As it was my first, it wasn't perfect. If I ever end up turning this into an e-book, I plan to change a few things, but have loved every second of this. \n\nAs always, and truly, thank you for reading."
    ],
    "authorname": "ReckingBall",
    "tags": [
        "fae",
        "fantasy",
        "magic",
        "non-human",
        "nonhuman",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-seeker-ch-09-final-1"
}