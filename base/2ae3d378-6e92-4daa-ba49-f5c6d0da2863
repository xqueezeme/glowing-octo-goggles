{
    "title": "It Couldn't Be Helped Ch. 06",
    "pages": [
        "Sorry for the delay but I had the final chapters on my laptop and the hard drive crashed so I was hosed. Thus, I had to write it over and that brought me down! Anyway, I condensed all of it into this final edition as a goodwill gesture to my adoring fans. lol Thanks to everyone who reached out and to Julie, my real life Crystal and my love, who put every word in me. Peace. DJ\n\n____________________________________\n\nI won't lie. It took every bit of restraint I had not to jump up on the couch with her and just slam my reinvigorated cock deep up in her. I wanted to make love to her so bad it hurt but I was also hearing unfamiliar voices in my head telling me that wasn't the right play. It was just like in the movie \"Animal House\" with the Devil whispering to me in one ear: \"Fuck her, hard, right now. Get yours!\" while the Angel said calmly into my other ear \"Take your time, make it real, and make it count.\" \n\nCrystal was still glowing from my making her cum so hard. I could see it in her content expression and in the way her beautiful brown eyes sparkled at me. Her ebony body was motionless and her breathing was littered with deep, savoring inhales as if she was basking in something wonderful. I didn't want to wreck that beautiful portrait of her by launching a kamikaze attack on her pussy because I loved what I was seeing. It was me who created her current disposition and I reveled in the satisfaction of that fact. It would be like asking Da Vinci to wreck his Mona Lisa. It just wasn't going to happen. Thus, the Devil in my ear got the finger despite my overwhelming desire to taste the fruits of the dark side. \n\nInstead, we continued basking in the preciousness of being together as we talked and laughed at how awesome it was to finally hook up. \n\n\"I knew it would be like this\" Crystal said softly \"I just knew it.\"\n\n\"Define 'this' for me\" I asked grinning.\n\n\"Natural\" she replied smiling \"and easy.\"\n\n\"Feels good huh?\" I asked \n\n\"Yes\" Crystal said confidently before breaking down and blushing burying her face into the pillow. \n\n\"I feel you, girl, and I can't believe it\" I said shaking my head in wonder \"This is like Christmas for me and getting everything I wanted.\"\n\n\"Ho Ho Ho!\" Crystal said giggling causing me to bust out laughing too. \n\nI was still on my knees leaning against the couch with my elbows on the cushion and my head resting on my hands. Crystal was lying comfortably on her side exhibiting her ebony body's luscious curves. As we talked my hard cock receded making it now possible for me to join her on the couch without causing a devil induced \"incident.\" \n\nI then got up off my knees to join her on the couch.\n\n\"Yeah, come here, baby\" she said moving herself against the back of the sofa giving me room to lay with her as I sat down. \n\nThen out of nowhere she inhaled loudly and urgently looking terrified.\n\n\"Oh my God!\" she said shooting upwards and softly grabbing the back of my head and my chin. \n\n\"Did I do that?\" she asked regretfully inspecting the back of my neck.\n\nFive scratch marks, two of them deep enough to draw blood, stood out against my white skin. Crystal whined like a regretful parent whose child just skinned their knee. \n\n\"Ohh no, Ohh I am so sorry, baby\" she said softly kissing my wounds \"I didn't realize what I was doing\"\n\n\"I was gonna say something\" I replied while pretending to play the victim \"but screaming out 'Medic! Medic!' while you were going off just didn't seem like the right thing to do.\" I quipped. \n\nCrystal burst out laughing and smacked me on the arm.\n\n\"Quit it, Sean. Stop!\" she said smiling at me adoringly.\n\n\"Stop what?\" I asked grinning.\n\n\"Stop being so damn lovable.\" She replied kissing my lips quickly before she started in on me again. \n\n\"Besides, your injuries are your own damn fault!\" she said smiling defiantly.\n\n\"Smacking around my kitty like you own it, putting your fingers inside places that hadn't ever been felt before.\" She said before inserting a quick side note.\n\n\"Yes, Sean, you are the only person I have ever let play in my ass.\" She said blushing before continuing.\n\n\"Making me cum so good, so hard, and so long like no other.\" She said before reemphasizing heroically to my ego \n\n\"God, like no other\" she said as she shook her head and sighed.\n\n\"So\" she said smiling mischievously and locking her eyes back on mine \"I'll take responsibility for my part if you take responsibility for yours.\"\n\n\"Ok, I plead guilty\" I said grinning while revealing my defense strategy.\n\n\"Guilty by reason of ebony\" I declared \"Shit\u2026book my ass Danno!\" I said shaking my head and chuckling.\n\nCrystal laughed loudly and just burned her liquid brown eyes into mine. \n\n\"What did I tell you?\" She said before kissing me quickly again \"Quit being so damn adorable!\"\n\n\"So it's official then\" I said grinning while my head and ego swelled to size of the Hindenburg due to her praise \"we both took each other to town and blew each other up like never before.\" \n\n\"Let's celebrate\" I suggested \"Want some ice cream?\"\n\nI will never forget the way Crystal looked at me after I asked her that. Her playful disposition vanished replaced by a look of joyful shock. Her mouth fell open and she just gazed at me while her eyes got happier and brighter with each passing second. She sighed shaking her head and looked at me like I had just done something significant and special. \n\nHonestly, I didn't know what I had done to make her look at me like that. It was as if I just gave her a diamond ring and then saved her puppies from drowning. All I know is that it felt good being the object of her escalating affections and I wasn't going to bite the hand that was feeding me. It wasn't until she spoke that I was able to finally put two and two together. \n\n\"Yes, baby\" Crystal said burning her eyes lovingly into mine \"I would love some ice cream right now.\" \n\n\"And you\" She then said in a scolding yet loving tone as she placed her brown hands on my cheeks and slowly slid them back across my face until my hair was in her hands and our faces were inches apart. \n\n\"You are doing everything just right\" she said kissing me softly.\n\nIf I had known exactly what I had done to merit this praise it probably would have felt even better. But as it stood, it felt pretty damn good anyway.\n\n\"You are doing me just right, baby\" she said softly before making her intentions perfectly clear \"and as soon as I share some ice cream with my man, I am going to show him just how much I love the way he is doing me.\" \n\nCrystal kissed me again and then stood up grabbing my hand and led me to the kitchen.\n\nAs we walked it finally dawned on me that I had inadvertently bridged the age gap between us. I had also learned a valuable lesson about older women. \n\nI was used to twenty and under girls who were more insecure about their sexuality and presentation so there was a definite line between romance and sex. Once the sex started, it was total tunnel vision until it was ALL over. Otherwise, they freaked out thinking something was wrong with them. Crystal, however, had already passed that stage and was more into making sure the route there was just as satisfying as the destination. Eating ice cream, to her, was just as important to our evolving relationship as the sex that would follow it. That kind of thinking was foreign territory to me and I luckily stumbled onto it not because of some grand design but rather just out of trying to act older than I was. I knew I needed to buy time and I knew I was hungry so I suggested ice cream. But I would be lying if I said eating ice cream or enjoying the route there were my first priorities. \n\nEither way, it made her happy so I took the credit regardless of my motives. I just rationalized it like shooting a three in hoops. It might go in off the backboard but just because I didn't call out \"glass\" before I shot it, doesn't mean it doesn't count. It's still a three on the scoreboard and that's all that matters. \n\nEn route to the kitchen Crystal stopped in the hallway and slipped my work shirt back on. Again, her putting clothes back on didn't seem right to me almost as if we were taking a step back or something. I followed her lead and put my boxers back on but I remember not being too happy about it. I knew she wanted me as bad as I wanted her so our getting semi dressed again didn't compute in my twenty year old pedal to the metal mentality. I figured there had to be a big picture or solid motive behind these actions but I also knew that I wasn't seeing it yet. \n\nI conceded to her the act of putting clothes back on but I drew the line at how far. \n\n\"Not in this house, girl\" I said grinning as I watched her buttoning up my white work shirt effectively erasing from my eyes chunks of her beautiful ebony skin.\n\n\"In this house and in my clothes we follow the one button rule.\" I said as a matter of fact.\n\n\"So unless you want to start a riot your black ass needs to get to unbuttoning about three of those buttons right now.\" I said before playfully slapping her ass for emphasis. \n\n\"And if I don't?\" Crystal said mischievously looking back at me as she walked quickly into the kitchen with me in hot pursuit. \n\nCrystal made a beeline to the refrigerator and started to open the freezer when I came up behind her and pushed it closed. I spun her around and pinned her back against the fridge.\n\nCrystal started giggling and I could tell she loved our goofing off and my chasing her.\n\n\"Since this is your first time\" I said as I put my arms around her waist and my hands slipped underneath the shirt and began stroking the small of her back softly. \n\n\"I am willing to bend that rule to two buttons but that's as far as I can go.\" I said smiling.\n\nCrystal burned her eyes preciously into mine and flung her arms around my shoulders. She then bolted onto her tip toes and pulled me to her so she could kiss me. \n\n\"Please\" I said grinning. I pulled back 'giving her the hand' while glancing back and forth suggestively between her eyes and my work shirt and its outlaw buttons. \n\nCrystal grinned and playfully sighed annoyingly. Her brown fingers then appeared on her white shirt and she slowly unbuttoned three buttons leaving only two fastened. Just watching her undo those buttons turned me on big time. \n\n\"Happy now?\" she asked smiling reattaching her arms around my neck while mine whipped around her. \n\n\"I'll be happy if you keep going and unbutton them all\" I said grinning as our faces got closer while I felt my cock begin to stir. \n\n\"If I did that then we'd definitely have a riot on our hands\" Crystal said seductively.\n\n\"So I need you to be good now, boy\" she said kissing me softly with her thick lips before pulling back and adding \"so that later when we get bad\" she said before kissing me again\n\n\"We get really bad.\" She concluded provocatively before kissing me deeply and passionately. Crystal didn't let that kiss get too far out of hand and broke away. \n\n\"Feel me?\" she asked smiling. \n\n\"Yeah\" I said resigned to the fact that I was going to have to follow through on my ice cream proposal \"I feel you, girl.\" \n\nCrystal turned and opened the freezer to get the ice cream while I grabbed two spoons. \n\n\"Bowls or bucket?\" I asked her.\n\n\"Bucket\" she said \"and we only need one spoon.\" \n\nI know that exchange seemed harmless but I really dug the idea that we would share a spoon. Some girls would French kiss you forever and then turn around and be grossed out by the suggestion of sharing a utensil. Crystal wanted to share one with me and I guess the trust factor that she exhibited by saying so made me feel good. Not to mention other benefits. \n\n\"Now you are the one doing everything just right\" I said smacking her on the ass again.\n\n\"I love a woman who minimizes the amount of dishes I have to wash.\" I said grinning. \n\n\"Oh no you don't!\" Crystal said incredulously and unrelated to my dishes comment as she then pulled the ice cream out of the freezer showing it to me. A huge smile washed across her face. \n\n\"Chocolate & Vanilla Swirl?\" She asked in an accusatory tone complete with raised eyebrows.\n\n\"A black woman in your bed and chocolate swirl in your freezer?\" she said shaking her head as if she had just uncovered the smoking gun. \n\n\"Sounds to me like you have issues that none of your country ass white friends know about\" she said as she snatched the spoon out of my hand and took off towards the living room giggling the whole way. \n\nI was hot on her heels as we entered the hallway en route to the living room. I watched her black hair sashay back and forth while her perfect ass and long ebony legs made my work shirt sway back and forth against her body. Even though the sight was awesome I still shook my head in disbelief. One, because I still couldn't believe her and I were happening, and two, because I couldn't believe she wanted to engage in a shit talking with me. She knew better. \n\n\"Ok, you got me\" I said reaching out with my right hand pinching her fleeing ass. \n\nCrystal jumped from my assault and howled out laughing. She then practically ran to the sofa and jumped on it settling down in the corner. I was right behind her. \n\n\"Yes\" I said as I watched her set the ice cream down, grab the pillow, place it on her lap, and then pat on it telling me to lay my head there. \n\n\"I will admit to having a thing for black women and mulatto milkshakes\" I said as I laid my head down on the pillow and looked up at her smiling face.\n\n\"But lets talk about you Cryst..\" I said cutting her name in half like it was a slip of the tongue that I even started saying it. \n\n\"Oh, I am sorry, my bad\" I said grinning \"I didn't mean to call you that.\"\n\n\"Please forgive me Mrs. Robinson.\"\n\nCrystal was a film buff and immediately got \"The Graduate\" reference. She laughed and then started blushing uncontrollably. \n\n\"Hey, I know\" I said tongue in cheek \"Maybe in the morning we can go cruise the junior highs and scope out some prospects for your cradle robbing ass.\"\n\nCrystal responded with total silence and a smile. Then she took the spoon and started whacking me with it as we both burst out laughing and started wrestling around. \n\n\"Is that all you got?\" I said mockingly while I tickled and pinched her all over as she giggled with glee and continued tagging me with the spoon. \n\n\"You obviously didn't take your Geritol today Mrs. Robinson.\" \n\nSchool was in session. And I am not talking about talking smack either. Crystal was taking me to school in the arts of romance and intimacy. If I had my way we would have already been butt naked and the highlight of the night would have already passed. The energy that fueled our prolonged mental foreplay already expended.\n\nMy twenty year old outlook on romance departmentalized the whole process in a specific order that was written in stone. First comes the pickup, then some flattery and charm to get in the door, followed by some romance and token intimacy to tear down their defenses, and then get to the sex and stay there until finished. That was how I always viewed the process and it wasn't up for negotiation. \n\nCrystal got a hold of my process and ripped it to shreds. \n\nSuddenly I found myself confusingly yet gloriously bouncing back and forth between stages with no order or predictability within sight.\n\nShe fell to her knees and sucked my cock like a woman possessed and THEN came the romantic touches and talking. \n\nWhat? That isn't how it's suppose to go. \n\nI ate her pussy and THEN there we were being intimate and goofing off while eating ice cream.\n\nHuh? That isn't right. \n\nYet there I was completely happy and content laying on my couch and goofing off with a beautiful, older, and semi clothed ebony woman AND I hadn't even fucked her yet. \n\nWhat? Holy Shit! What the fuck is wrong with me?\n\nMy instincts might have been tripping but inside my heart was all good. As each second passed and we continued enjoying each other I finally could feel the value of what we were doing and how it enhanced what had already happened and what was still to come. I began to see that the route there was indeed the best part and not just a necessary evil. I learned that real intimacy didn't require total nakedness and that wrapping ourselves up into each other patiently and emotionally only made us want each other more physically. \n\nI was right. Crystal was at another level. I learned more from her in two hours than I did in eight years with dozens of other girls/women. She told me I was \"doing her right\" when the reality was that it was dumb luck that I picked the right path. Her desire to go slow and savor each moment was genuine and true while my ice cream proposal was just a gimmick to buy time. That fact made me feel guilty because I desperately wanted to be where she was. Shit like this flew through my mind and just the fact that I was thinking and feeling these things and not contemplating how I was going to get to the pussy was both uplifting to my soul yet treasonous to my search and destroy bachelor instincts. \n\nThis girl had me all fucked up. I felt powerless yet so powerful, so vulnerable yet so safe, and so scared but so damn happy. I had no idea where we were heading or what was on deck and I didn't have the answers or a map to guide me. All I had was Crystal. All she had was me. All we had was each other. And all I knew was that I wouldn't have wanted it any other way. \n\nWe eventually settled down and talked while Crystal worked the spoon and fed us. We bantered back and forth covering a variety of subjects until the topic of our \"status\" came up. I knew we had come to the conclusion that we needed to be together but needing and making it happen are two different things. Thus, I pressed the issue. \n\n\"What are we, Crystal?\" I asked \"Are we a full time gig now or what?\" \n\n\"Twenty four seven\" Crystal replied seriously \"but I think we should keep a low profile until I graduate so we don't jeopardize ourselves at work and so we can get everything in line before the wedding.\" \n\n\"What!\" I said incredulously looking at her like she was crazy. \n\nCrystal burst into laughter effectively stopping my impending heart attack. \n\n\"I am just playing, boy\" she said still laughing as she turned and placed the ice cream on the corner table. \n\n\"But I am not playing\" she then said turning back and burning her serious brown eyes into me \"when I say that we should keep us under wraps for a while until we get our shit together.\" \n\n\"In the meantime\" she continued \"And I am not playing when I say this either\"\n\n\"I don't want to share you, Sean.\" She said softly.\n\n\"I waited too long for this\" she continued \"I can't and won't share you with anyone.\" \n\n\"And that includes that blonde white bitch with an IQ of a grapefruit named Shannon who has been coming into the lounge every God damn night this past week to see your ass!\" Crystal said grudgingly yet playfully while pushing me off her lap and sending me crashing to the floor. \n\nI landed in the wide space between the coffee table and my sofa easily breaking my fall with my hands. I was just about to get back up and jump in her shit when Crystal sat up, pushed me back down on the carpet, and slid off the couch on top of me. Not one part of her touched the carpet as she lay completely on top of me. The feel of her weight on me and the combination of her body's firmness and softness instantly jumped started my arousal. \n\nCrystal slid up my chest and planted a wet kiss on my lips as her rich black hair splashed into my neck and chin. \n\n\"You hear me, boy?\" She asked smugly as if proclaiming that I already was her domain. \n\n\"Yeah, I hear you\" I said with a wily smile before continuing \"But I am suppose to go out with her tomorrow night\" I said grinning ironically and testing her resolve. It was true. I was suppose to take her out the next night. ",
        "The thing that always drove me crazy about Crystal was her confidence. She just exuded it. Her reply was totally Crystal and it totally smashed my hapless challenge. She raised her head as she absorbed what I told her and then a cocky grin emerged followed by her response. \n\n\"That is going to be hard to do, Sean\" She said as she lowered her beautiful ebony face back towards mine. \n\n\"When you are going to be in my bed tomorrow night\" she said kissing me softly\n\n\"Making love to me..\" she said hesitating and biting my lower lip before adding \n\n\"Again\" as she pushed her warm tongue into my mouth. \n\nGame. Set. Match. \n\nI wrapped my arms around her as we began kissing passionately. Torrents of blood rushed to my hardening cock as I felt Crystal's legs slip off and then around my legs increasing the weight and friction between our crotches. I clamped my hands onto her perfect ebony ass and pulled her into me as our mouths consumed each other. \n\nCrystal moaned loudly into my mouth and began hungrily grinding her pelvis against my throbbing and boxers covered cock. There would be no turning back now and we both knew it. At least I thought so until she fucked up my 1-2-3 get the booty process again.\n\n\"Two things, baby\" Crystal moaned breaking our kiss and panting as I looked at her hungry brown eyes and shiny lips smeared with our saliva.\n\n\"One\" She said kissing me again hungrily before pulling back and declaring\n\n\"No condom, Ok?\" She asked almost pouting \"I don't want anything in between you and me\" She said before plunging her tongue back down my throat. \n\nOh hell yes. You go girl. I suppose given twenty years of retrospect I should have been thinking about pregnancy and AIDS. Please. I believed in my ability to maintain so that handled the pregnancy issue and the only AIDS in my world were Live Aid, Band Aid, and Farm Aid. I was feeling what she was saying and I wanted exactly the same thing. Thus, I was all systems go on that request. \n\n\"Just me and you, girl, hell yes\" I said in reply as our lips parted sloppily. \n\n\"And two\" Crystal said pushing herself up and straddling my crotch as her brown eyes burned into mine and I sat up as well. \n\n\"Your eyes, baby\" Crystal said softly whipping her arms around my neck and kissing me tenderly with her soft, full lips while my hands navigated under her shirt and grabbed her naked waist. \n\n\"I will never stop you from hitting this pussy, Sean\" Crystal said kissing me again.\n\n\"Any way you want.\" She hissed at me still kissing me. \n\n\"But tonight, baby\" Crystal said pulling back and burning her beautiful brown eyes into mine\n\n\"I want us to see each other.\" She said \"I want to see your face when we do it. I want you to see who is making love with you and to you. I want us to look into each others eyes when we give up everything.\" \n\n\"Because you ain't no booty call to me neither, Sean\" she said kissing me tenderly again and declaring \n\n\"This is for keeps, baby\" she whispered to me \"this is where I make you mine.\"\n\n\"I want you to see, feel, and know that Crystal is loving you.\" \n\n\"Always\" She concluded softly before pressing her thick lips into mine again.\n\nWhat the fuck was I suppose to say to that? What could I have possibly said that would have matched that? There I was with a beautiful, older, semi clothed, panty less, ebony woman, who, by the way, had always been my fantasy both emotionally and physically, straddling my covered but throbbing cock while practically telling me she loves me. What the hell do you do when the gates of heaven swing open like that?\n\nYou walk in. That's what you do. Even though Crystal was ions ahead of me in all facets at least I was smart enough to know that. So I walked in and staked my claim. \n\n\"Girl\" I said as Crystal kept kissing me tenderly until I pulled back \"Look at me.\"\n\nCrystal opened her eyes and I could see the desire and passion in them mixed with the vulnerability and fear that comes from saying what she just said to me. Even though she didn't drop the Big Three on me specifically, she still had said she loved me in a safe way. Like in poker she had just put her cards on the table and was anxiously waiting for me to call. \n\nThat unfamiliar voice, however, reappeared and told me that wasn't the right play. Something inside me wouldn't let me just call her bet. \n\nInstead, I went all in. \n\n\"You don't have to ask me that\" I said softly \"because I know who has been loving me, in ways I never knew existed, ever since I first walked in my door tonight.\"\n\n\"I know who I want, Crystal, who I have always wanted\" I said looking into her eyes \"I know what I want to give you and I know how I want to make you feel.\"\n\n\"My eyes are wide open, baby\" I said \"I know this is for real and I'm not scared nor do I care what anyone would say.\"\n\n\"Because I already know who and what you are.\"\n\nIt's funny and yet sad how that last statement can be interpreted in two different ways. Had we both been black or both white it would have stood on its own, as it was intended, as a tribute to her personality, her character, and her value to me. \n\nYet, because we weren't, there suddenly existed the possibility that it meant something else. That maybe I was labeling her or admitting that her color, or mine if the tables were turned, was a necessary evil I was \"heroically\" willing to deal with despite its \"handicap.\" \n\nUntil I said that Crystal was my ebony M&M melting to my words and in my hands. But after I said it I could see her struggling with the content as she fought the impulse, learned from living in a fucked up world, to condemn me for interjecting race in between us. My heart sank as the atmosphere began changing. \n\nShe felt it. I felt it. \n\nCrystal was an educated black woman which made her even more prolific at sniffing out racial innuendo real or imagined. I watched her eyes harden and her demeanor go slightly into protective mode but it wasn't a total shutdown or even close to one. She was trying to give me the benefit of the doubt but her life experiences had taught her to always put up some walls just in case. \n\nEither way, I wasn't going to retract shit. I suppose I could have chosen better words but I didn't want to spend my life editing or worrying about the words that came out of my mouth with her. That task was big enough all by itself without having race thrown in as well. I just wasn't going to let us operate under the assumption that we were black and white first and then came us. Surrendering to that made everything we just celebrated and discovered half as beautiful. And I wasn't having any of that. \n\nIt was easy for both of us to proclaim that we were colorblind earlier but now my choice of words had made us confront it head on. Either Crystal believed in me and could see what I was saying or she didn't and I was just another generic stereotype. We were either above the two way bullshit that ruled outside or we weren't. And if we weren't then what was the point? We would find out right now. \n\nCrystal, however, was too sly and too polished to be put on the spot like that. This girl had total game. Instead, she spoke two languages to me as her body language told me point blank she believed in me. One hand she ran through my hair while the other caressed my cheek and stroked my shoulder while she remained pressed firmly against me. \n\nThen she broke out in the other dialect. \n\n\"So, Sean\" she said as she dropped her chin into her chest before raising up and burning her now curious eyes into mine\n\n\"What is that suppose to mean?\" she asked with the intensity and suspicious nature of a detective. \n\nI hated myself for unintentionally opening this door but I also didn't like being the target of an inquisition. My heart and motives had the pure and high ground and I wasn't going to lay down with dogs and get fleas. I wasn't going to pollute what I was feeling for her by engaging in this forum. \n\nThus, I didn't say shit. I just stared back at her. \n\nCrystal waited for an answer but not for very long. \n\n\"Who and what am I, Sean?\" she asked with the same intensity but this time with an agitated seriousness. \n\nMy heart was pounding with fear and anxiety but not because I was afraid I had offended her but because I knew what I wanted to say all along. I knew in my heart that it was going to come out one way or another. I just didn't like the setting or the drama. But fuck it, I thought, the truth had always set me free. \n\n\"You're Crystal\" I answered looking into her eyes \n\n\"The girl who always has my back, always gave me her ear, her shoulder, her wisdom, the one who was always there, my best female friend.\"\n\n\"You're my girl.\" \n\n\"That's who you are.\" I said defiantly.\n\nCrystal liked that. She liked it a lot. I could see her keystone cop attitude vanishing before my eyes as she tilted her head to the side and smiled. She then sighed as if relieved that her faith in me was paying off. \n\nBut I wasn't done. She was going to get both parts of her question answered. \n\n\"My dream come true.\" I said \"That's what you are.\"\n\nCrystal's eyes softened and her smile melted inward.\n\n\"My hopes and my desires\" I said \"That's what you are.\"\n\nCrystal inhaled loudly and held her breath while her expression turned into helplessness.\n\n\"My heart and my future.\" I said softly \"That's what you are.\"\n\nCrystal's eyes turned to mush as her mouth locked in an \"O\" shape. \n\n\"My love, Crystal\" I said staring into her eyes.\n\n\"That's what you are.\" I said \n\n\"It's what you've always been\" \n\n\"No more. No less.\" \n\nSeven hours ago we weren't even talking and now this shit. I couldn't believe it was happening. I couldn't believe I just opened myself up like that. I couldn't believe just two hours of intimacy with her made me like this. What the hell is happening to me I thought. \n\nCrystal just gazed into my eyes awestruck. Her eyes misted and she swallowed hard trying to push the lump in her throat back down. She began breathing heavier and faster until her arms began tightening the noose around my neck pushing our faces towards each other culminating in a long and luscious lip only kiss. No woman had ever kissed me with more feeling than Crystal did with that kiss. It transcended sex. It transcended everything.\n\nThe whole scene was total Hallmark Movie of the Week material which under normal circumstances would have required a vomit bag handy for me to watch. But God help me because I loved it.\n\nI also knew this was the yellow brick road to the pussy but Crystal had already slain my killer instinct and replaced it with a lover's conscience. Now I wanted redemption from her more than I did her pussy. I wanted to hear \"my bad, Sean\" more than I did \"fuck me, Sean.\" \n\nI found myself exactly in the same spot I was in the night I stood her up. Crystal's body right there for the taking yet there I am passing for principle and peace of mind. If my friends had known about this shit they would have staged a Player Intervention on the spot. But fuck it, I loved her. That was my story and I was sticking to it. \n\nThus, I endeavored quickly to bring some humor and my need for justice back into the fray. When our kiss finally broke I stepped up to the plate.\n\n\"So Crystal\" I said mockingly complete with neck gyrations, raised eyebrows, shit eating grin, and accusatory tone \"that is what that is suppose to mean.\"\n\nCrystal burst out giggling and a huge smile washed across her ebony face as she reacted to the humor of it. But there was a message in it as well and she knew it had to be dealt with. She didn't waste any time setting that straight either.\n\n\"I'm sorry, Sean\" she said looking down and shaking her head and smiling embarrassingly \"I should have known better than to go there with you.\" \n\nCrystal then raised her face up and her brown eyes locked onto mine. Her smile was gone replaced by one hundred percent sincerity. \n\n\"I'll never doubt you again, Sean\" she said \"Not ever, baby.\" \n\nIt wasn't on all on her and I knew it. My choice of words sucked and I probably would have been thinking the same destructive shit she was if roles had been reversed. But we had overcome it so I was eager to move on and bring the subject back up to our level. \n\n\"So I don't have to worry about any 'march for justice' down my street and to my house?\" I asked grinning while making love to her reestablished itself as the number one priority in my life. \n\nCrystal's million dollar smile returned as she shook her head and poured her happy brown eyes into mine. \n\n\"No Sean, there won't be any march down your street\" she said giggling \"You're so crazy.\" \n\n\"And if there is\" she continued \"it'll be a black and white march.\"\n\n\"The black people will be out to stone my ass and the white people to lynch your ass!\" She said laughing.\n\n\"No shit!\" I said joining her in laughter and nodding my head in agreement. \n\n\"But to hell with them\" Crystal said smiling mischievously \"Nothing is going to stop this train.\"\n\nThen she paused and a tint of seriousness overlapped her smiles.\n\n\"Especially after the beautiful things you just said to me\" she said \"and how good and happy they make me feel.\"\n\nCrystal blushed but recovered quickly and started shaking her head and grinning like she couldn't believe I was everything she hoped I'd be. Her love struck gaze just poured affection into me to the point where I was almost uncomfortable. Then she rescued me again. \n\n\"God\" she said shaking her head and smiling \"your momma and daddy sure taught you right.\"\n\nI tried to reply but Crystal quickly placed two fingers over my lips stopping me. \n\n\"I wonder if they know just how much this twenty six year old black woman adores their son\" she said as she leaned forward and kissed me tenderly. \n\nI tried to reply again but the second I opened my mouth Crystal put her thick lips all over mine purposely shutting me up with wet and sticky kisses. I could feel the reigns of power gloriously slipping from my grasp. \n\nThen I saw it. The same flame I saw in her eyes earlier when she pulled me into the living room and fell to her knees. Blood started pouring into my enlarging cock and although I know the kissing started it, I will go to my grave knowing that it was \"that look\" that opened the valves completely. \n\n\"I wonder if they know\" Crystal said pushing me back down on my back while she stayed upright straddling my crotch \"how badly I want to make love to their son.\" \n\n\"How I want to give him my body\" she said as she whipped her neck back and flung her pitch black hair behind her shoulders \"and feel him inside of me\" she said tilting her head sexily.\n\n\"I wonder\" Crystal purred \"what they would do if they knew what I was going to do to their son right now\" she said almost possessed as I watched her brown fingers start to unbutton her white shirt. \n\nThe final button came off and a large gash of ebony skin from her pussy to her thick cleavage exploded into my eyes as the shirt popped open.\n\nI wasn't stupid enough to even attempt to open my mouth or say anything now. I was too lost and too paralyzed watching Crystal make my fantasy come true. It was as if she was already in my head and knew my fantasy of her better than I did. Like all she had to do was show up and say \"roll tape.\" Everything she said and did made my cock so hard it hurt.\n\n\"I wonder if their son knows\" Crystal said changing angles and burning her eyes into mine \"that he did this.\"\n\n\"You made this happen, Sean\" She said searing her dark eyes into mine as she opened and pulled back on her shirt causing it to slip off her shoulders and fall onto my thighs behind her. \n\nThe vision of her naked brown body poured into my eyes and straight up decimated me. The perfect curves of her hips, the fullness and depth of her breasts, the perfect outline of her shoulders, and the way her shaved mound snuggled into my crotch, all of it, seemed brand new again. \n\nThe light bulb then suddenly went on in my head and now I knew why she put the shirt back on after our prelims. Now I understood. Class fucking dismissed. \n\n\"You thought you were just trying to get a shy girl to open up\" she said referring to when we first met as she used both hands to fling her hair back behind her brown shoulders again while my hands began creeping up her thighs. \n\n\"But what you really did was send my ass home every night thinking of you.\" She said smiling as her brown hands descended to my white chest. \n\n\"Wanting you\" she said seductively \"fantasizing about you.\"\n\nCrystal then arched her back and began openly and purposely grinding her pussy back and forth over my imprisoned cock. She had no fear, no timidity, and no restraint. She was flat out rubbing her pussy against my cock and was advertising it. The friction stopped my hands in their tracks and I felt my fingers digging into her thighs.\n\nCrystal then looked at me hungrily as her liquid brown eyes burned a hole right through me.\n\n\"If you only knew how many times I made myself cum thinking about fucking you\" She cooed as the contact between us intensified \"If you only knew how many times I cried out your name cumming.\"\n\nI heard that shit and I blew up. I didn't want to kiss, lick, taste, or bite her, I wanted to eat her. Fucking Hannibal Lechter put a bone in my nose headhunter style. I flexed my engorged cock again and again futilely hoping to break the one hundred percent cotton barrier between us. \n\n\"Oooohhh\" Crystal moaned softly closing her eyes and biting her lower lip as her nostrils flared and her hips continued powering the contact between us. I could feel her wetness seeping into my boxers and saturating the material around my cock as she went deeper and deeper into a trance grinding and rocking her tight pussy against me. \n\nHearing and seeing Crystal like that launched me into a nether world where my desires and my sense of satisfaction collided head on. Every limb I had wanted to be on her and in her. My mouth watered and yearned to taste any part of her sweet ebony body yet the worst part was that I knew I had the power to make it happen. \n\nBecause at the same time, I absolutely loved the way she was dominating me. I loved that this older ebony woman was just taking my ass. Crystal was only six years older than me but when you are nineteen or twenty there is no difference between six years and sixteen. I may have teased her and called her \"Mrs. Robinson\" but the Mrs. Robinson vibe between us was real to me and the thought of my own Mrs. Robinson dominating and fucking me turned me on to no end. \n\nThankfully, the internal voice that had thus far guided me to this point bailed me out again.\n\n\"Listen, fool\" it said \"Look at her! She is getting off just rubbing against you. She is fixing to fuck the shit out of you. You can't touch or taste shit without breaking her rhythm or changing the posture. Is your dick hard? That's all you need! She will do the rest. DO NOT attempt to fix what isn't broken. You can get yours later.\" \n\nFucking Amen brother. \n\nCrystal opened her now flaming eyes and slowly slid her hands up my chest to my shoulders until they slipped off my shoulders onto the carpet. She fell forward lifting her neck up so we could both watch her brown breasts descend into my white chest. \n\nMy hands rejoiced at the new positioning as Crystal's ass rose up and I clamped them onto both cheeks with a vengeance. Her thick, dark nipples touched down first followed by the warmth of her breasts as Crystal's black hair flowed onto me framing everything. \n\n\"Ohhh\" we both moaned at the sight of our contrasting skins coming together coupled with the electricity and friction their meeting generated. We were anything but colorblind now. \n\nCrystal rocked her ebony breasts across my white chest panting and moaning loudly. Her moving forward had taken her slit off me and now I could feel the cold dampness that her oozing pussy had left behind on my boxers. Cold sensations are supposed to make your dick shrink but Crystal's juices, at any temperature, only made my cock harder. ",
        "Crystal lunged forward and started kissing me like a woman possessed. Her tongue rammed down to the back of my throat pouring her saliva into me while her hands ran wildly through my hair. \n\nIn response I dug my whole left hand into her ass crack and began rubbing her whole crack from top to bottom with authority while my right hand roamed up and down her silky smooth back. Crystal moaned in my mouth and started sucking my tongue into her mouth so hard I thought she was going to rip it out of me as our bodies flexed, arched, rubbed, and grinded together singing the same song.\n\nI then broke into my signature move. Every girl I did this with loved it and I knew Crystal would love the change of pace being the process annihilator that she was. \n\nI grabbed her thick black hair with both hands and pulled firmly backwards pulling her lips off mine as our excess saliva strands stuck to our lips and chins and we both panted loudly. I pulled back and up until her brown chin was above my whole face and she put her elbows on my shoulders for support. \n\nI tilted my head slightly and started softly kissing the base of her neck. Slowly and softly I began gliding the tip of my warm and wet tongue up her tender ebony neck. Halfway up I felt Crystal's entire upper body start to shiver and tremble. \n\n\"Oohhh\" She moaned gleefully and threateningly as if saying I would get mine for doing this to her. \n\nCrystal's hands then dropped back onto the carpet above my shoulders and she began heaving her hot ebony breasts into my chest and feverishly grinding her pussy into me while jealously protecting the distance that created the perfect contact and pressure my tongue applied to her whole neck. \n\nI started running my fingertips ultra soft up and down her spine and back maximizing the tingle effect as Crystal shivered and moaned uncontrollably. I could feel the goose bumps exploding all over her whole body as my tongue and fingertips lightly brushed over her. \n\n\"Oh God damn you, Sean\" Crystal moaned lovingly while shaking \"I knew you would make me like this..ooohhhh\"\n\nThen with the speed and precision of a ninja Crystal sprang back and in the blink of an eye was straddling my thighs. How in the hell she got down there so fast I will never know. It was as if I was Major Nelson and she just 'blink blinked\" her ass down there like she was Jeannie. One second I had handfuls of ebony flesh and the next I didn't have shit.\n\nWhat I did have when I opened my eyes, however, was my ebony dream Crystal reaching for my cock. \n\n\"This\" Crystal said as she began feeling my cock through my damp boxers \"is what I want, baby.\"\n\nHer touch instantaneously brought me up another level and made my cock ache and throb even more. As a natural reaction to her touch I flexed my cock and a slight pain shot through me notifying me that my thick cock was maxed out. Not one more drop of blood could fit inside. \n\n\"I want it\" Crystal said hungrily over and over as her eyes locked onto the bulge in my boxers and her face became more serious and desperate. She swayed her head slowly side to side as I watched her hair swing back and forth across her brown shoulders and chest.\n\nSeeing Crystal on top of me with her hourglass figure and rich ebony skin, combined with the look in her eyes and feel of her touch, fucking tamed me. I was no longer a leader or even a partner. I was a happy follower and she was the leader of our cult. \n\n\"I want to fuck it and cum with it\" Crystal hissed softly her demeanor getting more desperate and agitated as I arched my back desperately trying to release my imprisoned cock.\n\nCrystal's hands then opened the pee hole of my boxers and I rejoiced at the fact that she was going to reach in and pull my stiff cock out of my boxers. \n\nYeah right. Think again rook. I forgot I was dealing with a major league caliber ebony woman here.\n\nInstead, Crystal's hands locked onto both sides of the hole and she pulled hard tearing my boxers to shreds from top to bottom. \n\nMy freed cock instantly shot up into the air and Crystal immediately wrapped both hands around it and began jacking it slowly. My eyes rolled back into my head overdosing from her aggressiveness, the sensations, and the sight of those brown fingers wrapped tightly around my white shaft. \n\n\"Oh, hell yes\" Crystal growled as I felt her pulling my cock towards her and semi painfully straight up in the air. Then her whole upper body collapsed onto my crotch.\n\nJust as her thick and wavy black hair splashed into my stomach and erected a visual blockade I felt her warm mouth swallowing my cock whole.\n\nThe warmth of her mouth flooded my whole body with heat as I moaned loudly and clutched the top of her head with one hand while the other clawed at the carpet. Crystal swayed her neck side to side as she loudly and sloppily devoured my throbbing cock over and over leaving me in awe from the sensations and the sight of her beautiful black hair gliding back and forth across my stomach. I wanted to see more but I didn't even contemplate complaining.\n\nI heard the beautiful sound of her thick lips popping my cock out of her mouth before feeling my cock snap back down against my stomach. \n\n\"You wanna see it don't you, baby\" Crystal cooed to me looking up and whipping her hair back behind her. \n\nI told you this fucking girl had ESP. \n\n\"I got something I wanna see too\" She hissed at me hungrily. \n\nCrystal sat up slightly and leaned forward grabbing my white cock as her 36C ebony breasts towered over my crotch. She took my saliva drenched cock and ran it over her thick nipples poking and grinding them together smearing her saliva from my cock all over her tits. I watched in total awe as Crystal raked my cock over her glistening areolas and rock hard nipples again and again. \n\nIn one swift move she then pushed my white shaft into her brown cleavage and used her hands to wrap her firm ebony breasts around my cock. She then snugly pressed her breasts together smothering my white cock with her warm chocolate skin. \n\n\"Yeah, baby, that's what I'm talking bout\" Crystal purred transfixed at the sight of my white cock surrounded by her dark skin. \n\n\"Gotta keep my baby's cock warm\" she moaned as she began rocking her upper body front to back fucking my cock with her hot breasts. \n\nThe contrast alone was enough to paralyze me but coupled with the warmth of her skin and the look in her eyes it damn near killed me. If she didn't fuck me soon I would be doing 10-15 hard time for rape. \n\n\"I used to think\" Crystal said looking down and watching the head of my cock appear then disappear into her brown mounds as her tongue licked my stomach hungrily \"that I wanted you to fuck me more than anything in the world.\" \n\n\"But now that I am finally with you\" she said releasing her breasts and rising up as my now unwrapped cock slapped back into my stomach and her flaming brown eyes met mine head on. \n\n\"I know I want to fuck you more than anything else in the world.\"\n\nI was numb with\u2026.hell I don't know what I was numb with. All I know was I felt like I was in a dream and I thanked God for giving me life and this moment.\n\nCrystal was straddling my thighs but moved herself forward until her head was completely over mine. Her hair hung over me like a cocoon. She began kissing me deeply and I grabbed two handfuls of ebony ass and squeezed them with every bit of strength I had.\n\nI expected her to reach back, grab my cock, place it in her slit, and then get to work. But that was just too damn routine and simple for Crystal. \n\nInstead, she leaned forward and dropped her entire upper body on top of me pushing her pelvis into mine while her now extended legs locked onto my hips. She was now laying on me and I could feel her juicy slit leaking all over my throbbing shaft as she worked her way forward in order to get her pussy above my cock. \n\nCrystal was driving her tongue deep into my throat and heaving her heavy breasts into my chest when I felt the stubble of her shaved mound rake against my stomach as it cleared my cock leaving my member throbbing, wet, and isolated. \n\nThen she pushed her pelvis hard into my stomach and began probing backwards as her pussy hunted for my cock. \n\nCrystal slowly started moving her hips backwards and I could feel the heat of her pussy all over me as the head of my cock teasingly banged against and around her gushing slit sending pangs of fiery anticipation into my racing brain. I painfully flexed my aching cock again and again desperate to feel the inner heat I knew was only inches away. Crystal swayed her hips methodically side to side while creeping down even more raking the head of my cock against her slippery mound as my cock began bending from the pressure of her body's weight. \n\nCrystal knew when it was going to happen before I did and she made sure I knew too. \n\nShe broke our kiss sighing loudly as an almost helpless veneer washed across her face. Crystal then nodded her head emphatically and burned her lust filled eyes into mine purposefully and eagerly telling me that one last adjustment would erase our plutonic friendship forever.\n\nCrystal's mouth locked into and \"O\" shape and her eyes consumed mine as I felt her hips adjust and finally bring us together. \n\nThe pressure of her weight bending my cock against her skin vanished instantaneously as the head of my cock pierced the lips of her tight pussy and sank inside her warm ebony body. \n\n\"Ohhhhh\" we both cried out as I felt her hot flesh splitting open and engulfing the head of my cock sending lighting rods of passion spearing through my body. \n\nCrystal moaned loudly and started biting my chin and wiggling her hips down further sinking the head of my cock deeper into her tight canal. My hands kneaded her supple ass tugging and pulling her cheeks down desperately trying to force more of my cock into her. \n\n\"Fuck yeah, girl\" flew out of my mouth as Crystal hovered over my lower face moaning uncontrollably while our now sweaty upper bodies grinded together and her pussy locked its heat around the two inches of cock she had thus far consumed. \n\nI was fucking afire. I still had six inches to give her and I wanted to prove it. But Crystal was still almost prone on me and the law of physics prevented it. Thus, I knew I had to get Sir Isaac Newton on my side and fast. \n\nMy hands flew off her ebony ass and I planted them on the carpet. I began pushing my upper body up raising Crystal with me as I ascended.\n\nThe law of gravity then gloriously kicked in as her weight that was on my chest shifted to my crotch and my cock sank deeper into her. \n\n\"Ohhh Sean, oh shit baby!\" Crystal wailed enthusiastically as two more thick inches of white cock pushed into her tight ebony pussy causing her to whip her arms around my neck and ram her tongue deep down my throat as she moaned relentlessly. \n\nOur juicy lips parted sloppily spilling saliva all over our lips and chins as the four alarm fire her pussy ignited around half my cock spilled into my whole being. Despite my gravity ploy the angle still wasn't right for total immersion and my frustration boiled over almost into anger. \n\n\"I want all of it, Crystal\" I growled hungrily \"Give me all this pussy.\"\n\n\"Oh hell yes, baby!\" Crystal bellowed back at me almost pouting as she slammed her hands into my chest pushing me back on my back by force. \n\nCrystal rose up pulling her knees forward causing my cock to retract somewhat but not completely as her hungry and tight pussy kept its meal snugly inside. Once she was in position Crystal flung her hair back behind her brown shoulders and placed her hands squarely on my white chest. Her whole upper body swelled and receded wildly as she panted loudly and eagerly. Then her eyes, those fucking eyes, incinerated me with a look of pure lust and passion. \n\nOne minute I was in the fray dictating the action and the next I was on my back paralyzed by her eyes while my heart pounded out of my chest. \n\nMy three year fantasy of Crystal was seconds away from coming to a climax and I knew she would finish me off with a bang. I knew she would say something provocative, something massively erotic, something so sexy it should be banned, and something so powerful that it would utterly blow my mind to smithereens as she brought me totally into her body. \n\nShe did.\n\nAnd nothing was ever the same after that. \n\n\"I love you, Sean\" she said passionately \"this pussy comes with my heart, baby.\"\n\nBoom.\n\nIn one fluid pounce Crystal then rammed her body down on top of mine sinking my entire thick, eight inch white cock deep into her tight ebony pussy.\n\n\"Aaaggghhh\" we both cried out in unison as I felt the heat and power of her flesh wrapping around my whole cock for the first time. My eyes clamped shut and my entire body flexed and then wilted as her body's white hot inner flame spread over me and through me.\n\nCrystal's pussy was so hot yet so warm, so tight yet so wet, so soft yet so hard, and so hers but so totally fucking mine. I belonged there and the feeling her hot pussy gave my cock combined with \"I love you\" bouncing around in my head reinforced that credo tenfold as each warm cell inside her encompassed me. \n\nCrystal didn't move an inch. She kept my throbbing cock buried inside her to the hilt while her upper body leaned forward and I felt her breasts press against my chest. I opened my eyes and saw only the top of her head and her black hair falling onto me. \n\n\nThen Crystal raised her face up towards mine and I could see the pain and discomfort on her face. I recoiled in dismay thinking I was hurting her as her nostrils flared and deep wrinkles lined her forehead while her mouth hung open and her face shook and grimaced in anguish. Her eyes were locked tight. \n\nI let go of her ass and immediately put one hand on her neck and the other I placed softly on her cheek caressing them both. \n\n\"Are you ok?\" I pleaded \"Am I hurting you?\" I asked panting.\n\nCrystal's eyes opened and the second I saw those brown jewels I knew. She grabbed my hair with both hands and pulled violently and then confirmed what her eyes had already told me as surrender replaced anguish in every facial feature she possessed. \n\n\"I'm cumming, Sean\" she whined helplessly as her face vibrated in my hands and I felt her whole body flex and shudder intensely \"I'm cumming, baby\" she whispered lovingly.\n\nEvery instinct I had told me to thrust up and pulverize her tight pussy while she came.\n\nBut this orgasm wasn't sexual. This shit was personal. \n\nCrystal didn't belt out expletives or start thrashing around wildly. She didn't move an inch. Instead, she drove her lethal brown eyes straight into my soul via my shell shocked eyes and made it \"crystal\" clear that this was more about me, more about her, and more about us, then it was about my cock or her pussy. A blind man would have seen it. \n\nSo I didn't move either and just kept her face in my hands. I flexed my engorged cock and watched as her whole body contracted again and again while her eyes fluttered with each contraction and she snuggled her brown cheeks into my white hands and moaned gleefully. I could feel the tight seal of her pussy expanding as her cum washed over my cock ratcheting up my blood pressure with each drop.\n\nRight then the reality of Crystal's whole package, everything about her, from her laugh to her grade point average to her body, all of it, hit me like it was Armageddon and the world was ending. As if there was only one thing I could do that would save the world and my life at that same time.\n\nAnd now that I was with her, I wanted to live. \n\n\"God I love you, baby\" I said softly peering into her fluttering eyes. \n\nCrystal heard me say that and her face exploded into a helpless smile as she rode out the final waves of her orgasm panting and semi giggling with joy. \n\nI knew I had scored a direct hit to her heart and that in itself felt just as awesome to me as her pussy did. Three hours ago I would have recoiled in horror and rejected those feelings as being weak and pussy whipped. But Crystal had heinously smashed that ideology forever. Now I happily embraced what I was feeling both inside and out. \n\nRight then, I learned upon reflection, was when I became a man. \n\nCrystal, however, had already come to that conclusion and she wasted no time proving it. My words had unleashed something inside her and now it was manifesting itself in the form of unbridled lust. \n\nShe yanked her face out of my hands and rose up pulling my cock slightly out of her while her eyes burned into me like a woman possessed. Then she fell back down on my cock consuming me with her tight ebony pussy as her tits raked across my chest. A look of untamed lust poured out of her and she began fucking me with a slow but powerful purpose. \n\n\"Uggghhhhh\" we cried out over and over with each thrust as I locked my hands onto Crystal's ample ass guiding her up and down on me. Her pussy sucked my cock into her like a vacuum smothering my white cock like a warm silk sponge as I felt her juices running down my cock to my balls and saturating my pubic hairs. Each time she rose I could feel the chill of the cool air on my shaft only to be erased by the snug warmth of her meat as she impaled herself down on my cock again and again. \n\nFeeling her body firmly pressed against me while mine entered hers reduced me to a bowl of mush inside but made me violently hot at the same time. If we weren't pinned in between the coffee table and the sofa she would have gotten rolled over and fucked into oblivion right then and there. But she had me where she wanted me and all I could do was lay there and let her have her way with me. It was hard God damn work. Smile.\n\nCrystal then grabbed my hands and intertwined our fingers and pressed them back slightly over my head. I raised my knees and dug my heels in and she began fucking me with long, powerful thrusts pulling my cock out of her slowly and then slamming herself back on it, grinding and vibrating her hips and ass over and over.\n\nWith Crystal now fucking me I realized my Mrs.Robinson fantasy had run its course. It was awesome letting her do her thing but now I was imploding with lust and was eager to establish my own rightful place at the table. Thus, I fired the first shot across her bow.\n\n\"You love fucking me don't you, baby?\" I declared firmly \"You love Sean's white cock up in you, don't you?\"\n\n\"Ohhh Fuck Yes!!..Yes!!\u2026Yessssss!!\" Crystal desperately cried out panting wildly.\n\n\"Here it is, baby\" I growled thrusting up breaking her rhythm while manhandling her ass downwards and spearing my throbbing cock into her. \n\n\"Feel it\" I hissed grinding my teeth \"Feel me in you, baby, feel me fuck this pussy\"\n\n\"OOhhhhh Gaaaawwdd Seannnn!\" Crystal wailed loudly whipping her head wildly side to side sending her black hair flying all over as her pace intensified.\n\n\"Show me baby\" I purred \"Show me how hungry that black pussy is for my white cock\"\n\nMy education continued, however, as Crystal then taught me ebony female lesson #1: Never sexually call out an ebony female without confirming beforehand that your libido and stamina are up to the challenge. \n\nCrystal moaned loudly and eagerly as a look of rabid determination consumed her features. There was a power and urgency in her machinations that let me know she wasn't backing down and I was definitely going to get what I asked for. She burned her illegal eyes into mine and then began fucking me at a torrid pace.\n\n\"Fuck it! Fuck it! Fuck it! Oooohhh\" she screamed at me driving her hips violently into me and pounding her tight ebony pussy all over my aching cock .\n\n\"Oh shit\" I wailed back at her as I felt her warm meat giving way to my thick intruder over and over while the power of her flesh ate away at me.\n\nSeeing her ebony breasts jiggle and slap against my white chest while her hair flew all over was so erotic and so awesome I simply cannot describe it. Crystal started breathing in short bursts and her now familiar 'I am going to cum baby' face lit up my world as she wailed and cried out bouncing up and down on my hard white cock. ",
        "The sound of her ebony ass and thighs violently slapping into my white thighs bounced off the walls when tragically, at least to me, I felt my spine burning as the avalanche of heat her pussy injected into me began to make its way to my balls rippling to every branch of my body.\n\nI was going to cum. Oh no, fuck no, not yet I said to myself. Oh well, fuck it I thought, live and learn.\n\nBut then I found out that I wasn't the only one who knew something about facial expressions.\n\nDamn this girl knew me. Crystal deciphered me and stopped fucking me so hard and instead unlocked my hands and rose up over me as the heat of her pussy encompassed my cock full time while the warmth of her ass settled onto my crotch. \n\nI was blown away by her stopping herself from cumming so she could prolong mine but that was Crystal. She always had my back. It was why she was such a special woman in and out of the bedroom. And why I had no choice but to fall for her. \n\n\"Not yet, baby\" Crystal said soothingly to me in between labored breaths \"Not yet.\" \n\nWhew. Talk about the cavalry arriving in the nick of time. Crystal may have saved my ego from despair but in doing so she turned the tables on me. Now she was back in charge and she quickly set out to answer my shots across her bow with direct hits of her own.\n\nCrystal placed her hands on my chest and began grinding her hot pussy down on my cock with authority. She arched her back pushing her ebony tits together with her arms and rode me slowly moving her hips in wide circles and front to back grinding my cock deeper and deeper into her oozing pussy. \n\n\"It's your pusssssssy, Sean.. Ooohhhhh.. All yours.. Aaaahhhh.. This is your black pussssssssssy, baby\" Crystal moaned while rocking on my cock as she swayed her head in opposition to her hips sending her coal black hair swinging side to side. \n\n\"You own it\" She moaned over and over as she continued grinding me to dust.\n\nI am a voyeur deluxe and there isn't a pleasing sight I can't look at forever but at that second I couldn't take anymore. I had never had so much woman, so much passion, so much eroticism, and so much desire piled on me back to back to back. \n\nI overloaded and felt my body tremble and everything turned black as my eyes unvoluntarily rolled into the back of my head. It was the first time I ever felt every sensation of an orgasm without actually having one. \n\nIt was fucking insane. \n\nI heard Crystal making labored giggles as she panted and when I opened my eyes she was smiling proudly. It was her turn to gloat at making me feel so good. \n\nI was happy to know she was proud of herself but I also knew she had geared down to stop me from cumming and I wasn't going to live with that guilt. I rose up and grabbed her ass lifting her pussy entirely off my cock. Crystal whimpered sadly when I slid out but cooperated fully when I kept raising her ass up and up until she was standing over me.\n\n\"Keep your feet flat on the carpet, baby\" I ordered \"and squat down\"\n\n\"Ohhhh Seannnn\" Crystal squealed while descending.\n\nCrystal's hourglass figure and her long legs seemed to open up forever as I watched her pussy lips begin to part as her she bent her knees and lowered her ass more and more. \n\n\"Grab my cock, Crystal\" I said as she wrapped her brown fingers around my slippery white cock saturated in her juices.\n\n\"Now rub it all over your slit baby.\" I ordered\n\n\"Ohhhhhhhhhhhh Nooooooooo\" Crystal whined helplessly as she began running the head of my white cock over her thick and dripping brown folds. Over and over she ran the shiny head of my cock up to her clit and back down her slit as we watched her puffy lips and folds retract and spring out as my stiff cock raked over them. \n\nCrystal brought her eyes back up to me and they burned into mine with ferocity. Her legs were shaking from the stress of keeping her pussy elevated while her brown body shook from the eroticism of seeing my white cock against her ebony pussy. \n\nMy eyes told her 'go ahead baby' and with that she looked back down and then dropped her weight onto my crotch impaling her juicy pussy onto my stiff cock.\n\n\"Oooohhhh Gaaawwdd\" Crystal belted out in a high pitched voice as the vision of my white cock sinking into her ebony pussy seared into our eyes. \n\nShe began eagerly bouncing up and down on my cock as I reached under her brown legs and opened her wider while helping her ascend and descend.\n\nCrystal's pussy gripped my cock with a vengeance and with her getting me so close to exploding before I had since recovered and knew I could now do this pussy justice. I grabbed a hold of her upper thighs and began slamming her body onto mine spearing my cock violently into her as I arched my back and thrust my ass upwards.\n\nBristling with confidence I then I took another crack at Ebony Female Lesson # 1.\n\n\"Fuck me Crystal\" I growled at her \"Bust that pussy wide open baby\"\n\n\"Ohhhhh Gaawwd\" Crystal screamed back at me \"Fuck Yes!!Yes!!Yesssss!!\" \n\n\"AAggghhh..OOooohhhh\" Crystal shrieked over and over as I bottomed out in her molten ebony pussy our skins slapping loudly together. She reached back putting one hand on my knee and the other on the coffee table stabilizing herself and then started fucking me like a woman possessed.\n\nCrystal's face shot towards the ceiling contorting in ecstasy while her arms and legs worked maniacally pushing herself and her pussy to the tip of my cock before shutting down and making every ounce of her body weight fall onto me spearing my thick cock violently into her hungry pussy. Again and again she pounced wildly.\n\n\"Get it! Get it! Get it!\" Crystal screamed at me impaling herself onto the white cock she had craved for years.\n\nIt only took four or five thrusts of this magnitude to light Crystal's rocket and her body began shaking uncontrollably as suddenly her weight fell down on me permanently sinking me deep inside her molten ebony pussy to the limit.\n\nCrystal's whole body vibrated violently and then caved in sending her shoulders inward, her knees inward, and pushing her head down as her hair flew forward. \n\nThen like a flower blooming instantaneously she whipped open her legs, arched her back, and shot her head up screaming \n\n\"I'M CUMMMMMMING!! OOHHHH GOD!! OHHH UGGGHHH!!\"  \n\nI was flush with a combination of pride, redemption, and vindictiveness. I rejoiced at making her cum but Crystal had also trumped me when I first called her out and now my fickle male ego wanted payback. \n\nNo justice no peace. Fucking A right. \n\nI arched my back and locked her in place with my hands and began vibrating my hips jack hammering my thick white cock up into her sweet flowing ebony pussy. \n\n\"OHHH FUUUCK BAAAABY AAAGGGHHH OHHHHH\" Crystal screamed as her hips lunged forcefully front to back grinding her brown mound into my pubic hairs while her gushing pussy coated my cock with the first wave of her hot cum. \n\nI knew Crystal was going to cum forever now and I didn't have the angle to do it properly so I ordered her to do it instead. I reached forward with both hands and opened her slit wide while opening the folds to her clit as well. I could see base of my shiny white shaft being swallowed by her brown folds and juicy pink meat. \n\n\"Rub your clit Crystal\" I growled hungrily at her \"NOW!!\" \n\nCrystal's hand flew off the coffee table and smacked down so hard on her pussy that she practically slapped it as she began stroking her clit with such force that her fingernails painfully dug into the base of my cock. \n\nNo pain no gain was my mindset. \n\nCrystal's tight ebony body began vibrating even more violently telling me the next wave was about to break.\n\n\"Stroke that bubbling clit for your white boyfriend baby\" I hissed at her possessed with making her pay for showing me up moments earlier \n\n\"Yeah, girl, that's it, stroke it baby and cum all over this white cock.\" I growled hungrily watching her brown digits sliding up and down her folds feverishly working her throbbing button.\n\n\"OOOOHHHH GGAAAAAWWWWDDDD\" Crystal screamed loudly \n\n\"HERE IT COMES AGAAAAAIIIIIIIIIIIIIINNNNN\" she bellowed thrashing her head and body up and down as her ebony breasts bounced wildly while her hair flew everywhere. \n\n\"UUUUGGGGHHHH\" She grunted over and over as her body flexed and contracted again pushing more warm cum out of her pulsating pussy and all over my drowning cock. Her body shook forcefully and her face went from agony to ecstasy with each juicy contraction as my ego set out to set things right.\n\n\"Who owns this black pussy Crystal\" I growled at her \"Who owns your black ass\"\n\n\"You Own It!\" Crystal wailed back at me deliriously.\n\n\"Say My Name!\" I yelled back at her snarling.\n\n\"Sean! Oh Fuck This Pussy Sean! Get It! Get It! Sean, Baby Oh Fuck!! AAAGGHH\" Crystal cried out clamping her pulsating pussy around my cock as her body trembled and violently pushed out more of her liquid love on to me. \n\n\"UUUGGGHHH FUCK!!\" She screamed her body spasming uncontrollably while her flowing juices flooded my already saturated pubic hairs. \n\nCrystal rode that wave out and immediately started panting in a way that was a mixture of nervous laughter and sobbing. She looked at me with a loving and startled gaze like she couldn't believe this was happening. \n\nI was feeling her big time on that. Been there and done it. \n\nMaking this beautiful black woman cum was awesome but the fallout was that I was now critically turned on and the only cure would be my pounding that ebony pussy as hard as I could.\n\nI sat up and Crystal adjusted and swung her arms and legs around me and we both gasped at the new feeling but it wasn't even close to the contact I required. \n\n\"Hold on\" I commanded and Crystal wrapped her legs around me in a vice like grip and put her arms around my neck. I put my hands flat on the coffee table and the couch and pushed up until I could get my feet flat and then gently leaned forward putting Crystal on her back. Her brown body exploding into my eyes as the cream colored carpet highlighted her tone.\n\nI pulled back and my cock slipped out of her as I rose to my knees staring at her with fire in my eyes. I grabbed my already torn boxers and yanked ferociously on them ripping them in half and chucking them to the side. Crystal cooed helplessly knowing what was in store for her before making sure I knew too.\n\n\"Come get this pussy, boy\" Crystal said squirming running her hands provocatively over her entire body and spreading her legs eagerly. \n\n\"Fill me, baby\" Crystal cooed panting and extending her hands out invitingly \"fill this pussy full of cock and cum.\" \n\nI heard that shit and lost it. I violently pushed the coffee table away from the couch giving us more room and pounced on her slamming my chest into hers and ramming my aching cock into her mocha pussy to the hilt. \n\n\"AAAAAhhhh\" Crystal wailed as I began tenderizing her ebony pussy with long and determined thrusts while her long ebony legs wrapped around my waist and her arms consumed me in a passionate bear hug. My face was buried in her hair and I could feel her tongue and lips kissing and licking my neck and ear. \n\nI pushed my raging cock into her hot black pussy again and again until I rammed it in and started grinding it hard while giving her my own version of wide circles. Crystal loved that shit. \n\n\"Oh God, Sean! Your cock is so good, baby, so fucking good\" she hissed\n\n\"Nobody fucks like you, Nobody! Oh yes, fuck it, take it, get it!\" she bellowed straight into my ear as my hips swirled like a tornado filling her sweet pussy at every possible angle.\n\n\"Oh Sean, baby\" she then said panting and almost pouting as her nails dug into my back and her heels locked into my ass \"You're gonna make me cum again, baby, you're gonna make Crystal cum all over your cock again.\" \n\nShit. I was going to make \"Crystal\" cum. She just had to say that. I could have withstood \"me\" or \"my pussy\" or even \"my black pussy.\" But the second I heard her say her name, due to the totality of its fantasy value to me, it smashed the mental blockade I had in place allowing me to keep my stamina in line. The second I heard it I felt everything collapse and my balls told my brain point blank: \"Houston, we have a problem.\"\n\nI rose up and burned my eyes into her and Crystal piled even more on. \n\n\"Please Fuck Me, Baby! Fuck Me Hard!!\" She cried out desperately \"Make my pussy bleed!\" \n\nI went berserk with lust. I viciously slammed my cock into her and Crystal's pussy muscles instantly contracted fanatically around it. She began thrusting back at me and when our sweaty bodies met there was an explosion of pure sexual savagery that turned us into animals as we started bouncing backwards and sideways from the force of our violent collisions. \n\nThis was the contact I required.\n\n\"AAAGGGHHH UUUGGGHHH OOOgggghhhh\" Crystal screamed as she started climaxing again. I felt her lifting us off the carpet as her ass and back arched upward unleashing torrents of her warm cum all over me. I could feel her pussy throbbing and her insides getting even wetter and warmer while her screams pierced my ears and boosted my ego. \n\nThen I felt the power of the her passion rolling through my body with uncontrollable force. \n\nI was on the brink and knew it. \n\nI reached back frantically and grabbed Crystal's left leg and then her right putting my forearms under her knees and then pressing my weight forward until my hands were next to her shoulders and her feet were straight in the air. Our faces were only inches apart. \n\nThis position was a win/win for both of us because Crystal wanted to look in my eyes when I came while I wanted to pound her pussy into extinction. \n\nWith that I started pile driving my white cock into Crystal's hot ebony pussy as fast and as deep and as hard as I could. I could feel my balls banging against her ass crack as my raging cock punished her willing pussy again and again. \n\nOur contrasting skins slapped loudly together while she screamed and I grunted at the brutality of my hard thrusts. But it was Crystal's eyes, those fucking eyes, that just reached into me and stole my whole being.\n\n\"Cum with me, Sean!\" Crystal belted out as her vibrating ebony face became locked in helpless anguish holding back her next wave so it could meet mine head on. \n\n\"Cum with me, baby!\" She begged.\n\nEverything blurred into slow motion as the enormity of what I was feeling and seeing smashed my consciousness. My mouth was wide open and I could feel my face contorting as I felt my body recoil in preparation for unleashing everything I had. \n\nI wanted to warn her and tell her I was cumming. I wanted to be thoughtful and responsible since we weren't using protection but my brain and mouth weren't working. \n\nIt didn't matter. Crystal already knew and she already knew where she wanted it. \n\n\"In me, baby!\" Crystal shrieked \"I want your cum in me! Cum in meeeeeeee!\"\n\n\"UGGHH GOD\" She screamed clamping her hands powerfully and firmly on my ass locking me inside her as her orgasm overcame her. Crystal's climaxing ebony pussy squeezed my cock with such vengeance that it literally started sucking the cum right out of me. \n\n\"OOHHH I'M CUMMING!!\" Crystal screamed \"SEAN! SEAN UGGHH!!\"\n\nMy body started quaking and everything inside me imploded instantaneously.\n\nDreams do come true. \n\n\"AAAAGGGGHHHHH\" I screamed savagely as I unleashed my first stream of hot cum into Crystal's climaxing ebony pussy. Crystal dug her fingernails into my ass pulling me deeper into her and encouraging me on. \n\n\"Yes!! Yes, Baby!! All of it!! Give me all of it!!\" She roared whipping her head side to side moaning and smiling deliriously. I arched my back plowing my spitting cock into her pushing out a seemingly endless load of my milky cum deep into her drowning pussy. \n\nI swear to God time stood still and as we came together.\n\nBurst after burst of my hot seed shot inside her while she exploded all around me and all I could see was the pleasure on her face and the pride in her eyes. One just fed the other and my mind went into total lockdown to the point where I couldn't hear or comprehend what I was seeing and doing. It was so good it didn't seem real.\n\n\"OHHH UUGGHH\" I growled over and over spraying my creamy cum inside her warm confines as our bodies shook and floundered in ecstasy. How I could cum so much after the epic blowjob she gave me hours earlier still baffles me to this day. I just know my balls kept reloading and Crystal's pussy kept sucking it out of me with unbridled hunger. I never came so good or so hard in my life. I didn't want it to ever end and even when it did, it didn't matter. \n\nI kept going anyway. I thought I was still cumming but had no idea if anything was coming out of my cock anymore. I just kept pumping her and pumping her and pumping her. \n\nA moment later it was obvious that I wasn't shooting anymore and she had maxed out as well but I kept going nonetheless. I freed her pinned legs from my forearms and Crystal happily wrapped them around my waist again. Fatigue slapped me down hard and my thrusts slowed considerably but something inside me kept telling me over and over to push into her just one more time. Just one more time. Just one more time.\n\nIt was her.\n\nIt was Crystal making me push into her again and again. \n\nIt was her soul telling me through her eyes and love struck expression that even though the fireworks had passed, she wanted me there. Inside her body. Inside her heart. Inside her soul. Inside her life. She didn't want me to leave any of them. We gazed into each other's eyes totally surrendering everything. \n\nEverything. \n\nMy body gave out before my mind did as I fell onto Crystal like a rag doll totally spent and totally hers. Our sweaty bodies kept twitching as she wrapped her legs around me jealously keeping me inside her. Our cum began slowly seeping down her inner thighs and onto the carpet. \n\nWe didn't say anything. We didn't have to. I lifted my head and we started kissing softly while we stayed wrapped into each other. \n\nAfter a few minutes I became conscious of the fact that I was completely on top of her. I tried to lift myself off her so my weight wouldn't be uncomfortable to her but Crystal then proved to me by what she said next that all women, no matter what color, are all alike. \n\n\"No, baby\" Crystal purred \"Don't go\" she said squeezing me harder with all her limbs and strangling my softening cock with her pussy lips. \n\nI was exhausted and happily collapsed back on her. Crystal then started softly kissing my neck until she got to the space between my shoulder blades and my neck. She kissed that spot over and over until it finally dawned on me that she wasn't kissing it but sucking on it. \n\n\"Girl, what the hell are you doing?\" I asked chuckling knowing she was giving me a hickey. \n\nCrystal started giggling but giggling with her mouth full. I heard her lips smack loudly breaking the seal on my neck. I rose to look at her and Crystal was beaming with pride staring at her handy work on my neck. \n\n\"Oh no you didn't\" I said grinning and shaking my head in shocked disbelief.\n\n\"You bet your ass I did\" Crystal said proudly while smiling ear to ear \n\n\"I just had to mark the man who just made awesome love to me\"\n\n\"The man who just gave me the fuck of my life\" \n\n\"My man.\" Crystal said confidently while smiling. \n\n\"Jesus, why don't you just lift your leg and pee on me too while you're at it?\" I said still shaking my head and smiling trying to remain \"cool\" despite the fact that the words she just said to me made me want to jump up and do an end zone dance like I was White Shoes himself. \n\n\"I would have but your cock is in the way\" Crystal shot back as we both burst out laughing. \n\nI eventually rolled off her and we grabbed some pillows and a blanket off the couch and snuggled on the carpet. I laid on my back while Crystal draped herself on me resting her head on my chest. It blew me away how easily we made the transition from having sex to being how we always were. Nothing changed. And that was the simple greatness of it. ",
        "We laughed, teased, and praised each other savoring the reality of what we were now and what we had just done. If there were any reservations before between us they were now officially extinct. I knew then I was knee deep in some serious shit with a beautiful twenty six year old ebony woman who was playing for keeps. And I loved it. \n\nDespite all this, however, there was something gnawing at me the whole time as I heard my Dad's two basic tenets of how I should conduct my life swirling around in my head. The first was, and I quote: \n\n\"If you ever get put in jail, you better break out before I get there.\" That obviously didn't apply here. \n\nBut the second: \"Sex is temporary but fatherhood is forever\" did. Crystal and I didn't use any protection and post mortem that ate away at me because fatherhood scared the shit out of me. \n\nI decided to come clean on the spot. \n\n\"Crystal\" I said softly \"You know I loved it but I feel kind of scared because we didn't use any protection.\" \n\n\"That was kind of reckless don't you think?\" I asked. \n\nCrystal lifted her head off my chest and smiled. Then the smile vanished replaced by one hundred percent seriousness. \n\n\"I want to have your baby, Sean\" she said \"I want to make lots of babies with you.\" \n\nI could feel myself gearing up for a nervous breakdown/heart attack tag team combination. Life as I knew it had ended. \n\nThen Crystal burst out laughing. \n\n\"Gotcha\" She said shaking her head and laughing \"I am just playing with you, boy.\"\n\nI was saved and born again on the spot.\n\n\"You don't have to be scared, Sean\" she said \"because I am on the pill now.\" \n\n\"What?\" I said incredulously.\n\nA little history is due here. Crystal was the biggest anti-pill person I ever knew. If I had a dime for every time I heard her go off on the bad side effects of it and how the man needed to bear some responsibility for birth control too I would be a rich man. Thus, I broke into my Crystal imitation and started throwing her usual party line back in her face.\n\nShe laughed and then came clean too. \n\n\"I know\" she said smiling and nodding her head accepting the guilt of her flip flop.\n\n\"But after that night in my apartment, by the door, and then coming home and realizing what I wanted and how badly I wanted you\" she said grinning\n\n\"I told myself I was going to have you no matter what\" she continued \"so I took my ass down to the clinic the next day and got hooked up because I knew that if I didn't\" she said pausing and blushing\n\n\"My black ass would have been pregnant with your baby within weeks.\"\n\n\"So you knew?\" I asked with raised eyebrows \"Even after I stood you up that night, you kept taking them because you knew this would happen?\"\n\n\"Hell yes I knew, baby\" Crystal said smiling confidently \"I just didn't know when.\" \n\n\"But when I turned and saw you getting into the lift line with me today\" she said blushing again.\n\n\"That was when I knew I had you. That was when I knew it would happen for sure because I knew we would make up.\" \n\n\"So, basically\" She said looking down at my chest and running her fingers through my chest hairs before raising up and locking her perfect brown eyes on mine.\n\n\"Your fine white ass never stood a chance. You just didn't know it\" She boasted smiling mischievously. \n\nI just laughed and kept holding her. She was right though: I never did stand a chance. \n\nIt was almost 1am by now and we were spent both physically and emotionally. Crystal and I both started yawning and after a while I told her we should go to bed. \n\n\"Oh, so now you are ready to take me to bed?\" She inquired sarcastically with a smile on her face as she rolled off me and stood up.\n\n\"To sleep\" I said as a matter of fact \"After you got a hold of me tonight my dick won't work for a week and I will need an IV just to get enough fluid in me to lick a stamp.\" I quipped standing up also. \n\nCrystal laughed and put her arms around my neck while I slipped mine around her waist. \n\n\"I'm sorry for your condition, Sean, but the truth is\" She said grinning as our noses touched and we started Eskimo kissing. \n\n\"It couldn't be helped.\" She whispered before our lips met as we started laughing at the irony. \n\nI guess not.  \n\nNor could it be helped that there I was, two hours and one short nap later, pounding Crystal's tight pussy from behind with a handful of black hair in one hand and a handful of ebony ass in the other. But don't get me started on that shit.\n\n____________________________________ \n\nTwo months later Crystal gave her notice at the restaurant. She was set to graduate with a Masters in Accounting and already had a job lined up at a local brokerage firm. We stuck to what she called \"The Plan\" and kept our relationship pretty much under wraps although we practically spent every waking hour and every night together. We knew people were talking but as far as we knew our cover wasn't blown. \n\nCrystal's last night at the restaurant the whole crew threw her a surprise \"moving on up\" party after close. There were probably 25-30 people there. She was so touched that she broke down and cried. She went around hugging and kissing everybody \u2013 everybody except me that is. \n\nWe had live entertainment in the lounge nightly so they hooked up the microphone and Shelly, Crystal's closest friend and fellow server, acted as MC and went around the room with the mike and had people tell their favorite \"Crystal\" story. Then they would present Crystal with a funny or prank gift. Everybody was laughing and partying and from what I could hear it was a pretty loud and rowdy affair.\n\nI say \"from what I could hear\" because I didn't see very much of it and only caught the beginning. When you are a bartender in a busy restaurant and lounge you are always the last one out the door because you have to clean up last, restock, and then count your register. Thus, I was still working during the bulk of the celebration but I could hear the goings on while I counted money in the back offices located in the kitchen. \n\nI had just finished up and was putting the cash in the safe when I heard Shelly's voice booming into the mike.\n\n\"Where's Sean? We can't have a party for Crystal without Sean! Sean, Get your ass out here damnit!!\"\n\nThen the rest of those drunken fools started chanting \"Sean! Sean! Sean! Sean!\"\n\nI started to make my way through the kitchen to the lounge but I was a confused and nervous wreck. I knew they would hand me the mike and expect me to roast Crystal unmercifully. Three months ago I could have and would have brought the house down talking about her and would have relished doing so but now everything had changed. \n\nThe things I could get away with saying while we were \"friends\" now came with a potential price tag and my instinct to protect her publicly now far outweighed my desire to tease her publicly. Plus there was our new status and I didn't want to reveal that. \n\nIf I slammed her the way they expected I would be in trouble with Crystal and if I didn't I risked exposing us. I didn't know what to do or what to say and felt like a man being led to his public execution or suicide. Take your pick.\n\nI walked out of the kitchen and everybody cheered. Shelly was in my face instantly trying to hand me the mike but I bought myself some time by saying I wanted to get a beer first. That worked for about a minute because she was back in my shit as soon as I took my first drink and before I could object the mike was in my hand and everybody was looking at me. I looked over at Crystal's smiling face and she knew immediately by my demeanor that I didn't want to do this. \n\nI started speaking into the mike saying some harmless introductory stuff but then I totally locked up. Nothing came out of my mouth at all. \n\nJust silence. \n\nMe, the guy who relished verbal combat and lived for stuff like this, was now a deer caught in the headlights. I was drowning and dying right there in front of all our friends. \n\nBut then the girl who always had my back, always looked out for me, and always cared about me, sprang to my defense. Crystal walked up to me and took the mike out of my hand and turned around to face everybody. \n\n\"He can't talk shit right now\" Crystal said softly into the mike \"Because he knows if he does I will kill him when we get home.\" \n\nWith that she tossed the mike to Veronica, turned back towards me, whipped her arms around my neck, and kissed me passionately. \n\nCrystal \"outed\" us right there. \n\nWe never hid what we were ever again. \n\nWe underestimated almost everybody thinking they would freak out but for the most part everybody, including our families, were pretty cool. My mom and dad had more concerns about her age then her race but the second they found out that Crystal was on my ass about going to college she became their damn Joan of Arc. She couldn't do anything wrong. My extended family already had a Polynesian and Hispanic presence so Crystal being added to the mix really wasn't an earth shattering event. \n\nCrystal's family, meanwhile, was a different beast and more complicated. Her family was huge. The women were pretty easy and they embraced me immediately. They always made me feel welcome. The men, however, were another story. After I met her parents for the first time her dad walked up to me later and asked\n\n\"What are you going to do if somebody calls my baby a \"nigger\" or \"uncle tom?\" \n\n\"Nothing\" I said \"I'll just laugh, walk away, and take her home.\" \n\n\"But they better pray I don't ever see them again when I'm alone\" I said. \n\n\"That's right. Don't get lured into any bullshit and protect her\" he said nodding his head and grinning while extending his hand \"Welcome to the family.\" \n\nIt was sports however; the greatest racial unifier on the planet, that eventually broke the ice for me on the male side of Crystal's family. \n\nHer family had annual football and basketball games during Thanksgiving and Christmas that pitted one side of the family against the other. The first time I played in the basketball game Crystal was terrified. She knew I could play but she kept telling me it wasn't like playing back home. She acted as if I had never been the minority before while being on the court. Who did she think I played against my whole life? Frat boys? Where did she think I learned how to talk shit? \n\nI played and got off stealing the ball on game point and taking it the length of the floor and flushing it. I was in like Flynn after that. \n\nDuring the game one of Crystal's cousins was guarding me and kept talking trash saying \"white boy\" this and \"white boy\" that. After about the third or fourth jumper I drilled in his eye I turned to him and declared to the whole gym:\n\n\"That's Mr. White Boy to you, son!\" \n\nHer whole family blew up laughing while Crystal damn near fainted from stress. She just didn't understand the difference between the street and the court. Still, however, the name stuck and I was affectionately known from then on as \"Mr. White Boy.\" \n\nCrystal and I got married in the spring of 1991 during my senior year of college. We had the first of our three kids the following year. \n\nJust the other day our eldest daughter, Veronica, went to her first junior high dance. She was supposed to meet Crystal at a designated time and spot after the dance but she showed up some thirty minutes late. Crystal was livid and when she brought her home we sat her down for the interrogation. Apparently a group of them, broken down into couples, had left the dance right before it ended and went on a little lover's stroll. \n\n\"I didn't mean to be so late\" Veronica said \"but there was this boy who finally asked me to dance and I was so excited that I didn't want it to end.\"\n\n\"I'm sorry.\" She said \"But 'it couldn't be helped' because I was so excited and I just lost track of time.\" \n\nCrystal and I looked at each other knowingly and incredulously as our daughter unwittingly uttered out the phrase that held so much emotional and sexual power between us. To most people it was just a simple phrase but to Crystal and me it had history and represented the unstoppable force of a boy and girl overcoming everything to be together. It represented fate, lust, love, and passion. \n\n\"You're grounded!\" We said in unison. \n\nTHE END"
    ],
    "authorname": "DavidJ",
    "tags": [],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/it-couldnt-be-helped-ch-06"
}