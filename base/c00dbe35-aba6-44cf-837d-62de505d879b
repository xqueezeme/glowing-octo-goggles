{
    "title": "Lady in Red Pt. 03 Ch. 01",
    "pages": [
        "\"I do solemnly swear that I will faithfully execute the office of President of the United States, and to the best of my ability, preserve, protect and defend the Constitution of the United States.\"\n\nThose gathered in the great room in Valhalla remained silent as they absorbed the full impact of the presidential oath. President Crawford had died within two days of suffering a massive stroke. Chief Justice Hamilton, upon being informed that the transfer of power was imminent, had immediately traveled to Sparta. He had grown to consider Steve and Gwen Hammer personal friends, and he and his wife both felt strongly that it was only fitting that he be the one to administer the oath.\n\nImmediately following the oath, and surrounded by family and their very good friends, Gwen and Steve held a very brief, whispered conversation. Gwen had her hands on Steve's chest as he held her close. Her face was turned up to his as he leaned in closer to listen attentively to her hushed tones.\n\n\"You have to help me with this. I'm scared to death. What do I know about being president? Am I even qualified? You're the one who understands international diplomacy, not me.\"\n\n\"No one on the planet is more qualified,\" insisted Steve quietly. \"You're brilliant, compassionate, loved, respected, and honest. You're our Queen. This is simply the next step in your incredible career. I swear I'll help you any way I can, and do anything you ask of me. My heart is filled with pride. This country needs you desperately. You're going to make the difference. I'm sure of it.\"\n\nPaula stood proudly with Ted's arm around her waist as she watched Gwen engage in quiet discussion with her husband. The gist of it was obvious to anyone watching Gwen's body language. She had lovingly pressed her hands to Steve's chest as he held her close. The love and respect the couple shared was never more obvious. Gwen was now the President of the United States, but it was apparent that she would continue to rely heavily on her husband, the powerfully capable man that had always placed her welfare above his own. Paula was extremely proud of her daughter's superior intelligence, skills, and accomplishments, but she had no illusions about how much Steve had contributed to her success. Gwen's current position was the result, at least in part, of the absolute trust and respect the couple shared, and the dedication Steve constantly displayed for his wife.\n\nAcross the nation and around the world, viewers had watched the new President of the United States as she took the oath of office. It was almost inconceivable that this beautiful woman was assuming the position of leader of the free world, especially at her age! She was just recently turned thirty five. She had only served as vice president for ten days! \n\nWhat the world saw was the newly sworn-in president in the arms of her warrior husband, seeking his assurance that she was capable of shouldering the tremendous responsibility of the office. As Americans watched the most famous couple in the world prepare to lead their nation, their hearts were filled with hope, as well as a great deal of pride.\n\nThe country had recently been plunged into dark times; war on several fronts appeared likely. Would Gwen have the leaderships skills required to lead the country in time of war? How would the death of President Crawford affect the very unsteady balance of power as tensions mounted across the globe? \n\nWas it possible that, with the help of her husband, President Hammer could somehow find a pathway to a sustainable peace? President Crawford had insisted that his administration had done everything possible to avert war and to find a peaceful solution to the current tense situation, but public opinion polls revealed that over half the population did not trust his word, and even more people questioned his abilities.\n\nNow Gwen Anderson Hammer was the President of the United States. Simply seeing her stand tall and determined next to her very accomplished husband inspired many of those watching to dare hope for better days. This was a president with compassion, honor, and intelligence, as well as great beauty. The couple's calm demeanor and confident composure was inspiring by itself. \n\nAmber Stahl, the recently promoted network anchor for CBC, gave her commentary after viewers watched the new president repeat the oath of office. \"This will be a presidency like no other. President and Mr. Hammer have dedicated their lives to helping others, to righting wrongs, to stopping terrorism, and to building what may be the most generous, philanthropic, and successful family owned business in the world.\n\n\"This couple, along with President Hammer's two sisters, and Jordan and Charlie Burns, owns Lady in Red Productions. The company's value is currently estimated by Forbes to be just short of a hundred billion dollars. Yet, even with the incredible wealth they enjoy, none of the owners have been content to rest on their laurels. Lady in Red Productions is known around the world for its generosity and compassion to those in need.\n\n\"It appears that President Hammer has finished quiet conservation with her husband. Oh! That's another thing the country can expect to see more often. This couple is extremely demonstrative and they have no qualms about showing their love for each other,\" added Amber as the world watched the President of the United States kiss her husband with more than a little ardor. \n\nAll of those attending the ceremony smiled when Steve leaned a little farther down and kissed Gwen as she wrapped her arms around his neck. Only after a fairly long kiss did Gwen step back from Steve to greet her family and friends.\n\nOnce the hugs, tears, handshakes, and words of encouragement were over, Steve spoke to the group. \"The President is requesting that all our friends and family join us in our meeting room immediately. We need to hit the ground running on numerous issues, and all of you will be needed. The kids will remain here with our day care staff.\"\n\nNot knowing exactly what to expect, Paula led the procession into the large meeting room. Steve stood by the door as his friends and family entered and found seats. Steve's authority in his wife's administration became evident when he stopped two men in suits.\n\n\"This meeting will consist only of those people in the President's inner circle,\" stated Steve firmly. \"I realize that President Crawford regarded you highly, but he's no longer the president. This is a new administration. You may wait in the great room, if you'd like.\"\n\nThe two men exchanged surprised looks, then angrily turned and headed for the door. \"It appears that President Crawford's two most trusted advisors have been turned away from the first meeting of the new presidency,\" observed Amber Stahl. \"Then Vice President Hammer made her frequent disagreements with President Crawford's policies known, even before she was appointed Vice President. Most political observers feel that the late President Crawford would never have selected Senator Hammer for the position of Vice President if it hadn't been forced upon him. When former Vice President Grandquist was indicted for fraud, racketeering, and income tax evasion, and subsequently forced to resign in disgrace, President Crawford's administration was in disarray. The selection of the extremely popular Senator Hammer to serve as Vice President was a matter of political survival. \n\n\"Senator Hammer had promised that she would not seek the presidency when her three plus years of service as Vice President ended. That was the common ground required by leaders of both parties to agree to her nomination. They did, however, put off the approval process for two weeks to allow Senator Hammer to reach the age of 35. That's the minimum age required by the constitution for anyone to hold the office of president, and by default, the office of vice president.\" \n\nMeanwhile, Gwen was addressing her inner circle in the secure meeting room at Valhalla. There was no indication that she was nervous as she spoke confidently to the group. \n\n\"First, I want everyone to be aware that this meeting is being videotaped. Every meeting in my administration will be taped for accuracy, transparency, and for historical purposes. This administration will always be totally transparent. Tapes of meetings will be released to the press and public as soon as it can be determined that there will be no security issues created by their release,\" began Gwen.\n\n\"I am going to ask many of you to make some very real sacrifices for me, and for your country. Please be honest if I ask something of you that you feel is either beyond your ability, or your willingness to undertake now, or going forward. \n\n\"Aunt Janice, I want you to be in charge of White House protocol. That includes state dinners and the like. Grandmother Patterson, I ask that you call on your vast experience and knowledge of formal protocol to assist Janice whenever possible.\" \n\nBoth women beamed and nodded to the lovely young woman who was now their president. Beatrice Patterson wiped a few small tears from her cheeks as Gwen continued. She realized that being accepted into her grandson's family was more than she actually deserved.\n\nGwen turned to speak to Tyler and Sybil next. She couldn't help but smile as she thought back to how they had begun their relationship. It had been a few days after Gwen and Steve's wedding that Tyler had returned to Sparta. He had missed the wedding, but wanted to congratulate his high school friends on their marriage. He had made arrangements with his good friend Billy Marsh to visit him in Asgard, since no one outside the inner circle could just 'drop in'.\n\nBilly had to go into work at five for the late shift at the family restaurant. \"Charlotte will be home in an hour or so. She told me to ask you to hang around so she could catch up with you. Gwen and Steve probably won't be back before late this evening. They're going to the state fair for the day. Charlotte started her residency at the hospital Monday and should be done by six.\"\n\nTyler promised to wait in Billy's living room watching a baseball game on TV. The game was a blowout and Tyler quickly became bored, so he decided to take a stroll. He easily determined which house was Steve's. It sat on a hill overlooking many of the other homes. It wasn't larger than the other homes, but the location was probably the best in Asgard. There were also numerous wedding gifts sitting on the front porch. Billy had mentioned that Steve and Gwen were still receiving numerous gifts delivered to their home every day. Tyler wasn't surprised, since his own gift had been mailed too late to reach his friends before their wedding day. \n\nBelieving that Steve and Gwen wouldn't mind, Tyler decided to walk around the outside of Steve's house. Billy had told him about the Olympic pool in the back yard and he was curious to see it.\n\nTyler was indeed impressed with the size of the pool, although it was fenced in and he was unable to get very close. Then he decided to climb the steps to the back porch and peer in at Steve's hot tub. Billy had mentioned that every home had one installed in an enclosed porch. When Tyler raised his hands over his eyes to shield the sun's glare from preventing him to see inside, he almost wet his pants!\n\nSitting on the steps to the tub was a very lovely but very naked woman. Held steadily in her hand was a very deadly looking gun!\n\n\"Who are you?\" demanded the dark haired beauty. \"You have ten seconds to explain yourself before I start shooting.\"\n\nTyler was extremely careful to keep his hands high as he replied to the woman. \"I'm Tyler Smith, Ma'am. My Dad is president of one of the local banks. I went to school with Gwen, Steve, Billy, Charlotte, and Jordan. I don't mean any harm.\n\n\"If you'll allow me, I'll just go back to Billy's place and wait for Charlotte to get home. I apologize for snooping around, looking like some kind of criminal. I didn't realize anyone was home. I know that's no excuse.\" \n\n\"Just a minute!\" exclaimed the woman as Tyler had begun to back away. \"I need help. I hurt my back a few months back and it's gradually getting better, but I saw you out by the pool and stepped out of the tub to get my towel. My foot slipped and I landed here. My towel's in the tub and I can't get up.\"\n\n\"Ma'am, if you'll put that gun down, I'll be very willing to help you. I'm just a bit nervous with that thing pointing at me.\"\n\n\"I don't dare put it down,\" explained the nervous woman. \"I don't know you. I'll lower it and point it away from you, but the safety is off and I'll use it if I have to.\"\n\n\"Okay, as long as you're extremely careful. I'm going to come inside now. How can I help you?\" asked Tyler with genuine concern.\n\n\"I'll probably be able to walk if you help me stand up. My back is hurting pretty badly and I can't seem to get up by myself,\" admitted the woman. \"My name's Sybil, by the way.\"\n\n\"You're Sybil? Billy mentioned you. He didn't tell me how beautiful you are. He did mention that you were injured by gunmen that were after Gwen, so I can understand why you're a bit nervous with me showing up at the back door.\"\n\n\"Now I really don't trust you,\" replied Sybil. \"I know I'm not beautiful and I don't have the curves that all of the other women around here have. I told Gwen once that I'm just a skinny girl with a gun.\"\n\n\"Apparently you're also a blind girl, but still with a gun, so I won't argue. Let me help you up.\"\n\nTyler slowly stepped next to the sitting woman and gently took her extended left hand and arm to help her stand. It was obvious by her expression that Sybil was in pain as she slowly stood. Tyler could see her trembling and was quite concerned. \n\n\"I can see how much pain you're in. Would you permit me to carry you into the house? Otherwise, I think we should call an ambulance. We probably should do that anyway.\"\n\n\"No! No ambulance! I've had this happen before. Once I lie down for a while and relax, my back will loosen up. Please carry me to my bed, but don't get any ideas. I still have my gun.\"\n\nTyler bent and carefully placed his left arm just behind Sybil's knees and then ran his other arm around her back and under her right arm, the gun easily available to her. He was surprised at how light she was, but he decided that he would live longer if he refrained from speaking to the agitated woman. He stepped to the inside door and tried the knob. \n\n\"The door seems to be locked,\" observed Tyler. \"Obviously, you don't have the key on you, but is there one somewhere around here?\"\n\n\"Shit!\" exclaimed Sybil. \"I must have set the lock when I came out. The front door has a keyless entry and I know the code. Could you just carry me around to the front door? I don't think anyone's around so we shouldn't be seen if we do it quickly, and my back is hurting too much to worry about it anyway.\"\n\nTyler managed to carry the woman to the front of the house. Sybil's naked body was slippery and he had to stop to reestablish his hold a couple of times. Following his second awkward effort he found he was gripping much of Sybil's right breast. She briefly studied his hand covering her breast before looking back at him.\n\n\"I'm going to assume that you aren't intentionally groping my breast, because then I'd have to shoot you before you could carry me to my bed.\"\n\n\"It isn't on purpose!\" insisted Tyler. \"You're just a little slippery and I was trying to get a better grip. I'd never grab your breast like that!\"\n\n\"Isn't it big enough? Is that why you'd never grab it?\" teased Sybil as she hid a grin that was trying very hard to escape her face. While she found her situation quite embarrassing, she decided that as long as it was unavoidable, being held in the strong arms of a handsome man like Tyler wasn't all bad. \n\n\"It's the size of your gun, not your boobs that concerns me,\" allowed Tyler as he came around the corner of the house with Sybil in his arms. That was when he saw Gwen, Kate, Lisa, Stephanie, Naomi, and Jordan with their respective male counterparts approaching the front porch.\n\nNo one uttered a word as they stared at the intriguing scene before them. Sybil blushed deeply but Tyler was even redder. \"This isn't what it might look like,\" blustered Tyler as he felt his face start to glow.\n\n\"You mean that you don't have Sybil's boob in one hand and her ass in the other?\" asked Kate calmly. \"Or do you mean that she isn't naked in your arms? And is that a gun, or is she just glad to see you? Maybe she's coercing you to carry her naked around the yard, just to teach you to submit?\"\n\n\"Please let him carry me to my room before I die of embarrassment,\" groaned Sybil. \"I hurt my back and he's just helping to get me to my bed.\"\n\n\"I see,\" chuckled Jordan. \"He stripped you down and carted your cute butt around the back of the house in an attempt to relieve your back pain? Does his squeezing your breast like that distract you from the pain in your back?\" \n\n\"How long have you two known each other?\" asked a bemused Gwen. \"I didn't think that you two had ever met.\"\n\n\"We just met a few minutes ago,\" admitted Sybil. \"He was sneaking around the backyard and I was in the hot tub. I went to get my gun and I slipped and hurt my back. He offered to carry me to my room. That's all.\" \n\n\"That's all?\" teased Stephanie. \"You realize he's holding your breast and ass even as we speak. He's getting to know you pretty fast! I always knew that 'Miss Goody Two Shoes' thing was an act.\" \n\n\"Okay, I think we've tormented Sybil enough for one day,\" grinned Steve. \"It's obvious that she's in pain, either Tyler is squeezing too hard, or her back really does hurt. Follow me, Tyler. I'll show you her room.\"\n\nOnce Sybil had been placed gently placed in her bed, Gwen and Kate attended to her as the rest of the group gathered in the kitchen where Steve passed out beverages. Tyler had barely taken a sip of his beer before the questions began.\n\n\"How come you didn't make it to the wedding?\" asked Steve. \"You're one of the few people we actually sent an invitation to, and you never responded.\"\n\n\"I was working for a medium sized company in California. Things were going pretty well until last year's Christmas party. The company CEO's daughter was there and I stupidly asked her out on a date. It took a while, but eventually I determined that she was only dating me because I knew you, Jordan, Charlie, and Gwen. I guess she found me on Google as being with you that day you shot the hell out of those guys in the gym, and for catching 'The PASS' .\n\n\"She'd been after me to bring her home to visit. It became pretty evident that she wasn't interested in me so much as in trying to become part of the coolest group of people on the planet. I decided to tell her I was too busy to attend the wedding to see how she'd react. She didn't believe me at first, but when it became obvious that I wasn't going, she dumped me in front of everyone at work. She told everybody what a loser I was and how I was full of shit... her words, not mine.\"\n\n\"Wow! It's a wonder you still have a job,\" marveled Naomi.\n\n\"To be completely honest, I handed in my resignation that afternoon. I knew I'd never be comfortable there and the chances for advancement looked pretty slim. I have my MBA, so I'll find something. I apologize about missing the wedding, but I knew you'd be so busy, my absence wouldn't be noticed. Dad told me that it was the biggest and best party Sparta has ever seen.\"\n\n\"Tyler, I just realized that you've never met James!\" interrupted Stephanie. \"I'm sorry about being so rude. Tyler Smith, meet my boyfriend, James Hawthorne, by way of London. Tyler and I used to date before he dumped me when he left for college.\"\n\n\"I didn't dump you!\"protested Tyler. \"You were the one that didn't want to make any sort of commitment since I was leaving for school. You were right, though. I wasn't home a dozen times in the four years I spent in college and it didn't get any better when I was working toward my MBA.\"",
        "\"After seeing how you manhandled poor Sybil, I'm glad I made the break,\" teased Stephanie. \n\n\"Is she married, or engaged, or anything?\" asked Tyler quickly.\n\n\"You finally get your hands on a girl and you immediately want to marry her?\" joked Jordan. \"Seriously, she's very single, and available if the right guy comes along.\" \n\n\"That pretty much leaves Tyler out,\" laughed Lisa. \"We're far too fond of Sybil to let her get tangled up with a guy like him. I remember that you were almost as big a perv as Billy.\" \n\n\"Yeah, it sure didn't take you long to take advantage of Sybil. The poor girl was suffering and all you could think about was getting a handful of boob,\" joined in Jared.\n\n\"He was a perfect gentleman!\" insisted a fully dressed Sybil from the doorway. \"I can't let you team up on the guy when all he was doing was helping me. I thought he was a friend of yours!\"\n\n\"Sybil, you've been around us enough to know that we like to tease and joke with each other,\" responded Gwen from behind Sybil. \"He is our friend. Do you think he'd still be in one piece if Steve and Jared really thought he was taking advantage of you? Believe me; he'd be in a world of hurt by now.\n\n\"Tyler, would you help Sybil into that recliner, and then get a nonalcoholic drink for her? She's on medication for her injury,\" added Gwen.\n\n\"You were just teasing Tyler about taking advantage of me? You didn't think he had 'manhandled' me as Stephanie put it?\" asked a contrite Sybil.\n\n\"Make no mistake, you were manhandled,\" laughed Jordan. \"But the key is that you didn't seem to mind it, so none of us were upset. Tyler's one of the good guys, or at least he used to be. We haven't seen much of him since high school, but I doubt he's changed very much. He dated Stephanie for a few months before he went away to college and they're still friends. He was recently dumped by a girlfriend, so he's vulnerable, and available.\"\n\n\"I have to hand it to you, Jordan,\" cracked Naomi. \"You covered all of the important stuff in a few concise sentences.\" \n\nThe friends spent the evening getting reacquainted with Tyler and sharing memories of the 'glory days'. It was evident by the end of the visit that Tyler and Sybil were getting along very well. \n\nGwen quickly abandoned her reminiscing and returned to the task at hand. \"Tyler, all the owners are going to be extremely busy in Washington. I'll be taking advantage of Charlie and Jordan's talents quite often and I have major plans for Kate, Lisa, and Steve. That means that you'll have more decisions regarding Lady in Red Productions left solely on your shoulders. We'll help when we can, but we're confident that you'll be able to pick up any slack created by our new careers.\n\n\"Sybil, you'll need to coordinate with the Secret Service people regarding security here at Asgard. We trust you completely and have no doubt you'll be up to the task of keeping us safe.\"\n\n\"Madam President, I am speaking for both Tyler and myself when I tell you that we are greatly honored by your faith in us and we will do our jobs to the very best of our abilities. We'll make you proud,\" promised Sybil earnestly.\n\n\"You always have. I don't expect that to change,\" smiled Gwen before moving on. \n\n\"Ashley, as you already know, I want you to serve as my press secretary. Sometimes, it's a thankless and difficult position, but it's one you're well versed in and qualified for. Never lie to the press, or to our constituents. That rule goes for every single person in my administration. We do not lie. If the truth is a problem for some reason, say nothing. Do not lie to protect me, protect my image, or for any other reason. Everyone in this room understands my feelings on this, I'm certain.\"\n\nGwen then turned to Lisa. \"I'm asking you to be my Chief of Staff. I need someone that I can absolutely trust to advise me, and to tell me when I'm wrong. That would be you, Lisa, if you'll take the job.\"\n\nLisa's eyes were very moist as she looked at her sister. \"It will be an honor to serve in your administration. I'll always do my best and help you any way that I can. Your faith and confidence overwhelm me. Thanks, Sis!\" \n\n\"Jason, if you're willing, I want to place you in charge of FEMA. That agency has been floundering far too long. You did an incredible job for Lady in Red's disaster response. I want you to use that experience and knowledge to forge FEMA into the rapid response and rescue agency it was intended to be.\"\n\n\"Madam President, I will gladly undertake that task, and may I express my appreciation that you would consider me. I will not let you down,\" replied Jason with emotion.\n\n\"Jeff Wilson, I'm going to nominate you to be the Secretary of Veterans Affairs. I don't have to tell you how poorly that agency has been performing for as long as any of us can remember. Use your service experience and your success in business to make the Veterans Administration into what it was meant to be,\" urged Gwen.\n\n\"Madam President, I will not fail you! Thank you for the confidence,\" croaked an obviously emotional Jeff Wilson.\n\n\"Madam President,\" interrupted Lisa with some trepidation. \"Some of these appointments will need approval from the senate. I don't want to be negative, but Jeff isn't a member of the 'good old boys club'. The senate will also have to confirm Jason's appointment. He isn't exactly a household name in D.C. either.\"\n\n\"Thanks for pointing that out, Lisa. I understand how it's supposed to work. Let me say this. I'll do everything in my power to get my appointments through the confirmation process. I'll vacate these positions by executive order if need be, although I fully expect the people currently in these offices to submit resignations when I ask for them. That includes our bumbling Secretary of State,\" added Gwen.\n\n\"Which segues us into my next appointment. Naomi, I want you to be my Secretary of State. I know you have the two boys that keep you very busy, but I would very much appreciate it if you'd consider the position.\"\n\n\"If you feel I'm qualified and if it'll help you straighten out the mess we're in, I'll be honored. I know you'll have a fight on your hands getting me approved by the senate, but if you're willing to fight for me, I'll support you every step of the way. This is an honor I never expected.\n\n\"Jared and I knew you wanted me to be prepared to travel with Steve. My bags are packed and they're in the big closet in Valhalla right now. We agreed that I would serve any way possible, but we both assumed that Steve would be your Secretary of State.\n\n\"Jared's working through an injury right now, but he hopes to play football a couple more years. He can make sure the boys are well cared for when I'm traveling. The child care system Lady in Red has in place pretty much frees up all of us to pursue our careers.\"\n\n\"My plans for Steve go beyond any single position in government,\" revealed Gwen. \"He'll be my go-to guy for a host of different and difficult issues. I realize that since he'll have no official position, members of congress will question his ability, his credentials, or his right to represent me. However, there are no laws that prevent me from asking for assistance from citizens, and I'll be asking a great deal from Steve. You can be certain of that.\n\n\"That brings me to the last appointment I'll make this afternoon,\" continued Gwen. \"Kate, I would very much appreciate it if you would agree to serve as my Attorney General. I'm going to see that the current AG, Atkins, is gone from that position before the end of the day. Your name will be submitted to the Senate by this time tomorrow. President Kennedy appointed his brother, Robert, to the same position, so there's precedent for this. Will you take the job?\"\n\n\"Sis, I mean Madam President, it would be a great honor to serve in your administration. I would remind you, however, that I'm not quite thirty three years old and there will be those that feel I'm too young to handle the job. I'll do my best to prove them wrong!\"\n\n\"Bobbie Kennedy was only thirty seven when he became Attorney General, but there's another issue I want to bring up this afternoon,\" continued Gwen. \"I recently turned thirty five. Steve is only a few weeks older than I. Naomi is our age and Jason's not yet forty. Jeff Wilson will be the old guy in my cabinet at sixty three, and he'll be a member of the same cabinet as his daughter, if we manage to get these appointments approved.\n\n\"I'd like some opinions on how we should proceed. By that, I mean are we suddenly going to change the way we've done business for the past fifteen years? Do Steve and I stop performing totally? Does Naomi give up her film career? How about Lisa and Kate? Do we become more like the traditional administrations of the past?\"\n\n\"My personal feeling is that we continue on as we have been, as time permits,\" opined Lisa. \"You didn't become president in spite of your acting, charitable actions, or love for your family. Those are the very things that caused your rise to the top. You need to be yourself, which will probably scandalize the old guard in D.C.\"\n\n\"I agree with Lisa,\" offered Steve, who had remained silent up to that point. \"You weren't elected. You didn't make any promises, or make any deals, except for your promise not to run for the office. You've reached the presidency because you're different than the politicians that infest Washington. Your honesty and sincerity is why you're now our president. Don't change a thing!\"\n\n\"Anyone else care to weigh in on this?\" asked Gwen as she looked around the room. \"I agree with Lisa and Steve. I'm not going to change and try to be more 'presidential', whatever that might mean. We'll do our best and let the chips fall. I thank all of you for your unwavering support of Steve and me, as well as your support for each other. My greatest strengths are sitting in this very room. I'm the president because I'm privileged to have such a giving and intelligent circle of friends and family.\n\n\"Naomi mentioned that she's already packed her bags. Steve is also prepared to leave immediately. My first act as President of the United States is to send Naomi and Steve to meet with leaders of Russia, China, Britain, France, Germany, and North Korea in an attempt to find a solution to the current crisis. I feel that President Crawford handled the entire situation poorly. Consequently, we're in a very precarious position at this time. I've tasked Steve and Naomi to find a path to peace. That's no easy request, but I'm confident that if anyone can manage it, they can. \n\n\"I've scheduled a news conference for this evening, a few hours after Steve and Naomi depart. I'll give a brief statement on how much we'll miss President Crawford and what a great guy he was. Then I'll get down to brass tacks and reveal what I've asked of Naomi and Steve. I expect some difficult questions. In an hour, I want to meet with Lisa, Kate, Mom, Dad, Jeff, Julia, and Grandfather Patterson to go over what my responses should be. That'll give me time to say goodbye to Steve,\" grinned Gwen. \n\n\"Madam President! We all know what saying goodbye will entail. You're already diverging radically from the standard farewell handshake,\" quipped Kate. \"What sort of example will you be setting for the rest of us?\"\n\n\"I would hope a very good one. My administration will expect all spouses to be supportive in any way possible,\" grinned Gwen. \"Please remember this meeting is being videoed for history.\n\n\"I want each of you to create a list of names of people you feel would work well in my administration. We'll meet again tomorrow at this time to discuss them. The vice presidency is probably the most pressing, so be sure to give that some serious thought.\"\n\nIt was exactly eight PM that evening when Gwen stepped up to the podium at Valhalla. The room was filled to capacity with reporters and cameramen. \n\n\"I will make a brief statement. Then I'll entertain questions,\" stated Gwen as the first news conference of her presidency began.\n\n\"Steve and I offer our condolences to the family and friends of President Crawford. We were saddened to learn of his death. He loved his country and always served it to the best of his ability. He will be greatly missed.\n\n\"In light of the tenuous situation with Russia, China, and North Korea, I've asked my husband, Steve, along with my nominee for Secretary of State, Naomi Wilson-White, to enter into discussions with leaders of these nations in hopes of finding a peaceful solution. They have already departed for England. They will be stopping in London to meet with Prime Minister Blake before continuing on to Paris, Berlin, Moscow, Beijing, and Pyongyang.\n\n\"I've requested the resignation of numerous cabinet members and staff. Frankly, I have no confidence in them and feel compelled to replace them. As I've already mentioned, I'll nominate Naomi Wilson-White for the position of Secretary of State, my sister, Kate Martin, as the next Attorney General, Jason Hunter to head up FEMA, and Jeff Wilson as Secretary of Veterans Affairs. I'm not going to cite their qualifications at this time. Suffice it to say that they have my complete trust and confidence. I'll expect quick approval from the senate.\n\n\"I have asked my sister, Lisa Hunter, to serve as my Chief of Staff. I thank her for accepting that role. I will rely on her heavily. Finally, it is no secret that I lean on my husband for support, assistance, and solutions. I will continue to do so. I know of no person more capable, more dedicated to family and country, or better able to find a way to avoid war in these difficult times. I will take advantage of his knowledge and skill as much as possible. Now I will entertain questions,\" concluded Gwen as she pointed to Amber Stahl in the front row.\n\n\"Thank you, Madam President. There are so many questions I would like to ask! Do you feel that war can be averted? Have things gone too far to find a peaceful solution?\"\n\n\"Maybe I'm an optimist, but I believe that we can wage peace and be successful. I have absolute confidence in Steve and Naomi. I expect them to find a way back from the brink of war.\"\n\n\"Madam President, aren't you placing a great deal of faith in a football player?\" asked a reporter from a cable news network.\n\n\"A football player?\" repeated Gwen. \"Try a two time league MVP, a three time Super Bowl champion, and two time MVP of the Super Bowl. He led Navy to the National Championship in his senior year.\"\n\n\"Okay, he was a very good football player,\" agreed the reporter before pressing on. \"Even if he excels at a sport, should you place the fate of the nation in his hands? Doesn't this situation require more experience?\"\n\n\"This situation is extremely serious. It demands that I select the very best people available. That, in my opinion, is exactly what I have done. I think the people of this great nation are feeling hope for the first time in a very long time. The inspiration for that hope is flying across the Atlantic at this moment. I absolutely stand by my decision to send Steve and Naomi on this difficult mission.\"\n\n\"After serving as vice president for only ten days, do you feel qualified to serve as President of the United States?\" asked a tall woman in the third row.\n\n\"I asked Steve that question immediately after taking the oath of office. He told me that no one was more qualified and that he would do anything I asked of him to help me. I can honestly say that I've never had reason to doubt Steve's assessment of a situation. That would indicate that the answer to your question is a simple 'yes'. I am qualified to lead the United States.\"\n\n\"Will you seek the presidency when your term is up?\" asked another reporter.\n\n\"I never have, and I never will run for any political office, at any time\" replied Gwen emphatically.\n\n\"Will you continue to wear red now that you're president?\" asked a reporter in the back of the room. \"Wouldn't that seem like you're promoting your company while serving as president?\"\n\n\"I was the 'Lady in Red' long before I held any office. I see no reason to change my wardrobe. As I have stated in the past, brave men and women have fought and died to support my right to dress as I please. To feel forced to stop taking advantage of the freedoms that so many fought so hard to achieve and defend would be disrespectful. I honor those who now serve, and have served in the past, by exercising my rights.\"\n\n\"Was it wise to change horses in midstream, so to speak?\" questioned a network reporter. \"Secretary Carlton is familiar with every aspect of the situation and the negotiations that have transpired thus far.\"\n\n\"That is precisely why I am nominating Naomi to replace him,\" responded Gwen calmly. \"I believe that the United States needs to demonstrate how determined we are to resolve this situation. Sending the same people to repeat the same stagnant position won't further our cause. We badly need fresh insight and ideas if we're to avert war.\"\n\n\"You honestly believe that sending your husband and best friend to negotiate for the United States is in the best interest of this country?\" pressed the reporter. \"Doesn't this situation call for considerable experience and total understanding of the events the led up to this impasse?\"\n\n\"I cannot state this more clearly,\" responded Gwen. \"Naomi and Steve are two of the most capable people I know. No one understands the background, the nuances, or the seriousness of the situation better than those two. This issue demands the very best America has, and it is my absolute belief that I have selected exactly that. \n\n\"My husband is often referred to as 'The Warrior', and for good reason. If it comes to war, he'll be one of our greatest assets. But, as a true warrior, he has experienced firsthand the suffering and pain that war creates. He's been in battle and understands that no one really wins. \n\n\"It's been said that the truth is the first casualty of war. My husband speaks the truth, even when it isn't convenient. Other nations are well aware of this. They respect it. Sometimes they fear it. Steve has proven that the truth is a far better negotiating tool than lies. He and Naomi are the people I want representing me, as well as this great nation.\" \n\n\"No one has addressed the elephant in the room. How will having our first woman president change the way things are done in Washington?\" asked an older lady reporting for a Washington paper.\n\n\"Gender will have little to do with the changes that I'll initiate. For example, the press will be given videos of all high level meetings as soon as it is determined that doing so will not compromise national security. I expect my administration to be totally transparent and truthful. That alone will be a huge change from how things have been done in the past.\"\n\n\"Autographed copies of the Maxim issue you appeared in while still in high school are selling for fifteen thousand dollars a copy,\" began a younger reporter in the back. \"Do you now regret posing provocatively for that publication?\" \n\n\"Correct me if I'm wrong,\" countered Gwen with a bright smile. \"The United States has never had a woman president that hasn't posed for that magazine. I became President of the United States just ten days after turning thirty five. Are you suggesting that I would have become president sooner if I had not appeared in that publication?\"\n\n\"Of course not,\" responded the reporter stubbornly. \"But we now have a president that has appeared in various states of undress and even nude in movies and publications. Do you feel that conduct is acceptable?\"\n\n\"Yes, I do,\" responded Gwen immediately before pointing to another questioner.\n\n\"Even before your very highly publicized wedding, you were referred to as the Queen of Valhalla, the Queen of Asgard, and Queen of Sparta. More and more people have been bowing, genuflecting, or curtsying to you as time goes on. Does this make you uncomfortable, and do you think it should stop?\"",
        "\"I have stated repeatedly that it was not necessary. However, Duchess Kate pointed out to me that it was a sign of respect, not only for me, but for Steve and my fellow owners of Lady in Red Productions. People appreciate the efforts we've made and continue to make for those experiencing difficult times, for whatever reason.\n\n\"I will not ask these wonderful people to stop their gracious gestures if it is something they want to do. As I stated earlier, many brave people have fought for the rights we enjoy in this great country. People can legally make all sorts of gestures, and often do, even if they're not always nearly as polite. I reiterate that these signs of respect aren't necessary in any way, but I do appreciate that so many thoughtful people choose to honor us in that manner.\n\n\"I've been the face of Lady in Red for years. I'm very proud of our company and the things we have accomplished. I cannot, and will not turn my back on those that wish to thank me and my company for our efforts. Sometimes, a simple bow or curtsy is the only way they can demonstrate it. I understand that and I always try to acknowledge them. It's only polite. If no one ever bowed or curtsied to me again, I would be fine with that, but as long as they do, I will respond as graciously as I can. \n\n\"I did not respond to them so I would become President of the United States. Rather, I became President of the United States because I have listened and responded to those voices that are never heard in Washington. All of our citizens deserve respect, the opportunity for education, health care, and decent employment. They do not need or want handouts from the government. They do need opportunity, and my administration is going to work every day to provide those opportunities to as many citizens as we can.\" \n\nA portly man in the second row asked the next question. \"Will you stop performing in concerts and movies, and curtail your music career now?\"\n\n\"I will not rule out anything at this point. Obviously, finding time will be a big factor,\" responded Gwen. \"I won't limit my future by making rash assertions this evening.\"\n\nGwen ended the news conference a few minutes later and once again met with her inner circle in the meeting room in Valhalla.\n\n\"That seemed to go well,\" observed William Patterson. \"I'm glad we discussed the probable questions the press would ask, but you handled everything perfectly. Everyone broke into smiles at your response to the question about trusting a mere 'football player' with such delicate negotiations.\"\n\nThat statement caused Gwen's thoughts to linger on Steve's football successes. Her undergraduate career at Stanford had been far from average. After the success of her movies, especially her Oscar for 'Rise of the Queen' and her music career, she was the single most recognizable person on the large campus. Being the girlfriend of Steve Hammer only increased her visibility, although a new acquaintance named Colt Chance had required some time to understand that fact.\n\nGwen had found herself taking a required history course in the fall of her senior year. On the first day of class, a tall athletic looking guy took the seat next to her. He smiled and nodded at her as the instructor called the class to order.\n\nThe male instructor noticed both Gwen and the fellow sitting to her right. \"Ms. Anderson, it seems that you attract quarterbacks.\"\n\n\"If you're referring to Steve Hammer, then your supposition is accurate,\" responded a somewhat confused Gwen.\n\nGwen was surprised at the chuckles her response drew from many of the other students as her instructor continued. \"Actually, I was referring to the gentleman to your right.\"\n\n\"Oh, are you a friend of Steve's?\" asked Gwen of the man next to her, while trying to determine the reason for the snickers from the other students. To her total surprise, the entire room broke into gales of laughter at her innocent question.\n\n\"Ms. Anderson, allow me to introduce you to Stanford's All American quarterback, Mr. Colt Chance. Many expect him to lead Stanford to the national championship this year,\" explained the grinning instructor, clearly enjoying the situation.\n\n\"Oh, I see,\" managed Gwen as she turned to shake hands with the man seated next to her. \"It's nice to meet you, Mr. Chance. If you're serious about playing for a national champion, you really need to get appointed to the Naval Academy, as in yesterday. They could use another good safety.\"\n\n\"Miss Anderson, you're the first person I've met in two years that didn't already know who I was,\" chuckled Colt. \"I appreciate your suggestion, but I'll take my chances with Stanford. Navy isn't even rated in the top ten. It's the first time they've ever broken into the top twenty, and they're eighteenth. We're the top rated college team in the nation, so I'm sure you can understand why I won't be joining the Navy anytime soon.\"\n\n\"I think it's probably because you prefer to remain a starter,\" quipped Gwen as the laughter increased in the room. \n\nThe Stanford quarterback's smile grew bigger. \"I admire your loyalty, misplaced as it may be. I was runner-up for the Heisman Trophy last year. I didn't even see your boyfriend at the presentation in New York. Oh, wait! That's because he wasn't one of the finalists!\"\n\n\"Steve isn't big on individual awards,\" allowed Gwen with a smile of her own. \"I don't even know where he keeps his Oscar, his Emmies, Grammies, or other awards. I wish you luck if an individual award is important you. Steve's goal this year is for Navy to go undefeated and win the national title. He's never mentioned the Heisman.\"\n\n\"Except for a couple of good teams, they have an easy schedule, so they may go undefeated, but the title is out of reach for a team like Navy,\" declared Colt. \"They don't have the horses to run with the big boys.\"\n\n\"January isn't that far away. We'll see how it all plays out,\" replied Gwen sweetly. \"I'd caution anyone that bets against Steve Hammer that they're making a big mistake.\" \n\nAfter that, Gwen and Colt would often exchange trash talk and light banter before and after class. In mid-October Chance went a little farther.\n\n\"My fraternity is having a party after our game with Notre Dame Saturday night. I was wondering if you'd like to come. It's going to be a great time and we'll be really jacked after beating Notre Dame.\"\n\n\"That should be a good game,\" acknowledged Gwen. \"Navy beat them 45-17 two weeks ago, so you'll have your work cut out for you.\"\n\n\"It'll be more like a tune-up for USC next week,\" laughed Colt. \"If you want to come to the party, I'll give you a pass. No one gets in without them. Not even you.\"\n\n\"It does sound pretty cool,\" admitted Gwen. \"Could I bring a friend? If not, I'll just do something else.\"\n\nDetermined to show his influence within the fraternity, Colt quickly agreed. \"Here's a pass. I'll just jot down a note that it includes a friend. Look me up when you get to the party and I'll show you around.\"\n\nSaturday evening at the party, Colt was keeping his eye on the door as he waited for Gwen to arrive. Stanford had narrowly defeated Notre Dame earlier in the day and the school was abuzz about a shot at the National Championship. Colt Chance was considered the major cog in a great team and he was proud of the recognition. After the game, he had hinted to some of his friends that Gwen was going to be his date for the evening. His jaw almost hit the floor when she made her entrance, on the arm of Steve Hammer! \n\nSuddenly, Colt was not the most important person in the room. Partiers gasped and clapped with glee when they saw Gwen dressed like a movie star and accompanied by one of the sexiest men on the planet. Gwen introduced Steve to people she recognized, which really wasn't very many people. Then she spotted Colt standing off to the side and led Steve over to introduce him. \n\n\"Colt Chance, please meet Steve Hammer. He played Thursday night on ESPN, so he has the weekend off. Colt plays football for the Cardinals,\" added Gwen as if it were an afterthought. \"He says that he's very good.\"\n\n\"You sure had a good game today,\" praised Steve as he held out his hand to the other quarterback. \"Throwing for three touchdowns and running for another against Notre Dame is pretty darn good!\"\n\n\"Wasn't that the team that you threw five touchdown passes against?\" asked Gwen innocently as she watched the two men shake hands.\n\nSteve turned to look at Gwen. She knew his stats by heart and was a great football fan. She had to know that she was getting in a dig with Chase. He decided to ask her about it once they were alone.\n\nGwen beamed as she watched Steve stand near Colt. The two men were the same height, but Steve was broader in the shoulders and much better looking, at least in Gwen's opinion. She had been quite confident that once Colt Chance had the opportunity to meet Steve, he wouldn't be trying to ask her out again.\n\nGwen let the two men chat for a couple of minutes and then dragged Steve around to mingle with others. As she knew would happen, the students were quickly drawn to Steve and her. They posed for dozens of pictures and signed numerous objects for the party-goers. \n\nBefore they managed to leave, Steve and Gwen were prevailed upon to perform a few songs. Steve wrapped it up by singing the Elvis tune 'Can't Help Falling in Love' while playing the piano. The applause was loud and long as Steve and Gwen bowed several times before they bade everyone goodnight.\n\nGwen recalled how Steve had asked about her comments to Colt Chance as soon as they were alone. \"The guy thinks he's the best football player in the world, so I wanted to bring him down a notch by introducing him to the actual best. Besides, he's been sniffing around my little panties lately and I wanted him to know exactly why I won't be dating him.\"\n\nGwen had been pleasantly surprised when Colt apologized before class the following Monday. \"Gwen, I'm sorry for being such an ass. I was way out of line to even think you'd be interested in me. Steve really is an amazing guy.\"\n\n\"Apology accepted,\" replied Gwen with a smile. \"He is something special, isn't he?\"\n\n\"Jake Baron, our starting center, asked me if I knew what Jake's hometown was,\" related Colt. \"I told him that I had no idea. Then he told me that Steve Hammer knew and had asked him about it. It made me realize how much I've become focused on myself, and how little attention I pay to others. I still have some time to get it right. I'll thank Steve next time I see him. I learned something about leadership Saturday night.\"\n\n\"I'll tell him that you said that,\" promised Gwen. \"His interest in others isn't something he does to garner favor. He actually does cares about people.\"\n\nIt was funny how things turned out, mused Gwen. Steve and Colt went on to become good friends, as well as to forge one of football's greatest individual rivalries. \n\nGwen's brief daydreaming was interrupted by Lisa's next statement, which returned Gwen's focus to the meeting. \"I'm already being contacted by various senators. You're going to have some work to do if you want to get Naomi, Kate, Jeff, and Jason confirmed. There's a lot of concern about so much change so quickly.\"\n\n\"Well, they'd better get used to the idea because I've already asked the current office holders to resign and they've all indicated that they would. They weren't too happy about it, but I'm not very happy with their efforts for the country,\" replied Gwen firmly.\n\n\"That's exactly what I told everyone I've spoken with,\" agreed Lisa. \"I told them it was full speed ahead and that you'd be expecting the confirmations in a timely manner. I was more or less told that the Senate wouldn't act in haste just because you want speedy confirmations. I think they're going to stonewall the nominations until they get a feel for how you're going to handle this looming war.\"\n\n\"Then they're really going to be disappointed,\" retorted Gwen. \"Steve and Naomi are going to do everything that they possibly can to find a peaceful solution. You know as well as I do that neither one of them tolerates failure very well. They'll find a way if it's at all possible.\"\n\nThe Red Lady landed at Heathrow shortly after eight AM, London time. Steve and Naomi departed through a VIP gate, which was located away from other travelers. As soon as they left the tunnel and reached the almost empty gate, Steve was enveloped in a fierce hug.\n\n\"I can't believe it! Gwen's President of the United States! Now she's sent you on the toughest mission of your life. I'm so proud of you both and love you to pieces.\"\n\n\"It's good to see you again, too, Steph,\" chuckled Steve as he held the woman tightly against his chest. \"I hope this Limey is treating you well. If he isn't, I'll take a few minutes out of my schedule to have a little talk with him.\"\n\n\"Thanks for looking out for me. Regretfully, I have to tell you that James has been very bad. He's gotten me pregnant again!\" revealed Stephanie with a big grin.\n\n\"Oh wow!\" declared Steve as he drew Gwen's cousin even closer. \"It looks like we're going to fill Valhalla up on holidays. I bet your folks are excited about having another grandkid.\"\n\n\"I just had it confirmed yesterday evening, so you're the first person I've told. I knew you'd be happy for us. Please don't tell anyone. I'm going to call Mom later this morning, when it's a decent hour back in the states.\"\n\n\"James, it's great to see you. Congratulations on the addition to your family,\" managed Steve as Stephanie clung to him. \"I understand that you'll be joining us for the rest of the trip.\" \n\n\"Prime Minister Blake has felt from the outset that things weren't been going very well. When President Crawford passed and Gwen became president, he decided to shake up his team. Since you and I are practically related, he selected me to accompany you on this rather epic mission. I'm pretty much to keep my mouth shut and follow your lead. The prime minister will fill you in when you meet him in just about an hour.\n\n\"Stephanie and I are delighted at the prospect of having another child,\" admitted James Hawthorne. \"We're trying to keep up with the cousins.\" \n\n\"Lots of luck with that. Lisa has been talking about having a fourth,\" revealed Steve. \"Jordan seems content with three, but we all know how quickly that can change.\"\n\nSteve thought back to the day Stephanie had approached Gwen and him with a worried look on her face. It was the week following Gwen and Steve's wedding. James was preparing to return to London and it was obvious that Stephanie was concerned about something.\n\n\"James asked me to marry him and I told him that I would. I'm so sorry to let you both down like this, but I really love the guy. We'll probably get married around Christmas. I know you guys depend on me, but I have to do this. We'll be living in London, so I won't be able to work for you after the wedding.\"\n\n\"Congratulations! This is great news and there's no reason to apologize,\" assured Gwen. \"To be honest, Steve and I aren't overly surprised. We could see how James looked at you, and how he treated you. He's a great guy!\"\n\n\"I'll miss working for Lady in Red Productions,\" admitted Stephanie. \"I'll especially miss being able to be with you two while you change the world. It's been quite a ride for me.\"\n\n\"Steph, I've been discussing the future of the company with Lisa, Jordan, Charlie, Kate, and Gwen,\" confided Steve. \"We've decided to expand globally and think London would be a great place to begin. Would you be interested in overseeing our expansion to England and the rest of Europe?\"\n\n\"You're serious?\" marveled Stephanie. \"You'd place me in charge of a European division of Lady in Red Productions? You're not doing this just so I'll have a job, are you?\"\n\n\"Hardly,\" laughed Gwen. \"It's been something that Steve and I have been discussing for almost a year. We're missing many opportunities by not having a bigger presence in Europe. We should be selling more music, movie tickets and clothing, plus taking advantage of other business opportunities. It began looking likely that you'd be headed to London, so we thought we'd take advantage of your skills once again.\"\n\n\"I have to have the best friends and relatives in the world,\" sobbed Stephanie as she hugged Gwen tightly. \"I'll take that position and make sure that you never regret putting me in charge. I can't wait to tell James. He was concerned that I'd not be willing to leave my family and job.\"\n\n\"Don't even suggest that you're leaving your friends and family,\" cautioned Steve. \"That'll never happen. One or more of us will fly over to London as often as we can. I wouldn't be surprised if Diane, Will, and your little brother came along on some of the trips. Plus we'll be flying you back home now and then for business, and to see the family.\n\n\"I should train someone to assume my duties. It'll take some time to learn such a big and complicated business. Do you want to interview some candidates as soon as possible?\" asked Stephanie.\n\n\"Actually, we already have someone in mind,\" revealed Gwen. \"We've been spending some time with Tyler this week. He's qualified, but more importantly, he's a friend that we know we can trust. That means more to us than any other skill or training he could have.\n\n\"Would you be willing to work with him and show him the ropes? By the time you move to London, he should be up to speed and ready to step in,\" reasoned Gwen. \n\n\"Tyler? That's a great idea. He's always liked you two, he's smart, and his resume is very impressive,\" admitted Stephanie. \"I think Sybil is falling for him, so there's yet another reason to keep him in Sparta. I know how much she means to you both. She's risked it all for you guys, and I know that you'll always be there for her.\"\n\nThen Steve's mind snapped back to the present. He realized that there were several reporters watching the interaction between the friends, although they were too far away to hear the conversation. He quickly put on his poker face and addressed James and Stephanie.\n\n\"You remember Naomi, of course. She's Gwen's choice for Secretary of State. She'll be very much involved in any negotiations.\"\n\n\"Now I know I'll enjoy the journey,\" remarked James. \"You're more beautiful than ever, Naomi.\" \n\n\"Don't let him sweet talk you,\" warned Stephanie. \"He starts out low key and the next thing you know; he's gotten you pregnant.\"\n\n\"Don't worry about me. I know how to handle these Romeos,\" chuckled Naomi. \"Steve has been trying to get into my little panties for years and I've managed to hold even him off.\"\n\n\"Is that any way for the Secretary of State to talk?\" questioned Steve. \"Now I'm concerned about your mental acuity. You should know very well that I prefer you without panties, or clothes of any kind.\"\n\n\"I certainly do,\" laughed Naomi. \"I also know that I've been the cause of more boners for you than anyone but Gwen. Little Steve doesn't lie. He's made it very clear many times. He wants to get closer to my little kitty.\"\n\n\"Little Steve has a mind of his own, but big Steve makes the final determination,\" assured Stephanie. \"There's a rather long list of boner causing women in his life, and I'm rather proud to be quite high on that list.\"\n\n\"Ladies, lest we forget, the world is on the verge of war. Boasting about who causes more erections is not appropriate in these troubled times,\" cautioned Stephanie's husband. \"Besides, my money's on Stephanie's mother after seeing her and Steve in those movies.\"\n\n\"You're so lucky you've already gotten me pregnant,\" exclaimed Stephanie, \"Because after that comment, you won't be getting any for a year. Steve, defend my honor! Tell my husband that you always get aroused when you see me. I bet you're hard right now. Give him the unbending truth, the hard facts, the... \"\n\n\"Never mind!\" interjected a grinning Naomi. \"If he is feeling frisky, it's because he was admiring my ass when I walked down the stairs from the Red Lady in front of him.\"",
        "\"James, let's hurry up and get out of here. Gwen always became a bit demanding when she was a few months pregnant. Jason told me that Lisa was the same. I fear Stephanie is simply true to her genes. Naomi, you aren't pregnant, are you?\" asked Steve jokingly.\n\n\"Not yet, but our trip is a long way from over,\" teased the beautiful woman as Steve groaned in response.\n\nAn hour later, Naomi, Steve, and James Hawthorne were sitting in Prime Minister Tony Blake's office, discussing the goals of the meetings to be held with Russia, China, and North Korea.\n\n\"We'll follow the lead of the US, up to a point,\" reasoned Prime Minister Blake. \"We want a de-escalation of the situation, but we need to maintain our military positions until everyone agrees to pull back. I think you need to push for a multilateral withdrawal to positions held prior to June 1st, before this entire situation began.\"\n\n\"The President feels much the same,\" agreed Steve. \"Secretary Carlton insisted that he pushed very hard for that very thing, but Russia, China, and North Korea wouldn't budge. I'm going to be insisting on a withdrawal. The world can ill afford to maintain the status quo. Any slight misunderstanding could result in war right now. We absolutely have to ratchet down the tension.\"\n\n\"Good luck, Naomi and Steve. James will be Britain's representative in these negotiations. He can't agree to anything major before consulting me, but his recommendations will be given a great deal of consideration.\"\n\nThree hours later, Naomi, Steve, and James deplaned at De Gaulle in Paris. Once again, they were ushered through an out of the way gate. There were only a few reporters in sight and they were kept at a distance. Once again, Steve was met with a fierce hug and a quick kiss from a beautiful woman. \n\n\"Michelle! It's always good to see you,\" laughed Steve as he hugged the woman tightly.\n\n\"Gwen is now the president! Father will be going with you to bring peace to France and the world. I am so proud to be your friend!\"\n\nSteve gently withdrew from the embrace and then shook hands with former President D'Anjou as he greeted him in French. \"Sir, it is always a pleasure to see you, as well as your shy little girl.\"\n\n\"Thank you, Steve. Some of my best memories involve you, especially that time in Moscow when you were so crucial to the success of those talks. My country has enjoyed a steady supply of energy ever since.\"\n\nSteve then introduced Naomi and James Hawthorne.\n\n\"Gwen is so confident! If you were my husband, you would be traveling only with men, or very old ladies,\" chuckled Michelle as she greeted Naomi with a hug. \"I would certainly not send you on a journey with such a beautiful woman!\"\n\n\"These are the sacrifices I make for my country,\" quipped Steve as Naomi lightly punched his shoulder. \n\nA short time later, Naomi, James, Claude D'Anjou, and Steve were meeting with French President Beauchamp. His goals were very much in line with those of Britain and the U.S. After a short meeting, the entourage left for Berlin. \n\nSteve was mildly surprised when his group entered the VIP gate in Berlin. Once again, a beautiful woman was in his arms, welcoming him with a hug and not so brief a kiss. \n\n\"Hans and I are so proud of you both! I knew you were a special couple the first time I met you, but I never dreamed of this. I have so many stories to tell my children and grandchildren!\" enthused Nadiya.\n\n\"Naomi! You will be Secretary of State and will travel with this handsome man? You are very fortunate. I was his girlfriend for an afternoon and it was your idea. Thank you so much for that memory.\"\n\n\"If you recall, my idea was for me to be his girlfriend for the afternoon,\" responded a smiling Naomi as she hugged her friend. \"Somehow, I was replaced by some incredible blonde. I've never forgiven you.\"\n\n\"Hans! It's great to see you again,\" greeted Steve as he shook the tall blond man's hand. \"Will you be escorting Naomi, James, Claude, and me to meet Chancellor Braun?\" \n\n\"Not only that, but I've been selected to travel with you and represent Germany in these talks. The Prime Minister knows that we're friendly and has decided to promote me for this mission. She's eager to meet you formally.\"\n\nOnce they were shown into the Chancellor's private office, the group only had to wait a few minutes before Chancellor Braun strode into the room. Everyone stood immediately. Steve offered his hand, but the German Chancellor brushed past it and embraced the American warmly.\n\n\"I met you briefly in Paris years ago when you and your friends gave the most amazing concert I've ever seen. You performed from the top of the Arc de Triomphe under a full moon. The entire evening was magical. Now your beautiful wife is President of the United States and she has immediately given her warrior husband what may be the most difficult assignment of his career.\n\n\"Make no mistake about it. This situation is extremely tense. Between you and me, I never felt that your previous president had the necessary skills to avert this crisis. He was unyielding, yet he appeared weak and commanded very little respect from other nations.\"\n\n\"That's the same conclusion Gwen and I reached,\" agreed Steve. \"Naomi and I have been instructed to find a way back from the edge. That's exactly what we're going to work toward. We'll need to be unified in this effort.\"\n\n\"I totally agree, although I have no idea how you can alter the apparent course of history. I truly hope that you manage to live up to the reputation you've garnered over the years, a fearless warrior willing to lay down his life for his lady and country. The video of you on your knees as that terrorist attempted to cut off your head, only to sever his own hand and then get decapitated by his 'helpless victim' is the single greatest example of 'never giving up' I have ever seen. Your resourcefulness and determination will be tested on this mission.\"\n\n\"I had held out hope that Lady in Red would someday perform in Berlin. You have many fans here. Now that your wife is president, that likelihood seems very small. Please relay to President Hammer that we would still very much like to have her visit our country while she is president,\" invited Chancellor Braun. \"I can assure you that she will be warmly received, especially if her husband can somehow find a way to end the current tensions we all face.\"\n\nAlmost thirty six hours after departing Sparta, Steve and his entourage landed in Moscow. They were transported to their various embassies to rest, as well as to prepare for their scheduled meeting the following morning with Russian President Kozlov. \n\nAt nine AM Moscow time, Steve and Naomi, along with their allies, sat on one side of a large wooden table; while Kozlov, his aides, and interpreters sat across from them. \n\nOnce the formalities were complete, Steve spoke directly to the Russian leader in fluent Russian. \"We are here for one purpose, President Kozlov. We want a peaceful resolution to the current situation. To cut to the chase, we are willing to accept a multilateral withdrawal from the present positions to those held the last day of May.\"\n\n\"Ha!\" erupted Kozlov. \"We proposed that very thing in mid-June, but your president would have nothing to do with it. If I accept this proposal now, my government will look weak. That solution is no longer an option, especially with the Chinese being so unreasonable.\n\n\"However, in the interest of peace, we will agree to withdraw once the American and other NATO forces have fallen back to their positions held in May, AND the Chinese and North Koreans have agreed to withdraw simultaneously with Russia. See how easily the situation can be resolved?\" asked President Kozlov more than a little sarcastically.\n\n\"You are serious about this?\" asked Steve, much to the surprise of Kozlov and the consternation of James, Claude, and Hans. \"If the United States and the rest of NATO pull back to pre-June positions, you will withdraw your forces immediately?\"\n\n\"Russia will withdraw, but only if China and North Korea have agreed to do the same,\" responded Kozlov. \"Is this something you believe your country may consider?\"\n\n\"The United States will consider any and all options to end this impasse before it escalates to war. Of course, the final determination belongs to President Hammer,\" replied Steve cautiously.\n\n\"I feel compelled to inform you that Britain is not likely to agree to this proposal,\" declared James Hawthorne, as Hans, and Claude echoed his sentiment regarding their respective countries. \"And frankly, meaning no disrespect to Steve, I would be surprised if the even United States would accept this dangerous suggestion. We would be placing our countries at a serious tactical disadvantage.\"\n\n\"Regardless, that is the best offer I will make,\" asserted Kozlov. \"Otherwise, we will continue to prepare for war. We cannot give up our positions when we are threatened on two fronts. Our superior military forces will be prepared for any eventuality.\" \n\n\"We'll be speaking with the leaders of China and North Korea. I expect to return within a few days with a concrete proposal,\" replied Steve calmly. \"Meanwhile, consider your position carefully. I can assure you that if war breaks out, Russia will suffer greatly.\"\n\n\"All nations will suffer if it comes to war,\" agreed Kozlov. \"But other nations will suffer more than Russia. We will see to that.\" \n\nOnce the group was airborne a few hours later, James Hawthorne moved to sit next to Steve. \"I didn't mean to cut your legs off back there, but I felt compelled to state Britain's position. We can't allow Russia that sort of advantage in a potential conflict. You must understand that.\"\n\n\"I totally do. I also understand that Britain is in serious danger, regardless of how well your defenses are deployed. The same is true for France, Germany and all of Western Europe. \n\n\"I will not negotiate from fear,\" continued Steve firmly. \"If we pull our forces back, we'll have to rely on our other weapons. It isn't perfect, but we'll be prepared to fight, and we'll expect to persevere. Let's see what China and North Korea are willing to do, shall we?\" concluded Steve.\n\nBack in Sparta, Gwen spent the first morning of her presidency reading reports and listening to various middle tier government officials explain what their particular agency was doing, hoped to accomplish, and reasons/excuses why it had not managed to attain its goals. \n\nLisa interrupted her just after noon. \"Come and have some lunch. You need to maintain a healthy life style. Mom made some sandwiches and salad.\"\n\nGwen agreed and soon joined her friends and family in the kitchen of Valhalla. \"Madam President...,\" began Jordan before Gwen cut her off.\n\n\"Jordan, please don't address me like that when we're in private. We're way too close to ever let my position harm our relationship. I need my friends and family to keep me humble and real. I didn't mean to interrupt you. I apologize. Please continue.\"\n\n\"Okay, Gwen,\" replied Jordan with extra emphasize on Gwen's name. \"We had planned a fifth birthday party for Tim for Saturday. You told us that even though you were vice president at the time, you felt it was important for the kids to pursue their normal activities as much as possible. \n\n\"Now that you've managed a promotion, would you rather we scheduled the party for some other location? Our home is pretty close to yours and people will be curious. Security will have its hands full,\" stated Jordan.\n\n\"Please don't change your plans!\"insisted Gwen. \"Saint and Vicky are looking forward to it, as are a dozen or so other kids from Asgard, and a couple dozen more from Tim's preschool. \n\n\"I don't want to miss these important events in the kids' lives because I've somehow become president. Steve felt badly about leaving and having to miss the party. We know how much he looks forward to them.\n\n\"I know it won't be easy, but I'd really like to be a regular mom to the kids. It's not fair to them to have their parents taken from them, even for service to the country. I know military people often have to be away from their families, but I'm going to try to limit that as much as possible,\" promised Gwen. \"Saint, Vicky, and I will attend Tim's party for sure. The kids are looking forward to it, and so am I.\"\n\nLater that afternoon, Gwen met with Kate, Lisa, Paula, Ted, Julie and Jeff Wilson and Steve's grandfather, William Patterson. \"Okay, let's go over the lists you drew up for my cabinet. We've got to move forward as quickly as possible.\"\n\n\"We decided to save some time by combining our efforts, and our lists,\" reported Lisa. \"Two names kept coming up for VP. They were former President Rosen and former Senator Chatham. For cabinet and other posts, we have about twenty five names. I've had copies made and you can look it over at your leisure.\n\n\"Do you think Vince would be willing to return to public service?\" asked Gwen. \"I know how much Cynthia's death affected him. He spent almost two years taking care of her when she fell ill. During that time, he looked like he'd aged ten.\"\n\n\"He's been pretty reclusive since Cynthia died, but I'd think he'd enjoy having something new to keep him busy. It would help the healing. I didn't want to say anything to him until I found out if you'd be interested in having him as your VP,\" added Lisa. \n\n\"I like both recommendations. Senator Chatham did a great job when she was in the senate. Perhaps we could ask her to take a cabinet position if Vince will accept the vice presidency? Maybe even Secretary of Defense? She was chairman of the Senate Armed Services Committee for a few years. \n\n\"Lisa, put out feelers to both of them. Try Vince first. If he's willing to return to public service, we'll ask Senator Chatham to be Secretary of Defense. If he isn't, we'll offer her the vice presidency,\" decided Gwen. \"Thanks, everyone. I'll be going over the list later this afternoon and we'll meet again soon.\" \n\nBy one PM the next day, thirty three mothers, eight grandmothers, and thirty seven children were enjoying Jordan's hospitality as they celebrated Tim Burns' fifth birthday. All of the mothers were unsure about the proper protocol for attending a party with the President of the United States. It was the main topic of an anxious conversation as the group awaited Gwen's arrival.\n\n\"Jordan tried to put everyone at ease. \"Gwen was tied up with some important issues, but she's on her way with Saint and Vicky. Please don't be all nervous and hesitant with her. She wants to be able to just be a mom and a friend when she's at the children's parties. Call her Gwen and talk about the usual things,\" she finished just as Gwen and her two kids entered the fenced in pool area. \n\n\"Hey, everyone! Sorry I'm late,\" apologized Gwen as she led her three year old over to play with the younger children while Saint sought out the bigger kids. \"I made some potato salad.\"\n\nAs Gwen spoke, she set a bowl down on the table next to other food items. Then she placed several wrapped gifts down on an already impressive pile of unopened birthday presents.\n\nThe other mothers looked around at each other, wondering who was going to be the first to speak. Finally, Sandy Johnson Turner found her voice.\n\n\"It's good to see you, Gwen. You made your delicious potato salad? Great. Anything new in your life since the last time we got together?\"\n\nGwen stopped, blinked her eyes a few times, and then broke into a huge smile. \"As a matter of fact, there is. There's a great new shop on Second Street that carries all kinds of kids' toys, puzzles, and games.\"\n\nSilence followed Gwen's statement for a few seconds before all of the ladies broke into loud laughter. Soon Gwen was the center of attention as all of the adults wished her success in her new position. \n\n\"Do you have any idea how cool it is to be at a birthday party with the President of the United States and we can call HER by her first name?\" asked Laura Masters Watkins to the group in general. \"My kids are playing with hers and she's a great friend. It's almost unbelievable.\" \n\n\"I just hope we can get over that and get right back to the same relationship we've always had,\" responded Gwen. \"I need to be able to have friends who aren't trying to pressure me into supporting something, or opposing it. I want my kids to think of me as 'Mom' and not the President of the United States. I would really appreciate it if all of you treated me like any other friend.\"\n\n\"I guess we can treat you like all of our other billionaire friends that happen to be president,\" wisecracked Sandy Turner as she hugged Gwen. \"Seriously, you make it so easy to like you that I don't think we'll have a problem with this presidential side job of yours, especially if you keep making your delicious potato salad!\"\n\nSoon the conversation was flowing and the other mothers began relaxing around Gwen. There were several Secret Service agents standing on the perimeter of the party area. They were close enough to be available if there was a problem, but remained removed from the conversation.\n\nEveryone was laughing and enjoying themselves when seven year old Saint suddenly stopped playing Frisbee with Ruth Burns and Theresa Hunter and sprinted for the pool. He caught everyone's attention as he ran to the edge of the pool and without slowing down, dove into the waters. Just seconds later, he surfaced with a crying baby in one arm!\n\nOne of the mothers let out a scream as she ran to the pool deck where Saint had managed to place the child. \"Jessica! Are you okay, Baby?\"\n\nThe others sat in stunned wonder as the sobbing mother hugged the very wet two year old as she cried loudly. Of course the ruckus had drawn the Secret Service agents to the pool.\n\n\"Madam President, that son of yours was incredible,\" began the senior agent. \"I saw the toddler fall and was trying to get here as fast as I could, but your boy sprinted over and dove in before I'd managed even a few steps. He may have saved that child's life.\"\n\n\"Thank you, Saint!\" blubbered the infant's mother as she hugged the embarrassed boy while still holding her child on her hip. \"That was amazing. You saved my baby!\"\n\nMeanwhile, Lisa, Kate, and Jordan shared knowing looks and slight nods. It was apparent that the boy was going to follow in his father's footsteps. It was obvious to all that the infant was fine, especially when she soon began happily playing with a toy sitting nearby.\n\n\"I'm amazed at how quickly he reacted and how well he swims,\" remarked another woman. \"He's certainly a chip off the block! He isn't even eight yet.\"\n\n\"Steve has been spending a couple of hours a day every chance he gets with Saint. They swim, workout, run, and do all sorts of things together. My job is seeing that he learns the social graces, while his father works with him on the manly stuff,\" declared Gwen proudly. \n\n\"I hate to sound dumb, but how did you come up with the name 'Saint'? It's rather unusual,\" asked an older woman that had brought her granddaughter to the party. \"I know I could probably Google it since you're so famous.\"\n\n\"That would be Kate's doing,\" admitted Gwen. \"His name is Steven Theodore Hammer. Within a few weeks of his birth, we realized it was too confusing to call him 'Steve' since that's his father's name. Lisa started calling him 'ST', short for Steven Theodore. About a week later, Kate said something about 'Saint' and we all looked at her like she'd lost her mind. She insisted that ST was short for Saint and that's what she was going to call him. He became 'Saint' to all of us before he was even a year old. I held off as long as I could, but it was just so much easier to say. Plus, I think it's a pretty cool nickname.\"\n\n\"Yeah,\" agreed Kate. \"At first I was thinking about calling him something short for 'Steven Theodore' and the first thing that came to mind was 'Stud' which is a cool nickname for a man, but not so good for a baby.\"",
        "A short while later, all of the children were gathered to watch Tim open his gifts. Charlie had the grill going and everyone enjoyed his famous grilled burgers and hot dogs, along with the various covered dishes the guests had provided. \n\nThe children had been promised a chance to play in the pool and soon prevailed upon their mothers and grandmothers to take them in. Gwen took the hand of her three year old, Vicky, and slowly stepped into the pool with her.\n\n\"Has anyone noticed how good our president looks in a bikini?\" asked Charlotte Marsh as she held her own three year old daughter's head above the surface. \"Our first female president rocks a bikini! That is just very cool.\"\n\nAs everyone helped pick up at the end of the party, Gwen was approached by Sandy Turner's mother. \"I just want you to know how proud we all are of you. We know you and Steve will do your best to prevent another war. Sandy's younger brother is a Marine and we're really proud of him. He'll always follow orders and if that means going to war, so be it, but I pray that you'll find another way.\"\n\nGwen embraced the worried woman as she responded, \"Steve and Naomi fully understand how important it is to avoid a conflict. I guarantee that they'll do everything possible to save your son and all of the others in our military from the horrors of war. We'll do our very best!\"\n\nTwo days later, Gwen and her entourage landed in Washington to attend the funeral of President Crawford, as well as to begin the transition to the Hammer presidency. Gwen hadn't been asked to play any role in the services, so she simply attended and remained quiet. She had been openly critical of Crawford's policies and was actually quite content not to have to speak at the funeral.\n\nMembers of both houses greeted her warmly after the services. Some of them wasted no time in lobbying for their pet projects. Gwen simply smiled and told them she would consider their proposals once the country was out of the shadow of war. Then she made her first trip to the White House as President of the United States.\n\nGwen, with her family and friends, remained low profile as they rode in limousines from the Capitol to her new home. Once they were inside the private quarters and away from any outsiders, chatter quickly broke out.\n\n\"I can't believe this!\" exclaimed Lisa. \"We're standing in the White House. My sister is the President of the United States. The next three years are going to be extremely interesting, to say the least.\"\n\n\"Steve and Naomi have been flying all over the world for the last few days, trying to work out some sort of solution to the impasse with Russia, China, and North Korea. He suggested that I call in the Joint Chiefs and leaders of Congress for his report and recommendations this evening at seven,\" reported Gwen as she looked at her phone messages. \"He texted me, if you can imagine. Congress would have a conniption if they knew he hadn't used eight layers of security. I guess that's why he didn't state anything specific. \n\n\"Lisa, please see that the appropriate people are here by seven for this meeting. I need to know who's on board with whatever Steve and Naomi will be proposing. Kate and Jeff are in my cabinet, or soon will be, and I want them present as well. Naomi will be present by phone and we're still looking for people to fill the other cabinet positions, I want their input, as well as yours. Knowing Steve, his solutions will require a lot of determination, faith, and courage, but he'll know exactly what he's doing.\" \n\nBy seven PM Gwen was seated in the Roosevelt Room, just across the hall from the Oval Office. Lisa and Kate were seated on either side of her with Jeff Wilson seated on the other side of Lisa. \n\nAt exactly seven, Steve was placed on speaker phone. \"Madam President, I won't take up too much of your time. Naomi Wilson-White and I have been in the air a great deal more than we've been on the ground. We're simply going to make our recommendations and answer any questions.\"\n\nNaomi was next to speak. \"After extensive negotiations and more than a little arm twisting, this is what we have. Russia, China, and North Korea, with one caveat, agree to pull their forces back to positions held prior to June of this year. They will do that only after the United States and other NATO forces have pulled back to the positions they held prior to June.\"\n\n\"That's it?\" asked an incredulous Army General Dawson. \"That's what you came up with? We can't take that chance. Once we pulled back, the Ruskies could take over half of Europe and there'd be damn little we could do about it! China would be free to move against Japan and Southeast Asia, and who the hell knows what North Korea would do?\" \n\nThe general's opinion was echoed by most of the military and Congressional leaders in attendance. Gwen was silent as she listened to the discussion among her assembled advisors.\n\n\"Mr. Hammer, can you offer us any safeguards against the worst case scenario? Would there be anything in place to prevent these nations from taking advantage of the situation?\" questioned Senate Majority Leader Lancer.\n\n\"I have made it very clear to all three nations that the United States would look upon a failure to live up to terms of the agreement as a grave act of aggression which we would not tolerate,\" responded Steve.\n\n\"That's a pretty empty threat, considering how we'd be giving up any advantage we may have at the moment,\" retorted Lancer. \"How do our allies feel about this?\" \n\n\"The representatives from Britain, France, and Germany have indicated that they are quite certain that their governments will not be willing to take the risk,\" replied Naomi calmly.\n\n\"You're telling us that no one but our enemies have agreed to this scheme?\" demanded Air Force General Peterson. \"Why would you even present this insanity to us without having the support of our NATO allies?\"\n\n\"Time is the sole reason,\" responded Steve. \"Naomi and I need a firm, unwavering commitment from the President before we can even begin to persuade our allies to go along with us. This offer is only good for three days. China was very reluctant to agree to it. They feel they're in the driver's seat now and aren't that anxious to yield ground.\"\n\n\"Do I understand this correctly? This deal where we give up our tactical positions while the Russians and Chinese keep theirs, is only good if we agree immediately and our NATO allies go along with it within 72 hours?\" asked General Peterson.\n\n\"That would sum it up, Sir,\" replied Steve quickly.\n\n\"What you are proposing is tactical suicide,\" accused General Dawson. \"The United States cannot agree to such a one-sided agreement. Do we at least get to see this agreement in writing? Has it been signed by Russia, China, and North Korea?\"\n\n\"I felt that the effort to get the participants to place their positions in writing would waste a great deal of valuable time, as well as create an opportunity for them to reconsider their position. This was done with a handshake,\" stated Steve evenly. \"Once the immediate threat of war is past, we can then hash out the details of a long term agreement that all parties can sign.\"\n\n\"Sweet Jesus!\" erupted Dawson. \"A goddamn handshake? What the hell is that worth in today's market? Personally, I'm stunned that you'd even waste our time with this lopsided proposal. We can't even consider anything so foolish.\"\n\nGwen had been listening carefully to the exchange between her advisors and Naomi and Steve. It was her decision. She knew that Steve would never hold it against her if she failed to accept his recommendations. It was also evident that agreeing with Steve's proposal would go against her military advisors, as well as most of Congress. \n\nSteve was willing to place the United States in what could become a much compromised position. That wasn't like him. Was there more to this deal than what he had already explained? Hundreds of millions of Americans relied on her to make the correct decision. She needed to get this right.\n\n\"Something tells me that there may be more to this than what you've told us so far, Steve. Is there more?\" asked Gwen as the rest of the room suddenly went silent.\n\n\"I was thinking that after we began pulling back to the earlier positions, you might order our submarines and some warships to move around a bit. Russia and China are well aware of their positions and will know immediately if they begin moving. We don't have to place them any place special as long as they remain within range to rain hell down on China and Russia. We would be well within our stated agreement, but prepared to engage any enemy within minutes. It wouldn't really change our capabilities much, but it would make them wonder. Doubt is a very strong tool in any negotiation. We need to be confident and create reason for them to feel doubt,\" finished Steve.\n\n\"That's a pretty flimsy argument,\" reasoned Senator Lancer. \"This isn't a football game.\"\n\n\"Naomi and I will fly to Berlin today to argue our case, if you give me the go-ahead and tell me that the United States will begin withdrawing to our earlier positions within seventy two hours, Madam President,\" responded Steve calmly.\n\nLisa and Kate watched Gwen as she silently considered the options. This decision was huge, especially considering that she had only been President for a few days. Her two sisters held their breath as Gwen arrived at a decision.\n\n\"In exactly seventy two hours, The United States will begin returning its forces to positions held prior to June of this year. You can take that message to our NATO allies. Be sure they understand the importance we place in their support and leave no doubt that we will support them fully if the need arises,\" stated Gwen.\n\nThere were gasps and groans echoing off the walls as Gwen made her decision known. \"Madam President, you can't place the United States at risk just because your husband has some half-baked hope that The Russians and the Chinese will honor their word!\" erupted General Dawson. \"I can't go along with this dangerous course of action.\"\n\n\"General Dawson!\" rebuked Steve over the speaker. \"You will retract your last statement, or tender your resignation immediately.\"\n\n\"If an order is clearly illegal, immoral, or obviously wrong, I am not required to follow it!\" declared an angry General Dawson.\n\n\"General, your moral and legal obligation is to the U.S. Constitution and not to those who would issue unlawful orders, especially if those orders are in direct violation of the Constitution and the Uniform Code of Military Justice,\" stated Kate precisely. \"However, the President's orders do NOT, in any way, conflict with the Constitution.\"\n\n\"They're dangerous and could cause tremendous damage to the United States,\" replied the General heatedly. \"We will not fall back to any previous positions. That would be insane!\"\n\n\"General Dawson, you are hereby relieved of duty,\" was Gwen's immediate response, as Dawson turned a bright red and clamped his mouth closed. \"Is there anyone else in this room that questions my constitutional right and obligation to make these decisions? If so, speak now!\"\n\n\"Madam President, we understand the chain of command and will follow all legal orders as given,\" responded the previously silent Admiral Duval. \"I am familiar with your husband's skills as a diplomat and a negotiator. He secured the release of my younger brother and his family from the North Koreans a few years back. The United States Navy stands prepared to defend and protect this nation in whatever manner you determine is best.\" \n\n\"Thank you, Admiral Duval,\" replied Gwen graciously. \"I expect each of you, with the exception of General Dawson, to prepare an orderly and timely withdrawal of our forces, to begin in exactly seventy two hours. This meeting is adjourned.\"\n\nAs most of the people filed out of the room, Senator Lancer approached Gwen. \"Madam President, I'm confident that Congress will not agree with this decision. As duly elected leaders of this nation, we will not allow you to proceed down this dangerous path.\"\n\n\"Senator Lancer, allow me to explain a few things to you. You are a representative of the people, not a leader. You do not have the power, real or imagined, to block or alter a direct legal command from the President of the United States to the military. And finally, if you are foolish enough to attempt to do so, it will end badly for you,\" promised Gwen calmly.\n\nLancer turned and angrily left the room, leaving Gwen with only Lisa, Kate, and Jeff Wilson. Gwen turned to Kate and hugged her tightly.\n\n\"For a moment, I thought you were explaining to Dawson that he could disobey a direct order. I'm so glad I allowed you to complete your statement,\" confessed Gwen. \n\n\"I was trying to explain that while he was partially correct that no one should follow an illegal order, he is absolutely required to comply with a legal one, and your order was obviously legal,\" explained Kate. \"I've been boning up on this stuff over the past few days.\n\n\"You've thrown down the gauntlet,\" worried Lisa. \"Lancer has a lot of influence in this town. He's going to do his best to undermine you.\"\n\n\"Ladies?\" came a voice from the speaker.\n\n\"Steve!\" gasped Gwen as picked up the handset to remove Steve from the speaker phone. \"I'm so sorry about that. Lisa, Kate, and I seem to be floundering here. I just pissed off the military as well as Congress.\"\n\n\"That's not exactly true,\" replied Steve. \"You may not believe it, but you gained respect with the military when you shut Dawson down so firmly. He never would have tried that shit on a male superior officer, but he has nothing but thinly veiled contempt for women. He thought he could push you into doing what he wanted. I guarantee that the other brass in the room understood and approved of your response. Dawson was badly out of line.\"\n\n\"You need to get our allies on board as soon as possible. There's going to be a lot of pressure on me to rethink my orders and it would help a lot if Germany, France, and Britain were with us on this. Plus, I need you home to help me weather this storm,\" added Gwen.\n\n\"Naomi and I are packed and will be headed for the airport as soon as I hang up,\" reported Steve. \"By the way, no one asked about the caveat North Korea tossed into the mix. Jong agreed to go along with pulling back, but only if we do a concert in Pyongyang within two weeks. I told him that we would.\"\n\n\"You promised Jong that the President of the United States would perform for him?\" asked Gwen as she worked to keep her voice controlled.\n\n\"Perform onstage in a concert, yes!\" replied Steve. \"The guy loves Naomi and he asks about you all the time. It would be a great opportunity to smooth relations with North Korea, at least a little.\"\n\n\"If performing in North Korea will advance the cause of peace, we'll do it!\" declared Gwen. \"We've got to get over the notion that countries have to do things our way to be on speaking terms with us. I'll talk with Charlie and Jordan and see if they'll go with us.\"\n\n\"Thanks, Gwen. I know it wasn't easy to go against the advice of so many generals and Congressional leaders. That took a lot of nerve. I'll do my best to make you look good on this.\"\n\n\"You've never let me down before. I just had to remember that your opinion weighed more than all of the others combined. I'd be foolish to abandon the brightest light in my life, and maybe in the world. Work your magic and come back home to your family as soon as you can. I love you!\" \n\n\"I've given this some thought,\" advised Lisa once Steve had disconnected. \"I think you need to tell the world publicly what you've decided. Congress is going to try to vilify you in the press. I think it would be best if you preempted them by making your case to the nation as soon as possible.\"\n\nBy this time, Ashley had joined the sisters as they moved to the Oval Office. Gwen considered Lisa's suggestion briefly before speaking to Ashley.\n\n\"Ashley, please tell the press that I'm making an announcement about the status of Steve and Naomi's negotiations at nine PM from the Oval Office. The American people need to know the risk involved.\"\n\nA short time later, Gwen received the signal that she was live on numerous networks and cable stations. She began her short speech.\n\n\"My fellow Americans, earlier this evening, I issued a direct order to our military that in seventy two hours, they were to fall back to their positions prior to June of this year. I did this because Naomi Wilson-White, my choice for Secretary of State, and Steve Hammer advised me that Russia, China, and North Korea would pull back once The United States and the rest of NATO had finished doing the same.\n\n\"My military advisors and top Congressional leaders do not agree with this decision, and they are correct in pointing out it is not without risk. The first risk is that our allies will not agree to this solution. The next risk is that Russia, China, and/or North Korea will not honor their commitment once we honor ours. \n\n\"I understand the danger and I've determined that the opportunity to end this senseless escalation is worth it. I want you to know that Naomi and Steve are working tirelessly to bring NATO on board with us. This will require courage and more than a little faith from our allies. I acknowledge that and I will personally lobby them to agree.\n\n\"Finally, Steve and I, along with Charlie and Jordan Burns, have agreed to perform a concert in Pyongyang, North Korea as part of the agreement. While there, I hope to work on stabilizing relations between the United States and North Korea. \n\n\"I did not make these decisions easily. I realize that this course of action is more than a little frightening, but not nearly as frightening as a world war. I ask you to keep Naomi, Steve, and me in your thoughts over the next few days. I promise that we will give the people of this nation our absolute best. Time will judge if our best has been good enough. Good night.\" \n\nOnce the broadcast was over, Gwen returned to the living quarters where her family waited. \"You didn't sugar coat the situation, that's for sure,\" observed Paula. \"What a decision to have thrust upon you in the first week of your presidency. I'm extremely proud of you.\"\n\n\"Thanks, Mom. The truth is I'd be lost without Steve. I wavered for a little while when all the military and political people insisted that Steve's request was foolish to the point of being self-destructive. I almost went along with them. How could so many smart people be wrong? Then I thought about what Steve has accomplished compared to the rest of them. I've staked my presidency, as well as the security of this country on his recommendation,\" worried Gwen.\n\n\"I appreciate the pressure you're under,\" reassured Ted calmly, \"but you've placed your money on the right horse. I've seen things in the past fifteen years I never would have thought possible and Steve was involved in every single one of them. He defeated that damn pirate with sheer determination and guts. He'll get our allies to see things his way. \n\n\"I also heard that you put an insubordinate general in his place today. I know you're concerned about handling such a huge responsibility, but you're already showing your leadership skills. No one could handle the job better than you, especially with Steve covering your back every step of the way,\" added Ted proudly.\n\nThe news stations covered Gwen's decision and her lack of support from Congress the next morning. Senators and Representatives from both parties publicly criticized Gwen's decision.\n\n\"Gwen, both Houses of Congress have decided to return from vacation immediately and hold a joint session. The topic is what to do about you. There's even talk of a very speedy impeachment and conviction to remove you from office!\" reported Lisa shortly after noon.\n\n\"When do they convene?\" asked Gwen with amazing calmness.",
        "\"They plan on convening at one PM tomorrow. Leaders of both parties are said to be leaning toward impeachment. What should we do?\" asked Lisa with concern.\n\n\"I want you to request that I have the opportunity to address them as soon as they convene tomorrow,\" replied Gwen.\n\nSo it came to pass that a joint session of Congress convened amid much speculation about the fate of the President of the United States. Would she be impeached so that the Speaker of the House could assume the presidency and prevent the military from losing the edge it presently held? What would the president tell Congress? On the morning news programs, many politicians speculated that President Hammer would either reverse her decision, or resign her office. The entire nation watched on television as the first woman president strode regally to the podium to address Congress.\n\nOnce she stood before the microphones, Gwen slowly surveyed the room and those assembled in it. Then she wrinkled her nose several times before curling the corner of her lip in disdain. \n\n\"I smell the stench of fear!\" declared the President as the elected officials gasped at her statement. \"It's not a smell I experience very often. My family and friends consist of real men and women, people unafraid to do the right thing regardless of opinion or personal gain. But fear has long flourished in this legislative body, and it disgusts me.\n\n\"When Vice President Grandquist resigned in shame and President Crawford's influence was badly waning, the members of this august body began the search for a suitable replacement that both parties could agree on. How many of you admitted in interviews that each party wanted someone that would be acceptable, but not be a threat to run for the Presidency after serving as Vice President? Neither party had enough votes to get their choice approved without gaining some support from the other party. A compromise was reached. President Crawford was essentially told that he had to nominate me or he'd run afoul of Congress. I was selected since I belong to neither party and I have no intention of running for the office. I would be no threat to the revered political status quo. \n\n\"You cowards didn't approve me because you truly believed I was the best candidate. You selected me because I was a safe choice! You lacked the nerve to actually do what you felt was the right thing for America. You put party and personal agendas ahead of country. That was a cowardly act. \n\n\"I have recently made a controversial decision; one that was very difficult, but one that I know is correct. Do you have the courage and integrity to support that decision? No! You immediately began yammering about how you had never wanted me as vice president in the first place. You approved me overwhelmingly at the time, but when things get difficult, you try to save your political asses in the most desperate and heinous way imaginable. \n\n\"I want you to listen closely to what I'm about to tell you. You will not, and you CANNOT impeach me! I have more than one reason to believe this. First, I am not guilty of treason, bribery, high crimes, or misdemeanors. \n\n\"More importantly, this chamber is a gathering place for cowards. You lack the nerve and determination an impeachment would require. You didn't even have the nerve to select the person you felt was most qualified to be vice president, and that would have been a walk in the park compared to removing me from office.\n\n\"The final and most persuasive argument I have against this esteemed body pushing for impeachment is my husband. He's quite busy working to prevent world war three at the moment, but once he returns, he'll devote all his attention to this institution's insult to my honor. If any of you doubt that Steve can and will use the truth to destroy you, then by all means pursue your foolish venture. \n\n\"But, let it be known that if there is anyone amongst you that thinks Steve will not destroy you, then you are deluding yourself. He'll walk through Hell to protect me and preserve my honor. It has occurred to me that the meaning of the word honor is unknown to most of you, but Steve lives and breathes it. Pursue this witch hunt and you'll discover what terrorists, pirates, drug dealers, and a few crooked politicians have already learned the hard way. Steve Hammer takes no prisoners and gives no mercy to his enemies. If you try to hurt me, you will become Steve's enemy! \n\n\"In conclusion, your fear, greed, and selfishness make you no threat to my position. I'll now return to the White House to do my best for this country while you posture and pose for cameras and sound bites. The American people deserve so much better than what you give them. You should be ashamed!\" \n\nGwen simply turned, left the podium, and walked down the aisle as the shocked members of Congress sat in complete silence. Lisa and Kate met her at the door and briskly led her to the exit as Secret Service agents suddenly appeared to escort the sisters, leaving an almost deafening silence within the stunned chamber."
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "politics",
        "president",
        "war",
        "advisors",
        "secretary of state",
        "cabinet",
        "white house",
        "nato"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-pt-03-ch-01"
}