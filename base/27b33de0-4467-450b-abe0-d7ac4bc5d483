{
    "title": "Three Square Meals Ch. 100",
    "pages": [
        "The Invictus lifted off the landing pad on Sequathis' upper platform, retro-thrusters blazing bright orange amidst the blue glow from Brimor's sun. Alyssa banked the sleek battlecruiser around, departing on their initial approach vector, rather than just pointing the nose skyward and blasting them into orbit. The reason for her careful manoeuvre was not in deference to Brimorian port speeds, but simply because they had a rendezvous to keep, with a certain black stealth shuttle lurking in a dense bank of cumulus clouds. Faye raised the Invictus' Primary Hangar door as the two ships matched speeds and the shuttle glided inside.\n\n\"Jade's safely inside!\" the purple girl announced, bouncing up and down where she sat on John's command console.\n\n\"Nice work, ladies,\" John said, finally relaxing now the Nymph was safely back aboard the Invictus. He glanced over at Dana who was engrossed with the shield status display. \"Everything looking good with the shields?\"\n\nThe redhead grinned at him, her blue eyes shining with delight. \"I had to recalibrate the display. We blasted the fucking roof off the maximum shield status!\"\n\n\"How much more have we got now?\"\n\n\"Over seven times the Invictus' original shield strength... but that doesn't include the damage reduction effect from the Brimorian shielding!\"\n\nJohn returned the exuberant young woman's grin. \"Will that make a big difference?\"\n\n\"A fucking huge difference! We'll take reduced damage from Beam Lasers, making the shields last loads longer. We're also effectively immune to Terran Laser Cannon fire now and can just laugh at anything weaker than that...\" She turned her beaming smile to Calara. \"That basically means fighters can't do shit to us now!\"\n\n\"That's fantastic news,\" John said, nodding appreciatively. He followed the redhead's gaze to the equally excited Latina. \"Everything checking out okay with the upgraded energy weapons?\"\n\n\"I'm reading everything in the green for the Pulse Cannons, Photon Lasers, and the Nova Lances!\" Calara exclaimed, her brown eyes sparkling with barely contained joy. \"I'd love to obliterate an asteroid belt or two for a weapons test, but there's no real need. I've never had a single weapon failure on the Invictus; our lovely Chief Engineer is just that good.\"\n\nDana tipped an imaginary hat at the Latina's compliment. \"I like to take good care of my toys!\" She got up and stretched, then glanced around the Bridge. \"Any volunteers to help me install the new shield generators and eternity crystals in the Valkyrie and Raptor?\"\n\nThere was a chorus of agreement as everyone on the Bridge offered to help, the whole crew rising to their feet in their eagerness to assist. \n\nAlyssa glanced at Rachel, then stepped over to John and placed a hand on his wrist, intercepting him as he turned to join the others in heading for the grav-tube. \"Wait a second, handsome. We can help later, but first you'll probably want to have a chat with Jade.\"\n\n\"Is she on her way up?\" John asked, slightly unnerved by the gleam in Alyssa's cerulean eyes.\n\n\"She certainly is,\" the blonde replied, giving him a coy smile.\n\nHe saw her eyes dart towards the grav-tube, so he turned to greet the Nymph. His jaw dropped when he spotted a beautiful teal face framed by a mass of light green hair, peeking out from behind Jade.\n\n\"What the hell?\" John blurted out, gaping at the two women.\n\n*I brought back a sample of Helene's DNA!* Jade informed him with a telepathic giggle, barely able to contain the radiant smile on her face as she gently coaxed the wide-eyed girl onto the Bridge.\n\n\"Hey everyone,\" the Nymph said as she clasped her new friend's hand and squeezed it gently to reassure her. \"I'd like to introduce you to Helene.\"\n\nThere were friendly waves and smiles all round, which Helene just about managed to acknowledge with a shy smile of her own. She was clearly fascinated by the girls, gaping in astonishment at the dazzling mix of hair and skin tones, none of which were familiar to her.\n\nWhen her eyes darted to John, she gazed at him in awe, a look of pure wonder on her face. \"Are you John, the Master Wizard?\" she asked in reverent tones.\n\nHe shot a bewildered glance at Jade, who blushed a deep green and looked decidedly shifty. Walking down the steps from the Command Podium, he replied, \"My name's John Blake. You're aboard my ship, the Invictus.\"\n\n\"Yes, your sky chariot!\" Helene exclaimed, her baby-blue eyes widening as she paused to look around the Bridge. \"This is just like the stories I heard as a child!\"\n\nAlyssa glided past her stunned lover and gave the aquatic beauty a soft kiss on the cheek. \"It's lovely to meet you, Helene. My name's Alyssa... welcome to our home.\"\n\n\"Thank you, Alyssa,\" the guileless young woman replied, her lovely face lighting up in gratitude.\n\nTurning to look at John, his blonde Matriarch arched an eyebrow. \"Perhaps now would be a good time for that chat?\"\n\nHe nodded mutely and waved a hand towards his Ready Room. Before they departed, Jade handed the hypo-injector to Rachel, the brunette greeting Helene with a friendly smile. The Nymph slid her arm around Helene's waist and guided her towards the Ready Room door. She stared at John in fascination as she walked past, seemingly unable to tear her eyes away from him, then she glanced back over her shoulder to watch him as long as she could before Jade led her through the doorway.\n\n*I'm not completely sure, but I think Helene might be interested in you...* Alyssa told him, her bright blue eyes full of artful innocence.\n\n*You knew Jade was bringing her here!*\n\nThe blonde shrugged. *Of course. It wasn't fun listening to our resident Nymph's underwater thoughts, but we were in constant telepathic communication before she made the decision.*\n\n*We're about to go into what's likely to be the most dangerous battle we've been in so far and you two decided to bring a civilian on board?!* John balked, pouring his disapproval into the empathic bond he had with them both. *You didn't even ask me about it! What were you thinking?!*\n\nAlyssa closed the distance between them and hugged him tight. *Please don't be mad! Helene needs your help and we've just been evicted from the Brimorian Enclave... they told us not to come back! Neither Jade or I could think of a better way of handling it and we both wanted Helene to be a surprise!*\n\n*Well you certainly managed to surprise the hell out of me,* he muttered, frowning as he glanced towards the Ready Room.\n\n*I'm sorry, John,* Jade told him, sounding genuinely contrite. *It took me so long to find Helene, I had no time to ask any questions about the Abandoned. This seemed like the most efficient solution.*\n\n*So what's all this Master Wizard nonsense?* he asked them both, before spotting the guilty flash in the blonde's bright blue eyes. *I take it that was Alyssa's idea?*\n\nShe nodded, but didn't flinch away from his stern gaze. *Helene's a sweet girl, but very naive... we needed to talk to her in terms she could understand. When Jade explained the situation, it seemed like a relatively harmless way of encouraging Helene to return to the ship so we could talk to her.*\n\nJohn gave her a knowing look. *And this has nothing to do with your obsession of adding as many beautiful girls to our family as possible?*\n\nAlyssa had the good grace to blush this time. *I'll admit that might have been a passing thought...*\n\nHe groaned and rubbed at his face. *Haven't we got enough on our plate at the moment?*\n\nThe blonde stood up straighter and fixed him with a steely gaze. *No. This is important... Helene's important, I can feel it. I'm sorry I didn't ask your permission, but this is a very different situation from Niskera. Besides, you did leave me in charge of recruitment.*\n\n*I'm never going to hear the end of that am I?* he asked with a weary sigh.\n\nShe gave him a tender kiss on the lips then gazed intently into his eyes. *Answer me honestly... have I made a bad call yet with any of the girls I've brought into your life?*\n\nJohn paused then looked chagrined and shook his head. *No... they're all wonderful.*\n\nAlyssa gently stroked his cheek. *You say we're partners, but I'm willing to defer to your judgement on every other decision in our lives. If you truly respect my judgement as well, then wouldn't it be fair to offer me the same courtesy on this single subject?*\n\nNow it was John's turn to look guilty. *Alright, I suppose that's fair enough, but you know why I'm concerned right? Any girl I end up in a serious relationship with will probably want children and I don't want to spread myself so thin I end up unable to give them enough attention...*\n\n*I know...* Alyssa said softly. *Just trust me; I know you better than you know yourself. Everything will be alright.*\n\nJohn took a deep breath then nodded. He offered Alyssa an arm and they entered the Ready Room, to find Jade and Helene sitting patiently on one of the sofas. Helene's eyes snapped to his face and she watched his every move with a startling intensity.\n\nSitting on the sofa opposite, John smiled at the alluring aquatic girl to put her at ease. \"I'm sorry if I was rude when we first met. I didn't know you were coming aboard, so Jade just caught me by surprise when she introduced you. As I said earlier, my name's John and it's a pleasure to meet you, Helene.\" \n\n\"There's no need to apologise, Master Wizard,\" she replied, bowing her head deferentially. \"I understand you must be very busy!\"\n\nJohn flicked a quick glance at the Nymph beside the aquatic girl, then focused on Helene again. \"What did Jade tell you about me so far?\"\n\nHelene let out a soft sigh, a starry-eyed look on her face. \"That you're good and kind, and you spend your life helping as many people as you can.\" She hesitated for a moment, then gave him a look of profound longing. \"She said that what you like doing most of all, is granting wishes to good girls.\" \n\n\"What would you wish for, Helene?\" John asked quietly.\n\nHer trusting eyes filled up with tears and her hands went to her slender tummy. \"I... I can't have babies...\" She started to tremble, her shoulders shaking with grief as she began to sob. \"I'm not a proper woman any more... and it's all my fault!\"\n\nJohn's heart went out to the heartbroken girl and he quickly knelt down in front of her, then clasped her hand. Jade put her arm around the distraught young woman, and gave her a supportive hug.\n\n\"What happened to you?\" he asked, brushing his thumb over her soft teal-coloured skin.\n\nHelene wiped away her tears and took a deep breath to try to steady herself. When she started to speak, her voice was full of sorrow as she began her tale. \"Years ago, I fell in love with a sweet handsome boy called Firon. We'd grown up together and were soulmates; everyone said that we'd be together forever and that our love would conquer all. Elder Debha told me I was too young to carry a baby and to wait a few more years, but Firon and I were so much in love...\" Her voice caught, and tears rolled down her cheeks. \"...I didn't listen and thought I knew my body better than anyone. I was with Firon and it was so wonderful... his seed quickened in my belly that very first night...\"\n\nUnable to continue, Helene turned and wept into Jade's shoulder as the Nymph did her best to comfort the heartbroken girl.\n\n\"You lost the baby...\" Alyssa murmured, her tone gentle and full of sympathy. \"Elder Myrna tried to save it, but after the bleeding it was too late... You were badly hurt, your womb not ready to carry a child to term.\"\n\nHelene gaped at Alyssa in stunned disbelief. \"You're a wizard too!\" she gasped, her voice ragged from crying.\n\nWhen John turned to glance at his blonde Matriarch, he saw her eyes were glowing with a soft white light. She was looking away into the distance, her gaze unfocused as she delved into the aquatic girl's mind.\n\n\"The Brimorians came for Firon, to punish him for damaging a female,\" Alyssa whispered, her anguished expression reflecting the harrowing grief of Helene's memories. \"You begged for him to be spared, but they executed him as a lesson to the others...\"\n\n\"It was all my fault!\" Helene cried out, her face twisted in anguish. \"Firon died because I was too foolish to listen to the elders!\" Her body was wracked with plaintive sobs. \"If only I'd waited a few more years... he'd still be with me and we would have had six babies together by now!\"\n\nJohn frowned at that and glanced at Alyssa. \n\n*Firon died seven years ago. Helene's twenty-two...* she replied quietly, answering his unspoken question. *The Brimorians encourage the Abandoned females to have children every year for as long as they're fertile... they're breeding a slave race!*\n\nHis eyes widened at that shocking revelation, then turned his focus back to the weeping girl. \"I'm so sorry about Firon,\" he said, gently squeezing her hands. \"There's a lot I can do, but I'm afraid I can't bring him back for you.\"\n\nHelene's face twisted with guilt and self-recrimination and she began to cry all the harder. John waited patiently for her outpouring of grief to run its course, while Jade whispered quietly in her ear, her murmured words kind and supportive.\n\nWhen her tears dried up, Helene finally met John's sympathetic gaze. \"I should never have come here. I'm not a good girl... if I was, my wish would have been to bring back Firon...\" No longer able to meet his sympathetic gaze, she turned away, a haunted look in her eyes. \"I'm so selfish... I was going to ask you to make me a woman again... but I don't deserve it.\"\n\nBefore John could disagree, Alyssa walked over to the heartbroken girl and gently lifted Helene's chin so that she would look into the matriarch's glowing eyes. \"I've looked into your heart, Helene. You're not a bad person. You're kind, generous, and loving with all your friends and family. What happened to you and Firon was not your fault.\"\n\nHelene looked shocked and shook her head. \"But I-\"\n\nAlyssa leaned down and gave her a tender kiss to silence her objections. \"The Brimorians are to blame for a whole host of reasons. We'll talk about it later when you're calmer, but for now I want you to trust in my magic and know that I'm telling you the truth.\"\n\n\"I-I do trust you and your magic, Mistress Wizard,\" Helene finally whispered, looking stunned as she appeared to be re-evaluating her opinion of herself and her troubled past.\n\n\"Just call me Alyssa,\" the blonde said with a benevolent smile. \n\n\"And please call me John,\" he requested, rubbing her hand in a soothing motion.\n\nHelene nodded distractedly, appearing too shell-shocked to speak.\n\nJohn glanced at the Nymph, then said, \"I don't know what Jade said to you before she invited you aboard the ship, but we'll be leaving Brimorian territory for quite some time... at least a few weeks but it might be much longer. You're welcome to come with us, but if you're in a hurry to return to your home on Brimor, tell me now so that we can take you back before we fly too far away.\"\n\nHer red-rimmed baby-blue eyes focused on him once more. \"Jade told me I could go on an adventure with her... and I... don't want to go back. I love my family, but everyone at home looks at me with such pity! 'Poor Helene, her story is so tragic'... I know that's what they think, I've heard people talk about me when they didn't know I could hear.\"\n\n\"All of us have had troubled pasts so we understand,\" Alyssa said softly, smoothing some of Helene's light-green hair away from her face. \"What happened to you was awful and if you'd like to talk about it with John, me, or any of the girls, we'll be happy to listen. We won't judge you or look on you with pity, but we will be a sympathetic ear if you need it. Does that sound okay?\"\n\nThat look of awe was back on Helene's face again as she slowly nodded. \n\nJohn shared a glance with Alyssa, then said to their guest, \"At some point I'd like to ask you a bit about your people, but that can wait for now.\"\n\nHelene shook her head and gave him a shy smile. \"You may ask your questions now, I will answer to the best of my knowledge.\" \n\nHe studied her for a moment and saw that she seemed to be composed again. \"Jade mentioned that you called this language 'the Old Tongue' and that it was forbidden?\"\n\nShe flinched reflexively with that sudden reminder, then blinked as she remembered that she was now in a safe place. \"The Brimorians ordered that we must only speak their language, but my people have kept the Old Tongue alive in secret. The stories say that it was hard at first; the Abandoned were watched and guarded, but now... we only really see the Brimorians for the crop harvests.\"\n\n\"Have you always lived on the Kelp farm?\" John asked, listening attentively. \n\n\"For all my life,\" she replied, a conflicted expression on her face. \"I mostly helped the men to gather the crops; it kept me busy and I didn't have time to think about things too much. I really loved helping look after the children in the nursery, but the pregnant women didn't like it if I spent too much time around them...\" Her face fell, overcome with sadness. \"They worried that I was bad luck.\"\n\nJohn ducked his head to make eye contact with her. \"That unhappy chapter of your life is over with. You have a bright future ahead of you now.\"\n\n\"Does your magic tell you that?\" Helene asked, a flicker of hope lighting up her face.\n\nHe hesitated for a moment, unwilling to lie to the fragile young woman. \"I promise I'll do my very best to make it happen.\"\n\nShe gave him a lovely smile. \"Jade was right, you really are a good man.\"\n\nFlushing self-consciously, John cleared his throat, then said, \"If you're completely certain that you'd like to stay with us, then we need to help you settle in and make sure you're comfortable.\" He studied her for a moment, then continued, \"I know you can breathe underwater, but what's the best place for you to sleep? We have a lagoon that you're welcome to make into your home, or we can give you your own room.\"\n\n\"I used to sleep in the shared dorms, Mas-... John,\" Helene said, correcting herself before calling him by his title. She looked down and looked shamefaced as she added in a soft whisper, \"But it was so lonely. No one wanted to sleep with a broken woman...\"\n\nJade grinned and hugged the troubled girl around her waist. \"We all sleep together here! There'll be no shortage of volunteers to cuddle you at night.\"\n\n*Jade...* John cautioned her with a frown.\n\n\"You'd really let me sleep with you!\" Helene exclaimed, beaming at him with joy. She caught a glimpse of John's worried expression and her face fell. \"I'm so sorry! I shouldn't let you shame yourselves...\"\n\nAlyssa grinned at her and shook her head. \"Ignore the Master Wizard, he gets some funny ideas sometimes. He thinks you're a stunningly beautiful girl, but he's worried that if he lets you sleep with us, the two of you will end up making love... and that he'd be taking advantage of you. He's very concerned about making sure you're happy and doesn't want you to feel hurt, or get upset.\"\n\nHelene looked at him incredulously, the doubt written plain as day across her lovely features. \"I-is that true?!\" \n\nJohn glared at Alyssa, then turned back to the breathless girl. \"Yes, I do think you're very beautif-\"\n\nHe didn't get to finish the sentence because Helene launched herself at him, her soft lips seeking his like a heat-seeking missile. She straddled his lap and moaned into his mouth as she kissed him passionately.\n\n*She's from a very sexual culture, but she's been shunned by men for all her adult life,* Alyssa said softly. *Please make her first proper kiss one that she'll remember.*\n\nJohn shrugged off his shock and wrapped his arms around Helene, applying just enough pressure to let her feel his strength. Her moans grew louder as he held her close and began to return the kiss, putting everything he'd learned in the past six months into practice. He used firm, insistent pressure on her lips, not enough to bruise, but enough to let her realise that she should follow his lead. ",
        "Helene's moans turned into excited mewls as she responded, and he eased off again, kissing her gently and exploring her soft lips. When she started to relax, he upped the tempo again and her eyes widened in shock when the tip of his tongue flickered across her partly open mouth before darting back. He repeated it to encourage her to respond, and when she did, he met her tongue with his. John had given her a thorough introduction to French Kissing by the time they parted and Helene's breath was coming in excited pants as she gazed at him in astonishment. \n\nShe raised her fingers to her lips, brushing over them as she felt them tingling. \"I-I've never...\"\n\n\"See, I told you he likes you,\" Alyssa said with a satisfied smile.\n\n\"We all think you're quite beautiful,\" Jade agreed matter-of-factly. \"If you really like kisses, I'm sure you'll be able to get as many as you want.\"\n\nHelene swooned into John's arms, hugging him tight. \"Thank you so much!\"\n\n\"I should be the one thanking you,\" John said, stroking her back. \"That was an incredible kiss.\"\n\nShe blushed and shook her head, then paused as she tried to speak her thoughts. \"Yes, the kiss was wonderful... I just meant thank you for letting me come with you.\"\n\nJohn looked into her eyes and said earnestly. \"If you stay with us, I'll take care of you and do my best to make sure you're happy, but your life is never going to be the same again. Now's your last chance to go back to your old life on Brimor, so think carefully before you make this decision.\"\n\n\"I already have,\" Helene said, sitting up straight and meeting his look of concern with one of absolute certainty. \"I choose to stay here with you, John.\"\n\n***\n\nDeep Lord Athgiloi watched the oval map with steely black eyes, as the Invictus raced away from the Brimorian homeworld, heading directly towards the outer-edge of the Theta Columbae system. The white battlecruiser was travelling at a speed that left him and everyone in this command room reeling. Upon reaching the outskirts of the gravity well, the Invictus activated its FTL drive, leaping out of the system only a couple of seconds later. That came as a shock, but not nearly as much as seeing just how fast the white ship could travel in hyper-warp.\n\nHe'd been forewarned that the Invictus and John Blake were powerful, but the warning had been unnecessary, having already seen the footage of the man brutally exterminating Kirrix forces. Still it was different seeing such things with his own eyes, and what he'd witnessed that morning on the upper platform of Sequathis had left him shocked to the core. John hauling around multi-ton objects relying on raw strength alone had been astonishing, but not nearly as disturbing as the hovering girl performing what appeared to be magic before his bewildered eyes. \n\nHe felt a surge of relief as the Invictus rushed out of the sector and Athgiloi finally let himself relax. With a deep belly-laugh he turned around and strode out of the Command Room, the staff reacting to his mirth with amazement. He whistled a jaunty tune to himself as he walked back to his quarters, something he'd not done in over five decades. Yes, John Blake might be a powerful foe, but as he'd told the Deep Lords, there was no subtlety to the man. Manufacturing enough indignant outrage on the call had been easy enough, and he snorted with laughter at how thoroughly the vaunted Lion had been taken in by his ruse.\n\nEntering his chambers, he smiled when Celphna bounded over to greet him, a look of reverence on her exquisitely scaled face. \"This one longed for your return!\" She paused and studied him for a moment, seeing his triumphant expression. \"Were you successful with your plans, Master?\"\n\n\"It all worked like a charm, just as I predicted,\" he replied with a smug grin, as he eased himself into his favourite chair.\n\nCelphna knelt at his feet and rubbed her head affectionately against his thigh. \"Master is so clever!\"\n\nHe laughed with delight. \"Why yes, I certainly am...\" He grinned at her, loving the beaming toothy smile she gave him in return. \"Why don't you tell me more about... me.\"\n\nShe fawned over him, planting soft kisses on his scaly hide. \"Master is so powerful, so strong... there is no one like you in the entire galaxy!\"\n\nAthgiloi relaxed as he revelled in her adoration. Yes, this was turning out to be a morning he'd remember for a long time...\n\n***\n\n\"So this is where we all normally sleep,\" John said, waving a hand towards the colossal four-poster bed, the quartet of crystal Alyssium pillars sparkling in the light. \"Me and eight of the girls sleep on the bed... Faye keeps watch over us in the chair.\" \n\n\"It's so beautiful,\" Helene murmured, trailing her fingers over the brilliant-white bedcovers, amazed at the softness. She glanced at him, hope and longing in her eyes. \"Can I really join you here tonight?\"\n\nHe paused and watched her for a moment. The rest of the girls had given them some privacy for this conversation, but now he had Helene alone, John wasn't sure how to begin. \"Helene... there's something really important I need to speak with you about.\"\n\nShe looked forlorn and said sadly, \"If you've changed your mind about me being with you, I understand. I won't get upset... I promise.\"\n\n\"No, it's not that at all,\" John replied, frowning in frustration. He walked over to the bed and sat on the end, then patted a space beside him. \"Please sit with me a moment, so we can talk.\"\n\nHelene obediently followed his request, sitting next to him on the bed and watching him with big eyes. John could see how worried and unsettled she was, so he decided to put her mind at ease over her fear of rejection. He leaned in to give her a gentle kiss, then guided her back so that she was lying on the bed. Propping himself up on one elbow, he looked down at the pensive girl before kissing her again, but this time with meaning. She responded immediately, her arms encircling him as she tried to pull him across her lovely body. \n\nHe resisted and just focused on the kiss until she relaxed and enjoyed the experience, realising that he wasn't intending to go further at that moment. When he eventually pulled back to look at her again, her eyes had softened and she wore a look of blissful contentment on her face. She giggled when she realised he was watching her, and they shared an intimate smile.\n\n\"That one was to prove how attractive I think you are,\" John said, cupping her feminine heart-shaped face. \"Alyssa was right earlier, I do want you, but there's something important we need to discuss first.\"\n\n\"I will listen, John,\" she told him earnestly.\n\nJohn hesitated, unsure how to phrase this conversation in terms she would understand. \"Earlier you talked about Alyssa and me being wizards and using magic. We actually call them psychic powers, and there's lots of things that we can do that are fantastic and hard to believe.\"\n\nShe gazed up at him in fascination and murmured, \"Can you show me?\" \n\nHe blinked in surprise, then nodded, raising his hand and turning it in front of her face. \"Looks normal, right?\"\n\n\"No,\" she replied, shaking her head. \"You're so strong, but your touch is gentle and caring... I would never describe your hands as normal.\"\n\nHe laughed and shook his head. \"That wasn't quite what I meant. Just watch for a moment, but no touching, okay?\"\n\nFocusing his will inwards, he concentrated on his hand, feeling the embers within him eager to be unleashed. Keeping a tight rein on that impulse, he let a mote of fire burst forth from his palm, the flames dancing and twisting like a living thing trying to run free.\n\nHelene gasped, her eyes going even wider. \"Your hands aren't normal at all!\"\n\nJohn briefly considered trying to make flame sprites with the dancing fire, but he knew he had nowhere near the same level of control as Tashana. Instead he extinguished the flame, then dropped the temperature far lower, until flakes of frost swirled around his fingertips.\n\n\"They're so pretty!\" she gasped, watching in awe. \"What are they?\"\n\n\"Ice crystals... they form when water gets very cold.\" He smiled at her, then released his will, letting his hand return to normal. \"It's safe to touch now,\" he explained, and let her examine his fingers until her curiosity was satisfied.\n\n\"I never for one moment thought I'd see real magic,\" she gushed, thoroughly enchanted by his impromptu performance.\n\n\"There's lots more I can do,\" John said, meeting her curious gaze. \"But the most important abilities I have are connected to me having sex with a girl.\"\n\n\"You make sex magical?\" she asked innocently.\n\nHe laughed when he saw the sparkle in her eyes. \"You're not quite as innocent as you seem, are you?\" \n\n\"Not quite,\" she admitted with a bloom of colour to her cheeks. \"There were many times in the dorms, when I overheard the soft words that lovers share with each other.\"\n\n\"A girl with hidden depths... how intriguing,\" John said with a smile.\n\nHelene blushed even harder and darted a glance at his hand. \"Sorry, I interrupted you before.\"\n\nJohn nodded, not wanting to embarrass her further. Bringing his fingertips to her slender throat, he stroked the velvety teal-coloured skin. \"Most of my sex-related abilities revolve around a girl swallowing my cum.\" \n\nHe traced his fingers lower, leaving a trail of goosebumps as they followed the contours of her graceful neck, noting the closed indentations for her gills. Passing them by, he continued down across her chest and brushed between her breasts. His gentle exploration drew a startled gasp from Helene, her chest heaving as he traced a path between those deliciously soft mounds. Moving down to the oval of her abdomen, he caressed her gently, feeling the toned muscles of her athletic body. She was used to long days filled with hard labour and her lean well-muscled physique was a testimony to that work.\n\n\"If you were to swallow just once, I'd be able to heal your body,\" he said, his hand moving lower on her belly. \"I could undo whatever damage was done to you and you'd be able to have children again.\"\n\nShe stared at him unblinking for a moment, then said in a hushed voice. \"You really can do that, can't you?\"\n\n\"Yes,\" he replied, his sincerity quite apparent. John let her think about that for a few minutes as she tried to accept that something she'd longed for with all her heart, for so many years, might actually be a possibility. When she didn't look quite so shocked, he stroked her tummy and continued, \"Whatever happens between us, I promise that I'll heal you so that you can have children again.\"\n\nHer eyes teared up and she looked overwhelmed with gratitude. \"Thank you, so much!\"\n\nJohn smiled at her, then said quietly, \"But you have other options too. Do you remember Rachel? The girl with the brown hair you met up in the Bridge?\"\n\nHelene nodded, her expression serious. \"She's very beautiful... all your women are.\"\n\n\"Well Rachel could heal you too. If you choose her to help you instead, you don't have to be with me if you don't want to,\" he said quietly, gazing into her big blue eyes.\n\nHe saw the pain reflected there immediately as she took his words for a rejection. \"I understand...\" Helene whispered as she looked away.\n\nJohn gently turned her face so that she was looking at him again. \"No, you don't understand, not yet. I'm worried about you making the right choice for your future; there are side-effects and consequences if we're intimate together and I don't just mean the healing. If I feed you three times, I'll create a special link between you and Alyssa. You'll be connected to us permanently, just like all the rest of the girls on the crew are.\"\n\nHelene studied him for a moment, then cupped his cheek, her thumb brushing lightly over his skin. \"Why are you telling me this? I can see that it troubles you to talk about yourself and your... powers.\"\n\n\"I just want to be honest, so there are no surprises,\" John replied. \"I want you to understand what it means to be with me before you make any decisions that will affect the rest of your life. I'm fighting a war against an extremely powerful enemy and by staying at my side, you'll be dragged into that battle too.\"\n\n\"Are you trying to scare me away because you don't want me?\" she pressed, mesmerising him with her unblinking gaze.\n\nHe quickly shook his head. \"Alyssa told you the truth earlier. I think you're a very beautiful woman, but I'm also trying to look out for your best interests and I don't want you to have any regrets.\"\n\nShe gazed into his eyes, then placed her hand on his chest, over his heart. \"Are you a good person, John Blake of the Invictus?\"\n\n\"I try very hard to be,\" he replied, his voice ringing with sincerity. \"I'd never do anything to hurt you, nor would the girls.\"\n\nHer face brightened with a lovely smile. \"Then let us simply see what the future holds for us. No more explanations or careful warnings; Jade promised me an adventure... I long for surprises and to experience new things!\"\n\n\"Are you sure?\" John asked, startled by her reaction.\n\nShe nodded eagerly. \"Everything is so new and exciting! I never thought life could be like this!\"\n\nHe chuckled and shook his head in amusement. \"You're going to be in for a wild ride. Let me know if you ever want to get off!\"\n\nHelene nodded, her expression serious. \"I long for a wild ride and I'll make sure to tell you when I need to get off.\"\n\nJohn caught that same sparkle in her eyes and she giggled when he broke into a smile. \"Don't worry about that, I'll make sure you're very well taken care of.\"\n\nShe blushed, suddenly unsure of herself, and John realised that despite her flirtatious innuendos, she was still an inexperienced young woman. He leaned down to give her a gentle kiss, simply to defuse the situation rather than escalate to anything more. Helene responded, the tension flowing out of her as she melted into his arms.\n\n\"He's very good at that, isn't he?\" Alyssa asked, her voice carrying a playful lilt.\n\nJohn finished the kiss and slowly pulled away so they could turn and look at Alyssa as she climbed onto the bed with them. Helene nodded, her eyes bright and happy as she greeted the blonde with a radiant smile. That smile wavered and her eyes flashed between John and Alyssa, that same doubt in her expression again.\n\n\"A-are you sure you don't mind me kissing him?\" she asked, giving voice to her insecurities.\n\nAlyssa gave her a warm smile and shook her head. \"No, I don't mind one bit. Actually, I'd really like a kiss too if you're handing them out?\"\n\nHelene's breath caught and her eyes widened as she gazed up at Alyssa. \"But you're a girl! Are you sure?\"\n\nThe blonde's smile widened and she leaned down to take over from where John had left off, her lips soft and gentle against Helene's flushed ones. John admired the view, just as he did whenever two of his girls were affectionate with each other. That thought caught him by surprise and he was amazed how quickly he'd shifted into thinking of this refreshing young woman as part of his family.\n\nAlyssa pulled back and caught the look he gave her, nodding slightly to confirm she'd heard his thoughts. She turned her focus back to the girl lying between them, admiring her look of bliss with no small sense of satisfaction. \"It's very different kissing a girl, isn't it?\"\n\nHelene licked her lips and nodded, then let out a soft sigh. \"That was wonderful...\"\n\n\"It was a lovely kiss for me too,\" Alyssa said, her voice kind and loving. \"You made me think of a serene, peaceful ocean that could quickly become wild and untamed...\" \n\nThe aquatic girl blushed furiously, but her embarrassment quickly receded when she realised that the blonde wasn't teasing her and was absolutely sincere. \"I never realised that there were people like you and John,\" she said softly, looking at her bedmates in turn. \"You've been truthful all along, haven't you? You really do like me...\"\n\nAlyssa darted a glance at John, before gazing into Helene's eyes. \"You're very different from the other girls we've rescued. I can see how lacking in confidence you are, so I'm going to be completely honest with you.\" She brushed her hand over Helene's toned tummy. \"I think you're a lovely, beautiful girl, and I want you to be happy here with us. I hope that you and John will become lovers, and I'd love for you to become the mother of his children, just like the rest of the girls on this ship are going to be.\"\n\nJohn gaped at the blonde in shock. *You can't just drop all that on the poor girl! We only met her an hour ago!*\n\nAlyssa met his stunned gaze, then her eyes looked pointedly at the teal-skinned beauty lying between them. John turned back to look at Helene, expecting her to be in a state of panic, but the expression on her face was enchanting. Her eyes were filled with hope, the self-doubt fading away as she looked at him in wonder.\n\n*Helene's from a dramatically different culture to us,* Alyssa reminded him gently. *You can't just think of her as a different-coloured Terran girl. The Abandoned women long for and expect to be bred repeatedly as soon as they become adults, but Helene's had to live with rejection for seven long years, thinking that she's a failure as a woman because she can't have children. I'm not saying to rush into anything, but with a bit of luck I've helped take some of that anxiety away.*\n\nJohn paused for a moment, thinking about what Alyssa had just told him. He joined the blonde in placing a hand on Helene's trim tummy. \"We'll take things at whatever pace you feel comfortable with, but I'd love that future with you too.\"\n\nHer eyes welled up and she flung her arms around him, overcome with her emotions. John held her as she wept against his chest, then glanced at Alyssa with concern. \n\n*Happy tears...* she confirmed for him, as she snuggled up behind the overwhelmed young woman.\n\nThe three of them lay quietly together, John and Alyssa providing soothing reassurance to the shocked girl between them. \n\nHelene eventually gathered herself and wiped away her tears, looking more than a little embarrassed by her outburst. \"I've not cried this much in... well, in a very long time,\" she said with a self-conscious smile.\n\n\"We've given you an awful lot to think about,\" John said, stroking her arm. \"I meant what I said though, about taking things at a comfortable pace; I really don't want you to rush into anything you don't feel ready for. The most important thing is that you're happy, okay?\"\n\nShe nodded, looking at him with big eyes. \"Are you trying to make me cry again?\"\n\nHe laughed and shook his head. \"Definitely not! Happy tears aren't so bad, but I really don't like hearing a woman get upset.\"\n\n\"The girls are making lunch at the moment,\" Alyssa said, tilting her head to one side. \"Would you like to meet everyone?\"\n\nHelene looked uncertain at first, then nodded decisively. \"Yes please. I'd like to get to know all your friends.\"\n\nAlyssa rose from the bed and offered their slightly flustered guest a hand. \"Let's get you freshened up, then we'll go say hello. The girls are so excited to meet you!\"\n\nJohn watched them leave, shaking his head at the lightning fast pace of the relationship developing with Helene. Despite everything he'd said to Alyssa before meeting the girl in his Ready Room, he'd basically committed to starting a family with the exotic beauty. He lay back on the bed, pausing for a moment to think about it more carefully. It didn't take long for him to realise that while they'd allayed Helene's fears by setting her expectations, it wasn't remotely the same thing as them actually rushing headlong into making a baby. \n\nRelaxing a little now, he decided to try and encourage Helene to take things slowly, giving her a chance to change her mind before she committed to anything permanent. A new girl joining them raised the worrying problem of another nightmare with the astral monsters, which he'd hoped he wouldn't have to deal with for at least a few more weeks. The thought of being plunged into another dreadful battle on the Astral Plane was a sobering one, and he realised he'd have to start making preparations for that sooner rather than later. It was an issue he'd only expected to crop up if Jehanna decided to join him, but with everything else going on recently, it wasn't something he'd been treating as a high priority. He sighed as he realised that would have to change.",
        "Memories of the luscious dusky reporter brought the smile back to his face, and he wondered how she was doing. Jehanna was a confident, famous, worldly-wise woman, her poise and sophistication part of the strong attraction he felt towards her. With a start, he realised she was almost the polar opposite to Helene in that regard, who had a charming naivety all of her own. He couldn't help wondering how the two of them would interact together. He'd missed talking to the bright-eyed reporter, and he decided to call her as soon as they got within range of the Terran comms beacons. \n\nLost in his thoughts, which admittedly kept drifting to him picturing the exotic aquatic girl getting very friendly with a certain TFNN lead anchor, he didn't hear the girls emerging from the bathroom.\n\n\"Come on, lazy bones, let's go get some lunch,\" Alyssa teased him, rousing him from his reverie.\n\nJohn sat up, then gaped at Helene in astonishment. He must have been distracted for much longer than he thought, because she'd had a shower and her teal skin gleamed as it caught the light, practically glowing with health. Alyssa had brushed out that wild tangle of light-green hair and carefully braided it, sweeping the voluminous mane back from her face, so as to emphasise her delicate features. Helene possessed an ethereal natural beauty and John found himself sucked in by those beguiling light-blue eyes.\n\n\"What do you think?\" Helene asked, doing a little twirl that made her aquamarine skirt flare up and reveal a tantalising glimpse of long well-muscled thighs.\n\n\"Wow... you look gorgeous!\" John exclaimed, when he regained the use of his faculties.\n\nShe giggled and flashed Alyssa a warm smile filled with gratitude. John got up and then offered both girls an arm, then led them out of the bedroom and into the corridor beyond. He could feel Helene's nervousness as they walked towards the Officers' Lounge and when he glanced at her to check she was alright, he saw the apprehension on her face.\n\n\"The girls are lovely, you don't have to worry about a thing,\" he said, trying to sound as reassuring as possible.\n\nHelene nodded and tried not to fidget, which got easier when she was distracted by Alyssa gesturing at the door controls with a flick of her fingers. The double doors swung open much to her astonishment and she gaped at the blonde in awe. \n\n\"That's called Telekinesis,\" Alyssa explained, winking at the startled young woman. \"Moving things around with my mind is my speciality... all the girls have them.\"\n\n\"You're all wizards?!\" Helene marvelled.\n\nThe blonde matriarch nodded, then flashed a dazzling smile at the man between them. \"We all have psychic gifts from John for being good girls.\"\n\nHelene gave John a furtive glance, watching him with a newfound respect as he guided them across the lounge to the long dining table where the first of the girls awaited them.\n\nAlyssa pulled away from John and hugged the Latina, who had a welcoming smile ready for their guest. \"This is Calara, my girlfriend,\" the blonde said with pride, planting a loving kiss on her lover's olive cheeks.\n\n\"It's lovely to meet you, Helene,\" Calara said, stepping forward to greet her with a warm hug. \"Alyssa warned us that John wouldn't have eyes for anyone else after your make-over and now I see she wasn't kidding! You look so beautiful.\"\n\nHelene blushed furiously, not sure whether to be grateful for the compliment, or distressed at the thought she might have offended the kind girl standing before her.\n\nCalara sensed her apprehension and stroked her arm. \"I was just joking about John, but not about how pretty you are. Don't worry about upsetting any of us, we're all delighted you decided to come back to the ship with Jade.\"\n\nDana took that moment to barge through the door from the kitchen, looking over her shoulder at Rachel as they carried through platters filled with smoked fish. \"Yeah, she's smoking hot alright! Jade got her body just perfect, but not her mannerisms... I just wanna give her a big cuddle, she's so adorable!\"\n\nRachel rolled her eyes at her girlfriend and nudged her with an elbow. \"We've got company.\"\n\n\"Hello,\" Helene said with a tentative smile.\n\nGiving her a broad grin, Dana put down the platter, then bounded over to greet her with a big hug. \"Welcome to the family! You're going to love it here, I promise!\"\n\nRachel waited for them to part and then glided over to give the newcomer a friendly kiss on the cheek. \"I'm so glad you decided to come with us, Helene.\" She pulled back and couldn't help taking a surreptitious glance at her delicately folded fins. Trying not to embarrass their guest, she switched her focus to the aquatic girl's two-piece outfit and her braided hair. \"The French plait looks so good with those clothes! Alyssa has an excellent eye, never be afraid to listen to her fashion advice!\"\n\nHelene brushed her fingers over the brunette's silk blouse, marvelling at the delicate softness, before her eyes travelled down to the tight-fitting skirt moulded to Rachel's limber thighs. \"I've never seen clothes like these before... you look amazing!\"\n\nAlyssa winked at her and slipped an arm around her waist. \"I'm really going to like you if you love clothes as much as I do.\"\n\nJade, Sakura, and Faye all arrived at the same time, having all been working down in the mech bay on the Valkyrie. \n\nThe Nymph beamed a brilliant smile at the Aquatic girl, bounding over to give her a hug. \"I promised you an adventure; have you been having fun so far?\"\n\n\"I've got so much to tell you!\" Helene gasped, hugged her back fiercely. \"Thank you for choosing me to come with you!\"\n\nJade leaned in and whispered something in her friend's ear and Helene giggled, nodding exuberantly. When they separated, Helene turned her attention to the other two girls. \"I'm Helene, it's so nice to meet you.\"\n\nSakura glanced down at her oil-smeared jumpsuit with a frown of apology on her face. \"I'd love to give you a hug, but I'm all grubby. I don't know how these two managed to stay so clean!\"\n\n\"Shapeshifting does a marvellous job at removing stains,\" the Nymph explained.\n\n\"And I was just overseeing my boys!\" Faye exclaimed with a cheerful grin.\n\n\"There are other men here too?\" Helene asked, looking at the petite sprite with curiosity.\n\nFaye shook her head, making her purple hair flutter around her face. \"Oh, no, that's just my name for the maintenance robots!\" She stepped closer and wrapped her arms around Helene's waist. \"Welcome aboard the ship! I keep an eye on everything around here, so if you ever need help, just call 'Faye!' and I'll be right there!\"\n\n\"I'll remember that, thank you,\" Helene replied, hugging the diminutive sprite back.\n\n\"Are the twins okay?\" John asked, glancing towards the door. \"I'll go give them a hand...\"\n\nDana and Rachel shot a guilty look at each other. \"No, don't move a muscle. We'll be right back!\" the brunette called out as they returned to the kitchen.\n\nThey returned a minute later with more plates full of seafood, followed by Irillith and Tashana who brought out the last of the meal. \n\n\"You look exactly the same!\" Helene gasped, eyes darting from one Maliri girl to another.\n\nThe twins smiled as they put down the food, then walked over to meet her. \"We're sisters... twins,\" Tashana explained. \"I'm Tashana and this is Irillith.\"\n\n\"Have you never heard of twins before?\" Irillith asked, as they both greeted Helene with a friendly embrace.\n\nShe shook her head. \"No! I didn't know such a thing was possible... Don't people get confused which of you is which?\"\n\nThe sisters shared a mischievous smile. \"They used to when we were younger,\" Tashana replied. Irillith shrugged and continued, \"Everyone here seems to be able to tell us apart easily enough.\"\n\nJohn placed his hand on Helene's lower back and asked, \"Are you feeling hungry? The twins are excellent chefs, so I'd definitely recommend trying a bit of everything they've prepared.\"\n\nHelene glanced back at the spread on the table, her eyes widening. \"We normally just put whatever the fishermen catch in a stew... this all looks amazing!\"\n\nIn honour of the new arrival, the girls just took random seats, making sure that Helene was able to sit next to John. Jade took the seat beside her, much to Helene's delight, and the two were soon chattering away. The Nymph took some time to carefully explain what all the dishes were - with a little guidance from the twins, Helene hanging on her every word.\n\nSeeing that their guest was quite happy, John glanced around the table and asked, \"How's the refit going with the Raptor and Valkyrie?\"\n\n\"We did the Raptor first,\" Sakura replied, then frowned as she added, \"I got outvoted!\"\n\n\"The Raptor was quickest and easiest to upgrade,\" Faye explained, with a conciliatory smile at the Asian girl. \"All of us worked on that one together and we were done in twenty minutes. The Valkyrie is a bit awkward to access in some places because of its height, so my boys are wrapping that up while we have lunch.\"\n\n\"That's great news,\" John said, nodding his thanks. \"We're going to need as many big guns as possible tomorrow.\" He glanced over at the Latina and continued, \"How's the battle planning coming along?\"\n\n\"I'm reviewing our footage from the Battle of Regulus at the moment, but I'll start work on projections this afternoon,\" Calara replied, sounding confident. \"With the Maliri fleet operating in conjunction with us, we should be able to make a significant difference.\"\n\n\"Are you going to use regular comms, or rely on telepathy?\" \n\nCalara shared a smile with Alyssa. \"We were thinking telepathy. My orders will go from me to Alyssa, then she's going to repeat everything to the House Valaden Fleet Commander as well as Almari and Ilyana. The assassins can pass any questions back to Edraele if my orders aren't clear.\" Her tone made it certain that she didn't expect that to happen.\n\nJohn nodded, having full confidence in her tactical and strategic acumen. \"I'll get in contact with Charles when we're back in Terran Space, it'd be helpful to find out what he knows about the Kintark forces.\"\n\n\"We'll cross the border at 5:23 this evening,\" Alyssa informed them. \"We should be in range of the T-Fed comms beacons about the same time.\"\n\n\"I'd like to be there for the call if that's okay,\" the Latina requested. \"It's important that we coordinate our forces for maximum effectiveness and I'd like as much detail on the Kintark fleet composition as possible.\"\n\n\"Sure, I was going to suggest it anyway,\" John agreed, giving her an appreciative smile.\n\nThey continued eating their lunch and when the meal wound down, Rachel cleared her throat and said quietly, \"There's something else we need to discuss... I finished my analysis of Helene's DNA this morning.\"\n\nJohn looked at her in surprise. \"Why didn't you say so earlier?\"\n\nThe brunette sighed, a pained expression on her face. \"I didn't want to ruin the meal.\"\n\nHelene glanced around the table, looking worried when she heard her name and everyone went quiet. \"Did I do something wrong?\"\n\nJohn clasped her hand and shook his head. \"No, not at all, honey. You don't have anything to worry about, I promise.\"\n\nRachel turned to look at Faye. \"Please can you project the DNA sequences I was studying earlier.\"\n\n\"Will do!\" the sprite replied, finding the files and preparing them for display. \n\nFour sets of double-helix spirals arced across the dining room above the table, the genetic strands rotating slowly as they hovered in the air. Most of the crew were quite familiar with these kinds of presentations from their gifted doctor, but Helene gaped at the swirling patterns, her eyes drawn by the bright colours.\n\n\"Okay, the top one is a regular Terran DNA sample; actually, it was taken from me before John decided to give me the deluxe upgrade.\" She darted a quick look his way to make sure he knew she was only teasing.\n\nJohn smiled and gestured for her to continue. \n\n\"The second is from a Brimorian. I collected a handful of shed scales from those guards on the docking platform and did some checks. The Brimorians appear to be a naturally occurring species with no genetic tampering from a Progenitor, Mael'nerak or otherwise.\"\n\n\"Okay, so who is the third set of DNA from?\" John asked, not able to really see any discernable difference between them.\n\nThe brunette glanced at their guest, giving her a sad smile. \"That came from Helene.\" She nodded to Faye and continued, \"Can you show the highlighted DNA markers please.\"\n\nThe display changed, showing highlighted sections from the top two DNA sequences, the selected data then floating down to match the relevant sections of Helene's DNA.\n\n\"She's a hybrid!\" Sakura exclaimed, whipping her head around to stare at their aquatic guest. \"Brimorians can mate with Terrans?!\"\n\nRachel paused for a moment as if not sure how to answer. \"The Abandoned are not a naturally occurring species. Helene's DNA is very special, because it shows extensive genetic tampering... but it wasn't done by a Progenitor.\"\n\n\"Who then?\" John asked, his eyes drawn to the fourth spiral.\n\n\"I recognised it straight away,\" Rachel said, her expression sombre. \"It's the final piece of the puzzle and explains the true origins of the Abandoned. The fourth sample of DNA you can see was taken from Kindralax, the Kintark Emperor's brother.\"\n\n\"The Kintark created the Abandoned?!\" John asked, gazing wide-eyed at the screen.\n\n\"Either it was the Kintark themselves, or the Brimorians traded Kintark technology so that they could do it. The fingerprints left behind by the gene-splicing revealed Kintark involvement the instant I saw it.\" She let out a heavy sigh and continued, \"Terrans were used as the base template. They were genetically modified and cross-bred with Brimorians to create a new species adaptable to life in the ocean. Helene's DNA shows only mild mutation, so I believe she is fifth generation from the original Terran test subjects.\"\n\nThere was a stunned silence in the dining room as they tried to come to terms with this discovery.\n\nJohn frowned as he looked at Rachel. \"Fifth generation... and their women are having lots of children very young... so how long ago did this start?\"\n\nThe brunette nodded, confirming that his suspicions matched her own. \"It's reasonable to conclude that Helene's subspecies was created approximately a century ago...\"\n\n\"First contact with the Brimorians!\" Calara gasped, staring wide-eyed at John. \n\n\"The colonists on the Callopean Shoals...\" John muttered, his face set in a bleak mask. \"Those poor bastards...\"\n\n\"But I thought you said that the colonists were killed when they refused to evacuate?\" Dana asked, frowning in confusion.\n\n\"That was the official story from the Admiralty...\" he replied, his mind spinning as he imagined the horrors those people must have suffered through. \"The colonists supposedly died in the fighting.\"\n\nRachel spoke softly as she said, \"But they didn't... they were abandoned...\"\n\nJohn rubbed his face with both hands, then turned to look at Helene. She looked frightened, not understanding much of what was being said, but picking up enough to realise that it concerned her and her people. He opened his arms for her. \"Come here, honey. It's okay.\"\n\nShe sat sideways across his lap and he wrapped her up in a comforting hug. \"I-I don't understand... what's making you all so sad and upset?\"\n\nHe undid her braid and began brushing his fingers though her light-green hair to calm her down. \"A long time ago, the Brimorians did something very bad to your ancestors.\"\n\nHelene nodded thoughtfully, they looked up at him with her big eyes. \"If they were bad, are they going to be punished?\" \n\nJohn's eyes narrowed. \"Yes, you can count on it.\"\n\n***\n\n\"Hoo-rah! Might of the Terran Federation!\" Staff Sergeant Clint Brannigan boomed, standing atop the fortified bunker. \"Gets me hard as steel every time!\"\n\nSergeant David Gibbons joined the power-armoured soldier in gazing out over the vast field of defensive emplacements. Tanks, mechs, and troopers were deployed throughout the maze of ferrocrete-lined trenches, heavy weapons emplacements, and bunkers that surrounded the Citadel. Heavy transports loomed low in the bright afternoon sky, the ponderous spacecraft bringing in more reinforcements by the day. Darting around those lumbering beasts of burden, Rapier fighters screamed overhead, simulating strafing runs and low-altitude evasive manoeuvres.\n\nGibbons didn't experience quite the same... response... to that sight as his friend, but he couldn't disagree that it was an extremely impressive view. \"We better head back to the barracks, I'm supposed to be meeting Wessex in ten minutes.\"\n\nBrannigan didn't immediately reply, but Gibbons could see his friend smirking during the brief radio silence.\n\n\"Well, I wouldn't want to keep you from important Sentinel Alpha business,\" the Staff Sergeant said with a straight face, before breaking into deep guffaws.\n\n\"Let's go then,\" Gibbons said gruffly, turning and vaulting off the bunker's roof, the shocks in the legs of his Sentinel armour absorbing the impact when he hit the ground.\n\nGibbons hated being the source of Brannigan's mirth, but he knew this was all his own damn fault. He got on well with Brannigan and the two sergeants had become drinking buddies since he'd been posted with the Sentinel Battalion on Terra. During a heavy session that involved an ungodly amount of Trankaran Ale, Gibbons had drunkenly confessed to his friend what he really thought about Commander Madison Wessex - leader of the Sentinel Battalion's Armoured Infantry Company. \n\nEverything would have been perfectly fine if he'd ranted about what a bitch their C.O. was and how much of a pain in the ass it was being assigned to her Company. Unfortunately, that's not what Gibbons had said at all. The big problem was that he'd drunkenly admitted to having fallen in love with her. Madison Wessex was gorgeous of course, there was no denying that; what with her athletic figure, wavy dark-brown hair, and that beautiful face with those enchanting green eyes. But there was far more to her than just a pretty face and spectacular body. She was so driven and confident; a pillar of strength that a man could lean on for support when times were hard, a fiercely loyal woman who David knew would always have his back. \n\nDistracted as he was, Gibbons nearly ran headlong into a Pulveriser Mk XII artillery tank, but managed to dodge to one side at the last moment. He slowed his pace, weaving between the unit of tracked heavy artillery being repositioned on the hill. Reaching the crest, he paused for a second to admire the amazing view of the Citadel. From this vantage point he could clearly see the two massive shield generators that kept the fortress safe from orbital bombardment. He actually pitied anyone who would dare to attempt it; the dense network of planetary defence lasers surrounding the base would annihilate any ships foolish enough to try.\n\nBrannigan clapped him on his Sentinel suit's armoured shoulder with a heavy gauntlet. \"We better not hang around. Don't want you keeping your date waiting!\"\n\nGibbons grimaced and tried to tune out his friend's braying laughter. He wouldn't have minded Brannigan's ribbing over the last couple of days about the 'happy couple', if it wasn't for the fact that Madison was quite clearly not interested in him in the slightest. She arranged long meetings with Gibbons every day, so to an outside observer, it might seem like she felt the same way as he did. While those meetings were usually tenuously related to the Sentinel Battalion, Madison always managed to find time for the real reason she wanted to speak with him.\n\nTo find out more about the Lion...\n\nCommander Wessex had confided that in her mission to excel at everything she did, she no longer considered the Sentinel Battalion to be the most elite unit in the Terran Federation. She wanted to become a lioness, one of the Lion's hand-picked squad of super soldiers.",
        "In truth, Gibbons had only met John Blake very briefly on Port Medea. The Lion had saved him and his squad from Kintark marines, then the two men had exchanged a few words on a couple of occasions. He'd said as much to the obsessed Commander, telling her that he didn't know John Blake personally. However, his commendation from the Lion had convinced her that there was more to the story, so she pumped Gibbons for all the information he could give her.\n\nAdmittedly, he loved gazing into her eyes while she spoke animatedly about her various plans, but he was acutely aware that she had him pegged squarely in the friend zone. Madison's primary objective was to get John Blake's attention; to find some way of standing out amongst the throng of Terran women clamouring for a chance to be with the galaxy's most eligible bachelor.\n\nStriding down the reverse slope of the artillery bank, his heart skipped a beat when he spotted Wessex's black suit of Sentinel armour as she jogged towards them. Turning towards Brannigan, he said, \"I'll see you later, Clint. Maybe get a beer?\"\n\n\"Only if she hasn't worn you out, Dave,\" the Staff Sergeant replied, then made obscene kissing noises as he bounded away.\n\nGibbons sighed and cut the laughing sergeant from his comm-network, before patching in with Wessex. \"Good to see you, Commander.\"\n\nShe grinned at the holo-camera then gestured for him to follow. \"Walk with me, Sergeant.\"\n\n\"Yes, Ma'am,\" he replied, striding over to fall into step beside her, his autocannon leading the way.\n\nMadison appeared lost in thought for a moment, then her eyes met his as she asked, \"What can you tell me about Alyssa? She was with the Lion on Port Medea, right?\"\n\nGibbons nodded cautiously. Okay, this was a new angle...\n\n***\n\nJohn walked along the corridor with Helene on his arm, watching as Jade skipped ahead with a spring in her step. After the grim turn the conversation had taken during lunch, he wanted to try and cheer up their guest, to make up for scaring her earlier.\n\nJade hit the button at the end of the corridor, opening the double doors that led into the Lagoon. \"You're going to love it!\" she gushed, her emerald eyes sparkling with excitement.\n\n\"Oh wow...\" Helene murmured, her eyes big as saucers as she tried to look everywhere at once. \"I don't think I've ever seen anything quite so wonderful!\"\n\nJohn guided her inside, smiling as his young companion gaped at the colourful plants and trees surrounding the artificial lake. The water was crystal clear, revealing the sandy bottom of the beautifully sculpted lagoon.\n\n\"We originally designed this for Jade,\" he explained, leading Helene along the path to the apex of the bridge. \"She loves to swim and the pool we had before was much too small. You're free to use this room whenever you like.\"\n\nThe Nymph shimmied out of her dress, then gave John a cheeky smile as she dived gracefully into the water. She barely made a splash as she plunged beneath the surface, before bobbing up a few seconds later. \"Come in!\" she urged them.\n\nHelene's eyes were on Jade's dress that she'd left discarded on the floor. She glanced down at her own aquamarine skirt and top, suddenly looking unsure.\n\n\"Clothing's entirely optional!\" Jade called out, grinning at her new friend.\n\nThe aquatic girl blushed at first, then held herself boldly and reached behind her back to unclasp her top. Soon it and her skirt were lying in a crumpled pile at her feet, leaving her standing entirely nude. \n\n\"You're a very beautiful girl,\" John said, openly admiring her gorgeous teal-hued body.\n\nAfter a brief hesitation, she lifted her shy gaze to meet his. \"Would you like to touch me?\" she asked softly.\n\n\"Very much,\" he agreed, imagining running his fingers over her well-defined curves.\n\nHer baby-blue eyes flashed with mischief as she declared. \"You'll have to catch me first!\" \n\nShe turned and dived into the lake, her lithe body arcing through the water before she burst up above the surface. Her peal of laughter echoed around the lake, joined by Jade's as the Nymph surged through the water to join her. John was temporarily forgotten in their excitement and the two girls swirled in circles, laughing and playing with carefree abandon.\n\nHe squatted down on the bridge and just watched them having fun. It was lovely to see the two girls looking so relaxed and happy, and as much as he would have liked to have stripped off then plunged in after them, he was distracted with a lot on his mind. First and foremost was this disaster in the making within the Terran Federation. Assuming they even managed to survive what promised to be a titanic battle with the Kintark, and somehow helped the Terran Federation achieve victory, he then faced what seemed like an even bigger challenge. Just what was he supposed to do about High Command in the aftermath...\n\nBuckingham and his cohort of Admirals had verged on being openly belligerent towards him the last time they spoke, making for a very tense encounter. Working with them cooperatively seemed to be untenable, but the current mess they were in was just the latest in a chain of disasters. The Dragon March conflict, the Nexus project, the failed attack on the Kintark Empire, their refusal to help the Trankarans, leaving the Kirrix borders exposed, and trying to conceal the Kintark invasion... Considering the pivotal role he imagined the Terran Federation was likely to play against the other Progenitor, John could not afford to let this debacle continue.\n\n*I think you're quickly approaching the point where you have to make a decision,* Edraele said, her voice supportive but firm. *Do you keep trying to work with High Command, or do you impose your will on them to save the Terran Federation?*\n\n*Wouldn't that make me a despot though?* he replied, lost in thought. *What right have I got to just arbitrarily sweep the Admiralty aside?*\n\n*Do you think humanity would be best served with you ruling them or your Progenitor opponent?* Edraele asked, keeping her tone neutral. \n\n*You're advocating 'might makes right' and suggesting a coup?* he asked, surprised at how little the idea shocked him. He would have been appalled at that thought a decade ago, but now it seemed like doing anything else was just postponing the inevitable. \n\nThere was a long pause before she answered. *As much as I'd love to be able to offer you some wise advice, we're entering an area where my experience is lacking. I believe that dealing with High Command will probably require some type of creative solution, of the kind that you usually excel at and which leave me shaking my head in admiration.*\n\n*Well I'm stumped at the moment,* he admitted, watching as the two water nymphs competed to see who could leap the highest out of the water. *How would your predecessor handle this situation?*\n\n*You're normally shocked when I elaborate further,* Edraele noted, her thoughts guarded. *Are you sure hearing her nefarious schemes won't alter your opinion of me?*\n\n*Perhaps your lovely daughter was correct,* John replied, with a playful undercurrent to his voice. *Maybe I do have a thing for bad girls after all...* \n\nHer laughter made him smile as it always did. *Alright, you've convinced me.* She paused for a moment to gather her thoughts. *Edraele would have gathered information on all the key players within the Admiralty to establish which factions were vying for dominance. Then she would have used bribes, blackmail, and murder to escalate the conflict between the two factions. Every time pawns were removed, she would scheme to insert one of her own, until the leaders were left isolated and alone, surrounded by puppets under her control. At that point the faction leaders could be easily disposed of and her stranglehold over the Admiralty would be complete, without once making her presence known.*\n\n*Truly diabolical...* he said, sending her a telepathic smile. *I'll take that course of action under advisement.*\n\n*Happy to be of service, My Lord,* Edraele replied, pleased to hear his mood lifting.\n\nHelene and Jade swam underneath the bridge, blowing kisses at him as they frolicked in the water. He waved back, his gaze lingering on the teal-coloured girl as she splashed the Nymph. *Now we've established how we're dealing with the Terran Federation, what do we do about the Abandoned?* he asked drily.\n\n*Unfortunately, liberating a poorly-educated slave-labour force is quite beyond my expertise,* Edraele said with a hint of humour, but tinged with plenty of regret. *A career as a vindictive tyrant furnished me with a fairly narrow skillset.*\n\n*I can't leave the Abandoned to be abused by the Brimorians, but I'm not sure they'd fare that much better if we brought them back to the Terran Federation,* John murmured, feeling completely out of his depth. *Do we have any suitable planets within the Maliri Protectorate we could give them as a homeworld?*\n\n*If you mean fully or mostly oceanic worlds? Yes, there's at least a dozen I can think of, but this won't be as simple as just handing over a planet, no matter how ideally-suited it is as a habitat. The main problem would be the total lack of infrastructure awaiting them. Depending on the numbers involved, preparing housing and even rudimentary facilities could be a major undertaking,* she replied, sounding troubled. \n\n*So you're telling me I can't just ride in there, kill the badguys, and save the day?* he asked to lighten the mood.\n\n*Sadly, I think the post-battle work will require a much lengthier investment of time and effort. We'll need to provide personnel for critical services like medical care, as well as establish some kind of leadership structure, unless you want to simply treat them as a vassal state. In all honesty, they're probably incapable of looking after their own interests at the moment, so it might be a prudent choice in the short term.*\n\nJohn rubbed his forehead as he tried to envision the logistical nightmare ahead of him, if he tried to set up the Abandoned as an independent people.\n\n*Alright, that's enough about that for now,* Alyssa said, her voice gentle but insistent. *We'll be going into battle tomorrow morning and we need you fully focused and alert. Now isn't the time to be dwelling on the Abandoned.* \n\nHe heard the click of heels and when he glanced their way, he saw Alyssa and Dana approaching. \n\n\"Time for more therapy!\" the redhead declared, with a playful gleam in her eyes.\n\nJohn straightened and looked around for Rachel, wondering what the imaginative brunette had in store for him that afternoon.\n\nDana shook her head and winked at him. \"Nah, not with Miss Smarty-Pants. This time you get some good old-fashioned Karron-girl therapy instead...\"\n\nThe two girls slid their hands into his and started leading him across the bridge, giving him a coy glance over their shoulders.\n\nJohn turned back to look down into the Lagoon, where Helene was watching him with a look of disappointment on her face. He held back from Dana and Alyssa to speak with the aquatic girl, but Jade swam up beside her and whispered something in her ear. Whatever the Nymph said seemed to perk Helene up considerably and she giggled in delight as she waved him goodbye.\n\n\"Jade's taking our mermaid under her wing; she'll take really good care of her,\" Alyssa said quietly. \"Trust us, we've all got your best interests at heart.\"\n\nJohn stopped resisting the blonde and redhead, letting them guide him into the Observatory. It didn't come as much of a surprise when they both stripped, then had him equally naked less than a minute after they'd stepped foot through the door.\n\nDana pressed the button to peel back the armour plating that covered the Observatory's crystal dome, revealing a breath-taking vista of the stars. She bounded into the middle of the circular bed, then knelt patiently as she waited for him to join her. Alyssa took her time as she sashayed over to the pillows, rearranging them with some specific purpose in mind, before joining her friend in sitting on the bed. \n\n\"Okay, we're all set,\" she said with an alluring smile, patting the bed in front of her.\n\nJohn followed her lead, sitting between the two teenagers. \"What are you two up to?\" he asked, glancing at each of them in turn.\n\nDana leaned in and gave him a tender kiss. \"No tricks. You and me need to unlock lots of awesome Progenitor tech, remember?\" \n\nAlyssa snuggled in behind him, wrapping her arms around his body. \"And I want you to relax, so you can give it your all tomorrow.\"\n\nShe lay backwards, pulling him with her so that his head was cushioned on her soft warm breasts. From this angle, he was gazing up at the stars, the spectacular view through the clear crystal window quite mesmerising. Amidst the sprawl of stars was a glorious nebula, consisting of extravagant swirls of orange reds and yellows, all that remained of a star that had gone supernova hundreds of thousands of years ago. He was suddenly struck by the almost incomprehensible age of the universe and couldn't help wondering what impact, if any, he was actually making on the future. Would stopping this other Progenitor make any real difference a thousand years from now, let alone even longer?\n\nDana's fingers encircled his shaft and before he knew it, she was engulfing him up to the hilt in her throat. He closed his eyes, focusing entirely on the snug warm grip as Dana lovingly worshipped his cock. \n\n\"There you go,\" Alyssa purred in his ear as she massaged his head with her nimble fingers. \"Forget about everything else for the moment. You're surrounded by girls who love you, that's all that really matters.\"\n\nHe relaxed in her embrace, losing himself in their gentle caresses. His climax was slow to build, but powerful when he reached the point of release, and when he finally opened his eyes again he was seeing a new set of stars.\n\n\"Did you feel it?\" Jade asked, an excited note to her voice.\n\nJohn chuckled and was about to tell her, \"Of course I did!\", when another less familiar voice spoke instead.\n\n\"He was throbbing in her throat!\" Helene exclaimed. \"How did it even fit?!\"\n\nGlancing down towards his feet, he saw the aquatic beauty kneeling behind Dana, her slender fingers gently cupping the bulge he'd made in the redhead's throat. \n\nDana stopped suckling and eased back so that he slipped from her lips. \"Just wait till you try it... you're going to love it!\"\n\nShe sat up and stretched, purposefully turning to show off the rounded curve of her cum-packed belly.\n\nHelene let out a strangled squeak, gaping in astonishment at Dana's swollen tummy. \"W-what? H-how?\" she stammered, while reaching out with a trembling hand, fingers drawn to the teenager's tautly-stretched abdomen.\n\n\"I heard you wanted to be surprised. Did you like this one?\" the redhead asked with a mischievous grin.\n\nBiting her flushed lower lip, the aquatic girl nodded, darting an excited look John's way. \"Yes, I really did...\"\n\n***\n\nGrand Prelate Melkadian rose from the intricately woven prayer mat in his quarters, having gratefully thanked the gods for their continued benevolence. He'd spent all afternoon working with the Traitor, calculating the fleet strengths the Terran Federation were likely to be able to field for the upcoming battle. To hear Admiral Norwood talk, tomorrow's battle would be a foregone conclusion. Of course Melkadian had been forced to put up with the idiotic Terran's ranting about High Command, and his idealistic talk of a new republic. Melkadian had made sure to thank Tergonoth the Tolerant, for giving him enough patience to deal with the delusional fool.\n\nThe comms interface rang with a loud chime and Melkadian hurried to his desk. \"Imperial Majesssty! How fortuitousss, I wasss just about to contact you. We've been planting a trail of Commsss Beaconsss asss you requesssted, and I-\"\n\nThe colossal draconic visage of the Kintark Emperor took up most of the holo-screen. \"I KNOW, MELKADIAN... HOW ELSE WOULD VILANDRITH AND I STAY IN COMMUNICATION?\" he rumbled, his bass voice muted to a dull roar by the comms interface. \"TOMORROW WILL MARK A GLORIOUS DAY IN THE HISTORY OF THE EMPIRE. WE SHALL CUT THE HEAD OFF THE TERRAN FEDERATION SNAKE, FOR ALL OUR LOYAL CITIZENS TO SEE.\"\n\nMelkadian bowed respectfully. \"Thisss victory will sssee you immortalisssed in the legendsss of the Kintark... you will be revered asss a god made flesssh, Imperial Majesssty.\"\n\nThe Emperor's maw lifted into a dangerous smile, revealing rows of enormous fangs. \"AND WHAT MONIKER WOULD YOU SEE ME ADOPT AS I JOIN THE PANTHEON OF THE GODS, MELKADIAN? BALEDRANAX THE WISE? BALEDRANAX THE CONQUEROR?\" \n\n\"Isss there a way of incorporating both in the title, Imperial Majesssty?\" Melkadian inquired respectfully. \"They are equally fitting after all...\" \n\nThose huge reptilian eyes narrowed in disapproval. \"YOUR DEFERENCE BORDERS ON OBSEQUIOUSNESS, GRAND PRELATE, AND I HAVE NO USE FOR SERVILE LACKEYS. YOU HOLD YOUR POSITION BECAUSE OF YOUR COMPETENCE, NOT BECAUSE I NEED MY EGO STROKED.\"\n\nMelkadian bowed again. \"Pleassse forgive me, Imperial Majesssty. I meant no disssressspect.\"\n\nBaledranax sighed, his breath whistling through his teeth like wind howling through a mountain pass. \"IT IS I WHO SHOULD APOLOGISE, MELKADIAN. I CHAFE WITH IMPATIENCE AS I AWAIT THE BATTLE TOMORROW.\"\n\nThe Grand Prelate straightened and shook his head. \"There are no apologiesss necesssary, Imperial Majesssty. It isss ssstrange to think that tomorrow we will finally sssee the culmination of all our planning. I must confesss to being asss equally eager to sssee the battle commence, ssso I fully underssstand what you are feeling.\" He cocked his head to one side. \"Have you had a chance to review the battle ssstrategy I drew up with the traitor?\"\n\n\"INDEED I HAVE. I SAW YOUR ADDITIONAL NOTES ON YOUR PLANS FOR OLYMPUS SHIPYARD AND AGREE WHOLEHEARTEDLY,\" the Emperor stated, a glimmer of amusement in his huge eyes. \"HOWEVER, I WISH TO MAKE SOME ALTERATIONS TO THE ATTACK ON TERRA ITSELF.\" \n\nMelkadian nodded. \"Of courssse, Imperial Majesssty. Name them and we will make the necesssary adaptationsss to our plansss.\"\n\nBaledranax began to outline the corrections he wished to make and the Grand Prelate's eyes widened as he listened. \n\n\"That'sss inssspired, Imperial Majesty!\" Melkadian gushed. When he saw the Emperor view him with suspicion, he quickly waved his hands. \"No, I mean it, I ssswear! The psssychological ssshockwave this will sssend through the Terran Federation will crusssh their morale! Our sssuccesssful occupation will be a mere technicality!\"\n\n\"I AM GLAD YOU APPROVE, MELKADIAN,\" the emperor boomed with a deep chuckle of amusement, his smile widening even further.\n\n***\n\nJohn settled into his Command Chair, as Alyssa took her place to his right at the Executive Officer's station. \"How long until we reach the border?\" he asked the purple sprite sitting on his console, while studying the Sector Map floating in the centre of the Bridge.\n\n\"Three minutes, John!\" Faye replied, giving him a bright smile. \"I've picked up the Terran defence fleet on our long-range sensors. We're in range to hail them.\"\n\n\"Are we close enough to the T-Fed comms beacons to pick up a signal yet?\"\n\nShe shook her head, purple hair moving in a flowing wave as it framed her elfin face. \"Not quite yet, but very soon. Going by past experiences, I suspect we'll receive a deluge of messages the moment we're in range. I'm allocating ten of my avatars to work on reviewing them to search for anything urgent, while the other two monitor the news networks.\"\n\n\"Excellent. Let me know if you find anything important,\" he replied, brow creasing with worry. \"The main priority is finding out more information on the Kintark or the Kirrix threats.\"\n\n\"Of course, I've set my search parameters accordingly!\" she replied, her dimples showing as she beamed at him. ",
        "\"Okay, please hail the border fleet on a secure comm channel,\" he requested, turning his attention to the holo-screen.\n\nIt only took a couple of seconds for the call to be connected and a young communications officer appeared, his face lit up with excitement. \"I-I can't believe it...\" he stammered, looking at John in awe. Shaking off his shock, he continued, \"It's an honour to speak with you, Vice Admiral Blake! How can I be of service?\"\n\n\"I believe Admiral Morgan spoke with a Maliri Fleet Commander late last night. I'd like to speak with him if possible, please,\" John asked politely.\n\n\"Right away, Sir!\" the lieutenant replied, snapping off a hasty salute.\n\nThe holo-screen image flickered a few seconds later and a worried man in an Admiral's uniform appeared before them, seated in what appeared to be his Ready Room. \"Thank God you're here!\" Morgan blurted out, his anxiety overriding his usual politeness. \"I've been worried sick!\"\n\n\"Thank you for granting passage to Lilyana and her fleet, Admiral Morgan,\" John said, giving him a grateful smile. \"You could have made that very awkward.\"\n\nMorgan gnawed his lower lip for a second. \"It was a lot to ask... Letting an alien warfleet sail unopposed through Federation space could torpedo my career!\"\n\n\"If you hadn't let them through, there'd be no Terran Federation left to have a career with,\" John said quietly. \n\nThat did little to settle the Admiral's nerves. \"What the hell's going on? It can't be that bad, surely?\"\n\nJohn took a deep breath, then replied, \"I'm afraid it is. The Kintark have launched what appears to be a massive invasion fleet for Terra; I sent the Maliri ahead to help defend the homeworld and that's where we're headed too. The battle's tomorrow.\"\n\nMorgan gaped at him in shock, unable to believe what he was hearing. \"But that's impossible! What about the Dragon March fleet?! I've not heard a thing...\" He blinked owlishly for a moment, then balked, \"Tomorrow! You'll never make it in time!\"\n\n\"The Invictus is six times faster than a Terran ship... you'll see for yourself when we're in your sensor range. Don't worry, we'll get there in time,\" John replied, although he wasn't anywhere near as confident as his tone implied.\n\nThe Admiral smiled, looking greatly relieved. \"Well thank God for you, John! Devereux wasn't wrong, you really are the Pride of the Federation!\" He hesitated for a second, then added, \"You really made an alliance with the Maliri?!\"\n\nJohn nodded, allowing himself a smile of his own. \"I'm close friends with their leaders, and I know we can trust them. We're really going to need their help for the battle tomorrow.\"\n\nMorgan frowned with frustration. \"I just wish we were fast enough to join you as well... I feel so useless stuck out here.\" His frown deepened as he continued, \"The Kintark invasion... it must be why Vice-Admiral Ling's fleet was recalled from this border to the Core Worlds.\"\n\n\"From what we've gathered so far, all the Federation fleets have been recalled... from every border. Yours is the only exception,\" John explained.\n\nThe Admiral grimaced, his mouth twisted with distaste. \"Yes, I suspect I know why...\"\n\nFaye suddenly gasped, her face frozen in horror. \"Oh no!\"\n\nJohn turned to her and asked insistently, \"What is it?\"\n\n\"Jehanna! She's gone missing!\" the purple sprite exclaimed, her face stricken with anguish.\n\nJohn's heart lurched in his chest and the armrests of his chair creaked as he clamped down on them with both hands. His eyes snapped back to the holo-screen and he said, \"Sorry, Admiral, I've got to go.\"\n\nMorgan nodded his understanding. \"Thanks for the courtesy call. I wish you the best of luck for the battle... we're all counting on you, John.\"\n\nNodding to the Terran Federation officer before he closed the call, John reached out to grasp Faye's hand. \"How do you know, Faye? What happened?\"\n\nHer face was tense with worry as she turned to the holo-screen. \"We got this urgent message from Avery Gibson; he's Jehanna's boss... He sent it three days ago!\"\n\nThe holo-screen flickered, replaying the recorded message. \n\nThe lean middle-aged man looked distraught as he stared at the camera. \"I'm trying to get hold of John Blake, the Lion... it's about Jehanna... I-\" his voice trailed away and he gulped down the lump in his throat as he made a visible effort to pull himself together. \n\n\"My name's Avery Gibson, I'm Editor-in-Chief at TFNN. My Lead Anchor, Jehanna Elani, has gone missing! She went to investigate a lead on the Nymph story... she arranged to meet a contact by the name of Peterson in a car park beneath the Balcova hotel. She was supposed to check in after the meeting, but there was no call... something happened to her... I think she was abducted last night!\"\n\nHe ran his hand through his hair, eyes frantic as he blurted out, \"I warned her not to take any risks, but she was adamant! She wanted to do that story for you! Please help, you've got to find her!\" \n\nFaye ended the message, then turned to face John. \"He's called every day since then. She's still missing and from what Avery's found out from the police investigation, they suspect a kidnapping.\" Her expression darkened as she added, \"Witnesses also heard gunshots just before she disappeared...\"\n\nAlyssa reached over and clasped John's hand, her expression fraught with worry. \"You don't think she's...?\"\n\nThe sinking feeling in John's chest got a hundred times worse. \"What else can you tell us, Faye? Did Avery give you any more details?\"\n\n\"Apparently the police tried to check the camera footage in the garage, but all the recordings were wiped, including the archived backups!\" the purple girl explained, her luminous eyes tense with worry. \"They checked the street cameras surrounding the hotel, but they'd been wiped too! The whole area was under a surveillance blackout!\"\n\n\"She's still alive,\" Sakura said assertively as she stepped out of the grav-tube, followed by the rest of the girls except Jade and Helene. When John turned his chair to look her way, she walked up the steps towards him and continued, \"Alyssa just filled us in. It wasn't some crazed stalker that took Jehanna. Pulling off that kind of blanket security lockdown takes specialist skills.\"\n\nIrillith nodded as she said, \"You'd need to remote wipe the camera feeds, from both hotel security and municipal security, then you'd have to track down their off-site archive facilities, hack them, and make sure the backup footage was erased.\"\n\n\"There'd be a tight timeframe too,\" Sakura agreed. \"You'd need to neutralise the cam footage just before your operatives were in place for the abduction, to avoid anyone investigating broken cam-feeds. You wouldn't be able to wait until after she was taken to retro-actively delete the files, in case the alarm was raised too quickly and the footage was seen before you had a chance to erase it.\"\n\n\"Maybe a team of kidnappers working together?\" Tashana suggested.\n\nSakura shook her head and gazed into John's eyes. \"My gut tells me this was a Federation Internal-Security operation. After they went to all this trouble to abduct Jehanna, they wouldn't just kill her... I think she's probably still alive, perhaps being interrogated.\"\n\nAlyssa looked deeply troubled as she said, \"Jehanna was running loads of pro-Lion propaganda pieces. She must have really pissed someone off in High Command.\"\n\nJohn's eyes got cold and hard. \"I warned those fuckers... If Buckingham or any of his cronies were behind this, they're going to wish they were dead.\" His gaze snapped to Irillith. \"Alright, the chains come off. If they want to try to fuck with us, we'll show them what happens. I want you to bust High Command security wide open! I want to know what happened to Jehanna, what happened with the Abandoned colonists, what they know about the Kintark invasion... all of it. I want all the dirt on Buckingham you can gather... anything you can find... and I don't give a fuck if he knows about it.\"\n\nIrillith cracked her knuckles, a wicked smile on her face. \"Oh yeah... They won't know what hit them!\" She rushed off to her IntOps Station, her violet eyes glowing before she'd even taken her seat.\n\nJohn leaned forward in his seat as he looked at Sakura. \"Can you track Jehanna with her ethereal cord, like you did with Calara?\"\n\nSakura hesitated, doubt in her almond-shaped eyes. \"You'd need to load me up before I can check, although we could try using the Psi-scanner instead... but I thought you only fed Jehanna once?\"\n\n\"That's true, but isn't there some kind of link anyway?\" John asked hopefully.\n\nAlyssa shook her head, her expression full of regret. \"I don't have an empathic connection with Jehanna. It would take three times before she's permanently linked to me.\"\n\n\"I'm sure you're right, but I still want to double-check to make sure,\" John said, with obvious disappointment. \"Otherwise, we're relying on Irillith to track her down.\"\n\n\"I could just beat the information out of Buckingham!\" the blonde offered brightly. \"I suppose I could break into his mind to find out, but that won't be quite as much fun.\"\n\nJohn couldn't help imagining how frightened Jehanna must be... if she was actually still alive. \"If we can get near Buckingham, either option sounds good at this point.\"\n\n\"So what's our overall plan?\" Alyssa asked softly, squeezing John's hand. \"It seems like the shit's hitting the fan from all angles at the moment.\"\n\nHe was quiet as he considered their options. \"It seems pretty obvious to me that the Kintark are working for the other Progenitor. Even if they aren't, we can't have them at the Terran Federation's throats, so we need to eliminate them as a threat,\" he replied, his jaw clenching as he suppressed his anger. \"As soon as we finish the battle, we need to rescue Jehanna. Then when she's safe, we sort out High Command once and for all. After the dust has settled, we help the Abandoned and deal with the Brimorians.\" \n\n\"We still have the Kirrix to defend against too,\" Calara reminded him, perturbed by the wide array of threats lined up against them. \"We also have to help the Trankarans reclaim their lost worlds.\"\n\n\"I warned Chancellor Niskera telepathically that the Maliri fleet would be delayed,\" Alyssa said, gazing into John's eyes. \"We'll be adding at least three more days until they arrive, due to this diversion to Terra.\"\n\nJohn nodded, then turned to look at Calara. \"We need to keep that fleet as intact as possible... minimal casualties if you can manage it. The Trankarans desperately need their help.\"\n\nThe Latina hesitated as she said, \"I can use them far more cautiously than I'd previously intended, but it'll limit their effectiveness in the battle against the Kintark.\"\n\n\"You know our medium and long term strategic objectives; I trust you to make the best judgement call,\" he said, meeting her apprehensive brown-eyed gaze.\n\n\"Only five months left before our retirement,\" Alyssa said with the hint of a smile. \"Sounds like we're going to be very busy...\"\n\n\"Wait a second!\" Faye blurted out, a look of confusion on her elfin face. \"Something isn't making sense!\"\n\n\"About using the Maliri against the Kintark?\" John asked, looking as bewildered by her outburst as everyone else.\n\n\"No, I don't mean them, I was thinking about Jehanna!\" Faye exclaimed, turning to look at Alyssa in confusion. \"John only fed Niskera once, but you just said you're able to contact her telepathically!\"\n\n\"Yes, that's right,\" Alyssa said, nodding her confirmation, but appearing bemused at the way Faye was reacting. \"What's the problem?\"\n\nFaye looked around at the sea of bewildered faces in astonishment. \"What's the matter with all of you? Alyssa just said a girl needs to be fed three times to be permanently linked, but Niskera only took one time!\" Her luminous purple eyes flickered as she gasped, \"Oh! She's not the only one either! What about all the Maliri?! You've linked over a thousand of them to Edraele and aside from her inner circle, the vast majority were only fed once... but they're all still connected!\"\n\nAlyssa blinked, the shock behind her eyes like a light had just been switched on. \"How the fuck did we miss that?!\"\n\nJohn frowned, gazing around at the girls. \"Maybe we've subconsciously avoided thinking about it, like the way we were oblivious to the physical and mental aspects of the Change for so long.\" \n\n\"Thinking back now, I had an empathic connection to Jade after the first time too,\" the blonde said, looking thoughtful. \"I remember the mosaic portrait appearing in my mind before you'd fed her three times.\"\n\nShrugging in exasperation, John said, \"There's bound to be some kind of explanation, but I've no idea what it could be.\" \n\n\"I'll look into it,\" Rachel volunteered.\n\nHe nodded to her gratefully, then glanced around the group. \"We've got a few hours this evening for final preparations, then we should call it a night; we have an early start tomorrow morning so I want you all well-rested. We'll arrive in the Sol System just before 7:00am, so I suggest we get up an hour earlier for a pre-battle briefing and a last-minute top-up.\"\n\nThey all seemed quite happy with his plan, but Sakura met his gaze as he looked at each of them in turn. \"I'd like to practice fighting with a single blade. Would you be up for a sparring session?\" \n\n\"Training for the Valkyrie?\" John asked, receiving a nod when he guessed correctly. \"Sure, we can go over some battle tactics with the sword. I'll meet you in the Dojo in a few minutes, but I need to call Charles first.\"\n\n\"No problem, I'll see you down there,\" the Asian girl readily agreed.\n\nThe group began to disperse and Calara fell into step with John as he headed to the Ready Room. He pressed the button to open the door and gestured for her to enter. \"Now with a bit of luck, we can find out what the hell's been going on back on Terra...\"\n\n***\n\nAdmiral Charles Harris took his seat in the holographic meeting room, studying the members of High Command that were gathering for this Emergency Meeting. There were several other Admirals physically present in the room with him on Olympus Shipyard, but most were represented via holographic images. The atmosphere was tense, with everyone speculating about the purpose of the meeting. Charles glanced around the room looking for familiar faces and when he got to Admiral Cartwright, he saw that the canny logistics officer was staring right at him. \n\n\"Any idea what this is about, Aiden?\" Charles asked his colleague.\n\n\"I was hoping you might be able to tell me, Charles,\" Cartwright replied in his detached unemotional voice. \"I've heard some... disturbing rumours of late.\"\n\nCharles frowned and shook his head. \"I've had my nose to the grindstone. It's been bedlam for the last couple of weeks trying to coordinate all these civilian contractors with the refit, I haven't had time for gossip.\"\n\n\"How interesting...\" Cartwright murmured, his shrewd, penetrating gaze making Charles feel uncomfortable. \"I believe you met with Admiral Devereux shortly before her... incident. Should I believe that to be mere coincidence?\"\n\n\"Wait a minute... what happened to Devereux?!\" Charles blurted out, looking at the other Admiral in alarm.\n\nCartwright tilted his head to one side. \"Very convincing... or perhaps an artful ruse?\"\n\nBefore Charles could ask any more questions, a hologram of Fleet Admiral Buckingham strode into the room. The leader of High Command was currently in the Citadel on Terra, in a holographic meeting room identical to the one on Olympus.\n\n\"Ladies and gentlemen,\" Buckingham began, raising his arms to get the Admirals' attention. The room went silent as all eyes focused on him. \"I've called this emergency meeting to discuss some urgent business and to address the wild rumours that have been circulating of late.\"\n\nHe began to pace back and forth. \"These are dark times, my friends. The Terran Federation is beset by hostile aliens on all sides and now is the time for us to band together, for the betterment of all humanity.\" Buckingham froze and gazed out at his audience. \"The Terran Federation has been invaded by the Kintark Empire!\"\n\nThere were shocked gasps all round and Charles shared a stunned look with Cartwright.\n\n\"Why did you order a comms blackout in the Dragon March?\" Admiral Eleanor Maybridge demanded furiously rising to her feet. \"I've seen all the fleets gathering in the Sol System... Why aren't you dispatching reinforcements to Port Medea?!\"\n\nBuckingham turned to face her, his expression one of sympathy. \"You have my most sincere condolences, Eleanor. Port Medea and the defensive fleets were overwhelmed and completely destroyed with the loss of all hands.\"\n\nHer face went white as a sheet and she brought her hand to her chest as she wavered unsteady, the two Admirals helping return the horrified woman to her seat. Through his utter shock at hearing the fate of the Dragon March forces, Charles felt a sharp pang of sympathy for Admiral Maybridge; he knew her niece was stationed on Port Medea.\n\nReturning his focus to the rest of his audience, Buckingham declared, \"The Kintark invasion force is heading for Terra! I've recalled all available fleets in preparation to meet this deadly threat with the massed might of the Terran Federation. We're going to crush them in our own backyard!\"\n\nCharles didn't feel any sense of relief after solving the mystery behind the throng of fleets gathering at Olympus Shipyard; instead he felt a terrible sense of dread. The fleets had been arriving for the last few days, but it was only a four-day journey to the Dragon March from Alpha Centauri... Just how long had Buckingham known they were coming?\n\n\"When do the Kintark arrive?\" he called out loudly.\n\nBuckingham glanced at him in irritation, obviously planning to build up to that announcement. \"Tomorrow morning,\" he grudgingly admitted.\n\nThat announcement brought chaos to the meeting room as Admirals gasped, shouted, and swore, their reactions alternating from fear to outrage.\n\n\"You're only telling us now?!\" Admiral Kester roared. \"You fucking fool! What the hell are you playing at?!\"\n\nBuckingham's eyes narrowed in fury as he snapped, \"You'll keep a civil tongue in your head or I'll see you ejected from this meeting!\"\n\n\"Fuck civility, you demented old bastard!\" Kester snarled. \"You can't keep High Command in the dark, we-\"\n\nHis holographic image blinked out and the Fleet Admiral nodded his appreciation to Admiral Weber.\n\n\"Silence, all of you!\" Buckingham demanded. The indignant roar of the crowd quieted to surly mutterings as he continued, \"All precautions have been taken... We've mined the most likely approach vectors to the Sol System and we've summoned every available fleet that was close enough to Terra to arrive in time for the battle. Our forces have undergone maintenance, resupply, and rearmament at Olympus; they're all battle-ready. I have ensured that-\"\n\nAdmiral Cartwright rose to his feet. \"What happened to Devereux?\" he interrupted, his calm but frosty voice slicing through the unsettled rumbling in the meeting room.\n\nThe Fleet Admiral held himself ramrod straight. \"Lynette Devereux was conspiring with hostile aliens to overthrow High Command. I charged her with treason and she was shot while resisting arrest.\"\n\nThere were more shocked gasps, with High Command left reeling by his blunt declaration.\n\n\"I've never heard anything more absurd,\" Cartwright replied with a cold look of contempt. \"Devereux was fiercely loyal, she loved the Terran Federation.\"\n\nBuckingham shook his head, a triumphant smile on his face. \"I told her not to go running to John Blake for help, but she ignored a direct order and attempted to do so anyway! Her 'Lion of the Federation' has been in league with the Maliri all along... Devereux was plotting a coup!\" \n\nAdmiral Morgan's holographic face looked ashen. \"The Maliri... they've sent a warfleet... they're heading for Terra!\"",
        "The Fleet Admiral whirled around, his eyes bulging with a mixture of anger and fear. \"What did you say?!\"\n\nMorgan sounded sick as he replied, \"A Maliri warfleet crossed the Brimorian border late last night. They were followed by John Blake, who left the Brimorian Enclave and entered Terran Space an hour ago.\"\n\nBuckingham gaped at the man in disbelief. \"You willingly permitted an alien warfleet to enter Federation territory?! You're either grossly incompetent or part of this conspiracy!\"\n\nEyes narrowing in anger, Morgan shook his head, \"The Maliri had a message from the Lion requesting safe passage! John Blake confirmed he'd take full responsibility! I spoke to him earlier... he knew about the Kintark invasion; he said he was coming to help!\"\n\n\"You witless fool!\" Buckingham snarled. \"The only thing John Blake and the Maliri are here to do is help the Kintark rampage through the Sol System!\"\n\n\"But he's only helped us so far!\" Morgan objected. \"Saving Terra from that rogue AI, destroying the Kintark fleet at Regulus... He's got two Stellar Clusters for God's sake!\"\n\n\"And all the while his popularity has been soaring,\" Buckingham said condescendingly as if explaining something to a truculent child. \"Paving the way for toppling High Command and establishing himself as unopposed leader of the Terran Federation. His ascendancy would be welcomed by the unwashed masses... the half-wits would be begging him to take control!\"\n\n\"That's preposterous,\" Cartwright said, shaking his head. \"I've met the man; he isn't a threat to the Terran Federation, he's an ally.\"\n\n\"Is that so,\" Buckingham replied, his voice seething with barely controlled anger. \"Because I've met John Blake too and he threatened us after the Battle of Regulus! Ask Caldwell, Weber, or Mishra; they were all there and heard every word! Blake is from a highly-advanced hostile alien species, he openly confessed to it! If he was really an ally, why wouldn't he share all the technology he has on the Invictus? He's got Maliri weaponry installed on that Frankenstein ship of his... he used those guns to destroy a Terran battleship at Regulus!\"\n\nCharles sat in stunned silence as he listened to Buckingham twist events to fit his narrative. That Terran Battleship was manned by traitors allied with Admiral Lynton, but the Fleet Admiral was making it sound like John had fired on his own side. He wanted to stand up and object, tear apart these false accusations and defend his friend's good name... but this had come as a terrible shock and he knew he was ill-prepared. More than anything now, he needed to warn John what had transpired here. \n\nCharles felt a pang of sorrow when he thought of Admiral Devereux. He'd always admired her sense of ambition, but had always kept a wary distance, not wanting to get snared up in her political games as she chased her all-consuming desire to become Fleet Admiral. By the time he realised she was actually a close ally, it had all been too late... she'd tried to warn John herself and paid the ultimate price. \"I'll make sure your Lion avenges you, Lynette,\" he thought to himself, full of remorse.\n\nHe turned his attention back to Buckingham who was gesturing towards Admiral Caldwell. \"Edwin will have full operational command of the battle in the Sol System, directing strategy from aboard the Zeus. I will be stationed in the Citadel, where I will be closely monitoring the entire theatre of battle.\"\n\nThe atmosphere in the room had changed to sullen brooding and when Charles glanced at the other Admirals, he saw many of them darting furtive looks around too. High Command was teetering on the brink of mutiny... he could feel it, the Admirals could feel it, and Buckingham clearly knew it too. \n\n\"What happens when John Blake and the Maliri arrive... Sir,\" Admiral Connor Malone asked through gritted teeth. \"Are you really proposing we fire on him?\"\n\nBuckingham eyes gleamed with anticipation. \"Of course! With the vast firepower we've assembled at Terra, we'll obliterate Blake and his allies if he dares to show his face!\"\n\nMalone looked at him with barely controlled disdain. \"What if he arrives in the middle of the battle?\"\n\nThe Fleet Admiral rolled his eyes. \"You just heard Morgan's report... John Blake only crossed the border a couple of hours ago. Yes, the Invictus is incredibly fast, but even knowing the speed it can travel, he won't arrive here until...\" He glanced at Mishra. \"Have you got an estimate?\"\n\n\"Nav-Comp predictions put his ETA at 12:30 tomorrow afternoon,\" she replied, studying a holo-reader.\n\nBuckingham's mouth twisted into a sneer. \"That's six hours after the battle with the Kintark is predicted to commence! We'll crush the alien invaders and prove once and for all who is the dominant power in the galaxy. With the Kintark threat dispensed with, we can stop for lunch, then bring all our guns to bear on Blake and his Maliri lackeys!\"\n\nWeber laughed at his feeble joke but was alone in doing so. \n\nBuckingham turned his attention back to the rest of his audience and declared, \"We are fighting for the future of humanity everyone! I wish you the best of fortune in the battle to come. For the Glory of Terra!\"\n\nA handful of Admirals half-heartedly mumbled the battlecry, but everyone else stayed mute in appalled silence. Buckingham frowned, having hoped for a rallying moment to leave the meeting on a high note.\n\n\"Full mission briefings will be provided immediately after this meeting. You're dismissed,\" he grumbled, before turning and striding from the meeting room.\n\nThe lights went up in the room and holograms of the officers flickered before being shut down. That left Charles with Admirals Aiden Cartwright, Connor Malone, Aerie Malone, and Miriam Poznanski, who all looked just as shellshocked as he felt. They filed out of the meeting room, sharing worried glances, but knowing that they were undoubtedly being monitored.\n\nAs Connor Malone walked past he whispered under his breath, \"We need to talk... I'll be in touch.\"\n\nCharles did his best not to react and walked wearily back to his office. He didn't have to fake his sudden sense of exhaustion; he felt like he'd aged ten years in less than ten minutes...\n\n***\n\nJohn frowned at the image of the Terran Federation insignia. \"It's no use, I'm not able to contact anybody! It looks like we're being blocked from sending out messages via the comms beacons.\"\n\nCalara shared a grim frown with him. \"Shutting us out of the Terran Federation Communications Network is a drastic step. How aggressively confrontational do you think High Command is going to be?\"\n\n\"Short of firing on us you mean?\" John asked, with a heavy sigh. \"After the award ceremony I thought we'd established a reasonable working relationship. I should have known there was a problem when Buckingham, Devereux, and the others were missing from the reception afterwards. If I'd known it was going to get this bad, I would've tackled the situation weeks ago.\"\n\n\"But what do we do if they do fire on us?\" Calara persisted, her eyes tense with worry. \"John... I can't fire on Terran forces!\"\n\nHe put his arms around her waist and giving her a hug. \"We'll just have to pray it doesn't come to that.\" \n\n*Irillith's hacking the comms network,* Alyssa informed him. *She'll be done shortly.*\n\n*Okay, thanks for letting me know,* John replied, before turning his attention back to the brunette. \"At least your Dad's clear of this fight,\" he said, stroking Calara's back. \"Mateo's with him on the Damocles isn't he?\"\n\nThe Latina nodded, then stiffened with a sharp intake of breath. \"Eduardo! He's patrolling the Ashanath border on the battleship Orion! He might have been recalled to defend Terra!\"\n\nJohn look up at her in concern. \"If he is, we'll have to take steps to protect him.\"\n\nShe hugged him back. \"Thank you!\"\n\nThe comm-interface chimed and Irillith's glowing face appeared in the display. \"Hello, John.\"\n\nHe released Calara and smiled at the cyber-realm representation of the gorgeous Maliri hacker. \"Alyssa said you've been busy.\"\n\nShe returned his smile and nodded. \"I've subverted the T-Fed comms beacons so you can now send covert messages without being tracked or having logs recorded. I also embedded a carrier signal into the message to project white noise, which will block audio pickup for electronic devices. Even if there are any bugs in Admiral Harris' office, anything you say to him will just be between the two of you.\"\n\n\"Fantastic work as usual, thanks honey,\" John replied, smiling at her appreciatively.\n\nIrillith blew him a kiss, a playful twinkle in her violet eyes. \"I live to serve, My Lord.\" She waved goodbye and added, \"I've routed the call through; it should connect any moment.\"\n\nHer beautiful face disappeared from view and was replaced by the Terran Federation insignia. That in turn melted away a couple of seconds later, and John's old Commanding Officer appeared, looking drawn and haggard.\n\n\"Everything's gone to hell, John,\" Charles said quietly, too numb with shock to even be surprised that his old friend had managed to get through to him. \"Even you can't fix this mess...\"\n\nJohn leaned forward, his voice low with an uncharacteristic edge to it. \"Tell me everything, Charles.\"\n\nShaking his head, Charles gazed at the screen and let out a humourless laugh. \"Where do I even start...?\"\n\n\"This channel's secure... you don't have to worry about being bugged,\" John said, worried for his old friend. \"I already know about the Kintark invasion; that they'll be laying siege to Terra tomorrow. Is there anything else?\" \n\n\"Devereux's dead... she got shot resisting arrest for treason,\" Charles replied, his features twisted with sorrow.\n\nCalara gasped, her hand going to her mouth. \"No!\"\n\n\"Fuck me...\" John muttered slumping back in his chair.\n\nRunning his hand through his hair, Charles let out a mournful sigh. \"She came to see me, just before... we spoke in secret and she told me she was trying to help you all along. I didn't realise it at the time, but she must have already known about the Kintark invasion. She attempted to contact the Maliri and try to warn you what was coming, so Buckingham turned on her.\"\n\nJohn felt a surge of guilt that quickly transformed into white-hot fury. \"That bastard's done! Once we've dealt with the Kintark, I'm taking him down!\"\n\nCharles shook his head, a distraught expression on his face. \"Buckingham just addressed High Command... he accused you of planning a coup with Devereux and the Maliri! He said you won't make it back in time for the battle... that you'll miss it by hours! He's going to ambush you and the Maliri when you arrive at Terra!\"\n\nJohn shared a panic-stricken look with Calara before turning back to Charles. \"What time are they expecting the Kintark fleet to arrive?!\"\n\n\"They're predicting 6:30 tomorrow morning, but I don't think they know for certain...\" Charles replied, his face pale. \"The Kintark have been destroying comms beacons all the way from the Dragon March...\" \n\nJohn inhaled deeply before blowing out his breath as he tried to keep himself calm. \"We won't get there until 7:00. You'll have to hold the fort for thirty minutes until the cavalry arrives.\"\n\n\"I'm not sure there'll be much left by then,\" Charles muttered, looking deflated. \"We were given briefing notes after the meeting; I've seen the size of the armada the Kintark are sending against us and they've got upgraded shields too! Buckingham might have recalled all the fleets to the Sol System, but I don't think it'll be enough. The Kintark destroyed Port Medea and wiped out the entire Dragon March fleet! They're out for blood!\"\n\nCalara gaped at him in shock. \"Port Medea was a major strategic asset... destroying it doesn't make any sense!\"\n\n\"Charles is right... the Kintark aren't planning on fighting a protracted war,\" John's said, his brow furrowed with concern. \"They want to end this once and for all.\"\n\nThe Latina nodded, trying to put aside her feelings of disbelief. \"I'll take that into account with my planning... the Kintark might behave differently than I'd originally anticipated.\"\n\n\"Charles, send us all the data you've got,\" John requested firmly. \"Calara's going to review it all and come up with a battle strategy for tomorrow.\" He hesitated for a moment, then added, \"Do you think Buckingham's forces would actually fire on us?\"\n\nCharles had a pained look in his eyes as he shrugged helplessly. \"He seems to hate you with a passion. I'm sure he'd give the order in a heartbeat, but whether anyone would follow that order is a different question altogether. High Command is on the verge of mutiny, but all the opposition to Buckingham was rallied behind Devereux. Now she's gone... I honestly don't know.\"\n\n\"What about the crews in your upgraded ships?\" John asked, with a pensive frown. \"Who are they loyal to?\"\n\n\"Nearly all of them fought in the Battle of Regulus,\" Charles replied, cheering up a little. \"I doubt any of them would turn on you, not after you saved all their lives.\"\n\n\"That's something at least,\" John said, glad to have something to be optimistic about. \"Is the refit complete?\"\n\nThe older man actually looked relieved. \"The entire fleet is almost fully operational, but they were still classed as undergoing a refit when Buckingham started recalling his forces to Terra. All the upgraded ships are still stationed in the drydock, getting refuelled and having ordnance loaded.\" He barked a short laugh and continued, \"I was cursing Henry Voss just over a week ago, but if it wasn't for him and his army of technicians, we'd have never got the fleet upgraded in time.\"\n\n\"Do whatever you can to keep that fleet based at Olympus,\" Calara insisted, before looking quizzically at the weary Admiral as he nodded his agreement. \"Have you got any other fleet assets at the shipyard? What about all those Kintark ships we captured at Regulus?\"\n\nCharles hesitated then shook his head. \"Most of those ships were stripped of heatsinks, so their gun batteries are unusable. Besides, we don't have crews trained to man Kintark vessels.\" He frowned and tilted his head back, lost in thought as he considered the rest of the vessels languishing in the Shipyard. \"Aside from that, there's not much else; perhaps a handful of ships too badly damaged to be repaired... oh and the Nexus fleet, but they've been mothballed. No one wanted to go near ships that were commandeered by a psychotic AI.\"\n\nThe Latina leaned forward, a ferocious gleam in her eyes. \"We need those ships spaceworthy!\"\n\n\"Which ones?\" Charles asked her in confusion.\n\n\"All of them...\" Calara insisted, her mind whirring.\n\n***\n\nAdmiral Morgan sat in silence behind his desk, gazing despondently at the stars through the long window that flanked his Ready Room. He'd been fiercely loyal to the Terran Federation for over twenty-five years of service and this was the first day he'd ever seriously considered tendering his resignation. The bedrock to his faith in the military had been his respect for the chain of command, but after what he'd heard that evening, his respect for the Fleet Admiral was in tatters.\n\nAs he was mulling over that stark realisation, the door swished open and Commodore Redding strode in without preamble. Morgan glanced his way, shocked that the other man would barge into his Ready Room like that, but his rebuke died on his lips when he saw the look of devastation on the man's face. \"What on Terra happened, Commodore?!\"\n\nRedding tried to speak, but he couldn't seem to find his voice. He picked up a remote off the table and pressed a button, activating a holo-screen. Pressing several more buttons, the image coalesced into the familiar sight of the TFNN newsdesk as he began the playback. \n\nBill Armstrong the Lead Anchor was looking panicked and dishevelled, a far cry from his usual coifed composure. \"-leaked footage from the Outer Rim!\" the reporter said urgently, staring into the camera. \"We don't know how much longer we'll be able to stay on air, Federation troops are storming the building!\"\n\nHe glanced fearfully at the wall behind him where several video feeds were prominently displayed. \"I say again... sources have confirmed that Terran Federation fleets have abandoned the borders! The Kirrix have attacked multiple colonies!\"\n\n\"Oh my God...\" Morgan gasped in horror, staring at the video images on the back wall of the TFNN studio.\n\nThe quality of the footage varied dramatically. Some was a mix of shaky amateur photography, like the video showing Kirrix hive ships dropping through the clouds as they made planetfall, and there was feed from static street cameras, tracking ochre-coloured insectoid forces marching down streets. The contrast between the two was striking, making the alien invasion seem very stark and horrifyingly real. Each set of video footage was obviously authentic and had been deliberately left uncensored for the public to see it in all its shocking glory. \n\nMorgan gaped at one nightmarish video stream after another, the first he watched showing terrified civilians running from insectoid troops, only to be shot in the back as they attempted to flee. When the injured were dragged away as prisoners, he knew their blood-curdling screams of terror would haunt him to the grave. The video on the screen to the right was even worse, with police and militia units shown battling the Kirrix in desperate firefights, then the Terran forces committing suicide rather than be taken alive. He finally turned away after he saw a young militiaman sob with fear and raise a pistol to his own temple before blowing his brains out. \n\nBill Armstrong was trembling as he tried to focus on the camera. \"We know the following worlds have been hit: Menganus IV, Tasmaris Prime, Karron, Valia Gate, Carolus III, Brecken's World, and...\" \n\nHis voice trailed away as he darted a frightened glance to his right. There were frantic shouts in the background, then the sharp burst of an assault rifle followed by a shrill scream. The holo-image suddenly went blank and a multi-coloured test screen replaced the frantic scenes in the TFNN studio.\n\nMorgan turned to stare at his colleague in shock as he remembered Redding had family on one of those doomed worlds. \"Oh God!... Carolus III... I'm so sorry, Doug!\"\n\nCommodore Redding's face was a mask of anguish. \"Where the fuck was the fleet?! How could they abandon those planets to the Kirrix?!\"\n\nAdmiral Morgan slumped back in his chair, his own expression appalled as he muttered bitterly, \"We should have been there to stop them...\"\n\n***\n\nLieutenant Commander Ryan Murphy strode down the corridor with his helmet tucked under his arm, still wearing his flight suit from a long day spent in a Claymore. The cockpit might have been atmospherically adjusted for comfort, but after nine hours of intense training, his flight suit was dank with sweat. He'd barely set foot outside the cockpit when he received the order to meet Captain Lewis in his office and as much as he longed for shower and bed, orders were orders.\n\n\"Leprechaun!\" a young woman called out from behind him, sounding out of breath. \"Wait a second!\"\n\nMurphy recognised the voice as belonging to First Lieutenant Abbott, one of the rookies in his wing. He turned around to watch her run to catch up. \"Can it wait, Lieutenant?\"\n\nAbbott grinned at him and blurted out, \"I was just talking with the guys! We reckon we could feather the throttle through gate five, immediately perform a partial roll then hit full burn. We'd have to execute the strafing run at maximum velocity, but we wouldn't have to make any course corrections until the last couple of seconds and it'd shave at least three seconds off our best time!\"\n\nLeprechaun considered the suggestion for a moment, then gave her a rare smile, nodding his approval. \"Yeah, that might just work! Tell the guys it sounds like a great plan, we'll try it first thing tomorrow.\"",
        "The young lieutenant hesitated for a second, then asked timidly, \"Want to join us for a drink? Lincoln said he's buying.\"\n\nMurphy froze for a moment, suddenly realising just how much he'd missed that sense of camaraderie with his wingmates. \"Actually, I really would, but I need to see the Captain. Can I take a rain check?\" \n\nShe beamed a bright smile at him. \"We'll be there for an hour! You'll probably need a drink if Gator gives you a bollocking!\"\n\n\"See you later then,\" he agreed, waving her goodbye.\n\nIt didn't take him long to reach his Flight Captain's office and after knocking politely on the door, he heard his commanding officer call out for him to enter.\n\nCaptain Lewis gestured to one of the chairs facing the desk. \"Take a seat, Lieutenant Commander.\"\n\nMurphy was automatically on his guard, something in the other man's tone making the hairs stand up on the back of his neck. He sat down and studied his old flight instructor warily. \"What is it, Gator?\"\n\nCaptain Lewis sat back in his seat and steepled his fingers. \"I've seen the completion times your wing has been logging on the training course. You've managed to shave seven minutes off the previous record logged in a Rapier, and you're nearly two minutes ahead of the next best score for a Claymore.\"\n\nAllowing himself a small smile, Murphy shook his head. \"The lead's now up to two minutes, six seconds, we set a new record this evening.\"\n\nLeaning forward in his chair, Lewis fixed him with a stern gaze. \"Murphy, are you cheating?\"\n\n\"Fuck no!\" Murphy snarled, bristling with anger. \"We've been working our balls off! Anyone who says otherwise is lying and probably just jealous!\"\n\nLewis didn't seem ruffled in the slightest by the outburst. \"Yes... I've seen how many flight hours you and your wing have logged.\" He studied the younger man, knowing that the matter would have to be handled delicately. \"I've also received a complaint... or should I say... concerns have been raised.\"\n\nMurphy frowned, his mind abuzz. \"This is the first I've heard about it. No one in my wing has raised any objections with me!\"\n\n\"Nor would they,\" Lewis said quietly. \"I've spoken to all of them; they hero-worship you, Murphy.\"\n\nEyes narrowing in irritation, Murphy scowled. \"Binary...\"\n\n\"He's worried about you, Ryan... we both are,\" the Captain said, giving him a look filled with sympathy. \"What you've achieved with your new wingmates is nothing short of remarkable, but this kind of intensive training is bordering on the obsessive.\"\n\n\"They're all good people, they can handle the pressure,\" Murphy said obstinately. \"Besides, they know what's at stake... We need to be at the peak of our game both in flight discipline and aerial marksmanship! I just wish the rest of the Wing Commanders would take training their rookies just as seriously.\" \n\nLewis watched him for a long moment. \"I'll let you continue, but you need to cut back on the hours the moment any of your wing show the slightest sign of excessive fatigue.\"\n\n\"That's fine,\" Murphy agreed, fidgeting in his seat. \"Is that all, Captain?\"\n\n\"I also want you to get some counselling sessions,\" Lewis replied, his voice firm and uncompromising. \"After Regulus, you didn't-\"\n\nHe was interrupted by an insistent chime on the comms interface floating above Lewis' desk. The Captain glanced at the scrolling data, then he did a double-take, his eyes widened in horror. \n\n\"What is it, Gator?\" Murphy asked, half-rising from his seat in alarm.\n\nThe Captain froze for a moment, then rotated the holo-interface around so that the young man could see. Murphy stared at the battle plans for the defence of Terra, feeling a deathly chill wash over his body as he realised he'd be facing Kintark in battle again... in less than eight hours.\n\nMurphy rose from his chair, a bitter expression on his face. \"Still think I was training them too hard?\"\n\n***\n\nJohn stepped out of the equipping frame in the Dojo's armoury, watching Irillith as she waited for him by the door. Her face was set in a carefully controlled expression, but her angular Maliri eyes were deeply troubled.\n\nSakura gave him a quick hug and planted a tender kiss on his cheek. \"That session was really helpful, thank you.\"\n\n\"Glad it was useful,\" John said, glancing at her and smiling. \"I appreciated the distraction.\"\n\nThe Asian girl returned his smile, then gave Irillith a respectful nod before she departed through the door.\n\nJohn watched her leave, then focused his attention on the patiently waiting Maliri girl. \"I'm all yours, honey.\"\n\nIrillith was about to follow after Sakura, but she abruptly changed her mind and strode into the Dojo instead. Puzzled by her choice of destination, John followed after her, then stood to one side as she programmed a new location into the holo-suite. The wooden dojo faded into blackness along with its spectacular view of mist-shrouded Mount Daisen. When the replacement scene burst into life, John had to wince against the brightness, his eyes taking a few moments to adapt. To his surprise they now appeared to be in a beautiful meadow, with radiant sunshine beaming down on what could only be described as a glorious summer's day. \n\nThe Maliri girl tilted her head back and held out her arms, as if soaking in the heat from those rays. \"After everything I've just trawled through, I needed to get away from the darkness...\" she said softly, before lowering her arms and letting out a heavy sigh.\n\nJohn walked over and placed his hands on her hips, drawing her into a hug. \"Did you find Jehanna?\" he asked, his voice tense with worry.\n\nShe looked at him with a pained expression. \"I'm so sorry... I couldn't find anything definitive. Whoever took her must be running some kind of black-operation where they're keeping everything off the grid. I've been through the military archives on Mars, all the key T-Fed security servers, and searched through anything linked to the Admiralty. Time is accelerated in the cyber-realm and I've just spent the equivalent of fifty hours ripping apart everything I could find with Buckingham's name on it.\"\n\n\"Did you get much dirt on him?\" John asked tersely.\n\n\"Not much more than hints and rumours,\" she replied with a frustrated scowl. \"He's definitely dirty, but he's also very careful and keeps anything incriminating off the network. Luckily for us, Admiral Weber isn't quite so meticulous and he's been acting as Buckingham's go-to-guy. I've seen a few veiled references to something called 'Tartarus' in Admiral Weber's data logs, but he's never gone into any detail. I sent off some data-probes to widen the search and they traced more references to Tartarus in private messages between special forces troopers... I think it might be some kind of secret base.\" \n\n\"Any way we can track it down?\" John asked, ears pricking up.\n\n\"Not from what I've uncovered so far, but I've got some ideas to help narrow the search. I need to discuss it with Sakura and Calara, as I think their experience with Mikaboshi might come in handy.\" Sensing John's disappointment, she added, \"I did find something else that Buckingham was involved with... it's unrelated to Jehanna, but worrying nonetheless. Do you remember Calara was trying to track the Nymphs by checking out their history?\"\n\n\"Yeah, but she ran into a brick wall. It was all locked-up with Admiral-grade security clearance,\" John replied, before frowning in irritation. \"Shit! I meant to ask Charles to look into that.\"\n\n\"There's no need,\" Irillith replied, shaking her head. \"That information was supposedly classified as top secret fifty years ago, but the timestamp was fabricated. Those records were sealed only last week... it was authorised by Fleet Admiral Buckingham himself!\"\n\n\"Why would he be interested in the Lenarrans?\" John asked, shocked that Buckingham would get involved.\n\nIrillith met his startled gaze with one of certainty. \"Because you are? You did broadcast a public appeal asking for leads on the Nymphs... In any case, both he and Weber have been actively trying to track down any living Nymphs. Weber sent a report to Buckingham listing the names of citizens who apparently had a Nymph in their possession. I cross-checked and all four previous owners have just had unfortunate accidents and are now dead...\"\n\n\"So those bastards must have taken them!\" John snarled, his anger flaring. \"Jehanna going missing, the Nymphs, Devereux, the Kintark, and the Kirrix... I should have put that fucker down the moment he threatened me!\"\n\n\"I think you're going to need Alyssa to tear those secrets out of him. Unfortunately for us, he's been too guarded over the network for me to be a big help,\" she said with regret. A wicked smile slowly spread across her face as she continued, \"But the military on the other hand... they place far too much trust in their cyber-security...\"\n\nIrillith smirked to herself as she remembered her assault on the Terran Federation data archives on Mars. It had been... liberating... to throw all subtlety aside and literally rip apart those data fortresses. She could only imagine the shock and horror that those server administrators must have felt, watching her demolish their pitiful defences and knowing there was nothing they could do to stop her. They had tried of course, but short of actually shutting the servers down, all their best counter-intruder applications had been like wheat before a turbo-charged threshing machine.\n\nIrillith had a look of grudging respect on her face as she said, \"Some of the things High Command's been involved in would make a Matriarch blush. The Maliri are less prone to acts of civil disobedience, so the Matriarchs have never really had to crack down on insurrections in the same way. The Terran Federation has had a long and bloody history of rebellions, and High Command is brutally efficient at ending them.\"\n\nJohn let out a heavy sigh. \"Trust me... I know.\"\n\nShe cupped his cheek and gazed into his eyes. \"The Siege of Galon Prime... I knew you were involved in that battle, so I scoured the official and unofficial reports for as much information as I could find.\"\n\nHe looked away, unable to meet her look of concern or bear the sympathy he saw there. \"Leave it in the past, Irillith...\"\n\nThe Maliri girl slipped her arms around him and pulled him into a hug. \"No, you need to hear this.\"\n\nJohn flinched and tried to pull back. \"No, I don't want to talk about it.\"\n\nIrillith's eyes narrowed and she held on tight, refusing to let him walk away. \"The sector governor might have been a despot and caused all those systems to revolt in the first place, but the rebel siege was causing widespread food shortages and starvation. Thousands of innocent civilians on Galon Prime were dying; lifting the siege was the right thing to do! High Command underestimated the size of the rebel forces... you just did what you had to do to win the battle.\" \n\nHe froze, his expression filled with pain. \"It was my idea to rush the Command Ship and take them in a boarding action. The carnage on that battleship... I've never seen anything like it! The rebels refused to surrender so we were forced to wipe them out to a man. Our forces didn't do much better... out of a complement of 300 marines, 274 were killed between that boarding action and repelling attacks on the Invictus. I lost so many friends; men and women I'd known for years...\"\n\n\"I know,\" she murmured, slowly embracing him again. \"But what happened afterwards wasn't your fault.\"\n\nJohn slowly shook his head. \"We smashed the fleet and annihilated the rebels... that set the tone for the reprisals. They killed over 200,000 rebel civilians in the orbital bombardment of Ostigrad city and that was just the start...\"\n\n\"I've read all the classified files, I know everything,\" Irillith said quietly, lifting his chin with her finger so that he'd make eye contact with her. \"High Command always intended to make an example of the rebel capital; Fleet Admiral Sutton had everything planned out in meticulous detail two weeks before you even lifted the siege. The brutality of the reprisals had nothing to do with the battle you were involved in.\" \n\n\"Wait.. what?\" John asked her in bewilderment.\n\nIrillith's tone was firm as she continued, \"Sutton was under enormous pressure at the time. Buckingham was campaigning heavily to replace him as Fleet Admiral and he wanted to make a bold move to suppress the rebellion, to show how decisive his leadership was... However, Buckingham outmanoeuvred him and started stirring up public outrage at the rampant civilian death toll. Six months after you retired, Sutton was charged with crimes against humanity and Buckingham was promoted to Fleet Admiral.\" \n\nJohn wavered, stunned by what she'd discovered. \"But I always thought...\"\n\n\"Alyssa told me why you never talked about the battle, which is why I investigated,\" she said, stroking his back soothingly. \"You did your duty and fought bravely against terrible odds, but you bear no responsibility for anything that happened to those civilians.\"\n\nJohn was quiet for a long time, then hugged her back fiercely. \"Thank you... You've no idea what a weight that is off my shoulders; I've been carrying that guilt around for years!\"\n\n*I know,* Alyssa told him, her voice swirling through his mind. \n\nIrillith gave him a tender kiss. \"I guess that's one less we owe you now,\" she said with no small amount of satisfaction.\n\n\"I'm not keeping score,\" John said, with a grateful smile. \n\nThe Maliri girl enjoyed the close embrace, then said softly, \"There's more you need to know...\"\n\nHe pulled back to study her pensive face. \"What else?\"\n\n\"I dug through everything I could find about the Brimorians, looking for clues about the Abandoned,\" she explained. \"Rachel was right... they are definitely the descendants of Terran colonists that settled on the Callopean Shoals.\"\n\nJohn nodded, not surprised to hear that confirmed. \"She made a very convincing case, it all fit together perfectly.\"\n\n\"Yes, Rachel is quite remarkable,\" Irillith agreed, before going quiet for a moment. \"John, do you remember you told us that thousands of colonists had been killed in the fighting?\"\n\n\"That's what I remember reading,\" he said, trying to recall the archived news reports. \"Obviously the colonists were still alive though, so High Command lied to keep news of their capture out of the media.\"\n\n\"That's not all they were lying about,\" the Maliri girl said, shaking her head. \"A century ago, all the Gaia-class planets in the Terran Federation had already been discovered and colonised. When the Callopean Shoals were discovered, they found a dozen systems all containing beautiful atoll-covered planets that were perfect for Terran habitation. There was a huge rush of colonists all eager to stake their claim on virgin worlds...\"\n\nJohn froze as he realised what she was leading up to. \"How many?\"\n\n\"23 state-sponsored Eve-class colony ships, each containing 10,000 colonists,\" Irillith replied in a subdued voice. \"High Command estimates place the number of colonists captured at over 264,000 when you include all the independent colonists and transport crews.\"\n\n\"How the hell did they keep that secret?!\" he asked in stunned amazement. \n\nThe Maliri girl frowned as she replied, \"Through ruthless control of the media. There were rumours of course, but they were denied or suppressed by the authorities. A handful of doggedly relentless journalists refused to give up, but they were... dealt with. Without a public outlet, the rumours quickly faded away.\"\n\n\"And since then, there's been five generations of Abandoned...\" John murmured, his eyes widening.\n\n\"That's right,\" Irillith said, nodding as she saw him began to realise the magnitude of the problem facing them. \"If we assume the Abandoned women are having upward of at least... twenty children each generation, we're looking at an unprecedented population explosion.\"\n\n\"What kind of numbers are we talking about?\" he asked with trepidation.\n\n\"I've discussed it with Rachel but there are too many variables to make any kind of precise estimates...\" She paused for a second, then fixed him with a solemn stare. \"Best guess? Maybe a billion people... with an upper limit of perhaps ten billion.\"\n\nHis eyes widened in astonishment. \"You've got to be fucking kidding me?!\"\n\n\"I wish I were...\" she replied quietly. \"Out of those initial 260,000 colonists, perhaps 50,000 might be women of early child-bearing age. Assuming no fatalities in the gene-splicing process, those first generation of women might go on to have twenty children each, birthing perhaps 500,000 second generation females. Then assuming each generation after that has twenty children, you're looking at 5 million women for the third generation, 50 million for the fourth, then 500 million for the fifth.\"\n\n\"Helene's generation...\" John murmured, astounded by the numbers involved.\n\n\"Those figures are conservative estimates,\" Irillith reminded him. \"If a larger number of women from the initial colonists were genetically modified and each generation had thirty children each, the actual numbers could be far, far higher... From what we've gathered from Helene and her sister Yasmin, the Abandoned start getting pregnant at a young age, so it's entirely plausible.\"\n\n\"Breeding a slave race...\" he muttered, sickened by the thought. \"If their population has grown that huge, they must be spread throughout the Brimorian Enclave... I can't believe they're all confined to Brimor.\"\n\n\"That's a reasonable assumption,\" she agreed. \"Even though the Abandoned are poorly educated, the Brimorians obviously find them useful as an agricultural labour-force. It would make sense to disperse your new workers to all planets where crops are grown and harvested... There's scores of oceanic worlds within Brimorian territory and they've claimed just as many continental planets which are just as viable for that kind of agriculture.\"\n\n\"I'll have to speak to Helene again and try to find out what I can about their towns or villages,\" John mused, wondering just how much the sheltered aquatic girl could tell them.\n\nIrillith gave him a sad smile. \"I found out plenty more about the Terran Federation's misdeeds, but none of it is urgent and I've dropped enough bombshells on you for one night.\"\n\nJohn glanced up at the shining holographic sun. \"I can see why you felt like you needed to cleanse yourself; I feel dirty after this conversation and not in a good way...\" He turned back to Irillith and kissed her gently. \"Thank you for looking into all that... and for Galon Prime.\"\n\n\"It was an unpleasant task, but helping you made it all worthwhile,\" she said, holding him close.\n\nThey embraced for a long moment, until the door behind them swished open, the quiet sound followed by the staccato click of heels. John turned and saw Alyssa waiting for him by the doorway, a fond smile on her lovely face.\n\nIrillith gave him a quick peck on the cheek. \"I'm heading off to bed... goodnight, John.\"\n\nJohn accompanied her to the door, then politely waved her through as he offered an arm to Alyssa. \"Bedtime for you too?\"\n\n\"In a little while,\" she replied, her smile turning coy. \"Let's head to the Lagoon...\"\n\nThey followed Irillith out into the corridor, but instead of taking his other arm, the Maliri walked ahead of them with an exaggerated sway of her hips. John was mesmerised by the sight of those two compact globes rolling in the clinging material of her dress, knowing the pleasures to be found with her luscious body. When Irillith reached the grav-tube, she turned to glance at him over her shoulder, a satisfied smirk on her face. Her bewitching spell was finally broken when she stepped inside and floated up in the blue anti-gravity field.\n\nAlyssa laughed, the wonderful melodic sound echoing down the corridor. \"You've both got one-track minds! I enjoy getting reamed as much as the next girl, but she just adores it!\"",
        "\"Perhaps I should have made Irillith my XO?\" John replied with a teasing grin.\n\nThe blonde pouted, a twinkle in her eyes. \"No way! You're welcome to bugger any girl you like in our XO meetings, but I'm not giving up that job!\" \n\n\"You have done a splendid job with recruitment,\" John conceded, pulling her into a hug. His expression turned serious as he continued, \"And you've worked wonders in taking care of your Commander. Thank you for working with Irillith to find out about Galon Prime and for prompting Rachel to help me deal with some of my issues... Yes, I know you were behind that too.\"\n\nAlyssa took a deep breath, then looked into his eyes. John saw her drop the confident mask she normally hid behind, suddenly reminding him of her true age. She was after all, a young woman thrown into a truly exceptional set of circumstances, who was desperately trying to do her best to support him in every way she knew how.\n\n\"I'm sorry it took me a while, but we got there in the end,\" she said with a soft smile. \n\n\"I love you,\" John said, meaning it with every fibre of his being.\n\nShe melted into his arms, her sensual lips answering far more eloquently than any words ever could have done. John's lips tingled as they continued to kiss and their skin almost felt like it was crackling with electricity, such was the strength of his connection to the stunning girl in his arms. When they eventually parted, he looked at her in amazement. \"We haven't had a kiss like that in a while!\"\n\nAlyssa didn't seem surprised in the slightest and actually had a playful smile on her face. \"It was Athena. That kiss was so steamy, she couldn't help herself... she wanted some of that too!\"\n\n\"That's what the tingling was about?!\" John exclaimed, remembering the last time he'd experienced that startling sensation.\n\n\"We were close to merging back then,\" the blonde explained, looking unconcerned. \"Now Athena is a part of me, she can come along for the ride if I give her permission.\"\n\n\"Was the kiss good for her too?\" John asked, intrigued at the thought.\n\nAlyssa gave him a sultry smile. \"At the moment Athena's begging me for a threesome. I'd love to take you to bed and have you fuck us both senseless, but not tonight...\" She reached down to brush her fingers across his pants, caressing his stiff shaft. \"This belongs to Jade... it's her turn.\"\n\n\"The Lagoon,\" John said in sudden understanding. \n\n\"Well the Observatory to be more specific, but the Lagoon's on the way,\" the blonde replied, clasping his hand and leading him past the grav-tube. \"Come on, we've kept that sexy little Nymph waiting long enough already!\"\n\nWhen they entered the Lagoon, John immediately spotted Jade and Helene reclining together on one of the larger sun loungers. They had been engrossed in conversation, but the Nymph paused to turn and wave to him in greeting, her face lighting up with a brilliant smile. \n\nAlyssa squeezed his hand, then gave him a parting kiss. \"While you're busy having fun, I'll go have a chat with Helene. I suppose I should find out exactly what Jade's been saying to our impressionable little ing\u00e9nue.\"\n\nShe sashayed away, brushing fingers with Jade as the two girls passed each other. John saw the momentary flicker of eye-contact between them and wondered just how much conversation he was missing out on aboard his ship.\n\n*Just girl's talk, handsome,* Alyssa replied with a teasing telepathic smile. *Pretty dresses and fluffy kittens, that kind of thing.*\n\nWhen John saw the lusty gleam in Jade's emerald eyes, he was certain that couldn't be further from the truth.\n\n\"We can talk about kittens too, Master,\" Jade purred, as she grabbed his hand and practically dragged him across the bridge. \"It feels like I've been waiting forever for this!\"\n\n\"Wait a second, Jade,\" John said, pausing half-way across. \"Did Irillith tell you about the captured Nymphs? That there might actually be some alive?\"\n\nShe paused, her face saddened. \"It sounds like they have new masters for the moment... but that is just one more in a line of many.\"\n\n\"But soon to be the last,\" John said, mouth tightening into an angry line. \"We'll free them, Jade. I promise I'll do whatever I can to keep your sisters safe.\"\n\nThe Nymph traced a finger along his jawline, her eyes full of emotion as she caressed him. \"I know you will, John... and I want them to experience the same wonder I feel every time we're together.\" She leaned in to kiss him. \"But that's a possibility for the future and right now, I want to celebrate the present with you.\"\n\nHe nodded and let her lead him across the rest of the bridge and through to the Observatory. Jade wasted no time in slipping off her dress and prowling onto the bed, before turning to crook a finger and gesture for him to follow. John was still wearing training gear from the sparring session with Sakura, so it only took him a few seconds to be as naked as the horny girl lying on the covers. He stopped to admire her for a moment, his eyes following the lighter viridian lines that emphasised the incredible contours of her succulent figure. Jade's dark-green skin had a lustrous sheen to it, with tiny flecks catching the light and making her seem to sparkle, adding to her enchanting allure.\n\n\"Perhaps I should get you warmed up first?\" John said while kneeling on the bed, as Jade eagerly spread her legs for him. He could see her glistening with arousal, her labia flushed and deliciously inviting. \"I wouldn't want to try and enter you unless I was sure you were ready for me...\"\n\nJade was about to protest that she was more than ready, but her objections turn into a throaty mewl as he began to lap away at her. She tasted of mint and he savoured her at length, making the Nymph's thighs tremble uncontrollably as he brought her off to an incredible release. \n\nShe looked down at him with hooded, lusty eyes, and crooned, \"I think I'm ready for you now, Master.\"\n\nJohn sat up and positioned himself at the entrance to her snug folds, then slowly penetrated her gloriously responsive body. Jade's internal muscles seemed to grasp him as soon as he'd pushed his broad head past her lower lips, then it felt like he was almost pulled inside by her rippling pussy.\n\n\"Oh, I've missed this so much!\" Jade gasped, wrapping her arms and legs around him and holding him tight as he bottomed out inside her.\n\nJohn held still and rested his weight on his elbows, cradling her head with his hands. \"I've missed you too, beautiful. I'm really glad we finally got a chance to talk.\"\n\nHe was about to say more, when Jade stifled his words with a kiss, shaking her head slightly as she enjoyed teasing him with her tongue. *You know me, Master. Just think for a moment before you try to apologise for starting a family with the Young Matriarchs.*\n\nJohn did as she asked, thinking about the lovely girl writhing underneath him as he enjoyed the kiss. When he finally understood her true feelings on the matter, he saw the look of profound satisfaction in the Nymph's eyes as she listened to his train of thoughts.\n\n*Yes... you couldn't have made me any happier!* she crowed, a look of pure delight on her face. *Watching you breed those beautiful girls was thrilling! It was what I'd always hoped for and so much more...* \n\nHer lovely features suddenly shadowed with a flash of regret and she lay back, breaking the kiss.\n\n\"What's the matter, Jade?\" he asked, filled with concern when he saw her get upset.\n\nShe let out a mournful sigh. \"I was thinking how incredible it would've been if you'd let me help you impregnate all those Maliri Engineers. Just imagine it, John... over a thousand of those gorgeous blue tummies swelling with your babies...\"\n\nHe couldn't help chuckling at that and gave her another kiss. *You're incorrigible. I'm still new at parenthood and four's a great start!*\n\nJade smiled as she kissed him back, her happiness rushing over their connection and swathing all his thoughts in her joy. After a while she eased back a little and asked quietly, \"Did I do the right thing bringing Helene back? I know you were very upset with me when you first met her.\"\n\nJohn nodded, while gazing into her anxious cat-like eyes. \"She's a sweet girl with a troubled past... I was powerless to resist helping her when I realised what a lovely young woman she was. Her story also helped Irillith uncover the truth about the Abandoned, so now we'll be able to help her people too. You made a good choice bringing her back to the ship.\"\n\n\"Your first wounded little fish,\" Jade said with a tender smile.\n\nChuckling, he nodded his agreement. \"No throwing this one back though!\"\n\n\"After you were so kind to her this morning, Helene's already fallen for you,\" Jade casually informed him. \n\n\"She has?!\" John asked, looking startled.\n\nThe Nymph nodded, while showering him in kisses. *Of course, Master. You promised to give her back that which the Abandoned treasure more than anything; the ability to have children. You've also been open and honest about your attraction to her. For a woman who's been shunned and viewed as a bad omen for the last seven years, your gentle affection left her thunderstruck.*\n\n*I feel bad about rushing headlong into this,* John replied, worried about doing anything to upset her. *We should slow things down a bit.*\n\n*Why?* Jade asked, genuinely puzzled. *You find her beautiful and adorable, she thinks you're handsome, kind, and the most fascinating man she's ever met. The attraction between you is magnetic! Why not give her what she wants most of all and let her carry your baby?*\n\n*It's not as simple as that, Jade,* John said with a sigh. *I could heal her and then return her to her people. She'd be able to live a normal life with her friends and family, perhaps build a relationship with one of the Abandoned men. I don't want to saddle her with all the burdens that being with me entails... If she became another lioness, she's be dragged into all the fighting... it's not fair to do that to her.*\n\nThe Nymph ceased her flurry of kisses and lay back on the bed. \"You do yourself a terrible disservice, John. Being with you isn't a burden, it's a gift.\"\n\n\"Has Alyssa recruited you to give me a pep-talk too?\" he joked with a playful smile.\n\nJade shook her head and gazed intently into his eyes. \"Rachel and Alyssa are eager to do that, but I find this self-doubt to be disappointing. Remember that I serve you voluntarily now and you have a duty to be powerful, confident, and masterful to retain my respect.\"\n\nHe gaped at her in shock, astonished that she'd speak to him that way. The thought of Jade being disappointed enough in him to consider leaving crashed through his subconscious like Nexus' ship smashing into the Quantum Annihilator on the moon. Jade's eyes flashed with concern and when John saw that momentary flicker he realised she was terrified she'd gone too far. He felt a flood of relief, but was still grateful for the lesson, no matter how shocking.\n\n\"You've been a very naughty Nymph speaking to me like that,\" he said firmly, clasping her hands and pinning them to the mattress above her head.\n\nShe squirmed underneath him, her vertically-slitted pupils flaring widely. \"Are you going to punish me, Master?\" she asked between panting breaths.\n\nHe leaned down so he was only inches away from her, then rotated his hips, grinding his pubic bone against her clit. \"I'm going to fuck you hard, but I won't reward you with any of my cum tonight... that's going in a more deserving tummy.\"\n\n\"Oh... Master,\" Jade groaned, quivering underneath him.\n\nDespite John's stern words, he knew what the Nymph really wanted and was determined to give the unflinchingly loyal girl exactly that. He began thrusting inside of her with a steady, pounding rhythm, knowing she was able to take far more punishment without so much as a bruise. She arched her back and climaxed with a keening wail, her strong muscles clenching around him as she bucked back to meet each spine-tingling impact. \n\nHe suddenly realised that he'd actually climaxed more times with Jade than any other girl on his crew, what with all those weeks spent feeding the Maliri. Jade had done all the work those times, eagerly milking his quad for him, then siphoning it into desperately needy blue stomachs. He realised he had a lot of orgasms to make up for, and he focused on driving the Nymph to repeated climaxes with no intention of finding his own release. Fucking her like this was essentially the reversal of all those loving blowjobs she'd given him and it was tremendously satisfying to see her respond to being taken this way. \n\nLosing count of her thunderous climaxes, he simply enjoyed riding such a beautiful, devoted, and loving woman. It was thrilling to fuck her statuesque body with powerful strokes and hear her respond with her ecstatic cries. He could see her love for him shining in her eyes and it made him work all the harder for her pleasure. John heard the door to the Lagoon slide open behind him, so he slowed his pace, taking Jade with languid thrusts instead. She still responded just as enthusiastically, but it was a less... animated... coupling, as John was worried about alarming their guest.\n\nJust as he suspected, Alyssa brought Helene over to the bed, the two nude girls kneeling beside the entwined couple. John released Jade's hands then sat up, while still remaining buried inside the Nymph's spectacular verdant body. \n\nHe patted Jade on her thigh. \"Take over, beautiful.\" \n\nShe did as he asked, arching her back and sliding up and down his length, using the incredibly strong muscles in her legs to control the pace. \"You feel so good, Master...\" she said with a breathy sigh.\n\nHelene was watching with a look of awe on her face, her cheeks flushed, and her breathing erratic. John took a moment to admire her spectacular body, enthralled by the exotic colouration of her skin, the blue-green hues making her affinity with the sea obvious with just a glance. With her shapely legs tucked underneath her, it was difficult to see the fins that adorned her calves, but he could easily see the delicate fins sprouting from her forearms. He couldn't help wondering if there might be an erogenous zone or two centred around those slender frills.\n\n\"Helene and I were just having a lovely conversation,\" Alyssa informed him, glancing at the aquatic girl. \"Would you like to tell John your decision?\"\n\nHelene's baby-blue eyes drifted up to meet his and she blushed but didn't shy away. \"I'd like you to be the one to heal me... if you still want to that is?\"\n\nJade froze mid-gyration, her lust-fogged emerald eyes watching him intently as she awaited his answer. \n\nJohn placed a hand on the Nymph's toned green tummy and gently stroked her. \"I'd be delighted to, Helene. I was just rewarding Jade for bringing you back to the ship and introducing us; she's been a very good girl.\" He gave the thrilled young woman a warm smile. \"Would you like to help reward her as well?\"\n\n\"I'd love to!\" Helene exclaimed, beaming at him in delight.\n\n\"Well I'm going to make Jade cum again, but I know of a way to help her enjoy it even more,\" John replied, offering the teal-skinned beauty a hand. \n\nHelene took it and let him pull her closer, but her eyes widened in shock as he gently lifted her with no apparent effort and repositioned her across Jade's excited face. \n\n\"What are you doing?!\" she blurted out, eyes flashing from him to the supine Nymph. Those big eyes widened in astonishment as Jade began to lap away at her, her long prehensile tongue lavishing Helene's soaked pussy with loving attention. The aquatic girl could only squeak in disbelief. \"Oh my gosh!\"\n\n\"There you go,\" John said with a satisfied smile. \"Now, I'd like to kiss you while we make Jade feel good.\"\n\nHelene flung her arms around his neck and kissed him passionately, panting with arousal as the Nymph gently began an intimate exploration of her body. Alyssa wasted no time in pleasuring both girls with her nimble fingers and it didn't take long for Helene to cry out as she climaxed. Her orgasm was intensified even further by the vibrations of Jade's tongue as the Nymph joined her in climactic release. \n\n\"I never knew...\" Helene murmured, gazing at John in starry-eyed wonder. \"How can it feel that good?\" \n\nHe caressed her cheek and gave her a gentle kiss on the tip of her button nose. \"I promise that won't be the last time you feel like that.\"\n\nShe giggled self-consciously, then gasped as Jade started lapping away at her again.\n\n\"She'll keep that up all night,\" John said, gazing into Helene's dazed eyes. \"You can enjoy the ride as long as you like, but whenever you want to stop, I'll heal you.\"\n\nHe smiled when he saw her indecision, truly torn between experiencing another mind-blowing orgasm or stopping to have her fertility restored. Making her mind up, she reluctantly dismounted the Nymph's glistening face. \"I want to be with you, John.\"\n\n\"Whatever you want, beautiful,\" John agreed, easing out of Jade's soaked pussy. \n\nTheir bedmates wasted no time in changing position, with the Nymph cuddling up behind John as he knelt on the bed, while Alyssa went to Helene's side. John looked at each of them in turn and he honestly couldn't tell which of the trio of girls was the most excited. Helene gazed at his throbbing cock in fascination, watching as it bobbed in time to his heartbeat, glistening with the Nymph's juices. \n\n\"Let me go get cleaned up first,\" John offered, realising how well-lubricated he was.\n\nAs he started to get up, Helene reached out to touch his arm and shook her head. \"Jade got to taste me, I'd like the chance to taste her too.\"\n\n\"Good choice,\" Alyssa praised her, putting an arm around the young woman and giving her a gentle hug. \"Jade tastes minty-fresh... she's delicious!\"\n\nHelene darted a quick smile at the Nymph who was watching over John's shoulder, then ducked down so that she was face-to-face with John's cock. Her tongue flickered out for a tentative taste, and when she liked what she found, she opened wide and did her best to engulf the head. Her mouth was snug, warm, and deliciously wet, her lips forming a tight seal around his broad girth. John groaned at the slick sensation, the groan deepening as she swirled her tongue under his shaft.\n\nJohn was already turned on, so the eager girl soon got her first sweet taste of his pre-cum. She moaned in ecstasy then wriggled forward, guiding him to the back of her mouth and into the entrance to her throat. Her muscles relaxed as she responded to the changes he was making in her body and after a moment of increased pressure, his length was soon sliding down her throat. \n\n\"Thank you for claiming her, Master!\" Jade gasped, hugging him tight. \"She's such a lovely girl, she'll make a wonderful mother for your children!\"\n\nHe smiled when he heard how thrilled the Nymph was, then gently cupped Helene's head in his hands, running his fingers through her exotic light green tresses. Her eyes were glazed as she suckled on him, lips eagerly descending down his shaft on her quest to sheath his entire length in her throat. \n\nAlyssa gave him a gentle kiss, a look of joyful relief on her face. \"You don't feel guilty!\"\n\nJohn smiled and shook his head. \"I'm helping her, you've all shown me that. It's not too late for Helene to change her mind, but for now, I can heal her body and give her back the ability to have children.\" \n\nThe blonde's eyes starting to glow as she asked, \"Would you like to know exactly what she's feeling right now?\"\n\n\"Definitely,\" he agreed, watching as Helene bobbed in his lap, her throat gripping and massaging his shaft as she encouraged him to fill her belly with his cum.\n\nAlyssa placed her fingers against Helene's temple, a contented smile appearing on her face as she experienced the aquatic girl's emotional state. Before John could ask any questions, she placed her other hand on his head, bridging the connection between them."
    ],
    "authorname": "Tefler",
    "tags": [
        "swallow",
        "cum inflation",
        "deep throat",
        "group sex",
        "psychic",
        "dragon",
        "bossfight",
        "progenitor"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-100"
}