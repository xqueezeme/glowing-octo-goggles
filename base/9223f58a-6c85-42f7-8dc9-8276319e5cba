{
    "title": "Kathryn's Question Ch. 05",
    "pages": [
        "Kathryn, leaning back against the arm of the sofa, one leg curled under her and the other on the floor, looked at me silently, knowing very well what her words intimated.\n\nEverything about her was at once heartbreakingly familiar, but also so different from what she'd once been. It went far beyond her blonde hair and more mature face and body. The change centered most in the way she looked at people, looked at me. She'd obviously seen a lot. I wondered what her study of me revealed.\n\nAt least what was going on between us was out in the open, rather than lurking behind nearly every word we'd said all day. I could thank her for that.\n\nAny red-blooded male should have jumped at an offer like this from such a beautiful, accomplished woman. Now that I had her in front of me, not staring out from the back of a book jacket or from the cold glass of a TV, I could not deny that Kathryn was more desirable than ever.\n\nEventually she turned her gaze back to the fire, drawn either by the pop of a bit of sap in the wood, or by the fact that she was now feeling embarrassed by what she'd said -- and offered.\n\nYet I was in a quandary. On one hand, I wanted to pull her to me, rip off her clothes and ravage her body, but at the same time what had happened to us over twenty years ago, not to mention the specter of my dead wife filled the wide chasm separating us. It was up to me to say something, but I just could not find the words.\n\nHer eyes still fixed on the fire, Kathryn said, \"Has too much water flowed over the dam?\"\n\n\"Certainly a lot of water has flowed over the dam, but I can't say if it's too much.\"\n\nShe looked at me, her face pensive. \"Is there any chance left for us, Robert?\"\n\nNow it was my turn to stare at the fire.\n\n\"I can't deny that I've thought of you over the years. There were times where I toyed with the idea of showing up at a book signing or something like that, but I could never do it, put myself in temptation's way like that. I couldn't do that to Ellen. Even though...\"\n\n\"Even though what?\"\n\nI drained my snifter of cognac, then poured a bit more for each of us. Kathryn picked up hers and sat patiently looking at me.\n\nI took another swallow, then looked at the fire again. \"Ellen had a very low sex drive and she had a lot of, well, hang-ups about sex. When we met in school, she told me that she didn't believe in premarital relations, but I was so in love with her that I just accepted that. It became something we didn't talk about, but it was a contentious subject. She'd do her wifely duties willingly, but I could tell she wasn't into it most of the time. She couldn't conceive, either, and I think that was a lot of the problem.\n\n\"Of course I'd heard that from a number of girls I'd dated, but after a few times out, I generally could get them to loosen up. I soon realized it was all a front. They didn't want to appear cheap.\"\n\n\"They didn't want to be thought of as sluts\" she corrected. \"That's a hard reputation to overcome. It's the main reason I didn't come home much after what happened between us. Everyone in town knew about it in less than a week, and it follows me still, I'm sure.\"\n\nI smiled. \"It didn't help that you took up the line of work you did.\"\n\nKathryn's expression was phlegmatic. \"I seemed destined for it, as I look back now. You might argue that I'm obsessive about it, but sex is something that is never far from my mind. Even after all this time I find it fascinating. I'm also good at helping people with their sexual problems. I can get them to talk. I can explain things to them so they not only understand, but start to accept that there are many ways to approach sexual problems. Our society never really teaches us anything about sex past the mechanics, and even that isn't done very much -- or well.\n\n\"How do was learn about sex? From our friends who know as little about it as we do. Most parents don't know much about sex. How can they find out? I've met hundreds of women who've had sex for years and weren't aware that they can have orgasms. How nuts is that? Especially in North America there is this culture of don't look, don't ask. It's very unhealthy. There also aren't many books on it, past Kinsey, Masters and Johnson\u2014\"\n\n\"And you.\"\n\n\"Me and Alex Comfort, okay. But let's get back to what you were saying. Cutting to the chase, you're saying that you and Ellen didn't make love much, right? How did you cope with that?\"\n\n\"I detect the doctor at work,\" I answered fondly.\n\nKathryn grinned. \"Well...yes. I guess I'm doing that, but I'm serious. How did you cope?\"\n\nI hesitated, then laughed out loud. \"Okay. You've got me. I masturbated. A lot.\"\n\n\"I'll bet you did, knowing you. What did you think about?\"\n\n\"The usual things, I guess.\"\n\n\"Naked women? Making love to a favorite celebrity? Someone you worked with?\"\n\nShe was embarrassing me and she knew it. I didn't know what her purpose was, whether she was teasing, trying to draw me out, doing research or seducing me. The atmosphere in the room suddenly seemed more charged.\n\n\"I, um, thought about you a lot.\"\n\n\"How? Doing what?\"\n\n\"Lying on that sofa in your basement, naked, and playing with yourself.\"\n\n\"That thought turns you on?\"\n\n\"Yes.\"\n\n\"Would you like me to do that now?\"\n\nMy throat was dry. \"Yes.\"\n\nKathryn stood for a moment, then returned to her place on the sofa, but this time one leg was leaning against the back of the sofa, the other remained on the floor. She'd sat this way for me many times in the past.\n\nShe had on a lovely, knee-length floral dress, lots of colours, but mostly pastel shades. It suited her coloring perfectly. She'd lost her shoes early on, and because it was summer, her legs were bare.\n\nLeaning further back, she closed her eyes and began running her hands over her body, starting with her chest and gradually circling in to her breasts where he pulled at her nipples. In a very short time, I could smell her arousal.\n\nOne hand drifted down her torso, then to her leg. Running it up the inside of her thigh, she also pushed the bottom of her dress up towards her waist. Her other hand was busy opening up the buttons at the top.\n\n\"I hate those dresses that zip up the back,\" she said in a dreamy voice. \"It's so hard to be seductive in them. You can't open them without an inelegant struggle.\"\n\n\"You do this often, then?\"\n\nHer eyes opened and she looked at me lazily. \"Not like this.\"\n\nWith her left hand returning to her nipples, her right disappeared into her very tiny, black panties. Her back suddenly arched and I knew she'd found her clit.\n\nKathryn had always liked putting on a show. It turned her on and the years had only refined her prowess. My cock was raging in my pants as I watched the outline of her fingers sliding up and down that most intimate of places.\n\n\"Oh that feels so wonderful. Mmmm... Tell me, Robby, is this what you imagined?\"\n\n\"Yes,\" I managed to croak out.\n\n\"Take off my panties.\"\n\nIt was more of an order, and it turned me on even more. Leaning forward, I gripped the panties at her hips and pulled down as she lifted her bottom off the sofa for a moment. Her right hand never stopped working between her legs. Wanting to see more, I also opened the rest of the buttons on the front of her dress. With her left hand, she opened the clasp on the front of her bra.\n\n\"Oh, that's MUCH better,\" she sighed. \"Much better...\"\n\nHer pussy looked much as I remembered with the outer lips being a little bigger, but she still had that lighter hair down there, nicely trimmed above and bare below. It may have been a faulty memory, but I didn't remember her clit being quite so large. She was gripping it on either side, pulling and rolling it in the same manner she was ministering to her nipples.\n\nI could tell by the way her hips began moving that she was getting close. She began playing with her nipples quite hard, pulling and twisting them, bringing groans from deep in her throat.\n\nA milky liquid was flowing from her vagina and its musky fragrance filled the room.\n\nI leaned forward and touched her thigh. She looked up at me with dreamy eyes and smiled.\n\n\"Am I turning you on?\"\n\n\"Oh, yes.\"\n\nShe closed her eyes again and put her right leg up onto the back of the sofa as I moved down and licked below her busy right hand.\n\n\"Oh yes! That's what I want, Robby. Lick me there. You always knew what I wanted without me telling you. That is so good!\"\n\nKathryn tasted as good as she smelled and I lapped up everything that came out. Her right hand moved away and I knew she wanted me to lick higher up.\n\n\"Put your fingers inside me, Robby. Rub me inside. Farther in. Oh yes! Right there! Mmmm. Keep doing that. Now suck my clit. No, harder! Yes! Yes! Yes! Oh my god, Robby. You're going to make me cum. I'm going to cum all over your hand. Faster! Yes. Like that! Oh... OH GOD!\"\n\nAs Kathryn's back arched up off the sofa, I could do nothing but try to follow her with my lips and fingers. A hot liquid splashed onto my upturned palm and into my mouth. It was pungent, but not unpleasant and definitely not urine.\n\nHer orgasm lasted a good ten or fifteen seconds as she gasped and moaned loudly, her body shaking and spasming. I could barely hang on. My sofa, hand, face, shirt, everything was drenched in whatever had come out of her.\n\nExhausted, she flopped back down and lay there panting, eyes still closed. \"I nearly passed out. I sometimes do that.\"\n\n\"I remember. You scared the crap out of me the first time you did it.\"\n\nShe opened her eyes and grinned. \"I'm sorry.\"\n\n\"You said that, too.\"\n\n\"Am I that predictable?\"\n\nI stroked her thigh lightly with the back of my hand. \"No. Not predictable. Familiar.\"\n\n\"Would you like me to take care of you? All that pleasure you gave me deserves a return.\"\n\nNo matter how conflicted I was inside, seeing her like that, lying on my sofa, satiated (for the moment), turned me on so much my cock, trapped in my pants as it was, actually hurt. I could not have denied her if I wanted to.\n\nKathryn sat up. \"I've made quite a mess of your sofa. I should have known that would happen. You've had me so aroused since this morning, I was certain someone would smell me on the plane.\"\n\n\"I didn't notice until you lay back, and believe me, I'd notice something like that.\"\n\n\"Anyway, I'm sorry about the sofa. If it's any comfort, I don't think it will show.\"\n\n\"I hope it does,\" I joked. \"It will remind me of you. So what happened? I remember you doing that a little bit when we were...younger, but nothing like what just came out.\"\n\n\"It's something called the Graffenburg spot, or G spot for short. Ever hear of it?\"\n\n\"Can't say that I have.\"\n\n\"It's new. Well, actually, the name is new, and several people are researching it. There are two camps at the moment: one says it exists and the other doesn't. Guess what? All the nay sayers are male. I've always known I had something in there that felt pretty damn good when it was stimulated, but I didn't know what to call it. I think it has something to do with what we call the female prostate. This is all pretty cutting edge and I don't talk about this in public, but I've been researching into it pretty hard.\"\n\n\"How you must suffer for your scientific research,\" I shot back cheekily. \"Was your G spot that hard thing I was rubbing inside?\"\n\n\"Oh yeah. Want to send Dr. Miller to the moon, just give that some strokes.\"\n\n\"But all that liquid that came out in pulses. I don't remember anything like that amount.\"\n\n\"That, my dear Robert, is what it's like when a female ejaculates.\" My perplexed expression must have looked comical because she laughed. \"Didn't know we girls could do that, did you? It's a very controversial subject among the sex doctor crowd, and I don't expect the arguments for and against to die down for years. Funny thing is, all the ones who say it doesn't exist are males.\"\n\n\"I'll vouch for you if it will help.\"\n\nKathy sat up. \"Now what about you? What can I do to say thank you? Want some of this?\" she asked pointing to her crotch, or would you like me to suck you off?\"\n\n\"You always were very direct.\"\n\n\"When was the last time you made love to anyone?\"\n\nA mental image of Ellen's laughing face rose up between us, Ellen throwing snow at me on a ski trip in Vermont, Ellen concentrating on cooking my favorite meal, Ellen having an orgasm.\n\nI sighed. \"It's been a very long time.\"\n\nKathryn stood up, unselfconsciously sliding her dress down behind her and removing her bra. Two or three drops of liquid fell from between her legs. My cock surged. She noticed.\n\n\"Stand up, Robert.\"\n\nIt took her nearly ten frustrating minutes to remove my clothes, frustrating, because while she brushed it occasionally, she firmly stayed away from my erection. I ached to have her grab it and pull the way she used to in the past. I wanted to feel that familiar hand encircling me, rolling my cock head in her palm.\n\nShe knew how close I was, though, and was trying to give me the maximum pleasure.\n\nFinally, she wrapped her hand around it. With her other hand on my shoulder we looked down at the space between our bodies.\n\n\"Either you've grown a bit or my memory is fuzzy,\" she said as she gripped the shaft and slid her hand slowly to the crown. \"Nope. You're definitely bigger. My fingers used to be able to just touch and I have long fingers. Can't do that now. Feel?\"\n\nShe had me gasping. I had to concentrate on not letting go.\n\nShe let go and put her arms around my neck, pulling my head down. \"I can't believe I'm here with you after all this time.\"\n\nThen she kissed me very hard, her tongue all over the place in my mouth. I sucked on it and she pressed her body against me, trapping my erection between her legs. I groaned into her mouth as she began humping on it, her wetness lubricating everything nicely.\n\n\"Kathryn,\" I gasped, \"I'm not going to last long if you keep doing that.\"\n\n\"You're not going to last long whatever we do,\" she giggled, but pulled away.\n\nShe moved over to the fireplace, picked up another log and I got to watch her luscious rear end as she bent over to put it on the fire. It was taut and firm as were her legs. My cock twitched in response when she wiggled for me.\n\n\"Like what you see?\" she asked without straightening up. \"You can take me like this later, if you want.\" Then she turned around and knelt on the carpet. \"Come over here, darling Robert.\"\n\nAs I moved to her, she formed her mouth into an \"O\". I knew exactly what she was signaling and walked up to her. Without either of us using hands, the head of my raging cock slid smoothly into her mouth.\n\nHer tongue came at it from every direction. The feeling was indescribable. Unbidden, my body began a shallow fucking motion. Kathryn's groan came from deep in her throat.\n\nShe rubbed each of her hands through her slit, gathering up moisture, then put them both on my cock and began rubbing and squeezing, swirling over my balls as her tongue continued its assault on my cock head.\n\nI didn't last long. Feeling my balls contract upward, Kathryn tilted her head forward, aligning her throat with her mouth. She took a deep breath as she looked up at me lovingly. Then with her hands on my hips she pulled me forward. I felt my cock pass into her throat just as it exploded with shattering intensity.\n\n\"Oh god, Kathryn!\" I shouted as pulse after pulse of semen jetted down her throat. Her eyes never blinked as she continued to stare up.\n\nMy knees got very shaky and everything faded to grays from the intensity of my orgasm. Kathryn pushed her face into me and wrapped her arms around my legs, supporting me. As the pulsing stopped, she helped me slide down to my knees. I collapsed onto my side and lay there, gasping.\n\n\"My god,\" I groaned. \"I may never move again.\"\n\nShe lay down and cuddled against me, her face buried in my neck, one arm draped across me. We floated like that for awhile as I came down from my high. The log she'd placed on the fire blazed up and I turned my head to watch it.\n\n\"What are you thinking, Robby?\" she asked after several minutes.\n\n\"I can't believe this is happening, how easy it is to be with you again after all these years.\"\n\n\"Do you regret what we just did?\"\n\nI turned my head to look at her as she propped herself up on her elbow.\n\n\"Is the doctor at work again?\"\n\nShe smiled. \"The doctor has been sent packing for the evening. I'm talking to you as the person who loved you so madly so long ago.\"\n\nI considered her choice of tense. \"No, there's no regret. It was wonderful. Better than I've imagined over the years.\"\n\nHer hand drifted down to my cock. \"And the night is still young. You haven't had this inside me yet.\"\n\nUnbelievably, considering how drained I felt, my cock twitched as she stroked it lazily.\n\n\"As you can imagine,\" Kathryn said as she leaned over me, \"I've learned a lot more about loving over the years. As a matter of fact, I'm full of surprises.\"\n\n\"Like what?\"\n\n\"Oh, you'll see,\" she grinned, \"if you let me spend the night with you.\"\n\n\"We never got a chance to do that. Remember how was used to talk about it, how wonderful it would be to wake up in each other's arms?\"\n\nKathryn suddenly looked serious. \"I think that's the one thing I've regretted most.\"\n\nI tweaked the tip of her nose, something I'd been doing since we were about ten. \"In that case, yes, you can stay.\"\n\n\"Good!\" she said as she rolled over on top of me.\n\nWe kissed for a long time, our mouths becoming familiar again. Her lips, tongue and teeth felt the same, but her kissing was more active. She obviously still remembered what turned me on as she sucked on my tongue and gave my lips little nips. I gave as good as I got.\n\nMy cock, trapped between our bodies began to come to life again. Kathy rose up onto her arms and moved up my body a bit. As she flexed her hips, I felt my cock enveloped by the warmth of her slit. It was juicy wet.\n\n\"Do you see what you do to me?\" she asked as she flexed her hips farther. \"I am absolutely in heat right now.\"\n\nI pulled her face down and kissed her wildly as she hunched her slit up and down the length of my cock.\n\n\"I'm going to fuck you, Robby,\" she whispered into my ear. \"I'm going to fuck you like you've never been fucked before. You make SO hot!\"\n\nBut she kept me waiting for a good five minutes as our bodies slid, cock to pussy, our lips and tongues busy together.\n\nHer clit got hard and hot. I could feel it every time she pushed down, my cock struggling to get by as she pressed down.\n\nKathy pulled away and rose up on her arms again to get a better angle. Her face and upper chest were flushed and she was getting a light sheen of sweat on her body. Her breathing was shallow and fast. I'd seen her like this many times before.\n\nReaching around, I gripped her bottom, feeling the muscles tensing deliciously as she continued to slide up and down.\n\nSuddenly she stopped. \"I can't stand it anymore. I have to have that cock inside me right now.\"\n\nShe sat up, scooted her body back towards my knees while keeping her feet flat on the floor. Her legs opened up obscenely and I could see further evidence of her arousal by her red and swollen vaginal lips which lay open like a flower. At the top, her pearl, darker red and shiny with lubrication extended out from its usual hiding place.\n\n\"I'd forgotten how beautiful it is,\" I said in a soft voice.\n\n\"It's missed you,\" she said, softly, looking down.\n\nWith one hand supporting her on the floor, Kathy leaned back further. Her other hand took my erection and bent it down as her hips rose up. With a little bit of a wiggle, the cock head met her opening and slipped inside.\n\nShe put both hands behind her, and rocked forward. Using the weight of her body, she lowered herself onto my cock in one exquisitely slow, fluid movement until it had all disappeared inside. She pussy felt like a well-oiled, tight velvet glove as it gripped my length.",
        "Her face looked strained as she wiggled a bit more to seat me inside just right, then she looked at me intensely. \"It feels like I'm home, dear Robert.\"\n\nI didn't know how to respond and the moment passed.\n\nClosing her eyes, a look of concentration crossed her face and I felt something move inside her. The muscles of her vagina rippled slowly, front to back and then back to front a few times. With eyes still closed, she smiled when I groaned.\n\n\"What the hell is that?\" I asked.\n\n\"Relax. I'm just giving you a very special massage.\"\n\n\"Where did you learn how to DO that?\"\n\nHer eyes finally opened. \"It's part of tantric yoga. I told you I'm full of surprises. If we keep it up, I can even make you cum by doing this.\"\n\n\"I believe you!\"\n\n\"Now don't move. Let me do the work.\"\n\nKathy leaned back farther and rocked her hips. I slid out almost to the end. Then she squeezed hard and slid me back in again. When I was all the way inside, she again fluttered those internal muscles. The effect was hair-raising.\n\n\"I can keep you on the edge for hours,\" she told me, \"myself, too. I can also show you how to orgasm without ejaculating. I can even teach you how to have multiple orgasms.\"\n\n\"Is this what you've been learning over the years?\"\n\n\"Uh-ha.\"\n\n\"Do you ever make love the normal way?\"\n\n\"You mean, like this?\" she laughed and rolled to her side, gripping me with her strong legs (and pussy muscles) and forcing me to follow her.\n\nIn a twinkling, our positions were reversed, me on top of her, her with her legs drawn back and up, our genitals still tightly together.\n\nPushing myself into her with little jabs, it was my turn to make her gasp. I knew the effect it would have on her swollen clit.\n\n\"See? I have some surprises of my own,\" I said.\n\n\"Mmmm, I can tell. Where did you learn this?\"\n\n\"A girl in college. She had a huge clit. One night I started doing this,\" I gave her another twenty seconds worth of jabs, enjoying watching her eyes roll up into her head as she floated on the sensations, \"and she had three orgasms in a row before I actually fucked her.\"\n\n\"Wny did she ever let you get away?\"\n\n\"She had a boyfriend back home.\"\n\nSuddenly Kathryn's face got very serious. \"Some women are incredibly stupid.\"\n\n\"Some men, too.\"\n\n\"I thought I knew how much I missed you, Robert, but it wasn't even one-tenth of what it actually is. Do you remember that this was the position we used the first time we made love?\"\n\n\"How could I forget?\"\n\nKathryn looked up and smiled widely, but there was also a tremble to it and her eyes were suddenly wet. \"Make love to me, Robert, like you did that first time. Make it like our first time.\"\n\nI leaned down and kissed her, but it was gentle and on her cheek. She closed her eyes and sighed as I withdrew my cock and then slammed it home very hard.\n\nMy Kathryn was well and truly fucked that night, and I tried to make it like the first time, wiping away everything that had happened so long before.\n\nNeither of us got any sleep, but it was a night filled mostly with talking, punctuated by love making. The next morning, I called my boss and asked if I could have two weeks of my vacation time.\n\nWe fucked our way up and down the eastern seaboard while Kathryn did her book tour, then it was the midwest. Our hotel neighbors must have hated us because the whole time we were loud and lusty and made good use of the beds...and showers...and floors. Some of the things she showed me were quite hair-raising.\n\nOn the last leg of the tour, Kathryn was snuggled against me as yet another plane took us to yet another city.\n\n\"Kathy?\" I asked.\n\n\"Mmmm?\" she mumbled sleepily.\n\n\"I know you've been with many men over the years.\"\n\nShe opened her eyes and sat up. \"I know what you're saying. Yes, there were a lot. I won't lie. I've more than sown my wild oats. But I will NEVER, EVER lie to you again, or keep anything from you. The reason I couldn't keep any of my relationships going is because no man, no matter how great a lover he was, no matter how wonderful he was as a person, could never stir my blood the way you can. I am a one-man woman now -- if you'll have me. There is no other cock I ever want inside me but yours.\" \n\nShe pulled me down and kissed me long and hard. I can't imagine what the flight attendants and passengers thought, but I really didn't care.\n\nOur last stop was back home, where we sat our mothers down and told them that we'd finally come to our senses and would be getting married. I've never seen my mother speechless, but she was that day."
    ],
    "authorname": "val wrangler",
    "tags": [
        "drama"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/kathryns-question-ch-05"
}