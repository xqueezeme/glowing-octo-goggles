{
    "title": "Shut In",
    "pages": [
        "\"No. You guys go ahead. I've got a ton of work to do. Have some fun together. You, know, a little male bonding time,\" she said with a happy smile.\n\n\"You sure?\" her husband asked.\n\n\"Yes, but hurry home, okay?\" she said in that way that told him all he needed to know.\n\n\"Do you know how much I love you?\" he said to her.\n\n\"Yeah. I think I do,\" she said with that bright, beautiful smile. \"About as much as I love you.\"\n\n\"Okay. You got me there,\" he admitted.\n\n\"Dad? Are we going or not?\" their 15-year old son asked impatiently.\n\n\"Yeah. We're going. Just gimme a minute, okay?\"\n\nTheir son, Matt, knew why his father needed a minute, and all he could do was shake his head. He had friends whose parents argued and fought all the time. But not his parents. It was always sweetness and kissy-face, and now he was old enough to know what else happened nearly every night in their bedroom even after sixteen years together as man and wife.\n\n\"You better get going,\" she told him.\n\nHe sighed and said, \"I suppose you're right.\"\n\n\"Have fun. And I'm really glad you're doing this.\"\n\n\"I'd rather stay here and do you,\" he told her as he grabbed her by the waist an pulled her close.\n\nShe nearly yelped, but held it down to a loud laugh.\n\n\"Well, if you're not too late...you can do me when you get home,\" she promised.\n\n\"If I'm not too late. Ha! When has that ever slowed you down?\" he teased.\n\n\"Okay. That point goes to you, Professor,\" she told him. \"Just don't be too too late. Okay?\" \n\n\"I won't. I promise,\" he said before he kissed her goodbye.\n\n\"Dad? What the hell?\" their son finally said.\n\nHis parents looked at each other, smiled, and tried not to laugh.\n\n\"Hey! Language already!\" his father called out, knowing his son was growing up all too fast.\n\nHe left the bedroom, handed his son the keys, then said, \"Here you go.\"\n\n\"Awesome!\" his son, who'd just gotten his learner's permit, replied.\n\n\"Be careful!\" his mother said to them both.\n\n\"Mom, I know how to drive, okay?\" her son replied.\n\n\"I know. Just drive...carefully, all right?\"\n\nShe hugged her son then kissed him goodbye, too.\n\n\"Bye, Mom! See ya later!\"\n\n\"Bye, honey! And you, too, other honey!\" she called back.\n\n\"Love you, sweetie,\" he told her as her boys headed out.\n\nHow could she have known it would be for the last time?\n\nHer thoughts of those final minutes ran through her mind for the thousandth time before she heard a voice calling her back to reality saying, \"Yoo-hoo! Anyone home?\"\n\nShe looked at her computer screen then said, \"Sorry, Mom. I was just thinking about Matt and Tim.\"\n\n\"Why don't you come home, honey? I know why you moved to Maine, but why are you staying now? It's been two years since the accident, and I worry about you being out there in the middle of nowhere all by yourself.\"\n\n\"It's not 'nowhere', Mom. I live in a small town, but I really like it here. And besides, you know why.\"\n\nHer mom sighed then said, \"First of all, you live a good five miles out in sticks from that small town, but I won't dwell on that. As far as you staying there goes, yes I do know why. And while I can't blame you for wanting to stay in the house you and Tim built, I just wish you'd move back here to civilization. And...you know, maybe meet someone.\"\n\n\"Mom?\" her daughter said with that same edge that always came out when her mother pushed too hard.\n\n\"Okay. Fine. Just shoot me for caring,\" her mom said dramatically, throwing her hands up in the air.\n\nIt was both a blessing and a curse to be able to video chat, and these antics of her mother were part of the less pleasant side.\n\n\"Oh, so now you're gonna play the martyr again. Gee, you haven't played that card in what? Two whole weeks?\" her daughter asked.\n\n\"Your father misses you, too,\" her mother replied, as though her daughter hadn't heard that a hundred times, as well.\n\n\"Tell Daddy I love him, and that he's welcome to fly out and see me anytime.\"\n\nShe smiled then said, \"You too, Mom.\"\n\n\"No thanks. Once was enough. I'm a city girl and always will be. And Seattle is my home. And it's yours too, you know.\"\n\nThere was no use arguing. Her mother was never going to let go of trying to talk her 43-old daughter into coming home, so she didn't bother trying.\n\n\"I'll talk to you soon, okay, Mom?\" she said trying to finish the call as quickly as she could without being overly rude.\n\nBefore her mom could reply she ended the FaceTime call and closed her laptop and exhaled loudly.\n\nIt was amazing, or maybe the better word was depressing, how even a short call with her own other could make her feel so bad. She knew her mom was only trying to look out for her, but after living in Maine for 17 years, this was her home. And yes, leaving the house she and her late husband had built together and where they'd raised their son was too much to even contemplate. At least for the time being anyway.\n\nIn fact, just leaving the house at all was becoming very difficult. Nicole Kelly had heard of agoraphobia, but she'd never even dreamed it might one day affect her. But lately, it had become harder and harder to even go outside, and impossible for her to leave the property. \n\nShe could still leave the house, but the thought of going into town\u2014such as it was\u2014made her skin crawl. It had been three weeks since the last time she'd gone, and going had caused her to hyperventilate and break out in a sweat in spite of the cool, Fall air.\n\nShe was getting very low on nearly everything, but just thinking about getting into her well-worn Land Rover seemed like walking up to the edge of a cliff with a thousand-foot drop off.\n\nAs bad as that was becoming, the real demon she battled most was loneliness. She loved the gorgeous home she and her late husband, Tim Kelly, had built together from the ground up, but as much as she loved it, she hated the fact that it was so utterly quiet that she often kept the television and/or the radio on just to hear a human voice\u2014just not a real person. And as lonely as she was during the day, there were nights when the loneliness felt unbearable. \n\nAfter 'hanging up' with her 69-year old mother Anne Kelly, Nicole went downstairs, and even though it was almost ten o'clock at night, got on her $2,000 Peleton exercise bike, found a live training session on line, and joined in. An hour later she was soaked in sweat and, temporarily at least, felt a whole lot better. She cooled down, took a hot shower then, then read for an hour as the endorphin rush washed over her helping to ease the anxiety and the loneliness. \n\nNicole had loved working out for as long as she could remember, and that went all the way back to when she was just six years old and ran around a track the first time her father, Nick Kelly, after whom she was more or less named, took her to a playground. He hadn't stopped her, and when she came in after running her first-ever quarter mile, he asked her if she could do that again.\n\n\"Of course!\" she told him before turning around and running one more. \n\nBy the time she was ten, she was winning local 5k races, and in high school, she was the number two cross-country athlete in the state, and good enough in track to earn a scholarship to the University of Washington in her then-hometown of Seattle.\n\nExercise was still a big part of her life, and why, at 43, she still looked incredible. Her body was hard and fit, and although she almost never wore makeup anymore, her face still looked young and pretty. Even her long, blonde hair looked amazing when she wore it down, but since there was no one to wear it down for, she either wore it in a ponytail or piled up high on her head. The same was true with makeup, and as long as she had no interest in attracting another man, she saw no reason to take the time to 'gussy up'.\n\nShe flipped on the television around 1am and found a mindless, romantic movie to watch as she relaxed in the large, king-sized bed where she and her husband had made love so many times over the years.\n\nNear the end of the movie, something reminded her of her husband, and whenever that happened the emptiness she felt gave way to a kind of longing which persisted until she reached for the closest thing to Tim she had available. She used it often to bring herself to the best and only relief she could have while she fantasized about her gorgeous husband making love to her. \n\nAt least partially satisfied, somewhere around 5am, Nicole drifted off to sleep, the only respite from the big, lonely house knew she could never leave. Her last thought was how much she hoped that wouldn't become true in the literal sense.\n\nIt was nearly noon when she woke up, and that her made her wish she could keep more normal hours like say, going to bed before midnight and getting up by seven or eight. But this had been her 'new normal' since the accident that cold, rainy night when the two people she loved the most had been taken from her in an instant. And since Tim had provided for her quite well, working wasn't a necessity, and this...worked for her...so she stayed up late, slept in, then started her day when most other people's were half over.\n\nHer mom had been right about her living in the sticks. The closet town was five miles away and had a population of just over 400 people. So it was fitting the only real store in town was called The General Store which sold groceries, clothing, hardware and other supplies.\n\nShe and Tim had secretly started calling the owner, Hank Edwards, Sam Drucker, because he not only ran the general store, but because he looked quite a bit like the man of the same name on the old sitcom Green Acres. Their secret got out, but to their surprise, Hank told them he'd heard that so many times he'd thought about changing his name. And that had taken all the fun of it, so ever since he'd been just plain old Hank.\n\nThe beautiful, rustic home they'd built was a good half mile from the nearest paved road. Since she'd moved there with Tim back in 2001, the summer before the 9-11 attacks, Nicole had seen countless elk, deer, moose, and bears, as well as all kinds of other wildlife in and around their property.\n\nIt had been fun to joke around about the endless numbers wild animals that lived all around them, but it stopped being fun the night a very large bull moose cross the newly-blacktopped highway that ran for miles parallel to the 20 acres of land they owned. \n\nThe county had finally approved the much-needed resurfacing, and driving on it had gone from a pothole-laden nightmare to a smooth, quiet dream. It had only been finished for a week and still had no centerline painted on it, and the road was dark it seemed to suck up every bit of light from a car's headlights. The state police told her the car Matt was driving had been traveling about 45mph, five under the posted speed limit.\n\nBut when thousands of pounds of steel collided with over a half ton of flesh, bone, and horns, something has to give. The animal was cut off at the knees and its torso slid into the front windshield with enough force to allow its weight to completely crush in the front windshield and the two occupants riding up front.\n\nShe'd known the town sheriff who'd come to her house that cold, dark night for the entire time they'd lived there, and when he showed up on her porch that late at night, she began trembling even before she opened the door.\n\nHe had tears in his eyes when he told her what had happened not three miles from her home. She remembered hearing bits and pieces of what he'd said with words like 'freak accident' standing out, but mercifully, most of it, to include the word 'impaled', was a blur. Even now just thinking about it caused her to shiver or 'willy' as her mother used to say.\n\nNicole shook off those horrible memories then made herself some coffee before feeding her dog. Zeus was an aging Great Dane Tim had brought home as a puppy eleven years ago. He was having a lot of trouble walking of late, and Nicole knew she was going to have to deal with the inevitable before too long, as Great Danes typically only lived between eight and ten years. The thought of losing the last remaining, living thing that was close to her, and that connected her to her husband and son, was just one more painful reminder of how much she'd lost.\n\nFor now, Zeus was still able to get up by himself and make his daily rounds when she took him outside. Once he was full, Nicole did just that to let him take care of business then went out to feed the chickens while he went from place to place, sniffing everything as though it was the first time.\n\nShe gathered up a handful of brown eggs then waited until Zeus let her know he was tired of being outside.\n\n\"Come on, boy!\" she said as she led him back in the house where he lapped up a quart of water before laying down on his favorite rug.\n\nShe put the eggs away then did a quick inventory, and realized she was going to have to break down an go into town. Just not today. She rechecked and saw that she had enough to get by for at least one more day if not two, so the anxiety that was building up inside her slowly receded into the background.\n\nEven though she'd just vacuumed the day before, she pulled out the Dyson and fired it up just to give herself something to do. When she finished with the vacuuming, she got out a Swiffer dust mop and went back over the hardwood paying special attention to the areas underneath dressers, chests, and armoires that had recessed areas underneath them. Lastly, she got out a Swiffer duster and dusted every nook and cranny in the house, stopping to polish anything made of wood with some lemon-scented furniture oil.\n\nShe putzed around until 3 o'clock then decided to make herself a cup of tea and sit down and watch something on TV. She'd just poured the water into the cup when she heard the unmistakable sound of a car door slamming outside.\n\nThe noise startled her, and when she heard it, she ran to the window to see who it was and felt sick to her stomach. It was the sheriff's car, and just seeing it brought back the horror of that night in grim detail.\n\nEven the sound of the doorbell made her jump in spite of knowing it was about to ring. Nicole took a deep breath, tried to collect herself, then opened the door.\n\nShe knew the sheriff who'd delivered the bad news was planning to retire soon, but she had no idea whether or not he had, and if so, who'd replaced him.\n\n\"Mrs. Kelly?\" the man wearing a silver badge asked. \"I'm Eric Burns, the new sheriff.\"\n\n\"Yes. Hi. Please come in, Sheriff,\" she told him as she stepped aside.\n\nHe thanked her, removed his hat, and stepped inside then saw Zeus wagging his tail.\n\n\"Hi, there!\" he said.\n\n\"That's Zeus, and he's friendly,\" Nicole assured him.\n\nThe sheriff didn't have to bend down very far to pet him even though he was an even six feet tall.\n\n\"Oh, good boy!\" he said before asking the huge dog, \"Are you the king of the gods, Zeus?\"\n\n\"Not anymore, I'm afraid,\" Nicole told him. \"He's in pretty rough shape.\"\n\n\"I love Great Danes,\" he told her as he continued to pet the mini-horse in front of him.\n\n\"Can I get you anything? A cup of tea maybe?\" Nicole asked knowing she had plenty of teabags.\n\n\"I don't mean to intrude. I just wanted to stop by and introduce myself. I've been on the job two whole days, and Hank\u2014he said to tell you 'Sam' said hello, by the way\u2014told me you lived out here, so...here I am.\"\n\nNicole laughed for the first time in days or maybe weeks.\n\n\"Oh, my. Yes, Sam Drucker,\" she said still smiling. \"Are you sure you wouldn't like some tea?\"\n\n\"Well, if I'm not interrupting then, yes. That'd be very nice,\" he told her.\n\n\"Sugar?\"\n\n\"Yes, please.\"\n\nNicole hoped there was enough left in the bowl for his, but she was sure there wouldn't be anything left for hers which was unpleasant but not unbearable.\n\nPerhaps it was having just laughed, but Nicole suddenly felt a lot better, and that's when she realized the new sheriff was a very attractive man. He was far too young to be someone she'd ever be interested in\u2014even when she one day got interested again\u2014but he was every bit as attractive as her late husband at that age, and possibly even more so.\n\n\"I don't remember ever meeting you in town,\" Nicole said as she poured some hot water over another teabag.\n\nThe sheriff laughed then said, \"I'm a city boy who recently moved here, ma'am. Born and raised in Portland.\"\n\n\"So what brings you all the way out here, Sheriff?\"\n\n\"Please call me Eric, okay?\" he said with a smile that caused her to stare briefly.\n\n\"Oh, all right,\" she said pleasantly as she turned away.\n\n\"I went to the University of Maine in Orono then went in the Marine Corps and spent five years on active duty. When I got out, I went to the police academy and spent a couple of years in Portland on the force before interviewing for the sheriff's position.\"\n\n\"Oh, okay. First, let me thank you for your service. I've been told they've always talked about making yours an elected position, but Sheriff Talbot had been here since forever, and...anyway, I guess it's just easier to hire someone.\"\n\n\"However it works, I'm grateful for the opportunity to serve. As much as I enjoyed the city growing up, I find myself relishing the peace and quiet of the country the older I get.\"\n\nNicole smiled but didn't laugh as she brought his tea.\n\n\"Well, you are getting up there in years, sher...Eric,\" she teased.\n\n\"You laugh, but I'm turning...\"\n\nHe looked around as though someone might hear before whispering, \"Thirty. Yeah. That's right. Thirty.\"\n\n\"Oh, no! No the Big Three-Oh! Say it isn't so! You really are old, aren't you?\" Nicole replied as seriously as she could.\n\nEric laughed politely, thanked her for the tea, then said, \"Not everyone looks as good at 29 as you, Mrs. Kelly.\"\n\nHis blatant exaggeration made Nicole laugh.\n\n\"Oh, my goodness! You're not only a handsome young man, you're funny!\" she said, not sure why she said anything about his looks.\n\n\"I'm just well preserved,\" Eric told her very seriously.\n\n\"Um...that's my line,\" Nicole informed him after chuckling politely. \"Only I'm not so sure about the 'well' part of being well-preserved in my case.\"\n\n\"Trust me, you're a very attractive woman, Mrs. Kelly,\" he assured her without being flirty.\n\nBefore she could even thank him, Eric said, \"While I did stop by to introduce myself, I have to be honest and let you know Hank said he's concerned about you.\"\n\n\"Oh, well, um... No. I'm...I'm fine,\" Nicole said trying to sound convincing.\n\n\"He said you haven't been into town in quite a while, and he asked me if I'd come check on you while I'm out getting to know folks. I hope you don't mind.\"\n\n\"Not at all. Please tell him I'm fine, and that I'll be in soon.\"\n\nThe way she looked down when she spoke made Eric wonder if things really were all that well.\n\n\"Okay, if you're sure,\" he told her.\n\nWhen she didn't look back up, Eric set his cup down and asked, \"Is there something...anything...I could help with?\"\n\n\"It's...it's a little embarrassing,\" Nicole finally said even as she wondered why she'd said it. It may have been nothing more than having another human being to talk to, and that he wasn't hard to look at didn't hurt.\n\n\"I'm a pretty decent listener,\" he replied.\n\nShe finally looked at him then said, \"It's...I...leaving isn't easy for me.\"\n\n\"The house?\" he asked without judgment.\n\n\"No. I can leave the house. I...I just can't, or maybe...don't want to...get in the car and go anywhere. I'm sure it's just a passing thing.\"\n\nEric knew about the accident, and his first thought was perhaps there was something about having to drive down the only road into town; the road on which her husband and son had been killed while also driving on it.\n\n\"How can I help?\" he asked.\n\n\"Oh, no. I'm fine. I'll be fine,\" she insisted. \"In fact, I'll be going into town tomorrow, so really, I'm fine.\"",
        "Eric was pretty sure she wasn't fine, but didn't press the issue.\n\n\"All right. Please let me know though, if there's ever anything I can do to help,\" he said.\n\n\"I will. And thank you,\" she told him.\n\n\"Well, now that I've said hello, I should probably get back to work,\" Eric said as he stood up. \"Thank you very much for the tea, Mrs. Kelly.\"\n\n\"Now it's my turn to ask you to call me by my first name. It's Nicole.\"\n\nEric smiled and repeated the name.\n\nShe walked him to the door and thanked him for stopping by. He, in turn, thanked her again for the tea, and for letting him come in and get to know her.\n\n\"Oh, sure. Anytime,\" she told him.\n\n\"All right. Well, I hope to run into you around town one of these days. Or you'd could stop by and say hello,\" he told her with a smile that only made his already-handsome face even more attractive.\n\n\"I'll do that,\" she said as the thought of doing so gave her the willies again.\n\nEric got to his car, smiled, thanked her again, then got in and drove off. He had two other residents to meet then headed back into town and pulled up in front of The General Store.\n\n\"What can I do you for, Sheriff?\" Hank asked as soon as he saw the young officer.\n\n\"I need to ask you a few questions,\" Eric replied.\n\n\"Is that about that parking ticket from two years ago? Because Sheriff Talbot told me he tore it up.\"\n\nEric laughed then said, \"No, it's about Mrs. Kelly.\"\n\n\"Oh. Sure. Go ahead. Shoot.\"\n\nAfter asking enough to satisfy his concerns, the sheriff said, \"Do you know what items she normally buys?\"\n\n\"Oh, sure. She buys pretty much the same things every trip. There are exceptions and odd items, but it's a fairly consistent. May I ask why?\"\n\nThe young sheriff didn't explain why, he just asked Hank if they could bag up what she normally bought in a couple of days if she didn't come to town the next day. Hank told him he'd be happy to without asking why or who'd be paying for the items.\n\nNicole didn't show up the following day, so when Eric walked into The General Store as soon as it opened the next morning after that, Hank said he had a bunch of things ready to go. \n\n\"I'll just need to put the cold-storage things together and you'll be all set.\"\n\nThis was one of the things Eric loved about small-town life. Everyone knew everyone, and they were always ready and willing to help. He hadn't had to say a word when he walked in. Hank knew what he wanted and was already prepared\u2014just in case. \n\nFifteen minutes after the bags where loaded into the cruiser, the sheriff pulled back into Nicole's driveway.\n\nNicole was still asleep when she heard the car door slam shut. She sat bolt upright then grabbed her robe and quickly walked to the door. She saw the sheriff's vehicle outside again and wondered what was wrong. She was so sure it wasn't something bad, she didn't even try and smooth her hair.\n\n\"Sheriff. Sorry\u2014Eric. Is everything okay?\" she called out as she peeked through a small crack in the door.\n\n\"Sure. Everything's fine,\" he called back from the cruiser. \"With me anyway.\"\n\nShe had no idea why he was there until she saw him go around to the other side of the vehicle and reach in and pull out several bags.\n\n\"What is this?\" Nicole asked as he headed her way.\n\n\"A hunch?\" he replied with a smile.\n\nHe walked up the front porch and asked if he could come inside.\n\nNow aware of her appearance, Nicole said, \"I...I'm a mess. I just woke up and...\"\n\n\"You look just fine,\" he said with a smile. \"So...may I?\"\n\n\"That depends,\" Nicole told him as she opened the door a little wider. \"What's in the bags?\"\n\nEric laughed and told her, \"Well, 'Sam' calls 'em vittles.\"\n\n\"May I?,\" she asked as opened the door completely then reached into one and pulled the plastic apart so she could see inside. \"Oh, my heavens! What are you doing?\"\n\nLike most men, he was carrying every bag he could possibly carry and said, \"These are kind of heavy, so...may I come inside?\"\n\nNicole gave him a funny look then said, \"Yes. Of course.\"\n\n\"There's more if you'd care to help,\" he told her as he walked past her.\n\n\"More?\"\n\n\"Uh-huh. This is the cold stuff, but the cans and other dry items are still in the car.\"\n\nThe anxiety about leaving the house had been building since he left, and Nicole couldn't have been more grateful once she knew what he was carrying.\n\nAfter they got things put away she said, \"Okay. First, thank you very, very much. Second, how much do I owe you? And third, why did you do this?\"\n\nEric laughed then said, \"You're welcome, nothing, and because I could tell something was wrong.\"\n\nNicole wasn't laughing or even smiling. She was standing there looking him in a way that was...unsettling.\n\n\"How...how did you know?\" she asked very quietly.\n\n\"I still don't know exactly what's going on, but after what you told me during my initial visit, I was pretty sure you wouldn't make it into town. So would you maybe like to talk about it a little more?\"\n\n\"I don't think so,\" she replied quietly. \n\nShe had to look away because she was feeling shame or something close to it. She knew she shouldn't, but this whole thing was so ridiculous and embarrassing. She deeply regretted sharing her secret with him, but the proverbial cat was out of the bag, and all she could do was hope he wouldn't say anything to anyone about her\u2014condition.\n\nEric moved a step closer then said, \"Nicole, if there's anyway I can help...\"\n\nShe shook her head and said, \"No. I'm sorry. You've been very kind, but no, you can't help. And I am paying for the groceries.\"\n\n\"Hank told me you'd insist. It came to around $150, and he put it on your tab.\"\n\n\"I don't have a tab,\" she told him.\n\n\"You do now,\" Eric said with a warm smile.\n\nNicole didn't reply, and Eric took another step closer and could see tears welling up in her eyes.\n\n\"I really am a decent listener,\" he said quietly. \"And I never talk out of school.\"\n\nNicole sighed deeply then forced a weak smile and said, \"Have you had breakfast yet?\"\n\nIt was close to 10 o'clock, and Eric hadn't eaten. He normally ate around seven, but he was late finishing his workout and ended up only having a cup of black coffee, and he was starving.\n\n\"I don't want to put you out,\" he told her.\n\n\"I believe I put you out so the least you can do is let me make something for you,\" she told him.\n\nShe stood there for a moment, still fighting off the urge to cry as he assured her she'd done no such thing.\n\nShe smiled a slightly more genuine smile then said, \"Eric?\"\n\nHe smiled and waited for her to speak.\n\n\"Thank you. For all this. And maybe we could talk while I whip something up?\"\n\n\"I'd like that. And I like it even more if I could help you.\"\n\n\"Well...okay. I suppose that would be all right,\" she said, thinking back to how Tim used to sometimes help her in the kitchen in the evening and on weekends.\n\n\"Breakfast or lunch?\" she asked.\n\n\"Something simple,\" he replied.\n\n\"Cereal is the simple-est,\" Nicole said.\n\n\"Not that simple. How about some good old bacon and eggs with toast?\" he suggested.\n\n\"That sounds perfect.\"\n\nEric didn't know where anything he hadn't just put away was, so he grabbed the loaf of bread and asked how many slices she'd like. Nicole wanted one, and he wanted two, so he dropped three in the four-hole toaster while she pulled out two pans plus the bacon and eggs.\n\n\"May I?\" he asked, holding up the bacon. \"Eggs can ruined. Bacon is pretty much man-proof.\"\n\nNicole laughed and agreed to make the eggs.\n\n\"Scrambled or fried?\"\n\n\"Scrambled. Definitely,\" Eric told her.\n\n\"Same here. I don't care for 'eyes' looking at me.\"\n\nEric chuckled then asked how long she'd lived there.\n\n\"If you don't mind me asking,\" he added.\n\n\"Not at all,\" she replied. \"You shared your story so it only seems fair.\"\n\n\"Oh, right. My 'city boy' tale,\" he said with a smile.\n\nNicole started off explaining how she met Tim when he came to Seattle after also having graduated from the University of Maine.\n\n\"So he was a college professor?\"\n\n\"Yes. He got his bachelors and masters here, and was getting his PhD there when I met him,\" she explained.\n\nWhen the meal was ready, she was still talking, and apologized for monopolizing the conversation.\n\n\"No. No apology needed. I've enjoyed listening,\" Eric said immediately. \n\n\"You were right,\" Nicole said before taking a first, small bite of eggs.\n\n\"About?\" he asked before taking a much bigger bite.\n\n\"You really are a good listener.\"\n\n\"It's easy to listen when you enjoy the other person's company,\" he told her.\n\nShe smiled then told him she was very much enjoying his, too.\n\nThere was a brief lag in the conversation before Nicole asked, \"Not to bring age up again, but I know you're um...getting on in years...\"\n\nEric laughed quietly and waited for her to continue.\n\n\"No, seriously. You really are still very young, but is there no one in your life?\"\n\n\"No. Not since college,\" he told her. \"I thought I was in love, and had she not called things off, I probably would have proposed.\"\n\n\"Do you mind me asking why it didn't work out?\"\n\n\"Not at all. When I told her I was joining the Marine Corps, she told me she couldn't handle that.\"\n\n\"Because of the separations?\" Nicole asked.\n\n\"No. It was a political thing. She wasn't anti-military, but she was pretty close. The thought of supporting someone who was on active duty was too much for her to bear, so...that was it.\"\n\n\"Wow. I'm so supportive of our troops, I guess I find that kind of hard to understand. I'm not trying to be critical. I just can't relate to that.\"\n\n\"It was for the best, I'm sure,\" he told her. \"I'm also sure she found someone who shared her views, and while that may not be a deal breaker for some people, it's very important to others.\"\n\n\"I agree. Politics isn't my thing, but I can see how it could be a real problem if a couple were at opposite ends of the spectrum.\"\n\nEric told her he agreed, and for the next few minutes they kind of danced around some political issues then touched on religious beliefs. Both of them were open to the possibility of God's existence, but neither was overtly religious or claimed any particular denomination.\n\n\"We seem to have a lot in common,\" Nicole said when another lull set in.\n\n\"Yes, we do,\" Eric agreed.\n\nShe saw him looking at her in a way that said he wanted to ask her a question.\n\n\"What?\"\n\n\"Nothing,\" he said, indicating she was right.\n\n\"Yes. Something,\" she said with a smile. \"Go ahead and ask.\"\n\n\"It's really none of my business.\"\n\n\"Okay, suit yourself,\" she said pleasantly.\n\nShe reached out to take his plate when Eric asked, \"Is there anyone...I mean...do you...ever date?\"\n\n\"Date? Me? Oh...no. I...don't...I haven't...well, no one's ever asked me since Tim passed away.\"\n\nIt was a simple yes or no question, so why had it taken her so long to answer it?\n\nWhen he looked at her again, she knew he wasn't finished, and when the possibility he might ask her out hit her, she felt panicked.\n\n\"I uh, I was wondering if, you know, if it isn't...too soon or anything, would you maybe like to, you know, maybe do something...together? Not a date necessarily. Just doing something...together.\"\n\nThe panic dissipated faster than she'd thought possible, and in its place was the question\u2014why? Why would this very attractive, single man even consider asking a woman her age to go out with him? The answer that came to her was anything but flattering.\n\n\"Eric,\" she began. \"I'm doing okay. Really. You don't need to feel sorry for me or pity me or anything.\"\n\n\"What?\" he asked, the look of disbelief obvious on his face.\n\n\"Well, that's why you asked me out, right? You know I live up here all alone, I don't get out much, and I've been struggling with this being a 'shut in' thing. So you bring groceries and then to make me feel even better, you ask me out.\"\n\n\"Wait. Are you saying you think the only reason I'm asking you is out of pity?\"\n\nHis eyes were open wide and his eyebrows were raised high in disbelief as he shook his head slightly.\n\n\"Well, yes. I mean, I'm sitting here in my robe, my hair's a mess, and I look like...\"\n\n\"Like you're a very beautiful woman,\" he said, completing her sentence. \n\nHe looked right at her and said, \"I enjoy your company, Nicole. You're warm, friendly, thoughtful, and well\u2014easy to look at.\"\n\nHe smiled then said, \"Even in your robe.\"\n\nNicole made a kind of 'pfft' sound as he told her, \"That's it. It's no more complicated than that.\"\n\n\"Then...I'm flattered,\" she said sweetly.\n\n\"But?\"\n\n\"But...if Matt was alive, he'd be 18 now.\"\n\n\"I can't even imagine how awful that was,\" Eric said sincerely as he avoided the obvious implication.\n\n\"Thank you, but that's not what I meant,\" she said politely. \"I said that to let you know I'm not even close to your age, Eric. Not by a long way.\"\n\n\"Oh. I just assumed you were around 40 or so. I didn't realize you were closer to 60 or 70,\" he said as seriously as he could.\n\nIt took a couple of seconds, but Nicole got it, and when she did, she couldn't help but laugh.\n\n\"Eric. Be serious!\" she said. \"You know what I meant.\"\n\n\"I do,\" he told her. \"You thought by telling me you're over 40\u2014and I'm not convinced you are\u2014you could scare me off.\"\n\nShe laughed again then said, \"Oh, I can prove I'm over 40.\"\n\n\"Okay, but you can't scare me off,\" he said very matter of factly.\n\nNicole smiled then said in a way that made him think she was one of his teachers from school, \"Listen. Were I dating\u2014and I'm not\u2014someone like you is exactly what I'd be looking for if he was a little closer to 40.\"\n\n\"So...you're shooting me down, huh?\" he said with only partially-feigned resignation.\n\nBefore she could answer him, Zeus wandered over to the table and sidled up to Eric.\n\n\"Zeus! No. Go sit down, boy,\" Nicole said.\n\nHe didn't move and Eric turned to pet him.\n\n\"Hey, buddy. Did you want some bacon?\" Eric asked he reached for a strip.\n\n\"No, that's not a good...\"\n\nEric held it out and Zeus snapped it up and chomped it twice before swallowing. Nicole tried not to laugh when her dog wolfed down another one just as fast.\n\n\"Good boy!\" Eric said as he petted him some more.\n\n\"I'm so afraid he's going to go lame,\" Nicole said as she watched the young sheriff interact with her dog.\n\n\"Do you have a vet?\" \n\n\"Well, we don't have one in town, but there are a couple of vets in the county people around say make house calls,\" she said. \"We used one maybe four years ago, but otherwise, Zeus has been the picture of health.\"\n\nEric stopped petting, and when Zeus walked away he saw the limp.\n\n\"See? And it keeps getting worse. It just breaks my heart to think of him being in pain or getting to the point where he can no longer even get up, you know?\"\n\n\"I do,\" Eric said. \"I love dogs, and it hurts me for you as much as for him.\"\n\n\"Again, thank you. It's been tough living here by myself, but with Zeus, I'm not exactly alone, so...\"\n\nEric had finished what was on his plate, so Nicole asked if he'd like some more or maybe another cup of coffee.\n\n\"No, thank you. I don't exactly have a whole lot to do in my official capacity, but I am getting paid to be the sheriff, so I should probably get 'sherriffing'.\"\n\n\"I hope you're not upset with me,\" Nicole said as he stood up.\n\n\"No. Not at all,\" he told her. \n\nHe smiled then said, \"Disappointed but not upset.\"\n\nHe insisted on helping her clear the table and load the dishwasher before leaving, and Nicole apologized again for turning him down while assuring him it was her and not him.\n\n\"I'll live,\" he said with a smile before realizing how that sounded and quickly apologized.\n\n\"No, it's okay,\" she told him. \"I just feel so bad for saying 'no'.\"\n\n\"Well, if you ever reconsider, you'll let me know?\" he asked with a smile.\n\nNicole smiled, too, then said, \"Yes. I'll let you know,\" even though she couldn't see that happening.\n\nShe walked outside with him, thanked him again for everything then said, \"At the risk of sending mixed signals, would you mind if I gave you a hug?\"\n\nEric smiled at her and said, \"Not at all. I'd like that very much.\"\n\nNicole put her arms around his neck and Eric wrapped his arms around her body and although the hug lasted less than two seconds, Nicole found herself asking whether or not she'd made the right decision. Yes, he was young. Very young, even. But were she to put the age difference aside, he was so much like her late husband it was scary.\n\nWhen the hug ended, Nicole stepped back then said, \"I hope this won't affect our friendship.\"\n\n\"Not at all,\" he told her. \"And thank you so much for the meal and the company.\"\n\n\"Oh, sure. I...I really enjoyed it, too,\" she said even as the second thoughts grew stronger.\n\n\"All right. Well, again, maybe I'll see around town one of these days.\"\n\n\"Yes. Definitely,\" she told him before realizing she hadn't thought about her 'problem' once since he arrived other than the brief mention of it while they talked.\n\nWithin seconds of him driving off, Nicole felt as though he'd never been there at all, as she walked back into the big, lonely house. Even Zeus didn't get up to meet her, something that was happening more and more often. And that unpleasant thought caused her to make a mental note to call around to find a vet who could come take a look at him, and later\u2014whenever the time came\u2014to help her help Zeus 'cross the rainbow bridge' with dignity and respect, her polite way of thinking about having to put him down; a thought that caused tears to well up in her eyes again.\n\nA couple of hours later she did some research online and found the name of a vet she didn't recognize but who advertised traveling to her area as a part of his practice. She called the office and made an appointment with his secretary for three days later, his first available house call. When she hung up the phone, it hit her just how alone she really was, and for the first time since Tim died, she felt so desperately lonely that it made her cry.\n\nThe feeling was intense but passed fairly quickly, and later that evening she was back on her bike tearing it up as she did another virtual workout online with a male instructor she'd never seen. Nicole found herself thinking about how attractive he was until she realized he was almost certainly even younger than Sheriff Burns and not nearly as good looking.\n\n\"Get a grip!\" she told herself once the workout ended.\n\nAnd yet, try as she may, Nicole couldn't stop thinking about how, for the first time, she was thinking about someone other than Tim in a romantic way. That realization caused her no small amount of guilt until she also realized Tim was never coming back. Sure, she'd known that since the moment she'd learned his fate. But this was the first time that reality had really, truly hit her.\n\nAnd that, in turn, caused her to ask why she'd never even considered dating. The answer was embarrassingly simple: prior to that very moment she'd never had any interest in doing so. That, in turn, caused her to wonder if Eric's having asked her out had 'flipped some kind of switch' in her brain that was now allowing her to consider the possibility of eventually finding someone else. And that thought made her incredibly sad as though she was betraying her vows to the only man she'd ever loved. \n\nSo when the next thought came, the thought that said, \"Your vows ended that cold, dark night,\" she was so confused she couldn't think.\n\nThe confusion lifted the following day, but by that afternoon was back in full swing and driving her crazy. She couldn't even get in her car and drive to town. How was she supposed to get in someone else's and go...anywhere...with him?\n\nBy midnight, even her workout hadn't kicked the relentless, vicious circle, or rather 'swirl of jumbled thoughts' rattling around in her brain, and she wondered if perhaps she might need to see a therapist.",
        "\"Oh, yeah. I'd have to drive there, so...that's out,\" she reminded herself.\n\nThe day of the appointment was no better, but she did have the vet coming so she able to focus on that with 'focus' somehow turning into her blow drying her hair and putting on some mascara even though she'd never met the veterinarian who was coming to her home in another hour.\n\nWhen he arrived, Nicole was glad she'd made the small amount of extra effort when the vet, Dr. Michael Mitchell, turned out to be a rather nice-looking man who was older than her but not by much.\n\n\"Mrs. Kelly? Hi, I'm Doctor Mitchell,\" he said with a smile as he shook her hand.\n\nHe had just a touch of gray around the temples and had a very nice smile. Nicole felt silly, but she actually looked at his left hand to see if there was a wedding ring. There wasn't so she smiled back and asked him to call her Nicole.\n\n\"Oh, okay. Well, please call me Mike,\" he replied. \"And where is the big guy?\"\n\n\"Come on in,\" she said.\n\nThis time, Zeus was up and wagging his tail.\n\n\"Hey, there! Aren't you a handsome boy,\" Dr. Mitchell said as he petted the Great Dane.\n\n\"You told my assistant he's having some mobility issues. Is there anything else we want to look at? How's the appetite? Is he still playful and taking care of business?\"\n\n\"Everything else seems fine,\" she told him.\n\n\"Okay. Let's find a place where I can check this guy out,\" he said.\n\nTwenty minutes later, the vet said he thought it was arthritis.\n\n\"Without x-rays, I can't be sure nothing else is going on, but I feel reasonably comfortable with it being a function of age and worn out joints.\"\n\nHe gave her a bottle of Carprofen, the animal equivalent of Ibuprofen, then explained how much to give and how often.\n\n\"This will reduce the inflammation and the pain. But it won't make the problem go away, unfortunately,\" Dr. Mitchell explained.\n\n\"Any relief will be welcome,\" she said after thanking him for the pills.\n\n\"Do you take checks?\" she asked.\n\n\"I do,\" he said pleasantly as he looked around. \"You have a very nice home here.\"\n\n\"Oh, thank you,\" she told him as she grabbed her checkbook. \"It's too big for one person, but I can't bear to leave it.\"\n\nHe didn't know the story, but he did know there was a large diamond ring on her hand, so when she decided to share what had happened to the rest of her family, the good doctor was immediately sympathetic.\n\n\"That's just...terrible. I'm so very sorry,\" he told her as she handed him the check.\n\nNicole smiled then said, \"Thank you. I'm...I'm just now getting to the point where I'm thinking about dating again.\"\n\nShe felt so silly for saying it, she had to look away.\n\n\"I'm recently divorced myself,\" he offered.\n\n\"Oh,\" was all Nicole could think to say in response.\n\n\"Say. I know we just met, but I was wondering if you might like to maybe get together sometime.\"\n\nHis offer sounded a whole lot like Eric's, but Mike was someone much closer to her age, so without even thinking she said, \"That sounds very nice.\"\n\n\"Wonderful. Would this weekend maybe be okay?\"\n\n\"Um...sure. Yes, that sounds perfect,\" she told him without a thought about her inability to go anywhere.\n\n\"Great. Well, I'll call you then and we can work out the when and where,\" he said with a warm smile.\n\n\"Sure. I'll look forward to it,\" Nicole told him before walking him outside.\n\nAs he'd promised, Mike called her the next day, and when Nicole suggested her place after fretting for hours about how to make this work, he eagerly accepted. Truth be told, she'd have much rather gone somewhere with him, but just knowing she could dip her toe in the dating pool without having to deal with her 'issue' was a godsend.\n\nFor the first time since Tim was alive, Nicole went all out on her hair and makeup and chose the nicest dress she had hoping to make a good impression but also just to make herself feel special again. \n\nAs she looked at herself in the mirror, her long, blonde hair stood out in sharp contrast to the black dress she was wearing, and went quite nicely with the gold jewelry she'd chosen to accessorize with. As she turned left then right she thought that perhaps she didn't look her age after all. In fact, she was pretty sure she could pass for 35 without any difficulty, and for some reason, that made her think of Eric who would then only be a mere five years younger than her.\n\nNicole shook her head, laughed out loud then said, \"Yeah, right,\" as she took a look at the 'caboose' which was still keeping all that 'junk in her trunk' packed quite nicely.\n\nWhen Mike arrived he was carrying a bouquet of red roses and a bottle of wine and told Nicole she looked stunningly beautiful. She thanked him for both and told him he looked very nice himself.\n\nWithin minutes she found herself having a very enjoyable evening. Between his pleasant smile, the intelligent conversation, and his easy laugh, she was very happy she'd agreed to make dinner for him. The only problem was she was already getting short on supplies again and had to get imaginative to come up with something worthy of a first date.\n\nIt wasn't much, but Mike told her it was delicious, and by their second glass of wine, Nicole was warming up to the animal doctor more than she'd imagined possible. She offered him a seat on the couch, and when he moved a little too close to her it made her feel uncomfortable, but she didn't say anything. She just scooted over as close to the armrest as she could.\n\nThen out of nowhere he said, \"You mentioned how this place is too big for one person. It must get very lonely up here all alone.\"\n\nTaken aback, Nicole stammered slightly as she replied.\n\n\"Um, well, I suppose it does.\"\n\nShe tried not to cringe when he reached over and brushed her hair back, smiled, then said, \"That could change.\"\n\nWithout jerking her head away Nicole slowly moved back as far as she could.\n\n\"Was that inappropriate?\" Mike asked as though her reaction greatly surprised him.\n\n\"It...it was very...unexpected,\" she told him.\n\n\"I meant no offense,\" he said with a smile. \"It's just that you're a very beautiful woman, we're both single, and I thought since you invited me to spend the evening with you...\"\n\nWhen he reached over again to touch her hair, Nicole felt her skin crawl. \n\nShe stood up and said, \"I think it might be best if we called it an evening.\"\n\nMike looked at her like she'd just called him 'a fat slob' or worse.\n\n\"You're serious? You want me to leave?\" he said, the incredulity heavy in his voice.\n\n\"Mike. Listen. You seem like a great guy. I think we maybe just got our wires crossed somewhere along the way.\"\n\n\"Well, if you mean asking me to your home on our very first date where you wined and dined me then out of the blue tell me you're not interested, I'd say you're right,\" he said with no small amount of sarcasm while he also stood up.\n\n\"No, Mike. You don't understand. I invited you here because...\"\n\n\"You know what? Save it,\" he told her. \n\nHe held up dismissive hand and said, \"I don't need this.\"\n\nStunned, Nicole had no idea what to say. She stood there and watched him grab his jacket then tell her he'd show himself out.\n\nNicole wasn't just shocked, she was hurt. Deeply hurt. And offended and angry and...and many other emotions.\n\nOf all the ways she'd expected the evening to end, that was not on her list. She didn't actually have a list or any fixed idea in her mind about how things would go, but she'd hoped for some pleasant conversation, and if things had gone really well, possibly a kiss. \n\nToo upset to do anything but want to cry, Nicole sat there for several hours trying to understand what had happened. More importantly, she wanted to know what she could have done to give him such a wildly-wrong impression of her intentions. \n\nSomewhere around one in the morning, she decided it must have been inviting him to her home. She had no idea how many other women would do the same thing under similar circumstances, and yet her circumstances weren't really similar unless these 'other women' also found the thought of leaving their house so incredibly difficult.\n\nBy the time she finally fell asleep, she wasn't sure whether to blame herself or chalk it up to Mike being a first-class jerk. And by then she was so mentally exhausted she no longer cared.\n\nWhen she woke up around noon, it was because of something wet on her face. Nicole opened one eye and saw Zeus's big mug looking at her. He hadn't done that in months, and all she could think of was the Carprofen she'd given him in his 'evening' meal around midnight.\n\n\"Hey, boy. You feeling better?\" she asked as she reached out to pet him.\n\nHis tail was wagging, and it was time for him to go outside anyway, so she threw off the covers and dragged herself out of bed. Her good mood from seeing her dog 'happy' lasted until she sat up and saw her black dress draped across the arm of a chair in the bedroom.\n\n\"Ugh,\" she said as the memories came flooding back.\n\nShe grabbed her robe and as she walked toward the kitchen she pulled it on and said, \"Come on, boy! Let's go potty.\"\n\nNicole opened the door to let him out before turning on the coffee pot she'd gotten ready before going to bed. She watched Zeus through the window and it made her smile to see him bounding around outside almost the way he used to. The medication reduced inflammation and joint pain in animals like it did in humans, so Nicole was still grateful to have met Mike at least for that one reason. She had no idea how long it would be effective, but for now, her dog seemed to have benefitted from his visit even though she hadn't been so fortunate.\n\nAs hard as she tried to not dwell on what happened, Nicole found it impossible to let go of the bitter taste the 'date' had left in her mouth. Jerk, ass, misunderstanding, or whatever else it might have been, she was still very upset by it for the next several days.\n\nSo when she heard the sound of a car door slamming three days after that, her spirits soared at the thought that it might possibly be Eric. When she peeked out the front window and saw that it was, she nearly ran outside and hugged him. But not wanting to be guilty of sending mixed signals, if she'd even done that with Mike, she waited on the front porch.\n\n\"Mornin',\" he called out with a bright, cheerful smile.\n\n\"Hey, there!\" she called back.\n\n\"Are you gonna make me carry everything inside?\" he asked in that pleasant way of his.\n\n\"What? You brought more...vittles?\" she said with a laugh as she headed down the steps to the cruiser.\n\n\"I did,\" he replied as he turned around with a half dozen plastic bags strapped to his arms.\n\n\"Eric! You do not have to keep doing this,\" she said, trying to pretend she thought it was way over the top when she was deeply touched by his kindness.\n\n\"That's very true. I don't have to keep doing it, but I am going to keep doing it until you're ready to um...get back in the saddle again.\"\n\nBefore he could get up the steps, Zeus came out of the house to meet him. Eric set the bags down and gave the 'Shetland Pony' a good roughing up.\n\n\"He's feeling so much better since he's been taking medication for his arthritis.\"\n\n\"Medication?\" Eric asked as he picked the bags back up.\n\n\"It's called Carprofen.\"\n\n\"Sounds like Ibuprofen,\" Eric said as Nicole followed him inside, carrying a couple of bags with her.\n\n\"Exactly. It works the same way for animals. Anyway, it's really made a difference.\"\n\nEric set the bags on the kitchen counter then asked about the vet.\n\n\"Did you call someone?\"\n\n\"I did,\" she said. \n\nThe enthusiasm in her voice waned, and Eric could tell something was wrong.\n\n\"Was there a problem?\" he asked while he began putting things away.\n\n\"Oh, um...not with the house call,\" Nicole said.\n\nEric turned around and said, \"Nicole? I don't know you all that well, but I know you well enough to know there's something you're not telling me.\"\n\n\"I've unloaded enough of my problems on you. Any more and you'll think I'm a basket case,\" she said with a smile that wasn't quite right.\n\n\"I feel like I proved I'm a decent listener,\" he told her. \n\n\"I won't argue with you about that,\" she said quietly.\n\n\"I can probably carve out a few minutes from arresting criminals for you if you'd like to talk about it,\" he said, smiling in a way that made her remember she could trust him.\n\n\"If I tell you what happened, promise you won't lecture me,\" she said.\n\n\"Why would I do that?\" \n\n\"I don't know. I'm not even sure why I said that. Maybe once you hear my sad story it'll make sense.\"\n\nThey put the last items away then Eric said, \"I'm all yours.\"\n\nAfter they sat down, it only took Nicole 30 seconds to explain what happened, but 30 minutes later she was still talking about the way it made her feel. \n\n\"How could I have been so wrong about someone? I'm not...stupid. Nor am I naive. And yet I had no idea.\"\n\nShe sat there for a moment then asked, \"Do I come off...like that?\"\n\n\"Like that?\" Eric asked for clarification.\n\n\"You know, like I'm...coming on or something?\"\n\n\"At the risk of sounding too much like the man who just assumed things about you, I want you to know you come across as caring, thoughtful, kind, and charming. But there is one area I'll agree with him on based on what you told me.\"\n\n\"You agree with him?\" Nicole asked, the look of surprise all over her face.\n\n\"No. I don't agree with him, I agree with one thing he said,\" Eric clarified.\n\nNicole didn't reply. She just waited for Eric to explain.\n\n\"He is right about you being a beautiful woman,\" he told her.\n\nThe sincerity with which he spoke the words was all over his face as well as in his tone of voice.\n\nNicole sat there and took them in before she allowed herself to smile. It wasn't a full-on, genuine smile, but it was a very courageous effort.\n\n\"That's very sweet of you to say,\" she told him. \n\nThis time, Eric didn't reply.\n\nNicole looked at him then said almost wistfully, \"If you were just a little bit closer to my age.\"\n\n\"Then...?\" he asked.\n\n\"Then I would have accepted your...well, your invitation.\"\n\n\"Are you telling me the only reason you said 'no' was my age?\" he asked, his eyebrows raised high.\n\n\"No. Well, maybe. Or it could be my age,\" Nicole said hoping to make it somehow more palatable.\n\n\"I still don't know your age\u2014your exact age\u2014but I do know that's the last thing on my list of concerns when it comes to, you know...\"\n\n\"Dating?\" she said knowing that's what he meant.\n\n\"I was going to say 'getting to know someone' but, yes...dating.\"\n\n\"But there's this little problem of mine. And I'm not talking about my age.\"\n\nNicole smiled then said, \"Okay, not just about my age.\"\n\n\"Your age isn't a problem at all,\" Eric told her. \"Not to me anyway. And I think I might have a way to help you work through this...issue.\"\n\n\"Any and all ideas are welcome,\" she told him. \"It's getting to the point where worrying about this becoming permanent is as bad as the 'issue' itself is.\"\n\n\"I have to head back to town, but I've been doing some reading on this, and I found something I think could really help.\"\n\n\"Then I'd like to hear it,\" Nicole said, her curiosity growing.\n\n\"I'd offer to come back this evening, but after what happened, maybe tomorrow during the day would be a better option.\"\n\nNicole couldn't believe how at ease she felt around this very kind, very pleasant, much-younger man. Yes, she'd misjudged Mike by a mile, but she was as close to 100% sure Eric would never say or do anything like that as she could be.\n\n\"I trust you, Eric. And if you think this could help, I'd say the earlier the better.\"\n\n\"I never want to do anything to jeopardize that trust, Nicole. So while I'd love to come back later today, I'm more than willing to wait.\"\n\nShe only needed a moment to think it over before saying, \"No. Please come back this evening. I...I'd like that very much.\"\n\n\"All right. If you're sure,\" he told her as he stood up to leave.\n\n\"Yes. I'm sure,\" she assured him. \n\n\"What time works best for you?\" she asked, this time a genuine smile on her face.\n\n\"Anytime. You choose,\" he told her.\n\n\"Well, I...we...made breakfast together. Would you maybe like to help me make dinner?\"\n\n\"Oh, my. You're a brave woman,\" he teased.\n\nShe smiled again and Eric told her he'd love to. \n\n\"Maybe eight o'clock?\" she asked, hoping that wasn't too late.\n\n\"Night owl?\" he correctly surmised.\n\n\"And how,\" she admitted. \"I didn't used to be. But since...you know...I rarely get to bed before three in the morning and usually even later.\"\n\n\"Okay. I can do eight,\" he said. \n\nEric smiled then quickly added, \"Well, maybe once.\"\n\n\"I know! I'm so sorry!\" Nicole told him. \"We always ate around six o'clock, and while eight isn't insanely late it's...\"\n\n\"Pretty close,\" Eric said with a smile of his own. \"But for you...eight it is.\"\n\nNicole thanked him two more times before he left, and once he was gone, she had an almost 'lighter than air' feeling. And although it felt wonderful, it caused her to wonder why in the world a man so much younger than her could make her feel that way.\n\nShe didn't have an answer, so for now at least, she intended to 'go with the flow' and try and enjoy feeling good. And after having felt so bad for so many days, she had to admit it felt wonderful to feel good again.\n\nAn hour later, Nicole got on her bike the earliest she'd ridden it in months, and ripped through the most intense workout she could remember in just as long. When she got off, she was feeling on top of the world, and for the first time, she asked herself why she was so unwilling to at least try going out with a younger man. \n\nAgain, she had no answer to her question, but the words 'go out' caused a good amount of her post-exercise high to disappear. But it came back when she reminded herself why Eric was coming back over. If he had something\u2014anything\u2014that could help her break out of this irrational-but-very-real fear of leaving the property she could quite possibly turn her entire world around before she actually became a shut in. And if that could actually happen, then, well, anything seemed possible.\n\nNicole showered, and although this was most definitely not a date, she still took the time to style her hair and put on some makeup. Nothing too much. Just a little sheer foundation and some mascara and possibly a lip coat of lip gloss depending on what she chose to wear. \n\nA dress was out of the question. A skirt was too much, too. As she flipped through her things she realized how much she cared about the way she looked, and that thought made her smile.\n\nShe had a very nice pair of black pants she hadn't worn in...how long? Three years? No...four. Yes, four, because it had been just over two since she'd bought anything nice for herself to wear, and what she had bought had been purchased on line. Things like underwear and socks and other necessities.\n\nBut the pants were clean and had been hanging fully extended so there was no crease or dust on them, and to her great delight, she slipped into the size six perfectly. The last time she'd worn them, she'd also worn a light-blue, long-sleeved cashmere sweater that still made sense. It was a V-neck, and while it might be a little 'deep' for just chatting, it was very pretty, and in the end, Nicole decided it would be perfect.\n\nShe added a pair of silver earrings for her non-date then almost put on a matching necklace before thinking that might be a bit much. She laughed at the thought of wearing heels in the house, but she did at least think about it before slipping into some comfortable, black flats.\n\nHer very full-C cup boobs filled out the material quite nicely, and when she recalled Tim referring to them as 'sweater puppets', she laughed out loud. And for the first time since he'd died, recalling a pleasant memory about him didn't make her sad. She didn't have long to think about it, though, as her doorbell rang a few minutes later. ",
        "If it was Eric, he was early, but she was ready so she opened the front door and asked, \"What are you doing?\"\n\nThere were silver trays laying on the porch on either side of him, and he was holding a bouquet of flowers.\n\n\"Um...these are for you,\" he said as he handed her the bouquet. \"I hope they're okay.\"\n\n\"They're...beautiful,\" she told him truthfully.\n\n\"Roses seemed inappropriate for a non-date so I took a guess and thought maybe you'd like these.\"\n\n\"Wildflowers. I...I love them!\" she said before looking down at the covered trays.\n\n\"Oh. That. Um, well, I knew exactly what you had in the refrigerator, and as much as I loved the bacon and eggs, I thought something nicer might be, well...nicer.\"\n\nEric bent over and lifted one tray exposing a steak, a baked potato and asparagus with a slice of cheesecake.\n\n\"I know you eat bacon, so I'm praying you eat beef. The other tray is identical so if you don't...\"\n\n\"I do,\" she said, her eyes wide with surprise. \"I'm...I'm speechless.\"\n\nEric picked one of the trays up and brought it inside then went back for the other while Nicole went to put the flowers in a vase.\n\n\"These are so pretty,\" she said as she moved them to the vase. \"Thank you, Eric.\"\n\n\"You're very welcome, and speaking of pretty...you look amazing.\"\n\nEric was wearing jeans with a sweater over a button-down shirt, and looked very handsome, and Nicole told him so.\n\n\"Thank you, but you really look...wow!\" he said without sounding over the top.\n\nNicole smiled then came around to look at the 'spread' and said, \"This looks absolutely delicious. Did you do this?\"\n\n\"Me? No. I had some help,\" he told her. \n\n\"Oh?\"\n\n\"Um, yeah. Hank's wife was in the store when I went in to see about buying what we needed, and she overhead who it was for and insisted on cooking it.\"\n\n\"Sarah did all this?\" she said with a smile.\n\n\"Everything to include the trays. Well, Hank went and go them for her. Oh, and before I forget, Sarah said to tell you she misses seeing you.\"\n\n\"Ah! That is so sweet. And this is very nice, Eric. Thank you yet again.\"\n\n\"We don't want it to get cold so...are you ready?\"\n\n\"I am,\" she said as he came around to help her get seated.\n\n\"Oh, I have a bottle of wine in the car. One sec, okay?\"\n\nAlthough Mike had also brought her flowers and a bottle of wine, Nicole never thought about the similarities because the two men were so completely different.\n\nBy the time they finished eating, Nicole had completely forgotten about the fiasco with Mike, and even better, she was amazed at the number of new things she learned that she and Eric had in common. \n\nAs they began sipping their second glass of wine, they moved to the living room where Eric made sure to sit across from her. As much as she appreciated his understanding, a part of her was wishing he'd sat where Mike had sat and that he'd reach over and brush back her...\n\n\"How does that sound?\" he said.\n\n\"Oh, my. I'm going to be completely honest and admit I was kind of daydreaming,\" Nicole told him with a kind of 'my bad' expression on her face.\n\n\"I know I'm not a great orator, but...ouch.\"\n\n\"No! You're not boring. At all. In fact, I love talking to you. I...I just kind of let my imagination run wild for a moment, so I didn't hear what you said.\"\n\n\"Okay. I suppose I can live with that,\" he told her as he smiled at her. \n\n\"What I was saying is that you have to take this in increments.\"\n\nNicole was still lost so she waited for him to fill in the blanks.\n\n\"Overcoming whatever this thing is that's keeping you here.\"\n\n\"You can say 'phobia', Eric,\" she told him.\n\n\"I'm not convinced it's that bad, but then I'm no psychiatrist. Not that you need one,\" he added very quickly.\n\nNicole laughed and told him that was 'high praise'.\n\n\"So how does it work?\" she asked.\n\n\"Well, from what I've read, you can work you way out of any...phobia...with really small steps, and in many cases surprisingly fast. For instance...\"\n\nHe fished out his phone and clicked a few times then asked her if she was afraid of snakes.\n\n\"I don't like them, but I don't have a snake phobia,\" he told her.\n\nHe handed her the phone then explained who people who are deathly afraid of even the sight of a snake can be desensitized in a very short amount of time.\n\nHe watched her scroll and read as he spoke.\n\n\"That's amazing. But does it work on other things?\"\n\nHe reached for the phone, and as he searched for the other article he'd found, asked, \"Are you a germ 'phobe'?\"\n\nNicole laughed again and told him something similar to his concern for her with regard to snakes.\n\n\"I'm not a fan, but I don't freak out thinking about them nor do I wash my hands a hundred times a day,\" was her answer.\n\nHe found the site where a well-known TV doctor named Oz took several people who quite literally lived in morbid fear of germs and bacteria from feeling ill just thinking about them to actually licking the inside of a trash dumpster in less than one day.\n\nNicole shivered at the thought but understood the concept without watching the video.\n\n\"I trust you're telling the truth,\" she said as she declined to see the evidence.\n\n\"The point is, I think we can work through this by starting out slow.\"\n\nFeeling hopeful for the first time in months, Nicole said, \"Okay. I'm in. Where do we start?\"\n\nKnowing how sensitive it was, he pointed to the couch then asked if he could sit there.\n\n\"Oh. Sure. Definitely,\" she told him. \n\nThe part of her that been wanting him to sit there just minutes before fell silent as her interest in conquering this fear took center stage.\n\n\"I took some photos when I left your property, so I want to start out where you park your vehicle and go from there. Is that okay?\"\n\n\"Sure. Let's try it.\"\n\n\"Okay. Here's the first image. Tell me how it makes you feel.\"\n\nNicole saw her Land Rover and noticed the photo was oriented away from the driveway.\n\n\"Nothing. Other than how old my Rover is,\" she said with a smile.\n\n\"Okay. Next. This one is taken from the same spot but is looking in a different direction.\"\n\nJust as she suspected, this one was looking down the long, unpaved driveway that led to the road.\n\n\"That makes me feel a little anxious,\" she admitted.\n\n\"Fine. We'll stay right here until it doesn't,\" he told her.\n\nFor the next couple of minutes they talked about the Land Rover, getting in it, and discussed the driveway as she periodically looked at the photo.\n\nIt didn't take long before Nicole said, \"It's not making me feel queasy anymore.\"\n\n\"Great. Now how about this?\"\n\nIt was taken where the driveway meets the blacktop, and that made Nicole shiver.\n\n\"Worse than the driveway?\"\n\n\"A lot,\" she told him.\n\nIt took half an hour of looking at it off and on while they spoke to get her to a place where it didn't bother her much.\n\n\"So far so good?\" Eric asked.\n\n\"This is really incredible,\" she told him.\n\nFrom there they moved to a picture of the road extending in the opposite direction of the way Tim and Matt drove that fateful night.\n\nIt was nearly midnight before she was desensitized to the road from that angle.\n\n\"Feel like pressing your luck?\" he asked.\n\n\"I guess that depends,\" she replied. \"What's next?\"\n\n\"We could look at another image or we could get in my car and drive out to the road and come back here.\"\n\nFear briefly welled up in her before she said, \"Let's do it. The actual ride part.\"\n\nIt was downright chilly outside but not 'Maine cold' yet so Nicole only grabbed a thin jacket which Eric helped her with before going outside. He also opened her door, and that only made her like this younger man even more as she climbed inside.\n\n\"Okay. If at any time you feel like we need to stop you let me know immediately, okay?\"\n\n\"I will,\" she promised.\n\n\"Are you okay so far?\" he asked before starting the car.\n\n\"I think so,\" she told him.\n\nHe started it then asked the same question. He then put it in gear and asked again.\n\nHe drove 2-3mph then stopped well short of the blacktop.\n\n\"Keep going,\" she told him, her eyes fixed on the beams of light ahead of them. \"I think it helps being dark for some reason.\"\n\n\"Maybe it keeps the peripheral 'clues' to a minimum.\"\n\nNicole understood what he meant and told him he could go right up to the road. He did so then stopped and put the car in park.\n\nNicole looked left then to the right\u2014the direction her husband and son had driven the last moments of their lives.\n\nShe took several deep breaths then said, \"I...I think I'm okay.\"\n\n\"Great. Let's back up and go home,\" he said.\n\n\"No. Wait,\" she told him as she reached over and put her hand on his right arm which was ready to shift the car into reverse.\n\n\"Okay.\"\n\nThey sat there with the car idling for a minute then Nicole said, \"I...I want to see.\"\n\n\"See?\" Eric asked.\n\n\"Where it happened.\"\n\nShe'd gone left every single time she'd left the house even though it was farther into town that way because going to the right meant confronting the worst of her fears.\n\n\"Why don't we wait and try that tomorrow?\" he suggested very gently.\n\n\"No. This is working, and I want to press on.\"\n\n\"If you're sure.\"\n\n\"I am,\" she said as she turned toward him and smiled.\n\n\"All right. Then off we go.\"\n\nEric turned the car to the right and again asked her to tell him to stop anytime she felt the slightest bit of stress. When he put the car in drive, he felt her hand clamp down on his arm. As he turned the car, he felt her let go then reach for his hand. He let her take it then squeezed back when she began holding on tight.\n\nAs they drove along they didn't see a single car which was the norm for this time of night. As they got closer to the place where it happened, Nicole was nearly cutting off the blood supply in Eric's hand, but there was no way he was going to mention it let alone let go.\n\nThe retiring sheriff had shown him the exact spot, and there was still a marker there with the names of both of the men Nicole loved on the shoulder with the date of the accident and the letters 'RIP'.\n\n\"You all right?\" he asked very quietly.\n\nHe glanced over and saw tears streaming down her face but didn't say another word.\n\n\"I need to get out,\" she said as she let go of his hand.\n\nHe wanted to pull off the road, but Nicole had already opened the door and was stepping out. He let her go then pulled over and joined her.\n\nBy the time he walked up to her, she was sobbing as she stood in front of the sign, touching it almost reverently as the tears flowed. Eric wanted to comfort her, but he was afraid to even touch her, so he stood next to her as she cried.\n\n\"Matt!\" she said as she touched his name then did the same for her husband.\n\n\"I miss you both so much!\" she said in a jagged voice racked with grief.\n\nAt some point, and without warning, Nicole turned to Eric and put her arms around him and continued crying. Very slowly he put his around hers and held her. Neither of them were aware of how cold and dark it was as they stood their letting this beautiful woman grieve again for the worst loss a wife and mother can ever endure.\n\nWhen her breathing began to level out Eric quietly asked if she needed more time there.\n\n\"No. I'm...I'll be okay,\" she said as she slowly pulled away.\n\nShe turned and touched each name one more time then let Eric know she was ready to go home.\n\nThey drove in silence until they reached the driveway. Before he turned off the engine, Nicole looked over and said, \"I don't know how to thank you, Eric.\"\n\n\"You don't have to thank me. If this was of any help at all then that's thanks enough.\"\n\n\"It was,\" she said sweetly.\n\nTo his surprise she leaned over and kissed him on the cheek and said, \"Thank you,\" again.\n\nNot sure what to think or even do, Eric said, \"I uh, I should probably go home.\"\n\n\"Oh, right. It's late, isn't it? Very late,\" she said.\n\nNicole smiled in the dark then said, \"To normal people anyway, right?\"\n\n\"It is late, but that's not the reason why I think I should leave.\"\n\nNicole sat there and looked at him as her smile faded.\n\n\"I understand. You have think I'm some kind of nut job. Between my 'phobia' and all the mixed signals I've sent tonight after telling you how upset I was after Mike was here, I...I can't really blame you.\"\n\n\"No. That's not what I think at all,\" he told her quietly over the hum of the engine.\n\n\"I'm afraid to ask what you do think,\" she told him. \"I'm not even sure I know what I think anymore.\" \n\n\"Nicole, I'm no shrink. But you've been through so much with the loss of your family. That by itself is reason enough to lose your mind, let alone...\"\n\n\"Hey! Are you saying I've lost my mind?\" she said, suddenly almost playfully.\n\n\"No. I didn't say that at all,\" he told her. \n\nThen he smiled and said, \"I might have been implying that, but I most definitely did not say it.\"\n\nNicole laughed, and the way she laughed told him she was feeling better, and that made Eric very happy.\n\n\"You're right. It's been a very difficult last couple of years. And as much as I hate to admit it, living up here by myself has probably just made things worse. It might even be the reason I found it so hard to leave.\"\n\n\"I hope I've helped in some small way,\" he said.\n\n\"More than you can imagine,\" she told him.\n\n\"I'll walk you to the door if you like,\" he offered.\n\n\"Yes. I would very much like that.\"\n\nEric left the car running as he went around to get her door. She let him help her stand up and thanked him before he walked her up the steps.\n\n\"I apologize for keeping you up so late,\" she said to him as they stood near the front door.\n\nEric smiled but didn't say anything.\n\n\"So now that I can leave home again, I'd...well, if your offer still stands...I...I would love to, you know, maybe go out with you sometime,\" she told him.\n\n\"It definitely still stands, and I would like nothing more.\"\n\nNicole smiled then Eric said, \"With one exception.\"\n\n\"Oh? What kind of exception?\" she asked as the dim porch light allowed her to just make out the features of his very handsome face.\n\n\"This,\" he said quietly as he leaned down to kiss her.\n\nNot only did she not flinch or pull away, Nicole raised her arms and put them around his neck and kissed him back.\n\n\"I like your exception,\" she said sweetly as the kiss came to an end.\n\n\"Do you have any idea how beautiful you are?\" he said just above a whisper.\n\n\"It's very dark out here, Eric, so all of my flaws are well hidden,\" she replied modestly.\n\n\"I haven't seen a single flaw no matter the light,\" he said as he took her face in his hands before kissing her again.\n\nThis second kiss stirred the embers that had nearly gone out inside her since the last time she'd made love with her husband. The degree to which they flared up scared her, and as much as she wanted more, she was grateful he wasn't staying.\n\n\"Goodnight, Eric,\" she said as her body trembled from both his touch and his kiss.\n\n\"Goodnight,\" he said quietly as he lowered his hands, touching her arms and then her hands as he did.\n\nTheir fingers briefly intertwined before slowing slipping apart.\n\nAs he turned to walk away Nicole stood there unable to move. She knew that tomorrow she could try and sort through the onslaught of feelings she was experiencing. For now, her mind was a jumbled maze of emotions she simply couldn't possibly wade through. And as he drove away, she had no desire to even try. She only wanted to bask in the feelings she was experiencing for as long as they could last.\n\nOnce his taillights disappeared, she went inside and sat down. Unlike the state of confusion she experienced after Mike left, Nicole was feeling things she hadn't felt since her second date with Tim all those many years ago. The feelings were so strong, so overpowering, that she got up and went to the bedroom and undressed.\n\nNicole laid down and let the cool of the satin sheets spread across her back as she relived the last few minutes on her front porch. As she imagined him kissing her, her fingers slowly moved to the one place on her body that was screaming out for her attention. Her middle finger slowly circled the swollen nub surrounded by wetness, the likes of which she hadn't known in so very long. As his lips 'met' hers her body exploded with pleasure in the shortest amount of time in her life.\n\nOnce the spasms stopped, she began again. This time was slow, deliberate, and delicious as she allowed herself to imagine more than just his kiss. It was the first time she could ever actually feel someone other than her husband entering her by just imagining it, and while she was fully aware this was only fantasy, it didn't stop a second massive release just minutes later without the aid of the small, personal device she normally needed to 'get there'.\n\nNow pleasantly spent, Nicole pulled the covers over her and for the first time in nearly two years, she fell asleep without a single unpleasant thought or fear.\n\nAt his place, Eric was too exhausted to sleep. His father used to say that, and even though it made no sense to him when he was a boy, he understood the meaning now. He was so tired he couldn't relax as he, too, relived the events of the last few hours.\n\nHe couldn't stop thinking about how amazing Nicole looked. She wasn't wearing anything special, but she looked so soft and feminine and beautiful to him. Dinner was pleasant but it paled in comparison to the conversation and just being near her. \n\nHelping her get through this issue was one of the most rewarding things he'd ever done, and that it could happen so quickly was due to being able to access so much information so quickly online. He couldn't know if it would 'take', but he felt like Nicole at least had a chance now.\n\nAnd then there was the first kiss. Soft and sweet and delicious, but no match for their second. As his hand reached for his 'special place' Eric knew it was going to happen even though he'd sworn off doing it a hundred times. Once every two or three weeks, no matter how hard he tried to resist, he would inevitably end up 'taking things in his own hands' or rather\u2014hand.\n\nHe didn't even try to fight back when he lay there imagining each of the kisses they'd shared or the way she felt so small and wonderful in his arms. Her long, soft, silky hair. the smell of her perfume mingled with some kind of wonderful shampoo. \n\nHe made it last as long as possible, but the tension was so high it only took a couple of minutes to produce a huge gusher of white gold from the one-eyed geyser. \n\nOnly then could he finally relax and fall asleep, and when he did, his last thoughts were of her.\n\nNicole woke up at eleven the next morning and smiled within seconds of realizing she was awake. She showered, got dressed, and fed Zeus then picked up her car keys and got ready to go into town for the first time in what? A month? She wasn't exactly sure and really didn't care. Just the thought that she could made her smile.\n\nShe was doing fine until she started down the driveway. When the old fears welled up inside her, she stopped the car and sat there waiting for it to pass.\n\n\"Everything's okay. It's all in your mind. There isn't any threat,\" she told herself as she breathed deeply and exhaled slowly.\n\nThe anxiety passed and she continued driving. She got to the road, and after looking both left and right without issue, she turned right. As the marker approached she reminded herself the marker was nothing but a sign. It wasn't alive, it didn't have feelings or even meaning beyond what she gave it, and that it couldn't harm her.\n\nAs she drove on by she looked right at it and said, \"I love you both very much,\" fully aware no one was there to hear her.\n\nFor a brief moment she felt guilty for feeling free, but that feeling also passed very quickly. \n\nNicole stopped at the only coffee shop in town and ordered four cups to go. The owner told her how much he'd seeing missed her and how good it was to see her out and about before telling her, \"These are on the house.\"",
        "She smiled, thanked him, then laid a ten-dollar bill on the counter. She shifted the paper tray/carrier around so she could open the door then headed across the street to The General Store where Hank welcomed her with his booming voice.\n\n\"Well, I declare!\" he said loudly and with a smile. \"Look what the cat drug in!\"\n\n\"Hi, Hank!\" she called back before walking over and offering him a cup.\n\nHe picked it up, smiled again, and said, \"It's so good to see you, Nicole. How you doin'?\"\n\n\"Good. Really good,\" she told him truthfully.\n\nThe sound of a familiar female voice caught her attention as Sarah walked up.\n\n\"Look at you!\" she said as she hugged Nicole the best she could.\n\n\"I brought one for you, too,\" she said as she held out the tray.\n\n\"You didn't have to that,\" Sarah said as she took one.\n\n\"And you didn't have to make such an amazing dinner,\" Nicole reminded her.\n\n\"It was the least I could do,\" she said with a bright, happy smile. \n\n\"It was very thoughtful of you and much appreciated.\"\n\n\"I fished out the silver trays,\" Hank announced proudly.\n\n\"Then thank you, too!\" Nicole told him as Sarah gave him an 'are you kidding' look.\n\nThey talked for a couple of minutes, and both of them were very happy to know she was able to get out again, and both of them hugged her when she told them she needed to go.\n\n\"Would you be heading to the sheriff's office by any chance?\" Sarah asked with a twinkle in her eye.\n\n\"I just might be,\" Nicole said with a smile of her own.\n\n\"He's a very handsome young man,\" Sarah said quietly as though Hank couldn't here.\n\n\"I'm standing right here, woman!\" he said as though he was jealous.\n\n\"If I looked like Nicole, you might have a reason to get all worked up,\" she told her husband playfully.\n\n\"Ahh! That is so sweet,\" Nicole told her.\n\n\"And true. It's none of my business, but I think the sheriff is pretty sweet on you.\"\n\n\"Oh?\" Nicole replied with another smile. \"I had no idea.\"\n\n\"Well, he is,\" Sarah informed her. \"He's awfully young, but he's such a nice man.\"\n\n\"Yes. Yes, he is,\" Nicole agreed.\n\n\"Well, you tell him 'hello' for us, okay?\" Sarah requested.\n\n\"I will, and thank you again for the wonderful meal.\"\n\n\"Our pleasure!\" Hank said much too loudly and as though he'd done all the work.\n\nSarah smiled the way a wife does who's used to her husband's ways, and Nicole smiled back understandingly.\n\n\"Bye, you two!\" she said as she headed out.\n\n\"Come back soon!\" Sarah called back.\n\nIt was just a block to Eric's office, and she smiled when she noticed the cruiser was out front. The tiny town couldn't afford even a single deputy to help out, so if there was any need to arrest someone and keep them overnight, the sheriff had to be there 24/7. No one was in 'the clink', but Eric was at work.\n\nWhen she walked in, he was sitting at his desk. He looked up and froze then smiled before standing up.\n\n\"Well, well, well,\" he said as she walked toward him.\n\n\"Hi,\" she said sweetly. \"This is for you.\"\n\nThey stood there awkwardly for a moment before Eric leaned down to kiss her on the cheek. When he did, Nicole told him he was more than welcome to kiss her and Eric gladly did so.\n\n\"Now that's a good morning,\" he said before taking a cup and thanking her for it.\n\n\"And last night was a good...no, a great evening,\" she said with cheerful smile.\n\n\"It was pretty amazing, wasn't it?\" Eric offered.\n\n\"Uh-huh. Very.\"\n\n\"I haven't been able to stop thinking about it. Or you,\" he told her.\n\n\"Oh. Then I'm not the only one daydreaming about last night.\"\n\nEric laughed then said, \"That makes me very happy.\"\n\nShe had no intention of saying it, but it just kind of came out.\n\n\"You make me very happy,\" she told him.\n\nEric smiled again then said, \"Truth be told, I didn't just start thinking about you last night.\"\n\n\"Oh?\" she said with a very sweet smile.\n\n\"Yeah. I uh, I kind of realized I couldn't get you off my mind from the first time I saw you.\"\n\n\"Was it my beauty or my charm, suh?\" she asked playfully in a southern accent.\n\nNot to be outdone, Eric did his best impression of Rhett Butler, and said, \"Frankly my dear, I don't give a da...darn. Which one, that is.\"\n\nNicole laughed happily and asked how his coffee was.\n\n\"Strong and black,\" he said. \"In other words\u2014excellent.\"\n\n\"So how'd you do coming into town today?\" he asked before taking a second sip.\n\n\"Not bad. I had some jitters in the driveway, but other than that, I was even able to drive past the marker without getting emotional.\"\n\n\"That's wonderful,\" Eric said sincerely. \"I'm really happy for you.\"\n\n\"And I'm really grateful to you,\" she replied.\n\n\"I didn't do any original thinking. I just used Google and...voile!\"\n\n\"Yes, but you took the time to do the research, and if you hadn't, Lord only knows how long I might have been living as a shut in.\"\n\n\"The Fall Harvest festival is this weekend,\" Eric said with a smile.\n\n\"Oh. And you're telling me this why?\" Nicole asked as though she had no idea.\n\n\"Well, I was thinking\u2014and hoping\u2014that I might be able to find someone to go with me.\"\n\n\"I see. Go as in...a date?\" she asked, her eyebrows raised high.\n\n\"That's the word,\" he told her with a smile.\n\nNicole smiled back and said, \"I'd love that, Eric.\"\n\n\"Are you busy tonight?\" he asked knowing it was almost rhetorical.\n\n\"Hmmm. Let me see,\" she said as she fished out her phone and pretended to go through an appointment calendar. \"Wow. Yeah. Tonight's not looking good. I've got that state dinner with the governor and then there's the rally in DC the following morning, and...\"\n\nEric stood up then came around and took her in his arms, and said, \"What time shall I pick you up?\"\n\nNicole laughed at her silly thought but said it anyway.\n\n\"Was that your best...pick-up line?\"\n\nEric groaned loudly and said, \"On second thought...\"\n\n\"No! Don't you dare have a second thought. I'll be ready anytime you'd like,\" she told him as their eyes met and danced.\n\n\"You are so beautiful,\" he told her again quietly as they stared into one another's eyes.\n\n\"I still don't know why you think that, but I'm very happy that you do,\" she replied quietly.\n\n\"Come here,\" he said as he led her over to a full-length mirror.\n\nNicole had no idea why a jail had a mirror that size, but it was there so she followed him over to it.\n\nEric stood behind her and explained why he felt that way beginning with her long, soft hair and ending with her sexy, shapely legs, covering nearly every part of her body in a way that was anything but crass.\n\nBy the time he finished, her heart was beating fast, and she was very aware of her wetness. She pulled his arms around her waist and closed her eyes as he placed his cheek next to hers.\n\n\"So now you know why I think you're the most beautiful woman on earth.\"\n\nNicole wanted to say something to downplay it like, \"You mean in this tiny little town, right?\" but she didn't. She didn't because she couldn't, and she couldn't because his words were like an intoxicating drug to her; words she drank them in and found herself wanting more.\n\n\"That was the most romantic thing anyone's ever said to me, and my husband was a very romantic man,\" she said quietly as he held her from behind.\n\n\"I know I can never replace him, but if I could just be some small part of your life, Nicole, I'd be a very happy man.\"\n\nShe smiled, held his arms tight, then said, \"In that case, you should be very happy.\"\n\nHe turned her around, smiled at her, then leaned down and kissed her softly.\n\n\"Mmmm,\" she moaned as the kiss became more passionate.\n\nHe went to pull away when Nicole said, \"One more? Please?\"\n\n\"If there is one more, it's going to be very hard to stop.\"\n\nNicole smiled happily then said, \"Then maybe we can save that special kiss for later tonight.\"\n\nEric raised an eyebrow, and Nicole laughed happily.\n\n\"Hmmm. I'm not even going to ask what you meant by that,\" he told her.\n\n\"If you have to ask, then I must like the wrong guy.\"\n\n\"Oh, so you like me, huh?\" he teased.\n\n\"Maybe. A little,\" she teased back.\n\n\"Be ready at seven,\" he told her out of the blue.\n\n\"Oh, wow. A man who takes charge. Me like,\" she said with another warm smile. \"I'll be ready.\"\n\nThere were only a handful of shops in town, but Nicole spent the next few hours going through each of them and catching up with friends. She loved that almost everyone who lived there was a friend; someone who could be depended on. She hadn't spent a single dollar in town for a some time now, and she did her best to make up for it.\n\nIn the one place that sold nicer women's clothes she spent a couple of hundred dollars on a new dress, some shoes, and a few other things. Then on the way back to the car she stopped back in at The General Store and bought a bottle of red wine and settled up her tab. Hank told her there was no hurry, but there was no reason to put it off, and it gave her the chance to think him and his wife again.\n\nSarah could see the sparkle in Nicole's eyes and mentioned it to her.\n\n\"You were right,\" Nicole told her. \"He is a little sweet on me, and I think I just might be sweet on him.\"\n\n\"I'm so happy for you, honey. You deserve to be happy after all you've been through.\"\n\n\"Sarah?\" she asked. \"Do you think I'm foolish for getting involved with someone so much younger than me?\"\n\n\"Oh, sweetie. Listen. All that matters is that whoever it is makes you happy. I can't answer that for you, but I can see the way you're smiling. I haven't seen that since before, you know.\"\n\n\"I do,\" Nicole replied. \"All I can say is I'm smiling because for the first time since I lost my family, I'm happy. And I'm happy because of Eric. So if I'm making a mistake then so be it. But I honestly don't believe I am.\"\n\n\"Then follow your heart, Nicole.\"\n\nShe leaned closer then said, \"If I was in your shoes, I'd do the same thing.\"\n\n\"You better hope Hank didn't hear that,\" she said with a smile.\n\n\"Ha! If I wasn't in the picture, he'd be doing his best to win you over.\"\n\nShe leaned even closer then said, \"He's no George Clooney, so there's not a chance in...Hades...of that happening, but I do love him very much. And I'd say you might just be falling in love with the town sheriff, so young or old, don't let love pass you by.\"\n\n\"No. No, I won't,\" she said as though it was a promise. \"And thank you so much for listening.\"\n\n\"I don't get a lot of girl talk in here so anytime I do, I'm not going to pass that by!\" Sarah assured her.\n\nThey hugged, and Nicole thanked her again then thanked her for being such a good friend, and that reminded her she hadn't spoken to her mother in way too long.\n\nWhen she got home, she steeled herself for the conversation knowing it could 'go south' very quickly, but she was her mother, and it was time to call. Whether or not she told her about the new love interest in life was another story, though.\n\nWhen her computer screen came to life, Nicole forced a smile.\n\n\"Hey, Mom!\" she said as cheerfully as she could.\n\n\"Hi, honey!\" her mom said back. \"I was going to call you tomorrow, but I'm so glad you called me.\"\n\n\"Why? Is everything okay?\"\n\n\"Now it is. I thought you were upset at me after we talked the last time because this is the longest we've gone without communicating, and I was getting worried.\"\n\n\"Why would I be upset, Mom?\"\n\n\"Well, as much as I really do try not to meddle, I can get awfully pushy about trying to talk you into coming home...sorry. Back to Seattle.\"\n\n\"You're not meddling, Mom. I know you have my best interests at heart.\"\n\n\"Whew. I'm so relieved to hear you say that, sweetheart,\" her mom said. \"So catch me up. What have I missed?\"\n\nNicole hadn't had this pleasant a conversation with her mother in at least two years if not more. The change in attitude was such a pleasant surprise she decided to share her newest secret.\n\n\"Well, I kind of met someone,\" Nicole began.\n\n\"Are you serious?\" her mom asked. She was so excited she shifted positions before asking for details.\n\n\"Well, for starters he's the new sheriff in town.\"\n\n\"Uh-huh. That's a good thing,\" her mom said.\n\n\"And...well, he's very good looking. As in 'Tim good looking'.\n\n\"Oh, my. Tim was a very handsome man.\"\n\n\"Yes, he was. But Eric, that's his name, is every bit as attractive as Tim was, and well, maybe even a little bit more so.\"\n\n\"Was he a male model in a former life?\" her mom teased.\n\n\"No. Nothing like that. He said he was an officer in the Marine Corps for several years, then went to the police academy here in Portland.\"\n\n\"I still think Oregon every time you say Portland,\" her mom told her for the umpteenth time.\n\nNicole only smiled and then explained the rest. Except for his age.\n\n\"Well, he sounds downright wonderful,\" her mom said.\n\nNicole sensed a 'but' coming and asked what it might be.\n\n\"No 'buts'. Just a question.\"\n\n\"Okay. Ask away.\"\n\n\"Well, if this gets serious, does that mean you'd be staying there? In Maine?\"\n\n\"We're not even close to that kind of serious yet, Mom. So I can't really say.\"\n\n\"I...I see,\" she said, the disappointment finally showing through.\n\n\"Anyway, he's coming over tonight to pick me up and we're going out. I don't know where yet, but it doesn't really matter, you know?\"\n\n\"Well, I'm very happy for you, honey,\" her mom said as sincerely as she could.\n\n\"Thanks, Mom. And how's Dad doing?\"\n\nHer father's face appeared upside down in the monitor just as he rolled his eyes.\n\nAs always, his antics made her laugh.\n\n\"Hi, Daddy!\" she said.\n\n\"Hey, sweetie. I was listening in, and we're both very happy for you.\"\n\n\"Thank you, Dad. I love you!\"\n\n\"Love you, too.\"\n\nHe was a man of few words, and Nicole was happy just to hear his voice.\n\nShe wished them both a wonderful day then signed off and thought about when to start getting ready.\n\n\"Not bad,\" Nicole said as she took a look at her new outfit in the mirror.\n\nThe weather had been reasonably nice but was even colder than it had been just the day before and it was forecast to drop below freezing the night of the Fall Festival. With that in mind, Nicole found a very pretty off-white, knit dress that fell to about three inches above her knees. With a pair of matching heels, she thought she looked pretty good for a woman her age. \n\nAs she turned both ways, Nicole realized she no longer cared about Eric's age, but found it very hard not to think about hers. She still felt young, and nearly everyone she knew told her she still looked young, but all that mattered to her was how Eric felt. And so far, at least, she had no reason to believe he was anything but honest, and after the way he'd made her feel in his office earlier that day, all she could do was trust that he meant what he'd said.\n\nNicole also had a coat in the same color she hadn't worn in at least three years, but like most of her other nicer things, it too, was in very good condition. It was still covered in the same plastic bag it came home in from the dry cleaners and was ready to go.\n\nThe only accessories she wore were a pair of pearl earrings and strand around her slender neck. She did wear a touch more makeup than normal, but not so much that it looked...bad. She hated the word 'slutty' and tried to never use it, even when the word fit. And it most definitely didn't fit where her makeup was concerned.\n\nEric showed up exactly on time, and Nicole found herself smiling as she watched him pull in. She'd been sitting in her favorite chair watching through a window as she waited for him to arrive. \n\nShe got up to meet him, and when she saw him, she felt her heart swell with emotion. She'd never seen him in a suit, and when she did, she was so glad she'd bought (and worn) something nice. When she opened the door for him and saw him up close, she thought she might throw herself at him.\n\nBefore he could say a word, Nicole told Eric, \"You look...amazing!\"\n\n\"Me? Are you kidding? No one's even going to notice me if I'm anywhere near you,\" he said as he gave the 'once-over' twice. \"There's beautiful and there's...beautiful.\"\n\nNicole closed the door and when she did, she turned around and saw Eric standing right in front of her.\n\n\"Oh. Hello there,\" she said with a smile.\n\nHe put his arms around her and said, \"I can't possibly not kiss you 'hello'.\"\n\n\"By all means,\" she told him as she slid her arms around his neck and kissed him back.\n\nShe asked him if he'd like a drink, and he said 'no thank you' and asked if they could leave.\n\n\"Yes. Of course. Are we going somewhere out of town?\"\n\n\"We are,\" he told her as he helped her with her coat.\n\nThey drove right by the marker and Eric asked if there was any amount of anxiety or discomfort.\n\n\"No. None,\" she told him.\n\nShe smiled at him, and Eric reached for her hand. Nicole gave it to him and asked where they were going.\n\n\"There's a place where we can go dancing after dinner about 30 miles from here. How does that sound?\"\n\nNicole knew the place, and told him, \"As long as I'm with you, it'll be perfect.\"\n\nShe and Tim had been there once around ten years ago, and it had been a very nice place. Since then they'd expanded the dance floor and had hired someone to play piano. \n\nIt was quite possibly the most romantic dinner and evening she'd had since the night Tim proposed to her. The food was superb, the service was excellent, and Eric was a surprisingly good dancer. Most couples were turning in little circles which would have been just fine, but when Eric led her in several different dance steps, Nicole couldn't stop smiling.\n\n\"You are one pleasant surprise after the other,\" she told him after a more lively dance.\n\n\"As long as you're happy, I'm happy,\" he told her as they sat back down.\n\n\"I am very happy,\" Nicole told him. \"I don't know whether or not I'd given up on ever being happy again, but I was at least resigned to living alone and making the best of it.\"\n\nShe looked right at Eric then said, \"But you've let me feel hopeful again.\"\n\n\"You never saw yourself dating me though, did you?\" he asked without any kind of accusation.\n\n\"Honestly? No. But I think you gave me hope, and that gave me the willingness to try again.\"\n\nShe smiled then said, \"Even if I struck out in a big way first.\"\n\n\"I uh, I'm not sure if I should tell you this, but Hank asked about Zeus, and I told him a vet had come by and given you a prescription for him. When he asked me which one I told him.\"\n\n\"And?\" Nicole asked knowing something else was coming.\n\n\"And...according to Hank\u2014and Sarah\u2014Dr. Mike is a married man.\"\n\n\"What? Are you serious?\" she asked, the disbelief written all over her face.\n\n\"Since I don't know that, it's really just gossip, but when both of them assured me was married, it seemed reasonable I should tell you.\"\n\n\"That...man!\" she said with a shake of her head.\n\n\"I didn't mean to upset. I only thought it best I tell you rather than someone say something one day.\"\n\n\"Oh, someone would have said it. I love our little town, but something like that seeps into every home within hours.\"\n\nEric laughed and said, \"I'm learning that's true.\"\n\n\"Not the hard way, I hope,\" Nicole said, her smile back.\n\n\"No. Just...talk. You know.\"\n\n\"About us?\" she asked.\n\n\"Um, well...yes. About us.\"\n\n\"Does that bother you? I mean, I'm sure they're saying horrible things about me like 'cradle robber' or...\"\n\n\"No. Actually they're not. The handful of people who've said something have all told me how happy they are for you; for both of us.\"\n\n\"Then again, I'm very happy,\" she replied.\n\nShe hesitated then said, \"Are you?\"\n\nEric smiled, took her hand, then looked into her eyes and said, \"If I tell you I'm falling for you, will you tell me it's because I'm too young to know what real love is?\"\n\nNicole stopped smiling as his words sank in.\n\n\"I...we...I'd...I'd never say that, Eric.\"\n\n\"Good. I'm very relieved,\" he told her. \n\n\"I wouldn't say that because I'm falling for you, too,\" she said without taking her eyes off of his.",
        "\"That makes me very happy, Nicole.\"\n\n\"You don't think I'm a desperate, old widow trying to reclaim her youth by dating a man who's so much younger?\" she asked with genuine concern.\n\n\"You can't possibly think that,\" he replied.\n\nNicole looked down for a moment then said, \"I've stopped worrying about how old you are\u2014or...aren't\u2014and started worrying about how old I am and wondering if you'll realize that and...\"\n\n\"Hey,\" Eric said gently, cutting her off. \"Stop that, okay? Have you already forgotten how beautiful I think you are? Can't you see how much I enjoy being with you?\"\n\nHe reached out and touched her pretty face then said very quietly, \"Or that I'm falling in love with you?\"\n\nWhen tears welled up in her eyes, Eric assumed he'd pushed too far.\n\n\"Nicole. Please. I wasn't trying to make you feel uncomfortable. I just wanted you to know how I...\"\n\n\"Stop that, okay?\" she said using his words. \"I'm not uncomfortable. I'm...I'm falling in love with you, too.\"\n\nEric smiled the happiest smile of his life as he said, \"Do you want to maybe get out of here?\"\n\n\"I would definitely like to do that,\" she told him with a happy smile of her own.\n\n\"Your place or mine?\"\n\n\"You choose,\" she told him.\n\n\"I live in a bachelor pad, and while Zeus can make it without you being around all the time, it might be best if we went back to your place.\"\n\nNicole agreed and less than an hour later they were sitting very close together on her sofa sipping a glass of wine.\n\n\"Isn't this about the time you normally get on your bike?\" he asked when a wall clock struck eleven.\n\n\"Um, somewhere around now,\" she told him. \"But I don't want to ride my bike tonight.\"\n\nEric was going to change the subject when she said, \"But that doesn't mean I'm opposed to doing something...physical.\"\n\nHe looked at her with a raised eyebrow then smiled. \n\n\"Physical, huh?\"\n\n\"Well, only if you want to,\" she said, again feeling old and insecure again all of a sudden.\n\n\"Of course I want to,\" he told her. \"I just want to make sure that's what you want rather than what you think I want.\"\n\n\"I want that,\" she said very sweetly. \n\nShe put a hand on his face then kissed him softly.\n\n\"I want that very much.\"\n\nNeither of them heard the clock strike twelve, and that was most likely due to the soft moans and loud groans coming from the bedroom where they made love not once but twice.\n\n\"Was that okay?\" Nicole had asked after the first time.\n\nEric smiled at her and said, \"I've heard stories about how, you know, older women are amazing, but...wow! All I can say is that in your case those stories are absolutely true.\"\n\nShe smiled back, climbed on top of him then said, \"True enough to verify them?\"\n\n\"Oh, right. Yes, we should definitely verify that. We need more, not less, data.\"\n\nNicole laughed happily and literally squealed with delight at having found someone so funny, so intelligent, so handsome, and so...big. She'd never been 'filled' like that in her life, and Eric was so deliciously thick it felt like she'd died and gone to heaven, and not even that thought caused her to feel sad. All she felt was happiness, pleasure, and...love.\n\nIt was just after two when neither of them could give or take any more, but Nicole didn't want him to leave.\n\n\"People will talk if I stay,\" he reminded her.\n\n\"They're already going to talk,\" she reminded him.\n\n\"Ah. Good point,\" he replied with a smile.\n\nEric was up early and slipped out without Nicole hearing him. He did, however, get her coffee ready and left a handwritten note for her that made her heart sing when she read it. It made her feel sixteen again. She felt like the cutest boy in school had just asked her to the prom when she thought how the best-looking man in the town or maybe the entire state, had asked her to dinner and spent the night in her bed.\n\nFor the briefest of moments she felt a twinge of guilt for feeling so happy, but then she realized that's the one thing both Tim and Matt would want her to be.\n\nShe grabbed her phone and sent Eric a text.\n\n\"Hi! I just read your note, and I can't stop smiling. Then again, I'm still smiling from last night\u2014one of the most wonderful nights of my entire life. I can't wait to see you again. Love, Nicole.\"\n\nShe hit send then turned on the coffee pot and laughed when her phone dinged.\n\n\"Same here. I have this permanent smile glued to my face, and it's because I've fallen for the most beautiful woman I've ever known. And I can't wait to see you again, either. Love, Eric.\"\n\nNicole's feet spontaneously did a 'happy dance' before she spun around in a circle and said out loud, \"I am so happy!\"\n\nZeus came lumbering over and barked, and that made her laugh.\n\n\"Hey, buddy! You ready to eat?\" she asked.\n\nShe got another loud, deep bark and a tail wag in response.\n\nShe crushed up a Carprofen tablet then poured in some water and heated it up a little in the microwave to make sure it would get into his system before adding the food. Zeus wolfed it down in seconds while Nicole watched, and she realized that everything seemed interesting and enjoyable again in her life. \n\nAnd she knew it was because she was falling in love with this handsome, younger man.\n\n\"I'm in love, boy!\" she told her dog. \"Yes, I am! Isn't that wonderful?\"\n\nThe way she was talking made Zeus tilt his head then bark again, and that made Nicole laugh. She quite literally flitted around the house all day until Eric texted her and let her know he'd be there in a few minutes once he was off work.\n\nWhen he told her how beautiful she was again when she was in jeans and a sweatshirt, she knew it wasn't dependent on what she was wearing or how her hair was done or whether or not she was wearing makeup. She was beautiful to him, and for the first time, Nicole allowed herself to believe that.\n\nHe stayed with her again that night, and by the time they were walking around hand in hand at the Fall Festival, everyone in town knew. What Nicole loved the best, other than Eric, was that every person they met told them how happy they were for them or that they made a very cute couple.\n\n\"I have to agree,\" Eric said to Nicole after the third such comment.\n\nNicole smiled when he said it then told him, \"I love being with you.\"\n\nEric smiled back then said, \"And I...love you.\"\n\nNicole couldn't decide if she should laugh or cry so she threw her arms around him and said, \"I love you, too!\"\n\nA week later, Nicole 'introduced' Eric to her mother via FaceTime after finally warning her mom that her new boyfriend was 'a bit younger' then her. Expecting a lecture, Nicole nearly cried when her mother said, \"Oh, honey. I don't care about that. As long as you're happy, I'm happy.\"\n\nShe heard her dad call out, \"Me, too, sweetie!\" and that did make her cry.\n\n\"You love this guy, don't you?\" her mom asked as her daughter dried her eyes.\n\n\"Yes. Very much,\" Nicole told her.\n\nWhen her mom saw him for the first time she gasped even though she'd been warned he was very good looking. She apologized for the overreaction then explained why, and when Eric laughed, Nicole's mom laughed and said, \"I am so happy to meet you, Eric. And I can't tell you what a relief it is to know our daughter's found someone who makes her so happy.\"\n\n\"Well, she does the same for me, and I'm very glad to meet you, as well, Anne,\" he told her sincerely.\n\n\"Maybe you could talk my daughter into bringing you out here for a visit sometime,\" she said to Eric before looking at Nicole to see if she was scowling.\n\n\"You know what? That might be possible. I've always wanted to see the west coast so we'll discuss it.\"\n\nThey not only discussed it, they made plans to fly out during the spring. Hank and Sarah agreed to care for Zeus who was still going strong for the two weeks they'd be away, and feed the chickens and gather their eggs.\n\nAnd after spending the first of those two weeks with Nicole's parents, Eric asked her father for his blessing to propose after dinner one night.\n\nHe gave it immediately and said, \"I love my little girl more than anything. She was very fortunate to meet someone like Tim, and we loved him dearly. But we were both talking just last night about much we also like you, Eric. So, yes, you have my blessing.\"\n\nThe following evening they all went out to dinner, and at one point, Nicole's father offered a toast.\n\n\"To love,\" he said. \"My wife and I have been married for 45 years, and I still love her just as much today as I did when we said 'I do'.\"\n\nEric then raised his glass and said as he looked at Nicole, \"And now, I'd like to...propose.\"\n\nWhen he stopped talking and reached inside his jacket for someone, Nicole's hands started shaking.\n\n\"Eric. Honey. What are you doing?\" she said even though she knew.\n\nHe got down on one knee, opened the small box then said, \"Duh. I'm...proposing.\"\n\nHer parents laughed while Nicole cried as she held out a trembling left hand. \n\nEric hadn't gotten another word out when she started saying, \"YES! YES! YES!\" causing every head to turn as people applauded and wished them well.\n\nWithin days of returning home to Maine, Eric said, \"I really like the Seattle area.\"\n\n\"Yes, it's very nice, isn't it?\"\n\n\"You get snow once or twice a year, and that's it. I've never really minded the rain, and I could get a job with a police department out there.\"\n\nHe turned to his fianc\u00e9 and asked, \"So what do you think?\"\n\n\"I like it a lot, but...this is home to me,\" he said, not sure how she'd react.\n\n\"You mean here? In this town? In this house?\" she asked.\n\n\"Where exactly we live is up to you. As far as I'm concerned anywhere is fine as long as you're my wife.\"\n\n\"You'd be willing to stay here, in this house?\" \n\n\"If it isn't too difficult for you,\" he told her.\n\n\"No. It's filled with pleasant memories and love, and as long as you're here with me, there'll be many more wonderful memories created.\"\n\n\"And it will always be filled with love. I promise you that.\"\n\nNicole tried not to cry as happiness and joy overwhelmed her. To have found that kind of love in life once was something. To have found it twice was nothing short of miraculous.\n\nHer only sadness came two months after their wedding when Zeus could no longer walk. She'd had months to prepare but it still made her cry when she said her final goodbye.\n\nHer sadness was short-lived when her handsome new husband surprised her a month later by bringing home another Great Dane puppy they named Thor after watching him thunder around the house for a couple of days.\n\nJust when Nicole thought it was impossible to be any happier, she learned she was pregnant, and when Eric was overjoyed when she told him, she realized there was always room for more happiness.\n\nAnd that was proven true again when their beautiful daughter, Aubrey Anne Burns, was born the following year.\n\nNicole sat there in their home one day thinking back on how she had nearly lost all hope and almost become a shut in. And then one day this amazing younger man, her new sheriff, stopped by to introduce himself. And because he had, she'd found happiness a second time in her life; a life that once again seemed perfect."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/shut-in"
}