{
    "title": "A Civilized Cuckold,The Cunning Cad",
    "pages": [
        "This story owes a tip of the hat to Egmont Grigor, who recently wrote a story about a 'bad boy' banker. I loved the concept of the anti-hero banker, and this is the result. Thanks EG!\n\nTo insure that my story wasn't too 'American', I asked in the LE forum for a 'witty Brit' to review my verbiage and advise me on British English vernacular. RachLou answered the call, and not only did a Yeoman's job helping me with the specific words and terms that I needed, but being a truly conscientious person, she also tried to bring order to the anarchy that is my punctuation, among other editorial improvements. Since she reviewed the story, I have made numerous additional changes, so the seemingly inevitable typos, misspellings and other screw-ups are entirely mine.\n\nIf it is a stroke story you want &mdash; seek it elsewhere! If you want your humor dry as your martini, then read on, Macduff! \n\n***\n\nFirst, let me make it perfectly clear: I'm no Nick Leeson. For at least two reasons, I'm no Nick Leeson.\n\nYou don't remember Nick? He was the trader for Barings Bank in Singapore who lost almost a billion quid of his bank's funds, using highly leveraged positions, betting on the future direction of the Nikkei &mdash; the Japanese stock market for you people who don't keep up with the world of finance. He lost big and fell hard, and in the end he took Barings down as well. He did time in the nick for that &mdash; but not that long, because it was just a property crime. He was sentenced to six and one-half years, and actually did less. Of course, his future employment prospects were somewhat, shall we say, limited?\n\nIn contrast, when I took an unofficial 'loan' from the bank for which I work, I wasn't trying to make a big win for the bank, like Nick. No, I was strictly doing a bit of free enterprise for myself. In short: I'm even less moral than the average banker, and that's saying something.\n\nOh yes &mdash; the second way in which Nick and I differed was: I didn't get caught!\n\nIn fact, I won my bets on financial markets with a lot of extra leverage, with the result that I was able to restore what I had 'borrowed' with sufficient profit that the bank's officers presented me a bonus for having an outstanding quarter! &#8356;25,000 of bonus &mdash; enough to make a decent year into a lucrative year for me. But it was the &#8356;250,000 that the bank didn't know about, sitting in an offshore account, far from the bank examiners (and the Inland Revenue,) that really made my year. Knowing how the bank's various security processes work, I had carefully and completely erased any signs that would trip an alarm with the auditors. \n\nOh, pardon me, although I've told you I'm not Nick Leeson, please allow me to introduce myself: I'm Ben Chattham, and I've been working for the past three years for a small private bank, dare I say 'exclusive' bank in the City; a bank that caters to the very wealthy of the world. Saudi princes, Argentine Generals, American billionaires, Chinese War Lords &mdash; those sorts of chaps.\n\nAs careful as I had been, I have to admit that I was still somewhat apprehensive when the Senior Vice President of my group, Sidney Wright, known to one and all as 'Sid' (his small concession to democracy), requested that I come to see him in his office, as soon as practical. I gathered up my notes that I would need to summarize my current trading positions, as well as a few choice bits of materials, should things get ugly. No reason to expect that, but semper paratus!\n\nStopping by the Gent's on the way, I washed my hands and used a damp towel on my face, and looked at myself in the mirror. I was, at 35, the prototypical 'poor boy makes good' story, rising from a working class background, to university, and, with a great deal of ambition and perseverance, to an obscenely well-paid position in an elite financial institution. My hazel eyes looked back at me from the mirror, as I ran a hand through my sandy-brown hair. My dark-blue Armani suit with the subtle pinstripes, over a silk shirt, was just right. I straightened my school tie, and was ready, like Daniel, to enter the lion's den.\n\nI walked down the hall and knocked on the door of Sid's office; a window office looking out over the Thames in the building affectionately known around London as \"The Gherkin\". Sid's sanctuary.\n\n\"Come in.\"\n\nI opened the door and stuck my head in first,\n\n\"Did you wish to see me, Sid?\" I queried.\n\n\"Oh, Ben, yes, please come in. Take a seat.\" \n\nSid's office was plush. His furniture was made of Brazilian Cherry and upholstered in dark red leather, which contrasted with the gray, deep, wall-to-wall carpet. One didn't sit in Sid's chairs, one sank into them. Sid dealt directly with banking clients. The trading offices were far more Spartan, I assure you.\n\nSid Wright was neither as tall, nor, not to brag, as well fit as I. But Sid came from 'old money', and would likely in the not-too-distant future be Sir Sidney Wright, OBE, or KBE, or whatever honors were being bestowed on wealthy bankers with political connections these days. Sid is about 15 years older than I. He's gone a bit gray in recent years, I think one would call it salt and pepper. And he likes to meet people in his office where he can sit behind his desk in a chair that is about 2 inches higher than the other chairs in the room. A small vanity. \n\nSid sounded a bit stressed. I took a seat and started to spread out my papers, as I normally would when reviewing our positions. It took Sid a moment, but he looked up and noticed what I was doing.\n\n\"Oh, sorry, Ben. I didn't call you to discuss your trades. I need to speak to you on another topic completely.\" he explained, using his 'its time to apply some stick' tone.\n\nI sat back in the chair and waited for the axe to drop.\n\n\"Ben,\" he looked into my eyes, so I looked back with my best poker face, \"We have to have a certain man-to-man. You know that I have always trusted you implicitly and you have always demonstrated an admirable willingness to be 'up front' about things. Well, I have to put a somewhat embarrassing question to you.\"\n\nMy stomach was beginning to churn at his words. What could I have missed, what small detail had I overlooked in covering my tracks. On the other hand, I hadn't seen any security people, much less any Metropolitan Police skulking in the halls.\n\n\"I'll come to the point. Ben, have you been tupping my wife?\" came the rather abrupt query.\n\nIt took a second for his question to register with me. When it did, my day brightened considerably. A smile came across my face as I looked up to answer.\n\n\"Why yes, Sid, why do you ask?\" I replied in a polite voice, with a slightly curious inflection.\n\n\"Because over the past two months, my wife has become, how shall I say it, a completely different woman in the boudoir! She suddenly appears to actually enjoy herself when we have sex, and has developed several skills and tastes that she didn't have before; and that I know I didn't teach her.\"\n\nSid reflected for a minute, before I interrupted his reverie.\n\n\"May I ask why I, particularly, came to mind, sir?\" I addressed Sid.\n\n\"Logic, dear boy, strict logic and a process of elimination.\" He continued, \"You see, knowing my wife's love of money and all things expensive, I first considered Sir Edward.\" \n\nWe both laughed at that. \n\nSir Edward was one of the founders of the bank, and indeed was reputed to be rich as Croesus. On the other hand, he was also 92 years of age, and had never married or shown any inclination towards women. They say that in Sir Edward's earlier days young men in the mail room and operating the elevators had to step lively to avoid being cornered by Sir Edward. Several of them who had acquiesced to his advances found themselves bent over the desk in his private office, or on their knees before him being educated in the finest public school tradition.\n\nLong retired, Sir Edward still attended the monthly review meetings, as well as all dinners and parties sponsored by the bank. Most of us had experienced Sir Edward's hand groping our arses on the odd occasion. \n\n\"I quickly concluded that Sir Edward was not likely Caroline's paramour.\" Sid continued.\n\n\"Then I recalled that young man, the American, Ralph, in the futures trading group. He is, I'm told by several of the assistants, 'hot', by which I suppose they mean he is tall, with dark wavy hair and dark eyes.\"\n\nI interrupted,\n\n\"Oh yes, I think I know who you mean. The fellow who did his MBA at the trade school across the river from Boston.\" My friends from the HBS always took umbrage at the description.\n\n\"Yes, quite.\" Sid agreed with an evil smile on his lips.\n\nI could hardy keep the smirk off my face. Sid and I had both taken our degrees at Oxford. There you are, a third reason I was not like Nick Leeson &mdash; a far better education. \n\n\"I can't imagine Caroline with Ralph.\" I reflected, \"I know he has a certain style that attracts the younger women, but I can't envision a sophisticated woman like Caroline finding him the least bit charming. Did you notice at lunch the other day when he ordered a Merlot with his fish? Gawd, I almost died at the look on the Sommelier's face.\"\n\nSid barked a short laugh, \"Yes, a California merlot at that!\"\n\n\"Consequently,\" he concluded, \"it really left only you. Assuming, of course, that her 'special friend' was someone I knew, and I can't imagine Caroline going out finding a lover willy-nilly. You were the one man in our circle who is sufficiently witty, charming, well mannered, and of an age and looks, that Caroline would even consider taking as a lover.\"\n\n\"Thank you, sir, I'm flattered,\" I responded.\n\n\"Simply being objective.\" came Sid's calm assessment. \n\nThis was why we all loved Sid &mdash; a solid fellow in any sort of crisis. \n\nWe sat there silent for a moment. I could see that Sid was formulating another question.\n\n\"Ben,\" he finally asked, \"could I inquire as to the genesis of this liaison?\"\n\n\"Of course, sir,\" I said, happy to relate the circumstances.\n\n\"Do you recall the dinner that you, your wife and I attended at Mansion House about two and a half months ago?\" I inquired. Mansion House is the official residence of the Lord Mayor of London, and the Egyptian Hall is the scene of many an evening dedicated to convincing the 'super-rich' of the world that their wealth ought to reside in 'The City' of London, instead of staid places like New York, Zurich, or Tokyo. Or, more recently, like Doha, Dubai, or other oil enriched venues with ambitions of becoming the future financial centers of the world.\n\n\"Yes, yes. The Lord Mayor was honoring that American investor chap. What was his name?\" Sid looked up at the ceiling trying to remember. \"It was some sort of food-related thing &mdash; 'cafeteria', or 'delicatessen'...what is happening to my memory these days?\" \n\n\"Buffett, sir, Warren Buffett.\" I filled in.\n\n\"In any case,\" I continued, \"I was seated next to your wife, while you were seated on the other side several seats closer to the dais. Between the chap from OPEC and the Italian Ambassador's wife, as I recall.\"\n\n\"Ha! The most intriguing evening I've had at Mansion House in years. Neither one of them had a word of English. Not that I was too concerned about the oil man, but I enjoyed the Ambassador's wife. Did you see the decolletage of her gown? All evening I was expecting that she was going to pop out, and have one of those Janet Jackson 'wardrobe malfunctions'. Not to mention that she had her hand stroking my thigh under the table half the night!\" Sid was grinning as he finished.\n\n\"Oh my, Sid, that is too rich.\" I too was grinning as he related his anecdote.\n\n\"In any case,\" I continued, getting back to the point, \"At the end of the dinner, you asked me to escort Caroline to your flat, because you were going directly to Heathrow to catch a flight out that night.\"\n\n\"Jeddah, Riyadh, Bahrain &mdash; I really don't recall precisely; somewhere hot, uncomfortable, but very lucrative.\" Sid interjected.\n\n\"When we arrived at your flat, Caroline asked me if I would join her for a drink. She told me that she wanted to speak with me about something. Of course, I was happy to accommodate. We sat down in the living room, where Caroline provided me with an excellent Scotch.\"\n\n\"My new single malt?\" asked Sid, with an enthusiastic look in his eye.\n\n\"Yes. It is quite remarkable; just wonderful. I assume that it is made using the new technique of aging it in a barrel previously used for American Bourbon?\"\n\n\"Quite. And I was able to purchase the entire barrel. No blending at all.\" Sid was obviously quite pleased with himself.\n\n\"Really? Do you mind if I ask...\" the unspoken question was simply too gauche, but I knew that Sid would enjoy bragging just a little.\n\n\"Monstrously expensive, I assure you!\" Sid replied, with that unspoken 'you're not high enough on the feeding chain to be buying any' voice. Tut, tut &mdash; after all, what did he know!\n\n\"As I was saying, Caroline explained that she was becoming concerned that you were spending an increasing amount of time working, and out of the country on business. You see, she was afraid that she had given you something of the wrong impression. About sex, sir.\"\n\nI could see that Sid was somewhat confused by what I was saying. I continued.\n\n\"Apparently, Caroline finds sex to be utterly brilliant; completely adores it. But, at the same time, she couldn't bring herself to express her true feelings. It seems that her mother caught her diddling herself and convinced her, while she was still a mere slip of a girl, that sex was strictly a duty and obligation, and that no respectable man would expect, or I dare say, want, a woman who actually enjoyed sex. Consequently, she found that during 'the act', she had a mental block against being as vocal as she wished to be while enjoying marital relations. And she was completely abashed at the thought of asking you for instruction in the, shall we say, less traditional sexual practices.\"\n\nI leaned forward, closer to Sid's desk.\n\n\"The bottom line was, sir, that she asked me if I could possibly act as something of a tutor for her, serving in locum tenens, one might say, for you. To avoid embarrassing herself or you, by practicing with me. And, I must admit, that she has been a keen student.\" I looked at Sid to see how he had absorbed my little explanation.\n\n\"Ah,\" he finally said, \"I'm not entirely surprised by what you say. According to Caroline's father, her mother is a class 'A', frigid bitch.\"\n\n\"Yes, sir. And you can certainly see the positive results of our sessions together. Once we'd overcome the psychological barrier, Caroline began to feel free to make noise while we were having at it. She started with just the smallest of little groans and squeals. But as I'm sure you've noticed, over the weeks and months, she has become something of a screamer &mdash; especially should one be licking her quim while using a finger to stroke her G-spot simultaneously.\" \n\nSid looked at me, \n\n\"Indeed.\" He gave a short laugh, and continued,\n\n\"The neighbors in the adjoining flat actually called the police on one recent occasion, suggesting that I must be doing Caroline 'great bodily harm,'\" Sid explained. \"I was speaking to a Police officer at the door, in my robe, when he heard Caroline's voice from the bedroom demanding that I return immediately and finish shagging her before she fell out of the mood! It was all the young man could do to stop from going hysterical.\"\n\nSid's eyes gazed unfocussed into space, and a big smile grew across his face remembering.\n\n\"I see. That is welcome news.\" I said to encourage Sid, \"Additionally, she was quite desirous of becoming proficient in performing what one calls in the vernacular, a 'blow job'. Rest assured, although she has developed a great skill, and even fondness for performing fellatio, her first attempts were literally quite painful. Once she understood the relationship between how much she exposed her teeth, and the grimace on my face, she very much improved. It seems that Caroline doesn't mind the taste of male ejaculates either, so that swallowing raised no issues.\"\n\n\"I must confess, Ben, that her acquisition of skillfully using her mouth to bring me off, has become one of life's great joys.\" Sid added.\n\n\"I'm truly happy for you, sir.\" I responded; then continued,\n\n\"Another thing that you might have noticed is Caroline's willingness to try new and different positions. I demonstrated a number of different ways to facilitate the sexual encounter, beyond the 'missionary' position. Doggy style (which, incidentally, she loves,) Cowboy, Reverse Cowboy, ankles wrapped behind the partner's neck, and a number of other, less practical, less comfortable, but novel ways. The important thing, I stressed to her over and over again, is trying new approaches, and communicating to determine which positions you each enjoy.\"\n\nSid smiled slightly, and nodded his head in a positive manner, indicating that I should go on.\n\n\"Finally, I acquiesced to her request to introduce her to some of the more, ah, esoteric practices. Although Caroline says that it is something for special circumstances, she can find being lightly bound, and spanked to be highly stimulating. When she tells you that she has been a 'bad girl' and needs to confess her various sins to 'daddy', I expect that is a clue that she is in the mood for a little discipline. You might want to be sure that you are not in a room adjacent to your neighbor's walls if you decide to indulge her. Unless you gag her first, of course.\"\n\nSid's eyebrows raised at hearing that, and I'm not sure he'd ever even considered the benefits that a good spanking might confer. I continued.\n\n\"And last, but certainly not least, Caroline was quite keen on learning about anal play, both giving and receiving.\"\n\nI was just about finished, so I went on.\n\n\"I was very insistent that we take our time, and insure that Caroline's anus was well stretched, with sufficient lubricity to create an easy and pleasurable experience. I am pleased to say that she has become capable of accepting even my rather large instrument, in a minimal amount of time, and with a great deal of enjoyment. She especially likes to watch herself being pronged up her arse in the mirror. She says it makes her feel so terribly wicked.\"\n\nSid leaned forward in his chair, and offered an open box of Cubans. I thanked him very much, and sat back, while Sid took another for himself. After we had lit up and taken a few puffs, Sid turned to me and began to speak.\n\n\"Ben, I am quite relieved to understand the situation between you and Caroline. Clearly, you have been very successful in enriching our connubial bliss. Really, quite decent of you.\"\n\nI murmured that it was nothing, a pleasure, indeed.\n\nWe sat and took a few more puffs, enjoying the delights of Cuba's only remaining export worth mentioning. As the American, W.C. Fields, once said, \"A woman is just a woman, but a good cigar is a smoke!\"\n\n\"But,\" Sid finally continued, \"I suspect that you might also understand the... difficulties, of my continuing to employ someone who has been &mdash; for the best of reasons, I grant you &mdash; cuckolding me. If the word were to get out, it should be most distressing. How could the other staff members respect me if I were to overlook this faux pas? I'm afraid that your tenure here at the bank must come to an end. I am going to have to discharge you.\" Sid sat back in his chair.\n\n\"Sid,\" I replied, \"I appreciate your position, as well as your frankness, but I would certainly hope to be allowed to leave the bank on slightly better terms than being rather brutally given the boot.\"\n\nAs I mentioned before, I always try to be prepared for, and not overtaken by, events. I reached into my folio, and began handing Sid photos of himself engaged in boffing several of the female P.A.s, including both his and mine. I was particularly enamored with a series taken in his office. One could actually see the London Eye across the river in the distance through his office window. The clarity of the faces was remarkable, but the angle still left no doubt concerning the precise nature of the activity.",
        "\"I see,\" Sid's eyes opened wide, and his right eyebrow lifted in one of his endearing mannerisms indicating that he was taken aback. He was examining each of the photos with great interest as I passed them to him. He swept his hand through his graying hair, to smooth it back from his face &mdash; a gesture that poker players call 'a tell', which I recognized as signifying that Sid was ready to fold his hand. I'd won again.\n\nSid and I negotiated a decent agreement for my departure. I would remain, technically, for three more months, although, I would actually take the last month off to use my accrued holiday. I would receive the 'golden parachute' that was in my employment contract, which would total about a year's salary, with an amount that averaged my annual bonus for the past three years. All told, a tidy sum of about \n\n&#8356;220,000. And of course, letters of recommendation for my excellent performance on behalf of the bank.\n\nI on the other hand promised that I would not give any copies of the photos to the Bank Directors, or Sid's wife. This was quite droll, considering that his wife Caroline was my original source of the photos.\n\nSid, being a decent sort, inquired of me whether I would find it difficult to find new employment.\n\n\"No, no,\" I explained, \"You know the Swiss bank that opened a new office across from the RBS building last year? They've been sniffing around, and I suspect that I should be able to find a suitable position with them.\" In fact, they had been offering me the moon to come on board.\n\nSid was somewhat incensed.\n\n\"That's rather cheeky of them, isn't it? Trying to hire away staff from colleagues in the industry!\"\n\nWe had to agree, that the standards of this world were in swift decline.\n\n* * *\n\nTwo months later...\n\nI found myself sitting on the verandah of a bungalow, my computer screen in front of me, looking out at the Caribbean. This was one of those out-of-the-way islands, very posh, and limited to a small number of visitors at any given time. The beach in front of me was completely empty.\n\nI was concluding several transactions when I heard the footsteps coming up behind me, and a pair of soft, moist lips gently kissing the back of my neck. Then the sound of Caroline's laughter. Finally the sight of her blue eyes, her 'dirty blond' hair, atop her gorgeous face, and rather spectacular tanned body, as she sat down next to me. I looked again to admire the long, slender legs, her flat stomach, and while not large, proportional breasts. She looked like the natural athlete that she indeed was.\n\nI had just related my conversation with Sid to her over breakfast, and while Caroline tidied up, I had come outside to complete a trade and administer the coup de grace.\n\n\"Did you really tell Sid that awful fairy tale &mdash; it was pure invention! Complete rubbish!\" said Caroline, still laughing. Caroline was dressed for the day in a thong so minimal, that it occurred to me that there really was no point in having it on. \n\n\"My dear, what was I supposed to say. 'Sid, hate to tell you this old lad, but your wife and I have known each other since we were eighteen, and have been regularly fucking like minks ever since!'\" I glanced in her direction.\n\nCaroline looked back the smile still on her face.\n\n\"Or that you've been fucking every bank that you ever worked for?\" she added, a twinkle in her eyes.\n\n\"That too.\" I grinned back at her, as I struck the enter key, and sent off my final directions to the banker in Vaduz.\n\n\"And you're too hard on Ralph.\" Caroline told me with a mock-scolding tone, \"He tells me he simply adores Merlot, and prefers it even when having fish. He is an independent thinker; and you, Ben, are a snob!\"\n\n\"Ralph is going to have a very bad quarter, I'm afraid.\" Playing against a trader when you know his targets, his strategy, and his limits, makes for a one-sided game. The performance of Sid's group was taking quite a hit these days. A zero-sum game, that last trade took &#8356;35,280, plus change, from Ralph's accounts and put it in mine! A terrible thing really &mdash; but I'm incorrigible.\n\n\"Anyway,\" Caroline interjected, returning to the subject, \"at least now I know why Sid has been so keen on tying me up and spanking me. You are really very evil, Ben!\"\n\n\"Isn't that why you adore me? I'm the proverbial 'bad boy'. You married the respectable Sidney Wright, but keep me around for wild, wicked sexual adventure.\" I turned and leered at her, with what I hoped was a devilish look.\n\n\"I am curious about one thing, Ben,\" she asked, in a more serious tone, \"Why did you want me to step up my sexual activities with Sid? You had to know it would cause even a dullard to begin wondering and asking questions?\"\n\n\"Ah, yes my dear, an excellent point. To tell you the truth, I was bored working there, and wanted a change of scenery. But if I voluntarily left after just three years, the bank wouldn't have paid off my contract. By creating a potential sexual scandal, the bastards at the top were falling over themselves to accommodate me, so long as I left quietly. Plus, pushing me out for 'entertaining' the bosses' wife doesn't reflect poorly on my job performance!\" I explained.\n\n\"Anyway, it is easier for us to find time together if I'm not working for your husband.\" That seemed to be to be a most compelling argument, to Caroline, at least.\n\n\"Speaking of which: where is Sid, and where are you supposed to be?\" I inquired.\n\n\"Sid is in Hong Kong for the week, along with your former personal assistant.\" she explained.\n\n\"Ah, the office bicycle.\" came my immediate reply.\n\n\"And I,\" Caroline continued, ignoring my witty repartee, \"am visiting an Aunt in the remote Canadian Rockies.\" She began walking towards the beach.\n\n\"Coming back after a week with a bloody dark tan like that? He'll never believe it!\" I called after her.\n\nShe turned, \"He'll believe what I tell him to!\" And with a little pirouette, Caroline dove into the waves.\n\nI sat back in my chair, and took a sip of my mimosa, lit up my morning cigar, and realized that she was probably right &mdash; he very likely would believe whatever she told him. Or at least pretend to.\n\nThere it was: another reason why I wasn't like Nick Leeson. I wasn't married, so I could play the field without regrets. Married, single, blond, dark, white, black, tall or short &mdash; next to finance, my favorite sport, enjoying female companionship, with its many pleasurable benefits.\n\nCaroline was something completely different from the others, though. I'd always adored her, from the first day we met. In fact, it was Sid who was the interloper in our long-term relationship.\n\nI sat up suddenly with a start. I'd never considered it before, but perhaps I was the true cuckold in the relationship, not Sid. I was shocked by the revelation. \n\nNot that I could do anything to change the status quo. Caroline would certainly not leave Sid, with the likelihood of becoming Lady Wright, the luxury flat in London, the weekend retreat to the estate in Kent. No, in truth, all I could hope for was to continue as we had for all of these years. Alas, but what can a fellow do?\n\nAt the end of the month when I returned to London, I would start working as the manager of the trading room at the Z&uuml;richer Canton Bank, Ltd. I had heard that Herr Doktor/Bankdirektor Weise was married to a woman much younger than he, who was widely admired for her beauty. \n\nWhich would be more entertaining &mdash; taking a small bite of the bank's profits, or seducing Gn&auml;diga Frau Weise? Not that I wouldn't try both.\n\nI glanced back down the beach, where Caroline was waving to me from the waves. I waved back, and started to fantasize about what we might do tonight...\n\n* * *\n\nI have always enjoyed the understated English wit. There are so many modern British writers who come to mind, but P.G. Wodehouse is usually atop the list. His characters are so calm and polite, especially when dealing with disasters; while often going completely over the top when confronted with the trivial. Infidelity? One mustn't over-react, old bean. But don't steal their prize pigs, or their French chefs! I hope I've caught some of that atmosphere in my little story."
    ],
    "authorname": "SoCalOvid",
    "tags": [
        "infidelity",
        "banker",
        "english",
        "british",
        "the city",
        "london"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/a-civilized-cuckold-the-cunning-cad"
}