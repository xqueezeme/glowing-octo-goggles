{
    "title": "Havenhurst Academy Ch. 02",
    "pages": [
        "All teen characters in this story are of legal age.\n\n*****\n\nHe had driven the entire trip with the windows down letting the morning breeze flow through the car. Gerald McBride was wired and a little disheveled from a night of weirdness that began with sexual strangeness from his wife Jessica ending with her screaming at the top of her lungs for nearly an hour before locking herself in their bathroom. The teacher hadn't slept a wink sitting outside the bathroom door pleading with his wife before reluctantly trudging off to work. There was nothing else he could do knowing that he had no other financial options realizing that he could still be replaced. It wouldn't look good calling off a day after he'd been given half a day due to one troubled student. His head was throbbing and the corners of his eyes stung from lack of sleep. He couldn't get over his wife's demeanor during their encounter reminding him of an inexperienced teenager.\n\nHe couldn't reconcile the look on her face after she'd stopped screaming when she realized they were both nude. Gerald watched in horror as Jessica slowly took stock of her body clutching a hand to her chest only to find it dripping with his semen. She'd silently closed the door to the bathroom locking it before weeping on the carpet. He'd already passed the gate noticing the main building was getting closer realizing that he would be attempting to deal with problem students and a full day of work on no sleep. Most pressing on his mind was setting some sort of dominant tone after he'd been humiliated by one Chloe Joy Tobias who'd set the tone upon their initial meeting.\n\n\"Oh, you came back Mr. McBride!!\" Penny was sitting on the steps leading up to the building and the first thing he noticed were tears in her eyes. Her nose and cheeks were also reddened from some sort of distress.\n\n\"Good morning Penny; you didn't really think I'd come back did you?\"\n\n\"Chloe is just bad to everybody and it takes a lot to deal with her sometimes.\" That was an understatement if ever he'd heard one. The thought of the student still gave her him violent urges. The redhead seemed to know exactly what buttons to push and it brought a question raised by his wife to the forefront.\n\n\"Penny, there's something I need to know and I want you to be honest with me.\"\n\n\"Yes sir, but why would I lie?\"\n\n\"Did you somehow give my information to Chloe; it seemed like she read my resume and you help Mrs. Thorndyke out, right?\"\n\n\"You think I helped her Mr. McBride?\" The nerdy girl looked offended by his comments quickly looking away while folding her arms across her chest. \n\n\"Look Penny; I'm just asking a question.\"\n\n\"Well what do I get out of answering it sir; you are accusing me of doing something bad and I don't appreciate it one bit.\" She turned to walk away but he reached out grabbing her arm before remembering himself and releasing her.\n\n\"Forget I asked Penny, sorry.\" She hopped up a few stairs before returning with a finger in her mouth.\n\n\"It's okay Mr. McBride, I know you're a really nice guy. Could I see a picture of your wife?\" He thought it was an odd request but reached into a wallet producing a small photo taken during an ill-advised vacation in the Hamptons. Jessica was standing against the sunset wearing this billowy sundress. She'd been irritated at the tight fit above the waist vowing never to wear it again. He'd kept the picture because her breasts were bulging out of the top; sometimes he used it during alone time. Penny held the tiny picture in both hands like it was a treasure staring intently at it.\n\n\"Penny?\" \n\n\"Sorry, here you go Mr. McBride; she's very pretty sir; what's her name?\"\n\n\"Jessica, shouldn't you be getting to class?\" The nerdy girl flashed a smile that was all teeth before snatching up a satchel bag at her feet.\n\n\"Chloe just \"knows things\" and she likes to play with people all the time. Just act like it never happened because she will keep pushing if you don't. I did not give her anything sir and can we still be friends anyway?\" She slung the bag across her shoulder waiting for an answer.\n\n\"Sure Penny, run along.\" It was hard to believe she was eighteen watching her half-skip off to class but he felt her advice was sound.\n\nThe corridor leading back to his classroom seemed somewhat darker than before and he noticed similar classrooms with shut doors wondering what was going on behind them with other students. It dawned on Gerald that he hadn't met any of the other faculty or students during his first day at Havenhurst. He stopped in front of one of the other classrooms with the intent of peering into the small window kept shut.\n\n\"Not a good idea!\" He found an older man staring at him with a disparaging expression noticing that he was pushing a cart full of books.\n\n\"Just curious, sorry.\"\n\n\"Well it's rude to disturb another teacher's class and a shade disrespectful if you ask me.\" He was a thin frail man who appeared to be in his early sixties with a smattering of grey hair on his balding head and thick glasses on his somewhat crooked nose. He was wearing a drab, long sleeved shirt, and some skinny jeans with some penny loafers on his feet. Gerald noticed a slight tremble running through his body which suggested frailty and wondered why he was still working.\n\n\"Gerald McBride, nice to meet you.\" He offered his hand but it went unshaken by the other man.\n\n\"Must be new here, what class are you teaching?\" The older man rubbed a finger under his nose before scratching the thinning hair at the back of his head.\n\n\"General studies, I've been given seven homeroom students although one seemed to be missing the other day.\" \n\n\"Is there a fat redhead in your class?\" The image of Chloe instantly popped into his head making him wonder what this rude curmudgeon thought of the problem student.\n\n\"Why yes, I wouldn't exactly call her \"fat\" sir, kind of rude don't you think?\"\n\n\"She's a bitch and you know you wanted to slap the taste outta her mouth the moment she opened her trap; don't shit me buddy. Still though, she's got some huge titties with these like, fatty nipples.\" His hands were in front of his body as if he were cupping the undersides of breasts.\n\n\"Excuse me sir.\" Gerald hurried away from the man intent on reporting him later. \n\n\"Fuck you.\" He stopped in his tracks looking back at the older man who continued on his way mumbling to himself. \n\nHe stared until the man pushed his cart around the corner at the end of the hallway before a commotion in his class drew his attention. Penny's thick glasses slid across the floor stopping at his feet as he looked up to find Chloe and Shoko standing in front of the weeping girl. The other girls remained in their seats.\n\n\"WHAT'S GOING ON IN HERE?!\" \n\n\"Nothing, I-I need to go to the bathroom Mr. McBride, excuse me.\" Penny pushed past him running from the classroom. Her sobbing could still be heard a few moments after she was gone. He turned his attention to the two smiling girls standing before him unaffected by his presence. He noted Chloe's huge bust size shamefully reflecting back on the words he'd heard before walking into the room. \n\n\"Yes, my tits are impressive honey so don't you worry none about staring; I won't hold it against you unless you ask me nice.\" Her thick southern accent and arrogant tone irritated him as he looked over at her partner in crime who looked away with a smirk.\n\n\"What were you two doing to Penny?\"\n\n\"Nothing.\" Shoko removed a cellphone from her blazer checking her messages in a subtle dig at her opinion of his authority.\n\n\"Gerald honey, you really shouldn't be listening to that freak of nature about shit that is beyond her feeble little mind. Penny ain't exactly a goodie two shoes herself cutie.\" When he looked directly at her rounded face he felt a slight numbness at his brow.\n\n\"There's no bullying in my class, not now, not ever.\" He decided to take a hard stand to establish authority and gain ground lost since he'd left class yesterday.\n\n\"Sure, whatever you say darling; you've got some really nice eyes. Anybody ever tell you that honey?\" Her own green eyes seemed a shade lighter than normal and were surrounded by an exorbitant amount of eyeshadow that gave them the illusion of being deeply set.\n\n\"That's Mr. McBride.\" Shoko loudly snickered at his terse statement while Chloe stuck a finger between her plump lips letting it rest at the corner of her mouth while she looked him over.\n\n\"Relax, we'll play nice with you Mr. McBride.\"\n\nBoth girls took their seats as he looked over the rest of the students noticing that Mary Jane was missing from her desk.\n\n\"Anybody know where Mary Jane is?\" He fingered the I-Pod he'd loaded in his pocket recalling that the second prevailing thought this morning had been how happy the student would be once he gave her the gift.\n\n\"She's uhm, having some girl problems Mr. McBride honey, I mean sir.\" A lot of ambient chatter followed his question as he turned to write his lesson plan on the board. \n\n\"Nice ass.\" It sounded like Shoko but he decided to ignore her comment figuring that the girls would continue trying to test him. He knew that it was imperative that he complete an entire day of teaching otherwise he would be unfit to teach at the academy. \n\n\"Mr. McBride, you seem a little more relaxed today; did you mash it up real good last night?\" He knew what she was asking but found himself at a loss for a proper response that wouldn't put him back in the same situation as yesterday.\n\n\"Chloe you're so bad.\" Shoko added.\n\n\"I think it is quite inappropriate to ask such a thing of our teacher; you must show the proper respect.\" Champa spoke up found her segregated spot in the classroom in support of Gerald. She was a mystery cover head to toe in a thick burka.\n\n\"Well why don't shut your hole baby; otherwise maybe we'll have us a time.\" Chloe was frustrating seemingly always out to maintain her \"alpha female\" status.\n\n\"I do not fear you Chloe.\"\n\n\"WANT ME TO SNATCH THAT FUCKING BLANKET OFFIN YOUR ASS FREAK?!!\" Chloe quickly spun around in her seat looking pointedly at her classmate. The girls stared each other down for a few moments before Shoko spoke.\n\n\"Don't do that Chloe, it would really ruin class for everybody and Mr. McBride especially. You know no one wants to see her disgusting face.\" Champa's gloved fingers dug into the edge of the desk as she visibly trembled more out of rage than anything else. Gerald could hear a distinct rattling sound for a few moments before it quickly dissipated. He figured that it must be part of some garment the student wore under the burka. \n\n\"What did I tell you two; didn't I say there would be no bullying in my class?\" He didn't know what he was doing but he walked over and wrote both girls names on the black board.\n\n\"Look, he knows our names Chloe.\" Shoko gamely commented.\n\n\"You two remain after class is over.\" Gerald tried his best to sound stern not knowing if he was succeeding. Chloe rested her head on her fist regarding him with a lazy smile.\n\n\"Are you actually giving \"US\" detention Mr. McBride honey?\"\n\n\"Take out your English literature books and go over chapters five through seven; I'm going to go get Penny back in here.\" Actually, he needed a break from the two predominant bullies.\n\nHe walked down the corridor noticing the unnatural quiet and wondering if perhaps Penny fled the school. The hall was immaculately clean with simple benches placed along the walls. He found himself at a stairwell that led downward a few flights. There seemed to be something foreboding about the stairwell that made his skin crawl a little bit. Something seemed to be calling out to him that he couldn't put his finger on. Gerald put his foot down on the first step not sure if he wanted to continue.\n\n\"Don't.\" He turned to find Mary Jane staring at him a few feet back down the corridor.\n\n\"Aren't you supposed to be in class young lady?\" He was relieved to see her after the rough start to class.\n\n\"I-I just needed a break after what happened between us; sorry Mr. McBride.\"\n\n\"What are you talking about Mary Jane, we talked after class yesterday.\" \n\n\"Talked huh, TALKED?!!\" She turned running down the hall quicker than he could've have imagined turning the corner out of sight.\n\n\"MARY JANE!!\" Gerald gave chase rounding the corner to find the hallway empty. He looked around considering visiting a few of the classes in the corridor but remembered the words of the other teachers.\n\n\"Mr. McBride?\" Penny was emerging from a girl's bathroom looking puzzled at his presence.\n\n\"Did you see Mary Jane, Penny?\"\n\n\"Uhm, she's not here sir, were you looking for her. That's not a good idea Mr. McBride, this is not a good place to be.\" It sounded ominous coming from the lanky, brunette who took his arm in an attempt to draw him back down the hall. He pulled against her grasp finding her surprising stronger than she appeared.\n\n\"Penny!\"\n\n\"Sorry sir, I was just concerned because we should be getting back to class. Were you looking for Mary Jane down here because she just isn't over here.\" The nerdy girl was stammering as she reluctantly released his arm. He rubbed his bicep noting that it stung a bit from the teenager's firm grasp.\n\n\"Forget about it, Mary Jane was just here, did you see her?\"\n\n\"She's not here sir, I assure you that she wouldn't be over here anyway. Wanna go back to class sir, I'm sure she will turn up when she's ready to be seen.\" Penny seemed anxious and jumpy puzzling him further.\n\n\"Maybe you're right, I was looking for you originally Penny.\"\n\n\"REALLY?!!\" She perked up grinning as he noticed a slight overbite and a slight case of acne on her narrow face.\n\n\"I was worried about you; Chloe and Shoko were bullying you so I gave them detention.\" Her eyes went wide when she heard while her jaw dropped.\n\n\"NO, I-IT WAS ALL MUH-ALL MY FAULT FOR BEING A ROT-MOUTH BITCH AND CHLOE JUST POINTED THAT OUT TO ME!!\" She was panicking unknowingly steeling his resolve to let things stand as they were.\n\n\"Rot-Mouth bitch; what's that?\"\n\n\"CHLOE DIDN'T SAY THAT TO ME, HONEST MR. MCBRIDE!!\" Penny reached out as if she were going to grab him again before remembering herself folding her arms across her chest. He placed a hand at her back to calm the troubled teen.\n\n\"Don't worry about a thing Penny, I'm running things and from now on you won't have to worry about being bullied anymore.\" She didn't say another word as she walked with him back to the classroom where Chloe and her sycophant were waiting. He immediately noticed Champa's absence and her burka in a pile on the floor.\n\n\"Detention for the rest of the week girls, where's Champa?\"\n\n\"She decided to take the rest of the day off Mr. McBride.\" The curvy redhead was unfazed by his declaration of further detention as Shoko whispered in her ear. He noticed the other silent student reading from her English book with no regard for what was going on in class and Mary Jane was still missing.\n\n\"I'M SORRY CHLOE, I'LL DO THE DETENTION FOR YOU!!\" Penny suddenly blurted out.\n\n\"What-did-I-tell you about being a rot mouth bitch, freak?\"\n\n\"I'M REALLY SORRY CHLOE, YOU TOO SHOKO!!\" Both antagonistic girls snickered at some unknown thing that eluded the teacher.\n\n\"Don't worry, we'll work it all out laters baby girl.\" The threat in her voice was clear as daylight.\n\n\"Well the both of you won't have any time to \"work things out\" because you still owe me at least a week of detention.\" He motioned for Penny to return to her desk and she cautiously moved past her bullies looking green at the gills with fear.\n\n\"And we do intend to pay that debt in full Mr. McBride honey.\" Chloe seemed to be looking at his crotch and it made him wary of her glance. His glance shifted over to the strangely mute girl sitting at the center of the class as he noted her lack of uniform and preference for dark, Victorian era clothing.\n\n\"Eh miss, would you like to introduce yourself. I don't think we've been formally introduced?\" The pale girl glanced in his direction for a few moments before returning her gaze to the printed page of her English text. There was something about her that made him uneasy and he didn't push further remembering Penny's words about this unusual girl speaking when she had something to say and not before.\n\n\"So, Mr. McBride, you and Penny get to \"know each other better\" while you were out honey?\"\n\n\"I'd like to see that; be fucking funny, right?\" Shoko added as both girls snickered at the idea while Penny looked away towards an adjacent window.\n\n\"There will be a pop quiz in the next few days so go over the materials outlined on the board.\" He sat behind his desk looking over some notes for the next class. Again, and again his eyes returned to the strange girl sitting in front of him silently reading. Chloe created a fort out of her text book hiding her face away from him while Shoko followed suite.\n\nHis mind wandered as he sat writing to his wife's behavior the prior night and how much he enjoyed being seduced. She seemed like another person going out of her way to pleasure him until he'd ruined her game by trying to initiate intercourse. There seemed to be something foreign in the atmosphere of his home that he couldn't place. It had been with him the moment he walked out of class lingering in his car and finally in his home last night. The scintillating, wet oral pleasure he'd received had been inspiring changing his secretly cold view of the curvy blonde. He loved her generous curves and was happy to get a chance to enjoy her body even for a moment but he longed for more.\n\n\"Why do you keep calling me that?\" Her words before everything went awry in the worst way as she became unglued hiding in the bathroom until he was forced to go to work mostly in order to keep up appearances. \n\nSome perspiration beaded up on his brow running into his right eye causing him to blink profusely and wipe it away. Gerald looked around finding the girls silently studying resisting the urge to walk over and look behind the book forts. He loathed another encounter with the prominent bullies preferring to keep his distance until their detention began. Something slowly dawned on the teacher as rivulets of sweat ran across his cheek. There seemed to be a rising humidity in the classroom. His underarms and back had quickly become drenched with visible sweat stains. He looked up again noticing nothing out of the ordinary instinctively looking towards Mary Jane's desk which remained empty. Gerald heard a slight snicker as he stood and walked across the room to check the thermostat. The temperature read normal on the antiquated display puzzling him. He noticed Champa's burka littering the floor where it had presumably been snatched from her body as a soft sigh caressed his ear.\n\n\"Huh?\" He looked around finding nothing changed in the classroom.\n\nHis entire body suddenly shuddered and trembled for an instant as this sort of fuzziness engulfed his being. The hair on the back of his neck and forearms stood up with a kind of electricity coupled with the increasing humidity. There was an initial dryness in his mouth that contrasted with the perspiration running down his spine making his underwear wet. Gerald loosened his tie undoing a few buttons on his shirt as he returned to his desk. His palms were sweaty as well as his crotch making him nervous and twitchy.\n\n\"Mr. McBride, you okay?\" Penny asked from her corner. Chloe and Shoko lowered their text books staring pointedly at the nerdy looking girl who lowered her eyes out of fear.\n\n\"My Gerald honey, you looking all hot and bothered right now; you in need darling?\" Chloe's gaze seemed to penetrate him in some unknown fashion.\n\n\"He need something Chloe.\" Shoko added.\n\n\"Oh yeah girlfriend, I know that look anywhere.\" Gerald's face was glistening with sweat and he was almost sliding around on the chair in front of his students.",
        "\"What does it all mean?\" Shoko leaned on her desk resting her head on her fist whimsically.\n\n\"Gerald needs some \"loving attention\" if you ask me girlfriend.\" Her southern accent was nearly unbearable somehow resonating inside his skull with this sort of mounting buzz.\n\n\"What is that?\" Shoko feigned ignorance.\n\n\"You don't know what that is Shoko girl?\" Chloe licked her plump lips glancing in Gerald's direction bringing her hand up to her chest slowly undoing a few buttons. His gaze uncontrollably traveled to the teen's exposed flesh. Even from his desk Gerald could see what appeared to be a single deep line that informed the redhead's cleavage. He hated his body for responding as his tumescence swelled to maximum hardness tenting his slacks.\n\n\"No, pray tell Ms. Chloe Joy Tobias.\" Shoko imitated her friend's southern drawl accurately earning a soft slap to the cheek as both girls giggled.\n\n\"Well darling, when a nice sturdy man like Mr. McBride gets uhm, what you would call \"physical urges\" he needs to fulfill them desperately. That's where an obliging young lady like yourself can be of some use to him darling.\"\n\n\"Use?\" Precum stained the crotch of his slacks.\n\n\"Well yes, something a woman can provide Shoko...something NASTY.\" Chloe let the last word slowly drag off her tongue for emphasis. The Asian student intentionally crossed her almond shaped eyes as if to look addled as Chloe feigned giving head jerking an invisible member.\n\nThe moment the chubby redhead started her little game of pretend fellatio Gerald was besieged with an intense sensation in his crotch. It felt as if an invisible hand was stroking his length in slow intense repetitions that made him gasp aloud. Shoko leaned forward resting her chin on her desk as Chloe continued working the invisible cock flicking her tongue outward a few times. He responded to every one of her motions unsure of what to do as he came close to climaxing. Gerald felt as if he'd been dropped into some huge envelope of humidity.\n\n\"MR. MCBRIDE?!!\" Penny blurted out earning him a second of relief as Chloe's massive mane of red hair whipped in her direction.\n\n\"FREAK!!\" Chloe snarled causing Penny to roughly topple from her desk onto the floor.\n\n\"GIRLS-I-UH, PENNY?!!\" The sensation intensified to include his testes as well with Chloe matching what he was feeling with her hand movements.\n\n\"Oh she gone be okay Mr. McBride; she heals really easy sir.\" Shoko was almost crouching behind her desk with her hands and head visible.\n\n\"I-I NEED AH, I'M TAKING A BRE-BREAK!!\" He blurted out struggling to stand as he was molested intensely. Gerald half ran losing his footing colliding with the wall leading to the classroom door. He shuddered realizing that the force never stop tugging and twisting his cock horrified to find a new sensation at his backdoor. \n\n\"UURRGH FAAAWK; GIRLS I-I UH-FUCKING FUH-FAAAWK!!\" He came harder than he'd ever cum before yelping and moaning as he realized that his students witnessed the entire affair. His chest was on fire and he was breathing hard as he allowed himself to rest with his back against the wall.\n\n\"Are you all right sensei?\"\n\n\"You done took a terrible fall sir, anything we can do to HELP YOU OUT, boy?\" Their shadows cloaked him in darkness as he looked up finding the girl's smiling faces. Both girls had quickly converged on him bending at the waist so their backs were to the rest of the class.\n\n\"Sure Mr. McBride, we'll \"DO ANYTHING\" to \"HELP YOU\" sir!!\" Shoko exclaimed barely stifling a giggle. \n\nBoth girls had unbuttoned their shirts and he found himself looking at the tanned Asian's golden hued breasts barely hidden by a sheer bra. Chloe's mountainous cleavage was partially visible; a smattering of freckles dotting the creamy flesh.\n\n\"NO!!\" He staggered to his feet pushing past the girls revealing the highly visible stain on his crotch. He grabbed the doorknob finding it searing hot to the touch quickly drawing his hand back.\n\n\"A little too hot for you, honey?\" Both girls were smiling, Chloe had her arms around her friend's shoulder. His eyes were on their cleavage as a horrific realization dawned on him.\n\n\"You two?\"\n\n\"Not me Sensei; oh look, he hurt himself Chloe.\" Shoko gingerly took his hand in both of her own leaning to lick the burn with a surprisingly large spade-like tongue.\n\n\"WHAT-THE HELL?!!\" Gerald stumbled back into the door never taking his eyes away from Shoko. He noticed that her own heavily mascaraed eyes seemed to catch the light in a weird way before Chloe stepped in front of her placing a hand on his forehead.\n\n\"Oh dear, he's just a burning up with fever.\"\n\n\"You sure are Mr. McBride; maybe you should have a seat.\" He looked at both girls not knowing what to do, petrified at the realization that they were something more than they appeared.\n\n\"Have a seat-Gerald.\" The redhead's voice resonated through his skull like so many needles painfully poking him into action as he began returning to his desk.\n\n\"YOU DON'T HAVE TO MR. MCBRIDE!!\" Penny suddenly offered rising from her seat in challenge to what was going on in the classroom.\n\n\"Hey bitch; you want me to rip that skirt off so that we can get us a good fucking look at your problem, huh?\" Chloe had enough of the interference on Penny's part.\n\n\"Nuh-no.\"\n\n\"Then why you keep fucking talking when I'm a talking Penny dear? I do believe I told you that no one cares about your pathetic ass, but you keep blabbing bitch.\"\n\n\"Sorry.\"\n\n\"Yeah, you are sorry as fuck and just about ugly as sin.\" Both girls turned their attention to Penny staring her down fierce.\n\n\"STU-STOP IT!!\" He managed to blurt out drawing attention back to him. The buzzing in his skull seemed to intensify when the redhead faced him. An uncontrollable urge to return to his seat caused his movements to become stiff and painful. He managed to push himself into his chair as Chloe approached almost stalking her teacher. He found himself looking directly into her face, peering deep into her eyes which held an unnatural glare. This mean, unruly girl was looking directly into his deepest, darkest places and there was nothing he could do to stop her. His features were distorted in pain and fear as she leaned in closer finding something inside that was truly terrified curled into a fetal position.\n\n\"Fuck.\" Chloe suddenly exclaimed backing off with an incredulous expression on her face. The chubby redhead began buttoning her shirt mumbling to herself.\n\n\"What is it, Chloe what happened?\" \n\n\"Nothing, I'm out of here.\" Chloe quickly snatched up her belongings and bolted from the class loudly slamming the door behind herself.\n\nOnce the door slammed the atmosphere inside the classroom seemed to return. The humidity and strange fuzziness exited with the flustered redhead leaving behind a slight, calming breeze that caressed his ear and the back of his neck. Shoko stared after her missing friend before quietly returning to her desk. The honey soaked girl quietly buttoned up before fishing out her phone and texting. \n\n\"Please-Get out, take off Shoko.\" Gerald noted that she seemed confused and off balance before offering her a way out by pointing at the door. She slung her purse before walking out staring at the hardwood floor.\n\n\"Mr. McBride, are you okay?\" Penny finally felt safe enough to speak of her own accord.\n\nHe looked in her direction and was surprised to see Mary Jane sitting quietly at her desk. The strawberry blonde quickly turned her head towards the window avoiding his gaze. Gerald's heart was pounding in his chest as he took stock of himself. His slacks were completely soiled and he could feel semen and urine running down his leg. There was a puddle under his chair completely humiliating the teacher who quickly removed his jacket tying it around his waist.\n\n\"You're quitting aren't you; you're going to go away and never come back Mr. McBride!!\" Penny was fretting with tears in her eyes.\n\n\"Penny, I-I uh don't think I'm...qualified for this job!!\" He wanted to scream and run from the classroom back to his home but there was something inside him that didn't want to hurt the concerned girl who seemed desperate for attention.\n\n\"DON'T GO MR. MCBRIDE!!\" Penny sobbed as he noticed the corner of her desk was damaged. The heavy wood had a wide fissure crack in it with some of the contents completely visible. Penny's knuckles were bloody.\n\n\"Penny, you're bleeding.\" His breath was coming in starts and stops.\n\n\"I DON'T CARE MR. MCBRIDE; TELL ME YOU'RE NOT QUITTING!!\" The nausea he was experiencing was mounting as he stood on rubbery legs in an attempt to quiet the distraught student. The bespectacled student was throwing a full-blown tantrum banging her head on the desk.\n\n\"Penny?\" His vision blurred as the hard wood floor rushed in to smack the side of his head.\n\n-DARKNESS-\n\nThe light coming through the windshield was intense piercing the fading darkness as he awoke. Gerald McBride found himself sitting behind the wheel of his car disoriented. He looked around finding his briefcase on the passenger seat. A wave of nausea caused him to lurch forward accidentally hitting the horn which blared loudly making him inadvertently slam his head against the driver side window. Gerald found himself sitting in front of his modest home failing to recall driving back to the gated community. His head throbbed and nothing came to the fore when he tried to remember. He pushed the door open nearly falling onto the pavement of the driveway. Gerald pulled the briefcase after him staggering up to his doorway searching his pockets for housekeys. \n\n\"Welcome home.\" The door opened as he was working through his blurred vision to find the right house key. His wife was standing in the doorway with a serene look on her face that struck him odd. For some reason, he couldn't recall, Jessica had been angry with him. Gerald couldn't find the memory or focus when it came to the rest of the day before he'd found himself inside his vehicle. \n\nShe left the door open returning to her love seat where she'd been watching television of most of the day. He noticed a large stack of supermarket tabloids on the coffee table knowing his wife's predilection for disposal news with disdain. She was watching some show featuring the arguing girlfriends of professional basketball players.\n\n\"I know this is going to sound a little off, but did we have some sort of disagreement this morning?\"\n\n\"What-no?\" She looked irritated as her husband interrupted her favorite reality show. \n\n\"It's weird but I feel like we had some sort of fight this morning, are you sure?\" He kept drawing a blank and was hoping that she could help him fill in what was missing.\n\n\"Look, I'm trying to watch television Gerald, why don't you go make some dinner?\" He bristled at her suggestion walking off without a retort. He ended up frying a couple of chops to go along with a hastily slapped together salad. Jessica being the diva that she'd always been ate alone in front of their flat screen while he retired to his home office. The missing segment of his mind continued to bother the teacher so much that he retired early hoping a full night of sleep would jog his memories.\n\n\"Wake up.\" He could hear her voice plain as day.\n\n\"Come on, wake up.\" Her palm was wet and slippery on his manhood, she was working her hand in a measured stroke form the sensitive head to the base. Her thumb teased the tip and underside of his glans.\n\n\"Sir, don't you like what I'm doing?\"\n\nSomething warm and oily engulfed him causing him to move involuntarily in his sleep. He quickly realized that she was sucking him off. Wet, slurping sounds filled the darkness behind his closed eyes as he struggled to wake up. Her hands caressed his abs reverently, lovingly as her head bobbed on his crotch as she took him all the way to the base. He could himself bumping against her tonsils.\n\n\"Mr. McBride, come on and wake up; I want you to make love to me.\" Gerald could feel he weight of her body on his calves. Her hand was pumping his balls as she roughly jerked on his length breathing heavily.\n\n\"Cum for me Mr. McBride; I want to see you cum splash everywhere.\" She was now taking him into her mouth intermittently working hard for his climax.\n\n\"I'm going to keep sucking on your thing until there's nothing left; give me some cum.\" Her weight shifted on the bed telling him that she was lying on her belly now sucking as hard as possible. He tried his best to open his eyes but it was like there was something impeding him. \n\n\"Come on sir; give it to me. I'm begging for it and I want you to give it to me.\" Her attention intensified as his thighs tightened up signaling an impending climax.\n\nHer bobbing head increased as his crotch became drenched in her saliva as the sound of her attention increased. Gerald began spasming as he filled her mouth with his cum. Her nails dug into his hips as she pushed forward capping his entire member. He could hear her gulping down his seed while she continually massaged his stomach and inner thighs.\n\n\"That was great, but I need some more Mr. Mc Bride.\" She began licking and teasing him, massaging him with both hands until he was hard as steel within minutes.\n\n\"You-not, you're not wife.\" It took all his might to form a simple sentence; he felt as if he were having a seizure just trying to speak. \n\n\"So, I want your cum.\" She quickly started working him again.\n\n\"Not-Jess.\"\n\n\"She's a bitch; you don't need her anymore Mr. McBride, let me show you.\" The weight shifted on the bed as the woman stood and took a few steps forward until she was standing over his pelvis.\n\n\"NOT-WIFE, NOT JESS!!\" He moaned in terror as he realized he couldn't move. It felt as if he weighed a metric ton unable to even move his fingers.\n\nHis length was handled as the person knelt over him pushing down until all his girth was inside. Her insides were extremely wet and tighter than normal on his member. She rested atop him letting herself get used to the penetration. \n\n\"Yeah, that's fucking good; this is a good dick.\" Whoever she was began to tighten up around him until a loud gasp was forced from the depths of his throat. She began working her hips back and forth in an increasing tempo until he was whimpering from the exquisite mixture of pain and pleasure. He climaxed quickly inside her with explosive results as his throat cracked from dryness. Even though he was spent, she kept working her hips coaxing him to hardness repeatedly until tears were streaming from his eyes.\n\n\"AAAAAWWWWWRRRGGGHHHH, SHTOOOOOPPPP!!\" He finally screamed just as his female assailant relented.\n\n\"You were really good Gerald, a lot better than the last asshole; yeah, think I might come back for a little more if you're done with dead fucks. Yeah, I'm going to get some more of that shit so I'll leave you a little something to remember me.\" She leaned over him causing this itchy feeling across his chest as her hair brushed across his torso. Her lips felt plump and a little strange as her hand cupped his chin forcing his head to recline while she pinched his nose with her other hand.\n\n\"In a day or two you're going to be begging for it.\" His mouth gaped open desperate for air receiving a steady stream of her saliva until he gagged and choked.\n\nThen as suddenly as she appeared, the mysterious woman was gone. \n\nGerald eventually regained the use of his limbs opening his eyes to find the darkness of his bedroom and some curious movement on the ceiling. Just for an instant, he detected several swirling tendril-like objects of varying widths undulating above him retracting quickly into nothingness. Gerald toppled from the bed switching on the lamp. There was nothing out of the ordinary on the ceiling; the ceiling fan was quietly spinning. Gerald looked around his bedroom finding nothing out of the ordinary. His pants and underwear were discarded on the carpet a few feet away. His abdomen and pelvis were reddened and slathered with his semen mixed with an unknown pungent wetness. He managed to stand with some difficulty as his thighs and testes were extremely sore. He pulled on a robe staggering down the hall in search of his wife.\n\n\"Jess?\" She was still watching television unaware of his ordeal. There was a large bowl of popcorn in her lap.\n\n\"What?!\" Jessica sounded annoyed never looking away from her television program.\n\nHe continued to stare up at his ceiling even going as far as to stand on his bed touching the spot where he'd seen the strange movements in the darkness.\n\n\"Gerald, what's going on?\" Jessica was standing in the doorway watching his movements bewildered.\n\n\"There was something here.\" He continued pressing the spot in silent curiosity.\n\n\"Have you been drinking Gerald; you know that you have a weak composition. Have some coffee and get to bed.\" He bristled at her dismissive tone.\n\n\"I haven't been drinking Jess, something happened in here tonight!\"\n\n\"I can see that; you really should get some help.\" Her snarky attitude directed his attention towards his exposed crotch and the resultant mess.\n\n\"I didn't do this, something happened in here!!\"\n\n\"Sure.\"\n\n************************************************************************************\n\nGerald awoke with a start silently screaming in the darkness. He found himself staring up at an intricate pattern carved into the ceiling of the room he was in realizing it was Mrs. Thorndyke's office. He was lying on a lounge chair covered with a blanket. Every fiber of his being ached, Gerald felt as though he run several marathons.\n\n\"Oh, you're finally with us Mr. McBride; how are you feeling?\" He realized how large the office was as she addressed him from her desk at the other end of the rectangular space.\n\n\"How did I get here?\" There was still a slight buzz in his skull.\n\n\"I'm afraid I took the initiative after you collapsed in class; are you well?\"\n\n\"I'm not sure.\""
    ],
    "authorname": "mondotoken",
    "tags": [
        "big breasts",
        "milking",
        "blowjob",
        "weird women",
        "public humilation",
        "masturbation",
        "curvy/ thick",
        "rough sex",
        "nonconsent/reluctance",
        "teen bullying"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/havenhurst-academy-ch-02"
}