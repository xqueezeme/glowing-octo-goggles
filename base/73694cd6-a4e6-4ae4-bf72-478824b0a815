{
    "title": "By the Bay Ch. 07",
    "pages": [
        "Hey guys!\n\nBack with another chapter of BTB! Again, I'd like to thank you guys for all the awesome emails and comments on the previous chapter. Keep 'em coming!\n\nMuch love,\n\nLily xoxo\n\n\n\nWhen Lady Madison received the letter, she collapsed onto the nearest settee. It couldn't be, she thought. Not her son, not James! This had to be some sort of cruel joke! But she knew Ruth Tatiana, and the respectable woman wouldn't lie. Of that, she was sure. \n\nMadison rang for tea and a splash of brandy before adjourning to her chamber with the letter clutched tightly in her trembling hands. An island girl, she screamed in her mind. What was James thinking? \n\nShe should've expected something like this from the boy. He was always one to do things differently, a trait he'd inherited from his rogue of a father. But marrying a colored girl was completely, utterly unacceptable. Why could he not follow in his father's footsteps and make the girl his island mistress? There would be talk about his actions in the ton, yes, but at least it would not affect the family lineage. \n\nIf Madison knew her son \u2013 and she prided herself that she did \u2013 he was a man who did what he felt was right. And if he wanted to marry this girl, he would. With or without his mother's blessings. She could not let that happen. It would ruin the family's name, and she would not be able to show her face in society for years to come. \n\nMadison spread the letter out on her writing desk, re-reading each line to make sure she was not reacting overmuch to the situation. But when the words 'to wife' played in her mind, she knew she had to take action immediately. She was a woman of great knowledge and a web of connections; she would be able to figure a way to get her son's mind off the girl. She could not have her first-born son wedded to a... a... servant!\n\nPanic fluttering in her heart, she picked up a pen and wrote to Sir Roger, her husband's closest friend. He was a good companion of hers, and had helped her cope with the knowledge of her husband's faithlessness when she'd thought she was going to die from the pain of it. She wanted his advice on the current situation so that she knew she was making correct decisions regarding her son and his mischief. \n\nShe wrote to Roger, asking for an audience with him, and sent the note through one of the servant's boys. Standing by the windows in her room, she watched as the boy rode out on a sable mare, head down and galloping towards the Woods' land. Madison hoped dearly that Roger was in residence, for she feared she would fall apart without another soul to speak to. \n\n*\n\nAnita awoke feeling troubled. It was not yet morning, she knew, and Jay still slept by her side, and arm curled around her waist as he'd had for nearly a month. She didn't know what had awakened her, but she knew something was not quite right. \n\nShe turned around in Jay's arms and he mumbled something against her hair, pulling her closer. Smiling lightly, she closed her eyes and breathed in his scent, burying herself in his warmth. Her body still hummed from their lovemaking, and she would've gone back to sleep without encouragement if it wasn't for the niggling feeling in her heart. \n\nIt was a long time before the uneasiness went away, and it was only then that she slept, comforted by Jay's even breathing. \n\n*\n\nBy mid-afternoon, she was convinced that her nighttime uneasiness was due to the fact that she hadn't gone to the temple for a long, long time. It wasn't that she hadn't wanted to, but she simply hadn't had the time. The ill-effects of it were creeping up on her now, and she made a promise to herself that she would go to the little temple near her old home at the nearest opportunity. \n\nThe opportunity presented itself much too soon, further confirming her suspicion that it was her infrequency in visiting the temple that was causing her to feel troubled. It was after lunch, and she'd just finished washing all the lunch plates. Meera was still in school and Nanthini was upstairs, cleaning the guest rooms. There wasn't much else to be done for the day, save taking down the clothes when they were dry, but that could take another few hours. On a regular day, she would head upstairs and help Nanthini with the cleaning, but today, the need to be somewhere peaceful and holy was foremost on her mind. \n\nShe set the clean plates in the drawer and made her way upstairs. Even before her foot left the first step, she could hear the typewriter in the library and knew that Jay was at it again. But, even as she thought about it, she couldn't leave without telling him. He would be worried if he came out of his imaginary world and found her missing. Leaving a message with Nanthini was as good as doing nothing because the older woman spoke so little English that Jay never bothered talking to her. Sighing, she pushed the door to the library open slightly and poked her head through it. \n\n\"Jay?\" she called, then mentally cursed herself. If Nanthini had heard her using Jay's first name, there would be hell to pay. The Indian community was a small one on the island. \"Sir?\"\n\nHe looked up when she called him a second time, but his eyes were unfocused, his hands scribbling something on a piece of paper. \n\n\"Sir, I'm going to the temple for a while,\" she said, wondering if her words were even being heard or if she was talking to a wall. \n\nHe continued writing something on other pieces of paper as he said, \"Yes, sure. Whatever you want.\"\n\nHer eyebrows rose at that. She wasn't sure that he was actually answering her. That was probably a general answer he gave to anyone who interrupted him as he wrote. She hoped, at least, that he would remember what she'd told him. Somewhat satisfied by his answer, she closed the door to the library, hurried down the corridor, told Nanthini that she was going to the temple, then went downstairs to change. \n\nShe changed into a blue sari and grabbed a shilling out of her savings to put into the offerings box. Then she was on her way, walking towards the neighborhood she'd called home a few months before.\n\nIt took her about half an hour to get to the temple, but once she was there, she didn't waste any time in taking her slippers off and washing her feet. She wanted to do an ancient ritual that involved walking around the temple 108 times. She would pray for Meera and Jay; for the gods to give them good health. \n\nShe attended a little prayer service before starting the walk around the temple. It was long and tiring, but the prayers she chanted were like a balm to her aching feet. By the time she was done, more than an hour had passed since she'd left the house. She said another conclusive prayer, put her shilling in the offerings box and collected the sacred ash from the priest. She'd just smeared the ash on her forehead when the voices of two women reached her ears. \n\nThey were seated near the entrance of the temple, but at a corner, so no one would hear what they were speaking about. But the younger woman was getting agitated and her voice was rising, catching Anita's attention. The older woman seated next to her attempted to calm her down, but the young woman began to sob quietly. \n\nThere was a toddler lying on the young woman's lap. A girl, and how beautiful that girl was. Short, dark hair that fell in ringlets around her flushed cheeks; cherubic lips that were parted in sleep. The girl wore a red skirt and a green blouse, and as Anita watched, the girl's limbs began to thrash as her mother started to cry. The older woman took the toddler from her mother and began rocking her soothingly. \n\nAnita could not help but watch the scene unfold. It began to dawn on her that she would never have this, any of this. She did not have a mother, nor would she have a mother-in-law who would comfort her when she cried. She would not have a child whom she could cherish and love. She would have nothing, no one, especially after Meera married and had her own family. For years, Anita had been completely fine with the knowledge that she would be alone for the rest of her life. But now... it was painful. \n\nShe knew what had caused the change in her thinking. But she'd known he would leave one day when she'd agreed to be intimate with him. So why had she let herself become entrapped and entangled in the now where she dreamed of some kind of future with the man she adored? \n\nShe'd thought she had some kind of rein on her emotions, but apparently, she did not. It was all she could do not to give in to her girlish whims and fantasize about how a future with Jay would be like. It would be glorious, she knew, but she had to be realistic. If she were him, she wouldn't have wanted to marry someone like herself. Why, there were probably tons of English ladies willing to marry him at a minute's notice!\n\nSighing, Anita walked to the entrance of the temple to put on her slippers. Just as she did, she heard the young woman cry, \"How do you know, mother? How could you possibly know that he isn't seeing another woman?\"\n\nStartled, Anita waited for the other woman's reply. But the older lady's voice was too calm and too soft for Anita to hear. \n\n\"I cannot stop him from taking another wife, you know that! We have five daughters, and that alone is enough reason for him to take another wife. He's always wanted sons, you know that.\"\n\nAnita's heart ached for the poor woman, and she shook her head sadly as she turned away from the temple. She was lucky she did not have a problem like that with Jay. \n\nAs soon as that thought entered her mind, she let out a frustrated groan. Jay was not her husband, so why would she have that thought in the first place? Gods, she was going crazy! She needed to get her situation clear in her head. \n\nShe was deep in thought, taking the short route home through a forest clearing, when she felt someone following her. It was early in the evening and the sun was still bright, so she didn't worry too much about things a woman should worry about when walking through the forest. But when she turned around to see if there was anyone walking behind her, there was no one there. She walked a few more steps and turned around again, quickly, and saw something jump hastily into a nearby bush. \n\nRelieved that it was not some kind of sexual predator, but amused at the creature, Anita resumed walking towards home. \n\nBut it wasn't long before she felt like she was being followed again. She turned, and the mongrel looked startled. It took two steps back then yipped at her. Anita laughed. It was so adorable, not more than a pup, in fact. When she moved toward it, it moved back. When she walked, it followed her. \n\nAt the end of the clearing, she knelt and called for the puppy to come to her. It seemed hesitant, looking at her then around her for signs of danger. Seeing none, it took little steps forward until Anita could reach out and scratch its head. \n\nShe'd never seen a dog like this one before. It had so much hair \u2013 too much, in fact. It had to be a special breed or something. She'd never seen dogs like that, but she'd heard of them. A lot of English people kept dogs like that in their houses. \n\nShe scratched his head, then his chin, and he made a purring sound like he was enjoying her administrations. He sidled closer to her as well, rubbing his small body along her thigh. \n\n\"Who do you belong to, little one?\" she asked, scooping him up in her arms. \"Who did you run away from?\"\n\nHe was so light and so easy to carry around. She couldn't remember the last time she'd held anything so precious... well, maybe the day Meera was born, but not much after that. The little man was so cute as well, snuggling into her arms and purring when she petted him. \n\nWhen the house was in sight, she put him down though she was loathe to, and told him to run off to where he'd come from. He simply looked at her, head tilted, large brown eyes blinking with innocence. \n\n\"Um, shoo.\" She made elaborate hand gestures but he didn't move. \n\nIn the end, she decided to walk into the house by herself, leaving him behind. But before she could close the back gate, he wheedled himself in through the crack and entered the house. He pranced on his short legs and yipped at her again, thinking they were playing a game. \n\n\"Oh, no, little one. You're not supposed to be in here,\" she worried, shooting a glance to Jay's window on the second floor. She assumed he was still in the library, working on whatever he worked on all the time. \n\nShe opened the gate again, gesturing for the dog to go back home. It didn't move. \n\n\"What's that?\" Nanthini called from the kitchen window. \n\nAnita looked from the dog to the woman. \"Um, it's a dog.\"\n\n\"Looks like a squirrel to me. What is it doing here?\"\n\n\"It followed me home and doesn't want to leave.\"\n\n\"Just take a stick and whack it. It'll know it's not welcome. Come in. It's time to start cooking dinner.\"\n\nNanthini disappeared, leaving Anita staring at the fluffy mongrel. He stared back at her, almost as if he was chastising her for even thinking about picking up a twig. \n\n\"What am I to do with you?\" she thought aloud. Just then, a bee whizzed past them, and the dog took off after it, prancing on its little feet. Panicked that it would get into the house, Anita flew after it, only to find that the faster she ran, the faster the dog ran as well. It was like playing a game. \n\nShe ended up chasing it around the backyard, the dog yipping occasionally and she laughing even though she was out of breath. It was so small and yet it ran like a bullet, challenging her. In a final attempt to catch it, she lunged for the bundle of energy and caught it by the waist, dragging it across the grass and cuddling it against her chest. Panting heavily, it kicked upwards and licked her chin. She squealed and fell to the grass. \n\nJay felt like a pervert. He'd been watching Anita ever since she'd stepped through the gate with the dog. The dog's sharp yips had shaken him out of his literary musings, and he'd found himself attracted to watching her when she didn't know she was being watched. It affected him in a way he couldn't begin to understand. It was somewhat sexual, but yet again, it affected his heart more than his dick. It was as though his desire stemmed from his attraction to her character more than her luscious, delicious body. \n\nAnd then she'd begun running around the yard, chasing the dog, and he'd felt need for her pool low in his belly. If someone had shot a syringe of whiskey through his blood, it would've had the same impact on him. He groaned, laying his head against the glass of th window, trying to cool his blood. \n\nBut then he heard her squeal, and all his efforts went to waste. She laughed, and his blood hummed faster. \n\nGod, he wanted to kiss her. \n\nThe thought only had to enter his mind before he was pushing away from the window and taking the stairs down two at a time and striding to the backyard. He ignored the maid in the kitchen and shoved open the back door. Anita was lying on the grass with the dog under her, ticking its belly like she would a baby's. When she heard the door open with a slam, she looked up with a startled expression on her face. \n\nWhen she saw Jay, she righted herself quickly and stood. A guilty expression crossed her face. \n\n\"Did we disturb you? I'm sorry. I didn't mean to make so much noise,\" she admitted sheepishly. \n\nHe shook his head enigmatically and crooked a finger at her. She tucked loose strands of her hair behind her ears and came forward. When she was within touching distance, he curled an arm around her waist, pulled her roughly to his chest and kissed her fiercely. She tried to push him off for a moment \u2013 she managed to remember that Nanthini was nearby \u2013 but not for long. It was a matter of seconds before she gave in to the pressure of his lips because she couldn't help but do so. \n\nIt wasn't a gentle kiss by any means. If she hadn't known better, it was as though he was marking his possession, branding her as his. She didn't know what had made him want her this way at such an odd time of the day, but she didn't mind. There was something terribly exciting about the way his eyes gleamed and his lips caressed hers. \n\nAs she always did, she became malleable and pliant, leaving him to handle her in whatever way he wished. When he pulled his lips from hers, she wasn't the only one who was shocked. \n\n\"What the -,\" he bit off, and both of them looked down to find the dog growling and pulling at his pantleg. \n\n\"Oh, shoo. Go away! Go. Shoo!\" Anita tried to wave it away. \n\nBut the dog seemed intent on protecting its new mistress from her ravisher and continued attacking Jay's pants with a vengeance. \n\n\"I'm sorry,\" Anita said, reaching down to scoop the bundle of adorable nonsense into her arms. \"He was very nice to me outside. I don't know what possessed him.\"\n\n\"Males tend to be very possessive when it comes to their females,\" he said without a hint of amusement in his voice. Her eyes rose to lock with his and she saw the intensity in them that made her tremble. It excited her, his new need for her, and her eyes dropped to his lips. But when she moved closer to him, the dog growled and she bit back a resigned smile. \n\nHe didn't bother to mask his frustration. \"I don't care what you do with that thing. Skin it, bury it, hide it in a pot with boiling water, anything! I want you right now.\"\n\n\"But I- Nanthini's waiting -.\"\n\n\"Tell her I need you up there to fix my torn pantleg or something. I'm sure she can handle dinner by herself.\" \n\nShe ran her fingers over the dog's head, anything to keep her trembling hands away from his sight. \"I will see you there in a few minutes.\"\n\nBack in the kitchen, she took a shallow bowl and filled it with water. As soon as she set it down, the dog began to lap at it with its small tongue. Anita stroked its head a few times, encouraging it to drink, before fetching the biscuit tin and pouring a handful of biscuits on the floor. As with the water, the dog quickly began to make its way through the biscuits. Anita didn't wait for the dog to finish its meal; she had more pressing matters to attend to. \n\nShe made her excuses to Nanthini, \u2013 who seemed to have missed Jay's ardent display of affection \u2013 scrubbed her hands free of fur, and headed upstairs. \n\nShe was hurrying to the bedroom when a hand shot out of the library and dragged her inside. Her back was against the closed door before she could comprehend what had happened. \n\n\"Don't move,\" he whispered against her ear, his body pressing hers into the unyielding wood, his warm breath making her shiver. One hand delved into her hair and tilted her neck to the side so that his teeth could rasp against the long column. When she trembled against him, he nipped lightly at her bottom lip. \"Don't move,\" he repeated. \"I want to taste you.\" \n\nHe'd become an expert in manipulating her gowns and saris. Today, she was still in her sari after visiting the temple. Saris were the easiest to untangle. If he undid her petticoat, the rest of the sari would fall to the floor after it. But he took his time getting to that point, caressing every bit of exposed skin from her neck to the temptation of her beautifully sculpted navel. \n\nHe was on his knees in front of her when he reached behind her and pulled at the strings to her petticoat. The material fell, leaving her bare except for the sari blouse she still sported. \n\nShe was perfect. He could already smell her before he touched her. For several moments, he simply laid his forehead against her stomach and breathed in her scent. His hands caressed her hips, dipping teasingly low, then moving back to her waist. Slowly, excruciatingly, he placed kisses down her stomach, over the thatch of curls and on the little nub that she was so sensitive to. \n\nAt the first flick of his tongue, her back arched, pushing herself more firmly into her mouth. A nip to her nether lips had her trembling. The friction of his tongue was indescribable! His pace was unrelenting as his tongue flicked across her bud repeatedly. She wanted desperately to bury her fingers in his hair, but she felt like she couldn't move, so she settled for fisting her hands. ",
        "He could see what he was doing to her; he could feel it. Her head was thrown back against the door, her eyes tightly shut. Her sex and body were humming with need for him, just as his was for her. \n\nAnita felt consciousness begin to fall away, little fragments at a time, as he licked and suckled at her core. As his fingers exacerbated the pleasure, the little fragments became larger and larger chunks, until she had nothing left. All she had to do was stay still and receive the pleasure he was giving her. She knew her legs were trembling, her thighs felt like dough, but when the pleasure burst through her body, she was oblivious to anything but the steady, intense pulses in her core. She didn't know that she'd cried out or that her wetness had leaked onto his chin. \n\nHe rose, wiping his chin with the edge of his shirt, then unbuckled his pants. Anita was still nestled in the world between consciousness and pleasure, and he waited for her to return by placing tiny kisses along her jaw. Slowly, when she began to moan at the back of her throat, he lifted her and wrapped her legs around his waist. Her back was pressed against the door and he told her to hold on to him as tightly as she could. \n\nWithout preliminaries, he thrust into her, true and deep, and she clenched herself around him as his length brushed across sensitive skin. Her eyes were open now and she was receptive to the new kind of pleasure he was giving her. \n\nShe wrapped herself around him and held on as he loved her in a position they hadn't tried over the past month. This way, his skin warmed hers, and she felt a part of his body brushing against her nub. \n\nAll too soon, she began to feel her body crest and prepare itself for the fall. His body began to tense as well, and as his thrusts became quick and hard, she felt herself falling harder than she had the first time. Surprised whimpers escaped her lips as she felt him spurt his seed deep inside her, and the heat of the liquid made her pleasure more intense. \n\nShe felt him grow soft inside her, felt the shudders in his body. Leaning forward, she took the liberty of pressing a kiss to his lips. His eyelids flickered open, the satisfaction apparent in them , and she realized that nothing else in the world could make her feel more like a woman than those eyes. One look, and she felt beautiful and wanted. \n\nHe set her on the floor and tried to re-tie her sari for her. But apparently, he was more skilled in taking it off than putting it on. They helped each other dress, kissing and caressing, laughing, and enjoying one another. \n\nShe only left the library when the sun had set. \n\n*\n\nLater that night, Anita lay on top of Jay, exhausted from another bout of lovemaking. By the gods, the man was insatiable, but then again, so was she. \n\nShe rolled off him before their bodies started to stick together. But she didn't roll far; he wouldn't let her. \n\n\"Jay?\" she whispered, wondering if he was already asleep. Her fingers were tracing the tattoo he had on his hip. \n\n\"Mmm,\" came the mumbled reply. \n\n\"Would you tell me about your tattoos?\" she asked, pressing the pad of her thumb to the tribal curves. \n\nHis eyes opened and he turned toward her. \"What do you want to know?\"\n\n\"What do they mean?\"\n\nHe adjusted her body more comfortably against his side. \"Well, the dragon on my arm is for my platoon. We called ourselves the dragons because we were always put on the front line. And, you know, as the fairytale goes, the prince has to defeat the dragon to get to the princess.\"\n\n\"Didn't it hurt?\"\n\n\"In the beginning. Then your body gets used to the pain.\"\n\n\"What about the one on your hip?\"\n\nHe laughed softly. \"That's just for vanity's sake. I love tattoos. They're so primal and unlike everything I've grown up with.\"\n\n\"I think they look beautiful on you,\" she said around a yawn. \n\n\"Thank you.\"\n\nA moment of silence passed between them. \n\nThen she said, \"Jay, would you tell me about your family?\"\n\nShe felt him tense a little. \"What would you like to know?\"\n\nShe looked into his eyes to see if she could read the emotion there. She couldn't. \"Anything.\" \n\nHe took a deep breath to try and relax himself. \"Well, my family history can be traced back to about 400 years. There have been 13 Dukes before me. My real first name is Edward, but most people call me James because Edward was my late father's name. When I went to school, I shortened James to Jay because there were too many James in my class and I wanted to stand out. My stepmother is more of a mother to me then my actual mother. I have a step-sister and a younger brother. What more do you want to know?\" \n\nHe described himself so impersonally that she had to take a second to digest the information. \n\n\"Stepmother?\" she asked at last. \"Your father has two wives?\"\n\nHe smiled. \"I doubt that's legal back home. But no, Ruby was my father's mistress. She's a splendid woman. You might like her.\"\n\nAnita doubted she would ever meet this woman, but she nodded anyway. \"What about your mother?\"\n\n\"What about her?\"\n\n\"Is she a nice woman? Does she look like you?\"\n\nJay had never thought about that before. \"Well, yes, I suppose I do look like her. We have the same dark hair and green eyes. Funny that I've never thought I looked like my mother before.\"\n\n\"That isn't a bad thing,\" she said, assessing his tone. \"Your mother must be a very beautiful woman.\"\n\n\"Yes, but I've just never got along with her. She's a horrid woman. I hate to think that I take after her.\"\n\n\"Why is she horrid?\"\n\n\"She's just... everything I hate. She stands for everything conventional and rigid and... she made my father's life hell.\"\n\n\"Being conventional isn't bad, Jay.\"\n\n\"You wouldn't understand unless you lived with her.\"\n\nShe leaned forward and pressed a kiss to his shoulder. \"Be calm. She's not here with us.\"\n\nHe sighed. \"I know.\"\n\nThey stewed in silence for a while, both reflecting on their conversation. \n\n\"What about you?\" he asked later. \"Do you look like your mother?\"\n\n\"Not really,\" she said, her eyes blinking sleepily. It was getting late and she was exhausted. \"We have the same coloring, though. My mother was dark, but she was beautiful.\" \n\n\"I could say that about you, too.\"\n\nAnita smiled, loving the glow in her heart. \n\n\"What about your father?\" \n\nShe shook her head. \"My mother never really told me who my father was. Though I did get my eyes from him. My mother always thought my eyes were quite unnerving.\"\n\n\"Why?\"\n\n\"She told me once that she always kept seeing my father in me, but she never actually told me who my father was.\"\n\n\"Didn't you ask?\"\n\nShe shrugged. \"It doesn't make a difference to me. I don't need a father.\"\n\nHe pulled her up against him and kissed her. \"I love that about you. Your independence. It's new to me.\"\n\n\"I didn't have a choice in the matter, really.\"\n\n\"But \u2013 do you hear that?\" \n\nThey quieted and listened as a small scratching noise came from the other side of the door. \n\n\"What's that?\" \n\nJay slipped out from under the covers and pulled on the pants he had discarded earlier. Anita covered herself with the bedsheet. \n\nHe opened the door just a crack to see who or what was on the other side of the door. But just as he opened it, the dog that had attached itself to Anita scurried through the crack and jumped onto the bed with her. He had to roll his eyes. The mutt was pushing his limits. \n\nAnita pulled the dog to her body and stroked it soothingly. When Jay got under the covers with her again, she sidled up beside him, put the dog next to her and rubbed its tummy. \n\n\"I suppose we'll have to make room for him now?\"\n\n\"If you wouldn't mind.\"\n\nHe watched her pat the dog until its eyelids began to flicker. \n\n\"What are you going to name him?\" he whispered in her ear. The dog's ears stood at attention immediately at the sound of Jay's voice. Anita chuckled. \n\n\"I was thinking of Beau, what do you think? I was going to call him Beautiful, but that would be embarrassing for a boy.\"\n\n\"Beau's quite perfect for him. He strikes me as the vain sort.\" She shot him a look. \n\nYawning, he turned over and blew out the lamp. \"Goodnight then.\"\n\n\"Goodnight,\" she murmured, turning over to kiss him, but stopped short and laughed when Beau growled his discontentment. \n\n*\n\nAs was his habit, Sami met her at the market the next morning. She'd become to expect and even like having him around to talk to. He was such a sweet and kind man that sometimes, she felt a twinge of regret that she hadn't been allowed to marry him. But, thinking about Jay and the feelings he stirred within her outweighed the regret that surfaced when she talked to Sami about the past. Jay was a good man as well, and though she tried not to compare them both, she always thought about what she would have lost had she married Sami. \n\n\"How is Meera doing these days?\" he asked as she browsed the selection of vegetables at her favorite stall. She picked up a ripe tomato and gave it a squeeze. Then she dropped it into her basket. \n\n\"She's doing well. She'll be finishing school in another month or so.\" Anita couldn't keep the hint of pride from her voice. \n\n\"Oh, yes. It's a wonder you managed to put her through school without your mother around. You must be very proud.\"\n\n\"I am, yes,\" she murmured. \n\n\"So how old is the girl now?\"\n\n\"Eighteen, though she'll be nineteen in a few months. Why do you ask?\"\n\n\"Nineteen and educated,\" he wiggled his eyebrows, \"you better get her married off quickly.\"\n\nStartled by his tone, she turned to look at him, a carrot dangling off her fingers. \"Why do you say that?\"\n\n\"She's close to becoming a spinster. Once she turns twenty, I don't think she'll have many marriage offers. Why, my wife was fourteen when I married her.\" Seeing Anita's distress, he amended, \"Of course, we have to take Meera's looks into account. I don't think she'll have much trouble attracting her future husband.\"\n\n\"I just... I've never really thought about getting Meera married. I always knew she would get married someday, but she's eighteen now, and I haven't realized... Where did all the years go?\"\n\n\"I could say the same about my nine year old. It feels like yesterday that she was just a toddler.\"\n\nAnita turned back to her shopping, reveling on what Sami had just said. She would talk to Meera about it that night. \n\nAfter purchasing the items she would need for lunch and dinner, Anita prepared to say goodbye to Sami. She was just about to tell him she had to leave when he asked her if she wanted to have some cake with him at the little bakery they used to frequent when they were children. All she could do after that was give him a droll stare. The snake! He definitely knew how to keep her with him longer each time. He was dangling chocolate cake in front of her nose, and she was hard-pressed to resist his offer. But how had he remembered that she couldn't resist those sweet treats? It had been ten years!\n\n\"Oh, I remember,\" he said with a smile as they headed toward the bakery. \"I remember everything.\"\n\nIt was a small place run by an old British lady. She was kind and gentle as only a grandmother could be, and usually gave out free sweets to children when they walked past her bakery. \n\nWhen they stepped into the cozy little room, two things hit Anita at once. First was the incredible aroma coming from the kitchen. The second was that the place hadn't changed one bit over the years. The little old lady who ran the place still sat in her chair by the old bookshelf, sipping her tea and reading a book. When the bell over the door rang as they entered, she looked up with a ready smile and shuffled forward to peer up at them. It was apparent that age had caught up with the lady. \n\n\"It's Sami, isn't it?\" she said, wagging her finger at him. \"Don't think I don't recognize you under all that hair, young man. I know you plain as day.\" She turned to Anita, still peering through narrowed eyes. \"And who's this dear? Oh my. Are you the girl he used to run around with as a child? Lord, you've both grown. Makes me more aware of how I've aged as well.\"\n\n\"Oh, you don't look a day older than twenty, Grandma Beth,\" Sami said in perfect English. It was the first time Anita had heard him speak the language, and she realized he had a crisp British accent. It must be because he worked with the English so much. She was impressed; he sounded so... regal. \"You haven't changed since the last time I saw you.\"\n\n\"Pish-posh,\" the lady waved his comment away, though they could see the blush on her cheeks. \"What can I do for you children today?\"\n\n\"We walked all the way from the market for some of your chocolate cake, Gran. With syrup and those nuts that you sprinkle on the top.\"\n\n\"That was always your favorite,\" she said, her eyes twinkling with remembrance. \"Would you like it boxed?\"\n\n\"No, no. We'll have it here.\"\n\n\"Of course. I'll be only a moment, dears. Have a seat.\"\n\nAnita took note of the time before she sat by the window with Sami. She didn't want the time to escape her like it had last time. She couldn't shirk her duties without feeling dreadfully guilty. \n\nSami began speaking about the times when they would come to this shop when they were younger. His mother always gave him the extra shillings she had, and he would always spend them on Anita. Once, when he'd been sixteen, he'd bought her a slice of chocolate cake because she'd told him she'd never tried it before, and watching her enjoy it had been one of the most sinful pleasures he'd ever experienced. \n\nHe couldn't deny that she'd haunted his dreams for the past ten years. He'd hated himself for not being man enough to stand up for the girl he loved all those years ago. He'd let her go because his mother had decreed it. It had been a stupid, foolish mistake and if he was granted one wish, he would wish to turn back the time. He knew what he wanted now, and he wouldn't hesitate to sell his soul for her. \n\nShe was so innocent, so carefree, so womanly. Every aspect of his being called out to her. She was also so refined, having lived in British households before, something he respected greatly. Her fingers were gentle, she never shouted, and she was devoted to her work. Moreover, she was beautiful. She'd grown from a scrawny little girl to a woman with a body that he thought was perfect. He admired everything about her, from her beauty to her character. Gods, he wished things were different. \n\nWhen the lady set the generous slices of chocolate cakes before them, Anita didn't hesitate to dig her fork into it. The first taste of chocolate on her tongue was almost painful; it had been years since she'd had anything that sweet, and her tongue tried hard to cope with the intense flavor. But a second later, the taste of thick chocolate seeped into her, and she made a quiet humming sound at the back of her throat. She didn't know that she'd closed her eyes to better savor the treat. \n\n\"Oh, this is so good,\" she purred as she swallowed the first mouthful, her fork already spearing more cake. He stared at her unflinchingly, his gaze riveted on her lips and the way she seemed to take so much pleasure in eating something so simple as a slice of cake. \"What?\" she asked when she caught him staring. \n\n\"Nothing.\" He shook his head quickly. \n\n\"Eat your cake,\" she said with a smile as she devoured hers as quickly and delicately as she could. \n\nWhen she was done, she sat back and heaved a sigh. She was so full, and yet she felt like she could eat another ten slices if they were on her plate. Sami had long since finished his share, having taken impressive man-sized bites of his cake, and watched her pat her stomach with satisfaction. \n\n\"Thank you, that was delicious.\"\n\n\"It was my pleasure.\" And indeed, it was. \"You've got some syrup on your lip.\"\n\n\"Oh.\" She swiped at her mouth with the napkin on the table, but when she didn't get it off, he reached over and wiped it away with his thumb. Anita froze on instinct. It was the second time he'd touched her since she'd started speaking to him again, and his touch made her quite uncomfortable. But at least this time, he was only helping her and she would've moved away if it knew it wouldn't hurt his feelings. \n\n\"Thank you,\" she said as he wiped his thumb on his own napkin. \n\nHe was tempted to say 'my pleasure' again, but she would interpret it the wrong way. So he simply nodded and pulled his wallet out. He knew the cakes would cost less than what he put on the table, but he didn't mind. The extra was for the service. \n\nHe said his farewell to the lady and led Anita out of the shop. He knew she would say she needed to leave, but he didn't want her to. He wanted her to stay, to spend more time with him. Without her, he'd have to return to what was real and horrid in his life. She was the only fantasy he felt he could possibly have. He didn't want her to leave.\n\nBut in the end, she did, after thanking him for the treat. And he watched her walk away until the forest swallowed her whole. \n\n*\n\nThat night, Meera sat before her small writing desk, head held in her hands. It had been days, even a month since she'd written anything substantial. The afternoons she'd used to write had been taken up by sleep, since her nights were now otherwise occupied by Rae. Meera shook her head. Rae. She should never have let the woman touch her. \n\nOh gods, but it had felt so good. Meera's body trembled when she recalled her first time with Rae. It had been on the beach, and it had been the most magical experience of her life. She wouldn't have traded it for anything in the world \u2013 other than the alleviation of the pain in her heart at the thought of Rae's leaving. \n\nAs it was, she hadn't seen Rae in days, ever since she'd walked out on their lovemaking. She still couldn't understand or guess what was troubling Rae so much that she'd neglected to meet Meera for so many days. Meera had searched everywhere \u2013 from the beach to her hotel room, but Rae wasn't anywhere to be found. \n\nHer heart was breaking, of that Meera was sure. She didn't know what had caused Rae to reject her this way, but it made Meera want to tear her hair out. \n\nStifling tears \u2013 for she'd shed too many over the past few days \u2013 Meera cracked her notebook open and stared at the words on the page. Pencil marks. Scrawls. Gods, they meant nothing to her compared to reality. She wanted Rae. She wanted Rae so badly. She needed to feel the older girl's hands on her, even if it was for just one night. \n\n*\n\nRae stared at the wavering reflection of Meera through the candlelit window. Was she crying? Was she writing? Was she thinking of her absent lover? Rae couldn't decipher her expression from this distance, but she knew Meera was too headstrong to be crying over a lover who had told her from the start that she wouldn't be staying forever. The Meera she knew would be thinking of her lover as a fond memory already, while spinning a story around the time they'd been together. It was stupidly ironic that Rae \u2013 the one who'd made clear from the start that she'd wanted nothing permanent \u2013 was the one who was left pining for the golden-haired, brown-eyed girl who was utterly mismatched for her.\n\nShe was seated on a low branch of a tree, watching Meera for hours she'd lost count of. Time went unnoticed when it came to Meera, be it when they were making love or just staring into each others' eyes. When Meera was with her, Rae felt like nothing else really mattered in the world. \n\nGod, how had she ever let this happen to her?\n\nShaking her head, Rae looked up to the other window which was illuminated by the glow of an oil lamp. It was probably the room of the owner; the man Meera's sister was working for. It was half past one in the morning and it was a wonder that any British fop was still awake. \n\nShe was about to look away when someone appeared at the window. A woman. Rae squinted in an attempt to get a clearer picture of her. She was naked, of that Rae was certain. The dark woman leaned against the window, placing her palms on it to steady herself, and even before the man came up behind her, Rae knew what was going to happen. ",
        "Was it just her imagination, or could she hear the cries of the couple as they gave each other unspeakable pleasure? Even from afar, she could see the trembling of the woman's thighs and the tender caress of the man's hands on her breasts. Rae knew she shouldn't stare, but what she couldn't look away from was the intimacy the two shared. Although the woman's face was turned away from him, the man leaned forward to capture her lips with his, sealing their connection even in that position. \n\nRae smiled. She knew how a connection like that would make the woman feel \u2013 special and cherished. Rae had felt it numerous times herself, but only with one person. \n\nShe started when the candle blew out in Meera's room. Her pocketwatch told her that it was about two in the morning. Had it been a month ago, they'd be locked in a trance-like pleasure by this time, but now, Meera was going to bed alone. \n\nRae's ship would be leaving the dock in another few hours. She hadn't wanted to say goodbye, to spare Meera the pain of it, but now, that didn't seem right. Meera deserved to know that what they had together had ended, and Rae had to move on to new places and meet new people. She couldn't leave Meera hanging onto a hollow hope that Rae would come back for her one day, because Rae would not. Meera had a right to know that Rae was leaving. \n\nIt was for that reason that Rae didn't simply turn her back on the house, the lovers, and trudge back to the hotel. She had to see Meera once, if only to say goodbye. Things had been too messy to leave alone. \n\nWith a sigh, Rae jumped off the low branch and landed silently on her feet. She knew the task ahead of her would not be easy. If not for Meera, then for herself. \n\n*\n\nMadison alighted from the phaeton, taking Sir Roger's outstretched hand as she did so. Her dark curls fell about her shoulders and her cheeks held a healthy glow from the rouge she'd hastily smeared on them. She didn't want to look harried; a woman of her status should be able to handle any problem with grace and decorum. \n\nShe gave the handsome man a small smile as she stepped from the vehicle. He raised her hand to his lips and welcomed her to his home. \n\n\"It has been a while since you paid a visit, my dear.\"\n\n\"I know, Roger. There's always something for a dowager duchess to do, it seems.\"\n\n\"Well, it's marvelous to see you again. Shall we?\"\n\nHe extended his arm and she took it, gracefully ascending the steps to the large countryside manor. He led her to the sitting room, but she stopped him with a gentle hand on his arm. \n\n\"Perhaps somewhere a little more private?\" she asked nervously, and he hesitated, mulling the wisdom of taking a widow to his private study. But when the lady began to bite her lip anxiously, he relented and took her in the direction of the stairs. \n\nMadison seated herself in a comfortable leather chair opposite Roger, fidgeting with her gloves and the folds of her modest peach day gown. Roger watched her fidget, not entirely sure what she deemed had warranted his immediate attention. He'd known this woman for a little more than thirty years, and in those years, he hadn't managed to understand the way she thought. \n\nWhen she remained mum for minutes, Roger rang for some tea. Perhaps a light drink would calm the lady enough for her to speak. \n\n\"Thank you for seeing me at such short notice,\" she began softly after he'd sent the servants away. \n\n\"No problem at all, my dear.\"\n\n\"You were the only person I could think of who could help me when I received the letter.\"\n\nHis curiosity piqued, Roger raised an eyebrow. \"And what might that letter concern?\"\n\nHer emerald eyes, somewhat ashamed, rose to meet his. \"My son.\"\n\n\"James? Or Andrew?\"\n\n\"James. It's always James.\"\n\nRoger leaned back in his seat and laced his fingers together. Ah, James. The boy was so much like his father that it was no wonder Madison worried for him. After all, Edward hadn't been the perfect man or husband. \n\n\"What about James? Is he home yet? Last I heard, he'd run off to one of the colonies.\"\n\n\"Singapore, yes. And no, he has yet to return.\" She reached into her reticule and pulled out a folded piece of parchment. \"I received a letter earlier today from one of my friends on the island. She's a very darling woman, which is why her words so worrying.\"\n\n\"Could I see the letter?\"\n\nShe unfolded the letter with fingers that trembled slightly. Then she laid it on the desk. \n\nHe was quick to scan through the words. Taking an island girl to wife? It was certainly like James to do that. After all, his father had taken a saloon dancer as a mistress. But, Roger thought, the father knew better than the son. Edward's indiscretions hadn't marred the family lineage. James' however, would destroy the family bloodline and the family name. \n\n\"Could this be a jest?\" he asked her, turning the paper around to look for some form of indication that it was. \n\nMadison shook her head. \"I don't believe so. It is entirely like James to do such a thing.\"\n\nRoger nodded in agreement. \"He does take after his father an awful lot.\"\n\nMadison simply looked down at her hands. \n\nSensing that he'd said something he shouldn't, Roger continued. \"Well, I see your problem now, my dear. Have you thought of a solution yet?\"\n\n\"Well, I have. But it might not work.\"\n\n\"Let's not rule it out, Maddy. Let's hear it.\"\n\n\"I was thinking that we could bribe her. Since she's only after our wealth, a good sum would keep her away from the boy, would it not?\"\n\n\"Yes. But that doesn't ensure that she won't come back to us for more when the money dwindles.\"\n\nMadison nodded, remaining quiet. \n\n\"Another option might be to separate them,\" Roger thought aloud. \"What might bring him back to England?\"\n\n\"Not very much, I assure you,\" she replied with a sad laugh. \"He hates me. He wouldn't return even if you wrote to him that I was on my deathbed.\"\n\n\"The boy does not hate you, my dear,\" Roger tried to console her, although he knew that both of them knew the truth. \"What if you wrote to him about Edward's will? Would he come back to England to solve the legal issues?\"\n\n\"Perhaps. But he was present at the reading of Edward's will. He knows there is no new clause or anything that has been left unsettled.\" \n\n\"I beg your pardon, Maddy, but there are ways to create a new clause in Edward's will.\"\n\nMadison blinked, understanding. That plan might prove to work, but... \"What if he returns to the girl after the matter is resolved?\"\n\nThey were deep in thought when there the noise of a commotion in the hallway made them both look up. The doors to the study were flung wide. Elena, Roger's nineteen year-old daughter scurried into the room, her cheeks flushed with exertion and her hair in disarray. The girl did not notice that her father was receiving a guest. \n\n\"Daddy, I'll be going to Holly's house for supper. You don't mind, do you? Holly's been jealous that I haven't visited her because she heard from Kathryn that I had lunch with Sarah last week. I'll take the pink carriage, and I'll be back before \u2013 oh.\" Her rambling came to a halt when she noticed the small woman seated in the tall leather chair. \n\n\"Your grace,\" Elena murmured through shock and breathlessness. Then she fell into a deep curtsy. \"I did not know you were visiting. I'm pleased to see you again.\"\n\n\"That's all right, my dear. It was a last minute decision.\"\n\n\"Go on now, sweetheart. I'll see you again tonight,\" Roger said roughly and watched as Elena curtsied again before walking out the door at a more reasonable pace than she'd entered it. \n\n\"Nice girl,\" Madison commented. \"Perhaps a little rough around the edges.\"\n\n\"You don't need to mince your words, Maddy. She's a wild one. Getting her wedded is going to be a chore.\"\n\nMadison clucked her tongue. \"Don't worry, Roger. She's a nice girl. I'm sure suitors will be knocking on your door soon enough.\"\n\n\"I hope 'soon' is within another two years, or she'll be a spinster for the rest of her life.\"\n\nMadison shuddered on the inside. There really was nothing worse than being a spinster in society's eyes. \n\nAs Roger talked about the antics he had to put up with from his daughter, an idea began to form in Madison's mind. Roger was worried about his daughter never marrying, and Madison was worried about her son marrying the wrong girl. Something began to click in her mind, and before she knew it, she was telling Roger of it. It would solve both their problems, she told him. And if executed properly, it might succeed. \n\nRoger seemed to be in agreement with the plan; in fact, he thought it a brilliant idea. They spoke of it for hours, until Madison became quite giddy with delight. She could not believe her problems would be solved, and in such a joyous way!\n\nThey dined together for supper before she returned to the Shackleton manor, promising to send him the parchment as soon as she could. They had a plan that would bring her son home for good and free him from the clutches of the blasted island girl. Madison hoped dearly it would work.\n\n*\n\nRae slipped into the house and into Meera's room without a sound. The house was quiet around her. Apparently, the noise the couple was making upstairs didn't trickle down to the first floor. \n\nShe shut the door to Meera's bedroom quietly and leaned on it for a second. The moonlight reflected Meera's pliant form on the bed, making her hair glow like tangled moonlight. Rae traced the sleeping girl's features with her eyes, committing each one to memory even though she knew she'd never forget anything of the body that had trembled so sweetly in her arms on many occasions. \n\nShe walked over to the narrow bed and knelt by it, stifling the emotions that rose within her when the scent of her lover drifted from the sheets. At that moment, everything in Rae told her not to go, not to leave this perfect woman and this perfect island, but she knew she needed to. She'd suffocate if she was ever tied down by anyone or anything, and she'd only end up hurting Meera more if she stayed longer but left anyway. \n\nLeaning forward, she pressed a soft kiss to Meera's cheek, the last she'd allow herself. She didn't count on Meera's soft eyes blinking open and focusing blearily on the kneeling form by her bed. \n\n\"Rae?\" Her voice was wary and soft, as though she assumed Rae to be a dream that would wash away if her voice was too loud.\n\nRae cleared her throat and reached out to push Meera's curls back. \"Hi, sexy,\" she said, her voice equally raspy. \"How're you doing?\"\n\nMeera sat up, her sheet falling about her. She was wearing a sari because the nights tended to be chilly. \"Wha- what are you doing here? Where have you been?\"\n\n\"Around. I just wanted to see you tonight.\"\n\nShe didn't know how it had happened, but Rae found Meera's arms wrapped around her neck, her body pressed so close that Rae could feel her heartbeat. Meera held on to her lover like she wouldn't let her go again. \n\n\"Rae, never leave me again. I love you. I love you so much.\"\n\nRae froze, Meera's words slicing through her heart and cleaving it in two. No, no, no, no! \n\nSensing Rae's stillness, Meera pulled away far enough to take in the expression on Rae's face. When she did, however, Meera pulled away from Rae completely. She scooted backward slowly, warily. \n\n\"It's today, isn't it? You're leaving today.\"\n\nIt wasn't a question, it was a statement. Rae paused a long moment before nodding. \n\nMeera turned away, slinging her legs over the other side of the bed. She sat there for a long, long while, pondering her stupidity. Then she said, \"Leave, please.\"\n\nHeeding her words, Rae rose and walked slowly to the door. Her hands were tucked in her pockets so that Meera wouldn't see how badly saying goodbye was affecting her. Before she opened the door, Rae looked back at the small woman on the bed, head bowed, shoulders shaking, and knew she'd be leaving her heart behind. \n\n\"Goodbye,\" she whispered, and then, she was gone. \n\n*\n\nRae didn't leave the house. Instead, she walked through the kitchen, into the dining area and headed up the stairs to the room she'd seen the couple in. She knocked on the door a few times and plastered a devil-may-care smile over her pain before entering.\n\nJay was seated on the bed, his fingers reaching for the candles on the bedside table. Rae's eyes had long adjusted to the darkness, and she walked easily to the bed and sat on the end of it. \n\nThe candle came to life and lit the room.\n\n\"Hello, big brother,\" Rae said around a smile. The look on Jay's face was priceless. He blinked several times, opened his mouth, and then began the blinking routine again. The woman beside him stirred and her eyelids flickered. \n\n\"Catherine? What \u2013 how \u2013 what the \u2013 when did you even \u2013 what?!\" It was a perverse satisfaction she received from seeing the look of disbelief on Jay's face. His hair was tousled, and when he shook his head to dislodge the image of her sitting at the edge of his bed, the locks entangled themselves even more. By this time, the woman, too, had awakened and pulled the edge of the sheet over herself to cover her body. Though, truthfully, she didn't have to. Rae didn't feel the interest in any woman anymore. \n\n\"It's nice to see you too, Jay,\" she said, crossing her legs beneath her on the bed. \"You too, miss. God, it smells in here.\"\n\n\"How \u2013 what the devil are you doing here?\"\n\n\"I thought I might pay you a visit.\"\n\nHer answer perplexed him. She could see it in the way his jawline tightened. It was a trait they'd both inherited from their father. \n\nShe watched him take a deep breath to collect himself. \n\n\"Catherine, could you step outside for a minute and let me change into something more appropriate for conversation?\"\n\nRae shook her head. \"I wasn't planning to stay long. And besides,\" she jerked her thumb toward the window. \"I've seen enough of you both not to blush at the thought of seeing what you've got under the sheet.\"\n\nHer brother turned completely scarlet. Rae cursed herself for not having brought her paints to capture that image. The blush under that tan was an interesting contrast. Also, she didn't think she could ever make her brother blush that much again in her life. \n\nThe dark woman sidled closer to Jay as though she was seeking comfort and protection from the strange person in their bedroom. Rae's eyebrows rose when Jay's arm curled protectively over his bedmate. \n\n\"In all seriousness Catherine, how did you even get here?\"\n\n\"I took a ship.\"\n\n\"From London?\"\n\n\"From Egypt.\"\n\n\"Egypt?!\" \n\n\"Yes. It's a beautiful place to visit.\"\n\n\"What business have you got in Egypt? And where's Ruby?\"\n\n\"Mother? Oh, she's at home.\"\n\n\" 'Home' being somewhere on the island? Perhaps a hotel?\"\n\n\"No,\" she said slowly. \"Home being London.\"\n\nJay ran a hand over his face. Rae felt almost gleeful at the stress and confusion she was causing him. \n\n\"Catherine, I'll speak to you in the sitting room downstairs. Give me a few minutes.\"\n\nRae stood, straightening her clothes. \"That's all right. You should go back to sleep. I just wanted to say goodbye before I left.\"\n\n\"Goodbye? Where are you going?\"\n\nShe shrugged. \"Maybe one of the French colonies. I'm not sure yet.\"\n\n\"By yourself?!\"\n\n\"I've come this far.\"\n\n\"You're a young girl, for god's sake! You can't be traipsing around the world without a chaperone.\"\n\nShe crossed her arms over her chest. \"Oh, really? I've been doing it for the past six months.\"\n\nHis expressions made her direly wish for her paints. \"Does Ruby know?\"\n\n\"No, and I don't intend to tell her.\"\n\n\"God, Catherine. What if something were to happen to you?\"\n\n\"Nothing has so far.\"\n\n\"Don't speak like a child. You know damn well the kind of trouble you can get into.\"\n\n\"Rape? Murder? Only if they know I'm a woman.\"\n\nJay looked down at her attire. A thin sweater and trousers. In truth, she didn't look like much of a woman at all. How was that possible? What had happened to her breasts? \n\n\"Catherine, would you please just wait for me in the sitting room-.\"\n\n\"I have to go now. I just wanted to speak with you before I left since we were on the same island. I'll see you in London come September.\" \n\n\"Catherine, it's dangerous -.\"\n\n\"I'll send you a letter once a month to assure you I'm still alive.\" She turned to the woman who was still staring unblinkingly at her. \"Are you Anita?\"\n\nThe dark woman nodded woodenly. Rae let out a little laugh, placing her hands on her hips. God, she should have guessed. \n\n\"Don't let Meera know about this,\" she indicated their embrace. \"She'd be crushed.\"\n\n\"Meera? Do you know my sister?\"\n\nHow was she to answer that? Intimately, was on the tip of her tongue. \"Yes. We're friends.\" \n\nShe turned back to Jay. \"I'll see you at home.\"\n\nJay didn't get the chance to get in another word because Catherine disappeared, blending into the shadows of the night. \n\nHe let out several curses that made Anita flinch. She was still reeling from the encounter, and the mention of Meera, and her being naked in front of Jay's sister, and having been seen making love pressed against the window... \n\nJay rolled out of bed and pulled on articles on clothing in haste. Anita did the same. She was embarrassed, dreadfully so. \n\n\"I'm going after her,\" Jay said, pulling on a sweater. \n\n\"I have to check on Meera,\" Anita murmured under her breath. \n\nJay pulled her to him and gave her a fierce kiss, cupping her face in his hands. \n\n\"I'll be back as soon as I can.\"\n\nShe nodded and he jogged out of the room, hoping to catch Catherine before she boarded a ship. The girl needed to understand the danger she was in! Running around the world like it was a game! If something happened to her, Jay would never be able to live with himself. \n\nBack in the room, Anita sat on the bed, covering her face with her hands. Her heart beat wildly in her chest and tears rimmed her eyes. She felt panic fill her body. Gods, what was she doing with her life? \n\n*\n\nDon't forget to vote & comment! Thanks a lot!\n\nMuch love!"
    ],
    "authorname": "KillerRomance",
    "tags": [],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/by-the-bay-ch-07"
}