{
    "title": "Women's Studies Ch. 03",
    "pages": [
        "During the drive back to my dorm, my new home, I couldn't help but smile every time I looked down at the small note in my lap.\n\n'If it feels good, do it.'\n\n June 2013\n\nWritten in my sister's cute, familiar hand, it reminded me of how far I had come since she had first told me those words. It was after my first night as Lexi, and I was confused, and a little scared and unsure about how exactly I had let myself get into this situation. Shortly after that I had lost my virginity to her, a beautiful goddess of sexuality and violence. That last part wasn't a bad thing.\n\nIt also reminded me not to forget to live my life. It rang in my ears like a battle cry for the unsure and afraid, the shy and the outcast. It was a reminder of when my life truly began and who had shown me the way.\n\nI arrived back at my dorm just after noon, just in time to make my first walk of shame. I looked like a mess. My hair was doing its own thing in different directions, my makeup and eye shadow smeared irreparably, and my lipstick was a joke. I really should have just stripped it all off this morning, but in trying to fix it I had wasted the time available to do so.\n\nI felt like I might have just made a reputation for myself as I noticed that more students had arrived to move in the day before classes started. There was no shortage of people to see my walk. I got a few snotty looks, but mostly they were the looks of women who had been there before, and found it amusing to not be the one in my shoes for a change.\n\nReaching my dorm unit, I received a nice little round of applause from Kennedy, Skylar and a couple other girls. I gave them a wave, a blush, and a bow. I figured that this wouldn't be the last time that something like this happened and I might as well handle it with a little grace. It might have been a bit of my old guy persona coming to my rescue, but I felt a little proud to have my peers know of my sexual conquest.\n\nEven with that small measure of pride, embarrassment was still pouring through and I made a hasty withdrawal to my room. It was blessedly empty, and I started to gather my stuff to take a shower. Abigail must have been out. Did she have a late night as well? I thought. Hearing the door, I called out \"Did you have a good night, Abigail?\"\n\n\"Not as good as you I'm sure,\" That was not Abigail. I spun quickly, hoping to put a face to that slightly familiar voice. It was Kennedy.\n\n\"Oh, yeah...I kind of got carried away last night, didn't I?\" I said, hoping she would take it as an admission of a bi curious or lesbian romp.\n\n\"I know! Miss June. I'm so jealous!\" she said, sending a shock through my system. \"Yeah, it took me a few to put it together.\"\n\nAfter a rather long pause where I stood stunned and speechless, I open my mouth to begin damage control ASAP.\n\n\"I know who you are too...Alex,\" Kennedy continued before I could even begin lying my ass off.\n\nHave you ever had a situation that seemed completely under control, and within ten seconds it disintegrated into a cluster-fuck, sliding down hill at an increasingly rapid pace? Well, I was there. I felt like I was trapped inside my mind watching things fall apart, all the while I was mentally slamming myself into the walls inside my head, trying to escape, to get my body to move, anything.\n\nAfter what felt like an eternity of standing there like a deer in headlights, I was finally able to move again. Instinct took over, and I began quickly packing my shit to get out of town. I sure as hell couldn't go home, my mom was sure to find out about this, and she would be just thrilled. A daughter that became a porn star, and a son that became a daughter...Yeah, she was going to love this. But where was I going to go? I was in full blown panic mode. Get your shit into the car first and then figure it out on the move, idiot.\n\nAll this work for nothing it seemed. All this preparation and some lesbian porn-addict outs me because she recognized my sister. No, this was not for nothing. I thought, thinking about all of the amazing things that seemed to start happening the moment I had become Lexi. Maybe I could go to California, I hear it's nice there. My mind was like a meth head, set to eleven and getting nowhere.\n\nIt took me a few seconds to realize that Kennedy was trying to talk to me. \"Lexi...Lexi...FOR FUCKS SAKE, LEXI!\"\n\nTurning from stuffing my shit into bags, \"What?\" I asked, unable to keep an edge of panic from my voice.\n\n\"What are you doing?\" she asked.\n\n\"Getting the fuck out of here!\" I said. \"What does it look like?\"\n\n\"What? Why?\" she asked, her voice oddly tinged with a ring of confusion.\n\n\"Let's see. You know about me. This is an all-girls school. I'm trying to beat the cops or reporters out of here,\" I said. \"Take your pick.\"\n\n\"I didn't tell anyone,\" she said quietly. \"I'm not going to.\"\n\n\"Why?\" I asked, caught completely off guard.\n\n\"I'm not really sure,\" she said honestly. \"I guess you just seem pretty cool. Besides, from the bruises Audrey left on you I really don't think it would be wise to piss her off,\" she said gesturing to the bite marks on my shoulder. \"If she did that to someone she likes, I'd hate to see what she would do to an enemy.\"\n\nI stopped my packing and stared at her for a while. This was a surprising turn of events. I didn't know if I could trust her. A big part of me really wanted to. I had worked so hard for this, and I didn't want it to end so soon after it started. During my quiet deliberation, Abigail came in and helped to decide matters.\n\n\"Did you have a good ni...What happened to your stuff?\" Abigail asked looking from me to Kennedy.\n\n\"The silly girl forgot to pack her vibrator,\" Kennedy said giving me a wink. \"It's going to be one long year without it,\" she chimed.\n\nI'm not sure if Abigail bought it, but she gave a shrug and went about her business. Kennedy gave me another long look before saying, \"You should clean yourself up and meet me at Danny's Fish and Chips.\" She looked at me for another moment, and then gave a quick satisfied nod before leaving.\n\nWell maybe there was hope. She could have ruined me right there, and she even went out of her way to cover for me. Catching a look at myself in my small stand mirror, I remembered what a mess I looked like. I grabbed a change of clothes, a towel, and my toiletry bag. I needed a shower.\n\nThe shower room was rather large. Every surface was covered in sea foam green tile and there was a large open area in the middle with shower heads lined in rows. Two girls were standing in the open space completely naked, having a conversation together as they lathered soap over their naked bodies. I was getting ready to panic before I noticed that the outer edge of the room was lined with shower stalls for privacy. Thank God. My back up plan had been to join a gym and go there as Alex every night to use their showers before coming back to the dorms. It would have been inconvenient, but it would have been safe.\n\nI picked a stall out of the way, making sure to lock the door when I was inside. I set my stuff on a shelf out of the way of the water and got to work. I was completely methodical, and masturbating didn't even cross my mind. I quickly finished, and after drying I slipped on my underwear and a casual white summer dress. Making sure everything was where it should be, I stepped out and went back to my room.\n\nThere were people roaming the halls, and no one was screaming or pointing at me, so it seemed as if Kennedy had been true to her word. Back in my room, I made quick work of my makeup and hair before heading out. I needed to figure this out with Kennedy, and I didn't want her to think that I wasn't going to show.\n\n*** *** ***\n\nI made good time and found Kennedy in a booth in the back. Most of the tables and booths were empty, but that would definitely change in an hour or so for the dinner rush. I slid into the booth across from her and waited for her to start.\n\n\"So,\" she said.\n\n\"So,\" I replied.\n\n\"I really didn't mean to freak you out when I told you that I knew...you know,\" she said looking around. \"I just got carried away for some reason. Maybe it was because I had met someone famous that I actually wanted to meet...\" she trailed off. \"I really could have handled that better.\"\n\n\"How did you find out?\" I asked. I thought I had been so careful, and if I screwed up somehow, I needed to know.\n\n\"Well I knew who Audrey was. And you called her Dreya, which I'm assuming she picked because it has almost the exact letters as her real name,\" she began. \"Then I found a Dreya Allen on Facebook that had a picture of her and you...but as a guy, and she had tagged you in the picture.\"\n\nMy Facebook page. I got made by a simple Facebook search. \"Looks like I need to delete that,\" I said. \"Who are you, Nancy Drew?\"\n\n\"No,\" she said laughed. \"I've spent a lot of time trying to find someone and I've learned some things.\"\n\n\"Who were you trying to find?\" I asked, curious.\n\n\"My dad,\" she said bluntly. \"All I know is that he got my mom pregnant in the summer of '98, he's pretty wealthy, and potentially an important person.\"\n\n\"Oh...um...wow!\" I said, not knowing exactly how to respond to that.\n\n\"He set up a blind trust to support my mom and I until I turned 18. Child support, I guess,\" she said. \"And after I finish college, I get access to a two million dollar trust fund.\"\n\n\"Wow, that's a lot of money,\" I said\n\n\"Yeah. If it wasn't, I wouldn't even be here. I got accepted to USC,\" she said. \"I could be on a beach right now, but I had to come here, or I wouldn't get the money.\"\n\n\"Why here though?\" I asked.\n\n\"I don't know, but I'm going to find out,\" she said, sounding determined. \"I hit a dead end trying to find my dad a while ago, but if he is willing to leverage me here with two million dollars, there has to be a reason. He was really careful hiding his tracks everywhere else, so this is the last thing I have.\"\n\n\"Can't you just ask your mom?\" I asked.\n\n\"Been there, tried that,\" she said. \"She's honed her avoidance skills into an art form.\"\n\n\"Well if you need some help, let me know,\" I offered. \"I don't know much about finding lost parents, but I'm sure I could do something.\"\n\n\"Thanks,\" Kennedy said.\n\nJust then a server came by and took our orders. We made some casual small talk while we waited for our food and drinks, not wanting to be interrupted or overheard. It was mostly about Mayweather and our dormmates. When our food arrived, we immediately dug in. While we ate, the silence stretched out and I found myself realizing that I had completely forgotten why I had come here. I had just become so swept up in her problems that mine seemed to have disappeared.\n\n\"So, when did you start dressing like this?\" Kennedy asked, taking a sip of her drink.\n\n\"Two weeks ago,\" I said, deciding to go with honesty.\n\n\"Wow! Only two weeks?\" she said surprised. \"You pull it off so well. Wait, how did you even get accepted here?\"\n\n\"Well, that's a long story,\" I said. I proceeded to tell her about the mix up with my name, and how Audrey and I were blindsided after we had arrived. I told her everything. I figured she already knew about all of the bad parts, me being a guy, and also having sex with my own sister. I even told her how I felt as Lexi, how more complete I was. She giggled, and sighed, and made all the other appropriate responses during my recital of the last couple weeks. It was really nice to share this with someone, especially someone who didn't seem to be judging me.\n\n\"So, I started out pretending to be Lexi just to go to college, and now I feel like I actually am Lexi, if that makes any sense,\" I finished. \"When I thought you were going to out me, I was going to run. I didn't know where, but in every scenario, in every destination, I saw myself as Lexi.\"\n\nIt felt strange admitting that out loud, especially to a stranger. I wasn't even sure if the words were true until they were out of my mouth. The moment I said it, I felt a weight lift, and a flutter in my chest. I guess I really was Lexi.\n\n\"Wow, that sounds like something out of a story,\" she said, clearly impressed with my little adventure.\n\n\"So, I've gotta ask, what's your affiliation? What team do you play for?\" Kennedy asked, smiling. Just like that, it seemed like we were just two girls talking sex stuff.\n\n\"Well, you may have guessed from the little incident behind the club, but I play for the girls' team,\" I said, blushing a little. \"It's weird right? I'm a guy dressed like a girl who wants to sleep with women.\"\n\n\"Yeah,\" Kennedy chuckled. \"It kind of reminds me of something you would see on Jerry Springer, Man gets sex change to become lesbian.\"\n\n\"Except without the sex change part,\" I clarified. \"I couldn't do that to my star player.\"\n\n\"So, what team are you playing for?\" I asked figuring turnabout was fair.\n\n\"Both, I guess. I'm leaning towards women right now. I had a couple bad experiences with guys, both in and out of the bedroom,\" she answered, completely comfortable with the conversation. \"Girls do lack a little something extra, but they never leave the job unfinished.\"\n\nIs she flirting with me? I thought. She had her head cocked to the side with a little grin curling her lips, and her steel-like gray eyes seemed to penetrate deep into my mind. My, but she was beautiful. Her thick mane of long auburn-red hair framed her model-esc face, with a perfect but wild look that must have taken no small amount of time to produce. I couldn't help but follow her hair down to her impressive cleavage. Her black spaghetti strap top had her breasts in a strangle hold, pressing them together for my viewing pleasure. Speaking of pleasure, she was provoking a pleasant response in me.\n\n\"So how exactly did the whole thing with your sister start?\" Kennedy asked, interrupting my appraisal of her.\n\n\"I think it had a lot to do with me becoming Lexi,\" I explained. \"I think there was some serious identity confusion for the both of us when I started playing the role. That, and the fact that I've had an unhealthy crush on her even before she started doing porn,\" I admitted. \"That part of her life just made it easier to perv on her,\" I laughed. \"It was nothing I ever would have acted on before, but as Lexi it just made it easier,\" I added. Now I was thinking about my hot sister and Kennedy, and I started to squirm in my seat, feeling the on-setting discomfort brought on by my impending erection.\n\n\"I don't have any siblings myself, so I don't have any experience in that area, but it is a little weird to me,\" Kennedy said carefully. \"But if she was my sister, I wouldn't be able to stop myself either.\"\n\n\"She is pretty amazing, right?\" I said, feeling relieved that, despite my whole fucked up situation, she still didn't see me as some sort of freak.\n\n\"I can't tell you how many times I've gotten off to her,\" Kennedy said. \"One of my boyfriends had her Playboy issue tucked in between his mattress, and one day when he left me alone in his room to go help his dad with something, I found it. I was snooping, and when I started looking through it, I found her spread and I was in love. I didn't exactly have a bi side before that, but she made me a believer,\" Kennedy said, blushing as she told me all about her long-time crush on my sister. \"So, I stole the magazine, and put it in my bag. I frigged myself silly to her all through high school. I still have the magazine too. It's up in my room actually.\"\n\nThe faces and little sounds she made while she described her one-sided relationship with my sister were completely erotic. She clearly had some fantastic memories locked away in her head. Hearing her talk about pleasuring herself brought my pain to a new level and I shifted myself to the side, easing my erection from its tucked position. I instantly solidified to full rigidity.\n\nI placed my hand over my dress to prevent my cock from tenting it, and it took great effort not to grasp or rub it. The soft fabric of my dress was torture enough, and the last thing I wanted was to ruin my dress or end up spraying Kennedy underneath the table. Friends don't cum on friends in public. Then thinking back to some of my times with Audrey I amended, well at least not without warning.\n\n\"Well, the next time she comes to visit I'll have her sign it for you,\" I said, like a mother teasing her daughter about a crush.\n\n\"Thanks,\" she said looking down and blushing like fire. She definitely caught my little jibe at her.\n\nWith our food and drinks done, Kennedy started making ready to leave. \"We should probably head back. I still have a lot of stuff to unpack,\" she said, sliding out of the booth.\n\nI couldn't move. I was glued to that seat, and nothing could move me. I still had a raging erection from all of those visuals, courtesy of Kennedy. Even If I tucked it into my waist band it would leave a noticeable lump in my dress. Unlike my red one, this one didn't flair out at the waist, leaving zero room for hiding things such as erect penises.\n\n\"Are you coming?\" Kennedy said, pausing.\n\n\"I can't,\" I said, avoiding her eyes.\n\n\"What's wrong?\" she asked. \"I promised that I wouldn't tell anyone, and I won't.\"\n\n\"Uh...it's not that...It's...I've got a little problem,\" I finished, fully embarrassed now.\n\n\"What...OH!\" she said understanding. \"Here, switch me purses,\" She handed me her large black bag. \"Do what you can, and just hold that over yourself until we get out of here.\"\n\nI accepted her bag gratefully and set it on my lap. Discreetly fishing underneath my dress, I secured my aching cock into my waist band, angling it to the side. Making sure the purse was completely covering the evidence of my perversion, I slid out of the booth and followed Kennedy outside. She seemed to be taking extra care in standing just in front of me for a little extra security. Once outside she led me to her sapphire-blue BMW M2 and had me get in.\n\n\"We can sit here and relax while we wait for your situation to resolve itself,\" Kennedy said, turning on the radio.\n\nIt was a little cute how we were both avoiding saying that I had a magnificent erection hidden underneath my dress. We had been listening to music for a while and I hadn't put a dent in my problem.\n\n\"Any progress?\" Kennedy asked.\n\n\"No, it's not going anywhere,\" I said, laughing at how funny our situation was. I missed Audrey; we would have been well on our way to fixing this problem already.\n\n\"Do you think you need to maybe...you know?\" she asked, making an awkward jerking motion.\n\n\"Um...no, I think it'll be all right,\" I said blushing, not believing a word of what I had said.\n\n\"Are you sure? Because I don't mind,\" Kennedy asserted, staring straight out the front windshield.\n\n\"Is this your way of asking if I'll masturbate for you?\" I asked, trying to lighten the mood a little.\n\n\"Maybe,\" Kennedy said, turning to look at me. She had an almost indiscernible smile on her face as she stared me dead in the eyes. She held my gaze for a few seconds before her eyes dropped down to where my erection was hidden.\n\nThis just took a turn into a direction out of left field. I had meant it as a joke, but she seemed serious. She had a look in her eyes that reminded me of my sister when she was working herself up into a frenzy.\n\nHere goes, I thought. Keeping my eyes on Kennedy, I spread my legs and gripped the hem of my dress. Slowly bunching it up, I worked it up towards my waist. Kennedy's lips slowly parted as I worked the dress up my legs, and right before I reached my panties, I saw her lean forward a hair in anticipation. I knew she wasn't joking with me now. She really wanted to see me.\n\nFinally revealing my soft-pink lace panties, she could see my cock rebelling against the fabric. I still hadn't taken my eyes off of her, but I knew what she was seeing, my erection not even fully contained by the flimsy material, all seven inches of veiny, throbbing meat. I continued to pull up my dress further showing off my smooth and toned tummy.",
        "Holding my dress up with one hand, I grasped my cock with the other. It was warm to the touch, and I gave it a gentle squeeze, letting a small moan slip past my lips. Pulling my shaft free of my panties, I gripped it tight and began to make long slow strokes.\n\nKennedy seemed to be really into it. Once I had freed myself, she had turned in her seat to face me completely. She was leaning against her door, with her knees bent up on the seat, watching me from between her splayed legs. Her breathing was audible now and it made it even hotter. I had never done this in front of anyone before, and gauging by her response so far, I was doing a good job.\n\nI continued to fist myself in a slow corkscrew motion that I favored. I wasn't close to coming yet but that was no longer the point. This had become something more. It felt like I was on stage, auditioning for a role that I knew nothing about.\n\nKennedy broke her daze and noticed me watching her. Her smile left a little sparkle in her eyes. Leaning forward, she reached out towards me. I was hoping she would help me along, and it looked as if she would, until she grabbed the hand I had around my cock, instead of my cock itself. I watched confused as she leaned over my palm and produced a large amount of spit into my hand. Giving me a little wink, she leaned back into her previous position.\n\nWith her warm spit in my hand, I resumed my stroking using her spit as lubricant. It was slick and smooth, letting my hand glide easily around my member and it felt unbelievable. I've used lube before, but this was different, better. I had a feeling it was because I knew it was her spit, freely given, with the sole purpose of enhancing my pleasure.\n\nKennedy's hand slipped down to her jean shorts, rubbing herself through the thick fabric. This was just the push I needed. I felt that first far off shock, like a small warm pulse in my loins. If I kept going like this, I would lose it.\n\nKennedy must have seen something change in my movements. \"Cum,\" she whispered. \"Cum for me.\"\n\nHeeding her assent, I threw myself into my purpose. I gripped a little tighter, stroked a little faster, and my hips began to buck slightly. My breathing became labored with my effort, and my abs began to spasm involuntarily. That warning of bliss continued to rise and I was really working my hips. Kennedy's eyes widened, and she leaned forward slightly in anticipation for the fireworks.\n\nThis was it. I felt it rising. Like dozens of electrical shocks surging through my loins, it screamed my imminent orgasm. Letting out cute little moans, I strained to keep my eyes on her as I fell into ecstasy. I felt my thick ropes of cum surge through me, blasting out like the Fourth of July. The open mouth and wide-eyed smile from Kennedy, as she watched, sent a whole new wave of pleasure through me. My abs rocked and clenched throughout my finale, and when it was over, we both sat there trying to catch our breath.\n\n\"Wow!\" Kennedy said. That one word, shattering the silence, brought me back to reality. I finally tore my eyes from her to survey the fruits of my labor. Her expensive leather dashboard was plastered with my seed, and more was dripping down to the floor mat. I had escaped almost unscathed with the exception of a few translucent drops on my smooth thigh and what was left to dribble from the end of my cock.\n\n\"I'm sorry about your dashboard,\" I said sheepishly.\n\n\"To hell with the dashboard!\" she said. \"That was incredible!\"\n\nShe leaned over me and opened her glove box, grabbing some tissues. Handing them to me, she sat back into her seat. As I began to clean up my mess, I noticed Kennedy discreetly raising her hand to her mouth, just as she turned her head to look out of the window on her side. Did she just...? I thought. Looking back at the dashboard, I saw one of the larger globs of cum near the glove box was smeared. She just tasted my cum!  That was amazingly hot to me. She had gone out of her way just to get a taste of me, but was just shy enough to not want me to know about it.\n\nI cleaned up myself, and did what I could for the car. Some of it had seeped into the crevices and would require some detail work to fully clean. Also, there was a thick aroma of semen and female arousal permeating the air that I thought would linger for quite a while.\n\n\"Thanks for...well...you know,\" I said, the awkwardness of having just masturbated in front of someone settling in.\n\n\"No problem,\" she said smiling at her steering wheel. \"See you back at the dorm?\"\n\n\"Yeah,\" I said, pulling myself together. I quickly tucked my deflated member back where it belonged and stepped out of her car.\n\n\"And Lexi,\" she said as I was getting ready to close the door. \"Thanks for the show.\"\n\nThe drive back to my dorm left me feeling pretty good. I had left wondering if I would ever be able to return, and after what happened in Kennedy's car, and the conversation we had before that, it seemed like I was safe. Well as safe as I could be.\n\nIn the parking lot by my dorm building I called Audrey. I figured inside my car and alone would be the safest place to have an honest conversation without anyone overhearing.\n\n\"You've reached Audrey. I can't get to my phone right now but leave me a message!\" Her voicemail. She was probably still on the plane. I had just dropped her off a couple hours ago, but it felt like ages with all that had happened since then.\n\n\"Hey sis. Kennedy found out who you are and from that, who I am,\" I spoke to her machine. \"She's cool about it and said that she would keep my secret. I have a feeling she's doing it more for you than for me. That girl has a serious hardon for you! Anyway, you need to take down any pictures or references to me on your Facebook page. Basically, burn me from your electronic existence. I'm going to take my entire page down. I'll make a new one for Lexi that has no contact with Alex's life. Call me when you get settled in New York. Love you!\" I finished in a rush, to beat the buzzer.\n\nI made my way back to my room, keeping to myself. A lot of new people had shown up today and the place was really filling up. With my legs still a little weak, and my mind still bouncing a bunch of thoughts around, all I wanted to do was get to my room and relax.\n\nAbigail was there, on her bed, lying on her stomach reading a magazine while her stereo played classic rock. I had really wanted to be alone, but when she looked up and smiled at me, I changed my mind.\n\n\"Hello Abigail,\" I said smiling back. \"Sorry I ditched you last night.\"\n\n\"Oh, don't worry. The other girls and I got along just fine,\" she said easing my guilt. \"To be honest, I had so much to drink that I hadn't noticed until we were leaving.\"\n\nThe way she spoke, you could tell that she was from money. Not that she was snotty, or that she acted like she was better than everyone else. She just had a smooth properness about her. She also had a strong confidence that made people feel at ease around her. Well, most of the time. For some reason she worried that people wouldn't like her because she came from money.\n\n\"Is your friend still here?\" she asked casually.\n\n\"No, she had to catch a flight out of town earlier,\" I said as I sat on my bed and slipped off my shoes. \"She couldn't take any more time off of work, and with classes starting tomorrow we wouldn't have much time to spend together anyway.\"\n\n\"That's a shame,\" Abigail said, rolling onto her back stretching out on her bed. \"How was the rest of your evening?\"\n\n\"We decided to go back to the motel we've been staying at, and called it an early night,\" I said blushing. She had to know I was downplaying it after seeing what I looked like when I got back, but she didn't push it thankfully.\n\n\"So, have you decided on a major?\" I asked to fill the silence.\n\n\"I haven't decided yet,\" she admitted. \"It will either be Art History, or Creative Writing, but my father is making me minor in Business. He is really set on that. It took a long time for him to agree to let me choose my own major. And you?\"\n\n\"I'm here for the Social Sciences department. I figure I will major in Psychology and minor in Sociology. My mom doesn't really care what I study, so long as I go to college,\" I answered.\n\n\"That must be nice,\" Abigail mused. \"This is the first real freedom I've had. In between private boarding schools, and my home life, there were a lot of strict rules and schedules. And now, here I am, essentially on my own. Yes, I live in the dorms with others, but I can finally do what I want,\" she said happily.\n\nI had the feeling that even with her new freedom she wouldn't be going crazy or anything. She seemed like she was just excited to have the opportunity to do whatever she wanted.\n\n\"That sounds kind of rough, growing up like that,\" I observed.\n\n\"No, not really,\" she defended. \"My father believed in hard work and education. He didn't want me to become some idiot layabout, or a wild miscreant, just because of who my father and grandfather were, and what they made of themselves.\"\n\n\"Oh,\" I said. Not sure if she was intentionally being vague or not, I asked gently, \"Who were they? Or are they,\" I amended.\n\n\"My father is George William Lockwood the second. My grandfather was the first,\" she said quietly. \"It's not exactly a secret. You cannot hide very well when you have a last name like mine, but I do try to avoid advertising it,\" she finished.\n\nShe was a Lockwood? I had read about the Lockwood rise in school. It started with bootlegging in the 20's during prohibition, and after the stock market crashed Lockwood Senior made a gamble and invested heavily in General Motors. With the fortune he made from that, he turned around and invested in several aerospace companies. Lockwood Junior had built on that wealth, and if I wasn't mistaken, the Lockwood net worth was in the billions now. And she was a Lockwood... No, she was the Lockwood. If I remembered correctly, she was an only child. Every article or story I read about the Lockwood's neglected to mention her name or that it was a she, only that there was an heir.\n\n\"Wow,\" I said shocked. \"I'm not sure what to say.\"\n\n\"This is why I don't advertise,\" she explained. \"I don't want to be treated like that. Sure, the money is nice, but I want to be known for who I am, not for who my family is. Please try not to treat me differently. Yesterday, it was wonderful. Just being myself and not having people look at me differently. I don't want that to change,\" she said.\n\n\"Well you're blind if you think people aren't staring,\" I said getting up to sit next to her on her bed. \"Whether they know who you are or not, you're beautiful, and everyone notices.\"\n\n\"I can understand wanting to be yourself, and not have others judge you, or treat you differently,\" I said putting my arm around her. \"Just be yourself and people will catch on,\" I told her. \"And if they mess with you, whistle really loud and I'll come line them up and kick their asses,\" I laughed.\n\nShe pulled me in for a tight hug and gave me a small kiss on the cheek. \"We really are friends, aren't we?\n\n\"That we are, Abigail.\"\n\n*** *** ***\n\nSleep came easy that night. After pizza with all the girls from our unit and some get-to-know-you games, I headed off to bed, tuckered out. My morning wood was astounding, but thankfully it was pressed flat against my stomach thanks to some preparation and tight panties. I slipped out of bed before Abigail woke, and grabbed my shower stuff. Everything seemed to be working like Audrey and I had planned. I could do this. No one would know about my secret.\n\n\"Hey Lexi,\" Kennedy said giving me a small fright. Well, almost no one would know my secret. She was sipping coffee in her PJ's and eating a cereal bar. \"Getting an early start too?\" she asked.\n\n\"Yeah. I figured I would beat the rush for the showers,\" I said.\n\n\"Sounds like a good plan,\" she said, giving a quick glance down at my crotch. \"Wait for me. I'll grab my stuff,\" she said putting down her coffee.\n\nWe showered in neighboring stalls and talked to each other through the wall. It wasn't as weird as I thought it would be. It was actually quite pleasant. I did feel a little weird, rubbing out my morning wood while we chatted, but I figured she had already seen me doing it yesterday and enjoyed it. After we finished, we dressed and left together. We had just beat the rush, passing many girls in towels and pajamas on our way back to our rooms. After taking my time with breakfast, makeup and my hair, it was about time to leave for my first class.\n\nKennedy, Abigail, and I left together, making our way across the quad. Kennedy and I had the same Gender Studies class, and Abigail had a Business class in the adjacent building. After saying goodbye to Abigail, we made our way to our class and eventually found ourselves in a large room with auditorium style seating.\n\n\"Can anyone tell me the difference between sex and gender?\" Our professor asked.\n\n\"Aren't they the same?\" someone asked from the back.\n\n\"No. This class is the study of different genders. Gender has nothing to do with what genitalia you were born with. Gender is the behavioral, cultural, or psychological traits typically associated with one sex. It's about what one feels, how one acts as well as how they see themselves. In this class we will discuss many different genders as well as the unwritten rules our cultures have against people who diverge from the black and white...\"\n\nAs the class continued, Kennedy eased her hand onto my bare thigh, making gentle strokes on my silky skin. I knew she was playing with me, trying to get a rise out of me, but I kept my mind on the lecture. Despite my effort, I eventually lost our battle of wills and had to move one of my books onto my lap in order to hide my erection. Kennedy however continued stroking my thigh, brushing the hem of my floral sundress. Thankfully she stopped before the class ended, giving me enough time to settle down. Being in the back of the class, I had enough privacy as I fit myself back into my underwear.\n\n\"You really know how to cause a girl problems,\" I told her in a hushed whisper. \"How would you like it if I got you all worked up like that in class?\"\n\n\"I wish you would have,\" she whispered with a smile as she got up.\n\nI swear, this girl might be the end of me, but she did keep things interesting.\n\nThe class was quite good, and to be honest, it felt like she was speaking to me. A lot of what she said fit right in with my situation. I had a complex gender identity; that of a man who feels and dresses feminine and loves women. Sure, it wasn't traditional by society's standards, but from what our professor was saying, there wasn't anything wrong with it.\n\nAs we left class, Kennedy slipped her hand into mine. I didn't want to question it. It felt good, so I went with it. Feeling her delicate hand in mine, I couldn't help but wonder, with all that had already happened between us, what was she after? Was she just playing with me? Was this a one-sided flirtation that she was having fun with? She had said that she wouldn't tell anyone about me, and I was compelled to believe her, but what if during her teasing I made a move on her that she didn't want? Where would that leave us?\n\nPart of me felt like I was walking a fine line with this. For all I looked and acted like a girl, I still had my teenage male hormones to battle with, and this vixen seemed to know exactly how to push my buttons.\n\nThen there was the very small voice that wondered if she was just using me because I was a conveniently located cock that she had all to herself. I ignored that voice. It could talk all it wanted because I didn't have a problem with her using me, if that was what she was after. All I wanted to know was where the balance of power was in this whole mess.\n\n\"Hey you two!\" Abigail said as she joined us. \"Having a nice little walk out?\" she asked noticing our hands.\n\n\"The more the merrier!\" Kennedy said holding her hand out to Abigail.\n\nAbigail sported a blush and a nervous smile as she took Kennedy's hand and walked with us back to our dorm. When Kennedy leaned over and kissed her on the cheek, Abigail blushed even harder than I thought possible, and her neck and shoulders flushed with embarrassment. Though, she did have a coy little smile on her face as she looked away. She was obviously unaccustomed to cavalier and open displays of affection between girls.\n\nOnce back in our dorm, we split up, and Abigail and I set our stuff down in our room. Falling onto her bed, she was all smiles from ear to ear with all of her pearly whites. She was beautiful. I sat on my bed and watched her for a moment before she turned on her side and looked at me.\n\n\"How was your class?\" Abigail asked.\n\n\"It was definitely interesting,\" I told her. I was thinking about the lecture and Kennedy's teasing. \"How was yours?\"\n\n\"It was all right. I'm just excited to be away from home!\" she said happily.\n\nI spent a lot of time talking to Abigail before our next classes. She seemed to want to know everything about how it was for me growing up. It took some mental juggling to make sure that I didn't slip up and mention something I shouldn't. I had to gloss over having a sister completely, and made it seem like Audrey (or Dreya rather) was the daughter of an old family friend. She seemed fascinated by how I described public school and my home life. My mother was a strict and religious person, but she envied how much freedom I'd had. We had definitely grown up with two different childhoods, and it didn't seem as if having a wealthy family had made it any easier for her.\n\nAs we talked, she began to open up more, and I could see this playful side to her aching to come out. Her laughs became louder, and that beautiful smile of hers became something more as we told each other funny stories.\n\nEventually we had to break up our little girl time and head to our next classes. I had a feeling that I had lucked out in the roommate department. Sure, Kennedy would have been fun as well, but that could turn from a blessing into a disaster if I could ever figure out what Kennedy was after.\n\nI attended the rest of my classes, doing my best to absorb as much as I could. These professors didn't fuck around. Not even a hello, how are you, just down to business from the first breath. The lessons weren't hard, it was just difficult to keep up with them while I was taking notes. I noticed quite a few girls with handheld recorders or using apps on their phones, capturing the entire lesson. It wasn't a bad idea. I would need to look into that.\n\nAlready having papers to write, due later this week, the rest of my day, as well as pretty much everyone else's in the dorm, was dedicated to keeping up with the course load. Mentally exhausted, I fell into bed at 9pm to get some sleep. It already felt like this was going to be a long year.\n\n*** *** ***\n\nI woke up at about 5am, suffering from a mix of dreams about nightmare professors and being naked in class. Normally being naked in public was a common nightmare for people, but with my situation it was just a little more terrifying. Covered in sweat, I crawled out of bed and grabbed my shower stuff. I felt disgusting and I could imagine I smelled the same.\n\n\"Hello again,\" I said running into Kennedy in our common area. \"You aren't stalking me, are you?\" I asked sweetly. \"Because that would be exciting.\"\n\n\"No, but I could get behind that,\" she said, walking next to me to the showers. \"Or you could get behind me,\" she added with a sly flirtatious voice, slipping into the shower room ahead of me.\n\nOnce in the showers, I made my way towards one of the back private shower stalls. I knew Kennedy was having a grand old time screwing with me. It felt like she got off on turning me on; giving me erections in public and such, and then there was the whole thing in her car...",
        "I was having a hard time figuring out this woman. Was she interested in me or am I just satisfying an itch for her? If I say no to an advance of hers, or if I make a move on her without her initiating it, will she get pissed and blow the whistle?\n\nI chose a stall and placed my things on a shelf out of the way. When I turned to close and lock the door I found Kennedy standing there in just her towel.\n\n\"Do you need something?\" I asked, figuring she forgot her shampoo.\n\n\"Just some company,\" she said stepping in with me, closing the door behind her. \"We could conserve some water. This is a desert after all.\"\n\nI didn't say anything. She still had me all off balance since she found out who I was, and I hadn't quite found my footing. She brushed past me, squeezing a little closer than necessary to get to the shower nozzle, slipping her towel off as she passed me.\n\nWith her back to me, my eyes went immediately to her ass. It was firm and sculpted and she had two cute dimples on her lower back that were like magnets to my eyes. I forced myself to look higher and caressed her smooth toned back with my mind.\n\n\"You just gonna stare, or are you going to join me?\" Kennedy said pulling me from my appraisal of her body.\n\nI couldn't help my blushes as I turned around. No need to be embarrassed for looking at her, dick head. She's already seen you wanking your pecker and ruining her upholstery. It's strip time.\n\nI quickly pulled off my pajamas and underwear while I was turned away from her, All the while, I had the sure feeling that she was watching my every move. It must have been my imagination because when I finally turned around, I found Kennedy facing the other way turning on the water. I watched as the water darkened her hair and cascaded down her back, trailing around and between the firm globes of her ass.\n\n\"Come on,\" she said turning to her side, holding her hand out to me.\n\nI stepped closer to her, and under the wide spray of water. We showered in mostly silence. I slowly began to relax under the warm spray, letting the water sooth me, and the heat ease my muscles. It was surprising to be this close to this naked beauty and not have a god like erection, but I was just so relaxed. When she began to wash my back, massaging the body wash into my skin, I couldn't help but let out a small moan brought forth by the pressure from her thumbs. Her hands were delicate, but sure of her purpose, as she took her time kneading the muscles all up and down my back. It felt wonderous.\n\n\"Your turn,\" she said, finally concluding her ministrations and turning away from me.\n\nAs I began to wash her back, I gave her the same treatment, digging my fingers nicely into her muscles. She began to make pleasurable noises from the pressure, and even though I knew it wasn't of a sexual kind, I could find nothing that it sounded like more. I began to let my hands slip further down, feeling the top of her ass before working my way back up along her sides, brushing the edges of her breasts. With all of this contact, my sexual thoughts brought a rise out of me that I had held back thus far, leaving my hardened cock to rest gently on the cleft of her ass.\n\nShe felt me. I knew she had, but she didn't move away. Hoping that this was her assent, I continued to rub her body, pulling her closer to me and moving my hands over and around to her stomach, careful to only allow a brush of my fingers to the edge of her breast. As I caressed her smooth skin, she began to make almost indiscernible movements, rocking her tight bottom against my cock.\n\nThe small motions grew rapidly, and unable to take the teasing, she took my hands in hers and pressed them to her breasts. I squeezed her soft flesh with her hands atop mine, encouraging me, and I pinched her swollen nipples. Holding her tightly to my body, my fake breasts were pressed firmly to her back with my own nipples digging into her.\n\nPulling my hands from her breasts she turned towards me and pulled me into an embrace, mashing her lips to mine, her tongue forceful and pleading. Pressed together like this, I could feel the fire within her radiating against my cock. Moments passed that felt like hours. Lost in our embrace, I was jolted to feel her fingers wrap around my cock and begin to lightly stroke me. With a small amount of timidity, I trailed my hand down her taught tummy and let my finger brush against her delicately trimmed pubis. Feeling my touch, Kennedy lifted slightly onto her toes, moving my hand further down.\n\nWith that movement I knew this was more than the one-sided affair that I had feared. I stroked down, past her soft hair, and slid my finger over her swollen clit and through her wet lips, eliciting a pleasurable gasp.\n\nAs I explored Kennedy's sex, she increased her grip and speed, expressing her need, demanding me to satisfy her in return for the pleasure she was inflicting on me. Her breath came in short gasps, and I became lightheaded breathing in her exhale. It felt like a race to finish before we passed out. My hand was soaked in her juices and she slowly fucked herself against my hand.\n\nI felt like I was losing our contest of wills. While Kennedy's pleasure was surely rising, my release was rapidly approaching. I tried to quicken my pace, fingering her wet pussy while using the palm of my hand to attack her clit. Gasping for breath, I couldn't hold it back any longer. In short, gasping feminine moans, I felt a wave wash over me as I blasted onto her stomach, painting her beautiful skin with a masterpiece of lust and satisfaction.\n\nKennedy continued to stroke me through my orgasm, torturing me with the intense pleasure. She began to rock into my hand with purpose and the vibrations from her lips moaning against mine grew more urgent.\n\n\"Oh fuck. So close. Oh Lexi, make me cum,\" she urged.\n\nNot changing my motions, I intensified my pressure while she vigorously fucked herself on me.\n\n\"Fuck, Lexi!\" she moaned loudly, her voice echoing off the walls. \"I'm gonna cum...Just like that!\"\n\nThe sight and feel of her body undulating against mine, coaxing her body to cum for me, was an indescribable beauty. Her voice began to rise in short steady moans, matching the mutual rocking of my hand and her hips.\n\nAh...ah...ah...ah...Ah...Ah...AH...AHHH...AHHHHH!\" Kennedy finished with a scream.\n\nI held her against me, keeping her upright on her unsteady feet. With one hand holding her body, I rested my other atop her over sensitive sex protectively. Once steadied, Kennedy fully embraced me, giving me a soft, slow kiss, finishing with a brush of her tongue over my lips.\n\n\"What is this Kennedy?\" I blurted out.\n\n\"We're friends,\" she said, as if that explained everything. After taking in my confusion she added. \"We're just having some fun, don't think about it too much.\"\n\nShe reminded me of Audrey in a way. Not afraid to go where others might fear to, and not overthinking it when she got there.\n\nWith a last squeeze of my deflated cock, she released me and stepped away to wash my cum from her stomach. After a quick wash she grabbed her towel and made to leave. With a smile and a quick 'thanks', she stepped out completely naked with her towel in her hand.\n\n*** *** ***\n\nMore often than not, Kennedy was there to share a shower with me in the mornings before many of the other girls got around to taking theirs. On a few occasions, we had acquired a small audience that had listened to our symphony of moans and screams. They mostly found it amusing, and we weren't the only ones to take advantage of the showers. On one occasion, we had walked out of our shower stall to find a pair of girls fingering each other silly, who had probably been listening to us only minutes before.\n\nHaving Kennedy around was also a great help. She was glad to lend a hand with things like reapplying my breast forms once a week, or the occasional waxing. As helpful as she was when I needed it, in public she was like pure torture. She loved to ride that dangerous line, teasing me at the most inopportune moments just to screw with me.\n\n\"If you don't stop, I'm going to fuck you right here in class,\" I growled at Kennedy. We were in our Gender Studies class again and she had the front of my dress flipped up while she sat beside me, softly playing with my hard cock. We were the only people in the very back row of the class, and the seats in front of us kept us hidden.\n\n\"Really?\" Kennedy asked gripping my cock tighter. She knew I was bluffing. As much as I wanted to right then, there definitely wasn't enough cover for us to do that.\n\n\"Don't tempt me, you harlot. I'll drag you out of here by your hair and fuck the life out of you in a broom closet if I have too,\" I told her trying and failing to keep my voice serious. Despite all of the fooling around we had done, we had yet to have sex. It had been a couple of weeks since we began showering together, and even with all of the release we had given each other, I still desperately wanted to sleep with her.\n\nKennedy brought my attention back to her with a firm squeeze of my cock. Her small hand felt like torture. I wanted to moan from the pleasure, but I couldn't. She would bring me just close to cumming and then back off, only to start the process over again. Kennedy had been at this for almost twenty minutes and she was having a blast. I had thought about getting her back, but she was wearing a pair of tight jeans that made easy access impossible.\n\nThankfully, I had begun recording all of my class lectures on my phone, because I hadn't caught a word of what our teacher had said since Kennedy began fondling my precious cargo. Right when the lecture had begun, she had her hand up my dress rubbing me through my panties, forcing me to spring free, full and erect.\n\n\"This is such a great lecture,\" Kennedy said to me quietly. \"Don't you agree?\"\n\n\"Damn you to hell woman!\" I spat. I couldn't take this anymore. \"Either stop or let me cum!\" That last came out as more of a plea than I would have liked.\n\n\"Oh, you want to cum?\" she asked, leaning to whisper in my ear. \"I think we can arrange something.\"\n\nWith a quick look around us, Kennedy slipped down her seat and onto the floor. With a wicked smile, she moved in between my legs. She pulled her long hair over her shoulder and then proceeded to slip off my black panties. Eager to help in any way that I could, I eased off my seat and she guided them slowly down my legs and off of my heeled feet.\n\nThe hem of my pink dress was being held up by my cock that was pointing straight at Kennedy. She slowly raked her nails down my bare thighs, giving me goosebumps all over my skin, before delicately sliding back up to grasp my shaft with both hands.\n\nFully hard, she could fit both of her hands around me with some to spare. She slowly pumped me a few times before leaning over and drooling spit onto the head of my cock. She proceeded to liberally coat my member with her saliva while she stroked me, making a soft sloshing sound from her copious lubrication.\n\nThe professor was still going through the lecture, and none of the students seem to realize what was happening behind them. I desperately hoped that it stayed that way. I was surprised that nobody could hear sounds of Kennedy's spit sloshing as she jerked me, as it sounded loud to my overly attuned ears.\n\nWhen I looked back down at her, Kennedy wore a huge grin, staring back up at me from between my legs. With a cute little wink, and a finger to her lips, she leaned forward again. Instead of adding more spit, she slipped her lips over the head of my cock, flicking her tongue against the underside of my head while she continued to stroke me.\n\nHer hot breath, and warm mouth felt incredible. She quickly darted her delicious tongue over my tip, forcing me to fight back the moans that would condemn us both. After what felt like a prolonged torture, she finally relented and slid further down my shaft until I hit the back of her throat. Slipping her tongue past her lips she slowly retreated, keeping her eyes on me.\n\nShe was driving me wild and she knew it. She looked unbelievably sexy trying to smile around the tip of my cock. After that little tease, Kennedy went to work on me. She began to quickly bob up and down, taking just over half of me while she expertly worked the remainder with her hand.\n\nShe was extremely dedicated to her cause, never taking me from her mouth as she vigorously sucked and tongued my cock. I was beginning to feel my approaching orgasm when Kennedy began to shake, and her sucking became erratic. It took me a second to realize that Kennedy's free hand was between her legs and she must have been fingering herself the whole time she had been down there. She came with her lips wrapped around my cock and it spurred me forward.\n\nWith a quick glance to the class to make sure no one had noticed us, I whispered to Kennedy that I was going to cum. Instead of pulling away, she refocused her efforts and attacked me with newfound purpose. My hips began to rise of their own will, thrusting to meet her mouth.\n\nI had to bite my lip as I came to keep myself from calling out. My warm seed flew from the tip of my cock, splashing into her mouth over and over again. Kennedy barely slowed her sucking at the onslaught, swallowing to keep up with my blasts. Thankfully she slowed her vigorous attack to a gentler caress with her mouth, soothing my over sensitive member before she slowly let her lips slide off of my deflating cock.\n\nLike there was nothing amiss, or that she had not just blown me in a classroom full of students, she climbed back into her seat next to me and I watched as she fixed her pants. She had undone them and pulled them down a bit so that she could finger herself.\n\n\"Well that was fun!\" she said excitedly to me. Before I knew what was happening, Kennedy pulled me into a kiss, slipping her tongue into my mouth. I could taste my cum on her, but it didn't stop me from returning her passion. If she was wild enough to suck my dick in the middle of class, I could handle the taste of my own cum.\n\n\"Are we interrupting you ladies?\" someone said, snapping both of us from our shared moment. It was our professor. After a few moments of staring at us to make sure the message settled in, she resumed the lecture. \"As I was saying, culture has influenced what we see as traditional gender roles for centuries...\"\n\n\"You're crazy, you know that right?\" I whispered to Kennedy. \"Like five cans short of a six pack.\"\n\n\"You loved it!\" she shot back. \"If I'm crazy, then you're to blame. I would have never had the nerve to do that before I met you. After seeing you fuck your sister out where anyone could see...That was so hot!\"\n\n\"Next time she's in town I'll let you watch,\" I joked.\n\n\"Watch? Hell, I want to join!\" Kennedy said. \"With both of you at the same time...I wouldn't know what to do with myself.\"\n\n\"I know what you would do,\" I told her with a small laugh. \"You'd dive straight between Audrey's legs and lick that pussy like it was your last meal. I've been there, you're in for a treat,\" I joked.\n\nI was so relaxed, sitting with my hip pressed up against Kennedy's, and her leaning against me, that I didn't realize I had forgotten to put my panties back on. I sat, basking in the warm feelings swirling inside of me as the lecture continued. As soon as Professor Holland dismissed us, Kennedy jumped to her feet and slipped past me as she made her way to the isle. Making a move to follow after her, I felt my now flaccid cock bump against my thigh, and I realized my mistake. As I scrambled to find my underwear, Kennedy called out to me.\n\n\"Lexi!\" She smiled back at me from the isle. With her body turned just so, preventing anyone else from seeing as they filed down and towards the exit, she twirled my panties around her finger before slipping them quickly back into her pocket. \"I'll see you back at the dorm,\" she laughed.\n\n\"Kennedy! Kennedy!\" I called after her with a quiet urgency. The last thing I needed was to draw more attention to myself at this moment. This was cruel. I watched as she slipped out the door with the rest of the students, and I was left virtually alone in the classroom.\n\nI quickly shoved my things into my bag and turned off my recorder. Thankfully I had just came, and was completely soft. I grabbed my bag and made to leave the classroom. It was quite a new sensation, walking in a dress without panties on, my soft cock swinging gently to and fro between my thighs completely unencumbered. I felt so dirty, so slutty wearing this little pink sundress without any panties.\n\nI had never thought about it before. I was a slut. I was a cute little slutty schoolgirl. I had been fooling around with my sister, and now one of my classmates, getting each other off in the showers where anyone could hear us, and now I let her go down on me in the middle of class. I was a slutty little girl!\n\nThis was a disastrous train of thought. Knowing that I was a slut was getting me hard, and I couldn't stop thinking about all the things that I had done. I had let my sister jerk me off on a dance floor in the middle of a club while she got herself off, rubbing her pussy on my thigh. I had fucked her behind another club, and we had been seen. I jerked off in Kennedy's car in a parking lot full of other cars. I was always letting her feel me up in classes and now I let her go down on me. And that wasn't all of it, just the highlights.\n\nI was now slightly tenting my dress in the front and with every step the fabric was stroking the tip of my cock. I had to hold my bag in front of me as I walked down the hall to keep everyone from seeing it. I just had to make it back to my dorm.\n\nThis was so horrible! How could Kennedy do this to me! I was angry and scared, but I was also extremely turned on. It felt like my hormones were turned up to eleven. My cock was straining to push my book bag away from my waist, and I was most likely leaking precum onto my dress. To make this all worse, I was surrounded by all of these girls. None of them even seemed to suspect that every step I took was filled with pleasure, feeling my dress caress my bare ass, thighs and hips, while my bag pressed firmly against my raging cock, teasing me with every bounce of my step. I felt so naughty. The only way to make this complete would be to have Kennedy's and my fluids dripping down my thighs.\n\nI made it to the quad before I had to stop. It felt like I would cum if I took one more step. I sat on a bench by the grass with my bag on my lap praying for my erection to go away. It was a stupid thing to wish for. I knew that once I started walking again the sensations I had felt earlier would start all over, putting me back in this same position. I tried to think of anything, everything else that I could, to help take my mind off of it, but nothing worked. I even spent a few minutes checking all of my emails, hoping to be distracted enough, but to no avail.\n\n\"Hey Lexi,\" Abigail said, making me jump. \"How can you sit out here? I feel like I'm burning up!\" she said waving her hand, trying to cool down her face and chest.\n\nShe was wearing a loose knee length skirt, and a button up blouse with quite a few buttons undone, exposing just enough of her amazing cleavage. In the mid-afternoon heat, she was covered with a glistening sheen, and a bead of sweat had just formed, trailing down between her breasts. This was something I didn't need to see right now. Just one more thing to block my path to flaccidity.\n\n\"I had to stop to get something out of my shoe,\" I made up.\n\n\"Well you can walk back with me,\" Abigail said happily.\n\n\"Yeah, sure,\" I told her, trying to mask my reluctance and discomfort with a smile.\n\nWe made the walk to our dorm side by side. Thankfully my rest had calmed me down enough that I didn't feel like I would cream in my dress with each step that I took. I was still ridiculously hard and had to keep my bag in front of me, but the polite conversation I was having with Abigail was keeping me distracted enough to prevent me from thinking about how much of a bad girl I had become.",
        "We made our way across the quad and into Evens Hall, our dorm building. The sweet blessed air conditioning! The second we stepped inside, the cool air swarmed around us, slowly drying our sweaty bodies and causing us to shiver from the drastic change.\n\nThe stairs to the second floor were a little trouble for me. My knees hit my bag with every step, knocking it away from me only to have it come crashing back against my hard on. After the first few painful steps, I let Abigail pull ahead of me so that I could move my bag further away from my crotch.\n\nWith the extra distance between us our conversation trailed off and I began to think of my dirty little exploits again. I was such a bad girl, letting Kennedy steal my panties, leaving me to walk back to my room like this.\n\nNo one paid any mind to us as we entered our dorm unit and went to our room. I was so glad to be back in relative safety. I still had to find some panties and go take care of my erection without Abigail finding out, but this was much better than having to walk from one end of campus to the other.\n\n\"Hi guys,\" Kennedy said giving us a shock. We had not expected to find anyone in our room, and there she was, sitting on the edge of my bed like a proper lady with her legs crossed and her hands in her lap. \"Do you think I could have some time with Lexi, Abigail?\"\n\n\"Sure,\" Abigail said awkwardly. She kept glancing from Kennedy and then to me and back. \"I have a paper for my business class I should start on,\" she said, grabbing her laptop from her desk and heading out to our common area.\n\nKennedy got up and closed the door behind Abigail and locked it. After a thought she grabbed Abigail's desk chair and wedged it underneath the doorknob, preventing anyone from opening it even if they had the key.\n\n\"What the fuck!\" I nearly yelled at Kennedy now that we were alone. \"I had to walk all the way here without my underwear!\" I told her dropping my bag so she could see my cock seriously tenting the front of my dress.\n\n\"That is so hot!\" Kennedy said licking her lips as she sat on Abigail's bed. \"I would have loved to see that,\" she said as she slipped off her shoes.\n\n\"What if somebody saw? If I didn't have my bag they would have!\" I said, almost hysterical.\n\n\"But you did have your bag\" she said, unbuttoning her jeans and wiggling out of them.\n\nI was hardly paying attention until Kennedy was standing in front of me in her black spaghetti strap top and a tiny black thong.\n\n\"Someone's been a bad girl,\" she said walking over to me. I thought she was referring to me until she was standing in front of me. \"Sucking a girl's cock in the middle of class where anyone could have caught me,\" she whispered as she placed her hand on my stomach, slowly sliding down to grip my cock through the skirt of my dress. With the soft material wrapped around my shaft she slowly stroked me. \"I think you need to punish me,\" she said softly in a little pout.\n\nMy anger at her evaporated at her touch, and my full attention was directed toward the things I wanted to do to this red-haired beauty. I pulled her against me, wrapping my arms around her small hard body and kissed her soft lips. She parted them for me immediately and pressed her tongue out, searching for mine. She was so delicately soft to the touch but firm in her need, pressing her tongue forcefully to wrestle with mine.\n\nShe had stopped stroking my cock for our kiss, but maintained a death-like grasp on me; the pressure felt wonderful. She was right, she was a bad girl and I did need to punish her. I grabbed her arms and spun her, quickly throwing her onto my bed, tearing her from our kiss and causing her to let out a surprised squeal as she bounced on the mattress.\n\nRolling onto her back, Kennedy leaned up on her elbows with her knees bent and spread, looking at me from between them. With a smile and a crooked finger, she beckoned me toward her. I moved in between her legs, sliding my body against hers. I brought my lips back for another kiss while I gently pressed my cock against the front of her panties.\n\nShe felt warm and ready against my shaft, and her panties were more than a little damp. I ran a hand over her firm breast and down her stomach to ease a finger into the band of her panties. Breaking away from our kiss, I moved my way down her body and between her thighs, tugging her thong with me as I went.\n\nWith her panties at my feet, I slowly removed my pink dress over my head while Kennedy watched. Tossing it to the floor behind me, I knelt before her in only my black-lace bra that had been a matching pair to the underwear she had stolen from me in class. I couldn't help but lick my lips as I thought about what I was going to do next.\n\nWith her panties discarded, she held her legs spread for me and her beautiful wet pussy was left on display. Her lips were swollen and exposed, and they were a delectable candy pink that just demanded to be tasted. Grabbing ahold of each leg, I pulled her closer so that her ass sat right at the edge of the mattress, causing another little yelp. Knowing what was coming, Kennedy smiled in anticipation as I slipped my head between her open thighs. Taking my time, I trailed kisses along her toned thighs, avoiding her pussy, intentionally teasing her. I felt her hands on my head, trying to guide me to her promised land, but I refused, she deserved a little torture after what I went through.\n\nIt was torture for me as well. All I wanted was to dive into her beautiful snatch and drink my fill. It was tight and firm, and her delicate folds glistened with her arousal. Inches away, that sweet scent was intoxicating. My mouth had gone dry. I was trapped deep in a desert, and right now...she was my oasis. I couldn't wait any longer; I leaned in and drank from her.\n\nHer response was immediate. She began to work her hips and moan, urging me on, demanding me to help her release. I drove my tongue as far into her as I could reach, needing to catch every drop of her lust. When she gripped my head in her hands, I relented and gave her what she wanted. Sliding my tongue in long slow swipes, I worked her swollen pearl, stopping every few licks to grip her clit between my lips and suck as I frantically attacked her with my tongue before moving back to those long slow swipes.\n\nAfter what felt like ages of teasing, letting her get close enough to feel it and then backing off, she couldn't take it anymore.\n\n\"Please,\" she begged. \"No more. Make me cum,\" she whimpered.\n\nThat was all I needed. I wanted to hear her beg, and it sounded beautiful coming from her lips. I fastened my mouth around her clit and attacked it with everything I had. My tongue was moving like lightning, and I sucked hard as I slipped two fingers into her gushing hole. She was bucking and moaning like a mad woman, holding my face firmly in place as she fucked onto my mouth. As her volume rose, I hit her clit harder and harder, moving from the soft frantic flicks of my tongue to a firmer more violent thrashing.\n\n\"Oh...oh...oh!\" she chanted for me. \"Oh...fuck...yes...FUUUCK!\" she screamed collapsing.\n\nI eased off of her clit, letting her float away in her orgasm as I gently licked her cum off of her lips and hole. I continued to make love to her pussy while her breathing gradually slowed, and when she finally came back down, I gave it one last kiss before crawling up to lay beside her.\n\n\"Wow!\" she sighed as she moved all the way onto the bed. \"Did Audrey teach you that?\"\n\n\"No,\" I laughed, moving to lay next to her on the pillows. \"That one's all mine.\"\n\n\"Better than every girl I've had,\" she said leaning onto my chest. \"I need another minute to catch my breath.\"\n\nI just lay there running my hand through her thick hair and feeling her warm breath on my stomach. There was something about Kennedy. I didn't know what it was exactly, she definitely wasn't Audrey, but there was something about her. She was wild and spontaneous, and it didn't hurt that she knew about my little secret.\n\nAfter a minute or so, I felt Kennedy move her hand on my stomach, slowly stroking back and forth. Her movements started small and became larger, eventually brushing against the tip of my cock. I had deflated somewhat during our break, but with the casual brushes of her hand I was slowly making a comeback.\n\nHer strokes began to linger longer on my cock, and slip farther down my shaft, until she ended the subtly and began to devote all of her attention to my member. While she worked, she turned her head, softly kissing me. There was a passion to it, but it was soft and gentle. Her lips felt soft, parting like the breeze, and her tongue floated out to brush against mine.\n\nAfter a long kiss, that alone would have stirred my loins to life, Kennedy pulled away and easily slipped a leg over to straddle my thighs. Directly in front of her, my cock stood proud, pointing straight towards the sky. Placing her hands on my hip bones, she shifted her weight, moving forward and pressing my cock flat against my stomach between us. She slowly slid back and forth along my shaft as she pulled off her top, freeing her breast from its built-in bra, and letting them bounce free. They sat firm and high on her chest with her dark rose-colored nipples pointing out at me.\n\nStill working her pussy along the underside of my shaft, she looked me in the eyes. \"I really have been a bad girl,\" she said in a little girl pout. \"I really do need to be punished,\" she finished, not being able to completely hide the smile that was creeping onto her face.\n\n\"What am I going to do with you?\" I asked deciding to have a little fun and play along with her. \"You never seem to learn your lesson,\" I continued as I held onto her hips, helping her work herself on me. \"Maybe I should bend you over and spank you like the naughty little slut you are,\" I offered. \"Maybe you would finally learn if I got behind you and spanked your cute little ass until you promised to be a good little girl.\"\n\nHer eyes seemed to light up at that idea. I eased her off of me and kneeled in the middle of the bed facing the headboard. \"Get over there, it's time for you to learn your lesson,\" I scolded, pointing to the headboard.\n\nGripping the top of the headboard with both hands, she pressed her cheek against the wall above it. I crawled my way up to her ass, letting the tip of my cock brush against her. She was at the perfect height, with her back arched and her ass up, allowing the tip of my cock to kiss the hole of her candy-pink pussy.\n\n\"You are such a bad girl,\" I told her, punctuating my words with a modest slap of her ass.\n\n\"Oooh! I'm such a bad girl,\" she moaned.\n\nI slapped her a little harder, gauging her response. I didn't want to hurt her after all. I slowly increased my force, slapping a different cheek at random to keep her surprised. I continued to tell her what a dirty, naughty little slut she was as I smacked away at her ass making it a nice deep pink color.\n\nI could feel her pussy begin to drip her girl cum around the tip of my cock. She had reached the point where she desperately wanted me to slip inside of her and fuck her silly, but every time she tried to move her ass back to envelop my cock, I would back away leaving just the tip pressed against her and giving her a rather hard smack as punishment.\n\n\"Please fuck me! Please Lexi!\" she begged. Her body seemed to be at war with itself, jerking, trying to slide back onto my cock before she could stop herself. \"I'm such a bad girl. Please fuck me and teach me a lesson. Fuck me. Fuck me. FUCK ME!\" she screamed.\n\nI slammed into her hard, all the way to the hilt, pressing her breasts into the headboard and her cheek into the wall. I held there, with my hips pressed into her ass, savoring the feeling. She was extremely tight. Much tighter than I thought she would be, and it felt like my dick was in a furnace. Her pussy was burning up from her arousal.\n\nI slowly slid out of her to the tip before I slammed back in. The way she gripped me was exquisite. That silky soft tunnel slick with her fluids (and soon mine as well) held me in her firm grip, as if milking me for my cum.\n\nKennedy was squirming around on my cock doing anything she could to help speed her climax. Like a good girl, she still had both of her hands gripping the headboard. No longer able to resist myself, I began pounding into her, finding a steady but powerful rhythm using slow but forceful strokes. My hips were crashing into her ass, the smacking sound counting off the seconds.\n\n\"Yes! Yes! Yes! Fuck, punish me!\" she called out to me in a high pitched moan.\n\n\"Fuck, you're such a good slut!\" I said, giving her ass a loud smack.\n\nI continued to pound into her, filling the room with the smacking sounds of our thighs, my hand on her ass, and my balls swinging to hit her clit with each thrust. I don't know where this staying power had come from. Sure, I had come about an hour ago in class, but I had been in a constant state of arousal since my walk back to the dorm without my panties. Regardless, I kept pounding into her.\n\n\"Punish my pussy!\" Kennedy squealed. \"Fuck, don't stop! I'm gonna cum!\"\n\nWith a firm grip on her hips I continued to power my cock brutally into her cunt. \"Cum on my cock you little whore,\" I urged her. \"Come on Lexi's cock!\"\n\n\"Fuck fuck fuck! I'm coming!\" she cried. \"I'm cumming. I'm...oh FUCK!\" she screamed as her already tight pussy clenched even tighter onto my cock.\n\nI didn't even slow my pounding as she trembled, holding desperately to the headboard to keep herself upright. She was letting out a constant series of short rapid moans, unable to fully catch her breath.\n\nShe finally came back to her senses while I continued to fuck her at that slow, hard pace. I could feel her cum dripping down my thighs and balls and the air was thick with the smell of her sex.\n\n\"Such a good little girl, cumming on my cock like that!\" I called to her sweetly. \"Such a good little slut!\" I praised rubbing her red ass cheeks in soothing motions. \"Umm! Fuck you feel so good around my cock.\"\n\n\"You feel so big!\" she moaned to me. \"Oh, you fuck me so good!\"\n\nHer compliments spurred me on, and I slowly picked up my pace. I was really giving it to her. Gone were the slow strokes, replaced by a fast pistoning. I knew I couldn't keep up a pace like this for long. Leaning forward, I gripped one of her hands on the headboard and reached around to frig her swollen clit. I could feel my orgasm approaching with my rapid assault on her vice like pussy.\n\n\"Fuck, keep doing that!\" Kennedy moaned. \"I'm gonna cum again!\"\n\nFrigging her with a fury, I slammed into her pussy from behind. We were both pouring sweat from our efforts and the air smelled like sex. Kennedy was moaning a constant string of profanities while I let out cute little panting moans as I neared my climax. It was a perfect moment.\n\n\"I'm gonna cum baby!\" I warned her. \"Do you want me to pull out?\"\n\n\"Don't you fucking dare!\" she moaned.\n\nA few seconds later she screamed her lungs out as she came on my cock. The tight spasms of her cunt were too much for me and I flooded her tight little burning hot pussy with my cream. Each rope I fired felt like a cannon blast, firing shot after shot. It felt like the most I had ever cum before.\n\nI fell against Kennedy's back, leaning on her for support as she leaned against the headboard. We both held there, catching our breath with my cock still buried in her pussy, slowly deflating. Our skin was clammy with the mix of our sweat pressed between our bodies.\n\n\"What the fuck!\" Kennedy breathed after a minute or two.\n\n\"You told me not to pull out!\" I defended.\n\n\"Not that!\" she said pushing me off her so she could lay down on the bed. \"I haven't been fucked like that...ever!\" she confessed.\n\n\"Really?\" I asked laying down next to her. I took up the girl's position and rested my head on her welcoming chest, feeling her breast rise and fall with her breathing.\n\n\"Why do you think I play for the girl's team? If guys would have fucked me like that in high school, I would have stuck with them,\" she said.\n\nWe lay there for a while basking in the fruits of our labor. She ran her hand through my hair as she told me about how turned on, I had made her when I was punishing and teasing her. It was good pillow talk in my estimation. I was able to make mental notes of all the things she was enthusiastic about.\n\nI was really glad that Kennedy had let me keep my bra on while we fucked. I was a little ashamed about my fake breasts. I didn't know why exactly. I guess the fact that it was the only part of me that wasn't the real me had kind of gotten me down. I know what you're thinking. You're pretending to be a girl and that's what you have a problem with? Not your cock?\n\nWell, I wasn't ashamed of my cock, it was a good cock. A cock to be proud of! But while my breast forms were amazing, I was a little shy about anyone actually seeing them, whether they knew about them or not.\n\n\"I'm thirsty,\" I told Kennedy. \"Want to get us some water?\"\n\n\"You want me to go out there like this?\" she said laughing, gesturing toward her naked body.\n\n\"I walked all the way back here without underwear,\" I laughed back.\n\n\"Totally not the same thing,\" she said giggling. \"You at least had you're dress!\"\n\n\"You can wear my dress,\" I offered. A girl I might be, but I still thought like a guy sometimes. I would definitely get a thrill out of her going out into the common area wearing a dress that they had all seen me wear earlier. They undoubtedly knew what we had been up to, we had been in here alone for a while now, and Kennedy hadn't exactly kept her voice down. I'm not sure how much sound these plaster walls could block out, but they surely couldn't completely contain Kennedy's screams of pleasure.\n\n\"They will know what we were doing if I go out there in your dress!\" she said.\n\n\"Honey, they already know,\" I assured her. \"You weren't exactly Miss Restraint when it came to your vocals.\"\n\nShe was on the fence about it. With my head already laying on her breast, I stretched out my tongue to lick her nipple. \"You know you want to,\" I told her. \"You're such a bad little girl,\" I cooed to her as I sucked her hard nipple into my mouth.\n\n\"I'm so thirsty!\" I whined, when that seemed to fail as well.\n\n\"Fine!\" she said, slowly rolling out of the bed.\n\n\"No panties!\" I admonished as she reached for her thong. \"Bad little girls like you don't get to wear them.\"\n\nKennedy just smiled at me as she slipped on my pink sundress. It was a little tight around her breasts, but she looked fantastic. I just lay there and watched her as she straightened and smoothed it out. With a smile and a shake of her head for me, she pulled the chair away from the door and unlocked it. I had to scramble under the covers realizing that I was only wearing my bra, and my cock was hanging out for anyone who happened to come in to see.\n\nI waited patiently for Kennedy to come back with the bottled water. She returned flushed and flustered, quickly closing the door behind her.\n\n\"You jack ass!\" she said throwing a bottle of water at me while she was laughing. \"I got all the way to the fridge before your cum started to drip down my leg!\"\n\nLooking at her standing there, she looked like nothing more than a fresh and well fucked woman. Her long thick hair was a wild and tangled mess, damp with the sweat of a good fucking. That and her wearing another girls dress, and obviously without a bra and presumably panties. She looked beautiful.\n\nShe grabbed my discarded towel from my morning shower and used it to soak up the flow from between her thighs. \"Jezzus! How much did you cum!\"\n\nI just smiled as I watched her. I took it as a great compliment. If you think about it, she should have too. I had never cum that much before and it was all because of her teasing and efforts. We quickly drained our waters and Kennedy pulled my dress off and got back into bed with me under the covers.",
        "\"Can I sleep here for a bit?\" she asked, snuggling into me.\n\n\"I'd like that,\" I told her, caressing her long hair, and brushing it out of her face. \"I could use a good nap after that.\"\n\nExhausted, I fell asleep quickly.\n\n*** *** ***\n\nIt was the best sleep I had in weeks. I woke up to realize we had slept long into the night. By the clock on my desk it was 3am. Kennedy was still in bed with me, spooning with her back to me. With a look over her shoulder I saw that Abigail was in her bed sleeping away.\n\nI wondered for a bit what she thought about Kennedy and I sleeping in the same bed together. She didn't know that I had a dick or anything, but as two girls. With the covers pulled up to her chin, you couldn't tell that Kennedy or I were naked, but I still wondered what she thought about us sleeping together with her in the same room. I would just have to ask her. We were friends. If she had a problem with it, we would work around it.\n\nI was wide awake now with no chance of getting back to sleep. I felt alive and invigorated, ready to take on the world. I also felt Kennedy's soft warm skin pressed against me with her bottom tucked firmly against my crotch. I couldn't have stopped my erection if I had wanted to, and I didn't.\n\nSoon, I was fully hard with my shaft snugly pressed into her crack. I slowly began to rub my cock along her length, enjoying the feeling of her. Her body was so warm against mine, and I could smell our combined fragrance of dried sweat along with the faint lingering smell of our sexual fluids from earlier.\n\nKennedy gave a small moan as she woke and turned to look at me. I pressed my finger to my lips and pointed to Abigail sleeping. With a mischievous smile she looked back at me while she snaked her hand between her legs, grabbing my cock and slipping it forward to rest against her pussy. After a few quick rubs, she maneuvered herself to slip me inside of her.\n\nI knew what she wanted, she wanted to fuck while Abigail was here, where she could catch us at any moment. We slowly fucked for over an hour, watching Abigail sleep right across the room from us. It was pretty erotic, and to be honest, with that extremely slow pace I could have lasted forever but my legs were getting tired. Kennedy had cum quietly several times while we fucked, so not waiting for her, I came deep into her pussy with one final thrust.\n\nWe lay there for several minutes before we quietly decided to go take our morning shower a little early. We were already wide awake, and we had nothing else to do. Well, there was something else we could do, but I needed a little recharge time.\n\nKennedy got out of bed naked and kindly retrieved some panties and sweatpants for me to put on under the covers just in case Abigail woke up while I was getting dressed. I grabbed my shower stuff and waited for Kennedy to retrieve hers from her room before we headed off to the showers.\n\n*** *** ***\n\n\"Are you okay about yesterday?\" I asked Abigail later that day after we were done with all of our classes.\n\nWe were both on our laptops working on some assignment or another. She was on her bed, stretched out on her stomach, typing away while I sat at my desk.\n\n\"I didn't really mean to kick you out of our room...or to have Kennedy stay the night,\" I said, purposely avoiding mentioning that Kennedy and I had had sex. She had to have known, with our room smelling like a ten-dollar brothel in Tijuana, but for some reason I didn't want to say it outright.\n\n\"I really wished you would have finished sooner,\" she said breaking her eyes away from her laptop to look at me. \"I lost twenty bucks!\" she exclaimed.\n\nTwenty bucks? What was she talking about? Her words seemed slightly angry, but she had a little smile on her lips.\n\n\"Skylar was out their taking bets with the other girls on how long you guys would last before coming out for air,\" she said. \"Fifteen minutes sooner and I would have won over a hundred bucks!\" she explained.\n\n\"They were taking bets on us?\" I asked.\n\n\"Yeah, once we heard the screaming and moaning coming through the walls, we knew exactly what was going on. You guys were at it for almost two hours!\" she said laughing.\n\nTwo hours? It hadn't really felt like that long, I thought to myself.\n\n\"And I wasn't bothered by Kennedy being here. I like her too,\" Abigail assured me. \"We should all hang out more. She's really cool...I wish I could be more like her,\" she added, more to herself.\n\n\"You don't need to be like her to be cool,\" I told her honestly. \"I like you just the way you are. I think you are amazing.\"\n\n\"Thank you,\" Abigail said, blushing as she turned back to her laptop.\n\n\"We should all go out this weekend,\" I offered. \"We could go get some drinks at The Library and do some dancing.\"\n\n\"I'd really enjoy that, thank you Lexi,\" she said sincerely.\n\n\"Maybe we can find you a guy to flirt with,\" I told her playfully. \"or a girl,\" I added making her blush even more.\n\nIt seemed like she was interested in boys, but definitely curious about the fairer sex. Our conversation trailed off as we worked on our papers before calling it a night. Falling asleep, I thought about Abigail and those dirty things I had said to Audrey the last time we had sex. I really did want to see my sister lick that girl's curious pussy. She would be so nervous at first, but I had a feeling that she would get wild once she got used to it. I also thought about her cute little mouth wrapped around my cock. I had very good dreams that night.\n\n*** *** ***\n\n\"I think I have an idea!\" Kennedy said running up to me on the quad in between some classes that we didn't share. It was almost a week since we began having sex, and adventurous didn't begin to describe her. Any time Kennedy has an idea, I get nervous and scared...and incredibly horny.\n\n\"If it involves me not having underwear in public, I'm going to go with no,\" I told her.\n\n\"Nothing like that,\" Kennedy said quickly. She appeared to be all business. \"I just got an email notice saying that I have a mandatory guidance counselor meeting in the Student Services Department in the admissions building next week.\"\n\n\"Yeah, I got a message like that too,\" I told her. I didn't know why she was so excited about this, but part of me was a little relieved. Her imagination, coupled with her hormones, could be a dangerous thing.\n\n\"Well, my father got me admitted right?\" she began. \"And he is paying my tuition. He must have had to pull some strings to get me in. I should be able to find out who he is from there!\" she finished excitedly.\n\n\"They aren't just going to give us a confidential file if we smile for them, and I'm not up to sleeping with someone as a bribe,\" I told her. \"Unless you have a big stack of cash to pay someone to give it to you, we're out of luck.\"\n\n\"Ew...no!\" Kennedy said disgusted. \"No screwing people and no bribes, I'm not rich yet. We can scope the place out during our meetings and go back another night to find what we need when nobody's there.\"\n\nIt sounded kind of risky. This was something we could be expelled for. It didn't take long for me to make a decision. I was going to do it. Kennedy was desperate to find out who her dad was. When I was desperate for her to keep my secret, she did so without hesitation. Besides, she was essentially my best friend. I hadn't ever really had a best friend before, so I had nothing to compare it to, but this was what I had imagined it would feel like.\n\nI was in."
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "crossdressing",
        "college",
        "teen",
        "straight",
        "public",
        "all-girls school",
        "panties",
        "cock"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/womens-studies-ch-03"
}