{
    "title": "A Plea for Accuracy and Truthfulness",
    "pages": [
        "Our first duty as writers is to write the truth. That does not mean that we cannot, or should not write fiction or fantasy. It does, however, demand that we not tell our readers things which are physically, scientifically, and demonstrably false.\n\nWe can write about things that do not exist, and indeed cannot exist, in our known universe. We can 'invent' truths that can exist only in our stories. However, when we do so, we must also create a consistent and believable logic and a cause and effect rationale that enables a reader to accept the story world and its occupants and the things that happen in that story world as possible and even probable in the environment, and under the circumstances we show them through our writing.\n\nHowever, writing science fiction, or science fantasy, or even stories of magic is not what I want to address in this essay. I want to discuss writing erotica.\n\nErotica is that genera of literature which tells us about sex and peoples involvement in sexual activity. It may be quite explicit and include 'gutter language,' but need not do so. It should, however, entrain a reader's imagination and cause him or her to vicariously experience the emotions and physical sensations experienced by the characters in the story. Some of the scenes in an erotic story, if pulled from the story and read out of the context of the story, might be pornographic. That is, such scenes portray the sexual activity in explicit terms purely to arouse the reader sexually and to cause a genital response -- tumescence, and the flow of fluid accompanied by a desire for orgasm\n\nThat is good. Those torrid sex scenes are to erotica what seasoning and spices are to food. They are what makes an otherwise bland, account of the interaction between two or more people come alive and make the reader wish that either he were a fly on the wall seeing forbidden aspects of someone else's life. Or wish that he was one of the participants. \n\nHowever, and it is a huge however, too many such scenes, with no story line to put them into a believable context are as undesirable as what too much strong flavored seasoning is in a dish of food which if properly prepared is delicious and nutritious, and which leaves one wanting to eat more of the same at another meal.\n\nA good story would still be a good, readable story even if all of the graphic sex scenes were expunged from it. It might leave the reader feeling that it would have been more enjoyable with a little hot sex in it, but it would still leave him feeling satisfied and that the time needed to read it was time well spent. Such a story has a beginning, a middle, and an end. But to go back to my first assertion; it must tell the truth. It must be believable.\n\nMany an erotic story is made unbelievable because the writer has little or no knowledge of human sexual anatomy and physiology.\n\nOver this past weekend, I read a well crafted story about a forty-seven year old photographer who had an affair with an eighteen year old girl. The story was sensitive, sensual, and entirely believable until the scene in which the protagonist penetrated the virgin girl's vagina the first time.\n\nThe head of my cock slipped [in] fairly easily into her slick vaginal opening, which had been opened somewhat by my fingers recently. As it pushed deeper into her, I could feel however that the channel narrowed and tightened around my cock shaft. I gently started rubbing her back again to assure her of my love, and I could feel her pussy starting to relax slightly to allow more access to my pulsating cock into her untouched inner love channel. I told her to take her time and to ride up and down in short thrusts. With a loud moan she started riding up and down, each time taking a little bit more of my seven inches long, and nearly two inches thick love sausage into her pulsing hot pussy. I could feel her juices coating the exposed part of the shaft in preparation for deeper entry, and I could hear her groaning and gasping as her pussy got more and more accustomed to this invasion of this foreign object into its private innards.\n\nSo far, except for some unnecessary wordiness, and the \"in\" which I set off in square brackets to show it should have been left out, the above paragraph reads well and is entirely believable. However, the second sentence of the next paragraph betrays the author's lack of knowledge about the anatomy of the female genitals.\n\nMy cock suddenly encountered an obstacle, which seemed to span the entire width of the excruciatingly hot passage into which it was gliding. I felt her pushing down on it until with a groan, yet the thrust wasn't enough to break through her still intact maidenhead.\n\nA woman's maidenhead is her hymen. It is at the mouth of the vagina, not deep inside as described here. At the depth the author says the man's penis was in the girl's vagina, the object he would have encountered would have been the cervix of the girl's uterus.\n\nIf the man's penis is sufficiently long and thick, deep penetration can cause the cervix to slide up over the invading glans penis as it moves into the blind pouch at the extreme end of the vagina. If the penetration to this depth is particularly forceful, it can cause the female to experience a degree of discomfort or pain.\n\nAnd, that brings me to another item which shows the ignorance of some writers. I have lost track of the number of men who in recounting a tale of sexual conquest have written that their penis penetrated into the woman's uterus (womb) and that he had emptied his semen directly into that organ. That is a physical impossibility. \n\nThe os-uteri (mouth of the uterus) is much too small for a man's penis to enter it during intercourse. When a gynecologist does a D and C (dilation and curettage) in which he inserts an instrument called a curette into the uterus to scrape its walls, he must first dilate the cervical os. He does this by forcing a series of graduated dilators through the os to stretch it. The first is about an eighth of an inch in diameter. Each increases in size by one millimeter (a little less than a sixteenth of an inch) until he can push one that is approximately a half inch in diameter into the uterus. There is no human penis that is either thin enough or ridged enough to force its way into a woman's womb.\n\nAs the woman's cervix slides up and across the glans penis to drop down over the coronal ridge to the penis shaft, it may feel to the man as though he has penetrated the uterus, but in reality, the end of the penis has merely entered the cul-de-sac that is the distal end of the vagina.\n\nBy the way, at the moment of orgasm, the man typically does thrust as far into the woman's vagina as possible and perform a series of short, rapid thrusts that culminate in his ejaculation. It is the stimulation of the woman's cervix sliding back and forth across the sloping head of his penis that produces those marvelous sensations which trigger the release of his semen.\n\nOne final point. Few men have a penis longer than six inches. The average erect penis is roughly five inches in length. Some a shorter, some longer. Rarely is a penis over seven inches in length, although a few do reach twelve inches. I know we men like to think of our sex organ as a mighty battering ram with which we give the woman of our dreams exquisitely memorable orgasms, but reality says otherwise. In a like manner, it is a gross exaggeration to say that one ejaculates gallons of semen. It may feel like that is what happens at the moment of orgasm, but the reality is that the average man puts out about a teaspoon full of semen with a good ejaculation. A few may spew out a tablespoon full. It is fine to say that one's orgasm felt as though it was pumping out gallons of sperm, but it is patently false to say that it did pump out a gallon or more of sticky white cum. Such exaggeration tells the reader that the writer is lying to him, or her and makes an otherwise believable story just another piece of hog wash.\n\nMake your erotic stories as hot as you wish. Make sex scenes explicit and graphic enough to make your reader masturbate, but me truthful. Write stories which are factually accurate enough that even the most knowledgeable reader will still find your story believable."
    ],
    "authorname": "History Nut",
    "tags": [
        "writing advice",
        "erotic writing"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/a-plea-for-accuracy-and-truthfulness"
}