{
    "title": "The Talented Taxidermist",
    "pages": [
        "Being Sheriff of Tuckahoe County, Tennessee means I get to see a lot of things. I say, \u201cget to see\u201d, but sometimes, I\u2019d rather they just left me out of it entirely. Some of the things I\u2019m called upon to take care of aren\u2019t much fun, like when Clarence Upton\u2019s boy wrapped his old blue convertible around that big oak at the end of Miller\u2019s Lane. Not pretty, that one; not pretty at all.\n\nSometimes it can be really hard to keep a straight face. One Wednesday night, Mabel Harrison called me from Janet Mason\u2019s house and asked me to drive over. Mabel\u2019s married to the town Mayor, Dwight, and she\u2019s also the president of the library board. Janet\u2019s the town librarian, so I didn\u2019t give it a second thought. I figured Mabel had gone to Janet\u2019s house to talk about some library business. She was standing on the front porch when I arrived, said her car wouldn\u2019t start, and asked if could I help her.\n\n\n\u201cI\u2019ve got some jumper cables, Mabel, but why didn\u2019t you just call Bob down at the station?\u201d\n\nMabel fidgeted a little, looked through Janet\u2019s living room window and then back at me. She started to say something, then looked back through the window and smiled. I thought her lips pursed up just a bit. She made a little waving motion with her hand, and turned back to face me.\n\n\u201cSheriff Thompson, I can\u2019t trust anybody else. If Dwight found out I was here tonight\u2026. I love him and all, but\u2026.You know how people talk in this town.\u201d\n\nI said I understood and got her car started for her. As she drove off, I just had to chuckle. Janet had been looking out that window at us. That wasn\u2019t all that odd, but the black net negligee she had on was. It didn\u2019t leave much to my imagination, and I doubted it was her normal evening attire. I\u2019d always wondered why Janet never seemed interested in any of the young men in town. Mabel didn\u2019t seem the type to be a member of the girl\u2019s team, so I figured she might have just climbed over the fence for one night. I haven\u2019t seen her back there since, but they do seem to go to a lot of library conventions together.\n\nOther things I see leave me wondering. Six years ago, I stood on Mose Beasley\u2019s front porch for three hours before Hazel took the shotgun barrel off Mose\u2019s crotch and gave the weapon to me. Mose breathed a sigh of relief, and Hazel ended up giving him a big hug. She\u2019d got it in her mind that Mose was messing around with the new schoolteacher who moved to town that year, and was gonna blow away his privates. Thankfully for all those involved, Hazel\u2019s sister, Emma, had been visiting for a couple of months, and called me when all the ruckus started. All three of them were standing on the porch when I drove up.\n\nMose swore he\u2019d only been over there once, and that was to give the schoolteacher some tomatoes. Hazel claimed he\u2019d been there a lot more than once and had been giving her a lot more than tomatoes, too. It seems that Mose hadn\u2019t been performing some of the duties of a good husband lately. He hadn\u2019t been able to\u2026, well, to put it in Hazel\u2019s words, \u201chis dick\u2019s as limp as a wet dishrag. He ain\u2019t done nuthin' ta me fer the last month. I jest know he\u2019s giving it to her ever chance he gits and if he can\u2019t keep it\u2018n his pants, I\u2019m gonna fix \u2018im so\u2019s I don\u2019t have to worry \u2018bout it no more\u201d. \n\nWell, I listened, and talked, and listened some more. Virginia Sharp, the schoolteacher in question, was the subject of a lot of the gossip in the little town of Buck Lick. All the women were carefully watching their men. Virginia was generously endowed, so to speak, and seemed to enjoy the attention all those curves produced. She always did her yard work in a loose halter-top and little shorts that showed her butt cheeks when she bent over. \n\nI kind of had to side with Mose, though. It just didn\u2019t seem possible that he\u2019d been banging Virginia. I finally convinced Hazel that since Virginia was about twenty-three and Mose was seventy-one, there was probably nothing for her to worry about. \n\nShe gave me the shotgun, and hugged Mose for all she was worth. Mose looked at me over her shoulder and smiled. I was patting myself on the back for my negotiating skills, when I realized he really wasn\u2019t looking at me. Mose was looking at Emma.\n\nI\u2019d thought Mose was probably just slowing down a little in his golden years, you know, but now I wasn\u2019t sure. Emma was a real looker, or at least she had been at one time, and she was five years younger than Hazel. The quick little smoochy face Emma made at Mose caused me to wonder a little. When Mose grinned back at her, I was suspicious. When he stuck his tongue out and wiggled it up and down between his pink, toothless gums, I decided I\u2019d better hold on to that shotgun for a while.\n\nAnyway, I see a lot of things.\n\nBuck Lick is the county seat of Tuckahoe County, and it isn\u2019t much different than most other small towns. Down at the end of Oak Street, Spring Crick runs into the Red River and that\u2019s where Burton\u2019s Park is. It\u2019s named after Jesse Burton, a Tuckahoe County girl who served as a spy for the Confederacy. She posed as a lady of the evening to steal information from the Yankees about troop movements and battle plans and such. Apparently, Jesse was a pretty good spy, because the Yankees never found her out. She must have been pretty good at her cover trade too. She came back from the war with a suitcase full of money she\u2019d liberated from the Union officers she\u2019d met. When she passed to her reward, back in thirty-three, she owned about half of the town. There\u2019s a statue of her down in the park right beside the flagpole and the old cannon we fire on the Fourth of July and Veteran\u2019s Day.\n\nDown the street there is Mason\u2019s Grocery, Jeffers and Son Hardware, and Fred\u2019s Barber Shop. A few years ago, Betty Jane Bailey went to beauty school down in Johnson City, and now she runs the Clip \u2018n Curl beauty parlor. She started it in her trailer, but last week, she moved her chairs and sinks and dryers into the old jewelry shop across from Mason\u2019s. \n\nIf you look up the street, right there where the highway goes through town, that\u2019s Bob\u2019s service station. Jolene\u2019s Diner is on Main, just across from my office and next to the library, and down at the other end of town is the local watering hole that goes by the name of The Saddle Club. \n\nI\u2019m a little embarrassed to admit that we also have a house of ill repute. Well, it\u2019s really just Lizzy\u2019s home, but she does take care of certain needs for a few men in the community. The sign in her yard says she does Swedish massage to ease away those aches and pains, but if you\u2019ve got an extra ten bucks, she\u2019ll massage away that other tension too. \n\nShe doesn\u2019t bother anybody except the moral members of the Buck Lick Women\u2019s Bible Society and Social Club. Those uppity women hate her. I suppose they might have something to worry about. According to my wife, Jenny, most of \u2018em consider sex to be right up there with murder and blasphemy when it comes to sin. Wouldn\u2019t surprise me if a few of their husbands develop some aches and pains from time to time. Well, actually, I know they do, but what happens in private isn\u2019t a concern of mine as long as nobody gets hurt. Besides, Lizzy\u2019s really a nice woman and she showed me a few things when I was nineteen. I\u2019ve never had an official complaint that was based on any factual information, so I let Lizzy be.\n\nAll in all, Tuckahoe County and Buck Lick are both pretty quiet. We haven\u2019t had a robbery in fourteen years, if you don\u2019t count when Billy Hagers stole Donna Mae Cruder\u2019s bicycle. I don\u2019t think we really ought to have to count that one, because Billy was only six at the time and he said he was sorry. Funny how that one worked out. Donna Mae married Billy last year.\n\nMy job is mostly breaking up the occasional marital dispute, making sure the locals get home OK after a night at the Saddle Club, and keeping the drag racing out on River Road down to a minimum. In my spare time, I\u2019m kind of a surrogate father to Jimmy Joe Jackson.\n\nJimmy Joe is the youngest boy of Gerald William Jackson, the daddy of a whole clan of Jacksons that live up on Chelsea Ridge. Old Gerald fathered twelve kids - eight boys and four girls, if I recollect right - all by one woman. That woman, Maude, had one goal in life. She wanted her sons to do something with their lives besides go into the family business. I could understand that. The family business had been the same for generations. The Jacksons make some of the smoothest corn liquor this side of the Smokies. I always get a quart at Christmas. They put a couple of peaches in a mason jar, top it off with their best run of the summer, and let it mellow in their root cellar until Thanksgiving. Goes down real easy on Christmas Eve. Yeah, I know, but just because I\u2019m a sheriff doesn\u2019t mean I can\u2019t appreciate good whiskey. They make a pretty good living at it, if you don\u2019t count the jail time in Knoxville now and then. It kind of slows down their production when one of them is up there.\n\nMaude tried everything with her first seven boys, but didn\u2019t get much of anywhere. None of them had the gumption to improve their lives. Then, along came Jimmy Joe. He had the distinction of being the first Jackson to make it from first grade all the way through high school. It took him fourteen years to do it, but he made it. Maude knew this one was going somewhere, and she was tickled pink. \n\nNow, most folks think there\u2019s something wrong with Jimmy. The women at the Buck Lick Women\u2019s Bible Society and Social Club say Maude and Gerald are first cousins, but I don\u2019t know about that. Jimmy Joe is a little on the skinny side, and his right eye kinda looks down most of the time, so maybe they\u2019re right. I don\u2019t know. I think Jimmy Joe\u2019s just a little different than most other folks. OK, maybe he\u2019s a lot different, but he\u2019s not a bad guy, once you get past that eye. Since few people in town will talk to him, he\u2019s kind of adopted me. When Jimmy Joe has a problem, I\u2019m the one he comes to for help. I get lots of practice helping him. \n\nThe first time I saw Jimmy Joe, he\u2019d come down off the ridge with old Gerald. They\u2019d run out of sugar and came to town for a couple hundred pounds so they could start the next batch of corn to fermenting. Jimmy Joe\u2019s eyes got about as big as soup bowls when he saw the big city of Buck Lick. I could tell, then, that he wasn\u2019t cut out to be a moonshiner. He moved to town as soon as he could. Maude staked him to a few dollars until he could find a job. \n\nJimmy Joe rented an old trailer down on the south end of town, and got a job with Cyrus McClain. Cyrus does all sorts of work for people in Tuckahoe County. If you have a septic tank that\u2019s acting up, you call Cyrus. If your cow dies, Cyrus\u2019ll come out in his old truck and haul it off to the rendering plant down in Adelaide. Cyrus is also an important link in the Jackson\u2019s moonshine distribution network, and that\u2019s how Jimmy Joe hooked up with him.\n\nI learned one of the things that brought Jimmy Joe down off the ridge was the girls in Buck Lick. I couldn\u2019t blame him much. His cousins were the only single women on Chelsea Ridge, and I knew his cousins. As Jimmy Joe once told me, \u201cThey ain\u2019t one of \u2018em got as much sense as a coon dog\u201d. I guess when you get educated, you raise your standards some.\n\nNow that Jimmy Joe had some money and a place to live, he started looking for a wife. There are several pretty girls in Buck Lick, and Jimmy Joe took after all of them. The only problem was, just as soon as Jimmy Joe laid eyes on one, she\u2019d haul ass for the next county. The end came when he saw Cindy Jean Davis picking blackberries down by the river. Jimmy Joe walked up behind her, tapped her on the shoulder, and said \u201cHey\u201d. The poor girl like to jumped out of her jeans. She ran all the way back home, and didn\u2019t come out of the house for three weeks. Jimmy Joe came to my office and asked me to help him find a girlfriend.\n\nWell, I tell you, I didn\u2019t rightly know what to say. I mean, like I said before, Jimmy is a good kid and all, once you get past that eye, but the girls in town wouldn\u2019t stop running long enough to get to know the boy. \n\nI told Jimmy the first thing he had to do was stop scaring the hell out of every girl he met. He was confused.\n\n\u201cWhy\u2019s they scared? I ain\u2019t gonna do nothin\u2019 to \u2018em lessen they wants me to.\u201d\n\n\u201cWell, Jimmy, I know that, but maybe you oughta try not sneakin\u2019 up on \u2018em like you do. Girls don\u2019t usually take to that. They like it when they can see you coming.\u201d\n\n\u201cDone tried it that way. Soon\u2019s I gits close, they make this face like they\u2019s been skunked and run off.\u201d\n\nWell, like they say, this was one of those sticky wickets. Most women have this thing about being clean and smelling nice, and it\u2019s one of the things I really like about them. Jimmy just didn\u2019t understand when I said maybe he didn\u2019t smell quite right.\n\nHis job was, how should I say this, an unusually fragrant occupation. On a hot July day, if the wind is right, you can tell when Cyrus drives into town. His old ton truck has seen it all, and a lot of it has soaked all the way through the pine boards on the bed. Those boards are a real odd shade of greenish-brown, and the smell kind of reaches out of the truck bed and grabs you by the throat when it goes past. Since Cyrus and Jimmy Joe rode all over the county in it, they\u2019d gotten used to the mixture of septic tank ooze, ripening cow innards, and the occasional dead skunk. Jimmy didn\u2019t even give it a thought that he might smell the same way. \n\n\u201cDon\u2019t know why that\u2019d be. Mamma teached me to wash up, and I does it, just like she said.\u201d\n\nI knew Jimmy washed. Maude had taught all her kids that one bathed once every week, even if one did not need to bathe. I figured Maude had taught that lesson well, but I also had proof that Jimmy washed. Gloria\u2019s McBride\u2019s house sat on Spring Creek about a quarter-mile downstream of Jimmy\u2019s trailer. Gloria had called me out to her house a few weeks after Jimmy moved in. \n\nEvery Sunday afternoon, Jimmy jumped in the crick behind his trailer with a bar of Maude\u2019s homemade soap and scrubbed himself clean. Gloria had spotted the soapsuds that Sunday, and went up to her attic so she could see over the trees. It was pretty hard to convince her I couldn\u2019t drag him off to jail just because he was standing there naked in Spring Crick. I did make the suggestion that if she\u2019d just stay away from her attic window on Sundays, she wouldn\u2019t have to look at him.\n\n\u201cWell, Jimmy, I can\u2019t rightly say for sure, but it might help if you\u2019d do it a little more often.\u201d\n\n\u201cYa think that\u2019d do it?\u201d\n\n\u201cWell, it\u2019d be a start. You know, while you\u2019re at it, you might as well dunk those overalls and your shirt in the crick too. Women like a man who takes care of himself and dresses real sharp.\u201d\n\nJimmy nodded understandingly. \u201cI\u2019ll try it out. Thanks, Sheriff.\u201d\n\nI should have expected the call from Gloria. Jimmy was sitting in an old chaise lounge in his back yard, naked as the day he was born and waiting for his overalls to dry. It was my fault. I figured Jimmy\u2019d have at least one other pair of overalls and another shirt. I don\u2019t really know what Gloria was so worried about, though. That big red oak beside her house hid all of Jimmy from the waist down. \n\nThe next time I saw Jimmy, he looked a lot better. Those brown splotches on his overalls were faded some, and he smelled more like crick water than Cyrus\u2019 old truck. I asked him if he\u2019d had better luck finding a girlfriend.\n\n\u201cI thought I had one fer sure, t\u2019other day. Becky Sue Lingle, that girl what lives in the big house next t\u2019the Baptist church? Well, her daddy called us to fetch a dead coon out from under the porch. T\u2019weren\u2019t but a minute an\u2019 I had that kritter in a gunnysack an\u2019 in the back o\u2019 the truck. Becky Sue come out to pay us, on account o\u2019 her daddy was down at the hardware store. I give her a big grin, an\u2019 she grinned right back. Didn\u2019t run off ner nothin\u2019, so\u2019s I figgered I\u2019d ask her iffen she\u2019d like to go down to Jolene\u2019s fer a milkshake.\u201d\n\n\u201cAnd what\u2019d Becky say?\u201d\n\n\u201cWell, she \u2018llowed as how she had to warsh her hair, so she couldn\u2019t go. City women does that, don\u2019t they? Warsh their hair a lot, I mean?\u201d\n\n\u201cYes, they do. Jenny washes hers about every other night.\u201d\n\n\u201cWell, good. I\u2019uz thinking she\u2019d turned me down even though I warshed up real good. Next time I see her, I\u2019m gonna ask her agin.\u201d\n\n\u201cWell, you do that, Jimmy, and let me know how it turns out.\u201d\n\n\u201cYep, I sure will. Oh, hey. I\u2019m gonna git edgicated some more.\u201d\n\n\u201cYeah? You don\u2019t say.\u201d\n\n\u201cYep. Mamma said you couldn\u2019t never have too much edgicashun. I got to figgerin\u2019 that girls might like me better iffen I had me another diploma, so I went and signed up.\u201d\n\n\u201cWhere you gonna go?\u201d\n\n\u201cSee, that\u2019s the best part. I don\u2019t have to go nowhere. Cyrus and me, we\u2019uz hauling trash out t\u2019the dump fer Mrs. Westing, an\u2019 I found me a box plum full o\u2019 her husband\u2019s huntin\u2019 magazines. They was this ad in the back of one of \u2018em \u2018bout larnin' to be a taxydermist.\u201d I sent \u2018em a letter an\u2019 they sent me back the papers. Got my first lesson in the mail today. It\u2019s all \u2018bout skinning critters so\u2019s ya can stuff \u2018em so\u2019s they look right. That\u2019s what a taxydermist does, ya know. Stuffs critters an\u2019 fish so\u2019s folks can hang \u2018em up er sit \u2018em on tables and such. Didn\u2019t larn much from that\u2019n though. Daddy teached me how to skin critters when I\u2019uz six, an\u2019 it\u2019s \u2018bout the same. Th\u2019 next lesson is on tanning hides. Taxydermists have to know how to do that, too.\u201d\n\nJimmy grinned every time he said \u201ctaxydermist\u201d. I imagined he\u2019d worked on that word for a while before he got it down pat.\n\n\u201cWell, you\u2019ll probably do all right with that, Jimmy. There\u2019s no taxidermists closer than Johnson City, and that\u2019s twenty miles away.\u201d\n\n\u201cYeah, that\u2019s what I figgered. Ain\u2019t nobody would drive all that way when they got one right here in Buck Lick.\u201d\n\nOver the next few months, I didn\u2019t see much of Jimmy. I supposed he was busy studying his correspondence course in taxidermy whenever he wasn\u2019t working for Cyrus. Once in a while, they\u2019d drive down Main Street with the big tank and pump they used to clean out septic tanks, so I knew he was all right. It was a little worrying, though. Jimmy usually talked to me at least a couple times a week.\n\nI hoped he\u2019d be successful, but I wasn\u2019t holding my breath. Hunting and fishing is almost a lifestyle for a lot of the men in Tuckahoe County. Many of their wives grew up in families where hunting and fishing helped make ends meet, so they\u2019d learned to hunt and fish, too. A lot of these homes had at least one deer head on the wall. Some of them had so many mounted deer, fish, birds, and other animals they looked like museums. All the sportsmen in town swore by the taxidermists in Johnson City. \n\nThings were pretty quiet for a while, until Gloria called me again. She claimed there were strange odors coming from Jimmy\u2019s trailer. I drove out to find out what Jimmy had going on.\n\n\u201cThe lesson said I had to practice. I got some coons and possums from Daddy, but he skinned \u2018em all wrong. Then I figgered out somethin\u2019 I could practice on. I\u2019m gittin\u2019 better all the time. Come look.\u201d\n\nWell, Jimmy was right. In fact, the boy was pretty good. I thought Mrs. Andrew\u2019s Siamese tomcat looked almost like he was ready to jump off his oak branch. Lucille had wondered why Felix didn\u2019t come home, and had asked me to keep an eye out for him. Now I knew why I hadn\u2019t seen any stray cats in the alley behind Jolene\u2019s for a while.\n\n\u201cUh, Jimmy. These are pretty good, but I wouldn\u2019t show \u2018em to anybody just yet. You don\u2019t want people to see what you can do until it\u2019s just right. In fact, if I were you, I\u2019d take \u2018em out in the woods and bury \u2018em before you open up for business. Some people\u2026, well, they wouldn\u2019t think you were much of a taxidermist if all you\u2019d worked on were cats. They want to see deer heads and ducks that look like they\u2019re flying and such. You need some of that stuff to show \u2018em.\u201d",
        "Deer season rolled around and I spent a few mornings in my tree stand with my bow. Yeah, I\u2019m one of those guys I told you about. My dad took me on my first deer hunt when I was ten, and except for a couple years with Uncle Sam, I\u2019ve hunted every season since then. Yeah, I have a couple of deer mounts in the family room, too. Well, actually, there are six, but each one is special in some way. So was the buck I killed on the third morning. Jenny had threatened to make me live in the garage if I brought home another mount, but this buck had the biggest rack I\u2019d ever shot. It seemed a shame not to have him hanging with the others. \n\nJimmy was at the hardware store when I brought the buck through town. My intention was to drive on over to Johnson City to Tyler\u2019s and let them skin it out. I\u2019d keep the meat and Jake would make a nice full shoulder mount for me. I hadn\u2019t counted on Jimmy being around.\n\n\u201cGolly, Sheriff, that\u2019s the biggest buck I ever seen. Gonna get \u2018im stuffed?\u201d\n\n\u201cWell, yeah. I was thinking about it.\u201d \n\nI knew what was coming next, and I knew I couldn\u2019t say no. My heart sank a little, but if it turned out bad, I could always mount the antlers on a nice walnut plank. Jenny\u2019d probably like that better anyway.\n\nIt was a month before Jimmy called me to say the buck was done. I drove over to his trailer that afternoon hoping it wasn\u2019t too bad. I didn\u2019t know what I\u2019d say if it was.\n\nWell, I didn\u2019t know what to say for a while, but not because the buck looked bad. It was just really hard to believe. You could almost hear that buck snort and paw the ground. Jake, over in Johnson City, was good. Everybody said so. Jimmy was an artist. \n\nAll mounts are touched-up here and there because the natural skin color of the animal changes during the tanning process. All mounts are made over some sort of form and the taxidermist uses stuffing material to fill out the shape of muscles and fat the animal would have when alive. The skill in stuffing and painting is the measure of the taxidermist. The rest is pretty much a careful skinning technique and the right tanning bath. Jimmy grew up in the woods of Chelsea Ridge and had probably seen more deer than all the hunters in Tuckahoe County put together. He\u2019d put his memories of all those deer into my buck. Every line and every muscle was exactly as I\u2019d seen them that morning. \n\n\u201cPurty good, ain\u2019t it\u201d\u201d\n\n\u201cDamn, Jimmy. It\u2019s not just good. It\u2019s perfect.\u201d\n\nJimmy just said \u201cThanks, I thought he turned out real nice fer my first \u2018un\u201d. I paid him what I\u2019d have paid Jake and took the buck to my office. I figured I\u2019d let Jenny see it there before I tried to talk her into letting me bring it home. She\u2019s a great little woman, but once she sets her mind to something, I have the very devil of a time changing it.\n\nSince every hunter in the county had heard about my buck, they all came to my office to see it. They usually asked where I had it done, and just laughed when I told them about Jimmy. I showed the Mayor the little tag Jimmy had pasted on the back. It said \u201cJimmy Joe Jackson, Taxidermist, Buck Lick, Tennessee.\u201d\n\n\u201cWell, I\u2019d never have believed it of the boy. Did a real good job on my septic tank last fall, but I figured that\u2019s about all he was good for.\u201d\n\n\u201cTry him out if you don\u2019t believe me.\u201d\n\nWell, Dwight did just that with a pair of geese he shot the next weekend. He brought them in for me to see before he took them home.\n\n\u201cDon\u2019t they look like they\u2019re ready to take off? Never seen any geese that looked so real. Not a feather out of place. Know what else? He didn\u2019t charge me any more than Jake would have.\u201d\n\nWell, by the end of that winter, Jimmy had done about a dozen deer mounts and a whole passel of ducks and geese. Word was getting around fast. He had hunters from Johnson City bringing their game to him. Gloria even brought in her favorite rooster when he died. Strange woman, that Gloria. When the spring season opened, he started getting turkeys. Jimmy was doing so much business he resigned his position with Cyrus and rented the old bait shop down at the landing.\n\nIt was one morning along about then that I happened to be in Jolene\u2019s diner on official business. Jolene served meals to any of the county residents who happened to be residing in the jail, and I had to renew her contract. I walked in and sat down on a round stool at the counter. Out of the corner of my eye, I saw a waitress back at a table of farmers. I knew that would have to be Martha, but she looked thinner and I was going to have to tell her that when she came for my order. The fresh pie in the glass case on the counter caught my interest, and I decided I wasn\u2019t in any big hurry. I was making up my mind between blueberry and peach when I heard a voice that wasn\u2019t Martha\u2019s.\n\n\u201cWhat kin I git fer you, Sheriff?\u201d\n\nThe woman who stood beside me was not Martha, not by a long shot. Martha\u2019s about thirty-five, and kinda pretty even if she is a little chunky. This girl looked to be about twenty, and I caught a flash of long blonde hair and a kind of plain looking face. It was only a flash, because the bulging front of her waitress uniform jerked my eyes right smack dab down there to her red, plastic nametag. Her name was Lucy Jean and her figure was fascinating. Once I managed to tear my eyes away from her bust, I saw she had this tight little butt, and a little narrow waist and\u2026, well, as Jenny said when we went to Jolene\u2019s for lunch the next week, it was a wonder the girl could sit up by herself. Her uniform had a definite problem getting around those breasts. The collar gaped open all the way down to her bra because there wasn\u2019t enough material to button it up any farther.\n\n\u201cOh\u2026, yeah\u2026, uh\u2026, I\u2019ll\u2026, uh\u2026, I\u2019ll have a cup of coffee and piece of blueberry pie.\n\nLucy Jean smiled and walked behind the counter to get a cup. She moved like a female cat in heat. I was getting kinda hot myself.\n\n\u201cWell, whatcha think of Lucy Jean?\u201d Jolene giggled at me when I turned around. \u201cAw, hell, I don\u2019t even have to ask. I seen that same look on every man\u2019s face that\u2019s come in here this morning. She\u2019s my niece, from over at Bald Crossing. Martha got herself pregnant again and quit last week. Don\u2019t know what she\u2019s gonna do with another one.\u201d Jolene chuckled. \u201cYou\u2019d think after five she an\u2019 Tommy\u2019d uv figgered out what causes it. Anyway, Lucy needed a job, so I said for her to come over to Buck Lick \u2018till Martha comes back.\u201d\n\n\u201cI think your business is gonna get a lot better, that\u2019s what I think.\u201d\n\n\u201cYeah, maybe. I kinda feel sorry for her. From the neck down she\u2019s got it all and then some, but the poor girl\u2019s as plain as a mud fence. I was kinda hoping she\u2019d meet some guy and git married before now, but once they get past them knockers, they just keep on a walkin\u2019. Lucy\u2019s pretty smart, too, if they\u2019d just take the time to git to know her. Ya know, they say there\u2019s somebody for everybody. Maybe if I can get her to put on some makeup or something, it\u2019d help. Think so?\u201d\n\nI said it might. I figured Jolene was an expert in makeup and hair stuff because she always looked pretty nice in a spray-painted sort of way, but I wasn\u2019t sure she could do much for Lucy Jean.\n\nWell, I was right about Jolene\u2019s business. Pretty soon, every man within ten miles came in about every day for a cup of coffee and some pie or cobbler, and they usually stayed for a second cup. It was most likely Lucy\u2019s little short uniforms and the way she bent over when she poured their coffee. I was there the first day Jimmy saw her. \n\nSince Jimmy\u2019d been making money from his taxidermy business, he\u2019d taken to having lunch at Jolene\u2019s. He walked in the door at eleven-thirty and started toward his favorite stool at the counter. He\u2019d have made it, too, if Lucy Jean hadn\u2019t walked in front of him on her way to a table with three plates stacked on her arm. Jimmy took one long look and tripped over a chair leg. He reached for something to catch himself, and since she was the closest thing around, he grabbed Lucy Jean\u2019s shoulder. The three plates flew up in the air, Jimmy kept falling, and Lucy Jean landed right on top of him with her chest in his face. Two of the plates hit the floor with a crash. The third landed in Harold Jeffers' lap. He didn\u2019t seem to notice for a minute or so. Lucy\u2019s uniform had ridden up her little round butt and old Harold was staring at her black lace panties.\n\nI jumped off my stool and rushed over to help her up. Lucy Jean wasn\u2019t very big except for the part of her that was plastered all over Jimmy\u2019s head, but those breasts had to be smothering him. I lifted her up by the waist and sat her on the floor. She smoothed the uniform back down as I helped Jimmy to his feet. He was all eyeballs when he stammered out an apology.\n\n\u201cG - Golly, Ma\u2019am, I - I\u2019m awful sorry \u2018bout that. Guess I\u2019m clumsy as a cow today, er somethin\u2019. I\u2019ll pay for them plates an\u2019 everthin\u2019.\u201d\n\nLucy Jean\u2019s eyes got all moony and she had this really funny smile on her face.\n\n\u201cAw, that\u2019s all right. It wasn\u2019t yer fault ya tripped. Aunt Jolene won\u2019t wantcha to pay fer anythin\u2019. Are you OK?\u201d\n\n\u201cYes Ma\u2019am, I reckon I am. I don\u2019t hurt nowhere ner nothin.\u201d\n\nLucy Jean took him by the arm and led him over to a table.\n\n\u201cNow you sit right here while I get Aunt Jolene to cook them folks some more food. Then I got to go clean up this mess, but I\u2019ll be right back. You think about whatcha want while I\u2019m gone, OK?\u201d\n\nI went back to finish my hamburger and watched Lucy Jean flutter all around Jimmy like a mother hen with only one chick. When I left, she was filling his glass with some fresh sweet tea. She bent over and gave him a straight look down the front of her uniform. Jimmy just sat there with his mouth open. I could understand how he felt. Every girl he\u2019d met lately had run the other way until Lucy Jean. She was doing her best to make him feel comfortable. The poor guy just didn\u2019t know what to do. It was only natural that he\u2019d come to me for help, and he did the next day.\n\n\u201cSheriff, iffen I was to git me a girlfriend, how\u2019d I go \u2018bout asking her fer a date?\u2019\n\n\u201cWell, Jimmy, you just go up to her and ask, that\u2019s all, just like you did with Becky Sue.\u201d\n\n\u201cAw, that was just askin\u2019 her fer a milkshake, not fer a real date. What should I say?\u201d\n\n\u201cWell, where would you want to take her? \n\n\u201cI dunno. Where\u2019d ya take yer missus when ya was dating her?\u201d\n\n\u201cOh, we went out to eat, or went to a movie. Sometimes we just went for a walk and then watched television.\u201d\n\n\u201cMebbe I\u2019d take \u2018er fer a walk down t\u2019the park by the river then.\u201d\n\n\u201cOK, then you say you like to walk in the park and ask her if she\u2019d like to come with you sometime. If she says yes, then you pick a day.\u201d\n\n\u201cThat\u2019s all? I thoughtcha hadda be all romantic and take \u2018em flowers and stuff.\u201d\n\n\u201cThe flowers are a nice touch. Women love to get flowers. As for getting romantic, that usually comes later, when you\u2019re out on the date and all by yourself.\u201d\n\n\u201cThat\u2019s when I\u2019m s'posed ta kiss \u2018er, right?\u201d\n\n\u201cI really wouldn\u2019t do that on the first date. Most girls don\u2019t like it. They want to get to know you some first and see if they like you. Mostly, you just talk on the first date.\u201d\n\n\u201cWhat should I talk about?\u201d\n\n\u201cJust start talking. Ask her what does she like to do, what\u2019s her favorite song, things like that. Say, you got a particular girl in mind?\u201d\n\nJimmy looked at the ground, twisted one shoe, then looked up at me and grinned.\n\n\u201cYeah. That Lucy Jean what works down at the diner. She\u2019s awful purty, don\u2019cha think?\u201d\n\nIt looked like Jolene had been right about there being somebody for everybody.\n\n\u201cWell, now that you mention it, I guess she is at that.\u201d\n\nI wished Jimmy luck and he went back to his shop. That Saturday night, I saw them walking down by the river when I made my rounds. They seemed pretty happy. It looked like Jimmy had washed up his overalls and shirt, and Lucy Jean had on a pretty cotton dress that was strained to the breaking point. Jimmy waved when I drove by. I saw them holding hands in my rear-view mirror.\n\nJimmy mounted fish all summer long. I thought Harley\u2019s bass turned out real nice. Jimmy put a brim just inside the big largemouth\u2019s jaws, like it was eating it, and it looked really natural. The more Jimmy did, the better he got. Squirrel season came and the mayor\u2019s office soon sported a couple climbing up a section of oak branch Jimmy had cut up on the ridge. I didn\u2019t see him much anymore. There were lights in his trailer most nights when I drove by, and the old sedan Lucy Jean drove was sometimes parked outside. I thought of knocking on the door just to say \u201cHey\u201d, but I figured when Jimmy wanted to talk some more, he\u2019d find me.\n\nBy mid-October, they were somewhat of an item around town. It appeared things were getting pretty serious. Jolene told me Lucy Jean had taken to going over to Jimmy\u2019s shop or his trailer every night after work. \n\n\u201cIt\u2019s like Jimmy\u2019s a big magnet and just draws her over there. She comes home smelling like God knows what with this really odd look on her face. You sure Jimmy\u2019s all right? I mean, he wouldn\u2019t\u2026, do anything to Lucy Jean, would he?\u201d\n\n\u201cJolene, Maude taught him right. He won\u2019t do anything that Lucy Jean doesn\u2019t want him to.\u201d\n\n\u201cWell, that\u2019s what I\u2019m afraid of. She\u2019s been floating around here for a month like she\u2019s in love er somethin\u2019, and the apple don\u2019t fall far from the tree. Her mamma\u2019s my sister, remember? Cindy Mae was kinda wild when she was young. Matter of fact, she still is. I just don\u2019t want Lucy Jean to get herself in trouble, if you know what I mean.\u201d\n\nI looked at Jolene\u2019s massive mane of red hair and the tight fit of her short uniform and how many buttons she\u2019d left undone. If Jolene thought her sister was wild, Cindy Mae must have been a real hit with the boys in Bald Crossing.\n\n\u201cI\u2019ll go talk to Jimmy if you want, but they\u2019re both old enough to take care of themselves.\u201d\n\n\u201cYeah, I know that. I just worry, that\u2019s all. Cindy\u2019d never forgive me if anything happened. She, uh\u2026, well, let\u2019s just say it was a good thing she married Jack when she did. Another month and she\u2019d never have fit in her wedding dress. They\u2019re still together, so I guess it worked out all right, but I know she doesn\u2019t want Lucy Jean to end up that way.\u201d\n\nThe next Sunday was one of those great Tennessee fall days. The sun warmed everything up just enough it was almost like having summer again. Gloria sounded frantic when she called me that afternoon.\n\n\u201cSheriff, you have simply got to come out and stop them this very instant. They\u2019re indecent.\u201d\n\n\u201cWhoa, Gloria, who\u2019s indecent.\u201d\n\n\u201cThat Jimmy Joe and Jolene\u2019s niece. They\u2019re out in the crick together.\u201d\n\n\u201cOK, just sit tight and don\u2019t do anything. I\u2019ll be right out.\u201d\n\nI took me only a couple of minutes to get to her house. Gloria was fuming and her face was flushed. \n\n\u201cIt\u2019s bad enough that I have to look at him traipsing around naked, but she\u2019s just\u2026, just\u2026, well, she ought to be ashamed of herself, thats what.\u201d\n\nI followed Gloria up to her attic and looked out the window.\n\n\u201cGloria, I told you if you didn\u2019t come up here, you wouldn\u2019t have to look. I don\u2019t see much anyway. They\u2019re too far away.\u201d\n\n\u201cHere, use these. Then you\u2019ll see what I\u2019m talking about.\u201d\n\nShe handed me a brand-new pair of binoculars. She was right. Jimmy and Lucy Jean were skinny-dipping in the crick. The leaves were mostly gone from the red oak, but I still couldn\u2019t see much because of the branches. I could tell they were both naked, though.\n\n\u201cSee, Sheriff. It\u2019s like I said, isn\u2019t it? They\u2019re indecent. Now, go arrest \u2018em.\u201d\n\n\u201cJust a minute, Gloria. I have to get some evidence before I can do that.\u201d\n\nThey\u2019d just walked out of the crick to a blanket in Jimmy\u2019s back yard. I couldn\u2019t think of any law they were breaking. There\u2019s a city ordinance against public nudity, but Jimmy and Lucy Jean were on private property and pretty much hidden from anybody but Gloria and her binoculars. Jimmy\u2019s trailer was outside the city limits anyway.\n\n\u201cSheriff! Are you going to arrest them or not?\u201d\n\n\u201cGloria, please go downstairs and wait. I haven\u2019t seen them do anything wrong yet. Just as soon as they do, I promise I\u2019ll take \u2018em to jail.\u201d\n\nI pulled up an old chair and sat down. I figured I might as well be comfortable while I investigated. Besides, I didn\u2019t want Gloria to see what was happening to the front of my pants. That blanket was centered up in a big gap between the oak\u2019s knarled branches, and I could see everything Jimmy and Lucy were doing. Gloria huffed out a \u201cWell, I never\u201d, and went down the steps. I thought she was probably telling the truth about that.\n\nNow, I didn\u2019t have any intention of arresting them, but I had to look like I was doing Sheriff stuff, didn\u2019t I? I mean, they weren\u2019t hurting anybody. From where I stood, I mean sat, they were a long ways from hurting anything. Both of them were grinning from ear to ear as they walked hand in hand from the crick.\n\nI had a pretty fair idea of what Lucy Jean probably looked like under that waitress uniform. I\u2019ll admit I\u2019d somewhat underestimated the proportions, but all in all, she was about what I\u2019d expected. The way she\u2019d trimmed her bush into a heart was really cute. I\u2019d have to tell Jenny about that. I wasn\u2019t going to tell her about Jimmy. I\u2019d never seen such a root on a man. Jimmy was hung like a young mule. I was impressed\u2026, and a little envious.\n\nIt was obvious that Lucy Jean was also impressed. They\u2019d no sooner hit the blanket than she grabbed that half-hard shaft and started stroking away. Jimmy got even bigger. Lucy had this little sparkle in her eyes right before she leaned over and kissed him. Her big breasts sort of flowed all over Jimmy\u2019s chest and he started rubbing and squeezing them as they kissed. I\u2019m pretty sure Lucy liked that, because she threw a leg over Jimmy\u2019s and started rubbing herself slowly against his thigh.\n\nThere was no doubt about it. Jolene had a lot of reason to worry. Now, I consider my Jenny to be a pretty hot little number between the sheets. Sometimes she gets going and we don\u2019t stop until she can\u2019t get her little deputy to stand at attention any more. Oh, that\u2019s what Jenny calls him \u2013 her little deputy. You know, Sheriff \u2013 deputy\u2026? The deputy works for the Sheriff\u2026? Well\u2026, Jenny thinks it cute. Anyway, Lucy Jean looked like she was hot enough to blister the paint off a tobacco barn, and she was doing her best to get Jimmy that way. He wasn\u2019t having any trouble keeping up, either. He was already straight as a pick handle before she sucked him into her mouth. I had to give the girl credit for trying. Lucy got about half of his cock in there before she had to stop.\n\nShe seemed to pause for a moment, and then I saw what was happening. Lucy gently took Jimmy\u2019s hand and pushed it down between her thighs. Evidently I wasn\u2019t the only teacher Jimmy had and it looked like he was a quick learner. Before long, Lucy was bobbing up and down at both ends. I don\u2019t rightly know how she managed that, but she did. Her hips just started pumping away at Jimmy\u2019s fingers at the same time her head pumped away at his cock. Gloria\u2019s yell up the stairs shattered my concentration.\n\n\u201cSheriff, have you seen enough yet? Are you going to go arrest them now?\u201d\n\nDamn. Just when things were getting interesting.\n\n\u201cJust about, Gloria, I\u2019ll be down in a mi\u2026.\u201c\n\nLucy had just straddled Jimmy and was in the process of lowering herself over his big cock. I knew it was wrong, but damn, I had to see this.\n\n\u201cWhat was that, Sheriff? You got all garbled there at the end.\u201d\n\nI was thinking that she ought to have somebody get her all garbled once in a while. Then maybe the old biddy\u2019d be a little easier to get along with.\n\n\u201cI said I\u2019ll be down in just a few more minutes.\u201d\n\n\u201cOK.\u201d\n\nLucy Jean had to lean over until her breasts flattened out on Jimmy\u2019s chest to get him started in. To tell you the truth, I was kind of worried. Lucy wasn\u2019t a big woman, and I didn\u2019t know where she was going to put all of Jimmy. She took a deep breath, and pushed back very slowly. Jimmy was grinning like a possum eating grapes. He just laid there as Lucy slipped him inside her, a half-inch at a time. Hell, I\u2019d have been grinning, too, if I was built like that. Lucy finally sat up, smiled at Jimmy, and pulled his hands to her nipples. Jimmy had done this before, too. He started making little circles around them with his fingertips. I saw Lucy close her eyes and shiver.",
        "She leaned forward until her nipples were brushing across Jimmy\u2019s face. He latched onto one with his mouth and his cheeks sunk in when he sucked on it. Lucy pushed back again and pulled the nipple out of his mouth, but not before Jimmy stretched it out a ways. I saw Lucy\u2019s mouth open. If I\u2019d been close enough, I know I\u2019d have heard the little moan.\n\nLucy had evidently gotten everything straightened out, so to speak, because she started riding Jimmy\u2019s cock. She had to work at it, but it looked like she was enjoying her work. Lucy was pushing back and forth with a smile on her face, and Jimmy was doing his best to catch one of her bobbing nipples with each stroke she made. When he got one between his lips, Lucy would make this little shuddering motion. Jenny did that sometimes, so I knew what Jimmy was feeling. He lifted his ass off the blanket and pushed his cock all the way into her then, just like I did to Jenny. Lucy would shudder again, and kind of sag into her arms.\n\nJimmy had a hell of a lot more staying power than I would have had, and he showed as much talent at this job as he did at taxidermy. I watched Lucy throw her head back and groan twice before Jimmy finally lost it. He reached down and pulled her up off his cock. Lucy reached behind her butt and stroked Jimmy\u2019s shaft until he made a couple of lurches and shot all over her back. She laid down on top of him and gave him a big wet kiss. After a few minutes, they got up and jumped back in the crick. I stayed put for about five minutes more so I could walk downstairs without embarrassing myself and scaring the daylights out of Gloria.\n\n\u201cWell, Gloria, I\u2019m sorry, but I can\u2019t arrest \u2018em. They didn\u2019t do anything against the law.\u201d\n\n\u201cNot against the law? But they\u2026, and, and they were naked\u2026, and, and I\u2019m sure they were\u2026, well, they spread out that blanket for some reason. You don\u2019t think for a minute they were going to have a picnic out there, do you?\u201d\n\nI didn\u2019t tell her it looked like quite a picnic to me. It wasn\u2019t exactly what Gloria would have considered a picnic, and I didn\u2019t think she\u2019d have appreciated the joke.\n\n\u201cNow, Gloria, it doesn\u2019t matter what they did or were going to do. They were in Jimmy\u2019s back yard, and that\u2019s private property. That means they weren\u2019t doing anything any more wrong than you do when you take off your clothes at night.\u201d\n\nGloria\u2019s eyes flashed in anger. \u201cI will have you know I take off my clothes in the bathroom because there\u2019s no windows in the bathroom. I don\u2019t run around naked in front of everybody like them. I don\u2019t want anybody seeing me.\u201d\n\nI kinda doubted even her mother had ever seen Gloria naked. I kinda doubted anybody would want to either.\n\n\u2018Well, I\u2019m sorry. You\u2019re either going to have to stop watching them, or start enjoying the view.\u201d\n\n\u201cEnjoying the view? What\u2026?\u201d Gloria shook her head at me. \u201cOh, you just wait until the next election.\u201d\n\nIt\u2019s a good thing Jenny was in a good mood that night. If she hadn\u2019t been, I might have thought about going over to Lizzie\u2019s. Well, not really, but I\u2019d have had to do something.\n\nThat Thanksgiving, Jimmy sent off to Johnson City and got Lucy a ring. He told me it was special because the stone was this special gemstone called Diamonite, and you couldn\u2019t get that just anywhere. Lucy didn\u2019t care. She showed it to everybody who came into Jolene\u2019s. Jolene was happy too, but she didn\u2019t really relax until a few months after they got married. \n\nMartha came back from having her baby, a little girl, by the way, and Lucy Jean is working at Jimmy\u2019s shop now. They started up the bait store again, that summer. Now you can buy nightcrawlers and minnows without going all the way to Johnson City. As Jimmy said before, \u201cWhy would folks drive all that way when they got one right here?\u201d I don\u2019t know if it\u2019s because the bait shop is right down by the river, or because Lucy Jean has to lean over so far to dip the minnows out of the tank, but they\u2019re doing a lot of business. Jimmy\u2019s also doing a lot of \u201ccritter stuffin\u2019\u201d as he calls it. He gets customers from as far away as Knoxville. People recognize real talent when they see it. \n\nI know Lucy Jean appreciates his talents, both of them. Jolene told me the other day Jimmy must be pretty good at stuffing things besides dead animals. It seems Lucy Jean told her she\u2019s in a family way. Evidently she told her about Jimmy\u2019s other special talent, too. Jolene got this dreamy look on her face. She said she wished she\u2019d taken the time to get to know Jimmy a little better before Lucy Jean came to Buck Lick.\n\nWell, Jimmy just mounted my eighth buck. Jenny\u2019s really going to kill me this time, but this one is special. He has this one tine that\u2019s bent backwards, and another one that looks like it was broken off in a fight. I think a special buck deserves some special treatment by the talented taxidermist of Tuckahoe County. Don\u2019t you?\n\n***********************************\n\nThanks for reading this work. Please vote to indicate how much you enjoyed it, and leave comments if you can spare the time. Your votes and feedback are the only way I will know how much you enjoyed my effort, and furnish the only means to improve my writing. \n\nThanks again, \n\nRonde."
    ],
    "authorname": "ronde",
    "tags": [
        "taxidermist",
        "jolene told",
        "girls buck",
        "turned real",
        "house weeks",
        "stool counter",
        "joe jackson",
        "looked jolene",
        "hunting fishing",
        "moved town"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-talented-taxidermist"
}