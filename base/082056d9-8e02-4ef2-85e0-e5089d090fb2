{
    "title": "On a Slippery Slope Ch. 03",
    "pages": [
        "Brian does not make an appearance on Wednesday or Thursday. I assume he is working at one of the other companies nearby. I see him briefly on Friday and suggest we go to happy hour with the rest of the crowd from the office. He declines with what seems like sincere regret. He has to work at the computer store tonight and most of the weekend.\n\nSaturday's mail is a major disappointment. There is nothing from my stalker. I am bummed out and feel a bit depressed for the rest of the weekend, but I recover a little when I realize we are likely to be together the following weekend. I have a nice dinner with my parents and Angie on Sunday.\n\nBy Wednesday, I am feeling uneasy. I have not seen Brian once this week. In desperation, I pull the computer cable trick on my desktop unit and place a trouble call. Twenty minutes later a man I have never seen before enters my office.\n\n\"Where's Brian?\" I ask, barely being civil to the guy.\n\n\"He's at the other end of the state,\" he replies. \"His Guard unit was activated yesterday because of the flooding down south. What's your problem?\"\n\n\"My what?\"\n\n\"Your computer problem.\"\n\n\"I don't know. That's why I called you guys,\" I respond testily. I vaguely recall hearing something about flooding on the news a day or so ago but I don't remember anything about the National Guard being needed.\n\nThe guy pokes around for a couple of minutes, finds the disconnected cables, and reconnects them.\n\n\"You're all set,\" he says with a smile.\n\n\"Thanks. When will Brian be back?\" I ask, smiling back at him, trying to be nice.\n\n\"Beats me,\" he says, grabbing his tool kit and heading out the door.\n\nFuck! Fuck! Fuck! Now I am really upset.\n\nI glue myself to the TV when I get home. The flooding is awful. How could this happen and I'm only vaguely aware of it?\n\n\"Because Carla, you are a self-absorbed little tramp,\" I reply to myself out loud, \"that's how.\"\n\nI'm ashamed of myself. People only a hundred miles away have lost everything and all I can think about is my stalker tying me up and fucking me again. But my sympathy doesn't last long. I feel sorrier for myself than I do for them. I realize I have become a shallow twit. I don't care.\n\nSuddenly I panic. What if I get instructions in the mail this week? I'll do whatever they say because I need another encounter with my stalker, but it will mean that Brian isn't the one. I worry about this for the rest of the week.\n\nMercifully, Saturday night arrives. Mail delivery for the week ended today with no contact from my stalker. Brian is still in the running.\n\nOn Sunday, I beg off dinner with my parents but discover that there is a god. The governor announces that the Guard will be standing down the next day. Brian should be home Monday night and back at work on Tuesday.\n\nI don't see Brian until Wednesday. We have coffee together in the lunchroom. He looks tired. I hope it's because he's been working late on whatever restraint device or fucking machine he is going to use on me next. Then I feel guilty. I am so selfish.\n\nThe week passes without any contact from my stalker. I am circling the drain now. Maybe I did something during our last encounter that put him off. Was it because I had to use the safe word? I can't believe that's the case; he made love to me afterward. Maybe Brian isn't my stalker after all and something has happened to the real one.\n\nDinner with my family and Angie doesn't cheer me up.\n\nAnother week goes by and I decide that Brian is avoiding me. I only see him twice in the hallway as he moves from job to job.\n\nI no longer eat at regular times. If my body tells me it needs fuel, I scrounge up something unless it seems like too much trouble.\n\nI've stopped making up my bed in the morning. I no longer watch the videos; they are too depressing since I now believe I'll never again be fucked by my stalker.\n\nIt seems very likely that I no longer have a stalker. My toys lie unused in the drawer by my bed. I have abandoned the website that started it all. Reading about other people's bondage adventures is now a real downer.\n\nAll my friends at work, and my boss, know something is wrong. I am deluged with offers of help if I'll just tell them about my problem. I tell them I don't want to talk about it.\n\nI'd love to talk about it, particularly to Angie who is very solicitous, but I can't. How on earth can I explain what I've been doing and how depressed I am that the dangerous game appears to have ended?\n\nI tell my parents that I don't feel well and won't be coming for dinner.\n\nAnother week goes by. I see little of Brian and I refuse all invitations. I have started parking my car in a different part of my apartment complex. I don't want any of my friends to see the car, think I'm home, and start banging on my door. Ditto for my family.\n\nOnce again I beg off from dinner with my parents. My mother is getting suspicious.\n\nOn Thursday of the following week Angie, whose office is just down the hall, marches into my office late in the afternoon and shuts the door.\n\n\"Okay, girlfriend. This has to stop,\" she announces, her arms folded under her breasts. I burst into tears and she comes around to my side of the desk to pull my face against her stomach. I cry for a long time while she strokes my hair.\n\n\"Tell me,\" she says softly.\n\n\"I can't,\" I sob. \"I have to work this thing out by myself. I'm really okay.\"\n\n\"Okay, my ass,\" she counters. \"But you aren't going to talk about it, are you?\"\n\n\"No.\"\n\nAngie takes a deep breath and says something that immediately grabs my attention.\n\n\"I love you, but you need to get a grip on yourself and you need a shower,\" she announces as she kisses the top of my head before leaving the office.\n\nI rush into the ladies room and sniff my underarms. She's right and I am mortified. I raise one arm and look into the mirror. Stubble, and lots of it. I reach down and find a similar condition on my legs. I can't remember when I shaved last. I am disgusted with myself.\n\nI look at my watch. Only fifteen minutes until quitting time. I hide in my office. At five o'clock on the dot I grab my purse, leave the office, and immediately run into my boss.\n\n\"Carla, give me a minute,\" she says as she gestures for me to follow her into her office.\n\n\"Everyone is worried about you. I want you to take tomorrow off and work on whatever it is that's making you this way. I need the old Carla back. Take Monday off too if need be. Don't come back to work until you can bring the old Carla with you.\"\n\nShe smiles as she says this to soften the words, but I know she means business. If I try to speak, I'll cry so I just nod my head and beat a hasty retreat.\n\nWhen I get to my car I see a couple of shriveled McDonald's fries in the driver's seat and an old dried up paper coffee cup in the holder. How long have they been there? There is more debris on the passenger side. \n\nAs expected, there is nothing of interest in my mail. I enter my apartment and look around. A pig lives here. There are dirty dishes in my sink. Some are days old. When I look more closely I see paper plates in the mix. Paper plates in my sink?\n\nEmpty and half-empty Solo cups are everywhere. I see an empty gin bottle on my coffee table and find another in my trash, which is overflowing. Dust lies thickly on every surface.\n\nAngie got my attention. I take a shower, shave my legs and underarms, and wash my hair twice. I pull on shorts and a tee shirt and begin to clean. It takes two trips to the dumpster to get rid of all the debris.\n\nI vacuum, dust, change my sheets, and do the dishes. Fortunately I have a small apartment. At nine o'clock I am done and I take another shower. I'm starving. I put on a fresh outfit and head for Taco Bell. Not particularly healthy, but I can't do much better at this time of night. Tomorrow I'll do my laundry and shop for groceries.\n\nI sleep like a baby for the first time in weeks and wake up refreshed. There is nothing in the house to eat so I go to Dunkin Donuts. I nearly faint from pleasure when I bite into a chocolate-covered treat.\n\nI go home and haul my dirty sheets and clothing down to the laundry room in the basement of my building. While the machine is doing its thing, I make out a grocery list. I throw everything in the dryer and go back up stairs. I am filled with resolve because I have made a decision. I am going to my stalker's house tonight uninvited. If he's there, I'll confront him. If he isn't I'll go home and force myself to forget about him.\n\nThe day goes by quickly. I treat myself to a nice lunch and then head for the grocery store. I need just about everything so I buy just about everything. After putting it all away, I pull out the dress and shoes I wore to his house. They are in good condition and ready to go.\n\nI eat a good dinner, grateful that I am once again capable of preparing something with nutritional value. At six o'clock I get dressed. A bra and panties are included in my ensemble this time around. I drive to his house and park directly in front, no longer caring who sees me or my car.\n\nMarching up to the front door, I ring the doorbell. Nothing happens. I ring it again and wait a good thirty seconds. Just as I turn to leave, the door opens and I'm confronted with an elderly woman, somewhere in her seventies I guess. I am stunned.\n\n\"Yes dear? May I help you?\" she asks.\n\n\"I was lo...looking for the owner,\" I stammer.\n\n\"I'm Edna Wilson. I'm the owner. I've lived here for almost forty years.\"\n\n\"I'm so sorry to have bothered you,\" I exclaim, looking around to see if I have the wrong house. \"I was hoping to find...\"\n\n\"Connor, I'll bet. Come inside sweetie, it's still hot out there. Let me fix you a nice glass of iced tea.\"\n\nNot knowing what else to do, and not having a clue what I'll find, I step into the entryway. A quick upward glance tells me the entryway speaker and the camera are gone. When she leads me back to her kitchen I peer into both bondage rooms. They are nicely furnished. The ring bolt in the ceiling of the first room is gone and repairs have been made. All the cameras, pencil spots, and speakers are missing.\n\nMrs. Wilson gestures for me to take a seat at the table that once held voice disguising equipment, the monitor, and the strange little console. I am freaked out. I start to hyperventilate.\n\n\"Oh my, what's wrong dear?\" she asks.\n\n\"I just feel a little faint for some reason,\" I respond with a quiver in my voice. \"I'll be okay when I have a bit of that tea.\"\n\nMrs. Wilson sets a glass of tea, a sugar bowl, and a plate of lemon slices in front of me. With a glass of her own, she joins me at the table.\n\n\"Okay now,\" she begins. \"How can I help you? It must have something to do with Connor.\"\n\nI need a story and I need it quickly. I improvise.\n\n\"My parents were killed in a car crash when I was little. There was no other family so my brother and I went into foster care. We were separated soon after. I've been looking for him ever since. My search eventually led me to this neighborhood and, I thought, to this house,\" I say, feeling guilty with two healthy parents less than five miles away.\n\n\"Well, honey,\" she says, \"I'm not sure how much help I can give you. I don't think Connor is his real name.\"\n\n\"You don't?\" I respond, trying not to sound too hopeful.\n\n\"Lucille, that's my sister who lives on the west coast, had a serious operation at the end of February. We knew that rehab was going to take several months, so I decided to rent the place and go help her. I ran an ad in the paper and Connor called me right away. I rented the house to him for quite a bit less than it was worth in exchange for him taking care of the place, cutting the grass, and working through a list of maintenance items I gave him.\"\n\nI nod my head to encourage her, but I don't have a clue how any of this is relevant.\n\n\"Connor paid me for three months up front with a check, but the name on the check wasn't Connor.\" Suddenly she now has my undivided attention.\n\n\"What was the name?\" I ask her, my heart in my throat.\n\n\"I don't remember. It was months ago and the check didn't bounce so I sort of stopped thinking about it.\"\n\nI must have looked crestfallen because Mrs. Wilson patted me on the arm.\n\n\"But I can find out,\" she offers.\n\n\"If it's not too much trouble, I'd like that,\" I respond, my voice thick with emotion.\n\n\"Hang on a minute,\" she says, getting up from the table and leaving the room. A minute later she returns with an accordion folder.\n\n\"Mr. Wilson, rest his soul, taught me to make copies of everything in a business transaction. I'm sure I made a copy of the check before I took it to the bank.\"\n\nAfter searching around in the folder, she produces a sheet of paper and hands it over to me. My heart nearly stops. The name on the check is Brian K. Devlin and an address here in town is printed below his name. I nearly faint from the feelings that surge through my body.\n\n\"How long have you been back?\" I ask her, my voice shaking from the adrenaline.\n\n\"Two weeks. Lucille recovered more quickly than we thought, so I came home a bit early.\" She answers, \"Are you okay, dear?\"\n\n\"I'm all right,\" I say. \"I'm just a little shocked. Brian is my brother's name. May I have a copy of this made? I'll bring the original right back to you.\" Brian didn't lose interest at all. He simply didn't have time to set up the third encounter and then restore Mrs. Wilson's house to its original condition before she returned home. I am elated.\n\n\"We can make the copy right here, easy as pie. Mr. Wilson bought one of those all-in-one machines a year or so before he passed. I'll be right back.\" A minute later she comes back with a copy and hands it to me.\n\n\"Oh thank you, thank you so much,\" I tell her sincerely.\n\n\"Well, I hope it helps. Do you think he's your brother?\"\n\n\"I don't know. If he got adopted, he has a different last name than we had as little kids. Maybe Devlin is the right one. I'll just have to look him up and see what happens.\" I marvel at how easily the lies slip out of my mouth. And I need to get out of here before she starts to ask hard questions. I finish my tea in a gulp and rise from the table.\n\nMrs, Wilson seems satisfied with my story because she doesn't press me for more information as she walks me to her door. She pats me on the arm as I turn to leave.\n\n\"Good luck dear,\" she calls. \"I hope everything works out for you.\"\n\n\"Not half as much as I do,\" I mutter under my breath when I am far enough away.\n\nI drive back to my apartment and sit staring at the name and address of my stalker. Now that I have the information, I'm not exactly sure what to do with it. I decide to do a drive-by as soon as it gets dark.\n\nI plug his address into my GPS unit and soon find myself parked across the street from a nice single story house, considerably larger than Mrs. Wilson's. I do not see a Camaro but there is a motorcycle parked nearby. I decide not to hang around. He could be anywhere, so I return home.\n\nI don't know what to do next, so I drag out my laptop and both DVDs. I give myself two sensational orgasms while I watch Brian fuck me, and then fall asleep almost immediately.\n\nOn Sunday I join my family for dinner. When I walk in the house, my father jumps up with both fists in the air.\n\n\"She lives! She lives!\" he yells. I stick my tongue out at him and go help mom in the kitchen. She tells me that Angie won't be able to make it tonight. I am disappointed.\n\nI get home by early evening and mix a martini. As I sip the concoction, I ponder my situation. All of a sudden I know the truth, but Brian no longer has a place for us to continue the game.\n\nI doubt that we will develop a real relationship, and I can no longer handle the stress this secret has put me through. The death spiral I was in nearly cost me my job. After a second martini, I decide that the best thing to do is confront him and end this business once and for all.\n\n****\n\nI am back at work on Monday morning feeling bright and chipper. Angie lays the back of her hand across my forehead as though checking for a fever.\n\n\"What the hell happened to you? You look wonderful!\" she exclaims.\n\n\"You got my attention on Thursday. Thank you. I also got my problem worked out.\" Well, most of it, I think to myself.\n\n\"Good. I'm glad you're back. I missed you,\" she says and then abruptly changes direction. \"You still aren't going to tell me about it, are you?\"\n\n\"Nope.\" I wish I could tell her, but I can't. At least not until I have everything fully resolved.\n\n\"I didn't think so,\" she says, giving me a hug before heading off to her office. I go the other way, looking for my boss.\n\n\"The old Carla is reporting for duty,\" I announce to her with a salute.\n\n\"Good. Get to work,\" she orders but then breaks into a broad grin. \"Welcome back.\"\n\nMonday and Tuesday are a blur of activity. On Wednesday, Brian is waiting for me in the lunchroom when I arrive at work.\n\n\"Will you go to dinner with me Friday night,\" he asks the second I cross the threshold into the room.\n\nI've been waiting for this guy to ask me out for an eternity, but I decide to go forward with my plan.\n\n\"I have a better idea. Why don't we go out for a drink tonight; sort of get to know each other a little. If that goes well, we can talk about what happens next. How about Hot Spot right after work?\" I suggest, naming a local watering hole that is close by.\n\nBrian looks a little put off, but he recovers quickly. \"Works for me. I'll be there.\"\n\nI spend the day working hard, but I still have time to think about the odd turn of events. Mrs. Wilson is back in her house, so our bondage days are over. But, because of her, I confirm that Brian is my stalker. And now he wants to take me out on a date.\n\nI get to the pub a little early and snag a small semi-circular booth in the back that will give us some privacy. Brian comes in moments later and I wave to get his attention. He slides into the booth beside me and I catch the faint scent of his aftershave. It is the same as my stalker. More confirmation.\n\nBrian signals for a server. She takes our order, a cosmopolitan for me and scotch for him. When our drinks arrive and the server departs, I pull the copy of his check to Mrs. Wilson out of my purse and slide it over to him. He stares down at the piece of paper for a long time, looks back up at me, and takes a couple of deep breaths.\n\n\"Are you going to call the cops?\" he finally asks.\n\n\"Why on earth would I do that? I was a willing participant and I've been old enough to vote for years. If you hadn't set it up the way you did, it would not have happened. I would never have agreed to something like that up front. You had to trick me. How did you do it, by the way?\"\n\n\"I had trouble recovering some of your files after I fixed your laptop. One of the corrupted files was in a 'Recipe' folder. I found some interesting stuff in there. When I read the stories, I had a pretty good idea of your sexual interests. I saw an opportunity and I took it. I installed a piece of malware that allows me to snoop through your computer whenever it's powered up. Not very ethical and very possibly illegal.\"\n\n\"Don't worry about that,\" I reply \"I have to admit I enjoyed myself immensely.\"\n\n\"I'm glad,\" he responds. \"Did Mrs. Wilson tell you about Connor?\"\n\n\"She mentioned the name, but it made no sense to me. She thought it was odd that your check had a different name than she expected but, since it didn't bounce, she didn't give it much thought.\n\n\"Connor is my twin brother; my monoamniotic identical twin brother.\"\n\n\"What?\"\n\n\"Same amniotic sac. Identical twins can't get any closer than that,\" he answers. \"And we share everything. Always have.\"\n\n\"What did you just say?\" I ask, my voice beginning to shake as something tells me I'm in for a huge shock.\n\n\"Connor is my identical twin brother,\" Brian reiterates. \"That check is the only mistake we made. Connor answered the ad in the paper using his own name, but I'm the one who wrote out the check.\"",
        "I look him in the eye for a long time and then asked the obvious question, my voice choked with emotion.\n\n\"Who have I been with?\"\n\n\"Both of us. Both times.\"\n\nI sit there, stunned into silence for a long time. Brian waits me out.\n\n\"I think you have some explaining to do,\" I finally manage to say, my voice breaking up.\n\n\"When I saw what was on your computer, I decided to set something up if I could, but I didn't know exactly what to do. I had Connor read the stories and we talked it over. Renting a place was his idea. Neutral ground. The next day he found Mrs. Wilson's ad. He had an appointment the following day so I went to look at the house and wrote her a check on my account immediately. The place was perfect. It took us a couple of days after she left to move all her furniture into the back rooms and set up the cameras and stuff. Preparing the restraints featured in the first story took a little more time. Then we started sending you the cards and keeping our fingers crossed.\"\n\n\"Go on,\" I say after a lengthy pause.\n\n\"When you showed up at the house the first time, we knew you were the type to push the envelope. That night was the most incredible experience of our lives. The second time you came calling really blew our minds. We ran out of time before we could finish up with the third story because Mrs. Wilson decided to come back early.\"\n\n\"I need to know who did what to me.\"\n\n\"Well, this is a little awkward, but...\"\n\n\"I need to know!\" I interrupt, my voice becoming shrill.\n\n\"...Connor took care of the oral and digital honors at our first meeting. I fucked you at the end while he operated the cameras and jerked off in the kitchen,\" he tells me. The old shock effect\n\nI suddenly have a mental picture of the waste basket with its crumpled paper towel and I now understand the purpose of the strange little console; camera controls.\n\n\"The second time around, I did the hand work. Connor did you with the butt plug in place until you used the safe word. Then he took you into the other room. He was concerned and wanted to take care of you. It was my turn to operate the cameras and jerk off.\"\n\n\"The two of you used me!\" I say harshly.\n\n\"And you wanted to be used,\" he continues. \"You just told me you would never have gone along with it if you knew from the beginning there would be two of us, but it worked out well in the end for everyone, don't you think?\"\n\n\"At the end of the day, I guess it did. I just don't like to be manipulated,\" I answer after a lengthy pause.\n\n\"Of course you do. The whole bondage thing is based on manipulation and control.\"\n\n\"Well, maybe you're right, but it's all water under the bridge now,\" I tell him. \"It's over. Mrs. Wilson's place is no longer available. And I think we can forget about dinner on Friday night. I can't start a relationship with you, especially under the circumstances. I'd never know which twin I was with.\"\n\n\"I want you to know that I'm very disappointed,\" he says sincerely, \"I have been attracted to you since the first time I saw you. So has Connor.\"\n\n\"What?\" I ask, alarm bells going off in my head again. \"Have I met him? Other than at Mrs. Wilson's I mean.\"\n\n\"Of course. Connor and I work together. We own the business. I do computer hardware and software stuff. He specializes in security.\"\n\n\"But you're the only one who's been in our offices. Your name is on your shirt,\" I point out, now completely puzzled.\n\n\"My name is the only name that has been seen in your offices. When Connor is working there, he wears one of my shirts. We service other companies where it's the other way around. It's just a little joke we play on everyone. No one knows that twins are involved except for the two other guys who work for us. And they're cousins. We have no other family, so except for the National Guard unit we belong to, a few close friends, and our neighbors, very few people know us as twins.\"\n\n\"So who have I been having coffee with? I ask, already certain I know the answer.\n\n\"Both of us,\" he replies.\n\n\"Which one of you got rid of the drunk in the bar that time?\"\n\n\"That was Connor.\" \n\n\"I don't fucking believe this,\" I breathe as I wipe a hand across my face. \"How do I know you're actually Brian?\"\n\n\"Technically, you don't, except that I'm telling you the truth.\"\n\n\"If both of you are attracted to me, how did you end up being the one who asked me out on a date and not Connor?\"\n\n\"I won the coin toss,\" Brian says with a grin, \"but he's still in the running.\"\n\n\"What?\"\n\n\"I only won the privilege of asking you out. We would have flipped again to see who actually got to take you to dinner.\"\n\n\"This is the craziest goddamn thing I've ever heard of. I'm outta here,\" I say, shaking my head and grabbing my purse.\n\n\"So two for the price of one doesn't interest you?\"\n\n\"Not even a little bit.\"\n\n\"Okay, but consider this. Connor and I are preparing a new place, much better than Mrs. Wilson's house.\"\n\n\"Are you deaf? I just said I wasn't interested in anything involving the two of you.\"\n\n\"We would both love to have you join us again, but that isn't the only thing I was going to suggest,\" he continues. \"I was thinking of forming a foursome.\"\n\n\"That's it. I'm gone!\" I exclaim, loudly enough to draw the attention of the bartender as I slide out of the booth. \"I don't want any part of this!\"\n\n\"Not even with Angie?\" He asks with a hint of a smile.\n\nI don't know how many surprises I can handle in one day. I sink slowly back into the booth and put my head in my hands. When I came in here I thought I had the upper hand.\n\n\"Is she already involved with you two,\" I am finally able to ask.\n\n\"Not yet. That's where you come in.\"\n\n\"Me?\"\n\n\"If you can convince her to join us, we can start the whole thing over again when Connor and I are finished with the new place. We should be done in less than a month.\"\n\n\"You are out of your fucking mind. There is no way I'm dragging my best friend into this cesspool. I'm going home,\" I say as I leave the booth for the second time and head for the door.\n\n\"Just think about it,\" he calls after me, \"You might be doing your best friend a huge favor. And you probably ought to let her be the one to decide whether or not she wants to play.\"\n\nI give him the finger over my shoulder as I push my way through the door and out onto the sidewalk.\n\nStopping at a McDonald's on the way home, I eat a cheeseburger and a coke in place of the pub food I thought I was going to enjoy for dinner. I'm not all that hungry now anyway.\n\nAfter mixing myself a cosmopolitan, I sit down to think everything over. Mostly I am just pissed off that those two dickheads made a fool out of me. But the more I think about it, I realize that no serious damage has been done. My pride is hurt but the fact remains that I was given the two most extraordinary sexual encounters of my life. And, if I'm honest about it, I realize that both men took very good care of me and all three of us experienced incredible pleasure. They may have been using me, but they were meeting my needs as well.\n\nI also reaffirm my conviction that I would not have joined the game if I had known up front that two men would be involved. I am basically monogamous by nature, and I would have found the idea far too outrageous. But I also know I have no regrets about what actually happened.\n\nAnother thought occurs to me. Apparently, it was Connor who made love to me at the end of my second bondage session. I don't know if it was simply because he was the one who had the opportunity, or if it was a sign that he has special feelings for me.\n\nI find it all very confusing but I make one more decision. Regardless of what happens with Angie, I am going to approach Brian/Connor and tell whomever that I want to keep playing when their new place is ready to go. I thought the game was over when I met Mrs. Wilson, but now I have an opportunity to play again and I will not pass it up.\n\nBut my biggest problem is Angie. Brian has a point about letting her make her own decision. My issue is with the notion that it's somehow my job to lure her into the game. Brian recruited me, so I see no reason why he can't deal with Angie himself.\n\nBut as soon as I finish that thought, I realize there is a big difference. I had made it plain, at least on my computer, that I was fascinated by bondage. As far as I know, Angie has no interest in anything that kinky.\n\nI wrestle with that thought for an hour or so and reach no conclusion. I decide to table the issue and drag out my laptop and the videos. I am not feeling sexy; I just want to scrutinize them very closely now that I know two different men are involved.\n\nBoth my laptop and TV have high definition screens, but they are too small for my purposes. I put everything away. I've been telling myself to buy a large flat screen TV for quite a while, but I've been putting it off. There is an appliance store a few blocks from my office that promises to deliver and set up anything they have in stock within six hours of purchase. I'll test that claim tomorrow.\n\nI have absolutely no problem sharing the two guys with Angie, but I have no idea how to broach the subject with her. I fall into a fitful sleep worrying about that.\n\nI am no closer to a solution in the morning, but I pull the computer cable trick for the third time and place a trouble call. If I get one of the cousins, I'll scream.\n\nFifteen minutes later one of the twins arrives, the name 'Brian' sewn on his shirt.\n\n\"Which asshole did I get?\" I ask caustically.\n\n\"Still pissed, huh?\" he asks with a smile. \"I'm Connor.\"\n\n\"Yeah, right,\" I reply, sarcasm dripping off my voice. \"Brian works hardware and software. You're the security genius.\"\n\n\"This is a simple job. Besides, we know you pull this stunt whenever you want to see Brian. If I weren't such a confident guy, my feelings would be hurt,\" he says with a wide grin, and I'm forced to admit to myself that these guys are irrepressible.\n\n\"Now what do you really want?\"\n\nI take a deep breath, and then respond.\n\n\"I...I want back in the game when the new place is ready. And I will talk to Angie. She probably won't go for it because she has more sense than I have. But if she's interested, I'll let you know. Don't hold your breath.\"\n\nConnor, or whoever the fuck he is, seems genuinely pleased. He reaches out to take my hand, gives me a quick kiss on the cheek, and turns to go. Just as he reaches the door, he turns once again to face me.\n\n\"You know that Brian and I will protect you, and Angie too if she joins us. We will never put you in harm's way.\"\n\n\"I know that,\" I say with a deep sigh. \"Now beat it. I have work to do.\"\n\nI do a pretty good job of concentrating on my work until lunchtime when I race down to the appliance store and buy a very large flat screen TV with a home theater system and arrange to meet their delivery guy at my apartment right after work. Then I go back to the office and hunt down Angie. I have decided to take a direct approach.\n\n\"Tomorrow's Friday...\" I begin.\n\n\"Brilliant observation,\" she interrupts with her patented radiant smile.\n\n\"...and I thought it would be nice if you came over to my place about six thirty. I'll fix dinner and we can spend the evening together,\" I finish.\n\n\"I'd really like that. It has been a while since we just relaxed in each other's company,\" she replies, looking very pleased. \"I miss that. I'll bring the wine, white or red?\"\n\n\"White.\"\n\n\"White it is.\"\n\n\"And bring a nightie,\" I add after a long pause, \"just in case you don't feel like making the trip home late at night. Better yet, if you have no other plans, why don't you stay at my place for the weekend until time for dinner at Mom and Dad's?\"\n\n\"A sleepover! We haven't done that in ages. I'd love to. What a wonderful idea.\"\n\n\"Great! See you tomorrow,\" I tell her with a wide smile as I head back to my office.\n\n****\n\nThe guy from the appliance store shows up five minutes after I get home. An hour later he's gone and I am the proud owner of a device that should help me figure out some way to tell the twins apart.\n\nI skip my usual early evening cocktail and start to prepare dinner. I don't want my vision or my thoughts blurred when I review the videos.\n\nIt's seven-thirty by the time I clean up the dinner mess, which gives me enough time to run through each video twice before bedtime. I settle in front of the huge TV and hit the remote to watch my first bondage encounter, supposedly beginning with Connor. \n\nUnfortunately, his body seems flawless; no blemishes of any kind that I can see. Brian is apparently featured in the second half of the video. So I study him closely. \n\nI simply cannot detect any difference between the two men. They are superb specimens but they are indistinguishable from one another. Even their large, stiff cocks look like products that came off an assembly line.\n\nI have another problem; I am unable to ignore the sex. After an hour of watching the twins fuck me in high definition splendor with surround sound, I'm so hot I could melt lead. A vibrating bullet seems like a good idea, so I head back to the bedroom to gather my equipment and change into a slinky little nightgown. At the last moment, I grab my favorite dildo just in case.\n\nIt occurs to me that my new home theater system will encourage a lot of recreational masturbation in the living room. Fortunately, my couch is a queen-size sleep sofa, so I unfold it and settle in to watch the show while I scratch my itch.\n\nI cum the first time with the bullet stimulating my clit, watching Brian fuck me with my legs captured in the slings. When I recover, I change videos and insert the vibrating dildo deep into my pussy, use the bullet on my clit, and watch Connor fuck me from behind as I lay draped across the arch. Then I watch him make love to me in the original bondage room. When it's over I am too exhausted to drag myself into the bedroom. I just barely manage to turn everything off and then spend the night right where I am.\n\n****\n\nMy apartment is small enough that the alarm in my bedroom awakens me on time. I go through my usual morning routine and arrive at the office just as Angie shows up.\n\n\"When you come over tonight, bring your favorite vibrator, or dildo, or whatever you're using these days. I guarantee you'll need it,\" I say with a mischievous grin, knowing she's in the middle of a long dry spell between boyfriends. I have decided to show her the videos after I explain everything.\n\nAngie just stares at me, looking like a beautiful owl for a few moments, and then her face breaks out in a wide grin.\n\nAngie and I started having sleepovers almost as soon as we met and we always slept in the same bed. That's where we learned to masturbate, lying side by side on our stomachs, our hands under our pubic mounds, stimulating our pussies with our fingers, and wiggling our little asses.\n\nWe didn't know about orgasms, but it was fun and it felt good. Eventually, Angie pushed the boundaries a little and slipped over the edge, surprising both of us when she screamed into her pillow. Panting, she told me to keep going and I followed suit a couple of minutes later. After that, we couldn't keep our hands off our pussies.\n\nLater on, when we began having sex with guys, we continued to have sleepovers, either at my place or hers, but we stopped masturbating together. It has been many years since we've had an orgasm in each other's presence, but I know it will happen again tonight.\n\n\"Ooooooo, you naughty girl! We haven't done anything like that in eons. What's the occasion?\" she asks, still smiling from ear to ear.\n\n\"I am going to tell you a story and then I'm going to show you something. When I'm done, you'll be climbing the walls,\" I say, returning her smile with one of equal wattage.\"\n\n\"Must be something really spicy,\" she says, raising an eyebrow at me.\n\n\"You have no idea,\" I reply. \"Lunch today?\"\n\n\"Can't, the boss is sending me to a meeting across town, but I'll be at your place at six-thirty sharp.\"\n\n****\n\nAngie arrives on time wearing a cute little sundress that shows a little cleavage and a lot of leg. As always, she looks beautiful. She has luxurious long dark hair that she allows to cascade down to the middle of her back. I can certainly understand the twin's interest in her. I hand her a cosmopolitan and lead her into my living room. She spots the new TV and home theater system immediately and sets her small suitcase down beside the sofa.\n\n\"Nice. When did you get that?\"\n\n\"Yesterday. It figures prominently in my plans for later tonight.\"\n\n\"Okay, what's going on? I won't be able to stand the suspense,\" she says with a mock frown as she takes a sip of her drink.\n\n\"You'll just have to wait. Come talk to me while I fix dinner.\"\n\nI prepare a nice meal of poached salmon, asparagus, and risotto while we work on our cocktails. By seven thirty we are seated at the table. The sauvignon blanc she brought compliments everything perfectly. For dessert we split a large piece of tiramisu I picked up on the way home from work.\n\n\"Would you like some coffee?\" I ask.\n\n\"No. And I have run out of patience. I want to hear that story. Right now,\" she demands, folding her arms under her perfect breasts.\n\n\"Okay,\" I say, laughing at her intensity. \"Let me pour us some more wine and I'll get started. It's a long tale.\"\n\nI start by telling her of my fascination with bondage. She is surprised, and then surprises me by confessing to a similar interest. I pull out my laptop to show her the website and she's immediately hooked.\n\n\"Holy shit!\" I've never seen anything like this!\" she exclaims, after I give her a quick tour of the site. I let her spend a half hour skimming stories while I clean up the dinner mess. She spends most of her time in the bondage category.\n\nThen I show her my 'Recipes' folder, which I've expanded to ten stories, hoping my stalker will subject me to reenactments of each one. She is enthralled.\n\n\"Aw, come on!\" she protests a little while later when I wrestle the computer away from her. She is already highly aroused.\n\n\"This is just background,\" I reply, holding the laptop over my head. \"It's time for you to hear the rest of the story.\"\n\nI begin by telling her how the bondage section of the site had quickly become an obsession and how frantic I was when my hard drive crashed. I'm not specific about where I took it to be fixed in case she is aware that Brian moonlights at the computer store.\n\nWhen I tell her about the first note, she is stunned. I get up to retrieve the envelope from my underwear drawer.\n\n\"Weren't you frightened?\" she asks with a stricken look on her face when I return and show her all the notes and the copies of the three stories.\n\n\"At first I thought it was a joke. Then I got pissed. I didn't get concerned until I received the first story copy. I had saved it only a couple of days before. That's when I knew someone was snooping though my computer in real time.\"\n\n\"That slime ball repair guy put something on your computer!\" she declared. \"Or you were targeted by a hacker. Did you call Tim?\"\n\n\"No. I didn't want to involve the police, particularly my brother. But mostly I wanted to see what would happen next. I removed all but the three best stories from my laptop, including the one I got in the mail, and waited. In short order, I received copies of the other two.\"\n\n\"Didn't you realize you were being stalked?\"\n\n\"Not until I got the note with the phone number. Up until that time I thought someone was playing an elaborate joke on me, just messing with my head. I bought a throwaway phone and made the call. A recorded voice told me it was time for us to take the next step, that I would receive explicit instructions in the next day's mail, and I was to follow them to the letter. As promised, they were in my mailbox the following day. That's when I realized it wasn't a joke.\"",
        "\"Oh fuck, Carla. What were the instructions?\"\n\n\"I was told to be at the address printed on the card at exactly seven the following night. I was to dress appropriately, to open the door when I arrived, and to stop in the entryway. I was also told not masturbate the night before.\"\n\n\"Oh my God! Then what?\"\n\n\"I disobeyed orders, masturbated like crazy, and tried to get some sleep. I called in sick the next morning and spent the entire day getting ready and worrying that I would prove to be inadequate somehow. I arrived at the address precisely at seven that night. It is only a short walk from here. I dressed appropriately as ordered. When I arrived, the door was unlocked. I went inside and stopped in the entryway.\"\n\n\"Goddammit Carla, didn't you realize how dangerous that was?\" she exclaims, raising her voice.\n\n\"I did, and I didn't care. I was so far over the edge that the only thing I could think about was my stalker and the things he was going to do to me.\"\n\nAngie gives me a long thoughtful look. \"Tell me about it,\" she says softly, her voice a little ragged.\n\n\"Why don't you read the three stories first? They capture most of my bondage interests and they'll give you some idea about what I was expecting.\"\n\nWhen she finishes reading fifteen minutes later, I tell my very aroused friend all of it; the hour and a half I spent being overwhelmed by the most intense sexual experience of my life. I describe in detail my second encounter and the emotional death spiral which followed when there was no more contact. I do not tell her of my quest to identify my stalker. I will do that later in the weekend.\n\n\"That must have been when I confronted you and you started crying in your office,\" she says, placing her hand on my arm.\n\n\"And you told me I needed a shower,\" I reply with a smile. \"Now go get ready for bed. Change in my bedroom and come back out here. It's show time.\"\n\nWhen Angie arrives a few minutes later, I have unfolded the sleep sofa, loaded the first DVD into the player, and put the system on pause. She is wearing a very short, very sexy blue nightie with matching panties and she's carrying a velvet bag with a drawstring. I am pretty certain I know what's inside.\n\n\"Get into bed and make yourself comfortable. I'll be back in a jiffy,\" I say.\n\nWhen I return, I am wearing the little dress I wore to my two bondage encounters and nothing else. I too, am carrying a cloth bag of goodies. I crawl into bed beside her. We prop ourselves up against the sofa back and I hit the play button.\n\nFor the next few minutes Angie sits transfixed, making small sounds deep in her throat, one hand covering her mouth and the other idly stroking her breasts. I am fascinated watching her respond to what is happening to me in the video.\n\nWhen Connor lowers his face between my legs suspended in the slings, she moans loudly and slips a hand into her panties. When he finger fucks me, she copies his hand movements as much as possible, fingering her pussy and crying out softly. She ignores me, completely focused on the screen in front of us.\n\nWatching Angie gets me very aroused. I lift the hem of my dress to expose my pussy and slip a finger inside to gather lubrication before circling my clit.\n\nAt the point in the video where Brian begins fucking me, Angie retrieves a small vibrator from her bag, draws her legs back, and slips the instrument into her panties. I hear a faint buzzing sound followed by an involuntary cry of pleasure. She cums within seconds, throwing her head back against the sofa as her legs quiver in concert with the rhythmic contractions of her pussy.\n\nI stop playing with myself and pause the video to allow her time to rest and to ease my own fever-pitched arousal. I don't want to cum yet.\n\n\"Oh fuck,\" she finally breathes, \"turn that back on.\"\n\nI'll never know for sure what causes me to do what I do next. Acting purely on impulse, I roll over onto my knees facing Angie. Sliding my hands up the outside of her thighs, I hook my fingers in the waistband of her panties and start easing them down over her legs. With a heavy lidded look, she raises her hips, giving me permission to proceed.\n\n\"I've seen this movie,\" I say, hitting the resume button. \"I know how it ends.\"\n\nAngie draws her knees back and opens her legs wide. I stretch out in front of her and bury my face between her thighs. I take my time, licking the insides of her thighs and brushing the tip of my tongue lightly up and over the top of her pubic mound. I kiss her landing strip and then run my tongue back down the other side. She moans and rocks her pelvis upward, encouraging me to do more. I comply with her wishes and ease my tongue into her slit. She cries out sharply.\n\nFor the next few minutes, Angie's cries compete with the televised Carla as both women start their climb towards thunderous orgasms. Brian is expertly fucking me at this point in the show. I am careful to pay just enough attention to Angie's clit to keep her near the edge, but not enough to push her over the top. I want her to cum with the Carla in the video.\n\nMy timing is perfect. I hear my surround sound voice screaming in release just as Angie lets out a piercing wail and her body starts to shake violently against mine. I hold her tightly and keep tonguing her clit until I am certain she has reached the peak of her climax and tumbled over the far side, then I pull back and confine myself to kissing the outside of her pussy and her inner thighs.\n\nAngie has gone completely limp. I am concerned that she may have fainted. I look up to find her looking at me with a hint of a smile on her lips. I move up beside her and gather her into my arms. Both of us remain silent for several minutes, locked in each other's embrace.\n\nFinally, she pulls back, places both of her hands on the sides of my face, and looks me directly in the eye.\n\n\"Thank you for that. I've wanted you to do that to me for years and I've wanted to do the same thing to you. I know there is another video, but let's save that for tomorrow. Now lie back and allow me to return the favor.\"\n\nI arrange my body on the mattress and unbutton my dress so she has easy access. At the first flick of her tongue near my clit, I cry out. I am so aroused that I spiral upwards and cum in what must be record time, my hands clamped over my mouth to avoid sharing my pleasurable delirium with the neighbors. She brings me down slowly, gently stroking my pussy with her fingers and tongue. I let out a ragged sigh and drape a forearm across my eyes. Angie takes my other hand and kisses the fingertips.\n\nI recover in a few minutes and Angie asks me if I'd like a nightcap. I do, and she returns soon with two more cosmos. We sit facing each other on the mattress with our legs tucked under and sip our drinks.\n\n\"So I guess we're lesbians now,\" she says with a serious look on her face. I laugh so hard I nearly spill my drink.\n\n\"I don't think so,\" I respond when I recover. \"At best we're bi-sexual and I'm not even sure about that. I have never been attracted to any woman but you. And I'll bet neither of us is willing to give up a nice stiff cock in favor of what we just did, as wonderful as it was.\"\n\n\"I wish we had done that years ago. I certainly thought about having sex with you often enough. Think of all the time we've lost,\" she says a little sadly.\n\n\"Think of all the catching up we get to do instead,\" I counter with a smile. \"When we finish our drinks, we are going into my bedroom to make love. There are several things I want to do to you.\"\n\nAngie gives me a radiant smile and finishes hers in a single gulp. I quickly finish mine and remove the glass from her hand.\n\nFor the next two hours we do everything imaginable to each other, employing lips, tongues, fingers, vibrators, and dildos to drive each other wild time and time again. Orgasms are plentiful and intense. Finally, completely exhausted, we fall asleep in each other's arms. My last conscious thought is that I have just had a sexual encounter that rivals those I shared with the twins. In just a few short weeks I have experienced sex as I never dreamed possible. I have never felt so content.\n\n****\n\nTo be continued...\n\nI encourage readers to vote and comment. Constructive thoughts, suggestions, and criticisms are always appreciated."
    ],
    "authorname": "mindventure",
    "tags": [
        "identification",
        "confrontation",
        "shock",
        "masturbation",
        "girl-on-girl"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/on-a-slippery-slope-ch-03"
}