{
    "title": "Trust Ch. 06",
    "pages": [
        "Iona honestly felt that she had done nothing wrong. Regardless, she did feel a tremendous amount of guilt eating away at her. Not only had she seen this man of darkness a total of three times now, she also was relieved that he had managed to not lose his life. She had no idea why he was still in the vicinity. Theirs was more or less just a meeting of the eyes, for her a simple fascination\u2014a witnessed anomaly of sorts. However, that was something she sensed Kieren did not believe.\n\nKieren said nothing on the unusual and longer route they took to return, other than a sharp, \"watch your step\", or \"hold on\". He would occasionally take her arm. Frustrated by the awkwardness of her progress, he lifted her completely off the ground when necessary. But, he released her quickly. She spent most of the time looking at the expanse of his back and trying to avoid tripping with nothing but the moon to light her step.\n\nShe said nothing, not that she could. Keeping up with Kieren as they covered ground that he easily maneuvered left her struggling to breathe. Besides, the scene-Kieren rising from the water as he did, the way he held the two-edged weapon over his head, hurling it through the air. And, the way the water glittered, so calm at first and then full of life, was a thing of beauty and yet beyond belief. It was the Kieren the Skalds sat around the fire at night and told stories about. It played itself in slowed motion over and over in her mind. First, she saw the eyes of the Bl\u00e5menn, glowing with intensity against the almost blueness of his skin and focused so completely on her. Then Kieren, the flexed muscles of his arms and shoulders glistening in what light of the day was left, fierce with the intent of taking a life.\n\nIt made no sense. Had Kieren and the man had an exchange she had not witnessed? Why did both Kieren and Russ respond so to him? \n\nWith this new route, once the trees cleared, they approached the village by way of what Iona called Kieren's wall. It was not an actual wall, but gave her that impression. The separate dwellings were so closely packed together that they could be considered a wall aligning itself and meeting an ark shaped rampart that ran to the cliffs that hung over the bay. On one side of the wall was a stretched strip of land with random huts and homes made from turf, housing a few of Kieren's men. The village itself lay on the other side. Nature left no access from the sea and Kieren's wall limited any access from the forest. General public traffic was smoothly diverted from the grouping even within the village. It had a defensive feel to it that Iona was only recently beginning to fully understand. \n\nWhat belonged to Kieren bore his mark and stylings. These particular dwellings were no different. Kieren's buildings were constructed with fine timber, with low bowed sides meeting rectangle roofs that reminded you of capsized longboats. At the height of the inverted V, on the ends, the wood crossed in a way that looked like a projecting animal. In Kieren's case, the animal had a definite focal feature. It was a crude and menacing bird. Not many of the typical village homes, even that of artisans, compared to the main Longhouse and its immediate, surrounding smaller longhouses or what Iona referred to as the wall. \n\nWhat bore Kieren's stylings consisted of a mixture of accommodations for his people-his men, their families, and a few craftsmen (mainly notable metal workers). There were also structures strictly built for storage. Quite by accident, Iona had discovered that an underground web of passageways connected most of them.\n\nIona was sure that the main and largest Longhouse, which although housing Kieren's rooms was more or less most dedicated to the assembling and feeding of his favored men, was also connected to the passages. That would make sense. But, Iona just had not found it yet. She was also aware that the hidden network was not common knowledge to the villagers.\n\nThere was a definite, organized grid to the layout of the village too; she was certain of it. It was subtle in that it did not interfere with the relaxed feeling of general village life, with its families and workers buying and selling. But, it was not so subtle in that it had a purpose. Even the placement of where animals were collected was suspicious to Iona.\n\nTo the west of the village was the natural harbor. That allowed access from the sea, but only the invited dare enter. It was where workshops and such were close to the waterfront. Stone jetties with ships being repaired by building workers were there. Metal workers were there as well. As one moved further inland, routes led to the hills, dense woods or to the village. Beyond the woods, and in the hills, Iona assumed there were outlaying farmsteads and tributaries to the river. The river eventually just led back to the sea. \n\nThe entire village, as well as the bay itself, could be easily shut down, controlled by Kieren's men if need be. Iona felt that what was disguised as a thriving, colorful town and welcoming trading center was mainly a training camp and protected fortress belonging to none other than Kieren himself.\n\nThe village had its original and common name, as did the bay. But no one referred to either by such. They referred to the village as The Eagle's Head. And the bay, she had heard its name called the Bay of Fire. \n\nIt was rare that she, even with what status she held, left or entered the village by any other means than the common public entry way-which mainly led to the market square and then sprouted off. It was the only open and free way to leave and enter the village. But she was with Kieren now. He had avoided that route when leaving and was using an even more unknown route to return.\n\nSo, she was not surprised when they entered a passageway which led to what appeared to be just a simple home. He spoke briefly to one of his men. Iona was cordial to what appeared to be the man's woman. The woman looked scared to death of her, but offered ale. It was no one she recognized. Then, Iona was separated from Kieren. He did not bother to look in her direction when he departed.\n\nKieren was in a different mode and Iona realized it best to be quiet and submit to his orders. Luckily, she soon found herself on familiar ground, being led by three men to the Longhouse-and to Brenna, whom she desperately needed the guidance of.\n\nEverything was quite active and still busy in the village. The streets were lit up. Music could be heard. Children still ran playing and waving long thin sticks with glowing tips while being shushed away from the fires. \n\nThe village came alive in a different way with the presence of Kieren. Iona had thought that during the day, but night brought on another type of unique festive mood. Normal for the season was the increase in traders and barterers, and all that they attracted, as summer began to come to its end. With it, was the infusion of more men and what came to entertain them. Everything combined and flowed into the streets. Laughing, singing and drinking abounded. Men were rowdy, women too, in their celebratory spirit. Life with Kieren made them all wealthy. Men wore their decorations and woman wore their gifts. \n\nVendors sold food late into the night. Wagons of drink were constantly being unloaded. Houses of various sizes and distances from the street with their long axes and rough angles opened their doors. The huge wooden double doors to the Longhouse were left wide open too and men filled the main area. They drank mead and spoke boisterously to one another as women danced on top of tables.\n\nNo one paid any attention to Iona's return or the closeness of her guards. She knew exactly where they were leading her, but broke off to go her own way. She discovered that the choice was not hers to make. When she attempted to ignore them and go to find Brenna, she was corrected and told that she was to be taken to Kieren's quarters and kept there till he returned. \n\nShe tried to call out to Brenna in hopes that anyone would hear. It resulted in her being lifted off the ground with one of their hands over her mouth. The men were discreet, to say the least. And, she was politely deposited in Kieren's main sitting room. \n\nNo longer was she in the mood for submission. She was livid. Iona threw herself in an overstuffed lounging chair and waited. \n\n\"Kieren feels that you may have some knowledge of the Moor.\"\n\nRuss loudly placed a wooden chair in front of her and straddled it in one swift movement. Having been on the verge of falling asleep, it startled Iona. Russ gave her a moment to gather herself. His words were not accusatory, just a matter of fact. He did not appear angry, but rather overly relaxed. \n\nThis left Iona suspicious. \n\n\"Then why am I talking to you and not Kieren?\" she countered, returning back to a more comfortable position and showing him her back.\n\n\"Oh,\" Russ began. His tone was teasing and he was undeterred by her temperament. \"Am I now no longer good enough company?\"\n\n\"What woman does not enjoy the attentions of Russ the Long Sword?\" Her words were animated, honey sweet and dripping with sarcasm.\n\nRuss laughed before speaking.\n\n\"With great concern for your safety, he has returned to the woods to find your dear friend, the Moor.\" \n\nShe rolled her eyes at his baiting.\n\n\"So this is how he shows concern,\" she said, turning to look at Russ, \"By sending you?\n\n\"Perhaps, my flower.\"\n\nIona huffed at the use of his pet name for her and turned her back to him again.\n\n\"You know better than most how he shows concern.\" He laughed once more. \n\nIona turned, unamused and kicked at him. Russ caught her foot and held it.\n\n\"There is no time for games here, my flower.\" He spoke more seriously, releasing her foot in a way that forced her to sit up. \"Have you encountered the Moor since that day in the square?\"\n\n\"I feel like I'm being interrogated.\"\n\n\"Now why would you feel like that?\" Russ returned.\n\nIona narrowed her eyes in offense, weighing the situation. \"This is because of you,\" she accused.\n\n\"Because of me,\" he pointed to himself and scoffed with amusement.\n\n\"You are why he mistrusts me.\"\n\n\"Time to grow up, little flower, and be fully open. This is unrelated to any closeness we may share. You must focus. He does not mistrust you. If he did you would not be here, and specifically not in his rooms. If you know anything, you must confess it. It will eventually be known. Kieren has a whiff of him now. He's not easily thwarted.\"\n\n\"A whiff of him?\" She could not believe what she was hearing. \n\n\"Does that upset you?\"\n\n\"I don't know. It depends, what exactly does Kieren smell? He is not easily thwarted from what? And please, don't leave out why?\"\n\n\"You tell me why any man would not seek to protect what is his?\" Russ spoke calmly. \"Are you not Kieren's woman?\"\n\nShe ignored his questions, which were mere attempts to draw out a reaction and therefore information. He more than anyone knew how much Kieren meant to her.\n\n\"Damned it, Iona,\" Russ was reaching his limit. \"Dealing with me is considerably easier than dealing with him at the moment. You are a wise woman. Now, have you had contact with the Moor? This is important.\"\n\n\"What do you know about him?\"\n\n\"This isn't about what I do or do not know, but you?\"\n\n\"Why?\" she demanded, getting up from the chair. \"I want answers, too.\"\n\nHe stood and placed himself directly in her face so that she could not avoid him. His voice was calm now, but his expression dangerously reminded her of Kieren. \n\n\"Do not make this into something that it is not. Have you not been cared for and protected?\"\n\nMaking an aggravated sound, she threw herself back into the chair and stubbornly folded her arms in front of her.\n\nInside, she understood the weight of the situation, but she did not want any more space or time to make matters worse between herself and Kieren. She knew that the village was to host of Thing soon, an important gathering of clan heads. She knew that the few days that she had alone with Kieren were rare and that his dealings could easily take him away from her. Also, she knew that if he did not want to talk to her or see her, she had no way of making it happen. She could possibly not see him for days or weeks if that was his choice. She could possibly not see him for months.\n\n\"If the all-important Eagle of Fire...\" she sat up and began coldly. \n\nRuss raised an eyebrow.\n\n\"Yes, I do know what they call him,\" she added. \"If The Eagle of Fire needs something from me, he must come to me.\"\n\nWith that, she set her lips and eased back into the chair as if ready for battle.\n\n\"You could have been killed today.\" Russ sat back down, having decided to use another approach. \"He's assuring your safety as you and I speak\u2014just as he has always done for you. It is what he has done since your first meeting. Is it not?\"\n\n\"You think me daft?\" she fumed. \"Not once did this Moor bear a weapon. Not when I encountered him in the square or on the side of the river. How is he of danger to me? That makes no sense.\"\n\n\"How do you know what he had or did not have at the river?\" Russ challenged.\n\n\"Because I saw him,\" she snapped, \"right before Kieren tried to murder him. Why do you assume that he desires to harm me? He's never said a word to me, not one. Why must you seek to kill him? He did nothing in the square but look upon me as I looked upon him. And you wanted a reason to end his life. You threatened a kind, innocent, old man in association with it. \n\n\"Then,\" she threw up her arms to mimic Kieren's wielding of the weapon, eyes wide, \"butt naked, Kieren seeks to kill him because he is simply standing on the opposite side of the river bed. Which, I might add, could have been pure coincidence? It seems to me that you two are the dangerous ones. Maybe it is the two of you I should protect myself from.\"\n\nAnger briefly flared across Russ' face, but then he smiled and stood up. \"I have what I need for now. Sleep well, my flower.\"\n\nIona realized that she had nothing else to tell, nor had any of her questions been answered.\n\n\"I hate you,\" she screamed in frustration a few minutes later to the empty room. \n\nShe undressed and laid in Kieren's bed. Once again, she found herself waiting.\n\nIona did not know what made her open her eyes. But she could see the outline of him in the shadows of early dawn, motionless in a chair watching his own bed. She waited a minute before sitting up, pulling her knees to her chest and wrapping her arms around them. She rested her chin on top.\n\n\"You are,\" she said quietly, \"at least, not sleeping on the floor.\"\n\nHe remained silent.\n\n\"That's a good sign,\" she added after a while.\n\nKieren finally spoke, his voice low and even. \"Do you trust me?\" \n\n\"I do,\" she whispered.\n\n\"You understand that your life may one day depend on how well you listen to me and obey my words.\"\n\n\"I do.\"\n\n\"I now put the question to you,\" he began, his voice still reserved. \"You are fully revealed to me. Do not let an attempt at falsehood come between us.\"\n\nIona waited for his next words.\n\n\"What makes him risk his life for you? He knows the house to which you belong and yet he dares to watch you still?\"\n\nIona started to ask who but thought better of it. This was no time for games. \n\n\"I do not know. I have never spoken to him.\"\n\n\"Is there something from your past that draws him?\"\n\n\"Nothing I can recall. Before that day in the market, I had never seen a man of my people. I had never even imagined one so deep in darkness.\"\n\n\"Is that what you think to be true?\" \n\nThe sudden anger that laced his words made Iona raise her head. Her chest tightened. \n\n\"Do you believe him to be of your people?\" \n\n\"He is a slave,\" she murmured mournfully, \"as I...was.\"\n\n\"He is no man's slave. And, he is not of your people. If he were thought to be a slave, he would have long since killed the one thinking himself to be his master. If unable to relieve himself of such a position, the Moor would choose death by his own hand. But we see that he is here and still alive.\"\n\nKieren sat in silence for a moment before continuing. His next words were more measured and controlled. \n\n\"Do not let the coincidence of his appearance mystify you or influence you in any way. Among his people woman are little, they own nothing and are traded as a commodity. You are not of his people.\"\n\n\"I, too, own nothing and am traded as a commodity.\"\n\nRegret overcame Iona as soon as her words fell from her lips. Despite their trueness, in her heart she knew that he did not deserve their implication. Even the air in the room seemed to shift as she watched him lower his head.\n\nWhen Kieren spoke again, his voice was low and heavily strained. \n\n\"Not by me.\"\n\nKieren had been told in advance about the Moor. And yes, the Moor was a threat. Experience and a natural sense of things confirmed this within him. Kieren's life came with its own expectations. To encounter a threat was nothing new, even if the extent of that threat was not fully known. To have someone thinking they could claim his life was nothing new. The concept itself created no fear or hesitation within him. But when it came to Iona, he was not himself and he knew it. In the woods by the river, he had experienced a new emotion, one that left him shaken. Kieren was caught between possessive anger and an unfamiliar sense of uncertainty.\n\nHe was discovering things within that he could not fully define. Some things, however, were quite simple. It was important to him that she fully understood them.\n\n\"All that is mine falls under you,\" he said.\n\n\"Iona, you own much,\" he then added, a bit defeated.\n\nIona had learned early in life not to trust everything she heard, or even trust what was sometimes seen with her own eyes. Her eyes were capable of lying to her, especially when blinded by emotions she could not pin down. She knew that the wants and needs of men shifted quickly and without much warning. Once reminded of his words, a man could easily look in her eyes and call her the liar and know she spoke the truth; or, he could not look in her eyes at all but through her as if she did not exist and simply walk away. But this man...\n\nKieren was like no other, and she did not lie when she told him that she trusted him.\n\nShe rose up from the bed and came to him. Standing naked in front of him as he sat, she smoothed back the hair from his temples.\n\nKieren's blue-grey eyes focused on her face and softened as he let his large hands spread across her bottom. He pulled her to him and rested his forehead between her breasts. \n\nTo touch him and feel his heat filled her with relief. To have him respond filled her with a sense of peace. \n\n\"I am your people,\" he said, bringing his lips to her skin. \"And, you are mine.\"\n\n\"I am fully yours, my Kieren,\" she returned.\n\nThis was what he needed from her. Iona could feel his body relax beneath her touch.\n\n\"You are much to me, Iona. Never forget this.\"\n\nWith that, his hands moved firmly up her back. She reveled in the strength of them claiming her, the feel of them on her skin, the security of it. When they lowered back down to her behind, he lifted her as he stood. Her legs wrapped around him and they kissed. Kieren's kiss demanded much and left her heady. He removed one hand and she could feel him undoing the ties of his pants. Anticipation made her body hum. When he laid her on her back, she scurried back further onto the huge bed so that she was in the center\u2014not taking her eyes off of him. She spread her legs wide and leaned back on her hands.\n\nPrior attempts to be the seductress had always ended badly or were a major source of amusement. This time he did not laugh, and his expression was one of pure animalistic passion. His eyes were wild with it as they took in her lush body and a wanton position. Her pussy already glistened for him. ",
        "Free of what he wore, he crawled up her body tasting all that he could. \n\nIona let her fingers touch the defined muscles at the tops of his shoulders as they shifted with his movement. The wildness of his hair, combined with the look in his eyes, made him look breathtakingly sensual and equally dangerous. She grabbed a hand full of it when he was directly over her and pulled his lips to hers. His glorious tool teased her, sliding up and down her weeping slit as he rocked his hips. In answer, she gripped his ass with both hands. \n\nHe smiled at her attempt to control him, still kissing her hungrily.\n\nWhen she slid one hand between them and firmly wrapped her fingers around his girth, placed the head of his swollen cock at the source of her pussy's tears and raised her hips, a pure groan of satisfaction released from Kieren's chest. \n\nIona felt deliciously naughty. She brought her legs up high. The sensation of fullness that only he could give began to overwhelm her as inch after divine inch slid home. Iona felt as if she were bursting at the seams when at long last he seated himself completely within her. \n\nFully sheathed he gazed down at her and smiled wickedly. \"You bring out the beast in me. Does that not scare you?\"\n\n\"Would it make you feel better if it did?\" Her own voice purred with the edge of a challenge.\n\nKieren warned her by sliding out of her and then back in with controlled aggressiveness, creating the most sensual of responses from her and the arching of her back. \n\n\"Sometimes,\" he continued, gently squeezing a breast and fondling a hard nipple, \"I think you purposely incite me.\"\n\n\"What of it if...\" she began but could not finish because he withdrew himself from inside her almost completely.\n\nIona's eyes went wide.\n\nKieren slid slowly back in having garnered the effect he desired. \n\nThe next sound she made was drawn from the back of her throat, with her head thrown back and her mouth open wide.\n\nThis game of delicious agony was repeated several times. Sweat was forming on Kieren's brow when he lowered his mouth to hers.\n\n\"I won't be able to stop myself once I fully let go,\" Kieren warned her, pulling back one last time. \n\nIona answered with a growl of her own, raised herself and dug her teeth into a spot at his neck. The feeling that came with him plunging into her was the only thing that caused her to let go. His response was divine and the feel of being split in two with each forceful drive deep into her left Iona in a feverish state of satisfaction. \n\nIona felt a rush of cool air against her overheated skin when he suddenly pulled out and away. Her eyes opened in time to catch the dangerous flash of his. She found herself quickly flipped on her stomach. Kieren dragged her hips up to meet his. Immediately she said no, remembering in panic the last time he had taken her from behind. But, a soothing hand on her back and tender words calmed her as he entered her pussy. He repeatedly pounded his entire length into the door of her cervix. The sound of his flushed pale skin meeting her glowing, golden body\u2014the slap of it, echoed throughout the room. Even in the dim lighting the sight of her brown skin against his excited him. \n\nKieren pulled her up so that her back was at his chest and she almost stood on her knees. Both were covered in a sheen of well-earned sweat.\n\nPlaying with an overly sensitive nipple, he groaned in her hair. \"This is where all pretense and breeding becomes nothing between a man and a woman. Are you woman enough, my Iona?\"\n\nShe had met every thrust when he took her. But the position he now took her from was brutal and left nothing hidden as to how much of a man he truly was. The pain was exquisite. It left her panting for breath with her eyes squeezed tight. But, Iona wanted him to know how much of a woman she truly was. This body was his and she wanted him to take all of it and never need another.\n\nLowering herself to her elbows and raising her ass high, she began rocking her body\u2014pulling away from him and almost losing him completely, then jamming herself against him. It was like hitting a wall, but the sound she heard come from him each time she impaled herself was priceless. \n\nAs he stilled himself and looked down, the view\u2014the arch of her back, curve of her hips, and roundness of her ass as she glided on and off his cock\u2014combined with the feel of her hair in his hands while she fucked him pushed Kieren over the edge. His hands tightened at the top of her hips. His fingers dug into her flesh as he took control and pursued his pleasure. \n\nIona had long since came and knew that her attempt to try and hide it had been feeble at most. There were no reactions of her body Kieren did not feel and react to. He simply drew out her climax. What he did next was further flawless punishment. His hand came around her, grasped her inner thigh possessively before his thumb plucked at her clit. It was too much as she collapsed into a series of involuntary spasms and cried out his name. \n\nThat only amped Kieren to another level of wanting her and he placed both hands on her ass as he pumped. He could feel every contraction and release of her body. \n\nAs Kieren's thrusts grew more desperate, Iona could feel him swell more. This brought on its own avalanche of sensations. Heat shot through her with his release and he leaned over her body with a thick anguished sound shaking his chest. \n\nThey fell as one to the bed still joined and gasping for air. \n\nKieren did not want to crush her further with his weight, but he found it hard to move. When he attempted to, Iona protested. \n\n\"You are truly dangerous,\" he told her, eventually managing to lay beside her. \n\nIona felt like both the muscles and bones within her body had liquefied. She wished to make one of her smart remarks but could not. Instead, she reached for his hand and had only enough strength to smile. She closed her eyes and drifted off.\n\nWhen she opened her eyes again, Iona found herself looking into the beauty of his. Kieren moved to his back and pulled Iona on top of him. Iona had felt nothing more comfortable than resting atop of him. Her body melded into his. Kieren smiled as he whispered something to her that she could not translate. The sound and cadence of his words was so beautiful and full of emotion that Iona gave in to the need to whisper them back as she intertwined her fingers with his. \n\nKieren's words were an oath from the old world and in the old tongue. They were familiar words to him, but for the first time, he understood the power of their meaning. He did not just say them, he felt them.\n\nLet all spirits know, from this life to the next and beyond. Let even the Gods gather in awe for eternity. My life I give to you. Death cannot hold it. My love will split the skies and shake the earth. I will always find you. Eye to eye, hand to hand, heart to heart, we are one. \n\nThe words he spoke out loud, an oath, filled the room. Iona repeated them perfectly. They were such lovely words and they echoed in her mind as she slept.\n\n***************************************\n\nKieren thought it self-sacrificing that Iona alone brought in the water for his bath. At first he wondered if she was moved by some form of guilt. But when Iona learned that the young girl that usually filled the tub told stories of him being naked, she did not want the young girl in his room ever again. He found it amusing.\n\n\"Enough,\" Kieren demanded.\n\nIona wiped her brow and placed the pail on the floor. \n\n\"Join me,\" he gave her that rare, beautiful and full smile. \n\nIona shed her smock quickly, sliding behind him so that he was between her thighs. Iona rested her hands on his back without thinking at first. The feel of what marked him felt strange beneath her touch. His hair had been pulled on top of his head and banded. There was nothing hiding the site of his scars. Having it displayed in front of her, being so close made her catch her breath. Because of the tattooing, from afar, it resembled the fierce wings of a bird. But up close, her fingers found frightening lines of corded skin\u2014scars having healed over scars. She could not imagine the pain that accompanied such a thing.\n\nFor the first time, Kieren did not move away or flinch. He let her explore.\n\n\"Do not be afraid. It feels nothing,\" he volunteered.\n\nThe sadness of his voice made her stop the wandering of her hands. Not knowing what to do, Iona slid her hands beneath his arms and around his chest. She pressed the side of her face to the surface of his abused back. It felt good against her skin.\n\nKieren took her hands in his and kissed her inner wrists.\n\n\"Can you share how this came to be, Kieren?\"\n\nKieren raised her hands to his lips and kissed them again, but said nothing.\n\n\"You and I, Iona, have shared quite some time together,\" he said softly, breaking the silence. \"I have intimate knowledge of you.\"\n\nShe agreed.\n\nTell me, why is it that you have no menses?\"\n\nIona attempted to reclaim her hands. Kieren kept them in his.\n\n\"I left Brenna in charge of your personal needs and...\"\n\n\"You discussed me with Brenna?\" Iona demanded.\n\n\"...Russ in charge of your security.\"\n\n\"You discussed me with Russ? How about Gunner? What did he have to say on the matter?\"\n\n\"Are you done?\" he spoke with patience.\n\n\"I do not like having the workings of my body discussed among men, especially Gunner.\" \n\n\"I can assure you, that is the last thing I would discuss with Gunner.\"\n\n\"Why do you say it like that?\"\n\n\"Why do you evade my question, and not with much skill I might add. Settle down.\"\n\nIona sighed in defeat. \"Why do you?\"\n\nKieren pulled her arms tighter around him and Iona rested her face against his back once more, finding security in the feel of it. \n\n\"At first I was accused of leaving you with child,\" Kieren began. \"But, we both know that there was no possibility of that.\" \n\nKieren waited.\n\n\"There is nothing you cannot tell me. I cannot be shocked or angry at you for things beyond your control, nor those within it. I am a man of many experiences and few things unwitnessed first hand.\"\n\n\"I do not know why...exactly.\"\n\n\"I wish only that you open up to me and allow me to grow closer to your heart.\"\n\n\"You are already close to my heart,\" she whispered. \n\n\"Then allow me to step inside of it.\"\n\nIona closed her eyes. \n\n\"There are things that bring great shame,\" she surrendered.\n\n\"There is no shame between you and me,\" he assured her. \"You have seen me at my worse, have you not?\"\n\n\"I cannot share what I do not fully understand. Just know that a child can never grow within me, not yours or anyone else's.\"\n\n\"How do you know?\"\n\n\"I just do.\"\n\n\"Were you raped?\"\n\n\"Is it children that you seek?\"\n\n\"I have no use for children. The cause matters to me only in relationship to your mental state. I truly want nothing to come between us.\"\n\n\"Like your back.\"\n\nKieren released her hands and move out of her arms. \n\n\"I shall inquire no more.\" \n\nHe moved to get out of the bath.\n\n\"Kieren, no.\" She pulled at his arm.\n\nKieren repositioned himself, between her legs but this time facing her. Her legs were now on top of his.\n\n\"Where do I begin? My life is filled with disgraces, both small and large.\"\n\n\"Begin with the beginning.\"\n\n\"My first owners sold me to a family with a new wife. I was to be her comfort,\" Ion surrendered. \n\nKieren encouraged her to continue.\n\n\"She was kind and from another land. She taught me much and allowed me much freedom. She cared for me. I was treated well by this family.\"\n\nShe paused.\n\n\"But?\" Kieren pressed.\n\n\"But as I grew up beside her step-sons, they became...demanding. As I began to look more like a woman, fighting them off was constant. When my bleeding came, my mistress told me its meaning and how life must change. I know now that I did not fully comprehend her. I did understand that a male could put a child inside me. However, I thought it could happen by mere touch. I became scared of the boys. I avoided them. To me, even the husband was a threat.\"\n\nKieren allowed her to talk at her own pace, but felt himself growing hot with anger. He gave her no sign.\n\n\"I upset one of the boys by refusing a gift. He was the oldest and most proud. He had always been the one to stop the other boys. I felt that his gift was given to make me feel beholding. My refusal infuriated him. I ran from him and I fell. He became cruel. He...he kicked me several times. He accused me of thinking I was better than him and forgetting that he owned me. When I came to, several days later, my Mistress was administering care to me. I had been ill with fever. When I was better and more-or-less healed, in tears my mistress sold me. She said that it was time for me to go and that the new family would be good to me. Their sons were older and had wives. My new mistress and master were aged. \n\n\"Were they good to you?\" Kieren inquired gently.\n\n\"For the most part, yes.\n\n\"I bled no more though,\" she whispered. \n\n\"Something inside of me was broken. When my new master began to want me, I knew that it was to my advantage to be willing. Belonging to him in that way made me feel safe from other men. I was treated as a pet. When he traveled, I accompanied him. He required little from me as far as duties. He liked my company and occasionally my body.\"\n\n\"You had confided in me that his wife grew angry with you?\"\n\n\"Yes. There was talk amongst the other women. Over time my mistress began to hate me. She had long since refused to service her husband. Theirs was an arranged marriage; too, she was old and had long since given him sons. They lived like sister and brother now. But, I became the source of arguments. She accused me of luring her husband with some form of enchantment. My mistress' hate grew.\"\n\n\"In the end, he did not stand for me.\"\n\n\"To be a woman, as beautiful as you are, and a slave...\" Kieren spoke in a low tone after a long silence. \n\nKieren took her hand and placed it over his heart.\n\n\"Rest easy, you have landed in a safe place.\" He placed her hand over his heart. \"Here. Know that my heart will always be dedicated to the soft landing of yours.\"\n\nAs he leaned forward, he slid his hand beneath her bottom and pulled her closer onto his lap. As they kissed, Kieren positioned himself. Iona moaned softly with his ingress. Their love making was slow and tender as they looked into each other's eyes. Still her flesh adjusted to him, but she loved the way the aching quickly turned into elation and sent erotic shivers through her. She pressed her lips to his and began to move her hips in a circular motion, loving the sense of control it offered her and enjoying the slide of his cock. His eyes were so clear and blue, she could see the ocean. She could feel the sway of it.\n\nTo Kieren, nothing was as beautiful as her lovely face in the throes of passion. \n\nIona did not know if it was the sound of her name that slipped between his lips in a way that was like no other, or the feel of him touching that spot within her. She cried out his name as she free fell over the edge of satisfaction. Her entire body trembled and her arms held him tight, holding on to him for dear life. She could feel the heat of him shoot within her. But, the joy of it was secondary to what her body was feeling. \n\nThe world melted away as they satisfied each other. It was an amazing sense of relief and peace combined; something Kieren had never felt with anyone else. \n\n**************************************\n\nKieren wished he could have shared the entire day with Iona. He wanted to walk with her in the market. Russ said that she delighted in that. Instead, he found himself bored with the worse part of leading\u2014dealing with the pettiness of disagreements between the clans. \n\nHe sat back, low in the large and elaborately carved wooden seat. His long legs were open and stretched out before him. His hair hung loose and untamed hiding much of his fine features. He purposefully kept his eyes hooded and low as he played with the gift he had received earlier. Kieren admired the intricate design of the handle and the detail given to the rendering of a fierce sea serpent in the throes of an attack. He liked the way the small weapon caught the light and manipulated it, giving the tail movement as it played into the hilt.\n\nToo many, he was a fearsome sight, known to always be on the edge of violence. Although seeming calm, all knew that at his deadliest there could be a striking calmness. Now he played with a weapon he could use in an instant if he chose. \n\nViolence today, however, was the last thing on his mind.\n\nKieren recognized the high quality of the dual edged blade in his hands. He knew why the light hit it in such a way. The intricate design created when it was forged made the metal appear pearl like, etched from within and fluid. It was a distinction no artisan could fake. It was made of Hindvi steel, deceptively lightweight and deadly. He let the tips of his fingers run over its sleekness, now warmed by his own heat. He had a similar one. He knew the lands from which it came, and questioned how his fellow landsman acquired it.\n\nOnce again, his thoughts shifted to Iona. Maybe he would give it to her as a gift. It would be a weapon suitable for her to tuck into her skirting. It would be the first one she had acquired without committing thievery. \n\nKieren thought about how he had found the delicate spots of her body and was without mercy. He mastered the perfect combination of hands, fingers, tongue, lips and teeth. He could make her scream and cry, beg for escape or simply melt all over him\u2014her sweet juices flowing. He simply smiled at her prayers that he please stop, the ones that concluded with her pleads to not stop. And, this was all before he entered her with his cock, capturing her in totally new ways and leaving her on the edge of consciousness-having pursued his own pleasure. \n\nEverything he drew from her only left him more in awe of her body, more committed to her pleasure and more in need of burying himself within her. In the taking of her, he was more taken.\n\nThat thought gave him a slight smile, which was misunderstood by those watching him. He heard the voice of the one stating his claim rise with confidence. \n\nSome came to present him with gifts as proof of their allegiance, as if land taxes were not enough. They sought to remain in his good graces. Others came to him to settle disputes. Heated arguments and the threat of blood feuds always disturbed the balance of things. Blood had been spilled or could easily be spilled based on the decisions made by the council that sat on either side of Kieren. \n\nBefore Kieren came to these lands, there was a patchwork of opposed chiefdoms and noble families with their own agendas, constantly at each other's neck. His father's hand had not stretched out this far. Kieren struck out on his own, to form necessary alliances. There was no match to the war lord he had become. Any one opposing him was quickly brought to their knees. He was not called the Eagle of Fire for no reason. What he could not kill with his own hands, he set on fire, so that nothing remained. \n\nAs the Law Speaker read out the law at the beginning of these gatherings for all to hear, the law council gathered to sit at the long table. But, it was unmistakably Kieren's table. No matter who stood before them, all knew the importance of his attention and his words. Kieren's riches, and the considerable army dedicated to no one but him, enabled his power. But long before he had established the strength of that, Kieren understood that loyalty was not gained by fear alone but by the comfort of loyalty returned and accessibility to power. He knew that the appearance of democracy was reassuring as well. All need not always be definite, but at least assumed.\n\nAs far as the meeting itself, there was little that Kieren had not already been made aware of in great detail beforehand. For the most part, he did not intercede with the things he considered minor. But what he considered of importance, he dealt with that in person. He decided whether it would be heard by the council or if the council would even be informed. No one challenged him. If the members of the council became at odds with one another, a simple nod of Kieren's head was all that was generally needed. ",
        "Gunner usually stood close or sat beside Kieren. The old man had managed to avoid such today. Kieren had assigned him a small mission.\n\nIn his boredom, Kieren reviewed an earlier conversation with Gunner. Once again the two had butted heads. Gunner always challenged him with a different way of looking at matters. Sometimes it was what Kieren needed to consider. And, sometimes it was not.\n\n\"It may not be what you prefer to hear, but necessary never-the-less,\" Gunner declared once they were in private. \n\nKieren undid the gold broach bore his symbol. The sash it held fell to the floor. He pulled at the restrictive, roped embroidery around the neck of his tunic. It amazed him how so little could feel so confining. He would not bother with the formalities of dress today.\n\n\"It should be considered. You too expressed doubt at first. Did you speak of it to her? The kinds, they seek each other out. It is at the base of all that is natural. A mountain goat does not seek out a sheep. Or...\"\n\nKieren warned Gunner with his eyes. Gunner boldly searched for any sign of doubt. And he found none.\n\n\"Old man,\" Kieren scolded. \"I know what you are trying to do, but I hold no question as to Iona's loyalty. And, do not speak to me of sheep and goats ever again.\"\n\n\"I only state the obvious.\" Now satisfied, Gunner returned to his usual air of indifference. \n\nA server came into the area with cups and a pitcher. The look the two men gave made her turn immediately and exit the way she had come in. \n\n\"Let this always be at the front of your mind,\" Kieren spoke as they stood eye to eye. \"I am her kind. Iona is my kind. Let it flavor your tongue before you speak to me of her.\"\n\n\"I have no opinion on the matter. She is simply a woman, you a man. I only say what should be considered.\" Gunner snorted, not quite satisfied that Kieren was in control. She affected him like no other. \n\nGunner retreated and found seating on a bench along the wall. He spread his tired legs out and looked down into his own lap. He let out a rough sigh that reached back through the shared years of the two men.\n\n\"I am in no way speaking down of the girl. Even I find myself under her spell. I only want you to be certain and not blinded...\"\n\nOnce more, Kieren warned him with his eyes.\n\n\"...by your interest in her, an interest that I fear has grown into something more confounding.\"\n\n\"I am certain of her.\" \n\n\"Then, consider this,\" Gunner reasoned. \"Russ sensed something when he first encountered the Moor. It was smart of the man to carry no obvious weapons. Russ felt that the Moor acted with intention, as if waiting for the opportunity to become aligned with someone. Russ watched him personally as soon as he was notified that the Moor was seen nearing the village. The Moor's eyes searched the crowd constantly, as if he were sizing things up. Russ waited, expecting a meeting or exchange of some kind. But, that never occurred. The Moor came with the merchant, but only pretended to assist the old man. The site of Iona shocked him at first. He was not expecting her. She was not his goal.\"\n\nKieren sat beside Gunner to consider his words.\n\n\"Russ said that Iona was struck by the sight of him. I believe her when she says that she shares no past with him.\"\n\n\"Struck,\" Kieren questioned.\n\n\"Yes, but not out of recognition or fear,\" Gunner snorted. \"I am not certain that the girl truly fears any man.\"\n\nThe two men nodded in agreement.\n\n\"It would be reasonable that she would be struck by anyone beyond our general paleness,\" Kieren noted. \"That's a normal thing. It would surprise a child or you and me, if we knew no travels.\"\n\n\"Yes,\" Gunner assured him. \"How often do you think one, anyone, would run into a woman with such bronzed skin, such hair and a softness still to her nature in these parts? The sight of her would make any free man stop to look twice, if not out of anything but pure curiosity. You would think more so for the Moor. And, considering that she does not dress or carry herself as a common servant...\"\n\n\"Your point?\" \n\n\"My point is this. The fact that she is here surprised him. So she was not his goal. To want her when there is no doubt that she is yours and here of her own free will, is a wish for death. You are right when you say that she is not of his people. You know firsthand that the people of his land war amongst each other as all men do. Their different shades separate them too. He does not look at her and think home. He has not tried to lead her away. That would have been unwise from the start, but surely much more dangerous now that you have arrived. So far, he watches and waits. Maybe you are who he is watching for.\"\n\n\"I have thought of this too. He wears the warrior's markings on his face and neck. What warrior earns such markings, travels so far from his people alone with no cause, no support, no apparent defense, pretending to be a peddler?\" Kieren said after pondering Gunner's words. \"He is a fighter in search of a fight. A warrior freed from commitment, a warrior for hire.\"\n\n\"Warriors that have no honor, no home, no spirit,\" Gunner added insistently. \n\n\"Someone holds the silver. It is the silver we should concern ourselves with,\" Kieren concluded. \"To hire this sort, it would have to be someone with the means. It would have to be someone that wishes to remain unknown and unconnected to any incident.\"\n\n\"A false friend.\"\n\nKieren laughed bitterly. \"I have you and a wayward brother. I have no use for friends.\" \n\nMuch was becoming clear, Kieren thought as he now played with his gift.\n\nWhile Kieren attended to business, Iona had been penalized for what Brenna considered \"her inability to shut-up.\"\n\n\"He really operates on such little sleep. I don't see how he does it. And...\" Iona was saying.\n\n\"Hush girl,\" Brenna stormed. \"No one wants to hear your girlish ramblings. We all know his manliness has consumed you. We've witnessed first-hand the faultiness of your gait.\"\n\nThe young girls assisting Brenna laughed. Iona flushed in shame. \n\n\"I've known him for as long as you have breathed. There is nothing that you can tell me about him. And I find myself not wanting to know the things that you wish to share. We shall see who is in need of your assistance today, since I am not.\"\n\nWith that, Iona was banished to perform lesser duties. In the fine wear Kieren insisted upon, she found herself stirring a heated cauldron filled with the piss of Kieren's soldiers. She moved the felt like strips of char cloth, made from the beaten touch-wood of oak, in a circular motion with a large wooden pole. It was a necessary chore. The women of the village took turns enduring it. Kieren's men needed the treated cloth for fire. It was the urine that gave it its power. It was a disgusting chore as far as Iona was concerned. \n\nWhen the women brought more, it splashed into her face.\n\n\"Oh,\" Iona swore in shock, \"I so hate you spiteful bit...\"\n\nShe caught her tongue.\n\n\"We are simply following the directions of Brenna.\" The women laughed. \n\nIt had been a while since Iona had lent a hand to the women. They had been used to seeing her when she helped with the wash and similar things. Now she was who they did the work for. A few of them had mixed feelings about such matters. \n\nRelief flooded her when she heard the familiar laugh of Russ. She turned to see his smiling face, alongside two other of Kieren's men.\n\n\"She's our finest hand,\" one of the older women volunteered cheerfully. \n\n\"I see.\" Russ laughed. \n\n\"I hope you are enjoying yourself,\" I said, rolling her eyes at him.\n\n\"Very much so,\" Russ returned, amused. \"Your fine bottom bent over a vat of piss is a sight to see.\"\n\n\"Save me.\" Iona mouthed the words to him in sincerity.\n\nHe raised a doubtful eyebrow and shook his head.\n\nShe mouthed the word, \"Please.\"\n\n\"Ladies,\" He announced dramatically. \"As enticing as this scene appears to be, I must remove your most entertaining counterpart.\" \n\nIona wiped her hands off on her skirting and walked quickly pass the three men. She was more than ready for this chore to be over.\n\n\"Do you need me to scrub your back?\" Russ teased, draped over the same chair she had sat in just last night. \n\n\"No my dear Long Sword,\" Iona laughed. \"I'm just about finished. Could you bring me my dressing on the bed?\"\n\nRuss brought the item to her, but lingered as she used the drying cloth. He had not forgotten how beautiful her dark body was, with its dips and curves. Her breasts were more enticing than any he had ever experienced\u2014and he had experienced much. The darkness of the circles that held her firm, now extended nipples was in contrast to the honeyed brown of her skin. He still remembered how sweet she tasted and how, like silk, her skin felt against his. \n\nOnce again, Russ thought his brother to be the luckiest of all men when he looked at Iona. She was surely fine.\n\n\"Maybe you can tell me something Russ,\" Iona was saying, when she noticed his eyes on her. There was no doubt about what he was thinking.\n\nRuss smiled wickedly, with no shame. \n\n\"And what may I supply for you in the absence of my brother.\"\n\nIona dismissed his flirting and smoothed out the long tunic. She wrapped the leather cording loosely around her hips. She liked the shine of the threads woven into the cording. There was a long vest like over laying that draped over her as well. Iona had never worn something so fine and delicate. She had bracelets and earrings with stones the same color as the vesting. She liked the color; it reminded her of ripened grapes.\n\n\"Like wine,\" she thought, touching the material.\n\nRuss watched her carefully run her hand over the fine materiel. \n\n\"How wanton my brother makes you,\" he mused. \"The girl of months ago would have never dressed in front of me with such ease. Now the woman before me has no cautiousness and her body cries out for attention.\n\nIona merely looked at Russ and rolled her brown eyes. He was an accomplished flirt.\n\n\"You are beautiful, Iona,\" Russ said with seriousness. \n\n\"It's these clothes,\" Iona gushed. \"Have you ever seen anything so soft and flowy?\"\n\nRuss laughed.\n\n\"Flowy?\" He thought the word to be silly. But, he loved the way it fell from her lips. She made it sound sensual.\n\n\"Like water poured over me,\" she replied, awe-struck.\n\nRuss loved her animated spirit. It was as interesting to him as her temper.\n\n\"Yes, my flower. It is beautiful as well.\n\n\"He chose it just for me,\" she exclaimed.\n\nRuss did not respond, but waited patiently as she pulled her hair up and secured it with decoration.\n\n\"Tell me,\" she said more serious. \"How did Kieren get his scars?\"\n\n\"Which ones?\" Russ feigned innocence.\n\n\"The ones his back bears.\"\n\n\"He is a man.\" Russ sobered and returned to his seat. \"What true man does not bear scars?\"\n\n\"None like his,\" she said, positioning herself before him.\n\n\"Oh, and you think yourself and expert on men now?\"\n\nRuss' eyes no longer teased, they were serious and focused clearly on hers.\n\n\"If you wish to know something in regards to your man, you simply need to ask him.\"\n\n\"I have.\"\n\n\"Then this conversation is over.\" Russ rose from the chair. \n\nWhen he spoke next, he was standing close to Iona, looking down into her lovely face.\n\n\"Do not complicate matters with details that mean nothing.\"\n\n\"Russ, Kieren means everything to me. I simply wish to know all that makes him.\"\n\n\"Then let him have his secrets and trust that he is simply what he is.\"\n\nWith that, he pushed her into the chair.\n\n\"With all the gallantry I can muster,\" Russ returned to the playfulness of his nature, \"I shall place these slippers on your feet and entertain you till the night's meal. Only then will I return you to my brother.\"\n\nIona could not help but break into a childlike smile.\n\n\"I shall discover answers to this mystery,\" she said playfully, as Russ led her out the door.\n\n\"I have no doubt.\" Russ dipped his head politely.\n\nThe village was prepared for a week of serious feasting. The entire community was taking part. This was a time when all gathered to eat, drink strong ale and dance-in that order. Sacrifices would be made and eaten in honor of the Gods. Departed kinsmen lost in battle and ancestors were honored too. Toasts would be made to the God \u00c6sir. Cattle and horses would be slaughtered, and their blood used to redden the idols. It was all performed in hopes that the approaching winter would prove plentiful. \n\nIona was familiar with the fall feast. However, this festival would be on a much grander scale than any she had ever witnessed. \n\nFamilies were coming out of the hills and setting up temporary settlements outside of the city. Invited nobles and a limited number within their entourage filled what space was left within the walls of The Eagle's Head. \n\nThe men had already begun their dangerous games and bloody contests. They called to Russ the Long Sword with their challenges.\n\n\"Go play your man games,\" Iona teased. \"I promise to be good.\n\nIona was enjoying skewered chunks of fruit. The fruits were dipped in honey and held over the fire until the honey formed a hardened shell. \n\n\"And miss you sucking the honey off that fruit. Never.\" \n\n\"Off with you, I have my guards.\"\n\n\"Do not stray far,\" Russ through over his shoulder.\n\nOf course, Iona had other plans.\n\nAs darkness drew near, circles began to form around fires. Children came to hear the stories about great warriors. During times like these, once filled with mead everyone was a story teller. Iona tuned into the sagas shared.\n\n**************\n\n\"What has he given you,\" Kieren said to one of his men as they made their way through the trees. \n\n\"After much encouragement, he continues to request that he be brought to you.\"\n\n\"Did you ask him in the right way?\"\n\n\"Most definitely. He would not surrender anything. He has a core of steel,\" one of Kieren's men informed him.\n\nThey came to a clearing where six of Kieren's men stood with Gunner, surrounding a man on his knees, with his hands tied behind his back. Blood decorated his face. One eye was swollen shut. His head was hung low.\n\n\"It took seven of you to apprehend him,\" Kieren inquired, unamused. \n\nThe countenance of the soldier beside him fell. \"He is trained well.\"\n\n\"Let us begin,\" Kieren announced now focused on the man before him. \n\nThe ebony colored man raised his head.\n\n\"You wish to speak to me?\" \n\nThe man grunted in agreement.\n\n\"Speak.\"\n\n\"Yes,\" the man supplied.\n\n\"Tell me, what is your name?\"\n\n\"I am Arjun,\" he managed to say.\n\nIona listened intently to the stories told. In every story there is a grain of truth...\n\nThe Eagle of Fire was born marked by Oden himself.\n\nIt was the symbol of a master. He would master the white tailed eagle,\n\nthe eagle of the sea. He would control fire and flight\u2014and man.\n\nHe was marked for greatness as foretold.\n\nHe was destined to gather great men from the north and from the south,\n\nso that they could become one, under him, and rule over a land of prosperity.\n\nHe would rule beyond the land, to where the ocean ends.\n\nAnd then, he would rule beyond that.\n\nEven his father fears The Eagle of Fire's destiny,\n\nas all men should.\n\nKieren bent over so that he was eye to eye with the man.\n\n\"What I ask you will only be asked once or I'll take your head myself.\" Kieren placed the tip of his gift under the man's chin and they rose together. \"Understand?\"\n\n\"Yes,\" Arjun replied.\n\n\"Why are you here?\"\n\n\"I am here to offer myself to your cause.\"\n\n\"The way you have gone about it is quite questionable. Of what benefit would this have for me.\"\n\n\"I am a fine fighter and I have information.\n\n\"Yet my men over threw you. What information could I value coming from you?\n\n\"The house of Haffrin has given great payment to have your life ended. He has paid me with silver.\"\n\n\"Does he now? Why should I believe words so quickly surrendered over a fellow clansman?\"\n\n\"Did he not gift you with the very knife you now have pointed at my throat. Do you not recognize the styling of my people upon it? It was my gift to Haffrin. He insults you with it.\"\n\nKieren removed the knife from the man's neck.\n\n\"How did Haffrin come upon you?\"\n\n\"I happened upon him.\"\n\n\"In the situation you are in now, what man would not attempt to save his life with words.\n\n\"I have no fear of death.\"\n\nKieren's smile was threatening.\n\n\"Good. Being that I am your focus and you have failed, what prevents me from taking your head and wiping your blood from the blade of this gift?\"\n\n\"Nothing prevents it.\"\n\nThe Eagle of Fire was stolen as a child while on a trip with his father.\n\nHe was tortured.\n\nThe torture was so complete that it left him unable to feel pain.\n\nTo have survived gave him extraordinary powers.\n\nHis father fought a great battle and recovered his son.\n\nBut his life now made him look beyond his father.\n\nIn his eyes you could see the sea and its tempestuousness.\n\nHis father then knew that he could never be contained.\n\nWhen he was of age, he could not stay.\n\nThere could be only one man ruling in his father's long house.\n\nHis mother sacrificed herself to the Gods to give him more strength and assure his destiny.\n\nHe would need it in his quests. This is how she let him go.\n\nHe went back to the land of his captors. Like and eagle, he swooped down.\n\nHis anger was so hot and eager to leave him that he breathed fire,\n\nburning everything.\n\nTo this day that land is baron and the seas no longer meet it.\n\n\"Your honor and allegiance appear to be an act of convenience. A lucrative act, I must say. I do not pay for loyalty and I myself take the lives of my enemies.\"\n\n\"My honor belongs to the man that fights his own battles, not one that hires another to do his bidding. I wish to be counted amongst your warriors and give my allegiance to your cause. The price of the bribery is yours. I want no part of it.\"\n\nThe Eagle of Fire's father once loved him dearly.\n\nEverywhere he went, he took his son. The boy went to sea with his father.\n\nThere was a great storm. He was separated from his father and crew.\n\nMany ships were lost.\n\n\u00d6rm, the great serpent of the sea, rose up and took him.\n\nHe fought the serpent with all the strength he had.\n\nHis effort to take the head of the serpent was so brave that Oden watched with interest.\n\nOden then showed mercy and swooped from the sky like a large eagle.\n\nOden blew fire at the serpent, saving the boy who became a man on that day.\n\nBut man's memory is short.\n\nSo Oden named him The Eagle of Fire to make all remember that day always,\n\nOden marked his back and vowed to guard him in battle.\n\nTo this day no man has struck down The Eagle of Fire\n\nBut, the mark of the eagle is also what keeps him from ever having a home.\n\nHe is the man that must always search the seas.\n\n\"The house of Haffrin is consumed with jealousy and contempt,\" Arjun continued. \"With each toast of alliance the hatred grows. You have much and have created a fortress. They fear your power which grows. You will own the South and your father the North. The union of the two would bring the world to its knees. Who would challenge you? This is what he whispers to all that will listen. Haffrin sparks fear and plays on it.\"\n\n\"What is it that you believe?\"\n\n\"I believe that it is wise to join the winner. Your hand is great and you hold many. I wish to serve the man that you have proven to be, not the ones that fear you.\"\n\n\"Winning is subjective. I need men that dedicate themselves to honor, win or lose.\"\n\n\"You alone are The Eagle of Fire. Test my worthiness.\""
    ],
    "authorname": "avrgblkgrl",
    "tags": [
        "interracial romance",
        "love",
        "novel",
        "romance",
        "slave",
        "straight sex",
        "viking",
        "war",
        "wm/bf"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/trust-ch-06-2"
}