{
    "title": "Bigger Down There Ch. 08",
    "pages": [
        "To recap where I left off, I was getting over having been pretty much face fucked by Sam. Helen, had assisted by giving Sam's boyish, but very sensitive tits a thorough mauling with her hands, in an effort to get Sam to give me what I craved which was several mouthfuls of her delightfully viscose grool. \n\nSam could produce exceptional amounts of cunt juice, and it turned me on no end to watch it pooling around her slit and the spilling out of her. It tasted like it should \u2013 creamy, sexy and forbidden nectar. \n\nHelen hadn't cum, but obviously had plans to address that with her no clothes rule for the rest of the day. \n\nI don't know why I did it, but to aid the cooling down process, I had flopped on the sofa, and was lying supine, but with one knee bent up against the back of the sofa, and my other leg languoriously hanging off the sofa with my foot on the floor. \n\nSam placed herself at the other end of the sofa and after at least five or ten minutes of looking, started to lazily finger around my sloppy lips and hole.\n\n\"You're getting quite the cunt on you Andrea,\" she said teasingly. \"Soon you'll be as loose as Mum. Is that what you want?\"\n\n\"You know it is my naughty friend,\" I replied. I thought for a minute or two.\n\n\"Actually, I want to be bigger than your Mum,\" I continued. \"I want to make her envious of me.\"\n\n\"Fuck, I'd love to see that,\" Sam said, by way of a follow-up.\n\n\"I'd like to be so loose that I would struggle to hold my piss in,\" I responded. I'm not even sure why I said it (although the idea was more than appealing to me).\n\n\"Oh, you dirty girl,\" Sam carried on. \"You mean like the piss could just drop out of you as you walked along?\"\n\n\"Something like that,\" I said. \n\n\"How do you think she's doing darling,\" I heard from Helen.\n\n\"She's certainly developing a slutty cunt on her Mum. Do you think she'll be like you in a couple of years?\"\n\n\"That's what she wants, isn't it dear?\"\n\nBy now, Helen was kneeling against my open leg, and I was treated to the fingers of four hands just probing and manipulating my distended cunt for a good half an hour or so. This was accompanied by some very graphic descriptions as they went along.\"\n\n\"Her lips are getting bigger,\" one would say. \"She's getting a nice gape, almost obscene, don't you think?\" I was hearing from the other.\n\n\"God Andrea, you're going to be huge by the time you get to Mum's age.\"\n\n\"I seriously hope so,\" I muttered. \n\nThat session was a beautiful, and very erotic experience. I just lay there, letting Sam and Helen feel me all over with their wandering hands, and I was loving being talked about, almost as if I wasn't there. It was like eavesdropping on somebody else's conversation, and I found the whole thing overwhelmingly sexy. \n\nI wanted to ask Sam something, and although I hadn't quite figured out the wording, I was feeling that it might be a good time to ask something that had been on my mind for a while. \n\n\"What about your girl hole Sam. You're nothing like your Mum. Wouldn't you like to be a little bit bigger?\" \n\nSam's cunt had quite fleshy lips, and quite a good sized clit, but compared to her Mum, her hole was no more than average in size.\n\n\"Actually, I quite like my girly cunt,\" Sam returned, but I love fantasising about and looking at you two and your well stretched holes. I really get off on you two and the fisting and huge toys you use on each other. You know . . . ., well . . . , you know how wet it makes me.\" \n\n\"I . . , I wank furiously, every night at Uni thinking about your cunt holes. When you used to come here after we played hockey, and we, you know, perved on each other, as soon as you'd gone, or as soon as you'd gone to sleep if you were staying here, I'd have the biggest orgasms. You've no idea how hard it was to keep quiet!\"\n\n\"I can certainly remember how messy your sheets were though,\" said Helen with a lewd grin. \n\n\"Yeah, but although you used to let me watch you bring yourself off when I was at home, you've no idea how many times I would engineer a way to get a look at your beautiful Mummy hole, and then go back to my room and jill off. Actually, I'm surprised that I'm not a bit bigger because I finger myself practically every night, and sometimes during the day as well.\"\n\n\"The trouble is, I haven't found anybody at Uni to watch me yet, and that's what I'd really like.\"\n\n\"And, u'mm, I'll tell you what else I'd really like.\"\n\nI assumed that Sam was just going to say what it was, but she hesitated. She wasn't forthcoming, so Helen sort of dragged it out of her.\n\nWhat Sam wanted was some videos of us. I tried to get out of her if it was just of Helen and me, but it became clear, that she wanted more. \"Anything with one of us, two of us, or all three of us in it,\" she eventually admitted. \n\n\"What sort of things would we be doing,\" Helen wanted to know. \n\n\"Anything really,\" was her reply. \"You could even surprise me sometimes,\" you know, just send me something when I'm away and surprise me. I'd like that.\"\n\nThis could certainly add a new dimension to things, and I sensed that Helen was up for it as well. \n\nMy cunt was still being very gently toyed with by Sam and Helen, and I knew that I was very, very, wet. \n\n\"I'd quite like to do that again, what we did when we were in your room,\" I said. \"The same setting, but this time we wouldn't have to hold back, and your Mum can watch.\"\n\nI think that Sam would have yanked me off the sofa if she could have done. As it was, somehow within a few minutes, we were in Sam's room, with me sitting on my 'old' bed, back to the wall, just like I used to be, and Sam sitting on the edge of her bed. The door was closed, and Helen sat on the floor with her back against it.\n\nIt didn't take long to think back to re-enact those thrilling afternoons and evenings. \n\n\"You quite like exposing yourself, don't you Sam.\"\n\n\"Fuck yes.\" I like looking at other girls cunts, and showing them mine.\" \n\nSam was rubbing her fingers through her lippy slit, I in turn, began to lean back and open my thighs, very slowly.\n\n\"You've got quite a big twat Andrea, do you know that?\"\n\n\"M'mm, yeah, I suppose I am a bit bigger down there than average girl.\" I parted my lips a little, and pulled myself open slightly.\n\nAs before, Sam eased herself off the bed and moved closer, standing a little way away, but directly in front of me, her girly cunt more or less at eye level to me. \n\nSam was thrusting her hips forward and by now had her feet well parted, using her hands to squeeze her nipples, but the biggest rush for me was to see her creaming up. \n\nUsing both hands, I gave my engorged slit a good stretch. \"Do you really think I've got a sizeable girl-hole,\" I asked quietly.\n\n\"Well, I mean, look at mine \u2013 you can see how much bigger you are than me. Your slit's quite long and fairly loose compared to me.\"\n\nI was so into it, thinking back to those earlier days, and I was super aroused again already.\n\n\"But you should see my Mum's. Compared to her, you're not massive.\"\n\nI turned to look down at Helen, but she had stood up, leaning back against the door with her thighs spread, her yawning cunt fully on display. This was better than before. It lacked the build-up, but having Helen there in the room with us added an extra dimension to the scene.\n\n\"Fuck, she has got quite a hole hasn't she,\" I blurted out. \"What a huge slot. She's fucking massive.\"\n\n\"I know. You wouldn't believe the size of some of the things she can put in herself.\"\n\n\"Come here and get a good look at my Mummy cunt,\" I heard from Helen. \n\n\"No, move over here and stand next to Sam so that I can compare you with each other.\"\n\nHelen took a couple of steps forward and to her right, and leaned against Sam to give me a proper look. I could never get enough of Helen's magnificent specimen of a cunt. An abnormally long slot, with a substantial gaping entry, surrounded by excessively floppy and fleshy lips, drooping down and well separated from each other, and a clit hood that was hiding what looked like a miniature cock. \n\n\"Get closer, so you can see what a real woman has between her thighs.\"\n\nI moved off the bed and across the floor, kneeling in front of the quite exceptional gash that was now right in front of my eyes. Helen grasped her slippery labia and pulled herself open.\n\nI, I think I could get my hand in there,\" I teased.\n\n\"Why don't you try,\" Helen said through heavy breaths.\n\nIt was so easy. I didn't even need to bunch my fingers up. The widest part of my hand slipped comfortably the very elastic collar of her fuck hole, and I was in. That easily.\n\nIf you've never experienced it, take it from me - having your hand embedded wrist deep in a vast, silky, slick and slippery cunt is a sublime experience, and especially when the lips are acting like a little sleeve around your wrist.\n\nSam was also kneeling by now, and offering words of encouragement. \"Can you move it around inside her?\" Can you feel her hand filling you up Mum?\" \n\n\"Rub her clit for me Sam,\" I requested. \n\n\"Get on Sam's bed for us,\" I directed towards Helen.\n\nIt wasn't too difficult as she was already leaning heavily against the bed. All she really had to do was lower her ass so that she was sitting on, rather than propping herself up against, the bed. \n\n\"Give your Mum a good lick Sam,\" I softly instructed. I wanted to see Sam lick her Mum as it would be an exquisite bit of intimacy, and as well, I wanted to get Helen very well lubed up for what I had in mind. \n\nSam took a long look at her Mums messy cunt neatly enclosed around my wrist, and after thinking about it for a few long seconds, leaned in and started lapping at Helens bulbous clit, flicking her tongue over it to start with, but quickly progressing to immersing her lips round it. \n\nThe effect was instantaneous. I could quickly sense the presence of more pussy drool around my wrist, and I started to work the sides and back of my free hand around the gooey wetness. With one hand in Helen, and Sam worshipping her clit, it was uncommonly tricky, but I was managing to get some of Helens natural juices around my fingers in readiness for the next step.\n\nI was about to start phase two, when Sam asked me to move so that Helen could lie down. With me determined not to let my hand slip out, this was a far from easy manoeuvre, but after a few awkward seconds, we achieved it, and now had Helen lying on the bed, with me kneeling on the floor at the end of the bed which was giving me much more comfortable access to Helens cunty passage.\n\nSam suddenly surprised me by kneeling over Helen, and although I probably shouldn't have been shocked given some of the things that we had done together, I was bounced into to a different universe as Sam lowered her crotch over her Mum's face. I nearly came there and then myself, but it was Helen's turn to be pleasured, so as much as I was tempted to use my free hand to finger myself off, I prepared to work my other hand into Helen's accommodating fist box. \n\nMind you, I was conscious that I some of my wetness was manifesting itself by periodically making little tiny drips onto the carpet, but actually, that added to the frisson of the moment. \n\nI was resolute that I was going to give Helen a serious stretching, and that she was going to take both my hands in her dripping, roomy snatch.\n\nTo achieve this, I partially withdrew my hand, and re-entered Helen with just my four fingers. I then began to introduce a finger at a time from my other hand over a five to ten minute period. I could feel Helen bucking around, and I wasn't quite sure whether this was from being made to face-fuck Sam's jizzed up cunt, or the anticipation of being double fisted. \n\nI was absolutely enthralled by the earthiness of what we were doing and the deviant pleasure that we were collectively deriving from it, that despite having had two big climaxes already this afternoon, I felt that I was on the verge of cumming again, despite the fact that I couldn't reach myself to do the job properly, and seeing Sam's messiness dripping from Helens chin was only adding to the state that I was in. \n\nIf I would have had a third hand I would have introduced it to Helen's ass, and I was torn between double fisting her well spread cunt, or doing both holes. There were massively satisfying whimpers coming from Helen as I gave her meaty orifice a good work out. Both my hands were neatly encased by Helen's obscenely opened up slop pit and when Sam and I eventually got her off, it was a big one!\n\nThere was a constant stream of 'fuck, fuck, oh fuck, oh fucking hell, fucking, fucking hell coming from Helen's cunt smothered mouth. Helen was shaking and almost going into spasm. As I carefully withdrew my hands from her very messed up gash, the view that awaited me was something to behold. Helen was gaping pornographically with a milky coloured froth collecting at her disgracefully swollen lips.\n\nAs Helen came. Sam raised herself to a squatting position and brought herself off above Helens face. Actually some of her juice splashed onto Helen's hair because Sam was thrashing around a little bit and didn't seem able to keep herself still. \n\nWatching Sam was a very provocative sight and enough to bring out an exciting little orgasm for me that was achieved without actually touching myself which was quite thrilling.\n\nI think that we were in a state of sexual exhaustion for much of the rest of the day, although when we went to bed, Sam spooned herself against me and fingered me to another naughty cum.\n\nCome the Monday, Helen had to go to work, but Sam wasn't going back to Uni until Tuesday, and I only had one lecture which I decided to bunk off. That left Sam and I to our own devices for a day, and that conspired to make it a most interesting day. \n\nSam was tormenting me with her exhibitionism for the early part of the morning, and after breakfast, we had got to chatting. \n\nI decided to raise the boyfriend/girlfriend topic, and Sam assured me that there was no-one. I asked her what she did for pleasure, and she told me that she jilled herself off at least once a day, and sometimes twice depending on how busy she was. At one point, she looked me right in the eyes and said \"I'm a compulsive masturbator.\" I asked her to tell me more, and she spent a good half hour or more elaborating on what she did, how often she did it, and how much she came. \"Honestly Andrea,\" she said, I have some really huge cums.\" \n\n\"All I have to think about is cunts. I love the sheer sexiness of a cunt. I fantasise about them, and I picture them in my mind as I'm doing it, and it never fails to get me off, especially when I think about yours and Mum's.\"\n\nWith only minor trepidation, I asked her if I could watch her, and she nodded and we trotted back up to her room. She instructed me to just watch, to not speak or join in, and it was a powerfully erotic thing. I was amazed at how long she took, but what really did it for me was the extent to which she exposed herself. Not to me per-se, but how far she opened her legs to display her cunt to herself. She played with her little tits and nipples, but most of her activity was cunt centred, and that's where she focused most of her attention. She loved working her feminine goo around her fingers, and very occasionally she would wipe the filmy liquid around her pointed nipples or suck her girl sperm off her fingers. It was a mesmerising experience, and I felt very special being able to observe her wonderfully personal moments. \n\nWhen she had finished, she sat in what seemed to be her preferred position, back to the wall, knees up, and lippy slit fully exhibited. \n\nI think I made a comment along the lines of \"wow, I can see why you don't need a partner,\" and after something of a pause, and a little hesitation, she said, \"well, I will admit to having had a couple of one night stands\"\n\nI wasn't going to let that go, so I gently pressed her for more information. \n\nShe let it be known that both times had been with girls, or more specifically, a girl of our age, and some months later a woman who in her words was old enough to be her Mum.\n\nI thought that this had the potential to be interesting, so I carried on probing. It turns out that she had picked them both up at the swimming pool, and both incidents had been intentional. She explained that on both occasions she had felt in need of being touched by fingers other than her own, and used the same tactic both times. \n\nI was getting very aroused, and I am certain that Sam knew it. There followed another locking of her eyes on mine, and she asked very softly if I would like to see how she did it.\n\nAll it needed was a nod. \n\n\"OK, we need to get dressed. You'll need your cossy and a towel. As I got dressed and gathered up my things, Sam did the same, except that instead of getting a costume out of her drawer, she went and found a bikini in her Mum's room. \n\nWe had to get the bus (two buses actually) and after a journey that seemed to take longer than it should of done, we ended up at our local swimming pool. We got changed together, and it was immediately apparent that Helen's bikini bottoms which were mismatched with Sam's own top, were at least a size too big for her. I commented on this, and it was met with a response of \"that's the point.\"\n\nWe went through the foot wash and into the pool. Sam dived into the water and did a few lengths whilst dodging around the other users of the pool. I was in the water myself by then, and Sam drew up alongside me. There were a number of swimmers of all ages and sexes dotted about in the water, and I was aware that Sam was about to haul herself out of the water. As she did so, the crotch of the bikini bottoms, weighed down by their wetness dropped away from her fanny, momentarily exposing her slot and lips. She took a second or two to pull them back in place and sat down on the side of the pool with her feet in the water.\n\nEven with the bikini bottoms pulled up, there was a fair amount of 'sag' and to anybody on the lookout, her labia lips were fairly visible through the loose gusset. Sam dropped herself back into the water and had a swim around for a few more minutes before executing the same manoeuvre and pulling herself out of the pool. \n\nI swear that this time she had purposely pulled the bottoms down her hips a bit, and this time anybody looking would have got a good eyeful. This time I got out and sat alongside her. She whispered that her Mum's bottoms were especially good as they had a bit more 'give' than the ones she had at Uni. \n\n\"Time to move on a bit,\" Sam announced. You stay around here and see if you spot anyone paying particular attention.\n\nSam wandered around the pool a little, re-launched herself into the water, and this time emerged using the ladder halfway along the length of the pool. Getting out via the ladder would have given anyone looking closely a much more lurid view of Sam's lippy cleft.\n\nAfter re-entering the water, this time Sam did a few widths, before getting out more slowly, which seemed to involve more leg stretching than the previous times. I couldn't be certain, but I was sure that she had attracted the attention of a cheeky looking female with short, spikey blond hair who was perhaps in her mid to late 20's. \n\nAs Sam walked along the edge of the, I was aware that this lady was following Sam with her eyes, and my instinct was telling me that Sam had picked up on it. \n\nBack in the water, Sam swam along the wall before coming to a rest with her arms supporting her on the floor tiles. The lady swam over and hovered in the vicinity, before eventually edging very close to where Sam was resting. \n\nThere appeared to be an exchange which probably only amounted to a 'Hi,' and after a small pause, Sam reached up to pull out of the water.\n\nThis time there was no mistaking it, and Sam's new friend stared avidly as she climbed out onto the side. If I knew Sam at all, I would be willing to bet that there would be a string of goo between her fanny flaps and the crotch of the bottoms. ",
        "There was a definite spark of interest from the lady in question, and I was intrigued as to how Sam was going to maintain her curiosity, and moreover, how she was going to deal with it.\n\nSam sat down on the edge of the pool, and lifted one knee up towards her boob, and in doing so put her bikini clad crotch on display to maximum effect. The girl with the spiky hair did not attempt to hide her attentiveness.\n\nI was hugely enlivened as Sam used the fingers of both hands in what looked like a reflex action to pull the gusset of the bikini bottoms so that it was taut across her mound.\n\nThere looked to be a bit of small talk going on between Sam and Miss Interested, and after about a minute there was a nod in my direction which appeared to be an acknowledgment of some kind, after which Sam went to the boards and practised a couple of dives. \n\nI played around in the water, casually watching Sam, and after the third dive, Miss Spiky Hair disappeared in the direction of the changing rooms. As she did so, Sam rounded me up and told me to follow her.\n\nWe entered the changing room which was largely empty save from a couple of middle aged ladies with youngsters who were getting changed into their swimming gear. We stripped off and made our way to the showers, standing at one end.\n\nSam's friend was at the other end of the same shower, and was now naked. I was intrigued to see that she had a double female symbol tattooed made up from two interlinked \u2640\u2640's on her cleanly shaven or possibly waxed mons. What struck me even more were her tits, the size of which had not been immediately conspicuous within the confines of her swimming costume. \n\nThey were huge, and veiny with extremely large areolas and stunningly (to me at any rate) erect nipples. There was no attempt to hide them \u2013 it was almost as if she was flaunting them, and she was giving her cunt a good soaping. \n\nSam was doing her best to compete from an exhibitionistic standpoint, whilst I felt almost like an interloper. Sam was pulling her fanny flaps downwards, and after a furtive glance to see if anybody was looking, Swimming Pool girl started self-pulling her nipples.\n\nI leaned back against the wall of the shower, almost weak kneed watching these two egg each other on. \n\nThe other girl washed her hair somehow provocatively, and then rinsed herself off, whilst never taking her eyes off Sam as she did so.\n\nAs she began to exit from the shower, she looked behind her, and the come-on was made very clear. She made her way into a cubicle and held the door open, closing it as soon as all three of us were in there. She turned to Sam and rubbed her shower wet, milfy tits against Sam's A cups, her hand making her way down to Sam's dribbling snatch. \n\nThere wasn't much room in the cubicle, and keeping quiet was a huge challenge. Sam's hand was sneaking around my cunt hole, and I opened my legs to let her know I was hers.\n\nUsing her eyes as the quietest form of communication, Sam lead our lesbian friends view down to where her hand was, causing a slight gasp, and a barely whispered \"fuck,\" from Miss Big Tits.\n\n\"Have you had a baby?\" she breathed into my ear.\n\nI shook my head. \"You look like you have,\" she said in super hushed words.\n\nWe could hear movement in the changing rooms which spoiled the mood a bit, and I was almost panicking about how we were going to get out of here.\n\nSam rescued the moment, and mumbled something about us having to get going, and reluctantly, but with a very lustful and satisfied look on her face, reached to open the door, peering out to see how much potential scrutiny we might be under.\n\nShe pushed the door to, and held up three fingers, and whispered \"just a minute, and they'll be gone.\"\n\nIt seemed like the longest ever minute, but sure enough, the coast became clear, and we separated to get changed.\n\nThe whole thing had been a highly sexually charged experience, and I knew that Sam would be drenched.\n\nOur friend was dressed first and waited by the door, asking if we wanted to grab a coffee, and as it would have seemed churlish not to, we hot footed it to the pool cafeteria.\n\nOnce we had our coffees, we conducted well overdue introductions, but without giving too much away. She introduced herself as Emma, and her accent gave away her Scots origin. Sam said that she and I had been friends for a long time, and Emma asked why she hadn't seen us here before. Sam said because she was at University which was a long way out of town, whilst I was slightly non-committal, although I did mutter something about not normally coming to the pool on my own. I also said that I loved her tattoo, and she smiled and told us that we'd be surprised how many people didn't know what it meant. We reached a point where we really needed to get ourselves organised in order not to miss the next bus, so we said our goodbyes, and as we were leaving, Emma said that she was here every Monday, and hoped she would see us again.\n\nDespite the thrill of what we had just been through, I was slightly apprehensive as we made our way home. I am completely uninhibited with Helen and Sam, and even with Louisa, but I somehow felt as if I had overstepped things by being almost intimate with Emma, but despite that, I was blown away by Sam openly picking up another girl so easily. Sam on the other hand, was made up! \n\n\"She sure knew how to work a pair of cunny lips,\" Sam mentioned without any prompting. \"She knew exactly what she was doing. If I'd been on my own I would have let her carry on. See, I told you it wasn't too difficult to find a playmate when you are gagging for it. You just have to a bit indiscreet and determined.\" \n\nI think that Sam was aware of my pensive mood and sought to ask what was going through my mind. As I tried to explain my conflicting feelings, Sam assured me that we hadn't done anything particularly wrong, and that it wasn't as if we had had all out raunchy sex with the girl at the pool. I think I was more concerned at Helen finding out, but Sam was adamant I had nothing to worry about.\n\n\"We'll tell Mum that we almost got pulled, and she'll be fine.\"\n\nI wasn't quite as confident, although I couldn't get over the carnal wickedness of our afternoon, and was still a bit turned on by Emma's voluptuous and seriously alluring tits. In fact when we got home, I asked Sam to bring me off. I really needed it, and I had hoped that it would calm me down, but it actually had the opposite effect!\n\nWhen Helen got home, she asked about our day, and I told her that we had been swimming. \n\n\"And we got pulled,\" Sam added with a giggle. Helen wanted to know more, so the story came out, although not quite the full facts as she omitted to point out that she had been wearing Helen's bikini bottoms which by now were in the wash, together with Sam's top, my costume and the towels. \n\nAs we were playing around much later in the evening, Helen started to enquire about what the girl was like. It was Sam who gave away her name, but me that blurted out something about Emma's mind blowing tits, and I ended up having to describe them in some detail. \n\nI knew that I was still turned on as hell, and I knew for sure that I wished it had been my tit's that Emma's had been pressed up against. On top of this, I had the impression that the question that Emma had whispered to me about my cunt was without doubt linked to my size, and that had me on a sexual precipice. \n\nOur indecent behaviour that night knew no bounds, and I was completely satiated by the time I fell asleep.\n\nIt was an early start as Sam had to make the journey back to Uni, coupled with the fact that I had lectures, and Helen was on an early. I was tired by the time we got home, as was Helen, so we had a lazy night in front of the television. We had an early-ish night, except that once in bed, we didn't go straight to sleep.\n\nHelen was being surprisingly tactile with me, and was brushing my tits repeatedly, whilst sliding a single finger very slowly between my lips, from my perineum to my clit.\n\n\"Tell me about the girl you and Sam met at the swimming pool,\" she requested seductively. \n\nI told her about Emma's spiky hair, her tantalising tattoo, but it soon dawned on me that as much as these facts were interesting, they weren't really the bits that Helen wanted to hear about.\n\n\"Come on, tell me about her tits. Sam said they really got your attention and that your eyes were all over them.\"\n\nSo I started to describe them in the most graphic detail I could think up.\n\n\"Well,\" I said, \"they were quite a size, I'd say a 38 Double D at least, or possibly bigger. Huge, veiny, quite droopy, and as sexy as fuck. They had huge, dark reddy brown areolas, with little what looked like goose-pimples around them standing out from her tit flesh, and she had the most stonking nipples. Apart from the veins, her nipples were the thing you noticed first, if only because of the size of them. They weren't especially long, (I've seen longer), but they were abnormally big in diameter, and stood out from her areolas by about half a centimetre.\"\n\nHelen continued to coax more information out of me, and we carried on talking about Emma's mesmerising tits for some time, until I could feel Helen starting to shudder slightly alongside me.\n\n\"Sam thinks she's breastfeeding,\" Helen grunted.\n\n\"Why on earth does she think that,\" I asked. \n\n\"She said that she could feel her own tits getting slightly wet when their tits were pressed together.\"\n\nI can't say that I had noticed this, and we weren't exactly dry when we squeezed into the cubicle, but equally, and in fairness, I had had a better view of Emma's breasts when we had been in the shower than I had when we were in close proximity. \n\nAnd actually, now that I thought about it, I hadn't actually seen her nips at all when she was tit to tit with Sam, but I would have to admit that they were truly spectacular nipples even though I had not seen nursing one's before to compare them with. \n\n\"You've got to find out for me. Go back and see if you can see her again.\" \n\nHelen sounded almost desperate, as if she was pleading with me, and as if to demonstrate the effect the thought was having on her, she took my hand and guided it towards her extraordinarily sopping cunt. \n\nI decided that a little provocation wouldn't go amiss, and manoeuvred myself into a position where I could close my mouth around one of Helen's mumsy tits. \n\nI was almost shocked by her response! Helen could hardly keep still, and started moaning for me to 'take Mummy's milk'.\n\nWith my mouth on one tit, her other nipple between the fingers of one hand, and four fingers in her slot, accompanied by my thumb on her clit, Helen came quicker that I have ever known her. \n\nI know that she had mentioned a tit milk fetish to me some time ago, but I had absolutely no idea how deep rooted this was. \n\nHowever, despite the effect this whole thing was having on Helen, there was no way that I could simply turn up at the pool on the off-chance that I might see Emma again, and ask her if a) she was breastfeeding, and b) if she fancied feeding my mature lover.\n\nI had no idea whatsoever if I could do it, or even how to approach her, and this on the premise that I might be fortunate enough to see her again.\n\nOn the upside, this hopeless situation didn't detract from Helen's pleasure which was surprising me in its intensity. I do remember going to sleep that night, spooning Helen with my right hand over her boob, and her left hand holding my hand in place, and we slept very soundly. "
    ],
    "authorname": "Andrea_E",
    "tags": [
        "huge cunt",
        "fleshy lips",
        "fisting",
        "stretching",
        "lesbian",
        "incest"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/bigger-down-there-ch-08"
}