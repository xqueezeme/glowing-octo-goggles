{
    "title": "The Saga Continues Ch. 06",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 30 - Orange Is The New Order, Continued\n\n(Author's note: This is another of those 'bridge' stories, interlude-type stories that give information and set the table with groundwork, as well as a case to solve. Thanks for your patience, and enjoy the sex and the rest of the story.)\n\nThe MCD room erupted with cheers and congratulations. Mary Milton ran over and hugged her husband.\n\n\"Please?\" I simply said, getting Myron moving to the door to the hallway. He began walking, as if in a dream, guided by Cindy. As I followed the applauding group, I turned to them and winked. They applauded some more.\n\n* * * * * * * * * * * * * * * *\n\n(Author's note: the full Orange Order ceremonial and initiation are described in 'Case of the Paper Trail', Ch. 03.)\n\nChief Moynahan and Myron Milton were taken to the Main Conference Room. Cindy went to tell Mary that obviously Myron would not be home that night while most of us were rounding up the rest of the TCPD to the Main Auditorium. My universal message went out, and phones all over the place were chirping or chiming in receipt.\n\nTen minutes later, we had just about everyone in the auditorium. I came in the side door and took the stage.\n\n\"Well, everyone,\" I said, \"since it's only me up here, I'm sure you Detectives can figure out who at least one of the inductees is going to be.\" There was laughter and applause; everyone knew the Chief normally used this gathering to address everyone. For him to not be here meant he had an evening of 'patrollin' to do.\n\n\"On behalf of the Council, the Sheriff, and the Chief, I want to congratulate you on yet another outstanding year.\" I said. \"We've had some tough challenges, particularly in front of television cameras and crews that are extremely hostile to you, and you've handled those challenges with distinction and professionalism. As always, I caution you to remember that loddy-doddy-everybody has a smartphone with a camera, and believes themselves to be the next journalist about to break a big story, at your expense, or they're trying to get paid for footage of you doing something wrong. So keep doing what you're doing, and let's see if we can get through the rest of this year and next year without any Purple Orders.\"\n\nAfter the mostly polite applause died down, I said \"Now it's time to meet this year's Class of Initiates into the Orange Order. First, your Police Chief, Sean Moynahan.\" The Officers were standing as they applauded loudly as the Chief came up.\n\n\"And Data Supervisor Myron Milton!\" I announced. The room erupted into even louder applause as Myron came up. The TCPD had heard that Myron had stood up to the FBI, and had maintained his professionalism even after his father was kidnapped and beaten nearly to death, as well as all Myron had done to help us solve crimes and defeat thugs. This was a well-deserved recognition.\n\n* * * * * * * * * * * * * * * *\n\nAt the Junction Station Depot, the Chief and Myron were put through the initiation. They both remembered to take their lanterns to the potty break. That won me $60, as only three people bet against me when I said they both would remember.\n\nWe began the Patrol of Honor. The initiates and their guides were let out at the southwest corner of Courthouse Square and began walking around the inside of it, while Police barricades kept people on the outside side of the streets. There were people lined up to watch, and many turned on their iPhone lights or had cigarette lighters, creating a sparkling sea of pinpoints of light.\n\nNormally the group would circle Courthouse Square three times. This time, they only went around once, then headed south on Riverside Drive, past the Police Station and entrance to the fairgrounds. We were going to get the west-to-east walk down MLK Jr. Avenue out of the way quickly, then we would not be seen on the southside again until nearly dawn.\n\nWe usually have a Patrol cruiser ahead of us, clearing traffic and closing the street if necessary, and a Patrol cruiser and SUV behind. My radio was tuned to Channel 5 encrypted radio, and I heard it crackle.\n\n\"Alpha Point to Commander Troy.\" said the radio.\n\n\"Go ahead, Alpha Point.\" I replied.\n\n\"We've got a group of people in red shirts beginning to mass near the Cub Club parking lot.\" said the radio.\n\n\"Shit.\" said Chief Griswold, who was riding shotgun with me.\n\n\"Roger that, Alpha Point.\" I said into the radio. \"Be advised to steer the walkers into the street as they approach. Lt. Irwin, are you there?\"\n\n\"Roger that, Commander.\" said Lt. Irwin.\n\n\"Get armored Officers onto the sidewalks there.\" I said. \"Form a barricade.\"\n\n\"Roger---\" started Irwin, who then said \"Commander, be advised that the red shirts are already moving to block the street...\n\n* * * * * * * * * * * * * * * *\n\nChief Griswold was driving my SUV. I'd gotten out and brought Cindy with me. We were slowly approaching the line of red-shirted persons, nearly all black, some with chains with bicycle locks fastened to them, some with baseball bats, and some with what looked like crowbars. How dare they, I thought to myself. How dare they. We shall see who is really willing to use a crowbar, here.\n\nI came up to Precinct Captain Thompson, who was in his robes, leading the others. Teresa was bringing up the rear. I knew both were authorized to be armed with multiple firearms. \"Just follow me through them, Captain.\" I said. Thompson nodded silently.\n\nI had my orange crowbar at 'port arms', ready to use it as I approached the line of red-shirted thugs, and I could clearly see the logo on the shirts of someone planting a pennant on a hilltop. It was an ANTIFA logo, carefully copied from the Nazi propaganda groups of the 1930s. I thought of my great-grandmother and of Dr. Heinz, and did not stop walking as I came right up to the line.\n\nThere weren't really very many of them. Some were still arriving at the scorched-out Cub Club site. Some were caught behind Police lines trying to get there. We had caught them unawares, they had been expecting us at least half an hour to an hour later.\n\nI was the only Officer without a helmet on. I wanted the Enemy to see who was coming, and they did know. Everyone on my side was ready for the fight to begin. I figured I'd get at least four of them before they could get to me...\n\nIt didn't happen. The red line broke open. The Red Sea, such as it was, parted. I walked right through, followed by Thompson, Moynahan, Milton, and Croyle. Cindy Ross brought up the rear, ready to use her crowbar and martial arts skills to wipe out as many of them as she could if they attacked.\n\nWe walked on down MLK Jr. Drive to near T-Square's 'Rhythms & Rap' club, which was busy. People were watching from the parking lot, but there were no red-shirts and no problems. Cindy and I dropped out of the line as it patrolled on.\n\nBehind us, the red-shirted thugs began running in every direction, pursued by some very angry TCPD SWAT personnel as well as heavily armored 2d Precinct Officers. Six arrests were made.\n\nPart 31 - Section 31\n\nThe rest of the night went well. We stayed near Courthouse Square and the streets around us, seeing more friendly crowds watching. They began petering out, and eventually the whole Town began to quieten down as people went home and went to bed. \n\nAt 3:30am, I woke up Chief Griswold and we went to Courthouse Square. The initiates were making a circle after having taken a potty break and eaten some warm soup at Police HQ. I pulled alongside the group.\n\n\"Captain Croyle!\" I called out the window of my Police SUV. \"Come with us, please.\" I stopped the vehicle and Teresa climbed into the backseat. We headed to the Junction Station Depot.\n\nTeresa hung her orange-glassed lantern on the hook outside the door and came in with us. She was stunned to see the Depot room in all red lights. Chief Griswold, Zoe Singer, Efram Elliott, as well as Rudistan, Hicks, and Kirkpatrick were all there, wearing monk-like robes. I came around from behind Teresa, also wearing a monk-like robe.\n\nChief Griswold and Efram Elliot did the explaining: \"Captain Croyle,\" said Griswold, \"we are brothers and sisters of a very special part of the Orange Order and the Fire Chief's Order of Distinction. There are others of us among the Police and Fire Departments, and our mission is to protect the Citizens and our good brethren from those that would destroy us. At this point, I must ask you to commit to an oath of secrecy, which will not commit you to join us. If you do not wish to go further, you may leave with no hard feelings nor retribution.\"\n\n\"I agree.\" said Teresa, looking over at me as if for guidance.\n\n\"Yes, Ms. Croyle,\" said Chief Griswold, seeing her look, \"it was Commander Troy who nominated you for this, inclusion into the 'Blood Order'. He has told us that he considers your loyalty and bravery to be above reproach, and coming from him, that's the highest reference you could possibly have.\"\n\nTeresa looked over towards me with gratitude in her eyes, and I nodded back at her. Then the Chief explained what the Blood Order was, how it was a real life equivalent of Star Trek's 'Section 31', how we were willing to go beyond the normal constraints to preserve, protect, and defend the Constitution as well as our good Town and County.\n\nTeresa agreed to join, and was initiated. When we got to the part of drawing blood into a bowl and setting it aflame, Teresa looked over at me again, remembering the Clan Troy ceremony. I just nodded and was next to add my blood to the bowl.\n\n\"This is the first time we've had someone initiated into the Inner Circle and then straight into the Blood Order.\" said Chief Griswold. \"Crowbar, if you'll take her back to the line, we'll clean up here.\"\n\n\"Yes, Chief.\" I said. \n\nAs we drove back, Teresa said \"Cindy's not part of this?\"\n\n\"No, not yet.\" I said. \"We're keeping the Blood Order really tight. Only a few Firefighters and Police Officers are in it, and those that have shown they're willing to do whatever it takes for the Greater Good. There are some who do not quite understand that we sometimes have to color outside the lines, good people who are honorable in every way, but not Blood Order material.\" \n\nTeresa nodded. We caught up to the line on North Street, and Teresa took her orange lantern and resumed the Patrol of Honor. Her red lantern remained safely in my keeping in my SUV.\n\nI was remembering my conversation with the Chief, Kirkpatrick, Zoe Singer and Elliot from days earlier. They had come to me and asked if Cindy Ross should be inducted into the Blood Order.\n\nIt took a painful effort for me to say after a pause \"No.\" I followed it up by saying \"Cindy Ross is one of the greatest Police Officers I'll ever have the honor of knowing, she's a wonderful person, and I'm proud as hell that we share the same blood. Her integrity is above reproach; she is one of the most honorable people I've ever known... \n\n\"...and that is why I can't suggest she be part of the Blood Order. In a way, she's too good for it, too honest. And she is the person that keeps me coloring within the lines. She means well, but she might balk at doing some things that you and I would be willing to do.\"\n\n\"We appreciate your own integrity in saying that.\" said Chief Griswold. \"I happen to agree, both that Captain Ross is a very special person, and that she may not be what we are looking for in Blood Order candidates. Not everyone is suited for this, cut out for it.\"\n\n\"Is there anyone you think is suited for it, Don?\" asked Commander Zoe Singer.\n\n\"Yes.\" I said. \"Teresa Croyle.\" I think they halfway expected me to say that; they showed no reaction to it when I said it.\n\n\"No one but you could suggest that name, Commander.\" said Efram Elliot, who was very aware of Teresa's old, bad story, of beating up Dean Allen and being 'Teresa Cunt'. \"But the fact that you are doing so is enough to sway me.\" That made it a 'done deal'.\n\nNow in present time, I felt no regret for bringing Teresa into the Blood Order 'clan'. But I wondered if I'd done Cindy a disservice...\n\nPart 32 - Policeman's Ball and Football\n\nIt was officially a ritual: I was awakened at 5:00pm, Saturday December 2d. I opened my eyes to see my four year old daughter's eyes right above mine. \"Wake up, Daddy.\" Carole said with a huge grin. \"It's time to get ready for the Po-leece-man's Ball.\"\n\n\"Okay, Sweetie.\" I replied. \"Give me a big hug first.\" Carole's way of doing that was to collapse onto me, and I gave her the big hug. Then Laura came to the rescue and picked up Carole, and I went to the bathroom to wake up with a long, hot shower...\n\n* * * * * * * * * * * * * * * *\n\nBy sleeping in, I'd missed the first part of the Conference Championship game. The Tigers held a 14-10 lead over the Bulldogs late in the second quarter.\n\nThe Policeman's Ball was at the Civic Center on the northwest corner of Courthouse Square, next to the State Office Building. Cindy had arranged for parking at Headquarters and the Fairgrounds to be met by a shuttle, which eased the inadequate parking congestion around the Civic Center (not to mention the expensive pay parking lot).\n\nLaura and I got there early. Laura was wearing a lovely black gown, making sure it wasn't too audacious. For University functions, she had no problem outclassing all the other of what she called 'the bitches' from Academia. For the Policeman's Ball, she kept it simple and tasteful.\n\nI was in my formal Uniform with medals and a tuxedo shirt and white tie, as was Chief Moynahan. Cindy was wearing her formal uniform with a skirt for the first time I could remember. Callie was wearing a beautiful light-blue gown and looked absolutely stunning. Todd came with Teresa, and of course looked handsome and virile in his tuxedo.\n\nNeedless to say, early arrivers were at the open bar, and were watching the game. Laura and I found a table near the back of the bar and watched, as well, and were soon joined by Cindy, Teresa, and their escorts. Many an eye turned to look at Callie. Many a female's eye turned to look at Todd.\n\n\"Not looking good for the home team.\" I whispered. It was 24-13 Tigers, and as we watched it was clear the Tigers were dominating the lines of scrimmage on both sides of the ball. As it grew dark outside, the Tigers ground out an eight minute drive and scored at the end, now leading 31-13 with 1:31 left to play. There were many groans in the room when the Tigers running back ran clean over a University defender and into the end zone.\n\nAnd then came the Bulldogs on offense. Their desperation pass on 3d down was intercepted, and the Tigers came out to take the victory formation. The Bulldogs' undefeated season and dreams of championships... was over. Cindy was by far the most depressed at the table. I offered to buy her a drink in consolation. (Yes, the drinks were free; hence, the ease of my offer to 'buy' her one...)\n\n* * * * * * * * * * * * * * * *\n\nSheriff Daniel Allgood was glum as he took his place in the formal receiving line just before we opened the doors to the ballroom. His wife Melina, looking gorgeous in her black and white dress that accented her magnificent body, was trying to look somber, but the gleam in her eye showed me that she was one Wildcat that was not unhappy about today's result.\n\nFirst in line was the Mayor and his wife, followed by Sheriff Allgood and Melina. Next in line was Chief Sean Moynahan and his 'date'... future Police Chief Molly Ross Evans. Then came me and Laura, then Fire Chief Quinlin and his wife (my first time meeting her, by the way). The Fire and Police Chiefs had agreed on a reciprocity of attendance for their respective formal banquets.\n\nChief Griswold and his wife were among those that came through the line, and they were loving it, hugging all of us as they came through. Todd and Teresa were among the first to come through, as well, and I was a bit surprised at the lack of awkwardness between them and Melina, unlike past years. Daniel was a bit awkward with everyone.\n\nI found it unusual that so many non-Police personages came. The D.A. came. Paulina came with Sergeant Rudistan; I asked him how he landed such a hot date, and Paulina laughed and Micah just winked and gave me a thumbs-up. Regional SDOJ Director and former TCPD Police Chief Harold Bennett came, escorting State Attorney Jenna Stiles. Tanya Perlman and Jack Muscone came through; Tanya's cheeks were rosy with perkiness, while Jack's eyes betrayed his tiredness. \n\nWhen Cindy and Callie came through the line, it started a buzz. I don't know if anyone recognized Callie as one of the hottest porn stars in the Nation, but there were a lot of guys (and probably some gals) wishing they were Cindy Ross at that moment. Cindy looked as happy and proud as she could be to have Callie on her arm.\n\n* * * * * * * * * * * * * * * *\n\nAfter the Mayor gave his opening remarks, the Chief said a few words about his pride at being Chief of such a great Police Force, and also stating is appreciation for being voted into the Orange Order, which got him applause. Then it was my turn and I stood up and went to the podium in the middle of the long table.\n\n\"First,\" I said, \"I have not failed to notice that Chief Moynahan outpunted his coverage by bringing this lovely young lady with him, Lt. Molly Evans of the Nextdoor County Police.\" There was laughter and applause. Molly blushed.\n\n\"I do want to recognize that when Chief Moynahan was with the Midtown Police, then-Detective Evans was part of his outstanding team. She then came to Nextdoor County to be Vice Lieutenant, and we ended up with Chief Moynahan.\"\n\n\"Obviously Nextdoor County got first choice.\" called out Chief Moynahan, to more laughter and cheers. I just raised my eyebrows a couple of times.\n\n\"And they're getting a lot more.\" I said. \"It's my honor to announce to you tonight that in January, Molly Evans will become the Police Chief of the Nextdoor County Police Force, and we congratulate you on that.\" The room rose to a standing ovation for a moment.\n\n\"It has been another year of great pride for me to be working with the best Police Force in the world.\" I said, which of course got applause. \"You all have made it look routine, but I know how much work and professionalism you've put into your jobs to make yourselves look so good.\"\n\n\"Tonight, I want to recognize a special group. One of the best parts of the tradition of the Policeman's Ball is that I get to see you with your spouses, your dates... I'll just say 'spouses' from now on to keep it simple. And we on the Police Force know it but don't say it enough that you, our spouses and loved ones, are behind us, supporting us, helping us do our jobs. So for tonight's toast...\" I picked up my wine glass and raised it as everyone stood up... \"I want to recognize you. To our spouses and loved ones!\"\n\n\"To our spouses and loved ones!\" everyone cried out in unison. Glasses clinked and we all drank our toast.\n\n* * * * * * * * * * * * * * * *\n\n\"Very touching, Darling.\" Laura said to me as we ate our food. \"I could tell that everyone appreciated you recognizing all the spouses out there.\"\n\n\"I appreciate my spouse the most.\" I said. \"But yes, it has to be hard for a lot of these wives or husbands.\"",
        "\"Hasn't been easy for me, either.\" said Laura. \"You keep going after big perps. I know from Company life that one has to just drive on and not consider what might happen, but no, it's not easy.\"\n\nI just nodded. My own greatest fear was not for myself, but that someone would come against me by attacking my family... oh yeah, Westboro did that already... and it was not a fear that went away.\n\n* * * * * * * * * * * * * * * *\n\nMyron received many congratulatory toasts from fellow Officers for his Orange Order induction. Mary caught on fast that they were trying to get Myron drunk, and she had quietly substituted apple juice for alcoholic drinks. Myron still was buzzed.\n\nIt soon became apparent that trying to ask Callie Carrington to dance might earn one the displeasure of the Green Crowbar, whose first name to them was 'Captain'. Cindy made sure to have most of the dances with Callie, though I did get in once dance with Callie myself, just to show the world I could. I also danced with Cindy, with Teresa, with Mrs. Griswold, with Molly (who danced with a lot of my Officers, I noticed), and of course with Laura most of the time. Todd did sneak in a few dances with Laura, of course.\n\nAnd Daniel danced with Laura while I danced with Melina one time. \"I'm trying to be a good girl and not give Daniel a hard time about the Bulldogs today.\" Melina said.\n\n\"You? A good girl?\" I said with a grin, mercilessly teasing my ex-wife, who just gave me a 'look' back. I said \"Well, it has subdued the party somewhat... that might be a bad thing or a good thing.\"\n\n\"I'm just glad you provide rides home for them if they need it.\" Melina said.\n\n\"Perks of being in charge.\" I said, remembering that I'd authorized sober Officers to use Patrol cruisers to get intoxicated Officers safely home this night. \"What about you? Expecting a great year next year... running for Mayor's wife...\" Melina smiled at that.\n\n\"Yeah, that's going to be fun.\" said Melina. \"But it's my 'other' job that's getting heated up. Bad things are going on around the world, and I'm being asked to eliminate bad people... overseas now, which I never did much of before.\" I nodded. \n\n\"All I'm going to say about that,\" I said, \"is that I am a happy Wildcat to have my wife retired from that Company and staying home with me.\"\n\n* * * * * * * * * * * * * * * *\n\nMelina slid her shapely legs back and spread them wide as her husband Daniel mounted her in their bed at home after the Policeman's Ball. She helped Daniel guide his nine inch cock into her sopping wet cunt. He began to fuck her with slow, steady thrusts.\n\n\"Ohhh, that's good.\" the raven-haired beauty moaned as she began grinding her hips and ass as her husband sank into her and withdrew, only to sink in again in a steady rhythm.\n\n\"You were the belle of the ball.\" said Daniel, putting his weight on his wife and nuzzling her neck. \"You were the most beautiful woman there, as always.\"\n\n\"And you're the hottest stud, as always.\" Melina whispered, letting her husband kiss her as he pumped in and out of her. She pulled her legs back farther, her feet high in the air, enjoying taking her husband's long, deep strokes into the depths of her tight, wet pussy.\n\nThey fucked in a deep, steady rhythm. Daniel worked to scrape the top of his cockshaft along the upper wall of Melina's cunt, where her G-spot was. When he heard her moan and felt her pussy gush around him, he knew he'd hit it.\n\n\"Oh yeah, right there...\" Melina moaned softly. Daniel thrust up on that spot again and again, and Melina moaned again and again as her orgasm rose and then overwhelmed her.\n\n\"Oh YES!... YES, BABY!... Oh I love you baby! I love you!\" Melina cried out as her husband fucked her relentlessly. As her orgasm subsided, Daniel began nuzzling his beautiful wife's neck.\n\n\"I love you, Melina.\" Daniel whispered into his wife's ear. \"I love you.\" He then suited his actions to his words as he fucked Melina harder, getting nuts-deep into her clutching cunt. He felt the intensely pleasurable pain building in his loins.\n\n\"UHHHH!\" Daniel gasped as he came inside his wife, firing jet after jet of jism into Melina's cunt, filling her with that load of his sperm that she loved hosting in her magnificent body...\n\n* * * * * * * * * * * * * * * *\n\nThey cuddled on their right sides, Melina's luscious ass pressing into Daniel's abs and groin, his arms wrapped around her, his hand on her breast as her hand kept it on her big tit.\n\n\"So you have to go to Europe?\" Daniel asked sleepily.\n\n\"So they say.\" said Melina. \"I'm not really supposed to go on field missions overseas, but they say some big things are going on over there. I think they're full of shit.\"\n\n\"Islamist threat?\" Daniel asked, even though he knew he shouldn't ask.\n\n\"I don't know.\" said Melina. \"Sometimes I think the bastard politicians in Washington don't know who our friends are and who our enemies are. They embrace Islamists, coddle them, all the while the Islamists are raping and murdering the wives of our diplomats overseas. It's almost like our highest level politicians want us to immolate ourselves and let our enemies win.\"\n\n\"It may be more than that.\" said Daniel. \"They want the Jews to be destroyed, especially in Europe. I wouldn't complain if you quit the CIA.\"\n\n\"Well, let's not talk about it.\" said Melina. \"The sooner we get to sleep, the sooner I can wake up and give you your morning blowjob.\" Daniel said no more, and was soon asleep.\n\nYes, my dear husband, Melina thought to herself as she drifted off to sleep. You're getting too close to the truth. The Powers-That-Be in this country and the European nations want to finish what Adolph Hitler started: the annihilation of every Jew on the face of the earth. They think I don't know that they want to send me to kill those that are helping the Jews, arming the Jews. But I know, and I don't like it... your daughter, my dear husband, is ethnically a descendent of an ancient family line of Jews. So how do I get out of this morass?... What would the Iron Crowbar do?...\"\n\nPart 33 - Back To Work, Down To Business\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette from in front of City Hall at 7:00am, Monday, December 4th. \"Channel Two News has learned that one of the guns found in the retaining pond near where Tammy Cochran and her unborn baby's mortal remains were found does match the ballistics of two bullets that were found at that crime scene!\"\n\n\"It is a shocking development in this twelve-year-old case.\" said Bettina. \"The Town & County Police have not returned our calls for comment, but Chief Sean Moynahan said in a statement through the Press Relations Office that more information will be coming as soon as the Police can properly assess what they've found so far.\"\n\n\"In State news,\" said Bettina, \"Social Justice groups protested loudly as Governor Val Jared pressed the button to light the State Christmas Tree at the Governor's Mansion Saturday night. The Social Justice groups stated that Governor Jared's actions are offensive to non-Christian religious groups as well as atheist groups, and confirm Jared's continued disregard for the feelings of all people.\"\n\nBettina continued: \"The Governor then outraged his adversaries by tweeting that he was tired of Christians being discriminated against by these 'intolerant' groups, and that Christians like himself had every right to celebrate Christmas. This brought fresh calls by both Democrats and Republicans for Governor Jared to resign amidst furious statements condemning the Governor's insensitivity. And now let's go to Nick Eastwood for Sports. Nick!\"\n\nNick Eastwood appeared in his well-fitting suit and tie. \"Thank you, Bettina!\" he said. \"The Bulldogs are still reeling from their stinging defeat at the hands of the Tigers in the Conference Championship game, 31-13. Not only was it a bitter ending to a previously undefeated season and Conference and National title hopes, but the Bulldogs say they feel very slighted and disrespected by being relegated to the Gator Bowl in Jacksonville rather than a major bowl. The Tigers were invited to the Orange Bowl to play The Ohio State University, while the Wildcats were surprisingly invited to the Cotton Bowl to face the Texas Aggies of the Southeastern Conference...\"\n\n* * * * * * * * * * * * * * * *\n\n\"Gator Bowl?\" Cindy muttered, stunned, as we drank coffee in MCD. \"Really?\"\n\n\"That is bad.\" I said. \"Y'all definitely got shafted on that one. I don't know what happened.\"\n\nTeddy Parker was a bit too helpful in speaking up: \"What happened, sir, ma'am,\" he said, \"was that probably Georgia or Florida should've gone to the Gator Bowl, but they play in Jacksonville every year and there was panic that their fans would not attend the Gator Bowl game. So they both got bumped up to the better bowls in the State of Florida, and our Bulldogs got kicked down. The Cotton Bowl wanted to feature Jamaal Washington, and I understand the Wildcats Trustees have ties to Texas and the Cotton Bowl. I think it's a load of crap myself, especially for our Bulldogs here...\"\n\n\"Yeah it is.\" said Cindy, all joy of showing off Callie at the Policeman's Ball now wiped out. She refilled her coffee mug, but soon left the klatch for her office.\n\n\"Why aren't you at Detective School, Mr. Parker?\" I asked.\n\n\"It begins tomorrow, sir.\" said Parker.\n\n\"Very well.\" I said. Mary, has Myron recovered from his weekend?\"\n\n\"No sir.\" said Mary, whose hair was purple today. \"It's the anniversary of the Policeman's Ball where he proposed to me, as always, so what little energy he had left after the Orange Order initiation, I made sure to drain out of him yesterday.\" The room erupted into laughter.\n\n\"T-M-I, Mary.\" I said through my own laughter. I noticed Joanne was sulking at her desk. I went over. \"Everything okay?\"\n\n\"Oh, yes sir.\" said Joanne, sitting up straighter. \"I'm just ticked off about that report about Governor Jared. He's right... Christians can't celebrate our traditions, we're called intolerant of other religions if not outright racists. But they can say whatever the heck they want about us, force us to not be able to have Christmas trees or sing carols, and of course the Muslims threaten to murder us and the Media fawns on them. Why is that, sir?\"\n\n\"Because the Christian religion is based upon and celebrates the one thing that the Government hates: the family. The State wants to replace mother with themselves as caretakers, and father with that all-encompassing 'father figure', be it Mohammed or the Democrat national leader. To do that, they must destroy Christianity as the institution that binds the family. And that's what they've been doing, through intimidation and the Courts, for decades now.\"\n\nJoanne was not mollified, but I could see she was beginning to grasp the underlying true motives of the Enemies of all that is Good about America...\n\n* * * * * * * * * * * * * * * *\n\nThe Chief gathered me, Cindy, and Teresa in his Conference Room at 9:00am for a meeting. Paulina Patterson was also there. \"So, what do we have from this ballistics match?\" the Chief asked.\n\n\"I can't believe the Press found that out, much less reported on it.\" said Cindy angrily.\n\n\"Let me tell you the full story\" I said. \"Tanya's lab not only matched the weapon to the bullets, they found some lot numbers of those containers of chemicals. Ultra Diox, which was being refined by White Supremacists like Dora Ellis into nerve agent. I don't mind the Press talking all day about the gun ballistics; even if the FBI lifts a number off the gun and we can match it to a person, it's probably not enough in Court. But the Ultra Diox can be traced back with purchase records, which is what I worked on all day yesterday. And if the Press is not talking about that, then I'm a much happier Police Commander.\"\n\n\"Ahhhh.\" said Paulina. \"So the Press gets a leak about the gun ballistics, and don't stop to notice the chemicals.\"\n\n\"Which doesn't get leaked, and we have time to act upon it.\" I said. \"I've already got the Ultra Diox traced back to Dora Ellis making the purchases from the North Dakota company. The containers found were just part of what she ordered, so there may be more stuff buried elsewhere in this County. At any rate, the timeframe is after J.G. McGill deeded the land over to the County.\"\n\n\"Doesn't do us much good, then.\" said Cindy.\n\n\"Maybe not, but maybe so.\" I said. \"Here's what I'm looking to do. It would be a godsend if that gun is matched to J.G. McGill. That would be probable cause to at least bring him in, and then lean on him for that and for the chemicals.\"\n\n\"Well, just to play Devil's Advocate, here,\" said Cindy, who was good at doing so and had done so on many occasions, \"let's say that happens. It doesn't make McGill the shooter beyond reasonable doubt. The chemicals were dumped after he deeded the land, so he can say he doesn't know a damn thing about that, and how do we prove otherwise? He's not a dumb man, and his wife is a former judge and absolutely knows the law inside and out on this.\"\n\n\"You're absolutely right.\" I said. \"On all points. But... we are not obligated to tell McGill everything we know... or don't know. And we're under no obligation to correct any assumptions he may make.\"\n\n\"I'll definitely take this straight through the back door to Judge Watts.\" said Paulina. \"He'll probably grant a warrant, as long as you're careful in what you ask for, Don.\"\n\n* * * * * * * * * * * * * * * *\n\nJack Muscone appeared in my office at 1:15pm, Monday, December 4th. Cindy came in after him. \"Eureka!\" he said. \"The FBI got numbers off the gun---\"\n\n\"Would those numbers be '7XQ3021'?\" I asked. Jack stopped still, utterly speechless. Cindy looked amazed, too.\n\n\"What, did Tanya call you and tell you?\" Jack asked, his voice a stunned whisper. I shook my head and Jack said \"No, really, how did you do that?\"\n\nI grinned. \"A magician should never tell his tricks.\" I said. \"But in this case, the answer is as amazing as the trick, so I'll show you.\" I handed Jack a file folder. \"As you'll see inside, J.G. McGill filed a Police report six months before Tammy's disappearance twelve years ago... saying that a handgun with that number was missing and presumed stolen from his truck. He said he carried it in his truck all the time, and it disappeared that day or the day before he reported it. I found that Police report yesterday, and when you came in I just guessed that it was the same number. And now you're ordering a stake and firewood again for my fair witch trial in Salem, USA.\"\n\n\"Well, I'll be damned.\" said Jack, shaking his head. Cindy was suppressing laughter as Jack said \"You're right, that was a neat trick, and you got me good. So... does this prove anything?\"\n\n\"Well,\" I said, having him and Cindy sit down, \"I'm drawing two inferences. Either McGill was really, really smart in reporting that gun stolen, then trying to file out the number in anticipation of eventually using it to kill Tammy, -OR- his wife or son took the gun without his knowledge and he really did think it was stolen from him.\"\n\n\"Still too many reasonable doubts.\" Cindy said.\n\n\"Yes, but we can take a risk now, and get a warrant to bring in McGill.\" I said. \"First, let's brief the MCD crew...\"\n\n* * * * * * * * * * * * * * * *\n\nFour Patrol cruisers, two Police SUVs, and one SWAT paddywagon approached the McGill home on the east side of the County. The gate to the road had been rammed through as we invaded the property. As we pulled up to the house, McGill was on the front porch. It did not take the TCPD drones long to spot the other men waiting in ambush on the far side of the house. Two of the Police cruisers pulled around to confront them.\n\nI opened the door of my Police SUV and held the warrant up as I slid out of the seat, keeping the door in front of me as protection.\n\n\"Yes, Mr. McGill, this is a warrant.\" I called out. \"It requests and requires your presence at Police Headquarters to be asked a few questions.\"\n\n\"Hell of a posse you're bringing in.\" growled McGill. He came off the porch, showing his hands. Johnson and Barker, both well armored, moved in to effect the arrest.\n\n* * * * * * * * * * * * * * * *\n\n\"I'm not under arrest?\" McGill asked with curiosity as he was brought into Interrogation-Alpha. Mr. Garner, once of Succup & Payne, P.C., and now of Lowe, Ball & Lynch, P.C., was his legal representation. Mr. Garner had been the late Nathan Allen's attorney, which means I did not think much of Mr. Garner's integrity.\n\n\"Not yet.\" I said. \"You were brought in under a material witness warrant. But I am going to read you your rights.\" I did so from the card and McGill said he understood them. I then introduced Detective Theo Washington, who was sitting next to me. Cindy, Joanne, Paulina, and a very curious Chief Moynahan were watching from the anteroom.\n\n\"Why shouldn't my client just take the Fifth and we just walk out of here?\" asked the attorney Garner.\n\n\"He has every right to do that,\" I said, \"but then he would be denying himself his chance to explain some things, which might be in his best interest.\" I turned to McGill. \"So, you reported stolen a handgun that has since been found in a retaining pond. How do you suppose that gun came to be in that lake, which was on your property at the time you reported it missing?\"\n\n\"I have no idea.\" said McGill levelly. \"It disappeared out of my truck and I reported it to Police.\"\n\n\"How long from the time you last saw it until you noticed it was missing?\" I asked.\n\n\"A day.\" said McGill. \"Like from Tuesday noon to Wednesday noon, though those might not be the exact days. But one day to the next.\"\n\n\"You think it was taken out of your truck?\" I asked. \"Could it have fallen out?\"\n\n\"It didn't fall out.\" said McGill. \"I figure I left the door unlocked and some shit came along and went in the glove compartment and found it.\"\n\n\"So Mr. McGill,\" I said, \"in looking at the Tammy Cochran case, where exactly were you on the day she was reported as missing?\"\n\n\"I only remember something from that far back,\" said McGill, \"because of that disappearance, and it's not like my memory of it is perfect now. I was probably all over the place that day, like every day. Farm work, business in the County, who knows what else. Whatever I said back then that's in the police reports is my answer, and I refer you to those.\"\n\nI nodded. \"That's understandable.\" I said. \"But it might behoove you to think hard about it, and try to remember. You see, Mr. McGill, not only that gun was found, which ties back to you through the number on it being recorded when you bought it. Bullets that have been proved to have been fired from that gun were found... in the exact spot where Tammy Cochran and her unborn baby were found. That's two counts of murder in the first degree, one with aggravating circumstances.\"\n\nThe lawyer and McGill were both wide-eyed with shock. \"What are you trying to insinuate, Commander?\" thundered the lawyer.\n\n\"Oh, I think it's pretty damn obvious.\" I said. \"And you know it, too.\"\n\n\"Purely circumstantial!\" said the lawyer. \"You'll never prove my client fired those shots!\"\n\n\"Men have been executed on much, much less circumstantial evidence, Mr. Garner.\" I said. \"Now let's discuss something else, Mr. McGill. When that pond was searched, the gun was not the only thing that was found. Extremely toxic chemicals were found in that lake. The kind of stuff that some domestic terrorists were trying to create nerve agents out of.\"\n\n\"What?!\" thundered the lawyer again. McGill looked decidedly different... he looked sick to his stomach.\n\n\"And on property that was once yours, Mr. McGill,\" I said, twisting the proverbial knife, \"and was deeded to the County under some rather mysterious circumstances.\"\n\n\"What the hell is this crap about, Troy?\" thundered Garner again. \"You've got a reputation as a dirty dealer, but I didn't think you'd stoop to this level of----\"",
        "\"I'm no dirty dealer, and you damn well know it, Garner.\" I said, my voice hardening into iron. \"Here's the bottom line up front. I've got a paper trail from North Dakota to San Francisco to here. Does the name 'Dora Ellis' ring a bell, Mr. McGill? It better... and you'd better come correct on everything you know about her and these chemicals... and the other person she was involved with.\"\n\n\"I need to talk to my lawyer.\" said McGill. \"And it may take a-whillle.\"\n\n* * * * * * * * * * * * * * * *\n\nYes, it took a while. McGill and his lawyer talked for almost an hour, sometimes huddling, sometimes arguing. Of course we could not listen in. I actually went back to my office and made sure the paperwork was in perfect order with Paulina.\n\n\"Think this'll get anything out of him?\" asked Cindy as she sat with us. \"Are you trying to use the chemicals to get him to confess to murder?\"\n\n\"Just the opposite.\" I said. \"He doesn't know what we truly have, and his lawyer was trying hard to find out from the minute he walked in. They're in there stewing over what they should do. By the way, Theo, is it not obvious that J.G. McGill murdered Tammy, though we'll never get a conviction for it?\"\n\n\"I think I see what you're saying, sir.\" said Theo. \"He was really clear in his memory of the gun disappearing. He was careful to be not clear on his whereabouts the day Tammy disappeared.\"\n\n\"Yes, that, and a lot more, starting from when you dragged this case back up.\" I said. \"So he's sweating about it now, and deciding----\"\n\nThere was a knock on my door, and the Duty Desk Sergeant looked in. \"Sir,\" he said, \"Judge McGill is in the front lobby, and she demands to see her husband immediately.\"\n\n\"Why, that---\" Cindy started, but I stopped her.\n\n\"Sergeant,\" I said, \"Tell Judge McGill, and be sure to say this exactly, that Commander Troy says she can see her husband during visiting hours at County Jail, and only then and there. Watch her reaction, and let me know what it is and what she says. And then ask her to leave the premises unless she'd like to be arrested and put in County Jail.\"\n\n* * * * * * * * * * * * * * * *\n\n\"All right, what do you want?\" asked the lawyer Garner. We'd been called back into Interrogation-Alpha.\n\n\"Just some answers.\" I said. \"Mr. McGill, why did you deed that land to the County?\"\n\n\"Got a good deal on it.\" said McGill. \"Tax breaks and stuff.\"\n\n\"No no no.\" I said. \"the real reason. Why did you give that land up? Especially since you could've run interference against us with regard to access, with regard to the Cochran crime scene. Hell, the crime scene might never be found if you don't give that land up. Why give it up?\" I stared hard at McGill. He did not meet my stare.\n\n\"All right.\" said McGill. He was not stupid; he could see where this was going. \"Put immunity on the table for anything and everything to do with those chemicals, and I'll tell you everything.\"\n\n\"And immunity for everything to do with the Cochran case.\" said the lawyer.\n\n\"No way on that.\" I said.\n\n\"Garner, are you some kind of idiot?\" McGill snarled at his legal beagle. \"I didn't kill Tammy Cochran, and they can't prove I did. As to the rest of it, I need immunity, and then I'll talk.\" I turned and waved for Paulina to come in.\n\nPart 34 - Closing In\n\nThe sun was setting on Monday, December 4th, one of the best days of my TCPD career. We were on a piece of property, Crown Chemicals to our north, BOW Enterprises in the distance to our south. The Public Health Department's HAZMAT team was in protective gear, including masks, and they were bringing up from a pit in the ground, and cataloguing as evidence, a large number of plastic jugs that said 'Ultra Diox' on their labels, but held refined, much deadlier agents inside.\n\n\"Yep.\" said Jack Muscone as we made our lists and checked them twice. \"Same lot numbers. And Thomas Cook's shell company of that time, which he and Dora Ellis jointly held, bought the stuff.\"\n\n\"And this is his property still.\" I said. \"That should be enough.\"\n\n\"The U.S. Attorney is coming in from the City.\" said Muscone. \"And Paulina is waiting, as well.\"\n\n* * * * * * * * * * * * * * * *\n\nU.S. Attorney John Jones looked over the evidence as I laid it out, carefully going over old material from Pastor Raymond Westboro's days, weaving Dora Ellis and her father, Superior Bloodlines leader Henry Boxman, into the chain of events, then adding the paperwork from the North Dakota company and tying Thomas P. Cook into it. It was after midnight before I was done.\n\n\"It holds up.\" said the U.S. Attorney. \"It holds up. Congratulations, Commander. You've done it. And it's well within the Statute of Limitations timeframes. I'll take this to the Federal Grand Jury first thing in the morning.\"\n\n\"And I'm doing the same with the Grand Jury here.\" said Town & County ADA Paulina Patterson.\n\n\"I'll help with that.\" said State Attorney Jenna Stiles. \"But did you have to give McGill immunity to do it? I hate letting a racist get away with it like this.\"\n\n\"Me, too.\" said John Jones, who was black. \"But McGill wasn't really part of this, was he?\"\n\n\"I don't think so.\" I said. \"McGill was working for the interests of McGill much more than he was working for the interests of Whites as a group. He was trying to keep control of a County tat was slipping out of his grasp, and ironically due to the work of one Pastor Raymond Westboro, who was much more racist in his attitudes. McGill really wanted no part of Dora Ellis's schemes, and actually worked to extract himself from involvement. That's one reason he let that pond property near his house go. So no, I don't think McGill is a Superior Bloodlines type nor associate. I'm good with giving him immunity to get what we've got.\"\n\n\"So we've got Thomas Cook?\" asked Jack Muscone.\n\nI thought about a day in the recent past, when old Mr. Davis sat in a wheelchair, blocking the destruction of a widow's house at the hands of Thomas P. Cook. I thought about that widow of a Korean War hero, ruthlessly cast out of her home by Cook, who had used and abused the Law for the purposes of his own enrichment. I remembered all the other times Cook had worked as hard as he could to stop me from doing my job. And I'd kept my promise to myself.\n\n\"Yes.\" I said, with the most satisfaction I'd felt since seeing Raymond Westboro die right next to me. \"We've got him.\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redhead from in front of City Hall at 7:00am, Wednesday, December 6th. \"In a series of shocking events over the last 24 hours, the Town & County Council is now one member less!\"\n\n\"Yesterday,\" said Bettina, \"both Federal and local Grand Juries brought indictments against local businessman Thomas P. Cook, for money laundering across State lines, and for being involved in a domestic terror plot to import nerve agents that were to be used against black citizens in this County!\n\n\"The entire scheme and the evidence supporting the charges were discovered and put together by Town & County Police Commander Donald Troy,\" continued Bettina, \"who said in a statement that this was just part of the continuing investigation of the crimes of Pastor Raymond Westboro and white supremacy groups that have been destroyed in the last two years.\"\n\nBettina went on: \"Governor Val Jared, using a State Law that allows him to suspend local elected officials upon being indicted, ordered Thomas P. Cook removed from the Town & County Council, effective immediately. State and Federal APBs have been issued for Thomas P. Cook's arrest based upon arrest warrants issued by the Courts. But so far they have not been fulfilled, as he has apparently fled the jurisdiction and remains at large.\"\n\n* * * * * * * * * * * * * * * *\n\nThe large contingent of Detectives and Officers in MCD stood as one and applauded me as we listened to the report. And I enjoyed it.\n\n\"Thank you, everyone.\" I said. \"But give up some of that applause for Detective Washington, whose work on the Cochran cold case helped lead to this indictment.\" Everyone applauded Theo, who was much too modest.\n\n\"Sir, I didn't do any of that.\" Theo said. \"That was all you. All you.\"\n\n\"Well, your puzzle pieces did fit into the much larger puzzle I've been putting together for years.\" I said. \"But I never could fit Thomas P. Cook into the Westboro picture, until now. So you do get a lot of credit, Theo.\"\n\n\"You did great, Theo!\" Joanne Warner said happily.\n\n\"And this just goes to show,\" I said out loud, \"how looking into a cold case can have results we could never have gotten at the time. Twelve years ago, six years ago, we were nowhere near close to Westboro and breaking up the white supremacists that were infecting this County then. But now, old cases are fitting into the new patterns. So if and when you get bored, guys, see if there's something old we can't shed new light upon.\"\n\nPart 35 - Solution\n\nFriday, December 8th. I had told the MCD Detectives that there was little hope in pursuing the Tammy Cochran case any farther, and to wind it down. They did give it one last conversation.\n\n\"I believe it was Mr. McGill.\" said Theo. \"His gun. He reports it stolen, files down the number, and waits. He might've done that with other guns, for all we know, though the other guns in the lake were never his. But he had money, and Tammy Cochran was looking to get to it via marrying Tommy and having McGill's grandchild. So he stopped that cold... by cold blooded murder.\"\n\n\"He gives up the property,\" said Theo, \"for the reasons the Commander said... getting the contaminated pond out of his name. He wanted nothing to do with that, and I have to admit surprise that he gave away as much as he did.\"\n\n\"Pastor Westboro is dead and Superior Bloodlines is destroyed.\" said Cindy, watching from behind the others. \"McGill had a lot more to fear before. Now he's gotten it out, off his chest, Thomas P. Cook is taken down, and McGill can spend the rest of his life in semi-exile again.\"\n\n\"I haven't given up on Judge McGill being the one.\" said Joanne. \"The motive is to protect her husband and son from the clutches of Tammy Cochran, who I am not convinced was of pure intentions. She could've taken her husband's gun and filed down the number, and she would've been stronger in those days than she is now... or maybe she enticed some help.\"\n\n\"Maybe it was both of them.\" said Theo.\n\n\"And the son is being completely ruled out?\" asked Jerome Davis.\n\n\"That's a cold blooded kid to be able to shoot his girl and their baby and bury them,\" said Joanne, \"then go around to all his friends looking for her. You've seen the guy... you think he had that in him?\"\n\n\"Pastor Westboro was a preacher.\" said Jerome. \"And he had a lot worse in him.\"\n\n\"That's very true.\" said a voice behind them. It was me, Your Iron Crowbar. \"Okay guys, let's have a party tonight at the Cop Bar. And then I'll settle the bet between Cindy and Tanya, and give you my ideas on the case.\"\n\n\"A party sounds good!\" Joanne said happily. Everyone agreed.\n\n* * * * * * * * * * * * * * * *\n\nFriday, December 8th. We were at the Cop Bar, in the back room for a supper celebration. Theo brought his wife, and Franklin Washington and his wife came. Jamaal Washington even came, as his Finals were done. Carole was more than excited, and was wearing her No. 10 Wildcats jersey, though Jamaal was dressed in a sharp looking gray suit and lighter gray pullover sweater. Joanne brought her husband Seth, and practically took charge of babysitting Carole... perhaps as a 'hint' to her husband Seth.\n\nMyron and Mary and most of Vice were there, and everyone was congratulating Myron on his Orange Order award. \"You know, sir,\" he said in answer to my question, \"the walk wasn't too bad, I was feeling okay... and then we had those steaks and eggs and beer for breakfast. And I was done. I don't really remember leaving and getting home, only being awakened that afternoon by Mary to get ready for the Policeman's Ball.\" \n\nI told Myron I understood, and that it did not get any easier over time. Tanya Perlman, who had stayed at the Depot, manned the radios as our 'Oracle', and helped prepare breakfast, said the Orange Order was rewarding, but was tough work on that one night.\n\nAfter supper, we were sitting back and kicking down beers and other drinks. I was feeling as good and mellow as I'd felt in a long time. My back was not hurting, and Thomas P. Cook was gone from the Town & County Council...\n\nCindy stood up and spoon tapped glass. \"Okay, Commander, it's time to tell us how you put it all together.\" There was an acclaim of encouragement.\n\n\"It was a good cold case.\" I said as it got quiet in the room. \"So, let's look at some aspects of it. The first thing that got my attention was that Judge McGill retired almost immediately after Tammy disappeared. Now a powerful judge giving that up when one of her family, or her herself, might be a murderer, is staggering to me. Well, that is why she did it... she wasn't going to throw her family under the bus, but if it did come out, if they did find Tammy's body soon afterward, then Judge Lorraine McGill had the integrity to have cleared the Bench, literally, to keep it from being besmirched and her from having to resign in disgrace.\"\n\n\"So, I'm thinking that Lorraine McGill did have an idea of what had happened.\" I said. \"I next turned to the seeming contradiction in the case: Tammy was called a golddigger... but was turning down Tommy's offers to marry her! I am a bit surprised none of you caught on to this... well, one of you did. But I'll ask it now... why did Tammy turn down Tommy?\"\n\nNo one answered, then I turned to Tanya, who said \"The DNA!\" She grinned her cherubic grin as she continued: \"Tommy was not the father of the baby! J.G. McGill was the father!\"\n\n\"Yes!\" I said with a smile towards Tanya, and a painful wish I could bring her back to the TCPD. \"The DNA was never more than 80% for Tommy, though the markers matched... which would also be true if J.G. were the baby's father and not its grandfather. We had a case like that once, lucky for Todd.\" I looked over at my nephew as I said \"Campus Police Lt. Maxwell thought Todd was a rapist, but the DNA matched 80% and no more... because Todd's brother Ned was the rapist.\"\n\nAs everyone looked at Todd, he said \"Must be a different Todd Burke.\"\n\n\"Don't worry,\" said Teresa, \"I have Todd under close observation.\" Todd flashed Teresa his brilliant smile and put his arm around her lovingly, and she settled into him.\n\n\"You're right, Tanya.\" I said, drawing attention back to me and her. \"Even though the DNA was degraded, your excellent Crime Lab didn't mess up... the 80% suggested the father was J.G. McGill. And that means Tammy had been sleeping with J.G. as well as his son Tommy.\"\n\n\"What a witch!\" Joanne exclaimed.\n\n\"And it gets better.\" I said. \"At least Tammy had the goodness to refuse to marry Tommy, which would've been the quick and easy path to J.G.'s money. So my next questions were wondering if Tammy confronted J.G. about the baby, or if there was more. And I thought of Tammy's mother, Dinah.\"\n\n\"Now we are talking about a real witch.\" I said. \"Dinah Cochran had a husband that loved her, a daughter that was not a bad girl, and a comfortable life. So why was she thrown into Women's Prison and the key all but thrown away. Then I looked at the cabal that did that... ADA Sanders, Judge Nance... and I saw the influence of Judge McGill.\"\n\n\"Now we're coming to a circle.\" I said. \"Why would Judge McGill go after Dinah Cochran so viciously? I noted the SBI left Benny Cochran alone; Judge McGill's target was very specific, and it was Dinah. And it was only a few years ago. So what caused it? Jealousy, maybe? I let my imagination consider that not only Tammy but Dinah had been having an affair with J.G. McGill.\"\n\n\"And now things fall into place.\" I said. \"When people were talking about the Cochran golddigger, they meant Dinah, not Tammy. Dinah didn't get pregnant by J.G., which would've gotten her the lodestone of his money, so she arranged for Tammy to essentially be prostituted to J.G. In her own way, Tammy struck back at her mother, who she hated, by starting up with Tommy.\"\n\n\"So Dinah and J.G. start up the affair again four years ago, and Lorraine comes down with a sledgehammer on Dinah.\" said Theo.\n\n\"Something like that, though the affair may never have totally stopped.\" I said. \"And four years ago we are in the realm of Pastor Raymond Westboro, who was known to have made a few persons disappear into The Asylum. Anyway, as I look at this case, we have Lorraine's hatred of Dinah... but Tammy was the one that ended up dead. Maybe Dinah gets even more stupid than her norm, goes to J.G., says 'my daughter is pregnant with your child, so come correct with green dollar bills'.\"\n\nI continued: \"J.G.'s response: kill Tammy and her unborn baby, and bury them. Yes, the shot to make sure the baby dies is somewhat explained by that emotionally-based action. He had the motive, he had the means... he was a powerful enough man to hit Tammy on the head and knock her out, to dig the grave, to bury her... and he had the opportunity: he knows she's coming to meet his son Tommy, he tells her to come early, and he kills her.\"\n\n\"Wow.\" Cindy said. \"You just went deep again.\" Everyone murmured agreement.\n\n\"You never suspected Tommy, sir?\" asked Jerome Davis, who had listened with rapt attention to every word I'd spoken.\n\n\"Oh, I considered him, Jerome.\" I replied. \"But his actions didn't fit the pattern of a guilty man. First, let's dispel some myths. People said he was a 'momma's boy'... well, that's not what we saw. He pushed back when his mother tried to 'protect' him. No, he was strong-willed, like his parents. I suspect he would've stood up to his father as well as his mother.\"\n\nI continued: \"My first thought is that he had no idea the baby might not be his. He asked Tammy to marry him. Then I asked what would happen if he found out his father was banging Tammy. Would he attack Tammy? I suggest he'd go after his father, instead, not only for having sex with Tammy, maybe for knocking her up, but also for his father humiliating his mother Lorraine McGill. All in all, I can't totally exonerate Tommy, but if he did it, it would change the entire dynamics of this case. Things that do make sense would then not make sense.\"\n\n\"So all this stuff with the nerve agents and Thomas P. Cook aren't related to the murder?\" asked Cindy.\n\n\"Not really.\" I said. \"It's a happy, happy coincidence that Theo taking up this cold case led to the indictments of Thomas P. Cook. Definitely some cause-and-effect, though... by looking into the murder, we investigate the grounds McGill deeded to the County... and Cook's control... ohhhhhh... wait a minute...\" I was gone, into a deep reverie.\n\nPart 36 - Aftermath\n\nSaturday, December 9th. Teresa came up to Cindy and Callie, who were keeping warm at the outside fire pot at the Cop Bar.\n\n\"What's up, guys?\" Teresa asked. \"You're looking pretty glum, Cindy.\"\n\n\"I'm not trying to be.\" said Cindy. \"It's just... well, all that went on in this cold case.\"\n\n\"What do you mean?\" Teresa asked, sitting down.\n\n\"I mean...\" Cindy started, then found the words, \"I worked on this case six years ago, and we came up with virtually nothing. Then I was working with Theo and Joanne on it now, knowing everything we know to this point, and... nothing. And Don takes a few words here, a few words there... and he pretty much lays it all out in one package.\"\n\n\"We were talking about that, Todd and I.\" said Teresa. \"We don't know for sure that Don is 100% correct on that.\"\n\n\"Sure he is. He nailed the DNA discrepancy, which was the crux of the case, evidence-wise.\" Cindy said. \"And J.G. McGill did not break down like he did and give up Thomas P. Cook because Don was wrong on any of that.\"",
        "\"Okay, okay.\" said Teresa. \"But what's the big deal? Don has done that a ton of times, and we all sit there amazed. He's just that good.\"\n\n\"And I don't expect to ever be him or at his level,\" Cindy said, \"but like I said.. I was here for the case six years ago. I saw everything he's seen for the last five years since he's been here. And I'm not any closer to 'getting it', to being able to solve cases than I was when he walked in the door for the first time.\"\n\n\"That's not true.\" said Teresa. \"You've got amazing insight, and intuition. You feel things we don't, like when Don has Slender Man dreams. And you're Captain of Detectives, you just have to lead the guys and let them solve the crimes, and they're good and getting better.\"\n\nTeresa realized her words were not mollifying Cindy. She wondered why Cindy was so down like this. No, Cindy wasn't Don. Tanya was not Don. Joanne and Jerome were not Don. Chief Griswold was not Don. Even Phyllis Troy, while perhaps a faster 'Mycroft' brain, ultimately could not match her son's acumen at gathering the info and putting it together.\n\nSo what was hurting Cindy about this now? Teresa wondered...\n\n* * * * * * * * * * * * * * * *\n\nMonday, December 11th. We were winding down the year, and I was getting a monstrous mountain of year-end paperwork organized... not done, just organized to start getting it done. The Holiday Season was in full swing, and that meant keeping an eye on the increasingly moody Teresa Croyle. Christmas was anything but her favorite Season.\n\nI was in my office at 11:00am when the door flung open. I could see why Helena had not been able to stop this visitor: it was Judge Lorraine McGill. Her dress was neat and correct, her hair perfectly in place. Her eyes stared into mine, and I could feel her power trying to reach into me. I mentally reached out to her mind, as well.\n\n\"Judge McGill.\" I said, not standing up. \"I've been anticipating this visit.\"\n\n\"I'm sure you have.\" she said. \n\n\"Please, have a seat.\" I said. She sat down in one of the comfortable hot chairs. \"I'd offer you coffee, but I see you've already had some. How may I be of service to you today?\"\n\n\"I'll get right to the painful point.\" she said, not looking to see where she's spilled coffee, if anywhere. \"I came to apologize to you.\"\n\n\"That's kind of you.\" I said. \"Though we both know your actions weren't really to stop me. There's no way your husband will ever stand in the dock for Tammy's murder, unless he confesses or you turn him in... which I don't expect to happen. But you wanted me to look into this... and that is because you wanted me to bust Thomas P. Cook.\"\n\n\"Since the moment I first saw you,\" Lorraine McGill said, peering hard into my eyes, \"I knew you were all they said you were. Yes, I knew who Westboro was, and the sheer power he had, which my husband and I together could not hope to match. But you utterly destroyed that man. You made him commit suicide, so completely did you wipe him out.\"\n\nI nodded as Judge McGill continued: \"And so I knew that you would be able to bring down Thomas P. Cook when no one else has before, by getting the links to the nerve agents. Yes, that was him and Dora Ellis, whom you vanquished years ago. And you did get those links and the indictments. My congratulations to you.\"\n\n\"It was you who convinced your husband to give up any connection to Cook and Ellis, and Superior Bloodlines.\" I said.\n\n\"I've been a judge for so many years.\" said McGill. \"I was tough, but I made sure I was fair. So many times I saw D.A.s try to annihilate innocent black men, and I made damn sure they did not do that in my Courtrooms without a serious fight. Only truly guilty men were convicted, regardless of ethnicity. I don't know if I made a dent in the System that blacks so rightly despise, but it wasn't for lack of trying.\" I nodded.\n\n\"So,\" she continued, \"when I saw that despicable bitch Ellis trying to ensnare my husband in her web of race hatred, I made sure he pulled out of that stuff. He's not really a racist anyway, so he was amenable to pulling back and away from all that. Saved his life, too... Dora's dead, Westboro is dead, Conrad King, Wallace Bedford, all of them dead. But my husband lives.\"\n\n\"And you got me to do your dirty work for you taking Cook down.\" I said. \"Admittedly I wanted to do it anyway, and more than you realize... but just don't think you were dealing with an Agency of the Weak-Minded.\"\n\n\"No, I would never make that mistake.\" said Judge McGill, rising to her feet. \"Again, I apologize if I pushed too hard. Goodbye, Commander.\"\n\n\"One more thing.\" I said, having risen to my feet. \"I understand you and what you did, and for you to goad me is one thing. But what you did to my Captain, and in front of other Officers, and then going to the Sheriff about her after she did her job correctly... that wasn't right, and I will not excuse it.\"\n\nJudge McGill looked shocked, and was even more so as I said: \"Beyond that, Cindy Ross is my blood. I don't give a God-damn who you are, Judge; if you ever, ever treat my cousin or any of my family like that again, I will come against you with everything I have... and I will annihilate you.\"\n\nJudge McGill saw that my gray eyes were blazing, and that I was not kidding in any way. As with her, my family came first with me. She also was brilliant enough to know what to do: she just nodded acknowledgement, then turned and left.\n\nPart 37 - Epilogue\n\nShe watched as the man approached her desk in the old building north of the City. He stopped about 12 feet in front of the desk.\n\n\"Well?\" she said.\n\n\"I came to let you know that Thomas P. Cook was indicted by the Feds and locals.\" the man said, his voice raspy and harsh. \"They've seized his assets. He may have fled the State.\"\n\n\"Likely not.\" said the woman, relaxing back into her chair. \"But I'm not surprised they got him. In fact, I'm surprised the Iron Crowbar didn't get him sooner.\"\n\n\"The final links to Cook were provided by J.G. McGill.\" said the man.\n\n\"Ah, him.\" said the woman. \"He's not important. His wife... she still bears watching. Anyway, what happened in California? That film company was supposed to be shut down, drugs found, Carrington in jail, Ross crying her eyeballs out if not in jail with Carrington.\"\n\n\"Dana Fox isn't very good, ma'am.\" said the man. \"He managed to totally botch it by being seen by people who knew who he was. LAPD reamed him when they found out.\"\n\n\"And I'm expected to believe that.\" the woman said sarcastically. \"Fox is stupid. He's trying to play both sides. The Iron Crowbar saw through him like glass. Hmmm...\" she said as she thought about it, \"I wonder if killing Fox and his body being found might bring some fun chaos to the FBI... and the Iron Crowbar, yes?\"\n\n\"I don't know, ma'am.\" the man said. \"That might solve some problems for the FBI, rather than exacerbate them.\"\n\n\"True.\" she said. \"I'll think about that. Okay, thank you for coming. Have you had the pleasure of a... release... from one of the girls?\"\n\n\"No ma'am.\" he said. She flung what looked like a small white cube to him. \"Give this to my assistant outside, and you'll be properly serviced.\"\n\n\"Thank you, ma'am.\" the man said. He turned and left.\n\n* * * * * * * * * * * * * * * *\n\nKSTD reporter John Hardwood came into his house with bags of groceries, which he quickly put away. He checked his mail, then headed down the hall to the M-I-L apartment area in back.\n\n\"Thomas, you here?\"\n\n\"Yes.\" said Thomas P. Cook, sitting at the desk in the darkened bedroom. \"And feeling cooped up.\"\n\n\"I understand.\" said Hardwood. \"But obviously you can't be seen around Town, with the Police looking for you. I got word from the grapevine that Troy really wants to barbecue you.\"\n\n\"Yeah, that bastard has cost me everything.\" said Cook. \"They've seized my businesses, my properties, frozen by bank accounts. I've only got a couple thousand in cash left.\"\n\n\"Well, it's almost over.\" said Hardwood. \"And then we'll get you safely out of the country, to Europe. I've worked through intermediaries to have someone get you out... one of the very best.\"\n\n\"Yes, it won't be long now.\" said Cook.\n\n\"Yessss.\" hissed Hardwood. \"And all the pain Troy has caused you... will come back to him in spades. God! I can't wait to see the look of pain on his face...\"\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "drama",
        "police drama",
        "crime drama",
        "iron crowbar",
        "mystery"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-saga-continues-ch-06"
}