{
    "title": "There and Back Again Ch. 003",
    "pages": [
        "Chapter Three: Changing History\n\n\n I found the path the army had followed onto the field around Ostagar. Loghain's army had turned off, to head up to the cliff; that I knew. Instead, I went down. As I walked, I started to hear a faint noise. At first I couldn't identify it, but after a bit, as it grew louder, I realised what it was. Screaming. The sound of metal clashing on metal. Swords hitting shields. Oh God, the battle had started. What on earth am I doing down here? I have no place in a battle. I barely know how to hold the sword I am carrying. What was I thinking?\n\n Wait. What on earth? I'm not on Earth anymore. I guess, on Thedas, I just don't have much of a self-preservation instinct.  I kept moving, picking up my pace.\n\nThe sound of battle grew to a deafening roar as I approached the rear of the army. I swore as I realised that the army had already become disorganised, and instead of a united front, darkspawn squared off against individuals and small groups, fighting back-to-back, desperate. I'd read a forum that claimed that the reason Loghain left the King to die was that he realised that he couldn't be saved - that due to poor tactics, Cailan had left him no choice. I was indignant, when I read that, completely unwilling to admit that Loghain might be anything other than the evil bastard I thought he was. For the first time, I wondered if it might be true. I wasn't exactly a military strategist, but I was quite sure that the plan was to have the darkspawn all together, facing a united line of Fereldens, not this intermingled, chaotic swirl of violence.\n\nWell, crap. The best laid plans, and all that, right? I checked that the beacon on the tower of Ishal wasn't yet lit - thank God, that means Duncan isn't dead yet, at least in theory. I secured my pack, hoisted that heavy damn sword, and started trying to weave through the crowd. It was getting dark, and I couldn't decide if that was an advantage or a curse. I took the opportunity to stab darkspawn in the back as I went, but didn't slow to engage with any of them. Somehow, all the darkspawn I came across were miraculously...busy. I'll have to thank my guardian angel later. \n\nI just kept going, squeezing myself between groups of men and darkspawn. I assumed the darkspawn didn't think of me as a threat, and in the heat of battle, there were more important things to do than spend precious time slaughtering innocents. Or idiots. Whichever label worked. Apparently the men didn't see me as a threat either, frequently exclaiming in surprise when I scored a hit on a darkspawn about to cut off their head, or whatever. I probably am the only woman in this battle, I guess that shouldn't be a shock.\n\nAs I pushed forward, the ratio of men to darkspawn began to drop. Things were getting more dangerous for a lone woman weaving through the battle. Please don't die, please don't die...I had arrived, I could tell. I was near or at the front lines, and the people fighting desperately on either side of me were Grey Wardens, I was sure of it. These were by far the deadliest fighters I had seen so far, blocking and parrying, cutting down darkspawn with breathtaking grace. I was briefly distracted by the deadly beauty of the dance, but still the darkspawn seemed to ignore me. And then, I heard the roar. Oh God, an ogre, what was I thinking? There are fucking ogres up here.\n\nTrying to look small and unthreatening, I squeezed further onward. I hadn't seen the King yet, in his golden armour, but if there were ogres ahead, I knew that's where he and Duncan would be. I caught sight of a flash of gold, peeking out from around a small knot of whirling death, and arrived just in time to see Cailan lifted, squeezed, by the largest, most gruesome monster I could imagine. The game sort of glossed over this a bit! Cailan was still alive, weakly struggling, and I could feel hostile magic in the swarm of darkspawn behind that thing. The air fairly crackled with it, just like at the farm. Lovely. Dozens of Emissaries. I felt, more than saw, the beacon atop the tower of Ishal light, and knew I was out of time. \n\nI was desperate, though not nearly stupid enough to rush an ogre, when I caught sight of someone who could be no one else than Duncan, squaring off with what must have been a hurlock alpha. I screamed, fear and horror welling up in me... \n\nI'm too late, why am I always too late? \n\n...and felt something...weird. I looked between Duncan and Cailan and saw both men enveloped in an ethereal white light, just as the ogre squeezed Cailan one last time and threw him to the ground. All around me, Grey Wardens were dying. I was covered in blood, none of it mine, and screaming like I would never stop, and I felt the ground shake, wondering what had exploded nearby. But I realised that while it had messed with everyone's balance, only the darkspawn seemed to be truly troubled by it. It dawned on me: there must be a mage somewhere nearby. A friendly one. A wave of energy passed through the lines of darkspawn near me, their bodies slamming to the ground, blood bursting into the air in a red mist. And then I was falling, and I couldn't catch myself, and oh God, I'm going to die. The last thing I saw, before I blacked out, was Duncan crawling over to Cailan's still form, collapsing at his side. But I thought, just before the darkness took me, that I could see his chest rise and fall.\n\nStill breathing.\n\n********\n\nI woke, actually expecting to be in my own bed at home. It seemed such a natural transition - black out in one world, wake in another. I kept my eyes closed, thinking to luxuriate in a soft bed for a few more minutes, wondering if I'd have bruises or cuts as fallout from the insane day I had spent in Ferelden. I certainly had a hell of a headache. But I must have been sleeping in a weird position, or something, because my back was sore, and something hard was poking my hip, and what sort of food did I leave rotting in the kitchen to smell like that? I opened my eyes and saw...blue sky. I turned my head and groaned - there was an ogre corpse practically on top of me. The smell started to make sense.\n\nShakily, I sat up, my head clearing as the details of the battle returned. I filed away the fact that, apparently, I could black out here without returning home, deciding to think about it later. Somewhere that smelled better. Looking around, I saw that I was surrounded by dozens upon dozens of corpses. Most of them were darkspawn, but there were many people as well, and I just couldn't look at them, or I'd start screaming again. Nothing on the field was moving. There weren't even birds, and I figured that probably, even vultures were too smart to eat anything coming from this tainted cesspool. Wait. Do they have vultures in Ferelden?\n\nI stood, my legs unsteady, but finally able to get the vantage point I needed. The last time I saw Duncan and Cailan was...over there. I headed in the appropriate direction, eyes skirting around the mangled remains I was stepping over, until I found them. Duncan had made it to Cailan's side, sword still in hand. They were both bloody, and I stifled my horror to lean down and touch Duncan's face. It was warm, and he twitched with the slight contact. I screamed, clapping my hand over my mouth a second later, embarrassed. The living aren't supposed to be what's freaking you out right now. Keep it together, Sierra. Stepping around Duncan, I bent over to do the same for Cailan. I had to kneel to get the right leverage to shove his dented helm up to expose skin, but his breath briefly misted the metal surface, and I smiled. I had just witnessed that the events of the game could be changed.\n\nMy wandering eyes noted a mangled piece of human flesh, and my momentary elation faded. It hadn't changed enough, apparently. These two may have been saved, somehow...but the fact that no one had checked for survivors meant there still wasn't anyone left standing at the end of the battle. I slumped down, a sob welling in my throat, when I heard a quiet groan. Duncan stirred, and I repressed the sob to crawl over and kneel beside him. His eyes fluttered open, unfocused for a few moments, and then with a grunt, he rolled over. Right into my lap. I swore, his armour digging into my thigh, but managed to catch myself before I fell back. His eyes snapped to my face, finally clear, but clearly confused. I extricated my leg from under him, knelt beside him with another pained oath, and offered him my hand. I pulled him up to sit, watching as he turned his head to see the rest of the battlefield. His gaze settled on Cailan, and I hurried to reassure him.\n\n&quot;He lives, Duncan. I don't know how badly he is injured - well, frankly, I don't know how badly you are injured, either, but he's still breathing.&quot; Duncan looked back at me, eyebrows pressing together.\n\n&quot;You have me at a disadvantage, my lady. Might I know your name? And how I, or rather, we, survived...this?&quot; \n\n&quot;Sierra. My name is Sierra. And I have absolutely no idea, to be honest. I was looking for you, but I got here too late, and then I blacked out.&quot;\n\n&quot;Yet somehow, I still live, as does the King. Unless there is someone else around I should thank, you appear to be the one to be grateful to.&quot; \n\n&quot;Um. Well. You're welcome, I suppose.&quot; I smiled, but those eyebrows remained furrowed, his gaze shifting to take in my jeans, boots, and coat, and my smile faltered.\n\n&quot;I'm quite certain I would have remembered you, had we met. May I ask how you know my name?&quot;\n\n&quot;I, uh. Well.&quot; Sonofa...I had tried, but never did manage to come up with a convincing explanation for my presence here. &quot;That's a bit of a long story. I think we should probably have that discussion somewhere safer. And preferably cleaner. And perhaps once we know how badly you and Ca...the King are injured. Yes?&quot;\n\nHis words said &quot;Fair enough,&quot; though his eyes told me he wasn't fooled for a minute. Well, damn. Wish I'd been born more creative. I nodded, in silent recognition that we were going to have a very pointed discussion, once we were safe.\n\n&quot;So,&quot; I asked, &quot;uh...are you injured?&quot; Duncan looked to be doing the same internal survey I had done upon waking. \n\n&quot;I think I may...have a broken leg. And I recall being hit by an axe, but I don't appear to have a hole in my chest, so perhaps I dreamed that.&quot;\n\n&quot;Oh, God, really? Wow, you are so calm. I'd be screaming, I'm sure I would.&quot; I babbled as I looked down at his leg, trying to distract myself from what I suddenly knew I'd see when I lifted the leg of his armour/pant things, and...yeah, that's gross. There was bone sticking out, just above the ankle. My face paled, and I wondered briefly if I was going to puke. I felt a hand on my elbow, steadying me, and looked up to see Duncan studying my face. Again. &quot;Sorry. I'm not great with, you know. Blood. And stuff.&quot; I closed my eyes, willing myself to pull it together.\n\n&quot;So...I'm not sure that I'm going to be able to carry you out of here. Especially if Ca...the King is also injured. I'm not sure what to do. Have you got any ideas?&quot; Stop trying to call him Cailan, dumbass. He's a king, here. You use a title.\n\n&quot;I think I've got a poultice around here somewhere.&quot; Duncan patted his belt, reaching in to pull out a piece of linen cloth, wrapped around a small vial of something red. He handed it to me, and I took it, eyes widening in dismay. Pressing a hotkey for a health poultice did not prepare me for...this.\n\n&quot;I...right, sorry, I've never used one of these before. You're going to have to talk me through this.&quot;\n\nDuncan's gaze scrutinised me again, and I fought not to blush again, to make him even more suspicious. He guided me through resetting the bone, basically by grabbing his foot and pulling as hard as I could - yuck, that crunch is gross and wow, can that man scream - and then to applying a few drops of the liquid into the wound directly and the rest onto the cloth, which then was tied tightly around his leg. I watched in amazement as the skin knit together and the pain written on his face eased. He waited a few minutes, then gingerly moved the leg. It was...fixed. Not for the first time, I thought that magic is amazing. I wish we had some of it in my world.\n\nI helped Duncan stand, still in awe that he could go from bone sticking out to walking normally in five minutes. Well, mostly normally. He definitely had a limp, but he was moving. Together we leaned over Cailan. Duncan was able to pry his helmet off, and we couldn't see any sort of head injury. As he undid the breastplate, however, it was obvious that the ogre hadn't merely squeezed the man. He had crushed him, right through his plate armour. He had an indent in his chest where the armour had squished him, and on the opposite side, the skin had split, a rib poking out. Again I fought not to vomit, but suddenly the man began to scream, and it took everything both Duncan and I had to hold him down, and the urge passed. Duncan swiftly reached behind Cailan's belt, pulling out another poultice, repeating the steps I had taken with his. He gave me a look, which I interpreted to mean that I was to hold him still, and Duncan pressed on the broken rib until it snapped back into place. Cailan screamed again, thrashing, and I had to lie across him, using my entire body weight to hold down his arms. Duncan poured in the solution, and then spread a larger poultice across his entire chest. He moaned, as the bandage was pulled tight, and then, thankfully, passed out.\n\nHis breathing had eased, and he now looked like he was merely sleeping. In the middle of a battlefield full of corpses. Ick. Reassured, Duncan took a few moments to survey the rest of the field. Still nothing moved around us, the air unnaturally still and quiet. His eyes lit on the ogre that had nearly killed Cailan, and he walked over to remove Cailan's sword from the thing's hide. Ew. I realised I had dropped my own scavenged blade, and spent a few minutes assessing the weapons within sight. I looked to Duncan for permission, and finally picked up a lighter, sharper looking sword that was still held by a nearby human hand. I shuddered as I accidentally bumped the cold, clammy flesh. I looked up, to find Duncan standing near where I'd been when I blacked out during the battle, looking around. The confusion on his face intensified as he studied the corpses around him, and he headed towards where I remembered the magic aura coming from. I followed behind him, studying his face instead of the grisly scene at my feet. He didn't say anything, but I caught him looking at me quizzically a few times when he thought I wasn't watching. \n\nCailan finally stirred again, and Duncan rushed back over to him.\n\n&quot;Your Majesty. Can you hear me?&quot; Cailan seemed to be struggling to sit up, but Duncan held him down without difficulty. &quot;Don't move. I don't know what other injuries you might have sustained.&quot;\n\n&quot;Duncan?&quot;\n\n&quot;Yes, Sire. Relax, you're safe for now. How do you feel?&quot;\n\n&quot;Like I've been chewed up and spat out by an ogre, actually.&quot; I couldn't help it. I giggled. The game didn't really prepare me for Cailan to have a sense of humour. A wry grin spread across Cailan's face, and he opened one eye, cautiously, to peer at me. &quot;Off with her head. No one laughs at me.&quot; He winked, and even Duncan chuckled.\n\n&quot;I think I'd like to recommend you not execute the person who saved us. At least until we have a chance to question her properly. Sire.&quot; Cailan appeared to think about this for a moment, and then nodded, his grin widening.\n\n&quot;Excellent suggestion. What's it to be? The rack?&quot;\n\n&quot;I'm sure your Majesty can come up with all sorts of torture later. For now, I'm going to assume that if you're able to joke about things, you mustn't be feeling too badly. Would you like to sit up?&quot; \n\nIt took both Duncan and I hauling, but eventually Cailan was seated. His armour though - it was a mess, dented, torn, and bent. Good thing I know an armourer in Denerim who can fix that. The thought staggered me for a minute. For a moment, I had almost forgotten that to me, this was just a game. I'd never actually met Wade in person. I pinched the bridge of my nose, trying to stop the thoughts. Think later, Sierra.\n\nIntroductions were made between myself and Cailan. I had absolutely no idea what to say, so I just murmured 'Your Majesty' and bowed my head. Duncan raised an eyebrow, but neither man appeared offended, and I breathed a sigh of relief. Cailan coughed, rubbing his filthy face with a filthier sleeve.\n\n&quot;Andraste's ass, I'm thirsty.&quot;\n\n&quot;Oh! I didn't think. Sorry, that was stupid.&quot; I dropped the bag from my shoulder, fishing through to grab the large water skin inside. I passed it to Cailan, who drank, then handed it off to Duncan, who in turn gave it back to me. I drank as well, the water warm but at least moist, and put the skin away again. Duncan took the opportunity to peer into my bag as well, noting the rations, and the rope. He nodded, and I re-shouldered the bag.\n\n&quot;I don't think it is safe to assume we are out of danger here, your Majesty,&quot; Duncan said. &quot;I think we should probably move as far as we are able today, put as much ground between us and Ostagar as possible. Do you have any idea where you'd like to go initially?&quot;\n\nI cleared my throat before Cailan could respond, and Duncan raised an eyebrow. &quot;You have a suggestion?&quot; I nodded, blushing. Damn my pasty skin.\n\n&quot;I suspect we need to get some things that his Majesty left at the camp in Ostagar, first,&quot; Cailan started, but then reluctantly nodded, &quot;but then I would suggest we head towards Lothering. We can probably meet up with Alistair and ...&quot; I trailed off, realising I had no way to know which origin story this Warden came from, never mind his - her? - name. &quot;...the new recruit? In Lothering.&quot;\n\nDuncan stared at me with narrowed eyes. Of course. He didn't know they lived, and had no way of knowing where they would be if they did. I must have sounded like a lunatic in that moment. When we finally have time to have this conversation, I'm going to need all my wits with me for them not to dismiss me as completely insane. I sighed.\n\n&quot;I'm sorry. What's the new Warden's name, again?&quot; I asked.\n\n&quot;Aedan.&quot; Both Cailan and Duncan replied at once. It was my turn to raise my eyebrows.\n\n&quot;Aedan...Cousland?&quot; They both nodded, and I struggled to keep my expression calm. For how often I played the human noble origin, this...felt like finding out I had a long lost brother, or something. And somehow, I was relieved that it was a man. No competition for...Inappropriate, Sierra. &quot;Right. Alistair and Aedan survived and are currently somewhere in the Korcari Wilds. They will eventually head to Lothering. I know it's asking a lot, but please, trust me. It's going to be the easiest place to meet up with them.&quot;\n\nDuncan gazed into my eyes for an agonising minute, silent. Cailan seemed content to go along with whatever Duncan decided. Finally, Duncan nodded. \n\n&quot;Lothering makes sense, as it's the nearest settlement of any size anyway, Your Majesty. But, Lady Sierra, you are going to tell me how you know this. And...&quot; he pointed vaguely at the battlefield around us, &quot;what happened here. Tonight, wherever we camp.&quot; I nodded. It wasn't a question.\n\n********\n\nWe scavenged a not too badly damaged set of chain armour off a nearby corpse - well, Duncan and Cailan did, while I covered my eyes trying not to retch - and left Cailan's fancy plate behind in the chest at Ostagar. It would attract too much attention, too easily identify Cailan to anyone who thought to get themselves a ransom. Duncan also managed to convince Cailan that he needed to change his appearance, before I seconded the point, and he agreed, reluctantly, to allow his hair to be cut. I used the dagger strapped to my thigh, and while it wasn't anywhere near as fashionable as he might have liked, it was serviceably shaggy and changed his appearance drastically. He looked like Alistair, I realised, and felt my stupid heart skip a beat. Stop thinking about Alistair like that!  I convinced Duncan to cut his hair as well, and my dagger worked well enough for that, too. Once Duncan shaved, I doubted anyone who didn't know them well would recognise either of them from a distance. I mentioned shaving, and Duncan gave an exaggerated sigh.",
        "As I hoped, Cailan still had a key to his own chest (he'd given someone the spare, not the original, for safekeeping) and was able to recover the documents that I remember learning about from the 'return to Ostagar' downloadable content. He was still giving me weird looks for knowing he needed to do it.\n\nThe camp had obviously been overrun, and almost everything had been damaged or tainted. We didn't salvage any more food or equipment except what I already carried. I was happy to notice there were far fewer corpses than there had been people when I came through the camp the evening before, though I did realise that most of the corpses I could see were human. No pointed ears to be seen anywhere. I guessed the human servants hadn't been keen to listen to the poor elf who helped me. I sighed. Duncan commented on the low number of bodies as well, and I mentioned that I had told a servant to take as many people as she could and leave. Duncan's eyes narrowed again as he looked at me, but I just shrugged, trying to look nonchalant.\n\nDuncan took the lead as we left Ostagar, Cailan trailing a little behind. I tried to follow him, but he seemed determined to walk beside me, not in front. Duncan's pace was a little too aggressive for much talking, and I mentally thanked whatever magic that had given me this body instead of my own - I was able to keep up, if it did leave me a bit breathless. We nibbled on the rations in my pack as we walked, and after I had handed them out Duncan insisted he carry it for a while to give my shoulder a rest. As the only one of us who hadn't really been injured, I objected, but he just picked it up and strode off, leaving me either to allow it or chase him to get it back. I rolled my eyes, and Cailan laughed.\n\n&quot;Never underestimate the stubbornness of a Grey Warden,&quot; he whispered, just loud enough to ensure Duncan heard him. I snickered.\n\nBathroom stops became suddenly that much worse than just peeing in the woods. Now I had two impatient men waiting for me, so drip-drying was no longer an option. At least so far none of the leaves I'd scavenged had been poison ivy or anything. I hoped.\n\nWe stopped well before dark, making camp by a small stream, in a valley between two small hills. Duncan left me with Cailan to collect wood and try to build a small fire, while he went to go 'scouting'. At first, Cailan tried to chat, but I was incredibly...awkward. I didn't want to get into details of my identity and origin, as it were, until Duncan was back, and I truly had no idea how to address a King when making small talk. I remembered not to call him by name, just barely, but that left me throwing far too many 'your majesties' into the conversation. He probably thought I was simple-minded, if not deranged. I'm building a campfire in a computer game world. Of course I'm deranged.\n\nI finally grabbed a small pile of twigs and dry grass, offering to light the fire if he would find some larger pieces of wood.\n\n&quot;Oh good. I hoped you would know how. It's embarrassing, but I've never camped outside before without an army of servants to do the whole 'build a fire' thing. I doubt I can be much help, really.&quot;\n\nHe wandered a little way off, and I built a teepee of twigs around the pile of grass, inside a larger ring of stones, as per my vague recollection from the school camping trip we took in about eighth grade. I checked to ensure he wasn't looking, then slipped my hand into my pocket and pulled out the Zippo lighter I had hidden there. Striking it, I lit the grass, and after a few moments of hoping, the kindling lit. I breathed a sigh of relief and put away the plastic-wrapped lighter. I took one small water purification tablet out of my pocket, surreptitiously adding it to the water skin, before refilling the skin from the stream. When Cailan returned, we slowly added sticks to the fire until we had a small blaze. Cailan looked impressed. I blushed. I found a rock to lean back against, pulling my knees up to my chest and letting my head fall back, closing my eyes, feigning fatigue to avoid more awkward chit chat. Cailan lounged on his side on the opposite side of the fire, looking sad and thoughtful, in addition to bone tired. He fell silent and let me be. Thank God for small mercies. \n\nDuncan returned after a bit, declaring us safe from darkspawn. He was carrying a small, furry, dead animal. Rabbit, I discovered. I wondered if I would gag, wistfully thinking about sterile looking, plastic wrapped meats at the supermarket at home. Duncan methodically skinned and gutted the creature and fabricated a makeshift spit, setting it to roast over the fire. If he was surprised that between us, we had managed to light a fire, he didn't say it. He crouched, more than sat, tensed to spring, silently staring into the fire for a few minutes. The silence seemed almost companionable, but I knew it couldn't last. Duncan had Questions - I could practically hear the capital Q. I had decided that, when he asked, I would just spill the entire story, in whatever way I could think of to make it make sense, and see what happened. Duncan finally cleared his throat.\n\n&quot;So, my Lady. I'm quite sure we have never met, yet you seem to know me, and I'm certain there were no women in the army or with the Grey Wardens. You're not a servant; by attitude, you act like a noble, but you know how to start a fire, and you don't know how to use a health poultice. You show up on the battlefield, apparently looking for me, in the middle of a battle that none of the three of us should have survived. You are quite the mystery. Care to start with who you are and where you came from?&quot;\n\n&quot;I...well. That's sort of a big question. First off, I'm not a lady, so you can stop calling me that. I'm just Sierra. I'm not from here. From Thedas, I mean.&quot; Cailan looked like he was about to interrupt, but Duncan raised a hand and he stopped. &quot;In fact, compared to here, I'm not exactly sure where I come from. I know, that's weird. I...&quot; I trailed off, thinking. &quot;Somehow, I came here by magic, I guess. I wasn't planning it, but something, somehow, brought me here. I woke up yesterday in the middle of the Korcari Wilds.\n\n&quot;Where I come from is a really different sort of place. And my people have, well, it would seem like magic, I'm sure, but it isn't quite. There's no magic in my world, just science. But regardless of how it works, my people have a way of seeing other places. Like Thedas. You just look through a special window, and can see what's happening in other worlds. We don't have the ability to travel to them, but we can watch. We can interact, a little bit. It's sort of like...a sending stone? In a limited way, we can even see into the future of the places that we watch.\n\n&quot;So over the past while, I've been watching Thedas. It's very different than where I come from, so it's interesting. As such, I've been able to watch some of the events leading up to the ending of the Blight. I can't see everything, and the timing of events is hazy at best, but...it means that, in a limited way, I know what's going to happen in the next year or two. Though apparently what I know can be changed, so I'm afraid of what that means overall.\n\n&quot;I had a little bit of warning I was coming here, though I didn't expect it to be like this. I've been having these episodes. I get dizzy, I pass out, and when I wake, I'm in Thedas. I stay here for a while, and then eventually wake up again, at home. I thought they were dreams, at first. The doc...healers, at home, haven't been able to figure out what is happening. But then, a few days ago, I woke at a farm, and had to watch darkspawn slaughter an entire family. I tried to help, but...but...I don't know how to fight, it's not something I do at home, and I wasn't able to save them. Except for the baby. When it was over, I tried to bury the people - that's what we do with the dead, at home - but then I heard horses, and I hid...and when I woke, I was back at home but covered in splinters and cuts and bruises. Dreams just don't do that!&quot; I was babbling, by this point, the horror of that day at the farm still fresh, tears streaming down my face. I sniffled and wiped my face angrily on my sleeve, trying to hold it together, trying not to sound insane, but the tears just kept coming. Maybe I am insane. Don't forget, that's entirely possible.\n\n&quot;After that, I figured I might end up here again. When I realised I was in the Korcari Wilds, I headed to Ostagar, since that was the only place I knew how to find. I had no idea if it was before or after the battle. When I saw all the darkspawn corpses in the Wilds, I knew that the Grey Warden recruits had been... &quot; Duncan gave me a startled look, and I realised how close I had come to revealing Grey Warden secrets. &quot;...scouting...so I figured it was close to the battle. I knew what was going to happen, and I tried to get there sooner, I really did, but I wasn't fast enough. So instead I tried to catch up to you, to convince you to withdraw or, I don't know, something, before Loghain abandoned you...but I was too late for that, too. The battle had started, and there were so many darkspawn, and people dying everywhere...It took me forever to find you, and by the time I did, that ogre had...and then I thought I had lost you both, that I was going to have to watch you die in person, instead of, uh, through the window, and...I don't know what happened. The ground shook, and a bunch of darkspawn died, and I figured there must have been a mage somewhere that I couldn't see...and then I passed out. Woke up moments before you did, Duncan.&quot;\n\nI stopped talking, concentrating on trying not to weep. Before the farm, I had never seen a dead body in my life. Definitely had never seen a battle, or a darkspawn, a monster. Playing computer games had not prepared me for the violence, the noise, the smells of people screaming and fighting and dying. Even now that coppery scent of blood still lingered in my nose, and I wondered if it would ever go away. Finally allowing myself to realise how dangerous, how insane this was, how incredibly stupid I'd been to wade into the middle of that battle, the tears turned into full out sobs, and I put my head on my knees and fell apart. After a few stunned moments, it was Cailan who came over and put a hesitant hand on my arm. When I didn't object, he put his arm over my shoulders, comforting me, and I eventually curled into his side and bawled. I hated myself for doing it, but couldn't seem to stop. Finally, after what felt like hours but was probably only minutes, I fell asleep, my head still on the shoulder of the King of Ferelden. What a mind fuck."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "dragon age",
        "fanfiction",
        "fantasy",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-03"
}