{
    "title": "Did You Really Mean It?",
    "pages": [
        "\"Did you really mean it?\"\n\nI looked over the table at her. I was having lunch with my wife's best friend. And a good friend to me, when it comes down to it.\n\n\"Mean what, honey?\"\n\n\"That night, when you said next to Janie, if you ever fell in love with anyone else, it would be me?\"\n\nI remembered the conversation. Lori was married to an asshole, a serial cheater that would rather spend money on his girlfriends than pay the bills.\n\nShe had just found out he was cheating on her yet again, and had called Janie for comfort. Janie was out of town, visiting her grandmother, something she did about four times a year.\n\nMy shoulder became the substitute for her to cry on. She came over to the house, at my insistence, and stayed the night. I had called Janie while she was on the way over and asked for advice.\n\n\"Oh, honey, I'm sorry you have to deal with this. I'll be home tomorrow and take over. In the meantime, just let her talk. If she asks your opinion, tell her, but don't volunteer any advice, she won't really be listening and most likely wouldn't take it anyway. She just needs to vent. And if she's drinking or starts drinking, don't let her leave. You know she has a low threshold for alcohol. I love you, and I'll be home by ten. I'll take it from there.\"\n\nShe was indeed a mess when she arrived, parking sideways in the drive, narrowly missing the mailbox. Half a bottle of wine down and at least two sheets to the wind. I wouldn't let her have anymore alcohol.\n\n\"Lori, honey, no more tonight. You're gonna wake up miserable anyway tomorrow, a hangover won't help you any. Talk to me.\n\nIt came out in fits and starts, between sobs. They had been married for four years, a year behind us, and she was sure he was cheating before they were six months in to the marriage.\n\nShe had actually caught him twice, he sweet talked her into giving him another chance. I was pretty sure this one was the last straw. His lover had called her earlier at her job, telling her she was pregnant and wanting the money for an abortion. Told her she confronted him and he laughed, saying with a whore like her it could be anybody's, and he wasn't paying her shit. Lori told me the little speech she gave her.\n\n\"If I don't get the money for that abortion and have to go full term, I'll get a DNA test and sue your husband for the medical expenses. Plus, he'll be on the hook for child support unless I give it up for adoption. He makes pretty good money, I may just keep it to get the child support. I talked to a lawyer, he says besides child support I can make him carry medical insurance and start a college fund. So, it would be in all our interests to help me out now, and avoid ugly situations and publicity. Think about it and get back to me quick. I'm kind of have a limited window, here. If it means anything, I didn't mean to hurt you. He told me you were separated and he was just waiting for the divorce to be finalized.\"\n\n\"What are you going to do?\" I asked her as I fed her coffee.\"\n\n\"I don't know. We're behind on our bills and I can't depend on him. If she has the baby It'll ruin us.\"\n\nI couldn't believe she was talking like she was going to stay with him. I decided to be blunt.\n\n\"You could just dump his cheating ass and let him deal with it.\"\n\n\"I thought about it, but it gets more complicated. I just found out I'm two months along. I can't deny my baby his father, I just can't. What am I gonna do?\"\n\nShe collapsed into tears again.\n\nI was so angry with her husband Ron I wanted to kill him. I thought about it as she cried.\n\nI had her wipe her face with a cool cloth.\n\n\"Listen to me. Then promise that what I say never leaves this room. I have a little money. I'll pay for her abortion. I don't want you to pay me back, and I want your promise never to speak of it again. That will solve the problem short term.\"\n\nMy voice got harder. \n\n\"My price is you have to listen to me without interruption. Next to Janie, you're the finest woman I know. Kind, loving, beautiful. Any man would be proud to walk beside you. If I wasn't married to Janie and you were single, I would pursue you relentlessly. I could see myself easily falling in love with you. You wouldn't have a chance. In another universe we would be soul mates and lovers.\"\n\n\"I never liked Ron. I only went to the wedding because Janie made me. I knew he would end up breaking your heart, I could see it in his eyes as he checked out Janie and every other woman in the room during your wedding reception. That leopard is never gonna change his spots. He'll end up cheating on you again and again, especially if he knows you won't leave him. You're in for a world of heartbreak, girl.\"\n\n\"That being said, if you ever need us, we'll be there for you.\"\n\nShe cried herself to sleep in my arms. I carried her into the spare bedroom and put a light blanket over her. I went back into the living room and poured myself a drink. Straight rye whiskey, my favorite. I only drank it when I was very happy or had something to think about. \n\nShe was still asleep when Janie got back. I put my hands to my lips and showed her Lori sleeping.\n\nWe kissed quietly and made coffee, whispering in the kitchen.\n\n\"How is she?\"\n\n\"She's a mess. How can she let that asshole keep doing it to her?\" I hissed quietly.\n\n\"I don't know honey. I'll talk to her when she gets up, but we both know it won't do any good.\"\n\nLori came in to the kitchen. Janie folded into her arms and the tears came again. I had already made my contribution, so I slipped out of the room. She stayed with us two days before going back to the asshole.\n\nI paid for the abortion, saying nothing to Janie about it. Ironically, Lori lost her child four months in, spontaneous abortion. Lori confessed to me she though it was because she had helped end a life, karmic revenge. It must be awful to bear that much guilt.\n\nThey lasted almost two more years before she finally had enough and filed for divorce.\n\nIt shocked him so bad he came apart. She had to change her phone number and get a restraining order. He swore he was a changed man. I kind of believed him, but it was too little, too late.\n\nShe stayed with us for three months before she got back on her feet. She moped for the first three weeks,before life came back into her. I knew she was healing when I came home from work to find her in the kitchen, stirring pots.\n\n\"Welcome home dear. Your other wife will be a little late, so number two is taking care of dinner. Would you like some....wine?\"\n\nShe giggled and kissed my cheek.\n\nJanie came in a little later and we dined, joking and laughing like we did in the old days.\n\n\"She'll be leaving soon.\" I said as we slipped into bed.\n\nJanie reached for me and snuggled in.\n\n\"You're right. I'll be sad, but I'll be glad when she goes. I'm tired of chewing up pillows.\"\n\nJanie was a vocal lover, not above screaming during her climax. She wouldn't vocalize while Lori was in the house, biting down on pillows to muffle her sounds.\n\nOver the next six weeks, Lori found a better job with more chances for advancement, and a nice one bedroom apartment close by. It was a sad day when she left, but she wasn't out of the driveway before we were scrambling towards the bedroom. Janie was hoarse the next morning.\n\nJanie and I had reached our seventh year. She was twenty nine, I was thirty. I started hinting about kids but she wouldn't discuss it. She didn't want to give up her job.\n\n\"It won't be giving up a job, it'll be a promotion. Motherhood can be a very satisfying career. Besides, we don't need the money.\"\n\nI wasn't rich. But, I had a very good job as plant manager at the the plastic injection plant my family owned. I was an only child so I would end up with controlling ownership eventually, but I hoped it was a long way down the road. My grandfather owned it originally, but divided it between his two sons. Dad married early and was pretty stable, but Uncle Jack enjoyed a batchelor lifestyle. He always had a plastic beauty on his arm, the older he got the younger and more fake they got. My cousin,Jack Jr. did his best to emulate his dad.\n\nBecause of the business, prenupts were required for both me and my cousin, not negotiable.\n\nThere was a little tension when my grandfather named me plant manager and Dad to the board. Uncle Jack demanded to know why.\n\nGrandfather smiled.\n\n\"To start with, he has a degree in business management. What degree does junior hold? That's right, in spite of spending five years in college, he never graduated, did he? Know how many days Dan has missed, going all the way back to high school and college breaks? Three, when he broke his arm. How many has junior missed? Oh, that's right, he's been fired from here four times, for attendance every time. I gave him the job because I want this place to grow and prosper, not collapse due to bad management. This discussion is over.\"\n\nI'm sure junior would have quit in protest if he still actually worked there, but it became a moot point when Uncle Jack's high flying lifestyle came back to bite him in the ass. Pretty soon me had the IRS and a couple of Vegas casinos after him, and grandpa bought his share of the business back, paying off his debts and giving him enough to live on the rest of his life if he was sensible. He set up trust funds for both me and junior, to be released when we were forty. He put a neat little flyer in, saying that we could actually draw off the fund starting at twenty seven, in the amount equal to the amount we made that year. He did that to keep junior working. Junior hated it.\n\nI was making forty five thousand a year, but I had only touched the trust fund twice, once to pay for Lori's abortion, and to pay for a short vacation to the Bahamas.\n\nJanie has been sort of distant lately, and I thought giving her this vacation as a token of how much I loved her might pep her up. It did, until I brought up children again.\n\nI finally lost patience.\n\n\"Janie, if you didn't want children, why did you say you agreed to having at least two when we married? Did you change your mind? If you did, didn't you think you should have shown me the courtesy of telling me. I'm about at the end of my rope.\"\n\nI think my little rant scared her, because she made a little production of flushing her birth control pills.\n\nSix months went by. I suggested we be tested, but Janie wanted to give it a little more time. I agreed to ninety more days, reluctantly.\n\nLori told us to relax.\n\n\"It'll happen when you least expect it. My suggestion is to keep practicing, often.\"\n\nFinally I had myself tested. I was fine, plenty of little swimmers and very good mobility. I was trying to figure a way to get Janie tested when Lori invited me to lunch.\n\n................................................\n\n\"I don't really understand your question, Lori. What's going on?\"\n\nShe twisted the napkin in her hands, looking miserable and everywhere but my face.\n\n\"Lori, what's up? If you need to say something, spit it out.\"\n\nShe finally worked up the nerve to look me in the eye.\n\n\"I'm leaving town, Dan. I got a promotion at work, and I'm relocating to Atlanta. I'm leaving very soon. The only thing I'm going to miss about this town is you.\"\n\nI was shocked. Up until last week she was at the house or on the phone two or three times a week. I wondered why she didn't call, but realized she was getting her affairs in order for her transfer.\n\n\"Damn, Lori, this is kind of sudden. Why didn't you tell us sooner. Does Janie know? She'll be devastated. She'll miss you terribly, we both will. And to answer your question, yes, in a different world I could fall easily for you.\"\n\nThe tears came then, hard. I knew that no one was eating lunch that day, so I got the check and put her in my car, calling the plant and telling them something came up, a personal emergency, and I probably wouldn't be back for the rest of the day.\n\nI drove her out to the park, we often went to concerts there, the three of us sharing a blanket and a bottle of wine. I knew when Ron would upset her she would come here and watch the kids play. It soothed her.\n\nThere was a small gazebo off to the side, a quiet place surrounded by trees. It had a nickname, the love hut, because couples used it often for privacy. I took her there.\n\n\"What's going on, Lori? I haven't seen you this upset since before your divorce.\"\n\nAt the word divorce she started crying again. I held her, stroked her hair. Next to Janie, this was the woman I cared most for in the world.\n\n\"Hush, now. You did the right thing, you know you did. He never loved you like you deserved. You'll find a good man, you're too good of a woman not to.\"\n\nShe subsided to snuffles, and pushed away from me.\n\n\"I'm not crying over my divorce, I'm crying over yours!\"\n\nShe jumped up and ran. I sat there stunned. What did she mean by that?\n\n...............................................\n\nI found her by the playground, watching the children. We sat on a bench in the warm sunshine, watching them play with happy, innocent faces, while she outlined the destruction of my world.\n\n\"When I was offered the promotion, I had conflicted emotions. This was my hometown, I have never lived anywhere else, even the college was local. But I gave it hard thought, and realized there was just nothing left for me here. Ron was out of my life, and even though I dated some, I never felt attracted to anyone. It was time, time for me to start over, get a new life and move on.\"\n\n\"I felt at peace for the first time in forever. I took the job, and started planning the rest of my life. I realized as I planned I needed to say goodbye to the few people I loved, and some I didn't. I called Ron, seeking closure for that period in my life. He was overjoyed, taking it as a sign we might get back together.\"\n\n\"It didn't go well. When he found out I wasn't letting him have another chance, and that I'd soon be gone, he kind of lost it. He had been drinking before I got there, and as the night progressed, he drank harder.\"\n\n\"As I was getting ready to leave, I told him how sorry I was we didn't make it, saying if we had been as loving and loyal as you two, it might have been different.\"\n\n\"Nothing is like it appears\" he snarled. \"I've been banging Janie, your perfect friend, for about six months now. She's just like all you bitches, say the right thing, or catch her in the right mood, and she'll spread like peanut butter.\"\n\n\"I slapped him and called him a liar, and he better not let you hear him say something like that.\"\n\n\"He laughed and said you'd never hear it from him, she was too good a piece of ass to risk losing.\"\n\n\"He was in full pain mode now, knowing this was going to be his last shot at hurting me.\"\n\n\"I know you think I'm lying, but I can prove it, he said. She has a small bump right behind her left ear. You can never see it because of the way she's always worn her hair, you have to be nibbling on it to know. And that birthmark on her pussy? If she didn't shave you'd never know it was there. Lately she's decided to grow enough hair to shave a little heart and cover it up. It's like five o'clock shadow when you go down on her, it's so bristly.\"\n\nI was reeling. The bump and the birthmark were there, and she was letting it grow out to form the heart.\n\n\"I'm doing her at least twice a week, he bragged. We do it on Thursdays when he has his weekly meetings, and Saturdays when he plays golf. While he's three putting, I'm getting a hole in one. We almost got caught two weeks ago, because it started raining.She always picks me up so no one will see me, I only get out after the garage door is closed. I was literally closing the patio door while he was in the kitchen. Had to walk two miles in the rain, that sucked. She made it up to me the next time, when she sucked.\"\n\nI remembered that day and how flustered she looked. I asked her if anything was wrong and she said I caught her by surprise while she was daydreaming. I remember joking she should quit daydreaming about screwing other men, and she giggled and said that took all the fun out of it.\n\nI was glad we didn't get lunch. My stomach was rolling.\n\nShe had stopped talking while I tried to control my breathing.\n\n\"It gets worse.\" she said sadly.\n\n\"He told me why she wasn't getting pregnant. She made a big deal about flushing her pills, then went the next day and got one of those implants that last for three months. She plans on saying she got tested and can't conceive. She doesn't want kids, can't stand them, doesn't want to wreck her body and make that kind of time commitment to anyone or anything. She's really shallow when you get down to it, odd how we never noticed it, isn't it? I must say she hid it really well.\"\n\n\"I can't really know why she decided to do this to you, you'll have to find that out on your own. I couldn't leave without telling you, I love you too much. I also realized that from now on, every time you look at me, you'll think of me as the one who destroyed your life, but I'm not. I could only do it knowing I would be gone, and I wouldn't feel pain every time I looked at you.\"\n\n\"In the future, when you think of me, if you think of me, try to remember the good times, and that I loved you enough to break your heart. Please take me back to my car now.\"\n\nI was too numb to talk. I don't really know how I got back to the restaurant. We parked and sat for a minute before she got out.\n\n\"Give me a hug?\" It was a really sad voice that asked.\n\nI got out and hugged her tightly, tears finally starting. I was too choked up to speak.\n\nShe finally let go and touched my face.\n\n\"Goodbye Dan. I really wish it was another universe, so I could love your pain away.\"\n\nI watched until her car rounded the curve and took her out of my life.\n\n.................................................\n\nThere's a reason it's called heartache. You literally ache, the pain is so intense. Anyone who has ever gone through this knows exactly how it feels. I don't think I took ten breaths in ten minutes.\n\nI somehow stumbled home at my usual time. Janie was her usual self, chattering about mundane things when she stopped.\n\n\"What's wrong with you? You haven't heard a thing I've said. You're a million miles away. What's bothering you?\"\n\n\"I'm bothered by the fact that my wife is a lying, cheating cunt, who's fucking the biggest asshole I've ever met while lying about how much she's looking forward to having our baby. That about covers it, wouldn't you say!\" \n\nOf course I didn't say that, but it went through my mind. \n\nLooking at her fine body and beautiful face, tall, big chest, killer smile, I marveled that I had never really looked beneath the surface to see she was a self centered, egocentric bitch whose only concern with world events would be if it kept her from getting what she wants. I had been reviewing our life in my mind since talking to Lori, and kept getting angry at myself for not seeing it. I shook off my thoughts and came back to the present.\n\n\"Sorry honey, I got some news today about someone I love that made me sad.\"\n\nDid she seem a bit uneasy? Damn, I hope so.\n\n\"Uh, what news, baby, someone dying?\"\n\n\"Worse. And I'm very pissed that you didn't tell me.\"\n\nShe was looking a little pale around the gills.\n\n\"I don't know what you're talking about! Tell me!\"\n\nI looked at her with sadness you couldn't fake.\n\n\"Why didn't you tell me Lori was leaving? Atlanta? We'll be lucky if we see her twice a year. You talk almost every day. Did it not occur to you once to tell me? We could have given her a party, or better yet spend some private time together. I know I wasn't as close as you were, but damn it, she was still my friend!\"\n\nTwin emotions of relief and surprise played across her face. Then, for a brief second, shock.\n\n\"Lori? Atlanta? When?\"\n\nI scoffed.\n\n\"Oh please. Don't say you didn't know. She asked me to lunch today, to tell me goodby. As far as I know, she's already gone.\"",
        "\"She really left? She hasn't talked to me for a week. I called three days ago, but it went to voice mail. You know how busy she gets with her new job sometimes so I really didn't think much about it. She's really gone?\"\n\nShe looked genuinely hurt and shocked. Well, she hadn't screwed her over, as far as I know. \n\n\"This isn't right. I'm going to call her, right now.\"\n\nShe did, repeatedly, becoming more and more upset. She tried her email, and Facebook. Nothing.\n\nShe was crying, real tears.\n\n\"Why did she go and not tell me? All our years of friendship, all our love, and she just leaves without goodbye. Why would she do it?\"\n\nI had tears in my eyes, for different reasons.\n\n\"I don't know hon. When I talked with her at lunch she told me she had seen Ron, and was upset by something by something he told her. Maybe it upset her so bad she forgot everything else.\"\n\nShe was really looking nervous by now.\n\n\"Did she tell you what they talked about?\"\n\n\"No, she just said it didn't end well.\"\n\nI actually hugged her,even though it gritted my teeth.\n\n\"Don't worry. I'm sure she'll call, or come by. We don't actually know if she's even left yet. Why don't you run over to her apartment tomorrow.\"\n\nShe grasped that lifeline.\n\n\"I'm sure that's it. I'll go over, first thing. I need to lie down. I'll see you in the morning.\"\n\nShe gave me a halfhearted kiss and went into the bedroom.\n\nI sat up for a few more hours, sipping my rye, thinking.\n\n................................................\n\nI had to know. All day Thursday I worried over it. People noticed, and I told them I didn't feel well, and went home. Janie was surprised to see me.\n\nShe was sitting on the couch, hugging a pillow.\n\nAt her questioning look, I explained I wasn't feeling well.\n\n\"Did you get hold of her?\" I asked, knowing the answer by the look on her face.\n\n\"No! I don't understand it! I've been her best friend for thirteen years, all the way to our junior year in high school. Why would she do that to me?\"\n\nI couldn't help it.\n\n\"Usually when someone does something like that it's over some deep emotion, like fury or betrayal. Have you done something to anger her, something she would equate to betrayal?\"\n\nShe may as well have confessed, it was written all over her face.\n\n\"N,n,no, I can't think of a thing.\"\n\n\"Well, I don't know what to say then. I'm sure she'll call, maybe it was just too emotional for her.\"\n\nShe attacked me that night. It was more intense than it had been in years. I was already asleep when I felt her hands slid beneath my boxers. I came half awake and looked at her. Usually when she initiated sex she set the mood. Candles, music, lingerie. Tonight she was just naked, her profile highlighted by the security light shining through the blinds.\n\n\"Do you mind?\" she said in a timid voice, another first. Usually she would just got me hard and climbed on. My body responded, she was one of the most beautiful women I had ever seen, and despite all my doubts and uneasy feelings, I still loved her.\n\nIt was the most tender, most passionate love making I could ever remember. She didn't demand anything or suggest anything, just became pliable to every whim and desire I had. I thought about just slamming her until I got off, giving her a true grudge fuck, but once again my stupid emotions got into the way. I put everything I had into pleasing her, bringing her to one peak after another with everything I had. When I finally collapsed, totally spent, she snuggled into me, gasping. I could feel the tears trickle onto my chest.\n\n\"Are you all right, baby?\"\n\nShe tried to talk through her sobs.\n\n\"Yes, yes. I love you so much honey, so much.\"\n\nWhat kind of fucked up mess had my life become that I lay with my wife after the most intensive lovemaking session in memory, not believing a thing she said?\n\nShe was soon sleeping, snoring lightly, as she did when she slept on mu chest. I lay there for an hour, staring into the darkness, before gently untangling us and getting up.\n\nI sat in my den with three fingers of rye until four, letting my tears flow quietly.\n\nI still managed to get up and report to work, looking halfway presentable. Didn't get a lot done, but made my presence known. Grandpa was seventy one, no longer officially on the payroll, but he still walked the plant at least once a week, and his sharp eyes missed nothing. He took one look at me and said \"Office, now.\"\n\nHe pulled the blinds and locked the door.\n\n\"Business or personal?\"\n\nI tried to pretend.\n\n\"What?\"\n\n\"Don't bullshit me boy, I'm too old, I don't have time to do the dance. You look like shit. What's going on?\"\n\nHe didn't like what I told him. He had been married once before he married grandma, to a woman that cheated before six months had gone by. He really didn't like cheaters. When he was still managing, if he got even a whiff one of his managers or their wives were straying, they found themselves on his carpet. If it was a manager, he was usually gone soon. If it was a wife, he usually gave the husband a week off to deal with it.\n\n\"You are gonna burn the bitch, right?\"\n\n\"Probably not. It would take too much energy. Before you say it, if it is true, she's gone, but I don't feel like being a ringmaster in my own personal circus. I'll just cut my losses, stick to the prenupt, and move on.\"\n\nHe grunted.\n\n\"Not how I'd do it, but it works. Why don't you call your dad, see if he'll fill in for you for a day or two?\"\n\n\"Already on it. He'll be here Monday. I'll call, let you know how it turns out.\"\n\nHe gave me a hard stare.\n\n\"See you do. And Dan, I'm sorry, I still remember how it feels.\"\n\n..................................................\n\nI had the money. I could have hired a detective agency, gotten pictures and audio. I could have wired the house. But in the end, I knew I had to actually see and hear it in person.\n\nSaturday morning I had a light breakfast with my wife, got a small kiss, loaded my golf clubs into my SUV, and drove away.\n\nI went four blocks and turned into the church parking lot, pulling all the way around the building. The church had a basement, and if you stood at the door your head was just about level with the parking lot and the street. If you didn't know someone was standing there, you would never see them, especially if you were watching the road and doing the speed limit. Twenty minutes later her little sports car went by.\n\nI waited until she was out of sight and walked back home. I went upstairs into the spare bedroom, the one we were going to convert into a nursery, left the door open slightly, sat down and waited.\n\nForty minutes later I heard the garage opener.\n\nThe stairs act like a sound tunnel, and I could hear the conversation.\n\n\"I'm not sure we should do this anymore. He's been acting funny since Lori left. I can't believe she didn't tell me goodbye. You don't think she knows, do you?\"\n\nI could hear his voice, brash and arrogant.\n\n\"She pissed me off during our goodbye, and I might have let something slip. But she wouldn't tell him. She knows how bad he'd be hurt. Everybody in the universe could look at her face when he was around and tell she was in love with him. I saw him look at her a couple of times when we were together years ago, when he thought nobody could see him. If they both weren't such honorable people, they would have started years before us.\"\n\nJanie was still uneasy.\n\n\"Still, it might be better to get together at your place for awhile.\"\n\nHe huffed.\n\n\"I've already told you, four people that work in his factory live in my building. How many Saturday mornings do you think we could have before somebody notices? We'd leave a paper trail if we used a motel, even if we paid cash. They'd still write our tag number down. No, I'll just keep on waiting at the corner two blocks from my place, and duck down until we're in the garage. If anybody sees you, they'll think you're doing what everybody else in suburbia does, running errands they can't do during the week. It worked so far, don't try to fix it if it ain't broke.\"\n\n\"Now, we gonna play or talk?\"\n\nHe heard the sound of her ass being slapped and the giggles.\n\n\"Race you to the bedroom, loser has to strip for the winner.\" she squealed as she headed for the stairs. They sounded like a herd of elephants coming up the stairs.\n\nJanie either had a head start or she was in better shape, because she was three steps ahead when she hit the landing. I would bet everything I've ever owned the last thing she expected to see at the top of the stairs was her loving husband.\n\nI had moved an occasional chair out on the landing. It took about a half a second for her to understand what she was seeing and stop dead.\n\nHe caught up with her and was trying to tug her skirt down before he realized something was wrong.\n\nHe was one step down from the landing but he looked round her. His expression was even better than hers.\n\nInstinct took over and he turned to run as I stood. Unfortunately for him he had taken his belt loose and unsnapped his pants on the way up the stairs. When he turned to run his pants fell and he got tangled. He tumbled all the way down the stairs.\n\nI went by without acknowledging her and reached him before he got up, dragging him by the long hair he was so vain about to the couch.\n\n\"Sit, motherfucker, and don't you move! Janie, get your ass down here, right now!\" \n\nI was roaring. She still hadn't moved.\n\n\"Janie. if you're not down here in five seconds, I'll come up there and drag you down, your choice.\"\n\nShe stumbled down the stairs and I sat her on the couch beside him. I pulled a chair up and faced them.\n\n\"Got anything to say?\"\n\nThey both started babbling and I held up my hand and yelled \"STOP!\"\n\nWhen they quieted down I spoke.\n\n\"Never mind, I'm not the least bit interested in hearing it. Janie, it doesn't matter why, it just matters that you did. At least you can quit hiding your birth control now and go back on the pill. And you, asshole, there is no excuse. You were just being true to your nature. But here's some free advice. Move. Leave this town. I won't hurt you myself, but I've got enough money to make your life here hell. Every time you say as much as good morning to a married woman, her husband will have the pictures and your address within the hour.\"\n\n\"If you speed, or drink too much, or just generally fuck up, the cops will know it. I'll give you a week before the games begin.\"\n\nI turned back to Janie, pulling a copy of our prenupt out of my back pocket.\n\n\"I'm leaving now, taking a short vacation. Should be gone three days. Here is a copy of out prenupt, in case you lost yours. Take exactly what it says you can have and be gone before I get back. My lawyers' name and address is on it, call him when you get your lawyer, or just do us all a favor and sign the divorce decree when you get it and send it back. Don't try to contact me, I won't be the least bit interested in anything you say. Nod if you understand.\"\n\nShe did slowly, holding the paper like it was a snake.\n\nI turned back to Ron. \n\n\"Time for you to leave. Get out of this house, right now. If I see you before you leave town, don't try to speak. Have a miserable, shitty, minimum wage life. Go on now.\"\n\nHe had gotten a little of his bluster back after the initial shock had worn off. He was a little bigger than me and I could see in his eyes he thought he could take me. He probably could in a fair fight, but what he did to me wasn't fair, so I returned the courtesy.\n\nHe was reaching down to pull up his pants and started talking.\n\n\"I'm gonna.......\" was all he got out before I slammed my fist into his cheek as hard as I could.\n\nHe fell on the floor stunned. I stood over him.\n\n\"That was for what you did to me.\"\n\nI kicked him, not in the nuts, but in the kidneys. The breath went out of him.\n\n\"And that one was for what you put Lori through for all those years.\"\n\nI looked at Janie.\n\n\"Don't even think about taking the car, you lost it per the prenupt. Might want to check asshole here and call a cab. Three days, not a minute more.\"\n\nI walked out the front door and into the rest of my life.\n\n.................................................\n\nThe trouble with dealing with stupid people is, well, that they're stupid.\n\nAsshole Ron decided to ignore my advice. It took him three weeks of pissing blood and walking bent over like an eighty year old man before he could move freely. That Saturday night he got into a bar brawl and got hit in the kidney with a pair of brass knuckles. The guy who punched him knelt down beside him.\n\n\"Dan said hello, and said he was gonna keep saying hello until you say goodby.\" \n\nWhen he got out of the hospital he left town.\n\nJanie got a lawyer and tried to break the prenupt. My lawyer laughed and asked her if she was going to enjoy paying lawyer fees for the next five years. Then he offered her five thousand a year for every good year she had given me, thirty thousand total, if she signed before the end of the day. I gave her her car, I never liked it and didn't need it. I also gave her the last two years of payments. She signed, took the money, and moved away. I saw her once at a funeral, and again at a wedding. She tried to start a conversation both times, but I just smiled, said hello, and walked on.\n\nA year went by. I dated some, but no one of any real promise. One day on a whim I found Lori's new email address at her job, and sent her a simple hello and my new email address. I didn't hear anything for a few days, but there it was, a short note giving me her personal email.\n\nMy first email was about ten pages long, basically an update of everything that had happened to me since we had last spoke. I glossed over the pain of my divorce, but she read between the lines.\n\nThe last part was the most sincere, heart felt thing I had ever written.\n\n\"Lori, I need to thank you for telling me. I know it was hard, and caused you a lot of pain, but I need to tell you something.\"\n\n\"I don't hate you. In fact, you have my sincere thanks and admiration. Only a person as morally courageous as you would have done it. Knowing it might ruin a friendship I think you held dear, you did something unpleasant, because you deemed it necessary for my well being. I can never repay you. I must tell you of all the things that came of it, losing you was probably the hardest.\"\n\n\"Janie was my heart mate, and I did love her dearly, and I would have remained faithful to her forever, but you were becoming my soul mate. In times of trouble, or when I needed level headed advice, you were the one I wanted to turn to first, because I trusted your judgement more than anyone I ever knew. I know you felt the same way. Remember all those get togethers we used to have, where Janie would dance, drink, and flirt, and Ron would work the crowd looking for a willing playmate? Where would we be found? Sitting on a bench somewhere in plain sight, just talking. About anything and everything. They say the most erotic part of a person is their brain. That being said, you are the sexiest woman alive. You don't know how good it feels to get to say that to you.\n\n\"I'll always love you for who you are, and I hope you found someone who appreciates you physical beauty, as well as the mental beauty that eclipses it. It would please me if we could correspond, but that is up to you.\"\n\n\"Goodbye for now, Dan.\" \n\n.................................................\n\nLORI'S SIDE\n\nIt was hard to describe the feeling I got when I saw Dans' short message, asking for my new email address. One of the main reasons I left was because I knew I would never find anyone as long as he was around, because they would never measure up. I had divorced a man I don't think ever actually loved me until the very end, and the man I wanted most in the world was married to my best friend.\n\nWhen I got the promotion I thought long and hard before I accepted it, but in the end it was best for me. If I wasn't in close proximity to Dan maybe I could actually find someone else.\n\nAfter finding out Janie was cheating on him, I knew, regardless of how he felt about me afterwards, I had to tell him. I knew it would destroy any chance I would ever have of being with him.\n\nI can shut my eyes and see in vivid detail his face when I told him. We were at a park, on a bench by a playground, the joyous cries of children mocking us as I told him he would be childless if he stayed with his wife, and feeling an almost intolerable ache for the child I never came to term with.\n\nWhen I left him, I had already had everything packed and moved except what was in my car. I'm surprised I didn't kill anyone that day, especially for the first fifty miles I drove. It took me that far to stop crying. I never spoke to my best friend again after I learned of her betrayal, I sometimes think that was a mistake.\n\nThe days turned into weeks, the weeks months, until a year had gone by. My boss loved me,maybe because the only thing I did was work. I made a few friends, went to a few nights out with my coworkers, but didn't date at all for almost nine months.\n\nThe few dates I had were nice for the most part, but they quickly figured out I wasn't interested either in a long term relationship or a one night stand. I rarely had a date with the same man twice.\n\nIt was a mistake to open that email at work. I did it during my lunch hour, and stumbled out of my office on the way to the ladies room, crying like a baby. All my old emotions surged to the surface, and it was just too much to handle.\n\nSeventy per cent of my office were women, and when one woman sees another woman cry, instinct kicks in and they go into protective mode.\n\nThree followed me.\n\n\"Lori honey, what's wrong?\"\n\nIt took me a few seconds to get my voice.\n\n\"Nothing's wrong. I just got an email from an old friend and it brought a lot of old memories back, both good and bad. Really, I'll be fine. Just give me a minute.\n\nI heard whispering and Julie left. The other two stayed with me until I could calm down and fix my makeup. Julie came back with my purse and an odd expression.\n\n\"I'm sorry, Lori. When I got your purse I saw your email. I couldn't help it, I read it. Please, let Carol and Cindy read it, it's one of the most beautiful things I ever read. Then I want you to tell us all about it.\"\n\nI should have been offended, but I wasn't. They went back with me, and read the email. We all had tears in our eyes when I finished my story.\n\n\"That's him in your wallet, isn't it?\" \n\nJulie had seen the picture of Dan I carried in my wallet. I just couldn't take it out. It was the only photo I had of him. We were at a party somewhere. Someone had just told a funny story, and we were holding each other, laughing.\n\n\"Yes.\"\n\nCarol hugged me, and surprised me by slapping the back of my head.\n\n\"He wants you, dummy. Can't you tell by what he told you? He made it clear he was unattached and not looking, why do you suppose he did that? He's trying to find a way back to you. We all know about your exciting and glamorous love life, and now we know why.\"\n\nCindy chimed in.\n\n\"She's right and you know it. Don't let the bad memories you have make you miss the chance to make new ones.\"\n\nI had to wonder. Were they right? Dan had always been a gentleman, but I remember slow dancing with him at those parties. He almost always got an erection. I used to tease him to keep both our emotions in check. I would grind into him and say, \"It feels like Janie is gonna get some tonight.\"\n\nHe would tease back, feeling my hard nipples on his chest.\n\n\"Ron is one of the luckiest men alive to get you in bed with him every night. I'd be sleep deprived constantly.\" \n\nI emailed him that night, updating him on my life. Other than another promotion, my life was like his, lonely and alone.\n\nWe talked back and forth for a month, getting more personal and longer each time. I didn't trust myself to talk to him directly, so I discouraged him when he wanted to exchange numbers. I was afraid I'd break down at his voice.",
        ".................................................\n\nDAN\n\nI was really glad that she let me email her. I actually think it was better that we didn't talk directly, even though I was dying to hear the sound of her voice. Emails gave you time to reflect, to edit your thoughts so they were more understandable. I remember telling Lori that I had read once about two English poets, who fell in love through letters and married by proxy, but never actually met each other. Although it was hard to understand the relationship, it was easy to understand the allure of the letters.\n\nThat being said, I was getting very frustrated with this long distance, asexual romance. The urge to touch her, to hear her bubbly little laugh that sometimes ended in a snort, the way she would shake her hair and stamp her foot when she got angry. I gently offered to fly down to Atlanta, and she was just as gentle in rebuffing me.\n\nI was just about to give up when I got an email from an address I didn't recognize, when I saw the caption. \"This is about Lori.\"\n\n\"Dear Dan,\n\nYou don't know us, but we're friends and coworkers of Lori. She was in pretty sad shape when she got here, and didn't improve much until she started exchanging emails with you. Now she's starting to get sad again, thinking you're going to grow tired of her. The idiot is in love with you, but thinks the baggage of the past is too much to get over. We don't think so, at least not on your end. It's time for you to man up and claim this woman! Convince her the past is the past, and she needs to start looking to the future. We fear it will in badly if you don't. And please, don't tell her we sent this.\n\nJulie, Carol, and Cindy.\"\n\nI thought about that message a lot over the next few days. I didn't email Lori for a week, and didn't respond to hers.\n\nFinally, I sat down and composed my final email to her.\n\n.................................................\n\nLORI\n\nI was getting frantic. Dan suddenly stopped emailing me or responding to mine. What had I done wrong? Did he finally realize the baggage of the past was just too much to over come.\n\nMy friends could tell I was upset and tried to console me. One day three bouquets of roses appeared on the desks of Carol, Cindy, and Julie, and they walked around like the cat that swallowed the canary all morning. At least somebody was enjoying life.\n\nThey all appeared at my office , bringing me lunch.\n\nAs they spread out the salads on the conference table, Julie casually asked if I had heard from Dan lately. They could hear the sadness in my voice.\n\n\"Oh cheer up\" said Carol. \"Have you checked lately? He night have sent you one and you missed it. Do it now, if he's sent you one, we can all read it while we have lunch. That is unless it's too personal.\"\n\nThey wouldn't let up until I checked. I couldn't believe it, I had a message. I was trembling when I opened it.\n\n\"My dearest Lori,\n\nI've been getting pretty good with romantic terms, huh? But now it's time for plain talk.\n\nWE'RE BOTH IDIOTS!\n\nI love you, and you know it. I'd bet my life you still love me. So, it's time to shut up or put up.\n\nI'm tired of looking at a computer screen. I want you here, with me, right now. I want to go to sleep with you spooned up against me, and see your face when I wake up. I want to touch you, to hold our children in my arms, watch your hair turn to gray.\n\nWe once told each other in another universe we could be happy together. \n\nIt's been over a year since I last saw you. It seems like a lifetime. This is another universe! What we were before, what we've gone through together and apart makes it so. And in my new universe, the color of the sky is colored by your love and the laughter of our children.\n\nI'll do it again when we're in person, but I want you to marry me. I'm not taking no for an answer. I'll give you two days. If you don't come to me by then I'll come to you. I'll sit at your desk everyday until the run me off, and then I'll sit in front of your apartment until they arrest me.\n\nSave us a lot of drama and admit I'm right. One way or another, we'll be together. See you soon.\n\nAll my love,\n\nDan\"\n\nFour grown women crying like babies attract a lot of attention. Like I said, seventy per cent women. Word got around, and every woman in the office read his proposal. The boss came back from lunch and thought someone died. When he read the email he was a little misty eyed.\n\nHe hugged me, and whispered he was going to miss me. He let everyone go home an hour early, nobody was getting any work done anyway.\n\n.................................................\n\nDAN\n\nI felt better after I sent the email. I was trying to get some contracts together, one of the sad facts of my business is that costs fluctuate regularly, based on oil prices. I was expecting a visit from a new supplier rep, the old one retired, when my secretary buzzed me.\n\n\"Someone to see you, Dan. Do you have time?\" \n\n\"Sure, send him in.\"\n\nI was looking at the new prices, and wasn't expecting him to come in so fast, when I heard the door open. I didn't look up\n\n\"Did you really mean it?\"\n\nMy head snapped up. It was Lori, thinner, with longer hair, and even more beautiful than I remembered. I literally jumped over the desk, closed the door, and took the woman of my dreams in my arms. I was never going to let her go again."
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/did-you-really-mean-it"
}