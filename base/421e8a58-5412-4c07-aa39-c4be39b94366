{
    "title": "Claimed by a Futa Genie",
    "pages": [
        "Tim walked into the front room of his friend's house and flicked the light switch a few times. \"Hey Harley, your light's out,\" he shouted up the stairs.\n\n\"Yeah it's temperamental, I think this whole place needs rewiring. There's one of those lamps on the table that you tap with your hand to turn on. Use that but don't be surprised if you get a bit of static off it. I'll be down in a minute.\"\n\nTim found the lamp and eyed it suspiciously before tapping it and getting a little zap. \"Argh!\"\n\nHe heard Harley laughing at the top of the stairs where he had moved to listen to the yelp. \"I love that lamp. It gets everyone but for some reason only ever once. I should probably get rid of it but it's so much fun.\"\n\n\"Yeah it's a laugh a minute you arsehole!\" He shouted up, sucking his finger as his friend went off to get ready.\n\nAt the very edge of Tim's hearing he thought he could just about make out a voice. It sounded like a... woman's voice, but it was distant and muffled like it was coming through water.\n\n'Yessss... I think you're the one I'm waiting for. The one. I need to be sure though. Touch the lamp again. Touch the lamp. Touch the lamp.'\n\nTim scratched his head as the softly spoken words echoed round his skull. He was still sucking his finger when the lamp blinked back out. \"Damn it.\"\n\nThe words continued to be whispered into his mind. 'The light's gone out again. Touch the lamp. Touch the lamp. Touch the lamp.' He tentatively reached out. 'Touch the lamp.' he paused warily before the metallic base. 'Touch the lamp. Touch the lamp.' And touched the lamp.\n\nZZZUMMPPP\n\nHe didn't know if it actually was a sound or just a sensation as an impact wave flung him across the room causing every hair on his body to stand on end. Whatever it was it unleashed a massive bolt of energy that exploded in his mind turning his whole world blinding white and making his ears ring with a high pitched whine. Every neuron pulsed within him and burned like fire as he screamed silently far beyond the ability to articulate sounds. He lay curled up in the fetus position cradling his head as the pain and fog slowly cleared.\n\n\"Shit! Shit! Shit! Arrrghhh! Fuck!\"\n\nRegaining his senses he kicked away with his feet, backing up from the light that was now shining brightly, far too brightly. That thing was a deathtrap. He needed to disconnect it, use a broom handle or something to flip the switch or pull the plug out. Where was it plugged in? He traced the path of the lead with his eyes until he found what he was looking for and his eyes went wide. It's not even connected to the wall, it's not even plugged in but it's on and working!\n\n\"What the hell!\"\n\n'It's you, you're the one, my one, the one I've been waiting for, rub the lamp, it's time to meet you, rub the lamp, time to make you mine, rub the lamp, rub the lamp.'\n\n\"Argh! Get out of my head! Shit who am I talking to? I need a lie down.\"\n\nLooking over he saw a smudge on the lamp, probably burnt from where the bloody thing zapped me, he thought, absentmindedly returning to sucking his finger. I should wipe it clean. 'Rub the lamp.' No, that's crazy, I need to stay back. 'Rub the lamp. Rub the lamp'.\n\n\"Who's talking to me?\" He yelled again.\n\nShit I'm delirious, he thought, I need to go to a hospital. Get myself checked out. Maybe I'm in a coma, 'Rub the lamp,' or dead or something. Argh, my head feels so muggy I can hardly think straight. 'Rub the lamp. Rub the lamp.' Well I suppose I should probably rub the lamp before I seek help though. 'Rub the lamp'. It wouldn't be right to leave without cleaning it. 'Rub the lamp. Rub the lamp.' It's probably my fault it's dirty afterall. 'Rub the lamp.' And it's right in front of me now. 'Rub the lamp.' How did I get so close? I don't even remember moving to it. 'Rub the lamp. Rub the lamp. Rub the lamp.' Tim reached out and rubbed the lamp.\n\nThe voice stopped and the trance was broken as thick purple smoke billowed out from the top of the lamp and Tim once again scrambled away across the room. It formed into a column, rushing in his direction. He swifty rolled to the opposite side of the room as it swirled towards the sofa and condensed, taking human form.\n\n\"Hello my love, it's so good to finally meet you. I've been waiting a long time for you my darling,\" said the woman now relaxing on the couch. \"Hmm and what does a girl have to do to get a drink around here? Oh yes. This.\" She flexed her fingers and a red glowing light formed within her hand, white sparks of energy spinning through it like stars in a nebula. The cloud of light condensed into a glass of red wine which she swirled gently before taking in its aroma and smiling sweetly. She took a small sip and looked him up and down before staring directly into his wide eyes. \"Mmmm gorgeous.\"\n\nTim sat open-mouthed against the wall. Her long brown hair was tinged with red and she had a large flower above each ear. Her intelligent eyes were an unearthly combination of blue and green but shot through with flecks of gold that had expanded and glowed when she used her magic to conjure the drink. Those same eyes shined with mischief and desire and he couldn't quite tell if her smile was warm or predatory. A simple red dress hugged her curves showing the outline of her underwear and the outer edge of her lacy D-cup bra was just visible in the plunging neckline.\n\n\"What do you want from me?\"\n\nShe raised an eyebrow. \"Hmm interesting. Usually when our kind meet someone it's all 'I want, I want, I want.' It's nice to have someone asking me what my desires are for a change.\" She bit her lip and smiled. Definitely more predatory this time. \"Hmm what do you think I might want?\" Her tongue darted out to lick her ruby lips.\n\n\"What are you?\" He said ignoring her loaded question and trying to resist carnal thoughts.\n\n\"Oh dear, I was rather hoping you would be a little quicker on the uptake darling. It would be a shame to be bonded for all eternity to a half wit but maybe that's my fault.\" She sighed, \"did I fry your brain when I did your soul reading.\" She made an exaggerated sad face and in a gently mocking tone added, \"do you need to call your mummy to help put the pieces together for you? The lamp. The rubbing. The smoke. The hot sexy girl that will do anything for you. Or anything to you for that matter.\" A broad smile split her face as her tone became sultry again. \"Mmm, the things I'd like to do to you. The things I am going to do to you.\"\n\nHe gulped. \"So you're a genie then?\" He said slowly getting back to his feet.\n\nHer eyes lit up. \"Clever boy,\" she winked, \"I knew you'd get there in the end.\"\n\n\"But that's not possible, genies aren't real. And even if they were, it's supposed to be some kind of exotic ancient persian lamp or something. You know, made from gold and covered in gems and rubies. Not just some cheap nasty electric lamp that's been mass produced in china!\"\n\n\"Hey, that's my home you're talking about.\" She said in indignation. \"Well... one of them. It's more like a scouting vessel really. And nobody uses those old oil lamps anymore so how would we meet cute little boys like you if we were restricted to them?\"\n\n\"Well if you're a genie shouldn't you be dressed in veils and offering me three wishes.\"\n\n\"Ugh, you're one of those are you. A 'traditionalist'. Fine.\"\n\nHer body dissolved back into purple smoke and reformed standing before him in the classical pose and posture of a genie, hands together as if in prayer. She bowed before him. \"How may I serve you my master.\" She paused, waiting a few seconds before breaking the aura of subservience with a smirk. \"Although if it's role play you're after. Rather than master and servant why don't we try...\" The same red light from earlier began spreading out from her hand to form a whip that she cracked through the air making him flinch. \"...mistress and slave. I think that's much more fun.\"\n\nShe laughed warmly at his shocked reaction as the whip vanished back into smoke again. \"Sorry, sorry, couldn't resist. But no. You are in charge, my love. Do you want to try out some wishes? What is thy bidding my lord?\" She asked in half mocking deference.\n\n\"Um... I don't know.\"\n\n\"Well how about the usual? Millions in your pocket, a longer life and a bigger penis. Does that all sound good?\"\n\n\"Well, yeah, ok let's go with that.\"\n\n\"Your word is my command, my master.\" She twisted her fingers and the red glowing energy rushed from her fingers to his crotch and thighs making his whole body tingle as it enveloped him. The magical light and sensation slowly faded. \"All done my love.\" She said in an excessively happy and chirpy voice. She also wore a slightly mischievous smirk that suggested she was up to no good.\n\nA wary Tim reached into his pockets and pulled out a massive wad of cash quickly realising there were indeed millions in his pockets. It wasn't exactly what he was expecting though.\n\n\"What is this?\"\n\n\"Three million Vietnamese Dong. It's worth around a hundred pounds if you convert it but you didn't specify the currency, only that you wanted millions in your pocket. Also I thought it was funny because the currency is called dong which is a slang term for penis and you also asked for a lot more dong.\" She smiled broadly.\n\n\"So I didn't get a longer penis either?\"\n\n\"Of course you did! A genie always keeps her word. Take a look.\" She grinned as he peered down into his pants. \"I've added sixty micrometers.\" He glared at her. \"I've added the thickness of a human hair sweetie.\"\n\n\"So basically no difference then?\"\n\n\"No... but you had a lovely size already. Six inches is perfect for most girls and if it was much larger it would scare them away. You see, a much bigger penis can be very intimidating. As you'll find out very soon my dear,\" She added smirking ominously. \"And if you look around you'll see that I've paused time so you're getting this whole experience as an expansion of your life. So that's your longer life wish taken care of too.\" She said happily as he continued to stare at her. \"What? Aren't you wondering why your friend hasn't come down yet despite all the noise you've been making? I've frozen time around us so we can get to know each other better.\"\n\nShe smiled sweetly. \"So. You have now been given your three wishes as my master.\" A stern look took over. \"But you have squandered them without due thought and without once asking the price that is to be paid. Foolish human. You are my master no more and the price is to spend the rest of eternity as my slave!\"\n\nRed glowing chains rose from the ground and dragged him to the floor in front of her. Her eyes turned crimson and her hair blew wildly at the center of a sudden and powerful vortex that sucked all the air from his lungs. The room itself spun and twisted around them as he crouched, chained and cowled in the eye of the raging magical storm. Before his eyes she seemed to physically grow. Already a couple of inches taller than him she gained another three feet, towering over the frightened and helpless man.\n\n\"You may have mistaken me for a kind, compassionate and loving entity but be in no doubt mortal that for the rest of eternity you will find me a cruel and demanding mistress.\"\n\nAs he looked up in fear he could see her struggling to control her facial expressions and her face suddenly cracked as she started laughing. The fits of laughter continued as the storm dissipated and the chains disintegrated into dust around him, fading into the floor. \"I'm sorry, I'm sorry I... I couldn't resist it.\" She said shrinking back to her normal size. \"Oh you should have seen your face. Priceless, just priceless.\" She bent over holding her sides and laughing hysterically.\n\n\"What the fuck!\" He rose back up to his feet, still shaking. For a while he just stared at her with a shocked and incredulous face as she continued to double over in fits of giggles. After a little while he also found himself struggling to keep a straight face. Her joy was simply infectious and in the end he couldn't help but smile and start laughing. \"Really? That's your idea of funny is it!\"\n\nShe nodded enthusiastically. \"Oh yes indeed. I laughed so hard I think I might have peed myself.\" She giggled as she slowly brought herself back under control. \"Actually I... I really am sorry about that. I may have pushed that a little too far.\" She looked slightly nervous. \"To be honest with you I think I may have spent a little too long in the lamp.\" She finally admitted.\n\nFor the first time since he'd met her she seemed unsure of herself, her self confidence somewhat faded. He actually found it quite endearing. His first true glimpse of the humanity hidden just beneath the surface of this being of unimaginable power. He struggled to keep the smile that had formed on his face from growing too wide.\n\n\"It's because of what I said about your home isn't. Because I said it was cheap and nasty.\"\n\n\"Maybe that too.\" She chuckled. \"But I'd never really force you into doing something you didn't want to do. Wellll... Ok I might use a little bit of bribery, blackmail and coercion every now and again to get what I want but you show me a single woman who doesn't. Or any man for that matter, we all know how to play the game.\" She smiled and twirled a strand of her hair with one of her fingers. \"Can you forgive me?\" she asked sweetly.\n\nTim gave up and started laughing and for some reason he didn't quite understand he felt perfectly safe and increasingly comfortable with her. \"Yeah fine I forgive you, but know this... after that little trick you're paying to get my pants dry cleaned.\"\n\n\"Ha. I knew you were the one for me Tim. I know I can come off a little crazy at times but there's a reason for that. I am crazy, about you, about sex, about everything and we are going to have sooo much fun together,\" she purred.\n\n\"Now then...\" She said pulling herself back together and sounding business-like. \"Let me tell you how genies really work. First genies don't grant your wishes. We grant your deepest desires. When a young genie comes of age we cross over to your realm to seek a partner and we don't just reveal ourselves to anyone who rubs our lamp. We wait, sometimes for years, sometimes for decades, until we find the one who's desires and personalities match our own. We find our soulmates. And you are mine Tim, my one and only, my one true love, now and forever.\"\n\n\"You're joking right! Are you really trying to tell me I'm your one and only and we are destined to be together? We've only just met. You can't love me!\"\n\n\"Oh but I do. We get a sense of where we will cross paths with our soulmates but we don't know who they are. That first little zap you got just tested your essence, the feel of your personality, a little taste of you. Everyone gets a little tasting Tim. If we get the right feeling about someone, the right throbbing in our hearts, the right kind of throbbing between our legs, then we do the soul reading.\"\n\n\"So you can read my mind?\"\n\n\"No. We can't read minds and even if we could it would only tell us what you were thinking right now on the surface. Reading a soul is far deeper and more revealing. Reading your soul tells me you're a warm, kind and loving person. You have a beautiful soul my love. You also have a very interesting and kinky soul and I like that in a man. For instance, I know you dream of meeting a big strong dominant woman with a big strong dominant cock.\"\n\nHe gulped and glanced around nervously but made no attempt to deny it.\n\n\"Like I said, we don't normally grant wishes, only desires.\" She ran her hands down her body and her outer clothing vanished as a magical light flowed with them. Leaving her standing in just a red bodice with matching red stocking and suspenders and with her legs pressed tightly together. \"But just this once I will grant you one of your earlier wishes. You wished for a bigger cock so here you go.\" She spread her legs and a massive ten and a half inch dick sprang up from between her thighs to slap against her stomach. \"Here's that much bigger cock you wanted.\"\n\nTim's eyes went wide and he stepped back. \"You have a cock! Shit and it's huge. You can't use that thing on me, it'll rip me in half!\"\n\nDespite his words he already felt it calling to him. He wanted to believe it was her magic that was making him want to sink to his knees before her. That she was in some way controlling and manipulating him. But he knew that wasn't true. The urge came from somewhere deep within him that had always been there. The dream of being with a powerful woman with an equally powerful appendage. He couldn't stop himself from staring but through sheer willpower just about managed to stop himself drooling.\n\n\"Don't worry, you can take all of me. I'm a genie, I'll change your body so it'll juuust about fit. So you'll stay nice and tight for me each and every time I take you.\"\n\n\"Sooo you can make sure it doesn't hurt?\" He asked tentatively.\n\n\"Well I could make sure you don't feel any pain.\" She said smiling, \"but I won't,\" she added darkly. \"A little bit of pain is a good thing my darling.\" She turned to smoke, closing the gap between them in the blink of an eye to reform pressed against him, whispering directly into his ear. \"That little sting from a freshly spanked ass.\"\n\nAgain she dissolved into smoke and he gasped as she travelled both through and around his body. This time to reform pressed up behind him, her hard cock nestled between his butt cheeks and her hand lightly gripping his throat as she pulled his head back to whisper into the opposite ear.\n\n\"That exquisite feeling you'll get when this big fat cockhead of mine slowly, agonisingly, stretches your tight little hole. Your mouth hanging open, that cute little 'ah, ah, ah' sound you'll make as it forces you wide. And then... just as you think you can't take anymore. Just as your eyes screw tight, your hands grip the sheets and you clamp your teeth closed... then... 'Oh yesssss, Oh fuck, oh yesss, oh fuck Yessss'. You'll cry in relief and ecstasy as it finally pops inside. As your hungry little hole swallows my big fat cock and welcomes it in like a long lost friend.\"\n\n\"I'll just hold it there inside you for a bit, resting just inside your passage. While you adapt to my girth. While you come to accept that your big dicked lover is about to take full ownership of this tight little ass.\" She gave his bottom a gentle squeeze and licked the side of his face, biting her lower lip as he moaned.\n\n'And just as you begin to calm down and adjust to my presence within you my little one, you'll realise something. You've only taken the head. You still have my thick, girthy, throbbing, shaft to go. And as you've already seen. The base of my cock. Just where it meets those large, fully loaded balls of mine. Those big fat nuts that are going to be pumping their creamy load deep inside you every chance they get from now on my love.\" She kissed his shoulder and neck before running her tongue across his earlobe. \"That's when you'll remember that the base is even wider than the head. And that you still have nine more inches poised and ready to force their way in.\"\n\n\"Oh my god,\" he moaned and trembled in her arms.\n\n\"Mmmm such lovely little sounds you're making for me my darling. I do love to hear you moan. But no, I'm not your god. Your goddess maybe. Certainly your devoted and loving genie and future mistress. But we're getting distracted aren't we. So where were we? Oh yes. We were discussing how I would deflower you my dear. How you would take my cock, how you would become my lover. My soulmate. My whore.\" She held him close, hugging him and kissing him behind his ear as he groaned and pushed back into her.\n\n\"So we've reached the point where you have my glorious head resting just inside you, my love. Releasing a nice steady flow of precum into you to lube your passage. Getting you nice and wet for me. But you know it'll be nothing compared to what I'll unleash when I finally cum. When I flood you, fill you up, make you mine. Now you're thinking about those extra nine hefty inches poised to enter you. Trembling in my grasp. Both dreading and longing for them. Waiting for them to claim you. Yes you know it'll hurt as they sink deep into that tight little butt of yours but it'll hurt sooo sooo good.\"",
        "She ground herself against him as he arched his back and closed his eyes.\n\n\"Are you imagining it, baby? Imagining the pressure slowly increasing as your hole stretches around my plundering girth. Your entire body shaking, teeth clenched as I feed it into you so, so slowly. Making sure you feel every ridge and vein of my cock, every single millimetre as I steadily drive them allll the way home. Maybe a single sweet little tear forming in the corner of your eye that I'll lick and taste as it runs down your cheek. And then. Just at the very edge of your tolerance. You'll moan in pleasure as I finally bottom out. Proud of yourself for taking it all. For being such a good boy for your beautiful and loving mistress. I'll just hold it there until you relax around me.\"\n\nShe pulled on his hair, moving him back to look into her lust filled eyes.\n\n\"And then my darling... I'll really start fucking you. Slowly at first, pulling almost all the way out then allll the way back in. Making sure you take my full length, in and out, in and out. Gradually increasing the pace as the ache and discomfort fades, slowly turning into mind numbing pleasure. When the groans turn to moans. When you start begging me to fuck you. To fill you with my cum. 'Yess, yess, yess, cum in me baby,' you'll cry, 'cum in my ass. Oh yessss, fill me up, make yours, make me your bitch, ughhh ugghhhh, AHHHHHH YESSSS.'\"\n\nShe held him tight. \"Mmmmm. Can you imagine that, my love? Can you imagine how good it will feel? I know I can.\"\n\n\"Yesss. Yes I can imagine it. But I don't want to. I want the real thing. Take me. Please fuck me now!\"\n\n\"Really? I thought you didn't want me to. That you couldn't take me as I was far too big.\"\n\n\"Yes really. I can take it. Please just put it inside me, please!\"\n\n\"NO!\"\n\n\"What! Why! Please! I need you inside me!\" He whined in frustration, grinding back against her.\n\n\"Oh I'm sooo so tempted right now and you make me sooo sooo horny when you beg me like that but you don't love me yet so I just can't do it.\" She smiled tenderly, wrapping him in her arms for a warm hug, holding him close before disengaging with a heavy sigh and walking back round to face him.\n\n\"I've waited a long time for you Tim and when I finally do take you I'm taking all of you my love. I'm leaving nothing behind.\" She moved her hand to his face and kissed him gently on the lips, looking deep into his eyes. \"I won't make you mine until I know you love me back.\"\n\n\"I umm, I.... I do love you.\" He mumbled in a trembling and unconvincing voice.\n\n\"Aww that's so sweet, you're so desperate for my cock. But it's lust not love you're feeling my dear and we both know it.\" She grinned broadly. \"But I will do something for you.\"\n\nShe circled the fingers on her right hand and moved them up and down as the red light formed both within them and within his pants. Smiling, she began to give him a magical hands free hand job that was several orders of magnitude better than anything he'd ever felt when employing his own palm. Her magic infused the entire length at the same time and intensely stimulated every single part of his dick and balls at once.\n\n\"Oh wow that's amazing, oh shit, I'm not going to be able to hold on much longer.\" He had already been on the edge just from the intensity of this seductive, beautiful and sexy woman and she rapidly and skillfully pushed him beyond the point of no return. \"Oh fuck I'm gonna cum.\" He quickly moved to free himself from his trousers.\n\n\"Uh-Uh-Uh.\" With a flick of her left hand the red magical fairy lights formed and shot out towards him to form glowing bracelets and anklets. As she spread her fingers they reacted, pulling his arms and legs apart to leave him standing in an X position in the center of the room, unable to move anything but his head. Grinning, she increased the speed of her right hand as he trembled and moaned.\n\n\"Oh shit I'm cumming, I'm cumming, Arghhhh.\"\n\nShe smiled as she pumped his cock into his underwear, continuing to milk him until he was fully spent before she released him. Tim sagged down onto the sofa panting and gasping for breath.\n\n\"Ok I guess I'll leave you to go out with your friends now. But before I go, would you like me to clean you up and magic away the cum in your pants.\"\n\n\"Yes please.\" He answered in a low exhausted voice.\n\n\"Then all you have to do is ask me sweetie. Ask me using my name.\"\n\n\"I... I don't know your name.\"\n\n\"But I know yours! And there you are begging me to fuck you. Declaring your undying love in a vain attempt to trick me into taking you right here on the floor. And you don't even have the decency to ask for my name.\" She tutted and crossed her arms under her chest as his friend Harley walked back into the room.\n\nOh crap! He thought, She must have restarted time. Tim quickly covered his wet patch with his hands while glancing wide eyed between the two of them.\n\n\"Hey, so are you ready to go or... are you alright Tim?\" Said Harley and turned to look where Tim was staring. To where the beautiful genie stood loud and proud with her thick mighty cock standing ominously to attention. Harley looked back, spreading his arms. \"What are you looking at?\"\n\n\"You can't see her?\"\n\n\"See who?\"\n\n\"I... don't know.\"\n\n\"Are you alright bro. Have you been sniffing glue or something?\"\n\n\"He can't see me.\" She smirked. \"And I'm Alisha by the way. Maybe having wet cummy pants all night will remind you to ask a ladies name next time you're trying to bone them. Or you know. Trying to get them to bone you.\" She winked. \"Toodles for now,\" waved and vanished back into the lamp.\n\nShit, he thought, maybe I am in some coma induced fantasy world after all.\n\n\"Err dude... Are you OK? We're still up for meeting the others right?\" Harley waved his hand in front of his friend's face as he stared vacantly across the room.\n\n\"Err yeah. Yeah of course. Umm that lamp? Can I buy it off you? I can give you three million dong right now!\"\n\n**********\n\nTim sat at the table in the bar holding tightly onto a carrier bag containing the lamp. Harley hadn't wanted to sell it but Tim had been really insistent and a bit... obsessed. So after checking the exchange rate he reluctantly accepted. It had just been a wisecrack about the glue sniffing but something was off about his friend. He didn't think he was on drugs but... something wasn't right. He was keeping a careful eye on him.\n\nHis mates were talking and as usual it had begun relatively politely and with a semblance of decorum. However, as the drinks flowed the conversation had begun its inevitable descent into the gentle mickey taking, innuendos and the mildly inappropriate banter of friends. Mildly inappropriate might be the wrong wording. Grossly inappropriate might be a more accurate description. They tried to tone it down when new people joined them but would soon revert to type. It was who they were and how they relaxed and had fun so people either adapted to it or moved on.\n\nTim wasn't engaging as he usually did, remaining distracted and peripheral to the exchanges as Harley shot him the odd concerned look. What the hell am I doing, he thought, Why am I holding onto this lamp? I don't even want to put it down on the floor in case I lose it. It was a brain seizure or something right? I got a shock from this cheap crappy nasty light here and it left me delusional. Yes that's it I was hallucinating. And I must of cum in my pants due to electro stimulation. That's definitely a thing. Yes, that explains everything... except... where fuck did the vietnamese dong come from.\n\nLost and distracted in his own thoughts he didn't notice the purple smoke spilling from the side of the carrier bag and snaking its way towards the door. Finding a secluded spot it reformed into a smiling and familiar figure that began walking confidently over to their table.\n\n\"Hi Tim. Move up a bit babe and let me sit down.\"\n\nHe glanced in her direction before snapping his eyes back straight in front. Damn it I can see her again. She was wearing a relatively simple floral dress with the seemingly trademark flowers in her hair. It wouldn't make any difference what she was wearing though. Even if she wore a sack or a bin bag she was still radiant and would command the room. He had to give himself credit there as his mind could certainly scare up a stunning beautiful illusionary woman. Maybe it's a tumor.\n\n\"Hello? Tim? Can you hear me?\"\n\nThe others stared at him.\n\n\"Tim, are you not going to answer the pretty lady?\" Harley interjected.\n\n\"You can see her too?\"\n\nHarley slapped his arm. \"What the hell is wrong with you today?\"\n\n\"Aww he's not talking to me cause I kicked his ass playing pool earlier. Plus I think it's his time of the month. Come on honey, shift up and let your girlfriend sit down.\"\n\n\"Umm yeah of course.\" He tried to pull himself together, act normally and play along. \"And err... if you don't want me to sulk then you shouldn't cheat. I had you totally snookered, turned away for a moment and when I looked back you'd won. There's no way you could've potted the black from that position,\" he said thinking fast. \"Guy's, this is Alisha. Alisha, this is Harley, Fred, Helen, Carol, Tony.\"\n\n\"Wow, nice to meet you Alisha,\" said Helen before glaring at Tim. \"Why didn't you tell us about her earlier.\" She leaned over the table and for the second time in as many minutes Tim got his arm playfully slapped. She turned back to Alisha, \"So how did you guys meet?\"\n\n\"Oh you know, the usual. I was just hanging about people watching, saw this great guy here and I just knew he was the one for me. I just knew I had to make him my bitch.\" Alisha gave her a devilish grin and Helen responded with an instant high five as she effortlessly settled into the dynamic of the group.\n\nTim just smiled and slid his empty glass in front of Alisha. \"Well your bitch needs a refill so why don't you get your fine ass up to the bar and make yourself useful.\" It was his time to get a high five, this time from Harley, as Alisha poked her tongue out at him, collected orders from the rest of them and headed up. Calling him her bitch and having to buy the next round of drinks as penance seemed a fair trade to her.\n\nIt had been a risk re-emerging in front of his friends like that and she was planning to wait until they were alone again before talking to him. She had been way too intense earlier but a few years spent in an electrical appliance tends to make a girl a little over exuberant when she finally gets out. The plan was to give him the full Alisha experience, to show him how they would gel and bounce off each other, the fun and excitement they would have in the future. Instead she'd left him doubting his sanity so she had been forced to reveal herself to others sooner than she would have liked. The 'bitch' comment had partly been to break him out of that stupor, to force him to react and he didn't disappoint.\n\nOver the next couple of hours they all bonded and had fun. Between them they cobbled together a meeting and first date story that didn't involve lamps, magic and the revelation of a large and unexpected penis. She even managed to adapt elements from her life in the genie realm into the human world so she didn't look too much like a hermit or weirdo. Throughout the evening Tim had got more and more cuddly and affectionate with her and she had just felt his hand slipping down to her butt. Alisha decided it was time to kick it up a notch and have a little fun. It was time to get a bit kinky.\n\n\"I've gotta go and make a quick phone call, I'll be back soon.\" She gave Tim a kiss on the lips and held his gaze as a red glowing aura surrounded her body before splitting away from her like a crimson transparent ghost. The shadow form of Alisha walked away and his friends waved it off. Now invisible to the others the real Alisha popped up to sit on the table as they turned towards Tim.\n\n\"Oh wow she's really nice and so good for you. I just love your new girlfriend.\" Helen gushed.\n\n\"Yeah she's way out of your league man.\" Tony chimed in. \"I mean you're a nice guy and we all love you and everything but have you seen her body? And have you seen your face?\" He gestured vaguely in Tim's direction.\n\n\"Yeah I've seen my face. Have you seen my middle finger?\" Tim gestured back as they all laughed.\n\nIt was difficult talking about Alisha behind her back when she was clearly still sitting there eavesdropping. Happy and eager to find out what his friends thought about her and what he would say in return. It became harder still when she hitched her dress and began stroking herself in front of him, biting her lip, gently moaning and fluttering her eyes at him. In fact everything was getting harder. He yearned to reach out and take it in his hand but how could he without them noticing. She might be invisible to them but he'd get a few peculiar looks if he started giving out random air handjobs. He licked his lips.\n\n\"You're staring into space Tim. Aww you're missing her already.\" Carol teased. \"Are you in love? I can't wait to go to your wedding.\"\n\n\"I wouldn't be picking out your outfit just yet Carol but... I don't know. Let's just say there's a little voice that's telling me she's the one.\"\n\nCarol opened her mouth to reply but paused. They all paused. Tim looked around the eerily quiet pub to see everyone locked in stasis. Everyone except the lewd leering girl rubbing her meat and angling it towards his mouth.\n\n\"I've had so much fun sitting here with you and your friends but I've got to admit to feeling more than a little horny. Can you tell?\" Go on honey. Give it a little kiss no-one's watching. Well... they are but they aren't if you know what I mean.\"\n\nTim looked nervously at the glassy eyed stares of his frozen companions as Alisha waved her veiny member hypnotically in front of him. He gulped and tentatively wrapped his fingers around her, shuddering as he held her for the first time. He began gently stroking her as she smiled down on him.\n\n\"Doesn't this break your rules?\" Tim whispered nervously.\n\n\"The rule is I can't take that lovely little bottom of yours until you love me my dear but this is just fooling around a little. And you don't have to whisper, no-one else will be able to hear you moaning and gagging on my big thick cock.\"\n\nShe saw a flash of fear in his eyes at the thought of taking her in his throat for the first time and he paused momentarily before steeling himself and continuing to caress her length. Alisha let him work on her for a few more minutes before speaking again.\n\n\"Mmmm your hands feel so good baby,\" she encouraged, \"but I really want to feel that mouth of yours, those soft lips wrapped around me.\"\n\nTim's eyes were drawn to the drop of precum forming on her tip and realised how desperately he needed it. He realised there was simply no way he could go on living without knowing what she tasted like. He leant forward maintaining eye contact, oddly fearful that it was a trick and she was going to take it away from him, stretched out his tongue and scooped it from her slit.\n\n\"Oh yesss!\" They both moaned together.\n\n\"Mmmm did that feel good for you too then Alisha?\"\n\n\"Oh fuck yeah,\" she said gripping the back of his head, \"but playtime's over so get to work,\" and pushed him down onto her dick. \"Oh yeah, there we go.\" She leaned her head back and pushed him up and down as he enthusiastically lapped around her pole.\n\nHer glans started hitting the entrance of his throat making him gag each time and for a moment she had an overwhelming urge to force it deep inside him. To bury herself to her balls in the tight confines of his throat and make him her cock-sleeve. Yes he would complain and fight against her at first but deep down she knew he'd love it. That sometimes he would want it hard and rough as long as it wasn't always like that. But not his first time. He needed to know she could be restrained and loving as well as dominant. For now she'd play nice and let him gently explore her.\n\nShe released the back of his head, stroking his hair and moaning appreciatively and was surprised when he increased his efforts to take her deeper. \"Oh yesssss, goood boy!\" she exclaimed as he finally forced her head into his throat and convulsed around her. \"Oh that's amazing.\" He held her there for a minute. Stroking her into his mouth before pulling off.\n\nTim coughed and gasped for breath before going back down on her again and again and again. He kept it up until he'd managed to swallow about six inches in total, just over half and no magic needed.\n\nHe pulled off again and looked her in the eyes. \"You're so fucking sexy. I fucking love you,\" and dived back down.\n\nHer heart fluttered at the words and she moaned loudly. She didn't believe him though. Sure he really liked her but at this point what he really loved was her thick hard cock and smoking hot body. Not that she minded. For now it was enough just to be desired. All the rest would follow.\n\nDespite her earlier restraint she now put two hands behind his head and started to pump herself into him. He responded by encircling her firm round ass with his hands, slipping his fingers inside her lacy panties to grip her plump rosy cheeks and pulling her into him. Driving her deeper still. Seven thick inches down. She knew he was at his limit. She also knew she was going to cum far too soon if he kept this up. Alisha's balls were also aching for attention along with something else he didn't know about yet. Time to move him lower while she recovered a little.\n\nShe pulled him off. \"Lick your way down and suck on my balls,\" she ordered huskily, \"you need to show them some love too you know.\"\n\n\"Anything for you Alisha.\" He half moaned as he kissed, nibbled and licked his way down her shaft. Now that! She thought smiling broadly, I do believe.\n\nHe buried his nose into her smooth sack, breathing deeply before licking and kissing them as she sat back and enjoyed his devotion. He slipped his hands underneath her thighs to pull her towards him and stretched his mouth wide to suck in one of her mighty plums. He knew he'd never fit them both in at once so he alternated, spreading the love as he gently suckled on them. As he did so his hand hit something unexpected. Something wet and slippery that released a familiar and welcoming scent.\n\nHolding her gaze he watched her smile down on him with a twinkle in her eye as his fingers explored the delicate folds hidden behind her testicles. He stopped sucking on her ball and let it pop free from his mouth as he brought his finger to his lips to taste her other sex for the first time.\n\n\"Wow you really do have everything a boy could ever want don't you Alisha. You really are the complete woman.\"\n\n\"Yes I am. So why don't you be a good little boy and introduce your tongue to my pussy. I'll tell you right now I'm going to be fucking you far more than you'll be fucking me but I'll make sure you two still get plenty of time to play together.\"\n\nShe twirled her fingers, moving the glasses, phones and general table detritus aside with her magic as she lay back, raising and spreading her legs. Tim moved her balls up and away before sticking his face deep into her dripping snatch as she chuckled. He knew his way around a woman well enough to know that simply sticking your nose into her bits was not the best way to please a lady but the urge was overwhelming.\n\nHe pulled back and ran his tongue right along her lightly haired slit until he found her clitoris. Licking and gently sucking as he delved into her with two probing twisting fingers while his other hand went to work on her cock.\n\nAlisha rubbed her breasts and played with her hard nipples as his nimble fingers found her G-spot and rubbed remorselessly. \"Oh yesss,\" Alisha moaned. She'd found herself a talented little boy toy alright and she resolved to use him every chance she got. \"Oh fuck yesssss.\" She vaginally orgasmed, squirting all over his face before pushing him away and sitting back up with lust burning in her eyes.",
        "\"Enough Pussy,\" she growled, \"more penis,\" and pushed him back down onto her cock.\n\nShe threw her head back and wildly rammed into him as he struggled to breath. He had to sustain himself with the few short moments she wasn't bulging in his throat before she cried out and plunged back into him.\n\n\"Oh shit, you're just so fucking good. I love to see my cock in your throat. Deep throating me like a proper little slut.\"\n\nShe increased the pace, the extra juices he'd taken in going down on her slicking his esophagus and allowing deeper access. Eight inches now, well over half and he was so damn eager to take it. That was enough for the moment she thought, he'll get better. Eventually he'll be able to take my full length. I'll make him get better.\n\nShe was close, so very, very close but she didn't want to cum like this. She had a better idea. A twisted kinky idea of the type that really got her off. But she had to act fast, or... oh fuck it, she thought, maybe I'll just cum down his throat. It feels too good to stop. Mmmm. No. Stop!\n\nUsing all her willpower she stopped him and released a magical burst of energy that pushed him back into his seat. Panting like a bitch in heat she wiped her juices from his face with a magical wave of her hand and looked at him with wild eyes.\n\n\"Look alive Tim,\" she said with an evil grin, \"because I'm about to restart time and unlike your invisible girlfriend here you're going to have to act naturally.\"\n\n\"What! Please don't you can't...\"\n\n\"Really! You think she could be the one?\" Carol exclaimed. \"I was only joking about the wedding, you know. I've never known you to fall this hard this soon before. In fact I've never seen you fall this hard. I mean... look you do seem made for each other and I'm really happy you've met someone but try to play it cool yeah. I don't want you to get hurt.\"\n\n\"Err, yeah, yeah, definitely I'll errr... I'll try to keep it together.\"\n\nHe was really struggling to keep it together though. In a fold of reality just beyond the sight of his friends Alisha was still sitting on the table stroking herself to orgasm and pointing her cock at his face. His friends were talking to him but it was just background noise. Just white static. What he could hear was Alisha talking through her gritted teeth as she trembled and struggled to hold back. What she was saying was very, very important to him right now.\n\n\"I'm so fucking close Tim,\" she groaned. \"It could come shooting out any second and when it does it's going everywhere. You've seen how big my balls are. I'm gonna fucking drench you Tim and my spunk 'will' be visible. They'll see it dripping off you. Mmmm, they'll see you licking it off those juicy cock sucking lips of yours like the wanton little whore we both know you are. Your only chance is to find a hiding place where you can swallow down all my yummy cummy goodness. Somewhere out of sight where you can clamp your lips around my spurting cock and slurp it all down like a good little slut.\"\n\nPanicking, Tim jumped to his feet. \"Sorry guys, I really gotta go for a piss right now.\"\n\n\"Uh-Uh-Uh\" With a flick of her hand two glowing bracelets clamped onto his wrists and pulled him back to his seat. \"No time,\" she growled, the cum starting to churn in her balls, \"think closer.\"\n\n\"Actually I don't need a pee but I need to check on something urgently\". He reached into his pocket, pulled out his phone, fumbled with it and dropped it on the floor. \"Oh crap I'll just pick that up straight away,\" and ducked under the table.\n\nAlisha waved her hand to create a veil of darkness around the edges of the table to shield them from view and got ready to stop time again if needed. She staggered forward and plunged her cock back between his lips. Cumming the instant she felt the warm wet softness of his mouth close around her.\n\n\"Oh yessss take it my love, swallow it all down. Take it all, Oh fuck Yeahhhhhhh.\" She kept on pumping it into him and he kept on swallowing as she drilled back into his throat to fill his stomach. \"Oh fuck, take it all baby take it allllll.\" Once more she laced her fingers behind his head and threw her own back as she screeched her orgasm to the heavens. \"Oh yes. Yes. Yess. Oh shit yesssssss, oh wow, oh wow.\"\n\nShe slowly panted and released her grip on her cumdrunk partner. Tim covered his mouth and tried not to belch up the copious amounts of cum from his stomach as he got up wiping his mouth.\n\n\"Did you get it?\" Harley asked.\n\nTim covered his mouth to stifle another belch, hoping the smell of cum he detected on his breath was just in his head. \"Err... get what mate?\"\n\n\"Your phone? Damn what is wrong with you today?\"\n\nTim held up a finger and ducked back down to retrieve his mobile before slumping down next to a disheveled but satisfied looking Alisha. She straightened her clothes and smoothed her hair as the red phantom image of her returned to the table to be greeted by the others. It sat on her lap rejoining her body as she once more became fully visible and audible to the group.\n\nShe put her arm around her boyfriend. \"Mmm, that was one of the most satisfying phone calls I've ever had. It was... just wonderful.\"\n\n\"I totally agree.\" Tim smiled back, \"best phone call ever.\"\n\nShe leaned in and kissed him. \"Oooo you've been eating something yummy haven't you, nice and salty, I can taste it on your lips.\" She turned back to the others before anyone could ask them any more questions about their weird behaviour. \"Well I've got something to celebrate. Let's get some shotttsss.\"\n\n**********\n\nTim woke up with a sore head.\n\n\"Yowza, what the hell was I drinking last night? And why the hell am I saying yowza, I've never used that word before.\"\n\nWhatever he had been drinking really did a number on him and had led to some wild and vivid dreams. They were some pretty awesome dreams actually. Hmm should I have a wank or get some more sleep? He pondered. A bit more rest. He couldn't ever remember his bed feeling this comfy before and he soon started drifting back to sleep, lulled by the gentle sounds of the ocean outside.\n\nHis eyes shot open. Ocean? Where the hell was he?\n\nStumbling into the kitchen he saw the woman from his dreams making him breakfast. Hmm, well she didn't seem to be a massively hung genie but she did have a beautiful smile and was clearly real so things were looking up.\n\n\"Welcome back to the land of the living sweetie. Oh do you have a hangover?\" He nodded and winced. \"Aww don't worry I can fix that for you,\" and with a flick of her wrist his mind and body were rehydrated and ready to go.\n\nHe saw her eyes glow as the spell was cast and looked down to see the tell tale bulge beneath the silks of her clothing. Ok. So she is the magical dickgirl from my dreams. Is that better? It sounds better but I might need to invest in a straight jacket and some rubber wallpaper.\n\nAlisha looked over at him with concern. It still looked like something was troubling him and she could guess what it was. \"You're still thinking you might be crazy right? Well there are three possibilities here. One. You're in an asylum waiting for the meds to kick in so you might as well enjoy it while you can. Two. You're crazy but not in an asylum so don't tell people you're dating a futa genie and enjoy it while you can. Three. I am real and it's the world that's crazy not you, so... you've guessed it... enjoy it while you can.\"\n\nTim shrugged. \"Yeah, that sounds like good advice. So what's for breakfast?\" He'd worry about where he was and how to get home later.\n\nAlisha smiled broadly. Another reason he was perfect for her was that his coping skills were simply through the roof. \"Here's your breakfast you're getting pancakes, syrup, orange juice and a sausage.\"\n\nHe looked at the plate and frowned. \"I can see the pancakes but where's my sausage.\"\n\nShe grinned and opened her silk kimono. \"Oh I've got your morning sausage right here baby.\"\n\n**********\n\nTim wasn't absolutely certain where Alisha's beach house was but he suspected it might not be somewhere you could ordinarily reach. It was the subtle little things that gave it away like the purple ocean, twin moons, shiny metallic convex sides and the lighting cord running through the middle. There was a portal just inside the hallway that led back to his room at home and emerged at the back of his closet. It was a bit like travelling to Narnia from the lion, the witch and the wardrobe but instead of a frozen hellscape ruled by an ice queen it was a tropical paradise ruled by a horny dickgirl.\n\nOver the next month Alisha calmed down, transitioning from a manic supernatural crazy stalker into a fun loving and sweet, if totally besotted, girlfriend.\n\nDespite their relatively short time together Tim found himself falling for her and falling hard. It probably helped that she was so into him. If someone hates you, you tend to hate them back. If someone loves you and will do anything for you... well... it makes it a lot easier when you don't have to be the first one to say I love you. And of course all the magically enhanced handjobs and blowjobs didn't exactly hurt the situation either.\n\nAlisha tried to stop popping into existence randomly in front of him and got used to arranging dates. Sometimes it would be mundane but fun. Bowling, dancing, meals out, drinking with friends or simply arranging a night in, cuddling up on the sofa together and watching a film.\n\nOthers would be truly spectacular, like yesterday when she said she was taking him to the seaside for a picnic. When they stepped through the portal they emerged inside a small bubble of atmosphere on the edge of the sea of tranquility. She had even made the grass grow within it. 'Come on,' she had said, unfolding a blanket, 'let's make ourselves comfy so we can watch the earthrise together.'\n\nWhen he questioned how they could see the earthrise when the moon was tidally locked she simply smiled and said 'you make the world move for me every day. The least I can do is make the moon move for you.'\n\nThey had spent that night lying beneath the stars and looking up at the world. They hadn't even done anything sexual, they just spent time as a couple, talking, laughing, kissing and enjoying their companionship before eventually falling asleep wrapped in each other's arms.\n\nThat had been the clincher for him. It wasn't what she could do for him. It was the effort and imagination she would put in. She truly loved him and he would be mad not to love her back. He vowed there and then to put everything he had into returning that effort and devotion.\n\nAlisha recognised the subtle changes in her man but there was one last thing to do, one more hurdle to pass. The next morning, just after she put the moon back into its correct rotation, Alisha nervously invited him to the genie realm to meet her parents.\n\nDespite her outward confidence it was clearly a big deal for her and he could tell she was desperate for their approval. Although he hated himself for it Tim actually cherished these rare moments when her confidence dipped and she exhibited self doubt. It made her seem more vulnerable and by default more human. It gave him a chance to be there for her for a change, to be the strong one for her to lean on for support. Needed rather than just wanted.\n\nWhen Friday night came round they held tightly to each other's hands for mutual comfort, took a deep breath and stepped through the portal and into the genie domain.\n\n**********\n\nTim found her mum was very intimidating at first. Partly because she was a raven haired demigod of unknown and potentially unlimited power but also because she was sitting butt naked on a throne and hung like a horse. He would like to say he didn't know where to look but his eyes certainly had an idea of where their focus should be and she smirked every time she caught him checking her out.\n\nSo... the mum was an intimidating demigod and the dad was... a baker. To be fair to him he did have the power to make a really nice cake.\n\nAlisha's mum introduced herself as Amira and her husband as Maximelius or Max.\n\nThey relaxed slowly as they dined together and Tim also came to realise how the genie's relationships worked. They were not attracted to power. Why would they be when they already possessed all the power they could ever need. They just wanted companionship, a like minded soul to build and share a life together. And part of that seemed to include being an incredibly open minded, kinky, borderline sexual deviant who was ready to get down and dirty at a moment's notice.\n\nThe wine and conversation flowed easily and Tim felt welcome. Towards the end of the evening he even managed to look into Amira's eyes rather than stare at her large perfect breasts.\n\n\"That meal was splendid as always my love,\" Amira thanked her husband before turning to Tim. \"He always prefers to cook for me rather than have me magic something up and I think it's so sweet.\" She reached out to Max and took his hand. \"He's the love of my life and I don't know what I'd do without him.\"\n\nAmira turned her full attention back to Max and they exchanged a long meaningful look before Max nodded at her. Genies were not capable of true telepathy but the couple had spent so many centuries together as husband and wife they didn't need psychic powers to know each other's minds. Something had clearly just been decided and agreed upon between them. Amira looked at her daughter.\n\n\"Alisha. Be a dear and help your father tidy up in the kitchen, it'll give you two some time to talk and catch up. I'll take Tim outside onto the veranda for a little while. Come and join us when you're done.\"\n\nThey could easily have used magic to clear the plates so this was either a family tradition designed for some daddy daughter time or engineered so he could have a private conversation with Amira. He suspected the latter. Genie society was clearly matriarchal in structure and the head of the household was about to complete her assessment of him.\n\nTim smiled despite his pounding heart and got up to follow Amira outside and into the pleasantly warm night air. He tried to avoid staring at her sculptured naked backside, failed badly and was caught once again which added to his nervousness. It was never good to be caught checking out another woman, especially if that woman was your girlfriend's mum and he cursed his own weakness.\n\nShe turned, leaning back against the wooden railing with her body bathed in moonlight and smiled warmly. \"I really like you Tim, my daughter has made a very good choice. We would both love to welcome you into the family when you are ready.\" He breathed out hard. \"And Alisha says you're adapting really well too and that's important. I know us genies can be a bit of a handful. Quite literally sometimes.\" She giggled softly and gripped and shook her long flaccid member as she looked upon him with affection.\n\nFucking hell how can she giggle so innocently while doing that, he thought. Damn she's sexy. Crap. I'm starting to fantasise about a threesome with my girlfriend and future mother inlaw and I haven't even diddled the daughter yet. Or... have her diddle me yet. Whatever. Damn I'm glad they can't read minds.\n\nBut genie's could read desires...\n\nAmira's smile broadened considerably. \"Like I said I 'really' like you Tim and I think you'll be a hit not just with me but with Alisha's sisters too.\" She looked him up and down, still holding onto her slowly waking womanhood. \"You don't mind me being naked do you? I find it so liberating. Max is a little old fashioned in some ways and thought I should be fully dressed for the occasion but I think I look good like this. Do you think I look good?\" She purred.\n\n\"Umm... Yes I think you look good, umm great even. Err... so does Alisha of course. She's beautiful, amazing, intense, fun...\" He shook his head wistfully and smiled. \"you know I really...\" He stopped himself. He hadn't even said it to Alisha yet.\n\n\"Really what? You kind of trailed off there. Please tell me.\"\n\nHe sighed. \"I really love her. And I'll... I'll always be faithful.\"\n\n\"I know. That's good and as it should be. However genie's do have different rules on relationships when it comes to immediate family. I love Max dearly but I still share him every now and again with my sisters. You know that rule for double teaming a girl with your friends? The one that says if your dicks don't touch it's not gay? Well... our rule is if the dicks don't touch it's not incest.\" She grinned broadly as she looked into his shocked bright red face. \"Aww you're so cute when you blush.\"\n\n\"You share your men!\"\n\n\"Not always. Everyone has free will here and it depends on what they want. But we live for millennia my dear and when you fully join us, so will you. It means we have to spice things up occasionally and sharing our boys every now and again is, well, just a bit of fun.\" She fixed him with a predatory stare and openly stroked herself. \"And I do like to have a little fun.\" She licked her lips.\n\nTim took a step back, fear showing in his eyes as a wolf-like grin spread across her face.\n\n\"Oh leave him alone mum, you're scaring the poor boy and I haven't even taken him yet.\"\n\n\"Argh!\" Tim jumped as he heard Alisha's voice right behind him. \"Alisha! I... I wasn't doing anything!\"\n\n\"I know babe I know.\" She glared at Amira. \"My mum can get a little... over excited sometimes.\"\n\n\"Mmhmm and I've got almost a foot of over excitement for you right here Tim.\" Amira winked and chuckled.\n\n\"Mum!\"\n\n\"I'm joking my dear, I'm joking.\" Amira smiled at her daughter and took her hands, turning serious. \"You have made a very good choice, my child, and you have my blessing.\" She turned to give Tim a smoldering look. \"And I very much look forward to seeing you claim him at the temple.\" She winked and turned back to Alisha. \"Did you prepare him as I suggested?\"\n\n\"Yes. The portal has been in place for well over a week now so he should be fully cleared out.\"\n\nThe two genies hugged warmly before Amira walked over to Tim and clutched him to her warm soft bosom, kissing his head before releasing him.\n\n\"Max wants to say goodbye too so make sure you see him before you go.\"\n\n\"I will mum I will.\"\n\nAs they entered the house Tim turned to her. There were so many questions from that conversation with Amira but one stood out. \"I know you've altered me somehow as, um, I'm not functioning... normally. What were you two just talking about? what exactly have you done to me?\"\n\n\"Oh the portal? Just a little trick we've learned over the eons. We put a little portal at the start of the descending colon and hey presto. No more poop. Drops out in some random part of the ocean. Yours comes out in the Sargasso Sea.\" She added with a carefree shrug as he stared open mouthed. \"What! It's a one way portal! Nothing is going to come in from the other way if that's what you're worried about!\"\n\n\"Yeah well that's fine then isn't it! Because obviously the only possible objection I would have to non-consensual bowel surgery would be if live fish started falling out of my butt hole!\"\n\n\"Ugh you are so ungrateful. Twelve minutes a day, three hundred and sixty five days a year, UK life expectancy is eighty one so... That's two hundred and forty six days of shitting that I have robbed you of.\" She raised her hand. \"With the click of my fingers I can give you back over eight months on the toilet. Do you want me to reverse it?\"\n\n\"Well... No I suppose not.\"\n\nShe smirked, \"Good cause from now on the only thing passing through that tight little hole of yours will be my Hard. Throbbing. Cock. So let's go say goodbye to my dad, get you home to my bed and then say goodbye to your backdoor virginity.\"\n\nAs they said their goodbyes to Max, Tim was still thinking about what she had done to him, trying to remember what happened in the lower bowels. Why the hell hadn't he paid more attention in biology? Why had he not foreseen that in years to come he would have a magical big cocked girlfriend who would alter his intestinal tract. How could he have been so short sighted?",
        "\"Salts and liquids.\" Tim suddenly blurted out. \"The colon absorbs water, salts and some nutrients.\"\n\n\"Ugh. Are you still on about that? It's only the last couple of feet you're losing so it's not that bad! Stop being such a big baby about it you'll just have to drink a bit more,\" she pouted.\n\nA sly smile split her face. \"Hmmm, although... maybe you're right. We might have to replenish your liquids somehow. And the portal only works in a downward direction so if we can find something to put up there we wouldn't have to worry about it leaking out. Well, not if that perfect little bottom of yours was properly plugged afterwards anyway. And whatever we did put in there would have to be body temperature to aid absorption. Maybe we could find something nice and soothing, some kind of cream that's thick with everything your cute little butt needs.\"\n\nShe folded her arms and put her finger and thumb on her chin as she considered the options. \"Hmmm I wonder... where could we find a warm thick creamy liquid that's nice and salty? And what kind of equipment could I use to get it deep inside you? Let's get you home and I'll see what I can find.\" Alisha's eyes twinkled as she took his hand and led him purposely back towards the portal and her bed.\n\nEverything was now in place and he was physically and emotionally ready. She would have gone against her mothers wishes if she'd had to but convention stated she needed approval and family bonds were sacrosanct for the genies. Tonight was the night. It was finally time to take her man.\n\n**********\n\nAs soon as they stepped through the gateway to her home she spun him around and kissed him hard on the lips before pushing him backwards. The golden flecks in her irises blazed as her eyes bore into his.\n\n\"Tell me Tim. Tell me what I want to hear.\"\n\nTim looked back into Alisha's bluey, green, golden orbs. Alisha was incredible. She was fun and beautiful, kind and caring, but with a devilish and mischievous streak that never failed to push his buttons and stretch his limits.\n\nIt was much more than that though. She knew him inside out and she didn't just accept him for who he was but loved him for it. He would never have to hide any part of himself from her and she held nothing back in return. Today when she took him to meet Amira he knew he wasn't going to meet his girlfriend's mum, he was going to meet his future mother in law. He had loved her for some time but had held off saying so because that meant committing himself to her for millennia. He knew a month wasn't long enough to make that kind of decision but it was a decision he had made nonetheless.\n\nNo matter what happened in the future Alisha was the one he was destined to be with.\n\nTim looked back into her eyes. \"I love you Alisha and I can't imagine living the rest of my life without you by my side.\"\n\n\"So you'll give yourself over to me completely? Body, mind and soul?\"\n\n\"Yes.\"\n\nHer eyes shone brightly in the dark. \"You'll be my companion and my concubine, my partner and my playmate, my husband and my harlot... my beloved and my bitch. For now and forever?\"\n\n\"Until the end of time itself.\"\n\n\"Mmmm I bet you say that to all the horny dickgirls\" She smiled. \"But god do I love hearing you say it.\"\n\nShe wrapped her arms around him and kissed him on the lips, their mouths gently parting as her tongue slipped inside. With the flick of her wrist the room was bathed with the light of a hundred candles. Alisha stroked his hair as her other hand moved slowly down his back to cup his soft virgin bottom. Smiling into the kiss she swirled her finger and Tim tensed and pressed forward into her as he felt a warm liquid entering him from behind.\n\n\"Just preparing you my love,\" Alisha cooed, breaking the kiss and gently pushing him backwards towards the center of the room.\n\nAlisha followed him, pulling her dress off over her head to reveal the same red bodice, stockings and suspenders she wore the first time they met. Her eyes glowed gold and red lights shone as she moved her hands like the conductor of an orchestra and his clothing danced to the tune. His shirt unbuttoned itself and flew from his body, his belt unbuckled and slid snakelike through the air across the room and his slacks and underwear dropped to pool at his feet.\n\nTim let out a yelp of surprise as his feet caught and he started falling backwards but with a flick of her wrists she summoned the sofa to rapidly slide over to him. He fell backwards over the armrest, legs pointing high into the air as his head bounced onto the cushions.\n\n\"Mmm, I like you in that position. Nice and open for me. Let's hold you there for a while.\"\n\nAlisha flicked her right and left hands in rapid succession as Tim's shoes, socks, slacks and underwear flew one by one into the air before falling to earth randomly around the room. With a final flick the now familiar red glowing ankle bracelets formed around him. This time golden chains snaked out from the Anklets to attach themselves to the ceiling above his head, pulling his legs higher and spreading him wide. The chains were unnecessary as the Anklets on their own would have held him in place but she found it visually appealing.\n\nAlisha grinned as she strode up to her prize. She tapped his sphincter several times with her hard throbbing cock, smiling as she looked down upon her eager boytoy. She bit her lip, his desperation for her was clearly evident in his wide lust filled eyes and his tight little butt was simply begging to be violated.\n\n\"I wouldn't normally take you like this but when you fell over and presented yourself so nicely to me... well... it just seemed too good a chance to turn down. And I have to admit the thought of me being fully in control for our first time is making me really hot and horny.\" She took his dick in her hand while rubbing her own up and down his crack, her excitement showing as she leaked copious amounts of pre-cum to slick it's journey. \"Can you feel the effect you're having on me my darling? Hmmm what to do now. What to do when I have you all tied up and ready for me. Ready to submit to my throbbing shecock.\"\n\nShe lined herself up with his hole and slowly started pushing. Tim groaned and clutched the sofa as the thick head slowly stretched and opened his ring. He shook as she spread him wider and wider. She felt so big. Surely any moment now it was going to break through and be sucked into him. He gritted his teeth, trembling as he waited for that final pop, for his hungry little hole to swallow her glans. She was almost there. Just a bit more and he would have it inside him. So close. She was so close and he needed it so badly. Almost there, almost, and...\n\n\"Noooooo.\" Tim whined in disappointment as she suddenly pulled away from him. He desperately tried to rock backwards onto her but the chains held him agonisingly short.\n\n\"Not yet sweetie.\" Alisha said, smiling down on him. Basking in the power she had over her lover, of denying him at the very last moment, enjoying his torment as he looked up at her with pleading longing eyes. \"You see... I'm just not sure you really want me.\"\n\n\"Please Alisha. Please I need you inside me. I need it more than anything. Please Alisha. Please take me.\"\n\nShe lined her cock backup with his hole and once again started to push into him.\n\n\"Oh yessss thank you Alisha. Oh fuck. Oh Yes. Oh fuck you're so big, Oh fuck that feels incredible. Oh fuck keep pushing. Oh shit it's almost inside me. Oh, oh, oh, oh, Oh noooooooo!\"\n\nOnce more she pulled back just as he was about to be breached and he glared daggers at her. She giggled softly while still stroking his engorged member as Tim moaned in frustration. In so many ways she had him right where she wanted him.\n\n\"Aww sorry baby but before I take you mummy needs a little taste.\"\n\nShe bent over and engulfed his cock. Taking it straight down her throat as she cupped and fondled his balls. Tim pushed his head back and gasped as his eyes rolled back into his skull and his whole body shook.\n\nAlisha smiled around the base of his dick knowing full well what she was doing to him. She had planned to simply take him to her bed, wrap her arms around him, kiss him deeply and make him hers. But when he stumbled backwards over the armrest bringing that cute little butt of his up in the air so exposed, so vulnerable and so inviting, well... she doubted there was a single genie who wouldn't have taken full advantage.\n\nShe moaned and hummed as she worked away on him and knew he was close to the edge, close to the point of no return. She pulled off and stroked him as she spoke to him softly.\n\n\"You need to hold back now Timmy because whatever you do I'm still going to be pummeling that tight little hole of yours and if you shoot too soon you won't enjoy it anything like as much. In fact you'll probably find it quite uncomfortable so whatever you do... Don't Cum!\"\n\nShe smiled and upped the pace of her hand as she gently sucked his balls into her mouth, leaving him struggling to hold back. Tim was consumed by indecision, trapped between begging her to stop and begging her to finish him off. 'Yessss' Alisha cried out in her head as she felt his sack contract in her mouth and she aimed his rapidly firing cock down onto his chest and face.\n\n\"Oh yesss, oh no! oh fuck, uggghhhhhhh, yesss, ohhhhh oh wow, oh fuck. Oh wow. That was incredible Alisha, oh shit. Oh wow.\" He sunk back down into the sofa as his body went limp.\n\n\"Well that is very disappointing Tim! Didn't I tell you not to cum?\" She said in a stern voice tinged with disapproval. If he had looked into her eyes instead of basking in post orgasmic bliss they would have told a different story. Her eyes burned with intense and barely contained joy as she gazed down on her cute little boy toy covered in his own cum. Fuck she was harder than ever. Almost time now. Almost time. Once again lined herself up with his hole and started to push and as she predicted he gasped at the sharpness of the intrusion.\n\n\"Ahhh, Aw shit, umm please, ah, please be gentle, I'm a little sensitive now.\"\n\n\"Well I did warn you didn't I! But oh no, you just had to cum didn't you!\" She shook her head in fake disappointment and tutted a few times. \"Welllll, I could revive you I suppose.\" She smiled and gently caressed his balls with the tips of her sparkling fingers. They glowed with a soft light that warmed him as the energy seeped into his nutsack. His eyes shot open as felt himself magically replenished and ready to go again.\n\nAlisha fingers continued to massage him as her other hand came round to grab and stoke him once more. She smiled, wondering how many times she could do this before his brain overloaded. Tim's sweet moans were music to her ears as he pushed his head back down into the sofa and gyrated into her hand.\n\n\"Can I trust you not to cum this time Tim? I can't keep doing this, you know. At some point I'll just have to power into you even if you are sore and sensitive.\" She increased her pace until he was once again writhing and on the brink.\n\n\"Please stop Alisha. I'm going to cum again, I'm going to cum. Ohhh!\"\n\nAlisha squeezed her hands around the base of his scrotum and the base of his cock as Tim cried out. Caught just before climax, twitching and shivering before retreating from the edge without cumming.\n\n\"Oh fuck, Oh fuck,\" he chanted as the feeling faded back slightly.\n\nAlisha smiled and moved her hands away leaving two golden bands encircling him. One gold ring around his cock and another around his balls, the rings were fused together where they met.\n\n\"What? What did you do?\"\n\n\"Well! Seeing as you can't seem to control yourself I've decided that I'll have to do it for you. The binding magic links your balls to mine so you'll only get your release when I get mine.\" She leant forward to tap his nose, \"so no more little cummies for you until I'm good and ready.\"\n\nShe grinned evilly. Those rings were designed to allow him to get to the verge of blowing his load but no further and he was already so close. She was going to fuck the hell out of him now and when she finally released he'd cum like a freight train. Her mind flashed back to something she had said in jest the first time they met. Hmmm, maybe I am a cruel and demanding mistress after all, she thought. Oh well, it is what it is, she thought with a little shrug. Now let's pop that cherry.\n\nShe reached down and scooped some of the cum from his chest. \"Aww and look at that... It's so nice of you to provide your own lube to help me break you in.\" She wiped it around her glans. \"Such a sweet boy.\"\n\nShe lined herself up against his sphincter and spread his cum around it before moving her dick to the center of his star. It was time to start pushing and they both knew that this time she wouldn't stop until she had fully conquered his ass. Alisha paused one last time and smiled warmly down upon Tim.\n\n\"Please say it again. Tell me what I long to hear.\"\n\n\"I love you Alisha. I'm yours and always will be. Please take me. Take me now.\"\n\nUsing one hand to hold herself in place and with the other gripping his hip she slowly applied the pressure. He moaned and shook as he slowly opened up before her. Fuck she was huge. He clamped his jaw shut and clung on for dear life. There was no way he would ask her to stop though. There was no way he would deny anything to this glorious woman. If being with her meant having to give up his ass whenever she wanted it then it was a price he was willing to pay. He gazed up into her angelic face and despite the discomfort willed her on. Oh fuck it, he thought, who am I kidding. I want this just as much as her.\n\n\"Oh yessss!\" Alisha cried as she finally slipped past his defences. She looked down on him with delight. \"You... You feel just as good as... as good as I've always imagined, baby.\" She panted before biting her lip. \"Let me know when you're ready my love and I'll sink it in deep.\"\n\nTim didn't make her wait long. \"Do it. Fill me with your cock!\"\n\n\"Are you sure?\" She asked with a concerned look. \"You haven't had long to adjust.\"\n\n\"It's been long enough and I can't wait anymore. Please Alisha. I want all you have to give.\"\n\nAlisha ran her hand down her shaft to coat it with a magical lube before grasping his other hip and sliding deeper into her man. Her head rocked back and she released a near constant, \"oooooooooooh,\" sound as she descended a short way into this heavenly entrance. He was so warm and so tight. She couldn't believe she had waited so long to take this ass but the fact that he was now so desperately into her made it all worthwhile.\n\nHer thick cock sank three inches into his velvety embrace before she slowly pulled back and repeated. Fucking him with not much more than the tip of her mighty shaft but adding a little more on each downward thrust. Four inches going into him now.\n\nTim breathed deeply through each cycle as Alisha impaled him. Each of her drives into him had been uncomfortable, causing him to wince and grit his teeth but it was changing into pleasure now. A feeling of complete fullness each time she paused before withdrawing.\n\nWow she feels so deep, he thought, I must have almost all of her inside me now, not long before I feel her balls striking my ass. Mmmm, that thought made his heart race and he opened his eyes to see how far away she was. Oh fuck! She's not even half way in! He didn't know if that was a good or bad thing but he was sure to find out soon.\n\n\"You ready for more baby,\" Alisha groaned, \"are you ready for me to take it up a notch?\" Tim nodded, reaching up with his hands to pull himself wider. \"Yeah that's it my beautiful little boy, open that tight little ass up for its new owner.\"\n\nShe increased the pace as more and more of her mighty tool plunged into him. Five inches, 'thwap' 'thwap' six inches, 'thwap' 'thwap' 'thwap' seven inches, \"thwap' 'thwap' 'thwap' 'thwap' eight inches, \"thwap' 'thwap' 'thwap' 'thwap' 'thwap'.\n\nTim was a mess now. This angle meant that each time she pumped into him her cock hit his prostate. Each time the pressure against it increased almost beyond his tolerance before her dick slipped past his P-spot and glided down into his depths. He also felt a different pressure rising elsewhere as his balls churned desperate for release, his need for an orgasm reached the tipping point becoming inevitable.\n\n\"I'm cumming,\" he wailed as he shuddered into a thunderous climax. \"Arggghhhhh, oh shit, oh fuck, oh, oh, Oh shit!\" Only he didn't. He dropped back, blue balled as the cycle started all over again. \"Oooooo, ooooooh, oooooooh shit, Oh fuuuuuuuckk.\"\n\nAlisha squeezed her hands into fists and her eyes rolled back into their sockets. Beneath her Tim's ass clenched around her length over and over again as the shockwaves of his near orgasms wracked his body and she struggled not to blow her load. It was too soon and she wasn't even fully inside him yet.\n\nNew plan... she panted in her mind. I need a new plan right now. OK. Part one. I'm going to push in all the way and I'm not stopping until I'm balls deep. Part two. A new position so I'm not crushing his prostate every single time.\n\nShe unclenched her fingers, gripped his hips and withdrew till only the tip remained before pulling him onto her.\n\n\"Uggggghhhhhhh!\" They cried out together as she slowly but relentlessly forced her entire length into him. \"Almost there baby.\" She said as the final few inches pressed inside. \"You almost have me. Oh Yess I'm all in baby. You've taken all of me.\"\n\nTim raised his hands, rubbing along her sides and gazing up at her as another almostgasm flowed through his body causing him to whimper and flutter his eyelids.\n\n\"Oh fuuuucccckkkk,\" Alisha screamed as his entire tunnel convulsed around her now fully submerged cock and massaged every inch of her. She looked down on him. His lips, she thought, I need his lips on mine.\n\nWith a wave of her hand the chains connecting his ankles to the ceiling shattered into a glowing cloud of debris that slowly faded out of existence. Another thrust of her hand and a red ribbon of energy shot towards Tim, wrapping and winding its way around his torso before pulling him up into Alisha's embrace. She locked her lips onto him and they kissed passionately before she leant back, gripped his sides and bounced him on her cock, grinding herself into him each time she bottomed out.\n\nCushioned by her magic she sank to her knees and laid him down on the floor.\n\n\"Turn around...\" She panted. \"Hands and knees... I need to be back in your arse right now...\" He looked up at her too dazed from his endless sex high to comprehend or comply. \"Ugh! I gave you an order bitch!\"\n\nWith a flick of her wrist he was spun around onto his hands and knees and glowing bracelets clamped around his wrists. His arms were pulled back as the bracelets and anklets locked together like powerful magnets leaving his ass pointing upwards and his face rushing towards the floor. He shut his eyes just before impact and bounced into a soft pillow that she had conjured into existence at the last moment. Alisha smiled behind him. She didn't want her one true love injured after all, just hogtied, exposed and vulnerable.\n\nMmmm so, so vulnerable. She shuddered with excitement seeing him like this. One hand drifted over his back, caressing him before it swept on to cup and squeeze his cute little butt. Her left hand stroked her long hard cock. Her eyes glinted and she slapped his ass eliciting an exquisite yelp from her bound and naked boy-toy.\n\nShe giggled softly and bent down. \"Awww sorry baby did that hurt your cute little tushy. Let mommy kiss it better.\" She tenderly kissed and licked his slightly reddened cheek before moving up to crouch above him, feet planted either side as she lined herself up once more.\n\n\"Are you ready for me baby?\" She cooed.\n\n\"Always.\"\n\n\"Mmmm that's just what I want to hear.\"",
        "She sunk down to fully immerse herself in his tight welcoming ass and held herself there as she moaned loudly, revelling in her conquest. \"Oh yesss,\" she cried as she ran her hands along his back. From this angle she wouldn't hit his prostate so often and he wouldn't bare down on her so hard. It would be less intense but she could go harder and longer and that was what she wanted. She began slowly, all the way out, all the way in. Long dicking her boyfriend as he whimpered and moaned delightfully under her.\n\n\"Oh that feels sooo good Alisha. Keep going. I love the feel of your cock deep inside meeee. Oh wow that's the spot. Oh fuck it feels amazing.\"\n\n\"Yeah... You like that baby? You like my big dick in your ass? Do you like it when I take control like this? Yeah... I know you do... and you're just going to be a good little boy and take it.\" She increased the tempo. \"You know I'm not always going to be doing all the work for you like this.\" She grunted. \"Sometimes you're going to have to ride me, bounce up and down on me while screaming my name like a proper little slut. And sometimes I'll need you to pound my tight little pussy instead. Make me your bitch for a change. Your whore. Can you do that?\"\n\n\"Yessss. I can fuck you back. I'll fuck you hard.\"\n\n\"Mmmm goood.\" She grabbed his hair and pulled him back so she could look into his eyes. \"Because no one wants a lazy fuck Tim.\" She licked his face and kissed him hard before pushing him back down. She gave him a quick sharp spank and was delighted to hear a little girly yelp before she took his hips in her hands and powered on.\n\n\"Of course I'm mainly going to be fucking you Timmy, giving you my cock, pounding this sweet little ass. Cause you know I'm mainly a top right? That I'm a fucking alpha and you're my little cocksleeve.\" She increased her pace again. \"When I'm not fucking you... You'll be my partner, my equal... my friend, my love... But in my bed... You'll be my bitch... And I'm gonna fuck the hell out of you!\n\nShe felt him spasm underneath her as all the muscles in his ass clamped down on her shaft at once, pushing her to the edge. \"Ooooh yeah you wanna cum don't you baby but you can't cum until I do.\" She panted. \"I'm your lover, your mistress, your queen, your future wife and I always cum first. And your job in our bedroom is to service this mighty fucking cock until I do.\"\n\nShe thrust harder as she approached the point of no return, slamming into him over and over again, her breathing becoming ragged.\n\n\"I'm gonna cum soon baby,\" she moaned. \"Are you ready for it?\" She panted. \"Are you ready to take my first load?\"\n\n\"Yesss cum in my ass baby, I need you to fill me up and make me yours!\"\n\n\"Here it comes my love. I'm going to breed you. Take my cum. Take my fucking loooaadddd. Arrrrggggghhhhhh Yessssssss.\"\n\nAs Alisha's cum flooded into him the golden rings fell from Tim's cock and balls to release a repressed torrent that almost rivalled her own.\n\n\"Oooooh yessss that's it baby... Clench your ass around my cock... Oh yeah, just like that... Oh yeeesssss milk me dry... Oh fuck!\"\n\nShe held herself fully hilted within him, her huge balls contracting and pumping her potent seed deep into her man for several more seconds before she cried out and started to move again. Once more she fucked him. Long, hard thrusts that still released a sizable but rapidly diminishing load each time she bottomed out. Her spent cum began spurting and dribbling out of his well worked hole to drip down over his still twitching sack.\n\nShe slowed and stopped as Tim's bracelets and anklets faded away and she returned control of his body to him. Pulling him up to his knees she gently turned his head towards hers and they exchanged a soft, deep and loving kiss.\n\nAfter a few minutes she gently pushed him back down and eased out to release a small river of cum. Her mighty tool twitched one final time at the sight of his well creamed ass. She bit her lip and gently caressed his soft warm cheek. She didn't think she had ever seen such a beautiful sight in her life.\n\nTim rolled over onto his back and Alisha lay down next to him, rested her head on his chest and sighed contentedly. He wrapped his arms around her and pulled her in, running his fingers through her hair.\n\n\"That was amazing,\" he said softly as she raised her head to plant a single chaste kiss on his lips. \"I'd prefer to be in a nice soft bed with you instead of on the floor but then we'd have to move and I don't think I can.\"\n\nAlisha simply smiled and raised her hand as her eyes blazed gold. The floor directly beneath them rippled, rose and softened to form a queen sized bed below them. Silk sheets flowed up from the floor, gliding over them to cover and enwrap the two lovers.\n\n\"Thanks babe, I can always rely on you.\"\n\n\"Anything for the man I love,\" she whispered happily, running her hand down his chest as they drifted into sleep.\n\n**********\n\nTim woke the next morning cuddling Alisha's back, breathing her scent as he nuzzled into her hair, his hand resting on her full warm breast. It seemed she had ditched the lingerie during the night to be more comfortable and they had rolled over and shifted during their sleep. He squeezed her gently, running his fingers over her now stiffening nipple and kissed her neck.\n\n\"Mmmm good morning my love,\" she said, stretching out before relaxing back into him and grinding her plush bottom into him. \"Mmmm I feel something long and hard. Is that for me sweetie?\" She turned her head to kiss him softly before settling back down in his arms and enjoying the feel of his hands on her body. She sighed. Before they got too carried there were still some outstanding things she needed to discuss with him.\n\n\"So... We didn't really talk last night did we. We did...\" She ground her ass against him and giggled sweetly, \"...other things.\" She breathed deeply before letting it flow out and he detected a slight nervousness entering her voice when she next spoke. \"So what did you think of my family? Of the genie society you'll be joining?\"\n\n\"Yeah your dad was really nice, a great cook, I really liked him. And your mum was... she was interesting... I really liked your mum too. I think...\"\n\n\"Well you certainly seemed interested in her tits. You couldn't keep your eyes off them during dinner.\"\n\n\"Ummm,\" mumbled Tim turning red, without seeing her face it was hard to know if she was seriously pissed at him or not. What did he say here? \"Well I tried not to but she was nude so it wasn't really my fault. I mean... They were just there...\"\n\nAlisha giggled. \"Don't worry, I know. She's very open and... Ewww this is hard to say about your own mum but... yeah she is pretty hot. She definitely likes you though which is quite a relief. Despite the whole soul reading thing it's not impossible to get it wrong. The idea is that we don't seek our partners until we're thirty so we have the maturity to wait and do it properly. But sending a desperately horny thirty year old futa virgin into a world full of cute little boy butts can lead to its own issues. Every now and again one of us gets carried away and grabs Mr Right Now rather than Mr Right.\"\n\n\"Sooo what was all that about sharing your men. About sharing with your sisters. I take it that was just a wind up?\"\n\n\"Ha. No, she was serious. You're not allowed to join in unless you have already met your soulmate. That way there's no chance anyone will try to steal someone elses man or get emotionally attached and it remains just a bit of fun. And it's a genies only affair so if you did want to join in one day you wouldn't have to do my dad. Although if you really are interested in a six hundred year old baker I could put a word in for you,\" she laughed.\n\n\"Gee thanks. What would I do without you! So will you join in now that you're eligible?\"\n\n\"Nah, I don't think I'll join in with any of the other boys, you have the only butt I'm interested in. Although... one of my sisters likes women and bonded with a gorgeous Brazilian lady called Isadora. That could be interesting. I might even let you watch.\" She giggled. \"And what about you? I know my mum would like a crack at you.\"\n\n\"Errr... Well... You know it didn't even cross my mind. You're the only girl for me.\" Even he detected a slight lack of conviction in his voice.\n\n\"Ha bullshit. I know the kind of thing that goes on in that pervy little head of yours, I know you thought about it. It's ok, you can if you want to just be honest with me. I'll even join in if you want. It'd be fun. A little mummy daughter spit roast. You can be our little piggy in the middle and we'll see how much we can make you squeal.\" A mischievous grin split her face.\n\nHoly Shit! Was this a trap? A test? A joke? Did she want him to say yes or no here? And what did he want? He had always been a faithful one woman man, loyal, monogamous and he certainly wasn't a cheater. Although if he was given permission and no one was getting hurt was it really cheating? He'd never considered anything like it before but genies worked differently and like she'd said, her mum was insanely hot. He wondered what her sisters looked like. Damn he was glad she was facing the other way so she couldn't see him drooling. Oh crap! She might not see that but I'm definitely harder than I was and I'm grinding into her again at the thought of being double teamed. Shit! Quick change the subject.\n\n\"So umm... do you have any brothers?\"\n\n\"Why?\" Alisha said, rolling over to face him. \"Do you want to get a little man on man action too?\" He scowled at her and she laughed. \"I only have sisters as genies only have girls, well, futas. In the next dimension over there are the djinn who are all males and only have boys. We generally prefer men and they generally prefer women but like us they can have babies with either.\"\n\n\"Really? So how can a male djinn make a baby with another man?\"\n\n\"Magic sweetie. Just like I'll knock you up some day. Being pregnant interferes with our magic so we make our partners carry the babies.\"\n\nHis eyes went wide. \"Wait! What! How?\"\n\n\"Easy peasy lemon squeezy. I simply turn a couple of your little swimmers into eggs and my potent sperm wiggle their way from your butt to your balls and we're in business. They swim and phase their way straight through the soft tissue. Once they're in there I'll seal you off with a couple of golden rings much like I did earlier because, well you know, I wouldn't want you taking yourself in hand and jerking out my babies.\"\n\nAlisha fought to keep a straight face, unsure how long she could hold out.\n\n\"Uh-huh. Well that all sounds fine and reasonable to me. So they just grow in my scrotum do they? A set of twins and what... from five months in I suppose I just carry my bollocks around in a wheelbarrow.\"\n\n\"Yep. And I believe in a natural birth too,\" she laughed, \"No painkillers, just whip off the nut restraints and sploosh. Straight out through your vas-deferens.\" Alisha rolled about laughing before she managed to bring herself back under control. \"Ah. I should have told you I'd give you an artificial womb, I could have had you going for waaay longer.\" She giggled.\n\n\"Well it wouldn't have been the craziest thing that I've come to believe in the last month.\"\n\n\"You know,\" she chuckled, \"with my magic I could really get you pregnant, but don't worry, I'll be the one carrying our daughters.\"\n\n\"Good. Because when we have our kids I want to be their daddy, not their mummy.\" Oh crap, have I just agreed to have kids with her! We're not even... even what? What the hell is it that genies do? \"Sooo this ceremony your mum was talking about? What is it anyway?\"\n\n\"Wellll, for a time we'll basically have two lives won't we. One in the mortal realm and another in the genie dimension. So in your world we'll have a traditional human ceremony which in our case will mean I end up wearing one of these.\" She twisted her fingers and like a magician conjuring a coin a simple elegant gold ring appeared in her hand. She twisted the wedding band around in her fingers, smiling as it glinted in the light. \"And I want the full church wedding, a flowing white dress, all our family and friends to attend, a big cake, the flowers, everything. It'll be beautiful.\"\n\n\"Uh huh. And your mum? Is she going to be wearing anything or will she be standing there in all her glory. Tits, cock and balls all out on display? Because I think that kind of thing could distract the vicar.\"\n\n\"She'll wear clothes. For one thing I want your eyes on me not glued to my mum's tits.\" She shot him a quick glare. \"And then there is the genie ceremony and you'll wear this.\" Alisha's eyes flashed and she drew a circle in the air with her hands that formed into a golden collar that dropped down on a chain held tightly in her hand. A wolfish grin split her face. \"And nothing else.\"\n\n\"Ha, yeah right!\" He looked into her eyes and his face started to drop, she had a tell when she was kidding him and it wasn't showing. \"Oh crap, you're serious! Naked and chained!\"\n\n\"Oh yes indeed. Naked and chained! It's a throwback to an earlier time when we used to hunt and enslave men rather than finding a willing partner. There are actually some genie tribes that still stick to the old ways but most of us are a little more progressive and modern these days. Although...\" She leaned in and half whispered. \"I hate to say it but doesn't the thought of me dragging you away against your will and forcing you to become my eternal sex slave give you just the tiniest little bit of a tingle? It does to me.\" She said, giving him a conspiratorial wink.\n\nThe thought did indeed give him a bit of a tingle. Much more than he was willing to admit in fact. So he didn't. Besides, he had more pressing concerns.\n\n\"Sooo... we go to the genie temple, I strip down to my birthday suit, we say some vowels, I put my clothes back on and we go to a reception for a nice party?\"\n\n\"Not... quite... There is a main portal on the edge of town which we come through and then I have to lead you chained and naked through the streets. Once we get to the temple, in front of the priestesses and all of my family and friends, I claim you as my man and... well... how can I put this delicately... fuck the shit out of you! I mean not literally of course. Yours is floating in the Sargasso Sea.\"\n\nHe stared open-mouthed.\n\n\"I... I'm assuming just my family and friends but you're welcome to invite your mum and sister along if you want.\" She added tentatively. \"Maybe Helen and Carol too or some of the girls from your work?\"\n\nHe continued to stare.\n\n\"Okay... just my family and friends then.\"\n\n\"Nude. Chained. And butt fucked. And in front of all your family and friends!\"\n\n\"Well not all my family, it's only females that can attend and ummm... Oooo I've just remembered! It's our one month anniversary tomorrow so what do you want to do? Nice meal out? Catch a movie? Or maybe I could make us a romantic dinner at home, just the two of us.\" She looked over in the forlorn hope that she had somehow succeeded in changing the subject.\n\nTim continued his long hard stare.\n\nSighing Alisha wrapped her arms around him and planted a single kiss on his lips. \"I'm sorry. I know I'm asking a lot of you but this is our tradition, our custom, our way of doing things. Didn't a wedding ring once symbolise you taking ownership and possession of a woman? Didn't it once include the girl vowing to love, honor and obey? So yes, officially I'll 'own you' but in reality we'll own each other.\"\n\n\"Yeah I suppose so.\" He was starting to wonder what would be worse. If he got a stiffy while being dragged behind her to the temple or if his poor little fella got stage fright and did a disappearing act. Flaccid but full length, he thought, that would probably be the holy grail of penises for a full frontal walk to the altar. Shit! I'm already starting to accept this is going to happen.\n\nShe smiled and rubbed his shoulder affectionately as they began to relax again and the tension faded somewhat.\n\n\"You know. I felt a nice hard dick earlier and you haven't fucked my pussy yet. You know I'm still a virgin right? I may have made you my man but I still need you to make me a woman, to make me your woman.\" Alisha cooed seductively while reaching down to take his now hibernating cock in her hand. \"Is he still awake? Does he still want to come out to play? Oooo he wasn't awake but he's starting to get interested now.\" She massaged Tim as he quickly grew to his full length. \"Maybe I'll just pop down and give him a little kiss.\"\n\nShe climbed on top of him and locked her lips on his, slipping her tongue into his mouth before pulling back and beaming down at him. \"Well? Shall I pay your little guy a visit?\"\n\n\"Uh-huh, less talky talky more sucky sucky.\"\n\nHe put his hands on her shoulders and gently pushed her down. Alisha rolled her eyes playfully and leant down to kiss his shoulder before slowly working her way down his body. She stopped briefly to suck and tweak his nipples and was delighted to elicit a cute little series of moans from her man. She smiled and gave a little biting nibble and a slightly more savage twist causing him to yelp before she giggled and moved on. She continued kissing down along his stomach before giving a solitary kiss to the base of his cock.\n\n\"Well I did say I'd pop down and give him a little kiss and I have I so I guess I'm done down here now,\" she teased as he let out a cute little frustrated moan. She rolled her eyes. \"Fine,\" she added with fake exasperation in her voice, \"I'll give you a bit more loving, but I'll want something back later in return.\"\n\nShe kissed, licked and nibbled her way up his shaft before opening her mouth wide and locking his gaze. She smiled, motioned as if she was going to wrap her lips around him and then pulled back without touching him. Doing it several times before gently blowing across his glans as he moaned in frustration. She grinned evilly before finally licking across his urethra and around the head.\n\n\"Oooh yessss,\" Tim moaned as she finally rewarded him with her full attention, slipping him between her lips and slowly sinking to the base, taking him deep in her throat. Alisha purred around him, sending vibrations running up and down his length. \"Oh fuck that's incredible,\" he groaned as she began a slow ascent till just the head was in her mouth before once again sweeping her tongue around his glans.\n\n\"Mmmm,\" Alisha moaned and winked at him as she tasted his pre-cum. The taste ignited a spark deep within her, the taste of his arousal inflaming hers and she dived straight back down, eager for more, eager to get him off. She still wanted him inside her but she didn't have to worry about that right now. As she had already demonstrated she could revive him at will so she could take all she wanted, whenever she wanted. And right now she wanted his thick cream gliding down her throat.\n\nShe dove deeply and powerfully, right to the base to bring her lips to his balls before withdrawing slowly and sucking hard all the way to the top. She let him pop free before licking his slit and repeating over and over again. Before long she had his toes twitching and curling, his hands running through her hair and he started giving her desperate warnings of his impending release.\n\n\"You... you need to slow down Alisha. I'm not gonna last much longer.\"\n\nShe just smiled around him and upped the tempo to a furious pace. He seemed to have forgotten how easily she could get him going again.\n\n\"No Alisha, slow down. I... I don't want to finish yet, I... Ughhh Alisha I... I... Oh fuccckkkk here it comes... Arrrggggghhhhh.\"\n\nShe greedily slurped down his essence but maintained her frantic pace as he squirmed and twisted. His still hard dick now massively oversensitive.\n\n\"Arrgghhh please stop now, I'm too sensitive down there. You need to release me now I've cum.\"",
        "Grinning around him, she brought her hand to his testes and slowly massaged them, recharging them with her magic until her near painful sucking returned to pleasure. Not once did she slow down and he groaned as she brought him back to the peak and once more he emptied into her willing mouth with a shuddering orgasm.\n\n\"Oh fuck Alisha, Oh fuck this is too much, Oh fuck, Oh wow.\"\n\nAgain her fingers went to work on his balls as her mouth continued it's assault on his cock, refusing to slow down. Third time's the charm, she thought to herself smiling around his dick, come on baby, give me some more of that yummy cum, feed your woman, give me more of your seed.\n\n\"Oh fuck not again. Oh fuck yessss. Oh shit you're amazing. I'm gonna cum agaaaiiiinnnn. Ugggghhhhhh!\"\n\nThis time she finally pulled off and smiled. Fixing him with a smouldering look before quickly darting back down to lick up a small dribble of cum that was running along the underside of his cock. That naughty little trickle of cum was trying to escape her. Trying to evade her after all that work she did to draw it out of him. She couldn't have that. She wanted it all for herself.\n\nReveling in the power she held over her man she gently bit down on his helmet, just enough for him to feel her and bring his full attention back to his woman. Meanwhile her magic fingers went back to work, reviving his nuts. Her smoldering look slowly turned into a glare as she recalled him telling her to stop. How dare he tell her to stop. How dare he tell her when she could or couldn't drain him.\n\n\"You can't say no to me anymore Tim.\" Alisha snarled. \"You gave yourself to me completely, remember? Mind, body and soul. You belong to me now and I decide when you've had enough!\" She gripped him firmly and gave his balls a little proprietary squeeze. \"I own your cock and balls now Tim and I'm not done using them yet!\"\n\nShe leapt up to crouch above her prone man, grabbing his dick to line it up with her dripping and horny hole. She rubbed it a few times along her slit before moving the head to her entrance and sliding down onto him. \"Oh yessss,\" she cried out, throwing her head back and gyrating on him, making sure every part of her sex felt his thick meat within her. She started to bounce, slowly at first but soon picking up the pace, grabbing his wrists she bent down and kissed him hard on the lips, her own cock rubbing up and down on his stomach.\n\nAlisha's large full breasts, hung like ripe fruit just tantalisingly out of his reach. It was something he was determined to remedy. He leaned up and pulled her down. Taking one of her nubs in his mouth and suckling on her teat, grazing it lightly with his teeth and returning to tickle it with his tongue. He gently gripped her other breast, kneading and caressing her soft supple flesh as his other hand administered a light spank to her bottom. Just enough to elicit a little yelp of surprise before caressing and squeezing her.\n\nAlisha pushed him down and kissed him hard and heavy on the lips before wrapping her arms around him. She rolled onto her back, pulling him round and on top of her.\n\n\"It feels amazing to have you inside me. Fuck me Tim. Fuck me hard.\"\n\nTim reached down to cup and fondle her breasts, tweaking and brushing her nipples as she moaned and wrapped her legs around him. His cock slid into her as the sides of her pussy gripped him tightly. The warm walls rippled along his length, pulling desperately at him whenever he tried to withdraw, determined to keep him inside. Tim could almost sense the joy emanating from her warm sex each and everytime he reversed course and plunged back into her. Forcing himself balls deep as she moaned his name and ran her hands down his back.\n\nShe gazed up at him as he continued to have his way with her, pinning her down and ravishing her, spreading her legs wide and pounding into her as his woman.\n\n\"Fuck Tim. That feels so good,\" she moaned.\n\nAs she rolled her hips her hard dick swung from side to side reminding them both of its existence. Alisha's eyes locked on his, dropped to her swollen member and then returned to fix him with a determined look. Realising she wanted to bring her big girl into play he brought up his hands to hold and stroke her but Alisha had other ideas.\n\nIt had felt wonderful to surrender herself to him but now it was time for her to take back control. It was time to remind him what sex with a magical futa genie was all about.\n\n\"Uh-uh-uh let me handle that. You just take hold of my hips and keep going strong.\"\n\nShe moved her hand high between them and the familiar red glowing energy formed in the palm of her hand. He watched in fascination as a swirling vortex formed in the gap between her fingers and her thumb. The light then started rising, extending upwards to form what looked like a transparent fleshlight but one that moved and flexed as he did.\n\n\"Just a little portal magic my love. One end is fixed here.\" She moved her arm up and down with the portal remaining between the digits of her right hand. \"And the other is fixed somewhere just behind you. I wonder if you can guess where the other end is,\" she asked with a mischievous grin.\n\nShe lowered her hand to the tip of her cock and the head disappeared into the spinning disk. As her real penis vanished into the portal to emerge elsewhere a red phantom illusionary image of the glans appeared to start pushing against the entrance of the fleshlight. At the very moment it touched the fleshlight he felt her pressing against his own sphincter.\n\nHer grin got wider as she saw the realisation in his eyes. Alisha tapped her mighty cock against his hole a few more times before withdrawing back through the portal and rubbing her left forefinger around her glans. A now familiar flash of magic surged through her fingertip causing a huge flow of pre-cum to bubble up and run down the sides of her cock. She hummed happily as she spread it around her girth and brought her now slippery member back to within striking range.\n\n\"This is... now how can I put it... it's like a 3D cat scan of your sweet tight little tunnel of love my darling,\" she cooed. \"So you can see everything I do to you. Are you looking forward to seeing what my dick looks like when it's buried deep in that cute little butt of yours? What it will look like when I flood you with my cum? I know I am.\"\n\nAlisha's eyes flashed with gold, the lust and desire clear on her face as she slid her cock back through the portal and pressed it against him. As the pressure increased Tim gritted his teeth. He watched as the phantom cock slowly teased the fleshlight open while at the same time he felt her real cock stretching him wide.\n\n\"Ow shit, oh fuck you feel incredible, oh shit, oh wow. Ooooooh uggghhhh shiiiiiiiitt,\" Tim moaned as the thick head of her cock breached and forced its way inside both him and the fleshlight. \"Oh fuck!\" He panted. She lowered her hand while raising her hips to push more and more of herself through the twin openings.\n\n\"Are you enjoying the show my love?\" She asked her trembling man as she slowly fed all her long hard inches into him. Eventually she bottomed out and bit her lower lip. \"Mmmm, look at that baby, now you can literally see me buried deep in your tight little ass.\" She emphasised her point by pulling out a couple of inches before slamming back into him. He both felt and saw her cock slam deep inside and groaned, rolling his eyes.\n\nShe began moving back and forth, pumping herself into him and he could see and feel every ridge of her cock as it slipped and slid through his ring. Soon enough he was moaning and holding himself still as she stroked herself into him.\n\n\"Now, now, honey what did I say earlier about not being a lazy fuck? You're still deep in my pussy and you're not doing your job. This is supposed to be a mutual screwing my dear.\" She spun the fingers of her left hand and a belt of red fiery light spread around his waist, tethered to a leash in her hand that she pulled back and forth to get him moving again.\n\n\"Yes that's it Tim. Fuck my pussy while I fuck your arse!\" She growled and threw her head back against the mattress. Alisha wrapped her legs behind him with her feet on his bottom, using them to help to pull and drive him deeper into her.\n\nShe dropped the slowly dissolving leash as he warmed to the task at hand, pounding into her as they settled into a steady rhythm. He started pulling out of her as she pushed up, through the portal and into him. When he pushed she lowered herself onto his cock to force it home and withdrew from his warm interior.\n\nTim was in sensory overload. Watching and feeling her entering him while both riding and pounding the beautiful futa. He struggled to hold on but when she looked into his eyes and smiled lovingly he knew the battle was lost. Nothing could stop him from cumming now.\n\n\"Oh Alisha, I love you, I love you so much, I love what you're doing to me. You're amazing, I... oh fuck I'm gonna cum againnnn.\"\n\n\"No! Not this time sweetie,\" and he felt the cold metal clamping around the base of his cock and balls. \"You've cum enough for now. This time you'll have to be a good little boy and wait for me.\"\n\n\"What? Noooo! Please just let me cum!\" Tim whined in disappointment and frustration at his stolen orgasm. He was still shuddering almost two minute later after being cruelly wrenched back from the edge of his own personal nirvana.\n\nAlisha smiled sweetly. Yes it did seem a little mean to deny him but she didn't want to have to stop and refresh him again. Not when she was so close herself. Not when she was sooo enjoying the blissful twin sensations of both fucking and being fucked. She had set the golden rings to keep him further from the brink than last time. Allowing him to feel plenty of pleasure but not the knee trembling intensity she had bound him in before.\n\nShe pushed him with her feet to get him moving inside her once again and moaned as she felt him take the hint and start rutting back. Yessss that's it, she thought, mmm he feels so good inside me while I'm fucking him. She needed a little more though, she needed full control.\n\nShe rolled him over onto his back and rode him cowgirl, looking down upon him with a mixture of lust, love and affection. Tim held onto her hips pushing upwards into her with long deep strokes, moaning her name. Yes. This is it, she thought, this is what I neeeed. Alisha threw her head back, her hair spiraling through the air and ground herself onto him as she approached her climax.\n\n\"Oh Yessss. Yesss. I'm almost there Tim, I'm gonna cum soon baby and you're going to cum with me.\" She pumped furiously upwards through her hand and into his ass. \"Are you ready for me baby,\" she groaned, \"cause I'm ready for you.\"\n\nThe golden rings holding him began to fade and a sudden wave of ecstasy washed through him. It was more intense than anything he had ever felt before and his whole body shook. But the fading rings still held some power, still held him back. He still couldn't cum. Not until she did. Not until his lover. His goddess.\n\n\"Oh yes I'm ready baby,\" she screamed. \"Are you ready to fill my aching pussy as I flood your tight little ass. I'm cumming baby, I'm cumming. Oh Yesssssssss.\"\n\nShe slammed herself down onto his pelvis and screeched to the heavens as the restraints fractured and Tim pumped his essence deep inside her. Alisha's own hand was at the base of her mighty tool as her cock lodged itself into his innermost depths and blasted an endless wave of cum into her man.\n\n\"Oh shit!\" Tim cried as he felt himself finally let go, his eyelids fluttering.\n\nThe intensity and euphoria almost overwhelmed him as he came. He felt every pulse of both their cocks as they filled each other. Eventually his flow eased but she was still going strong. He watched wide eyed and could literally see the cum pumping and flowing up into his bowels as she started moving again. Rolling her hips on top of him and using long deep strokes on her own cock. Making sure every last ounce of her seed was driven out of her and into her lover. Making sure he took it all.\n\n\"Oh yes, oh wow, oh wow,\" she panted as she slowed, finally spent. \"Oh wow baby.\" She bit her lower lip. \"You're incredible.\" She leant forward and he rose to meet her as their lips met to share a long, deep, lingering kiss.\n\nTim's head fell back to the mattress as Alisha sat smiling on his torso recovering.\n\n\"Oh and you'll be needing this!\" Alisha smirked as she waved her left hand and a black, smooth, rounded object with a flared base formed in her palm. She lowered it to his lips. \"Kiss it!\"\n\n\"Is that a butt plug?\"\n\n\"Honey, I didn't ask you what it was did I?\" She said sweetly before her voice turned stern and commanding. \"I told you to kiss it. So kiss it!\" He planted a small kiss on the end and the smirk returned. \"Good boy.\" she purred.\n\nShe raised her right hand and he watched as her cock was pulled slowly from the tight and loving embrace of his ass. His hole gripped onto her, seemingly desperate to keep her inside him until the head finally popped free causing them both to moan. Alisha winked and quickly slid the plug home as Tim gasped.\n\n\"Well you seemed so worried yesterday about ensuring you got your daily dose of salts that I thought it was only right and proper that I help you hold onto it all. That plug will keep my thick creamy load deep inside you until it's fully absorbed my darling.\" She winked again and leaned in for another kiss before climbing off him and cuddling into his side. The portals and other magic fading away as her eyes returned to their resting state.\n\n\"So...\" she said, running her fingers over his chest, \"how do you feel?\"\n\n\"Well my cock and balls ache.\" Tim paused in thought, mentally exploring his body. \"My butt feels pretty normal though. Well... I mean, weird, plugged and incredibly full but fine. No aches or pains though.\"\n\n\"Magic cum my lover, it soothes all your aches and pains. Although... It sounds like you're saying you want me to use your bottom more and your penis less.\" She sighed and in a voice dripping with fake resignation said, \"Well I suppose I'll just have to get used to being a dominant top. I simply don't know how I'm going to cope with spending so much time pounding that pretty little butt of yours.\"\n\n\"Yeah... somehow I think you'll manage.\" He shot back.\n\n\"You know what my love... I just might.\" She leaned back in, kissing him tenderly as she began to plan their future together."
    ],
    "authorname": "TGPstories",
    "tags": [
        "magic",
        "dominant",
        "genie",
        "futa",
        "futa on male",
        "shemale",
        "transexual",
        "dickgirl",
        "light bondage",
        "love story"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/claimed-by-a-futa-genie"
}