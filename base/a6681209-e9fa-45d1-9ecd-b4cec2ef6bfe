{
    "title": "Lucille and Mrs. Miller Pt. 05",
    "pages": [
        "This story is total fantasy and there is no underage involvement or cruelty.\n\n*****\n\nThat night I told my husband everything about my confession to Mrs Miller and what I would be allowed to do without committing any serious sins. I also told him about the suggestion that it would probably be acceptable for me to wear very small panties and have accidents with Mrs Miller's son, Brian.\n\nAlthough it was in the middle of the evening and we had just had tea we were both speaking in very low tense voices. The atmosphere was so erotic. He murmured \"If it is accidental, Lucille, it doesn't seem a serious sin.\"\n\nI could see he wanted me to have accidents but I wanted to make sure \"I will only have accidents if you are willing Bruce. You know I love you.\"\n\nHe kissed me on the forehead and panted \"I love you so much Lucille.\"\n\nI knew he was agreeing but was even more certain when he asked \"Will I be allowed to watch you having accidents, Lucille?\"\n\nI smiled. I could see his little cock stiffening in his trousers and knew it was my turn to do the reassuring. I kissed him on the forehead and whispered \"I only want those accidents when you are watching Brucie.\" He panted his gratitude.\n\nThat night it was lovely again. Not as exciting as with Brian or as erotic as with Mrs Miller but it was lovely seeing my husband in such an excited state. I found I could paint just about any scenario I chose and talk about his tiny little cock and how pretty little Brucie was. It was lovely for me but Bruce was in another exciting planet. He even dribbled twice.\n\nAfter Brucie had dribbled, he knew that I still needed my dessert. I always masturbated as he watched. We both liked it.\n\nI got up from bed and told him \"I won't be long Bruce. I am just going for a pee.\" He was exhausted and the poor dear nodded.\n\nAll my clothes were strewn on the carpet and I told him \"You can put my panties on if you like Bruce.\" He looked grateful as I also tossed my bra on top of my knickers.\n\nWhen I got back into the bedroom he was sitting on a small chair next to the bed. He had my panties and brassiere on and was holding himself. He was stiff again as he waited for me.\n\nI didn't waste any time. I climbed onto the bed directly in front of him and spread my legs, at the same time dropping my hands between my thighs and opening up my vagina. It felt delectable. \n\nHe murmured \"Your pussy is lovely, Lucille.\"\n\nAlthough I was quickly approaching my first cum, I half smiled as he was such a gentleman. I teased \"Do you mean my cunt, Bruce?\"\n\nHe gasped \"Yes, Lucille, I mean your cunt.\"\n\nI could see he was getting excited again and wanted to help \"You look nice in my panties, Bruce.\"\n\nHe was panting \"I like your bra as well Lucille.\"\n\nI half inserted my finger and murmured \"I am going to buy you a little brassiere Bruce.\"\n\nHe sobbed with pleasure and I added \"To cover your little Titties.\"\n\nHe panted and I think he had a little dribble again. I smiled as I could make him dribble at any time now. He muttered \"I would like to have Titties.\"\n\nI smiled but I had my own enjoyment to think of and closed my eyes and pushed my finger right up. And then down and then just carried on rhythmically. I almost forgot that my husband was watching closely. \n\nEven as I was thrusting and grunting my thoughts were alternatively on Brian's giant cock or Mrs Miller being nice to me as her little girl. It was a wonderful dessert. My husband in a bra also flashed in my mind.\n\nThe next morning at breakfast, Bruce was so happy and kept mentioning what he and Brian would be doing throughout the day. I half recalled my husband saying last night that he would like to have Titties, but to be honest I was just very eager to see Mrs Miller again and chat.\n\nI found that our little talks throughout the day didn't have to be concerning our close or intimate relationships. She was so interesting I just loved to chat with her on any old subject.\n\nMy own work was very easy for me and I found I had plenty of spare time and I enjoyed explaining various aspects of my designs to her. Although she didn't have my technical training she was very intelligent and most importantly very perceptive. She even picked up on a few simple points which weren't consistent. We were becoming good friends.\n\nOn a few occasions she would say \"I had better not take up any more of your time Maam, or I won't be able to finish my cleaning. We both laughed when I picked up a duster and teased \"Well perhaps I should help you Mrs Miller?\"\n\nI wasn't sure when I should start having my accidents down in the shed with Brian, but I felt it was wise to leave it for about a week or so. Mostly Bruce would come up to collect the tray for their morning coffee and toast.\n\nUsually Mrs Miller would prepare the tray but I started to help her by sorting out the coffee as she did the toast. We had become a nice little team.\n\nBruce had told me that his relationship with Brian was moving the same way. On occasions if Brian was finishing off some connections on the circuit boards Bruce would get a brush and tidy up the shed before they both finished. Bruce was obviously clearly in charge but I could see that the two men were becoming firm fiends.\n\nWhen Bruce and I chatted over tea Bruce said how thankful he was, that he had visited Mrs Miller to make his apologies for causing the upset and grateful that she had forgiven him. I couldn't agree more. It was difficult to imagine life without the Millers.\n\nThere was no point in me laying down the law again but I did say \"I know Love, we just have to make sure we don't upset them in any way as they can be sensitive.\"\n\nAfter that first week, without any accidents I felt myself becoming very juicy and I knew it must have been obvious to Mrs Miller as sometimes when I had pushed myself closer to her than I should have, she squeezed my breasts. I always wore short clothes now and a few occasions she pushed her hand up my skirt and squeezed my thigh making me giggle. \n\nOne morning she must have known that I was getting bubbly, as she suggested that it would be helpful if I took the tray down the shed so that she could get on with her cleaning tasks alone without any distraction.\n\nThere was no suggestion that I might have an accident when I was down there, but she must have known that it would be in my thoughts.\n\nShe went upstairs and left me alone to prepare the tray. I made sure I had my shortest and thinnest skirt on and nice little panties as I made my way down the garden and then into the shed.\n\nAs I opened the door I saw that Brian was in the tight space between the two benches and Bruce was sorting out some papers on the desk. I shouted brightly \"Good morning Good Sirs.\" \n\nBrian saw me and grunted something. Bruce stood a little open mouthed. He could see that my plaid skirt didn't even cover my panties when I was standing up straight. He knew something was going to happen.\n\nI set the tray down and passed Bruce his coffee. He murmured his thanks but in a very low voice. He could see that Brian was staring at me and his trouser front was already erect. Bruce looked anxious.\n\nI took the plate of toast and made my way past Brian to set it down on the far side. It meant I had to squeeze past him. It had happened before but now we all knew what was happening.\n\nI didn't rush things and tried to remain in control. It was difficult as I eased my way past the young lad. He didn't even attempt to draw back and his penis felt so hot. My skirt didn't stop it and even through his trousers and my thin knickers I could feel the heat and the shape of his knob pressing into my tummy.\n\nAfter a short time I had to move past otherwise it would have been too blatant. I did move past and set the toast down on a low bench which meant that with my short skirt rising he could see all by knickers at the back. My husband could as well but that wasn't the object of the exercise. \n\nI am not a small woman and my bottom is quite plump. I heard a gasp and a grunt from behind me. I think it was from both of them. I felt rather pleased with myself. In my mind I was in control of both of them.\n\nI felt really smug as I straightened up and turned back to them so that I could do the second half of my squeeze past. The sight before me knocked me for six.\n\nIt was my turn to gasp. Bruce was still watching closely and Brian was still standing in the narrow gap between the benches. The only difference was that he had undone the front of his trousers completely and his huge penis was standing to attention in front of my eyes. He knew I had to pass. He was waiting.\n\nI don't know why I thought of it but it was just like the documentaries you see on the television, when the bears are waiting for salmon to swim upstream. The salmon knew that many of them would be eaten by the bears. It was inevitable. The salmon knew it but they had to go.\n\nI felt like a plump salmon as I edged past Brian and with his huge penis out ready for me it was inevitable he was going to do me. He was a big bear just waiting for his juicy salmon.\n\nIt was difficult to see that this was accidental but on the other hand it was much the way that Mrs Miller and I had discussed the previous week.\n\nI thought my best bet was to ignore it and try to get past somehow. My original idea of having an accident felt more uncertain now especially with my husband only a few feet away.\n\nI made the same moves as I had a few minutes earlier. I was still facing him but the front of my panties seemed very vulnerable now. My skirt didn't come into the equation and I knew his penis would be very hot again and this time his trousers weren't in the way to cool it down.\n\nI squeezed past and felt the shape of it pressing into my tummy.\n\nMy knickers were so thin, they were no protection at all. The heat of his cock was incredible. It was also very exciting. As I felt the heat pressing into my lower belly with only my panties in the way, he also pushed forward a bit. It took me off balance and I automatically opened my legs more.\n\nHe didn't do it deliberately. It just happened. The knob of his penis slipped between my legs. As I regained my balance I involuntarily closed my legs trapping his penis between my thighs with the top of his shaft rubbing against the gusset of my panties.\n\nTo say that it was nice was an understatement. He pushed gently and it moved a little and I squeezed and released equally gently. I saw that my husband was staring wide eyed. It didn't occur to me to smile at him. In fact no one was smiling. We were all tense and breathing very heavily.\n\nI was barely conscious that Brian was gently pushing back and fore between my legs. He must have found it as nice as I did. I did the same and pushed back and fore in the same rhythm as him. I saw my husband squeeze himself. \n\nWith the very small gusset to my panties, I knew it was a matter of time before the accident occurred. To be fair to Brian, I knew that he was entirely innocent. As far as my husband and I were concerned it may have been a bit haphazard but we both knew what was likely to happen.\n\nBrian's penis seemed to have a life of its own as it wormed its way past the narrow gusset of my panties and burrowed into my vagina.\n\nI wasn't sure if Brian had expected it but once it was in he was very positive and used his arms to lift my bottom onto the bench behind me and shoved his penis fully into me.\n\nThere was no mistake now. He was up me. My husband could see that Brian was up me. Nothing was said. I started to squelch as it all became very wet. \n\nThere was no doubt now. My husband was only 3 feet away and watching his young assistant fucking me. \n\nIn my mind it was still an accident but as I let myself go I couldn't help thinking 'this is a wonderful fucking accident'. I did think of Mrs Miller and hoped she would allow me to have more accidents.\n\nI could see that Bruce had start to dribble and knew he was almost finished. I had already 'happened' twice and was ready for another couple. Brian had already cum once and partly filled me up. I knew he could do it again a few times. By the time he had finished with me I knew my bucket would be filled\n\nIt went on for another 10 minutes until I was exhausted. Bruce was sitting on a low chair looking sorry for himself. Brian simply told my husband \"Give me that clean duster, Mr Ross.\"\n\nBruce handed it over and Brian cleaned me up. Nothing was said until I was reaonnably OK. My underwear was partly on display and a bit mucky.\n\nAs I made my way to the door of the shed. All Brian said was \"When you get back to the house, Mrs Ross, you should change your knickers.\"\n\nI didn't nswer but I just nodded as I left.\n\nI must have been down the shed for over an hour. When I got back into the house I was very much in disarray. Mrs Miller was still cleaning upstairs. She didn't normally take long up there. I think she was being diplomatic and allowing me time on my own to sort myself out.\n\nI had a shower and changed my underclothes. Then I went back into my office to carry on with some of my work. Again Mrs Miller didn't interrupt me except to politely knock my door later in the afternoon to say \"I am leaving now Mrs Ross. I will collect Brian from the shed.\"\n\nI smiled a little guiltily \"Goodnight Mrs Miller, and thank you for everything.\" She nodded pleasantly as she closed the door.\n\nIn the evening after tea, I felt rather subdued but Bruce was very cheerful. We had a glass of wine together and he must have realised from my quiet manner that I felt guilty. He smiled as he refilled my glass \"I love you very much, Lucille.\"\n\nI nodded and asked \"Even when I have an accident, Bruce?\"\n\nHe chuckled \"Especially when you have an accident Lucille. You cant blame yourself for accidents.\"\n\nI felt better immediately and said \"You are wonderful husband Bruce. I love you so much.\"\n\nHe smiled. We weren't actually talking naughtily but he did say \"We all have our frailties Lucille and you are a wondeful wife with my weaknesses.\"\n\nI wasn't sure if he was thinking about his pretty dressing up or that he liked watching me. He was such a good man I wanted to reassure him \"But I like helping you feel nice Brucie. I like your Little Soldier and when you are pretty.\"\n\nHe murmured \"And I like you having accidents Lucille.\"\n\nHe was so nice to me, I wanted to reward him. We both had to attend my fathers birthday party next day and I asked him cutely \"I know you cant wear a dress butwould you like to wear my knickers tomorrow, Love?\"\n\nHe groaned \"You know I would Luculle.\"\n\nHe looked hesitant and then asked shyly \"Could I wear your bra as well.\"\n\nI hadnt realised that his fetishes and little urges were getting much stronger.\n\nI giggled \"Of course Love, but it may be a little big. But I have my little sisters bra upstairs which will fit your little Titties.\"\n\nHe sighed. I had obviously struck a nice chord as he repeated quietly \"My little Titties.\"\n\nI remembered he had seemed in a dream in bed last night and I remembered something that Mrs Miller had suggested. I asked him \"Would you like to have proper Titties, Bruce?\"\n\nHe looked startled \"God yes. You mean a proper fitting brassierre with nice padding.\"\n\nI shook my head. \"No Brucie. I mean real Tits. Mrs Miller said we could get you special tablets which will make them grow. You could have nice big Tits if you want them.\"\n\nHe looked puzzled and I handed him a picture which Mrs Miller had left me. It showed a very attractive young woman with a little penis with very large breasts. \n\nHe muttered \" She is so pretty, Lucille. I would like Tits like that.\"\n\nI smiled \"They are quite large Bruce.\"\n\nHe panted \"I like them very much.\"\n\nIt made me think as I asked \"Would you like to have big Tits, Bruce?\"\n\nHe almost sobbed \"Oh Lucille, could I?\"\n\nI smiled as I told him \"I will have word with Mrs Miller.\"\n\nThe next day was Sunday and Bruce and I went over my parents house and we had a lovely time with all my family. Bruce's parents also came with his sister and her husband. \n\nSeveral people commented on how well Bruce was looking. He was full of the joys of spring. I was the only one there who knew he had my knickers on and my sisters bra. Actually I had also let him wear my stockings as well. The poor darling was over the moon.\n\nOn Monday morning I had a phone call from Mrs Miller saying she had to help Father Flynn look after some visiting curates. She also said that Brian had gone down the Sanctuary as they had a big influx of new animals.\n\nI felt quite down and asked \"Will you be able to come tomorrow Mrs Miller?\"\n\nShe was so nice nd said \"If course we will, Mrs Ross.\"\n\nShe added with little tease \"That is of course if you and Mr Ross want us to come.\"\n\nI probably showed my feelings too much as I immediatly blurted out \"Oh God, yes Mrs Miller. You don't realise how much Bruce and I need you.\"\n\nShe simply said pleasantly \"Don't worry Lucille. We will be there.\"\n\nBruce was equally down in the mouth, that they hadnt turned up. We just messed around with our work all day, not doing very much and unable to concentrate. \n\nWe were both on edge on the Tuesday morning and up early. It was such a relief to see them when they arrived, spot on time. Before they had even started Bruce had made them a cup of tea and I had made some nice warm toast.\n\nI knew we were spoiling them but we liked it and Mrs Miller looked appreciative. It was lovely. Bruce couldn't wait to take Brian back down the shed to show him some new connections and Mrs Miller started to work. A few times I came out of the office to chat to her and automatically joined in the dusting as we chatted about all sorts of things, about her church and my work and things in the village. She was incredibly interesting. The day just flew by.\n\nIn the evening Bruce told me more about the work that Brian was now into and seemed honestly very impressed and told me confidentially some of his plans. I was pleased and knew Mrs Miller would be delighted.\n\nThe next morning, Mrs Miller turned up on her own. Apparently Brian had had another call from the Sanctuary. Bruce looked devastated and Mrs Miller was so appologetic and explained \"This should be the last time Mr Ross. We have told the Sanctuary that Brian is fully employed now and that he will only be available at weekends.\n\nThis pacified Bruce to some extent but I could see he was very disappointed. I knew he wouldn't say anything untoward to Mrs Miller as neither of us would risk upsetting her or her son. I chatted for a few minutes before going back to my office and Bruce drifted back to his shed looking lost. I knew he had really wanted to discuss his plans with Brian and his mother.\n\nIt was OK for me as it was easy for me to leave my office for a few minutes to talk to Mrs Miller about anything. It made me feel better. She carried on with her work as we talked. A few times, Bruce came back into the house and I could see he was just messing about doing nothing. I think he was jealous of me talking to Mrs Miller.\n\nIn the afternoon I think Bruce had had enough. He came into the house just at the time I was in my office doing a spot of filing and Mrs Miller was tidying up around some of the cabinets. Bruce tried o sound casual \"It so lonely down the shed, shall I make us all cup of tea and get some nice biscuits?\"\n\nI felt a bit sorry for him and said \"That's a good idea Love. There are some nice Ginger Snaps in the kitchen, I know Mrs Miller likes those.\" Mrs Miller smiled. She enjoyed us making a fuss over her.\n\nMy office is nicely furnished so when Bruce reurned with his loaded tray, I had moved the chairs around a small table so that we could all be comfortable. I made sure that Mrs Miller had the nicest chair. As we were having our tea, we again chatted but this time Bruce was with us and it was lovely.",
        "Bruce asked about Father Flynn and about some of the subjects that had been brought up at the Parish Meeting. It was obvious that Father Flynn had discussed things with Mrs Miller as she was very aware of things and made some good observations.\n\nWe must have talked for about ten minutes and then Mrs Miller said \"Well I had better get on with my work, Mrs Ross as I will be leaving in about an hour.\"\n\nI could see that Bruce wanted to carry on chatting. So did I, for that matter and I just said \" Don't worry with the rest of the work today Mrs Miller. You have worked hard enough. We may as well have some more tea.\"\n\nBefore Mrs Miller could answer, Bruce had got up saying \"Good idea Lucille. I will bring some more tea\"\n\nMrs Miller smiled and shrugged her shoulders \"Well if that is what you want Mrs Ross.\"\n\nWhen he came back, he had a bottle of wine instead of tea and some more Ginger Snaps. Mrs Miller and I both giggled and then after Bruce had poured us all some large glasses of wine, we settled own again but this time Bruce ventured forth with \"Lucille told me that Father Flynn will be seeing her about her Confession.\"\n\nMrs Miller nodded. There was never any misunderstanding with her. She simply said \"You know of course about Mrs Ross's accident down the shed with my son, don't you Mr Ross?\"\n\nBruce nodded but didn't say anything.\n\nMrs Miller wanted to make sure he understood \"You were there Mr Ross. You saw her being fucked, didn't you.\" \n\nBruce blushed up a little murmurung \"It was an accident, Mrs Miller.\"\n\nI supported my husband's statement \"Bruce knows I had my panties on all the time.\"\n\nShe smiled. She was happy that there was no misunderstanding and told him \"When Father Flynn visits next week to give her penance he will probably smack her bottom.\"\n\nI felt all juicy again as I saw Bruce stutter as he tried to carry on the conversation. \"Will it be on her bare bottom, Mrs Miller?\"\n\nShe shook her head \"I am not really sure. I would think so, as Father Flynn told me he likes her bottom.\"\n\nBruce gasped. The statement was so casual. I tried to sound casual myself \"The trouble is Mrs Miller, at my age my bottom is getting a bit big.\"\n\nShe laughed \"You are too modest Mrs Ross. Even my Brian said that he likes your bum.\"\n\nI gasped \"Brian?\"\n\nWe had all had some wine by now and she laughed again \"Yes Brian. He thinks you have a lovely big round bum. If there had been more room in the shed the other day he told me that he would have turned you around.\"\n\nI saw Bruce silently mouth the words \"Oh God.\" The implication was clear.\n\nMrs Miller didn't realise the impact her words were having on us. \n\nI murmured \"Turn me around, so that my back was to him?\"\n\nShe smiled \"Yes Mrs Ross. That's right or more to the point, your bottom.\"\n\nI was flustered now \"But when I was facing him, I had an accident.\"\n\n\"But you knew you might have an accident with your little panties, Mrs Ross.\"\n\nI nodded, but had to ask \"If I had been turned around would I have still had an accident?\"\n\nShe smiled \"Well you still had the same little panties on Mrs Ross, and you would have been bent over the bench.\" \n\nI nodded.\n\n\"And they didn't prevent you having an accident when you were facing him?\"\n\nI said huskily \"No they didn't, Mrs Miller.\"\n\nShe was talking such common sense \"And do you think that those same little panties would have prevented a similar sort of accident if you were bent over in front of Brian?\"\n\nBruce could see it all as well as me and said \"So my wife would have had the same little accident up her bottom, Mrs Miller?\"\n\nMrs Miller still didn't realise the effect this was having on my husband and myself. She chuckled in a good natured way \"Not really a little accident, Mr Ross. You know how big my son is. Mrs Ross would have had a big accident, right up her big bum.\"\n\nI felt moist but confused as I muttered \"He would have been up my bum. Would he have hurt me?\"\n\nShe smiled \"No of course not. Don't forget you yourself said you have a big bum. All that would have happened is that Brian would have gone all the way up.\"\n\nBruce wasa also taken back by the enormity of it all \"He would have been up my wife's bum?\" \n\nMrs Miller just said \"Right up her bum, Mr Ross. Actually, she would have liked it up her bum.\" \n\nI felt so flushy, I could almost imagine myself bending over for Brian to insert his penis up my bottom. The thought of my husband watching that happening was even more delicious.\n\nThe explanations had been shocking but I noticed that Bruce didn't object.\n\nWe all had some more wine and I knew if I didn't raise the other subject about Little Brucie than the opportunity may be lost for another week. \"We had a lovely time at my father's birthday party last Sunday, Mrs Miller.\"\n\nShe smiled. I had already told her about the party and about Bruce's clothes and what he liked. She knew what I wanted her to discuss certain aspects with my husband and myself.\n\n\"Did you enjoy yourself Mr Ross?\"\n\nBruce also knew. He looked ashamed but aroused. He nodded \"I did enjoy it, Mrs Miller.\"\n\n\"Were they pretty, Mr Ross. Did you like wearing your wifes stockings and panties?\"\n\nBruce spoke huskily. This wasn't a surprise for him. \"Yes Mrs Ross, they were really lovely.\"\n\nI edged the conversation on \"He also had my little sisters bra on, Mrs Miller.\"\n\nShe didn't laugh.She knew the right words and merely said \"That's lovely Mr Ross. They covered your little Titties?\"\n\nHe croaked \"Yes, Mrs Miller. My Little Titties.\"\n\nWe could both see his penis stiffening through his trousers. I knew that Mrs Miller wouldn't embarrass him and would encourage him. She said in a low voice \"Would you like to have your own Tits, Mr Ross?\"\n\nWe could both see how stiff Bruce was as he grunted something positive.\n\nMrs Miller looked at me and I whispered \"He would like them, Mrs Miller.\"\n\nShe nodded \"It would be very easy Mr Ross. Just a few tablets every day and you could have nice big Tits.\"\n\nHe muttered \"I would like to have big Tits.\"\n\nShe asked me \"How about you Lucille. Would you like our husband to have big Tits?\"\n\nWithout Mrs Miller realising it the conversation was really affecting my husband and myself. We were both aoused but trying to act normal.\n\nI said \"It would be nice Mrs Miller, but it would be difficult when we have to go out publicly.\"\n\nShe laughed \"Not at all Mrs Ross. We can easily obtain very restraining athletic bras for outside use and a wooly jumper and no on else would notice anything.\"\n\nI felt so squishy. It would be so secret and taboo. I would be able to play with him whenever I wanted to and I mumbled something to this effect.\n\nShe smiled. We were both giggly with the wine and she laughed \"We could both play with him together Lucy.\"\n\nI was just as bad \"He would like us to have his Tits out, Mrs Miller.\"\n\nI could see Bruce squeezing himself again as Mrs Miller laughed \" You mean we could have HER Tits out Lucy. She would almost be a girl. Your wife.\"\n\nI giggled and actually came as she said those last few words. It was so outrageous. Bruce would be my wife. I needed the bathroom. We had had too much wine.\n\nAs I got up to leave the room, Mrs Miller also rose and said she needed the bathroom as well. We were both desperate and luckily we had two bathrooms. As we left I could see Bruce buttoning up his trousers to make himself respectable.\n\nWhen we returned we were all a lot calmer and immediately talked about more ordinary things. I knew that Bruce was bursting to tell Mrs Miller about his plans for Brian and I opened up the conversation by saying \"Bruce is very impressed how much Brian has learnt Mrs Miller.\"\n\nI knew she was proud of her son and loved hearing nice things about him and she did took another sip of wine saying \"You don't know how grateful I am to you Mrs Ross and especially you Mr Ross. I never thought that Brian would have been able to understand these things but he seems to be managing it OK.\"\n\nBruce had regained all his composure now and smiled \"I don't think you fully understand Mrs Miller. Brian isnt just OK. He is brilliant at working out different ways to sort out all the circuit boards. On one of our biggest orders he has worked out a way of making slots in the boards so that the connections can simply slide in different directions so that there is no need to undo them. It will save a huge amount of money for my sponsors.\"\n\nMrs Miller's face was a picture of gratitude for myself and my husband. She seemed almost speechless as Bruce went on \"I have to give a presentation at the big hotel in Bristol next week and I want Brian to accompany me.\" \n\nMrs Miller looked as if she may burst with pride and murmured \"That is so wonderful, Mr Ross. Will he be able to help you?\"\n\nBrian nodded. \"Not just help me Mrs Miller. I want him on stage with me. He is so adept at ringing all the changes on the boards that he could almost do it on his own.\"\n\nAs I watched my husband explaining things to our Cleaning Lady, I felt so pleased with him. I knew he was genuine in his trubutes to Brian's talents but he was also giving credit where credit was due. I loved him all the more and I could see that Mrs Miller was over the moon. \n\nShe was sitting directly in front of us and in all the excitement of listening to lovely compliments about her son, her dress had risen a few inches. Not very much but from just below her knee to about an inch over her knee.\n\nI did see Bruce falter a little as he was talking and I think Mrs Miller did as well. She did turn to me saying \"You are so lovely to us Mrs Ross and I really have to tell you I think Mr Ross is such a wonderfully kind man. I wish there was someway I could pay him back.\"\n\nTo be honest I felt much the same way, but we had to be careful not to embarrass him. I knew she was asking me something.\n\nI had noticed Bruce looking at Mrs Miller several times and knew what he was wishing. I laughed \"You are the best person to do that Mrs Miller. You will have to think of some way to give him a treat.\"\n\nShe smiled. We were both thinking alike. She murmurred \"I am not sure if we are on the same wavelength, Mrs Ross. I don't want to say or do anything that will upset anyone?\"\n\nI smiled and nodded very positively at her. \"Don't worry, Mrs Miller. We are on exactly the same wavelength. I would love you to give my lovely Little Brucie a 'secret treat'.\"\n\nI had deliberately emphasized 'Little Brucie' and the words 'secret treat'.\n\nShe nodded and said to me \"When Mr Ross came to my house to appologise he did seem to be looking at me in a certain manner.\"\n\nBruce looked worried. I smiled. He had told me exactly what had happened and now I said \"Yes Mrs Miller. He told me. You were wearing that very same dress and he was looking at you.\"\n\nShe turned to Bruce saying \"If you remember Mr Ross you told me that you were wondering what I was wearing under my dress?\" \n\nHe croaked \"Yes, I did Mrs Miller.\"\n\n\"Do you remember what I told you, Mr Ross?\"\n\nHe muttered \"You said you werent wearing stockings or tights and that you only had panties on.\"\n\nShe nodded \"You have a good memory Mr Ross.\"\n\nI smiled \"He has told me that story several times Mrs Miller. It makes him feel nice.\"\n\nI added \"I love Bruce very much Mrs Miller and I want him to have treats and feel nice.\"\n\nShe smiled at him. \"You are a very good man, Mr Ross and your wife and I both want you to feel nice.\"\n\nBruce was looking flushed. I could see his stiffness starting up again and so could Mrs Miller. I nodded to her.\n\nShe said \"Tell me what you are thinking now Mr Ross?\"\n\n\"About your underwear Mrs Miller.\"\n\n\"You must know I am not wearing stockings or tights?\"\n\nHe nodded.\n\nShe asked him \"So what do you think I am wearing?\"\n\nHe was excited now but trying not to show it \"Panties, Mrs Miller?\"\n\nShe chuckled \"Full marks Mr Ross. Only they are not small little panties like your wife wears when she is going to have an accident. I am older than she is so they are big panties.\"\n\nMrs Miller and I had talked about fetishes over the last 3 months and she knew a lot more about Bruce than he realised. I joined in by saying \"Your mother used to wear big panties, didn't she Bruce?\"\n\nHe gasped \"Yes she did.\"\n\nMrs Miller smiled. I had given her another start.\n\nShe said \"What material were our mothers panties, Bruce?\"\n\nHis penis was pushing out to tent his trousers now as he gasped \"Uusually cotton ones.\"\n\nShe smiled \"Big cotton knickers with a wide gusset?\"\n\nHe panted. We both knew he was feelng nice.\n\n\"I have big cotton panties on Mr Ross. They are probably like your mothers panties.\"\n\nHe gasped again and I could see he had a job not to squeeze himself.\n\nMrs Miller asked softly \"Do you want to see my panties Mr Ross?\"\n\nHe was panting but couldn't speak. She looked at me and I smiled back \"He wants to see them Mrs Miller.\"\n\nShe was standing directly in front of my husband and reached down to just below her knees and gripped the hem of her dress and raised it right up. \n\nI felt juicy but looking at Bruce's expression I felt even juicier as he stared at our Cleaning Lady's panties.\n\nShe had made it nicer for him by standing with her legs slightly apart which meant her panty gusset were only a few feet from Bruce's face.\n\nHe was staring intently at them and although they were clean there were a few marks in the gusset area. She smiled \"I am afraid I have been wearing them all day Mr Ross and to be honest all that wine you gave me didn't help.\"\n\nHe murmured. They are beautiful, Mrs Miller.\"\n\nIt was very erotic and I was breathing very heavily. They looked beautuful to me. She is older than I am and some hairs were poking outside of her gusset. She could see me looking and laughed \"It's a good job my panties have elastic there Mrs Ross or it would look like a black cat.\"\n\nI laughed but it was very erotic.\n\nI could see Bruce leaning forward and his face was only about a foot from her panties. He was breathing riduculously heavily and almost seemed to be sniffing.\n\nMrs Miller noticed as well and whispered top me \"Do you think he wants to smell them, Mrs Ross?\"\n\nI nodded and murmured \"He will do anything you tell him, Mrs Miller.\"\n\nShe looked as if she was contemplating. Then she said \"Lie down on the carpet Mr Ross.\"\n\nBruce grunted but did as he was told. Mrs Miller still had her dress way up over her hips. With a simple movement she moved so that her shiny shoes were either side of my husband's face. He was looking dirctly up at her underwear.\n\nI could see all her panties from my position. He probably couldn't even see her dress as he must have been looking straight at her panty gusset pulling into her crotch. \n\nThe wettish marks in the narrow strip of material between her legs seemed more obvious now and I wondered if the wine was still affecting her\n\nHe was panting like a little puppy dog and although he was now further away from her drawers, he still seemed to be sniffing. She smiled at me \"He seems to be enjoying things Mrs Ross. Do you think this is the correct treat for him?\"\n\nIt was clear she was asking me if she should continue. I probably wanted it to continue as much as my husband did and said \"I think it is a lovely treat Mrs Miller and he deserves it.\"\n\nI added \"I like it as well.\"\n\nShe smiled and then I saw her bend her legs slightly which brought her crotch a little lower. God, it was so exciting and I heard my husband almost yelp like a little doggie.\n\nAs I watched tensely she moved lower and lower until she was kneeling over Bruce. Her two plump knees were either side of his face and although her skirt was still above her waist it was more difficult for me to see.\n\nI wanted to be part of the treat and I murmured \"Its lovely Mrs Miller but I cant see properly.\"\n\nShe smiled at me \"From the way you said that Lucille, I take it that you would like to see?\"\n\nI panted \"I would like to see Mrs Miller.\"\n\nShe chuckled and moved forward to practically squat on my husbands face, at the same time flipping her skirt up at the back, giving me a clear view.\n\nAnd what a view.\n\nHer white panty gusset was firmly pressing into my husband's mouth, but was even more noticable was that she had positioned herself so that his nose was pushing her panties up between her large buttocks.\n\nHe was still sniffing. I thought he must be suffocating under her weight but then realised she had her both hands on the floor and was taking her own weight between her knees and her hands.\n\nMrs Miller told me \"Come around the front, Mrs Ross and kneel at your husbands feet.\"\n\nJust as my husband had done, I did exactly as I was told. I could see his little penis straining to be freed.\n\nThen she started to rock on his face as she said \"Your husband is enjoying it Mrs Ross, do you want to give him another treat? As you said, he deserves it.\"\n\nI wanted to help for my own excitement but it was an easy question to answer. \"He does deserve more treats Mrs Miller and I want to help you.\"\n\nBy now she had eased the elastic in her panty gusset to the side so that the black hairs were now all over Bruce's face. She was still rocking so that now his nose was buried in the panties up her bum. She was enjoying all this herself as she told me \"Undo his tousers Mrs Ross.\"\n\nI did as I was told and Bruces penis shot out. She chuckled \"His little soldier is standing to attention.\"\n\nI giggled and held it in my hand as she instructed me \"Wank him, Mrs Ross. Wank his little soldier.\"\n\nI was enjoying the erotic atmosphere and stroked his penis up and down. His excitement was incredible and I could see he was bigger than I had ever seen him before. Additionally there was a swelling at the top. It almost seemed as if he was getting a little knob. It was shining as well with cum.\n\nShe was still rocking making things go further in but still relaxed and joked \"I think we have a little German Soldier standing to attention Mrs Ross.\"\n\nShe was abviously joking and I giggled \"Why a German Soldier Mrs Miller?\"\n\nShe laughed again \"Well he is standing to attention and his helmet is nice and shiny.\"\n\nIt was exciting and erotic and also funny as she made me giggle.\n\nSuddenly Bruce groaned and he really squirted. I had never known him to do that before and it really took me by surprise.\n\nI was so startled that I let go of his penis. Mrs Miller kept a straight face as she said \"Our soldier is in trouble Mrs Ross.\"\n\nI laughed as she added \"We've blown his helmet off.\"\n\nAlthough I was very aroused and Mrs Miller had clearly enjoyed herself, the most important thing had been to reward Bruce and to give him a nice treat. We had obviously achieved that, and Mrs Miller sent me to get a clean towel as she was carefully disentangling her underwear from my husbands face.\n\nShe took the towel off me and used it to expertly clean Bruce up and in a few minutes we were all respectable again.\n\nShe told me \"Be a good girl Lucy and get my coat, I must be off.\"\n\nAs she was leaving she told the both of us \"Father Flynn will be coming on Monday to give you Confession, Mrs Ross. Make sure your knickers are clean.\"\n\nI felt like a little girl as I nodded my acceptance. She turned to my husband saying \"You will be required to be present, Mr Ross and so will I, as we will have to discuss the accident in detail.\"\n\nI felt it would almost be like a Public Confession and asked \"Will Brian be there as well Mrs Miller?\"\n\nShe shook her head \"No, Mrs Ross. I have told him to stay at home. After all, he didn't have the accident. You did.\""
    ],
    "authorname": "MaryGrangerx",
    "tags": [
        "panties",
        "cuckold",
        "spanking",
        "lesbian",
        "watching"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/lucille-and-mrs-miller-pt-05"
}