{
    "title": "Order of Protection Ch. 79-82",
    "pages": [
        "Jessie's POV \n\nLarry collapsed to his knees as she was hauled out of the courtroom, being taken to the field out back where punishments were carried out. John helped him back up. \"Come on, you don't need to see this,\" he said as he turned him around. \n\n\"NO!\" Larry shook him off. \"I promised her I'd be there to the end. Someone has to be there for her.\" \n\nI looked at him, he was dying inside but he couldn't abandon his mate and I respected that. \"Come on,\" I said. \"We'll stay with you.\" We joined the crowd leaving the room and heading outside, ignoring those who gave us a wide berth or looked at us like we were somehow guilty as well. The guards had led her to a pole, it was about eight inches wide and twelve feet tall. Chains were attached to the top, and one of the men held her in place while the other adjusted the cuffs and secured her in place. She was standing tall, her arms protecting her face as she shivered in fear. The guards removed her coveralls, cutting it off of her and leaving her naked and facing the pole. \n\nThe crowd had started to circle around, and we went around to the back and pushed our way to the front. \"Liz... look at me Liz,\" he said. Her tear-stained face went to his, and I could see how devastated and scared she was. \"No matter what, you keep your eyes on me. Nothing else, just me.\" They removed the silver collar from her neck, and with the mind link available again, Larry started talking to his mate privately. \n\nThe Council took their places to witness the sentence, and Francois nodded to the Enforcer who carried a whip, the leather infused with silver. The first lash landed across the middle of her back, and she screamed in agony as skin was torn and blood sprayed. The silver would retard healing and leave scarring, not that it was a concern for her now. The second lash landed, a few inches below. She let out another scream, the agony building for her. \n\nJohn and Viktor each had a hold of Larry's arms, holding him back as his wolf fought to get to his mate and those who were hurting her. Three, four, five, each lash tearing into her back. Blood started to fly, the whip sending droplets out when it hit and when it was flung out again. The strikes were going lower, hitting her bare ass, then thighs. Six, seven, eight, nine, ten. The Enforcer paused, and the doctor looked at her briefly. She was hanging from her arms, moving side to side to relieve the pain that would not stop. Her throat was raw from screaming, and she was staring at Larry, pleading silently for this to end. \n\nThe Doctor nodded to the Enforcer, and the whip sung again. Her howl of pain was different now, and as twelve, thirteen and fourteen hit, her screams never stopped. Fifteen, sixteen, seventeen, eighteen, nineteen, twenty. The lashes came from the other side, the strikes crossing the previous ones on her back and tearing it to ribbons. When he paused this time, she was breathing heavily, her head against the pole as she tried to catch her breath. Larry was on his knees, he was in agony as well, the bond open to share the pain and take some away from her. I respected him, he was doing everything he could for her and it would never be enough. \n\nThe Doctor nodded, and the Enforcer started again. Twenty-one, two, three, four, five. The lashes moving down steadily to her thighs before he went back to the original side. She danced in the chains, trying in vain to escape the whip but only making it worse. She screamed in agony as a whip strike wrapped around, slicing her right breast open. Twenty-six, seven, eight, nine, thirty. Her screams weakened, her head falling forward, and she seemed to give up as her body slumped against the pole. \n\nThe doctor approached, shining a light in her eye and checking her heart. She could barely move now, and I watched her look at Larry and mouth \"I love you\" before her head fell forward again. Her body was covered in blood, only her arms and head spared. The doctor nodded, and the enforcer continued at thirty-one. Two, three, four, five, she wasn't even screaming anymore. By forty she wasn't even twitching when the whip struck, she was just swinging there like a piece of meat on a hook. \n\nLarry screamed in pain and loss as the bond was ripped from his soul, and it took three of us to hold him down. The doctor approached again, checking her eyes, then her heart. \"She's dead,\" he said to the Chairman. \n\n\"Release her, and let him have his mate's body,\" Francois said before they turned to leave along with the crowd. When she was on the ground and the Enforcer who had beat her was gone, we let Larry go and he ran to her side. He picked her broken body up and held it in his lap as he cried in loss. \n\nI stayed with him, bringing a sheet that had been handed to me to hide her. I was tucking it around her, my head near her waist, when I caught the smell. It couldn't be. I put my head by her sex, taking a deep breath, the scent of lilac and new life was unmistakable. \n\n\"SHE WAS PREGNANT,\" I yelled out, causing the Doctor and the Council to turn back. \"You idiots, how could you not know?\" Larry was howling in grief now, his loss instantly doubled. \"Move him away, I'm going to try something.\" They pulled him free and I laid her on her back, my hands glowing as my power surged into her body. \n\nI had read something in the spell book as it was translated, it was in the section on werewolves. Searching for her wolf, I found her faint and fading in her mind and sent my power towards her. As she strengthened, her body started to glow and then shifted into her dark brown, white and black wolf. I continued to pour my power in, the stripes of open flesh on her fur closing, and finally she took a breath. \n\n\"What are you DOING,\" Francois said. \"She was sentenced to die!\" \n\nHaving done all I could, I moved my hands back and let the glow stop. \"Let him go,\" I said to John, and a second later Larry was on his knees next to her. He shifted, tearing his clothes away, and curled around her as she panted and tried to get up. He was licking her fur, cleaning her neck and ears as he whined in excitement. \n\nThe Enforcers came running back, but I held up my hands and stopped them. \"Conference room, NOW!\" The Council members turned to obey me, and John looked at me in wonder as they obeyed my Alpha power which was surging forward. Larry was my Pack mate, and what they had done to him was monstrous. \"Stay with him,\" I told John and Viktor as the stood slack-jawed above the two wolves. \n\nThe crowd, which had been leaving satisfied with their justice, was now talking loudly and uncertain. No werewolf would condone executing a pregnant woman, and the excitement of seeing justice was now tempered by guilt. They made a path as I walked quickly back inside, the Council already in the room as I slammed the door closed. \"How could this HAPPEN? Was she never examined?\" \n\n\"I don't know, and we didn't know,\" Francois said. \"Rest assured I will get to the bottom of it.\" \n\nJavier looked at me. \"What did you do out there?\" \n\nI sat in a chair, the magical exhaustion starting to overcome my adrenaline. \"I saved her wolf,\" I said. \n\n\"She is under sentence, you can't just bring her back,\" Armando said. \"We will be forced to kill her again. All you have done is forced her to go through all that pain again.\" \n\n\"Elizaveta IS dead,\" I said. \"You killed her. She's not coming back. What I saved was her wolf, and hopefully their child.\" \n\nThey all looked at me like I was crazy. There were werewolves, and there were werewolves who killed their wolves, but there was no such thing as a wolf who killed his human. It just didn't work that way. \"You can't have a werewolf without the human, it's impossible.\" \n\n\"That's what I thought, but it wasn't true,\" I said. \"Her human side was dead, I brought her wolf back to life. Her wolf, which was against everything her human side did from the very beginning. You know, you searched her mind and examined her wolf before. She is fully wolf now, no human left. She can't shift back to human form, and she has no human mind. She is a wolf, nothing more.\" \n\n\"And he is still her mate?\" Francois was leaning back in his chair, his fingers rubbing his temples with the headache I just gave him. \n\n\"Did you not see how he reacted to her? His human side loved her, but the bond was with her wolf.\" I still couldn't believe it worked, but the book had shown me a way to seek out her wolf spirit and that was the key to focusing my healing power. I was also shocked I was able to bring her back to life; my healing power was barely enough for the job. I was lucky her heart hadn't stopped too long for it to restart. \"In any case, you sentenced her human to be whipped to death. She was. Her wolf and her child were innocent, so you will leave her alone.\" \n\n\"I don't know what to say,\" Francois said. \"Powers like you have are a new thing for us.\" \n\n\"Power must be tempered with mercy and wisdom,\" I said. \"Find out why a pregnant woman was not identified prior to sentencing and fix it,\" I said. \"I'm going back to be with my Pack member.\" \n\nNo one said anything as I got up and left; any outrage they might have had at my outbursts and treatment of them was overcome because I was right, and they all knew it. \n\nI stopped by the kitchen and got some fresh, cubed steak and put it in a bowl along with a large bottle of water. Carrying it out, I walked through the remaining crowd to where Larry was sitting protectively over his mate. John, Viktor and Stan had all shifted to their wolf forms and were stationed around her, facing out. No one knew if one of the victims might feel cheated and try to harm her now. I set the bowl of food down in front of her, then poured the water into the second bowl. She licked my hand, then started to eat. \n\nI pulled my dress off and kicked off my shoes before shifting into my own wolf, and laying down next to my mate. \"The Council is satisfied that her human part is dead,\" I told him along with Stan and Larry. \"What I did saved her wolf. She will no longer be able to shift, she has no human left. Larry, you have your mate but that was the cost.\" \n\n\"I don't care if she can shift as long as I have her,\" he said. \"What of our baby?\" \n\n\"I don't know yet,\" I said. \"It's not like I've done this before. My healing power was in her, but we will have to wait and see.\" \n\n\"Thank you, Jessie. Thank you for everything.\" Liz had finished eating and drank most of the water as the crowd watched. She went back to Larry, licking his face as he cleaned her muzzle. Feeling better, she started to rub her fur onto him, spreading her scent and basking in the mate tingles. The two sniffed each other, then she dropped her forelegs, butt high and tail wagging, and barked at him. He mirrored her stance before she took off for the woods, Larry yipping as he chased her. \n\n\"Alpha Stan, can you follow them, make sure they are all right,\" I asked. \n\n\"Of course, Jessie. What are you doing?\" \n\n\"Going back to my room with my mate, that exhausted me,\" I said. He took off for the woods, Alpha Viktor following him, as the crowd started to break up. \"Come on, my mate. I need to be held.\" \n\nHe came alongside me, licking my ears. \"You're amazing, you know that? You made an entire Council submit and you weren't even trying.\" \n\n\"They fucked up and they knew it,\" I said. \"Now come on, the baby and I are tired.\" We trotted back to our clothes, shifting and pulling them on before going back inside. \n\nAfter a fun shower with him, we fell into bed, the window open to let the cool mountain air in. I heard a howl in the distance, the howl of a male claiming his mate in wolf form, and I smiled. Larry would have his future. \n\nCh. 80 \n\nJessie's POV \n\nOne Week Later \n\nI opened my eyes to the first light of the day coming through the gap in the curtains. I felt rested, finally, the long trip back from Russia to Minnesota was not fun for a pregnant woman with bad morning sickness. I'm sure the other people in first class with us didn't like the three times I threw up before we were even out of the country. We had stayed awake most of the flight, listening to Russian language learning programs together, so we could sleep after we arrived late last night. \n\nMy stomach started to roll again, and I rolled out of bed. His arm fell limp off my hip to the blanket. I raced to the toilet, emptying my stomach out before going to the bathroom. I turned on the shower and let it heat up while brushing my teeth to get the taste of vomit out. \n\nI was not enjoying this part of being pregnant a bit. \n\n\"Are you all right,\" John's voice came from the other side of the door. \n\n\"Fine,\" I said. I pulled off his long shirt and stepped into the shower as my mate came in. The curtain made his shape fuzzy, but there was no mistaking the broadness of his chest or the taper down to his narrow waist. Every time I looked at him I wondered how I got so lucky. \n\n\"I wonder how I got so lucky too,\" he said as he pulled the curtain back and joined me. \"Can I help you wash?\" \n\n\"I'm barely showing, it's not like I can't see my toes yet,\" I said, but his eyes were dark with lust and I could feel the bond between us pulse as my body responded. He took the sponge from my hand, cleaning my face as I closed my eyes and relaxed my body into his. He took his time, doing my hair before he moved down my body. My breath caught as he started to rub my tender breasts. \"Careful, they are sensitive,\" I told him. \n\n\"Bigger, too. I'm liking you this way.\" His wolf loved me barefoot and pregnant as well, and both were even more attentive and protective of me than before. He was always touching me or watching me, never letting me do anything that might hurt me. My wolf loved the attention that sometimes grated on my human part. He continued down my stomach, kissing the bump before doing my legs and feet. His tongue and lips were busy elsewhere, and I was moaning by the time he finished, and then it was my turn to tease him. \n\nHis wolf didn't like to be teased. \n\nIt wasn't long before I was holding on to the shower head and the wall for dear life as he pounded into me from behind. The wet slaps of his hips to my ass echoed in the small bathroom, joining my loud cries and moans as he worked his fingers on my clit from behind. I came twice before he joined me on the third, holding that thick cock as deep in me as he could go. As his hot seed filled me, my legs lost their strength and he ended up holding me up until I had control of them again. \"That was amazing,\" I said softly when he finally slipped out. \n\n\"Now I get to clean you again,\" he said with a smile. There might have been a round two except the hot water ran out, so we quickly rinsed and dried and ran back to the bed. \"I'm glad we don't have to be anywhere until lunch with the Alphas at noon,\" he said as I snuggled into his side. \"Jet lag sucks.\" \n\n\"We'll have to get used to it, we have a Pack on the other side of the world now,\" I said. \"I can't wait for our friends to get here.\" A private jet from Scotland was arriving at eleven thirty, and a flight from Moscow at two. The guest Alphas and the American and European council representatives would also arrive tonight. \"I'm glad I let Larissa and Abigail do the wedding planning, there's no way I'd be ready for tomorrow without them.\" I had texted and talked to them on Facetime a few times from Moscow, and they had performed miracles in a few days. I had found my dress in Moscow, a traditional Russian design, and John's former Pack was bringing his tuxedo from his old room at the castle. \n\nWe talked and snuggled for another hour before we absolutely had to get up and get dressed. Winter had come to the Midwest, so I was dressed in jeans, Uggs, a turtleneck and a wool sweater. John was looking very Minnesotan with his jeans, boots, Vikings turtleneck and a plaid shirt. \"We'll be out in a few seconds,\" I told our driver. \n\nIt felt weird no longer having a car or being able to just go to the store alone, but that was the life I'd found myself in now. The paparazzi had been waiting for us at the airport, everyone wanting a picture of one of the richest women in the world and her studly fianc\u00e9. Alpha Stan had his men doing security, and I had brought a half-dozen unmated wolves from the Moscow Pack to help. I begged Stan to let me have my old cabin back while we were staying because I wanted time alone, and I had to stay on his Pack grounds for security reasons. He wanted to put me up in the visiting Alpha guest rooms, but we declined- other Alphas were coming as well as the Council. \n\nThis little cabin I'd rented after the \"Hooters Incident\" was cozy and comfortable, and a palace compared to the little cabin on the lake up north we'd spent so much time in. \n\nWe walked out hand-in-hand and got in the back for the short drive to the Pack house. The place was full of noise as we arrived, with the Pack gathered to greet us as well as see Patrick's mate. It took a good twenty minutes to get the hugs and handshakes out of the way, and my eyes were a little misty by the time we finally sat at the round table at the front of the room. Council Chair Robert Steele was sitting to the right of Alpha Stan along with his mate Laura, while we were to his left next to Larissa. It was a big honor for him to attend our wedding. \"No chance of getting you to stay in the States now, I guess,\" he said with a grin as we greeted him. \n\n\"What can I say, Chair Steele, they used the Pack children to draw me in and I couldn't turn my birthright down after spending time with them. And that rooftop pool!\" \n\nHe laughed. \"I know what you mean, that could make those cold Moscow winters a little more bearable. Congratulations on your news, by the way. Twins with your first mating, Luna has truly blessed you.\" \n\nI looked down, my hand going over my baby bump. \"I'm still in shock from the ultrasound. It's no wonder my morning sickness has been so bad.\" \n\n\"It will be over soon,\" Luna Marina said. She was with Viktor, Mischa and Patrick, Konstantin was at another table with some of the unmated of the Pack. \"I'm so excited about you kids, pretty soon Mischa will be mated and pregnant and I'll be a grandmother!\" Mischa just rolled her eyes while Patrick kissed her head. \n\n\"I'm glad I'll have a big Pack to help out. I couldn't imagine having twins alone. I appreciate what my Mom did for me more and more every day.\" Now it was John's turn to kiss my forehead. \n\n\"You'll never be alone, I know the old women of the Pack are already knitting things for our babies,\" he said. \"What we really need is to find Konstantin's mate. He's getting a little grumpy in his old age,\" he teased. \n\n\"No kidding, let's give Mom someone a little closer to obsess over pups with,\" Mischa said. \n\n\"Well, there's going to be a lot of people here this weekend, and I arranged for the singles in my Pack to stay while we are off on our honeymoon and go on a tour of American packs,\" I said. Unmated males needed to find their mates, it helped them settle down and become responsible Pack members, plus it brought new blood into the Packs. \n\n\"He better hope he doesn't smell of shewolf when he finds her,\" Marina said. \"I'd have smacked the shit out of my mate if I found him like that.\" She looked over at the table where a young female was rubbing herself against his muscled arm, her shirt pulled low to show her ample cleavage. She must have said something to him over the link because he sat up and moved her arm. \n\nThe lunch was over, and we were laughing over dessert and coffee when I heard a commotion outside. The doors opened to reveal Alpha Esca and Luna Eleanor, along with other members of John's old Pack in Scotland. Betas Jack and Sarah flanked their Alphas, and behind them their son Sean stood with their twin daughters Jane and Julia and Gamma James. \"Come on,\" John said as he helped me up from my chair. He quickly embraced his former Alpha and Luna, and they both pulled me into hugs as well. I had briefly met their Pack at the castle, and everyone was happy now that the two of us were mated and expecting. ",
        "I was catching up with Jane and Julia on the latest gossip when I hear chairs hitting the ground and someone yelling \"MATE!\" We all froze, and as he came closer, John pulled me out of the way as a frenzied Konstantin picked up Julia and buried his nose in her shoulder. \n\n\"LET ME GO,\" she yelled, \"I'M ONLY FIFTEEN YOU IDIOT.\" He immediately relaxed and set her down, where her brother quickly grabbed her and pulled her behind him. Alpha Esca was about to shift, but Eleanor put her hand on his arm. \n\nKonstantin looked at them, then back to Julia, his shoulders slumping as he realized what was happening. It only took a moment before he straightened his back, turning and lowering his eyes to the visiting Alphas. \"Alpha Esca, Luna Eleanor, my apologies for my behavior. I am Konstantin Kirolinko, Alpha Heir of the Kstovo Pack in Russia, and the mate of your daughter...\" \n\n\"Julia,\" Eleanor said. \"Julia is your mate, her sister Jane next to her, and our oldest son Sean.\" She broke the ice, coming forward and giving him a quick hug. I looked over at the twin girls, Julia was crying and ran out of the room, her siblings with her, and James following. \n\n\"Alpha Esca,\" the old Alpha said brusquely as he shook Konstantin's hand. He kept the handshake going a little too long, the strain evident in his arms as I heard bones starting to crack in Konstantin's hand. \"Go take a shower, you smell of sex and it's upsetting your mate.\" \n\n\"Yes sir,\" he said as he turned red. \n\nViktor and Patrick followed him out as they went back to their rooms, while Marina and Mischa came up next to me. \"Never a dull moment,\" John said as I watched them go. \n\n\"Konstantin needs to go to the florist and ask what arrangement says, 'Sorry I was a horn dog who screwed anything with a pulse until I found you,'\" Mischa said with a sigh. \n\n\"Or a Kobe ring,\" Marina added. \"That boy. Finally finds his mate, and he has three years to wait for her.\" \n\nMischa started to laugh. \"This is SO Luna. He was teasing me so much about me having to wait six months for Patrick, now he gets to wait thirty-six!\" \n\nMarina just hugged her. \"I guess you're not getting out of the pup pressure anytime soon,\" she said. \n\n\"Konstantin is a lucky man,\" John said. \"Julia is a fine young lady, raised to be a Luna, smart as a whip and talented. She has an amazing singing voice and is an accomplished pianist.\" \n\n\"Why was she crying? I mean other than the obvious thing with him.\" \n\nJohn sighed. \"She always wanted to graduate from college and travel the world before finding her mate. Once you are mated and pregnant, she thought she'd rarely be allowed to leave Pack lands. Now she has the overprotective mate without being mated yet.\" \n\nJohn went to schmooze with the other Alphas, while I went with Mischa to check on the twins. Soon we were laughing ourselves silly, with Mischa telling hilarious stories about her older brother while we plotted her revenge. She wasn't going to reject him for not waiting for her, no... that would be too easy. He was going to have to work for forgiveness before she would offer him her neck. \n\n\"Jessie, our Pack members are here,\" John said over the bond. I left them to their stories, giving Gamma James a big hug as I left. He was standing guard outside their rooms with orders to make Konstantin bleed if he tried to force his way in, and those orders he was very happy to carry out if needed. \n\nThe SUV's pulled into the driveway, and fourteen young men and women got out and looked around. The weather was similar, but the scents here were completely different. I greeted each and introduced them to the Alphas as they arrived. They had already checked in to the nearby hotel but were here for dinner and a Pack run with their hosts. \n\nWhen I gave my favorite teacher a hug, Katya Semulskaya froze and started sniffing my shoulder. \"He's here,\" she said as her wolf came forward. \"WHERE IS HE?\" \n\n\"Your mate is here?\" \n\nShe nodded, moving past me to enter the house. People noticed her behavior, the mated ones standing aside, the unmated males with their noses up hoping the beautiful young woman was theirs. She caught a whiff and took off running for the stairs, with me following close behind. She paused at one hall before running down it, and turning a corner she let out a primal growl before she launched herself at a male, wrapping her arms and legs around him. \"MATE,\" she said as she pulled his shirt aside, biting down with him as he marked her as his forever. \n\n\"Wow,\" I said as they continued to hug each other. The door opened, and Jane and Julia looked out, Mischa behind them. \"Give Gamma James some privacy,\" I said. \n\n\"Get them to his room before their first mating occurs in the Alpha's hallway,\" Mischa said with a grin as she closed the door. She was right. Never a dull moment. \n\nCh. 81 \n\nJessie's POV \n\nI could hear the party before I even got to the door. \"You sure this is all right,\" I asked Stan as he escorted my bridesmaids and I to the doors of the club. \n\n\"Of course,\" he said. \"Not all human traditions for marriage translate for us, especially those associated with bachelor parties. Once you've met your true mate, there isn't desire for another, and if a woman tried to kiss him, he'd probably throw up. This is a celebration, a chance for all the guests to get together and have fun before the ceremony tomorrow.\" \n\n\"No drinking?\" \n\n\"Lots of drinking, but we're wolves and you're pregnant so we've got lots of non-alcoholic drinks for you,\" Mischa said. \n\n\"I've rented the whole venue, the bartenders and staff are all Pack, and we have buses to get people back to their hotels or our Pack House,\" Stan said. \"Relax and have fun, tomorrow is going to be a blur.\" \n\nI stepped into the club and an attendant took our coats. I was dressed in a clingy red sleeveless dress that came down to mid-thigh and showed the beginning of my baby bump, with matching heels and gold jewelry. Mischa looked older than her seventeen years, in a silver dress that barely covered her ass and had a daring plunge to her bustline. \"Patrick is going to freak over that dress,\" I said as I looked at her. \n\n\"Then he better not leave me alone,\" she said as she pushed through the doors into the club. The beat pulsed through the room and the lights were going, the place was already packed, and it was only ten at night. Young couples were on the floor, mated couples with eyes only for each other, and single males looking for Miss Right Now until Miss Right shows up. The music stopped, and people turned towards us, most bowing slightly towards their Alpha as the other leaders joined us at the doorway. \n\n\"Thank you all for coming to celebrate my marriage to Alpha-Heir Jessie Donato,\" John said as we pulled me to his side. \"It means a lot to us that you would travel here to be with us as we join together in the human world.\" There was clapping and calls for us to kiss, calls I was all too happy to meet. \n\nIt seemed like hours, meeting and greeting all the guests from across North America and Europe. \"I haven't seen a gathering like this in a long time,\" my mate said to me as we took a table overlooking the dance floor. \"It's been good for everyone.\" \n\n\"Matings are a good thing,\" I replied as I saw James and Katya walking over. I got up and hugged my friend from the Moscow Pack, while John congratulated the Gamma of his former Pack in Scotland. \"I'm so happy for you,\" I said. \n\n\"Me too, he's amazing,\" she said. \n\nTears on her face and fear in her eyes betrayed something, and I pulled her into the chair next to me. \"What's wrong, Katya?\" \n\n\"I'm going to miss my kids,\" she said. \"James' Pack isn't as big as ours, and the children go to school with humans. I'm going to have to leave them all and start over,\" she said. \n\nIt was the norm, she wasn't a ranked wolf and thus would move with her mate. I had an idea, but I needed to know if they would even consider it. I linked the idea to John, and he agreed with me. \"Katya, if we could arrange it so you two would stay in Moscow, would you do it?\" \n\nShe looked over at James, who nodded. \"I don't have family in Scotland, my parents are gone and my sister is living with her mate's Pack in Germany. I do have responsibilities, though.\" \n\n\"Let me work on it,\" I said. \"Meanwhile, have some fun before you head back to bed,\" I said with a knowing grin. I got up, taking John's hand and walking over to the table in the bar area where Alpha Esca, Luna Eleanor, Betas Jack and Sarah, and daughter Julia were sitting. Konstantin was seated between Esca and Jack, looking rather subdued and uncomfortable since Julia was ignoring him. \"Where's Jane?\" \n\n\"Dancing with some new friends from Colorado,\" Eleanor said as I bent down to give her a hug. With an eye motion, Konstantin jumped up and offered me his chair, moving around to sit next to Julia. \"Quite the party you have going,\" she said as another round of drinks was passed out. \n\n\"Thank you, Stan went all out,\" I said. \"I have a favor to ask of you, and I'll understand if you say no,\" I said as the pair turned to me. \n\n\"Whatever you need,\" Esca said. \n\nI looked over at Katya swaying in James' arms on the dance floor. \"Our Pack is going to be a mess when we finally take over,\" I started. \"Right now, the upper leadership is a mish-mash of people volunteered from different European Packs, and in six months they'll return home. Most of the Pack leadership was killed, arrested or left for St. Petersburg, and what is left may not be loyal to me. I have Patrick and Mischa staying on as Betas, but I'm worried after what happened with Polina.\" \n\n\"You're worried about security,\" Esca said. \n\n\"Exactly. Even if it wasn't for all the money and notoriety we've gained, we're vulnerable without loyal people in key positions. I may be the heir, but no one there knows me. I need a Gamma I can trust, and Luna just did something amazing.\" \n\n\"James,\" Eleanor picked up quickly. \n\n\"Yes. Katya is a schoolteacher, she loves her kids and her family is all there. I'd like to ask for permission to let James join my Pack as my Gamma. I've talked to them already, and he is willing, but his loyalty to you would not let him be the one to ask.\" \n\nEsca looked over at Jack. \"Are you ready for a promotion?\" Jack nodded and smiled. \"Of course you can take him, Jessie. When you agreed to take on the Moscow Pack, every European Alpha breathed a sigh of relief. It is in our best interest to make your transition safe and smooth, because we have enough to deal with in St. Petersburg. It will be a good challenge for him to take on a larger Pack in an urban location, too. The fact that it makes his mate happy is just a bonus.\" \n\nI smiled and hugged him, then hugged Eleanor. \"Thank you so much,\" I said. Lowering my voice to a whisper, I leaned into her ear. \"How's it going with Konstantin?\" \n\nShe laughed. \"That boy has a mile of groveling to do before my stubborn daughter will forgive him, but he's had a good start. Esca didn't even have to do anything, there wasn't any fight left in that wolf after his Mom got done with him.\" She looked over at the two, Konstantin was trying to talk with her and she was watching Jane on the dance floor. She wasn't making it easy for him, her dress showed off her developing figure and her sharp wit cut like a knife. \"She still won't talk to him, so he wrote her a long letter. I caught her smiling, so he did something right.\" \n\n\"He won't give up,\" I said as I sat back and smiled again at Esca. \"I have another proposal for you to think about.\" \n\n\"Haven't you taken enough?\" Esca was laughing at me. \n\n\"No, this is a good thing. I plan to start an exchange program for the younger members of my Pack, like the humans do with their foreign exchange programs. As juniors in high school, they would spend a school year abroad in an allied Pack under the protection of that Alpha. I'd like to send some to Scotland, some here to America, European countries, wherever there is a Pack I trust. The Moscow Pack has been isolated far too long, and I have to break that cycle with the younger ones. It also gives them a chance to immerse themselves in another language and culture.\" \n\n\"I'm in favor of it,\" Eleanor said. \"I'm surprised someone hasn't tried it before.\" \n\n\"And I want to ask Jane and Julia to come to Moscow for a year.\" Esca's eyes got wide, but then he thought about it for a while and let out a breath. \"She will need to learn the language, and she can be there under our protection. Konstantin will be close enough to see her on weekends, supervised of course. It might help Jane find her mate as well. I plan to travel and see the world, and I'll bring them along.\" \n\n\"I can't stop worrying about their security, they're my only daughters,\" he said. \n\n\"Send a Pack Warrior to be their bodyguard. There's probably someone out there who would want to attend University, learn a language, or search the Continent for their mate.\" \n\n\"I know this is unorthodox, but we won't be normal Alphas,\" John said. \"To me, they are like my nieces. I'll keep them safe.\" \n\nEsca nodded. \"I have to think about it and talk to my girls first, plus ask the Pack. Have you talked to Alpha Stan yet?\" \n\n\"I have, he is excited about it. We're already getting Charles to draft an exchange treaty to spell it all out. We can set it up to be bilateral or expand it to include other Packs willing to meet the same conditions.\" I looked over at Julia. \"I imagine she'd love to see the Moscow Ballet or the Symphony. There are excellent music schools there, too.\" \n\n\"She's already been looking,\" Eleanor said. \"She may be pissed at him, but she knows her future and wants to be the best Luna she can be. Jane is apprehensive, she's always done things with Julia and now she's the one waiting for her mate.\" \n\nLike a cold sheet of water, the Alpha command from Stan to protect the building crashed across the club. Instantly, warriors and Pack leaders were on edge, ready to fight. \"What's going on,\" Esca said as he gathered his family behind him. Konstantin stood on his right side, Julia holding him from behind. \n\n\"John, Jessie, come to the front door please. There is a messenger here for Jessie.\" \n\n\"I don't know, it's a messenger but it must be bad,\" I said as I took John's hand. We walked through the people as they moved the vulnerable to a defensible position in the bar area, fighters surrounding them. \n\n\"I have a bad feeling,\" John said. We walked past the coat room to the entryway, where a dangerous-looking man was standing holding a small box. His expensive suit, slicked back hair and pinkie ring were all I needed to see to know what we were dealing with here. \"Don't get too close to him,\" John sent me. \n\n\"He's here alone, and he's not nervous, so he has something in reserve,\" I answered. I walked up in front of him, letting my wolf buck up my confidence as I stood tall and unafraid. \"You wanted to see me?\" \n\nThe man smiled, the kind of smile that made your neck tingle with danger. \"Ah, Jessie Donato, such a pleasure to finally meet you. I am Santino Riina of Corleone, Sicily. I have a message from my father for you.\" \n\n\"Why should I listen? I have nothing to do with the Sicilian Mafia, and never will.\" \n\nHe shook his head and offered me the small box, the size a book \n\nwould come in. \"You will listen to what I say, and do what I ask of you. You know what we are and what we are capable of, Jessie. You have already inherited Yevgheny's wealth, and as the only surviving relative of Yuri Zubkov you will inherit his as well. Along with his wealth comes his obligations. He owes us one hundred and thirty million dollars, American. On Wednesday at midnight, that goes to a hundred and forty million. You will make good on his debt to us.\" \n\n\"I don't think so.\" Something was wrong. I reached out and took the box, pulling the bow open. Lifting off the top, my heart stopped right before John went to grab Stan, who was on the verge of shifting in front of a human. \"GET HIM OUT OF HERE,\" I yelled. \n\n\"Payment information is in the box. We can wipe out everyone you love, Jessie. Don't be stupid. Pay the money before Larissa Larsen loses anything else.\" He walked out, escorted by five men, as Stan was pushed back inside and out of public eye. I picked up the box, looking down in horror at it. \n\nIt was Luna Larissa's ring finger, her wedding ring still attached. \n\nCh. 82 \n\nJohn's POV \n\nI shoved Alpha Stan into a group of warriors. \"Hold him back until he's gone,\" I said as I waited for Jessie to come back through the doors. \n\nShe came in a minute later, holding back her anger. She took off the wedding ring and engagement band before handing off the finger to a visiting Pack Doctor. \"GET ME ICE AND A BAGGIE,\" he yelled when he saw what it was. \"If we can get her back in the next hour or two, there's still a chance to reattach this,\" he said. \n\nJessie walked straight up to a struggling Stan, placing her hand on his chest. \"Calm down, shifting won't get your mate back,\" she said. \"I NEED BETAS AND ABOVE IN THE BAR, NOW.\" There wasn't any noise, everyone from the lowest Omega to the Council members present followed her direction. \n\nI looked over at Stan, he needed to take control here. \"Where is safer for the ones not fighting, here or the Pack House?\" \n\nStan straightened up and called men over. \"Get the buses, take them back to the Pack House. Gentlemen, I need warriors to protect them. I want at least six warriors on the bus each load and two dozen at the house.\" The visiting Alphas offered up men immediately; normally the host Pack was responsible for security, but this wasn't a normal situation. We pushed tables together as mates said goodbye and were escorted to the buses. \n\nI stepped to the front, getting her back would depend on Jessie and I. \"I need four teams put together now, at least one Alpha in each, and one member of the St. Croix Pack for communications,\" I said. \"Form them up and send them out now, at least two vehicles, twenty miles in each direction. They can't have gotten too far in this time.\" They got busy, leaving the Council members, Stan, Victor and Esca with me. \"Stan, when was the last time you linked with Larissa?\" \n\n\"About an hour ago,\" he said. \"She was handling late deliveries for the ceremony, then she was going to change and come here.\" His eyes glazed, and a hurt look came over his face. \"They found Larry and Elizaveta; both were out, both hit with dart guns.\" \n\n\"Elizaveta again? Did she betray you too?\" Alpha Javier was about to lose it. \n\nStan held his hand out to the visiting Alpha. \"My men said they must have come in a delivery van, posing as catering staff. Larissa had dozens of deliveries she was managing tonight. Nobody saw them take her, we're checking cameras now. Larry and his mate were doing perimeter patrols, they weren't the ones who let them in.\" \n\nJessie smacked the table. \"It doesn't matter how it happened, focus on the problem in front of us first. We have to find her quickly, and this is how we are going to do it.\" Everyone listened to her as she laid out the plan; it was simple and direct. \n\nTen minutes later we were about five miles north of the club. I was being driven in an SUV with Alpha Esca and five warriors, half of which were armed. I was holding Larissa's engagement ring in my hand, relaxing and falling into the trance Jessie had taught me as she talked me through it over the mind link. Her car had driven south, the wedding band in her hand. Back at the Pack House, the Lunas were in the conference room, looking at a huge map of the Twin Cities area. \n\nWe reached an intersection and stopped, the driver relaying our position to everyone. I fell into the trance, focusing my magic on Larissa's residual essence on her ring, and was rewarded by a green glow around it with a line shooting out from it. We were pointed north, and it went left and behind me. The driver used his phone compass to get a bearing line, 255 degrees. Jessie's line was at 276. The Lunas plotted our locations and used the lines on the map to locate her. \"She's on Highway 36 near Indian Hills Golf Course,\" Beta Abigail linked. ",
        "\"All teams head west. Southern team, get on 94 and head for the 694 exit. Northern team, head west on Stillwater Road towards 694. Western team, get going but make sure you don't pass them. We're on our way on 36.\" \n\n\"We'll get on 94, love,\" Jessie sent me. \"Every time you cross a major road, send back a bearing line. We need to know if they turn off 36 anywhere.\" \n\nIt wasn't rocket science, but it worked. The lines kept crossing as they stayed on Highway 36 heading for St. Paul, and soon our Western team caught up. The cameras back at the Pack House were checked, and the Stone Creek Catering van was the one used. \"Got them in sight,\" Beta Peter sent through the link. \"Driving at 62 miles an hour in the right-hand lane, coming up on Hilton Trail.\" \n\n\"Stay back, don't spook them,\" I said. \"Southern team, where are you?\" \n\n\"Passing Radio Drive, a few minutes from 694.\" \n\n\"Southern team, head north and stop at Highway Ten. Northern team, catch up when you can. We can't run them off the road, we need to follow them. Box them in; Peter, if you can get one vehicle ahead of them without raising suspicions, do it.\" I looked at the exit signs and the map, we still had eight miles to go to catch up. \n\n\"They are exiting at Hilton, heading north.\" He followed them at a distance until they pulled into a large home, it was on a small island surrounded by wetlands and shallow ponds. He bailed out as the car kept going, shifting in the dark street to his wolf. The SUV continued before stopping a few blocks away in the quiet residential neighborhood. \n\n\"I've got eyes on them,\" Peter said. \"Four men, all armed, they were wearing chef coats and black pants. They have Luna Larissa, she's bound and unconscious, a bloody bandage on her left hand. They are carrying her into the garage through the side door.\" \n\nHe sent the address over the link, and Abigail forwarded satellite photos and blueprints of the house to everyone's phones. Three teams, including mine, had made it to the area and were unloading men and gear. \"Peter, what do you see?\" \n\n\"They went down to the basement. I don't see any external patrol, no signs they spotted our tail. One man is upstairs getting beer out of the fridge.\" This was good, but we didn't have time to wait until they were drunk. \"We're across the pond on the west side. How thick is the ice?\" \n\n\"A couple inches after that last cold snap, but I wouldn't walk on it in human form. Four paw drive is safer, and stay spread out,\" Peter said. \"I'm just behind the trash cans by the garage. South team, can you get to the treeline on the south side from the next road over? I saw lights there.\" \n\n\"Roger that, we're already moving that way, four wolves, four armed,\" Stan said. \n\n\"Northern team is with me,\" Alpha Esca said. \"We're taking the land bridge to the back of the property and will wait in the trees behind the deck.\" I relayed our moves to the others, then told them all to attack the back of the house when I took off. We picked windows to go through; luckily it was a walkout basement, so our team could go straight for our Luna. The other three sides of the house weren't so lucky, they would have to go in upstairs and come down the stairs. Wolves would go through the windows and take out any opposition, while the humans went for Larissa. We had to be fast or they might kill her. I shifted along with three others, leaving my clothes in a pile by the tree. \n\nA few minutes later, the house was surrounded by wolves and armed humans, all ready to do violence. \"Peter, we need you to drive straight up the driveway to the house, and follow us in. Prep the back for Larissa,\" I said. \"As soon as we see you make the turn, we go.\" \n\n\"Two minutes out,\" he said on the link. \n\nLuna Larissa's POV \n\nI woke slowly, the pain from my hand making me want to get away. When I couldn't move, my mind cleared quickly and I remembered the men and the dart. I cracked an eye open; I was on a bed, in a room with no windows, and a man was sitting in a chair looking at his phone. He had a gun on the table next to him, while I could feel the handcuffs on my wrists. \"Stan? Stan where are you?\" \n\n\"I'm coming for you, love. Where are you?\" I passed along what I could see and smell; in addition to the guy in the room, I could hear another next door. \"Sit tight, we'll be there in a minute.\" \n\nI started counting in my head, letting the seconds build. He hadn't noticed I was awake yet, and that was in my favor. I heard the Pack link come alive, it sounded like John. \"Five, four, three, two, one, GO GO GO!\" \n\nI heard windows smashing and men yelling, soon followed by growls and gunshots. The guard in my room jumped to his feet at the noise, reaching for his gun. \"Come cazzo ci hanno trovato? (How the fuck did they find us?)\" \n\nHe picked up his gun and swung it towards me, but I was already making my move. Shifting into my wolf form, my narrow paws quickly shook off the cuffs and I rolled to my feet. His eyes got wide and he hesitated, just enough for me to leap for his gun arm. He screamed as I bit down on his forearm, cracking his bones easily as I shook the gun free. A moment later, the door broke down and I heard a shot. He fell to the ground, his body laying partly on mine as I was squashed beneath him. \n\n\"Shit!\" The wolf shifted, pulling the dead weight off of me, while the warrior who shot him kicked the gun away. Beta John knelt next to me. \"Are you all right, Larissa? Can you shift?\" \n\n\"Ribs are broken,\" I sent back. I coughed, and tasted blood on my tongue. \n\n\"I've got you.\" He carefully picked me up in his arms, holding me under my stomach and in front of my legs. I leaned my head against his shoulder as he walked me out of the room and up the stairs. I saw two other men, their throats ripped out, and a warrior was getting his arm wrapped with a shirt after taking a shot. \"Your mate is waiting for you,\" he said as we reached the top of the stairs. \n\nHe handed me over, my skin tingling with his touch. \"Thank Luna you're alive,\" he told me as he turned for the waiting SUV. I was laid on a blanket in back and he crawled in next to me, and immediately the car was moving. \n\n\"How did you find me?\" \n\n\"The same way we found Luna Linnea... magic. This time Beta John could help, so we were able to get a fix on your location and follow you to the house.\" \n\nHe laid by my side, stroking my fur as I felt us turning onto the freeway again. I snuggled back into his chest. \"I never could have predicted this in a million years, my love.\" \n\n\"What do you mean?\" \n\nI laughed, but it turned into more of a cough and it took a minute to get the blood out of my throat. \"That little Jessie girl that Peter and Patrick brought home last summer, the one who was supposedly John's 'mate.' She didn't seem like much back then, did she? But look at her, look at THEM now. They could end up being the most powerful Alpha pair in the world.\" \n\n\"I think I'd be all right with that, Larissa. Her instincts are good, and we couldn't ask for a better ally.\" \n\nI let out a sigh. \"I'm just sorry her wedding got ruined.\" \n\nI could see him linking someone, then he started to laugh. \"What's going on?\" \n\n\"Jessie.\" He wiped a tear away. \"She said she's getting married at moonrise tonight no matter what, so if she has to lay out a dog bed in the front row for you, you're going to be there.\" \n\nI fought back the urge to laugh, it hurt too much. \"My finger? Did they take it?\" \n\nHe nodded. \"We're going straight to the clinic, Doc is waiting to reattach it. We will have to see how much function you regain, though.\" He looked out the window, I could feel his anger building. \"The Sicilian mafia is behind this, they took you to convince Jessie to repay them the money Yuri borrowed from them. They killed Yuri's mate and child when they could only come up with twenty million.\" \n\n\"Bastards. What are we going to do?\" \n\n\"We aren't going to do anything. The European Council and Packs, they are pissed off and now have proof the Mafia is targeting Alphas and their families. There is an exception in the laws regarding human interactions when a person or group is targeting us.\" \n\n\"They will kill them?\" He nodded. \"Good. I don't want our baby to be in danger again.\" \n\nI made a wolfy grin as his eyes got wide and he stared at me. \"You're...\" \n\n\"Pregnant. I talked to Jessie before she went to Europe, she did something with her magic, we did something on that Pack run last month, and ga-doooosh! Preggers!\" I licked his hand as his mouth hung open; in fifteen years of mated life, I had been pregnant three times and had lost each one in the first month. After five years, I couldn't even get pregnant any more. \n\n\"You shifted, love.\" \n\n\"I didn't want to shift, but staying alive was the most important thing, and it was still early enough our pup should be fine. Doc knows but I had the gag order on him, I was going to tell you after everyone left. You know if you found out, you'd practically have me on bedrest and I'd never get everything ready for the wedding.\" \n\nHe just laid behind me, running his hand over my fur as he snuggled close to me. \"I love you, Larissa Larsen,\" he said. Moving his hand down to my belly, he rested it there. \"And I love you too, little one.\" \n\nCh. 83 \n\nJessie's POV \n\nWerewolf ceremonies were traditionally held either at moonrise or when the moon was at the highest point in the sky, so it was a good thing it got dark about five in the afternoon in Minnesota at this time of year. I didn't want to be apart from John for another minute. \n\nBy the time everyone was home last night and Larissa was out of surgery, it was four in the morning. The other Lunas pitched in and finished the wedding preparations, while a frustrated wolf lay on her bed letting her paw and her ribs heal as her mate fed her bits of meat. Her frustration at being left out was clear in all the mental communications she sent her helpers. We were all happy when Doc said she was good to shift. \n\nI had been bathed, poked, plucked, arranged and painted until I reached a level of beauty I'd never find again. The dress was amazing, my bridesmaids were radiant, their mates and escorts handsome. I watched them walk out the door into the meeting hall to the sound of a pipe organ, and then it was my turn. \"Ready?\" \n\nI looked up at Alpha Stan, the man who had been my Alpha and friend all this time. \"I was born for this,\" I said with a smile. The music started, and the door opened, letting everyone see me as he led me onto the white fabric that covered the aisle. If I had looked, I would have seen the faces of hundreds of family, friends and well-wishers. The crowd was mostly werewolf, but it included some of my human friends from college and work, important politicians, and other guests. We would play this one straight. \n\nI didn't care, my eyes were on nothing but my John. \n\nHe looked amazing up there in his formal clothes. His hair neatly combed, his black wool jacket and matching black six-button waistcoat set off by a white dress shirt and black bowtie. The cufflinks he wore bore the emblem of the Moscow Pack, a gift from Alpha Javier. From the waist up, it looked like normal wedding clothing, but MY man was a Highlander, and Scotsmen do things a little differently from there on down. \n\nA dress sporran on a silver chain hung in front of where his zipper would normally be, holding down the formal kilt that spanned from his waist to his knees. The kilt was a Milne plaid, the traditional pattern of his Pack, in white with thick green stripes and thin red and blue lines. His tartan socks reached up to his knees, in black, with black boots. \n\nTonight, I'd finally find out just what was underneath a Scotsman's kilt. \n\nHis Alpha, Esca, was standing by him along with his groomsman, while my girls were lined up next to where I would be standing. I heard everyone stand as we started towards them, and when he smiled at me and looked at me like the most important thing in the world, the waterworks began. Stan discreetly handed me his handkerchief, and I was glad for the invention of waterproof mascara or I'd end up looking like a racoon. \n\n\"Who gives this woman to be married,\" Chair Robert Steele asked. (It was common for Alphas to get ordination in order to perform civil ceremonies in their Packs, and we were honored he would perform ours.) \n\n\"I do, on behalf of her late parents,\" Stan said. He kissed my cheek and placed my hand in John's, who drew me up next to him. The next few minutes were a blur as I focused on him. It was almost a shock when I realized my part was up. \n\n\"Do you, Jessica Ellen Donato, take John Seamus Pearson to be your lawfully wedded husband? To have and to hold, from this day forward, in sickness and in health, until death do you part?\" \n\nI looked into the eyes so full of love. \"I do.\" \n\n(On a cliffside villa in Sicily, as the moon sets on the water, dozens of wolves swarm onto the property and overwhelm the guards. Screams and gunshots are heard, and minutes later the wolves are running back out, backlit by the fires starting to consume the building that housed Santino Riini, his family and his men.) \n\n\"And do you, John Seamus Pearson, take Jessica Ellen Donato to be your lawfully wedded wife? To have and to hold, from this day forward, in sickness and in health, until death do you part?\" \n\nHe smiled and looked at me. \"I do.\" \n\n(In a three-story structure in the old part of Corleone, teams of men dressed in black and carrying silenced weapons land on the roof of the heavily fortified building. Ditching their parachutes, they blast into the stairwell and into the upper floor of the building while snipers take out the guards. Muffled booms are heard, and flashes of light and fire in the rooms follow them as they move to the ground. Men rush out the gates into the night, and residents know better than to look out their windows. Minutes later, roaring fire engulfs the historic mansion that was the home of Salvatore Riini, boss of the Sicilian mafia.) \n\n\"Then by the power vested in me, I hereby pronounce you husband and wife. You may kiss the bride.\" I practically jumped in his arms, his strong arms pulling me up and into his hard chest as we kissed deeply. I lost myself in him, in the feeling of the bond, at least until I felt a tap on my shoulder and backed off. The guests were highly amused by our display. \n\n(Black-dressed men pull an accountant out of his bed at gunpoint, his wife being held back by another. He is given a simple choice; transfer the money or die. He makes the transfers. The men leave, but ten minutes later the police arrive and seize his books and computers.) \n\n\"It is my honor to present to you, Mr. and Mrs. John Pearson,\" Robert said as he turned us towards the crowd, who stood and applauded us. \n\n(Tipped off by anonymous but detailed phone calls, police in the early morning hours raid over three dozen locations where wanted Mafia members are found, along with drugs, weapons and other contraband. In the first twenty-four hours of the nationwide sweep, over three hundred Mafia members are arrested. The National Police hail the operation as 'breaking the back of the Mafia in Sicily.') \n\nWe walk back up the aisle, basking in the well-wishes of our friends as I hold him. This whole ceremony satisfies the human side of me, the part that dreamed of a big wedding when I was a little girl. My wolf doesn't care, she got her mate months ago, she has twin pups in her belly, so all this is just in the way of her getting to the buffet table. We set up the reception line, and the photographer takes some pictures we can feed to the press being kept well away from us. \n\nAlpha Javier and Luna Abrianna congratulate us, and Javier turns his head to my ear when he gives me a hug. \"It's done,\" he whispers. I look over to John and let out a relieved sigh. \n\nThat danger was over. \n\nI leaned back towards him, my nude body catching the last of the evening rays while my toes dragged through the warm ocean water. It may have been winter back in Minnesota, but here in the Maldive Islands it was eighty degrees with a light wind. My back exploded with tingles as it touched John's chest as he settled behind me on the lounge in the shallow waters. \"It's so beautiful here,\" I told him as I watched a pod of dolphins playing in the distant surf. \n\n\"What I love about it is that I have just you; no distractions, no phone calls, and no clothes.\" The ten days here after our wedding had been amazing and passionate. The private island resort had every amenity you could ask for; fishing, sailing, jetskis, scuba diving, even deep-sea fishing upon request. We didn't have to do anything we didn't want to do; a chef came three times a day to prepare our meals, the bar was fully stocked, and fresh towels and sheets were provided daily. My favorite part of the villa was the huge circular bed, set in a three-sided porch overlooking the ocean waves. Most of our time had been spent making love there, or by the water. We both had deep tans now. \n\nOur wolves had even gotten into the action, taking advantage of the unspoiled wilderness lying beyond the beach. All the development on the ten square mile island was within a hundred yards of the ocean. \n\n\"We do have to go back tomorrow,\" I said with a sigh. \n\nHe tightened his arms around me as we watched the sun reach the horizon. \"We should have a toast,\" he said. \n\nI stood up, moving over to the sparkline cider on ice and caviar that had been set out for us. Pouring us each a glass, I could feel his eyes raking over me. \"See something you like,\" I teased. \n\n\"When I'm on my deathbed and my life flashes before me, I want to pause it on this moment right now,\" he said. I looked at him quizzically. \"Your body, backlit by the sunset in a tropical paradise, your belly swollen with our child, it's all I need to die a happy man.\" \n\n\"You smooth-talking Alpha, you,\" I said as I set the glasses and the tray of snacks by the lounge he was using. \"Get up, I want to see this too.\" \n\nHe smirked and got up, walking over to where I had been standing as I took his place on the lounge. I could see what he meant, his body was outlined perfectly, so strong, so beautiful. \"Hey, is that time right,\" I asked. \n\n\"What time?\" \n\n\"The sundial. It says it is five... wait now four... now two...\" I was leaning back, teasing myself with my fingers as his body reacted to mine. \"Looks like we've got all afternoon to make love now.\" \n\nI shrieked as he picked me up, setting me on the railing with his back to the ocean before he dropped to his knees and put his head where I needed it to be right now. My legs wrapped around his shoulders and my hands gripped the rails as he quickly got me going again. As much as I loved it, I wanted him inside me and right now. \n\nI pulled his head up with one hand, my eyes begging for him to take me. He stood and entered me fully in one motion, and I moaned with the sudden stretch from his hard cock. I needed it fast and hard, and he gave it to me. I broke on my first orgasm almost immediately, but he wasn't done with me. We'd made love so many times today already that he would have some staying power. \"Take me to bed, my big stud,\" I said as I clung to him. \n\n\"With pleasure, my mate,\" he said. He never pulled out, he just walked me to the bed and lowered us to the mattress where he continued to plunder my body to three more, before we finally fell asleep to the cool island breeze over us. ",
        "Ten Months Later, Moscow Pack Building \n\nI felt like a milking machine lately. \n\nIvan Brian Pearson, named after two of the men who had died protecting me, was latched on to my right breast and sucking hard. He was firstborn and Alpha heir and was eating like he wanted to be full grown by tomorrow. He was six pounds ten ounces at birth, and the four-month checkup had more than doubled that weight already. Loud, demanding and dominant, he was exactly what I expected in an Alpha Male baby. \n\nOn the left breast, Ekatarina Isla Pearson was sucking leisurely at my swollen nipple, content to be close to Mom. She had been named after my mother and John's mother and looked like a mini-Me with her dark hair and eyes. She had been just over five pounds at birth, and had doubled her weight as well, she just didn't eat like I was going to take it away. I leaned back in the slider chair, pillows arranged around me as I tried to get a little rest. The pair had just started sleeping through the night, and I hadn't caught up yet. \n\nJohn smiled at me as he finished working at his desk for the night. He came over and picked up Ekatarina, who had him wrapped around her tiny finger from the moment he had her in his arms. It wasn't just him, though; she was a happy baby who was loved by all. The nanny, a young woman named Talisa, was standing by to burp Ivan as he finished. \"The driver is waiting to take you to the Oblamov,\" John said as he set Ekatarina down. \"How many ladies are meeting you for tea?\" \n\n\"Luna Kaylee of the Big Horn Pack is bringing four with her, and Luna Margaux is bringing three from the Chamonix Pack in France,\" I replied. The gift of healing that I had could not be explained; I did not know how I did what I did, and John couldn't do it either. I just knew that I could let a little healing power flow into the lower abdomen of a shewolf who was having fertility issues, and the power just took care of things. It wasn't just the infertile, in the months since I started doing this, I had helped dozens and dozens of women with problems ranging from sterility to fertility to difficulty carrying to term. Even shewolves who were past their fertile times were sometimes granted one last heat. \n\nWhen the guy was infertile, I sent him to John. I don't know what he did or how, I don't need to know if he was touching their junk, but at least two babies were named after him now. \n\nAs word of my power spread among the Lunas, I got more and more requests for help that I just couldn't meet. I was pregnant, John and I were crash-learning Russian language and culture, and we had to prepare to take over a major Pack. There was no way I was making a world fertility tour. \n\nJohn suggested I bring them here instead. The center of Moscow, like most big cities, was a neutral site for werewolves. With the surrounding lands in the control of Alpha Javier, Alphas were willing once more to let their people visit, and that is how the High Teas began. The Oblamov Restaurant was a mansion with authentic cuisine and comfortable surroundings, perfect for ladies to sit and talk. Along the way, I would heal each of the women before they continued their tourism. It was close enough that I could do it in two hours, and we set a schedule for Monday afternoons at two. We were currently booked three months out. \n\nTalisa wheeled the babies out to the nursery for their nap while I got up and walked back to our bedroom to change. I loved dressing up and meeting all these ladies, becoming friends with many that I hoped to visit later on when things calmed down. John came in as I was finishing my makeup. \"Ready?\" \n\n\"Yes, I'll be back by five.\" \n\n\"Take your time, Jessie. The babies have the extra milk, and there is nothing on the schedule tonight. Have fun. I'll take care of everything.\" \n\n\"Thank you.\" I kissed him deeply, and as he walked back to his office I went to the elevator. Zeta's ears perked up, and she looked up from the dog bed in the outer office as her twin female pups climbed over her, wrestling with a play rope. \"Hi Zeta,\" I said as I scratched her ears and she licked my hand. Larry walked over, standing next to his mate as the babies came over and rolled onto their backs so I could scratch them. \"How are Mercy and Faith doing?\" \n\nHe picked up his daughter and laughed as she licked his cheek. \"Good. They like playing in the snow,\" he said. We had no idea what would happen with Elizaveta, now a security dog named Zeta, after her human had been taken away. She had no form other than her wolf now, and her babies developed like a wolf pup would. They were born as wolves, with their eyes closed, and only when they were three months old did they shift to human form while Larry was giving them a bath. The shifted seamlessly between the two now, depending on which parent was watching them. We hadn't let them leave the private Pack areas without being commanded to stay in one form, though. \n\nZeta was heartbroken when I left, and a month after we returned to Moscow I got a call from Larry. Zeta had bonded with me, looked to me as her Alpha, and needed to be in my Pack. I couldn't turn him down, but I was worried about how she would be received. The Pack was wary at first, but soon found there was no reason for it. Wolves weren't duplicitous or sneaky, they were loyal and loving and Zeta soon became a valued member again. Larry was now one of my bodyguards, so one or both were often with me depending on where we were going. \"Behave, you two,\" I said as I handed the rambunctious pups back to their mother. I brushed the dog hair off my jacket as Larry called the elevator. \n\nAs we waited, I looked at the portraits hanging on the wall. Every Alpha of the Moscow Pack, going back to 900 AD was on the wall except one. In Yevgheny's place was a portrait one of our Pack members made of my mother from her dancing days. I put my fingers on the frame and said a prayer for her before the doors opened. \n\nWe exited at the parking level and the driver was holding the door for me. As I got in, it struck me how events had repeated themselves. Twenty-one years ago, my mother had left the Alpha offices after being assured that everything would be taken care of, then traveled down that same elevator to her death. Now I was taking charge, and Yevgheny was just a bad memory. \n\nMom would be proud. \n\nThe End"
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "pack",
        "mates",
        "alpha",
        "luna",
        "mafia",
        "action",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/order-of-protection-ch-79-82"
}