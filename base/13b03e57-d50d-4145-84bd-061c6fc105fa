{
    "title": "Sex School: Practical Demonstration",
    "pages": [
        "It was a cold, rainy day outside. But, as always, the classroom was very warm.\n\n\"Could I have a male volunteer please?\"\n\nI stuck my hand up with every other of the fifteen males in the classroom. We always volunteered for one of Miss Winters' demonstrations. She was one of the youngest teachers we had. She was an exquisite, busty brunette with an air of real class about her. She always wore loose white blouses which fell open abundantly and tight black skirts. She craned her long neck to look for a candidate.\n\n\"Umm... Michael, Come on up.\" The rest of the guys let out groans of disappointment. \"Oh, you'll all get your chances,\" Miss Winters said, smiling.\n\nMichael walked to the front of the class, beaming.\n\n\"Stand up here,\" Miss Winters pointed at the front of her desk. \"Everyone get to a position where you can see; girls, especially, you'll want to take notes. You will be tested on this at the end of year.\"\n\nWe all got up and sat on our desks or brought our chairs near the front. The girls made sure they had a pen and paper handy.\n\n\"Okay, now, blow jobs are one of the most basic acts of foreplay, but you'd be surprised how often they are overlooked. Many women find the idea of them disagreeable, but there's really nothing to be afraid of; they can actually be very enjoyable for both partners. They can be carried out to completion, orgasm, or used to take the male member to full readiness in a very short time. Today though, we'll just be doing straight, full blow jobs. \"\n\nAs the girls scribbled hasty notes on these points, Miss Winters removed her glasses and unfastened her dark hair, letting it flow down her back.\n\n\"Of course the first thing to do is to arouse your partner. I see that Michael is already ahead of me at the moment...\" the class tittered, a bulge was showing in Michael's trousers, \"but I'll show you anyway. We've done this already in class but it doesn't hurt to revise. Girls, watch what I do with my breasts.\"\n\nMiss Winters turned to Michael and moved him so they were both in profile to us. She gazed into his eyes and brought a hand up to his face. Michael just stood there as she ran her hands through his hair.\n\nShe took a step into him, pressing her body against his, her breasts thrust forward, into him. Her hands now ran up and down his body as his hands grasped her hips. Technically, there was supposed to be contact with the teachers only when and how instructed. He hadn't been instructed to grab her waist, but she didn't mind. She was cool like that. Her hands paused at his butt and squeezed it. Her head moved towards his and they kissed long and hard. Her chest was constantly pressing into his, moving in slight circles.\n\nI felt my mouth go dry with envy. I hadn't been called up as a volunteer yet and it annoyed me. So far, I'd been passed over for passionate kissing, heavy petting, suggestive dancing, sensual undressing, nipple sucking, light fingering, hand jobs male, and hand jobs female with Miss Winters. I knew the best demonstrations happened nearer the end of year and that each male student would be picked, but I still would've wanted to be up where Michael was now.\n\nShe pulled out of Michael's kiss and turned her head to address the class, still embracing him. \"I'm going to place Michael's hands on my butt because it is sometimes important for a male to have tactile contact with an erogenous zone if he is to become fully aroused. The man doesn't have to be aroused, it can be fun to have a man go from flaccid to turgid in your mouth, but I can tell you that we're quite passed that with Michael now.\" There was another snicker from the class.\n\nMiss Winters moved her hand up to the top button of her blouse. \"I'm also going to undo my blouse and bra. This is a good idea when you're giving blowjobs for reasons you'll see in a moment.\"\n\nShe undid the last button and pulled the ends of her shirt apart, revealing a large, lacy bra. \"Michael, if you would do the honours, like we did in class...\" Michael moved his hands up and undid the fastener at the front, letting the cups fall away. \n\n\"Stimulate the nipples, please.\" He rubbed his palms lightly over her large nipples, playing with them and making them hard.\n\n\"Thank you, you can put your hands on my butt again,\" she said, and kissed him deeply again, for a couple seconds.\n\n\"Okay, now, girls, pay attention. You'll know pretty quickly when your man is aroused, for obvious reasons, but to make sure about the hardness, there is a good way to check. I like to slide my hand down the man's chest, like so, and slip it into his trousers and pants, like so.\" Her hand disappeared into Michael's trousers and started moving around. Michael looked like he was in heaven.\n\n\"Pull it upwards and give it a good squeeze.\" She did so, causing Michael to shift his weight. \"Michael has been ready for some time now, however, so let's put him out of his misery, shall we?\"\n\nShe pulled out of his grip and bent down in front of him. \"Make sure you're in a comfortable position, kneeling in front of your man as you unzip him like so. Incidentally, it's no bad thing to make a man wait until you get to this point, just make sure he doesn't lose interest. Ah, perfect...\" Michael's cock sprang out of his boxers, almost hitting Miss Winters' cheek.\n\n\"Now, lower your head to just below his cock,\" Miss Winters explained, \"You'll have to pull the cock down, into your throat, but that's okay, it won't break off. Hold it at the base.\" Miss Winters took Michael's cock in her hand and brought the tip into position of her mouth. The girls scribbled furiously, some drew quick diagrams.\n\n\"This is so you can look up into his eyes,\" she elaborated \"eye contact is vital when you're starting out or with a new partner. That's how you can tell how effective you're being.\"\n\nMiss Winters paused to let the girls catch up with their notes.\n\n\"Now, without getting frightened, and remembering what we said about hand jobs, pull back the foreskin of the penis to reveal the head. There, like so. That's really quite lovely, Michael.\" He blushed.\n\nMiss Winters paused to lick her lips.\n\n\"You can kiss the head a few times if you like and you have the time. I recommend you do so today, just to get familiar to the feel of it on your lips as well as it's taste.\" Her full, red lips pursed and she gave Michael's head a few sensitive kisses.\n\n\"Try a kiss with a tongue flick as well. Done right, it can drive a man crazy.\" Michael's face attested to this as his eyes rolled back in their sockets.\n\n\"Now, it's important not to go too quickly all at once. Just lick around the corona first. Make sure it's all coated, like this...\" she demonstrated it. All of us guys, and probably a lot of the girls, stared enviously at her long tongue. One of Michael's hands gripped the edge of the table with white knuckles.\n\n\"It's a good idea to use some of the man's precum as well. Squeeze it up from the base, like we did in class, and move it around the head with your tongue.\" Her hand moved up her student's shaft, causing the head to pulsate and go a deeper purple. A few drops of precum spilled out the top. Miss Winters was quick to lick them up and around the head masterfully.\n\n\"Once that's done, take the entire head in your mouth.\" She did this, causing Michael to gasp. She played with it, sucking it in and letting it out again for a couple minutes. Then she pulled back to address the class once more.\n\n\"Make sure you still make good use of your tongue,\" she said. \"Also, don't be afraid to give it a couple soft bites. Some men really like this. Be careful though,\" she emphasised. \"Very careful, that is one of the man's most sensitive points.\"\n\n\"At this point, however, the main thing is to be creative. Use your hands. Try scraping your fingernails along his balls like this. I won't demonstrate it now, and I don't want you to do this during the practical, but also play with his anus if you can reach it. Just run your hands up and down his legs if you've got nothing else to do with them.\n\n\"Now, I'm going to suck off Michael here all the way. For today, we're only going to let the man shoot on your face, a lot of men like that. In other classes and in the study groups, we'll try letting him come in your mouth but I don't want to complicate things here today. Your tops should already be open at this point so don't worry about cum dripping down. Men like to see their semen on breasts as well.\n\n\"Now, who can remember how you can tell if a man is going to cum? Who can tell me? Yes, Margot.\"\n\n\"His balls get tight\"\n\n\"Yes, that's right. Or rather, his scrotum tenses up. Watch for that in Michael, that's when I'm going to pull him out. Okay, here I go.\"\n\nShe took Michael in her mouth again and worked him for a minute or so. Poor Michael held on as long as he could but I knew exhibitionism turned him on and Miss Winters was obviously very good so it wasn't long before his pouch tightened and Miss Winters pulled her head back.\n\n\"Now, pay quick attention. Make sure your head is directly in the line of fire, a couple inches away, and masturbate him,\" she said, rubbing his slick shaft.\n\nA second later, Michael blew his wad all over his teacher. A stream hit her right in the cheek, sending a couple of white pearls into her dark hair. The next stream hit her close to the eye and another on the chin. \n\n\"Keep going, even though he's shot it, there is more. Remember what we did on hand jobs. You'll want to get your face or breasts right under it this time though,\" she said, thrusting her breasts forward. White cum came spilling out across her nipples, some of it landed on her tight skirt.\n\n\"Remember, even now, he's not done. Finish by milking him like I've showed you.\" She did, letting the last few drops fall across her chest.\n\n\"And I'm just going to finish by giving his head one last suck and... that's it. Thank you Michael.\"\n\nMichael beamed as he zipped up and went back to his seat, garnering envious looks from his friends. Miss Winters stood up and leaned on the desk. Her face was still covered in cum. Some of it dropped down to her naked breasts. \n\n\"I suggest each of the girls try licking the cum off another girl. It's a lot of fun and it will give you a taste for cum when you start to learn how to swallow. Who wants to try some of Michael?\" Hands shot up rapidly. \"Yes, Margot again, come on up.\"\n\nMargot, a very slim girl with chestnut hair, went up to Miss Winters. \"Start at the bottom and work you way up,\" The teacher suggested. The student bent over, gripped the teacher's hips, and started to lick the cum in upward strokes of her tongue, beginning with the belly.\n\nMiss Winters closed her eyes as young Margot slurped and smacked her way up to her breasts, spending an inordinate amount of time on the nipples. The rest of us didn't mind though. Occasionally a drop would fall from Miss Winter's chin onto Margot's face.\n\n\nMargot finished with Miss Winter's face and finished by giving her a kiss on the lips. Miss Winter paused to lick the few drops of cum off of Margot's face and then turned to address the class again.\n\n\"Okay, so, you've got about... twenty minutes left. Split up into pairs and try it. Margot, why don't you go with Michael. Give him a couple minutes to recuperate though.\"\n\nThe class began the noisy task of pairing up. \"Oh, one more thing!\" Miss Winters said, raising her voice above the class. \"Guys, keep your hands off of the girl's heads. Let them go at their own pace. And girls, do not, I repeat, do NOT try to deep throat yet. I don't care what you might have learned elsewhere, or heard from older students, but you are not ready for that yet. Okay? Go ahead.\"\n\nMy eyes immediately looked around the classroom for Hannah. She was the hottest girl I knew but so far I had never found the nerve to approach her for a practical. I saw her on the other side of the classroom, sitting with her friends. I tried to move, but my muscles went like lead when I thought of her licking me.\n\nI tried to rally my forces, but I was too late again. My heart sunk as I saw Nathan approach her. Nathan almost always paired up with her. She took his hand and went to the back of the classroom with her. I'd have to keep an eye on them. I'd get to see her breasts again.\n\nI had the biggest crush on Hannah and couldn't do a thing about it. I got paralysed whenever she was near. In my eyes she was perfect. She was small, petite, with short blonde hair and elvish features. She just drove me crazy with her tight little body, especially her little butt. I lusted after her so much that she filled all my dreams. And even in those dreams I couldn't get my hands on her. The traitors.\n\nEmily was the one I paired up with. I knew she had a crush on me and that was handy because it saved me from embarrassing occasions like when there were too few girls in the class. She was fit enough, slim, long red hair down to her back and even longer legs, but kind of plain looking in the face. She really knew how to use her lips though, and that would be good for this practical.\n\nThere were an equal number of males to females so Miss Winters paced the classroom, breasts bared, commenting on technique and giving girls pointers.\n\nEmily and I were kissing as she walked by us. My hands were on her breasts (she had been growing in the past few weeks, I noticed) and her hands were deep in my trousers. We had been kissing for some time and I noticed we were behind most of the others in the class. Emily was studious, but not very adventurous and we had been instructed not to rush the girls. \n\n\"Good, nice hip work Emily,\" she commented. \"Keep your butt in close though.\" I felt Emily's waist push into me some more and knew that Miss Winters had her hands on my partner's ass. She loved feeling the female students as much as the male ones and took every opportunity to do so. \"Try to speed it up though, there's about ten minutes left.\" And then she moved on.\n\nEmily pulled out of my mouth and got down on her knees, unzipping me. Then she looked behind me at the table I was leaning on and consulted her notes. That was one of the things that drove me nuts about her. She was always checking her notes, I felt myself go a little less hard.\n\nI saw Miss Winters kneel next to a girl who was having trouble keeping her man's cock up and in her mouth. I noted without surprise that it was Nick. He probably did it on purpose so that Miss Winters would come over. I was annoyed at him firstly for his control and secondly because it obviously seemed to work. It didn't look like he'd have her lips on him though, she was just pointing instructions. That was a small consolation however.\n\nI looked over to Hannah and her partner. She already had Nathan's cock in her mouth, between those thin, firm lips. I saw her small, pert breasts jiggling ever so slightly as she worked the cock. I felt my own twitch.\n\nThen I felt Emily's hands on it and I looked down at her. She gripped me at my base, just like she had been showed, and started to kiss it.\n\nI sighed when she started to lick it and lent back on the table. Looking across the room, I saw that Nathan was already ejaculating on Hannah's face. Her eyes were closed in a heavenly smile as the white liquid streamed on her face and hair, some of it landing on those beautiful breasts. I watched her thin hands milk Nathan's fat little cock, dripping more on her chest. Once she was sure she had all of it, she gave the cock one last lick and looked for one of her friends to lick and be licked by.\n\n\"Okay, wrap it up people,\" Miss Winters was saying.\n\nMy mind was snapped back to attention by Emily's nails on my scrotum. Man, that really worked! She was doing some interesting things with her tongue too. Even though she was pretty slow and deliberate, you could just tell that she was one of the ones that was going to do the best on her exams. She would be up all night the night before studying and ace it the next morning.\n\nI looked around the room. Most of the girls were finishing licking each other. More than one pair were grasping each other in passionate kisses.\n\nHannah was arching back, arms supporting her as one of her friends licked the last of the semen from off her belly. Her friend kept the cum in her mouth and shifted forward to kiss Hannah. She shot cum into her mouth which Hannah must not have been expecting because she gagged slightly and giggled as it rolled down her chin and back onto her breast. Hannah's nipples were sticking straight up as they caught the cum. Her friend, Annie was her name, smiled and bent over to lick it back up.\n\nI began to shoot my load at this display of tenderness. Emily barely had time to pull out before my cum was shooting across her face. She milked me onto her breasts and looked around for someone to lick it off of her. I looked up too and saw that everyone else was starting to leave. The boys had zipped up and were running out to get to the lunch line as soon as possible and the girls were following close behind, buttoning up their blouses. There was no one else for Emily to lick and she looked very disappointed. Serves her right for being slow, I thought.\n\nEmily held her arm up and called out \"Miss!\"\n\nMiss Winters was at the front of the class, looking over her next lesson plan, subconsciously buttoning her blouse up. She looked up at the sound of Emily's pleading voice.\n\n\"Yes?\"\n\n\"There's no one left to lick.\"\n\n\"Oh.\" She looked to the door at which the last of the students were filing out. \"Okay,\" she said, rising and starting to unbutton her blouse again. \"Lie back. I'll lick it up and shoot it back into your mouth okay?\"\n\nEmily brightened at this, of course, and laid back immediately, spreading her legs.\n\nMiss Winters kneeled between those longs legs, pulling her blouse open once more. She must have been cold or aroused because her nipples looked like bullets. She glanced absently at my still hard cock. There was a small drop of cum still on the head.\n\n\"Did you give him one last suck?\" she asked. Emily tensed immediately, horrified that she had forgotten the last step of the process and that the teacher had found her out.\n\n\"Never mind, I'll do it...\" Her hand grasped my cock and I immediately started getting harder. I could smell her perfume wafting up towards me. Her red, delicious lips parted and I saw her long tongue protrude forth to catch the cum. Her big, dark eyes looked up to me as she took my head in her mouth. I started to stiffen again, which she obviously felt because her lips curled at the corners in a knowing smile.\n\nShe ran her lovely hand up my shaft, pressing her finger into the semen tract, forcing what was left into her mouth. \"Mmm, you left some good stuff,\" she said, addressing Emily, but looking at me. \"The last drops are always the sweetest,\" she said with a wink. \n\nThen she turned her attentions to Emily. \"Okay, let's hope it hasn't gone too cold.\" She bent down and started licking my partner's belly button where a small well of cum had gathered. She made her way up to just under Emily's breasts and started on another long line that went just over Emily's nipple. I split my time equally between looking at Miss Winters' breasts, pressing against Emily's young flesh, her lovely mouth and tongue, playing against her heaving body, and also her lovely butt and wide hips. Even though I had just cum, and had literally not touched my cock all day, I was as hard as ever and twitching in the air, my jaw was around my feet.\n\nThe lips and tongue were now playing over Emily's face. I watched the older, mature breasts and nipples press into the young, pert ones, breathless. Emily never appeared so attractive to me as when she had Miss Winters licking my cum off of her. I would have to give her an especial thank you later on. \n\nMiss Winters' lips found Emily's and spread them. I saw a little cum drip from Emily's lips as her throat made swallowing motions. I saw Miss Winters' hips lower and press into those of her young student, rubbing ever so slightly. They kept their mouths together for some time after Emily's swallowing motions stopped.",
        "Then the teacher pulled out of Emily's mouth. They lie there, looking into each other's eyes, smiling faintly for a few seconds, the world lost around them. Even I had forgotten I was there.\n\n\"How'd it taste?\"\n\n\"Good.\"\n\n\"Good.\" Another broad smile, \"Okay, you're done,\" announced Miss Winters as she sat on her haunches. Emily lay there, buttoning her school shirt up. Miss Winters waited until she had finished and then stood up, helping her to her feet.\n\nMy teacher then looked at me. I had forgotten to move, still slightly stunned and very turned on at the latest display.\n\n\"Oh, look at you,\" she said. \"All turned on and nowhere to go.\" I looked at her hopefully. She conceded \"Well, we can't leave you like that, you'd just go and whack off in the toilets, wasting all that great cum. Go ahead to lunch, Emily.\"\n\nI couldn't believe my luck. I guess it pays sometimes to be the slowest in the class. Miss Winters kneeled in front of me, taking my cock in hand. Emily had finished packing and was staring jealously at me as she went through the door. I swivelled my attention back to Miss Winters. She was licking her lips and staring at my member.\n\n\"Hmm, this is a nice cock you've got here,\" she commented, running her hand up it. \"Who do you have for personal development class?\"\n\n\"Mr Greenway,\" I answered.\n\n\"Oh, yes, he's quite good. You keep doing those exercise and you'll have something to be really proud of in a couple years.\" My cock leapt at this encouragement.\n\nShe was about to take me into her mouth when she pulled back. \"Oh, by the way...\" she said, staring up at me, \"would you mind doing me a favour?\"\n\n\"Okay.\"\n\n\"Could you rub my breasts? That's how I get most turned on.\"\n\n\"Umm. Sure.\"\n\n\"Thanks.\" She smiled and I felt her heavenly lips on me. I closed my eyes for a second, savouring the experience, and then opened them again, bending over. My hands weighed her busty globes for a few seconds as she worked her mouth in the most incredible way. I gave her breasts a couple soft but firm squeezes like we had been taught in heavy petting class. She moaned appreciatively and sucked hard. I found her nipples and rolled them between my fingers.\n\nI could feel I was almost ready, but I wanted to try to prolong it as far as I could. The fact that I had just cum helped with that, but I couldn't hold off very long with her, I could tell. I loved mashing those firm tits together that I had so long fantasised about, but it wasn't long before I felt her hand on my belly, pushing my back. I let go and leaned back against the table.\n\nI was just about ready to come but Miss Winters hadn't pulled away yet. She smiled up at me, as best she could, and winked, indicating she wanted me to cum in her mouth. I felt myself throbbing and I let go. Miss Winters closed her eyes as I shot into the back of her throat. I seemed to cum forever. So much so, in fact, that some of it dripped out of her mouth.\n\nShe milked me for a while and I pleasured greatly at the feel of her strong hands on my stiff cock. Then she stood up.\n\n\"Wow, thanks,\" I said, gasping.\n\n\"No problem. Do you want to finish this up?\" She indicated a line of cum that fell down just to the inside of her right breast.\n\n\"Sh-sure...\" I stuttered, and hastily bent down. I licked my own cum up off her, brushing my cheek against a very stiff nipple.\n\nI stood in front of her. She didn't move as I zipped myself up and got my backpack.\n\n\"I notice you keep looking at Hannah,\" she said.\n\n\"Uh, yeah.\"\n\nShe leaned into me suddenly and stuck her tongue into my mouth. The kiss lasted for just a couple seconds, but my mind recorded it all in slow motion.\n\nShe pulled out of my lips and said \"you need to be bold. Women like that.\" She smiled encouragingly and I headed for the door. I looked back to see her sit back down at the desk. \n\nThe door shut behind me. I looked through the little glass window and saw Miss Winters still sitting there. Her legs were spread and she was obviously masturbating with her right hand while her left groped at her breast. She looked up, saw me in the window, and waved, smiling.\n\nI smiled back and turned away.\n\n\"Aren't you the lucky fucker?\"\n\n\"Oh, hi Emily\"\n\n\"I saw the whole thing. What did she say to you afterwards?\"\n\n\"Oh, nothing. Just to make sure that I study.\"\n\n\"Oh. Well, let's go get lunch at least...\"\n\nI followed behind her, deep in thought. "
    ],
    "authorname": "Quixote",
    "tags": [
        "swallowing motions",
        "margot face",
        "suck michael",
        "man aroused",
        "class miss",
        "give couple",
        "stream hit",
        "tongue playing",
        "thing make",
        "heavy petting"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/sex-school-practical-demonstration"
}