{
    "title": "Her Second Job Ch. 06",
    "pages": [
        "This is the sixth story in this series. I should stop but I'm fascinated with Denise Hines and her friends. I hope you enjoy them. This story will make much more sense if you've already read Her Second Job chapters 1 -5.\n\nWhile the series was inspired by things which really happened many years ago, this story is complete fiction. Any similarities between any character in this story and any real person are coincidental and unintended. Comments on this story, both favorable and unfavorable, are always welcome. Thank you for reading.\n\n________________\n\nI need to depart a little from chronological sequence. The first weekend Denise and I did not dance under our new \"hours\" was the second weekend in February. We still went to the bar that Friday because we wanted to see Annie Gentry's debut as a nude dancer. Annie had persuaded her boyfriend Colin to dance with her. Because they'd not had a lot of time to prepare, Danielle had them doing the first dance she had put together for Denise and me. This was the first time I had been in the barroom during dancing since the very first time I'd visited the bar. My first visit was when I learned that Denise, my co-worker at the law firm, had a second job as a nude dancer. That discovery took my life to a much better place.\n\nI have a habit of rank ordering: best, second best, etc. I had thought that Alicia was the second most beautiful woman working at the bar. That opinion changed when I saw Annie dance in the nude. She wasn't as beautiful as Denise, but she was a very solid second. I'd known Annie for almost a year. I knew she had a pretty face and a good body. Taking off her clothes, however, transformed her. Nude on the stage, Annie projected a confidence and sexiness that I hadn't seen before.\n\nAnnie's dancing was fluid, graceful, and as erotic as Liquor Control regs allowed. You couldn't take your eyes off her. Annie's boyfriend Colin was a different matter. Colin was an amateur bodybuilder and was quite well-endowed. Standing still, he was an angular, hyper-masculine image that contrasted sharply with Annie's alluring curves. However, Colin danced like it was the last thing he wanted to do. I sensed that Colin was only dancing because Annie insisted, and he wasn't happy about it.\n\nDenise and I went backstage after the midnight show to congratulate Annie and Colin. As we walked into the backstage room, Annie, looking as gleeful as if she's just won the Mega Millions lottery, put her hands on her bare hips and yelled, \"What are you two doing here dressed? If you want to be back here, you have to be naked!\" Denise and I were fine with that.\n\nAfter we'd stripped off, we went up to Annie to congratulate her on her nude debut. Annie gave each of us a hug. The nude hug from Annie was almost as nice as one from Denise especially since Annie pressed her body against mine and my dickhead rubbed in her red pubic hair. (We'd won free drinks in Kurt's promotion, correctly guessing that Annie was a natural redhead).\n\nWhen Annie let go, I asked, \"Where's Colin?\" I looked around and didn't see him.\n\nAnnie's face showed some frustration. \"Colin decided he doesn't like being nude in front of strangers. We promised Danielle and Kurt we'd dance tonight and tomorrow. When we came backstage after our second dance, Colin informed me that we are not dancing tomorrow night. I told him I've known Danielle and Kurt for three years and can't let them down. Colin got pissed and left.\"\n\n\"What about you Annie?\" Denise asked. \"How do you feel about tonight?\"\n\nAnnie's face lit up again. \"Denise, I loved it!\" she said. \"We're taught from the time we're little girls that no one should see your bare tits, bare ass, or your cunt. I showed them all off tonight and it was the best experience of my life. If Mr. Barbell hadn't stormed out, he'd have gotten the fuck of his life right here!\"\n\n\"Did you ride with him?\" I asked.\n\n\"Yeah,\" Annie answered. \"I'll catch a ride with someone.\" What an asshole, I thought, going off and leaving Annie stranded. \"Where do you live?\" I asked. Annie named a community that wasn't too far out of our way home. I said we could drive her home and she agreed.\n\nWe stayed about an hour, sharing after work drinks with Annie, Alicia, Danielle, Jessie, Nadine, Kurt, and Brie. Only Kurt wore clothes. When Annie bartended, she always joined us for after closing drinks, but she always stayed dressed. Her replacement, Brie, preferred to get naked like us. Everyone was happy about welcoming someone new into our circle of nude dancers.\n\nAnnie lived in a community about a half hour drive from the bar, on the imaginary line where the suburbs ended and rural began. She had us turn into a driveway and go past a two-story frame house to what looked like a large garage. Annie said, \"I'm sorry but I'm still pumped. You guys want to come in for a drink?\" Denise and I weren't in any hurry.\n\nAnnie let us in and said, \"I've got to take my clothes off. Feel free to join me if you like.\" Once all three of us were nude, Annie extended her arms and said, jokingly, \"Welcome to my mansion.\" The large doors next to the door we'd entered showed that the building had been a garage. It was now a living space with a refrigerator, range, and sink on one side of the room; a bed on the other; and various furniture in between. \"The couple who lives in the house needed some extra money, \"Annie said. \"They thought they could fix this up and rent it out. They put a lot of effort and expense into the conversion, but no one would rent it. They're friends of mine so, when my apartment lease expired, I agreed to rent this.\"\n\nA minute later, Annie giggled. \"I am such a wussy,\" she said.\n\n\"How so?\" Denise asked.\n\n\"Bill and Mary,\" Annie said, \"the couple in the house that I rent from? I didn't invite them to watch me dance tonight. I couldn't. I've known them both since high school.\"\n\n\"Perfectly understandable,\" Denise said.\n\n\"Of course,\" Annie said, \"I didn't invite anyone from work either.\"\n\n\"Where do you work,\" I asked, \"besides the bar?\"\n\n\"I work for the University Library,\" Annie said. \"I'm an internet researcher. If faculty or grad students have things they want found online, I do it for them. I'm pretty good at finding things. You'd be amazed what is online!\"\n\nChanging the subject, Denise said, \"I hope you can work things out with Colin.\"\n\n\"Colin's history,\" Annie said. \"It wasn't that serious anyway.\"\n\n\"He looked interesting,\" Denise said.\n\n\"That's what I thought at first,\" Annie said. \"You saw that gorgeous piece of manhood hanging between his legs? He has no clue how to use it and doesn't want to learn. I know I'm shallow, but I need a boyfriend who gives me great orgasms.\"\n\n\"That's not shallow,\" Denise said, \"great orgasms are essential.\" Denise reached out and patted my dick proprietarily. You understand another reason I love her?\n\n\"Speaking of orgasms,\" Annie said, \"I'm hornier than hell.\" She stood, walked across the room, got something from a drawer, came back, and sat down opposite us. She spread her legs and began playing a large dildo over the outside of her lips. \"I've already been naughty tonight,\" she said. \"Do you mind if I get naughtier?\"\n\n\"Go ahead,\" I said. \"It's always nice to see a woman get happy.\"\n\n\"Well,\" Annie said, \"this won't get me as happy as a properly used dick would, but I will get off this way.\" She began working the dildo inside herself, slowly at first. \"I've never done this in front of anyone before,\" she said.\n\n\"Don't talk,\" Denise said, \"just concentrate on yourself.\"\n\nAnnie smiled. She closed her eyes and began working the dildo faster and deeper. Her nipples got beautifully hard. She leaned her head back, but we could still see her getting flush. Her breathing accelerated and she started squirming her ass in the chair. Like Denise, Annie was a beautiful woman who became more beautiful while having sex.\n\nWatching Annie masturbate herself was arousing. Denise put a hand around my dick and began gently stroking me. I put a hand between her legs. She was already moist. I gently fingered her. We wanted to stimulate each other, but not to the point that we missed seeing Annie come. \n\nAnnie didn't rush, which was good. Watching her do herself was the most erotic thing I'd seen not involving Denise. A look at Denise's face told me she was enjoying it too. Finally, Annie began working the dildo very fast and very hard. She went \"ar, ar\" and arched her back. She kept the dildo going until she made an \"arm ah\" sound. \n\nAfter a moment, Annie took a deep breath, opened her eyes, and looked at us. She smiled. \"I've never come in front of anyone other than the guy fucking me before,\" she said.\n\n\"Annie, that was beautiful,\" Denise said. Denise turned to me a gestured towards the floor. We'd reached the point that I often understood what she was thinking without her saying anything. I lay on the floor on my back. Denise got above me on her hands and knees, with her head over my dick. She lowered herself down and took me in her mouth while I began to eat her. Watching Annie and playing with each other, we were already very stimulated. It wasn't too long before Denise and I both came.\n\nDenise and I stood up. Annie came to us and looked at us both closely. \"I love you two,\" she said earnestly. She paused, laughed, and said, \"That floor is none too clean. Denise, don't you think we ought to shower Harry off?\"\n\n\"Of course,\" Denise answered.\n\nThe converted garage had a surprisingly large bathroom and a shower that accommodated the three of us comfortably. Denise and Annie washed me off. Annie took particular care washing my dick and balls while Denise watched approvingly. When the women had finished with me, Denise told me, \"We'll take care of each other.\" I stood back and watched as Denise and Annie washed each other's tits and asses. Their hands went between each other's legs and they began to kiss. It was intensely erotic watching the love of my life masturbate and be masturbated by another beautiful woman while I stood naked a few inches away.\n\nDenise and Annie got each other off with their hands. I can't really express how great it was to watch. We got out of the shower and toweled off. Then Annie hesitantly said, \"Uh, if you guys don't have to be home, you could, well, stay here tonight.\" Denise and I accepted that invitation gladly.\n\nAnnie's bed wasn't big, but we slept comfortably with Annie snuggled between Denise and me. In the morning, I made love to Denise doggie-style while she ate Annie. We finally left Annie's late that Sunday morning.\n\nIn the car, Denise said, with a laugh, \"I guess we need to talk again. We had this conversation once about Lena.\"\n\n\"Lena's not available to us anymore,\" I said. After her divorce from Cameron became final, Lena had sold the Shawnee Hills house and moved to North Carolina to be closer to Denise's brother Dave. Despite the age difference, they seemed to be getting serious.\n\n\"That raises the question,\" Denise said, \"do we substitute Annie for Lena as the person we can both have sex with besides each other.\"\n\n\"Do you want to?\" I asked.\n\n\"What do you think?\" Denise asked.\n\n\"I think Annie's almost as desirable as you are,\" I said.\n\n\"So, you're ok with her?\" Denise asked.\n\n\"As long as everything we do with her, we do together,\" I answered.\n\n\"Of course,\" Denise said.\n\nWith Colin backing out, Annie had no dance partner. Danielle recruited a male dancer she knew to dance nude with Annie. That lasted one weekend. We weren't there, but Annie and Danielle both said there was no chemistry between Annie and the man. Annie danced solo on the weekends when Denise and I weren't dancing. Annie wanted to dance every weekend. While she liked bartending, the tips from dancing made her a lot more money than bartending. Danielle's niece Brie was happy to fill in for Annie behind the bar permanently. \n\nDanielle decided that Annie, Denise, and I should dance together at least once a night on the weekends when Denise and I danced. This meant the three of us had to go to Danielle's and Kurt's home to learn and practice the new dances Danielle had constructed. As I've mentioned before, Danielle believed that you practice as you perform; in our case nude. At the first session, Danielle lectured us on the need to be completely comfortable touching all parts of each other's bodies. She had us do \"exercises\" in which I caressed Annie's breasts, ass, and inner thighs while Annie handled my ass, dick, and balls. We'd touched each other before and were happy to do it again.\n\n\"Why do I think you've done something like this before?\" Danielle asked. \n\nSmiling, Annie answered, \"We have.\"\n\n\"But, I thought,\" Danielle said as she looked between me and Denise.\n\nDenise responded, \"Harry and I love each other very much, and we are intimate friends with Annie.\" As Denise said that, she walked behind Annie, pressed herself into Annie's back, and cupped her hands over Annie's breasts.\n\nDanielle looked at the three of us for a moment before she smiled and said, \"I see. That will make this easier.\" Danielle put together a couple of new dances. One was very high energy and included a lot of Denise and Annie together. That dance ended with me squatting at center stage while Denise bent over my right shoulder and Annie bent over my left. I then stood up with one woman over each shoulder and displayed their asses to the audience. Fortunately, Denise and Annie together weighed less than 300 pounds and I could still, then, squat 300 easily. The other dance, to an old rock classic, was slower and had all three of us touching a lot. That dance ended with the three of us facing each other in a tight circle with one hand on each of the other dancer's asses. Danielle expended a lot of effort to make us look \"artistic.\" I think that effort was lost of most in our audiences. I think almost everyone came to the bar to see bare tits, asses, and pussies; and, for maybe a few people, to see a bare dick.\n\nWinter had become spring and then summer. In Denise's and my first calendar year working for Vanessa, we'd beaten Vanessa's profit projection for our office by\n\n$ 100,000, which earned an extra $ 35,000 for each of us. We were even busier in the second year and, coupled with two weekends a month dancing, things were hectic. There had not been any kayak trips, we didn't have the time.\n\nAnnie called on a Saturday afternoon in June on a weekend when Denise and I were not dancing. \"You guys need a break,\" Annie said. \"My grandmother has a farm near Picton (about 15 miles east of the bar) that has a big lake. She owns part of the shore and the rest is a county park. Let's go out there tomorrow and skinny dip.\" Denise and I agreed immediately.\n\nWe picked Annie up about ten o'clock that Sunday morning. She was amazingly chipper for someone who could not have gotten more than a little sleep. She directed us way out into the country. We finally turned off a two-lane road onto a gravel drive. As we went up a small hill, I could see a frame farmhouse to my left. \"That's Grandmother's,\" Annie explained. The gravel drive forked. \"Go right,\" Annie said, \"that leads to the lake. Grandmother knows we're here. I'll stop in and say hi before we leave.\"\n\nWe drove on. The drive became rough and rutted before we finally entered a field. To our left was the lake. It was roughly half a mile across and stretched out of view to the east and west. What caught my attention first was another car parked in the field. \"It doesn't look like we're alone,\" I said.\n\nAnnie giggled. \"I forgot to mention, I invited my little sister Amanda and her boyfriend Greg. Just park next to them.\" As I pulled up next to the other car, a young woman with reddish brown hair, wearing a bikini, got out of the passenger seat of the other car. She waved and walked back to the trunk. \"That's Amanda,\" Annie said. Denise and I wore tee shirts and shorts and hadn't brought any swimsuits. Amanda's bikini, while nice, suggested that she was planning on staying clothed. \n\nWe parked, got out of Denise's car, and unloaded two large coolers from the trunk. Annie introduced us to Amanda and Greg. Amanda was four years younger than Annie and was a scaled down version of Annie: narrower hips and shoulders, smaller breasts and ass. Like Annie, Amanda was very fit and was a woman you'd notice in a crowded room. Also, like Annie, Amanda had a great smile. Greg was a year older than Amanda. He was pleasant enough, about my height but about 15-20 pounds lighter than me. He too was very fit and was what I assume was considered a 'good-looking guy.'\n\nAfter introductions, Greg said to me, \"Annie told us you wrestled in college.\"\n\n\"Yeah,\" I said, \"I was a bit bigger back then.\"\n\n\"Where did you go?\" Greg asked. I told him. \"That's the top wrestling conference in the country,\" he said.\n\n\"I know,\" I replied, \"I wrestled a lot of guys who were a lot better than me.\"\n\n\"He's still pretty good at getting me on my back,\" Denise interjected, \"although I'm not sure the NCAA would approve of what he does then.\"\n\n\"Naked coed wrestling,\" Amanda said, \"where the person on the bottom has as much fun as the one on top.\"\n\n\"Speaking of naked,\" Annie said, \"it's time to get naked. It's too nice a day to have clothes on.\" Annie whipped off her tee shirt and dropped her shorts. Denise and I quickly did likewise. Amanda and Greg hesitated for a moment. When Amanda reached behind herself and undid her top, she revealed two small, firm, lovely breasts. When her bottoms came off, it was obvious that Amanda was a very lovely young woman. Personally, I preferred the fuller figures of Denise and Annie, but Amanda was, in her way, every bit as attractive as Annie. Greg undressed too, but with Denise, Annie, and Amanda all nude, I didn't look at him.\n\nIt was hot so we all got in the lake after we stripped off. We had lunch after swimming for a bit. Over lunch, we learned that Amanda worked as a physical therapist for a doctors' group and that Greg was an athletic trainer at a large suburban high school. \"Twenty-two teams,\" he told us, \"eleven boys' teams and eleven girls' teams, plus the cheerleaders; and Marie and I are the entire training staff. Marie is supposed to work only with the girls, and I'm supposed to work only with the boys, but injuries and issues don't happen that neatly. I've seen a lot more of most of the girls on our teams that I'm supposed to, and Marie has seen a lot more of the boys. The athletes are fine. They know we're understaffed and overworked, and they just want to get back on the field or the court. What worries me is if the parents knew what goes on in our training rooms every week.\"\n\nAmanda laughed. \"The girls don't care about getting back to playing,\" she said. \"They just like being seen by a hot guy.\"\n\nWe also learned that Amanda, like Denise, had played tennis in high school. That gave the two women common ground. \"I'm trying to teach Harry to be an adequate player,\" Denise said. Denise likes impossible challenges and getting my tennis game to the point where I wasn't annoying to play with was the one, she'd taken on that summer.\n\n\"Greg is ok,\" Amanda said, \"at tennis I mean. He's great at some other things.\"\n\n\"We ought to play sometime,\" Denise said.\n\nAfter lunch, Annie led us on a nude hike. We went around the perimeter of the lake. It took over an hour and reminded me of the kayak trip with Denise when we first made love in the woods near a lake in the Appalachians. I think Denise was having the same memory. When we finished our hike back where we'd started, she took my hand. \"Let's go in the water,\" she said.\n\nDenise and I walked out into the lake until the water was shoulder depth. We were both fingering and playing with the other. When I got hard, Denise put her arms around my neck, wrapped her legs around my middle, and slid herself onto me. We were trying not to be too obvious, so the motions of our bodies together were restrained. We took quite a while, which was ok with us. My eyes never left Denise's eyes, but I was sure that Annie, Amanda, and Greg were watching from shore. Denise tried hard to stifle her moans as she came. I hoped we were too far out for my grunts to be audible ashore.",
        "After we both came, we walked back to the shore holding hands. Three grinning faces awaited us. \"Did you have a good time?\" Amanda asked slyly.\n\n\"Yes,\" Denise answered with a smile, \"the water feels wonderful.\"\n\n\"Just the water?\" Annie asked rhetorically.\n\nAmanda stood up. She reached for Greg's hand. \"Let's go in the water,\" she said. Amanda led Greg out to almost the exact spot Denise, and I had stood in. We couldn't tell from shore exactly what they were doing until Amanda put her arms around Greg's neck, rose up a little, then lowered herself down. Amanda and Greg were more vigorous than Denise and I had been. I guess they thought that the precedent had already been set that sex in the lake was ok so why be sneaky about it?\n\nIt was charming to watch Amanda and Greg fuck in the lake. We could tell Amanda had come when she threw her head back, face to the sky, and stretched her elegant neck. Two guys fishing in a small boat about 100 yards away liked the show too. I felt a qualm about Annie, who was missing part of the fun of the afternoon.\n\nDenise and I made it up to Annie when we got her back to her apartment early that evening. I ate her while Denise sucked on her nipples. Annie seemed to enjoy that.\n\nFor the remainder of that summer, Denise and I became pretty good friends with Amanda and Greg, doing things with them even without Annie. Loving tennis but not having the money to belong to a club, Amanda had become gifted at finding public courts in the region where anyone could walk up and play. Amanda invited Denise and me to play with her and Greg one Saturday afternoon when we weren't dancing. The courts she took us to were in an out-of-the-way corner of a public park in a pretty affluent suburb north of town. Two courts were down in a small natural amphitheater, down a few steps and screened from most of the park by shrubbery. You had to know they were there.\n\nThe four of us hit around long enough for me to realize that I was the worst player in the group. We played a set of mixed doubles, which Denise won 7-5 with little help from me. We were standing on the side of the court drinking Gatorade when I saw that look in Denise's eyes. \"Let's play strip tennis,\" she said.\n\n\"What's that?\" Amanda asked.\n\n\"We played it some in high school when our boyfriends were around and the coach wasn't,\" Denise said. \"You don't keep score. Each player gets four serves and you alternate serves between each team. So, for example, I'd serve four points, then Amanda, then Harry, then Greg. If a player loses a point, hits it in the net or out, double faults or get aced, that player removes an item of clothing. If it's not clear who lost the point, you just go on to the next serve. You play until both players on one team are naked. Shoes don't count, those stay on.\"\n\n\"That sounds like fun,\" Amanda replied. \"You up for it Greg?\"\n\n\"Sure,\" Greg answered.\n\nWe took a quick inventory and discovered that Greg and I were both wearing tee shirts, shorts, and compression shorts. Denise wore a tee shirt, sports bra, shorts, and panties. Amanda wore a top, tennis skirt, tights, and panties. Greg pointed out that each of the women had one more item of clothing than him and me.\n\n\"That's fair,\" Amanda said. \"People don't get upset about guys going bare-chested in public.\"\n\nWe flipped and they won first serve. Amanda was the second-best player among us. She served to me. To my surprise, I returned it over the net. Greg must have been surprised too because he hit my return weakly into the net. Greg lost his shirt.\n\nAmanda hit a much harder serve to Denise. Denise's return hit deep in the center of the court and skidded out before Amanda or Greg could reach it. We couldn't say who lost that point, so Amanda served to me again. This time, Amanda aced me. I took off my shirt. Amanda tried too hard on her first serve to Denise and faulted. Denise returned the second serve and the two women exchanged ground strokes until Amanda tried to volley a shot from Denise back. The ball went out. Amanda took off her top.\n\nWe stopped for fluids before Denise's serves. While we were drinking, a couple walked down to the courts carrying rackets. I'd guess they were in their early thirties, nicely dressed in proper tennis outfits. Seeing Greg and me bare-chested and Amanda in her bra, the woman asked, politely, \"What are you doing?\"\n\n\"Strip tennis,\" Amanda responded brightly.\n\n\"Really,\" the woman said, \"and what is that?\"\n\nDenise explained the rules to the couple, adding, \"We'll stop if we're bothering you.\"\n\nThe woman looked at the man with her. He smiled. The woman said, \"No, we don't want to interrupt your game. May we watch?\"\n\n\"Of course, you may,\" Amanda answered for the four of us.\n\nDenise aced Greg with her first serve. Greg's shorts came off. Amanda returned Denise's serve to her. Denise hit that back. I poached on Amanda's return shot and, accidentally, hit the ball straight at her. She fended the ball off with her racket, but it fell out of bounds. Amanda took off her skirt.\n\nGreg returned Denise's serve to him. The ball just cleared the net on my side of the court. I stupidly dove for it, skinned a knee, and hit the ball into the net. I took my shorts off. Amanda returned Denise's served to my side of the court. I hit what I thought was a good forehand. Long. With five people watching, I peeled off my compression shorts and stood naked as Denise served to Greg. Greg returned the serve to Denise who hit a shot that must have had a lot of spin towards Amanda. Amanda's return shot hit the top of the net and fell back to her side of the court. Amanda undid her sports bra and tossed it off the court. I must say that Amanda looked great holding her racket, wearing only a small pair of panties and her shoes.\n\nGreg served first to me. Exceeding my usual average, I returned another serve. Amanda played the ball towards Denise who volleyed it back at Amanda. Amanda hit the ball over the baseline. Amanda was smiling as she pushed her panties down her legs and stepped out of them. She tossed the panties off the court. \"I've never played nude before,\" Amanda said, \"I think I'm going to like it.\"\n\nDenise returned Greg's serve and she and Amanda got into another exchange of groundstrokes. Amanda finally hit the ball to me, and I put it in the net. I had nothing more to take off. I did hit a surprisingly good shot to return Greg's serve. The ball hit in bounds between Amanda and Greg. They both laid off for fear of hitting each other. Our point but no one took anything off.\n\nGreg's last serve was to Denise. Denise returned the serve to Greg who put it into the net. Greg took off his compression shorts and the game was done. The four of us met at the net to shake hands. Amanda grabbed my wrist and raised our arms into the air \"First two naked,\" she said gleefully.\n\n\"I feel cheated,\" Denise said, \"I didn't get to take anything off.\"\n\n\"Well,\" Amanda said, \"the rest of us are naked. Nothing's stopping you now.\"\n\nWe'd forgotten about the couple sitting on a bench beside the court watching us until the woman said, \"That looked like a lot of fun.\"\n\nAmanda, Greg, and I realized we were standing naked in front of two complete strangers. \"I hope we're not offending you,\" I said.\n\n\"Not at all,\" the man said. Looking straight at Amanda, he added, \"You look great naked.\" Amanda did a mock curtsy. \n\nThe woman tapped the man on the shoulder and whispered in his ear. The man started with a slight frown, but that morphed into a grin as the woman whispered. He nodded his head. The woman turned to us and said, \"We really enjoyed watching you play. We're wondering, would you stay while we take a few minutes to warm up and watch us play a game of strip tennis? We'll just play whoever loses the point takes something off. It won't be long.\"\n\n\"Do you mind if I take my clothes off?\" Denise asked.\n\nThe man gave the obvious answer: \"Not at all.\"\n\nWatching the couple hit warm-up shots, they both appeared to be reasonably good players. The man, naturally, had an advantage in strength, but the woman appeared to be better at covering the court. They flipped and the man won first serve. He boomed a serve much harder than I thought called for in a friendly game. The woman had no chance at a return. I thought she might be annoyed, but she was smiling as she walked to the net, turned, and let her partner unzip her tennis dress.\n\nThe woman put some wicked spin on her serve. The ball hit well in the receiving box but never rose more than a couple inches off the court surface. The man's attempt at a return went into the net. \"Nice one Dear,\" the man called as he pulled off his shirt.\n\nThe man's next serve was another rocket and another ace. The woman took off her tights. As she stood at the baseline to serve, she looked quite nice in only a bra and panties. She wasn't Denise or Amanda, but she was pretty.\n\nThe man returned the woman's next serve and they traded strokes before the woman hit one cross-court just out of the man's reach. The man's hands went to the hook in the waistband of his shorts. His face reddened a little. The woman giggled and said, \"He's old-fashioned. He still wears a jockstrap.\" The man finally took off his shorts and tossed them past the baseline. Wearing only his jock, he served his third ace to the woman. She didn't seem at all bothered to be removing her bra and she shouldn't have been. She had very nice breasts.\n\nWearing only panties, the woman served to the man in his jockstrap. They again got into a long exchange of groundstrokes until the man put a perfect, soft dropshot over the net. The woman didn't even try to get the ball. She just stopped, laid her racket on the court, pushed her panties down, and stepped out of them. Naked, she walked to the net and gave her partner a quick kiss.\n\nThe man and woman came off the court towards us. \"This feels so good!\" the woman said. \"It wouldn't have been half as much fun if you hadn't been here to watch. Thank you.\"\n\nIt was getting late, so we gathered our things. Denise quickly ran up the steps so she could see the rest of the park. Coming back down, she said \"No children.\" Knowing that, the four of us opted not to dress but just picked up our stuff and went up the steps. At the top of the steps, I turned and looked back at the tennis court. The man had taken off his jockstrap and the couple were playing naked. They looked happy.\n\nDenise, Annie, and I talked about inviting Amanda and Greg to become more intimate friends. That was pre-empted by circumstances out of our control. Greg had wanted to move to a college athletic program and, about a month after our strip tennis match, he got a job on the athletic training staff at our flagship state university. That university was in a city about 120 miles north of our city. The group Amanda worked for had an office in that city, so she was able to move with Greg and keep her job. We'd miss seeing them regularly, but we were happy that Greg's career was advancing.\n\nAmanda and Greg leaving town was probably a good thing. Thanks to some good marketing ideas Denise had, we had more work coming into the law office that we originated. Getting that done and dancing naked two weekends a month was demanding. However, Denise and I agreed that we weren't going to give up the nude dancing. We just didn't have time for much else.\n\nAs I mentioned before, neither Denise nor I had family apart from Denise's brother Dave in the Army. Dave was still stationed in North Carolina although he had moved from the school which had been his initial assignment there into some position with a \"joint command.\" Dave had sent us his regrets about the upcoming Holidays. He was going to the Pacific Northwest with Lena to spend Christmas with her family.\n\nAnnie invited Denise and me to Christmas dinner at her parents' house. We got to see Amanda and Greg again. They were starting to talk about marriage. We also got to see Annie's maternal grandmother again and to meet her paternal grandparents. Best was that we met Annie's and Amanda's parents. Wes and Carla were delightful people.\n\nChristmas dinner at the Gentry home was, of course, a clothed event. We left rather late that night. Because December 26 was also a holiday that year, Annie came back to our apartment with us. We'd just gotten inside the apartment when Denise said, \"Harry, I want you to go into the kitchen, close the door, and undress. I'll tell you when you can come out.\" I did as I was told.\n\nSeveral minutes later, long enough for me to really wonder what Denise and Annie were up to, Denise opened the kitchen door and said, \"You can come out now.\" I stepped into the main room. Denise and Annie were both naked, but Annie had a red Christmas ribbon around her neck tied into a bow. \"Harry,\" Denise said, \"Annie and I have talked about this a lot. The three of us have done a lot of things together, but you've never had intercourse with Annie. It's time for that to change so, your Christmas gift from both of us is penis in vagina sex with Annie.\"\n\nI was dumbfounded. This was a huge step. We'd played around a lot with Lena and, after she followed Dave to North Carolina, with Annie. But Denise and I had been \"faithful\" to each other in the sense of no intercourse with anyone else since we started dating over 18 months earlier. I wasn't sure where this would lead.\n\nAnnie came very close to me. She looked very desirable. She raised her hand to the ribbon and said, \"Don't you want to unwrap your present Harry?\" I reached a hand up and undid the bow. Annie put both arms around me and pulled herself to me. She held me very tight. Her breasts were smashed against my chest and my dickhead was in her red pubic hair. We started kissing and I felt her tongue pressing against my teeth. I opened my mouth and our tongues met. Annie put both hands on my ass and pulled me even closer. Unsure or not, I was getting hard. Annie moved her hips from side to side, rubbing herself against my dick.\n\nDenise came over, took each of us by an arm, and said, \"I think you'll have more fun lying down in the bedroom.\" Annie and I followed Denise into the bedroom. Wordlessly, Annie lay down on the bed on her back. She spread her legs. She looked so inviting and wonderful. I looked at Denise, who was smiling. \"It's ok Harry,\" Denise said, \"I'll be right here with you. Please?\"\n\nI got onto the bed on my hands and knees and crawled up until I was above Annie. Her eyes were gleaming. She leaned up, kissed me, and put her arms around me. She pulled me down onto her chest. My dick was lying against her pubic hair. I moved my pelvis and slid inside of Annie. I felt pressure on the bed and looked to my right. Denise was lying on the bed on her side, watching us, with a hand between her legs. Denise leaned forward and kissed me.\n\nHaving made the decision to put my dick in Annie, I was suddenly panicked that I wouldn't please her. I started off too fast and furious. \"Slow down Harry,\" Annie said, \"we've got all night.\" I slowed down. Like Denise, Annie was very good about telling me what felt good to her and what felt better. Simply being in Annie felt wonderful to me. \n\nWith Annie's coaching, I found a spot and a pace that she really enjoyed. I stayed with that. As Annie's breathing became faster, I could also hear Denise beside me breathing faster. The thought crossed my mind that this was surreal, having intercourse with our mutual best friend while my girlfriend lay beside us masturbating. Then, my body started making thought at the level impossible.\n\nAnnie is a strong woman. As she approached her orgasm, she held me very tight with her arms and legs. I heard Denise come just before I started coming in Annie. A second or two later, Annie gripped me so hard I couldn't breathe. She bucked her hips violently a couple of times, impressive since my weight was on her, and bit my shoulder. When Annie relaxed, Denise leaned towards us. Denise kissed me on the lips and then kissed Annie. Annie and I each extended an arm and pulled Denise to us, so her entire body was against ours. Annie and I both hugged Denise and the three of us kissed.\n\nYou may have noticed that, throughout this memoir, I have referred to intercourse between Denise and me as making love. That is because the emotional connection between us makes the act so much more than just physical sex. What I did that Christmas night with Annie was also making love, for the same reason. We also started a tradition. Annie, Denise, and I have spent every Christmas night since then together. Annie later married a broad-minded man who became a very good friend. Since their marriage, Annie and Sean have spent every Christmas night with Denise and me together in the same bed. Side-by-side, I make love to Annie while Sean makes love to Denise. Friends like Annie and Sean are priceless."
    ],
    "authorname": "HStoner",
    "tags": [
        "exhibitionism",
        "mff",
        "nude sports",
        "outdoor sex",
        "public nudity",
        "nudity"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/her-second-job-ch-06"
}