{
    "title": "Barbarian Bound Ch. 04",
    "pages": [
        "Author's Notes: This is an erotic fantasy by Lyssabyss. This Chapter does contain a lot of plot advancing material. So please be patient with the dialogue. Additionally there are multiple sex scenes in this chapter, again it is plot driven and not supposed to seem gratuitous. \n\n::PLEASE READ:: There is a graphic rape scene and a small amount of gore in this chapter. This chapter also contains a bit of BDSM and spanking. \n\nI have done multiple passes through this Chapter, and hope I have caught any errors. As always I love to hear your comments and critiques, and I hope you will take the time to vote once you've read it. Thanks! \n\n**** \n\nEnd of Chapter 2: \n\nI sucked in a breath as he stepped out of the water which brought a huge knowing grin to his face. He stalked forward slowly, like a true predator, his body ready to spring at any moment. My belly began to flutter in anticipation and as he dashed forward, a squeal of excitement burst from my lips and I darted towards the bedroom. \n\nMy stride was much shorter than his, he caught me easily up in his arms, which brought a scream from my lips and a deep chuckle from his. \"Shh.\" He admonished, placing a hand over my mouth. \"I have captured you again, my pet.\" He tossed me playfully onto the large plush bed, \"What shall I do with you?\" \n\n**** \n\nThis wasn't just a game was it? No, not as I originally thought in any case, and it certainly did not stop me from toying with him. \"I am not sure I should allow you to do anything with me, Kaptan.\" \n\n\"Better then, that I am the one to make those decisions for you, pet.\" Oro's eyes gleamed with promise, \"I do specifically remember telling you not to call me Kaptan.\" \n\n\"Care to bargain?\" I assumed a more assertive position on the bed, kneeling with my hands on my hips. \n\n\"Ha!\" He gave a throaty chuckle. \"It is not available for debate, much less something I will bargain for.\" \n\nAs he was about to crawl on the bed, I held out a hand to stop him, \"Wait.\" \n\n\"Going to hold out on me, hmm?\" He said with a devilish grin. \n\n\"I still want to strike a bargain.\" I looked in the eyes, \"For something I want.\" \n\n\"And what do you want?\" The husky resonance of his voice made me quiver. \n\nMore! Demand he fall to his knees to pleasure you! My inner demoness urged. I shook the thought away, \"I do not want you to call me your pet anymore and I will not accept slave either.\" \n\n\"Will not accept...is that right?\" The look in his eyes making me fidget. \n\n\"I am willing to bargain for this courtesy, Master.\" I said backing up as he climbed onto the bed. \n\n\"And what exactly are you willing to bargain with, my pet.\" He coaxed. \n\nMy breathing quickened, my mind was a clouded mess, \"I do not know.\" \n\nBefore I could back away further he grabbed my arm and pulled me close, \"You really don't, do you?\" He proceeded to kiss my lips and moved down to my neck and collarbone. He drew me down onto the bed, my hair dampening the pillows beneath it, and began to work his mouth downwards, taking a nipple into his mouth. \n\nI moaned softly. \"Think of me as a servant if you want, but I am not an animal.\" Trying to regain focus on my cause. \n\nHe sucked my hard nipple into his mouth and bit it gently, tearing another pleasurable moan from my lips. \"Your kitten-like purring disproves that.\" \n\nI was losing ground in this battle with his constant delicious distraction. \"Oro, I mean it!\" I snapped, taking advantage of his surprise to cover my breasts with my hands. \"I am not an animal! You have restrained and branded me, but I am still me!\" I shook with frustration. \"I do not debate that I am yours, or that you have the power to do what you want with me. But I -.\" \n\nHe held a finger to my lips \"Hush.\" \n\n\"But -\" \n\n\"I hear you, Esyld.\" His hands stroked over mine, and caressed my belly. Our eyes connected, \"Okay, Esyld. I will do my best.\" \n\nPerhaps for the first time since this ordeal began, I felt a genuine pleasant surprise and a small smile decorated my face. \"Thank you.\" \n\n\"Don't thank me yet.\" His dark, lustful eyes devouring me. \"Now move your hands.\" He commanded. \n\nMy lips twitched hiding a smirk before I dropped my hands away to the sides. \"Better?\" \n\n\"Much.\" He whispered, suckling a nipple back into his mouth. \"Have you ever touched yourself, here.\" He encouraged as he rubbed a hand over my moistening lips. \n\n\"Yes,\" I breathed softly, \"But I had never...\" My voice trailing off. \n\n\"Cum?\" He finished. \"It is the perfect rush of euphoric power, is it not?\" His mouth lowering to my other nipple, continuing to rub me gently. \n\nI nodded. \n\n\"I want you to touch yourself.\" His voice so incredibly thick with desire. \n\nMy lips parted with hesitation and my hands rolled over my breasts and hips. My hand covering his. \"I will help.\" Oro hummed against my neck. \n\nHe drew my fingertips down so they rest on my sensitive little bud which he had already applied my moisture to. As I had done before I moved my middle finger in circles around it, but embarrassment prevented me from enjoying it too much. \n\n\"Close your eyes.\" His tongue licked over my nipples and the soft expanse of my belly. My breath hitched as I felt him kiss and suck by my hip bone. \"Don't stop.\" He urged my complacent fingers into action. \n\nI rubbed the delicate bit of flesh, my body trembling as I felt him move between my legs, the scratch of his stubble on my inner thigh, which he replaced with wet kisses and suction until trailing upwards, his nose was bumped my hand. \n\n\"Gods.\" I moaned as his tongue ran up the length of my netherlips and produced a bit of spittle for my hooded nub. His mouth moved lower once more, bringing an outer fold into his mouth to suck and torture it with his tongue, before moving to the other side and repeating the same action. \n\nI felt the rising blush of rapture rooting in my loins, pushed further by the nudging of his tongue into my clenching tunnel. \"C-close.\" I whispered. \n\n\"Do you want to cum, Esyld?\" He asked. \n\n\"Yes.\" I hissed passionately. \n\n\"You know what to do then.\" His voice commanding and deliberate. \n\n\"Please Master!\" I nearly shrieked as he probed his tongue inside of me. \n\n\"You may.\" His deep growl of pleasure vibrating against my sex was enough to push me over the edge and my hips jerked up as my depths convulsed and my hands clutched at the bed. A pleasured cry pitched from my throat, Oro's strong hand clasping over my mouth to muffle me, as my body continued to quiver and undulate. \n\nAs I drifted back into my spent body, I licked my dry lips, I wanted more, as if the only thing that could quench my thirst was this indulgent taste of paradise. Oro hearing my unspoken need, latched his mouth against my sex once more, fervently nibbling, sucking and licking me to a state of madness. \n\nI was whimpering with pleasure, \"Yes, yes!\" my hips escalating in motion. \n\nHis mouth withdrew quickly, making me whimper, \"You must ask.\" He ordered. \n\n\"May I cum, Master?\" My body shook with the suspension of denial. \n\n\"Yes.\" He raised my hips and pressed as much of his tongue inside of me, wiggling it around and rubbing at my clit. \n\n\"Oh Gods!\" A guttural cry erupted from me as once more in a blinding fury I soared through the heavens and was reduced to a moaning, giggling puddle on the bed. \n\nHe took advantage of my open mouth to delve his tongue inside, sharing the taste of my arousal and eagerly moving between my legs. \n\n\"Please.\" I begged. What was a begging for? More? Surely not, my body was a spent mess and almost certainly could not handle any more pleasure. \n\n\"Yes!\" He grunted and lined himself up flawlessly with his mark before directing my head to stare down between us. \"Look.\" A single command that I helplessly obeyed. \n\nHis endowment pressed against me, I watched as he ever so slowly slipped inside my primed sex. He took my hand and led it back down between our bodies, \"Again.\" He demaned. \"When you find it, you may release.\" \n\nI once more took up the liberty to stroke my aching clit, while he drove in and out of me, all the while my eyes never leaving the sight of his labor. After being worked so expertly it took only a few minutes before I was once again writhing on the bed. This time as Oro's large hands held my body in place, he pumped in and out of me faster, his manly sack slapping my bottom, and keeping me cycling through this blissful hysteria. \n\nOnce more he delved deep inside of me, spraying his seed at the end of me, as my body helped to milk him. Our cries of ecstasy echoing one another in the dark night. He held me tight in our delirium, and still imbedded deep inside of me rolled us onto our side, my lean leg draped over his. \n\nWith soft kisses we slipped into the beckoning draw of reverie. \n\nOro's slight movement was enough to wake me from a beautiful slumber, and our eyes met in the light of morning. The sun painted our bodies in a multitude of colors from the stained glass window above the bed. \n\n\"Good morn, Esyld.\" Oro smiled. \n\n\"Good morning\" my voice drawled and I stretched my body lazily which caught me off guard as I realized his member was still pressed just inside my entrance. \"Oh!\" I exclaimed. \n\nHe gave his typical manly chuckle and pressed against me, pushing himself a bit more inside of me. \n\n\"Mmph.\" I moaned as I felt his body harden with ease. \n\nIt felt incredibly intimate as he slowly took me, looking into my deep blue eyes. I felt a wave of guilt wash over me. You shouldn't be enjoying this. I took a deep breath and pulled away from him and rolled off of the bed quickly, a look of astonishment on his face. \n\n\"Have I hurt you?\" He panted. \n\n\"No.\" I let out an exasperated sigh, \"Yes. I mean, I do not know.\" I said tears threatening to spill down my cheeks. What is happening to me? \n\nHe came to stand behind me as I picked through the fruit at the table, holding a small clementine in my hands, rubbing my fingers along its imperfections. \n\n\"You are very important to my happiness, and so, you must be open with me, in all things. Do you understand, Esyld?\" His whispered kissing the nape of my neck. \n\n\"To your happiness, but what about mine?\" I muttered. \n\n\"I cannot give you back to the life you once had. I will not.\" He sighed kissing the nearly healed brand at my shoulder. \"All else is open, Esyld.\" \n\n\"No more bargains?\" I questioned. \n\n\"I make no promises.\" I felt his smile against my skin, \"I will not betray my countryman, and I will not release you, but there is little else I would not do for you.\" \n\n\"I bare the mark of a slave.\" I reminded him. \n\n\"You bare the mark of my House, Esyld. By brand or by ritual inking, it is customary to wear the symbol of your House as a Barbarosan. I claimed you, so that others would know that you are mine.\" \n\n\"You referred to me as 'chattel', so that is what I am, your property?\" I accused. \n\n\"Careless words. Property implies that you are apart from me, that you could be sold, traded or gifted away. You are none of those things. You are mine, Esyld.\" His breath was hot on my neck, his aching need pressed against my back. \n\nA deep sigh relaxed the tension I had not realized was there. \"What happens now?\" I could not light the road on this journey, because I did not know the destination. \n\n\"We go home.\" The full of his chest was pressed against my back. \"The rest, we figure out along the way. It is our nature.\" \n\nCould I really trust myself to the nature of a Barbarosan? What about my people? What about my father? \"I cannot leave.\" I whispered. \"My father -.\" \n\nOro exhaled forcefully, \"Do you really wish to stay here?\" \n\n\"I cannot leave him.\" Frailty leaking into my voice. I turned to face him, leaning against the table, Oro's manhood resting against my pelvis. \n\n\"You can, because you are not alone, Esyld.\" Oro's hand raised to stroke my cheek. \"I am asking you to jump into the unknown; but you will be with me and in time that will be enough.\" He kissed me gently, probing the defense of my lips with his tongue before I allowed passage, our delicate organs caressing one another in a lewd display. \n\nThe familiar arousal sweeping over me, offering my nipples up to the warm air, and Oro's heated gaze. He gripped his arousal with his hand and bent to rub it over my furred patch then my crevasse below. He slipped the length of his shaft against me, using my soft folds to caress him before lifting me up onto the edge of the table. \n\nThough apprehension still coursed through me, it seemed muted now by our unspoken need. Sitting atop this dark table I was at the perfect height to offer my sex to him, he propped my legs on the edges of the desk to balance and support my exposure. I leaned back, bumping into the bowl of fruit that contained those delicious clementines. Oro reached around me with a chuckle and moved the bowl to my side so I could lean back freely. I rested on my elbows, pelvis tipped to receive him and simply waited. \n\nHe stroked himself against my sensitive lips, rubbing the tip of his head up and down as he had the previous night with his tongue. The thought made me quiver with excitement. \n\n\"Do you want this?\" His words thick with lust as he gripped his shaft. \n\nI knew what he wanted to hear, and for the first time, I was happy to oblige, \"Yes, Master.\" \n\nHe drove into me, burying himself to his base and dripped some spit into his hand to rub against my sensitive nub. \n\n\"Ngh!\" I moaned. The previous nights climaxes leaving the naughty bud in a state of aching excitement. The pad of his thumb swiveled around it as he jarred me with each thrust of his broad shaft. \n\nWe grunted in tandem, his black curls swinging forward with each thrust. The angle with which he speared me, worked his wide crown continuously against a glorious space within me. My body tensed as I climbed the ladder of my undoing and I gasped as Oro rammed deep into me, reading my body \"You may cum.\" He growled. \n\nLight flashed behind my eyes and my ears rang from the sheer force of my climax. My hands slammed down on the desk, and inadvertently sent the ceramic bowl crashing to the floor. One final thrust and with a thunderous moan, his crown pulsed inside of me, each swell adding to the overwhelming rush within me. \n\nWith weak legs he tumbled back onto the velvet chair facing me, and I sprawled lewdly across the table with my legs still propped open and Oro's cream pooling on the dark wood of the table. \n\nThe door burst open, threatening to careen off of its hinges as Oro's men hustled inside. \n\n\"Kaptan! We heard something brea-\" The words stuck in the Veteran's mouth as they all got a rich picture of what had just taken place. \"Our apologies, Kaptan.\" The man said with bright red cheeks and backed out slowly, trying his best to shut the now broken door. \n\nOro fell into a roaring laughter, as if his men had not seen him naked, dumped into a chair, with me, oh Gods with me displayed... \n\nI picked up a clementine that had managed not to crash off the table, in an act that would bring humiliating results, and threw it at him, as hard as I could. Sadly it curved too far to the right and instead sent another fragile item crashing to the floor behind him. \n\nAt least his men had the good sense not to enter this time. \n\nOro choked down his laughter at the sight of my red face, and walked towards me, \"They will speak of it to no one, on my honor.\" He smiled rubbing my arm. \n\nNow my face blanched. They had seen me. Not just naked as I was first exposed to the camp, but they saw me, splayed... \"Oh Gods!\" I groaned, burying my face in my hands. \n\nHe grabbed my hands pulling them away from my face. \"Do not shield yourself, Esyld. It is embarrassing to be sure, but it will remind them of your place here, with me.\" \n\n\"As a barbarian whore.\" I lamented. \n\n\"As my lover, and-\" His voice seemed somehow small, or timid. \"-perhaps more.\" \n\nMy heart fluttered in my throat as a hand moved to caress my side and waist. His other hand scooped some of his spending, on the table, into his fingertips and massaged it back against my aching sex. \"You cannot know how much this means to me.\" His whisper almost inaudible. \n\nI observed the pride displayed on his face, accentuated by his warm brown eyes, black and gray stubble and thick bushy eyebrows. \n\n\"Okay, Oro.\" I said climbing gingerly off of the table. \"I will go with you, because I cannot stay here, I cannot live with the memory of this place. But you must get a letter to my father. His heart would break with worry for me, he needs to know I am safe.\" \n\nOro smiled and gave a reluctant nod. \"In the meantime, let us get you some proper clothes. Something that really suits you.\" \n\nBy the time it was all said and done I had spare undergarments, a proper riding cloak, fitted linen top and leathers that fit snugly against my bottom. Oro and I agreed that a dress would be impractical if I were to continue riding or needed to protect my legs. What a scandal this would have caused with my own people. Although, this was the least improper thing I had done thus far. \n\nI braided back my hair once more, watching Oro change into his own leathers, linen shift and jerkin. Once we were finished he planted a kiss on my lips and took my hand guiding me towards the door. \"We cannot hide in here forever.\" He said with a chuckle and wiggled the broken door open. \n\nHis men just inside the entrance of the manse, nodded politely and otherwise provided no indication they had even seen me this morning. \"I will be taking Esyld into the Catacombs.\" Oro paused for a moment and looked to the red faced Veteran,\"You have been my right hand for many years, Jakob.\" Oro shook Jakob's hand firmly, \"I was offered a promotion, as a Majohr, before this expedition, should I desire to return to Barbos. It is an offer I have reason to accept now.\" \n\nHe looked to his men, \"It has been my honor to serve as your Kaptan, and I entrust this duty now to Jakob. Till battle or old age take you, Kaptan Jakob, I recognize you as a true Champion of Barbos.\" \n\nThe Veteran's eyes glossed with denied tears, and nodded his acceptance, \"Many thanks, my friend. We will drink to your honor and continued success tonight.\" \n\nOro smiled. \"I would not miss it.\" \n\n\"Aye a chance to get drunk off yar arse!\" A scruffy man jeered. \n\n\"Exactly.\" Oro laughed, rubbing his thumb over our joined fingers. \"Try not to leave me too haggard for the boat ride in the morning.\" \n\n\"Boat?\" I exclaimed. \n\n\"More a ship really. Takes far less time to travel by water, than by land.\" He said, \"You will have your sea legs in no time.\" He said spanking my bottom playfully. \n\n\"I think you love to torture me.\" I quipped. \n\n\"You may be right, but I think you love it also.\" A fiendish smirk on Oro's face. \n\nJakob cleared is throat, \"You are a charm for our Majohr. I hope you find peace in Barbos lands.\" He said with a gentile reassurance. \"I am sorry for my intrusion.\" \n\n\"Speak no more of it.\" I insisted, my face flushing with embarrassment. \n\nDoors down the hall opened loudly, and an entourage spilled out from behind them.\"Kaptan Oro!\" Boasted a voice from across the hall. We all turned to face a bald, gray bearded man who stood front and center in the group. \"Governor Aryn.\" Oro smiled thinly. The Governor's years of service had permanently marked him in the form of a scar trailing under his eye to the corner of his mouth. It has long since healed, but it pained me to look upon the pink raised flesh. \n\n\"There was quite a commotion earlier.\" He laughed, winking at me, a furious blush staining my cheeks. \"Who might you be?\" The Governor questioned. \n\n\"Esyld, sir.\" I replied softly. ",
        "\"Surname?\" Governor Aryn pried, stepping closer to me, till we were an arms distance apart. \n\n\"Sgot.\" I said proudly, looking into his coal eyes. \n\n\"Hmm, very much a name of the Gauls.\" He said distastefully and looked to Oro then. \"Docohun Canizade Oro, did I get that right?\" \n\n\"Doguhan.\" Oro corrected. \n\n\"You have a proud and pure line, your mother's father was a true Barbarosan Titan.\" There was something grim now on Governor Aryn's face, \"A pity such a worthy woman died as young as she did.\" His gaze returned to me, \"Hard to think a weak Gaul female would be fitting for a virile Barbarosan man. Esyld Oro Fahi\u015fe,\" he sounded out slowly, \"that befits her station much better do you agree Kaptan?\" The Governor smiled. \n\nOro remained quiet, and I could feel a collective tension in the air. Gaul? Was Gaul a rude slur for Lamorians? Perhaps it is what our captured Lamorians are now called. \n\n\"We have a full day ahead of us Governor-\" Oro began. \n\n\"No time for a sample of your fahi\u015fe?\" The Governor's rotund belly laughed at Oro's pinched face, \"Consider it payment for the state my furnishings. Yes, I was made aware of the state of my own home...\" \n\nIt took me a moment to realize the lech was talking about me. The idea of the man putting his hands on me, sent a shiver down my spine and Oro's hand now gripped mine painfully, \"I do not share her, she is mine alone, and I will decide what station befits her best.\" Oro's voice dark and menacing. \"You may take your payment from my earnings, whatever you believe is fitting.\" \n\n\"I mean no offense young man. Keep your coin.\" Governor Aryn delivered a tight lipped smile. \"Enjoy the city Esyld, you may find it quite an improvement.\" He stepped the distance and placed a kiss against my ear, whispering \"Till we meet again, Fahi\u015fe.\" Oro jerked me away from the Governor, who chuckled and turned walking back down the hall with his guards, before I could reach forward and claw his eyes out. \n\nMy chest heaved with anger, \"Fahi\u015fe?\" \n\n\"Ignore him.\" Oro insisted. \n\n\"What does it mean?\" The displeasure bitter in my words. \n\nKaptan Jakob put a hand gently against my arm, \"What is not true, does not matter.\" \n\nI rejected the urge to jerk away from him, but managed to control my emotions and just simply nodded slowly. \"Get me out of here, Oro.\" My voice on the verge of breaking. \n\n\"Get Bo.\" Oro ordered a bushy faced kinsman, who left with a nod. \"Jakob, please arrange the ship, I aim to take the next vessel out of Lamoria.\" \n\n\"Yes Majohr, and the celebration?\" Kaptan Jakob inquired. \n\n\"Time permitting, move it dockside.\" Oro advised. The newly ordained Kaptan nodded once and stepped outside the estate. \n\n\"Before we leave Lamoria, there is still something I wish to show you.\" Oro said taking my hand and leading me outside where Bo was waiting. He helped me climb onto his back and we were off, leaving the Governor's estate behind us. A sigh of relief parted my lips and I relaxed back against Oro's chest. \n\nI hoped I would never have the misfortune to see him again. As we hustled through the busy streets of my former home, pain grew in my chest as I saw it in the light of day. A mixed row of compact stone and wood homes and small shops, boasting proud Barbaros banners, seemingly untouched by the brutality that forced us from these walls. \n\n\"Was the battle of Lamoria all in my head?\" I lamented. \"It is as if it never happened.\" \n\nOro veered us off so that we skirted outside the city walls, which helped my growing anxiety and the anger that burned me. \"We rebuilt our home quickly. Not all resisted...\" Oro cautiously said, before changing the subject. \"What do you know of the Catacombs?\" Oro asked. \n\n\"They have been closed off since I can remember, caved in, I believe.\" The gallop of the horse lilting my speech. \"Not all resisted, do you mean those that were taken as slaves?\" \n\n\"We took slaves in the beginning, but many are contracted serfs now. Have you always lived in Lamoria?\" Oro continued. \n\n\"Since I was a young girl, why?\" Why would any of this matter now? It was dredging up memories that I wanted to remain buried. \n\n\"Your people did not always populate this land, Esyld.\" Oro slowed Bo's pace as we neared the stone entrance to the dangerous Catacombs. \"Do you know why?\" \n\nA petulant feeling stirred within me, \"Why the lesson in history? What does this matter? Does it have to do with why you referenced Lamoria as 'our' home?\" \n\nHe ignored my viperous attitude, \"Gauls, your ancestors, and the Barbaros, my ancestors, were adversaries long before you or I were born.\" He circled Bo at the entrance and helped me dismount. \n\nHe took a torch from the entrance and lit it on a ceremonial brazier, \"Follow me.\" Our fingers intertwined as we entered the dimly illuminated underground tunnel. He ventured as if he knew these walls as intimately as my own. \n\n\"I was raised by a scholarly man, if you remember...\" His words righted my lust filled thoughts. \n\n\"I remember.\" Confirming, waiting for him to continue. It grew harder to breathe the further we ventured down. \n\n\"Before he was a self-proclaimed scholar, he was a Gaul soldier, he was among the first generations, in fact, to help claim hold of Lamoria for the Gauls. He brought me to these Catacombs as a boy and taught me the bloody history of our people.\" Oro turned to the right as the path forked. \n\n\"How did you come to be raised by your enemy?\" My thoughts were swirling, and if he had been raised by such a kind Lamor- Gaul, how could he later betray them? \n\n\"I was birthed within these walls. Albion, my custodian, helped to deliver me, when as a young warrior he found my mother laboring in distress. His fellow warriors were nearby, and if it were not for Albion's protest, I likely would not be here with you now...\" His voice trailed off and he brought us to a large room, which housed row over row of the dead. I gasped, gripping Oro's arm tightly, to which he raised an eyebrow, \"Do the tales of the Catacombs live up to your expectations?\"  \n\nI gave him a sour look before dropping my offending arms. \"What happened to your mother?\" My voice, tight with anxiety. \n\n\"She died.\" His own voice, calm and neutral. \n\n\"I am sorry, Oro, I have heard birthing was harder back then.\" I said rubbing a hand along his back. So that must be what the tactless Governor eluded to earlier. \n\n\"She did not die at my birth, no, she died days later by the sword of a Gaul soldier. Albion has cared for me ever since.\" \n\nI shuddered and felt my own horrible memories of death and sadness fill my heart. \"Why?\" \n\nOro shook his head solemnly. \"The very question I tortured myself with as a boy. As a man, I hated that I began to understand it...These Catacombs hold the bones of my people. This was our homeland. It was only in the last four generations of this bloody feud that the Barbaros have been pushed so far south.\" \n\nSelf righteous anger was building inside of me, \"It is the barbarians that have hunted and enslaved us. How dare you!\" His eyes bore down into mine as tears threatened to fill them. Gods I was so tired of crying. \n\n\"Yes, we have hunted, enslaved and killed Gauls. Your people tried to hide their past, ravaging Lamoria in the most damned way possible, claiming our city by name-rite. Both sides have blood on their hands, Esyld. In the end, only the Barbaros were strong enough to end the war.\" Oro proclaimed. \n\n\"End the war? By killing thousands of innocent people! How could that be justified?\" \n\n\"We have never hid from what we had to do! Or what we have done...Those that resisted our rule, yes, examples were made. After a time, when the land had healed, we freed the slaves who would live among us as members of the Barbarosan people, choosing to forsake their past falsehood.\" Oro explained. \"It was more than our people ever received by Gaul hands.\" \n\n\"Live among you, as second rate citizens, no doubt, under the thumb of brutish hands!\" I shouted in the sacred resting room. \n\nOro sighed heavily, bracing a fist against a stone wall, \"I only brought you here so that you would understand the things I have done. I left Albion as a young boy, with my mother's sigil in hand, and I returned to Barbos, to my people. They accepted me as if I had always been among them, as if I had not been raised by our enemy. It would be another twenty years before I would come back to Lamoria, and as fate would have it, find you. I have done horrible things to reclaim my peoples birthright, I make no apologizes, for that would mean I feel remorse for the things I have done, to have brought me on this path to you.\" \n\n\"If what you say is true, then the wrongdoing lay with both our people, but it is not the truth that I know. It is not the truth that I have seen.\" I shut my eyes, trying to dispel the horrible memories from invading. \n\n\"I do not hold you at fault for the sins of the Gaul, as some of my own kin believe I should. All that I ask is that you do not hold the sins of a few, my sins, against the good nature of the Barbaros.\" Oro drew me into his arms, mindful of his dwindling torch, and held me until my body ceased resistance and I melded into his touch. \n\n\"You ask a lot of a weak Gaul female.\" I retorted. \n\n\"You are stronger than you think.\" He said softly, brushing a wisp of hair away from my face. \n\nOur bodies pressed together warmed me this far beneath the surface, but it was not enough to ward the chill seeping into my bones. \"Can we leave this place?\" I shivered, the musty smell making me feel a bit light headed. \n\nOro nodded, and guided us back out into the fresh air. The first glorious breath cleansing my unease. \"Let us head to the docks and see how our new Kaptan is doing on the boat.\" \n\nOro helped me once more mount on the tall stallion, and climbed up behind me. \"How long will we be on the water?\" \n\n\"Depends on the winds. It will be close to a month.\" \n\n\"A month!\" I exclaimed, holding onto the horn of the saddle as Bo was directed back through the tall fields, towards the bustling town and salt sprayed docks. \n\nOro laughed, \"Would you rather take two, and ride in a cart all the way there?\" \n\nI nudged him with my elbow. \"Quiet you.\" \n\nOro fondled my breasts playfully, \"I must teach you that I give the order around here.\" \n\n\"My apologies, Majohr.\" I giggled, shying away from his touch. \n\n\"I want you.\" He whispered against my ear, my body shivered with excitement in response. \n\n\"Are you like this with all women?\" Something unfamiliar seeping into the edges of my tone. I gasped as his hands massaged my breasts through the thin linen fabric. \n\n\"My desire for you is above any others.\" The intimate nature of our conversation made my stomach flutter and filled me with unease. \"I have changed my mind about heading to the docks straight away. I want you again.\" He growled. He pulled me back against him and forced a hand down the front of my leathers. \n\n\"O-oro.\" My voice cracked as he managed to push two thick fingers inside of me. He slowed Bo down to a graceful walk back through the tall grass of the field, the sound of the green blades swishing against our feet. \"You are insatiable.\" I accused. \n\n\"Will you deny me?\" His mouth was hot against my neck, marking me for all to see. \n\n\"Yes, that is my aim.\" I replied softly. \n\n\"I will remember that.\" He chuckled, withdrawing his digits from me and rubbing my moisture against my outer lips. \n\nI could feel his hardness against my leathers, and truly did not want to stop him, but it would hinder us from leaving Lamoria as soon as we were able. \"On the boat Oro, that is where you may have me.\" I flirted. \n\nHe slapped Bo's backside and we bolted forward, which made me yelp in surprise. The grass was trampled in our wake, and I did not envy the poor beast as the tall grass slapped his legs. He kept urging Bo on faster and faster, until our surroundings were a passing blur. \"On the boat, hmm?\" He coaxed, \"Where I wonder, against the mast like our first time in the woods? Maybe I will bend you out overlooking the water.\" He ground himself against my backside. \"Do you feel me, Esyld?\" \n\n\"Yes.\" I panted. \n\n\"You know what I am going to do with this.\" It was more of a statement than a question and it made my nipples ache against the tight linen top. \n\nThe docks were coming into view, and all I could think of was being held in position exactly as he described. Oro spotted his Kaptan easily enough and pulled up abruptly beside him. \"Is it settled?\" Oro huskily questioned. \n\n\"Yes, Majohr. The merchant ship will set sale just before sun up. It is a caravel, should get you both to Barbos swiftly.\" Kaptan Jakob replied. \n\n\"Ready to board?\" Oro asked eagerly. \n\n\"Aye.\" The great Kaptan laughed. \"Jons has already seen to your chest and weapons, Majohr.\" \n\n\"Gratitude.\" Oro dismounted fluidly and slapped the man on the shoulder. Kaptan Jakob gave his signature nod, and began walking away. Oro reached up to pull me down and ushered me aboard the merchant ship the Kaptan indicated. He purred against my ear, \"We are on the boat, Esyld.\" \n\nAn anxious giggle left my lips, \"Can we wait till we are below deck at the very least?\" \n\n\"Making me wait is not in your best interest, my p- Esyld.\" He caught himself. \n\n\"You like the chase, and you know it!\" I teased. \"If I gave in to easily, you may lose interest.\" After a moment, I tapped a finger against my lips, pretending to ponder something, \"Hmm, now there is a thought.\" I smirked and winked at him. \n\nHe grabbed me up suddenly, throwing me over his shoulder and began making his way across the deserted deck. \"I doubt I could ever lose interest.\" His masculine laugh, tightened my core, as he had so many other times. After all I had been through with this man, his wiles were unbearably charming and consuming, leaving me unable to resist his cruel temptation. \n\nI had fallen so far into depravity, twitching for my next release at the hands of someone who was a dangerous, unrepentant butcher. The sex was in fact clouding my judgment, I was no longer protected by Pelor's light in the oil pits of my inferno. When have I ever felt such bliss by Pelor's touch? What good has he ever done for me or my people? \n\n\"Esyld?\" Oro's face was marked with worry. \n\nI nodded and looked around surprised that in my reflection we were already below deck and I was laying on a stiff palette. \"Lost in thought.\" \n\nOro leaned me back and brought his lips to caress mine. \"Where were you, little bird?\" \n\nI felt a bit faint as my body blushed under the weight of his arousal. Panic began to seize my awareness, and kept the heat of lust at bay, I pushed him upwards, \"I cannot do this Oro.\" \n\n\"Cannot do what exactly.\" I could see his hackles rising with the anticipation for a fight. \n\n\"I am losing myself.\" I began, \"To this, to you. I cannot become this person.\" Tears were welling up in my eyes, emotional turmoil running rampant. \n\n\"Esyld, this is not a bad thing.\" He assured, and leaned in to kiss me. \n\nI jerked back suddenly, \"It is!\" I got up from the palette, \"It has been four days, since you captured me. Look!\" I cried, pointing to my knees, \"These are the wounds that are still healing, after you invaded my camp! This is not normal, Oro-\" tears spilled down my cheeks and I huffed incredulously, \"I am using your name, I have called you my Master...\" Frustrated sobs shook my body, \"You have swept me up in this, I am afraid I will never be clean again. A part of some whirlwind fantasy, where the punishment for my submission is the cruel bliss you force on me.\" I sputtered. \n\nOro looked at me as if I had gone mad, \"What is there to clean yourself of? The pleasure of sex? It has been a long four days, my pet-\" \n\nI rushed him in anger, pushing him back onto the bed and jumping onto his torso. I balled my hands into fists and beat them against his hard chest before he could restrain me. \"I am not your pet!\" I yelled. \n\n\"A slip of the tongue.\" Oro laughed. \"You enjoyed it as much as I did! You are acting like a scared little girl, because you want -\" he was cut short as I spat in his face. \n\nHis rage boiled over the edge and he bucked me off of him, so I nearly fell to the ground, only saved by his hands latched around my wrists. \"I thought we were beyond this, Esyld. Clearly I was wrong.\" He raised me up by the wrists pushed me back against the palette. \n\nI resisted against him with every fiber of my being, trying to claw and kick at him, but he was simply too strong. I shouted pitifully \"Do not touch me!\" \n\nHe slipped my hands in a quick knot and flipped me over so that he could secure the bond on a peg on the far side of the palette, leaving me able to stand, but bending me over at the hip. \"You are mine to touch.\" He growled. \n\nWhen I tried to flip the restraint over the peg he grabbed a nearby fire block and smashed it against the peg, turning it up into the boat. I would have to be cut out of these tight restraints once he was finished with me. The thought brought panic up my throat, \"Help!\" I cried. \n\nHis hand jerked my leathers down nearly tearing them as he forced them down my hips. \n\n\"HELP!\" I screamed once more, tears free falling onto the palette. \n\n*SMACK* His hand came down on my bare bottom. I cried out in pain. *SMACK* Another, jostling my hips against the palette. \"Do you want to continue screaming?\" He panted. \n\nTearfully I shook my head. \n\n*SMACK* \"Try again.\" He growled. \n\n\"No, Master!\" I sobbed, letting my head go limp. \n\nI heard Oro fuss with his belt and breeches and I tried to angle my head back to see him, but it was difficult with the angle of my arms beside my head. I felt his rigid cock against my bare entrance. I swung my hips to the side, but Oro was able to easily reposition me. \n\n\"I don't want this!\" I pleaded and groaned as his hand came up to pinch my nipple viciously. \n\n\"Hush.\" He purred. Once more he was pressed against my entrance, my lubricant coating the tip of his crown, my body freezing as he inched his way slowly inside of me. \n\n\"No.\" I wept pitifully, lowering my head trying to remove myself from this subjugation. \n\nHe was not as gentle as he had been in the past, instead bruising my hips into the palette with each thrust. My cheeks were flushed as I wriggled against him, legs spread apart, his heavy sack slapping my sensitive folds. \n\nHow could he do this to me, for all his claims, he was still no better than a beast, and I was no better than a gash for him to rut upon. His pace quickened and he grunted loudly with each thrust. \n\nDefeated I begged, \"Not inside of me...Please Oro...\" My head lolling with each precise thrust. \n\nHe gripped my hips tightly and bent over my body so he could speak hotly against my ear. \"I am going to fill you, Esyld.\" His thrusts slowing so I could feel each languid stroke and pulse. He moaned in my ear, \"Can you feel my seed?\" He was buried deep within me, his crown ensuring delivery of his potent spending, as his shaft pulsed jet after jet inside my heated tunnel. He stayed in me for quite a few moments as he recovered. \n\n\"This is who you really are.\" I wept my accusation. \n\nHe kissed my cheek from behind before leaning back, thrusting once more for good measure before slipping out of me carefully. Hands still secured he helped me lift my underwear and leathers back up, trapping his spending against me. He moved me to rest fully on the palette, my restrained arms at breast level before he finally pulled up his own breeches. \"I will bring you some food, and ensure that you are not disturbed.\" \n\n\"Please untie me, Oro.\" I begged. \n\n\"I will be back.\" Oro said, and opened the small door that lead up to the deck. ",
        "\"Oro!\" I yelled after him, with no response. I tugged angrily at my bound hands, my wrists smarting from where the leather thong chaffed against it. I swiveled around so that my feet were pressed against the wall, and clasping my hands together I pushed with my legs. The peg pulled out from the wall a little bit, and gasp of success slipped my lips. Just one more good tug and I would be able to slip free. I braced my feet once more and kicked against the wall, completely jerking the peg free and flipping me back off the palette. \n\nI hit my head against a barrel as I fell and was dazed a moment, as I tried to get to my feet, the door opened Oro stood smiling down at me. \n\nI held the sharp end of the peg out in front of me, \"So help me-\" \n\n\"Stop.\" He commanded, a look of anger on his face now. He tossed a yellow fruit onto the palette along with a bulging sack. \"I have hurt you, and I can see that you need space.\" He pulled a thin coiled rope from the wall. \"I will give you the time you need, but I do not trust that you will stay, or avoid injury.\" He drew closer to me, \"I am going to tie you once more, it will be much more comfortable this time, Esyld.\" \n\nI let out a panicked protest, \"No, Oro, please.\" \n\n\"Just until I return, Esyld, I promise.\" Oro insisted. \"Now please, let us go easy, hmm?\" He pleaded. \n\n\"I hate that you make me feel this way.\" I whispered, tears filling my eyes, my arms lowering slightly. \n\n\"I know.\" Oro remarked. He reached out to me as my arms had lowered and I swung them back up angrily, nicking his hand with the peg. He recoiled a moment before making a deliberate move and disabling my hands. He took out his dagger, \"Do not move.\" His voice was cold and yet fiery with rage. \n\nHe cut the previous binding and drew the rope around to cuff my wrists together until the rope was quite snug. \"If you struggle, these ropes will cinch, and it will hurt.\" He warned, giving me a bit of lead to move my arms and tied the rest of the lead around the beam. \"As I promised earlier when I return I will unbind you. In the meantime please eat and try and get some rest, Esyld.\" \n\nHe leaned in to kissed my cheek, until I snapped my teeth at him. \"Have it your way.\" He turned away and slammed the door behind him, leaving me in near darkness. \n\n\"Help!\" I yelled once more after I thought Oro had gone, and I heard footsteps on the deck above me. Someone is coming. I thought relief slipping through me, until of course, I saw Oro's red face staring back at me. \n\n\"Untie me.\" I begged. \"I wont leave I promise.\" A lie I am sure he could read plainly on my face. \n\nHe huffed and grabbed the clipped leather thong and was able to successfully secure it around my mouth. \n\nI made unintelligible noises and Oro shook his head with a scowl, \"Why would you make me do this to you? When I return we will discuss your behavior.\" He kissed my forehead and left the small room, securing the door shut behind him. \n\nI tested my ability to scream or cry for help, but it all came out as muffled grunts. The constant physical and emotional strain left me weak and exhausted. I tested the restraints but as they cinched, I decided to leave it be. Before long, as I was lost in thought, wondering what Oro might be doing, who he might be with...Would he tell his companions of his latest conquest? With these sick thoughts, the boat lulled me into a fitful sleep. \n\nThe door squeaking closed woke me to a pitch black room. The gentle swaying of the boat seeming to calm me despite that. I tried to say his name, but my mouth was still gagged. \n\nThe figure at the door turned, uncloaking the light hidden within and momentarily blinded me. I held up my hands to block out the light and tried to look around it. \n\n\"It looks like you and our dear Oro are getting along well.\" Governor Aryn's voice made me tremble in the dark. \"I wondered where you might be when I did not see you at his side. Fortunately, this affords us some time together.\" \n\nI curled up as tight against myself as I could muster on the far side of the palette next to the beam. Oh Gods! \n\n\"Come on now, Fahi\u015fe, if you play along I will be gentle.\" The Governor set is lantern down on the barrel I hit earlier, and began to pull apart his robes. \n\nI screamed pitifully around the gag. Please Oro, come back! I prayed. Governor Aryn simply laughed blocking most of the light with his body as he closed in on me. As he grabbed one leg, I kicked the other and landed a blow right to his round belly. \n\nHis fist swung and my head suddenly whipped to the side, lights flashing behind my eyes, horrible aching pain at my temple. Something was running over my eye, and tickling my right cheek, warm and slow. *pip* *pip* *pip* I could hear it falling from my chin to my linen shirt. \n\nI tried to yell Oro's name, which echoed painfully in my head. My body was being jerked, I could not see out of my right eye, my left eye straining on the dark figure. I felt the bare flesh of my stomach and legs exposed to the air. I groaned painfully once more. My legs were pushed apart and I felt something probe at my swollen sex. \n\n\"He seeded you pretty well, Fahi\u015fe. I have heard you like men of power, let us see who's seed is stronger shall we?\" The heavy man boasted. \n\nI whined as I felt him slip inside of me. You are stronger than this, Esyld! Do something! I pulled my legs back and kicked with all of my effort, hitting him against his shoulder and chin. \n\nA roar of rage thundered nearby. I clawed at the gag, painfully slipping it down enough to scream. \"HELP ME!\" My terrified scream was shrill, and once I started I could not stop. \n\nI another blow to the face and I tasted blood against my tongue. \"Help.\" I croaked. \n\nHe laughed sadistically and said \"I have a better way to use you,\" flipping me over onto my stomach, sending my head spinning, emptying the meager contents of my belly onto the bed. I felt him climb behind me, and I struggled profusely, cinching the binds against my wrist, biting into them painfully. \n\n\"No!\" I croaked once more. I felt him rubbing something against my puckered hole. I tried to scream once more, but his hand pushed my face into the bed, while he drove roughly into my back portal. I sobbed at the excruciating invasion, his withdrawal just as agonizing. \n\nI thought of what I would do to the Governor if I should get freed, but then I realized this man was used to taking what he wanted without retribution. Oro was no different. It was because of him that I was strapped helpless as I was in this moment. \n\n'Why would you make me do this to you?' Oro's previous statement hurt now more than ever. As if I had the intention to be raped, first by the man I thought was supposed to protect me, then by a man I should have been protected against. But here I lay helpless, being brutally sodomized, because I made him do this to me. \n\nI made many promises to any entities that would listen, if they helped me survive this night. My head rang painfully, as the door crashed open. \n\n\"ESYLD!\" Oro's voice roared. \n\nThe Governor slipped all of the way out of me, bringing a cry from my lips, \"Stand down\" he ordered Oro. \n\nI painfully rolled onto my back, the lantern casting light on my face. I saw Oro out of my left eye, my lip trembling from the painful tears that mixed with the blood on my face. Oro withdrew his sword, \"You should have headed my word, old man.\" \n\n\"Think boy -\" but it was already too late as Oro drove his sword deep in the Governor's belly. He fell to his knees on the floor, grasping at the blade protruding from his gut. \n\nOro swept over to me, eyes filled with tears, and cut me free of his bindings. \"What have I done?\" He growled, delicately checking my face. \n\nThe Governor gave a gurgling cough, to which I hissed,\"He is alive.\" Anger coursing through me. \n\nOro placed the dagger in my hands, and I sobbed as he helped me stand up from the bed. I turned the dagger on him, \"I hate you!\" I cried. \"You are the sins of your people. I should cut your abscess free of this world.\" \n\nOro reached out to me and I swung wildly with the dagger, \"DO NOT TOUCH ME!\" I screamed with enough force to make him step back, even as I nearly doubled forward with the pain in my head. Carefully, I limped to face the old man, dying on his knees. I looked back into Oro's sorrow filled eyes, and he nodded softly. \n\nI turned back to face the wide eyed Governor and drove the blade into the side of his throat and let it rest the barest of moments before I drew it back out, blood spurting up from the open wound. My hands shook as I wondered if I should strike again to make sure he was dead. \n\nOro pulled his sword from the Governor's lifeless body and dropped it to the floor, and dared to pull me into his arms. \"I am sorry.\" He whispered against my temple, getting my blood all over his face. \n\nI crumbled, sobbing my relief and anger, and Oro scooped me up carefully into his arms, his tears fell onto my head as it rest against his broad chest. \"Forgive me.\" He beckoned."
    ],
    "authorname": "Lyssabyss",
    "tags": [
        "sumission",
        "master",
        "slave",
        "defeat",
        "conquered",
        "dark",
        "creampie",
        "anal",
        "bondage"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/barbarian-bound-ch-04"
}