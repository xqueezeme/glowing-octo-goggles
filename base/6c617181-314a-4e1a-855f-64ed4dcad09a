{
    "title": "The Link Pt. 03: The Huntress",
    "pages": [
        "Author's Note:  If you haven't read the first two installments of this story, you will be severely confused. I dislike when writers rehash old topics and I promised myself I would never do it. Thank you, Paul. Your editing help and insight worked well with my ignorance. \n\n<p align=\"center\">Chapter 1 - Teegan</p>\n\n\"Stop calling me ma'am,\" I told Jason. His military bearing did little to sway me to accept the title. \n\n\"Yes, ma'am,\" Jason responded with a smile. I could feel Caleb laughing through the link. He knew the word made me uncomfortable. I was neither old nor deserving of respect. It's something you called a grandmother. Jason was maybe ten years my senior. His short red hair looked as if it was meant for a uniform, though he had told me he hadn't worn one in years. Ex-army ranger with six years of service. I sighed, knowing it would take some time for me to get used to the word, or change his ways. \n\nThe car pulled through a special gate at the airport, one I didn't know existed. A guard, probably TSA, checked the driver's ID against some list on a tablet. A brief exchange of words and we were waved through without inspection. I was surprised by the trust. It was an international airport.\n\n\"Don't we go through a security check?\" Caleb asked as he watched the guard closing the gate after we had passed. \n\n\"No, sir,\" Jason said, turning in the front seat to face us. I felt Caleb's surprise at the 'sir' moniker. It made me smile to know that our head of security unintentionally insulted us equally. \"We have been pre-cleared. This portion of the airport doesn't have access to normal passenger traffic.\"\n\n\"We have a special charter or something?\" Caleb asked. He was as impressed as I was with the efficiency of the operation. \n\n\"Nope, we're using Miss Fuller's plane,\" Jason said smiling at me. It was the same smile he had when I bonded with him at the hospital. \n\n\"Teegan, please.\" I tried again to lower the undeserved respect. \"What to do you mean, mine?\" The bond exposed my security as dedicated, and I knew it had to do with my past. Someone with a lot of money was making sure Caleb and I survived. Neither of us doubted the authenticity of the protection. We welcomed it after the sniper and the maniac at the hospital. \n\n\"That,\" Jason replied, pointing out the windshield, \"is yours, ma'am.\" I ignored the honorific this time. My eyes were entranced by the sleek white jet that our SUV was approaching. There were steps embedded in the door that were open to the ground. Two large jet engines cradled the tail behind a dozen portal windows. The wing tips were upturned to the sky, and the pointed nose bowed toward the ground, giving it the appearance of a fast bird of prey. \n\n\"Damn,\" Caleb breathed. \n\n\"Mine?\"\n\n\"Yes, ma'am,\" Jason said with a chuckle. \"Mr. Watterson will explain everything when we get to Portland.\"\n\n\"Portland?\"\n\n\"Oregon, ma'am,\" Jason replied. The SUV pulled to a stop next to the plane. Jason stopped us from getting out, ordering us kindly to wait for the driver and him to exit first. They quickly surveyed the area then opened the door closest to the planes gangway. Caleb exited first, looking around for threats. He was as spooked as I was after the incident at the hospital. His hand was waiting for me as I stepped from the car. A feeling of privilege, like I was some wealthy supermodel, sat uncomfortably in my stomach. Bodyguards and help exiting the car were so foreign and undeserved, though the protection did make me feel better. \n\n\"It feels weird,\" Caleb whispered as we shared our feelings through the link. I acknowledged his words silently through the bond. Jason walked next to me, on the other side from Caleb. The driver took up a position behind me. They were shielding me with their bodies. I didn't like the idea that they believed my life was more important than theirs. They could have families depending on them. I wasn't the ma'am they thought I was. \n\nThe interior of the plane was more luxurious than most people's homes. Three sets of large tan leather chairs turned into each other on one side of the plane. The tables between the seats were made of highly polished wood with an artistic swirling grain. Along the other side was a leather couch that could seat ten or more. The flooring looked like it was made from a single slab of marble. At the rear of the plane, a large flat panel was mounted on the wall. \n\n\"This is yours?\" Caleb asked, not really wanting an answer. \n\n\"Good morning, Miss Fuller.\" A man dressed in black pants and a white polo shirt greeted me warmly then nodded at Caleb, \"Mr. McGuire.\" He waved his hand toward the large leather seats. \"If you could please choose your seats, I'll notify the captain that we're ready to take off.\" His smile was practiced and very welcoming.\n\n\"Thank you,\" I said, unable to decline an offer given so perfectly. I chose a seat facing front, Caleb the one across the table from me, looking toward the rear. \n\n\"My name is Thomas,\" the man said, reaching across me to pull the hidden belt buckle forward. I found its mate on the other side, and he allowed me to finish the connection. Caleb duplicated the process on his chair. \"If there is anything you need,\" Thomas said, looking at Caleb, then back toward me, \"it is my job to make it happen. Once we're airborne, I'll be happy to take you on a tour. Perhaps you would like to freshen up and maybe have some breakfast.\" I smiled when I felt Caleb's stomach growl.\n\n\"Breakfast would be wonderful,\" I said, trying to match Thomas's friendliness. \n\n\"Of course,\" Thomas said, \"I'll bring you both a menu as soon as the Captain announces that we've leveled off.\" He headed toward the front of the plane and Jason walked past me, toward the seats behind, with a smirk on his face. I guess I looked a little overwhelmed at the situation. \n\n\"I like your plane,\" Caleb whispered.\n\n\"I'm only borrowing it,\" I replied as quietly as I could. \n\n\"Welcome aboard Miss Fuller,\" A deep female voice called over a PA system with no visible speakers. \"I've been given priority clearance for takeoff. Please sit back and enjoy the flight.\" There was no tray table announcement nor anything about floatation devices. The plane began moving, heading toward the runway, without anyone checking to see if I was still buckled. We certainly weren't flying coach. \n\nFive minutes later, we were climbing towards the clouds. My body molded into the seat, which was infinitely more comfortable than any other planes I had ever been in before. If I closed my eyes, I could easily have fallen asleep cradled in the leathery warmth. Caleb was smiling inside and out, enjoying the luxury and relieved we were off the ground, where the crazies couldn't get us. I was happy that his anger was gone. He sent me a burst of love, letting me know that the anger was only for defense, my protection. \n\n\"I don't think it should be used as a weapon,\" I said to Caleb, the context clear only to him. \n\n\"You used it,\" Caleb pointed out. \n\n\"That guy shot Zane,\" I reminded him. Memories of my brother on the ground, blood leaking from his body, were still fresh. My eyes began to cloud up as I remembered tearing that man's mind apart. He was evil, but still, I left him as nothing but a shell holding organs in place. \n\n\"I saw what was in his mind,\" Caleb said, \"I won't let anyone get that close again.\" I felt his strength fill me, wrapped in love I couldn't ignore. I reached forward, across the table, and Caleb grasped my hand. \n\n\"Promise me we won't let it consume us,\" I added. The anger was so easy and powerful. I hated its necessity. \n\n\"Never,\" Caleb said with that smile meant only for me. \"There are much better uses for our bond.\" Visions flooded me, most of them involved me without clothes. I closed my eyes and let his impressions of the better woman strengthen me. I loved how he saw me in his mind. I'll never measure up, but to him I already did. \n\n\"I love how you see me,\" I whispered as the warmth filled places only he has been. I opened my eyes to find him looking at me with the desire I felt. There was a perfect synchronicity to our feelings. The PA brought us back to reality. \n\n\"We have reached our cruising altitude,\" the Captain announced, \"It should be a smooth flight of about four hours. Feel free to move about the cabin.\" Thomas was on his feet before the message was complete.\n\n\"The menus,\" Thomas said as he handed us each a small leather bound notebook. \"Would you like some coffee, tea, or juice to get you started?\"\n\n\"Tea, please,\" I said as I opened the menu to find two sleeved cardboard sheets with lists of breakfast items.\n\n\"Juice sounds good,\" Caleb responded. \n\n\"Orange, grapefruit, or apple?\" \n\n\"Orange would be great,\" Caleb responded, and Thomas headed off to the back of the plane. \n\n\"This is like a restaurant,\" I observed, feeling Caleb's surprise as well. There were so many items on the menu it was hard to choose. \n\n\"Who's paying for all this?\" Caleb asked. I heard Jason suppress a laugh from behind me. \n\n\"What's so funny?\" I asked Jason as I struggled to turn in my seat to see him. He rose and showed me where the switch was that released the swivel on my chair. \n\n\"You, Miss Fuller, are paying for all this,\" Jason said with a smile. He was enjoying our confusion. \n\n\"Well, I hope they'll take an IOU,\" I pointed out. The fact that there were no prices on the menu began to concern me. Jason's laugh was belly deep. \"I'm glad you're having fun with it,\" I added without a smile. \n\n\"I'm sorry, ma'am,\" Jason said, though his smile said he wasn't, \"I suppose I'm having a bit of fun at your expense.\" I glared at him, forcing him to continue. \"When I say this is yours, I mean it is all yours. Every nut and bolt on this plane are yours. You pay the salaries of everyone aboard.\" He let that sink in. Caleb and I felt like we were sitting on the edge of some monstrous cliff, our legs dangling over the edge, a hair's breadth from going over. \n\n\"I don't understand,\" I admitted. \n\n\"Mr. Watterson should be the one to explain,\" Jason said, \"But I can see that waiting until tonight will be a strain. I'm not privy to all the details, but in a nutshell, you are the sole beneficiary of Douglas Corbett's estate. Well, empire actually.\"\n\nMy stomach felt as if I had gone off the cliff. I remembered what Mom and Dad said about Douglas Corbett; the insane man who funded my creation, kidnapped Mom and me after I was taken from his control. I had him pictured as some Nazi trying build a master race as if I could be the mother of such a thing. \n\n\"She's what?\" Caleb asked. \n\n\"Corbett?\" I added. Caleb was falling off the same cliff. \n\n\"Your juice, sir,\" Thomas interrupted, moving around Jason to put a tall glass in front of Caleb. \"Your tea will be ready in a moment, ma'am\" he informed me and returned toward the back of the plane. Ma'am was the correct term for the person signing your paycheck. I still didn't like the sound of it. I put one hand over the other to stop the nervous shaking that had started. \n\n\"It's best if Mr. Watterson explains the details,\" Jason continued, \"I've been charged with making sure you get there to hear them. Currently, I am the head of security, serving at your pleasure, ma'am.\" He smiled deeply when he emphasized the honorific. He was having fun with me.\n\n\"So, I can fire you?\" I asked. \n\n\"I am your employee, ma'am\" Jason confirmed. His smile didn't shrink. There was a lot of confidence in his demeanor. I was jealous of it and wondered who really worked for whom. \n\n\"Then I can order you to call me Teegan,\" I said, attempting to find his boundaries. \n\n\"It would pain me to comply,\" Jason said, nodding his head. \n\n\"Ma'am makes her feel odd,\" Caleb negotiated, knowing my apprehensions intimately. \n\n\"Miss Fuller works,\" Jason said. There was a twinkle in his eye, almost a flirt. For a split second, I imagined him with his shirt off. That was all it took to lose what leverage I had for all those times that Caleb's mind drifted. Caleb latched onto the thought, and I flooded him with love, trying to douse the image. We sparred silently, and I smiled at the humor of it. It's not like anyone would ever be a threat to what Caleb and I had. \n\n\"Miss Fuller will work for now,\" I gave in. \"Where is the restroom?\"\n\n\"Your bathroom is in the back, Miss Fuller,\" Jason said, pointing to where Thomas had disappeared. I walked behind the wall where the flat panel resided and found myself in the kitchen. Thomas was preparing a silver tray for my tea, complete with fancy cream and sugar dispensers.\n\n\"Bathroom?\"\n\n\"Through your bedroom, Miss Fuller,\" Thomas replied, pointing to the door behind the kitchen. I opened the door and caught my breath. There was a bed that ran along one side of the plane, white satin sheets and a beautiful plush comforter that called to me. The far wall housed another door and a painting of the ocean. The walls were paneled with a soft tan wood with intricate designs carved into the trim. Reading lamps were mounted over the bed. I had to walk by a small desk on the left side to get to the bathroom. The dresser was made from a darker wood like the desk but looked as if it was coordinated by a pro. More style than I was used to. \n\nI sighed when I saw the bathroom. Marble tiles surrounded a tub that grew from the wall. A gold faucet emerged from a large ceramic seashell sink, shooting high then curving downward like an elegant swan. Everything gleaming, cleaner than anyone deserved. I sat on the toilet and let the stress swallow me up. It was all too much. \n\n\"A little overwhelming,\" Caleb whispered from the other side of the door. I felt him coming and knew his concern for me. I opened the door, and he was in my arms. No kissing, just holding. It was what we both needed after a few days of hell. \n\n\"What if I don't want all this?\" I asked. Zane had gotten shot because of me. I deserved nothing. \n\n\"What if all this wants you?\" Caleb returned. The flat of his hand was caressing my back, forcing the world away and forming a little bubble of us in the chaos. I pulled him tighter to me, wanting things to return to the way they were, in the days before Zane was shot. \"I wouldn't mind undoing the last couple of days myself,\" Caleb put a voice to our shared thoughts. \n\n\"I feel like we don't have any control,\" I whispered. \"Things are happening, and we're just reacting like someone has mapped out some unavoidable fate for us.\" \n\n\"Maybe there is a plan,\" Caleb said, \"at least it let me find you.\" I lifted my head and pushed Caleb against the wall as I stood. I may be helpless in the sea of time, but I could take the love I was offered. My kisses were forceful, and I could feel how they affected Caleb. His visions of me, strong and beautiful, were what I needed. The way he held back, letting me control our little bout of passion, was exactly what I needed. I leaned back with a confident smile. \n\n\"You're mine,\" I demanded. \n\n\"Anytime you need me,\" Caleb added. His smile was growing as visions of joining the mile high club filled his mind. My body was reacting to his thoughts at an alarming rate. \n\n\"Breakfast, bath, and then bed,\" I ordered. \n\n\"Yes, ma'am,\" Caleb laughed. I smacked his shoulder, then let him kiss me. Problems are so much easier to deal with when there are two. \n\n<p align=\"center\">Chapter 2 - Teegan</p>\n\n\"Breakfast was excellent, Thomas,\" I said. The words sounded strange coming out of my mouth, like I was born to wealth and complimenting a servant. I hadn't meant it to come out like that. The omelet was excellent, and the bacon had a perfect mix of crisp and chewy. \n\n\"I'm glad you enjoyed it, Miss Fuller,\" Thomas replied. His smile seemed honest. Hopefully, he understood I meant it nicely and not authoritatively as it sounded. Caleb laughed silently inside at my discomfort. I gave him a look which only drew forth his outward smile, weakening my glare. Thomas cleared the dishes, oblivious to our internal discussions. \n\n\"I could get used to this,\" Caleb said to me, leaning back in his chair like he owned the place. \n\n\"What about your dreams?\" I asked, hoping that wealth didn't breed apathy. \n\n\"I think all of this puts them back on track,\" Caleb replied. \"In fact, your dreams no longer have to wait for mine. The money problem is solved.\" I could feel his building comfort with the situation. \n\n\"My dreams are your dreams,\" I told him. \"I have no idea why I'm on this planet. I just know it's a lot more fun with you.\" I sent him some memories of our naked play from the past week. I loved how it made him smile. My body reacted deliciously to the return volley from his mind. \n\n\"Jason,\" I said, spinning my chair around to face him. I needed a few answers before I gave into the lust that was building. I could feel Caleb sigh at the delay. \"How did you know I would be attacked this morning?\" \n\n\"We didn't, Miss Fuller,\" Jason replied, \"we were reacting to the earlier attempt. I was told not to confront you inside the hospital so we set up a perimeter and waited.\"\n\n\"Do you know the man who attacked?\"\n\n\"No,\" Jason said, shaking his head, \"Rob is trying to find that out. He stayed behind to explain to the police and see what he could find out.\"\n\n\"Rob?\"\n\n\"The other man that was with me. The one who took the target down,\" Jason answered. \"I'm sure he's still explaining the self-defense aspect of his actions.\" Jason smiled with more than a little pride. \"I'm glad he was in good form this morning.\"\n\n\"Could he be in trouble?\" I asked. I didn't want anyone ruining themselves for me. \n\n\"Maybe in the short run, but he has a permit to carry, and the assailant didn't leave him any choice.\" \n\n\"I can afford a lawyer, can't I?\" I asked, suddenly worried that Rob might be in more trouble than he could manage. \n\n\"You probably have a hundred on retainer,\" Jason said, with humor. His smile disappeared when he saw the expression on my face. \"I'm sure Mr. Watterson is already working on it. Rob knows we won't abandon him.\"\n\n\"Who is Mr. Watterson,\" Caleb asked. \n\n\"Victor Watterson runs things in Miss Fuller's stead,\" Jason replied to Caleb. \"He was Mr. Corbett's personal assistant and confidant. I guess the last person to see him alive.\" Jason looked from Caleb to me. \"I understand he knew you as a baby. He's the one who told me to ask for your trust.\"\n\n\"I know about Corbett,\" I said, \"but no one mentioned Mr. Watterson,\" I looked back at Caleb who shrugged. We were in a too deep to worry about it now. \n\n\"He thinks you're an angel,\" Jason added, smiling, \"and I must say, I agree.\" \n\n\"I assure you I have no wings,\" I responded, wanting to be rid of the such an undeserved title. I would have preferred ma'am. \n\n\"That thing you do,\" Jason continued, \"it's like all the problems in the world disappear and a supreme clarity takes over. How do you do it?\"\n\n\"She was born with it,\" Caleb replied for me. He knew I didn't want to discuss it like it was some kind of gift. \n\n\"I think I need to lie down for awhile,\" I said, putting an end to the subject. I tried not to smile as Caleb's heartbeat increased. I was there again, in his mind. That perfect woman without a flaw of any kind. My body heated, which caused Caleb's to respond as well. A lovely unstoppable cycle. \n\n\"Of course,\" Jason said, then his eyebrows raised when Caleb rose with me. I was going to give him a look, but he turned away, seemingly ignoring the issue. I took Caleb's hand and led him past Thomas who was cleaning up in the small kitchen. Thomas didn't even bat an eye, washing a pan as if we weren't even there. I guessed discretion came with the plane.\n\n\"We didn't bring anything,\" I panicked when Caleb closed the door. My insides were already excited about what we intended, and I had forgotten we left without stopping at home. Caleb's kiss muffled my next statement, squelching my thoughts about condoms. I let my body take me into him, pulling him closer as our love intertwined inside. I broke out of my cloud, forcing reality to take hold. ",
        "\"We don't have any protection,\" I whispered. Caleb smiled at me and a vision formed in his mind. At first, I was shocked, then excited, then a lust wrapped in his love overtook me. \"Are you sure?\" I asked, knowing he was. He answered with his lips, as his hands began to undress me. A shiver ran down my spine as his image of me sprawled on the bed flooded my mind. He loved the idea of control and my loss of it. He wanted to be the captain of my pleasure.\n\nI broke away from Caleb, stripping my clothes off more quickly. He chuckled at the desire he inflamed in me, and I bit back a smile at the devilish look in his eyes. I loved how much he wanted me. He pushed me onto my back as soon as the last clothing left my body, and climbed on top of me. I was shaking as his lips, starting at mine, traveled slowly down my body, slowing to tease my breasts that were suddenly so alive. The anticipation was so thick I could barely breathe. \n\nCaleb nibbled on my tummy, sending ticklish waves dancing along my skin. He tortured me with his tongue, tiny licks sending little electric shocks to his final target. I found myself struggling, trying to scoot up to hurry him along. I could feel his smile as he held me in place, relishing my delicious anguish. \n\n\"Stop teasing,\" I half moaned, begging Caleb to deliver what his mind had promised. I was on fire with the thought of it. His lips formed a smile against my skin, and I felt his power grow. I was at his mercy, and he was enjoying it as much as I was. His lips moved down confidently, finding his goal more alive than it had ever been before. I could feel him concentrating on my scent, absorbing it like it was the fragrance of heaven itself. My hips jerked, involuntarily begging. \n\nThe warmth of his breath graced where no one had breathed before. The initial contact sent heat traveling deep inside of me, causing more pleasure than I had anticipated. My breath caught, and I could feel his pride. The intensity increased as he used our bond to know exactly what to do and how to do it. My hands found his hair, so beautifully in need of a haircut. A moan escaped my lips as his tongue continued to lovingly explore, finding the spot, the one place where my control ended, and his dominance reigned supreme. I closed my eyes, arched my back, and the world left me. \n\n\"You growled,\" Caleb said with humor in his voice. I opened my eyes to see the proud smile I knew would be there. He crawled up my body, kissing as he went. My muscles felt like noodles, all the energy had been ripped from them. \n\n\"I did not,\" I responded, my voice sounding like it was short of air. \n\n\"You did,\" Caleb argued, \"and it was lovely. Like a tigress.\" I laughed as he pulled my weakened body into his. I loved how his chest felt against mine. He wasn't the unconfident boy I met in the mall anymore. He was all man. My man. I growled again and pushed him onto his back. \n\n\"Oh god,\" Caleb whispered as my intent became clear. I smiled and kissed my way down his chest, enjoying how quickly his control faded into pleasure. My will was now his greatest desire. I marveled at how giving me such ecstasy had excited him to a fever pitch. The apprehension that should have been present was nowhere to be found. I dearly wanted to give to him, what he had lovingly given me. When my mouth closed around him, his legs began shaking, and I felt his surrender, body and soul. I was slow and luxurious, enjoying his taste and letting my tongue tease, finding spots that excited his entire body. His mind exploded into mine, euphoria mixed with all his love flooded into me. \n\n\"We learn quickly,\" I whispered as I moved back up into Caleb's arms. He laughed between deep breaths while his normality returned.\n\n\"It's easy when I know what you like,\" Caleb said, his smile frozen as his body calmed. The link made it simple. There was no need to question if I was doing it right. Our pleasure echoed within the bond, pointing out exactly what felt good. I snuggled into Caleb and simply enjoyed the closeness. It was good to know he loved my skin next to his. \n\n<p align=\"center\">*****</p>\n\n\"Miss Fuller,\" Jason called from the other side of the door. He had already knocked at least once though it had barely registered in my dreams. Caleb moved, and coolness invaded where once his skin had been. \n\n\"One minute,\" I called back, rubbing the sleep out of my eyes. I felt Caleb's lips on my shoulder, helping me wake. It was nice waking up with him next to me. Even with our permanent connection, his touch was magic. I turned and shared a kiss, knowing the truth of how much he enjoyed it as well. I wondered if we would ever get bored of it. \n\n\"Never,\" Caleb replied to my unvoiced question. I laughed at how my apprehensions disappeared with only a thought. We reinforced the happiness in each other. I greedily stole another kiss and then we dressed. \n\n\"It's our understanding that your phones are being tracked,\" Jason said, once we had returned to the front cabin. \n\n\"By who?\" I asked. \n\n\"A section of the military,\" Jason replied, \"with the help of the FBI. We have some contacts that have been keeping tabs on those that have been keeping tabs on you.\" He gave me a proud smile. The man really liked his job, or he enjoyed knowing more than me. \n\n\"Should I turn it off,\" I said, pulling the phone out of my pocket. Caleb followed suit.\n\n\"That's the first step, although it is best to isolate them from any tower contact,\" Jason pointed out. \"You have a safe on board that would eliminate any chance of a network connection.\" \n\n\"I have a safe?\" I asked stupidly, \"Do I know the combination?\" Jason laughed, more at me than with me. \n\n\"Mr. Watterson sent the combination with instructions on how to change it,\" Jason said. I wasn't sure I liked Jason's personality, though he did seem to be efficient in the bodyguard department. \n\n\"Do you dislike us?\" Caleb asked. He knew my reservations and felt the same way about Jason. I wouldn't have put it so bluntly, but it was out now so I stood beside my love and awaited Jason's answer. \n\nJason's expression lost all its humor. Caleb's question had struck deep, and I could see him trying to form a response. Twice his mouth opened and nothing came out. Then his eyes regained their strength, and he answered. \n\n\"My apologies, Mr. McGuire,\" Jason said formally, \"I'll maintain better decorum in the future. I assure you that Miss Fuller's protection is the only thing on my mind.\" I liked him better before. Now he sounded like he expected to get fired. \n\n\"That's not what he meant,\" I said, shaking my head. \"We need you, the incident at the hospital makes that very clear. It's the way you talk to us, almost like you expect us to hold your hand when we cross the street.\" \n\n\"I'm not used to a boss who is younger than me, Miss Fuller,\" Jason admitted. \"I assure you, I like you and your gift.\" \n\n\"Then call me Teegan,\" I said, \"and we'll be friends. I don't know anything about being a boss, nor running an empire. Right now, I need friends more than employees.\" \n\n\"And call me Caleb,\" Caleb added. \n\n\"Yes, ma'am,\" Jason said with a smile. Caleb had recognized the teasing before I did, halting the less than friendly response I was considering. I smiled back instead. \"Teegan it is.\" Jason nodded. \"Mr. Watterson won't like it,\"\n\n\"He'll have to get used to it,\" I said, deciding to set my own rules. There was a surge of pride from Caleb, something I didn't expect. He enjoyed me expressing strength. I shared a look with him, which probably confused Jason. \"Now, where is this safe?\" I asked.\n\nJason took us back to the bedroom, ignoring the ruffled bed. The safe was hidden behind the painting of the ocean, exactly where it was in every movie I had ever seen. It had a digital combination lock in which Jason deftly entered the current password and opened it revealing a sealed letter in an otherwise empty iron hole in the wall.\n\n\"This is for you,\" Jason said, handing me the envelope that had my name handwritten on the front. I traded it for my phone, and Caleb followed with his. \"This is how you change the combination...\"\n\n\"No need,\" I interrupted as I started to open the letter. \"There's nothing we need to hide in there that you can't know about.\" Jason looked shocked at the trust. \"After all, I'll know who to blame if anything is missing.\" He caught onto my teasing quicker than I had caught his. His smile seemed friendlier once I realized it for what it was. Jason locked the phones away and left me to read the letter in private. \n\n\"He likes to tease people,\" Caleb said. I nodded as I pulled out a tri-folded letter and a small computer thumb drive. \"What's it say?\"\n\n\"It's from Corbett,\" I said after I had glanced at the bottom. \n\nTeegan,\n\nI give you the curse of wealth. Everything you have ever wanted is yours, along with the never-ending battle to keep it. \n\nYou are my legacy, so do good things. \n\nD Corbett\n\nP.S. The flash drive is for your mother. \n\n\"He was truly nuts,\" I said, shaking the letter at Caleb. \n\n\"What does he mean, you're his legacy?\" Caleb asked. \n\n\"I don't have a clue. It's not like I remember meeting him.\" The letter added another mountain of stress to my reality. I was barely able to run my own life, much less improve Corbett's name. Caleb wrapped his arms around me, lowering my anxiety. Inside, he was reminding me that we were an us. \n\n\"We'll figure it out,\" Caleb said and kissed my neck, just below my earlobe, exactly where he knew it would be most effective. Damn bond. He melted away some perfectly good distress. I loved that he could do it so easily. \n\n<p align=\"center\">Chapter 3 - Caleb</p>\n\nMy girlfriend is rich. Teegan was still in denial, and I had to admit I could barely believe it. It was either the truth, or someone spent an enormous amount of money to fool us. The latter was too out there to consider. Every time I tried to solidify it in my mind, Teegan's thoughts overwhelmed the evidence. It was the responsibility she disliked. If it wasn't true, she was still free to wander in my dreams of being on stage. The idea of spending your life as my groupee appealed to her, and to me. \n\nThe captain announced our landing, and we all took our seats. Jason became more serious, his mind turning toward security as we neared the ground. \n\n\"I'll descend the stairs first,\" Jason said, speaking to Teegan. \"A car will be waiting for us, and we'll move directly toward it. It pays to be vigilant until we're safely at home.\"\n\n\"So, I'm a prisoner,\" Teegan growled. I could feel the stress all of this was causing her. I sent some love, reminding her as if she could forget, that we were stuck in this together. It was easy to make her smile when I reminded her of what took place in the bed not too long ago.\n\n\"Yes,\" Jason surprisingly answered, \"at least until we can locate and neutralize whoever wants you dead.\" \n\n\"What if I don't want to be locked up?\" Teegan asked. Her tone became calmer as I sent visions of what we could do locked up together. \n\n\"Then you risk the people around you,\" Jason replied. \"We'll be in the line of fire.\" Teegan turned in her seat and looked directly at Jason.\n\n\"Do I pay you enough to get in the way?\" Teegan queried. \n\n\"Nope,\" Jason said, \"that's why I'm planning to lock you up at home.\" I cocked my head to see the smile on his face. The man liked to tease. He injected humor, welcome or not, in almost every situation. \n\n\"Maybe we can work out a per bullet bonus plan,\" Teegan joked.\n\n\"With a hefty knife rider,\" Jason hit back. I felt Teegan strengthen and her thoughts, mixing with mine, come to a conclusion. I was proud of the woman I loved. \n\n\"I won't be locked up,\" Teagan said, \"so a bonus may be in order. I intend to find these people who shot my brother. If it means me playing the bait, then that's what will happen.\"\n\n\"That's not a wise course of action, ma'am,\" Jason said, his smile had disappeared, and his eyes narrowed. Teegan sat back pleased with herself. \n\n\"I thought we agreed you'd call me Teegan,\" she said, her eyes sparkling with pleasure. She enjoyed catching Jason off guard.\n\n\"Not when we argue, ma'am,\" Jason continued, \"my job is to keep you alive.\" The word had lost its power with Teegan. She was smiling at me like it was some kind of victory. I could feel the plane decreasing in altitude quickly. \n\n\"The mission's the same,\" I said, looking into Teegan's eyes. \"We just don't want to hide for the rest of our lives.\" Jason was shaking his head. I assume he was wondering what he had gotten himself into. \n\n\"You'll duck when I say duck,\" Jason ordered, trying to take control again. \n\n\"Yes, sir,\" Teegan replied, with an emphasis on sir. She was laughing inside when Jason grunted. He was designed for a clear chain of command. Teegan liked things to be more of a partnership, and it messed with his mind. Leadership was a thing for generals and presidents. \n\nThe jet made an almost unnoticeable landing. I had to look out the window to verify we were actually down. Jason moved quickly to the front of the plane. I could tell he wanted to clear the way before Teegan expressed any more determination. It felt good to know that there was someone besides me concerned with her safety. Teegan smiled inside at my concern. She liked it as well. \n\n\"There will be a car at the bottom of the steps, white SUV,\" Jason instructed, \"move directly into the back seat after I give you the all-clear.\"\n\n\"I don't think anyone knows I'm here,\" Teegan said, trying to lessen his caution.\n\n\"The military can guess,\" Jason returned. \"They most likely knew you were airborne and our heading. Until we get you on private property, you're at direct risk from them.\" I felt Teegan's surprise, echoing my own. I wrapped my arm around her waist and nodded our agreement to Jason.\n\n\"Lead the way,\" I said. Jason smirked, once again feeling like he was in control of the situation, or at least had our attention. \n\nJason waited until the SUV came alongside the plane before opening the cabin door, which neatly dropped into position with stairs now pointing toward the tarmac. He signaled us to wait as he descended first, looking 360 degrees for threats. His next signal brought us down the stairs, and he quickly ushered us into the vehicle. \n\n\"Good afternoon, ma'am,\" A hulk of a man behind the steering wheel said as we entered. He had thick dark black hair that was at war with its military cut. His bushy eyebrows added to the impression. \n\n\"Call me Teegan, please,\" Teegan said, rolling her eyes at the continued formality. I scooted in after Teegan, forcing her to the other side of the car. \"And your name?\" There was a bit of authority in her voice. She was getting used to her role. \n\n\"Terence, ma...Teegan.\" the man answered, smiling at his struggles of avoiding the honorific. Jason slid into the front seat and Terence's smile disappeared. It was obvious who was in charge. \n\n\"Let's move,\" Jason ordered. Terence put the car in drive, and we headed out of the airport. \n\n\"This is Caleb, Terence,\" Teegan continued the introductions. \n\n\"Hi, Terence,\" I said, smiling at the disgusted look on Jason's face. He really didn't like the first name basis thing. \n\n\"Nice to meet you, Caleb,\" Terence said hesitantly. He wasn't sure who was in charge or if he was violating some rule. His eyes kept traveling to Jason, probably looking for some sign of approval or denial for the strange familiarity. Jason only looked forward, scanning the road ahead.\n\n\"Are you ex-military as well?\" I asked. \n\n\"Spent eight years with the Army,\" Terence replied, \"six with the Rangers.\" I heard the pride in his voice. \n\n\"Between you and Jason, I feel safe. Thank you for that.\" Teegan commented. It was a calculated comment designed to ingratiate our protectors. Teegan wanted to remind Jason that she appreciated him being in charge of security, even though he wouldn't be dictating everything. \n\n\"It's our job,\" Terence replied modestly, though his pride continued to shine in his eyes.\n\nTerence maneuvered the vehicle toward a security gate. A guard nodded to him and physically pulled the gate open. Ahead, barely a football field in front of us, two desert colored military vehicles were quickly closing in on our position. \n\n\"Out the gate,\" Jason ordered sharply. Terence immediately applied the gas, and our SUV lurched forward through the gate. For a second, I thought we were going to play chicken with vehicles that looked half a size bigger than us. Instead, Jason pointed off to the side, and Terence pulled the car over and put it in park. The gate closed behind us, and the military vehicles came to a stop in front of us. I rallied my anger, letting Teegan's power rush into me. It felt good to let it swim in my head, to know that whatever these people wanted, I could crush them at will. No one was touching my love. \n\n\"Stop it,\" Teegan said. Terence and Jason turned toward her confused, but she was looking at me. I could feel how much she disliked what I was doing. She flooded me with love, killing the building anger inside of me. \n\n\"Sorry,\" I whispered as I let the anger go. \n\n\"It's not supposed to be used like that,\" Teegan said. Terence and Jason were looking at each other thoroughly confused. \"It feels so horribly wrong.\" I let her will win as the power waned. \n\n\"You got a nosebleed,\" Jason said, pointing at his own nose to give me context. I wiped a small bit blood off my upper lip. \n\n\"Sorry,\" I repeated to Teegan. She smiled inward and outward. Little memory flashes of our earlier play danced in her mind, fully ending whatever anger I could have summoned. We were sunk if it came to a fight. Her love was too powerful. \n\n\"Stay in the car,\" Jason said, \"they have little power on this side of the fence.\" He pointed back toward the runway. \"Back there they could have claimed they were Homeland Security.\" He stepped out of the car and moved calmly toward the military vehicles. \n\nA soldier dressed in fatigues stepped out of the passenger side of the leftmost Humvee. The camouflage on his uniform matched that of the vehicle, though it had a more pressed look to it. The slant of the man's cap was sharp and demanded respect. Jason became animated, demanding that the vehicles be moved so we could be on our way. The soldier was stiff, patiently waiting for Jason to finish his tirade. I couldn't hear the soldier's quiet response, but it didn't please Jason who began to threaten legal ramifications. Teegan straightened, and we quickly traded thoughts. I smiled at the conclusions.\n\n\"What's that man's rank?\" I asked Terence. \n\n\"Captain,\" Terence replied. I heard him suck in his breath when Teegan surprisingly opened the door and stepped outside. \n\n\"Would you like to ride with me, Captain?\" Teegan called to the officer. The soldier reached into his pocket and retrieved what I believed was a picture. He looked from it to Teegan and then back again. \n\n\"I would prefer you rode with me, ma'am,\" the officer replied sharply.\n\n\"That's not going to happen,\" Teegan said, \"if you wish to talk, we'll talk. On my terms.\" She stepped to the side and motioned to the back seat, inviting the captain to join us. I had to smile at her confidence. The soldier didn't move.\n\n\"I don't think this is wise, ma'am,\" Jason said with clenched teeth.\n\n\"Neither is American heroes turning on each other,\" Teegan pointed out. \"I suppose you're working for Colonel Righthouse, and he's sent you to pick me up.\" The captain didn't agree or disagree with her statement, but he also didn't advance. \"I am an American citizen, Captain, not some enemy of the state. I love my country as much as you do. As much as Jason there does.\" She pointed at Jason who quickly hid a growing smile.\n\nThe captain looked at Jason who shrugged his shoulders. \"She's a pain in the ass, sir,\" Jason said, then let his smile grow. \"Doesn't seem to want to listen, even if it's for her own good.\" The captain pursed his lips and considered the alternatives. I was sure that grabbing an American citizen off the street wasn't what he signed up for. ",
        "\"My vehicles will follow,\" the captain said. It sounded non-negotiable. Teegan nodded in agreement. It didn't matter much, the captain would know where we were going anyway. The captain leaned into his vehicle, giving some commands to the driver, then started walking toward our SUV. Teegan climbed back in next to me, proud that she had diffused the situation. She was a lot stronger than I had thought. Wealth changes people.\n\nTeegan grabbed my head and kissed me hard. \"It doesn't change everything,\" she said, our thoughts mixing as always. My face reddened at the smirk Terence gave me through the rearview mirror. Maybe it was Teegan changing the wealth. Teegan laughed at the thought. I imagined her naked in all her perfection. Two could play at the blushing game. \n\nThe captain stopped at the door and looked like he was having second thoughts. Though I had heard no accent, I could see strong Hispanic features in his face. \n\n\"I was told to avoid physical contact,\" the captain stated. His tone was precise as if every word was calculated to be correct. No deviation from some prescribed text. \n\n\"I have an ability, Captain,\" Teegan stated. \"I promise to keep it to myself. In fact, that was my life's goal a few months ago. But, we can't always have what we want.\" Her words sounded older and wiser. I felt her holding back a smile at my thoughts. There was still a girl wrapped in the woman. My girl. \n\n\"She won't lie to you,\" I added. The captain nodded to me and squeezed into the backseat. I noticed that he leaned toward the door after he pulled it shut. The trust wasn't complete. Jason entered the SUV, and we continued on our way, this time with two Humvees following. \n\n\"Is there a reason you don't wish to comply with Colonel Righthouse's request?\" the captain asked.\n\n\"It's not really a request, is it?\" I shot back. The captain ignored my response and kept looking at Teegan. He was on a mission I was merely a small obstacle in the way. \n\n\"I don't wish to be used, Captain Garcia\" Teegan replied. His last name was sewed above his pocket. \"Not by my country, or anyone else for that matter.\" She smiled, \"They haven't re-established the draft again, have they?\" Jason struggled to not laugh. Terence was less successful. \n\n\"Some people answer when their country calls,\" Garcia countered. \n\n\"I think we both know that this is not really a request, Captain,\" Teegan said and then moved on to end the argument. \"But we're talking now, so what would the Colonel like to know?\"\n\n\"I haven't been fully briefed,\" Garcia admitted. \"My orders are to escort you to Fort Campbell, failing that, I am to ascertain your destination.\"\n\n\"Well, maybe we could all use that information,\" Teegan said, \"Jason, where are we headed?\"\n\n\"Your house, ma'am,\" Jason said, \"Number 1, Corbett Dr., just outside of Portland.\"\n\n\"There you go, Captain. You have succeeded in the second part of your mission,\" Teegan said, very pleased with herself. She was silently admonishing my internal laughing. I kept merging her image with that of all the wise elderly women in our history books. She didn't like the wrinkles. \"You're calling me ma'am again, Jason,\" Teegan pointed out. \n\n\"I'll take your advice when you take mine, ma'am,\" Jason said, his smile taking all the venom out of the words. Teegan enjoyed the comeback. It was more playful and had equality written all over it. \n\n\"You can take the man out of the Army,\" Teegan joked, \"but you can't take the Army out of the boy.\" Garcia smirked, then quickly straightened his lips. \"Does my house have room for the captain and his men, Jason?\"\n\n\"Teegan, that's not a good idea,\" Jason said, turning in his seat. I don't think he realized that he used her name. \n\n\"I think a compromise is in order,\" Teegan said, \"so, is there room?\" I could see the confusion on the captain's face. He had lost control of the situation to a teenager, the one he was supposed to bring in. He had probably thought it would be an easy mission. \n\n\"Well, yes, but...\"\n\n\"There, Captain\" Teegan interjected, \"instead of me going to Fort Campbell, the Army can come to my house.\" She looked at Jason with phony concern, \"Do I have enough food for guests?\" Jason rolled his eyes and turned back to the front, refusing to fall for her verbal schemes. I had to smile at how she was playing with him. I found it incredibly sexy. \n\n\"I'm not sure that my orders will allow...\" Garcia began. \n\n\"Call it in,\" Teegan said, shrugging her shoulders, \"The way I see it, you can either wait uncomfortably outside the house wondering what devious anti-American things I'm devising, or you can sit comfortably inside and find out that I'm no threat.\"\n\n\"Oh, I know you're a threat, ma'am,\" Garcia said, a grin growing on his face, \"I can feel my rank slipping off my collar as we speak.\" Terence laughed until Jason gave him a look. My girl was stirring the pot well. \n\n<p align=\"center\">Chapter 4 - Teegan</p>\n\nCaleb was enjoying my new found strength. He knew it was due as much to him as it was to our situation. I loved how he thought it was sexy. It made me push harder, try unexpected things with confidence that surprised me. The tingling feelings he generated and the unconditional love that we continually traded, made it all so much simpler. I felt like a queen.\n\n\"Whoa,\" Caleb breathed. I looked up as Terence drove us through a large wrought iron gate that opened at a push of a button. Guards, dressed in black, waved to Jason as we drove through. A tan stone mansion sat a quarter mile away, comfortably nestled in pristine landscaping. Large conifers littered the curving drive that led to the house, but none obscured the magnificence of the structure. They were strategically placed to project a feeling of nature without blocking the view. It was beautiful. \n\nCaptain Garcia was looking straight ahead with a blank expression. I assumed he was as impressed as I was, but it didn't show. That his eyes were glued to our destination was telling enough. \n\n\"That's mine?\" I asked. I felt like I was in a dream. \n\n\"Every brick,\" Jason replied. He was enjoying my surprise.\n\n\"Well, Captain,\" I said, \"it does look like I have room for you and your men.\" \n\n\"Okay,\" Garcia said, his tone resigned, \"some wires must have gotten crossed. I wasn't told about anything like this.\"\n\n\"I just found out myself,\" I said, trying to soften it with a smile. \"I think Colonel Righthouse will find me a little more challenging than he imagined.\" A pulse of desire burst from Caleb. I tried not to let it show and sent my own back. It still amazed me the way his mind formed my image. Beautiful perfection now wrapped in a sexy strength. It was hard to keep my attention on the present. \n\n\"I'm not usually concerned with the reasons behind my orders,\" Garcia commented, \"but this is becoming stranger by the moment.\" He turned to me. \"What the hell is going on?\" I was enjoying his confusion. It made me feel like I had some control over my life. I had lost that feeling when Zane was shot, or maybe I never had it.\n\n\"It's easier to show than to explain,\" I said cryptically. I offered Garcia my hand, wondering if he would defy his orders about physical contact. \n\n\"It will fill in a lot of the blanks,\" Caleb said. Jason turned in his seat and sighed. I don't think he thought my bonding with Garcia was a good idea. \n\n\"If you give up everything at once,\" Jason said, \"you'll lose all your advantage in negotiations.\"\n\n\"I'm not negotiating,\" I said.\n\n\"She's informing,\" Caleb added as if he was finishing my sentence. I smiled at his agreement. Hiding was over. \n\n\"I have orders,\" Garcia said, as a way of declining. He clasped his hands in front of him resolutely. I pulled my hand back. \n\n\"Then you'll have to trust my words,\" I informed Garcia. \"Let's take this inside, the verbal version will probably take a little longer.\" He nodded in agreement. \n\n\"I need to report in,\" Garcia said when the car pulled to a stop. He got out without another word and headed back to confer with the soldiers in the trailing vehicles. \n\n\"Teegan,\" Jason said with concern, \"this really isn't a good idea. You have no need to talk to anyone anymore. Here, you're safe, hidden behind all the power that your wealth provides.\"\n\n\"We're tired of hiding,\" Caleb responded for me. \"Once the military is assured that we mean the country no harm, we can concentrate on those that do want to harm to us.\"\n\n\"They're figuring it out anyway,\" I added, shrugging my shoulders, \"might as well end their speculation.\" Jason sighed and exited the car. He politely opened the door for me which made me smile. He was conflicted with my decisions, yet he still thought me worthy of respect. \n\n\"Thank you.\" \n\n\"It's my job, ma'am,\" Jason said, matching my smile. He had to ruin it with a ma'am.\n\n\"Ms. Fuller!\" an approaching man called, stalling my attempt to once again correct Jason. I looked toward the voice and saw an elderly gentleman dressed handsomely in a dark suit. He was descending the steps from a front door that looked like it belonged to a museum. His hair was light gray, but fully intact, defying the very idea of baldness. \n\n\"You must be Mr. Watterson,\" I said, turning from Jason. \n\n\"Victor, please,\" he responded and held out his hand. I took it in mine, quenching his song so the bond wouldn't take. His smile lessened as if he was expecting more. \n\n\"Only if you call me Teegan,\" I continued, \"and this is Caleb.\" Victor reluctantly released my hand and shook Caleb's. \n\n\"Nice to meet you, Mr. McGuire,\" Victor said.\n\n\"Caleb, please,\" Caleb added. \n\n\"Is it possible for us to do away with the formalities?\" I asked. \"Jason has been torturing me with ma'ams all day.\" \n\n\"Of course,\" Victor chuckled, \"Teegan and Caleb it is. I'll notify the staff, but you'll have to give them time to get used to it.\" \n\n\"I have staff?\"\n\n\"A house of this size requires it,\" Victor said, turning and motioning us to follow. \"I see you brought some guests.\"\n\n\"They were anxious to talk,\" Caleb replied, \"we decided that it would be best to do it on our terms.\"\n\n\"A chancy but valid strategy,\" Victor said. \"Mr. Corbett has contributed to many political campaigns, and in your stead, I have continued that practice. That influence can be used to make the military rethink their strategy.\" \n\n\"I have politicians in my pocket?\" I asked. \n\n\"Not like the in movies,\" Victor smiled, \"more like they'll answer the phone and give you the benefit of the doubt.\"\n\n\"You knew my mother,\" I pointed out. \n\n\"For a brief time,\" Victor said, \"a smart woman.\" He stopped on the steps and turned to me. \"She and your father risked everything to protect you. There was more love than I thought possible there.\"\n\n\"Mr. Corbett was a little insane,\" I said. \n\n\"Misguided by his power,\" Victor said, a knowing smile growing. \"If he were truly insane, he would have taken stronger measures to take you back again. He realized his mistakes and changed tactics.\"\n\n\"My parents hid me well,\" I said with a little pride. Victor shook his head. \n\n\"Mr. Corbett has known where you've been for a long time,\" Victor said warmly. \"He took great efforts to make sure you stayed hidden. There are still computers out there that won't return your family's records in queries. Electronically, the world was blind to your family.\"\n\n\"I don't understand,\" I said, knowing only the stories my parents had recently told me. \n\n\"Mr. Corbett only loved winning and you,\" Victor said. \"In the end, he only loved you. Winning became unimportant when he faced his mortality.\" A vision was forming of a powerful grandfather who was weakened by the thought of a granddaughter. I was supposed to hate the man, or at least what he did, but I felt something for him. Caleb wrapped his arm around my waist as I shared the feeling with him. \n\n\"He didn't know me,\" I pointed out. How can someone love someone they didn't even know?\n\n\"There's a room I'll show you when you're ready,\" Victor said. \"It will probably make you a bit uncomfortable, but will do a better job than I in explaining his obsession. Know this, right or wrong, he loved you dearly. You bonded with him as an infant, and he cherished that above all else.\" I remembered the brief disappointment in Victor's face when we shook hands. \n\n\"Did Teegan bond with you?\" Caleb asked, knowing where my thoughts were going. \n\n\"Yes.\"\n\nI held out my hand. Victor smiled and took it in his again. This time, I joined our music, and his joy flooded Caleb and me. \n\n\"As angelic as I remembered,\" Victor said, releasing my hand. \"You've grown more powerful.\" I shrugged, not being able to compare to when I was a child. \"And you two are in complete sync,\" he added, looking at Caleb.\n\n\"You felt that?\" I asked. \n\n\"I'll tell the staff you two will be sharing a room,\" Victor said, his smile growing. I felt my face heat in the heaps of manly pride that Caleb was unavoidably sending my way. He liked people knowing how much I loved him. He wasn't the slightest bit concerned with what Victor might have seen. Stupid male egos. \n\n\"I'd use a megaphone if I could,\" Caleb whispered in my ear as we began climbing the stairs again. He was making me blush harder. I elbowed him with all the love I could. It only made him laugh, which Victor judiciously ignored. \n\n\"Caleb,\" Victor said, \"it is my understanding that Kato Tetsuzan is in town for a performance.\"\n\n\"No way!\" Caleb said, his feelings for me dimmed for the first time since we had fully bonded. I had no idea who Kato was, but I disliked him or her immensely. \n\n\"I'm sure I can convince him to come for dinner sometime in the next few days,\" Victor added. \n\n\"No way!\" Caleb said, his vocabulary was weakening by the second. \n\n\"Artists of his caliber usually attend private dinners,\" Victor said, \"Mr. Corbett's name carries a lot of influence, especially in Portland.\" I was ecstatic to hear Kato was a he. \n\n\"Violinist?\" I asked.\n\n\"Only the best,\" Caleb said, his face animated like a kid on Christmas. I was treated to a quick history of Kato Tetsuzan. Caleb was so enthralled he didn't see the wink that Victor gave to me. I almost laughed at how much it pleased Caleb. I let my brief jealousy of the violinist fade away and just enjoyed my happy Caleb. I now fully understood what Wendy meant about Tom. Music would always be Caleb's mistress. At least, it couldn't compete in the bedroom. \n\n\"Obviously, we would enjoy a visit from Kato,\" I told Victor. He gave me a grandfatherly chuckle and held the front door open for us. I forgot all about dinner with Kato when I stepped inside the house. The museum like front door was very appropriate. \n\nMarble, imported from somewhere exotic, covered the entry way as if it were a single large sheet. Exquisite grayish veins meandered through the highly polished smoky white floor. The walls in this room were two stories high, covered in obviously expensive but tasteful paintings. There were vases filled with all kinds of flowers. Some of the vases sat atop beautifully carved furniture, others large and grandly situated on the floor. A curving staircase led to the second floor, flaring as it came down, nearly twice as wide at the bottom as the top. The banister was made from a hardwood that was stained light to not clash with the marble floor it seemed to grow from. \n\n\"I'm afraid to touch anything,\" I said. \n\n\"It's big,\" Caleb added, his awe no less than mine. \n\n\"It's your home,\" Victor said. \"Why don't I let you freshen up and then I'll take you on a tour.\"\n\n\"Yes,\" I said, thinking a break might slow the beating of my heart. I didn't deserve any of this. \n\n\"Yeah,\" Caleb agreed, \"it's a bit overwhelming.\" I nodded and took his hand in mine. Together, it seemed a little less insurmountable.\n\n\"Of course,\" Victor said, smiling at our astonishment. \"I've had the master bedroom prepared. I took the liberty of placing some simple clothes, sweats, and what-nots, that should suffice until we can gather your clothes or purchase others. I'll have Caleb's clothes moved in as well.\"\n\n\"Thank you,\" I said. I felt a surge of love from Caleb. The thought of sleeping in the same bed excited him, which in turn excited me. If anything came from the mess of the last few days, the bedroom arrangement was a blessing.\n\nThe master bedroom was bigger than my house in Maine. The closet itself was bigger than my old room. It had a sitting room, office, magnificent balcony patio, and three rooms that composed the bathroom. Caleb couldn't help smiling when he saw the size of the bed. Images of his plans were running from his mind to mine, making it hard to concentrate. His desire for me was building, our minds entering foreplay without us even touching each other.\n\n\"Wait,\" I whispered as Victor was busy explaining how the shower worked during our brief tour. Somehow, Caleb slowed his mind. There were still images, just not as active. I found I missed the moving pictures. My body found them pleasing. \n\n\"I'll have Caleb's clothes brought in,\" Victor said, ending the tour of the bedroom suite. \n\n\"Thank you,\" I said. Victor nodded and left us. \n\n\"It's all too much,\" I told Caleb, once we were alone. He wrapped his arms around me and pulled me close. I remembered when his touching was hesitant, unsure of my response. There was no hesitancy in how he embraced me anymore. There was also no question how I would respond. His lips never doubted mine. \n\n\"Do you have any idea how sexy you are when you get all bossy,\" Caleb said.\n\n\"I wasn't bossy,\" I corrected him, though his mind was filled with a more powerful me. \n\n\"The way you controlled Jason, and then Garcia,\" Caleb continued, \"I wanted to take you right then and there.\" I smiled, trying to ignore the visions running through his mind. \"Something's changed in you, and it's very alluring.\"\n\n\"I haven't changed,\" I insisted. Caleb pulled me closer, definitely taking charge. \n\n\"You need a shower,\" Caleb said. \n\n\"You just want me naked,\" I replied, trying to hide my desires. An impossible task. \n\n\"Naked and wet,\" Caleb said, bouncing his eyebrows. \"It will be fun soaping you up.\" The perfect me, water dripping luxuriously, filled his mind. I was no longer in control of anything. I wanted him naked just as much, wet or dry. \n\n\"Undress me,\" I ordered. A shiver traveled through Caleb, and I felt his excitement increase. He enjoyed me in control. His hands began lifting my shirt over my head. \"You do like me a little bossy,\" I said, pleased with his playful desires. He stopped when my arms were over my head, and the shirt collar had barely cleared my lips. I was blind and immobile when he kissed me. \n\n\"Yes,\" Caleb whispered, \"but I'll demand equal time.\" A shiver ran through my body. There were so many promises in his words. I smiled, Caleb always kept his promises.\n\n<p align=\"center\">Chapter 5 - Teegan</p>\n\nThe sweats were a little more athletic than I was used too. Dark gray with both the pants and shirt logoed with a swish. I usually went for something less energetically presumptuous. I laughed when I saw that Caleb was in a matching set. As a power couple, we looked ridiculous. \n\n\"I don't know,\" Caleb said, \"we did get a good workout in the shower.\" \n\n\"Must have been a thousand calories,\" I said. \n\n\"At least,\" Caleb said, adjusting his shirt and absently brushing at the logo, \"lots of cardio.\"\n\n\"We earned the logo,\" I concluded. \n\n\"We'll just have to own the look,\" Caleb said with a smile. We couldn't own it if we tried. \n\n\"I love you,\" I said, replacing my discomfort with something much better. Caleb moved his matching logo toward mine. \n\n\"And I you,\" Caleb said and kissed me with less lust and more feeling than a few minutes ago. It's strange how a kiss can take on a personality, some meant to arouse, others to invoke a meaning defined by the pressure of lips and the length of an intimate caress. Before Caleb, I thought they were all the same. We had a physical vocabulary that matched our words and minds. ",
        "\"Hi,\" I said to the woman that was in the hall when Caleb and I finally got the guts to exit in our matching attire. She smiled at us, though I thought it was a short-circuited laugh. \n\n\"Evening, Ms. Fuller, Mr. McGuire,\" the woman said. She was about the age of my mother but had one of those old lady perms. Frozen curls that looked like they belonged on a statue and wouldn't budge in a hurricane. She was dressed in pleated brown slacks from the 90s, matched with a tan blouse with a silken shimmer. \n\n\"Teegan, please.\" I said, \"and this is Caleb.\"\n\n\"Of course, Teegan,\" she said. \"I'm Evelyn, more or less the housekeeper.\" Her eyebrows raised as did her smile. \"Though in this house, the title is more of a suggestion.\" \n\n\"Are you responsible for our clothes?\" I asked trying to keep my tone neutral and nonjudgmental.\n\n\"They looked better on the rack,\" Evelyn answered while nodding. \"Sorry.\" This time, her smile was all humor. \n\n\"It's not quite our style,\" Caleb said, \"but they'll do for now.\" Evelyn covered her mouth with her hands. Her eyes were laughing hard enough. \n\n\"I should have steered clear of the matching,\" Evelyn said. \"I wasn't given enough time and obviously didn't put enough thought into it.\" \n\n\"Is it really that bad?\" I asked. \n\n\"Well,\" Evelyn considered, \"if you act like you're about to go out for a run, maybe convince everyone you're on the same track team...\" I had to laugh. Her description was dead on. I was supposedly the new ruler of an empire, and I looked like an idiot. Next to me was the man I loved, who now doubled the idiot part.\n\n\"Blame me,\" Evelyn continued, \"and I'll quickly wash your other clothes. Tomorrow we can talk and get you something a little more flattering.\"\n\n\"We'll just own it,\" I said, repeating Caleb's words. I took his hand, and we headed back down the stairs to find Vincent. \n\n\"Good luck with that,\" Evelyn called as we began to descend. Caleb was chuckling, not overly concerned with our look. Men rarely are. \n\nVictor was waiting in the entry hall, struggling to hide a smile. He didn't mention our attire, and I decided to let him ignore it. It would only be for one night. Anyone could live with that. \n\n\"Where's Captain Garcia?\" I asked. \"I promised him an explanation.\" \n\n\"His orders preclude accepting our hospitality,\" Victor replied. \"I promised you a tour of the house.\" He waved his hand toward a hallway. I sighed loudly. \n\n\"He was told to stay outside?\"\n\n\"Ordered too,\" Victor answered, nodding. \n\n\"That's stupid,\" Caleb said. I had to agree. Both Caleb and I moved in sync, straight to the front door. I could almost feel the frustration in Victor. Everyone seemed to have a plan on how I was supposed to act. Well, I had news for them, there is no plan. I'm not organized enough to have one. \n\nWe burst through the front door to find Jason sitting on the steps, watching the two humvees and the four soldiers sitting on the bumpers. \n\n\"Nice outfits,\" Jason commented with a smile. \"You two joining a jogging group?\"\n\n\"Stow it,\" I said, wishing he wasn't there to see our matching gear. \n\n\"Yes, ma'am,\" Jason said with a chuckle. I rolled my eyes. I may regret asking for a partnership instead sticking with an employer-employee relationship. \n\n\"Captain,\" I called as I neared the vehicles, \"I understand you have declined to come inside.\"\n\n\"Orders, ma'am,\" Garcia replied. I was beginning to hate that word. It made me feel so damn old. I didn't have near the wisdom or the number of wrinkles to deserve it. All the soldiers rose as I neared. They trained respect well. \n\n\"Call Righthouse again, maybe I can talk some sense into him,\" I said, looking back at the house. \"The place is huge. It's not like we lack the room and you're already on the property.\"\n\n\"He's worried about undue influence, ma'am,\" Garcia said formally. There was a wall being built with his words. Too formal, no warmth and no give. Way too many ma'ams.\n\n\"Just let me talk...\" I started. One of the soldiers advanced quickly, a glint of the waning sun off the metal in his hand made me suck in my breath. I saw the surprise in Garcia's face, and I felt that horrible anger flair in Caleb. The knife was thrust forward toward my chest.\n\nJason leaped in front of me, his hands moving in a fury. I stepped back in shock, looking at the soldiers, wondering what orders they had been given. Each of them dropped to their knees, motionless, and I heard a scream from my attacker. I could feel Caleb ripping him to shreds from the inside. Jason stumbled to the left, and the attacker fell to the ground in an epileptic fit, his mouth foaming and blood pouring from every hole in his head. \n\nI turned to Caleb. He was smiling, relishing the power he pulled from me. His thoughts were lost in a world of vengeance. The desire to protect me superseded all that he was. He meant to kill them all. \n\n\"Stop!\" I yelled. Caleb was hidden in a world of hate, blood dripping from his eyes and nose. I hated him this way, something so horribly wrong was warping him, changing the man I loved into a weapon to be feared. I did the only thing I could think of. I grabbed him, merged my lips with his, flooding him with all the love I had. \n\nCaleb's concentration faded, replaced by confusion, then I found him again. My love returned to me, then collapsed. I followed him to the ground making sure he landed softly. I could taste his blood in my mouth. I rose, and my own anger flared.\n\n\"What the hell?\" Garcia said. \n\n\"You tried to kill me,\" I said, \"I either capitulate or die. Are those your orders?\" My anger was more for what it did to Caleb than the attack itself. Jason fell to the ground. \n\n\"I couldn't move. None of us could,\" Garcia said, his mind trying to digest what had happened. I rushed to Jason as Garcia collected his thoughts. He was obviously more confused about that attack than I was. Jason lay in a quickly growing pool of blood. Victor was running down the front steps, a phone to his ear hopefully talking to 911. \n\n\"You okay?\" Jason sputtered. There was blood coming from his mouth. My eyes lost their anger and began to flood. \n\n\"I'm fine,\" I said, then coughed to clear my throat. \"You saved me. Just lie still, help is on the way.\" At least I hoped it was. I rolled him onto his back and blood shot out with force hitting me in the shoulder. I covered the wound with my hand and could feel his life pumping out. \"I can't stop it,\" I cried, adding my other hand over the first. \n\n\"Show me again,\" Jason said weakly. I could see the life leaving his eyes. The knife had found something vital. I panicked and sent out my mind in a fit, looking for help. \n\nIt took only a second for the physiology of the human body to fill my mind. Hundreds of years of medical science were at my disposal, and it was useless. The knife had snaked around the protective cage of bones and severed the aorta. Jason would need to be on an operating table yesterday, not a minute from now. \n\n\"Show me,\" Jason begged again, blood accenting the words from his lips. My tears flowed as I joined my song to his. I took his pain, and our thoughts merged. He had dreams, and he shared them with me. I saw his jealousy of Caleb, fleeting thoughts of he and I together. They weren't as strong as his responsibilities, the real reason he left the army. A mother, his mother, in a facility which cost so much more than a military salary would provide. I saw memories of how she raised him without a father, instilling all that he was into him. Devotion to her, devotion to country, and a love of life. For the last minute of Jason's life, I Ioved him as deeply as I could. It nearly tore my heart apart when his thoughts faded to nothing and no matter what I did, his song couldn't be found. I screamed. \n\nI stood, Jason's blood on my hands, Caleb's on my lips, and tears pouring from my eyes. \"You did this,\" I shouted at Garcia. Victor dropped down next to Jason, trying to shake awake what I knew was dead. \"What are your orders?\" I asked for the final time. My anger was beginning to rise. The other soldiers were moving away from me and the bloody mess of their moaning comrade.\n\n\"He told me it was a bad idea to invite you here,\" I growled, pointing at Jason's lifeless body. \"I wanted peace, and you brought war.\" Garcia's eyes were wide as he matched my steps forward with his own backward. \n\n\"This wasn't supposed to happen,\" Garcia said, raising his hands, palms opened. \"Colonel Righthouse is on his way. I was only supposed to verify your location, make sure you didn't move.\"\n\n\"Who's this assassin?\" I asked, p ointing that the man Caleb nearly killed. \n\n\"A good soldier,\" Garcia replied, \"at least he was until a moment ago. I had explicit orders that no harm come to you or anyone around you.\" I relaxed my posture and stopped moving forward. \n\n\"Jason died,\" I said as if everyone didn't already know. The link had made it feel like I'd known him my whole life.\n\n\"You need to get inside,\" Victor yelled. I could hear the concern in his voice. It was too late for concern. I should have listened to Jason, and now he's dead because of it. I dropped to my knees and was deluged with all the thoughts of the pain that was focused on me. My brother, Jason, and the attackers themselves. Death hovered around any who were near me. My power was a curse. \n\nArms surrounded me. It was Terence trying to lift me to my feet. The soldiers were giving me more space, a buffer that fear had created. I looked up with my tear filled eyes into Terence's. \n\n\"Run,\" I told Terence, \"I'm not worth dying for.\" More men were gathering, some standing between the soldiers and me. Probably from the front gate or other parts of the property.\n\n\"Stand up,\" Terence said and pulled harder, \"Jason thought you worth it, so get on your goddamn feet.\" I rose in shame. Some of the guards had guns out, trained on the soldiers who now had their hands up. I started a war against my own country. Some of the guards looked like they would prefer to shoot them out of spite. Jason had instilled great loyalty. \n\n\"Stop,\" I said, shaking out of Terence's arms. \"Captain Garcia, take your men off this property. Call Colonel Righthouse and tell him that if he comes near me or anyone I love, I'll use everything Corbett left me to make sure he's demoted to private.\" Garcia blanched at my words. Money was power, and he knew it. \n\n\"Victor,\" I called \"do I have lawyers?\" \n\n\"Plenty of them, ma'am,\" Victor replied. \n\n\"If you want to speak to me again,\" I told Garcia, \"call my lawyers and drown in the red tape that I'll make sure they create. I'm done being civil.\" \n\n\"But...\"\n\n\"Terence,\" I said, \"please escort these trespassers off my property.\"\n\n\"With pleasure, ma'am\" Terence replied. He looked at Garcia. \"Do I have to call the police or have you shot?\" Garcia signaled to his troops, and they moved toward his man writhing on the ground. \n\n\"Leave him,\" I told Garcia, \"the police will deal with him.\" Victor nodded to me to confirm he had called them. Garcia left hesitantly, one man short. I watched the Humvees until they drove through the gate. Victor moved next to me and whispered that Caleb was being carried upstairs and seemed to be sleeping. I nodded. \n\n\"Jason has a mother,\" I said, \"I need to visit her and make sure she wants for nothing.\" \n\n\"I'll make the arrangements,\" Victor said. \n\n\"It's probably best if we dispense with using my first name,\" I said. \n\n'Yes, ma'am,\" Victor replied. \n\nPain makes a ma'am. Do ma'ams cry? This one does. \n\n<p align=\"center\">Chapter 6 - Caleb</p>\n\nTeegan movements woke me. I smiled as she curled her body deeper into mine, maximizing the contact of our skin. She was warm, but not uncomfortably so, and very naked. I tried to feign sleep and enjoy the closeness.\n\n\"Jason's dead,\" Teegan whispered. Her voice was raspy like she had overused it. The memories came back, that soldier with the knife. I remembered sinking my hatred into him, ripping his mind into shreds of rambling thoughts. I sucked in my breath; I was going to kill them all. They were on their knees, frozen by my will, waiting for me to finish off the attacker. \n\n\"Oh god,\" I said with a long exhale.\n\n\"You left me again,\" Teegan whispered, her head buried in my shoulder. \"You became something horrible.\"\n\n\"I'm sorry,\" I said. Teegan lifted her head above mine. Her eyes had dark circles and tinged with red. I could see them filling again as they must have done most of the night. \n\n\"Jason died,\" Teegan repeated, then the dam burst and I pulled her tight to me. Her whole body began to sob in exhaustive fits. My tears began, more for what Jason's death meant to Teegan than the death alone. I could see her memories of the bond with him. In a way, a lifetime of love was shared. Teegan's soul was scarred. Her scars became my scars.\n\n\"No,\" I said forcibly when her thoughts led toward her thinking the world would have been better if the bullet hit her instead of Zane. \"All of this...this crap isn't your fault.\"\n\n\"No,\" Teegan agreed, \"but the fact remains that people are dying. Lives are ruined because I exist.\" \n\n\"I'm better off,\" I said. My selfishness leaked into the words. Her love was part of me, and I don't think I could live without it. \n\n\"Yes,\" Teegan said, \"I have cursed you as well.\" I was going to contradict her but knew words were useless in the grief. She knew my feelings well enough and right then, she needed to be held while she suffered. Jason's death required mourning and Teegan required me. Neither would be denied. \n\n<p align=\"center\">*****</p>\n\nThe sun was battling with the curtains when I woke again. Teegan's dark eyes were closed and her mouth open, drooling on my chest. It would have been funny had I not known that she had passed out from exhaustion. I held her until I was sure her breathing was steady. Sleep would do more for her than my weak attempts at consoling. I shifted slowly, carefully replacing my chest with a pillow. Teegan barely moved, I couldn't even sense any dreams. I chanced a kiss on her forehead then moved off to get dressed. My clothes from the day before lay clean and folded on the dresser. Evelyn was true to her word. I left the room quietly and headed downstairs to explore. \n\n\"Mr. McGuire?\" A woman surprised me when I reached the lower steps. She was dressed in dark blue slacks with a gold badge on her hip, wrapped around a black belt. Her collared white polo shirt was a little tight, emphasizing parts a man shouldn't be eyeing. It's not that she was well endowed, it was the blatant advertising. I was glad that Teegan was asleep and not privy to my thoughts. \n\n\"Yes,\" I said, forcing my eyes to hers. She looked to be in her thirties with straight blondish-brown hair that was pulled back into a ponytail. Her eyes were alert and intelligent, though her face wanted me to think otherwise. It's the look a teacher gives a student when she's trying to find a new way to explain a complex topic. Condescending eyes, but compassionate face. \n\n\"Hi,\" she said brightly, \"I'm detective Cruthers, Portland PD.\" She held out her hand, and I hesitantly shook it, knowing I was at a knowledge disadvantage. \"I'm investigating the death of Jason Tisdale.\"\n\n\"Yes, of course,\" I replied. Cruthers paused a moment, maybe thinking I would offer information without being asked. \"I'd ask you to sit down,\" I added, \"but I'm new here and don't know my way around.\" \n\n\"New?\" Cruthers asked. \n\n\"Just arrived yesterday,\" I replied.\n\n\"With a...Teegan Fuller?\" Cruthers had to look down at the small notebook in her hand to remind her of Teegan's name. \n\n\"Yes,\" I answered. Cruthers paused again. I wasn't sure if she was hoping I would elaborate or was trying to frame her next question. \n\n\"You don't seem overwrought about Mr. Tisdale,\" Cruthers observed. \n\n\"I had only just met him,\" I said, \"It was shocking, as any death is, but I hadn't had time to form any emotional bond.\" Cruthers examined me, her eyes locking on mine like some kind of human polygraph. After another brief silence, I had to look away before it took on the feel of a staring contest. \n\n\"This isn't the first death you've experienced,\" Cruthers said. Her tone was leading, like she expected me to fill in the blanks. \n\n\"Detective!\", Victor said, announcing his presence,\" I thought we agreed to interviews with our counsel present.\" Cruthers smiled and turned to Victor. \n\n\"I did agree to that, Mr. Watterson,\" Cruthers admitted, \"I was just introducing myself to Mr. McGuire.\" She turned back to me, \"Innocent people don't usually need lawyers.\"\n\n\"They come with the house,\" I said adding a smile. Cruthers laughed and nodded her head.\n\n\"It will be about 20 minutes before our counsel arrives,\" Victor said to Cruthers, \"I have some refreshments being brought into the library. Would you like to wait there?\" \n\n\"I could use some coffee,\" Cruthers replied, \"though it won't sway my questioning.\"\n\n\"Of course,\" Victor smiled, \"what about scones?\"\n\n\"Same questions,\" Cruthers said, \"but I won't be as cranky.\" Victor chuckled as he showed Cruthers to the library. He gave me a subtle hand signal that indicated I shouldn't follow. I waited for him to return, glancing at the paintings and poking my head in doorways to try and get a lay of the land.\n\n\"She was here last night,\" Victor said quietly when he returned. \"Needless to say, the military is hiding behind national security. Whatever you did to that Corporal that attacked Ms. Fuller, has the detective on edge. I wouldn't doubt that she's researched all of us. She's probably aware of what happened in Bangor.\" \n\n\"She's not stupid,\" I observed. \n\n\"That's why we'll leave it to the professionals,\" Victor said as he nodded in agreement, \"It's best to say as little as possible. No lies, mind you. Maybe suggest some alternatives that might tie everything together.\" \n\n\"Protect Teegan,\" I summarized. \n\n\"At all costs,\" Victor agreed. I was beginning to like Victor. \n\n<p align=\"center\">*****</p>\n\n\"It's nice to meet you, Mr. McGuire,\" Samuel Fortunato said as his hand engulfed mine. His suit was as Italian as he looked. His height was imposing, as was the confidence that he emanated. Dark black hair that looked as if it had just left the stylist and an olive tinge to the skin that must have come from the morning runs that kept his body in model shape. He must be hell to deal with in court. \n\n\"Mr. Fortunato has decided to keep the meeting small,\" Victor said. \n\n\"Too many lawyers make the police nervous,\" Samuel said with a smile. \"It's best to remain cordial as long as things go our way.\" He looked like a one man army to me. I wasn't sure if any meeting could be small with him in it. \"Will Ms. Fuller be joining us?\" \n\n\"She's asleep right now,\" I said, \"It was a long emotionally draining night. I'd hate to wake her.\"\n\n\"Let's see if we can keep her out of it,\" Samuel said. \"Harassing victims doesn't play well.\" He looked toward Victor. \"Anything changed from what you explained on the phone?\" \n\n\"No,\" Victor replied, \"you know what I know.\" \n\n\"I think you left a few points out,\" Samuel said.\n\n\"You know what we can tell you,\" Victor rephrased. Samuel nodded and turned away, rubbing his jaw, deep in thought. He turned back to us with determination. \n\n\"Could Ms. Fuller's inheritance have leaked before the first attack?\" Samuel asked. \n\n\"Doubtful,\" Victor answered.\n\n\"But possible,\" Samuel said, \"and there's probably people in the world who might not like the changing of the guard. Someone who likes the status quo. A new empress could throw a very expensive wrench in the works. There must be people whose livelihood is dependent upon Corbett's machine running without a hitch.\" \n\n\"Maybe the police should be looking for someone that can't afford any business disruptions,\" I said. Samuel smiled at me. \"The first attack did come out of nowhere, before Teegan and I even knew about the inheritance.\"",
        "\"That first shooter was an ex-army sniper,\" Samuel continued, \"maybe the army was here to speak to you, find out where they went wrong with one of their own. It's not a leap to think another soldier was hired to finish what the first one failed.\"\n\n\"A businessman with ties to the military,\" Victor said. \"The military would never want it to get out that they're inadvertently training assassins. Might be why they refuse to talk.\" \n\n\"I'll suggest the theories,\" Samuel told us, \"you two just answer questions as succinctly as possible. No embellishments.\" Both Victor and I agreed.\n\nWe found Detective Cruthers lounging in a chair with a mouth full of scone. She smiled and covered her mouth with her hand as she finished chewing. It was an unladylike picture that didn't overly concern her. Maybe cops were more immune to social embarrassment. \n\n\"Sorry,\" Cruthers said, then finished the last bit in her mouth. \"Pulled an all-nighter and skipped breakfast this morning.\"\n\n\"They're here to be eaten,\" Victor said, \"help yourself.\" \n\n\"Detective Cruthers,\" Samuel began, \"I'm Samuel Fortunato, of Briggs, Sanders, and Walsh. I'll be present as legal counsel for Mr. McGuire, Ms. Fuller, Mr. Watterson, et al.\"\n\n\"Is Ms. Fuller joining us?\" Cruthers asked. She was refilling her cup from the coffee dispenser, not looking at Samuel when she asked. \n\n\"I'm afraid she is exhausted,\" Samuel replied, \"The attack and subsequent death of Mr. Tisdale weighed heavily on her. For health reasons, we felt it best that we let her sleep.\" \n\n\"Shame,\" Cruthers said, lifting her head, \"I was looking forward to speaking with her.\" She sighed, \"I guess it will have to wait until she's feeling better.\"\n\n\"In the meantime,\" Samuel continued, \"Mr. McGuire and Mr. Watterson have agreed to be at your disposal.\" Cruthers' face shrugged with seeming indifference as she looked at me. There was always a pause, slightly longer than necessary before she spoke to me. This time was no different. \n\n\"Who's trying to kill your girlfriend?\" Cruthers asked, then leaned back in her chair pulling her coffee with her. The question caught me off guard. \n\n\"I thought you have him,\" I replied, \"the soldier.\" Cruthers took her time and sipped her coffee while looking at me. I wasn't sure what she was looking for, but it was beginning to make me uncomfortable, so I built up a little anger to strengthen my resolve. Both Victor and Samuel ignored the question and took seats on the couch across from Cruthers. \n\n\"We have what was a soldier,\" Cruthers continued, \"not unlike a previous attacker in Maine. It seems there is a rash of sudden massive strokes going on.\" She took another sip of her coffee and waited for me. I was silent since there was no question. \n\n\"It may have something to do with Ms. Fuller's current legal status,\" Samuel said, giving me a reprieve. Inside, I was relieved. My jump in emotions woke Teegan.\n\n\"Legal status?\" Cruthers asked. \n\n\"She is the sole heir to Mr. Corbett's estate,\" Samuel added. Cruthers' eyebrows went up. I suspect a lot of pieces were coming together in her mind. \"It was going to be made public soon.\"\n\n\"Lucky girl,\" Cruthers said. \n\n\"She would disagree,\" I said with Teegan emphasizing from afar. \"Her brother's been shot, and now Jason has died. That isn't luck.\" I stopped, reconsidering the tone I had just used. Samuel didn't seem pleased with the outburst. Concise, I reminded myself.\n\n\"I guess you're right,\" Cruthers said, \"I was thinking out loud. I didn't mean to sound callous.\" She paused again, looking directly at me. I offered nothing more, not wanting to wreck Samuel's strategy. \"You're a lot younger than I expected,\" Cruthers added. \n\n\"How is all this related to the incident of last night?\" Samuel asked forcibly. \n\n\"I'm trying to cross the 'T's and dot the 'I's,\" Cruthers said to Samuel, \"I'm pretty sure I know what happened, it's the why that concerns me.\" \n\nI could feel Teegan considering her words. I agreed that Cruthers was smart but believed our lawyer could handle her.\n\n\"I don't believe that anyone here,\" Samuel said, \"especially Jason Tisdale, who died heroically mind you, facilitated these events.\"\n\n\"Something's missing, Mr. Fortunato,\" Cruthers said, not looking the least bit intimidated. \"It is my duty to find out all I can about the attack last night. I am Mr. Tisdale's advocate, and I agree he was indeed heroic. I am also charged with making sure something like this doesn't happen again. It didn't take much to find out this is the third incident to surround Ms. Fuller and Mr. McGuire.\" She paused a moment and looked back at me. \"Two deaths, her brother in the hospital, and two of the attackers have lost all mental capacity. Massive strokes they tell me.\"\n\nTeegan fought back tears at Cruthers crass description of the last few days. I was glad she wasn't physically present and mentally hugged her. This whole situation was taking a toll on us both. I would have preferred to be at the prom, oblivious of assassins and wealth. Teegan latched onto the image of us dancing and let her love flow. I responded in kind, welcoming the short reprieve in the oppressive sadness of Jason's death. \n\n\"Is something funny?\" Cruthers asked. I lost the smile on my face, not realizing it had grown there. It's difficult holding multiple conversations. \n\n\"No,\" I replied without elaboration. \n\n\"I saw a video online,\" Cruthers pressed, \"You moving like an action star up a flight of stairs, taking out guys twice your size.\" Teegan's anger flared. She was beginning to dislike Cruthers. \"You look too young for the skills, and I don't mean to insult you, but you lack the physique I would have expected.\" \n\n\"Again,\" Samuel jumped in, \"what has this got to do with last night?\" Cruthers turned to Samuel, her eyes sharpened. \n\n\"Someone is trying to get to Ms. Fuller,\" Cruthers said, \"and it seems Mr. McGuire has some extraordinary abilities. Is he a boyfriend or a bodyguard?\"\n\n\"Self-defense training is not a crime,\" Samuel said, \"nor a motive. I'm surprised at you Detective. You're questioning the victims as if they are to blame for the crimes against them.\"\n\n\"I spoke with a General Cooper earlier,\" Cruthers continued, \"it was as high as I could go. They're pleading national security and have sheltered my military witnesses on base. The FBI has called me twice, wanting updates on my progress and wondering why I haven't closed the case.\" She took a sip of her coffee, then interrupted Samuel who was about the speak. \"I hate being shut out of things and making decisions with only half the information. I especially hate being told how to do my job. I'm no genius, but I can see that Ms. Fuller is in a world of trouble, and Mr. McGuire is knee deep with her. Hiding in the middle of it all is the real reason for the attacks. And how in hell do two seemingly healthy assholes have massive strokes on command?\"\n\nTeegan sighed and rose from the bed. A brief exchange and we decided that Cruthers wasn't going to let things go. The inheritance angle wasn't going to work. Cruthers mind worked too quickly. \n\n\"What the hell was the military doing here in the first place?\" Cruthers continued. \"Are you trying to convince me they escort heiresses now? And they left one of their own and hustled back to base, away from civilian law. Why is this a national security issue?\"\n\n\"I thought the scones were supposed to make you less cranky,\" Victor said. \n\n\"I lied,\" Cruthers admitted, \"Hunger makes me forget my morals.\" \n\n\"Maybe a break is in order,\" Samuel offered, though it sounded more like a demand. \n\n\"Teegan's on her way down,\" I informed them. \n\n\"And how would you know that?\" Cruthers asked me quickly, her quizzical eyes searching the corners of the room. \"Is this meeting being recorded?\" I went to the door and opened it just as Teegan approached. The timing surprised everyone but Victor. \n\n\"Nothing is recorded,\" Teegan said, then looked at Victor, \"right?\"\n\n\"There haven't been cameras in this house since your last visit,\" Victor said, \"We still maintain some on the outside. Security purposes only.\" \n\n\"I really think this interview is at an end,\" Samuel said. He stood to use his mass to emphasize the point. \n\n\"I didn't see any cameras out there,\" Cruthers said. Victor sighed. \"You've been here before?\" Cruthers added to Teegan. \n\n\"I'm ending this now,\" Samuel said, turning to us. Teegan moved toward him, and I followed at her side. \n\n\"She's not going to let this go,\" Teegan said to Samuel. He looked confused, not realizing that Teegan had heard everything. \"I assume you're confused as well.\" It was funny watching the expression on his face turn from fierce predator to teddy bear. Teegan looked so small next to him, but there was a power emanating from her. \"I warn you, the last time I disregarded someone's advice, Jason died.\" \n\n\"You have rights,\" Samuel said, \"they can protect you.\"\n\n\"It's the people around me that seem to need the protection, Mr. Fortunato,\" Teegan said. She turned to the detective. \"Are you sure you want to know?\"\n\n\"I want to know if there's video of the attack?\" Cruthers countered. \n\n\"Yes,\" Victor said. Samuel looked defeated. \n\n\"I can do one better,\" Teegan said, \"it will also explain a lot more.\" Cruthers looked questioningly at her. \"It requires a level of trust. Can you trust me, Detective Cruthers?\"\n\n\"I don't trust anyone but my husband,\" Cruthers replied. \"And I want a copy of the video.\" \n\n\"It will take only a moment,\" Teegan said. \n\n\"It is necessary if you want to understand the whole story,\" I added. Cruthers looked at me, then back at Teegan. There was a brave fear in her eyes like she had a sense of things beyond the ordinary. It was the two that had the stroke that frightened her. \n\n\"What caused the strokes?\" Cruthers asked, verifying my assumptions. \n\n\"Anger,\" Teegan said. \"The first one shot my brother.\"\n\n\"The second attacked Teegan,\" I added. \"Not something I could tolerate.\"\n\n\"I have an ability,\" Teegan said, \"it can be horribly warped when we or someone we love is threatened. It's become more of a curse.\"\n\n\"It's a blessing,\" Victor countered. Samuel looked confused like we were all confessing to murder. He wasn't used to having no control of a situation.\n\n\"Blessings don't kill people,\" Teegan said. Memories of Jason's last moments flooded her mind and filled mine. I moved to her side and wrapped my arm around her. \"Do you want to know or not?\" Teegan asked Cruthers more forcibly.\n\n\"Yes,\" Cruthers said after a moment's thought. Curiosity made her a good detective and was her greatest weakness. Teegan held out her hand. Cruthers hesitantly reached out and took it. I watched her expression leave confusion and enter the bliss of an initial bonding. I felt, through Teegan, her dedication to work and her husband. She prided herself in seeing how far she could bend rules to achieve her goals, usually solving crimes, but more recently the resolution of a vehicle warranty issue that pissed her off. Her smile deepened, and I saw a trickle of blood form beneath her nose. Teegan quickly broke the link. \n\n\"Damn!\" Cruthers said, \"I think I just solved the Crosby murders.\" She absently wiped the blood from her nose. \"Who are you and how do I learn to do that?\" \n\n<p align=\"center\">Chapter 7 - Teegan</p>\n\nBesides Caleb, Detective Cruthers was the most enthusiastic person I had ever bonded with. She had latched on and drove to use the bond to solve issues on instinct. I would have expected our music to be similar, but it wasn't. Hers was a deep bass like throbbing, almost like native drums. It took Caleb and I a long time to convince her of the cost of such activity, beyond a mere bloody nose. I had to bond with Samuel as well, just to keep the confusion in the room to a minimum. He was amazed, but like Victor thought it was more a blessing than a tool.\n\n\"So what are these Crosby Murders?\" Victor asked, trying to understand Cruthers' earlier statement.\n\n\"A cold case,\" Cruthers said, \"It fell to my desk when my mentor retired. He was obsessed with it, which naturally piqued my interest as well. I always felt I could solve it, you know, prove my worth, but a forty-year-old murder is a tough nut to crack.\" She laughed to herself. \"Imagine, it was the old curtains that were the giveaway. Those two boys were too young to die like that and to think it was the old biddy all the time. Too bad their grandmother passed away so many years ago. I hate when someone gets away with murder.\" \n\n\"She killed her own grandchildren?\" I asked, unable to relate that to my grandmother.\n\n\"For the inheritance,\" Cruthers said excitedly, \"The parents died in an accident, leaving everything to the twin boys. That left Grandma out in the cold since her son was no longer there to care for her. The state decided she was too old and feeble to care for the boys, so family services were going to place them in a foster home. She turned to desperate methods. She fooled everyone, probably milked her age. Brilliant in a way.\" \n\n\"How do curtains lead you to her?\" Caleb asked. \n\n\"It was her hobby, her love,\" Cruthers said, \"quilts, clothes, curtains, anything else made of fabric.\" She paused a moment, her eyes moving toward me. \"No one saw it all, but you let me see it all through multiple memories. Pictures and reports miss so much.\"\n\n\"Accessing other minds is expensive,\" I said. \n\n\"Maybe, but it's so powerful,\" Cruthers said, her smile growing. \"Think of the crimes we could solve.\"\n\n\"It usually knocks you out for a while,\" Caleb said. \"We don't even know if it causes permanent damage.\" \n\n\"It's awful to feel when it involves anger,\" I added. Caleb nodded in agreement. \n\n\"So, how do dirty curtains lead to the solution?\" Samuel asked.\n\n\"All the curtains in the house were pristine, yet the ones over the broken window were faded and frayed. The perpetrator supposedly threw a brick through the window to gain entry. No one gave it a second thought, but it was on their minds.\" She laughed again. \"Who else would change out the curtains before throwing a rock through the window? Only the person who valued the real curtains, the ones she made. Who else would know where the old curtains were stored? Vanity catches more crooks than you know.\"\n\n\"That's a little vague as proof,\" Samuel pointed it out.\n\n\"Oh, there's more that makes sense now,\" Cruthers continued, \"lots of little things fall into place. They were stabbed with cloth shears and no one even considered how the murderer knew where they were. I, and everyone else had always thought she had left them out, but that doesn't jibe with her cleanliness. There wasn't a hint of dust in the place. She was never considered, because who would consider a weak old grandmother. Until a few moments ago, I didn't either.\" She sighed, \"There was a man who lived in the neighborhood who had been accused of pedophilia in the past, and everyone concentrated on him. It was thought that the boys put up a fight, and he panicked. There was no physical evidence to tie him to the scene, but he was always the main suspect.\" \n\n\"She seemed bedridden,\" Cruthers said, \"used a walker to get around. It was all for show. She lost the act when she moved to Florida. I saw her in court, answering for a speeding ticket, upright and walking without effort. I'm not sure what mind was showing me that. You have no idea what your gift can accomplish.\"\n\n\"It's not a tool,\" I reminded her, \"there's a penalty, and it can be brutal. Nothing that costs that much can be worth using haphazardly.\" \n\n\"How did the military find out about it?\" Cruthers asked. She put it all together quickly. There could only be one reason why they were here, once you knew the truth. \n\n\"They funded my creation,\" I said sadly. I hated this part of my birth. It made me feel less human. Caleb stubbornly sent me love, forcing his way in and demanding I acknowledge how human he thought I was. It was all easier to accept with him inside of me. I explained what I understood, leaving some names like Uncle Hank out of the explanation. \n\n\"I smell a lawsuit,\" Samuel said. He was serious, but I found the timing perfect. Caleb started laughing first, and I followed. \"No, I mean it,\" he continued, \"they'd settle out of court just to keep something like this quiet.\"\n\n\"I don't think I need the money,\" I said, looking about the room, \"and certainly not the publicity.\"\n\n\"They think you might be a weapon,\" Cruthers continued her train of thought. \n\n\"Or a threat,\" Caleb added, \"they're still working on it. Right now, they are probably leaning toward the threat theory.\" \n\n\"Why would they send uniforms if they wanted you dead?\" Cruthers asked. \n\n\"The attack wasn't from the military,\" I said, \"there are people who think playing with human DNA is the devil's work.\"\n\n\"Fanatics,\" Caleb added. \n\n\"Well-funded fanatics,\" Cruthers said, thinking out loud again. \n\n\"It's why we brought her in early,\" Victor said, \"Corbett wanted us to wait until she was 21, but he made provisions to speed things up if her location became public.\" \n\n\"You bonded with Corbett,\" Cruthers stated. Leaps in logic were child's play for her.\n\n\"As a newborn,\" I admitted, \"though he was also the first one I didn't bond with. At that time I didn't have a lot of control. Mom didn't like him, and I guess I deferred to her judgment. I was too young to remember any of it.\"\n\n\"It was the worst day of his life,\" Victor said, \"I'll have you know he regretted how he handled you and your mother. He wasn't used to failing, and certainly not used to being so wrong.\"\n\n\"So,\" Cruthers said, her brain still working hard, \"you can project when you're in danger. Turn a brain to mush.\"\n\n\"I don't like that part,\" I said, \"Caleb gets lost, and something ugly takes over.\" \n\n\"Caleb can do it without you?\" Samuel asked with surprise. \n\n\"We're completely connected,\" Caleb replied as I nodded, \"Everything I know, she knows and vice versa.\" \n\n\"That's how you knew she was coming down the stairs,\" Cruthers said. She smiled, proud that she could make an orderly sense out of what had happened. \"Does the military know...about this sharing thing?\" \n\n\"We've kept it from them, though they aren't stupid,\" I said. \"They will put it together soon.\"\n\n\"Okay,\" Cruthers started, \"I can't do much about the US Military except ending the case for them, but what do you know about these nuts?\" I smiled, knowing I had gained an ally. I needed more of them. \n\n\"The first attacker was hired by an Anthony Lewis,\" I said, \"Never met him and only have a distorted image of an African American man, probably tall. The shooter was more concerned with the killing itself than the money he was paid.\"\n\n\"Damn it!\" Victor interjected, \"I should have dealt with him years ago.\"\n\n\"You know him?\" Cruthers asked.\n\n\"He tried to stop your mother and you from leaving here 17 years ago,\" Victor replied, looking at me, \"A talented cook, he had us all fooled. Corbett and I thought he was all talk, so we let him go. I can't believe he held onto this for so many years.\"\n\n\"The definition of a fanatic,\" Cruthers commented. \"Give me everything you know about him. I'll see what I can do about tracking him down.\"\n\n\"I can't ask you to do that,\" I said, worried about creating another Jason.\n\n\"It takes a fanatic to find a fanatic,\" Cruthers said with a confident smile, \"It's my job and I take it very seriously. I won't stand for murder in my backyard.\" \n\n\"I still have a file on him,\" Victor said, rising from the couch. \"The info is old, but it could give you a place to start. I also have some private detectives I can lend you.\" \n\n\"That might be helpful,\" Cruthers replied, \"not sure how much of this I can pass on to the precinct. Doing that link thing with the whole department would be too public, and they wouldn't believe it otherwise.\" Victor nodded and went to retrieve the file. ",
        "\"What will you tell the FBI?\" Caleb asked. \n\n\"You mean the military,\" Cruthers said, \"they're the civilian mouthpiece. I'll give them what they want, a lone wolf scenario. An isolated soldier had a breakdown that didn't seem to have any logical motive. It's best if they think I'm ignorant of the facts.\"\n\n\"It lessens Jason's sacrifice,\" I said, feeling a rock in my throat again. Bonding through his death was too powerful. It froze him in mind, making me part of who he was. \n\n\"I'll key on Jason's heroics,\" Cruthers responded. \"I'll make sure everyone knows his dedication to duty and the lives he saved.\" I gave the detective a weak smile. It would have been better if he had survived. Knowing me was his downfall. \n\n\"I don't want anyone else hurt,\" I admitted, \"and certainly no more death. I just want it to stop. I'll trade all of this,\" I waved my hands around the library, \"for a normal life with Caleb.\" A wave of love hit me, a huge burst of ditto from Caleb. I smiled inwardly, not wanting anyone to confuse my smile with the pain of Jason's death. \n\n\"Then we have to find these religious nuts,\" Cruthers said. \"Let me gather some information; then we can link again and ...\"\n\n\"It's not a toy,\" I interrupted.\n\n\"But...\" \n\n\"I have no idea why I'm on this planet,\" I interrupted Cruthers again, \"but it's not to be some kind of human internet.\" Cruthers raised her eyebrows as I snapped at her. I closed my eyes and took a deep breath. \"Sorry,\" I said. \n\n\"Too much death,\" Caleb said for me. \n\n\"Okay,\" Cruthers said, \"I'll do it the old fashioned way. But if they find you first, don't ride your convictions to the grave.\" She was upset, the first person that I knew besides Corbett who was angry at not being able to bond again. Caleb agreed with my conclusions, though he couldn't argue the point. The bond was us, and not being able to do it was beyond painful. \n\n\"I'm sorry,\" I said again. Cruthers sighed, closed her eyes and smiled. A small chuckle escaped her lips. \n\n\"Is everything the link shows me the truth?\" Cruthers asked. \n\n\"I'm not sure,\" I replied, \"I guess one version of the truth.\"\n\n\"It wouldn't show me something wrong, would it?\" \n\n\"I don't understand what you mean,\" I said. \n\n\"Can we talk in private?\" Cruthers whispered. \n\n\"I'll just chase down some more coffee,\" Samuel said as he left the room. Cruthers looked at Caleb, then shrugged. \n\n\"This is as alone as I can get,\" I said honestly.\n\n\"I saw something while we linked,\" Cruthers said. \"Barry's, my husband's, thoughts.\" \n\n\"That happens a lot,\" I said. \"If you're worried, I rarely see what's shared. I didn't even see the Crosby thing.\" \n\n\"We had a fight last night,\" Cruthers continued, \"about me pulling an all-nighter again. I could see his frustration, and, well, something else. The way he sees me. Does it lie about that?\" \n\n\"Why does it always let women cheat so easily?\" Caleb asked. \n\n\"Cheat?\" \n\n\"What did you see?\" I asked, hoping it wasn't something hateful. Cruthers face turned ten different shades of red. She was struggling to come up with the words. It was no longer necessary to explain. \"Ahh,\" I said, adding a smile, \"It's all lies, but not in Barry's mind. I think it's love that lies to men.\" Cruthers covered her mouth with her hand, and we shared a smile. \n\n\"It's really not fair how that works,\" Caleb added, \"let one side see and the leave the other in the dark.\"\n\n\"We need more information than men,\" I said, pulling Caleb close, \"besides, it's not like it works that way for us anymore.\" Cruthers was about to say something, but Victor returned carrying a thick folder. \n\n\"Here're copies of everything we have on Anthony,\" Victor said, \"and this jump drive has the security camera video.\" \n\n\"Thanks,\" Cruthers said, accepting the folder. \n\n\"And here's the card of the investigative agency we use, \" Victor continued, \"I've notified them that they may receive a call from you. I've authorized them to lend whatever assistance you require.\" \n\n\"I'm not used to resources like this,\" Cruthers said, taking the card, \"this should be interesting.\"\n\n\"Don't risk your job or anything,\" I said. \n\n\"No worries,\" Cruthers said, shifting to leave, \"I walk the line, but never cross it.\" She moved toward the door. \"At least, not while anyone is looking.\" Victor ran ahead and opened the door for her, which seemed to please her. \n\n\"Thank you,\" Caleb called. Cruthers nodded and continued on her way. Victor followed her out, presumably to open the front door for her. \n\n\"Do you think Cruthers will dig too deep?\" Caleb asked me, once we were alone.\n\n\"I hope not,\" I replied, \"they shot Zane and killed Jason. I would prefer that that is the limit of their damage. I certainly don't want her to fall to my curse.\"\n\n\"We just need to find them first,\" Caleb agreed. \"Hopefully, she can help with that.\" \n\n\"God help them when we do find them,\" I said, trying to slow my building anger. \"I'm not sure we want the law around when we do.\" \n\n<p align=\"center\">Chapter 8 - Captain Garcia</p> \n\n\"What do you mean you couldn't move, Captain?\" Colonel Righthouse asked. \n\n\"All of us were forced to our knees, sir,\" I replied. \"We couldn't move. My muscles refused to listen to my mind. I can honestly say that I feared for my life.\"\n\n\"You think she could have killed you?\" Righthouse asked. \n\n\"Her?\" I said, \"I think she saved me. It was McGuire that was tearing up Corporal Rodriguez. Blood was flowing from his nose and eyes and I had a sense he wasn't going to stop with the Corporal.\"\n\n\"There's two of them?\" \n\n\"I didn't know there was one of them, sir,\" I said, with a tone that was meant to broadcast my dislike of being left in the dark. Being at the mercy of another human being had a way of making a person reconsider his loyalties. \n\n\"Need to know, Captain,\" Righthouse said. \"I'm sorry you were put into that position, but we were strapped for time, and you were the closest unit. We had no idea she would be running and certainly not back to Portland.\" \n\n\"She wanted to join with me,\" I told him. It was wrong to enjoy the shock on his face, but I took pleasure in it. \n\n\"You didn't!' Righthouse demanded. \n\n\"No, sir,\" I replied, \"though I believed she meant it as a way of cooperation. Before the Corporal attacked, she was trying to solve our needs on her own terms.\" I sighed too loudly. \"Had I known what was going on, I could have negotiated something that would have satisfied her and us.\"\n\n\"I'm ordering a review of your unit. Every one of them needs to be cleared again.\" Righthouse stated, \"We can't afford another Rodriguez.\" I nodded as the the colonel stood from his desk and began to pace. \"Do you think she would meet with you again?\" \n\n\"I suspect she'll shield herself behind lawyers, sir\" I replied. \"I would prefer she and her boyfriend cool down a bit before I even attempt to re-engage. They're not a couple you want to anger.\"\n\n\"We have another contact,\" Righthouse said, pointing at a chair. I sat and watched him pace as he spoke. \"A scientist who has befriended her and understands all that's going on. He hasn't been as upfront with us as we would like, but I don't think she'll deny his visit.\"\n\n\"Are you asking my opinion, sir?\"\n\n\"Who the hell else is here, Captain?\" Righthouse said.\n\n\"I can't give a good opinion without all the information, sir,\" I said. Righthouse stopped his pacing and looked out the window. I waited as he considered whether to fill me in, or send me on my way. At that moment, I would have preferred to be sent away. The drooling image of a mindless Corporal Rodriguez was foremost in my mind. \n\n\"This stays in this room,\" Righthouse said.\n\n\"Yes, sir,\" I said. What followed shook my faith in government. To find out that we had willingly participated in DNA manipulation for strategic advantage was beyond anything I had expected. A desire to create super soldiers was on the edge of my mind as Righthouse explained that the knowledge was necessary for future planning. I began to understand Ms. Fuller's desire to mend fences. Her statements now made sense, and we ruined it all by being a robotic organization instead of human. Righthouse thought of her as an asset, no different than any other weapon in our arsenal. \n\n\"Do you have an opinion now, Captain?\" Righthouse asked, once the briefing was complete. \n\n\"Send her your apology, sir,\" I said. \"Give her the recognition she desires and let her control the situation.\"\n\n\"After all that you've seen,\" Righthouse said, \"the power that both of them possess, and the only thing you can offer is an apology?\" \n\n\"She's didn't sign up for this, sir,\" I responded. \"You have to ask her. Politely.\"\n\n\"She's our god damn creation!\" Righthouse shouted, slamming his fist on the table. \n\n\"Maybe, but she's holding all the cards, sir,\" I said. I should have taken her hand in the car when she asked. There was a kindness in her. \n\n\"If she's a threat,\" Righthouse said, \"there're other ways it can be dealt with.\" I cringed inside at how he said it. \"National security can be invoked.\"\n\n\"We are the threat, sir,\" I said. \"One of our own tried to kill her.\" Righthouse waved away my words and began pacing again. I was beginning to wonder if this whole conversation was leaving the realm of legality. \n\n\"Maybe you're right,\" Righthouse said, slowing his movements. \"Do you think she'd accept an apology, a verbal one? It's not something that can be put in writing.\"\n\n\"That depends, sir,\" I said, \"is it sincere?\"\n\n\"I'll issue an apology for Corporal Rodriguez's actions,\" Righthouse said, his tone brightening as a new plan formed, \"Do you think they'll agree to come on base for an interview, maybe a demonstration?\" \n\n\"They don't trust us, sir,\" I said. \"And I don't think Ms. Fuller has any desire to be an asset of the US military.\" \n\n\"It's her country, too,\" Righthouse countered. \"Does she love it or not?\" \n\n\"Right now, she thinks her country is out to kill her,\" I replied. \"We'll be lucky to interview her on her own terms.\" Righthouse began pacing again, his hand stroking his chin. I began to wonder how he got to be a Colonel. There was a strong streak of patriotism in his every decision, but the lack of common sense weakened it. \n\n\"Would she offer to join with you again?\" Righthouse asked quietly. He was looking away from me when he asked. A hundred things went through my mind, and I saw my officer bars falling from my shoulders. \n\n\"If she said yes and I did,\" I questioned him, \"would you, or the army, ever trust me again, sir?\" He was asking me to compromise myself. Righthouse began pacing again, his eyes looking everywhere but at me. His lack of an answer was answer enough. \n\n\"If I ordered you to?\" Righthouse asked. \n\n\"It would finish me,\" I said.\n\n\"I could create a new position,\" Righthouse said, \"permanent liaison to Ms. Fuller. We would learn what we need, and you could press our position if her...skills were required.\" \n\n\"I'll never get a command,\" I said, realizing it would destroy my dreams. Memories of John Wayne in The Longest Day still haunted me from my childhood. I dreamed of leading men on a battlefield. The honor of victory and now Righthouse was asking me to throw it all away so he had a chance at a new weapon. \n\n\"We either control the threat, or we eliminate it,\" Righthouse said, turning to me. His statement had a finality to it. For the first time in my career, I questioned the wisdom of joining the army. She wasn't going to be controlled, the best we could hope for is a little cooperation. \n\n\"She's an American citizen,\" I said. \n\n\"They dropped a squad to its knees,\" Righthouse said, \"and turned Rodriguez into a simpleton. Do you really think I can let that kind of power run loose in this country, the same country I'm sworn to protect?\" I could see the determination on his face. \n\n\"You're asking me to fuck my career,\" I said bluntly. \n\n\"I'll fuck it if you don't do it,\" Righthouse said.\n\n\"You're a bastard, sir,\" I said, knowing I had lost all control. I was screwed either way. \n\n\"I'll make sure combat pay is added to your salary,\" Righthouse continued, \"you'll report directly to me and to no one else. Civilian clothes, no uniforms when you're off post.\"\n\n\"Shit!\" I said, watching my life being changed by some asshole's mere thoughts. \n\n\"I'll give you some leeway today, Captain,\" Righthouse said, \"but in the future, there will be a 'sir' after every 'shit'. For now, return to your unit and prepare for the review. First, we'll make sure there are no more Rodriguezes.\"\n\n\"Yes, sir,\" I said, trying to make the sir sound like asshole. \n\n\"This conversation doesn't leave this room, Captain,\" Righthouse said, \"I'll initiate our apology through the third party I mentioned. If I can get you an audience, you'll take it. I must know their full capabilities.\" \n\n\"Yes, sir,\" I said robotically. I was committed to two more years in the armed forces. There would be no re-up for me. I smiled to myself as I walked out of Righthouse's office, wondering if Corbett Industries could use an ex-officer. \n\n<p align=\"center\">Chapter 9 - Anthony</p>\n\n\"No, sir,\" I replied. I had to breathe, letting the hospital smell invade my nostrils yet again. The odor was a foul chemical based stink that scarred the insides of my nose.\"The man failed.\"\n\n\"And we lost one of our military contacts,\" Sabbatini said, his anger was blatant in his tone. I disliked him thinking I failed. \n\n\"It wasn't planned. He took it on his own initiative, without my instruction,\" I said, defending my part in the poor results.\n\n\"Do we have to fear Righthouse now?\" Sabbatini asked. \n\n\"From what I've been able to understand,\" I said, \"he's more concerned with her...I mean 'it'... than us. One of our other contacts said it's gone closed door, but he's heard some scuttlebutt that fear is replacing the curiosity.\"\n\n\"Maybe you should stoke the fires of these fears. It could convince the military to deploy their more clandestine resources,\" Sabbatini said. \"I don't care who kills it, though I had hoped it would be you.\" \n\n\"Is that what you want?\" I asked, ashamed about the repeated failures.\n\n\"Don't take it so damn personally,\" Sabbatini said, waving away my shame. \"It's the human race we're concerned about, not your ego.\"\n\n\"Yes, sir.\"\n\n\"Start a few rumors,\" Sabbatini continued, \"have them fed to the military. Something about other unexplained deaths and strokes in its vicinity. Maybe if it has to dodge the government, it will create opportunities for us.\"\n\n\"What if they grab it, bring it underground?\" I asked. Sabbatini laughed. It was one of his maniacal laughs that I hoped the nurses couldn't hear. \n\n\"It is too powerful to be taken,\" Sabbatini said, coughing between chuckles. \"It must be taken out by surprise. The military thinks at turtle speed. Use them as a distraction.\"\n\n\"It has money now,\" I said, \"that will make it more difficult.\"\n\n\"Wealth will involve more people,\" Sabbatini said. \"You should be able to identify one or two that love our Lord and can't be tempted by evil.\" It always amazed me how he could find a silver lining in every failure. He looked decrepit, but still, his mind worked like the first day I met him. Had it really been thirty years? \n\n\"At least we should be able to acquire an itinerary,\" I added. \n\n\"Yes, and that will create opportunities,\" Sabbatini said. \"No attempt can be telegraphed, that's obvious. It has to be quick, quicker than thought.\"\n\n\"Another sniper?\" I asked. \n\n\"Or an explosive,\" Sabbatini replied, \"big enough to limit the chance of failure.\"\n\n\"It could harm others,\" I said, surprised at his vehemence. \n\n\"This demon will destroy this world,\" Sabbatini growled, \"sending a few other souls to our Lord early, shouldn't deter us.\"\n\n\"No, it shouldn't, sir,\" I agreed. Sabbatini's devotion was absolute, so much stronger than mine. I looked at his feeble body and wondered if he would push me aside if he could. \"What about its family? We could take one as hostage, possibly bring it to us.\" \n\n\"You really think you can use its followers as bait?\" Sabbatini said as if I were a child. \"It would either leave them to die or most likely use them to ferret us out. It no longer needs to be physically present to use its power.\" The revelation surprised me. Sabbatini was truly God's messenger to surmise so much from the evidence I had given him. I had barely suspected it myself. \"No, surprise is the only weapon we possess. Kill it before it knows the strike is coming.\"\n\n\"Yes, Sir,\" \n\n\"Good,\" Sabbatini said, then waved me away. I bowed my head slightly and exited the room, happy to leave and regain some of the strength my mentor always drained from me. Exiting the care facility, I breathed deeply, trying to replace the foul air that lingered in my nose. \n\nI knew nothing about bombs. It would take research and talking with ex-military again. I wasn't comfortable with the sniper, and now I had to find a demolition expert with loose morals or religious zeal. Sabbatini was correct; collateral damage shouldn't be a consideration. I needed to be stronger, more like him. God's warriors couldn't be weak, not with the world at stake. \n\n<p align=\"center\">Chapter 10 - Caleb</p> \n\nI thought the death of Jason marked the worst day of my life. It was nothing compared to experiencing Teegan's pain during his funeral. His death was a blip, compared to my love's heart shattering with every useless word the minister spouted. It was the first time I wished I could only see the tears and not share the pain of her death bond with Jason. She had died with him. \n\nTrying to lessen Teegan's pain was useless. Physical pain I could grasp with my mind and pull into me, but this was something deeper. All I could do was share it and beg God that it would stop. It was overwhelming her, and she chose to let it grow as some kind of penance. I couldn't fight it. My love was nothing but a bandaid over a gushing wound. \n\nTeegan approached Jason's mother, a small woman who only seemed half aware of what was going on. Mrs. Tisdale was slumped in a wheelchair with sparse gray hair barely covering her head. Her eyes looked down, seemingly unable to focus at distance. A nurse in blue sweater stood behind the chair, leaning over every once in awhile speaking words directly in her ear. Teegan kneeled before her, and I sucked in my breath as her terrible grief flooded me, a black cloud that smothered most of what I knew Teegan to be. \n\n\"Mrs. Tisdale,\" Teegan said, the syllables jerky as she struggled to get the words out, \"your son died saving me.\" I couldn't stop my eyes watering as Teegan's pain increased. I wanted to pull her away from the woman, make her forget the unforgettable. I was helpless. \n\n\"You know my Jason?\" Mrs. Tisdale asked. I wasn't sure if she understood that he was dead.\n\n\"He loved you dearly,\" Teegan said, nodding her head. \n\n\"He didn't come to visit,\" Mrs. Tisdale said. \"He always comes on Tuesday.\" She turned to her nurse, \"Jason didn't come, did he?\"\n\n\"No, Mrs. Tisdale,\" the nurse said, then leaned down to whisper in her ear. I could see the confusion in Mrs. Tisdale's face. \n\n\"May I have your hand, Mrs. Tisdale?\" Teegan's voice broke, and I could feel her struggling to hold back sobs. I knew what she intended, and I wanted for all the world to stop her. It wasn't my place to stop what she felt was her duty. \n\nTeegan took Mrs. Tisdale's offered hand, and I closed my eyes. I felt Teegan's music change to something, not us, a softer slower beat. My fingers moved instinctively, forming the positions necessary to make the cords as if my violin was in my hand. I waited, clenching my jaw for what I knew was coming. \n\n\"My baby,\" Mrs. Tisdale called out. Pain swamped Teegan and in turn covered what little was left of my control. I covered my eyes with my hand as Teegan shared all that she could of Jason with his mother. Jason's last thoughts were of her, and Teegan made sure she knew. Mrs. Tisdale's sobbing echoed in the church as she pulled Teegan into her arms. The nurse tried to separate them, but Mrs. Tisdale pushed her off. Lucidity, driven by the bond, gave her the strength."
    ],
    "authorname": "DreamCloud",
    "tags": [
        "romance",
        "love",
        "teegan",
        "caleb",
        "rose",
        "sam",
        "natalie",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-link-pt-03-the-huntress"
}