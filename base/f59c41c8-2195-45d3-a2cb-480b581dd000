{
    "title": "14 Hours Pt. 07",
    "pages": [
        "-Will-\n\nThe timeline has been updated, and is nearing completion little by little. \n\nI took the pill at seven and went to immediately get a fake I.D. from Chloe Matson who apparently still owes me a blowjob. By eight I was at the 'Sink' dancing on top of the bar like Zelda Fitzgerald and soon after taking pictures with a psycho. By nine I was with Kori and left her at around eleven. We're assuming I go to \"Pucker Up\", a male strip club where I won a hundred dollars. I was obviously very well received because that's probably where I got those red lipstick stains on my face that I washed off at Samantha's at two, meaning I was likely at my birth mother's between midnight and one. We're halfway there. \n\nI've noticed Kori has been acting a little more possessive since her altercation with Lili. I understand it completely and I'm glad she's concerned enough about Lili to mark her territory. Having girls fighting over me is something I thought would never happen. \n\nKori, Samantha and I decided we'd investigate \"Pucker Up\" on Thurdsday, the same day as Amatuer night. They're full professional dancers were weekends, so they reserved Thursday for guys with more courage than I would have without ativan. \n\nWe're in my room going over english and after about an hour Kori puts her book down and kisses me. I kiss her back, with no intent on escalating this. We haven't had sex in nearly two weeks, because I didn't want to make it seem like sex was the only reason I was keeping her around. Kori starts getting more aggressive and reaching for my belt.\n\n\"Slow down, we have company,\" I say looking at Samantha who has a smile like she knows something I don't. She tosses her book aside as well and kisses Kori then leans to kiss me but I lean away. \"Time out.\"\n\n\"We just thought this could be fun,\" Kori says, and I'm not convinced she means that. Why would she even broach this?\n\nLili.\n\n\"I know Lili has you freaked out that she'll do something, probably like this. You don't need to be cool with this to make you better than her, you already are,\" I say, Kori's face melting with relief, and Samantha looking ready to gag.\n\n\"You're so sweet, it's fucking disgusting,\" Samantha says and double checks my door to make sure it's locked. She seems to want this to happen for some reason. Boredom maybe. \n\n\"Do you want to do this?\" Kori asks.\n\n\"You're kidding right, of course I do. We just don't need to.\" I say and Kori frowns.\n\n\"As much as I love your full disclosure policy, white lies are very welcomed from time to time. In either direction. You were free of all mental restraints when we met. Like Lili said, you are the guy who screwed another girl a half hour after you wiped your penis off on her tits. Sometimes that's the guy I want too.\" \n\n\"That's the guy I always want,\" Samantha says and just jumps straight into taking her shirt off. \"I'm either fucking just her or both of you, take your pick.\"\n\nKori seems to have made up her mind when she also took off her shirt, both girls unhooking their bras at the same time. Samantha has better tits, I'll just say it. They're porn star perfect. Big and perky with small nipples. Come to think of it, I don't really remember seeing all that much of Samantha's body. Now I see she has a harder belly than Kori, and I even see the faint outline of muscle. Of course she does, she's a cheerleader who can do a standing back tuck and I'm pretty sure she's a base too. \n\nKori is much more curvy, the polite word for a little chubby. Proportioned tits, ass and all the rest, but she's just so cute it compensates for everything else. So cute you kind of feel guilty for having sex with her. Something about her face just makes me want to cum on it, similar to Samantha's cum on me tits. \n\nSamantha takes immediate control of Kori, going for the zipper on her jeans and sliding it down while kissing her. She continues down her neck and shoulder, kissing her scar and tracing her lips down her navel as she tugged her jeans down. \n\nI feel my dick press against my pants. That didn't take long. \n\nKori is wearing girl briefs, and they perfectly mold her ass that was eating them just a little. Those go gliding down a minute later and Samantha kisses her where they used to be.\n\n\"Join or get off the bed, we're using it,\" Samantha says before she knocks Kori onto her back and opens her up. I stand up and watch Samantha lick her, Kori moaning softly and grabbing Samantha's hair. \n\nIt's now or never. \n\nI take off my shirt, Kori seeing me and smiling that I was joining. Or because Samantha is better at eating her pussy than I am. I hope it's the former. I'm not quite sure in what way I insert myself into this, but I know what I want to do, so I trust that instinct and go behind Samantha, and grab the zipper to her shorts and slide them down. She's in a red thong barely covering her fully shaved pussy, and I'm not in the least bit shocked. Samantha is reliably slutty. \n\n\"She's annoying me, shut her up,\" Samantha says from Kori's lap as Kori was getting louder. I finish undressing and go to my knees next to Kor's face, her turning and accepting my dick in her mouth. If I want to get the most out of this potentially one time thing, I want Samantha sucking. Kori is too distracted to really focus on the task at hand, so it's not the best ever... I can't believe I'm complaining.\n\nFive minutes in Samantha stands up, pushes me to my back and starts cranking and sucking. No surprise she's knows what she's doing. She kisses Kori and guides her head to me, and she's more focused so it's better than before. Not Samantha good, but better. Kori pulls my cock out of her mouth and runs her lips down my shaft, and she reaches the bottom Samantha kisses her with my dick between their lips. They slide up and down in sync several times and I lose it, it's too much. \n\nI instantly blow it all over both of their faces. Samantha turns her head and collects the rest of it in her mouth, kissing Kori to wipe it off her face as well.\n\n\"Told you that would do it,\" Samantha says and quickly moves her tongue, repeatibly flicking the head of my dick with smiling eyes. \"What's your reset time?\"\n\n\"What?\" I mumble. I'm useless after I cum.\n\n\"He's normally back up in fifteen, twenty,\" Kori answers for me, and I don't know where she's getting that assessment from. Maybe ativan me. \n\nSamantha shrugs and starts kissing Kori again, her hands rubbing, and then fingering her. Kori's hand finds Samantha's breasts, and I watch them keep each other occupied until I'm back up again. For now I'm playing this safe and keeping my hands only on my girlfriend, so I move to her pussy and take over. As I do that, Samantha grabs by hands and pulls it to her, and I start fingering her. \n\n\"I need some of that,\" Samantha says, tugging on my ear, dragging me to her wet slit that I immediately push my tongue into her while I finger Kori. My hand is slapped away by Samantha, who wants me focused on this. She'll keep Kori going for me. \n\nFive minutes later she pulls my hair hard and presses her face into my pillow to muffle herself. I move back to Kori, seeing how Samantha is completed, Kori fingering her now. I love making them moan so much, I don't even notice I've probably been hard again for at least the last five minutes. \n\n\"Finally,\" Samantha says when she sees my erection, \"Rock paper scissors?\" \n\n\"Don't even,\" Kori says and pulls me up to her, so my dick is nearly touching her. \n\n\"Forgetting something?\" \n\n\"Hold on,\" I say and go to my desk to grab a condom. \n\n\"What? Why are you not on birth control?\" Samantha asks. \n\n\"Cancer and birth control don't mix,\" Kori says and I return, Samantha taking it from me. \n\n\"What?\"\n\n\"Pull out, cum on her tits,\" Samantha says and Kori reaches up to grab the condom back but Samantha leans away. \n\n\"For a girl who doesn't want to end up like her mom, you seem to be trying to end up like your mom,\" Kori says, Samantha glaring at her.\n\n\"I won't.\" \n\n\"Screwing everyone in school without protection is exactly how that happens.\"\n\n\"Are we really having this conversation right now?\" I ask, then both looking at me. \n\n\"Well at least in this case I wouldn't hate the guy who knocks me up,\" Samantha says, and I don't know whether to be flabbergasted or flattered. Kori scowls. \n\n\"Not going to happen, because he's not going to have sex with you. Those were our ground rules. Nothing above oral, that was our agreement,\" Kori shoots back. \n\nAnyone care to fill me in? I don't like playing a game without knowing the rules. In this case it feels more like navigating a minefield without a map. \n\n\"Why not, we've taken it this far,\" Samantha says and throws the condom across the room. \"We don't need that.\"\n\n\"I do, and quite frankly, I'm not entirely convinced you're clean.\" \n\n\"You know what?\" I ask, pulling up my pants and putting my shirt on, \"You two can just fuck each other.\" I say and leave the room. \n\n--\n\n-Samantha-\n\nI'm not going to end up like my mom. I'm not going to have a kid alone at age seventeen. The fact I reached eighteen without a c-section scar put me ahead of her. Not like she put the bar very high.\n\nMaybe Kori has a point. Not like I was conceived as a virgin miracle baby. I was conceived because my mom was a slut. When I tell people my dad didn't stay around, that's mostly to do with even my mom being uncertain of who that was in the first place. If I don't want to end up like her, as I say I don't, maybe I should be a little harder to get. \n\nWe all seem to end up telling people to be more like what we already are. Kori is the sweet and innocent girl, telling me to be more reserved. I'm telling her she needs to be less reserved and more open to her own sexual nature that Will opened like a champagne cork. Every single girl like Kori I've ever met was a virgin whore at heart. I've seen shy virgins take on three guys a week after their first penetration. \n\nKori seems deeply torn on what she wants to be. Part of her is still the girl who planned on never doing anything with boys until who knows when. One 'life is short' moment later, and now she's sped up her time table, and with a dweeb like Will at that. \n\nUnfortunately she only sees the negatives before anything positive. All she sees is an unplanned pregnancy or her sex life getting out of hand and Will continuously upping the ante. Cumming on her face is up there for Kori, but that's relatively tame. It's Tuesday for me.\n\nA threesome with Will and I would have never have happened without that titless redhead chick threatening god knows what. Kori buckles like a belt with even the slightest pressure. I'm glad that out of all of the guys she could have ended up with during the most vulnerable time of her life, it was one like Will. Will is just way too nice of a guy to take full advantage of anyone. \n\n'Well at least in this case I wouldn't hate the guy who knocks me up.' \n\nWhy the hell did I say that? I don't even like him, let alone being okay with having his baby. Not like I'd keep it anyway. He's a seven at best, and that's generous. \n\nWill represses so much anger and anxiety, the moment it bubbled to the surface in front of me, he jumped a point or two. When he yelled at me in the bathroom, that was so real and raw, that was who he truly is. He's just pissed all the time, in a world where no one is allowed to be; and it's hot as hell when he lets it out. \n\nWill walks out on not just me but his own girlfriend over what was admittedly turning into a stupid argument, I saw it again, and I wanted him. What does that say about my personality that I like a guy when he's angry?\n\nThe door shuts and Kori and I look at each other, both wanting to immediately blame the other. With one look we somehow agree it was both of us without even saying a word. I don't even have it in me to make a sarcastic comment. \n\n\"I'm sure you're clean, that's such a mean thing to say,\" Kori says, already apologizing. She's so cute you can't be mad at her. It was adorable watching her get territorial. \n\n\"That's a fair insult, but I get checked, last I knew I was all good,\" I say before grabbing my thong. \"I didn't even think about cancer and birth control.\"\n\n\"My doctor advises against it, the last thing my body needs is a sudden hormonal shift,\" Kori says and grabs her panties as well, and my eyes shift to her scar. It's almost sexy in a really weird way. \n\n\"You wear that scar really well,\" I say, Kori immediately covering it with her hand instinctively. \"Stop, don't hide it.\" I grab her hand and pull it away from her shoulder and look at her.\n\n\"You make me feel even more insecure,\" Kori says and I feel her eyes on me. \"Perfect breasts, flat tummy, thighs, everything.\"\n\n\"I have no ass though,\" I say and turn it to her, \"See, no ass. Like someone took an iron down my backside. You on the other hand...\" I reach around her and grab both of her cheeks and squeeze, and I feel her flinch. \"Now that's an ass.\"\n\n\"A fat ass,\" Kori says and I slap both cheeks.\n\n\"Smackable is more accurate,\" I say with a smile, and she blushes. \"Stop being so cute.\"\n\n\"Sorry, not like I can turn that off anymore than you can turn off being hot,\" Kori says, and that did it. I want to fuck her. \n\n--\n\n-Kori-\n\nSamantha kisses me again, not like before. Before she kissed me like someone was watching, as if for their benefit. This time she kisses me the way Will does. Like it's just us. Her left hand stays on my right cheek, her right cups my breast. I feel her weight push me to the bed, but before I fall I spin and she goes tumbling down instead. \n\n\"I want you to watch Will fuck me,\" I say, and Samantha smiles wide, her teeth showing before they bit her lip. Just using the word 'fuck' turned me on a little. \n\n\"Get him back up here,\" She says, and I go to his door open it and shout downstairs. \n\n\"We're sorry, come back up,\" I say and within a minute he's back in his room. \n\n\"You two done?\" He asks, and we both nod. I grab the condom Samantha threw and I can tell she's a little disappointed, but she gets it. For someone who's already had cancer, I'm not relying on luck. \n\nSamantha helps me get him naked again and I kiss him while Samantha get's him hard again which doesn't take long. When he's ready he unravels the condom and I position in doggy. He slides in like butter since I'm dripping wet and his hands grip my sides. A moment later Samantha firmly slaps me in the butt. \n\nAfter five minutes Samantha requests a change. Will lays on his back and I rid him him and Samantha drops her pussy on his face. She leans over him and kiss me while rubbing my breasts and clit. In less than a minute with all of the input I orgasm. \n\nI trust Samantha, and I trust Will. This doesn't change who's in who's. I raise myself off of him and pull Samantha off his face and pull her till she's over him. I grab his dick and position it so Samantha slides straight into reverse cowgirl. I return the favor and start kissing and playing with her as well. \n\nWill's hands hold her hips, helping lift her up and down but she doesn't seem to have any problem. After a minute she get off her knees and squats over him, dropping herself down hard and loud. I'm reminded of how big he is from how much restraint it's taking her to not full out shout. \n\n\"Oh fuck, oh fuck, so big,\" Samantha reminds me again a moment later, \"I'm going to cum again!\" Samantha starts to moan and shout with no pillow to silence her. I give her my mouth but that hardly works. \n\n\"I'm close,\" we hear Will say, and Samantha adjusts and yanks the condom off. \n\n\"We're do you want it?\" Samantha asks as she jerks him playfully. She then presses her tits together with his dick between them and massages it. \"On my tits?\" I definitely couldn't do that just as a matter of anatomy. \n\n\"I only want Kori to make me cum,\" Will says, and I Samantha stops and lets me take over. I take him into my mouth and bob my head back and forth, without using my hands. \n\n\"You're trying to make him cum, use your hands, milk him,\" Samantha says, and I don't reply hostile. Just grateful. \n\n\"Show me,\" I say and she places her mouth and the tip and only lowers a little while sliding her hand up and down the entire shaft. \n\n\"Rub your tongue around the tip in a circular motion,\" She says give him back and I follow her instructions. I jerk him hard while spinning my tongue.\n\n\"Don't warn me, I want a surprise,\" I say and keep working. \n\nAlmost two minutes later I start to feel his body spasm, which gives me less than a second to brace. Will ejaculates like a shotgun straight into my throat, and I try to ignore the taste, but it's too much. I spit it out back out, half drooling it over his leg and watching it slime to his sheets. \n\nMinus the finale, beat that Lili."
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "threesome",
        "group",
        "teen",
        "romance",
        "comedy",
        "blowjob",
        "humor"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/14-hours-pt-07"
}