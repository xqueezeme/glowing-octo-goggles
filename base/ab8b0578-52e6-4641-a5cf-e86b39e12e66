{
    "title": "The Shack: An Angry Man",
    "pages": [
        "This story is one of a continuing series of connected stories known as \"Tales from the Shack.\" Normally these go into LW because the Shack series started here, and it is much easier for those that follow the stories to find them if I keep them all together. Even so, this one very much belongs in the LW category. This story stands on its own, though it is part of the series. I typically don't write graphic sex into this story line and that remains true here.  \n\nThanks to blackrandi and sbrooks103x for amazing short notice editing; they make these readable.  \n\nThe Shack: An Angry Man \n\nJust One of those Fuckin' Days. \n\nThere are just days you shouldn't even get out of the fucking bed. The kind of days you start off by dropping your fucking toothbrush in the toilet bowl you just pissed in. The best move is to go back to bed, because it's only going to go downhill from there. It was obviously going to be one of those fucking days.\n\nStill, I convinced myself that I needed to keep my ass moving. Gotta have money to buy food; gotta make money to have money. \n\nFirst order of business was to repair my battery shed. I'd lost a bunch of car batteries when some asshole had used snips to get into the back of the shed one night and stole 80 of them. No doubt they turned them in somewhere for the core charge, probably end up with at least $400. Assholes. I suspected Ronnie Pelton, a local jackass who needed to work his way up to scumbag. Couldn't prove it, though. Not yet anyway.\n\nI managed to get a piece of sheet metal tacked into place, but it took twice as long as I expected, and, as usual with sheet metal, I managed to cut myself twice. Owning a salvage yard, I pretty much put my tetanus shot to the test all the time.\n\nA full set of 22.5\" aluminum wheels came off easier than I expected. They'd probably go for about $1200 on eBay. Several other pieces worked out pretty well, so the day didn't look like it was going to be a total loss after all.\n\nThat was kind of the cool thing about running a salvage yard. Salvage meant taking things nobody else wanted and saving them, making them useful.\n\nBefore I knew it, it was almost lunchtime. I went into the trailer and washed up as best I could, stopping to pull my Gilligan-looking Coors Light bucket-hat off and look in the mirror. Still mostly bald. Not that cool high-forehead-with-lengthening-widow's-peak stuff; flat-out just fringe-left-over-the-ears bald. Probably look better if I trimmed my full-on walrus mustache, but I couldn't do that either. It hid the massive scar on my upper lip. \"Stabbed in the face\" isn't a figurative thing for me, and yeah, that had hurt like fucking hell. \n\nI pulled my lunch out of the refrigerator and headed down to Ed's Quickmart to buy a large Coke and use the microwave. \n\nHonestly, I had cold Coke in the fridge at the trailer, and I probably had six or seven working microwave ovens at any time, but it was a ritual of sorts, and the best part of my day was talking with Sheree, who worked the counter. She was probably my favorite person in the world, and if I'd have had any balls I'd have asked her out a long time ago. \n\nAs soon as I walked in, she started. \"Hey, Les, fancy meetin' you here. Another hour and I'd of missed you. Workin' split shift, coming back in at ten this evening. Shelly's doing community service again, so she's on curfew.\"\n\nDamn, it was just nice to have someone who seemed happy to see me. \"That sucks, but maybe I'll come by for a candy bar late tonight since I know you're here to brighten my day.\"\n\n\"You do that, be the best part of the shift. Ya buyin' a hotdog or using the microwave?\"\n\n\"Usin' the microwave.\"\n\n\"Good, 'cause I put the dogs on the roller oven this morning, and turned on the roller, but forgot to turn on the heat. So they're rolled but cold.\"\n\n\"Ain't that the story of my life.\"\n\nSheree giggled. \"I ain't even been gettin' rolled, much less heated up.\" She put her elbows on the table, laced her fingers and rested her chin on the back of her hands \"So whatchagot?\"\n\nI made sure I met her twinkling eyes. Sheree had what my mom would have called \"a healthy set of lungs,\" and her arms were practically framing them. \"Fajitas.\"\n\n\"Fajitas! Well, looketchew! Settin' in high clover now, ain'cha? Beef or chicken?\"\n\n\"Beef.\" I punched in the time on the microwave.\n\nShe wrinkled her nose. \"I don't eat much beef. When Mom moved us in with her sis, we had a pet cow named Henry for almost a year. Then he was gone, and we had a full freezer. Didn't figure it out all at once, but when I did, it kinda put me off beef, mostly. Still, I do like a good burger now and then.\" \n\nShe stretched, and I tried not to react, but I couldn't resist a glance at her spectacular cleavage. Embarrassed, I looked up; she'd caught my glance, but instead of being angry or upset, she gave me a wink and waited expectantly.\n\nI decided to take a chance. \"Sheree, what are you doing on Fri...\"\n\nSheree suddenly jolted straight up, eyes wide. Not exactly the reaction I'd been hoping for. A second later, the bell on the door dinged and I glanced back.\n\nShit. Two men with skull face masks and sunglasses, one after another; the one in the lead with a Glock 19, the other with a pump shotgun. \n\n\"Don't move.\" The Glock was lined up on me. I wasn't too worried about that; I'd had more guns pointed at me than I could remember. Fucker was holding it sideways like he'd learned from bad movies. I was pretty sure I could take him if he got a little closer. \n\nThe shotgun, though, was aimed at Sheree. I carefully raised my hands. \"No problem.\"\n\nShotgun guy gestured to Sheree. \"Put all the money in a plastic bag.\"\n\nI could see her calmly following instructions. There was something familiar about the guy with the Glock, even though both of them were disguising their voices.\n\nThe guy with the Glock held his hand out. \"Give me your wallet.\"\n\n\"Like I said, no problem, nothing in it worth dying for.\" I held it out to him. He took it. \n\nI turned my head just as he clocked me across the side of my forehead with the gun. I saw it coming a mile away, but there wasn't much I could do without risking Sheree. I let myself drop, ending up nose to toe with a pair of white-paint spattered work boots. I heard him chuckle at me. \"Junk man.\"\n\nThey backed out and Sheree was at my side almost instantly helping me sit up. \n\n\"God, are you okay?\"\n\nI touched the side of my forehead, feeling tacky blood all over it. \"Goddammit.\"\n\nShe pulled some napkins off the counter and began trying to clean up the cut, incidentally pressing my head against her chest. \"How bad does it hurt?\"\n\nNo heterosexual male, with his head against Sheree's incredible assets could really be said to actually be in pain. \"I'll be okay. It was a Glock, fucking things are plastic, it's not like getting hit with a real gun.\"\n\nShe half towed me over to one of the little chair and table sets along the window where customers sometimes ate their hot dogs. \"I gotta call the Sheriff. Big Ed's a stickler about that.\"\n\n\"I'll be fine.\"\n\nWithin minutes the Sheriff, two deputies and the county ambulance were on hand.\n\nThe EMT cleaned the cut. \"You probably need to go in to see someone. Nasty cut and you may have a concussion.\"\n\n\"I am someone. If I have a concussion, it's pretty damn light. The pussy hit like a girl. Just give me some of those butterfly bandages.\"\n\nThe EMT looked over at the Sheriff who shrugged. \n\nI walked over and used the shiny surface of the coffee dispenser while I closed the cut. \n\n\"Love these things, a lot easier than sewing the fucking thing shut.\"\n\nThe EMT eyed me. \"You do that a lot?\" \n\n\"Used to be a medic in the Army. That's why my nickname is 'Needles.' Still keep up my Physician's Assistant license.\"\n\n\"Don't you run the salvage yard?\"\n\n\"Yeah.\"\n\n\"Why...\"\n\n\"Because I really don't like people, and my uncle left me the yard when he died.\" \n\nThe butterfly bandages stopped the bleeding, but the headache built over the next half hour while they took our statements.\n\nI left while they were still talking to Sheree. \n\nThere was a gold Lexus parked in front of my trailer, and as soon as I saw it, I had a sudden sick feeling in the pit of my stomach. I parked and headed up the path to my front door as she jumped out the front seat of the Lexus.\n\n\"Lester...\"\n\n\"No.\"\n\nI kept walking.\n\n\"Les, listen...\"\n\n\"Just. No.\"\n\nShe was scrambling to follow me up the walk as I reached the door.\n\n\"Les...\"\n\n\"Fuck No!\" I slammed the door and locked it behind me, leaning against it for a second, feeling cold sweat running down my face and down between my shoulder blades as she pounded on it and tried to talk to me.\n\nI walked over and turned the stereo on, cranking Santana up as high as it could go, then turning the outside speakers on to max. \n\nShe hated Santana, but it still took her ten minutes to accept that I wasn't going to give in. I finally saw her car pull out, waited ten minutes and went back to work.\n\nLess than ten minutes after that, the Sheriff pulled in.\n\n\"Hey, Les, I need you to come down to the station with me for a bit.\"\n\nI shrugged. \"I pretty much put everything in the statement, unless you have someone in custody.\"\n\n\"This will just take a few minutes.\" He opened the passenger door. \"Hop in.\"\n\n\"Fine.\" The Department was only a few blocks away, so I figured it'd be a quick harmless trip.\n\nIt was fine, too. The Sheriff and I got along pretty well. It was fine right up until we reached the station and I saw the gold Lexus parked outside of it. \n\n\"You gotta be fucking kidding me.\" I tried the door and it was locked.\n\nHe at least had the grace to look embarrassed. \"She says she just wants to talk for a couple minutes.\"\n\n\"No.\" \n\nHe sighed and pushed his hat back up his head a bit. \"She's going to keep making trouble until you talk to her.\"\n\n\"Fuck her. We're divorced, which means I don't have to talk to that bitch ever again.\"\n\n\"She said something about getting the State of Virginia to look into your salvage yard. You know they'll find something. They can always find something.\" He sat back and stared out the front windshield. \n\nI leaned my head back against the seat. \"Fuck.\"\n\n\"Three felonies.\"\n\n\"What?\"\n\n\"Three felonies. I read a Wall Street Journal article estimate that the average adult commits three felonies a day and doesn't even know it.\"\n\n\"Seriously?\"\n\n\"Yes. Say you have Tylenol with codeine left over after a knee injury and you forget about it and it's sitting in your medicine cabinet a year later. I'd ignore that because you're not usually an asshole, but it's still felony possession. There's probably an equivalent of some kind for running a salvage yard.\"\n\nI sighed. \"More than one.\"\n\n\"You know I'm on your side, but you don't want to buy the kind of trouble she's selling.\"\n\n\"Fuck.\"\n\n\"You okay with this?\"\n\n\"Fuck no. I'm still trying to get my head around the fact that you can read. The Wall Street Journal?\"\n\nHe grinned. \"Would it help if I told you I was looking for the centerfold?\"\n\n\"Do me a favor. Do all of us a favor.\"\n\n\"What?\"\n\n\"Handcuff me, handcuff me to a chair.\"\n\n\"Really?\" He blinked.\n\n\"Yeah. If I'm handcuffed to a chair she can't lie about anything I did.\"\n\n\"She that bad?\"\n\n\"Worse. Anyway, if you handcuff me you won't have to do the paperwork this late in the day.\"\n\n\"What paperwork?\"\n\n\"The paperwork charging me with her murder after I fucking beat her to death. If you leave me alone in a room with her without cuffs on, that will happen.\"\n\nTen minutes later they led her into the interrogation room and sat her across the table from me. She eyed the cuffs. \"I didn't ask them to do that.\"\n\n\"I did. For all our sakes. Whatever you want, the fucking answer is no.\"\n\n\"You're not making this easy.\"\n\n\"The last thing, and I literally mean, the last thing on earth I want to do is make anything easier on you.\"\n\n\"Why do you have to be such an ass about this?\"\n\n\"Let's see, you ruined my life, carried on a five-year affair, waited till I was in the hospital then took my kids, took everything I owned along with half my pension, lied to everyone about how I treated you, damn near got me thrown in prison for doing shit I never did, wrecked my career... I could go on, but I think that should be enough.\"\n\n\"I didn't ruin your life. That was you not letting go.\"\n\n\"I just wanted to see my girls.\"\n\n\"That wasn't practical; Charles and I couldn't have you disrupting their lives.\"\n\n\"So you filed false abuse complaints and buried me in debt until I surrendered my parental rights... Fuck! Why am I even talking to you? Fuck off.\"\n\n\"I did what I had to do. Charles and I thought we had more time to prepare and make it easier on all of us. But after you got hurt and somebody said you might be retired out medically, we had to move a little faster.\"\n\n\"Go to hell. And take Chuck with you.\"\n\nI saw annoyance pass over her face. She hated when anyone stepped on the dignity of her lawyer husband. \"Your career ended because of your little pill problem; that wasn't my fault.\"\n\n\"No, you're right, I own that. I'm lucky the Colonel let me go to rehab and actually retire instead of facing charges. I keep up my PA license so I can look myself in the fucking mirror, but I don't work it because I don't trust myself around pills anymore. I really do own that.\"\n\nI leaned as far over the table as I could with the cuffs on. \"I made a choice to handle the stress you piled on me with OxyContin and valium. It was easy because they'd already given them to me for the pain. It was a shitty choice. But it was a better choice than doing what I really wanted to do, which was hold your fucking head under water until the fucking bubbles stopped.\" \n\nShe looked at me trying to decide if I was serious, then continued primly. \"That's all water under the bridge...\" She completely missed the irony of her own statement.\n\n\"Charlotte. You have nothing I could possibly want. The last time I talked with Tiffany and Tara, it was obvious you'd poisoned them so fucking deep they wouldn't take a fucking kidney from me if they were dying. So again. Fuck. The. Fuck. Off.\"\n\n\"I need you to bring my daughter home.\" \n\n\"I don't know how to make it any more clear to you. Is there a fucking language I can tell you to fuck off in that you will understand? Besides, Tiffany and Tara are all grown up. Call them and tell them to come home.\"\n\n\"I know they are grown up, Tiffany is a doctor. This isn't about them. Charles and I have another daughter, Delaney. She's only thirteen.\"\n\n\"Again. Not. My. Problem.\"\n\nShe sighed, exasperated. \"She ran away and we need her back.\"\n\n\"Why the fuck would I have anything to do with your unholy offspring?\"\n\nShe shook her head. \"We could pay you...\"\n\n\"You don't have enough money... Christ, there isn't enough money on this fucking planet for me to help you and Chucky.\"\n\nShe leaned back and studied the ceiling. \"What if... what if I managed to find that gun of your grandfather's?\"\n\n\"The gun you swore in court must have been stolen 'at some undetermined time and place'? The only damn thing I asked for besides to be able to see the girls?\"\n\n\"It might have... fallen into a moving box at some point. Charles collects World War II memorabilia.\"\n\n\"Jesus, you're a bitch.\" \n\nShe could tell she'd scored, though, and she pressed on. \"Delaney's been running away a lot. We put a tracker in her cell phone battery that she doesn't know about. She turns her phone off, but it still sends a signal. She slipped out this morning, but she didn't go to a friend's house this time, she went to Durham.\"\n\n\"So call the cops.\"\n\n\"We don't want the police involved.\"\n\n\"She's your daughter. I don't give a shit, but you should.\"\n\n\"Charles is running for the Virginia Senate, we really can't afford any kind of scandal.\"\n\n\"Wow, that's Mother of the Fucking Year stuff, right there, isn't it?\"\n\n\"I don't care what you think. I just need you to get Delaney and bring her back to the house.\" She put a small tablet on the table. \"This will tell you where she is, it should take you right to her. It also has some pictures of her on it.\"\n\nI thought about the trouble she could make for me. Honestly, though, it was the gun that tipped the scales, it was my family legacy, the one thing left from my grandfather.\n\n\"I don't trust you. You make a video saying that you have asked me to go pick up your daughter in Durham and bring her back to you, and that you will give me my grandfather's gun back. Send it to the Sheriff. You give me the goddam gun when I drop her off tonight. That's it, I don't want anything to do with you after this. I swear to God, if you ever set so much as one foot on my property after this, I will put a bullet into your fucking brain and go to prison with a smile on my face and song in my heart.\" \n\nShe nodded. \"I'll give him a video; you get Delaney and you'll get your gun.\"\n\n****\n\nThirty minutes later, the Sheriff dropped me back at the yard. I went up to the trailer, pulled out the keys to Sally and, after a bit of thought, pulled out my Springfield 1911 .45 out of the bedside table, then pulled a couple extra magazines for it.\n\nI pulled the roller door up on Sally's garage and stared at her. Mostly primer with a brilliant yellow hood, and passenger door, she was certainly no beauty, looking more like a rent-a-wreck beater than anything else. That boxy looking \"Fox\" body style didn't exactly scream \"Fast and Furious.\" Still, she had it where it counted. A 1979 Mustang Cobra four-speed with all the internal trimmings and some extra upgrades beyond anything Ford offered. It'd been a total pain in the ass, but I'd put in a Gen2 5.0L Coyote engine, the best sway bars money could buy and racing seats with five-point harnesses. If this got stupid, I wanted something that could run with anything out there, and for all her cosmetic problems, Sally was that girl.\n\nI took the backroads to the outskirts of Durham; I'd been that way hundreds of times to pick up loads. The dusty rock roads kept me off the highway and out of traffic, away from idiot drivers. I occasionally checked the tablet to see if my quarry had moved, maybe to a mall or something. No such luck. \n\nIt took almost two and a half hours to get to the rundown neighborhood. I figured by that time, according to the tracker, she'd been there for nearly five hours. I parked a few houses away. A shiny black Lincoln Navigator and a dark blue Pontiac G8 GT sat outside what was an obviously condemned building. Not good. I tucked my .45 into my belt. \n\nI straightened my hat, looked at myself in the mirror and hoped that the idiots in the two-story house were desperately stupid.\n\nWhen the door opened, I held the tracker up as if it meant something. \"I'm looking for 'Delaney Morris.' I'm the Uber driver.\"\n\nThe guy who opened the door had a half a head of height on me, and a dizzying array of tattoos. Nobody was behind him. \"Nobody called an Uber here.\"\n\n\"Look, I'm pretty sure she's here, the instructions are pretty specific. I looked at the tablet as if I were reading it. \"She's a minor, so I have to do the pick up or I get in trouble.\" I had no idea if Uber worked that way, but the guy didn't exactly look overly sharp. I pulled her picture up and held the tablet up in my left hand. \"You know her?\"\n\n\"She ain't leavin'. She's our girl now.\" His eyes flicked to a closed door.\n\nI pretended to look at my tablet. \"Dude, she's like 13 years old.\"\n\n\"You know what they say, man. Old enough to bleed, old enough to...\"\n\nHe never quite finished the sentence; medics learn a great deal about anatomy. Such as the fact that the point where the jaw attaches to the skull is particularly vulnerable to a sudden hard strike, say a right cross delivered with no warning.",
        "He staggered back and fell to his knees, so I hammered another one in on the same point and rammed my knee into his face as he sagged loosely to the ground. God, that felt good. \n\nA trickle of blood dripped out of his mouth. I guess he was old enough.\n\nI walked over to the door he'd looked at. There was a hasp with a screwdriver through it, locking the door shut. I pulled the screwdriver out and yanked the door open.\n\nShe was sitting, obviously terrified, on the edge of a ratty mattress that had been dragged into the room. She blinked as the extra light poured in. The windows to the room had been mostly painted over on the outside. At least she was still wearing clothes; that was a damn good sign.\n\n\"Let's go. I'm here to take you home.\"\n\nShe didn't say anything, just jumped to her feet and scrambled for the door. She stopped and looked at the guy on the ground and paused long enough to kick him in the face as hard as she could.\n\nI heard something moving upstairs. Lots of somethings. \"Keep moving.\" I grabbed her arm and dragged her towards Sally.\n\n\"That? Seriously?\" Even as scared as she was, she was obviously appalled by the car.\n\n\"Keep moving, Pumpkin. The limo is in the shop.\" I shoved her into the passenger seat. \n\n\"What are these things?\" She fumbled with the five-point.\n\n\"Jesus. It's a safety harness. Like a seat belt.\" I leaned over and began pulling the straps into place. She froze when I yanked the crotch strap into place. \n\n\"Easy there. Just getting you strapped in.\" I snapped the belts shut and pulled the release rotator off, ran around the car, keeping one eye on the door and slid into my seat.\n\nShe fumbled with the center of the harness. \"It's broken. I can't get out\"\n\n\"I'll fix it later.\"\n\n\"But I can't get out.\"\n\n\"Yeah, well that's sort of the point, Powder Puff. Why the hell are you trying to get out of the seat in the first place...\" I stopped, figures were pouring out of the front door of the house. I reflexively counted eight of them. Shit. \"Time to go. Your boyfriend's asshat friends are on the way.\" I tried to pull away slowly and quietly, but a few of them looked in my direction.\n\n\"He isn't my boyfriend. He's just a friend of Brandon's. Brandon couldn't make it, so that guy picked me up.\"\n\n\"Let me guess, you met Brandon on the internet? Un-fucking-believable. Hard to believe anybody still falls for that shit. You actually still believe he's real?\"\n\n\"Fuck you.\" She did have the grace to look a little sheepish.\n\n\"My, my, my. Would you look at her, using bad words like she's all growed-up. You shouldn't fucking curse, it's not ladylike.\"\n\n\"Fuck you!\" She glared hatefully this time.\n\n\"You already said that, Tinkerbell. Not very creative, are you?\" In the rearview mirror I could see them piling into the SUV and G8. I held my breath hoping they'd run for it, afraid, maybe that somebody'd called the cops.\n\n\"Fuck you!\" She yanked at the webbing of the harness furiously.\n\n\"You really are going to have to work on that vocabulary.\" Shit. They were turning in my direction. Sally could outrun that SUV, but the G8 was going to be a problem, no matter what.\n\nClueless, she apparently thought one unconscious thug had ended the danger. \"What are you some kind of pervert, kidnapping little girls?\"\n\n\"Nah. Doesn't sound very challenging. Apparently, all you have to do is pretend to be a guy named Brandon on the internet and they come running.\" I needed to do this without involving the police; the last thing I needed was Charlotte to drop my grandfather's gun into the ocean. I headed back for the route I'd come in on. Familiar ground.\n\n\"Asshole.\"\n\n\"That's better, at least now you're showing a little creativity.\" The SUV had pulled out in front of the G8; not a great plan, the G8 could have maybe outpaced me and boxed me in, but I could outmaneuver and outrun the SUV If I needed to. I didn't need them to know that, though. Not yet. I accelerated away as smoothly as possible.\n\n\"I didn't need your fucking help.\"\n\n\"I could see that. You had them right where you wanted them. Very clever.\"\n\n\"Fuck you. Why'd you even get involved?\"\n\n\"Your mother railroaded me into it.\"\n\n\"She's a fucking bitch.\"\n\n\"Well, we agree on that. Charlotte's a grade-A, fucking cold-blooded, heartless, soulless bitch.\"\n\n\"Oh God, you do know her.\"\n\n\"No shit. Score one for Nancy Drew, Girl Detective.\" I kept Sally a quarter mile ahead of the SUV, pacing as if I wasn't aware of them. Push them too early and they'd act on it before I was ready.\n\nI was pretty sure they were looking for the same thing I was: a quiet place with no witnesses. I had just the place for all of us, if only they were patient enough to wait fifteen minutes or so.\n\n\"We need to go back. That guy took my back pack with my clothes. He also took my phone. He said it needed to be charged.\"\n\nI looked over her and rolled my eyes, but didn't say a word. \n\nShe slumped back in her seat a bit. \"You must think I'm an idiot.\"\n\n\"Not really. You'll need to try harder to work your way up to idiot. Do you still not have a fucking clue what was happening?\"\n\nShe stared down at her feet silently. \n\nI rolled on. \"You were about to become goddamned party favor. There were at least eight guys there, and probably more on the way. You know what they would have done to you. Use your fucking head.\"\n\nShe shrunk in on herself, breathing in spasms. I could tell she was crying but she didn't want me to know. She didn't want me to think she was weak. She caught her breath and gritted her teeth. \"Asshole.\" \n\nI laughed. \"Good. If you can't be smart, learn to be tough. Because you're gonna fucking need it if you don't wise up.\" We were getting close. I turned down a broad gravel road. I'd been through here dozens of times and I knew the roads here; I just hoped I had enough luck to pull this off.\n\nShe turned her head to wipe the tears from her eyes so I wouldn't see them. \"You don't have to be a dick all the time. I've had a really awful day.\" \n\n\"You want sympathy, it's in the dictionary between shit and syphilis. Learn from this, and don't do stupid shit.\" The SUV moved aside and the G8 started to move up fast; I stepped on the gas and the engine snarled in exhilaration, the acceleration punching a wide-eyed Delaney back into her chair. \n\n\"Holy shit!\"\n\n\"Hang on. Your friends have decided that they don't want witnesses.\"\n\nShe looked back around the edge of her seat and saw the blue car gaining. \"Oh God! Do something!\"\n\n\"I am. This is going to get a little rough.\" As we bolted ahead, the SUV fell back in the distance. The Cobra was kicking up a dust cloud damn near a city block long and I could see the G8 gaining.\n\n\"They're going to catch us!\"\n\n\"I need them to almost catch up. Just hang the fuck on.\" The narrow rock road I was looking for was coming up fast on the left side. I downshifted, spilling some speed.\n\nShe caught the sudden deceleration. \"Don't stop! They'll...\"\n\nWhatever she was going to say was lost to me as I mashed the clutch and pulled handbrake. \n\nSteer right, Steer left.\n\nFor a second, as we drifted into the turn, I thought there was something wrong with the engine, but the high-pitched screaming was Delaney, trying to curl up into a ball with her harness fully locked up.\n\nTap the foot brake to reduce speed just a bit more. Once the nose aligned, I floored the gas and as the revs jumped into the red, I dumped the clutch and dropped the handbrake.\n\nWe rocketed down the narrow rock road with scrub trees, ditches and fields flashing past on either side, throwing an even bigger cloud of dust. The G8 driver didn't even try the turn; he flew past, just a blue blur. He'd have to look for a place to turn once he could slow down, which was likely to take him a quarter mile. \n\nThe SUV, coming up slower, easily made the turn.\n\nI slowed a bit to let him try to catch up a bit, I needed him closer to pull this off. The dust was incredibly thick on the red rock road; a fine powder that would hang in the air forever and thickly coated the scrub trees and grass next to the road.\n\nThe SUV driver was focused on me and forgot the most important thing about driving. The most dangerous thing on the road isn't the other driver. \n\nIt's the road.\n\nWindshield coated in dust, focused on Sally's cute little ass, he missed the fact that we were coming up on a T intersection.\n\nI dropped Sally into second gear, flicked the wheel right, then left, spinning her into a bootlegger turn right at the hammerhead where the road widened at the cross, tucking her neatly at dead stop along the side of the road.\n\nBy the time the SUV driver realized what was happening, it was too late. He was still accelerating when he crossed into the intersection, and his desperate attempt to turn was probably one of the worst choices he could make. Not that he had any good choices at that point.\n\nA controlled spinout, like a bootlegger turn, is best accomplished by a low-center-of-gravity, rear-wheel-drive car with a manual transmission. Preferably one with excellent sway bars.\n\nIt is nearly impossible in a high-center-of-gravity SUV with an automatic transmission at 70 miles per hour. \n\nFor a fraction of a second, the SUV was upright, skidding exactly sideways, then the tires caught, the balance shifted and it began an incredibly high-speed rollover. It still might have been survivable, except for the reason for the T intersection: a 30-foot-tall rock face that had proven easier to go around than cut through. Even as I shifted up and began to accelerate back through the dust cloud down the red rock road, pieces of the SUV flew past us. Nobody was going to live through that. \n\nDelaney stared back down the road at the carnage, gulping air. \"What... what...\"\n\n\"Get a grip, this isn't over yet.\" I slammed through the gears as fast as I could, pouring on the gas, the engine howling with demonic glee.\n\nAhead of us, I could see the G8 bearing down on us. I bared my teeth. \"Okay, Motherfucker. You wanna play chicken? C'mon!\"\n\nI could see somebody hanging out the rear passenger widow. Tiny flashes against his silhouette told me what he was doing. Surprisingly Delaney had enough presence of mind to figure it out. \n\n\"They're shooting!\" She looked at me, pale and terrified.\n\n\"Fuck'em if they can't take a joke, Kitten.\"\n\nThe driver of the G8 was the only other player on the field; hitting a moving target from an accelerating car is hard as hell at the best of times. I was more likely to lose control than I was to get hit by a bullet.\n\nIt took too long for him to get it. Never, ever, play chicken with someone who isn't playing by the same rules you are. Don't ever play chicken with someone who isn't afraid of getting killed. \n\nOnce he realized I wasn't planning on turning, he tried to move aside, but the road was too narrow, and the G8 cartwheeled as the front left wheel, then the nose dug into the soft dirt of the ditch. As we flashed past, I saw the terrified face of the gunman as he was ejected from the window. The car turned into a short-lived four-thousand-pound projectile, spinning through the air and slamming though scrub trees until it met the trunk of a massive live oak. \n\nI braked slowly, no point in losing control now. Delaney was huddled into herself, half curled up, ghost-white, teeth chattering. She was in shock. She might be getting ready to pass out.\n\nMaybe that was for the best; it'd make the next part a lot easier on her if she did.\n\nI shifted into reverse until I was 30 meters from the twisted wreck of the G8, then stopped; I could see flames back at the wreck of the SUV. That's rare and it meant that the SUV had hit incredibly hard. I got out, pulling the .45 from my waistband. Delaney was fixated on the floor, not even looking up when I shut the door. \n\nI'd seen enough to know there was no way anyone was coming out of the G8 alive, but the gunman on the side of the road was still twitching.\n\nI walked over and looked down at him. His back was obviously broken, and his eyes weren't seeing anything, but he was still alive. He probably wouldn't even survive if he were in a hospital, but that didn't matter, I couldn't take the chance.\n\nI fired once into his forehead and headed back towards the Cobra. Delaney's face was blank white sheet with dark hollow eyes as she watched me.\n\nWe pulled away towards the main road.\n\n\"Why... Why did you...?\"\n\n\"They knew your name. They knew where you lived. What do you think they were going to do if they didn't catch up to us now?\"\n\nShe shuddered, lower lip quivering spastically. \"They were going to kill me, right?\"\n\n\"You'd have been begging them to kill you.\"\n\nShe leaned forward heaving for as second, but nothing came out. \"Fuck them.\" Fragments of tears squeezed out of her lashes. \"Fuck them.\" \n\n\"Hold on to that anger, Baby. Sometimes that's all you have.\"\n\nShe straightened up and took three deep breaths, each one longer and deeper, forcing herself to calm down. \"Fuck them.\"\n\nWe drove for almost an hour without speaking at all before I noticed something.\n\nI sniffed. \"What the fuck is that smell?\"\n\nDelaney gestured to her lap. \"I peed myself, Okay?! You're fucking crazy!\" \n\nI shrugged. \"Good thing I have vinyl seats in this thing. Roll your window down, Sunshine. We still have a couple hours to go to get you home and I don't want to smell that the whole way.\" \n\n\"You're fucking crazy!\"\n\n\"You already said that.\"\n\n\"You could have gotten me killed. What if we'd have rammed each other? In case you forgot, my seatbelt won't open.\"\n\n\"Like I give a shit.\" I chuckled. \"Some math for you. We were doing 70 miles an hour, they were going at least as fast. This car weighs just about three thousand pounds, theirs weighed about four thousand pounds. If we'd have hit head on, you wouldn't have felt a goddamn thing.\"\n\n\"Who are you?\" Her voice was a little quieter.\n\n\"Nobody important. I'm just here to take you home.\"\n\nShe was quiet for a little while. \"Are you some kind of cop?\" \n\n\"No.\"\n\n\"But that stuff you did with the car and the way you took out... everyone...\"\n\nI should have let it go and let her stew in silence, but I answered instead. \"I spent two decades in the Army, Buttercup. Seventeen fucking years in Special Forces.\"\n\n\"Really?\" She screwed her face up. \"You don't look like...\"\n\n\"Well excuse the fuck outta me, Princess Glittersparkle. Liam Neeson and Brad-Fucking-Pitt were unavailable today, so you're stuck with my ugly ass. I'm goddamn sorry I don't live up to your expectations.\"\n\nShe stared at me for a minute. \"God, you're Mom's ex-husband, aren't you? She said he was a tough guy in the Army.\"\n\nI glared at her and looked back out the windshield at the road.\n\n\"She said you hated her more than anything in the world. Why would you help her?\"\n\n\"The same reason anyone helps anybody. She has something I want.\"\n\n\"Tiffany and Tara.\"\n\nI shook my head. \"Hardly. Even if the bitch told them the truth now, it's too fucking late to make a difference.\"\n\n\"The truth?\"\n\n\"She told everyone I was abusing her, beating her up. I never once touched her cheating, lying ass.\"\n\n\"Oh.\" \n\nShe sat quietly for a while, and I eventually punched the CD player on, bringing up Santana.\n\n\"Why do you listen to this stuff?\"\n\n\"It helps me calm down, keeps me from being so angry.\"\n\n\"Maybe you should try something different, I don't think it's working.\"\n\n\"Ha Ha, Cupcake, very funny.\" \n\nShe shifted, crossing her arms. \"I want to change clothes and get cleaned up.\"\n\n\"Keep wanting. See where that gets you.\"\n\n\"Jesus. No wonder she divorced you.\"\n\n\"Shut up.\"\n\nShe sat for a bit. \"You could do me a favor and take Tara and Tiffany anyway.\"\n\n\"They're adults. Hell, she said Tiffany is a doctor.\"\n\n\"Yeah, and Tara is a lawyer. They're perfect for Dad and Mom.\"\n\nI glanced at her. \"You're not exactly living up to the standard, are you?\"\n\n\"Fuck you. I hate them.\"\n\nI could hear bitterness in her voice. \"Good for you, Sugarpie.\"\n\n\"I mean it.\"\n\n\"Drive on with that. A rebellious teen-age girl who hates her family, how fucking original.\"\n\nShe wrapped her arms around herself. \"They're so fucking perfect. All I ever hear is how they had straight A's and were in National Honor Society. All that shit.\" \n\n\"So? Work harder.\"\n\n\"I can't work harder, I have dyslexia. Asshole. If I concentrate really hard, I can read for about 20 minutes and then it all goes to shit. I'm one of the stupid kids.\"\n\n\"A short bus rider? I'll bet that burns Chucky's ass.\" I snickered. \n\n\"He's embarrassed by me. Really embarrassed.\" She had tears in her eyes.\n\n\"And you're working hard to keep him that way.\"\n\n\"Fuck you. You don't know what it's like.\"\n\n\"Said every teenage girl ever born.\"\n\n\"I have real problems.\"\n\n\"Surprise. Surprise. We all have real problems. I have a salvage yard to run, but I can't because my crazy-bitch ex-fucking-wife is making me jump through fucking hoops, finding her psycho daughter, for something I have every fucking right to. Everybody has real problems. You want to solve your problems, find something you're good at and work at it.\"\n\n\"What does she have that you want?\"\n\n\"My grandfather's gun. He carried it in World War Two, my Dad carried it in 'Nam, and I carried the damn thing in Somalia. The bitch said she'll give it back to me if I bring you to her.\"\n\nShe sat silent for a long moment. \"You really have a salvage yard? Like old cars and stuff?\"\n\n\"Yes, like old cars and stuff. A junk yard.\"\n\nShe stared out the window. \"That's kind of neat. Probably all kinds of cool stuff to do.\"\n\n\"It's a lot of hard work.\"\n\n\"It'd still be neat. You could make stuff. I bet you made this car there.\"\n\n\"More or less. I started with just a frame.\"\n\n\"What is it?\"\n\n\"A '79 Ford Cobra.\"\n\n\"I made a sword in metal shop at school. It was cool, but I got suspended.\"\n\n\"I guess you probably should have checked with the teacher to see if you were allowed to make a sword.\"\n\n\"They were more upset that I broke in to use the equipment in the metal shop.\"\n\n\"Why didn't you just take metal shop?\"\n\n\"They wouldn't let me; the classes were at the same time as remedial English and remedial math. They weren't going to let a retard take metal class anyway.\"\n\n\"I don't think you're supposed to use the word 'retard' anymore.\" \n\n\"I can use it all I want, I am one.\" She crossed her eyes and stuck her tongue out of the corner of her mouth. \n\nI couldn't help myself, I snickered. Then she giggled. Pretty soon we were both laughing until tears were coming out of our eyes.\n\nI finally stopped laughing. \"It's been a long fucking day, I needed a laugh.\"\n\nShe giggled a tiny bit more. \"Mine hasn't exactly been sunshine and roses, Peaches.\"\n\nI chuckled. At least she was game. \"Jesus. You reek. You still want to clean up, we're close enough that maybe Sheree could let you use the shower in the office at the Quickmart.\"\n\n\"I don't have any clothes. Asshole.\"\n\n\"There's a dollar store a block from the Quickmart. It's open pretty late, I'll run in and get you some clothes. What size are you?\"\n\n\"Size 12, in Girls. But nothing with fucking flowers on it.\"\n\nI wasn't worried about her running for it, if she hadn't gotten out of the harness when I was dealing with the shitheads, she wasn't getting out now.\n\nWhen I came back to the car I tossed the bag in her lap. \n\n\"Seriously? The jeans are okay, but a unicorn shirt and Disney panties?\" \n\n\"It's what they had; it's a dollar store, not Macy's.\"\n\n\"Jesus. I'm going to die of embarrassment.\"\n\n\"That's what they had, unless you would rather keep smelling like a urinal. The paper towels and cleaner are for your seat, you pissed it, you get to clean it.\"\n\nShe grumbled but nodded.\n\nI pulled up in front of the Quickmart, then went around to get her out of the harness.\n\n\"Behave. Sheree's my friend and she doesn't need any of your shit.\"",
        "\"If she puts up with you, I don't see how the hell I could make her life worse.\"\n\n\"Shut up.\" I pushed her ahead of me.\n\nSheree smiled as we walked in. \"Whatchadoin?\"\n\n\"My niece here needs to use the shower in your office.\"\n\nSheree narrowed her eyes at me, but pulled the office key on a huge block of wood out from under the counter. She started to hand it to me hesitantly, but I waved her off. \"I'd rather you showed her where it was.\"\n\nSheree looked a little relieved. \"I will.\"\n\nI looked at the girl. \"Remember what I said. Don't start any trouble.\"\n\nShe grimaced and gave a sarcastic salute. \"Yes, sir.\"\n\nSheree walked her to the back, then, a few moments later, came back out. \"She's not really your niece, is she?\"\n\n\"She's my ex-wife's daughter. She ran away and I had to go pick her up. She can't slip out back there, can she?\"\n\n\"Not unless she can squeeze through the half inch steel mesh bolted over the windows. Family's always a pain in the ass. I've had to post bail for my cousin Shelly about five times. She never pays me back.\" She paused, puzzled. \"I didn't think you were on speaking terms with your ex.\"\n\n\"Yeah, I'm not, and it's just been one of those fu... damn days.\"\n\nSheree reached over and touched my hand. \"We did have a rough start this morning, didn't we?\"\n\nI could see something besides sympathy in her eyes and felt, for a second, that maybe the day wasn't total shit. Then the door dinged behind me.\n\n\"Hey, Sheree, I need a can of Skoal.\" \n\nSheree rolled her eyes. I looked back over my shoulder at Ronnie Pelton. He looked at me and grinned \"Hey, Junkman, you look like shit. Run into a door?\"\n\nI watched him push up to the counter and his cologne washed over me as he leered down Sheree's top while she fished out a can of Skoal. \"Great knockers. Better'n the Grand Canyon.\"\n\nI looked down at his work boots, spattered in white paint.\n\nIt'd just been one of those fucking days. Sometimes it doesn't pay to get out of bed. For anybody.\n\nI grabbed the back of his head and slammed his face onto the counter as hard as I could, then kicked the side of his knee so that it folded inward.\n\nHe began to scream, but as he fell I slammed his face into the counter edge again, knocking him out cold.\n\nI let him crumple to the floor as Sheree stood up straight and leaned over to watch him drop with one eyebrow raised. \"Wow. If you're defending my honor now, you best plan on hanging out here a lot. These jugs of mine attract a lot of attention.\" She looked at him carefully, studying the pool of blood spreading out from his flattened nose. \"At least till word gets out anyways. You don't do things halfway, do you?\"\n\n\"It's not that...\" I caught a disappointed look flash across her face. \"Not all that anyway. Shithead here is one the idiots that robbed us this morning.\"\n\n\"You sure?\"\n\nI pulled the back of his jacket up and pulled the Glock 19 out of his waistband, cleared it and dropped it on the counter. \"Same boots, same shitty dollar store cologne, same damn gun.\"\n\nSheree nodded, picked up the phone and began dialing. Too many numbers for 9-1-1. \"Hey Ed? Yeah, your cousin Ronnie? He's the sonovabitch that robbed us this morning. Same gun, same boots, same cologne. He'll be here, Les just kicked the shit out of him. It'll be a while 'fore he wakes up. Yeah, I'll tell him. Family is a pain in the ass.\"\n\nShe hung the phone up. \"Big Ed'll be over here in 'bout fifteen minutes to take Ronnie for a little talk. Says you can have a free soda if you want.\"\n\nDelaney walked out of the office and leaned over to see what Sheree was looking at. She stared at the guy on the floor then looked up at me. \"Jesus Christ! Do you think you could actually go a whole fucking hour without beating somebody up, and maybe, just maybe, not burning or shooting something?\" She turned to Sheree. \"You should know he has really, really, serious anger issues.\"\n\nSheree smiled at her with syrupy sweetness. \"No man is perfect, Honey. They need women to keep them on the right path.\" She turned towards me. \"Speaking of which... this morning, I got the impression you were about to ask me out on a date.\"\n\n\"I was going to ask you what you were doing on Friday.\"\n\n\"Well, lookitthat, my schedule is open.\" She looked over at Delaney. \"Men can be a little slow on the uptake sometimes. I was fixin' to hit him over the head and drag him back to my cave if he didn't take the hint or couldn't get the words out.\" \n\nDelaney giggled, sounding, for a change, like a kid. \"I'll try to remember that.\"\n\nI looked at both of them. \"Is that part of what they teach girls when they take them out of class in sixth grade?\"\n\nThey both started giggling at that.\n\nA few minutes later, Big Ed finally arrived with a couple of his kids, both of them every bit as big as he was; he shook his head at us as his kids dragged a still-unconscious Ronnie to their truck. \"Family is a pain in the ass.\"\n\nSheree, watching Delaney eat her third hot dog and sipping her Coke, smiled. \"Sometimes.\"\n\n****\n\nThere was an almost comfortable silence as we went along the final leg of our route, but eventually Delaney reached over and tapped my arm.\n\n\"I know mom took everything from you while you were in the hospital. I know it's bullshit, but she makes it sound like some kind of escape from Alcatraz. How did she get you to let them take Tara and Tiffany?\"\n\n\"I never even saw her or the girls after I got out of the hospital. She had Chuck keep filing protective orders against me. Under the Lautenburg amendment, if you're under a protective order you can't have access to a gun. For some medical personnel, that isn't a big deal but in Special Forces, it is. I didn't have the money to fight it since she'd taken everything, and it looked like I was going to end up thrown out of the Army and lose my pension if I didn't cooperate. Besides...\" I stopped, I wasn't sure if I should tell her the truth.\n\n\"'Besides' what?\"\n\n\"I was really angry.\"\n\n\"You're not angry now?\"\n\n\"Not compared to then, I was losing control, drinking too damn much, taking pills I shouldn't have been. I was dreaming of killing her and Chuck all the time. Too much.\"\n\n\"It sounds like she deserved it.\"\n\n\"Tara and Tiffany wouldn't have had any family then. I still wouldn't have felt any better. Besides, if I did, you wouldn't be here. And today would have been boring as hell.\"\n\nShe looked at me and quirked her mouth in a half-smile. \"Even if I peed in your car?\"\n\n\"You handled it better than most would have. You didn't pass out, you didn't throw up and you didn't grab my arm while I was driving.\"\n\n\"I kind of thought that might get us killed.\"\n\n\"That's pretty clear thinking for a kid off the short bus. I've seen trained soldiers do worse.\"\n\nShe smiled and straightened up. \"Not bad for one of the stupid kids, huh?\"\n\n\"Damn good, actually. You just have to learn to stay frosty. Don't let your emotions take over and tell you what to do. Think things through and respond, don't just react. It took me thirty-five years to figure that out and I still fuck it up.\"\n\n\"Stay frosty? I can do that. I just wish I was smarter.\"\n\n\"So you can't read real well. So-the-fuck-what? Get books on audio. Even the little library here has tons of them. Just keep looking at things differently until you figure out how to get what you want.\"\n\nShe nodded and set her jaw as her parents' ridiculously oversized house came into sight.\n\nAs we got out of the car, I pointed at her. \"Remember what I said. I don't want to have to come looking for you again, Thugbunny.\"\n\nShe smirked. \"I like that. 'Thugbunny.'\"\n\n\"Are you ready?\"\n\n\"Thugbunny says, 'Fuck it.'\"\n\nI leaned on the doorbell.\n\n\"She hates it when people do that.\" \n\n\"I know.\"\n\nThe door opened and Charlotte looked us over.\n\n\"Got something of yours, Charli.\"\n\nShe winced at my old nickname for her. \"Delaney, get in here.\"\n\nDelaney marched through, scowling at her, then Charlotte tried to close the door on me. I caught it and pushed it open enough to stagger her back so I could step through. \"Forgetting something?\" \n\nShe tried to look innocent. \"Oh, that. I simply don't know where it might be. I will have to get back to you about it some time.\"\n\nIt was perfectly clear she had no intention of doing anything of the sort. Past her, I could see a number of well dressed women sitting in chairs in her very proper sitting room. The only two I recognized were Tiffany and Tara, who watched me disdainfully. No doubt, they were here to be respectable witnesses to any violence on my part. I watched Delaney disappear into the next room. \n\nI glared at her and hissed. \"You gotta be fucking kidding me. I did what you wanted.\"\n\n\"Charles isn't home, but I will have him see if he can find it when he does get here.\" She said it loudly, politely, but the smug look on her face said everything that needed said.\n\n\"It's okay, Mom, I found it for you.\" Delaney cheerfully announced from the archway. \"It was in the safe in the study, right next to your jewelry.\" I saw confused looks directed at Charlotte by Tara and Tiffany. Whatever Charlotte had told them wasn't holding water right now.\n\nDelaney walked towards us, holding up the wooden case I'd made for the gun back when I was in high school. \"This is it, isn't it?\" Charlotte gawped at her, speechless for a damn change.\n\nI opened the case and ran my fingertips along the weapon. \"Twelve notches for Pops on Iwo Jima, four for Dad in the A Shau, and six for me in Mogadishu.\"\n\nDelaney looked at the .45 in wonder, then up at me. \"I hope it was worth it.\"\n\nI looked in her eyes. \"I think you just might be.\"\n\n****\n\nSome days it's just hard to get out of bed. Someone pounded on the door and I extracted myself from Sheree, trying not wake her up. She'd come home with me after our date a few weeks ago, and never really quite got around to leaving. I was frankly hopeful that she never would. \n\nI couldn't even remember her deciding to move in. She seemed to be able to talk me into just about anything. She'd even talked me into donating time at the local clinic. I decided to be honest about my worries about the drugs and she promised me she'd help me keep on the right path. She'd winked and leaned way forward and said. \"I can make you feel better than any pill ever invented.\" She'd gone right ahead and proven that.\n\nI looked down at her fondly, then pulled on jeans and a T-shirt and opened the door.\n\nDelaney was stretched to her full height, what there was of it, arms crossed over her chest and a pair of work gloves dangling from her belt, one boot up on a full duffle bag.\n\nShe pulled the brim of her Budweiser bucket hat up a bit. \"Ready for work, Boss.\"\n\n\"What the fuck are you doing here? That crazy bitch will find a way to put me in prison for this.\"\n\n\"The 'crazy bitch' is sitting in her car at the front gate to the yard. She's convinced you were serious when you said you'd shoot her if she came onto your property again. I told her she was probably right, what with your anger issues and all. She's dropping me off with you, at least until the election is over in November.\"\n\n\"Really?\"\n\n\"She has enough problems without me around. I talked to Tiffany and Tara, and they are asking her some questions she doesn't want to answer about what happened. I told them to call you, but I don't know if they have the balls. She has formal paperwork, a power of attorney, health insurance and everything.\"\n\nI could see the nose of the gold Lexus at the front gate. \"I just got a registered letter from Tara yesterday. I guess she and Tiffany want to hear my side of things sometime.\"\n\nI looked her over. Loose work jeans, steel toe boots, a black T-shirt and a crazy grin. \"Damn, I didn't think they had it in them.\"\n\nI sighed. \"What's your plan?\"\n\n\"I'll work for you, we can figure out some kind of school thing, maybe homeschooling.\" \n\n\"Homeschooling?\"\n\n\"As long as you include a lot of metal shop.\" She looked over to her left. \"Is that what I think it is over there?\"\n\nI followed her stare. \"It's what's left of a '58 Plymouth Fury. Not much left but the body.\"\n\nHer eyes widened. \"Like in the movie 'Christine'? I'll need a car when I'm sixteen, you know. Unless you want me hanging out with boys to get rides.\"\n\n\"I think it's pretty obvious you aren't a very good judge when it comes to boys.\"\n\nShe rolled her eyes. \"Look who's talking. You actually married that crazy bitch. Talk about short bus stupid.\"\n\n\"Good point, but it'll take a lot of work to get that running.\"\n\n\"From what you said, you started with less when you built your Cobra. Besides, I think we'll have time.\"\n\nI looked down at her duffle bag. \"What'd you do?\"\n\n\"Showed up at one of Dad's press conferences in my T-shirt.\" She gestured to her black T-shirt; it had a craft paint homemade logo on it of a crude fucked-up looking stick figure rabbit in a sideways hat and the saying \"Thugbunny Says Fuck It!\" on it. She turned around and I could see \"Full Retard\" across her shoulders.\n\nShe smirked. \"And I told them I'd keep doing it unless they let stay here and work for you this summer.\" \n\n\"They couldn't just take your T-shirt away?\"\n\n\"I told them I made twenty more.\"\n\n\"Really?\"\n\n\"Yeah, but I really only made five. I ran out of paint. My last T-shirt says 'Princess Glittersparkle Says Suck My.'\" She shrugged.\n\nSheree came up behind me and leaned over my shoulder, pressing herself against my back. She stretched against me sensually. \"Let me help her get her stuff back to that back bedroom, it'll be her room. You go get the papers.\"\n\nDelaney giggled. \"You figured out how to deal with his anger issues, didn't you?\"\n\nSheree winked at her. \"Just workin' with what the Almighty gave me.\" \n\nI walked down steps, trying to shoot them a glare, but from the way they were grinning at me, it didn't work very well.\n\nCharlotte kept looking straight forward as I came up to her car.\n\n\"Charles wasn't very happy about losing that gun.\"\n\n\"Tell him to grow a pair of balls, shoot some bad guys and carve his own notches. Shouldn't be taking shit that doesn't belong to him.\"\n\n\"He's a collector, he's not like you.\"\n\n\"Lucky you. How's this gonna work?\"\n\n\"Sign the papers and file them. Just keep her off of CNN. She's too much for us to deal with right now. We'll see after the election.\" She refused to look at me.\n\nShe was lying, I could tell. She had no intention of ever taking Delaney back if she could avoid it, and I almost called her on it.\n\nAlmost. \n\nIt didn't seem fair to Delaney. She wasn't just another dramatic teenage girl wanting attention. She'd never fit in Charles and Charlotte's world because she'd never be good enough for them. They wanted perfect little show ponies for their perfect world.  \n\nI looked though the stack of papers Charlotte shoved through the gap at the top of the slightly rolled down window. She hated this, I could tell she felt like she'd lost, and she really, really, hated losing to me. \n\nShe didn't know the half of it. The Sheriff had recorded our discussion in the interview room and given me a copy, pointing out how bad it would look for an aspiring politician to not only be screwing a wounded soldier's wife, but stealing from him while he was in the hospital. It certainly wouldn't paint Charlotte in a very pleasant light, either. \n\nIt was a huge risk on his part. He was trusting me not to use it unless I had to, since it would likely put him in real trouble. He'd be retiring in a few years, though.\n\nSheree, in turn, pointed out how everybody was talking about Charles eventually ending up as Governor and mentioned that timing was everything. With her help, I could be patient. \n\nTucked in the back of the packet were the papers I knew I'd find. It probably would have cost a fortune to get it done if he wasn't a full partner at a law firm. All I had to do was sign on one line, file the papers, and I'd have full guardianship until Delaney turned eighteen. I decided right then I could be patient for a while. It'd be five years before Delaney turned eighteen and I already knew I wasn't going to give her up. Maybe, if things worked out, I could give Tara and Tiffany a preview of the video so they'd know the truth.\n\nSheree and Delaney had already gone inside. I nodded wordlessly to Charlotte, whether she saw it or not, then turned and walked back to the trailer. I couldn't help but smile. \n\nSure Delaney was fucked up. Maybe she was as fucked up as I was; but the sign did say \"Salvage,\" after all.\n\n*****\n\nPost Production notes:  \n\nI have to thank my wife, aka The Missus, she actually came up with the plot for this story. At almost midnight, on a weeknight, about a week ago. So we did the logical thing and stayed up late, framing it out and figuring out characters. \n\nThe high-speed drift turn and bootlegger can be performed as described in a rear wheel drive, manual transmission car with a low center of gravity. Be very careful, start very slow with plenty of space if you are trying these for the first time. Expect to end up off the road a time or two until you get the hang of it. You may very well wreck your car, so take that into account. We took the Missus's Mustang out to a gravel quarry to remind ourselves of how to do this.  \n\nThe Mustang Cobra is a nod to StangStar06, whose stories have provided so many of us with enjoyable hours of reading. "
    ],
    "authorname": "Todd172",
    "tags": [
        "the shack",
        "violent",
        "needles",
        "adventure",
        "action adventure",
        "blackmail",
        "mustang",
        "divorce"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-shack-an-angry-man"
}