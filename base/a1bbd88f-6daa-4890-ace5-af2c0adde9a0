{
    "title": "Uncertain Justice",
    "pages": [
        "<p align=\"center\">CHAPTER ONE</p>\n\n\"A San Antonio jury continues to deliberate in an attempt to reach a verdict in the trial of accused rapist Miles Underwood. A third note was passed to Superior Court Judge Roy Farmer yesterday afternoon indicating they were deadlocked on all charges. In a last ditch effort to avoid a costly mistrial, Judge Farmer instructed the seven women and five men on the panel to return to their deliberations and try to reach a consensus.\n\n\"Underwood, a twenty-year veteran of the U.S. Army, is charged in the rape and manslaughter of teenager Virginia Rodriguez of New Braunfels. Underwood has maintained his innocence throughout the trial, claiming his only contact with the girl was to give her first aid when she collapsed at the home of mutual friends.\n\n\"In other news, the Texas Department of Transportation announced plans to expand Loop 1604 around San Antonio to a four lane controlled access highway on the south side of the city beginning next October. The winning bid on the highway expansion will be announced....\"\n\nKSAA Channel Nine\n\nSan Antonio Texas\n\n\"Evening News at Six\"\n\nFebruary 4\n\n<p align=\"center\">\u00a7</p>\n\nThe crack of wood slapping hard wood pierced the low buzz in the courtroom, silencing conversations in mid-word and turning all heads toward the bench. His honor, Judge Roy Farmer, was fuming. He knew he was going to do something this morning he wouldn't like, and he wasn't at all accustomed to being forced into anything that displeased him. A second rap on the sounding block was unnecessary. Order had been reestablished with the first.\n\n\"We're back on the record in the matter of the State of Texas versus Underwood,\" Judge Farmer announced. It was so quiet in the packed courtroom he could hear the whine of the floor fan in the rear of the room. The sound irritated him. He wanted to order it disconnected, but choked off the demand before he spoke. After all, it had been placed there at his request; it was there solely for his benefit. He turned to look at the jury box.\n\n\"Madam foreperson!\" His voice boomed in the silence. Three jurors, already thoroughly intimidated by the judge's manner, squirmed uncomfortably in their chairs. The lean, acidic ex-school teacher who'd been elected foreperson stood to face the judge. Her chin rose to acknowledge his summons.\n\n\"Yes,\" Judge Farmer continued, his tone more accusation than statement. \"I have this note from you.\" He held up the unfolded sheet of paper between thumb and forefinger before dropping it disdainfully to the desktop again. \"You say that you are 'hopelessly deadlocked' and that it appears you cannot reach a verdict in this case.\"\n\n\"Yes, your Honor. That is correct.\" The elderly woman held firm against the judge's scowl. \"We've voted a number of times on each count in the indictment and we are unable to agree on any of them.\"\n\nJudge Farmer held his breath for a minute, controlling and concealing his anger as best he could. His jaw muscles clinched as he searched for the words he wanted. \"Is there any way,\" he asked formally, \"that this jury can reach a finding with additional deliberation ... any possibility at all?\"\n\n\"No, your Honor. There is not,\" she said emphatically. \"We find ourselves stalemated on all charges.\" She shot a glance in Miles' direction. Though brief, it was unmistakably disapproving.\n\n\"A number of the jury are completely intransigent in their position, Your Honor,\" she continued. \"I see absolutely no prospect of a unanimous decision.\" She edged imperceptibly away from the short, burly man to her left, making it clear where some of the obstinacy could be found.\n\nThe middle-aged Hispanic peered up at the prim spinster's face. His eyes narrowed, momentarily increasing the wrinkles in his weathered face. For a moment, he seemed about to join the discussion, but then settled back into his seat. His hands relaxed in his lap. The curl at the corner of his lips showed amusement ... or perhaps something less charitable. It disappeared too quickly to be sure.\n\n\"Thank you, Madam Foreperson, you may sit down.\" Judge Farmer glowered impartially at the two who clearly represented the 'intransigent' viewpoints on the jury. Lifting his gaze, his eyes flicked across each juror a final time before swiveling his chair back face the attorneys and spectators.\n\n\"I am ... extremely disappointed that twelve reasonable citizens, after six weeks of testimony and reflection on the facts, cannot arrive at a fair verdict. It is....\"\n\nHe forced himself to stop, biting the inside of his lower lip to keep from making an observation that might be cause for reversal in a new trial. He would have to preside over that one too and if this case ever did get settled, he sure as hell didn't want it sent back down to him after a successful appeal. He sighed inaudibly.\n\n\"Be that as it may,\" he said slowly, resigning himself to the inevitable, \"I have no alternative other than to declare a mistrial in these proceedings.\" He spoke to the jury for the record, but he would not look at them. \"The court thanks you for your service and you are dismissed.\"\n\nJudge Farmer fixed his attention on the attorneys for the prosecution and defense. The three representing the State of Texas sat to his left front, a few feet from the jurors slowly filing out of the jury box. The attorneys were busy gathering legal pads and stray legal papers, stuffing them into cavernous briefcases.\n\nThe defendant and his counsel were to his right front; the accused was visibly uncomfortable in his off-the-rack suit. The judge snorted softly. You'd think the man would try to make as good an impression as he could. On the other hand, why waste an expensive suit you were likely to be wearing to prison. He took up the gavel again and tapped it on the sounding block twice to bring attention back to the bench.\n\n\"Mr. Brady, do you know at this time if the people will be retrying this case?\" There was little chance of this going away, but he had to ask.\n\n\"Yes, your Honor. The State believes Mr. Underwood is guilty of particularly heinous crimes and we will seek an early date for a new trial. We're confident we will be able to convict Mr. Underwood given the chance to present all the facts to an impartial jury.\" The District Attorney's words held a delicate maliciousness that could easily be denied later. He glanced at the defendant and his lawyer across the aisle to include them in the conspiracy.\n\nJudge Farmer's lips tightened to a thin line. In remarkably few words, the District Attorney--the lead prosecutor--had managed to imply there had been serious error on the part of the judge in one or more of his rulings during the trial as well as a lack of integrity among the citizens selected to try the case.\n\n\"Spare me the speeches, Mr. Brady ... and mind your manners, Counselor,\" cautioned the judge forcefully. He wasn't going to take any crap from the prosecutor in his own courtroom. He glared at the offending district attorney. Brady busied himself with a quick review of some papers, unrepentant in the face of the rebuke.\n\n\"Counsel for both sides will check with my clerk to find a date agreeable to both sides. If you can't find one, gentlemen,\" the judge growled finally, \"I'll do it for you.\"\n\nAll the lawyers nodded. It was plain they'd better find a suitable time and date without his intervention.\n\n\"Are there any other matters we need to address?\" he asked.\n\n\"Yes, your Honor, there are. May we approach?\" P. Jonah Trenton, Attorney at Law, and Miles Underwood's representative before the court, bounced up from his seat to make his request before the judge could end the proceedings. Assuming Judge Farmer's permission, he strolled to the bench with notepad in hand.\n\nMiles stood and massaged the knotted muscles along his lower spine with both hands. He watched the men and women of the jury exiting the room. Few met his questioning eyes as they filed out. He shook his head in confusion. Turning away to avoid their disdain, he found himself face to face with Chief Bailiff Morales. The man's eyes, nearly hidden in folds of sweating flab, gleamed with sudden inspiration.\n\nMorales had decided weeks earlier he didn't like Underwood. His girlfriend thought the man was handsome, dignified, and ... interesting, she said. The bailiff intended to see the defendant, interesting or not, didn't get away with anything. He'd just decided to interpret the instant dislike in Underwood's expression as an affront to his authority.\n\n\"Turn 'round,\" Morales said viciously, \"and put yer hands behind ya.\"\n\n\"What? Why? What did I do wrong?\" Though he protested, Miles could see the handcuffs in Morales's hands. The blood drained from his face. He swung his body around slowly, mechanically. He bumped the table in front of him, his bulk knocking it an inch or two deeper into the well. Eyes blurring, his universe shrank until it included only himself and the bailiff.\n\nHe'd mortgaged his home for bail money when it was granted, but somehow the mistrial changed that? He was going to jail anyway? He felt the chill in the steel restraints as they ratcheted closed about his wrists. Muscles in his chest and shoulders tensed involuntarily.\n\nHelpless and off balance, Miles stumbled when Morales pushed him down into his seat at the defense table. Miles' mind whirled. His body sagged; his neck bent forward until his chin was firmly tucked into his chest.\n\nThe sudden blow to his shoulder startled him badly. He recoiled, twisting away from the unexpected contact. His head jerked up and around to face the unknown attacker.\n\nCompleting his discussion of several housekeeping matters with the judge, Jonah Trenton had returned to the defense table to find his client apparently dozing in his chair. Mildly miffed, he reached down to shake him awake. He wasn't prepared for the violence of Underwood's reaction and backpedaled two quick steps, holding the yellow legal pad up as a shield between himself and his client.\n\nMiles collapsed back onto the chair and focused on the lawyer's face. Not sure he could speak, Miles scooted to the edge of his seat and swiveled his hips around to show Trenton the cuffs on his wrists. Humiliation and despair dampened the corner of his eyes.\n\nAnnoyed, the defense counsel darted an angry glance at the bailiff and started to demand the reason for the cuffs. As the intent formed, Jonah changed his mind and pivoted to face the judge who was still involved in a last off-the-record conversation with the prosecutor.\n\n\"Your Honor,\" he called, reproof clear in his voice, \"we assume bail is continued for the defendant pending the outcome of the new trial?\" A new idea came to him. \"Better still, your Honor,\" he remarked, \"Mr. Underwood has demonstrated throughout this trial he is eager to face his accusers. He should be released on his own recognizance.\" The judge raised his chin to stare down a slightly crooked nose at the attorney and then shook his head.\n\n\"No, Mr. Trenton, I think not. Bail is continued for the defendant in the amount of three hundred thousand dollars.\" Judge Farmer stood. Looking around one last time, he gaveled the session to a close. The black robes of his office swirled about him as he spun to his right and walked quickly through the door to his chambers. The court clerk belatedly tried to call the courtroom to its feet, but the door had closed behind the judge before many could stand.\n\nMiles turned his back on Bailiff Morales and pushed his wrists away from his body in unspoken demand. After a long moment, Morales pulled out his keys and shuffled forward to unlock the restraints. Deliberately fumbling the first attempt, he drew out the process as long as possible.\n\nAs he kneaded the indentations on his left wrist, Miles felt some of the anger Morales had hoped he would actually show earlier. Morales countered with a smirk while he put his keys away. Negotiating his way around the defense table, he waddled toward another bailiff standing near the exit. Following the man's progress with unhappy eyes, Miles rubbed at the marks on his right wrist.\n\n\"Miles!\" The sharp tone of Trenton's voice got Miles' attention.\n\n\"Let's go find a quiet corner and talk for a minute,\" commanded Trenton. He grabbed Miles' upper right arm, guiding him out of the well and through the public seating to the doorway to the fourth floor hallway.\n\nIt was anything but quiet there. A flood of reporters and cameramen surged toward Miles and his attorney as they left the court. Bright television lights blazed and microphones stretched closer to catch the slightest sound from the accused.\n\n\"Mr. Underwood, what do you think about today's developments?\"\n\n\"Mr. Trenton, how would you characterize....\"\n\n\"Miles, what are you going to do....\"\n\n\"No comment!\" Trenton yelled repeatedly. \"No comment!\" He tugged on Miles' sleeve, pulling him down the hall to the right.\n\nHalf blinded by the lights, utterly bewildered, and cowed by the shouts coming from all angles, Miles let his attorney lead him through the crush without protest. The pack followed, demanding answers to unintelligible questions shouted with increasing volume and vehemence.\n\nA few steps before Miles and Trenton reached a set of large, windowless double doors blocking their path, the left door opened abruptly and two Sheriff's deputies shouldered their way inside. They halted, as surprised by the crowd in the corridor as the crowd was by them; both dropped a hand to a holstered pistol. The representatives of the media shrank back and quieted.\n\n\"Alright,\" announced the leading deputy, lifting his hand from his weapon and waving it in the general direction of the mob in the hallway.\n\n\"Let's back up there. Make way.\" He watched for a few seconds as the reporters began to stumble aside. Satisfied the mob of news personalities and camera operators were beginning to move, he made a half-turn and gestured through the open doorway to a double line of prisoners.\n\nClad in bright orange jumpsuits, the first one on the right pushed open the other door and they began to troop inside. The detainees, arriving for their first day in the legal system, were handcuffed and secured with leg restraints that were, in turn, fastened to a long chain. They began moving through the double doors as the suddenly passive herd of reporters parted to give them room.\n\n\"Make a hole ... coming through,\" the deputy chanted as he advanced. He led the line of prisoners toward the holding cell down the hall. \"That's it. We need a little room, folks. Let us through ... thank you, ladies and gents,\" he called out, chivying the crowd into giving the inmates enough space to pass.\n\nWatching the line of accused men and women, Miles' eyes fastened on the huge black man bringing up the rear. Several inches taller than Miles' own six feet, the man's upper body was so overdeveloped the zipper had been left half undone for extra room across the chest but the seams still threatened to give way. The wholly inadequate sleeves had been cut off at the shoulder. Garish tattoos on the side of his head made the man's face a terrifying spectacle even without his ferocious glare.\n\nThe heavily muscled prisoner appraised Miles in return, his face expressionless and uncaring. His eyes took in the attorney at Miles' side. With his expensive suit and barely manageable armful of briefcase, cell phone, and palm pilot, it was clear what service Trenton provided. Cynical amusement flickered in the convict's eyes as he swaggered by.\n\n\"Fresh meat!\" he chortled mockingly. \"See ya soon ... Dawg.\" His rasping voice drifted back to Miles as the chained prisoner swaggered across the lobby and disappeared beyond the crowd. Miles shuddered, his eyes locked on the man's back. His knees threatened to give way.\n\n\"Come on, Miles,\" the attorney whispered in Miles' ear. He was pulling on Miles' arm and had been since he'd seen the approaching end of the line of prisoners. He hadn't been able to get his client to budge or even acknowledge the tugs until now.  \n\n\"Let's get out of here while we've got the chance.\" Miles let Trenton lead him through the set of double doors. They slammed shut with a boom, locking automatically behind the two men. The reporters were left to themselves in the vacant hallway, frustrated at the loss of their prey.\n\nTrenton made a sharp turn into a stairwell. Using one hand for balance, he trotted quickly down the steep stairs from the fourth floor, turning rapidly at each landing and stepping off with a confidence built from long familiarity with the courthouse and its avenues of escape. Without slowing, the lawyer pulled a pair of sunglasses from an inside pocket and hooked them over his ears.\n\nMiles followed as quickly as he could. His feet were dead and unresponsive; he stumbled often and twice nearly fell headlong down the steps. He caught himself only at the last second by grabbing at the handrail. Trenton looked back at his client, irritated at the disturbance Underwood was making.\n\nOn the ground floor, Trenton pushed through the stairwell door into the foyer and nodded to the two constables providing building security at the exit. The bright sun streaming through the glass doors finally roused Miles from his stupor. He blinked and sneezed explosively into a handkerchief snatched from a pants pocket.\n\nThe men made their way without speaking through the parking lot behind the building and came to a stop next to Trenton's black Lexus. Unlocking it with the remote built into his key, the lawyer opened the rear driver's side door and tossed his briefcase and Palm Pilot into the back seat. Closing the door, he glanced at Miles before beginning to dial a number on his cell phone. Pausing before he entered the last digit, he looked up to meet Miles' eyes for the first time in a long while.\n\n\"Miles, I don't know why he's being so damned hard-nosed on this, but Brady says he wants to set a new trial date for the first week of April ... maybe earlier,\" he grumbled. \"I have to check with the office to see if there's anything else I'm doing then, but it I expect we'll be back about then for another go at this.\n\n\"Hell, the clerk says there were four jurors voting for acquittal,\" he continued after a moment. He'd thought Miles would want to comment at that point and was mildly put off by Miles' silence. He pointed the phone at Miles to give weight to the points he was about to make.\n\n\"I'll be damned if I can see where Brady expects to do any better the second time around. What did you ever do to him, Miles? He's bound and determined you're going to do hard time in Huntsville.\" Miles didn't answer at first. He was trying to assimilate what Trenton had said. An uncomfortable silence built between them. Looking down, the attorney frowned and decided to clear the entry on the cell phone's keypad. He started over.\n\n\"Four?\" Miles finally rasped. He pushed the question through a parched throat made worse by sudden emotion.\n\n\"Four? What happened to the others? You mean eight of those people think I really raped that ... that girl? What the...? Weren't they listening when those people from the party told them it wasn't me she was talking about?\"\n\nMoving slowly, Miles' body straightened until he was staring down into Trenton's eyes. The muscles in his shoulders flexed and his weight came up on his toes. At first scratchy and faltering, his voice strengthened until he was roaring his questions into Trenton's face. Two city cops making their way into the Justice Center changed their path through the parking lot and drew closer to the commotion.\n\n\"Whoa, now.\" Trenton retreated to set his back against the side windows of the Lexus. He waved reassuringly at the two officers. Taken aback by the intensity in Underwood's voice, the attorney stalled while he thought of something to say. He adjusted the custom-made Gucci sunglasses, a gift from his wife on his last birthday, just to have something for his hands to do. The forgotten cell phone clanked against the left lens. Glad for the distraction, he took off the glasses to look for a scratch. Miles backed away a step and rubbed rigid neck muscles with his right hand.",
        "The policemen threaded their way through the cars, their badges reflecting the sunlight as they sauntered closer. They watched Miles carefully as they passed by on the other side of the Lexus. Satisfied there was no real threat, their hands fell from the holstered nine-millimeter semi-automatics on their polished equipment belts. They dismissed the two civilians from their minds. Whatever the yelling had been about, it didn't warrant their continued attention.\n\nThe younger cop began to tell the other of stopping a car full of high school cheerleaders last night. Their coarse laughter echoed through the parking lot, only to be cut off as they reached the doors and went inside. Satisfied his glasses had suffered no harm, Trenton adjusted them carefully over his eyes.\n\n\"Man, don't think of it that way,\" the attorney remarked. \"Hell, it only takes one juror who thinks you didn't do it--just one who has the tiniest bit of doubt--to keep you a free man. We've got four of them in our pocket.\" Trenton had been well pleased with the outcome of the trial so far and he allowed his pique show.\n\n\"Screw that!\" retorted Miles. \"Damn it, you don't seem to understand something, Mr. P. Jonah Trenton.\" Miles pressed close again, speaking quietly but forcibly. His right index finger stabbed into the lawyer's chest for emphasis.\n\n\"I ... didn't ... do it!\" He scowled into the attorney's eyes for a moment longer, hidden though they were behind the dark glasses. Dropping his hand to his side, a fist formed before he could relax it. He paused, too angry to say more. He shrugged; there was nothing to say anyway.\n\nHe wheeled and stalked toward the curb, looking around to orient himself. He had to find the five-year-old Taurus he'd put in a parking garage early this morning. He thought it was in the building across the street and a block to the west.\n\nBehind him, Trenton pressed the button that would dial the number he'd keyed into the instrument and put the phone to his ear. He watched his client walk away. The troubled expression on the attorney's face cleared as the connection was made and another discussion begun. He turned to look at his reflection in the car window and made a tiny adjustment in the way his tie hung so that it was precisely centered in the v-shaped opening of his suit coat's lapels.\n\nThe flash of anger cooled before Miles reached the street corner. Hunched shoulders became level and tight muscles loosened. Removing his jacket and tie, he folded them carefully over his left arm as he walked. Slumping into a relaxed slouch, he weaved his way through a mixed group of tourists and office workers taking an early lunch. At the curb, he fixed his eyes on the pedestrian symbol on the post across the street to discourage conversation. He waited for the signal to change.\n\n<p align=\"center\">CHAPTER TWO</p>\n\n\"Good evening. Today District Attorney Carl Brady announced a new trial date for former Army First Sergeant Miles Underwood. The new trial will begin on March 15. Underwood is accused of the rape and death of seventeen-year old Virginia Rodriguez last summer.\n\n\"Mr. Brady reaffirmed his intention to prosecute the case vigorously and request the maximum sentence possible for the former Army Non-Commissioned Officer. Underwood could receive a sentence of twenty years to life even if the jury finds Ms. Rodriguez's death was unintentional. Earlier this month, Judge Roy farmer declared a mistrial when a previous jury was deadlocked. Mr. Brady expressed confidence in Underwood's eventual conviction, stating he felt a verdict could be obtained easily 'if we can get the right jury' in the new trial.\"\n\nKSAA Channel Nine\n\nSan Antonio Texas\n\n\"Evening News at Six\"\n\nFebruary 15\n\n<p align=\"center\">\u00a7</p>\n\nThe accused man in the lead story had already heard about the new trial date. That very morning, P. Jonah Trenton, Esquire and Attorney at Law, had granted Miles a few minutes to discuss the upcoming trial in his plush office. It had been an uncomfortable interview. Miles knew he should be grateful that Mr. Trenton was representing him pro bono, but sometimes Miles felt like a peasant, come with ragged cap in hand to speak to a peer of the realm. This morning's meeting hadn't been a very good one for Miles. It left him with a bad taste in his mouth.\n\nThe fact was, Trenton could not have cared less about Miles' guilt or innocence. Trenton had let drop a few weeks ago the fact that Brady had infuriated him many years ago and Trenton still wasn't over it. Miles couldn't fault Trenton for failing to provide an energetic defense in Miles' behalf, but Miles knew he was only a tool for Jonah to use in repaying the District Attorney for the grievance existing between the two. It left him flat and pessimistic.\n\n<p align=\"center\">\u00a7</p>\n\nThe approaching storm was already visible through the wide glass patio doors. The black, low hanging clouds made for an early sunset; it was already dark in their shadow. Heavy lightning was almost continuous behind the roiling clouds, promising a dangerous electrical storm along with the forecasted heavy rain. He'd already made sure all the windows in the house were closed. The patio door was the only outlet still open to the cool evening breezes blowing down from the hill country.\n\nHe decided eating an early dinner would be a smart thing to do. In fact, a quick meal and preparing for a power outage would be two smart things. There was no telling if the electricity would be knocked out tonight, but it had happened before, and in lesser storms. Whatever ... it didn't hurt to be ready. He padded through the living room, barefoot in the deep pile carpeting. He straightened the painting over the couch as he passed.\n\nIn the kitchen, he pulled a couple of flashlights from the cabinet drawer where everything was stored that didn't have a special place of its own. He put one on the counter and the other on the top of the entertainment center. He lowered the volume on the TV to a whisper and adjusted the screen colors. Finished, he stood unmoving for a long while, watching a television screen he didn't see.\n\nThe popping noises of the two hamburger patties in the frying pan finally intruded enough for him to notice and he raced back to the kitchen, just managing to flip them over before the bottoms turned too crusty to eat.\n\nHe made himself keep busy as a means to avoid gloomy thoughts. A potato went into the microwave to bake. Done, it was replaced by a small bowl of mixed vegetables.\n\nExamining the overdone meat, he poured a spicy barbeque sauce on the burgers to disguise the taste, or perhaps the purpose was to add some taste. He wasn't quite sure. He shrugged to himself; it didn't really matter.\n\nGrabbing a diet Coke from the fridge and a loaf of bread from the cupboard, he slid them across the breakfast bar where they would be within convenient reach. Carrying the plate loaded with meat and vegetables into the dining room, he sat where he could watch the TV in the living room. His simple bachelor's meal was ready. Sighing, he began to shovel the almost burnt offerings into his mouth. He chewed and swallowed without enthusiasm. There was no problem with the quality of the food, or even the charcoaling of one side of the meat. It was just that nothing tasted good anymore.\n\nWith the dishes stowed safely in the dishwasher, he moved into the living room and got comfortable in the recliner to wait for the storm's arrival. The television was tuned to a station showing a documentary about a project to unearth and study the ancient mammoths. He turned up the sound to listen.\n\nApparently, DNA had been retrieved from another set of frozen remains in Siberia and scientists were planning to use it to reintroduce the particular species to the face of the earth. If there was an explanation of the expected benefit to mankind, Miles had already missed it.\n\nThe program didn't hold his attention and faded quickly into the background. The first breath of cold, damp air from the storm blew in through the patio door and he got up to close it before the rain could soak the carpet. He pulled the sliding glass door partially shut. He stopped and leaned against the doorframe to watch the first drops fall.\n\n<p align=\"center\">\u00a7</p>\n\nHe almost hadn't gone to the party. He wasn't a party person and was uncomfortable at scheduled, organized parties. Unplanned, informal get-togethers were more his style. On the other hand, he'd been spending entirely too much time by himself. He'd told himself that wasn't healthy. He'd been the next thing to a hermit since he retired from the Army. Maybe the party would be fun. Anyway, his best friends left over from his military career were the hosts, so what the heck? He decided to go--to see if anything was happening. If there wasn't, he could make his excuses and leave.\n\nWhen he got there, apprehensive but hopeful, he'd found attendance by the female portion of the race disappointingly slight. Many of the invited guests had canceled. That included, Lydia said, a woman she'd wanted him to meet. Relieved and disappointed at the same time, Miles accepted a beer from Lydia. Then she bustled off to greet a couple Miles didn't know.\n\nMiles had known Lydia's husband, Phil, for more years than he could remember. By chance, their path had crossed at several duty stations in their military careers and they'd formed a deep friendship. A senior specialist in the personnel office on Fort Sam Houston, Phil was one of the most popular men on the post. His and Lydia's home was usually full of people who just dropped by for a visit. With both children already in college, Lydia mothered untold numbers of young soldiers who needed it and some who didn't.\n\nRespecting only a barely decent interval after Miles' divorce four years before, Lydia had begun a campaign to set him up with women of her acquaintance that she evaluated as suitable for Miles. Lydia couldn't bring herself to accept the fact that he was quite happily divorced and very satisfied with his unattached status. However badly Lydia wanted to improve his condition, Miles found the concept of a deep relationship with another woman more than a little uncomfortable. Based on his experience, the predictable breakups were just too damn painful.\n\nAt thirty-nine years old, with twenty-two years of Army life behind him, he anticipated a lot of fun and relaxation in the coming years--two things that had been sadly lacking in his military career. After an extended middle age, and perhaps a mid-life crisis or two, he intended to find a rocking chair on a white painted porch somewhere and gently fade away as General MacArthur had promised Congress old soldiers do.\n\nMiles didn't see a new wife and family fitting into that picture. On the other hand, that didn't mean he couldn't enjoy the temporary company of an attractive woman whenever the opportunity presented itself.\n\nHe'd found a wall near the front door where he could be out of the way. He leaned comfortably against it to watch the flow of humanity across the ersatz stage in front of him. It was as good a floorshow as he was going to find tonight.\n\nAfter several hours and a couple more beers, it was clear the party not going to get be his kind of social occasion. He made the decision to leave and stood to take the final empty bottle to the kitchen and wish Lydia and Phil a good evening. On the way, he was distracted enough to stop and watch a young woman behaving oddly.\n\nThe pretty girl had come to the party with an older woman but their relationship wasn't clear. They'd both made themselves at home to Lydia's ill concealed annoyance. He hadn't known anything about why Lydia didn't like them.\n\nThe girl had seemed impossibly young to Miles. As he neared the big \"Four-Oh,\" all women younger than his own group looked underage to him. He'd quit trying to guess ages. This one, though, appeared to be well under the legal drinking age, though she'd been tossing back strong drinks with little visible effect. The baby-faced youngster had tried to take off her crop top blouse twice to 'prove they were real' to an admiring crowd of unattached males. Lydia scolded her on both occasions. The second time, Lydia had to be talked out of asking the girl to leave.\n\nThe young woman was quieter now and sitting alone on the couch. More sober than she had seemed earlier, there was a curious look of concentration on her face. For the past few minutes, she'd held a hand pressed tightly against her lower belly. What had attracted his attention was a distinct wince that distorted her features every once in a while.\n\nShe'd stood up and begun to make her way by Miles to the hall bathroom. As she passed, she clapped a hand to her belly and staggered, almost losing her balance. Miles had reached out to steady her as she slumped against him.\n\n\"You all right?\" Miles had asked. The young girl had leaned hard against him for support and looked up at him, her face now lined and haggard from pain.\n\n\"He hurt me,\" she'd complained. \"He hurt me.\"\n\n\"What? Who hurt you?\" Confused, Miles had glanced at the other people standing nearby. \"Y'all know what she's talking about?\"\n\nThe half-dozen or so closest to him had shaken their heads, murmuring denials as they watched the byplay. Lydia had appeared suddenly, critically inspecting the girl.\n\n\"Lydia, I think she needs to lie down for a minute,\" Miles had said. He'd been uneasy with a woman he didn't know clinging so tightly and wanted to get her back out to arm's length as quickly as he could.\n\n\"Bring her in here.\" Lydia hadn't been happy with Miles' suggestion, but she didn't argue as she led him to the downstairs bedroom. The unfortunate young woman had been barely able to stumble along beside Miles. She'd moaned with each step, her legs accepting less and less of her weight until Miles was completely supporting her.\n\nMiles had eased her down to a sitting position on the side of the bed and bent to remove her shoes. Supporting her shoulders with his right arm, he'd helped her lie flat. As her legs straightened, the girl had gasped with pain and Miles pulled her knees up. It seemed to help a little. He'd propped her knees together so the girl could hold the position without straining.\n\nHe'd accepted a cold, wet facecloth Lydia brought from the bathroom and put it over the young woman's eyes. She'd continued to grimace with pain in her lower abdomen, though. Miles had studied her, not sure she was getting any better. He'd caught sight of his hostess looking at the girl also.\n\n\"Lydia, someone came with her, right?\" he'd asked. \"Could you ask her to call this young lady's doctor? Then you go ahead and take care of your party. I'll watch her for a little bit,\" he'd assured his long-time friend.\n\nLydia had nodded shortly and left the room, closing the door behind her. She'd shooed everyone outside to the patio where a buffet waited.\n\nMiles had heard the party continuing as he sat with the girl. He'd done his best to help her relax, frequently refreshing the facecloth with more cold water from the faucet. Gradually she'd quieted until she was resting easier, but she hadn't been very alert and that had bothered Miles, though he hadn't known what to do about it. Miles had begun to feel uncomfortable about his assumed responsibility for the girl.\n\nHe'd decided he'd go ask about the girl's doctor and get ready to leave the party. Before he did that, he'd gotten up to replenish the cold compress, soaking the washcloth under the water faucet and wringing it out. When he'd come back in the bedroom, the woman was crying and writhing in pain.\n\n\"OH GOD, I'M DYING,\" she'd screamed. She'd squirmed around on the bedcovers for a bit longer and then was still. Without warning, every muscle in her body had convulsed. Arching her back, she'd strained upward until only her feet and shoulders were still on the bed. Hands clasped to her lower belly, she'd screamed shrilly and collapsed back to the mattress. The door had burst open and several curious faces peered in.\n\n\"He hurt me ... he hurt me inside!\" the girl had babbled, repeating her earlier accusation. Then she'd stopped talking in favor of high-pitched wailing--an inhuman shriek of agony. Shock had spread across the faces of the partygoers. Miles had bent over the girl, trying to hold her as she thrashed around the bed, but the girl had incredible strength. He'd been afraid if he didn't get control of her arms and legs she might hurt herself badly.\n\n\"Help me!\" the girl had begged. Flustered, Miles had tried but he hadn't known what to do. She'd thrown her legs off the bed and made a move to get off the bed but Miles pressed her back down. His worried eyes had found Lydia's as she pushed into the room past the crowd of onlookers.\n\n\"Lydia, I think you better call 911 and get an ambulance,\" he'd said, his voice breaking and hesitant.\n\nLydia had turned and disappeared, wasting no time on comment.\n\nMiles felt a sudden wetness as his hand slipped off the girl's left leg in a particularly violent heave. His head had snapped down to see his hand in a pool of scarlet arterial blood gushing from between the girl's legs.\n\n\"LYDIA!\" he'd shouted. \"She's bleeding ... she's bleeding bad! Tell them to get here as fast as they can.\" He'd been sure he heard an indistinct reply pressing the girl's legs together in an attempt to slow the flow of blood. The classes in first aid the Army offered hadn't prepared him for something like this. He'd been helpless.\n\nHe was trying to comfort the girl, holding her down to keep her from injuring herself more when two paramedics had burst in. Standing away from the bed, he'd watched them work a moment before he went to wash up. The sleeves on his jacket had been covered with the girl's blood. When he'd returned to the bedroom, they were rushing her out on a wheeled stretcher. He'd gone home, miserable and alone, wishing there'd been something he could have done for the young woman.\n\nJust before Thanksgiving, after numerous demands by the local media and pressure from various citizen action groups, the police had been waiting for Miles when he got home from a late afternoon visit to the supermarket. In the glare of TV cameras from stations tipped off to the impending arrest, he'd been hauled roughly from his five-year old Taurus. Cuffs had been slapped on his wrists and he was hustled into the back of a patrol car. The groceries had been abandoned in the back seat of his car. The fresh vegetables and meat spoiled before he could arrange bail.\n\nThey'd grilled him for nineteen hours and a bit more in the first interrogation--an interview, they'd called it. He'd been told repeatedly they had all the evidence they needed to convict him. Witnesses, the detectives had said, had given them signed statements attesting to the fact that Miles was beating the girl when the guests broke into the room after hearing screams. They had DNA evidence, they said. He knew what that was, didn't he? It proved Miles raped the poor young girl. They already knew everything, they said.\n\nThey'd asked why Miles didn't make things easy on himself by admitting it. They knew he wanted to, they said. Get it off your chest; prove to everyone you're not a cold-hearted bastard. Just sign the confession and everything would be okay. They'd go to bat for him with the prosecutor if he cooperated. They knew he didn't mean to hurt her. Heck, it was an accident, right? He could go home, they'd said--get some sleep and then come back to take care of the problem if he would only sign. Tell them how it happened and they could make all this go away.\n\nNear the end of the questioning, dizzy with fatigue and lack of sleep, disoriented by bright lights and rotating teams of accusers, he'd almost succumbed. He'd asked to see the laboratory report but he was put off. No, he couldn't see the witness statements either. That would all come later. Sign, or things would get worse, they'd said.",
        "He'd hung on until he could resist only by retreating inside himself. He'd closed his eyes. He wanted a lawyer, he'd mumbled slowly. He repeated it several times until they'd finally been forced to take notice.\n\nThe detectives said lawyering up proved he was guilty. They'd ridiculed him, saying child killers didn't deserve attorneys. They'd shrieked at him, wanting to know how many other kids he'd killed. A pair of big uniformed cops hauled him erect every time he slumped in the chair. They screamed in his ears but he refused to say another word to the officers surrounding him. Eventually it became clear to them he never would.\n\nTwice on the way to his cell, he was shoved against a wall and fists hammered his kidneys when he couldn't respond to commands fast enough. He'd been uncooperative and combative, they'd said. They had only done what was necessary.\n\n<p align=\"center\">\u00a7</p>\n\nThe ear-splitting crash arrived simultaneously with a blinding flash, leaving behind rattling windows and the acrid odor of ozone. Startled, he twisted away from the patio door and stumbled back into the living room. Turning back to the glass door, he rubbed his forearms to smooth the hair standing on end. Dark clouds had hastened the coming of night; now it and the storm were here.\n\nThe picture on the television dissolved into streaks and blurry shapes for a moment and then cleared as the static charge in the air weakened and died. He yanked the patio door shut and closed the Venetian blinds tight across the wide expanse of glass.\n\nIntellectually, he knew it was no protection at all against another close lightning strike but he felt safer. He turned on the table lamp next to the recliner and stumbled across the room to switch on a floor lamp near the entertainment center. Still visible through the blinds, the glaring flashes of lightning were muted a little by the interior lights. He took up the remote and dialed up the sound volume to compensate for the noise of the violent storm.\n\nThe show about the hairy mammoths was over and a documentary about maximum-security prisons had replaced it. The host was busy explaining the offenses and sentences for each of the inmates he would interview. Fascinated, Miles sank into the cushions on the couch as a montage of murderers, rapists, and kidnappers paraded across the screen in rapid succession. Each was more muscular than the last and even more covered with gaudy tattoos.\n\nThey gazed out of the screen with flat, dead eyes as they explained how unfair it was to be shut way behind bars with no way to better themselves. More than one stumbled over the word \"rehabilitation,\" but they used it anyway to explain why they shouldn't be locked away from their loving families and friends any longer. They were ready to reenter society they said. Cured, they were. They were certain of it.\n\nAfter a commercial, the narrator discussed the violence the guards dealt with every day. A lieutenant in the prison guards showed the host a collection of knives made from combs, toothbrushes, stray bits of broken glass, and other unlikely materials. He spoke of how many inmates were killed, wounded, and mutilated every year by other prisoners.\n\nMiles imagined himself standing beside each convict, or perhaps submissively behind the brute, a raped and whipped shell of a man. The terror he'd been feeling for months mounted higher as all the horrors he'd ever imagined about his fate were displayed in crisp, clear high definition on the TV screen.\n\nEight jurors had voted to send him to prison--he could not get past that--eight jurors! It was too much.\n\nA flood of undigested hamburger and potatoes surged up from his stomach. He ran to the half-bath by the front door trying to hold back the sour mess. Falling to his knees in front of the toilet, he threw up the dinner he'd so recently choked down. Fragments of meat and vegetables spewed forcefully into the bowl until there was nothing left.\n\nThe muscles in his stomach kept trying to bring something up, but only bile was flowing now. The acid bit at the lining of his throat. Eventually, even that bitter fluid was exhausted though painful contractions continued for long minutes.\n\nGradually the dry retching subsided. He stood and wiped his lips with the back of his hand while he stumbled to the sink. He rinsed out his mouth and drank a glass of water to sooth his raw throat. Stripping off his shirt, now badly stained with unpleasant bits of food and stomach acid, he held it under the faucet.\n\nCatching sight of an ashen face in the mirror, he paused to study the reflected image. The eyes were as dead as the prison inmates he'd seen earlier; his face was pale, expressionless. It was undeniably him, but there were harsh lines and creases that hadn't been there before. He could find nothing of the satisfied Army veteran who had set out on a carefully planned retirement a few months ago.\n\nWithout thinking, his hand still wrapped in the foul shirt, he cocked his fist and smashed the face in the mirror into a thousand shards.\n\nIt was deliberate destruction that served no purpose. It was a mess that he'd have to clean up himself. It was sudden; he hadn't thought about it, fretted over it, wondered what was the best thing in the world he could do.\n\nThe sudden physical action felt good to him; in fact, it felt great. He wanted more.\n\nTwisting to the side, he set his feet and threw hard punches at the wall beside the mirror. He pounded fist-sized holes into the sheetrock. It was a long while before he could stop.\n\nBut as good as it was to finally lash out at something, he had to stop. He was going to break some bones in his hands if he hit a two by four stud in the wall. Panting, he looked around, holding tight to the ember of anger that remained after his exertions. It was good to feel some emotion other than despair.\n\nHe looked his hands to see if he'd cut himself with the mirror glass. His fists still clinched tightly, he held his forearms up. Rotating his wrists, he flexed the muscles in his forearms, checking to see if there was any pain or blood. The small cut on one knuckle needed only a quick rinse and a small band aid.\n\nHe stalked to the kitchen and glared out the window at the breaking storm. He couldn't have said how long he watched but at some point he found himself reveling in the violence of the storm. Powerful and impersonal, it had no agenda other than the cold reality of wind-whipped rain and lightning.\n\nIt was fresh and clean--in stark contrast to the months of anguish since the young girl's death. Its vastness reminded him of how small he was in the grand scheme, but there was comfort there too. At least that scheme had a place for him. He'd been lost for so long.\n\nHe opened the door to step outside, only to be greeted by a fresh thunderbolt that struck no more than a block away. Point taken. The might of the storm was not to be trifled with.\n\nMiles prudently retreated to the cover of the doorway. Even there, the wind drove spikes of rain into his face as he watched electrical energy streak from cloud to cloud in intricate, sometimes delicate patterns. The booming thunder made the windows rattle in their frames. He closed the kitchen door to mute the assault.\n\nHe poured a glass of milk, assembled a couple of sandwiches, and carried the replacement meal to the living room. Changing his mind about shutting out the storm, he opened the mini-blinds covering the patio door. He sat in the recliner and watched the lightning dance while he chewed on dry bread and leftover roast beef.\n\nThrough the protecting glass door, he could see his carefully mowed and cultured lawn with its well-trimmed shrubbery and attendant rose bushes. The carefully arranged scene was the result of many hours of labor spent on his hands and knees last spring. The backyard was an alien landscape tonight lit by irregular bright flashes, ripped apart by hurricane-strength winds, and drowned by torrential rain.\n\nGreen and familiar in the daytime, it was unknown and forbidding tonight. Full for the moment, he dropped a half-eaten sandwich back on the plate and drank the last of the milk before it got too warm. Pulling up on the handle to thrust out the footrest on the recliner, he settled into the overstuffed cushions.\n\nHe probed for the anger he'd felt earlier. It was there, tucked away in a corner of his mind, waiting for a summons to reassert itself. Reassured, he relaxed completely and closed his eyes for better concentration.\n\nHe thought of the documentary he'd watched about prisons. There wouldn't be any backyards or ice-cold milk for him there ... no compassion, no understanding either, and no second chances. The thought came to him that he would not live very long in that environment either. If the show could be believed, inmates challenged each other daily for small possessions, power, or sex. Street gangs banded together for safety and greater power, according to the commentary.\n\nMiles would be the odd man out in any scenario he could think of. The U.S. Army didn't have any associate organizations in the prison system. A smoldering anger burned hotter, beginning to bore through veils of pain and bewilderment that had clouded his mind for too long.\n\nAbruptly, the television screen flickered and came to life. He hadn't noticed the cable network had gone down. The system's return was an intrusion and he scowled in irritation at the screen. The ten o'clock news was just starting.\n\nHe watched a repeat of the announcement of his new trial date. The scenes of the prison were still vividly clear in his mind. The new trial could easily return a guilty verdict. There were only four more jurors to convince and the truth seemed not to be terribly important. The prosecutor hadn't even tried to hide his intent. \"If we get the right jury,\" was what Brady had said ... not a fair jury.\n\nThe fury Miles thought he had contained in a corner of his mind blazed hotter with the realization of the prosecutor's goal. There was no conceivable way he could change the district attorney's mind on the matter, of course. Brady had already seen all the evidence. If he was not swayed by that, what more could Miles do?\n\nMiles suddenly could see his destiny. He saw it so clearly, it might already have happened. He would be convicted and sent to a prison like the one in the documentary. It didn't matter he'd done nothing wrong.\n\nThe prosecutor wanted him in prison, the judge didn't care one way or the other, and his attorney was barely interested. Eventually, in the upcoming trial--or the one after that--all twelve members of a jury would be convinced he was, indeed, guilty.\n\nHe shook his head as he saw himself bleeding and dying on a shower room floor, killed by one of the tattooed, muscled monsters he'd seen on TV. Miles clicked off the television, plunging the room into a silence broken at intervals by the slamming thuds of heavy thunder. With only himself for company, his mind raced.\n\nFrustrated, he gave vent to a wordless roar. The earlier resentment was only a taste of what he was feeling now. He held up his hands. They trembled uncontrollably. Fury threatened to overwhelm him. It had been lurking in the darker recesses of his mind and now it spread fiery tentacles to pull him into the comforting embrace of insanity. His hands gripped the ends of the chair arms, clutching them tightly as an anchor against the tempest. His eyes flicked from one corner in the room to another without pattern or purpose to the search.\n\nSomething within him strengthened and demanded immediate release. He pounded the chair with both hands until blood from the cut on his knuckle began to flow. It stained the fabric but he had no energy left over to regret the damage. He screamed ... and then collapsed, slumping back into the seat cushions.\n\nHe lay panting, dizzy and exhausted by the intensity of the emotion that had escaped from inside him. Slowly, he gathered himself and sat up in the Lazyboy. He set his feet firmly on the floor.\n\nHis eyes were alert now. The cleansing anger had sharpened his senses and his wits.\n\nWithout his conscious participation, decisions were reached deep inside him--in that place where civilized logic and reason are checked for validity against animal instinct. He saw ... and understood.\n\nTrapped animals will gnaw through their own legs to get free. He'd read that somewhere. Truly, he was as desperate as those ensnared animals--and he could do no less than they would.\n\nHis body might not be caught in the steel jaws of a hunter's trap--not yet--but it was coming, and he badly wanted out. He ached with the desire to run, and run hard. It was clear he could not trust the courts to see him acquitted of the charges.  \n\nThe system was flawed. It had, in fact, already failed him. Therefore, he would no longer plead for a justice that could be denied, that would be denied.\n\nMiles smiled quietly into the darkness. He was going to retake control of his life, beginning now.\n\nHe began to consider how to make the resolution a fact.\n\nIt isn't terribly difficult to disappear in a free country. It had been done before. Sixties radical Howard Mechanic assumed a new name and lifestyle. He was able to hide in plain view for thirty years before making a critical mistake. In his arrogance, he decided to run for election to a local office and gave a local reporter an interview.\n\nHad he stayed below the radar horizon in a safe, innocuous job, he might still be enjoying a good life in Arizona instead of serving time in a federal prison.\n\nMoving to another city and starting over didn't appeal very much to Miles though. He picked up the sandwich he'd been unable to eat earlier and wolfed it down. An appetite he'd not felt for months resurfaced full strength.\n\nThe thing was ... he didn't want to be among people at all. People could not to be trusted. What he wanted to do was to disappear. He could do it too. He could walk into the high Rockies, for instance, and simply ... vanish!\n\nThe Army had trained him to fight and survive in all types of climate and terrain and he'd learned well. It had been a long time since the training, and a while since he'd practiced the skills he'd learned there, but there were men who had managed to get away into the wild with a lot less.\n\nEric Rudolph, Miles mused, had fled into the Smoky Mountains after bombing several abortion clinics in the nineties. Hordes of FBI agents and other federal officers searched hard for him, but the closest they ever came to finding him was an abandoned pickup at the end of a logging road deep in the foothills.\n\nYears later, Rudolph came down from the hills and was caught hiding behind a garbage dumpster. The small-town cop who'd taken him into custody was as surprised as Rudolph. The authorities hadn't even been actively looking for the fugitive by then.\n\nThere were two lessons there--one, a trained woodsman could evade law enforcement in the wild and, two, you can't relax for any reason. A second sandwich tasted so good Miles went back to the kitchen to make a third. He brewed a pot of coffee.\n\nHe could get away! He would!!\n\nThe urge swept through him, gaining power and depth. He throttled the passion back a little. This couldn't be a snap decision--too much was at stake. Forcing himself to sit quietly at the table, he sipped his coffee. He was an animal escaping a trap but he was a thinking animal.\n\nMost people believe the original unsettled land in the United States has been overrun by civilization. Actually, forty percent of the nation is still wilderness--as wild as it ever was. That was more than enough territory for his purposes. The rough country was dangerous, and survival out there difficult, but he would have a lot more control over his life than he would in prison.\n\nHe shook his head. What the hell? If he died out there, chances were it would be a cleaner and more dignified death than the one he could expect in prison.\n\nThe decision was made. He would make his way deep into the mountains and live on the land.\n\nThe third sandwich was good, but he was full now. Absentmindedly, he carried the plate to the sink and rinsed it in hot water from the faucet. He freshened his cup of coffee and sat back down at the kitchen table.\n\nThere were plans to make now. How to get out of town, how to get to ... Colorado. Yeah, Colorado would be his initial goal. The state was familiar to him. He'd driven out there a number of times for vacations but he'd spoken of the trips only to family members and a very few close friends.\n\nThey might or might not remember but they surely wouldn't have those conversations in the forefront of their minds. By the time some detective stumbled on the right question to ask, he would be gone, secure in the vastness of Colorado's mountains.\n\nHe got up to pace, coffee cup in hand, and walked around the home he'd be leaving behind. He would have to abandon possessions that had taken a lifetime to accumulate; the house and furniture would be auctioned off to pay the bail bondsman.\n\nAnger flared high again. He'd worked a long time to be able to afford what he had. When he retired from the Army, he'd searched for exactly the right furnishings. He'd put a lot of work into the new home. He suppressed the resentment. He told himself if he escaped into the mountains, he wouldn't have to deal with prosecutors, juries, or prying reporters ever again.\n\n\"A fugitive from the law, huh? A fugitive.\"\n\nHe said it aloud. He wanted to hear the words in his ears; he wanted to taste the words on his tongue. He checked out the concept and measured its fit.\n\nHe laughed. Actually, it wasn't half bad.\n\nIt was a lot better than the alternatives the prison documentary suggested. They would call him 'convict' there, he'd be someone's 'bitch', and eventually ... they'd call him 'dead'.\n\nRunning would be taken as proof of his guilt. That troubled him. If he ran, he'd be giving up any chance he had of clearing his name--whatever that meant. Well ... so what? If he were pronounced not guilty today, this very moment, what would change?\n\nHe already knew he was innocent but the best he could get from a trial was a verdict of not guilty, and 'not guilty' wasn't the same as 'innocent' in people's minds. Even his brother and sister would never look at him quite the same again. They'd carefully herd their children away from Miles ... just to be sure. His neighbors, his erstwhile friends and acquaintances would be even less understanding.\n\nDeliberately, he let a portion of the anger wash back over him. His facial expression hardened to reflect his thoughts.\n\nScrew other people's opinions. He knew he hadn't hurt that young woman, and that was enough. He turned to the issue of getting out of town quickly and silently.\n\nHe had no experience at avoiding law enforcement officers but it occurred to him the first rule was to avoid notice. He'd watched all the \"cop\" reality shows on TV and observed that most criminals didn't act very smart sometimes. Stealing cars and driving them around at high speeds with broken windows and cracked steering columns was like waving a sign begging to be arrested.\n\nIt was an easy resolution to not drive over the speed limit, not drive recklessly, and to not carry any contraband--other than himself, of course. He chuckled at the small joke before he went on.\n\nRule number two, he decided, was to be where the cops weren't. Avoid high concentrations of people, and you sidestepped much of the law enforcement in the country. Traveling quietly and carefully on poorly patrolled rural roads should take care of the problem.\n\nBut ... no ... wait a minute. Perhaps one could go too far in that direction. Maybe the best bet was to not be in too rural a place. If there were fewer people for a lawman to watch, each individual in his sight was given that much more personal attention.",
        "So ... it made no sense to attract notice by being a stranger too far off the beaten path. He would drive on state roads and the occasional federal highway, but not a county road or farm to market road.\n\nOn the other hand, he had to avoid interstate highways too ... too many law enforcement patrols were there and eventually, one would pick him out.\n\nGood! It was a plan.\n\nHe smiled, happy to be reasoning logically again--it'd been so very long since he'd felt comfortable in his own mind.\n\nHe was beginning to look forward to what he was preparing himself to do--it was almost like setting up one of those driving vacations he'd taken out west in the peaceful years. With a little common sense and a lot of care, he could be successful at evading the police as he traveled through their jurisdictions.\n\n\"If it were done, 'twer well if it were done quickly,\" he whispered. He held up a reproving finger while mangling the line from Macbeth. He didn't remember anything else about the quote, and not much more about the play itself, but the logic in the line appealed to him. It seemed like excellent advice.\n\nHe wasn't sure he could conceal his intent for very long. He had to act before he said or did something to give himself away. A chill ran down his spine at the sudden thought that the judge might arbitrarily revoke his bail. He shivered. If he tried, he could find any number of things, most of them bad, that might happen if he didn't act soon enough.\n\nHe walked to his bedroom and looked through the window at the street outside. Television reporters had camped out in front of his house for a while this morning after the announcement of the new trial date, but they had other things on their minds this evening.\n\nPresumably, the heavy rain and inevitable flooding would claim their attention for the remainder of the night and probably for several days to come. It was what had happened in previous storms, and this one was predicted to be one that would last for days.\n\nThe same applied to city officialdom, he decided.\n\nPolice would be working extra shifts with the inevitable emergencies caused by the weather. It was unlikely any manpower could be spared to specifically watch him for the next few days. There was a high possibility he had a window of opportunity, lasting as long as the storm did, to make a nice ... clean ... break. He nodded in agreement with his own analysis.\n\n\"Quickly,\" he counseled himself aloud, \"but not hastily.\" He began to smile more broadly as he paced around the house, peering out at the rain-washed darkness whenever he came to a window.\n\nMaking his way to the garage, he scrambled up a ladder to grab the biggest backpack he owned from attic. He began loading it with everything he would need to survive in the wilderness.\n\nIt was soon overflowing with nearly every gadget made for camping or hiking he'd ever purchased. He hefted the pack, and promptly dropped it to the concrete floor. It weighed at least eighty pounds. A vision of himself staggering under the weight of the mammoth pack up a mountainside came to him and he laughed.\n\nHe sighed ruefully and dragged the pack into the living room to dump it out on the floor. Sitting cross-legged, he began the process of sorting out what he would need to live for a long time in the woods and setting aside things that would be a luxury. He stopped when he realized he was holding a hiker's fuel stove in each hand, unable to choose between them.\n\nThe would-be fugitive grinned through his fatigue. He was too tired to make the necessary choices right now and, for the first time in months, he didn't dread the dreams that might come in the night. He showered and slid in bed between a set of fresh, crisp sheets. He was asleep before he could pull them up to his chin.\n\n<p align=\"center\">\u00a7</p>\n\nThe morning dawned miserably cold, dark, and rainy--and it got steadily worse. Radar graphics on all the television stations showed solid masses of thunderstorms marching down from the northwest toward the city. Storm cells were generating on the leading edge of the stalled weather front and training over the city.\n\nMiles nodded to himself, satisfied. No one would be thinking about him in all this mess.\n\nThis morning he'd had no problem determining what to take with him. He selected a small hiking tent and a goose down sleeping bag. They'd proven themselves in long-distance hikes before. Dropping them in the bottom section of the backpack, he zipped it closed. He set aside an inflatable sleeping pad to fasten at the bottom of the pack later. His sleeping accommodations were complete.\n\nIn the multitude of zippered compartments, he stowed enough plastic cigarette lighters to light campfires for a lifetime. He found places for steel snares to trap small game, a gill net, fishhooks and several spools of monofilament line for fishing, and a small hiker's cooking set. He added a small first aid kit and a big bottle of multiple vitamins.\n\nHe'd made the decision to not take either of the fuel stoves. The fuel would run out too quickly to make the weight penalty worthwhile. He'd cook over the open flames of campfires, just as early mountain men had done some two hundred years earlier.\n\nA small hatchet, three hunting knives and a couple of sharpening stones, a wad of parachute cord, and a couple of heavy-duty thermal blankets completed the list of gear he wanted to take with him.\n\nHe put in two pair of camouflaged BDUs and two pair of canvas cargo shorts; three changes of underwear and six pair of thick hiking socks completed his wardrobe for the trip.\n\nTo the outside of the pack, he lashed a lightweight parka (guaranteed to keep the wearer warm at thirty-five degrees below zero), an old Army surplus entrenching tool, plus a hundred and fifty feet of climbing rope. He slipped a pair of heavy gloves into a zippered pocket and clipped two large canteens to the hip belt. He'd fill them with water later.\n\nHe took one of the hunting knives out of the pack and put it aside. He'd slip his belt through the belt's scabbard later and carry it with him all the time.\n\nThen he decided enough was enough. The remaining space would be stuffed with food. When he got out of bed this morning, he sliced nearly thirty pounds of half-frozen roast beef and steak into thin strips and put the slices in a marinade. One batch was drying in the oven now and would be done in a few hours. When it was all done, he'd put the dried meat--jerky was what early Americans had called it--in zip lock bags and stow them in the backpack. Any empty space would be filled with freeze dried meals and a few cans of high-calorie meat products.\n\nHe would need to hunt for meat to live eventually, but he wanted to carry enough food to get well into the wilderness before he started foraging for food. Hunting for game too early, would attract unwanted attention. When the time came to kill animals larger than the snares could hold, he had exactly what he needed.\n\nA crossbow and a dozen bolts had been gathering dust in his bedroom closet for a long time. The crossbow was an ancient but effective weapon. Even in medieval times, the weapon had ranges of four hundred yards. Twentieth century versions were so effective they'd been used in organized warfare in World War I.\n\nBy contrast, the bows and arrows used by the American Indians had a lethal range of twenty-five yards. Yet, Indians had hunted even the largest game ... and quite successfully too. He would be able to do the same.\n\nMiles had tried hunting with a traditional bow and arrow many years before but had given it up after proving to himself that he would never develop any expertise with the weapon. The crossbow was different. It was easy to use--remarkably similar to firing a rifle.\n\nHe had himself convinced in moments. The dismantled crossbow and bolts joined other gear inside the pack.\n\nThough he'd decided not to carry a rifle into the wilderness, he found himself contemplating the .357 magnum pistol he'd bought while stationed in Alaska a decade earlier. It was a beautiful weapon and he hated to leave it behind. He decided there might be a need for a handgun someday ... to kill a snake maybe.\n\nHe grinned derisively at himself, certain he was talking himself into something he didn't really need. Loading the weapon with six of the big cartridges, he slipped it into a leather holster and fastened the rawhide thong across the hammer to keep the pistol in place. Two full boxes of ammo went into the pack. A hundred rounds plus the six in the cylinder would be plenty. He wasn't going to get into any firefights and ammunition was damned heavy.\n\nHe stood and tentatively worked his arms through the straps. Buckling the hip belt and pulling on the risers, he walked around the house to test the balance and weight. As he paced, he tried to think of a piece of equipment he might need but he couldn't. There was plenty of room in the pack but there was nothing else he could take with him that would improve his chances for survival. He was finished loading the backpack. When the time came, it would go in the bed of the twelve-year old half-ton Ford pickup he'd bought a few weeks before all the trouble began.\n\nThe pickup's body was in so-so shape. Reasonably watertight was about the best you could say about the cab, and the paint job was nothing to cheer about, but the motor was in great condition. In fact, the truck had been in the shop to overhaul the worn-out motor while the cops were actively investigating him and he hadn't picked it up from the garage until long after he'd been bailed out of jail by Jonah Trenton.\n\nIt had remained inside the double garage since and the authorities might not even be aware he had it. Even better, in all the confusion, he'd never gone to the trouble to have the title officially transferred to his name. He took that as a good omen.\n\nThe easy part of his preparations finished, Miles spent the rest of the morning locating small items he wanted his brother and sister to have and packing them in boxes salvaged from his move to San Antonio. He divided the pictures, trinkets, and small valuables accumulated through a lifetime and sorted them carefully into the boxes. He wrote a letter to go in each box explaining to his family his reasons for running. He asked them to forgive him and please understand. Two additional boxes were filled with Miles' legal papers and other records he'd amassed over a twenty-two year Army career. Those would go to his brother for safekeeping.\n\nImpulsively, he copied all the documents he had on his computer onto two CDs and slid them inside protective cases. They would go inside the backpack though he had no idea if or when he'd ever see a computer again. Then he made two more copies and put them in the boxes destined for his brother and sister. All the boxes went into the truck bed for mailing in the last stages of the trip west. Their shipment would be timed to arrive at their destination long after he left for the mountains. He couldn't afford to have the act of shipping them used to track him.\n\nHe lifted his cell phone to cancel a dental exam he'd scheduled for next week, but put the phone down without punching any numbers. So far, everything he'd done to prepare for the trip had been behind drawn shades or in a garage with the doors closed.\n\nIn military terms, security had not yet been compromised. No one had the slightest idea he was going to run and he wanted it to stay that way. The dentist would figure out Miles wasn't going to meet the appointment when he didn't come in.\n\nAfter lunch, everything he could think of to do was done but he had a nagging suspicion he was forgetting something important. He couldn't shake the idea, but neither could he figure out what he was missing. Another tour around his home--it was quickly becoming only a house--didn't help. He could find nothing left undone.\n\nWhen the big grandfather clock in the hallway struck two o'clock in the afternoon, Miles took a calculated chance ... and the first public act in his plan. Leaving the house, he drove the Taurus across the city, making sudden, random right and left turns while watching the rear view mirror closely.\n\nIf anyone was following him, he decided they were doing a heck of a good job of it because he hadn't seen any vehicle follow him through more than one of the route changes. He didn't think there was much chance a big team was mirroring his moves on parallel streets like he'd seen on some cop shows.\n\nDoing that took lots and lots of unmarked cars and abundant manpower resources. There was no reason for the authorities to commit that amount of their limited resources for no purpose they could possibly be aware of ... not yet, anyway. He pulled into the credit union's parking lot fifteen minutes before it closed.\n\nThe two thousand dollars and change he withdrew to close his account was everything he had left from a military career in which he'd careful saved every dime he could for his retirement. The attorney wasn't costing him anything, but Miles was footing the bill for the private investigator Trenton had hired. Even if he was declared innocent this afternoon, the cost of defending himself had succeeding in bankrupting him.\n\nA fresh storm cell broke over the city as he left the credit union. He drove home in near darkness with rain clouds pressing close to the ground, dumping their loads of water on already saturated ground. Lightning crackled, filling the sky with streaks of electrical energy, and the heavy thunder was almost constant. It was impossible to listen to the radio.\n\nAs he reached for the volume control, the station was knocked off the air and hissing static replaced classic rock. He switched the radio off. Officially, sunset was still a couple hours away but it was already hard to see without the headlights on. Perfect weather for someone like himself--or what he was about to become--he thought. If a fugitive couldn't get away in this muck ... well, he deserved to be caught.\n\nBack home Miles transferred all but three hundred dollars of the withdrawal to a dry pack. The small pouch made of flexible, heavy-duty plastic would seal tightly. It was advertised to keep its contents dry at the bottom of a lake.\n\nHe shoved the finished jerky inside the backpack and then added all the canned meat from the pantry. Finally, he put in the dry pack. Hauling the backpack onto his back, he walked out to the garage and dropped the pack on the bed of the pickup beside the boxes he would mail to his family. Tucking a heavy tarp around the pack, he made sure there were no places rainwater could get underneath to soak the boxes or gear.\n\nHe got in the pickup's cab and started the engine. Letting it run for a while, he pulled the bottom of the garage door a few inches off the concrete floor to allow some airflow. After ten minutes or so, the water temperature gauge rose into the low-normal range and stayed there. The oil pressure and voltmeter showed no problems and the motor ran smoothly in spite of the vehicle's lengthy stay in the garage. All the lights shined brightly--the brakes and turn signals worked perfectly. He switched the motor off, closed the garage door, and strolled into the kitchen to prepare dinner.\n\n<p align=\"center\">\u00a7</p>\n\nThe big T-bone steak had been reduced to a well picked-over bone. Miles was comfortably full of the meat, mashed potatoes, and steamed broccoli he'd prepared as a going away dinner for himself. The big slab of apple pie, topped with an equally large scoop of ice cream, finished off the meal perfectly.\n\nHe put the plates and silverware in the sink and moved to the living room to watch TV. The information he needed was on a few minutes later. All the local stations were preempting normal programming with reports on the widespread flooding and carried many stories chronicling the number and comparative situations of those who ignored barricades to drive through high water. There were frequent updates on road conditions. He watched these closely. U.S. 281 north was still open--as was Interstate 35 once you got a little way out of town.\n\nHe wanted to get north of the city as quickly as he could. It was the fastest way out of the county. It was here in Bexar County that police would be most familiar with his face and status. Once outside this county and beyond the weather front, he could begin change course to the west on state highways. West Texas was sparsely populated even in the twenty-first century and he intended to avoid cities like they were hotbeds of bubonic plague.\n\nReturning to the kitchen, he washed and dried the dishes by hand to draw out the process as long as he could. Finishing, he carefully draped the towel on the edge of the sink, pulling at it a couple of times until he had it perfectly centered.\n\nHe walked slowly to the bedroom, his pulse rate increasing in spite of his efforts to stay calm. What he was about to do was getting to him a lot more than he had thought it would.\n\nHe got into a clean pair of jeans and pulled a dark blue sweatshirt over his head. Lacing up well broken-in hiking boots took only a minute but he did the left one twice to make sure it was double-tied perfectly.\n\nWandering from room to room, he remembered the few good times he'd had in the brief time he'd lived there. He shook his head. The good times had been too few.\n\nHe'd often said good-bye to homes, friends, and family because of military orders. This would be just one more time he had to leave everything behind. It was a shame ... he'd thought all that was over and this was his home, with everything that meant.\n\nMoving woodenly, he wound up back in the bedroom and opened the closet door for one last check. His eyes fell on the twelve-gauge shotgun he'd bought to defend his new home a week after putting down the deposit. It had been a special purchase--a lucky find at a gun show.\n\nHe was deserting the house, but he was suddenly loath to leave the weapon behind. Making a snap decision, refusing to think about it, he grabbed two boxes of express cartridges--double aught buckshot--and dropped them on the bed. His decision to not take a long gun with him was discarded, forgotten in the yearning to keep something from the home with him.\n\nShrugging into the lightweight jacket he would wear against tonight's weather, he turned off the closet light and closed the door. The shotgun under his arm, he walked numbly through the house, unplugging electronic equipment and appliances as he went. He couldn't have said why. It was just the right thing to do.\n\nSearching the pantry for a paper bag to carry the shotgun shells to the pickup, his hand nudged a box of iodized salt. That reminded him of something he hadn't considered. Salt was worth its weight in gold in the wilderness and he couldn't depend upon finding clean natural outcrops of the life giving mineral out there.\n\nHe grabbed the full box as well as the one he had been working from for the last month and put both in the shopping bag. He added the shotgun shells. He'd find space in the pack for the late additions somewhere down the road. He added a box of zipper-locked plastic freezer bags.\n\nWaiting for a minute, his eyes scanning the shelves full of canned foods and condiments, nothing else jumped out at him as something he needed. He closed the pantry door.\n\nGoing from the kitchen through the dining room, he looked around the living room for something he might have missed. He unlocked the front door. In a few days, the police would come looking for him and he didn't want them to wreck the door to get in. The house would make someone a fine home someday.\n\nHe walked slowly back into the kitchen and picked up a small cooler from the counter filled with plastic-wrapped sandwiches, orange juice, milk and a couple of diet sodas. Exiting from the kitchen to the garage, he put the cooler into the floorboard on the passenger side. A larger cooler, similarly filled, was already in the truck bed beside the tarp-covered load. The shopping bag full of salt and shotgun ammunition was pushed behind the passenger seat.",
        "Road maps went on the large bench seat beside where he would sit. A pair of small but powerful 7X--15X binoculars in a sturdy case went on the gun rack's lower hook and he hanged a heavy-duty rain poncho from the upper one. The shotgun and shells went on the floorboard behind the seat with the butt toward the driver's side ... and then he was finished with all the preparations. He surveyed the interior of the pickup truck's cab but could find nothing to rearrange.\n\nStepping up on the running board, he sat on the wide bench seat and settled himself behind the big steering wheel. Playing with the floor shift, he depressed the clutch and moved the stick through all five forward gears. It seemed to him the seat should be a little bit forward and he spent a long minute finding the perfect position.\n\nTurning the ignition key to the accessory position, he touched fingertips to the controls for the CB radio, the AM/FM radio with the cassette deck and CD player. He rotated the control knob for the headlights to turn them on and tapped the turn signal to make sure the high beams worked.\n\nHe pushed the turn signal lever up and then down. Red and amber lights reflected off the garage walls and the door behind him. The rearview mirror was exactly where it should be. Everything worked.\n\nHe knew he was stalling and commanded his hands to relax in his lap. He was still a moment longer, listening to the sounds of the turbulent night beyond the garage doors.\n\nEverything he could do was done and it was time to go, but it was infinitely more difficult to do than he'd thought it would be when he conceived the plan last night. Once he left, he would be severing his ties with everything he had and everything that he had been. It was a hard thing to do.\n\nShaking his head to clear it, he turned the ignition key. The engine started with a roar that was magnified tenfold in the confined space. The pickup's motor warmed quickly and ran smoothly.\n\nGrabbing the remote control from the dash, he thumbed the button to turn off the garage lights and then the one that raised the garage door. No one in the neighborhood could possibly hear the engine noise or the creaking of the door over the wind and blowing rain.\n\nHe backed into the darkness, turning carefully at the end of the driveway, and stopping the truck in the middle of the street. He put the transmission in first gear.\n\nRaindrops reached inside the open window to splash on his arm and face. He delayed once more while he looked stoically at the house he'd bought with money set aside from twenty-two years of scanty military paychecks. Lightning flashes became more numerous and heavy waves of thunder rolled over him. Wind-driven sheets of rain marched along the street toward him.\n\nHe forced himself into motion. There was nothing to be done except what he was doing. He pressed the button to close the garage door against the weather. At the last minute, he tossed the remote through the opening with a flip of his wrist. It skittered through just before the door slammed down. Rolling up the window, he let out the clutch and switched on the headlights as the truck lurched into motion.\n\nThe curb-deep water on the city streets was no challenge for the truck's high clearance and he had no problem reaching the big loop around the city. He drove carefully to the intersection with U.S. Highway 281 and turned north up the wide four-lane highway. The pickup wasn't the only vehicle on the road, but there weren't many other people out tonight. He saw no police patrols.\n\nDriving steadily for several minutes, he alternated between watching the road and the gauges on the console. With the engine so recently overhauled, he hadn't had time to develop any confidence in its performance. He accelerated smoothly up the grade leading to the Texas hill country.\n\nStopping for a red light, though there were no other vehicles in sight, his eyes were attracted by the brightly lit windows of a supermarket across the intersection to his right. He felt an urge to go inside to blend one more time with the innocent shoppers, but he knew it would be a foolish thing to do.\n\nSomeone might recognize him and he didn't want to leave any clues behind to reveal which direction he was traveling. He shrugged. Thinking about it that way, it wasn't really that hard to curb the urge to go inside.\n\nA massive bolt of lightning streaked across the sky. He could feel heavy, rolling detonations transmitted through the pickup's floorboard as the simultaneous clap of thunder crashed around him. The lights in the supermarket flickered and went out. He could see dim emergency lights coming on here and there on the interior walls.\n\nHe was beginning to feel the euphoria of having pulled off a clean escape. He was free. Then he turned his attention to his left and stared blankly for a time, unaware the traffic signal and streetlights had failed at the same time the supermarket's had.\n\nBy the light from his headlights, he could see the road leading off to the left but he didn't immediately understand its significance. A memory stirred at the back of his mind and then he knew. His heart pounded harder. The rage he'd felt, then suppressed last night flared into blazing life.\n\nThe westbound boulevard led up the low hill to the exclusive community where District Attorney Carl Brady lived. He knew now what had been nagging at him all day. The thing was, he didn't know why all this was happening to him. Why was he being prosecuted for something he could never have done? No one had ever given him an explanation. It was time to get one.\n\n<p align=\"center\">CHAPTER THREE</p>\n\n\"In spite of heavy rains forecast for South Texas tonight, President Martin Warren is in town as the keynote speaker at a fund raising dinner for a local banker and entrepreneur. Quincy Ortiz formally announced last week he will be a candidate for Lieutenant Governor in next year's election. Opponents of the President's stance on his Middle East policy and the lack of progress in the War On Terror will be demonstrating in front of the location where the fund raiser is to be held.\"\n\nThe male co-anchor paused and smirked.\n\n\"Gosh, Paula, I sure hope all this, uh, precipitation doesn't rain on the President's parade.\" He waited for her to respond to the humor, but Paula was too tired to pretend she was amused. The producer cut away to a commercial before the highly paid anchor could further embarrass himself.\n\nKSAA Channel Nine\n\nSan Antonio Texas\n\n\"Evening News\"\n\nFebruary 16\n\n<p align=\"center\">\u00a7</p>\n\nBy chance one evening, he'd caught sight of Brady leaving the courthouse after one particularly acrimonious court session. Miles had discretely shadowed the prosecutor's car all the way through the city to a residence on the north side of the city. He was going to get an answer for why the District Attorney's office was prosecuting him so zealously.\n\nFortunately, he'd cooled off before he'd made that particular blunder. It wouldn't have been a very smart move, even he could see that, and he never followed up on the urge to confront the prosecutor. His attorney would have had a fit and the judge would surely have revoked his bail. Additional charges would have been filed.\n\nBut ... the rules were different now. It didn't really matter if he angered the authorities a little more. Pulling the wheel hard left, Miles steered across the empty lanes and up a slight grade onto the wide boulevard.\n\nIt was just a mile or so up the road to the ornate formal entry into the exclusive little gated community. It was unguarded tonight; the little security post was empty and the gate wide open.\n\nMiles remembered the path Brady had taken through the neighborhood, so it was only a few minutes before he slowed and stopped in front of the Bexar County District Attorney's home. It was as impressive a residence as Miles recalled. The district attorney did very well for himself.\n\nThe big, two-story home sat well off the street, straddling two of the multiple-acre sized lots that seemed to be standard here. His eyes were drawn to a triangle of three closely planted pine trees to the left rear of the house. A wide driveway swept around the right end of the home to a three-car garage behind and to the right of the main house. On both sides, tall privacy fences separated the house from his neighbors. The expansive front yard was meticulously groomed and very lush.\n\nThrough several windows, Miles could see shadows of a male figure moving around the front rooms of the house but he couldn't tell what the man was doing. After five minutes of watching, Miles still hadn't seen anyone else inside.\n\nHe put the transmission in first gear and slowly let out the clutch to move on without creating unnecessary noise. Sitting in the middle of the street staring at an expensive residence like this was asking for unwanted attention and he needed to be less conspicuous, not more. What he did need was some out-of-the-way place where he could park the truck while he had a conversation with Mister Carl Brady.\n\nHe couldn't find a good hiding place at first. He wandered around for a while before coming upon the perfect spot ... on the next street north of Brady's house. One of the palatial homes there was being renovated but the process was a long way from being finished. The front lawn was strewn with building materials and dumpsters full of debris. He pulled the pickup to the curb and stopped to look around.\n\nThere was a house down the street with lights glowing behind drawn curtains. If he could see the windows, it was reasonable to assume anyone looking out of them could see him as well.\n\nThe night was a thoroughly miserable one though. There was little reason for anyone to peer out rain-streaked windows to look for unknown people in old pickup trucks. With the headlights turned off, there actually was little chance his pickup would be seen at this distance.\n\nThree other homes were closer and had a better view of the reconstruction site, but the interiors of those houses were dark with only a few outside security lights burning. The occupants were either gone or had sensibly decided to go to bed early on the wild, stormy night. After a long moment of debate with himself, he decided to take the risk of being seen sneaking onto the unoccupied property.\n\nHe pulled past what would be a driveway again someday. Tonight, it was no more than a long gravel pit marked by wooden supports along the sides. It wasn't concrete or asphalt, but driving on gravel was a lot better than mud on a rainy night.\n\nReversing, he backed the pickup up the curving strip of gravel between tall stacks of lumber and mounds of roofing shingles into one side of a gaping hole in the front of the house. When he stopped, he was seventy-five or eighty feet from the street and deep in the shadows of the unfinished garage. His dark green truck was almost impossible to see in the night. He killed the engine and sat quietly.\n\nThe anger that had flared so hot down at the highway intersection had faded during the search for a hiding place and he wasn't sure he wanted to do this any longer. Until now, he hadn't done anything that couldn't be explained away with some imagination and a little luck.\n\nOnce he barged into Mr. Brady's house, all that changed.\n\nLogically speaking, there wasn't much good that could come from what he was about to do. It really didn't matter why he was being prosecuted for something he didn't do. In a sense, the only relevant item was that he was being hounded into prison.  \n\nThere was a small voice at the back of his mind that demanded to be heard. The voice kept saying he at deserved to hear the motives of the district attorney--and directly from that worthy person too.\n\nIn the end, the voice in his head--perhaps it was no more than pure stubbornness--prevailed. He'd play this out and see what happened.\n\nThe decision made, he watched the storm a moment longer. A strengthening wind toyed with a loose end of a sheet of canvas covering heavy rolls of roofing shingles near the outside wall of the garage. In a few minutes, the loose end was flapping in the wind, making loud popping noises as it whipped around.\n\nHe pulled the key from the ignition, stuffed it in his right front pocket, and made ready to leave the safety of the truck. Twisting around on the seat, he grabbed the poncho from the hook behind him and pulled the olive drab raingear over his head, draping it about his body as best he could in the confined space. Turning the shotgun upside down, he loaded four express double-aught buck cartridges into the tube magazine. Turning it over, he worked the slide to move one of the thick, three-inch shells into the chamber. Reaching under the receiver, he thumbed one more into the magazine. The weapon was fully loaded and cocked. He checked the safety to make sure it was on.\n\nMiles took a deep breath and opened the driver's side door. The glare from the dome light revealed piles of plumbing fixtures, lumber, and everything else for yards around. That included the big pickup and its driver. He yanked the door back shut.\n\nThe glow from his mini-flashlight showed him there was no quick release for the lens cover on the light's mounting frame. The screws holding it tight would have to be removed before he could get to the bulb. It wasn't impossible to do; he had a toolbox in the truck bed with several screwdrivers inside, but it was hidden back there somewhere under the tarp. It was too much trouble and he was in a hurry.\n\nTurning away and pulling the hood of the poncho over his eyes for protection, he gave the fixture a quick, hard tap with the shotgun muzzle. The fragile plastic lens and light bulb shattered instantly, sending shards flying across the seat and floorboard. He snapped off the flash and dropped it in a jacket pocket. When he opened the pickup's door this time, the darkness was unbroken.\n\nWhile his eyes adjusted to the night, he stumbled forward to the heap of shingles. Working mainly by touch, he tucked the loose end of the canvas under a corner of the bottom bundle. The aggravating noise stopped.\n\nHe slogged through discarded building materials and deep grass to the back corner of the house and tried to orient himself. As best he could determine, he needed to bear off to his right at about a forty-five degree angle. He set off through a back yard that was as much an obstacle course as the front, threading his way through demolished flower gardens, piles of building materials, dumpsters, and overgrown landscaping. The forbidding pit off to his left had probably been a swimming pool in better days.\n\nMany of the boards in the back fence were marked for replacement and several were already missing. He stopped and bent low to peer through one of the gaps, wondering if his navigation had been correct. A prolonged flash of lightning spread spider webs of raw electrical energy from one cloud to another. There was enough light to see a big house with an isolated garage to his left and a trio of close-set pines off to the right. Brady's had been the only house on that street with a detached garage ... and those trees growing so close together cinched it. This was it.\n\nHe turned sideways to slide through a space where two boards had been and moved forward onto the wet grass of Brady's lawn. He jogged up a slight incline toward the house before stopping. He knelt in the shadow of an elaborate fountain. Water spouted from the mouth of a concrete elf in spite of the heavy rain.\n\nThe back of Brady's home was directly in front of him and the garage off to his left. He couldn't detect any movement around either of the structures. High fences on both sides of the attorney's property blocked the view into Brady's backyard. He felt better, less vulnerable. Holding the shotgun under the poncho, he rose to prowl around the back of the residence, trying to find a way inside.\n\nThe electric power failed every few minutes, only to come back on a moment later as relays reset themselves in the city's power grid. He flinched every time the neighborhood's outdoor lighting glared brightly again but the lights were never accompanied by raised voices. He was reasonably sure he hadn't been seen.\n\nEvery door and window on the back of the house was tightly locked. He couldn't see any way to get inside short of breaking a window. The best choice for that looked like one of the decorative panes in the back door. One of them had felt encouragingly loose in its mounting when he poked at it. The sound of breaking glass was distinctive though, easily heard, and it would instantly alarm anyone inside the residence. Realistically, he couldn't expect to break a window, scramble inside, and overpower an occupant quickly enough to stop a 911 call.\n\nAt the back of his mind, he had a plan in reserve that he didn't really like. It had the advantage of simplicity but it was more dangerous than slipping in through an unguarded back door.\n\nIt would work though. He knew it would. When he was sure there was nothing else, he admitted to himself he was going around the house and knock on the front door. Whoever answered the door, either Brady or a housekeeper, would surely be docile with a shotgun muzzle staring them in the face. Sighing softly to himself in resignation, he trudged along the south side of the house--the side away from the garage and expanse of driveway where he would be out in the open for anyone to see.\n\nHe slowly opened a massive wooden gate leading to the front yard, afraid the soaked metal hinges would scream a protest. Perhaps his care was successful; perhaps the gate never made any noise. In any event, the gate opened ponderously and silently.\n\nLeaving it slightly ajar, he moved forward cautiously, pausing behind a waist-high shrub at the front corner of the house to watch for a while. The concealing backyard fences had ended at the gate and he was exposed for anyone watching from across the street or next door. Kneeling to reduce his silhouette, he looked at the two houses across the street. There was no one visible over there. He turned to inspect this side of the road and the house behind him. There was no one there either.\n\nSatisfied he hadn't yet been seen, he stood to walk to the elaborate double doors that provided entrance into District Attorney Carl Brady's home. He hadn't fully risen from a crouch when a set of brilliant headlights of a car lit the scene with frightening intensity. The lights were from a vehicle turning the corner from a street to his right rear. The headlights painted his shadow on the light-colored bricks of Brady's house, exposing him for everyone to see.\n\nStunned, Miles couldn't react at first. Forcing himself into action, he dove back behind the shrubbery and sank to one knee while he waited for the car to pass. It didn't. Instead, the vehicle slowed and turned into Brady's driveway.\n\nOnce stopped, the driver must have leaned on the horn because it sent a deep, braying clamor reverberating through the neighborhood. Miles' heart pounded. In spite of the rain, his mouth was dry and he couldn't swallow. He did not need this.\n\nThe porch light over Brady's door came on, spilling a bright swath of light across the lawn. Miles pulled the poncho's hood low over his eyes. The front door opened and the prosecutor stepped out to wave at what a flash of lightning revealed to be a long, dark-colored limousine.\n\nThe electricity went off again and Miles used the opportunity created by the sudden darkness to drop flat behind a bush. He was out of sight from anyone on the street but not nearly as well concealed from a viewpoint near the open door. The porch light would destroy Brady's night vision while it was on though, and the blinding effect would last for quite a while after the light went off.\n\nThe district attorney shouldn't be able to see Miles as he lay half under the shrub then, but Miles was completely exposed to anyone on the neighbor's porch behind him. If anyone next door stepped outside to see what the commotion was ... he started to sweat inside the confining poncho.",
        "\"God damn it!\" Miles winced at the curse from Brady. The cold lump in Miles' stomach froze solid. His pulse was so loud in his ears he was amazed Brady didn't look toward Miles to find the source of the noise.\n\nThe lights flickered and came back on. Miles waited, his muscles tensed to struggle to his feet and run, but there was no outcry. No one pointed an accusing finger at him.\n\nActually--Miles checked everyone he could see to make sure--no one was even looking his way. He even threw a glance behind him at the neighbor's house. There was no one there, no one raising a pointing forefinger at the intruder on Brady's property.\n\nIt helped to know he was still unseen, but his heart still threatened to lodge permanently in his throat. He squirmed as far under the bushes as he could.\n\nHe had a good view of the porch area even through the branches, and could see the attorney using a finger to prod a keyboard on the wall just inside the front door. It was apparently the control panel for a security system ... an uncooperative one, judging by Brady's reactions.\n\nThe lawyer entered another code on the number pad, and this time the unit squealed shrilly at him. He hit what must have been a canceling key and cursed again. The lights all over the neighborhood died again.\n\n\"God damn this sorry son of a bitching system! Fucking thing only works half the damned time anyway, and now....\"\n\nMiles' eyes widened in shock. The slight, almost diminutive lead attorney for the prosecution cursed like a drunken sailor. Who knew? It helped steady Miles' nerves; he was a little less inclined to scramble up and run for the pickup.\n\n\"Carl, leave it, dammit. Lock it up and forget it. No one's going to get in!\" The deep male voice from the limo's open window was easily heard over the storm.\n\n\"Hell, we'll only be gone a couple of hours.\" Miles liked the mocking note in the man's voice. Apparently, Miles wasn't the only one who didn't like the district attorney all that much.\n\n\"Besides,\" the voice continued, \"no self-respecting burglar would be out on a night like this.\" The man chuckled at his own joke.\n\nSoaked by a wind-driven rain that was finding its way past the folds of the poncho, Miles couldn't argue with those words. He'd been wishing for a while now that he wasn't out in the open tonight.\n\n\"Come on, Carl,\" the unknown man demanded, \"the President has a tight schedule and he wants to get out of town before the airport gets closed down. He wants to talk to you right after dinner and he's not a man who likes to wait.\"\n\nThe rebuke motivated Brady to pull the front door closed, slamming it viciously to punish the alarm system for being so stubborn. He bent forward to find the lock by the flashes of several nearly simultaneous streaks of lightning and finally succeeded in getting a key inserted. He turned the key and energetically jerked on the doorknob, checking to see that the lock was, in fact, locked. Petulantly, he kicked the bottom of the door one final time.\n\nKeys still clutched tightly in his hand, the slightly built attorney opened an umbrella over his head and scampered down the flooded sidewalk to the waiting car. He slid in the back seat beside the man who'd called out to him, hastily yanking the skirt of his overcoat inside before the chauffer could close the rear door on it.\n\nThe driver stepped back to his own door and jumped into the front seat. A barely perceptible pause and the vehicle was in motion, reversing out of the driveway, turning, and then accelerating around the corner and out of sight.\n\nIn a moment, the sound of the car's engine could no longer be heard. Tranquility, broken only by the sounds of the storm, settled over the neighborhood once more.\n\nMiles shook his head to clear his thoughts. The suddenness of the interruption just before going up to Brady's door had thrown him badly off balance. The noise, the lights, and the harsh voices had broken his concentration on what he had been about to do. The quick departure was almost as disconcerting as the unannounced intrusion had been. It was a long time before the sensation of being completely exposed faded and he again felt comfortably cloaked by the darkness.\n\nHe twisted around to look at the few houses he could see along the street, wondering if all the noise had excited any interest. While he watched, he thought about what he should do. The voice had said Brady wouldn't be back for a couple of hours, which was discouraging.\n\nMiles had thought he could walk in the front door, confront Brady, and then get back on the road out of town. That wasn't going to happen now.\n\nThere were two options.\n\nHe could get back in his pickup and put as many miles behind him as he could under the cover of darkness and weather, or he could wait for the district attorney's return and have that little talk with Brady he'd planned. Waiting would delay him badly; he'd be lucky to get back on the road by midnight.\n\nTorn between the two options, Miles lay quietly and watched the drenched world from beneath the shrubs and tried to decide what to do.\n\nFinally convinced no one was going to raise an alarm, he rolled away from the bushes and got his feet under him. Staying low, he made his way back through the fence gate and along the side of the house.\n\nTired of skulking around, he wished he wasn't in the position of having to sneak around all the time. He stumbled over an unseen obstruction--something hard and heavy--stubbing the big toe on his right foot. Even inside his heavy hiking boots, it hurt.\n\nThe anger came flooding back. He wouldn't be in this position if it wasn't for the prosecutor. The decision crystallized; he was staying.\n\nHe walked directly to the back door and tried the doorknob again. The door didn't open. He'd have been surprised if it had, but he had to try. Pulling the shotgun from under the poncho, he waited for the next streak of lightning.\n\nWhen the thunderclap rolled over the neighborhood, he used the muzzle of the weapon to punch a hole in the small pane of glass nearest the door handle. The sound of breaking glass was lost in the background noise. Before the booming thunder ended, he held the shotgun's barrel against the frame and moved it around all four sides to knock out the remaining glass. He reached in to unlock the door.\n\nIt swung open easily on well-oiled hinges. He stepped inside and pushed the door closed behind him in the same motion. As the sustained crash of sustained thunder subsided, he stood quietly just inside the door and waited for his senses to adjust to the sounds and dim light of the house. Water streamed from the poncho onto the polished floor.\n\nDebris from the shattered window crunched under his feet when he shifted his weight and he used his boots to sweep it away from the entryway. There was a chance he would be moving fast if he had to use this door for an escape and he didn't want a wet, slippery floor made worse with broken glass.\n\nPushing the poncho hood back off his head, he made his way deeper into the house. He held the shotgun at the ready. The safety was off and his forefinger pointed down the length of the receiver. Walking gingerly through the kitchen, he stopped to the side of a doorway. Beyond, there was a long, dark hallway that seemed to lead toward the front of the house.\n\nHe reminded himself that Brady had locked the front door after struggling and failing to arm the security system. Brady probably wouldn't have tried so hard to make the system work if there was anyone else home. On the other hand, there was no sense in taking unnecessary chances and he had lots of time before Brady got back. He would check the entire house to make sure he was alone.\n\nTaking out the miniature flashlight he'd brought from the pickup, he adjusted its beam of light until it was as diffuse as possible. It was still too bright. He changed his hold on the flashlight, covering most of the lens so that only a weak glow could be seen between the gaps between his fingers. He pointed it behind him to look into the corners of the kitchen but saw nothing of interest--nothing threatening.\n\nHe walked on as quietly as he could in wet boots and dripping poncho, exploring the house of the man who was determined to put him in prison. The shotgun hung muzzle down from his right hand with his fingers wrapped around the grip. He could drop the light and have the barrel up and on target in a split second.\n\nJust before the hall emptied into the living room at the front of the house, he found a short corridor leading off to the right. Walking to the end of the passage, he found a large room set up as a home office. Pausing at the doorway, he saw a small half bath through an open door on his immediate right. He could see by the glow of a nightlight plugged into a wall socket there was no one inside the restroom.\n\nBeyond the door to the bathroom, a big painting--some kind of modern art--hung in the precise middle of the wall. On the far side of the artwork, there was a door standing slightly ajar. Miles advanced with the shotgun held ready and carefully looked inside to find a storeroom full of office supplies. He closed the door firmly and set his back to it while he surveyed the rest of the room.\n\nA massive wooden desk stood at the far end of the room facing into the interior. A large bay window at the front of the house would be behind anyone seated at the desk. A printer and what appeared to be a fax machine were on a credenza against the wall to the left of one seated at the desk. A flat screen computer monitor was ensconced on the right side of the desk. A long bank of file cabinets were set against a long wall to the left of the user of the desk.\n\nRetracing his steps down the corridor, Miles went into the living room and located a stairway leading to the second floor. He went up, but found only bedrooms and baths, none of them occupied.\n\nBack on the first floor, he glanced through an archway into a formal dining room but didn't go inside. His tour returned him to the hall leading to Brady's office. It was official; there was no one at home.\n\nThe shotgun parked comfortably on his shoulder, he walked back into the study. It was as good a place as any to wait for the attorney's return. Miles sauntered over to the desk and sat in the well-padded executive chair behind it. The chair rolled smoothly on a thick plastic sheet laying over the thick carpet.\n\nTo his right, between two sections of tall bookshelves, he was surprised to see a fireplace built flush into the wall that divided the living room and study. The floor-to-ceiling bookcases on either side hid it from view until an observer was nearly in front of it.\n\nHe bent low and peered through the grating. The fireplace was shared by the living room and study; in the light of lightning flashes, he could see furniture on the other side of the wall. Propping the shotgun against the desk, he turned to survey the rest of the room.\n\nTo his left was the row of tall, heavy-duty file cabinets set against the outside wall. To his right, the dual-use fireplace was flanked by bookshelves filled with expensively bound volumes. At the far end of the room, between the bathroom and supply closet, was the painting. He went around the study, checking to see that the blinds were closed and the drapes pulled tight.\n\nThe streetlights flickered outside, stayed off for a time, and then came on again. Miles could hear the sounds of appliances throughout the house coming back on. Machines on a credenza to his right rear began startup routines.\n\nRed, amber, and green buttons lit up briefly and mechanical noises continued until the printer and fax machine were ready. No lamps or ceiling lights came on in the house that Miles could see; certainly none in the study or living room were on. He pulled off the wet poncho and draped it over the overstuffed chair in front of Brady's desk.\n\nThe drawers in the first file cabinet didn't have their combination locks engaged. The second drawer from the top was even open a few inches. Curious and needing something to fill in the time, he pulled the partially open drawer out to find a number of folders with unfamiliar names on them. He slid the drawer shut. In the glare of the flashlight, he saw the top drawer was labeled \"Active Cases,\" and his interest was rekindled. He found a divider with his name on the label but there were no folders or loose documents in that section at all.\n\nClosing the drawer, Miles moved the circle of light from his flash around the room, searching for the missing file. A neat stack of documents at the precise center of Brady's desk looked promising. Sorting through them, he found a folder with his name on it and pulled it from the pile. Moving back behind the desk to the comfortable executive chair, he sat and began to read.\n\n<p align=\"center\">\u00a7</p>\n\nMiles closed the file and lifted his eyes to stare without seeing at the far wall. He'd maintained a detached control while he read the documents but now the fury exploded.\n\nHe leaped to his feet. His chair hammered the outside wall and rebounded to hit the back of his knees. Ignoring the blow, he stalked to the side of the desk, but there he stopped. Snarling his frustration, he fought for control.\n\nAll ancient peoples had known what he was feeling now, but only the Old Norse term survives. They called it berserker. In the frenzied rage, berserk warriors wouldn't feel even mortal injuries. Badly wounded, they kept fighting, living only to close with an enemy to slash and kill him.\n\nThe urge to rip out the bookshelves in front of him with his bare hands and tear each book to shreds was almost overwhelming. The expensive chandelier he'd seen on the living room's ceiling fairly begged for destruction with clubs made from demolished furniture. He could already hear the fine smashing noises the computer and its attached peripherals would make when thrown from the second floor landing. He stood trembling....\n\n...And did none of it.\n\nSlowly, ruthlessly, he drove the red-hot fury back into a corner of his mind so he could think. He had to think, to decide what to do, now that he knew what Brady was hiding.\n\nReplacing the chair on its wheels and patting its arms in apology for the violence committed upon it, he squatted to pick up the fallen flashlight with exaggerated care. He refocused the beam on the desktop. Opening the folder, he leafed through the contents again.\n\nIt was all there. A printed list of every person Miles could remember, and many he could not, from that night's party was stapled to the inside cover of the folder for easy reference. Among a sheaf of sworn statements, he saw a big group of affidavits from people who were standing near him at the party.\n\nWithout exception, the documents corroborated Miles' story that the girl hadn't been referring to Miles when she whispered something about \"he hurt me.\" Other statements asserted Miles didn't appear to know the woman at all ... that he hadn't even talked to her that night before she began acting strangely.\n\nThere were copies of police records, the relevant sections carefully marked with a yellow highlighter, showing Carol Delmont, the young woman's companion at the party, was a known madam. Both she and the dead girl had a number of convictions for solicitation and prostitution. Even worse, Delmont's record showed two prison sentences for blackmailing older men who got involved with young call girls in her employ. Though she was only seventeen, Virginia Rogers had worked for Delmont for more than two years at the time of her death, according to the records.\n\nNear the bottom of the file was an autopsy report Miles, and his attorney, had never seen. They didn't know it even existed.\n\nIt indicated the dead girl was the victim of a botched and very recent abortion. At seventeen, she couldn't have received a legal one in Texas without her parents' permission. Evidently, consent had not been forthcoming or she'd never told them about the pregnancy.\n\nThe instrument used to abort the baby had punctured or severely strained the wall of the peritoneum, the report said, and it had finally given way, causing a massive hemorrhage that couldn't be stopped. There was no indication of rape, it said. Besides, the bleeding had washed away any DNA that might have been present initially. Miles was familiar with all the documents admitted at the trial. This wasn't one of them.\n\nIt was clear the entire prosecution was a sham. Every scrap of evidence that might support Miles' claim of innocence had been suppressed and favorable witnesses ignored ... even threatened to keep them from testifying. He knew what was happening now, though, and there had to be ways to get all this out in the open.\n\nMoving quickly, Miles got ready to leave. This changed everything. With all the information in the folder--though some probably couldn't be used in court--there was enough to make an acquittal all but certain.\n\nIt meant he could resume the quiet life of a retired Army veteran. He was nearly broke, but a few years of employment in the civilian market place would restore his savings to a reasonable figure. He'd had offers from contractors doing work for the Army before the trouble started, for instance. He could, for all practical purposes, go back to the same job he'd held while wearing a uniform, but at three times the salary of an Army Senior NCO. He thrust the issue aside to deal with later.\n\nHis anger was quickly transforming itself into something more lighthearted. The bad times would soon be over. He couldn't wait to get out of the prosecutor's house and go home. He stopped suddenly, appalled by a sudden memory. His front door was unlocked, for Pete's sake! What in the world had he been thinking?\n\nHe got busy rubbing down all the furniture where he might have left fingerprints with a rag he found inside a desk drawer. The back door's broken windowpane and the missing documents would show someone had been in the house, but it wouldn't matter if they couldn't prove it had been him. He didn't think Brady was going to make an official complaint about the theft of the folder anyway. Miles' own conscience didn't hurt any longer than it took to recall what Brady was trying to do to him.\n\nHe wiped off the file cabinet he knew he'd touched and the one next to it to be sure he hadn't inadvertently put a hand on that one too. That reminded him to clean all the folders on the desk. Finishing the executive chair and desk, he started to go up the staircase to the second floor.\n\nHe couldn't recall if he'd ever touched the banister or not, so he had to wipe it off. While he was upstairs, he cleaned all the doorknobs up there too. The back door was the last thing on his list. He knew he hadn't touched anything in the rest of the house. His hands had been full with the flashlight and shotgun. He hurried down the stairs, anxious to get the cleanup finished.\n\nHe was startled when a set of car lights showed through the open window shades in the living room, making fleeting patterns on the walls as a vehicle came closer. It pulled into the driveway, and stopped. A door opened; he could hear several muffled voices but couldn't distinguish the words. Seconds later, the car door closed and the driver backed out to the street. Miles hadn't realized so much time had passed. Brady, it seemed, had returned.\n\nMiles was caught in limbo--halfway down the hall to the kitchen without the folder and the gear he'd brought with him into the house. Running back to the study, Miles grabbed his shotgun and his poncho and headed for the rear of the house. Remembering, he reversed course at the door and dashed back into the study to grab the folder full of documents from the desktop.\n\nGathering the documents, poncho and weapon in his arms, he was jogging toward the study's doorway when a key was inserted into the front door lock and the tumblers quickly turned. Soaked hinges squeaked a small protest as the door swung open."
    ],
    "authorname": "Longhorn__07",
    "tags": [
        "action adventure",
        "mystery",
        "thriller",
        "giallo",
        "suspense"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/uncertain-justice-1"
}