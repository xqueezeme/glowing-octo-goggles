{
    "title": "Our Little Secret Ch. 08",
    "pages": [
        "Chapter 8 \u2013 Impossible is What We Do\n\nIt was a hastily arranged conference room. A series of three by six foot tables were lined up end-to-end in a three-sided square 'U' configuration, with chairs lining the outer edge. Another straight line of tables spanned along one the long side of the large room. A large plate of muffins, donuts, coffee, and tea rested at one end of this long string of tables. There were at least twenty people seated along the sides of the U shaped table configuration, and Joel alone sat at the head of the U shaped setting. \n\nJoel had no clue where he was, except for being within a forty-five minute drive from SEATAC airport. He was transported in the relative comfort in the back of a black van with no windows. He was not handcuffed. The van unloaded Joel into an underground parking lot, and from there the two US Marshal special agents escorted Joel to a check-in room. There Joel was handed off to US Air Force personnel, Sergeants Collins and Lahey who led him through what seemed like a mile of corridors. \n\nSergeant Collins asked Joel if he needed anything, and Joel said he had to use the washroom. This was an anticipated request, and the two sergeants escorted Joel to the bathroom. One stayed outside the door while the other came in and stood guard just inside the door. Once they returned him to the large room, Joel asked for a coffee and muffin, and Sergeant Lahey brought a muffin and coffee to him with double cream and double sugar. \n\nThe large meeting room had two doors, one at either end of the long wall, across from the coffee and muffins table. Two more US Air Force personnel guarded each door outside in the hall. Joel was not certain if these guards were to prevent him from escaping, or preventing unauthorized people from entering. Perhaps both. He had been treated professionally and courteously, although so far there was no evidence he was free to go anywhere. He had not been arrested, nor had Joel been Mirandized. His purpose and fate in this room remained a mystery to him.\n\n\"Okay,\" an older man in service uniform of a full colonel at the near corner of the U-shaped table called out, \"let's get started.\" He was seated to the left of Joel. He was black, broad shouldered, and tall. He had a thin dark moustache that blended with his dark skin. He spoke with the confidence and conviction of someone who knows he is correct most of the time. A permanent growl in his throat made him sound angry. \n\nThe general hubbub of the room died instantly with military precision. \"Mr. Winkman,\" the colonel explained, \"I want to first thank you for joining us here, although it may appear to you that it was not by choice.\" There were no snickers or sidebar comments. The tone was serious and professional. \"I want to point out that you are not under arrest, you have not been read your rights, and whatever you say in here will not be used against you in a court of law. Have I made myself clear?\"\n\n\"Who are you?\" Joel asked. \n\n\"We'll get to that in a moment,\" the colonel evaded his question, \"but for now I want you to acknowledge that you understand you are not being held for the purposes of a criminal investigation. Nothing you say here will be used against you in a court of law.\"\n\n\"Okay,\" Joel nodded. \n\n\"For reasons of national security and jurisprudence, we are not at liberty to identify ourselves.\"\n\n\"I'm not comfortable with that,\" Joel said.\n\n\"Nor are we, I can assure you, Mr. Winkman,\" the colonel said gravely. \"All I can tell you, this is the only way we can conduct this meeting without arresting you.\"\n\n\"Are there any CIA members in the room?\" Joel asked. \n\n\"Why do you ask?\"\n\n\"You know why I am asking. Are there any CIA members in the room?\" Joel repeated. \n\n\"Yes, but in an observation capacity only,\" the colonel offered. \"Does that satisfy your concern, Mr. Winkman?\"\n\n\"None of my concerns are satisfied,\" Joel replied curtly.\n\n\"That is understandable, Mr. Winkman,\" the colonel spoke understandingly, but not sympathetically. \"Let me get right to the point, then. The purpose of this meeting is to determine if you are one of us, or one of them.\"\n\nA cold shiver ran up his spine. Joel didn't like the sound of that. \"Can you be more specific?\" he asked. \n\n\"Mr. Winkman,\" the colonel continued, \"you are a member of a select group of people endowed with a certain psycho-manipulation capability. We are trying to determine whether you are using that capability for good use, or improper use.\" \n\nJoel just realized there were no women in the room. \"And why should I cooperate with your illegal hearing?\" Joel asked. \n\n\"You raise an excellent point, Mr. Winkman,\" the colonel did not attempt to evade Joel's accusation. \"And that is the crux of everything, as I am sure you already know. This hearing, and your detention, is not legal only because what you can do is not illegal. I am sure you know law enforcement agencies exist to investigate and apprehend people who break the law. There is no US government agency authorized to intervene in your affairs, Mr. Winkman, because there are no laws governing what you do.\"\n\n\"We are all breaking new ground here, Mr. Winkman, you included,\" the colonel continued. \"This hearing is an imperfect solution to an impossible situation. Maybe nothing you do is illegal, yet you and your cohorts represent a serious threat to national security.\"\n\n\"Us or them,\" Joel understood.\n\n\"That's right, Mr. Winkman.\"\n\n\"You've left out just 'me',\" Joel argued. \"Mister private citizen with the freedom to go his own way protected by his constitutional rights.\" \n\n\"That's where I agree with you, Mr. Winkman.\" Again, the colonel did not evade Joel's point. \"We all come unstuck there. I have to tell you that, if you were talking to only the FBI right now, you would be under arrest, and they would seek prosecution to incarcerate you for the rest of your life.\" \n\n\"They would fail,\" Joel projected a confidence he didn't own, \"because as you have already pointed out, I have done nothing illegal.\"\n\n\"Maybe yes, maybe no,\" the colonel conceded, \"but we're not here to argue semantics. We are all here to understand who you are.\"\n\n\"So I want to make sure I understand my position,\" Joel said. \"I am being held against my will by a collusion of government agencies in an illegal, unconstitutional interrogation, and the outcome of this meeting will determine my fate and possibly my life.\"\n\n\"No,\" he answered. \"Your life is not in jeopardy, but I would say your fate, as you say, does hinge somewhat on the outcome of this meeting.\"\n\n\"And what if I refuse to cooperate?\" Joel asked. \n\n\"That, of course, is an option open to you,\" the colonel conceded. \"We will not torture you, and we will not use drugs or other unsuitable methods to extract information from you. Your participation is voluntary, but I remind you, the outcome of this meeting will dictate your scope of freedom from this point on, whether you cooperate or not.\"\n\n\"Are you interrogating all the catnap passengers?\" Joel asked.\n\n\"We decline to answer that,\" the colonel said neutrally. \n\n\"What do you want to know?\" Joel finally asked. \n\n\"What are your intentions, Mr. Winkman?\"\n\n\"I'm sorry?\" Joel asked with surprise.\n\n\"Mr. Winkman,\" the colonel indicted, \"you have a surveillance team that has developed elaborate and extensive profiles on every catnap passenger, as well as hundreds, perhaps thousands of other people. That surveillance capability includes sophisticated cyber monitoring and attack tools. You have conducted a clandestine operation in which you have fabricated evidence to cause an American citizen to be arrested, and almost certainly convicted for a crime he did not commit, and you did this in a way that can never be traced back to you in a court of law. You have infiltrated a secure government computer facility and tampered with confidential records. You have possibly endless financing. Your research team is right now, as we speak, amassing extensive files surrounding a murder/suicide in Dallas, Texas, and we assume you are planning another clandestine attack against another American citizen. Quite simply, Mr. Winkman, you operate an illegal, covert agency that cannot be traced to you, while your investment company lets you travel anywhere without suspicion. You have an alternate identify, which by the way, the FBI can nail you for. You can force any woman to do your bidding and never be held accountable for it. Mr. Winkman, believe me when I tell you, we need to know your intentions.\"\n\n\"To punish the assholes that abuse this power,\" Joel said. \n\n\"And?\"\n\n\"And what?\" Joel said.\n\n\"How many women have you bedded with this power?\" the colonel accused through his question. \"How much wealth have you amassed? Your intentions are not all noble, are they Mr. Winkman?\"\n\n\"You seem to know, you tell me?\"\n\n\"Okay, Mr. Winkman, I will,\" the colonel answered without annoyance. \"I think you are a rogue hero \u2013 you are a man with good intentions, but you have vices, urges, shall we say, that lead you astray from your noble cause. I am worried that your vices will be the end of you. I am worried it will all come crashing down. Surely even you have realized this cannot go on forever. Someday this power will become public, if not by your doing, then by someone else's, and some people will realize they have been, shall we say, duped by you. Some women will use a different word. And they will want their own measure of justice.\"\n\n\"I'd say that's pretty accurate,\" Joel nodded.\n\n\"Okay, Mr. Winkman,\" the colonel nodded, \"so you acknowledge your current situation is not sustainable.\"\n\n\"Yes, I already know that.\"\n\n\"Well then,\" the colonel said, \"It's the blue pill or the red pill. One way or another, your story takes a turn today. That's where you are right now. Turn it all off \u2013 abandon your power. Or leave it on, but confine it to a more rigorous standard. And in case you are thinking a third option exists \u2013 to continue the way you are now \u2013 that is the option that I guarantee ends badly for you. \"\n\n\"Okay,\" Joel shrugged, \"message received. I can go now?\"\n\n\"Not by a long shot,\" the colonel warned. \"Tell me about the Mojo girls.\"\n\nJoel knew he was referring to Christina, Kelsey, and Mary. \"What about them?\" Joel asked. \n\n\"Why did you hire a major law firm to defend them against minor misdemeanor charges?\" the colonel asked. \n\n\"Because no one else would. Because they were forced against their will to do the things they did in that bar, and their life was ruined. Because someone had to,\" Joel answered plainly.\n\n\"Did you force them to express gratitude in the bedroom?\" the colonel asked. \n\n\"Absolutely not,\" Joel resented the question. \"These girls had been victimized in a most publicly humiliating and damaging way. To do that would only compound their situation.\"\n\n\"So you force some women to bed, but not others.\"\n\n\"I have a code,\" Joel explained. \n\n\"Please share,\" the colonel demanded. \n\n\"I don't make them do anything they would not normally do. If a girl is not sexually active, I do not touch her unless she asks to have sex voluntarily, without being commanded. If she does not practice a certain form of sex, I do not impose it on her. I don't do underage girls. I don't publicly humiliate them, and I don't jeopardize their families or jobs. And I don't knowingly target girls who were victims of someone else who broke that code.\"\n\n\"And how do you establish all this?\"\n\n\"I ask them.\"\n\n\"You just walk up to a woman and ask her?\" he asked incredulously. \n\n\"The power you speak of lets me compel women to answer my questions truthfully, and they have no memory of the conversation. So I can ask them with impunity.\" That caused a stir in around the table. The colonel put up his hand, and the room instantly went quiet. \n\n\"How do you get your money,\" the colonel demanded. \n\n\"I ask nicely,\" Joel smiled. \n\n\"In case you haven't notice, Mr. Winkman, no one thinks this is funny.\"\n\n\"Least of all me,\" Joel accused. He paused and took a sip of lukewarm of coffee. \"I have a code about money, too. I only take money from people who have excess wealth. I am never greedy \u2013 I never take so much that it affects their very comfortable life style. And as you already mentioned, nothing I do is illegal. In the eyes of the law, I simply ask politely for a gift.\" \n\n\"Have you spoken with anyone else about this power?\" the colonel asked. \n\n\"Yes,\" Joel nodded, \"Paul Granger. He was the captain of the catnap flight. No one else.\"\n\n\"Does he have this power?\" the colonel asked.\n\nJoel was getting tired and frustrated. \"He does, but I am not certain he has it to the same degree I do, or if he does, he is more reluctant to use it.\"\n\n\"When was the first time you used this power,\" the colonel asked.\n\n\"I don't know,\" Joel crossed his arms across his chest.\n\n\"Mr. Winkman, it doesn't help your own case by not cooperating,\" the colonel warned.\n\n\"I'm not being uncooperative,\" Joel protested wearily. \"Looking back, it is possible I used my power for the first time at the press conference two days after the catnap flight. I asked a woman reporter if she really wanted to ask that question, or something like that, and she apologized. I was not aware of my powers then, but in retrospect, I may have used them then. Shortly after that, I divorced my wife \u2013 which had nothing to do with my new powers, by the way. But when I negotiated the arrangements with her, a normally argumentative person was completely agreeable to my suggested terms. I was not deliberately using my power in those discussions, but it is possible that I did.\" Joel took another sip of cooling coffee. \"So my honest answer is, I don't know.\"\n\n\"Okay,\" the colonel nodded, \"when did you first use the deliberately.\" \n\nFor some reason Joel lied. He had been honest until now, but he did not mention Jen, which is when he first figured it out. \"I went to a shopping mall, and I started experimenting. I had a suspicion. So I spoke with both men and women, and very quickly discovered women were very receptive to anything I said, and I have no influence over men.\"\n\n\"How long did this experiment last?\" Colonel asked.\n\n\"Three days. I rented a hotel there.\"\n\n\"And you took women to your hotel room?\"\n\n\"Some of them, yes,\" Joel nodded.\n\n\"And you had sex with those ones?\"\n\n\"Only some of them,\" Joel qualified. \"My real purpose was to find out what the limits of my powers were.\"\n\n\"And what did you discover?\" the colonel asked.\n\n\"I discovered I have no limits. I could make a woman do anything. I did not do this, you understand, but I concluded I could make a woman jump off a bridge to certain death. I even predicted the woman murder/suicide scenario that happened in Dallas in a conversation with Captain Granger. I believe I could make a woman pilot crash an aircraft without me being on the plane.\" Joel took another sip of coffee. \"I completely agree with you that, unchecked, this power is a threat to national security. That's why I developed my code.\"\n\n\"Do you believe you are a threat to national security?\" the colonel asked.\n\n\"No,\" Joel shook his head, \"and that's not why I developed the code.\" He paused. \"I developed the code because I refused to become the person who would destroy other people's lives. I refused to become the person that forced Christina and the two other girls to dance naked on a crowded restaurant bar. You should go talk to them. Their lives are ruined. They are young, sweet girls, and they have no future. Their parents are completely devastated. Their naked pictures and videos are everywhere. They literally cannot go to a coffee shop now. They will never get a proper job.\" \n\nJoel finished his coffee. \"When I saw how completely their lives were destroyed, I became bitter \u2013 really angry. I don't have a problem with someone with this power making a girl fuck him, as long as he follows a sensible code. But that was sport for cruelty. It was vengeance without a cause. It was playing God for no other reason than for your own giggles at the expense of three people's lives. It was disgusting.\" Joel realized he had riled himself into quite a froth of anger. \n\n\"Tell me about Jenny Riverton,\" the colonel said\n\nJoel's heart skipped a beat. \"What about her?\" he protested defensively. \n\n\"Is she one of your, shall we say, controlled subjects?\"\n\n\"No.\" Joel said curtly. \n\n\"Not at all?\"\n\n\"No.\"\n\n\"Not ever?\"\n\n\"Once, but not now,\" Joel admitted.\n\n\"Tell me about the one time.\"\n\n\"It was our first night.\"\n\n\"Does she know?\"\n\n\"No.\"\n\n\"What is going to happen when this goes public? Will she figure it out?\"\n\n\"Quite probably,\" Joel grated, \"almost certainly.\"\n\n\"And when she does find out, what will happen.\" Joel didn't answer. \"Mr. Winkman, what will happen when she finds out?\"\n\n\"I'll lose the best thing that's ever happened to me,\" he said dejectedly. \n\n\"Won't you just control her, make her like you?\" the colonel insisted.\n\n\"No,\" Joel said. \"It's not like that.\"\n\n\"You're just kidding yourself, Joel. You know you'll do it.\"\n\n\"No,\" Joel was starting to fume.\n\n\"Come on Joel,\" he said, \"isn't it just about the sex anyway? I mean, come on! Look at her!\"\n\n\"NO!\" Joel yelled. He jumped up to his feet so quickly his chair went flying backwards, clattering across the hard floor. One of the sergeants standing behind him walked toward Joel to put him back in his chair, but the interrogator caught his eye, and shook his head no. The sergeant stepped back. \"If you think that's all she is to me then your research isn't worth shit,\" Joel yelled at his interrogator. \"I will disappear forever before I make Jen do those things against her will.\"\n\n\"You mean do those things again,\" the colonel emphasized again. Joel stood with balled fists, staring the colonel down. \"Let's take a break,\" the colonel suggested. \"Clear the room,\" he announced to everyone else. \"Give Mr. Winkman some space.\" He nodded to the lieutenants behind Joel, who picked up Joel's chair and left Joel alone.\n\nThey reconvened fifteen minutes later, but a much smaller group this time. The colonel and two others. A woman in civilian's clothing, and an armed Air Force sergeant. \n\nThe three sat across from Joel at the head of the 'U' table. \"Joel,\" the colonel said, \"you can see where this is heading. You're a smart man. Your life is not sustainable. When this breaks, and you know it is only a matter of time, now, Jenny is going to figure it out, and she'll walk out. You are going to become a pariah \u2013 you and the others. But you can change that before it's too late.\"\n\n\"It's already too late,\" Joel said quietly. \"I already know I'm on borrowed time. Once this goes public, Jen will figure out our first night. And then there will be women everywhere who accuse me of ... whatever. All I'm trying to do is get Jen into a place where she is bomb proof when I explode.\"\n\n\"That's very noble, Joel,\" the colonel nodded, \"but futile. Even you must know that.\"\n\n\"No, it's not futile. Look, my damage is already done. I'm a ticking time bomb. My plan is to slip out of Jen's life in the least damaging way to her.\"\n\n\"Joel,\" the woman spoke for the first time, \"are you considering suicide?\"\n\n\"No, I am just talking about disconnecting from Jen in a way that doesn't hurt her.\"\n\n\"There's no such thing, Joel,\" the woman pointed out the obvious. \"If she loves you as much as you obviously love her, it's going to hurt no matter why you're suddenly gone.\"\n\n\"Well, doc, I'm out of ideas.\" He just assumed she was a psychologist. \n\n\"Did you arrange the Google interview?\" the colonel asked. \n\n\"No,\" Joel shook his head. \"That was all Jen. I got her in the door at the conference, that's all. I didn't even know Google was going to be there.\" Joel paused. \"That's what I'm talking about. I'm toxic right now, and I know it, but the Google thing is clean, because I wasn't part of it. So that's one way of getting Jen into a good place before I'm gone.\"",
        "\"So what is the end game here, Joel? What's your plan?\" the woman psychologist asked. \n\n\"I don't have a plan as much as I have a concept.\"\n\n\"And where do you see yourself after Jen is gone in this concept?\"\n\n\"I don't know. I'll either be taking down assholes, or swimming at the bottom of a bottle. Probably both.\"\n\n\"And lots of girls?\" she asked. \n\n\"Yeah,\" Joel nodded. \"That sounds right.\"\n\n\"Except they'll be on to you by then,\" the woman pointed out. \"You won't just be toxic, you'll be glowing bright neon toxic. They'll see you coming.\"\n\n\"Probably,\" Joel nodded.\n\n\"So where does that leave you?\"\n\n\"Look, doc, I have a short time to make things right. That's all I have. What happens to me after that doesn't matter.\"\n\n\"But we think it does matter,\" the colonel disagreed. He paused for a while, as if struggling what to say next. \"Suppose we could make you clean \u2013 non-toxic.\"\n\n\"How?\"\n\n\"We'll work out the details later. But supposing we could \u2013 call it detoxify you. Suppose we could make it so that if \u2013 and I really mean if \u2013 you fly straight and narrow, you can enjoy a long natural life with Jenny.\"\n\n\"I'd say you're full of shit,\" Joel offered without sarcasm. \"Even if I can get Jen to accept that first night, which is fifty-fifty, there will be dozens of women out there who might remember me. I told them not to say anything, but who knows how long that command lasts.\"\n\n\"Joel,\" the colonel challenged, \"you're forgetting who you're talking to. If we want a problem to go away, it goes away.\"\n\n\"What,\" Joel shrugged skeptically, \"you're going to disappear dozens of women?\"\n\n\"No, of course not,\" he answered. \"We will convince them their best interests lie in not implicating you.\"\n\nJoel looked at him for a long time. \"You're serious?\"\n\n\"Joel, I don't think you appreciate what you've done. You can reach out and touch anyone with impunity. You have taken it upon yourself to police the one community we cannot touch. Can't you see we have a vested interest in helping each other?\" \n\nJoel just looked at him for a moment. \"So I'm either your wet dream or your worst nightmare.\" He finally said. The woman smiled. \n\n\"Not to be too overdramatic about it,\" the colonel corrected, \"as I said earlier, you are either one of us, or one of them. You can see why understanding your intentions is central to any position we take on this.\" Joel nodded. \"We want you to continue your operations, but we'd like to fine tune it a bit.\"\n\n\"Fine tune,\" Joel interpreted, \"as in completely re-assign.\" \n\n\"No,\" he said. \"We're worried about your inclination for escalation. Joel, did you infiltrate a government computer network to declare a private American citizen a deadbeat dad?\"\n\n\"Like you said,\" Joel put his hands up, \"I didn't do anything.\"\n\n\"That's exactly the attitude that will cost you dearly,\" the colonel warned. \n\n\"So I plead the fifth, then,\" Joel answered.\n\n\"Okay,\" he said, \"fair enough, but remember, we're not dealing with the courts, here, so I am accepting your plea as an admission of guilt.\" The colonel paused, letting that sink in. \"Joel, let me make this as clear as I know how,\" he warned. \"If you ever attack another municipal, state, or federal government on US soil again, or if you take the life of an American citizen, I will put you in the ground,\" the colonel growled. \"Fifth or no fifth. Are we clear, Joel?\"\n\nThe chill returned to Joel's spine. \"Very,\" he croaked, and cleared his throat.\n\n\"Joel, you are doing the job we cannot, and we want to help you do that, but there must be absolute limits \u2013 boundaries that can never be crossed. You already know that with your code. We will spend time reviewing these new boundaries. But if we cannot agree on these boundaries, then we have a problem.\" Joel understood that to mean he had the problem.\n\n\"Okay,\" Joel nodded. \"So I help you. What do I get out of this ... beyond staying above ground?\"\n\n\"What do you want?\"\n\n\"I want the impossible,\" Joel said without sarcasm. \"I want Jen to never know about me, even after it all breaks.\"\n\nThe colonel smiled for the first time. \"You've come to the right place, Joel. Impossible is what we do.\" \n\nJoel stared at him for a long time. \"Well, if that's not asking for a leap of faith, I don't know what is,\" Joel pointed out skeptically.\n\n\"Joel,\" the colonel retorted, \"we are the most powerful military organization on planet Earth, and we are asking you to help us contain a critical threat to our national security. Which one of us is taking the bigger leap of faith, here?\"\n\nJoel studied the colonel for a long time. \"You're serious about Jen?\"\n\n\"If that is the cost of winning your support, I am deadly serious,\" the colonel assured him. Joel didn't think the use of the word deadly was a metaphor. \"But you have to understand,\" the colonel continued, \"from now on, you have to fly straight and narrow. We'll fix everything you've done until now, but from now on ...\"\n\n\"Yeah,\" Joel complained, \"I get it. Powers just for good.\"\n\n\"It's best for you and Jenny,\" the psychologist reaffirmed. \n\n\"What about the money?\" Joel asked.\n\n\"That probably has to stop, too,\" the colonel nodded. \"As long as you stay above board with the IRS, which you seem to be doing, we're less concerned about that, but if you are helping us, the US Government cannot be seen to be cooperating with someone who charms money out of rich people.\" The colonel added, \"Keep what you got, but we'll be funding your operation from now on.\" As an afterthought, he asked \"just how much did you get so far?\"\n\n\"Sixteen million,\" Joel answered. \n\n\"I'm in the wrong business,\" the colonel shook his head. \n\n\"So I have a problem,\" Joel said. \"You seem to know everything about me. I don't even know your name. I don't do business with people I don't trust, let alone don't know.\"\n\n\"So what do you want to know?\" the colonel asked. \n\n\"Who are you?\" Joel asked. \"Organization, rank, name.\"\n\n\"Colonel Brian Greene, United States Air Force, Office of Special Investigations,\" he said without hesitation. \n\n\"Office of Special Investigations?\" Joel repeated. \"I've never heard of it.\" \n\n\"The OSI is an agency that operates outside the normal chain of command, which gives us a wide degree of latitude, although even we don't have as much latitude as you seem to have taken. We protect against terrorism, espionage, serious criminal threats, and national security threats.\"\n\nJoel nodded. He was considered a national security threat who was not breaking the law. There was no agency authorized to do what Joel was doing, and no agency authorized to stop Joel. Maybe the Office of Special Investigations was the closest fit. \"And all the other people from before?\" Joel asked.\n\n\"Are from various establishments and agencies of the US Government.\"\n\n\"Who do you report to?\" Joel asked. \"I don't mean in your chain of command. Who do you report to on this particular assignment?\"\n\n\"The Chairman of the Joint Chiefs of Staff,\" Colonel Greene said. Joel knew the Chairman of the Joint Chiefs reports to the President of the United States. 'This is getting real' Joel thought. \n\nColonel Green asked, \"Are all your researchers under your control?\" he asked.\n\n\"One hundred percent,\" Joel nodded. \n\n\"Do you pay them?\"\n\n\"Technically, I don't,\" Joel explained. \"But if you're asking if they're slave labor, the answer is no. They are well paid with excellent benefits.\"\n\n\"And when they go home ...\"\n\n\"They tell their sweethearts they work for a marketing research company,\" Joel explained, \"and they say they work in very sensitive commercial data they are not allowed to talk about.\" They sat for a moment. \"So I suppose now you are going to tell me I have to surrender all my research data,\" Joel complained. \n\n\"We're in murky waters, Joel,\" Colonel Greene explained. \"We're not allowed to gather the kind of intelligence you are, but we need it. For now, we think it best you continue your operations, and feed information to use under the cloak of deniability.\"\n\n\"Eventually that cloak is going to fade,\" Joel warned. \n\n\"We know that,\" Colonel Greene nodded. \"The truth is, I should not be having this conversation with you right now. I should turn you over to the FBI. But I have orders, and this is where it lies.\" Colonel Greene shifted topics. \"I'm curious, Joel, how do you select your targets for financing?\" \n\n\"What do you know about the Shopping Mall Channel?\" Joel answered Colonel Green's question with a question. He went on to explain his method of receiving gifts from rich ladies without bleeding them dry.\n\n- - - \n\nIt was way too soon for Jessica to decide if Ryan was the one. She'd only known him for a few weeks, but he was definitely one to watch. He was tall, cute, and wealthy. He didn't seem to have a job, which didn't bother Jessica as long as he could afford her lifestyle. He said all the right things. He flirted without pressuring, sported without boasting, and shared without being needy. He struck that elusive balance between masculinity and sensitivity. \n\nSo far all the signals were good. Ryan Bradley let her set the pace. She hadn't slept with him yet, although she was pretty much ready. He was comfortable moving at her speed. Ryan focused on Jessica without making her feel like he expected her to put out.\n\nJessica was blessed with the archetypal model's face \u2013 blonde, blue eyes, high cheekbones, neat, trim eyebrows, and a winning smile with pearly white teeth. Her shoulder length, thick, wavy honey blonde hair had highlights that complimented her clear skin smile. At five foot seven, she had a slender figure, and was proud of her all-over-tan, unpierced, and untattooed body, except for pierced ears. She sometimes wished her breasts were larger, but implants was out of the question \u2013 Jessica was an all-natural kind of girl. Her dark areolas were the same color as her nipples. She always kept her armpits, legs, and pussy bare. \n\nShe was getting dressed for a dinner party Ryan had invited her to. He said it was a do-good fund raiser dinner for something-or-other at five thousand dollars a couple. He didn't want her to get all serious about it \u2013 but she shouldn't go in jeans. Preferably a skirt or dress. \n\nThe hot Albuquerque night demanded something versatile, because so many people set their air conditioners at two degrees above freezing. She decided on her pink and pastel blue floral print long dress. It was a light cotton fabric with spaghetti straps, which was perfect in the warm air, and she pulled over an open cardigan in case the air-conditioning ran into overdrive. She had a pair of muted blue high heels that matched the floral prints of her dress. \n\nJessica checked herself in the mirror one last time. She decided to ditch the broach on her sweater, and go with the light gold chain around her neck instead with the ruby encrusted crocodile that matched her red lipstick. \n\nRyan rang her doorbell at seven o'clock sharp. Even though she was ready, Jessica told him to wait a few minutes while she went upstairs and admired the nail treatment she had done just that afternoon. She wasn't his little toy he could just boss around and expect to be right on time, after all. \n\nAfter ten minutes of wasting his precious time, Jessica came back down stairs, and found Ryan flipping through one of her fashion magazines in the living room. She smiled at her domesticating influence over him. He walked her to his car \u2013 a new Ford Mustang convertible. She was disappointed when she first saw his car two weeks ago \u2013 he should at least drove her around in an expensive, high-end Japanese or German whatever, but his reptilian car brain liked this one. He opened the door for her, and closed it once she settled in. She asked him to put the top up so her hair wouldn't be mussed up by the wind. At a push of a button, the car roof unfolded out of the trunk pocket and covered over the cockpit. \n\nRyan navigated east to the Foothills North area, taking Tramway Boulevard, and turned onto Spain Road toward the distant hills. Jessica noticed he was not using his GPS, but thought nothing of it. Ryan pretty much used his GPS to go anywhere else. When they had arrived at the house, several other cars were already parked in the long semi-circular driveway. Ryan parked in a free spot, opened the door for Jessica, and they walked together to the massive house nestled into the foothill of a five acre lot. The houses in this neighborhood were all sand stone colored block rectangles, but this had four round towers \u2013 one on each corner. They were greeted at the front door by the host, David, who welcomed Ryan and Jessica. \n\nWithout being prompted, Ryan handed David his business card. David flipped the card over, and saw Jessica Morgan was already neatly written on the back of Ryan's business card. David slipped the card through a narrow slot in the top of a small wooden box on a stand just inside the front door. David winked at Jessica, and said it was a for a door prize draw. \n\nSeveral other couples were already milling around the living room all in their mid to late twenties, just like Jessica and Ryan. David introduced them, knowing the men's names better than the ladies', which seemed natural to Jessica if these were all coworkers. It was a fun and relaxed atmosphere. A few more couples arrived after Ryan and Jessica. At eight o'clock they were invited to the dining room \u2013 an immense chamber with a massive round wooden ring table. The torus shaped table had an open center \u2013 like a huge, flat, wooden ring. It was easily twenty feet across on the outer diameter, and the table surface was three feet deep, leaving a fourteen foot round open space in the middle of the ring. Jessica had never seen anything like it. \n\nThe seating arrangement was boy-girl-boy-girl all the way around the huge table, with couples seated directly across from each other. So Jessica was seated in between two men, and directly opposite her, Ryan sat twenty feet away, between two women. As soon as she sat down, Jessica grew self-conscious, as she could see through the open center of the table, and up the dresses and skirts of women across from her. All the women were wearing skirts or dresses, and they all pushed their hems down and crossed their legs to avoid exposing themselves to their distant neighbors.\n\nOnce they were seated, a man wearing all black entered the dining room. He was not part of the party. From the corner of the room, he called for everyone's attention, and Jessica, along with everyone else, turned around to look at him. He spoke for a while, but Jessica must have tuned out, because she was not sure what he said. In any event, he retreated from room, and Jessica returned her attention to the dinner table. \n\nKitchen staff started carrying out plates of food. By chance, they started at the opposite side of the table, where Ryan was seated. As she waited for them to reach her side of the round table, Jessica was startled when the man to her right put his hand on her bare knee. She looked at him. He just smiled with a strange expression. Jessica didn't understand why, but she smiled back. Suddenly Jessica felt a hand on her other knee, and she snapped her head around to her left. That smiling man was sliding his hand up her thigh. Jessica wanted to stop him, but she didn't. To her own surprise, not only did Jessica not stop him, but she uncrossed her legs and spread them open wide, giving both men unhindered access to her inner sanctum. \n\nJessica looked across at Ryan with alarm, and was horrified to see he was not trying to hide the fact he had reached both his hands below the table to the girls on either side of him. Both girls also had opened their legs wide, and Ryan had already pulled their dresses up to their hips, and he was petting both their pussies inside their panties. Jessica wanted to scream at him, but she couldn't say a word. Ryan now saw Jessica looking at him. He smiled, and air kissed her from across the table \u2013 Jessica wanted to get up and kick that smirk right off his face, but she remained seated with her legs splayed open for her two neighbors. \n\nNow Jessica felt both men her pull her dress up to her hips. She wanted to stop them, but, she could not put her own hands below the table. Too soon, they were roughly fingering her panty covered crotch. Jessica looked all around the table, and every woman sat with her hands above the table with her legs spread wide while the men pawed at their feminine treasures. \n\nAs they waited for their food to arrive, the man to Jessica's right took his steak knife, and lowered it to Jessica's crotch. She wanted to scream and stop his attack, but she couldn't say a word, and she couldn't put her hands below the table, and she couldn't close her legs, and she couldn't get up and run away. He slipped the blade beneath the hip side of her panties, and cut the fabric apart. The man on the other side did the same, and they pulled the front piece of her underpants down, exposing Jessica's bare pussy for all the people across the tablet to see. \n\nOne man pushed his rough finger up her bare pussy, and Ryan across the table laughed at her as she sat there, letting her neighbor finger fuck her precious womanhood. The men on either side of Jessica took turns with their fingers inside her while she just sat there and let it happen.\n\nThe food was served. It was roast beef, mashed potatoes, green beans, cooked carrots, and dinner rolls. The men gave Jessica's delicate region a rest for a while as they started eating. She picked at her food, but ate little. The men around the table chatted excitedly among themselves while Jessica remained completely quiet. Looking around the table, she noticed all women also remained silent. Many other women also had their panties cut off by now.\n\nThe dinner conversation was like none other Jessica had ever heard. Men were openly discussing and comparing women's bodies, talking about, pointing at, and playing with this one's tits, that one's cunt, I bet she sucks like a vacuum, she can go you night long, how he'd like to do this one up the ass. The tawdry men's banter dominated the dinner conversation while the women sat in open legged silence. \n\nOnce she opened her legs, Jessica could not close them again. Nor had any of the other women. All the girls still sat around the table with their legs spread wide open, usually with their skirts hiked up and there panties cut off for everyone to ogle at their bare pussies. Men frequently reached next to them to pet their neighbor's pussies, finger fuck them, or shove food up their fuck holes. \n\nMeanwhile kitchen staff were walking around the table serving wine and water. They served seconds while a woman chef carved meat off a side of roast beef on a separate table just behind Ryan across the room from Jessica. Jessica noticed all the servers were all pretty girls, and all wore short black skirts and short sleeve white blouses. When the first girl served wine to the man to Jessica's right, Jessica noticed the man slipped his hand up between the girl's legs, obviously finding her pussy, and played while she poured the wine without protest or spilling a drop. The man to her left fondled her ass inside her skirt. \n\nThe all-female kitchen staff cleared the plates, and there was a pause before dessert was served. To her shock, Jessica saw the same kitchen staff serve out the dessert plates, but now they were all topless. They had gone into the kitchen and stripped off their blouses and bras. They were serving pieces of key lime pie with whipped cream on top, but only to the men this time. As they did, several men around the table grabbed and fondled the servers' tits as they put the plates down. Two of the topless girls toppled their key lime pie plates over because of the men's disruptive behavior. They simply returned to the kitchen and came back with more pieces.",
        "Before the men started their desserts, the man in black returned. He announced something again, and then he left the room again. Just around that time, Jessica decided to go topless. That meant taking her sweater and dress off. As she stood up, her sliced apart panties fell away. She noticed all the other women were also taking their tops and dresses off. Within a minute, every girl sat down again bare breasted. Many of them, like Jessica, had been wearing dresses, and were now completely naked. \n\nWhile the women were stripping off their upper clothing, the staff were pouring wine and water for the men. There were breasts of all sizes around the table, but at least half the women were in the small to medium range, like Jessica. As soon as Jessica sat down, both men next to her started pawing and playing with her tits, while one also returned to finger fucking her pussy. Jessica sat idle with her legs spread wide and hands locked to her sides, unwilling to defend herself from these groping intruders. She looked across the table, and saw her ex-boyfriend smearing whipped cream from his dessert over one of the girl's nipples, and then licking it off. The man on the other side of her was shoving his whip cream slathered finger up her pussy. Jessica and the girl met each other's eyes, and stared at each other in silent defeat. \n\nThe topless kitchen staff returned after dessert to clear all the plates, silverware, glasses and napkins until the wooden table was bare and when they were done, the host, David, pushed away from the table, and the six girls crawled under his segment of the table into the open center, and stood up. When they were all inside the round table, David returned to his seat, blocking their exit. \n\nThe man in black returned. He pulled a piece of paper out of his shirt pocket. \"Okay, server Faith,\" he called out, reading from his paper, \"hop up on the table and start walking around.\" A brunette, about five foot six, pulled herself onto the ring table, and walked the whole circle. She had narrow hips, a slim waist, and average sized breasts. She had a pretty round face with brown eyes. Men were shouting and cat calling at her as she slowly walked circles around the ring table. \n\n\"Okay gentlemen,\" he called out, \"for those of you who don't know the rules, do not touch a girl while she walks on the table. We don't want her falling on one of your and knocking you over. And it is a cash only deal, Gentlemen. Cash only.\" He let Faith walk one more revolution around the table. \"Okay, Gentlemen,\" he started, \"Faith can be yours all night. She will do everything, and when I say everything, gentlemen, I really mean it. Who wants to start the bidding at two thousand dollars?\"\n\nSomeone to Jessica's left bid two thousand, and then to her right bid twenty-two hundred. The auction continued while Faith walked circles around the ring table. The bid had reached thirty eight hundred. \"If someone bids four thousand, the rest of her clothes come off,\" the man in black called out, and immediately someone bid four thousand. At the auctioneer's command, Faith took off her skirt and panties, and tossed them into the floor in the middle of the table. \n\nBidding ended for Faith at forty-four hundred dollars. The winner was two men to Jessica's left. He stood up, walked to the auctioneer, and paid him in cash. The auctioneer commanded Faith to come to him, and she crawled under the table while men pawed and groped her, and then she stood next the auctioneer. He commanded her to do everything the man standing next to him told her to do, no exceptions, until noon the next day. After that, she would never talk about this night to anyone. \n\nThe winner took Faith back to his chair at the table, and told Faith to sit on his lap while he groped at her breasts. \n\nNext up was Nina, a black haired exotic beauty with deep blue eyes. She could have been an Amazon jungle queen \u2013 tall, broad shouldered, with a narrow waist that flared out to solid hips. She had long legs, and large, firm breasts that jiggled as she walked around the circle. She was six feet tall. The auctioneer started the bidding at two thousand, and it quickly went past three thousand, then four. At five thousand he commanded her to take the rest of her clothing off, and she had just a stripe above her pussy and a little kitty cat's face tattooed beside that. Bidding ended at sixty-seven hundred, and Nina was commanded to obey her new owner until noon the next day. \n\nNext was Maddison \u2013 a short blonde with big tits. She went for forty-nine hundred. A fiery redhead came after that \u2013 Kennedy \u2013 and to Jessica's shock Ryan was bidding on her. He went as high as forty-two hundred, but ultimately was outbid by several other men with deeper pockets until she topped out at fifty-seven hundred. \n\nHaley was second last. She was a tall, slender brunette with brown eyes, narrow hips and smaller tits. She went for the least amount at thirty-eight hundred. \n\nThe auctioneer saved the best to last \u2013 Cameron, a vivacious blonde with the whole package. Tall, blue eyes, high cheek bones, long neck, big, firm tits, slender waist, round hips, and long legs. Bidding started at four thousand, and Cameron finished out at ten thousand, three hundred. \n\nThe man in black had one last duty. David, the host, brought the wooden box from the front door with every man's business cards in it. He went around the table, starting with the man to his left. He told each man to pick one card out of the box. If he picked his own, he had to put it back and take another. Then, David gave the selected card to the auctioneer in black, who read the girl's name on the back of the card out loud, and commanded whoever answered to come over to the auctioneer beside the stranger who picked her card. He then commanded the girl to obey the man who picked her card. She had to do everything he told her to do, no matter what, until the bell rang.\n\nJessica was paired up with a six foot two middle aged man who easily carried an extra hundred pounds on his considerable frame. He brought Jessica back to his seat, which was only three men from Ryan. She was still in the dining room with everyone else. He dropped his oversized pants and shorts, leaned back into his chair to lift his belly off his lap, and told her to suck him. Bound by her service duties, Jessica knelt down between his knees, and took his average sized member into her mouth. She had to turn her head sideways so she wouldn't slap her forehead on his belly as she bobbed up and down. \n\nWhile Jessica orally serviced her hefty master, the catnap auctioneer pocketed five thousand dollars from every man just to join the party, and an additional $35,800 when he auctioned off the staff, for a total haul of $95,800 in cash. This was his fourth party, and the second one at this house, and by far the best haul. He was planning to host two parties a month, maybe one a week. At this rate, he stood to make maybe five million a year in cash. \n\nJessica was busy sucking her corpulent owner when he pulled out, and told her to face the table and bend over. As Jessica stood up, she was horrified to see four men in the room with professional, shoulder-mounted, video cameras taking close-ups, panning shots, steady shots, up-the-pussy shots, and everything in between. Wearing only her blue high heel shoes and her jewelry, Jessica faced the round ring table, and bent forward as commanded. A cameraman rushed behind her for a close-up as she waited for tubby. \n\nWith the tenderness of a bull rhino, her overweight owner slammed his hips forward, boring his hardened cock deep into her dry pussy. Unable to defend herself, Jessica shrieked in pain. Her master told her to shut up as he used his considerable weight to auger his prick up her stinging fuck hole a second time. Unable to make a sound, she cried in silence as he savaged her from behind. \n\nAs the pain faded into numbness, Jessica was able to focus again, and she saw Ryan had paired up with the man next to him, and they were swapping girls back and forth, both taking turns being fucked and sucked. I'm going to kill him, was all she could think as she watched Ryan go from the woman's pussy to her asshole. Thankfully, Jessica's master was not anally inclined. She could hear his out-of-breath wheezing as his flabby belly bounced off her ass on each thrust. Mercifully her natural lubricants had come alive, and only the original pain lingered. Jessica took solace it would soon be over as she heard his hoarse lungs rattle \u2013 he would either cum or stroke out from heart failure. Finally he dug his fat fingers into her hips and drilled his cock one last time into her pussy as she felt his warm cum fill the base of her vagina. At last he pulled out. \n\nHe ordered Jessica to lie down on her back on the table, and masturbate until she made herself come. \"Here you go boys,\" he called loudly to the cameramen, \"get a load of this one,\" as he pulled his pants back up. \n\nJessica lay down and slipped her index finger between her folds, and started circling lightly around her clit, the way she does when she brings satisfaction to herself. For her, orgasm never came quickly, and Jessica knew she was in for a long, mortifying ride as the camera moved about her, zooming in and out of various parts of her female anatomy. \n\nShe knew if she played with her tits, it would go faster, and Jessica was trying to calculate if it better to get it over with and give the cameraman more titillating video for later review, or go slow and steady with just the finger/clit action. She decided faster was better, so she closed her eyes, and started brushing the fingers of her left hand ever so lightly over her breasts, like whispers of a feather, and the sensation sent delicious shivers up her spine that hastened her pleasure center's arousal toward climax. \n\nJessica realized her hips had started rocking \u2013 they seem to do that on her own when she pleasures herself \u2013 it was a sign of passing beyond the first stage or arousal, and now she rubbed two fingers up and down her slit, capturing her clit between them as they slid past. She started cupping her other hand at the bottom of her tits, caressing them, sending new sensations to her pleasure center. Her breathing quickened, and with her eyes still closed, the sounds of sex everywhere around her, which once repulsed her, now amplified her erotic senses, and Jessica felt herself pass into the third and final stage. \n\nJessica vibrated her fingers back and forth in tiny, rapid movements directly over her clitoris, and her hips were thrusting with authority, lifting off the heavy wooden table. She now jiggled her whole breast side to side in rapid movement. She felt herself moan with delightful anticipation, and the quivering of her fingertips intensified, driving Jessica toward the finish line. \n\nJessica was never a screamer. She sucked in a huge breath and tilted her head back as the first wave blasted out of her clit and electrified every corpuscle in her body. She continued her digital vibration, firing out a second wave that put her body into a single, rigid convulsion. The third wave hit, which was less intense, and more peaceful, and at last Jessica let out her breath in a long, satisfied moan. She relaxed her muscles, and opened her eyes, and was distraught to see two cameramen documenting her climax. \n\nHer overweight master was nowhere to be seen \u2013 he was a hump-and-dumper. He got his money's worth, and left while Jessica was auto-arousing herself under his parting command. It was against the rules. If you had to leave early, you were to find the man in black, and he would properly release your girl and send her on her way with a command to never tell anyone about this. \n\nJessica was left in an aimless trance. She had completed her master's parting task, and still under the man in black's command to obey her absent owner, Jessica wandered the room in a betwixt state \u2013 not of her own free will, but not under anyone else's control. \n\nShe saw Ryan fucking one girl in her pussy again while his partner fucked the other. Both girls were lying with their backs on the table. Ryan was on the inside of the ring table, facing out as he fucked the girl with her legs spread high in the air. The other girl was facing the other direction, and Ryan's partner was on the outside of the ring table, facing in, fucking his girl. The girls lay side by side on their backs in opposite directions, and they were suckling and fondling each other's breasts, no doubt at the men's behest. Occasionally the two men would meet with a celebratory fist bump over the girls' naked bodies. \n\nOn outward appearances, Jessica roamed the room aimlessly in a fugue state, but inside her mind raced lucidly. She remembered Ryan driving her to the party, and just now Jessica realized Ryan didn't program his GPS because he had been here before. And there were no words spoken between Ryan and Dave at the door \u2013 without prompting, Ryan handed his business card to Dave and Jessica realized now he had already written her full name on the back of the card \u2013 most likely before Ryan even picked Jessica up. \n\nThe first time she looked across the grand table into his eyes, when Ryan had his hands on both those girls' twats and Ryan air kissed her, Jessica was shocked and confused. No longer. The meaning of that kiss was now all too clear. Ryan brought Jessica here with but one purpose. To Ryan, Jessica was a walking cunt with a pair of tits and a sucking mouth. She was good for a fuck and a blowjob \u2013 nothing more. She was sexual livestock. All that courtship over the past few weeks was an elaborate ploy to lure her to the trading market. \n\nOutwardly, Jessica walked like the undead \u2013 slowly, aimlessly. In her betwixt state, Jessica didn't exactly have control of her actions \u2013 she couldn't decide to directly walk or sit down in any specific place \u2013 but she could vaguely guide where she wanted to go, and so Jessica slowly, seemingly aimlessly, rounded the table toward Ryan. \n\nWhile her outward appearance was calm and sedate, inwardly, Jessica's seething hatred for Ryan mounted as she watched him cum inside another girl \u2013 another duped livestock. Just another cunt for him to dump his jism in. Jessica was near Ryan now as she watched him pull his unsheathed cock out of her pussy, but she was on the opposite side of the table. He was inside the ring table, and she was walking around the outside. As she watched Ryan pull his dripping cock out of her pussy, Jessica remembered her owner hadn't used a condom either. Jessica was on the pill, but she would have to go for STI testing. \n\nRyan was the last of the men to reach orgasm. As soon as he was done, the host, David, rang the bell, and all the women were released from their invisible bonds as the man in black returned to the room. All the other women were dazed and disoriented \u2013 experience told the man in black it would take a full minute for them to become coherent enough to even understand his next command, so he waited. \n\nBut not Jessica. She was alert. Not wanting to attract attention, she moved slowly. To her right was the massive ring table, and Ryan was crawling underneath the table \u2013 toward her \u2013 to return to the outer side of the ring. To her left was a serving buffet where the kitchen staff had carved and served out second helpings of roast beef, and there beside the still warm carcass of cattle was a twelve inch carving knife. Jessica slowly, deliberately, reached for the handle. Her back was to Ryan, who had just finished crawling out from under the ring table, and as he stood up, Jessica spun on her heel and sunk the full depth of the twelve inch blade deep into his naked gut. She pulled it all the way out, and Ryan stepped backward with shock and horror on his face. He backed into the ring table, resting against its edge, which propped him upright, and she plunged the blade in again. And again. It wasn't until the fourth stab that the man in black absorbed the horrific magnitude of the scene unfolding before him, and he commanded her to \"STOP!\"\n\nJessica froze in her position with her hand on the hilt of the knife, with the blade stuck inside Ryan's belly. The three other stab wounds were now bleeding profusely, forming rivers of blood down Ryan's lower belly and legs. Gobs of green and brown viscous liquid oozed out of Ryan's stab wounds as his intestinal fluids escaped through the deep gashes, filling the room with a nauseating stench. \n\n\"Slit your own throat hard!\" the man commanded to Jessica in a blind fit of rage at this insolent cow that dared rise against her lord and master. Self-aware, but unable to stop herself, Jessica's eyes welled with tears and her heart pounded as she pulled the sharpest knife she had ever handled out of Ryan's belly, and with two hands on the grip, Jessica drew the edge across the left side of her throat, levering the blade into her flesh with all the might of both her hands. The incredibly sharp knife easily sliced through her neck muscles and tendons as Jessica screeched in horror, and she cleanly bisected her left jugular artery. Her hammering heart rocketed jets of bright red blood across the room, reaching the far side of the round table before Jessica dropped the knife and collapsed into Ryan. They tumbled sideways into a heap of nakedness, blood, and putrid effluence. \n\nOnly now realizing the misery he inflicted, the man in black retreated, and fled the house in panic without commanding the other naked service women to remain silent over what they saw and did. And he forget completely about the four cameramen. \n\n- - - \n\nJoel slept most of the flight from Seattle to Boston. He touched down just past five thirty in the afternoon on Thursday on another Alaskan Airlines flight. He never did meet up with Paul, but he did attend the two meetings Barry Silcove, his investment analyst, recommended. Joel attended those meetings primarily to maintain his cover for going to Seattle. He would have to send Barry out to do the real work later.\n\nJoel spent most of his time in Seattle with Colonel Greene, discussing protocols, rules of engagement, what was allowed, what was not allowed. Colonel Greene said Joel would need some training as a field agent \u2013 he was too easy to track now. \n\nColonel Greene asked Joel to provide a moment by moment account of his first date with Jen. Leave nothing out \u2013 no detail was too small. How many beers, what brand of beer, when did each of them go to the bathroom, where did each of them sit \u2013 every minute detail. \n\nThey spent two days in that facility, whatever it was, and then Joel was driven in the black van with no windows, and deposited with his suitcase in downtown Seattle, where he paid for a hotel room. He flew out Thursday morning at nine thirty, and the five hour flight put him in Boston just past five thirty in the afternoon with the time zones. \n\nJoel picked his suitcase off the luggage carousel in Boston. He turned around to head toward the main doors, and there, blocking his path, were two different US Marshal agents. \"Come on, guys!\" Joel complained. \"I just finished two days with you guys in Seattle. Whatever this is can wait.\"\n\n\"Actually, it can't,\" one of them said without introducing himself. His name tag read TYSON. \"You need to come with us.\"\n\n\"Which secret facility are you taking me to this time?\" Joel asked whimsically. \n\n\"Albuquerque,\" Marshal Tyson answered flatly.\n\n\"I didn't know you had a military establishment in the northeast called Albuquerque,\" Joel nodded with surprise. \n\n\"We don't,\" the Marshal said without humor. \n\n\"Oh, fuck me, guys!\" Joel stopped and dropped his suitcase to the floor. \"I'm not going all the way to Albuquerque. I just came back from a week on the west coast with a suitcase packed for four days.\"\n\n\"Colonel Greene said you had a choice. You can come peacefully or ...\"",
        "\"Come in handcuffs,\" Joel finished for him. \"At least let me call my girlfriend and tell her I'm not coming home.\"\n\n\"Colonel Greene wants you to understand your calls are being monitored,\" the US Marshal explained. \"Don't tell her the reason or destination of the trip.\"\n\n\"I don't know the fucking reason!\" Joel snapped, but he understood what Marshal Tyson was getting at. \"Give me some illusion of privacy, please,\" Joel said, and the two marshals backed away ten steps. \n\n\"Hi Jen,\" he said into the phone when she answered. \"Listen, I have some bad news ... No nothing like that. I have to go to Phoenix. I'm on my way there now ... No, it's some urgent thing \u2013 a company is under attack from a hostile takeover, and they want me to intervene ... A couple of days ... Seattle was good. I met two companies there. I think we can do something ... These Phoenix guys better pay me a fucking fortune to miss time with you,\" he responded to something she said. \"I love you too. I'll call you.\" He hung up.\n\n\"You realize I can't fly anywhere without flight attendants recognizing me,\" Joel pointed out to the lead marshal. \n\n\"We'll blindfold them,\" Tyson said without cracking a smile. It turns out he was able to fly without being recognized. Homeland Security happened to have a Gulfstream G280 idle in Boston, and Joel, along with his hilarious US Marshal friends flew directly to Albuquerque. It was nearly a five hour flight, and Joel slept most of it in the comfort of a large, luxurious seat.\n\nJoel was met by Sergeant Esterbrooks of the USAF OSI \u2013 the Office of Special Investigations at Albuquerque airport at ten o'clock at night, local time. Joel, the Sergeant Esterbrooks, and the two US Marshals took a large, black SUV driven by a woman Air Force sergeant. Obviously they were building some trust in Joel, or the word had not passed to Albuquerque. This SUV had windows, but Joel didn't know Albuquerque, so he still didn't know where he was going in the dark. They drove to what seemed to be just off downtown, to a low rise industrial area. Joel was escorted into the building by the male Sergeant Esterbrooks and the US Marshals. At the front security, Joel signed in and surrendered his cell phone, and the sergeant badged in, but the US Marshals did not come any further \u2013 clearly their job to deliver Joel to the facility was done.\n\nSergeant Esterbrooks led Joel to a conference room, where Joel recognized Colonel Brian Greene, who looked much more tired than Joel felt. They shook hands. The sergeant left the room.\n\nThere were two other people in the room apart from Joel and Colonel Greene. Colonel Greene offered Joel coffee, and Joel poured himself one from the urn in the corner of the room, and grabbed a muffin. When they were all seated, Colonel Greene introduced the two others: Detective Sheila Halton, Albuquerque Police Department, and Agent Jeff Spagnola, FBI.\n\nColonel Green started. \"Joel, everything discussed in this room is classified. Nothing gets out.\" Joel nodded. \"Joel, we've had another catnap murder suicide, but this one will spin out of control. It's going to get out. Soon. Things are moving faster than you and I discussed in Seattle, and you and I need to sort out what that means. That's part one. Part two is, we need your help on this one.\"\n\n\"Okay,\" Joel said shaking his head. This had to be huge to have a meeting at eleven o'clock at night. \"I'm in the dark, here. Bring me up to speed.\"\n\nDetective Sheila Halton of the APD described several accounts of women claiming to participate in an orgy where there was a murder suicide. One woman and one man were reported stabbed. It is believed they arrived together at the party. APD have been to the home they described, and they found traces of blood in the dining room where the witnesses say it happened. No bodies were recovered, but the DNA is going out for analysis.\n\n\"Okay,\" Joel said with a shrug. \"You have a report of a murder suicide at an orgy with no bodies. What does that have to do with me?\"\n\nDetective Halton went on. She described there was a man dressed in black who issued commands, but no women remember what he said. They only knew that, after he made his announcement, they found themselves participating in public sexual acts they would never have otherwise have willingly performed. They engaged in high risk sexual activities they normally avoid at all costs. None of the women can seem to remember anything else about him. They all described themselves as having performed the sex acts willingly, but now they are shocked and embarrassed by their depraved behavior.\n\n\"Fuck!\" Joel shook his head. \"It's catnap.\"\n\n\"We want you to talk to the women,\" Colonel Greene said. \"You may be able to reach them in ways we cannot.\"\n\n\"What is everyone's role here?\" Joel looked around the room.\n\n\"We caught the case,\" Detective Halton explained. \"FBI took it away from us when they figured it might be some mass hypnotic terrorism angle, and then OSI took it from them for reasons of national security.\"\n\n\"So you're running this?\" Joel asked Colonel Greene.\n\n\"My office is,\" he nodded, \"due to the ... peculiar nature of the case.\"\n\n\"Every one of these women will be traumatized beyond anyone's understanding. I need you,\" he said to Colonel Greene, \"to appoint someone who can help them \u2013 someone who understands the peculiarities, as you say, of this case. A qualified psychologist on the inside.\"\n\n\"You've already met her,\" Colonel Brian Greene explained, \"but she's up to her eyeballs in other things, plus she's not a clinical psychologist. Besides, I don't have a budget for that.\" Both the FBI and APD shook their heads when Colonel Greene looked at them. \n\n\"I do,\" Joel said. \"You tee it up. I don't mean a one-time, gloss over government job. I mean intense, supportive, long term, professional standard, best practice therapy by someone qualified in their circumstances. Have them bill my office directly if you need to.\"\n\n\"Joel there are eleven women. That could cost millions over the years,\" Colonel Greene argued. \n\n\"That's my problem.\" They all looked at him with disbelief. \"Guys,\" Joel held his palms out, \"I'm not asking. You want my help, this is the way it is. You guys are in law enforcement. I'm not. You go home after you make the arrest and you put a notch in your belt, but you do shit for the victims. I see the shattered lives you leave behind while you move on to your next case. Make this happen the right way, and you know what I mean by that, colonel,\" Joel warned.\n\n\"Who the fuck are you?\" Detective Sheila Halton challenged aggressively. \"What did he mean by catnap?\" she asked Colonel Greene.\n\n\"I am the expert Colonel Greene brought into this case,\" he answered her directly, \"and I work for him alone. I am the only hope any of you have of cracking this case.\"\n\nColonel Greene drew in long breath. \"Unfortunately he's as right as he is arrogant,\" he reflected to Detective Halton. Colonel Greene looked to Joel. \"Okay, I promise the women will get the support they need, and you will get a whopping big shrink bill.\"\n\n\"I need someone to walk me through the crime scene,\" Joel said. \n\n\"We want to do that now,\" Colonel Greene nodded, \"and we want you to interview the women tomorrow.\" \n\nThey walked to the front entrance where Joel retrieved his cell phone. At one thirty they climbed into an SUV piloted by an Air Force lieutenant. They arrived at the dinner party residence at two in the morning. It was guarded by armed plain clothes Air Forcepersonnel. Inside there were high intensity LED lights mounted on stands throughout the house, letting the investigation proceed without requiring the resident lighting. \n\nAs soon as Joel saw the round ring table, he understood what happened here. \"He did boy, girl, boy, girl, all around the table,\" Joel explained. \"Maybe some girls in the middle for erotic entertainment, or maybe a sex show. The girls were sitting helpless at the table \u2013 they couldn't fight back or flee. They just sat there and let the men do what they wanted.\" \n\n\"What are you talking about?\" Agent Jeff Spagnola spoke for the first time. \n\nJoel looked at Colonel Greene. \"A demo?\" The colonel thought for a long time, and then nodded.\n\n\"Agent Spagnola, take your phone out, please.\" He did. \"I want you to video record Detective Halton. Don't stop recording until I say. Understood?\" Agent Spagnola looked at Colonel Greene, who nodded. \"Tell me when you're recording.\" Agent Spagnola nodded.\n\n\"Sheila,\" Joel commanded to Detective Halton, \"bark like a dog and pat yourself on the ass.\" She began barking loudly, and slapping her own ass. \"You recording this still?\" he asked Spagnola. He smiled while Sheila was still barking and slapping her own ass on his screen. \"Sheila, stop, and act normally now,\" he commanded. \"Agent Spagnola, stop recording.\"\n\n\"What the fuck?\" Sheila Halton looked around. \"Detective Halton, I promise this will all make sense in a moment. Just answer two questions honestly, please. It's part of the demonstration. Why did you bark and pat yourself on the ass? Please answer honestly.\"\n\n\"Because I felt like it,\" she shrugged with deep embarrassment.\n\n\"Did I or anyone else tell you to or make you?\"\n\n\"No,\" she scoffed. \"You didn't say a thing.\"\n\n\"Agent Spagnola, please play back the video to Detective Halton.\"\n\nDetective Halton looked at the video with wide-eyed surprise. She staggered back several steps when it finished. \"If it weren't for that video,\" she said, \"I would swear in a court of law under threat of perjury I did that because I wanted to, and you never told me to do it. I have no memory of what you said.\"\n\n\"That is one of the aspects of the power. People who are being controlled don't know it or remember it.\"\n\n\"Okay, you can do parlour tricks. Big deal,\" Detective Halton shrugged.\n\n\"Sheila,\" Joel commanded, \"take out your sidearm, put it on the ground, and walk away from it.\"\n\nWhen he heard Joel's words, Agent Spagnola immediately put his hand on his own sidearm, but did not draw it. Detective Halton drew her gun, put it gently on the ground, and walked away. Colonel Green calmly waked over and picked up the gun. Agent Spagnola relaxed. \n\n\"I just commanded you to put your gun down and walk away from it,\" Joel explained to Detective Halton. \"I'm guessing you just violated a hundred regulations and laws by abandoning your weapon. You think you did it because you wanted to, but both Colonel Greene and Agent Spagnola will attest I commanded you to do it. I could have just as easily told you to put the gun in your mouth and pull the trigger, and you would have done it.\" He waited. \"Or I could have told you to strip naked and fuck all three of us, and not only would you have done it, you would have done it thinking it was your great idea. These are not parlor tricks, Detective Halton.\" \n\nJoel turned to Agent Spagnola. \"The girls just sat there and let men do anything they wanted, because they were commanded to, just the way I commanded Detective Halton just now.\"\n\n\"Who the fuck are you?\" Detective Halton asked, breathing shakily.\n\n\"Before I answer that, Agent Spagnola, would you please erase that video, and let Detective Halton watch you erase it so she knows it has been deleted.\" Agent Spagnola deleted the video while Detective Halton watched. \n\n\"So you just made him erase that?\" Detective Halton asked.\n\n\"No,\" Joel shook his head. \"I asked him to do that as professional courtesy to you.\" Joel paused. \"I have a certain power. The same power that the person had in this room two nights ago. I can command people to do things, and they do them, not understanding or remembering they are being manipulated. They do them thinking it was their idea in the first place. The person who did this two nights ago commanded all the women to sit still, or to act out how he wanted them to. Either way, they were forced into sexual servitude, but something went wrong.\" \n\n\"You're a fucking monster!\" she nearly screamed at Joel. \n\n\"Some of us are,\" Joel nodded. \"My job is to hunt those ones down.\"\n\n\"You hunt them ... Colonel what the fuck is this?\" she demanded. \n\n\"Exactly what it looks like,\" Colonel Greene said calmly. \"Can I trust you with this?\" he held her gun out. She looked at Joel, and then back to the gun. She realized possessing the gun was both a blessing and a curse with Joel in the room. She took the gun and holstered it.\n\n\"You've hunted killers before?\" she asked Joel.\n\n\"He can't answer that,\" Colonel Greene interjected. \"We cannot discuss any other cases with you.\"\n\n\"So wait,\" Detective Halton asked Joel. \"Could you force me to shoot someone else?\"\n\n\"I could command you to empty your clip into a crowded school yard, reload, and do it again.\"\n\n\"Jesus fucking Christ!\" she nearly cried. \"That's what a catnap is?\" Joel nodded. She put her hand over her mouth and held back her anguish. Never in her career had Detective Halton ever considered she could become the unwitting instrument of mass terror. \n\n\"Colonel, there's probably no law against what Joel is talking about,\" FBI Agent Spagnola observed. \n\n\"That's why we're involved,\" Colonel Greene nodded. \"Law enforcement alone is not an applicable response in this case.\" \n\nSheila had to sit down in one of the chairs while she processed what she just experienced and heard. The chairs had all been dusted for prints by now. There was no scene contamination. Finally she looked up at Colonel Greene with a horrible comprehension. \"We're at war, then.\"\n\n\"An undeclared one,\" Brian Greene nodded. \n\n\"And he's the mercenary,\" she nodded to Joel.\n\n\"Something like that,\" Brian nodded again.\n\n\"No,\" Joel disagreed. \"I don't take money for this. I'm not for hire. I can't be bought,\" even though he and Colonel Greene knew better. \"I hunt bad guys because they're bad.\"\n\n\"And you pay for the victims' therapy,\" she nodded, \"out of guilt, I suppose.\"\n\n\"Guilt by association, yes,\" Joel conceded. \n\n\"And where does your funding ... never mind,\" Detective Halton answered her own question mid-sentence. \n\n\"Colonel, what is our mandate here,\" Agent Spagnola asked, \"I mean the FBI?\"\n\n\"To help apprehend the perpetrator, and turn him over to us.\"\n\n\"Perpetrator of what? As far as we know, the catnap guy you're talking about probably committed no crime.\"\n\n\"Okay,\" Colonel Greene shrugged. \"Bring him in for questioning. We'll take it from there.\"\n\n\"I'm not comfortable with that,\" the FBI agent warned. \n\n\"I don't care what offends your delicate sensibilities, Agent Spagnola,\" Greene barked menacingly. \"You'll do it, or you will be removed from this task force.\" Everyone in the room knew who Colonel Brian Greene reported to. Removal from the task force for failure to cooperate was career suicide \u2013 as bad as a pilot refusing to fly because he was afraid of heights.\n\n\"I'm not comfortable with him,\" Detective Sheila Halton pointed at Joel.\n\n\"If he ever manipulates you without my authorization,\" Colonel Greene assured her, \"I will remove him from the task force.\" That doesn't help me after I put my own bullet through the back of my head. Detective Halton just nodded. \"And I apologize for putting you through that uncomfortable demonstration,\" Colonel Greene offered genuinely to her, \"but I trust no amount of explanation would have convinced you otherwise.\"\n\n\"Well, if he's right about this power thing,\" Detective Halton said in reference to Joel, \"he's probably right about something else. We'll never catch who did this without his help. I just don't trust him.\"\n\n\"Joel and I have an ... understanding,\" Colonel Greene searched for the word. \"He'll be okay.\" \n\n\"Where was the blood?\" Joel asked, getting the attention off him. Detective Halton walked to where Jessica and Ryan had collapsed dead two nights earlier. \"We found it between the floor boards, here.\" She pointed. \"They cleaned up, but not all of it.\"\n\nJoel walked over to the blood stains. \"Can you tell how many people were stabbed?\"\n\n\"There were at least two blood types, one male, one female,\" Detective Halton answered. \"It's out for DNA now.\"\n\n\"Was the weapon recovered?\"\n\n\"No, but there is cooked blood on that table behind,\" Detective Halton pointed. \"We're guessing someone was serving meat there. Possibly a carving knife? The M.E. on scene said she found traces of chyme mixed with the blood on the floor \u2013 that's processed food inside the intestine. So we're figuring deep abdominal stab wounds. She also found blood spatter way on the other side of the room. That suggests either a second attack over there, or a high pressure arterial spray from here \u2013 someone cut a major artery up high \u2013 maybe a shoulder or a neck.\"\n\n\"Fingerprints?\" Joel asked.\n\n\"The table is wiped clean, and so are the chairs,\" Detective Halton reported. \"We found trace DNA everywhere, but that won't help track down anyone \u2013 unless they're in the system. Somehow I don't think we'll get many hits from this crowd.\" \n\n\"Other rooms?\" Joel asked.\n\n\"There are thousands of fingerprints everywhere. We've concentrated on the front entrance and washrooms.\"\n\n\"So they were sloppy,\" Joel concluded. \"Probably in a hurry. You found blood and guts in here.\" Then Joel thought. \"There are two dead people. They could be local. Missing persons?\"\n\n\"We have a strong lead. A young woman, 22, went missing, last seen earlier that day, but no one we talked to knew where she was going. To a fundraising dinner, she told friends. We checked. There were no registered fundraisers that night. She has a boyfriend, who also cannot be located. We have a BOLO on his car.\"\n\n\"Did you get a picture of her?\" Detective Halton nodded. \"Is she attractive?\"\n\n\"Gorgeous,\" she nodded. \"Supermodel kind of beautiful.\"\n\n\"He was probably in on it,\" Joel explained. \"He was taking her to a party where he knew she, along with every other woman, would be commanded to sexually service any and every man who wanted her. He probably paid a steep entrance fee. So it was a fundraiser of sorts, but not for any good cause you heard of.\" Joel looked around the round ring table. \"You could easily fit twenty-four people around here. At first, I'm guessing the women were commanded to sit still, possibly naked, and they were commanded to allow all the men do whatever they wanted as they ate their feast.\" Detective Halton shivered repulsively at the image. \"After dinner, the women would have been moving around under command. That's when it happened \u2013 while people were wandering around.\"\n\n\"But if the woman were under command,\" Agent Spagnola insisted.\n\n\"Something went wrong,\" Joel completed the thought. \n\n\"What about a fight over girls,\" Detective Halton speculated. \"Two guys going bronco over the same girl.\"\n\n\"Agent Spagnola,\" Joel asked him, \"if you had a room full of supermodel gorgeous girls, all of which were dying to please and service you in every way imaginable, would you fight over which one?\"\n\n\"Okay,\" Detective Halton shook her head, \"you made your point\". Colonel Greene smiled. He didn't like Joel so much, but he certainly was useful.\n\n\"Something happened the puppet master didn't notice, or account for.\" Joel thought it through. The sequencing of the multiple commands had to be well organized, orchestrated, and practiced. \"I am certain this was not the puppet master's first dinner party. It's too big, too intricate, too complicated to be a first attempt. He has been doing this for a while.\"\n\n\"We can't track down every dinner party,\" Detective Halton complained, interrupting Joel's thoughts.\n\n\"I'm on it,\" Joel said. Agent Spagnola and Detective Halton looked at Joel with surprised curiosity. Colonel Greene shook his head no at Joel \u2013 you've already said too much. Detective Halton and Agent Spagnola saw the exchange, and then looked at each other with raised eyebrows. There was much more going on than they were being told. ",
        "They left the house at two thirty in the morning. Joel was dropped off at a hotel, and was told he would be picked up at seven thirty. \n\n- - - \n\n\"Shelby,\" Joel said in the small room the next morning. She was sitting on a small, two person sofa. Joel sat across from her, with a small round table in between. \n\nShelby McTigues was one of the girls at the Albuquerque 'party'. She was five foot six, pretty, petite, with long brown hair and dark brown eyes. She had a long face with delicate features. In this small room, she was wearing jeans and a loose sweater. \n\nThey were in a small meeting room at the Lovelace Woman's hospital. All the women from the party were being treated there. \"I want you to close your eyes,\" Joel commanded Shelby softly. They had already introduced themselves. A small camera on a tripod recorded Shelby over Joel's shoulder. A laptop computer rested on a small table in front of Joel, facing him.\n\nColonel Greene and Evelyn Miller, the psychiatrist who Colonel Greene hired, and Joel paid for, were sitting in a nearby room watching Joel's interview on a TV screen. Agent Spagnola and Detective Halton were also in the viewing room. Evelyn Miller had already struck out with Shelby, unable to get any useful information from the victim. She had a laptop in front of her. She had a pre-defined script queued on her laptop, and she could also type new text interactively. \n\nShelby closed her eyes. \"Imagine you are in a field on a beautiful, bright, warm day,\" Joel commanded, reading the script from his laptop. They had rehearsed it before so Joel didn't sound like he was reading a script. Evelyn fed the next part of the script from her laptop, and it showed up on Joel's laptop. He read the entire thing to himself first, like they practiced, internalized it, and then said it back to Shelby in his regular voice using his own words. \n\n\"It is your favorite field. Can you see it in your mind?\" Shelby smiled and nodded. \"Okay, in a moment, I am going to tell you to put a crystal ball around you, but first I am going to describe it.\" \n\nJoel read the next part of the script, understood it, and then spoke softly. \"It is a large crystal ball. Large enough for you and several of your friends to fit inside. You can see right through it. You like this crystal ball. When you are inside this crystal ball, you are safe. Nothing \u2013 absolutely nothing can hurt you when you are inside this crystal ball. Do you understand?\"\n\nShelby nodded. \"Okay,\" Joel commanded, \"make that crystal ball all around you. It makes you safe, and nothing can hurt you when you are inside it. Is the crystal ball around you?\" She nodded. \"Do you feel safe?\" She nodded.\n\n\"Now, I want you to imagine a boy \u2013 a twelve year old boy. He is outside the crystal ball. He cannot get in the crystal ball. Do you see him?\" She nodded. \"Don't let him in the crystal ball. Imaging this boy throws a rock at you, but the rock falls harmlessly when it bounces off the crystal ball. It doesn't even come near you. Can you see him throw the rock?\" She nodded. \"Are you afraid?\" She shook her head no. \"Good. Now, a man is in a tank \u2013 you know, an army tank with a cannon. He is outside the crystal ball. He is aiming his cannon at you, and he is going to fire his tank, but the shells will bounce harmlessly off the crystal ball, and you will not be afraid. Is he firing his tank at you?\" She nodded, and then laughed out loud. A red text flashed on his laptop screen. He knew to read that out now. \"Shelby, describe to me what is happening?\"\n\nWith her eyes still closed, she smiled \"He is firing and firing and firing, and the shells are bouncing off the crystal ball everywhere, and he is so mad, but I am laughing because he cannot hurt me.\"\n\nJoel's screen returned to normal, and the next script appeared.\n\n\"That's great, Shelby, you are doing very well.\" Joel read softly. He commanded, \"now send the tank and the boy away. You are in your crystal ball. Nothing can hurt you. Are you still in your ball?\" She nodded. \"Okay, in a moment, I am going to ask you to remember something, but when you remember, the memory is going to be on the outside of the crystal ball. The memory cannot hurt you, just like the tank and the boy could not hurt you. Do you understand?'\n\nShe nodded. \"Shelby, this will be a painful memory, but it will not hurt you, because you are inside your crystal ball and the memory will be outside the crystal ball. Are you ready?\" She nodded.\n\n\"Shelby, on the outside of your crystal ball \u2013 don't let the memory inside. On the outside of your crystal ball, remember from two nights ago when you were at the dinner party at the huge round table.\"\n\n\"Please don't make me remember,\" she cried.\n\nThe screen flashed red. Joel read it.\n\n\"Shelby,\" Joel commanded, \"put the memory on the outside of the crystal ball. It cannot hurt you. Can you see it?\" She nodded yes. \"Is it outside the crystal ball?\" She nodded. \"Can it hurt you?\" She shook her head no.\n\nThe screen returned to normal.\n\n\"Okay, look at the memory, but just like the tank, it won't hurt you. Can you see the big round dining room with the hole in the middle?\" She nodded. \"Can you see the man wearing black?\" She nodded. \"Can you see him talking?\" She nodded. \"He cannot hurt you, because he is outside your crystal ball. Can you tell me what he is saying?\"\n\n\"No,\" she said. \"I can see him talking, but I don't hear it. No, that's wrong,\" she corrected herself. \"I hear it, but I don't remember what he said.\"\n\nJoel waited for Evelyn to find the next appropriate script. It took a while, because she had to type it in. Then it flashed on his screen, and he commanded to Shelby, \"There is a door somewhere outside your crystal ball. It is closed. You cannot remember what the man in black said, because the door is closed. If you open that door, you will see through the door, and you will remember what he said. Can you see the door?\" She nodded. Joel commanded, \"You can make the door open. You don't need to leave the crystal ball. Just make the door open, and the door on the outside of the crystal ball will open, and then you will remember what the man said. Can you open the door?\" She nodded. \"Do you remember now what he said?\" She nodded. \"Tell me what he said.\"\n\n\"All women will do exactly as I say. You will not speak unless spoken to by a man. You will not leave your chair or stand up. You will not put your hands below the table top. If a man touches you on the legs, you will open your legs as wide as you can and leave them wide open. If a man touches you anywhere on your body, you will let him, and you will not stop him or resist him. If a man puts something inside you, you will let him. You will not stop him from doing anything to you. You will sit quietly with your hands above the table, and let any man do anything he wants to you. You will not remember me or what I said.\"\n\nIn the observation room, Detective Halton felt sick. \n\n\"Shelby, you're doing very well,\" Joel read from the script. \"Do you still feel safe inside your crystal ball?\" She nodded. Joel commanded, \"Now, there is a second door. It is also outside the crystal ball. It is closed. Do you see the second closed door?\" She nodded. \"The second door is outside the crystal ball. Leave it outside. When you open it, you will remember what the man in black looks like. Are you ready to open it?\" She nodded. \"Go ahead and open it. Do you see what he looks like?\" She nodded. Can you tell me what he looks like?\n\n\"He has dark curly hair. Black glasses. There's something wrong with his eyes.\"\n\n\"Shelby,\" Joel said off script, \"you are doing very well. He is outside the crystal ball, and he cannot hurt you. Are you still feeling safe?\" She nodded. \"Tell me what is wrong with his eyes.\"\n\n\"It's like they are looking in different places. Maybe one is a glass eye.\" \n\n\"Tell me more,\" Joel said, but he didn't listen to the answer. He pulled out his cell phone and sent a text message to Sylvie in his phantom office in Boston. He had already silenced his smartphone so the reply would not bother the session. \n\nShe had finished answering her question. \"Shelby,\" Joel read from the script, \"I want you to close both doors now, gently. Are they closed?\" She nodded. I want you to make the doors and the bad memory go away, gently. Just let it go, and it will float away. Tell me when it's gone.\"\n\n\"It's gone,\" she said moments later, still with her eyes closed. Joel continued from the script. \"Okay, Shelby, you're doing very well, and we're almost done. Go back to the field you started in \u2013 your favorite field on a warm, sunny day. Tell me when you're there.\"\n\n\"I'm there,\" she smiled.\n\nJoel commanded from the script, \"Think about someone or something you trust. A person or an animal that you love. Someone or something that will never hurt you. Can you see?\" She nodded. \"What do you see?\"\n\n\"My little sister,\" she said. \n\n\"Shelby, would your little sister ever hurt you?\"\n\n\"No,\" she shook her head. \"Never.\"\n\n\"Do you love your little sister?\" Shelby nodded. \"Then invite your little sister inside the crystal ball with you,\" Joel commanded, \"and then she will be safe with you inside the crystal ball.\" Joel waited. \"Is she with you inside the ball?\" Shelby nodded. \n\n\"Okay, Shelby, you can invite your little sister any time to play with you inside the crystal ball. But for now, tell her goodbye, and be happy knowing she can come back and play with you anytime inside your crystal ball.\" With her eyes closed, Shelby raised her hand and waved goodbye, and smiled.\n\n\"Shelby,\" Joel read from the script, \"when you're ready, and only when you're ready, let the crystal ball go. Only when you feel safe enough to let it go. Tell me when you feel safe enough to let it go.\"\n\nShe waited about ten seconds. \"I feel safe. I can let it go.\"\n\n\"When you let it go, you will still be in your favorite field. Nothing will change, except the crystal ball will be gone. Tell me when you let it go.\"\n\n\"It's gone,\" she said right away.\n\n\"Shelby,\" Joel commanded from the script, \"if a memory inside your head ever scares you, you have the power to bring back the crystal ball. I didn't make the crystal ball happen, you did. When you bring back the crystal ball, you have the power to make the bad memories go on the outside the ball where they cannot hurt you. And then you can look at the bad memories without them hurting you. And you can make them go away when you don't want to see them anymore by just letting them go. And you can invite your little sister to come inside the ball and you can play together, and the bad memories cannot hurt you there. From now on, you will always have the power to do all that. Do you understand?\" She nodded.\n\n\"Okay, Shelby, open your eyes.\"\n\nShe looked around the room. \"Did that really just happen?\" Shelby asked. \"Did you just make all that happen?\" she asked Joel.\n\n\"No,\" he smiled, not reading from any script. \"You did.\"\n\n- - -\n\n\"In all my years I've never seen anything like that,\" Evelyn exclaimed. They were in the observation room with Colonel Greene, Agent Spagnola, and Detective Halton. \"You took her so deep into a single session with such clarity and control, and on the first try. Most therapists do not achieve that level of clarity after ten years of sessions. Are you certain you are not a trained psychologist?\" she asked Joel.\n\n\"The only psychology training is the crash course you gave me before this,\" Joel offered. \n\n\"Well, Mr. Winkman, you have a most power gift,\" Evelyn claimed. \"You can advance therapeutic treatment by orders of magnitude,\" she estimated. \n\n\"Well, it's not my first time.\" Colonel Greene looked at Joel with surprise. \"When I was experimenting with this gift, I counseled a woman to gracefully terminate an affair she was having in order to spare her children from the inevitable fallout.\" \n\n\"More importantly,\" Colonel Greene argued, \"you got useful information from her that we can use to identify the man in black.\"\n\n\"William Fieldman,\" Joel said. \"I recognize the description.\" He looked at the text message reply from Sylvie. \"He lives in Savanah, but he's in El Paso right now. I'm guessing he's getting ready to cross the border.\" \n\n\"Where in El Paso,\" Colonel Greene asked. Joel gave the exact address. Colonel Greene nodded, stood up, pulled out his cell phone, and headed for the door. \n\n\"Wait!\" Detective Halton called after Colonel Greene. \"Joel has this guy under continental wide surveillance?\" She asked Colonel Greene. Everyone froze for a moment. \"Colonel, with all due respect, what the fuck is going on?\" There was no respect in her tone. \n\n\"I hunt these guys,\" Joel said. \"I already told you that.\"\n\n\"And the dinner parties?\" she demanded. \"Jesus Christ, Joel, you've been surveilling every catnap passenger.\" \n\n\"You can't hunt what you can't see,\" Joel offered whimsically. Detective Halton knew tracing one man could be done through GPS, but surveilling a hundred people was not a one-man operation. She suddenly appreciated Joel was the tip of a much bigger iceberg. \n\nColonel Greene left the room, presumably to call his team to apprehend William Fieldman in El Paso, Texas. When he returned several minutes later, Detective Halton spoke up again. \"Colonel, now I'm not comfortable with this. You have engaged the support of a rogue private citizen who has the backing of an illicit intelligence organization, and who is breaking I don't know how many federal laws and constitutional amendments, and who probably gets unlimited financing by stealing it through completely legal means. When you brought him under this tent, we all conspired and colluded with a criminal enterprise, and worse, you have made Joel a de facto law enforcement agent. No evidence this task force gathers will ever survive a trial, assuming any of us still have jobs and aren't facing jail time when it comes to that.\" Colonel Greene just stared at her in silence. \"Oh my God,\" she gasped as her shoulders sagged under the weight of her enlightenment. \"You're not taking this to trial.\"\n\n\"Like you said last night,\" Colonel Greene reminded her, \"this is war. And I have the President of the United States' guarantee you both will keep your jobs and you will not face jail time by cooperating with this task force. If you need further evidence to that effect, I will furnish it for you.\"\n\n\"I need to speak directly with Director Stanley,\" Agent Spagnola stipulated. Director Leopold Stanley was the Director of the Federal Bureau of Investigation \u2013 the top man. \n\n\"I'll make it happen,\" Colonel Greene nodded. \"And Detective Halton, if you need, I can arrange a meeting with Susan Bernard, Director of Homeland Security. But at this point, I feel I must remind you both, you swore an oath before a judge when you came onto this task force that you would not discuss anything with anyone outside the taskforce \u2013 not with your boss, not with fellow law enforcement agents, not with your family, not with anyone except me, Joel, Evelyn, and each other.\"\n\nSheila looked around the room. \"So this is what the dark side looks like.\" \n\nWithin an hour after Colonel Greene's phone call, an unmarked, plain clothes unit rolled out of the Fort Bliss Army Base, and found William Fieldman exactly where Sylvie said he was \u2013 at the Lucky Star motel in El Paso, Texas. The Army took Fieldman into custody, and took him back to Fort Bliss where he was detained until the Air Force OSI took over his custody. The Air Force flew him to the Kunsan Air Base in South Korea where he was detained for questioning for threatening national security. Most importantly, at no time was William Fieldman ever taken into custody, handled, or even observed by any domestic law enforcement agencies, which would have afforded him the due process entitled to every citizen who comes before the law.\n\nBack in Albuquerque, Joel took two days to thoroughly interview all of the eleven surviving women guests from the dinner party. Thanks to Dr. Miller's remote coaching, Joel was able to command the women to remember the evening in a hypnotic state, and Joel pieced together all the details from that night, including the fact there were four videographers of the event. They didn't have a clear memory of the two deaths themselves \u2013 one remembered a girl slitting her own throat, but the memory was too fuzzy to add details. \n\nAt the same time, Joel left the eleven girls with powerful coping mechanisms to deal with their painful memories without reliving the psychological trauma of the experience. Dr. Miller was astounded at the progress Joel made with each of the girls, and jokingly accused Joel of trying to cut into her billable hours.\n\nJoel didn't think the purpose of the videos was to share on the internet, but things had gone wrong. William Fieldman fled the scene, and who knows what the cameramen did with their videos. It was helpful to know the cameras were shoulder mounted professional units \u2013 that narrowed the search down considerably. Colonel Greene told his bosses finding those videos before they hit the internet was a top public concern, and within hours it was among the FBI's and the Department of Homeland Security's highest priority nationwide. \n\nJoel also learned the female serving staff were auctioned off. \"We don't have them,\" Colonel Greene mentioned. \n\n\"I don't know who they are,\" Joel said. \"We may never get to them.\"\n\n\"Let's see if the videos turn up,\" Greene nodded. \n\nJoel and Colonel Greene both knew it was going to be impossible to contain this story. William Fieldman fled before commanding the women to never talk about the evening, and thanks to Joel's puppet master assisted hypnosis therapy, many woman were remembering things William Fieldman had commanded them to forget. \n\nJoel needed to go home to Jen, and Colonel Greene understood why. Colonel Greene said he was still working on the impossible \u2013 give him time, and it would come. Colonel Greene had one piece of advice to Joel. For Colonel Greene's impossible plan to work, Joel had to deny commanding Jenny on his first date. Do that, and things would eventually fall into place, he promised. \n\nEvelyn Miller begged Colonel Greene to keep Joel in Albuquerque. She said Joel was doing more good with her patients in one session than she could hope to accomplish in a good year. Colonel Greene said no, and let Joel go.\n\nAt four o'clock on Friday afternoon, Joel rented a car, and drove to Phoenix, where he had told Jen he was staying. He dropped the car off at the Phoenix airport at eleven that night, and flew American Airlines to Boston on the overnight flight through Chicago, leaving Phoenix just past midnight and landing in Boston at six thirty. Even though Joel slept through both flights, he was exhausted when he landed.\n\nThe story broke before he touched down in Boston. A murder suicide was reported in an Albuquerque orgy during a night of slavery and forced sex among over a dozen women. It went national and international instantly. Joel went home, and slept until noon. He woke up and called Jen. She was out shopping when she answered. He said he was home \u2013 would she like to come over for dinner.\n\n\"No,\" she declined. \"You come over here \u2013 it's easier that way.\" Joel knew Jen meant it was easier for him to stay there overnight with her dogs at home. In the afternoon, he bought some wine. He found a rare gifts store, and bought a genuine Gucci Italian leather executive briefcase for an insanely high price. He figured Jen should start her new job in style. He would take it with him to California and give it to her then.\n\nWhen they met that evening, Jen thankfully had a lot to talk about, because Joel could tell her precious little about his two trips to Seattle and \"Phoenix\", which wasn't even Phoenix. She had submitted her two weeks' notice at Quinton, and that caused quite a stir, because the HR department was already in a bind to hire new people and put new policies into place, and Jen was at the center of all of that. They offered her a bit more money, and she turned it down, knowing they could not come close to the offer she got on the West coast. ",
        "In a desperate move, her boss actually threatened to sue her, and she just laughed. \"Do you know who I am going out with?\" she asked him. He shook his head. \"Joel Winkman, and I know his lawyer. The fact that you just threatened to sue me is worth a lot of money,\" Jen smiled. She didn't actually know Joel's lawyer, but that didn't matter. Joel had fleeced Quinton Systems for wrongful dismissal only months earlier, and they were still licking their wounds from the magnitude of the settlement. Suddenly everyone changed their tune, and it was all best wishes Jenny, and good luck Jenny.\n\nJoel and Jen laughed over the stupidities of the company. \"I don't know why I didn't leave that place sooner,\" she complained. \"I know,\" she interrupted Joel before he could say it, \"that place does it to you.\"\n\nJenny's plans to move out west were under full steam. Don McLean sent her an email, saying he knows how stressful a move is. Just tell him what she wants in a temporary place, and they will find it for her. \n\n\"What did you say?\" Joel asked. \n\n\"I was waiting for you to come home,\" she smiled. \"It's going to be our place, remember?\" Joel asked her what she was thinking. She said she wanted a fenced in yard where the dogs could run, three bedrooms \u2013 one for them, one for Joel's office, and one for guests, and that was all she had come up with so far. Joel suggested the fewer demands, the easier it would be, and then they could look for the perfect long term place together. \n\nJen thought there was just too much work to do in the time left. She couldn't get the house ready in time to sell. She didn't know what to do. Joel said leave it to him \u2013 he had an idea. \n\nOn top of that, Jen had to buy a whole new wardrobe for the California climate. Finally, after supper, she remembered to ask Joel how his trips were. \"Boring,\" he said. \"Next time I'm sending Barry out for a first contact meeting. It was all numbers and finances and plans. And then Phoenix was just a mess. I didn't get anything done in the end.\"\n\n\"Oh my God!\" she said. \"Speaking of Phoenix, did you hear what happened in Albuquerque?\" Joel shook his head. He said he'd been working flat out. \"Somehow they made a dozen women have sex against their will, and one of them was killed at a dinner party! And the creepy thing is, they can't find the body?\"\n\n\"How do they know she was killed?\" Joel went along.\n\n\"Well, they all saw it. This man in black told her to slit her own throat, and she did.\" Joel had heard it all first hand from the women themselves, but tried to act appropriately shocked. None of the women were aware of the stabbing. The task force figured he was stabbed while the rest of the girls were still under the puppet master's control, and then the puppet master commanded her to kill herself, and in doing so, released the women, who then witnessed her forced suicide. \n\n\"They must have been drugged, or something.\" Joel nodded, knowing it was in the or something category.\n\n- - - End of Chapter 8 - - -"
    ],
    "authorname": "deltablonde",
    "tags": [
        "air force",
        "inquisition",
        "orgy",
        "blowjob",
        "slave auction",
        "forced masturbation",
        "albuquerque",
        "hypnosis"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/our-little-secret-ch-08"
}