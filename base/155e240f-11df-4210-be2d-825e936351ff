{
    "title": "Rough around the Edges Ch. 09",
    "pages": [
        "After work, Jade hurried home and thought about calling James just to see if he would answer the phone. She didn't. She wasn't sure what she was going to say to him or how she was even going to approach him. She sighed out loud as she looked through her closet for something to wear. \n\n\"Hey there.\" Nicole said popping her head in.\n\n\"Hey, are you getting ready to go to the party?\" Jade asked.\n\n\"Yes, although I couldn't find anything.\" She frowned.\n\n\"You couldn't find anything? Well, let's see what I can find for you in here.\"\n\n\"Nothing that shows too much, I don't have much cleavage to parade around people.\" Jade shook her head trying not to laugh out loud.\n\nNicole sat on the bed, twiddling her fingers trying to think about the best way to say what she wanted to say next. She has been noticing how her sister doesn't smile like she usually does. There was no better way but to come right out with it.\n\n\"I miss James.\" Nicole said and she saw how \n\nJade's body tensed, \"I know I'm not supposed to, but I do. I just don't think that he would do anything like cheat on you. He's a great guy. You are happier with him. I have never seen you smile as much as you do when you are with him.\"\n\n\"I know.\" Jade whispered, \"It's complicated.\"\n\n\"What's so complicated? You love him and he loves you.\"\n\n\"I am going to talk to him and hopefully I will get everything straight.\"\n\n\"Good, because I did talk to him and he misses you a lot. I can tell; he's a lot grumpier.\"\n\n\"You visit him? Did he tell you that?\" Jade said turning to face her.\n\n\"Only occasionally; he has stopped me a few times when I go running and he doesn't have to tell me for me to notice it. Do you think that he will be at the party?\"\n\n\"I don't know. It's being given by his captain's brother-in-law.\" She sighed.\n\n\"Do you think Ramon will be there?\" Nicole asked in a small voice and Jade started smiling.\n\n\"Do you want him to be there?\" she teased.\n\n\"No, I-I was ju-just asking.\" Nicole stammered and looked back down at her hands.\n\n\"Okay well, let me see what I can find for you to make Ramon look your way.\"\n\n\"You don't have to make me noticeable.\" Nicole said shaking her head, \"I think I will just wear one of my long skirts with a button down shirt.\"\n\n\"So, you can look like an old 50 year old teacher? No, I'll find you something nice.\" Jade said as she went on search again.\n\nAfter finding a nice black, long sleeve dress for Nicole, Jade went ahead and started getting ready. If there was a chance that James was there, she wanted him to notice her in this dress, she thought pulling it out. It was a red form fitting dress that she bought some time ago that she loved that was also long sleeve with the back out. She smoothed the dress over her body as it brushed the top of her knees. \n\nAfter waiting on Gale and taming Nicole's hair, they finally made it to Mr. Butler's party. His parties always turned into such a big turn out with a lot of Mr. Butler's friends from Wall Street. It was something that he threw almost every year to have everyone mingle with each other. Jade sometimes loved going to the parties. It was a good way to get some good deals for the restaurant, but today, it just seemed like everyone around her were all talking gibberish. \n\nJade wanted to be there with one person on her arm but he wasn't her so she kept her self busy mingling with some of the people while Gale was kind of sitting off to the side. She still hasn't said much and every time she looked like she wanted to say something, she would back down at the last minute. It must have something to do with Ryan, Jade thought to her self as she reached for a glass of champagne.\n\n\"You are looking good tonight.\" She didn't have to turn around to know whose voice that was.\n\n\"Thank you Dante.\" She said turning around smiling.\n\n\"I just thought I would check on you. How have you been?\"\n\n\"I could be better.\" She smiled.\n\n\"Anything I can do to help.\" He said flashing that pretty boy grin.\n\n\"I'm afraid not. It's just stuff going on in my life. Can I ask you something Dante?\" he nodded, \"Why? Why did you cheat on me?\"\n\n\"Jade.\" He sighed.\n\n\"No, I deserve an answer because I'm trying to think about what I did do or what I didn't do.\"\n\n\"I just wasn't ready to give you what you wanted.\" He shrugged.\n\n\"I wanted you at the time and that's what you didn't want to give to me. Your time, your devotion, your heart, your love; I think that's something I deserved.\"\n\n\"You did and so much more. I was just...\"\n\n\"Being stupid.\" She said crossing her arms across her chest.\n\n\"You can say that.\" He nodded, \"But I have changed now and I'm a better person. I want to give you all that.\"\n\n\"You know Dante, I want that.\" She said with a smiled and he took her hand in his, \"I want devotion. I want time to spend with each other. I want love, but not yours.\" He looked at her as if she had slapped him across the face, \"I had that and I do intend to do everything I can to get it back, but I'm tired of getting my heart broken by you. So, I hope who ever you end up with next, you will give her all that and more. And I pray that she doesn't hurt you like you hurt me, because karma is a bitch.\" She said taking a long sip of her champagne before walking past a shocked Dante leaving the click of her heels echo in his ear.\n\nJade didn't know why, but that felt so good. She had told him off before but never like that. It felt really final. She was smiling all the way to the balcony but stopped as she opened the French doors. There he was leaning against balcony, smoking his cigarettes. She smiled not realizing how much she even missed that. She dusted herself off and walked slowly towards him. She could tell from the back that he looked good in his black suit and she wanted to rip that off of him.\n\n\"Hey.\" She said behind him and his head turned towards her.\n\nHe quickly turned back around as if he didn't notice her. She walked over to stand next to him and he still looked straight ahead. He tried to ignore the way the dress hugged to her curves and how his mind replayed the way her skin felt. She was already the cause of his sleepless nights; he didn't need to see her. \n\nShe took a good look at him and her heart soared. He has trimmed up since the last time she saw him, but still had the remnants of his five o'clock shadow. He was silent as she continued staring at him searching for what to say next. Just say what's on your mind Jade, she said in her head and nodded. He glanced over at her quickly and saw something glitter around her neck. He took a second glance while she wasn't looking and realized what it was. His dog tags, tucked under her dress. Fuck, he had to get away from her.\n\n\"Jade.\" She heard as soon as she opened her mouth.\n\nShe looked at where the voice was coming from and saw Gale walking towards them. \n\nJames sucked on his bottom teeth and quickly put out his cigarette. It was bad enough that she came out here looking like she did but he was not going to deal with her sister too. \n\n\"Excuse me ladies.\" James said walking past Jade and she watched as she walked closer and closer to the door.\n\nGale watched her sister's lip quivered as James walked away from her. She took a hard swallow and realized she couldn't do this anymore.\n\n\"James, wait.\" Gale said, \"Please, I have something to say.\" James slowly turned around to face them both, looking at Jade's confused expression. \n\nApparently she didn't know what was going on either, so he just leaned against the door waiting for this one. \n\n\"Okay, I have to admit something. Deborah and Dante worked together to break the two of you up. He was the one that helped her put you to bed and make it look like you two slept together.\" James pushed himself from the door as his face started to turn three shades of red.\n\n\"How the hell do you know this?\" he said in a low tone.\n\nGale's mouth quivered as she stared into his cold blue eyes and then looked over at Jade's confused face, \"Because I helped them.\" It came out in a whisper and all the air in Jade's body left her with that statement.\n\n\"Are you fucking kidding me? How the hell did you help them?\"\n\n\"I knew about the plan and they told me to keep Jade busy and to make sure that she doesn't answer her phone if you call so that Deborah can be the one to meet you.\" Gale quickly explained, \"I'm sorry. I didn't want this to go this far.\"\n\n\"How far did you expect it to go!?\" he screamed, \"You can't play with people's emotions like that. Lady, you have a serious problem. Stay the fuck away from me before I do something I regret.\" That statement chilled Gale to the bone along with his cold hard look.\n\nJames had to get out of there and get a drink. He just shook his head and stormed away from both women ready to tear someone's head off. James walked back into the party pushing past everyone. He happened to look up and his eyes zeroed in on him. Dante looked down and back up as he saw James approaching. \n\nHe didn't notice the fire in James' eyes or his fist balled at his side. James just narrowed in on his target, as he felt his blood pumping and his fist tighten at his side.\n\n\"James, I'm sorry man. She's all yours, man.\" Dante said throwing up his hands. James didn't even say anything; his fist shot out and connected with Dante's face as if thunder struck. Dante fell to the ground which stopped the whole party. Dante looked up at a seething James holding on to the side of his face. \n\n\"She was mine before, you little shit.\" James growled and kneeled down to him taking enjoyment out of Dante flinching, \"You should be scared. I should tear your head right off your shoulders.\" He grimaced grabbing Dante's jacket and pulling him up.\n\n\"James, that's enough.\" The voice of reason said behind and he knew instantly who it belonged to, \"Not here.\" Scott whispered to him and James narrowed his eyes at Dante seeing the beads of sweat on his brow. \n\nJames breath came out in short pants as he felt Scott's grip on his shoulder tighten. Yea, he does need to calm down, James thought to himself. He needed a drink and plus he didn't want to make more of a scene than he already has. \n\nJames pushed Dante away from him, nearly knocking over a couple staring at them. Dante scurried away ducking between people trying to get away as quickly as he could. James exhaled sharply unable to really calm himself down. \n\n\"I'm leaving.\" He simply stated to Scott and started to walk off, looking for Ramon.\n\n\"Where are you going?\" Scott asked trying his best to keep up with him. \n\nObliviously to what was going on inside, Gale was still shaking and nervously turned to look at Jade. Jade's hand was over her heart as if that was going to repair the damage that she was feeling. She was just at a loss for words. Her sister? Her very own blood, maybe this was just a dream but she knew Gale wouldn't lie about something like this.\n\n\"Jade.\" Gale started.\n\n\"How could you? How could you do this to me?\" Jade said staring at Gale, tears running down her face, \"I'm your sister and you helped them break up my relationship. I cried on your shoulders about what I thought he did and you didn't say one damn word! You let a whole month go by without saying anything!\"\n\n\"I'm sorry. I'm so sorry.\" Gale cried.\n\n\"Sorry? That's all you can say? Gale, you betrayed me. You had my phone, didn't you?\" Gale just looked down at the ground and nodded, \"You erased my call history so I wouldn't get his call?\" She nodded and Jade just ran her fingers through her hair in frustration not believing her ears right now.\n\n\"I just wanted what's best for you. I didn't...\"\n\n\"SHUT UP!\" Jade screamed as her hand came across Gale's face, \"You don't even know what's best for you. You think I want to be in a loveless marriage like you?\" Jade said hoping the way it sounded hurt as much as she intended it too, \"Do your self a favor and get over it.\" Jade said, walking away from Gale as she held on to her cheek, tears flowing down her face. \n\nJade looked up and saw Nicole, Katrina, and Dominique standing there waiting. Jade walked past them inside of the party. Dominique followed after Jade as Katrina stood there shaking her head. Gale didn't need this from her, not now.\n\n\"What? I know you have something to say now!\" Gale cried and Katrina just bit her bottom lip.\n\n\"You know I could say something, I really could, but you are about to lose your sister because of some mess. I just hope you can live with yourself.\" Katrina said turning her back to her.\n\n\"I did what I thought was best!\" Gale shouted back to Katrina.\n\n\"That's the thing.\" Gale turned and couldn't believe where the voice was coming from, \"You thought something was best for her.\" Nicole said, \"You never thought to trust her on what she may think is best for her self. Damn Gale, we are grown now and we don't need you to watch over us anymore or boss us around.\" Nicole stated leaving a stunned Gale standing outside alone.\n\nDominique finally caught up with Jade as she stood off to the side searching through the people, \"Are you alright?\" She asked.\n\n\"No, I think I'm going to be sick and to think that fucker tried to come and get me back. Oh, I just feel like punching him in the face right now.\" Jade exclaimed as they walked downstairs.\n\n\"It's too late for that one.\" Katrina said appearing at her other side.\n\n\"What?\" Jade said turning to her.\n\n\"James took real good care of that part. I thought he was going to strangle Dante.\" Katrina said shaking her head.\n\n\"So where did he go?\" Jade asked.\n\n\"He just said he was leaving. I know Scott was trying to catch up with him.\" Katrina said.\n\n\"I need to talk to him. I know he probably hates me right now.\" She said, nibbling on her bottom lip.\n\n\"I doubt he hates you. He's probably just as mad as you are if not more upset.\" Dominique sighed.\n\n\"Here let me call Scott and see if he knows where James is.\" Katrina said picking up her phone.\n\nJade waited impatiently as she watched Katrina like a hawk talking to her Scott. Her heart was crying for James to find him so that she explain everything, so he wouldn't hate her. No he couldn't possibly hate her but he could feel like he didn't want to deal with the drama. She just pleaded that he didn't give up on them. \n\n\"He's at the bar with Nik and Ramon so you better catch up with him.\" Katrina said and Jade nodded rushing to the door. She just hoped it wasn't too late.\n\nJames sat at the bar, nursing his second shot of whiskey, \"I don't need you guys as a baby sitter.\" James scoffed at the two sitting on his side.\n\n\"This isn't for our benefit but for others. You know you are crazy when you get mad.\" Nik said as the bartender sat his drink down, \"So, what now?\"\n\n\"I don't know. I'm just trying to clear my head and think.\" James said staring at the bottom of his glass. \n\nHe wanted to write off Jade and move on with his life, but not after hearing what he did. Not only was that but to see that she still wearing his dog tags did something to him. Why did everything have to have so much drama with this chick? He had to admit though; it felt real good to punch that little fucker across the face. He wanted to do more, but Scott was right; that wasn't the place. \n\n\"Look boss, why don't you take tomorrow off and I will handle everything. If anything gets too complicated, I will give you a call. You know you can trust me.\" Ramon smiled and James chuckled.\n\n\"I know Ramon and I may take you up on the offer. I think I just need some sleep.\"\n\n\"I think you may need another drink.\" He heard next to him and saw Deborah's devious smile next to him.\n\n\"Oh hell no, not you. I don't really feel like dealing with this.\" James said looking up at the ceiling.\n\n\"What's the matter baby?\" she said touching his arm and he immediately jerked it away.\n\n\"I have this bitch coming around me trying to ruin my life, that's what's wrong with me. The only reason that I'm not hopping down your throat is because you are a woman. You keep coming around me and pretty soon that won't matter to me.\"\n\n\"James, would you please stop with these idle threats? I don't understand what the big deal was. We explained what happened that night and it's not my fault that little princess there didn't want to believe you.\"\n\nHe opened his mouth and immediately shut it. She didn't know she was busted and he licked his lips, \"You can stop lying to me. I know that you plotted to set me up and make sure Jade caught us. I know the whole plan because there was someone unlike you that grew a conscious. Deborah, I told you I don't want you back. There is no us and never will be anything between us again, ever, in this lifetime, or the next.\"\n\n\"Yea, you are starting to make yourself look pathetic.\" Nik commented.\n\n\"Are you really talking to me?\" Deborah said as she tucked in her bottom lip, turning a different shade of red. \n\n\"You the one standing here with your feelings hurt.\" Nik said taking a drink.\n\nEveryone's attention turned to the door when it swung open and saw Jade standing there out of breath. She smiled slightly seeing James sitting there and that smile tugged at James a little. She quickly walked over to him overlooking Deborah standing there.\n\n\"James, I'm so sorry about what happened. Believe me, I didn't even know my sister would help them in something like that.\" She quickly explained as he looked back into her big sorrowful eyes.\n\n\"Oh please, are you serious right now?\" Deborah said and that's when Jade realized that she was there.\n\n\"What the hell are you doing here?\" Jade said turning her attention to her.\n\n\"I'm here trying to clean up the mess you made. You are trying to mess up a good person.\"\n\n\"I'm glad you recognize that he's a good person, but he's mine and I'm not about to lose him to some scheming, tacky, cheating ass blonde bimbo.\" Jade exclaimed and the guys were taken back by Jade. Neither of them has ever seen this side of her.\n\n\"Look, princess I don't have to take this crap from you, so just get your stuck up little tail home.\"\n\nJade sucked her teeth, glaring into her ice cold eyes and shook her head. She doesn't know where everyone gets this idea that she can just be walked all over. She was pissed enough at her sister and Dante, and now to have her in her face. This was truly enough for her, she thought as her blood quickly pumped through her like a roaring car engine.\n\n\"You know what, I'm tired of this.\" Jade said stepping back, \"I don't know where everyone gets this idea that they are going to just talk to me any type of way, but I'm going to settle this right now.\" She said lifting her foot one after the other to take off her shoes and chunk them down, \"Now I wanted to just slap you for you what you did but now I'm going to beat the hell out of you.\" Jade said rolling her sleeves and Deborah's mouth dropped and eyes got as big as saucers, \"And I'm going to do it until you get it through your head to stay away from what's mine.\" Jade took the earrings out of her ears and sat them on the bar, \"But I'm going to start by ripping every strand of hair from your head. You hear me?\" she asked as she grabbed Deborah's hair.\n\nShe gave it a hard tug and heard Deborah squeal. The guys were a little bit shocked at first but quickly regrouped as they went for both women along with the owner. James tried to pull Jade away but she had a death grip on Deborah's hair which made her scream louder. \n\n\"Jade, let go!\" James exclaimed but she still held on intent on holding up on her promise.\n\n\"Come on now, let go.\" Nik said trying not to laugh as he tried to loosen Jade's grip. \n\nJade tugged a little harder and finally let go staring a hole into Deborah as she rubbed her head, \"You're crazy!\" she shouted.\n\n\"You want to really see how crazy I am?\" Jade tried to get herself out of James's grip but he held on tight.\n\n\"Fine, you know what, you two belong together.\" ",
        "She said practically running out of the bar. After she left that's when Ramon and Nik took the time to laugh out loud nearly falling to the floor. Jade exhaled sharply as James slowly let her go and that's when he started laughing. Her head nearly spun around as she looked at him. \n\n\"This is not the time to laugh at me.\" She said.\n\n\"I'm not laughing at you; I'm just used to seeing you like this only with me in private.\" James smiled.\n\n\"Well, I'm pissed off, okay.\" She said squaring her shoulders.\n\n\"Put your shoes back woman.\" He said wiping his hand down his face and she couldn't help laughing a little.\n\nHe looked over at her and her eyes soften as she stared back at him. Her heart started to swell and she wasn't sure what to say but one thing, \"I love you.\" She said her voice shaking and his features softened a little, \"I love you so much and I'm so sorry.\" She threw her arms around him, crying on his chest.\n\nShe held on to him tighter, laying her head against his chest. She didn't care how she looked or what people may think, she just wanted to feel him. James was debating with his body on what he wanted to do. He was just contemplating on what to do next, but when she said those three words he did what came naturally. He wrapped his arms around her, laying his head on top of hers and felt her body shake as she sobbed against him. \n\n\"It's okay baby.\" He soothed, kissing the top of her head.\n\n\"No, it's not. I hurt you and I don't know why but I did. I should have believed you and I should have trusted you.\" She said looking up at him.\n\n\"Yes you should have.\" He said wiping the stray tear from her face, \"But its okay. Never thought your sister hated me that much and so far as Dante goes...\"\n\n\"I don't care about them. All I care about is you.\" She said cutting him off and one corner of his mouth turned up.\n\n\"Um, you two should go ahead and get out of here. You don't want to make other people jealous or sick over this little love fest.\" Nik said and James narrowed his eyes at him.\n\n\"I'll meet you at my house?\" James asked and she nodded.\n\nJames paid his tab as she left the bar, \"Ramon, you can watch the shop tomorrow.\" James said and Ramon just nodded.\n\n\"And I will take him home.\" Nik added as James headed to the door not even paying much attention to them.\n\nHe made it home just shortly after and saw that she used her key to get in. He walked in shrugging his jacket off as she stood in front of the fireplace. He wrapped his arms around her waist and she leaned back against his warmth. She held on to his arms as his scent filled her nostrils making her legs tingle. There was so much about him that made every nerve in her body stand on end. \n\nHe reached for the chain around her neck and pulled out the tags, \"I never took them off.\" She said and he turned her around to face him.\n\n\"I know, princess. You have to learn to trust me though. You know I have nothing but your best interest at heart.\"\n\n\"I know. I knew it before but you aren't him and you won't do anything to hurt me.\" She reached on her toes.\n\n\"Hey,\" she paused to look up at him, \"I love you.\" She felt so light, like she was floating away from her body when he said that and she smiled.\n\n\"I love you too.\" With that admission, he leaned down and pressed his lips to hers, pulling her into him.\n\nShe grabbed on to his hair and he possessed her mouth, pushing his tongue in her mouth to caress hers. He lifted her up against him and she wrapped her legs around him not caring how her dress rose up. She just wanted to be as close to him as she can as she enjoyed the way his beard tickled her chin.\n\n\"Baby, maybe you need to think about shaving a little and since I have a key to the house, we can cut out the rest and have you move in with me.\" she smiled as his eyebrow shot up, \"And maybe you can start to give up smoking. I told you it's a nasty habit and ...\"\n\n\"Hey princess, how about you fuck me first and then we worry about the rest later?\" he said lifting her over his shoulder as she started laughing and carried her upstairs.\n\n\"You don't have to talk to me like that.\" She giggled as he slapped her butt\n\n\"That's okay because you know you like it that way.\" He said as he finally made it to his bedroom door, slamming it shut.\n\nJade stood in the shower, her hands braced against the wall. She looked back at the man she loved as he pounded inside of her. Oh, she will never get tired of him being inside of her. What started off as a shower by her self, quickly turned into him joining her, kissing on her neck. She thought after last night he would be exhausted but he was as insatiable and she was when it came to each other. Her toes were starting to curl as her body started to quake. Oh that delicious sensation was within reach. She licked her lips as he pulled her body against his, still thrusting relentlessly into her as one hand came and plucked her clit.\n\n\"Oh James.\" She moaned her hand came up and tugged on his hair.\n\nHe pumped into her until he released deep inside and felt her unraveling in his arms. He had to place one hand against the wall to steady himself as her pussy milked his cock. She leaned her head back on his shoulder and she pulled his head down to hers, kissing him deeply. \n\n\"What did I tell you about getting my hair wet?\" she whispered to him.\n\nHe chuckled a little, \"Hey, you took the risk by stopping what you were doing this morning.\"\n\nHe kissed her briefly again, before moving away from her. He quickly washed himself as Jade watched him. Just by looking at him, he could turn her on. She bit her bottom lip and he cocked his head to the side.\n\n\"Come on baby, we have to get out of here.\" he said, \"That buyer is coming by to see this place in a little bit.\" \n\n\"I guess I do have to let you go.\" she said poking out her bottom lip.\n\n\"Don't worry baby, we still have the rest of this weekend. Ramon won't show up till early in the morning.\" he said as he stepped out of the shower. \n\nJade smiled to herself as she finished her shower. It had been six months since that night of the party and every thing went back to the way it was before that horrible plan. Only better. Nicole started working for Dominique part time at the office as a secretary while she was in school. She actually has adjusted to life on campus and even joined a book club on campus. She still hasn't gone out with anyone really, but Jade had a feeling that she was waiting on Ramon. As for Gale, Jade hasn't really talked to her like the way she used to. It's hard to go back to that relationship after everything she tried to do. Jade would just tell Gale that maybe one day it could be like it was, but she wasn't making any promises. One good thing that she did hear was that her and Ryan are separated, so maybe there was still hope for Gale. Kendra had her beautiful baby boy and they named him Gabriel. It's amazing how much he looked like Ricky and even acts like him. When they take him to the store and a woman would lean down to say how cute he was, Gabriel would smile big and flirt. Yep, just like his daddy. Katrina and Scott were good too, expecting their first child. She wanted to hold off knowing the sex until he/she gets here, which made it very difficult for everyone to know what to buy for the baby. Dominique released her book a couple of months ago and it's actually doing pretty well. Jade read some of it and it was actually pretty accurate; although, there were some parts where it looked like she was talking about Nik, especially when it came to the chapter, Beware of him. Jade chose to stay out of that one. She would let them two straighten that out. \n\nJade finally emerged from the bathroom putting on a white sundress and piling her hair in a ponytail. She figured that James was down stairs working on the kitchen. She wished he would wait till Ramon get here to help him, but she knew she couldn't stop him. Back home, he still had his own place but he was talking about them moving to a bigger place together. She was stunned when he made the announcement mainly because she wasn't sure if he would be up for it, but he was. They had been talking about marriage lately too, but she didn't want to pressure him. For now, she was happy that they were back together. \n\nThey have been coming up to the little bed and breakfast almost every weekend to help fix it up and to get away from it all. She did really love it out here, especially at night. Now, Sergeant Kipling finally got a buyer for this place and agreed to pay James for all the work him and Ramon had done so far and that they would have VIP treatment when they come to visit. James didn't know much about the buyer but he was coming down here to check out what he has done. So far, everything was finally coming along. It got a little rough but in the end it worked out for the better. Jade finally got what she had wanted all along.\n\nShe went downstairs ready to help anywhere she can and saw James as a limo pulled up. That must be the buyer she thought to herself and started to pick up a little of their mess. \n\n\"So, you see Mr. Adlam, the place is really in good condition.\" she heard James say as she continued to clean.\n\n\"I see. You have done a very good job here.\" the man said in a thick Irish accent. \n\n\"Thank you, oh and I would like for you to meet my girlfriend Jade. Jade, this is Mr. Adlam.\" \n\nJade looked up at the man and saw him towering over here in his crisp suit. He had jet black hair pulled back away from his face and beautiful grey eyes. Something about those eyes looked familiar to her though.\n\n\"Jade, huh? I see you dropped your first name, not to mention the braces.\" he said nearly blinding her with his perfect teeth.\n\nBraces? Her breath caught in her throat and her eyes widen when she realized who was standing in front of her, \"Oh my God. Patrick?\""
    ],
    "authorname": "Myanlass",
    "tags": [
        "interracial drama",
        "interracial novella",
        "drama",
        "interracial romance",
        "romance drama",
        "erotic romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/rough-around-the-edges-ch-09"
}