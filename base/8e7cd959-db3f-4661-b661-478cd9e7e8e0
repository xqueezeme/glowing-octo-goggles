{
    "title": "His North Star",
    "pages": [
        "\"As an Emergency Doctor, there are seven things you should know.\n\n\"Number one--you'll kill someone one day. It's going to happen. You'll often need to make critical decisions with no patient history to guide you. You'll make the right call most times. But a few times, you won't and you'll lose the patient. When that happens, learn what you can from the situation, forgive yourself and move on. You will kill someone. Accept it now and you'll handle it better when the time comes.\n\n\"Number two--half of what comes through the door aren't legitimate emergencies. What'll make you efficient is being unapologetic about priorities. If some idiot limps in with a sprained ankle and whines that he hasn't been treated while cardiac arrest cases are pouring in at the same time, tell that limping bastard to shut up, sit the hell down and wait.\n\n\"Number three--people are weird. They perform acts you'd never dream of, and insert unthinkable objects into orifices where such objects should never be inserted. After a week in this ER, nothing will ever surprise you again.\n\n\"Number four--spring is suicide season. The assumption is that suicide peaks in winter, because of holidays and the weather. That's bull. Suicide rates are lowest in winter. People kill themselves in April and May, with the sun shining and flowers blooming.\n\n\"Number five--burnout is real. If it hits you hard enough to affect your mental health, don't try to power through. That's a great way to endanger your patients. If you're about to crash, let me know. I'll see that you get a break as soon as scheduling allows.\n\n\"Number six--you'll be sued at least once before you're 50.\n\n\"And number seven--you'll save lives on every shift. That's why you'll enjoy this job as much as you'll detest it. Questions?\"\n\nThis was the opening speech of Dr Elizabeth Elgar, an ER Attending physician, to the 8 new residents under her supervision.\n\nThe residents were between ages 27 and 29. All had done pre-med courses, attended medical school, gotten their M.D.s, completed their internships and a year's residency in Internal Medicine.\n\nAlthough it was their first day of Emergency Medicine, it was their second year of residency overall. The first year in Internal Medicine was mandatory for their program. They were in for three years of Emergency Medicine residency before they'd be full-fledged Attendings.\n\nNathan Bellamy, 27 years old, was among this crop of residents who stood listening to Dr Elizabeth Elgar's speech.\n\nNathan had no illusions. He had a damn good idea what this job involved--he'd already been a doctor for 2 years. Yet with a streak of the hope that had always sprung eternal in him, he let himself believe Dr Elgar was exaggerating. Just slightly, to drive her points home.\n\nAs the weeks of his residency passed, Nathan found she hadn't exaggerated at all.\n\nBut it wasn't until April 1982, two-and-a-half years later, that her speech hit home for him.\n\n*****\n\nAuthor's Disclaimers: Suicide is a major theme in this story. If you find this theme distressing, please don't read further. <br>There are Emergency Room scenes and I haven't shied from details. If you're easily queasy, beware. <br>If you enjoy reading about brutal punishments heaped on women who stray, this story isn't for you. Any comment glorifying violence or containing hateful slurs will be deleted. <br>This story is long. The pace is unhurried. The writing is descriptive. These are features, not bugs. If you prefer wham-bam stories, you're not the target audience here.\n\n*****\n\nPART ONE: THE KID <br>\"I sometimes lie awake in the sawdust, dreaming I'm in a suit of light.\" Buddy Mondlock, The Kid.\n\nNew York, April 1982\n\n*\n\nDelta Lake was to one side of him. To his other side were trees on an elevated ridge.\n\nDr Nathan Bellamy was at the wheel of his AMC Eagle, driving to the place he'd worked at for the last 4 years; Delta Lake Hospital. It was a Level I trauma center in upstate New York. In the city of Rome at the foothills of the Adirondacks. The hospital was a convenient 3 miles from the Lake Delta Fire Department, and a bearable 10 miles from his apartment.\n\nHe worked 12-hour shifts; morning, afternoon or night. Whenever his shift began in the morning, he always stopped at a certain inn for breakfast. It wasn't much of a detour from his route. He turned left before the dam and followed the road for a mile until he reached Rossini's Inn.\n\nHe'd done that this morning.\n\nGiorgio Rossini owned the inn. His wife had handled the running of things, but chronic kidney failure had claimed her two years ago. When Giorgio became widowed, his daughter from a first marriage had moved from Buffalo to help him. Emma Rossini, with a recent degree in Business Admin, had been in the position to seamlessly pick up where her stepmother had left off.\n\nGiorgio ruled the kitchen. Emma ruled everything else.\n\nThat morning, Nathan drove to Rossini's Inn, walked into the breakfast parlor and parked himself at an empty table. A waiter had come, poured him coffee, and taken his order.\n\nAs he'd sat drinking it and waiting for his breakfast, Emma had come in from the garden, crossing the breakfast parlor towards the kitchen; probably going to speak with her father about something. When she'd spotted Nathan, she'd walked over to his table. \"Good day to you, Dr Bellamy.\"\n\nNathan had given her a ceremonial nod. Overly formal greetings were their personal joke. \"And a good day to you, Miss Rossini. I trust you're in good health.\"\n\n\"I am indeed in good health, thank you Doctor. And yourself?\"\n\n\"I too am in good health.\"\n\nEmma laughed. She cut a slender, long-legged figure as she leaned her hip against his table. Her black hair was sheared to her angular chin, but her lace dress lent her a feminine air. \"The waiter's taken your order?\"\n\n\"Yeah.\"\n\n\"Good. I'll go hurry him up if he's taking too long. Will we see you the rest of this week?\"\n\n\"Probably not.\" Nathan brought his coffee cup to his lips, holding her brown eyes over the rim as he drank. \"I've got two late shifts, then I'm off a couple days until Friday. I'll use the break to go see my folks in Binghamton.\"\n\n\"I'm glad to hear that. It's been months since you visited your parents.\" Emma straightened. \"Because you're being a good boy, you get a reward. I'll throw in a honey muffin on the house.\"\n\nNathan grinned. \"A free muffin? I feel blessed.\"\n\nEmma laughed again; a rich yet light sound. \"As you damn well should. Dad's honey muffins are the best in a 300-mile radius. I'll tell him you're here. If he gets a minute, he'll come say hi. We'll see you sometime next week?\"\n\n\"Definitely. Have a great day, Em.\"\n\n\"I sure will. And you too.\" Emma flashed him another smile before she stepped away from his table and headed for the kitchen.\n\nNathan watched her go.\n\nHis breakfast came a couple minutes later, brought to his table by Giorgio himself. With his free muffin in a doggy bag, he went on his way. He arrived at Delta Lake Hospital in time to start his 8:30a.m. shift at the Emergency Department.\n\nIn some hospitals, ER doctors at the end of their shifts signed any remaining patients over to the doctors starting their shifts--which was great for the outgoing doctors. In other hospitals, ER doctors stayed until all their patients were either admitted or discharged--which was great for the incoming doctors.\n\nDelta Lake Hospital was the former. As soon as Nathan changed into his scrubs and white coat, three patients were signed over to him. This was despite that 9 other doctors were currently working shifts and the whiteboard at the nurse's workstation had several names waiting.\n\nClearly, it had been busy overnight.\n\nNathan's first patient was an elderly man whose grandson brought him in because he'd suddenly begun having seizures. Nathan examined the elderly man, took a history, gave him an anticonvulsant, sent him down for an EEG, and referred him to the Neurological Intensive Care Unit.\n\nHis second patient was a younger guy with second-degree burns on both legs. Nathan treated the burns and had him discharged.\n\nHis third patient was a middle-aged woman. There was a corn cob lodged up her ass. When he asked her how the corn got there, she flushed crimson and looked away.\n\n\"I was walking around the house and I fell on it,\" she muttered.\n\nNathan looked at her expressionlessly. \"You were walking around your house as usual, then you suddenly tripped and fell on a corn cob, causing it to become wedged in your anus?\"\n\nThe woman flushed redder yet. \"I, um, yes.\" Still refusing to meet his eye, she added, \"I...I've tried everything. I even tried a laxative, but it didn't work. It's...um, well, it's too big for me to poo it out.\"\n\n\"I see,\" was Nathan's deadpan reply.\n\nThere was a nurse in the consulting room with them. The nurse's eyes were dancing with amusement, but she managed to suppress an outright smile.\n\n\"I'll send you for an X-ray of your rectum,\" Nathan continued to the patient. \"I'll need to know the corn's depth before I try extracting it.\"\n\nHe sent her for the X-ray. An hour later, he pried the stinking, shit-covered corn out of her dilated anus using biopsy forceps.\n\nWhen she thanked him, he replied: \"Glad I could help, but understand that this was the best possible outcome. Objects in the rectum can cause complications, like inflammation or infected perforations. Those can be fatal.\" Keeping his straight face, he added: \"If I were you, I'd be more careful while walking around my house. Don't trip and fall on any more corn cobs.\"\n\n\"Of course,\" she muttered.\n\nNathan nodded. \"If you head back to the waiting room, the nurse will meet you there.\"\n\nThe instant the crimson-faced woman stepped out, the nurse burst out laughing. She laughed and laughed, bent double. \"I have a damn fine prank to play on my husband tonight. I'll grill some corn cobs for dinner, wait till he's munching away, and tell him this story.\"\n\nNathan allowed himself a smile. \"You'd do that to an innocent guy? You're a cold woman.\"\n\nThe nurse laughed merrily on. \"He's not innocent. Yesterday, he didn't wash the dishes when I asked him to. He's brought this punishment on himself.\"\n\n\"Before you go punish him, you think you could finish up with this patient? Schedule her for a follow-up sigmoidoscopy, keep her in Observation for a few hours, then discharge her.\"\n\n\"Sure thing.\"\n\nHis next patient was no laughing matter. She was a car accident victim. An ambulance brought her in, but she was awake and alert. A quick examination assured Nathan she had no major head injuries, but when he listened to her chest, he knew what the problem was. Her heartbeat was too fast, her breathing was too quick, and the skin over her left ribs was bruised.\n\nAs Nathan listened to her chest, he tapped for hollow sounds. With each tap, she winced. He examined her face, assessing the level of her pain and noting her bluish pallor. \"On a scale of 1 to 10, how bad is the pain?\" he asked.\n\n\"Nine,\" she whimpered. \"It's like a stabbing pain.\" Her eyes welled. Her voice wobbled. \"It hurts worse when I breathe.\"\n\n\"Don't be afraid. You'll be fine.\" Nathan straightened, pulling his stethoscope out of his ears. His suspicion was pneumothorax--that her ribs had broken, punctured one lung, and collapsed it.\n\nBut he didn't say so yet. There was no point scaring her more than she already was. He said, \"Let's get you sent for a CT scan, okay? That way we'll know exactly what we're up against. A nurse will stay with you.\"\n\nHe was correct; when the CT scan came back, it showed a collapsed left lung with fractures severe enough to need surgery. With an intern and a nurse assisting him, Nathan intubated her to drain the air in her chest, then he paged a Trauma Surgeon. As soon as he'd briefed the surgeon, she was on her way to the Operating Room.\n\nWithout skipping a beat, Nathan moved onto the next name on the whiteboard; a toddler with a widespread purple rash and running a 105-degree temperature. Bacterial meningitis. After treating the toddler, he took a short lunch break then moved on to the next patient.\n\nNathan continued at this pace of controlled chaos until evening.\n\nBy 6:00p.m., he was stitching up a guy who'd been bitten while breaking up a dogfight. The wound was deep, jagged and spurting fresh blood, so the sutures took a painstakingly long time. A nurse was there, assisting him by cutting the suture after he made each knot.\n\nThe patient watched Nathan uneasily the entire time. At last he said: \"Look, doc, you don't really got to report this to Animal Control, do you? He's my dog. I know him. He's vaccinated. I've shown you his certificate. He's not aggressive either. It was my own damn fault for sticking my arm between two fighting dogs. He shouldn't get punished because I was stupid. Do me a favor and don't report this.\"\n\nNathan glanced up from his stitching. The request irritated him. In the first place, it was his medical license on the line if he didn't make the report. In the second place, the long hours were starting to wear his patience thin. \"I'm bound by law to report all animal bites.\"\n\n\"But he isn't dangerous.\"\n\n\"That's not the point. Our priority is your safety and the safety of others. When I make the report, they'll double-check the vaccination certificate and observe your dog under quarantine for a few days. If it's sick, you'll come back here for rabies shots. If not, you're all clear. Either way, this bite is bad enough that a black mark will be put against your dog, but if this is the first time it's bitten anyone, and you prove it didn't attack you without provocation, it probably won't be put down.\"\n\nThe patient scowled, but didn't argue further.\n\nNathan finished the suturing and turned to the nurse assisting him. \"You can start the discharge process,\" he said to her.\n\nHe went to phone Animal Control, but he'd barely taken one step out into the busy corridor when he saw a Triage Nurse striding his way. Worry was written on her face. She began speaking before she reached him.\n\n\"Dr Bellamy! Thank goodness. You're the only doctor not busy right now. A patient just came in. Male. Age 18. Purposely swallowed sodium hypochlorite pills. He left a suicide note. His elder sister got home early, caught him and called an ambulance. He doesn't know how many pills he took, but this is the bottle.\" She handed Nathan a small plastic jar.\n\nThe bite-happy dog was immediately shelved lower on Nathan's priority list. He scanned the pill bottle's ingredients in a matter of seconds. The pills were industrial strength, each with 1.7mg sodium hypochlorite. The pH was 11.4.\n\nThe bottle was almost empty. Even if it'd been only a quarter full, this was a case of massive toxicity.\n\n\"Shit,\" Nathan muttered under his breath.\n\nHe went with the Triage Nurse, taking brisk strides down the corridor. He hadn't lost a patient today. It was a couple hours until his shift was over, and he prayed he'd go this whole shift without any deaths.\n\nDespite the icy discomfort clawing up his spine, and that the analytical side of his mind was working at 1000 miles per hour, Nathan spoke coolly. \"He's alert?\" he asked the nurse.\n\n\"Barely conscious,\" the nurse replied. \"Vomiting blood and can hardly speak.\"\n\nThey stopped at a door. Nathan glanced at the chart to check the patient's name, then he shoved the door open, nodding to the Triage Nurse in dismissal. She returned to the nurse's workstation. He went into the patient's room.\n\nThe combined stench of blood, shit, vomit and chlorine punched Nathan in the gut the instant he opened the door. Despite that, he didn't outwardly flinch. He went inside, shutting the door behind him. In the room were two nurses, an orderly, and the teenage kid.\n\nThe kid had a bucketful of vomit beside him. The vomit was liberally laced with fresh blood. He lay half-upright, sagging on the bed. He'd shit himself, the back of his jeans stained with the feces. He looked up with empty blue eyes as Nathan stepped inside.\n\nThe emotionlessness in the kid's eyes gripped Nathan's spine like an icy fist. This kid had chosen an excruciatingly painful way of killing himself, yet there was nothing in his expression. No pain. No fear. No regret. No sadness. Nothing.\n\nNathan stepped towards him, assessing. This was sodium hypochlorite toxicity alright. He was sure of it even without a blood electrolyte panel. The stench of bleach oozed from the kid. The bloody vomit meant that his stomach and intestines were perforated. His eyes were red and watery; irritation. There were black marks inside his lip; his mucosal membranes were corroded.\n\n\"Jason Holst?\" Nathan asked.\n\n\"Y-ssss,\" the kid replied. His speech was slurred and his voice was thin--the tissues of his vocal cords had begun to necrotize.\n\nBut at least he was conscious and responsive. It was just possible he might survive what he'd done to himself.\n\n\"I'm Dr Bellamy,\" Nathan said. \"And we're going to fix this.\" He rubbed his hands with alcohol. As he put on sterile gloves, he fired a question to the nurses. \"You've taken his blood pressure?\"\n\n\"Yes,\" one nurse answered. \"He's at 79/51.\"\n\nNathan swore under his breath again--that blood pressure was way too low for his liking. He stepped up to the kid's bedside, suppressing nausea as the reek of shit and vomit intensified. \"Jason,\" he said, bending to meet the kid's eyes. \"I need you to answer a couple questions for me. Help me out, okay? How many of those pills did you swallow?\"\n\nJason's body jerked, wracked by a violent fit of dry heaving that almost made Nathan wince. \"I d'nn kno...\" he hissed when the fit allowed him to speak.\n\nAs the kid spoke, Nathan examined the inside of his mouth. His gums and tongue also were black with corrosion. Wetness dripped down his chin; hypersalivation.\n\n\"Did you swallow a handful?\" Nathan persisted.\n\nThe kid stared into Nathan's eyes. \"T'w h'n'fl'ss.\"\n\n\"Two handfuls?\"\n\nThe kid nodded in confirmation.\n\n\"Did you take anything else?\" Nathan asked. \"Painkillers? Stimulants? Depressants? Alcohol? Weed? Hallucinogens? Anything?\"\n\nThe kid shook his head repeatedly. \"N-n-noth'n.\" Sucking in a sharp breath, he grabbed the bucket and retched into it, expelling more blood than vomit. Then, seeming spent for the moment, he collapsed on the bed, wheezing.\n\nNathan picked up the bucket to examine its contents. The color was deep copper. The consistency was thin and lumpy. He set the bucket down and turned to one nurse. \"Take arterial blood. Rush it to the lab. Do whatever you need to push the results out ASAP. I want gases and a full electrolyte panel.\" To the other nurse he said, \"We'll intubate him.\"\n\nWhile the first nurse drew blood from the kid's wrist, the second nurse prepped for intubation. It took all of a minute for the first nurse to swab, draw, cap and label. With the blood sample in hand, she burst from the room. The second nurse was gloved. She'd laid the equipment out and was putting pressure on the draw site at the kid's wrist.\n\nThe kid lay sprawled on the bed. He hadn't even seemed to notice that his blood had been drawn. He was unmoving, his breaths growing shallower.\n\nBefore intubating him, Nathan tried to get a response. \"Jason,\" he said, touching the kid's cheek.\n\nThe kid's eyelids flickered. He looked up at Nathan dazedly, but otherwise didn't respond. His eyes closed again.\n\n\"Jason,\" Nathan said again, authoritatively.\n\nThere was still no response from the kid. His eyes stayed closed. His body was lax. He was unconscious.\n\nNathan turned to the nurse and nodded.\n\nThat one nod was all the communication they needed. They repositioned the kid flat on his back. His throat was already relaxed, so the nurse opened his mouth wider, keeping his tongue down while Nathan guided the laryngoscope into his trachea. He inserted the tube. Once it was in, he inflated the balloon and listened to the kid's chest.",
        "Satisfied that the breath sounds were the same in both lungs, Nathan straightened. \"Ventilate him.\"\n\nThe nurse nodded. She attached the tube to the mechanical ventilator, pumping oxygen into him.\n\nNathan monitored the kid's vitals. When his blood pressure started to dip even lower, he had the nurse start fluid resuscitation while they waited for the electrolyte panel results.\n\nTwenty minutes later, the first nurse rushed back in with the test results. \"I've got it, Dr Bellamy.\"\n\nNathan took the chart from her. Although he knew what the results would be, he was disappointed at the numbers. The kid had severe hypernatremia and hyperchloremic acidosis--there were too many sodium and chloride ions in his blood.\n\nNathan set the chart away. \"Give him sodium bicarb, 8.4% strength intravenous injection,\" he said to the nurses. \"Then get naloxone hypochlorite going through his I.V. infusion. Start at 60% and keep an eye on his vitals. Page me the instant anything changes.\"\n\n\"Yes, Dr Bellamy.\"\n\nAs the nurses gave the medication, Nathan stepped out of the room. Leaning against the closed door, he took a deep breath of untainted air. It didn't help much--the reek of blood, shit, vomit and bleach was burned into his nostrils.\n\nHe glanced at his watch. 7:52p.m. His 12-hour shift was nearly over. He could leave and sign the kid off to the incoming doctor, but he wouldn't. Not a chance in hell. This kid was his patient. He'd see this through himself. He'd keep the kid alive.\n\nStraightening, Nathan went down an adjacent corridor to the breakroom. Another doctor was there, inhaling a sandwich. They greeted each other with weary friendliness. Going to the coffee machine, Nathan poured himself a cup. He downed it in one gulp.\n\nDamn. Just, damn. An 18 year old kid had swallowed handfuls of industrial-strength bleach, knowing what would happen. He'd shown no fear as it happened...as his throat and his guts corroded...as he gasped for breath and vomited blood.\n\nTo think there were people who still spouted the worn-out spiel that suicide was a 'cowardly' act. Fucking fools. Were such people ignorant, or did it go deeper than that? Did they intentionally dismiss suicide as a cowardly act so they could absolve themselves of any responsibility to prevent it?\n\nHe didn't know. But one thing was for sure; the kid on that ventilator was not a coward. It must take guts for a human to override the inbuilt biological imperative to survive. It must take sheer fucking guts to pick such a painful way of ending it.\n\nNathan slumped into a chair and stretched his legs. He was seated for a mere fifteen minutes when the Code Blue came. There was a cardiac arrest in the kid's room.\n\nNathan's blood iced over. He shot to his feet and out of the breakroom.\n\nThe corridors were busy, but he didn't have far to go. The door was already ajar. He burst in. The Code Team--a nurse, an orderly and a respiratory therapist--was behind him, rushing in with the crash cart.\n\nThe original two nurses had flattened the kid's bed. One of them was doing chest compressions. The other was monitoring the kid. Her eyes were wide. Her voice was urgent. \"We're not getting a pulse, Dr Bellamy! He seemed like he was stabilizing, then he suddenly started coding!\"\n\nWhat happened next, took thirty minutes.\n\nThe respiratory therapist took the kid off the ventilator and manually bagged him. Two nurses placed the pads underneath him as the third nurse continued the chest compressions.\n\n\"Give him 1mg epi,\" Nathan said to the nurse who wasn't performing the chest compressions. After she'd done that, he turned to the Code Team nurse. \"Charge once he's in v-fib.\"\n\nThe nurse strode to the other side of the bed, to the display. Once the kid had a shockable rhythm, the nurse set the level to 200 Joules and jammed down on the charge button.\n\nNathan grabbed the defibrillator. \"Clear!\"\n\nEveryone took their hands off the kid. Nathan put the defibrillator pads to his chest, pushed the buttons down and delivered the shock. His body jerked. They all checked the monitor--the heart rhythm was still in ventricular fibrillation. Normal cardiac function hadn't restarted.\n\nHis blood like ice, Nathan barked at the nurse, \"Start compressions again.\"\n\nThe respiratory therapist bagged the kid and the nurse restarted the compressions, pumping hard for two minutes.\n\nMeanwhile, Nathan told the Code Nurse at the machine, \"Turn it up to the maximum.\"\n\nShe did. When he nodded at her, she hit the charge button.\n\nNathan held up the defibrillator. \"Clear!\" He put the defibrillator to the kid's chest and delivered the shock. He glanced at the ECG monitor again. The kid was still in v-fib. There was still no regular rhythm yet.\n\nNo! No, God, no! This wasn't the way his shift would end! This fucking kid was not going to die on him!\n\n\"Again!\" Nathan barked to the nurse doing the chest compressions. After another round, he nodded to the Code Nurse and she charged the defibrillator again. \"Clear!\" He delivered the third shock.\n\nStill nothing. After another round of CPR, it was game over. The kid had no cardiac activity at all.\n\nBefore Nathan could call for the chest compressions to start again, a nurse raised the kid's eyelid. \"Pupils are fixed,\" she said. She reached in her scrubs for her flashlight, clicked it on and shone it in his eyes. \"No constriction.\" Her own eyes wide, she lifted them to Nathan's. \"Dr Bellamy, I think...\" Her voice shaky, she trailed off.\n\nNathan swallowed the icy lump in his throat. He held the nurse's gaze for a beat, then looked down at the teenager. A kid with his lips, gums, throat, stomach and intestines corroded by the handfuls of bleach pills he'd swallowed like vitamins.\n\nA kid who'd ultimately succeeded in his objective. He'd gotten what he wanted--death. But why? What possible reason would a teenager have to choose this fate for himself? What had sunk him to this depth of self-destruction?\n\n\"His etCO2 is 6,\" the respiratory therapist said. \"The kid's gone, Dr Bellamy. We're not getting him back. I think we need to call the time of death.\"\n\nThat was true. He needed to call it. Nobody else in this room was authorized to do that. Turning away from the dead teenager, Nathan looked at his watch. With his throat burning as though he'd swallowed bleach himself, he said: \"Time of death, 8:42p.m.\" Right at the close of his shift. What a way to end it.\n\nThe Code Team quietly dispersed. The two nurses were quiet as they tidied the room.\n\nThe dead teenager lay silent.\n\nNathan left the room. He stood in the corridor, giving himself a minute to decompress before he went to the nurse's workstation.\n\n\"In 5 minutes,\" he said to the nurse at the desk, \"Have Jason Holst's elder sister brought to Consulting Room 4. I need to talk with her about her brother.\"\n\n\"Sure thing, Dr Bellamy.\"\n\nNathan went into the empty Consulting Room 4. He turned on the lights and sat behind the desk. This was one of the things he hated most about his job. Every time he lost a patient, it killed a piece of his soul.\n\nThis time it was a teenager. Just a kid. Hell. For the first time, Nathan gave serious consideration to how long he could last as an ER doctor, until everything within him burned out.\n\nIt wasn't uncommon for doctors in residency to quit because of burnout and disillusionment. Of the seven other doctors who'd begun this ER residency at the same time as him, five now remained. One had switched her specialty to Dermatology, where the stress and mortality rate were a lot lower. The other had given up on medicine altogether. He now owned a hardware store in Brooklyn.\n\nWhile it was true that Emergency Medicine had two big advantages over all the other specialties, there were also drawbacks. An ER doctor never knew who'd walk in, what their problem would be, and how severe. It wasn't that way in other specialties. There was some predictability there. A nephrologist treated the kidneys. A pulmonologist treated the lungs. A geriatrician treated the old. A pediatrician treated the young.\n\nBut in Emergency Medicine, you never knew. That minute-to-minute strain, and the pressure to stay efficient despite it, was something ER doctors alone faced.\n\nNathan felt the strain every minute. And when he lost a patient, he lost a piece of his soul.\n\nThe door opened and the dead kid's sister was ushered into the room. She was a young woman in her early twenties, with a sweet face. And he was about to tell her that her little brother was dead.\n\nNathan stood. \"Miss Holst?\"\n\nThe young woman nodded, dabbing her eyes with a tissue. \"Yes.\"\n\n\"Please sit.\" He gestured to the chair across the table. \"I'm Dr Bellamy. I gave your brother first-line treatment for his toxicity.\"\n\nThe young woman sat, squeezing the tissue. \"Is he okay now? Is he stable? Can I come to his room and see him?\"\n\nNathan paused a second, steeling himself. \"Miss Holst, I'm sorry to have to tell you--\"\n\nThis was as far as he got before her expression turned stricken. She blanched. All color drained from her face, she stared mutely at him.\n\nThen her face turned pink again. Her eyes closed. She slumped down, slamming her head on the table as a half-broken sob escaped. \"He's dead, isn't he? He's dead! That's what you're about to tell me, isn't it? Jason's dead! That's it, isn't it? Dead! Dead! He's dead!\"\n\nShe slammed her head on the table again. Hard. \"Dead! He's dead! Jason! Jason!\" Like a lunatic, she continued slamming her head. Her skull made a sickening thud as it hit the wood. \"Dead!\" She hit her head. \"Dead!\" She hit her head. \"Dead!\"\n\nWhen she was about to slam her head again, Nathan had enough. She'd fracture her skull long before the table would splinter, and he didn't want to have to admit her too.\n\nSitting forward, he slipped his hand between her head and the table. Her forehead landed into his cupped palm. His knuckles took the brunt of the hit against the wood.\n\nShe looked up, gazing at him as though she'd forgotten he was even there. Their eyes held, both silent. Hers filled with tears. She sank her head down once again, letting it rest in his palm.\n\nAnd she wept.\n\nShe sobbed for an hour straight, her tears flowing unchecked into his palm.\n\nIt was 10:05p.m. and although his shift was long over, he didn't hurry her or interrupt her weeping. He waited until she finally quietened and raised her hot head from his palm. Her face was a blotchy mess. Nathan withdrew, getting a paper towel to wipe her tears from his hand.\n\nShe dabbed at her face. \"Sorry,\" she rasped.\n\n\"Don't apologize. Where your parents? Why are you here alone?\"\n\nHer lip quivered. \"There's nobody else. Our mother died when Jason was only a baby. Our father remarried a few years ago. She made him kick us out. I live...lived...with Jason. I work two jobs. We don't have insurance so I don't even know how I'm going to pay this hospital bill.\" Her voice broke again. \"I've tried calling Dad a thousand times but it keeps going to voicemail. Mom would never have done this to us. She cared about us. He doesn't anymore. And now my...my brother is dead.\" She erupted into fresh sobs.\n\nAgain, Nathan waited until she regained some composure. \"I'm sorry. We lost him because he went into cardiac arrest and couldn't be resuscitated.\"\n\n\"What's going to happen now?\" Her breath hitched. \"What'll I do?\"\n\n\"Your brother will be handed over to the Toxicologist and the Pathologist for a post-mortem. In severe poisoning cases like these, a complete toxicology report takes several weeks. You'll be kept updated, and you'll be informed as soon as he can be released to a funeral home. In the meantime, if you need the services of a Chaplain or a Licensed Therapist, I can refer you.\"\n\nShe listened, half-sobbing. \"Did you do everything for Jason? Did you try your best to save him?\"\n\n\"We did what we could. We put him on oxygen and gave drugs to balance his electrolytes. For your sake, I regret that we didn't succeed.\"\n\n\"For my sake?\" She made a harsh noise. \"Why should anyone care about me? I was the one living with him. I knew he was having a hard time with his grades and bullies and the issues with Dad. But I was too busy to notice that he felt...hopeless.\"\n\nAs she said the word 'hopeless' her sobs began afresh. Her head fell into her hands. \"It's my fault. If I'd paid more attention...if I'd noticed he was suicidal...but I didn't notice. I was too busy working, and...and now he's dead. My baby brother's dead. I killed him. This is my fault. I should die, too. Oh, Jesus help me. I want to die, too.\"\n\nThe broken weeping restarted.\n\nNathan sat with the grieving girl for another half hour. They left the room together, and he escorted her to the Hospital Chaplaincy. He left her in the pastor's capable hands and he returned to the ER.\n\nIt was still bustling. Patients were arriving, nurses were triaging them, and doctors were picking names from the whiteboard. The death of an 18-year-old kid hadn't ground the place to a halt. The place hadn't so much as broken stride.\n\nWhile this was the ideal thing, it destroyed another piece of Nathan's soul.\n\nHe filled out Jason Holst's paperwork and had his corpse handed over to the Pathologist. After that, he found the doctor who'd begun the 8:30p.m. shift and signed his remaining patient off. It was now this new doctor's responsibility to phone Animal Control about that dog who'd bitten a chunk out of his owner's arm.\n\nAt last, Nathan changed out of his scrubs and left the hospital.\n\nHe drove home with the radio off. The icily corrosive lump was in his throat. It didn't matter that he'd saved a toddler with severe meningitis, and a crash victim with a collapsed lung. All that mattered was this teenager's death.\n\nBy 11:45p.m., Nathan unlocked his apartment door and went in.\n\nHis lone footsteps echoed as he went to the kitchen. He'd lived alone long enough to be a decent cook. He could throw a quick meal together, but he didn't. He wasn't hungry. Besides, the lump in his throat wouldn't permit food to pass.\n\nHe chugged a glass of water, went to his bedroom, stripped and got into his solitary bed.\n\nHe didn't drift off until 2a.m., but that was fine. His shift tomorrow didn't start until noon, so he could afford to sleep in. He set his alarm to 9:30a.m., and slept.\n\n**\n\nHe was at Delta Lake Hospital by noon the next day.\n\nAs usual, he saw a steady stream of patients. The difference was that he couldn't fully concentrate. The dead kid haunted his thoughts. Aside from that, there was a prickle at the back of his neck.\n\nThe prickle began as soon as he started his shift. It was an icy sensation that he had no logical explanation for. As though an invisible creature hovered over his shoulder, shadowing him...drawing closer and closer. Coming...\n\nIt arrived by 10:42p.m.\n\nHe'd finished up with a patient and was going for a 5-minute coffee break when the same Triage Nurse from last night strode to him.\n\n\"Dr Bellamy, we've got a high-priority. I haven't had time to put her name on the board. It's another suicide attempt.\" She sighed as she said it, handing Nathan a chart. \"Near-drowning. She loaded her pockets with rocks and walked into the lake. A guy camping saw her, fished her out and called an ambulance. He puts her submersion time at around 10 minutes. EMTs started resuscitation on the spot. Her spontaneous gasp after rescue was under 20 minutes. She's conscious and talking now. Says she's got a headache.\"\n\nThe prognosis sounded good, but with near-drowning, there was always a risk of bacterial pneumonia or delayed drowning. It'd be good to know if she'd had any lung problems in the past.\n\n\"Do we have her medical records?\" Nathan asked.\n\n\"Not right now. Sorry.\" The Triage Nurse shrugged. \"She's a Canadian tourist, so there's no point trying the EMR. Her primary care doctor's in Qu\u00e9bec and we can't get him on the phone until tomorrow morning.\"\n\n\"Where've you put her?\"\n\n\"Room 11.\"\n\nThe icy prickle walking up his spine, Nathan walked down the corridor. He scanned the chart. The woman's name was St\u00e9phanie Chopin. 43 years old. Her temperature was 96.6. It was low, but she wasn't hypothermic. Her oxygen saturation wasn't dangerously low either. She'd probably live.\n\nBut then, as he'd been reminded last night, things could always change for the worse.\n\nInside Room 11, was St\u00e9phanie Chopin. She was sitting propped up and connected to an ECG machine. Her head was in her hands. Wavy dark hair tumbled down her slim shoulders.\n\nAs he shut the door behind him, Nathan noticed that her hands were trembling. \"Mrs. Chopin?\"\n\nShe looked up, clasping her hands in her lap. \"It's Miss Chopin,\" she snapped. The harshness of her tone was softened by her Qu\u00e9b\u00e9cois accent. \"I'm recently divorced.\" She paused, a flinty look entering her eyes. \"In case you're wondering, that's not why I walked into the lake. I wouldn't kill myself over that cold-hearted cheating bastard. Or over any man, come to it. All the males on this planet put together aren't worth my life.\"\n\nAlthough taken aback by this response, Nathan didn't let it show. \"I'll just call you Miss Chopin,\" he replied. \"I'm Dr Bellamy. I hear you're having a headache?\"\n\nShe nodded.\n\n\"I'll examine you so we know how you're doing. Would you prefer to have a nurse present?\"\n\n\"You mean as a chaperone? There's no need for that. You don't look like a molester.\" St\u00e9phanie Chopin's lips twisted into a sneer. \"But then, one never knows with men.\"\n\nNathan didn't say a word to that.\n\nFor the next few minutes, he examined her in silence. He checked her ECG heart rhythm and took her pulse, using the opportunity to test her hand's temperature. Her hand was too cool for his liking, and it hadn't stopped trembling.\n\nSaying nothing about it yet, he confirmed her pulse rate with the number on the cardiac monitor. She was slightly bradycardic, but had no ectopic beats. He listened to her chest. There were fine crackles in her lungs, like ancient paper being crumpled.\n\n\"There's fluid in your lungs,\" Nathan told her, speaking again for the first time. \"After we finish your examination, I'll send you for a chest X-ray to see how severe the edema is. I doubt you'll need to be ventilated. I'll give you a diuretic to flush out the excess fluid and you'll be kept overnight in the ICU's Observation Ward.\"\n\n\"But I'm having a headache!\" St\u00e9phanie Chopin clasped her hands tighter. \"Aren't you going to do anything about that? My head hurts! I already said so!\"\n\nNathan sighed. \"I was getting to that, Miss Chopin. I hadn't forgotten. One thing at a time. I have some questions to ask you, so we can figure out why you're having the headache.\"\n\n\"Alright. Fine.\"\n\n\"Good. Now, did you hit the water at speed or from a height?\"\n\n\"No. I didn't dive. I just put heavy rocks in my pockets and waded in.\"\n\n\"I see.\" Nathan paused, noticing that her hands still hadn't stopped shaking. She was clasping them together, but it wasn't helping much. He kept silent about it for now. Instead, he reached for her, gently probing her skull and neck with his fingers. He was searching for tender spots. As he probed, he watched her face for wincing. \"Any stiffness?\"\n\n\"A little.\"\n\n\"Do you remember hitting your head at any time?\" he asked.\n\n\"I don't think so.\"\n\n\"Can you tell me today's date?\"\n\n\"April 6th, 1982.\"\n\n\"Good. Do you remember what you had for dinner last night?\"\n\n\"Mushroom ravioli.\"\n\nNathan nodded. She didn't have memory loss, which was always a good sign. He took the flashlight from his pocket. \"Keep your eyes open for me.\" He shone the pinpoint light into her eyes, checking her pupil responses. All fine.\n\nWhich begged the question of why she had a headache. There were no physical signs of trauma, no memory loss, no speech difficulties, and her oculomotor nerves were fine.\n\nNathan switched off his flashlight. \"How long have you had these spasms in your hands?\"",
        "She clasped them tighter. \"Only since I went in the water.\"\n\nShe's lying, was his immediate thought. But why should anybody lie about something like this? \"Miss Chopin, I'd like to feel convinced that you're being open with me. How long have your hands been shaking?\"\n\nHer mouth took on a hard edge. \"I'm being open with you. They only started shaking today.\"\n\nNathan gave her a probing look. Yeah, she was lying. \"Do you currently use any recreational drugs?\"\n\n\"Absolutely not! Not now, not in the past, and definitely not in the future!\"\n\nNathan scrutinized her. He'd have her urine analyzed for drugs. In the meantime, he shifted gears. \"Have you ever been diagnosed with depression, bipolar disorder, schizophrenia or borderline personality disorder?\"\n\nSt\u00e9phanie Chopin slumped against her pillows. \"No. None of those.\" Her eyes suddenly welled. \"I'm sane. But I need to die. I have no other choice.\" The tears brimmed over, trickling down her cheeks. \"There's nothing left for me. I'm finished.\"\n\nNathan sat on the edge of her bed, meeting her gaze. \"I've always believed that we all have a choice. I also believe that wherever there's life, there's a future. You could have chosen not to walk into that lake. You could have walked into this ER and told us you're a danger to yourself.\"\n\nShe shook her head. \"I couldn't do that. You don't understand. I see you mean well, but you can't just sit beside me and tell me there's hope when I have none. Do you know what it's like to have every light in your life snuffed out? Do you have any idea what total darkness feels like?\"\n\nNathan didn't speak for a beat. Before he could find a reply, she continued.\n\n\"I don't have a choice or a future. I used to. I've always been a kid at heart. I had dreams. Silly dreams full of light. But they're gone. I have nothing to dream about. Everything's gone. No good things will ever happen for me.\"\n\nNathan held her eyes. He could see it in her--the kid. The kid who existed in every person, no matter how old they became. The kid who dreamed of doing something extraordinary or being someone remarkable 'when I grow up.'\n\nPerhaps, the truest form of death was when The Kid stopped dreaming of light.\n\n\"Do you have children, Miss Chopin?\" he asked her.\n\n\"No.\"\n\n\"Parents? Siblings? Friends?\"\n\n\"I don't have siblings, but my parents are alive. They're in Qu\u00e9bec.\"\n\n\"Aren't they worth sticking around for?\"\n\nHer lips hardened. \"Nothing's worth sticking around for.\"\n\nNathan sighed. \"Here's what'll happen. A nurse will come take blood. That's so we can do a culture. I need to make sure you won't become septic. The nurse will also take a urine sample, because I want to do a drug test on you. As I said before, we'll do a chest X-ray and give you some diuretics, then you'll be kept in Observation. From my examination, it's unclear why you're having a headache. I'll send you for an MRI scan to make sure there's no brain swelling or bleeding. While you're in Observation, the hospital psychiatrist will have a long talk with you.\"\n\nSt\u00e9phanie Chopin wiped her tears away. \"I'll get an MRI?\"\n\n\"Yes. Do you have any metallic implants?\"\n\n\"No.\"\n\n\"Then an MRI should be safe.\" Nathan stood. \"The Radiologist will go through all the contraindications with you. The nurse will come by in a minute.\" He crossed to the door. As he was about to walk through it, she stopped him.\n\n\"Doctor?\" she called.\n\nNathan turned to face her. \"Yes?\"\n\nShe met his eyes. \"Thank you. Really. And I'm sorry about earlier.\"\n\nNathan smiled at her. \"That's okay.\" He walked out the door.\n\nHe went to the nurse's workstation, briefed a nurse on what to do, and started on his next patient.\n\nHis shift ended at midnight. It was 11:47p.m. when he finished up with his final patient, and a nurse brought St\u00e9phanie Chopin's X-ray results to him.\n\nNathan examined the X-ray. He was correct about the fluid in her lungs. \"Give her 40mg furosemide IV injection.\" He handed the chart back to the nurse. \"Then transfer her to the ICU. Make a note that she should be taken for an MRI, and that she needs a mandatory psychiatric evaluation first thing tomorrow morning.\"\n\n\"Got it.\"\n\nNathan left the hospital, sure that St\u00e9phanie Chopin would survive. Yet, that prickle at the back of his neck remained. It stayed with him throughout his drive home, as he made dinner and as he got in bed. Was there anything he'd overlooked while he'd examined her? Had he forgotten something? He went over everything in his mind. No, he hadn't missed anything.\n\nHe cleared his mind, and tried to sleep.\n\n**\n\nLike the previous day, his shift began at noon. He got his first break by 5:30p.m. After grabbing a sandwich at the cafeteria, he went to the Intensive Care Unit to check on St\u00e9phanie Chopin. That icy shadow still haunted him, not letting him focus until he assured himself that she was okay.\n\nLeaving the cafeteria, Nathan wove through corridors, went up two floors and down another corridor. Pushing open the swing doors, he turned left and was in the ICU Observation Ward.\n\nIt was a big, busy ward and he didn't have time to scour it, so he went to the nurse's workstation. \"Hi,\" he said to the nurse. \"I want to check up on a Miss Chopin transferred last night from the Emergency Department.\"\n\n\"Miss Chopin?\" The nurse's brow furrowed. She reached for the wire file basket on the desk. \"I started my shift literally 5 minutes ago, so I'm not caught up on the overnight admissions. Let me see...\" She thumbed through the files. \"Ah! Here we are.\" She pulled the file out and opened it. Her face fell as she read.\n\nNathan gripped the counter's edge. No...\n\nGiving a helpless little smile, the nurse raised her eyes to his. \"She died at 3:44a.m. this morning.\"\n\nAn invisible fist punched Nathan in the gut. She was dead. He'd left her alive, but now she was dead. It took him a full fifteen seconds to find his voice. \"Who reviewed her?\"\n\n\"That would be Dr Sousa.\" The nurse pointed across the busy ward at a man. He stood writing in a chart outside a patient's room. \"That's him there.\"\n\n\"Thanks.\" Nathan pushed away from the workstation, crossing to the doctor. \"Dr Sousa?\"\n\nDr Sousa looked up from his chart. There were shadows under his eyes. His mouth drooped with exhaustion. He looked Nathan over, glancing at his staff ID badge. \"Dr Bellamy?\"\n\n\"Yeah. Hi.\" Nathan stopped a few feet from him. \"I'm from Emergency. I had a patient transferred here last night. St\u00e9phanie Chopin. Attempted suicide. Last I knew, she was stable.\"\n\n\"Oh. Her.\" Dr Sousa pinched the bridge of his nose. \"Well, it turns out that the drowning wasn't her only suicide attempt. She had a plan, that one. I reviewed her when she was brought here, gave her a follow-up dose of the furosemide you prescribed, and sent her down for the MRI. As soon as she got the gadolinium shot, she went into anaphylaxis.\"\n\nNathan ran a hand over his face. \"Shit. Shit.\"\n\nGadolinium injections were given before MRI scans to make the images clearer. Only about 0.01% of patients had serious allergic reactions to the shot. This was a stroke of shitty luck.\n\nNathan frowned at Dr Sousa. \"But what do you mean about her having a plan? She couldn't have known she was allergic to gadolinium.\"\n\n\"Oh, she knew alright. She knew exactly what she was doing. I phoned her family doctor in Qu\u00e9bec early this morning. He gave me a rundown of her medical history. She'd already had a severe reaction to gadolinium a year ago, but was resuscitated. She knew that any other gadolinium shot would kill her. He also told me she was diagnosed with ALS four months ago.\"\n\nA harder punch landed in Nathan's gut.\n\nALS. It began with muscle weakness in the limbs, then progressively killed every motor neuron until there was complete paralysis. No movement. No speech. A mind became imprisoned in its own body.\n\nThere was no cure and no escape...except suicide.\n\nNathan closed his eyes as everything clicked. Her shaking hands had been the ALS tremors.\n\nHe'd known she was lying about when the tremors began, but his first thought had been drugs. 9 times out of 10, it was drugs. People came to the ER because they'd overdosed on drugs, or had been in a fight over drugs, or were hoping to fool an inexperienced doctor into giving them drugs.\n\nIt hadn't been drugs this time. Now, it made sense why he'd seen no signs of head trauma. There'd been no trauma. She'd faked the headache so he'd send her for an MRI scan. She'd known that the usual thing with MRIs was to get a gadolinium shot. She'd known she was allergic to gadolinium.\n\nShe'd known all that. She'd used it. She'd used him.\n\nNathan's hand tightened.\n\nIt was probably why she'd come here from Canada. She'd come to a place that was easy to travel to, but where her medical history was unknown--and difficult to access at the time she'd picked to drown herself. She'd thought everything through. Drowning had been Plan A. Gadolinium had been Plan B.\n\nIf he'd known her medical history, there was no way in hell he'd have let anyone near her with a gadolinium syringe. But he'd hadn't known, so he'd made the best choice. And in so doing, he'd sentenced her to death.\n\nShe'd even shown gratitude for it. After he'd told her about sending her for the MRI, she'd called him back to say: \"Thank you. Really.\"\n\nHe'd killed a patient. This was the prickle that had been shadowing him.\n\nHer tearful words came back to him. \"...You don't understand...I have no choice... I had dreams full of light, but they don't exist anymore...I'm finished...\"\n\nShe'd been diagnosed with ALS four months ago. That was why she'd killed herself.\n\nNathan stood rooted to the spot, his soul withering, his eyes stinging drily. He'd helped her kill herself.\n\nDr Sousa was watching him. \"You okay?\"\n\nNathan willed his mouth to speak. \"I'm fine. Thanks for letting me know.\"\n\n\"No problem. It's nice of you to come and ask. I know it's so hectic in the ER that you guys can't usually do follow-ups.\"\n\nNathan made some response, then he left the ICU, walking back to the Emergency Department on robotic legs.\n\nWhen he got to the ER, he didn't go to pick his next patient. He went to the office of his direct boss, Dr Elizabeth Elgar. He knocked on her door. It wasn't yet 6p.m., so she should still be here. She'd been an Attending for 12 years, and the seniority meant she did more day shifts than evening ones.\n\n\"Come in,\" she said from inside.\n\nNathan opened the door, barely recognizing his own dead voice as he asked, \"This a good time?\"\n\nDr Elizabeth Elgar was a pint-sized woman of middle age. \"I was about to leave but I've got a minute for you. Come on in, shut the door and sit down.\" She eyed him. \"What's up?\"\n\nNathan sat. The icy corrosive lump was back in his throat. His eyes burned, but he had no tears. \"I need to be taken off the schedule.\"\n\n\"Why? Have you lost a patient who mattered?\"\n\n\"I lost two. The first one was on Monday night. The second one was last night. Both suicides.\"\n\n\"Well, this is the time of year for it.\" Dr Elgar heaved a sigh. \"You know yourself better than anyone. If you think you need a break, you're probably right. I'll keep you off the schedule for a week, effective from next week. We'll take it out of your vacation days.\"\n\n\"I'll need longer than a week.\"\n\nDr Elgar stared at him. \"You're not thinking of quitting? Because you won't quit over a couple of suicides. Not if I have anything to say about it.\"\n\n\"I'm not quitting.\" Nathan hesitated. He'd been the tool a woman had used to commit suicide. The possibility of ALS hadn't occurred to him. What kind of doctor was he, if the possibility of an incurable illness hadn't occurred to him? What was he even doing here? Aloud he amended, \"I don't think I'm quitting. Honestly, I'm wondering how long I'll last in this specialty. I need time to figure that out.\"\n\n\"Nathan.\" It was rare for Dr Elizabeth Elgar to use any co-worker's first name, but she did it now. She reached across the desk to lay her hand on his. \"We lose patients. That's part of the job, and it's true for any specialty. We both know that. The natural thing is to blame ourselves, but I told you from the start that you need to learn whatever you can and move on.\"\n\n\"Easier said than done.\"\n\n\"I guess so.\" She drew her hand away. \"Like I said, you know yourself best. How long will you need?\"\n\n\"A few weeks. Maybe a month.\"\n\nShe arched an eyebrow. \"You expect me to ask the Chief of Medicine to place a resident on months of paid leave?\"\n\n\"I don't expect to be paid. All I'm asking is to have a job when I come back.\"\n\n\"Okay. I can do that for you.\"\n\n\"Thanks.\"\n\nThey sat in silence awhile, then she said: \"Go off and have your existential crisis, but not for too long. I want you back here in six weeks tops. You're my favorite resident, and you're only 5 months away from finishing your program. If there was ever a time to quit, this isn't it.\"\n\nNathan left her office shortly after. He finished his shift by midnight, and for the first time in 4 years, he drove away from Delta Lake Hospital without knowing precisely when he'd return to it.\n\nBy 1:00a.m., he lay awake in his bed, the walls closing in on him as he recalled the dead woman's words. \"I've always been a kid at heart. I had dreams. Silly dreams full of light. But they're gone. No good things will ever happen for me.\"\n\nAs for 18-year-old Jason Holst, he'd been abandoned by his father, bullied at school, out of touch with his sister, and struggling with his grades. He too had probably stopped believing that anything good would happen to him. So he'd killed himself by swallowing bleach pills.\n\nNathan had also had dreams of light. It was those dreams that had pushed him into medicine, because he'd wanted to be someone worthwhile.\n\nBut was this career really worthwhile? Or was he merely fooling himself?\n\nThe light was difficult to see. What he saw were all the people he couldn't save. The teenagers who drank bleach. The adults with ALS. The drug addicts and the battered wives.\n\nSo, then, was being a doctor worth it? The long hours, the breakneck pace, the deep personal investment...\n\nWas it worth it?\n\nNathan fell asleep at dawn, unable to answer that question.\n\nWhen he got up late in the morning, he dragged himself into the shower then brewed coffee. He'd planned to head to Binghamton today, to visit his family. That was no longer on the cards. He was in no mood to see anyone.\n\nHe needed to get out of this apartment, though. He'd always liked his space, but it suffocated him now. The restrictive walls had no answers. All his questions bounced back to him with visions of a dead kid and a dead kid-at-heart.\n\nHe needed to get far away from here.\n\nCoffee cup in hand, he went to the spare room he'd converted to an office. On one wall was a corkboard where he'd spread a global map. He went to his desk drawer and took a pushpin. Facing the map, Nathan threw the pushpin. It sailed through the air, hit the map and lodged in the cork.\n\nHe looked at where the pushpin had landed--Brasil.\n\nHuh. Okay. He'd never been there, and it was a massive country. Somewhere in its 3.3 million square miles with coastline, savanna, mountains, archipelagos and rainforest, he might find an answer.\n\nThat same morning, he phoned an airline and booked a one-way flight. Two days later, his suitcase and carry-on were packed.\n\nOn April 11th, Nathan Bellamy became a wanderer. He drove to Syracuse International Airport and got on his plane. The aircraft ascended at 3:00p.m., on the first leg of his journey to Rio de Janeiro.\n\n*****\n\nPART TWO: THE SHRINE <br>\"Sunlight over me, no matter what I do.\" Fleet Foxes, The Shrine.\n\nSoutheast Brasil, April -- May 1982\n\n*\n\nIn the evening of April 12th, an aircraft touched down on Gale\u00e3o Airport in Rio de Janeiro. It was drizzling. After getting through security and baggage claim, Nathan Bellamy stepped into twilight, the sun scattering a deep orange glow as it sank.\n\nIn a t-shirt and jeans, Nathan wheeled his suitcase with one hand. His rucksack was slung over his other shoulder. The rain was light enough for him to walk into it. The air hovered close around him, warming his skin and filling his nostrils with petrichor. Around him were voices of those who'd disembarked the same flight. Two languages assailed his ears; the brash English of fellow tourists and the incomprehensible Portuguese of the Brasilians.\n\n\"Onde coloquei a chave? Estava no meu bolso quando a gente estava no avi\u00e3o.\"\n\n\"I can't wait to see her. It blows my mind that it's been a year since we visited. I'm sure she's grown. I can't wait to pinch her chubby cheeks.\"\n\n\"Levou muito tempo, mas gra\u00e7as a Deus acabou. Estava com saudades desse lugar.\"\n\n\"My feet are killing me. If that idiot isn't already here to pick us up, I'll strangle him.\"\n\n\"Vou tentar mais uma vez. Se voc\u00ea pisar na bola de novo, ele nunca vai concordar e sei l\u00e1 o que voc\u00ea vai fazer.\"\n\n\"Benny, you never pay attention to anything! Your suitcase straps are trailing beside the wheel. Pin them together. I only just bought this suitcase for you!\"\n\n\"Sorry Mom,\" a child mumbled in reply to this scolding.\n\nNathan walked past the mother-and-son, wove through the other people in his way, and emerged from the thicker throng. The voices faded. His way clear, he went up the sidewalk to a taxi.\n\nNoticing his approach, a cabbie opened his door and stepped out. He gave Nathan a once-over. \"E a\u00ed, cara.\"\n\nNathan had studied rudimentary Portuguese greetings during his journey, so he knew the cabbie had just said: \"Hey, dude.\"\n\n\"E a\u00ed,\" Nathan replied, echoing the greeting. The language felt strange on his tongue, but he spoke the only complete sentence he'd had the time to learn--the phrase to tell his listener that he didn't speak Portuguese. \"Eu n\u00e3o falo Portugu\u00eas.\"\n\nThe cabbie smiled, teeth flashing white against his sun-bronzed face. \"I was thinking you look like a gringo. Every time I see a gringo, I always know. Is OK. I speak English, a little Spanish, and a little German. You sound norte-americano. Are you from the quiet land of Pierre Trudeau, or from the interfering land of Lyndon Johnson and Ronald Reagan?\"\n\nIt was impossible for Nathan not to smile. \"The interfering land. My apologies.\"\n\nThe cabbie laughed. \"Ah, well. And you want me to drive you to where?\"\n\n\"To a hotel called Casar\u00e3o do Corcovado. You know it?\"\n\n\"Of course I know. It's in Zona Sul. I know everywhere, everything, and everybody.\" The cabbie grinned. He opened the trunk, Nathan deposited his bags, and they got in.\n\nThe cabbie pulled away from the sidewalk and they were soon on the road. Nathan looked out the window, watching Rio in the vestiges of the dying sun. The air, with its fine rain, poured over his face. New York was roughly 5,000 miles away. Good. The farther he was from home, the better he felt.\n\nThe cabbie made a right turn at the end of the road, and water came into view; Guanabara Bay, stretching farther than the eye could see.\n\n\"Is your first time in Brasil?\" the cabbie asked.\n\n\"Yeah.\"\n\n\"You're late for Carnaval. It was in February. That's when the norte-americanos and Europeans come.\"\n\n\"I wasn't aiming to attend Carnival.\"\n\n\"That makes you different.\" The cabbie smiled cynically. \"Carnaval is the only thing everybody comes to Brasil for.\"\n\n\"Then you're right that I'm different. If anything, I'm glad I missed it. I'm here for some peace.\"\n\nThe road flowed into an overpass. The elevation gave a better view of the bay, the waters dark in dusk's light. The overpass became a bridge. When they got off, going downhill into a freeway, traffic got heavier. It was a long road with no variation to the scene, so Nathan shut his eyes.\n\nHe reopened them a few minutes later. The buildings in the valleys beyond were grouped together, some unpainted. In the distance, barely possible to make out in the dusk, were hazy mountains.",
        "The cabbie broke the silence. \"You came here to rest because your work is busy?\"\n\n\"Yeah.\"\n\n\"Where do you work?\"\n\n\"A hospital in upstate New York.\"\n\nThe cabbie gave him a sideways glance. \"Hospital? Are you a doctor?\"\n\n\"Yeah.\" After he said this, Nathan waited. Most times, when someone found out that you were a doctor, they immediately listed their health concerns and demanded advice.\n\n\"There is a rash that my son has on his chest,\" the cabbie said. \"It comes for a few days, goes away, and comes again. He's 4 years old. It makes my wife worried. What should we do?\"\n\nNathan sighed to himself. He'd come here so he wouldn't play doctor, yet the first thing he was doing on arrival was playing doctor. Life's ironies abounded. \"Does he have a temperature with his rash?\"\n\n\"Not very much. He doesn't become too hot.\"\n\n\"Get an over-the-counter hydrocortisone ointment. Apply it to his rash twice a day. Try ruling out food allergies. Take eggs, nuts and shellfish out of his diet. Reintroduce them slowly to see if any of them triggers the rash. If you've got nettles, rue or sumac growing near your house, don't let him play in the bushes. If he ever runs a temperature with the rash, get him to hospital. It probably won't be serious, but take him to make sure.\"\n\nThe cabbie nodded. \"I'll do so. Thanks.\"\n\n\"No problem.\"\n\nThey fell silent again.\n\nAs the car descended from the overpass, Nathan saw the first specimens of street art; colorful murals on the fences and buildings. The road narrowed and they joined slow traffic again. Motorcycles wove past. The streets were dimly lit, milling with pedestrians and crammed with small businesses; beauty salons, tire dealerships, pizza places, gas stations. Most had scruffy entrances and needed a fresh coat of paint.\n\nYet, this wasn't the poor part of the city. That honor belonged to the favelas. According to his guidebook, there were hundreds of them here in Zona Sul alone.\n\nNathan glanced at the cabbie. \"You ever take passengers into the poorer areas?\"\n\n\"I go into Rocinha often. Sometimes I go into Chap\u00e9u Mangueira, but not too often. I don't go to the favelas in Zona Norte. I very, very much advise you not to go either, unless you have strong friendships inside. But I can show you Rocinha if you want. I won't charge you too much, and it's safe if you're with me. There is good food and my cousin there is a barber. His price is fair.\"\n\nNathan hesitated. The cabbie didn't seem shady, and if safety was a sure bet, there was no better way to see every facet of Rio than seeing its biggest favela. \"Okay,\" he replied. \"Friday suit you?\"\n\n\"Friday is OK. I'll pick you up in the morning, we'll spend the afternoon there, then I'll take you back to your hotel.\" He added, \"My name is D\u00eanis.\"\n\n\"I'm Nathan.\"\n\nAt the end of this crammed road was an uphill road; wider, and fringed with vegetation. The mountains that had been distant were closer now. A series of tunnels led them to a neighborhood where the mountain towered over the road; seeming almost close enough to touch. After a couple more turns, the car pulled up at the gate of Casar\u00e3o do Corcovado, a sleek hotel.\n\nAs the car stopped, Nathan reached into his pocket for his wallet, stuffed with the cruzeiros he'd exchanged for dollar bills. \"What do I owe you?\"\n\nAfter getting his payment and opening the trunk, D\u00eanis gave Nathan's arm a friendly clap. \"I see you in a few days, Doctor Nathan.\"\n\n\"See you.\"\n\nWith his suitcase and rucksack, Nathan walked through the pedestrian gate, up the path and into the air-conditioned lobby. The girl at the welcome desk greeted him in Portuguese, English and French. When he responded in English, they stuck to that. She checked him in.\n\nIn a few minutes, Nathan was in his 9th floor suite.\n\nHe dumped his bags and went straight into the shower. After a 28-hour journey of 3 flights, 2 layovers and a cab ride, he needed it. He chose cold, exhaling in pleasure as he stepped under the spray. The icy needles felt great on his skin. Mint soap washed off the sweat and dirt of his journey.\n\nShaved, wearing clean clothes and with half-damp hair, Nathan took the elevator down again, passing the lobby on his way to the restaurant-and-bar.\n\nIt was an open space, full of customers and dimly lit. People were already at the bar, but a couple chairs were available. Nathan sat. While he waited for the bartender to attend to him, he scanned the space. Everyone was with a date or in a friend group.\n\nNobody else but him was alone. Nobody else here but him had lost a kid who'd swallowed bleach pills. Nobody else had sent an ALS sufferer to her early grave. Nobody else was wondering whether every career choice they'd made was a mistake.\n\n\"Pois n\u00e3o?\"\n\nThe voice brought Nathan from his thoughts. It was the bartender asking him something. Something he didn't understand. If this trip hadn't been so sudden, he'd have studied more than basic greetings.\n\nAs he'd done several times since his plane landed, Nathan could only warn that he didn't speak Portuguese. \"Eu n\u00e3o falo Portugu\u00eas.\"\n\nThe bartender didn't speak English. With hand gestures and short phrases, Nathan communicated that he wanted one of the local cocktails. A few minutes later, the bartender set the glass in front of him. The pale drink was packed full of ice, condensation running down the glass.\n\nNathan took an exploratory sip. It was pretty good. \"What's in it?\" he asked.\n\nThe bartender frowned at first, but then his brow cleared. \"A receita? Cacha\u00e7a, folha de pitanga, cumaru, caju e lim\u00e3o.\"\n\nNathan didn't catch a word of that, so he just nodded. The bartender moved to another customer.\n\nHe stayed at the bar as he drank, clearing his head of the issues that had brought him here. He focused on his senses--the drink in his hand and the low lighting. He ordered dinner after a second drink, picking things off the menu at random. When it came, some of it was rice, some was seafood, some was beef falling off the bone, and all of it was great.\n\nWhen he returned to his room, it became difficult to ignore his thoughts. Was his career worth it? And if not, what was?\n\nHis room had a window overlooking Corcovado, where the statue of Christ the Redeemer stood watching over the city from thousands of feet. This hotel was a mile from the mountain. Nathan sat by his open window, looking out at the pitch darkness. The view itself was good, but the mountain was shrouded in clouds and Christ the Redeemer was impossible to see.\n\nNathan sighed, killed the lights, and went to bed.\n\n**\n\nThe next day, he began playing tourist. He took a crowded bus from near his hotel, hiked up Urca mountain and took the cable car to Sugarloaf. On his return, he walked the beach, stopping at a barraca for a snack and cold drink. Then he sat on the stone seawall, watching the sun go down.\n\nHe went to Ipanema the next day and saw the boardwalk, stretching alongside pure white sand and bright blue water. The crowds made him prefer Urca's quieter beach, but he still enjoyed it. He mailed a postcard home; his mother would enjoy receiving a postcard from Ipanema.\n\nThe next day was for Copacabana. Copa was Ipanema's sister. Both were sexy, but Copa was older, more experienced and had a grittier edge. The miles-long stretch of beach teemed with humanity; vendors hawking their wares, friends playing futev\u00f4lei, and kiosks with endless lines for drinks.\n\nBut as daylight waned, Copacabana became a different place. Its grittier edge unfurled--the stores closed, most locals and tourists dispersed. The Avenida Atl\u00e2ntica and its side streets became meetup spots for drug dealers, hookers and their clients.\n\nSince he wasn't looking for the kind of fun that could land him in a foreign jail cell, Nathan headed back to his hotel.\n\nThe next morning, the cabbie showed up to take him to Rocinha.\n\nNathan didn't take his rucksack or any valuables; just some cash in the zip-up pocket of his cargos. D\u00eanis greeted him at the car door, and he paid upfront.\n\nDuring the drive, they made small talk about Nathan's first few days in Rio. When they'd reached the top of the hillside and were parking the car, D\u00eanis reminded him, \"Is okay since you're with me.\"\n\nNathan nodded. Perhaps he should have felt nervous strolling into a favela, but his main feeling was interest in seeing another side of Rio. The flipside of the beautiful beaches, expensive neighborhoods and sleek hotels.\n\nHe wanted to see, and see he did.\n\nThey began at the top of the hill, walking through as they descended. D\u00eanis led him through the back streets rather than the main thoroughfare.\n\nRocinha was a city inside a city. A world of its own. A steep labyrinth of narrow alleyways, uneven steps and impossibly crowded streets. Many storeys of decaying houses were piled on each other, seeming to sag down the hillside as they struggled to contain the hundreds of thousands of dwellers packed into one square mile.\n\nMany of the buildings were in a transitory state. They were made of wood but were being replaced by concrete. It was odd. Nathan mentioned this to D\u00eanis as they passed a column of such houses.\n\n\"It's because the government isn't threatening to force everybody out so much right now,\" D\u00eanis explained. \"It was very bad in past years. People were harassed. But now they know they can stay, they rebuild their wood with mortar.\"\n\nThe air had an odor, which was worse in the spots where the streets were littered with trash, dirt and dog shit. Some walls were a dilapidated gray. Others were covered in graffiti.\n\nYet, the place wasn't dead. The atmosphere didn't match the look. Life was happening on every corner. As they went through the maze-like streets, D\u00eanis pointed out places of business; grocery stores, pharmacies, caf\u00e9s, salons. He mentioned that there was a school and a hospital, and that virtually every building had electricity and indoor plumbing.\n\nOn every street, D\u00eanis paused to greet someone cheerfully; a woman sweeping the steps of her house; a man unlocking his store door. Not criminals or thugs, just people living their lives as they would in any other place.\n\nThis was a community. Abjectly poor, yes. But it wasn't the hell Nathan had pictured. He felt no more unsafe now than when he'd walked around certain areas of Copacabana.\n\nHe didn't deceive himself, though. He knew he was only welcome because he was with a 'friend.' If he'd walked in here alone, it might have been the last thing he ever did. And even with D\u00eanis, there were places not to venture. More than once as Nathan was about to cross into an alley, D\u00eanis took his arm and firmly said, \"Not there, Doctor Nathan. Let's pass through a different way.\"\n\nNathan didn't argue or ask why.\n\nHe asked other things. How the favela had been a decade ago, how long the government had threatened to evict the community, how police presence had changed over the years, when the drug trafficking and arms dealing had taken hold, and how truly dangerous it was to live in here.\n\nD\u00eanis answered the questions readily and with the ring of sincerity. When they reached a street halfway down the hillside, he said: \"It's here.\" He pointed up a flight of rotting wood stairs. \"This is where my cousin Binho works. He is a barber. You want a haircut?\"\n\nNathan hesitated. \"Sure. Why not?\"\n\nThey went up together. At the top step, a door led into a low-ceilinged barber's shop. Three guys were inside. Guy #1 was getting a haircut from Guy #2. Guy #3 was sprawled over an old sofa, watching a grainy TV.\n\nAs the men saw D\u00eanis, they broke into smiles and greetings. Guy #3 rose, shockingly fast considering his stocky build. There was plenty of hugging and back-slapping between him and D\u00eanis. D\u00eanis then gestured to Nathan, speaking in rapid Portuguese. In the speech, Nathan caught the words 'friend,' and 'doctor.'\n\nNathan put his hand out for a handshake. Instead of shaking his hand, the stocky guy grabbed him and hugged him. After the hug, he treated him to the same back-slaps he'd given D\u00eanis.\n\nGesturing to the stocky man, D\u00eanis told Nathan, \"This is my cousin Binho I told you of. I've told him you speak no Portuguese. He speaks no English, but he'll cut your hair for you. He is very good. I'll go and see some other friends. When he has cut your hair, you two meet me and we'll drink.\"\n\nD\u00eanis left. Binho led Nathan to a chair, patting his shoulder and keeping up a stream of friendly-sounding Portuguese.\n\nWith Nathan seated in the chair, Binho fell silent, examining his hair. Nathan, watching Binho's thoughtful face in the mirror, wondered if he was about to get a haircut he'd hate. He should have made it clear to D\u00eanis that he only wanted a trim without changing the style.\n\nThen he realized himself--he was deep inside a favela with people he hardly knew, yet his only worry was his haircut. Enjoying this irony, Nathan sat back and let Binho have free rein. Soon, he was assessing his new cut. Binho had kept his old style, but with a few changes. He'd left the top longer and given him a slight fade at the sides. It wasn't what he'd have chosen for himself, but he liked it.\n\n\"T\u00e1?\" Binho asked. \"OK?\"\n\n\"Yeah, it's okay.\" Nathan gave him the thumbs-up sign.\n\nBinho smiled and nodded. \"OK.\"\n\nNathan unzipped his cargo pocket. \"How much do I owe you?\"\n\nBinho took the equivalent of a dollar. Considering what he paid his regular barber back in New York, Nathan felt like a scam artist. But since there was no way of offering another guy free money without insulting his pride, he let it go.\n\nTogether, he and Binho left the barber's shop. They went down the steps and the hillside, weaving through precariously steep streets too narrow for cars. Because of the language barrier, they went in silence. At the lowest point, Binho pointed to a wider street. They headed there.\n\nIt was a noisy market street with businesses on both sides. One of those was a lanchonete. Sitting outside waiting for them, was D\u00eanis.\n\nThey joined him. This was how Nathan ended up spending a whole day talking with a cabbie and a barber. Binho was curious about New York, and D\u00eanis acted as translator. Every so often, friends of Binho's dropped by their table to join them. Nobody seemed to question Nathan's presence there.\n\nIn the early evening, just as Nathan was becoming utterly relaxed in his surroundings, there were a series of gunshots in the near distance. It was a jarring reminder that he was still in a favela. After the gunshots stopped, there was a collective tense silence along the street. Then everyone carried on as though nothing had happened.\n\nBinho stared into his beer, his mouth in a grim line. D\u00eanis sighed. Nathan didn't speak either. He took a large swallow of his drink. Someone in this favela was bleeding right now. Someone he couldn't help. Somebody who would probably die.\n\nWho was it? Whose blood was seeping into broken steps? An 18-year-old boy involved in a gang turf war? A middle-aged woman who'd gotten trapped in the crosshairs?\n\nThe corrosive lump came back to Nathan's throat.\n\nNot long afterwards, D\u00eanis said, \"We should start going, Doctor Nathan. We shouldn't stay too late.\"\n\nAfter a warm farewell from Binho, they left the lanchonete. Nathan and D\u00eanis went up the hillside to the cab.\n\nEmerging from the favela into beautiful Rio, was a shock to the system. There was no other place where he'd experienced two starkly different worlds within a stone's throw of each other.\n\n\"You were expecting it to be worse?\" D\u00eanis asked, interrupting his thoughts.\n\n\"Yeah,\" Nathan admitted. \"It's better than I imagined.\"\n\n\"The government hates the favelas, but it's not hopeless. One day, things can get better.\"\n\nNathan lapsed back into thought. Rocinha was a community. Some members were brutal, but most were disenfranchised innocents with nowhere else to live, and no hope of escaping their poverty.\n\nYet they had enough strength to rise each morning hoping the new day might be better, despite knowing it would be the same or worse. Rising with the consolation that sunlight would shine on them as it shone on everyone, no matter who they were or what they did.\n\nThe continued existence of those people was something Nathan couldn't help but respect. It seemed like sheer fucking stubbornness. A ferocious will to live.\n\nDespite its decay, this favela was a shrine to survival. Nathan looked in the rearview mirror, watching The Shrine disappear.\n\nWas that the answer? Surviving each brutal day until you couldn't survive anymore?\n\nNo. There had to be more than that.\n\nD\u00eanis soon pulled up at the hotel gate. \"Goodbye, Doctor Nathan,\" he said. \"Good luck finding the peace you want. Journey safely, and may God be with you.\"\n\n\"Thank you. All the best.\" Nathan raised his hand in farewell. He waited till the cab pulled away from the sidewalk, then he turned and walked into the hotel.\n\n**\n\nFor the next few days, he explored Rio's Centro on foot, the downtown district where high-rise buildings and gated condos coexisted with the landmarks of Colonial Brasil. On Saturday night, he went to a club in Lapa, just to say he'd done it. He hadn't enjoyed the club scene even as a college student. Now he was almost 30, he was growing too old for it.\n\nHe left Rio on Monday. This had been his plan from the start. He'd meant to stay a week, then go elsewhere. Most tourists came to Rio or S\u00e3o Paulo, ignoring the other ninety percent of the country.\n\nThe northeast was the forgotten soul of Brasil. According to his guidebook, things were slower up there. Sprawling. Open. A little less polished. A whole lot poorer. That was where he was headed. He'd seen Rio. Now, he'd take the path less trodden.\n\nOn April 19th, he hired a 4x4 and checked out of the hotel.\n\nHe put his bags in the trunk, taped a map under the windscreen, and got behind the wheel. He had thousands of miles to cover. He'd take a winding route through the states of Esp\u00edrito Santo and Minas Gerais, on his way to All Saints' Bay.\n\nAll Saints' Bay was his ultimate destination. He'd stay there for the remaining weeks until he was due to return home.\n\nHe figured it'd take him around two weeks to get there. He could fly there in a few hours, but everywhere looked the same from a plane. He'd rather wander through Brasil at his own pace. So he started his hire car and set out.\n\nThe first leg of his drive took longer than it should. Traffic was pure hell as he left the city. Too many assholes cut in, never gave way, flouted universal traffic rules, and were quick to blare their horns at others for doing the same.\n\nIt improved when he got onto the Rio-Niter\u00f3i Bridge, the first taste of freedom after being in a busy metropolis. He rolled the windows down. The air was fresher, the view expansive over the mountains as the bridge stretched for miles across the deep blue waters of the bay, connecting Rio with Niter\u00f3i.\n\nNathan's mouth curved into an unconscious smile. This was fucking beautiful.\n\nHe went into and beyond the city of Niter\u00f3i. Going north into Campos, it became open land. A mountain range, ashen-blue in the distance, lay to his left. The landscape was broken up by municipalities; concrete oases of homes, diners, and car dealerships.\n\nHe continued northwards, following road signs for 'NORTE,' but he also made some deliberate wrong turns. One such turn took him winding through a sleepy village. Its unkempt stone streets and broken sidewalks were bounded by small red-shingled houses with tiny porticoes, courtyards and balconies. The houses were painted in greens, blues and oranges, but the brightness had faded; bleached by endless years of sun and rain. There were more bikes and pedestrians than cars.\n\nThis was a village that tourists never saw.\n\nReturning to the freeway, Nathan stuck to it until he crossed the Itabapoana River into Esp\u00edrito Santo.\n\nHe'd crossed his first State boundary.",
        "The sun was descending by then, sinking into a terrain that had become hillier.\n\nThere were barely any streetlamps on this stretch of the route and he had some way to go, so he made the most of daylight. He stepped on it, racing past small towns on red-earth hillsides. When the landscape gave way to water, he knew he was approaching the oceanside city of Vila Velha--the end of today's journey.\n\nHe continued miles more in the dusk, the road following the foaming waterside deeper into the city, where he found an inn to stay for the night. By the time he'd checked in, he was tired enough that he fell straight into bed.\n\nSo ended Day One, with 340 miles under his belt.\n\nHe spent the next morning exploring the city. After breakfast at a beachfront caf\u00e9, he walked to the old Penha Convent Church, and to Morro de Moreno; the hill overlooking the city and across the bay to Vit\u00f3ria, the state capital.\n\nHe sent a postcard before leaving Vila Velha, heading out before rush hour set in. After mapping his route and filling the gas tank, he left the South-North route. He struck west, heading into the State's interior. He did 90 miles in one go, weaving through mountainous terrain. Mountains everywhere, the road twisting along steep, scrub-covered peaks.\n\nAn intentional wrong turn led him onto a dirt track with no other cars in sight. He passed a cluster of wooden houses backed by plantain trees and fronted by vegetable patches. Driving onward, there were household farms to one side of him and hilly forests to his other side.\n\nThe twisting earthen track seemed to never end. Was this a road to nowhere?\n\n\"Sweet fuck, where the hell am I?\" Nathan asked himself aloud. He sat forward, looking through the windshield at gathering rainclouds.\n\nA few miles later, there were no more farms. It was merely a narrow track bounded by dense forest. There was no room to turn. The only option was to keep going. Swearing again, Nathan kept going.\n\nEvery so often, he saw the odd house set back from the road. Who would live in here? And when they needed emergency care, how did they get it? There damn fucking sure was no Level I trauma center around the corner.\n\nWith a heavy sigh, Nathan drove on.\n\nEventually, one side of the uncultivated land became vast cornfields. After that, he reached a road sign. He followed the arrow. Ahead, the earthen track became tarmac again. Beyond a cattle ranch with a cluster of silos, an intersection came into view.\n\nSmiling his relief, Nathan re-joined the same westward mountain freeway he'd deviated from.\n\nThe freeway led him into the town of Concei\u00e7\u00e3o do Castelo. He stayed two nights there, the only guest at the inn. It had a rooftop balcony overlooking the mountains that cradled the town. Dove-gray clouds sat on the mountain peaks, dappling the sunshine and cooling the air.\n\nAs he sat on the rooftop balcony, haunted by his thoughts, the owner came up. She was an elderly Brasilian widow who didn't speak a word of English. She carried a pitcher and a glass. \"Voc\u00ea quer um pouco?\" she asked him, pointing to the pitcher. \"Est\u00e1 gelada.\"\n\nHere in Esp\u00edrito Santo, the language barrier was even wider than in Rio. Fewer people spoke English. Still, it was obvious she was offering him a drink.\n\nNathan hesitated, eyeing the pitcher's contents; a liquid of a doubtful yellow color. But this was a thoughtful gesture and the drink couldn't be that bad, whatever it was. He'd accept and thank her.\n\nHe nodded, smiling at her. \"Obrigado, senhora.\"\n\nThe elderly widow smiled back, her wrinkled face brightening. She poured some liquid into the glass and handed it to him. She patted his shoulder like an affectionate mama, and walked away.\n\nNathan tasted the drink. It was cider, and it was ice-cold. It hit the spot. He'd have thanked her again but she'd already gone.\n\nHe stayed on the balcony, stretching his legs as he drank. Below, the main streets were crammed with amenities and stores. Normal for any small town. The only surprising thing was the number of Italians and Germans. This isolated little pocket of Brasil was the home of large immigrant communities.\n\nOn Day Four, he left. He continued west through the hilly forests for an hour before crossing his second State line.\n\nHe was now in Minas Gerais.\n\nAfter a rest stop, he continued, following the sun westwards until he reached the end of the day's journey--the ancient city of Ouro Preto.\n\nHe'd circled it on the map to make a point of stopping here.\n\nOn approach, the freeway narrowed, bounded by houses and stores. Just by looking, it was easy to tell the city had been built in the 1690s. It had been a major mining town during Brasil's Gold Rush, while it was Portugal's colony. The bygone centuries were alive in the steeply-sloping cobblestone roads, the sidewalks overlooking the hillsides like parapets, and the colonial buldings; many with old lanterns and hanging windowboxes.\n\nA shrine to the past.\n\nAs soon as he checked into a hotel and dumped his bags, Nathan set out on foot. He'd driven 200 miles. He needed to stretch his legs, and he wanted to see the city before it got dark.\n\nHe didn't regret his decision. In the light of sunset hitting the mountains, he understood why this place was named after gold. He walked the streets as night fell; something he'd never have done in Rio. He ate at an alfresco restaurant in the Square, returning to his hotel long after midnight.\n\nThe next morning, he mailed another postcard home. For the first time, he signed the message in Portuguese and not English. Behind the postcard he scrawled, 'Sauda\u00e7\u00f5es de Ouro Preto. T\u00f4 com saudades. Nathan.'\n\nBefore he left Ouro Preto that day, he toured an abandoned colonial goldmine now open to the public. He walked the grounds and took a trolley into the mine. There was an underground lake at the lowest point.\n\nIt was nice to look at now, but this place had once been a trap of slavery and hard labor. Battles had been fought, blood had been spilled in ending colonialism, and things were better now.\n\nWas that the answer? Remembering that life was always improving? The present was better than the past, especially with medical advancements. People had died in this goldmine back in the 1690s, who would survive today. People were dying today, who wouldn't die in the coming centuries.\n\nShould he accept the difficult present, all for a better future he wouldn't live to see?\n\nNo. That wasn't good enough. That couldn't be the answer. That didn't make his career worth it.\n\nSo, what, then? What would make it worthwhile for him to continue being a doctor?\n\nWhatever it was, it wasn't here at this shrine to the past.\n\nNathan left Ouro Preto with a bitter taste in his mouth.\n\nHe went 70 miles to the state capital, Belo Horizonte. A metropolitan giant. Having spent a week in Rio, he spent only one day seeing Belo Horizonte. He left the next day, going 227 miles southwest, with a rest stop halfway through. His destination was Cachoeira Lagoa Azul--the Blue Lagoon Waterfall.\n\nIt was raining when he set out, but it cleared after a few hours. Rolling hills became the wooded grassland of the cerrado ecozone. His stopped at a town called Formiga, where he bought coffee, canned food, a clay cooking pot, a tinplate kettle and camping gear.\n\nWith everything loaded up, he got back on the road.\n\nAt sundown, he crossed a bridge into Capit\u00f3lio. Nathan was glad to see the water. He was now at the river basin, meaning his day's journey was almost over.\n\nThe road and river wove alongside each other. There was so much water, but this was just a tributary. A tiny segment of the river network spread across three countries. This was Rio Paran\u00e1, the river as big as a sea. He could never see it all, but this slice was enough.\n\nHe followed road signs for the campsite, turning in from the highway and following a long dirt track along trees and rocky grassland. With each passing day, he was gladder he'd chosen a 4x4.\n\nAt the campsite, he found a site, unloaded, and pitched his tent. And so, as night fell on Day Seven, he sat at the mouth of a tent drinking great coffee from a tin mug and looking up at great skies with stars he didn't bother to count.\n\nCool air was around him. Solid earth was beneath him. Aside from the wind and the voices of the creatures who made this cerrado their home, all was quiet. No city ever got this quiet.\n\nThis was the shrine to peace. It didn't answer his questions, but it silenced them. That was good enough for tonight.\n\nHe hiked the waterfall trail early the next morning. At the high elevation, the view encompassed the lagoon; so intensely blue that it seemed opaque. At the trail's end, two waterfalls raced down rough-hewn rock faces into a green pool below. Swimmers and speedboats were out on the water.\n\nIt was an icy jolt when Nathan got into the water himself, but great soon after. He stood under the waterfall's foaming blast, then cleaved out to deeper water. Afterwards, he bought a beer, drying off in the sun as he drank it.\n\nHe returned to his campsite while it was still light, and alone in his tent, watched the light fade as Day Eight ended.\n\nBy dawn, he was packed up and studying his map. This was as far southwest as he'd go. On this trip, anyway.\n\nIf he was going to see all Brasil like this, it couldn't be at once. He'd have to spread it over several trips. This time, he was seeing Rio de Janeiro, Esp\u00edrito Santo, Minas Gerais and Bahia. There were over 20 other states he wouldn't see. States in the far south, the west, and the colossal north where rainforest dominated. He couldn't visit those places this time.\n\nRight now, he'd head northeast to his final destination.\n\nPencil in hand, Nathan traced possible routes on the map. Depending which roads he took, it could be up to 1,400 miles. He marked out his route on the map and started the car. There were 500 miles to cover today.\n\nHe started northeast, stepping on it whenever possible, racing past townships and gallery forests. Except for a rest stop in Patos de Minas, he didn't slacken. The hours flew with the miles. It was dark when he reached his day's target--the city of Montes Claros.\n\nBefore leaving Montes Claros the next day, he went to its crowded main market.\n\nKeeping a firm grip on his rucksack in case someone tried to relieve him of it, Nathan walked through a maze of humanity as people haggled, bought and sold. The parking was lousy, the lighting was bad and the hygiene was questionable, but the items on sale stood out most.\n\nEverything was sold at this place. Local fruit. Cheese. Meats. Spices. Alcohol. Animals. Crafts. Books. Musical instruments. Clothes. You wanted any kind of shit? You could get it here.\n\nNathan stopped at several stalls. With gestures and his improving Portuguese, he bought gifts he'd take home. Jewelry for his mother and sister. Bottles of wood-aged cane liquor for his father and a few buddies. Scarves for Dr Elgar and the two nurses he was friendly with. A set of hand-painted figurines for Emma Rossini.\n\nEmma, with her long legs and bell-like laughter. He hadn't had enough time to drop by Rossini's Inn to say goodbye before he'd left New York. Was she wondering why he hadn't come around for some time? Was she hoping he'd soon show up? Did she give a shit?\n\nMaybe she did. Or maybe she didn't.\n\nThe only purchase Nathan made for himself was some local beef jerky. Carne de Sol. The best jerky he'd tasted. He only hoped the sellers had been merciful enough not to rip a gringo off.\n\nAfter tossing these purchases in with the other load in his trunk, he got behind the wheel. He had 270 miles ahead. With any luck, he'd be at his next target before dusk.\n\nHe headed on north through a landscape of farms, villages and grazing land. A bridge was the mark that he was crossing his third State line.\n\nHe was now in Bahia.\n\nHe didn't go far after crossing the State boundary. His target was Caetit\u00e9, not far from the border. He arrived in daylight, with rain misting down. Caetit\u00e9 was only a stopping point for the night. He left early the next morning, covering 350 miles northeast until he reached Feira de Santana.\n\nIt was fine as cities went. Crowded, but fine. He didn't explore much. He found a place to eat and sleep, then checked out first thing--with just 75 miles to All Saints' Bay, he was eager to get going.\n\nHe headed east on the connecting highway. Midmorning on May 1st, under skies of patchy sunlight, Nathan reached S\u00e3o Salvador da Bahia.\n\nAnd glimpsed the coast of All Saints' Bay.\n\n*****\n\nPART THREE: THE COAST <br>\"A trip around the world; a trip into the pearl-gray morning sunlight.\" Paul Simon, The Coast.\n\nBahia, May 1982\n\n*\n\nHis first glimpse of S\u00e3o Salvador da Bahia was in daylight.\n\nNathan headed into the heart of the city--Pelourinho. It was once a slave auction spot and whipping post. Now, it was a city square with pastel colonial buildings and rococo churches.\n\nAfter checking into a hotel in an upper block, he headed out on foot.\n\nStarting at the plaza, he let his feet go where they chose, wandering Pelourinho's steep cobblestone streets where artisans hawked wares and people waited on line at street food stands. He ended up at the bay harbor where vessels were moored on calm water. He relaxed there awhile, then headed into the colonial market.\n\nFor the first time since coming to Brasil, Nathan felt conspicuous as a white guy. S\u00e3o Salvador was a distinctly Afrocentric city. Here, he was the ethnic minority. Which he found amusing in a way.\n\nBut at a point, he got so immersed in his surroundings that he forgot himself.\n\nIt was while he was at the upper city, 250 feet above ground with a panoramic view of All Saints' Bay. The vessels were coming in at dusk, and the lower city was in lights. Nathan stood there, watching the Bay. No matter what decision he made when he returned home, he was glad he'd come here. This journey was worth it.\n\nHe whiled the evening away at a restaurant-and-bar off the square, returning to his hotel just as the doors were getting locked. When he finally faceplanted into bed, the clock was striking midnight.\n\nThe next morning, he left for Porto da Barra, at the Bay entrance. It was a crowded urban beach crammed with locals, tourists, vendors, children, dogs and beggars. He rented a chair-and-shade for less than a buck. It wasn't Ipanema, but he preferred this simplicity. Facing west over the Atlantic, he watched a fiery red sunset over the water.\n\nHe set out again the next morning. It was raining as he drove out of the capital, to wind over hundreds of miles of coastline, northwards through the State.\n\nHe stayed one night in Mangue Seco; a remote riverfront village with a lighthouse, a guesthouse and a handful of old homes. It was a good place for walking. Walk he did; following the riverbank along a sand path. At the edge of the town, blue ocean stretched beyond pristine white-sand dunes and coconut trees. The wind never ceased.\n\nStanding at The Coast, Nathan felt like he'd reached the world's end. Or the world's beginning.\n\nOn May 5th, he left Mangue Seco. He headed to the closest city, Janda\u00edra; only an hour from the shore. He meant to check into a hotel in the metropolis, but a wrong turn took him through sparse residential streets, out to the city's outskirts, then into a dirt track.\n\nNathan followed the track, leaving the city behind and heading into countryside. This wrong turn was accidental, but didn't faze him. It was still daylight. There was plenty of time to turn back.\n\nSo he continued, passing signs for fazendas--Brasilian farms dedicated to ranching and food crops. About a mile after he passed a trail marked: 'FAZENDA DOS ANJOS', Nathan considered turning back.\n\nThen he saw a sign a few yards up ahead for an inn.\n\nHe slowed, weighing his options. Should he turn back, return to the city and get a reliable hotel? Or should he keep going a few miles more to this backwoods inn of dubious quality?\n\nHe smiled to himself as he decided--the backwoods inn of dubious quality, for sure. There was no fun in reliability.\n\nFollowing the signs for the inn, Nathan left the road. At the end of a wide earthen track was a single-story building with a shingled roof and a veranda wrapped all around. The sign above the door confirmed it was 'POUSADA NAZARETH'--the Nazareth Inn.\n\nNathan stopped his car, parked and got out, looking around. Sunset was here, but the air stayed warm. Leaving his things in the car, he walked into the building.\n\nHe pushed the mosquito screen open and ducked inside. It was clean, but the walls were bare and the furniture simple. A brown-skinned woman with dark curls was sitting at a table. She was pregnant. A toddler was curled up in her arms, sucking his thumb as his eyelids drooped.\n\n\"M\u00e3inha,\" the drowsy toddler murmured. \"N\u00e3o quero dormir.\"\n\nIt made the woman laugh and caress the boy's cheek. She looked up as Nathan entered. \"E a\u00ea,\" she greeted.\n\n\"Oi,\" Nathan replied, walking up to her table. He'd long become a pro at checking into hotels in Portuguese. \"Eu quero um quarto, por favor. Quanto custa a di\u00e1ria?\"\n\n20 minutes later, he was in a room. Like the entrance and corridors, it was clean. The walls and floors were bare, the sheets smelled of soap, the windows had mosquito screens, and a private door led out to the veranda.\n\nHis view from the veranda was to a citrus plantation, its orange trees in blossom. A peaceful view. If the inn food was good, he'd stick around for a few days; maybe take a long walk to the plantation tomorrow.\n\nThe food was good; seafood packed with hot peppers and cooked in red oil. They were eight around the table. Him, two other guests who were German, the inn owners, and their three small children. They ate together, all doing their best to communicate with basic Portuguese, English and German.\n\nNathan learned that the inn owners were a husband-and-wife team. This wasn't just an inn; it was a family home. The owners were En\u00e9as de Nazareth and his wife Luana.\n\nLuana was the pregnant woman who'd checked him in. En\u00e9as, her husband, had shrewd dark eyes and a booming laugh that seemed out of place coming from his lean body. Husband and wife were from this State, but had lived in S\u00e3o Paulo most of their lives. They'd returned northeast and opened this inn two years ago.\n\nLuana caught Nathan's attention once that evening. The pregnant woman stood to clear the dishes, and gripped the table edge for balance. She did it subtly; in a way she probably hoped would go unnoticed.\n\nBut Nathan noticed.\n\nHis eyes sharpened on her. Her lips were pale and she wore long sleeves despite the warmth of the evening. By his inspection, she was between 23 and 25 weeks along. She'd had 3 other children in the last 5 years; a lot of pregnancies in that space of time. She was most likely anemic.\n\n\"You okay?\" Nathan asked her.\n\nLuana smiled. \"OK,\" she replied.\n\nShe said it too quickly for it to be true. She must be the kind who downplayed things.\n\nNathan eyed her. Tomorrow, he'd ask her to let him examine her. He wasn't here to be a doctor, but it would be unethical if he suspected something wrong with a pregnant woman and he did nothing to help.\n\nShe went to bed early, but En\u00e9as stayed up with him, sipping cane alcohol until late.\n\nIn his room, Nathan lay on his back. His bed was under the window, the moon shining on him.\n\nYeah, he'd stay at this inn a few days.\n\nHe closed his eyes.\n\n**\n\nWhen he reopened his eyes, it was predawn.\n\nDespite the late night and alcohol, Nathan felt alert enough to get straight out of bed. He went outside to the veranda.\n\nThe air was cool. Leaning on the veranda rail, he looked towards the citrus plantation; coastal lands sleeping peacefully under a pearl-gray morning light.\n\nAfter a minute, he went back in his room. He got dressed. Shutting the veranda door behind him, he set out for the plantation. He crossed the inn's patch of land and scaled the wooden fence with ease. Since he was alert, he'd get in some exercise.",
        "He walked 2 miles through shrubby hills and forest patches. At his brisk pace and with long strides, he emerged from a thicket of wild trees just as the sun began to rise.\n\nNathan smelled the plantation before he saw it. The concentrated odor of orange blossoms reached him from a distance; a seductive honey-floral smell with an edge of earth and greenness. There was nothing like the smell of an orange plantation in the early morning.\n\nWooden stakes and a wire marked the plantation boundary. He stepped across it in one stride--there was no sign warning against trespassing.\n\nSpread out before him were rows of orange trees, many in blossom. This must be the 'Fazenda dos Anjos', with the sign he'd driven past on his way to the inn.\n\nNathan slowed his steps to a stroll, heading into the maze of citrus trees. How big was this plantation? 300 hectares? 400, maybe? It would be easy to get lost in it. He made sure to keep heading east. To find his way out, all he'd need to do was walk away from the rising sun.\n\nHe walked through the plantation for several minutes uninterrupted, but when he turned into a new row of trees, he saw a figure at the end of the row. A woman?\n\nNathan slowed some more. Yes, it was a woman. Her body was angled away from him, her face concealed. She was alone, standing under a tree with a basket beside her. She reached to pluck an orange blossom. As Nathan watched, she harvested the blossom and dropped it in her basket.\n\nWhen she straightened, she noticed him.\n\nInstantly, she froze. Her posture became rigid. She regarded him without speaking.\n\nNathan stared back, for different reasons. She was probably looking because he was a strange man on her land. He was looking because she was the kind of woman who'd draw the eye of any healthy, red-blooded male.\n\nShe had big dark eyes like Bambi's. Brown skin with a copper hue. Tendrils of black hair coiled around her face; escapees from the braided bun at her neck. The breeze flattened her shirt and baggy pants to the contours of her body--a slim body with round curves in all the right places. His eyes lingered on her breasts outlined against her shirt, before returning to her face.\n\nThere was a cautious expression in her eyes.\n\nHe'd better make it clear that he wasn't a threat to her safety.\n\nNathan raised his hand in hello, taking slow steps forward. \"Oi,\" he called.\n\nThe woman regarded him another moment. \"Oi,\" she echoed, her voice carrying to him. A sweet, cool voice. \"Voc\u00ea precisa de ajuda? Se voc\u00ea siga em frente, a pousada fica ao lado esquerdo.\"\n\nAlthough he had memorized how to greet people, how to check into hotels, send postcards and order food, he still didn't speak the language. He'd understood virtually nothing of what she'd just said. All he caught were the words 'you' and 'inn.'\n\nIf there was any time he'd wished he spoke the language, that time was now. So he could talk with this beautiful young thing. All he could do was tell her he didn't speak Portuguese. With sincere regret, Nathan replied: \"Eu n\u00e3o falo Portugu\u00eas.\" To clarify that he was a tourist, he said: \"Sou turista.\"\n\nShe paused, scrutinizing him again. \"I said that if you go straight ahead, the inn will be on your left. I thought you may have lost your way.\" Her accent was thick, but very pleasant to the ear.\n\nShe could speak English? He could talk to her? Relief made him smile.\n\n\"I already know the way to the inn, but thanks. I'm staying there right now. Arrived yesterday. Am I trespassing? There was no sign at the boundary.\" Nathan stopped a few feet away from her, near the tree she was still standing under.\n\nShe didn't return his smile. There was a remote air about her. \"We don't get many visitors here, so we don't need signs to keep people away.\" Her tone stayed cool. She rested a gloved hand on the tree trunk. \"My family welcomes everybody. If you don't harm the crop, you can walk around as you like.\"\n\nNathan's eyes were on her. Watching her lips move as she spoke. Watching the coils of hair billowing around her face. Watching those limpid dark eyes.\n\nGorgeous. She was fucking gorgeous.\n\n\"Your crops are in no danger from me.\" He smiled again. \"I'm Nathan.\"\n\n\"I'm Mar\u00edlia,\" she replied. Bending, she picked up her basket. It was filled with orange blossoms. She carried the basket a few steps to the next tree and set it down again. Reaching up with her gloved hands, she resumed harvesting the blossoms.\n\nFor a moment, Nathan silently drank in the sight of her. Mar\u00edlia. Her movements were smooth and practiced. As she reached to pluck a blossom, her shirt rode up, giving him a glimpse of her midriff. Smooth coppery-brown skin, a trim waist and a flat stomach.\n\nIt would feel good to wrap his hands around that tiny little waist, then move them down to cup her round ass. Enjoy its weight in his hands. Squeeze it as he brought her body closer against his...\n\nNathan pulled his eyes away from her with difficulty. To give his hands something to do, he slipped them into his jeans pockets. \"Your family owns this plantation?\" He glanced around.\n\n\"We do.\" Mar\u00edlia examined her handful of blossoms then dropped them in the basket. \"For many years now, although most of us now live in the cities.\" She picked up her basket and walked to the next tree. \"Your accent. Are you from New York state?\"\n\n\"Yeah. Not far from Syracuse.\" Nathan fell into step beside her, giving her a thoughtful appraisal. Strange that a woman who'd lived her entire life deep in this countryside could speak fluent English and accurately peg his regional accent.\n\n\"Do you enjoy living there?\" she asked.\n\n\"It's okay. I'm really liking this country, though.\"\n\nMar\u00edlia regarded him speculatively. Her attitude remained aloof, yet there was no hostility about her. \"But why have you come to this region? It's in Rio de Janeiro or S\u00e3o Paulo I expect to find tourists.\"\n\n\"I flew in through Rio and stayed a week. I've been driving through different States since then.\"\n\n\"So you've been in Brasil for a long time?\"\n\n\"Yeah. Nearly a month now.\" Nathan matched his stride to hers as they walked to another row of trees. He glanced into her basket. \"You harvest only the flowers.\"\n\n\"They're all I need. I leave everything else alone.\"\n\nNathan leaned his shoulder on the tree trunk, waiting for her as she harvested the blossoms. \"I thought the orange agriculture is your family's business.\"\n\n\"It is,\" Mar\u00edlia said simply. \"But I have no part in it. I'm not a farmer myself. My uncle is. He and his foreman run the plantation, and they do it well. I harvest the blossoms and go my way.\"\n\n\"What do you use them for?\"\n\n\"Making perfume.\"\n\nNathan's brows rose. Huh. That was new. He'd thought he'd met a person for every possible profession, but this was his first time meeting a perfumer. \"Any brand I've heard of?\"\n\n\"Probably not. I sell only locally, but it's enough because everybody here likes perfume. I ship half the bottles to S\u00e3o Salvador for sale in drugstores. I ship the rest to a boutique in Rio. The lady who owns the boutique sells locally-made items to tourists with a 500% price markup.\"\n\nSurprise made Nathan speechless for a second--and then he laughed aloud. \"Five-hundred percent? Shit. Good thing I didn't buy anything in Rio. I bought locally-made gifts, but not there.\" He ran a hand through his hair, suppressing more laughter. \"I'm the wrong person for you to have told that.\"\n\nMar\u00edlia didn't crack a smile, but some of her ice seemed to thaw. Her posture became less rigid. \"I told you because we've known each other for many years,\" she said, straight-faced. \"I know I can trust you to keep important secrets.\"\n\nNathan laughed again, slipping his hands back in his pockets. \"Seeing as we're old friends, your secret's safe with me. I'll allow you and your business partner to keep screwing over all the other tourists. I'm okay with the conspiracy as long as I'm in on it.\"\n\n\"I'm glad to hear that.\" So saying, she picked up her basket. \"That there is the last row I'll do this morning.\" She gestured to a row of trees. They walked to the row, stopped at the first tree, and she continued harvesting. \"What of you? What is your work?\"\n\n\"I'm a resident at a trauma center.\" Nathan waited to see if she, like most others, would ask for medical advice. He made another slow survey of her hourglass body. Perfect. No visibly detectible ailments anywhere.\n\nShe didn't ask for medical advice. She replied in that cool unruffled tone, \"One of my uncles is a doctor, too.\"\n\n\"He lives here in Janda\u00edra?\"\n\n\"No. His home is just outside of S\u00e3o Salvador. His wife is from your country. She's from Arkansas, originally.\" Mar\u00edlia dropped a handful of blossoms into the basket. She stooped to carry the basket again, but Nathan was faster.\n\n\"Let me,\" he said. He hunkered down and lifted it one-handed.\n\nIt was so light that a child could easily carry it, but he'd already figured that. He wasn't carrying it because he'd thought it might be too heavy for her. He was doing it as a mark of respect. He'd encroached into her family's land but she'd shown hospitality and was letting him chat her up, all without making him feel like a nuisance. The least he could do was carry her fucking basket.\n\nShe didn't stop him, or argue about carrying the basket herself. She calmly said, \"Thank you,\" and they walked side-by-side to the next tree.\n\nLeaning on the trunk, Nathan held the basket while she harvested. \"You always head out so early to do this?\"\n\n\"Not always.\" Mar\u00edlia dropped blossoms into the basket. \"I harvest from late in April until early in May. I do it before the sun rises, because it's when the scent is strong. It makes the perfume good quality.\"\n\nNathan looked to the east. The sun was struggling to rise, piercing its first rays through dawn's clouds. He looked back down at Mar\u00edlia. As his eyes lingered on her, he had a change of plans--instead of sticking around here for a few days, he'd stay at least one week.\n\nThey went on to the final tree of the row. \"You speak better English than some New Yorkers I know,\" he said. \"You can't have always lived in here.\"\n\n\"I've lived in many places,\" Mar\u00edlia replied, her full attention seemingly on plucking the blossoms. \"I lived with my parents in Alagoinhas when I was a child, then we lived a few years in London. Once we were permitted to come back to Brasil, I attended university in Rio. I lived there awhile, then I came back here to the plantation.\"\n\nNathan listened, a frown between his brows. 'Permitted' to come back to Brasil? Her parents had been forcibly exiled? They'd probably pissed off the military government somehow. But how?\n\nThere must be an interesting story there, but he didn't ask. It was too personal, and she was already aloof. Prodding into personal politics likely wouldn't end well. He merely said, \"So you learned English while living in London.\"\n\nMar\u00edlia nodded, dropping the last blossoms into the basket. \"Have you ever been to London?\"\n\n\"No. Not yet, anyway. I might sometime. Most of us in The States don't travel much. I travel more than most and this is only my third time out of the country. First time was to Canada with my parents. We're from Binghamton so we drove across the border. My second time was in med school. I went to Australia and did some backpacking over the summer. That's how I got a taste for traveling solo.\"\n\nThey were walking as he spoke. Still carrying the basket for her, he restricted himself to matching her shorter stride. They headed out of the planted trees and onto a central path.\n\nNathan looked sideways at her. The path was wide enough that there were a few inches between them as they walked abreast. Her head came up to his chin. Another corkscrew coil of hair had escaped her bun. The coil rested at her throat, on brown skin that looked soft as butter. Would it feel butter-soft to his touch?\n\n\"Have you always wanted to come to Brasil?\" She glanced at him. Their eyes held a second before she looked ahead, breaking the gaze.\n\n\"Not necessarily, although I'm glad it happened to be here. I picked a travel destination at random. The only place I wouldn't have gone is Venezuela.\"\n\n\"What's wrong with Venezuela?\"\n\n\"I once had a patient who came in with a shattered collarbone. We got to talking for a couple minutes. He told me he'd recently come home from Venezuela because his job had taken him there for 6 months. A highlight of his time there was getting mugged at gunpoint by a cop.\"\n\nMar\u00edlia's head swiveled to him, her lips slightly parted. \"Are you pulling my leg?\"\n\nNathan smiled. \"I'm not. It's true. He got mugged by a cop in broad daylight.\"\n\nMar\u00edlia shook her head, sighing softly. \"Nossa,\" she muttered. \"And I thought Rio was bad.\"\n\nA few yards ahead, their trail crossed an adjacent trail. Over her head, Nathan looked to the right. A long way up from the path was a fazenda house on a higher plain; a two-story verandaed building backed by wild trees.\n\nNathan was about to turn in that direction, but Mar\u00edlia turned the opposite way. He kept abreast of her. \"You're not heading up there?\" He jerked his thumb in the fazenda house's direction.\n\n\"No. We live separately for privacy. Our house is a quarter-mile down this path.\"\n\n'We' live separately? Nathan studied her profile. Who was 'we'? He didn't ask. They went a short way in silence, and a smaller house came into view. It was set yards back from the path; single-story, painted blue, and with bromeliad shrubs on the front lawn. A lantern was above the door.\n\n\"That your place?\"\n\n\"It is,\" she replied. \"You say you're staying at the inn. You've met Luana and En\u00e9as?\"\n\n\"Yeah. The place is good, and they both seem nice enough.\"\n\n\"They are. They're also from here, but they lived in the southeast for a while.\"\n\nNow, they were a few yards from the house and Mar\u00edlia stepped ahead of him. Her hips had a gentle swing. Despite the looseness of her pants, Nathan noticed the roll and bounce of her round ass. His eyes were glued to those motions as she crossed the lawn to open the front door.\n\nShe opened it and stepped aside. \"Go ahead,\" she invited in that cool voice.\n\nNathan ducked past the entrance and stepped inside.\n\nIt was a living room with touches of home. Paintings hung on the walls. Cushions were on the sofas, and the curtains were parted to admit the sunrise. A huge window overlooked a backyard patio, where a fringed hammock was strung between two wood pillars.\n\nMar\u00edlia's voice came from behind him. \"You can drop the basket anywhere.\"\n\nNathan stepped across to a corner and set the basket on the floor. When he turned around to face her, she was busy removing her gardening gloves. She pulled off the right glove, then the left one.\n\nAs she removed the left glove, something gleamed on her hand.\n\nThat thing was a ring. A gold ring on her fourth finger. A wedding band.\n\nShe was married.\n\nDisappointment hit Nathan, swift and strong. She was a married woman.\n\nShe hadn't mentioned it. But then, why would she? He hadn't asked, and it wasn't something one went around randomly announcing to every stranger.\n\nHis eyes lingering on her wedding band, Nathan heaved an internal sigh. Married. A damn shame.\n\nBut of course she'd already be married. He should have guessed. Women who looked like her never stayed single for long. She'd probably had to chase prospective husbands away with a stick.\n\nNathan glanced around again. Where was the lucky husband? The house was too silent for him to be indoors. He was probably somewhere out on the plantation. And he probably disliked it when other men eyed up his wife.\n\nMar\u00edlia dropped her gloves on the cane table by the door. \"You would like coffee?\"\n\nNathan hesitated. The offer clearly meant nothing more to her than a polite gesture, but considering what his own desires had been, he should turn it down. He should say no and leave. But...it was a harmless cup of coffee. It made no difference, especially since there was a husband around nearby.\n\n\"Wouldn't mind,\" he replied.\n\nIn response, she made the 'follow me' head gesture.\n\nNathan followed her through a corridor. His eyes strayed to her ass again, fixated on its bounce. A slow bounce, like an invitation to caress it. Rub it. And then to spank it, making it bounce harder.\n\nMarried. She was a married woman.\n\nWith effort, he tore his eyes from her ass. Instead, he looked above her shoulder ahead into the kitchen. The window faced the backyard. Most of it was cooking space. In a corner, there was a table with four chairs.\n\nShe gestured to the table. \"If you like, you can sit down.\"\n\n\"Thanks.\" Nathan drew a chair and sat. It had been a long trek from the inn, and it felt good to stretch his legs. Of their own volition, his eyes returned to her; tracking her as she moved around.\n\nMar\u00edlia went to a cupboard above the sink. Her t-shirt rode up as she reached to get something from the cupboard, giving him another glimpse of her midriff. She set a canister down on the countertop.\n\nShe worked without speaking. Nathan examined her figure from head to toe, contemplating her. She was a black woman, but there was some white in there. Most likely some indigenous blood in her, too.\n\nShe made coffee the old-school way, with no machines. She put sugar in a pan, poured in bottled water, and put it on the stove. She got the coffee canister, scooped out ground beans, added it to the pan and turned off the stove. Getting a coffee pot, she spread the filter and poured the pan's contents through.\n\nGolden sunshine fell over her. Birdsong came from outside.\n\nShe got a cup, filled it from the coffee pot and brought it across to him. \"Milk?\" she asked, handing him the cup.\n\n\"I drink it black.\" Nathan took the cup, the rich aroma wafting up. He brought it to his lips. It tasted even better than it smelled. One thing he'd surely miss about Brasil was the coffee. No other place did it better. Not even close. He set his cup down. \"You're not drinking?\"\n\n\"Not yet. I need to start soaking the orange blossoms first.\" She turned away. \"I'll be back in a small minute.\" She exited the kitchen through another corridor. Her footsteps faded. Somewhere in the house, a door opened and shut.\n\nAlone, Nathan drank his coffee. He looked out the window. Where was her husband? It might be awkward if the guy suddenly walked in to find a complete stranger drinking coffee in his kitchen.\n\nBut that didn't happen. The husband didn't show, and Mar\u00edlia returned a few minutes later.\n\nNathan passed the coffee pot to her. She took it without speaking. As she did, her palm brushed against his fingers. The contact lasted only a second, but it confirmed that her skin was as butter-soft as it looked.\n\nThe pot in her hand, Mar\u00edlia poured its contents into a cup. Unable to help himself, he stared at her as she performed the task. She was looking downwards, thick black eyelashes fanned over her cheekbones. The sort of face that just begged a guy to brush his fingers across it while he was kissing her.\n\nThen her wedding band caught the sunlight, glinting a reminder--she was someone's wife.\n\nOnce again, Nathan tore his gaze away. He should leave now.\n\nHe drained his cup and set it on the table. \"Thanks for the coffee. Sorry for the trouble.\"\n\nMar\u00edlia sipped her coffee. \"We don't have so many tourists here for it to be troublesome. I can make more coffee if you want another cup. I was going to cook breakfast. You can eat something too.\"\n\nNathan swallowed. He should refuse. He should leave. But as he looked at her, standing at her kitchen counter with that standoffish yet hospitable air, he heard himself reply: \"Breakfast sounds good. What brand of coffee is this, by the way?\"\n\n\"I'm not sure. It's a local arabica, but I don't know the brand. I buy it in packs from Varj\u00e3o's Market. Have you been there?\"\n\n\"No, but I might have driven past it on my way from the town. You mean the big supermarket opposite a gas station with a red banner?\"",
        "\"That's the place,\" she confirmed, and they lapsed into silence.\n\nFor the second time, Nathan watched her make coffee. This time, as the sugar water simmered, she went to the fridge. She got out eggs, cheese, guavas, shredded coconut, and a bowl of white powder. With obvious ease, she seasoned and whisked the eggs, then sliced the guavas and cheese.\n\nA few more minutes passed. Her husband didn't put in an appearance, nor was there any sign he soon would. Nathan broke the silence. \"Won't your husband join us for breakfast?\" he asked in a tone of neutral curiosity.\n\nMar\u00edlia didn't respond for a beat. \"He wouldn't be able to get here in time. He's in Campo Formoso. It's 7 hours when traffic is good.\"\n\nHer husband was hundreds of miles away.\n\nNathan wished the knowledge didn't please him, but it pleased him. He couldn't deny the satisfaction that spread through him; he was alone with her. Nobody would intrude. He could almost forget the existence of the inconvenient husband.\n\nAlmost, but not quite.\n\n\"I see,\" he said, maintaining the tone of mild curiosity. \"He's visiting someone out there?\"\n\n\"No, he's working.\" Mar\u00edlia scooped the sliced guavas into a bowl and brought it to the table. \"One of my uncles owns a mine. My husband is the manager. He oversees the garimpeiros.\"\n\nA smile tugged at Nathan's mouth. How many uncles did the woman have? It seemed like there were dozens scattered all over the place. He fought to suppress his smile and keep the amusement from his voice. \"Garimpeiros?\" he repeated, making the word a question.\n\n\"It's the word for independent artisan miners. I don't know the word for it in English.\"\n\nNathan let his smile show. \"That's because there isn't one. So these garimpeiros are freelance miners? How does that work?\"\n\nShe crossed back to the stove, pouring the beaten eggs into a pan. \"Sometimes they go to the mine owners, make a deal for a time, and work in the mine for that time. They give the good gem schists to the mine owners and keep some not-so-valuable ones for themselves.\"\n\n\"And your uncle employs your husband to keep the garimpeiros in line.\"\n\n\"More or less.\" She added coffee grounds to the hot sugar water and moved it off the stove. With barely a pause, she covered the scrambled eggs and put a dry pan on the heat. Scooping up some of the white powder, she spread a layer over the dry pan.\n\nThe kitchen smelled fantastic.\n\n\"What are they mining for?\" he asked.\n\n\"Emeralds.\" The powder had formed what looked like a crepe. Mar\u00edlia flipped it over in the pan. \"They don't work all year. The wet season won't allow it. The rains are reducing now, so the garimpeiros will soon start mining. They'll mine until October, when the rains start again.\"\n\nSo her husband's job took him away from May through September. Half the year. Such distance must take its toll on a marriage, especially with a young couple. Nathan searched her face. She was in her late twenties. She certainly couldn't have been married for long.\n\nShe put the cooked crepe on a plate, stuffed it with cheese and shredded coconut, and wrapped it up. Then she began frying the next batch of powder. As it cooked, she filtered the fresh coffee into the pot.\n\nRather than have her bring it to him, he went to her. As he took the coffee pot from her, he wrapped his hand over her smaller, softer one. The contact was brief, over in a second.\n\n\"Thanks,\" he said, refilling his coffee cup.\n\nMar\u00edlia nodded. She stuffed the cooked crepe with cheese and coconut, and began frying the next batch. \"You must work many hours, too. What kind of doctor are you?\"\n\nWhat kind of doctor are you?\n\nA simple question, yet it had that old sourness clawing up his throat. It was the question he'd been asking himself for several weeks now, and still couldn't answer. What kind of doctor was he? The kind who couldn't save suicidal patients. Jason Holst with his handfuls of bleach pills. St\u00e9phanie Chopin with the ALS tremors.\n\nThe reasons he was here right now.\n\nNathan leaned against the counter, washing the sourness away with a gulp of coffee. \"My speciality's Emergency Medicine. The hours aren't the worst. I work 12-hour shifts for 4 days, then I'm off for 3 days. The guys with the roughest schedules are the Orthopedic Trauma surgeons. They can work a 9-hour day and still be on-call by 3a.m. ER doctors are almost never on-call.\"\n\n\"I don't think I'd enjoy being a doctor. I like to choose my hours, and science is more interesting when it's not dealing with life and death.\" Mar\u00edlia was looking down as she stuffed the crepes. Her lashes rested above her cheekbones. Her breasts were outlined through her shirt; full and round. The perfect size to fill his palms. What would her nipples taste like if he licked and sucked on them?\n\nHe dragged his eyes away, ignoring a twitch in his cock. \"What was your college major?\"\n\n\"Formulation Chemistry,\" she replied, turning to fry the final scoop of powder.\n\n\"That's how you got into making perfume.\"\n\n\"It's one of the reasons.\" She flipped the crepe. \"Orange blossom oils are very expensive for making perfume with, but I can harvest it here for free and extract the oils myself.\"\n\nNathan couldn't help a smile. \"Good for you. Between the low production costs and your highway robbery markup prices, you've got to be rolling in cash.\" He leaned his elbows on the counter. \"Let's say I want to buy a bottle of cologne from you, would you sell it to me at cost, or at the rip-off price?\"\n\nMar\u00edlia gave him a brief look over her shoulder. \"Well, I guess it depends on if I'm in a good mood that day.\"\n\nNathan laughed aloud. Watching her stuff the last crepe, the smile lingered on his face. Honestly, it'd be difficult to know for sure what mood this woman was in. The remote air about her never seemed to thaw. She'd yet to smile.\n\nShe got two plates, divvied the crepes and scrambled eggs, and held the larger portion out to him.\n\nHe took the plate. \"Thanks.\"\n\nCrossing to the table together, they sat. Mar\u00edlia took the chair opposite. Reaching for the guava bowl, she scooped some onto her plate. Nathan tried a crepe. She was a fucking amazing cook. The flavors opened on his tongue on the first mouthful, warm and melting.\n\nIn the distance, there were sounds of machinery--the plantation was awakening.\n\n\"They're harvesting the oranges?\" he asked.\n\n\"Not the oranges. Not for a few months yet. It's the mandarins now. They're a bit early this year.\"\n\nHe nodded. Through the window, the yard was lush and evergreen, the hammock swaying in the breeze. In all, she seemed to be a nice woman with a nice life. A nice life that shouldn't be messed with, just because some tourist was horny.\n\nNathan sighed to himself. He stuffed the second crepe into his mouth. He'd eat fast, offer to clean up, then he'd clear out and leave her the hell alone.\n\nA natural lull fell. They shared the rest of the meal in silence. Once both their plates were empty, Nathan rose and reached for her plate. \"Here. I'll clean up.\"\n\nLike before with his offer to carry her basket, she didn't refuse or argue. She said: \"Thank you. The dish soap is inside the cabinet under the sink. I'll make a little more coffee.\"\n\nFor the next few minutes, the kitchen was filled with the sounds of pans, cupboard doors and running water. It quietened again, and she filled their coffee cups for the third time.\n\n\"When will you go back to New York?\" she asked, standing at the counter as she sipped.\n\nNathan, wrist deep in soapy water, glanced at her. \"I haven't put a date on it. I've got some leeway, but I'll head back early next month at the latest. I'm told it means I'll miss the June festival here.\"\n\n\"You will.\" She set her cup down. \"Excuse me. The blossoms; I need to do the second wash.\" She slipped out of the kitchen.\n\nWhen she returned 5 minutes later, Nathan had finished with the dishes and was draining the last of his coffee. \"I should get going,\" he told her as she walked in.\n\nShe nodded, letting him precede her out of the kitchen into the living room.\n\nNathan crossed to the front door. There, he stopped and held his hand out to her. \"Great meeting you.\" He gave a slight smile. \"And thanks for the free pass to walk around the premises.\"\n\nMar\u00edlia accepted his outstretched hand. Nathan wrapped his fingers around hers; so small in his grip. Despite knowing he shouldn't, he held onto it for a second. She reached up for the customary cheek kisses goodbye. He leaned down towards her. She put both sides of her face to his, barely touching.\n\nToo soon, she drew back. \"Tchau,\" she said.\n\n\"See you.\" Nathan released her hand, opened the door and stepped out.\n\nAs he walked across her front lawn and onto the path, he heard her front door close behind him. He slipped his hands into his pockets.\n\nFrom the path, he walked on into the plantation, across the wire fence and out to uncultivated hills. He returned to the inn the same way he'd left; through the back and heading straight in through his private veranda door.\n\nEverything in his room was as he'd left it. Stripping out of his clothes, he went in the shower. Jets of cool water over him, his mind stayed on her. On her rhythmically bouncing ass. On her full breasts straining against her shirt. On that face. Those eyes. That hair. Those lips--made to be kissed, and to wrap around his cock.\n\n\"Shit,\" he muttered. Nathan closed his eyes as a familiar tingle began and he grew hard.\n\nFor a second, he considered turning the water to ice-cold and cooling off that way, but changed his mind. He'd already shown self-restraint this morning, and he hadn't had sex in 2 months. He'd at least have this release. Cursing under his breath again, he left the water cool and let his mind run loose.\n\nVivid images passed behind his eyelids. Images of squeezing and spanking her luscious ass. Caressing and tasting her nipples. Tasting every inch of that butter-soft skin.\n\nThe images got him stiff as a plank. Nathan took his achingly erect cock in his hand, stroking as the images kept coming.\n\nSpreading her thighs to eat her...stuffing his engorged cock deep in her tight, wet heat...fucking that sweet little hole over and over until he exploded into it...their sweating bodies twisted together...her limbs wrapped around him as he filled her with his seed.\n\nThat did it for him.\n\nHis head falling forward to rest on the shower tiles, Nathan climaxed, moaning deep in his throat as pleasure shot through his spewing cock. When it was over, he cursed again. There. It was done. He'd gotten some release. Now he could return to his normal self.\n\nHe finished his shower, shaved, and dressed. Before leaving his room, he dug his pocket English-Portuguese dictionary out of his rucksack. It was already midmorning, and there was something important he intended to do today.\n\n**\n\nFollowing the corridor from his bedroom door, Nathan walked to the inn's lobby.\n\nThere, he found Luana de Nazareth, the person he was looking for. The pregnant woman was on her haunches, humming a tune as she washed the floor. The main entrance door was open, daylight streaming in through the mosquito screen. Outside, her children--two boys and a girl--were playing ball under a tree. Their yells and high-pitched laughter drifted in.\n\nLuana paused her chore when she saw Nathan. She flashed a polite smile.\n\nNathan wished her a good morning in Portuguese, then pulled out his pocket bilingual dictionary.\n\nEven with the dictionary, the language barrier slowed things down. It took several minutes for him to communicate that he was a doctor and was concerned about her. It took another 10 minutes to get her permission to take a medical history and examine her.\n\nShe agreed. Seated together at the lobby table, he asked her the necessary questions and she answered them. Two hours later, he'd taken a full medical history. The process was delayed even more by the children. Every so often, Luana had to break up a squabble, scold or soothe them, or get them a snack.\n\nHis initial opinion of her was right--she was great at taking care of others while ignoring her own wellbeing. She'd made sure that her children were fully up-to-date on all their vaccinations, which pleased him. But he was far less pleased at her own state of health.\n\nFrom her answers to his questions, Nathan was sure she had Maternal Anemia. She was always tired, often dizzy, frequently had headaches, and her legs were growing weak. He also wanted to rule out pre-eclampsia, to be on the safe side. He needed a blood and urine test before he could recommend any treatment, so he suggested driving her to a private clinic in town.\n\nShe hesitated at that suggestion, communicating that she had other chores to finish, that there was dinner to prepare, and that there would be nobody to watch the children because her husband had gone to Entre Rios on an errand.\n\nWhen Nathan suggested they bring the children along, she relented.\n\nAnd so, that afternoon, Nathan drove a pregnant woman and her three noisy children into town.\n\nAt the clinic, he ordered the tests. It was busy there, with an hour's waiting time. The children got more impatient and Luana got more irritable with them, so Nathan offered to take them outside until she was done.\n\nAs he walked outside, herding the three children along with him, Nathan asked them: \"You guys think we should go get ice-cream?\"\n\nThey stared at him without understanding. Once he got them off the street and safely in the backseat, he consulted his dictionary and rephrased his question in Portuguese. \"Voc\u00eas querem sorvete?\"\n\nThis time, he received giant grins and a chorus of agreement. \"Quero! Quero!! Quero!!!\"\n\nNathan smiled. Children were the same all around the world. \"Yeah. I figured.\"\n\nHe drove around the town until he found an ice-cream place.\n\nIt turned out that brigadeiro ice-cream was the key to earning their unwavering trust. Crossing the street as they left the ice-cream place, the two boys gripped each of Nathan's hands. The girl clambered onto him for a piggyback ride.\n\nThey returned to the clinic in time to pick up Luana. At her request, he stopped at a market so she could buy some groceries, then they left town and headed back to the inn. Luana put the children down for their nap and disappeared into the kitchen to start dinner.\n\nAn hour later, En\u00e9as got back from Entre Rios. Nathan didn't mention the day's outing to him, but Luana must have, because much later in the evening as they sat drinking after dinner, En\u00e9as quietly said: \"Thank you.\"\n\nIt came out of nowhere, surprising Nathan. He looked up, jerked from his thoughts. Thoughts of a married woman who lived in a blue house on a citrus plantation. \"What?\" he asked, his attention focusing on En\u00e9as.\n\n\"Thank you,\" En\u00e9as repeated. \"For helping my wife today...\" He trailed off as though seeking the words he couldn't articulate. His English was as limited as Nathan's Portuguese.\n\nNathan understood then. \"No problem,\" he replied. \"It's nothing.\"\n\nShortly afterwards, as they said goodnight and parted, En\u00e9as touched Nathan's shoulder like a friend.\n\nAlone, Nathan stepped out to his bedroom veranda. Leaning on the rail, with the moon lighting the pitch-black night, he looked towards the plantation. Luana's test results wouldn't be ready until Monday, so he had to remain here until then. Once he got the results, he'd write her a prescription.\n\nHe didn't mind the delay. It was a valid justification to stick around here, if he needed one.\n\nHis gaze stayed on the plantation lands. What was Mar\u00edlia doing alone in that blue house? Was she in bed now? In the shower? Maybe she was in the tub. Maybe warm water was lapping over her naked body.\n\nWas she stepping out of the tub? Were her nipples puckering in the cooler air? Puckering in appeal to be fondled.\n\nFondled and sucked until she grew wet. Would she moan if he spread her thighs apart and pressed his fingers into her slippery cunt? Would she sigh if he rubbed his wetted fingers across her little clit? Would she scream if he spread her legs even wider, lined his hips with hers and filled her with his cock in one stroke? Would she cry out for him?\n\nNathan's mouth dried out. He swallowed and cursed, running a hand over his face.\n\nHe'd go to the plantation again. He had to. Not tomorrow; that would be too soon. He'd go the day after. Just to talk. She was easy to talk with, and it felt good conversing without language barriers.\n\nHe'd walk down to her house the day after tomorrow. He'd find an excuse.\n\nHer absent husband wouldn't appreciate it, but oh well. If nothing else, En\u00e9as helped appease his conscience--there was one married guy he wasn't doing dirty.\n\n*****\n\nPART FOUR: THE UNIVERSE <br>\"The universe, she's dancing now. They got her lit up on the moon. They got stars doing cartwheels, all the nebulas on the tune.\" Gregory Alan Isakov, The Universe.\n\nJanda\u00edra, May 1982\n\n*\n\nNathan spent the next day outdoors, hiking and swimming at a cachoeirinha. He stayed out through the evening, returning to the inn by moonlight. His gas light came on, but he didn't stop to fill up at any of the stations he passed.\n\nThis was intentional. He had enough to get him to the inn and to Janda\u00edra's town tomorrow. He'd get gas then. Before he did, he'd ask a few people if there were any errands he could run for them while he was at it. One of those people was Mar\u00edlia. He'd drop by her place and casually ask if she needed anything from town. She'd probably invite him in and offer him a drink. He was betting on that. It would be his path to continuing their conversation.\n\nHe shouldn't do it. He knew that. When a guy found himself lusting hard for a married woman, the best thing was to avoid being alone with said married woman.\n\nYet he intended to do the opposite.\n\nIgnoring a stab of conscience, Nathan kept his eyes on the moonlit road ahead. It was a waste of time feeling guilty over a deliberate action. Guilt over mistakes was one thing, but knowing full well that he wouldn't resist the temptation to see her, there was no use flogging himself.\n\nWhen he reached the inn, all the lights were down. Nathan quietly let himself in through the veranda.\n\nLate the next morning, he headed to the Fazenda dos Anjos. Before the noonday sun had gotten too hot, he'd walked the 2 miles and crossed into the plantation.\n\nThe mandarin harvest was still underway, so he passed several farm workers as he walked the planted groves. He had no difficulties. Most of the workers ignored him, and a few said good day in passing. A few did pause to eye him, but returned to their work after he greeted them with casual good humor.\n\nLeaving the groves behind, Nathan struck into the path towards the blue house.\n\nHe crossed the front lawn and stopped at the door. He raised his hand to knock, but paused. He could turn around and leave. He should turn and leave. If he knocked on this door, there'd be no denying that he was knowingly pursuing a married woman.\n\nNathan hesitated one moment more. Then he put his knuckles to the door and rapped.\n\nThere was no response for so long that he began to doubt she was home. As he made to knock a second time, he heard noises from indoors. A latch was opened and the door swung inwards.\n\nShe stood in the doorway.\n\nNathan's eyes flicked down her body. Her coils were piled on her head. Her dress clung to her figure. It hit mid-thigh, exposing long and shapely legs. She was barefoot but wore safety glasses and nitrile gloves. She looked half-goddess, half-scientist.\n\nHer hand was on the door handle, a hint of surprise in her eyes. \"Nathan.\"\n\nHearing her say his name made him smile. Her accent widened the vowels and lightened the consonants, making it sound like 'Nah-tah.' He preferred it to the usual pronunciation. Or maybe that was only because she was the one saying it.",
        "\"Hi.\" Nathan leaned on the doorjamb. \"I'm heading into town so I figured I'd swing by and find out if you needed anything.\"\n\n\"I don't, but it's good of you to ask.\" Mar\u00edlia stepped aside in silent invitation for him to come inside.\n\nNathan entered, closing the door behind him in the same movement. He leaned down for the standard Brasilian greeting kisses. She reached up and they touched cheeks.\n\n\"You busy?\" he asked as he straightened.\n\nMar\u00edlia removed her safety glasses. \"I was only working in my lab.\"\n\nThat would explain the delay with her answering the door. \"You've got a lab in here?\"\n\n\"I do. My perfume lab.\" She peeled off the nitrile gloves, those long legs carrying her from the living room to the kitchen. Her bare feet were soundless on the floor. \"Would you like beer or caju juice?\"\n\nNathan was a step behind her. \"Beer, thanks.\"\n\nMar\u00edlia went to the fridge and took a bottle of beer. Turning to meet his eyes, she handed it to him.\n\nHe let his fingers brush over hers as he accepted the bottle. Twisting the cap off, he took a swallow of the ice-cold brew. \"Did I interrupt much?\"\n\n\"No. It can wait a bit, but I need to finish the filtration before it warms up too much.\"\n\n\"You mind if I watch? I'm curious. The labs I'm used to are in hospitals, not in homes.\"\n\nMar\u00edlia gave a small shrug. \"Sure. Although it's not much to see.\" Putting her safety glasses back on, she walked to the corridor leading from the kitchen.\n\nBeer in hand, Nathan went with her. This was a part of the house he hadn't seen before. The corridor had doors along both sides of its length, with a narrow stairway at the end.\n\n\"You have business in town?\" Mar\u00edlia asked as she stopped at a door halfway down the corridor.\n\n\"More errands than business,\" he replied. \"I'll get gas, find a carwash and swing by the bank.\"\n\nShe opened the door and they stepped into the lab together. The smell hit him first--a combination of so many scents that it was an indistinct nasal assault.\n\nNathan took his eyes off her long enough to look around. It was a large rectangular space. There was a sink at one side and a fridge backed up against the wall. The third wall was taken up with shelves holding dozens of labeled amber-glass bottles. A table was at the center of the room, also covered with labeled bottles, tubes, a weighing scale and a crimping machine.\n\nSo this was what a perfumer's lab looked like.\n\n\"You set the place up yourself?\" he asked.\n\nMar\u00edlia nodded, putting on a fresh pair of nitrile gloves. \"It used to be a spare bedroom, but I needed a lab so we converted it.\"\n\nShe went to the sink, where she'd set up a filtration system and extraction troughs. She lifted a large glass jar and tipped it, carefully pouring a brown liquid through the filter. The odor of orange blossom came from the bottle, cutting through the other smells. A little frown formed between her brows, all her attention on the task. Her gaze was down, thick lashes swept over her eyes.\n\nNathan took a pull on his beer. \"These are the orange flowers you picked the other morning? How did you turn them liquid?\"\n\nMar\u00edlia responded without taking her eyes off her task. \"I soaked them in hexane, did an ethanol wash and cooled it. I have to filter while it's cold to remove the remaining waxes.\"\n\nNathan watched her thoughtfully. This couldn't be just a job to her. She picked the blossoms herself, extracted the oils, formulated the perfume, bottled it and shipped it for sale. Nobody would commit to this unless they enjoyed the process.\n\nHe left her at the sink and walked to the central table, examining the bottles labeled with their contents...damascol, petitgrain, ambroxide, vetivert, rhodinol, phenylethyl acetate, helichrysum...\n\nHell of a lot of chemicals. Some bottles also had dates on them, meaning that she was a good recordkeeper.\n\nHe opened a bottle labelled 'pemou wood oil' and took an exploratory sniff. It had a sweet dry-woody smell, but was sharp on the nostrils. He capped it and returned it where he'd found it.\n\nAt one end of the table, there were notebooks, scent test strips and pipetting equipment. This was a workspace without frills. The only decorative object was a snowglobe.\n\nNathan picked it up. Its base was painted ceramic, dotted with emerald beads.\n\nBy that time, Mar\u00edlia had finished her task at the sink. She was walking over to join him at the table.\n\n\"Cute,\" he commented, turning the snowglobe over in his hand.\n\n\"It's a gift from my husband.\"\n\nAh yes, her husband. The lucky bastard. A thorny sensation went through Nathan. Annoyance? Guilt? He wasn't sure, but whatever it was, it made him put the snowglobe down. \"Hence the emeralds.\"\n\nShe stood beside him, placing her hands on the table. \"You like snowglobes?\"\n\n\"I used to be indifferent, but I haven't liked them much since '77.\" He swallowed the last mouthful of his beer. \"That winter left me shuddering at anything resembling a blizzard, even when it's trapped in glass.\"\n\n\"Oh?\" Mar\u00edlia raised her eyes to his face. \"What happened?\"\n\nNathan leaned his elbow on the table, holding her gaze. \"It was my final year of med school, so we were on clinical rotations in State teaching hospitals. That January, I got posted to a hospital in Buffalo. It was the worst-hit place when the blizzard came. Complete whiteout. We had houses buried in packed snow, 40 feet deep in some spots. We lost some people and a lot more were injured. The fire departments were out on rescues. The hospitals were insane. Most of us worked beyond our shifts to help out. It made sense since it was better not to drive, anyway.\" He paused, smiling wryly as he finished: \"It was the first time I spent 3 straight days at a hospital, and I hadn't even gotten my M.D. yet.\"\n\nHer eyes remained locked with his. \"We never had snow so bad while we lived in London, but we still found it very cold. From what you describe, I now think we were complaining too much.\"\n\n\"Not necessarily. It's relative. For anyone who's always been used to this climate, 40 degrees can feel like a deep freeze. Before London, did you ever spend time anywhere with four seasons?\"\n\nShe shook her head no. \"It snows in Santa Catarina and sometimes in Rio Grande do Sul, but we never wanted to live so far south. By the time we came back from London, we'd had enough of cold so we stayed in Rio.\"\n\nNathan leaned his other elbow on the table, using the opportunity to step closer to her. Closer than normal convention would approve of. His bare arm was almost touching hers. He could almost feel the warmth and softness of her skin. He looked at her profile, his eyes devouring her face. \"You didn't enjoy your London stint?\"\n\nIf she noticed his advance, she gave no outward indication of it. She didn't shift away from him. Except for the birdsong from outside, it was quiet around them. The shutters were closed, keeping the lab cool and dim.\n\n\"We didn't, but it wasn't all because of the cold. It's that we weren't planning to move, so we were unprepared. We were away from the rest of our family and we didn't know when we could return home.\" She gave a little shrug. \"Maybe if I visit London tomorrow and I wear a thick shirt, I'll enjoy it.\"\n\nNathan hesitated. It should be safe to probe a little deeper now. He could get more personal. After all, this was their second 'date.' Suppressing self-mocking amusement at this inner joke, he asked: \"The government kicked you guys out?\"\n\n\"They did.\" Mar\u00edlia sighed the words. \"We were lucky even for that. Some people who were accused of the same things as my father, were treated worse.\"\n\n\"What was he accused of?\"\n\n\"Silly things. Things that weren't true. He wasn't political himself, but his friends were. One of them, Tio Raimundo, owned a local newspaper. He printed articles criticizing the regime and some army generals. The trouble started when a far right-wing radio host talked on-air about the newspaper. He ranted that Raimundo and his friends were anti-Brasil, hated the military and wanted to ruin the country. A week later, the military police came. They arrested Tio Raimundo and his wife, along with my father and another friend of theirs.\"\n\nNathan's brows raised. \"Well, damn. How old were you?\"\n\n\"14.\"\n\n\"And then?\"\n\n\"My father spent weeks in jail being questioned. After they released him, they got travel papers ready for us, took us to Rio and put us on a plane to Gatwick. We lived 4 years in London, then they told us we were allowed to come back.\"\n\nNathan paused, instantly reminded of the question he'd been asked when he'd first arrived in Rio and gotten into D\u00eanis's taxi.\n\n\"Are you from the quiet land of Pierre Trudeau, or from the interfering land of Lyndon Johnson and Ronald Reagan?\"\n\nThe cabbie had asked him that--meaning that however jestingly the tone, he must feel some resentment towards 'The Interfering Land.' Despite that, the resentment hadn't been extended to Nathan personally. Nobody he'd come across in all his travels had treated him with personal dislike, despite his being from the U.S.\n\nAnd even now, standing beside a woman whose life had been so badly impacted by the military regime that the U.S. had helped establish here, he felt no personal hatred coming his way.\n\nIf she'd wanted to dislike him purely for being from the U.S., she'd have had some excuse for it. Back in 1964, there'd been a coup. The leftist Brasilian president Jo\u00e3o Goulart had been overthrown by the right-wing military--with help from the United States.\n\nSince then, the dictatorship regime had been responsible for the 'disappearance' of those who publicly spoke against them. Not to mention their censorship of news outlets and the media. Or their harsh treatment of protesters.\n\nAfter a beat Nathan said, \"It must have been rough on you, especially having to learn a new language to get by.\"\n\nMar\u00edlia gave another little shrug. \"We got by.\"\n\n\"When you say 'we', you mean your parents and siblings.\"\n\n\"Only my parents. I have many cousins but I don't have siblings. Do you?\"\n\n\"Yeah. I've got a little sister but I don't see her often. She lives in Queens. She decided to stay in the City after she was done with college. She's getting her PsyD and there are better job opportunities for her there. So she claims.\"\n\n\"You don't believe that it's her real reason?\"\n\n\"I believe it's one of her reasons, but I think it's mostly because she's got like-minded friends there. Our folks wanted her to come back Upstate since it's safer, but she refused. They've heard horror stories about what the subway's like.\"\n\n\"Dangerous?\" Mar\u00edlia asked.\n\n\"Yeah. Crime's bad everywhere and worse on the subways. They've even got vigilantes on patrol.\"\n\n\"That sort of crime is what made me glad to move away from Rio. I wouldn't have stayed there for the sake of friends.\"\n\n\"It's a little more than that with her. Her mindset's more suited to the City. She wouldn't be happy living near our parents. She hasn't even forgiven them for voting Reagan yet. They've always voted Democrat, so she was disappointed when she found out what they'd done. Words were said, voices were raised, fists were banged, and tears were shed.\" Unable to help himself, a sarcastic smile tugged at Nathan's mouth. \"You might have been forced into exile through military intimidation, but at least you didn't witness a family quarrel over Friday night dinner. Consider yourself lucky.\"\n\nMar\u00edlia gave him an equally sarcastic look. \"I'm grateful I was spared such suffering.\"\n\nNathan laughed. When his laughter faded, there was a moment's lull. \"So, where are your folks now?\"\n\n\"My father has died.\" She said it with no change in her demeanor, but there was a softer edge to her voice. \"My mother remarried. Now she and her husband live in Osasco. You have plans to visit S\u00e3o Paulo?\"\n\n\"No. I always intended for Bahia to be my last port of call before I go back Stateside.\" He paused, simply looking at her. Her eyes were so dark; two warm pools for a man to drown in. \"I'm glad I saved here for last. I'm finding it more interesting than anywhere else.\"\n\nMar\u00edlia made no response to that. Their gazes stayed locked for a moment...then another moment...\n\nThe silence thickened.\n\nShe looked away, tucking a coil of hair behind her ear. \"If you have time, you can also visit Barra do Itariri,\" she said coolly. \"It's not too far from here, and the view is good from the hill.\"\n\n\"I've seen it. I stopped there while driving up from S\u00e3o Salvador. There was a close call while I was getting off the highway into the access road. A car was heading out without slowing. At the same time, the truck driver behind me was trying to pass on the right.\"\n\n\"I'm not surprised. That's how it is here. People rush on the roads, and many times they're rushing for no reason.\" She rolled her eyes. Her lips curled downwards. \"Only in Brasil.\"\n\n\"At least it's not Venezuela.\" Nathan tried to suppress a smile as he added, \"or Florida.\"\n\n\"I've heard a few stories of wild things that happened in Florida. Some people there seem strange.\"\n\nNathan let out one laugh. \"That's one way to put it.\"\n\nThere was silence for a beat. \"It's nearly 1o'clock,\" she said. \"You would like to stay for lunch?\"\n\nNathan resisted accepting, purely because he had his alibi to uphold. \"I wish I could, but I've still got to walk back to the inn before I head into town. If I wait until after lunchtime, I won't catch the bank before it closes.\" He straightened up from the table. \"Maybe we'll have lunch on our next date.\" He said it in a half-jesting tone, watching her face to gauge her reaction.\n\nThere was no overt reaction. She only tucked her hair behind her ear again. \"Maybe.\"\n\nPerhaps she'd agreed out of politeness or to keep up the joke, but gratification shot through him nevertheless. His eyes flicked over her body's curves, outlined through her dress.\n\nHe slipped one hand into his pocket. \"I'll get going.\" He leaned down for the parting cheek kisses.\n\nShe leaned up at the same time. As they touched cheeks, Nathan wrapped his hand around her elbow. His fingers overlapped her arm, her skin silky to the touch.\n\nMar\u00edlia drew back after they'd touched cheeks.\n\nHe also pulled back, but only halfway. His head remained tilted towards hers. \"Got a lot of work left to do in here?\"\n\n\"Not too much. Just some distillation and bottling. That's all for today.\"\n\nHe nodded. Again, their eyes held. Again, the moment extended with neither speaking. He cupped her elbow, his thumb skimming her inner arm. His eyes went to her lips, lingering there. She didn't speak or make any move.\n\nHe dipped his head lower, their faces getting close. No protest from her yet.\n\nThe pull was overwhelming. No man alive could resist this. Nathan closed the remaining gap and pressed his mouth to hers.\n\nHer lips were soft. He brushed his own over them. Her lashes swept lower, her eyes closing.\n\nHis own eyes closed. His lips brushed over hers again, deepening the kiss. His hand moved up, leaving her elbow to caress her arm, then her shoulder, then her throat. His hand stopped at her chin.\n\nTaking that little chin between his fingers, Nathan pressed down with his thumb, parting her lips. He brought his head even closer. Parting his own lips, he slipped them between hers and tasted her. She was an intoxicating blend of warmth and coolness. Sweet, with a trace of fresh mint.\n\nHe needed to taste more. Nathan moved his other hand. He reached for her, wrapping his arm around her tiny waist to pull her into his body. It took barely any effort. She felt so right against him. She fit. Her soft curves were plastered to the length of him. Her body was warm.\n\nSatisfaction shot through him like a drug. He needed even more.\n\nHe slipped his tongue into her mouth, twining it with hers, brushing his lips over hers. She was delicious. Fucking delicious.\n\nLight was behind his eyelids. His head was doing cartwheels. His arm tightened around her waist.\n\nShe remained passive, not encouraging him but not struggling either. Yet her heartbeat was quickening--he felt it against his own.\n\nWith her soft breasts crushed to his chest and her body molded to his, that familiar pleasurable tightness made his cock stiffen. He grew hard, the first build-up of pressure that would need easing.\n\nHe didn't release her. She'd probably slap him senseless once he did, so he'd enjoy this for now. He'd take time and savor this. He drew her tongue into his mouth, holding her waist to keep her in his arms. His other hand kept her chin in place.\n\nAt long last, Mar\u00edlia moved. She raised her hands. Sliding them between their bodies, she put her palms flat against his chest. It might have been a gesture to push him away, but there was no force behind it. Her palms merely rested there.\n\nBut then her fingers curled, gathering his shirt into her fists. Her head tipped backwards, granting him more access. Her lips moved, brushing against his. Moving with his.\n\nShe was kissing him back.\n\nThe realization was as heady as the taste of her. Nathan held her tighter yet. That full sensation in his cock intensified as he grew harder, his erection pushing through his jeans to dig into her stomach.\n\nMar\u00edlia's hands tightened, holding onto him with fistfuls of his shirt. Her lips moved in concert with his. She slipped her tongue deeper into his mouth, making a soft noise in her throat; muffled by his lips.\n\nThat was when it ended. Although her body remained pressed up against his, Mar\u00edlia turned her head to the side, breaking their kiss. Her lips disconnected from his, her heart racing against his chest.\n\nNathan opened his eyes. His own breathing a little faster, he eased back to examine her face. She was looking down, those thick lashes hiding her eyes. There was a deep flush in her cheeks. Her lips were full, red and shiny.\n\nWithout speaking, she pushed out of his arms. Her grip on his shirt loosened. She took two steps back, putting space between them.\n\nNathan broke the silence. He'd say he was sorry, but that would be a lie. Instead he said, \"I'll go. I'm keeping you from your work.\"\n\nShe didn't look at him. Her lips were clamped together.\n\n\"I...\" He waited a beat. \"If I come back later tonight--just to talk--would that be okay?\"\n\nHer expression was difficult to read. She retained her air of detachment, but there seemed a hint of vulnerability about her now.\n\n\"Mar\u00edlia.\" Nathan took a step forward, but restrained his urge to touch her. \"Can I swing by later this evening just to talk? Will you open the door if I knock?\"\n\nShe wouldn't meet his gaze. She still didn't respond for some time, then she very quietly said: \"I will.\"\n\nAnother wave of satisfaction flooded him. He slipped both hands in his pockets. \"Good. Then I'll see you soon.\"\n\nNathan turned and walked out, shutting the lab door behind him. Pausing a moment in the corridor, he breathed deep, willing his erection to subside. When it had gone down some, he continued along the corridor and out of the house.\n\nThe air was warmer. The sun was higher, beating down on him as he returned to the inn with her taste lingering on his tongue.\n\n**\n\nIn town that afternoon, Nathan ran all his errands. The memory of her taste stayed with him throughout, and of the way her body fit so perfectly against his.\n\nHe drove back to the inn and had dinner with the Nazareth family as usual. But unlike other evenings, he didn't sit late drinking with En\u00e9as--shortly after 9p.m., he headed out without explaining where he was going. He took a few minutes to change into a fresh shirt, use mouthwash and mess with his hair.\n\nInstead of going on foot, he got into his car. He'd already trekked 4 miles to and from the plantation today. If he walked there now, it would be 4 more miles in pitch darkness.\n\nThe car ride took a few minutes; he went a short way on the main road, turned where he saw the sign for the fazenda and drove along the track until he reached the edge of the path to her house."
    ],
    "authorname": "Popcorn_and_Stories",
    "tags": [
        "doctor",
        "medical drama",
        "romance",
        "coast",
        "affair",
        "travelogue",
        "brasil",
        "oral sex",
        "redemption",
        "citrus plantation"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/his-north-star"
}